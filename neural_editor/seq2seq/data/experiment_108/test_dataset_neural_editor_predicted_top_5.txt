====NEW EXAMPLE====
ppp b / core / jni / android_media_audiosystem . cpp <nl> <unk> ( jnienv * env , jobject thiz , jboolean <unk> <nl> return ( jint ) check_audiosystem_command ( audiosystem : : <unk> ( <unk> ) ) ; <nl> } <nl> static <unk> <nl> <unk> ( jnienv * env , jobject thiz ) <nl> { <nl> bool <unk> ; <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> <unk> ( jnienv * env , jobject thiz , jboolean <unk> <nl> return ( jint ) check_audiosystem_command ( audiosystem : : <unk> ( <unk> ) ) ; <nl> } <nl> static <unk> <nl> <unk> ( jnienv * env , jobject thiz ) <nl> { <nl> bool <unk> ; ; <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> <unk> ( jnienv * env , jobject thiz , jboolean <unk> <nl> return ( jint ) check_audiosystem_command ( audiosystem : : <unk> ( <unk> ) ) ; <nl> } <nl> static <unk> <nl> <unk> ( jnienv * env , jobject thiz ) <nl> { <nl> bool <unk> ; <nl> ; <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> <unk> ( jnienv * env , jobject thiz , jboolean <unk> <nl> return ( jint ) check_audiosystem_command ( audiosystem : : <unk> ( <unk> ) ) ; <nl> } <nl> static <unk> <nl> <unk> ( jnienv * env , jobject thiz ) <nl> { <nl> bool <unk> ; <nl> <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> <unk> ( jnienv * env , jobject thiz , jboolean <unk> <nl> return ( jint ) check_audiosystem_command ( audiosystem : : <unk> ( <unk> ) ) ; <nl> } <nl> static <unk> <nl> <unk> ( jnienv * env , jobject thiz ) <nl> { <nl>
====NEW EXAMPLE====
ppp b / modules / cpr / src / main / java / org / atmosphere / interceptor / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl> } <nl> } , timeout , timeout , timeunit . nanoseconds ) ; <nl> } <nl> @ override <nl>
ppp b / modules / cpr / src / main / java / org / atmosphere / interceptor / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl> } <nl> } , timeout , timeout , timeunit . nanoseconds ) ; <nl> } <nl> @ override override <nl>
ppp b / modules / cpr / src / main / java / org / atmosphere / interceptor / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl> } <nl> } , timeout , timeout , timeunit . nanoseconds ) ; <nl> } <nl> @ override <nl> <nl>
ppp b / modules / cpr / src / main / java / org / atmosphere / interceptor / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl> } <nl> } , timeout , timeout , timeunit . nanoseconds ) ; <nl> } <nl>
ppp b / modules / cpr / src / main / java / org / atmosphere / interceptor / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl> } <nl> } , timeout , timeout , timeunit . nanoseconds ) ; <nl> } <nl> @ override
====NEW EXAMPLE====
ppp b / fml / <unk> . cfg <nl> > <unk> <nl> > <unk> <nl> > <unk> <nl> > <nl>
ppp b / fml / <unk> . cfg <nl> > <unk> <nl> > <unk> <nl>
ppp b / fml / <unk> . cfg <nl> > <unk> <nl> > <unk> <nl> > <unk> <nl>
ppp b / fml / <unk> . cfg <nl> > <unk> <nl> > <unk> <nl> > <unk> <nl> > <nl> <nl>
ppp b / fml / <unk> . cfg <nl> > <unk> <nl> > <nl>
====NEW EXAMPLE====
ppp b / src / clj / backtype / storm / testing . clj <nl> ~ @ body <nl> ( catch throwable t # <nl>
ppp b / src / clj / backtype / storm / testing . clj <nl> ~ @ body <nl>
ppp b / src / clj / backtype / storm / testing . clj <nl> ~ @ body <nl> ( catch throwable t # <nl> ( log - error t # " error in cluster " ) <nl> ) { <nl> " ) <nl> ) <nl> ( finally <nl> ( kill - local - storm - cluster ~ cluster - sym ) ) ) <nl>
ppp b / src / clj / backtype / storm / testing . clj <nl> ~ @ body <nl> ( catch throwable t # <nl> ( log - error t # " error in cluster " ) <nl> ) { <nl> " ) <nl> ) <nl> ( finally <nl> ( kill - local - storm - cluster ~ cluster - sym ) ) <nl>
ppp b / src / clj / backtype / storm / testing . clj <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / res / layout / text_file_preview_list_item . xml <nl> android : layout_width = " match_parent " <nl> android : layout_height = " wrap_content " <nl> android : textcolor = " @ android : color / black " <nl> \ no newline at end of file <nl> <nl> : : layout_gravity = " center " / > <nl> \ no newline at end of file <nl>
ppp b / res / layout / text_file_preview_list_item . xml <nl> android : layout_width = " match_parent " <nl> android : layout_height = " wrap_content " <nl> android : textcolor = " @ android : color / black " <nl> \ no newline at end of file <nl> <nl> : : layout_gravity = " center " / > <nl>
ppp b / res / layout / text_file_preview_list_item . xml <nl> android : layout_width = " match_parent " <nl> android : layout_height = " wrap_content " <nl> android : textcolor = " @ android : color / black " <nl> \ no newline at end of file <nl> <nl> : : layout_gravity = " center " / > <nl> \ no at end of file <nl>
ppp b / res / layout / text_file_preview_list_item . xml <nl> android : layout_width = " match_parent " <nl>
ppp b / res / layout / text_file_preview_list_item . xml <nl> android : layout_width = " match_parent " <nl> android : layout_height = " wrap_content " <nl> android : textcolor = " @ android : color / black " <nl> \ no newline at end of file <nl> <nl> : : layout_gravity = " center " / > <nl> \ no newline end of file <nl>
====NEW EXAMPLE====
ppp b / example / build . gradle <nl> android { <nl> signingconfigs { <nl> release { <nl> <unk> file ( <unk> ) <nl> <unk> <unk> <nl> storepassword <unk> <nl> <unk> <unk> <nl> } <nl> } <nl>
ppp b / example / build . gradle <nl> android { <nl> signingconfigs { <nl> release { <nl> <unk> file ( <unk> ) <nl> <unk> <unk> <nl> storepassword <unk> <nl> <unk> <unk> <nl> } <nl>
ppp b / example / build . gradle <nl> android { <nl> signingconfigs { <nl> release { <nl> <unk> file ( <unk> ) <nl> <unk> <unk> <nl> storepassword <unk> <nl> <unk> <unk> <nl> } <nl> <nl>
ppp b / example / build . gradle <nl> android { <nl> signingconfigs { <nl> release { <nl> <unk> file ( <unk> ) <nl> <unk> <unk> <nl> storepassword <unk> <nl> <unk> <unk> <nl> } <nl> } <nl> <nl>
ppp b / example / build . gradle <nl> android { <nl> signingconfigs { <nl> release { <nl> <unk> file ( <unk> ) <nl> <unk> <unk> <nl> storepassword <unk> <nl> <unk> <unk> <nl> } <nl> }
====NEW EXAMPLE====
ppp b / plugins / pom . xml <nl> < module > cloud - gce < / module > <nl> < module > cloud - azure < / module > <nl> < module > cloud - aws < / module > <nl> < / > kvdocument - < / module > <nl> < / modules > <nl> < / project > <nl>
ppp b / plugins / pom . xml <nl> < module > cloud - gce < / module > <nl> < module > cloud - azure < / module > <nl> < module > cloud - aws < / module > <nl> < / > kvdocument - < / module > <nl> < / modules > <nl> < / project > > <nl>
ppp b / plugins / pom . xml <nl>
ppp b / plugins / pom . xml <nl> < module > cloud - gce < / module > <nl> < module > cloud - azure < / module > <nl> < module > cloud - aws < / module > <nl> < / > kvdocument - < / module > <nl> < / modules > <nl> < / project > <nl> <nl>
ppp b / plugins / pom . xml <nl> < module > cloud - gce < / module > <nl> < module > cloud - azure < / module > <nl> < module > cloud - aws < / module > <nl> < / > kvdocument - < / module > <nl> < / modules > <nl> < / project >
====NEW EXAMPLE====
ppp b / portal - service / src / com / liferay / portal / kernel / configuration / configuration . java <nl> public interface configuration { <nl> public void <unk> ( properties properties ) ; <nl> public boolean contains ( string key ) ; <nl> boolean contains ( string key ) ; <nl> public string get ( string key ) ; <nl>
ppp b / portal - service / src / com / liferay / portal / kernel / configuration / configuration . java <nl> public interface configuration { <nl> public void <unk> ( properties properties ) ; <nl> public boolean contains ( string key ) ; <nl> boolean contains ( string key ) ; <nl> public string get ( string key ) ) ; <nl>
ppp b / portal - service / src / com / liferay / portal / kernel / configuration / configuration . java <nl> public interface configuration { <nl> public void <unk> ( properties properties ) ; <nl> public boolean contains ( string key ) ; <nl> boolean contains ( string key ) ; <nl> public string get ( string key ; <nl>
ppp b / portal - service / src / com / liferay / portal / kernel / configuration / configuration . java <nl> public interface configuration { <nl> public void <unk> ( properties properties ) ; <nl> public boolean contains ( string key ) ; <nl> boolean contains ( string key ) ; <nl> public string get ( string key ) ; <nl> <nl>
ppp b / portal - service / src / com / liferay / portal / kernel / configuration / configuration . java <nl> public interface configuration { <nl> public void <unk> ( properties properties ) ; <nl> public boolean contains ( string key ) ; <nl> boolean contains ( string key ) ; <nl> public string get ( string key ) ;
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 18e3ff4589b0bb4aa1c44422fe863a87465e3295 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 18e3ff4589b0bb4aa1c44422fe863a87465e3295 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - layout . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 18e3ff4589b0bb4aa1c44422fe863a87465e3295 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - layout . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool : <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool
====NEW EXAMPLE====
ppp b / readme . md <nl> please refer to the [ wiki ] [ 13 ] pages to learn more about how to use this library <nl> contribute <nl>
ppp b / readme . md <nl> please refer to the [ wiki ] [ 13 ] pages to learn more about how to use this library <nl>
ppp b / readme . md <nl> please refer to the [ wiki ] [ 13 ] pages to learn more about how to use this library <nl> <nl>
ppp b / readme . md <nl> please refer to the [ wiki ] [ 13 ] pages to learn more about how to use this <nl>
ppp b / readme . md <nl>
====NEW EXAMPLE====
ppp b / core / src / processing / opengl / <unk> . java <nl> public class <unk> extends pgl { <nl> public <unk> ( pgraphicsopengl pg ) { <nl> super ( pg ) ; <nl> = = new glu ( ) ; <nl> } <nl>
ppp b / core / src / processing / opengl / <unk> . java <nl> public class <unk> extends pgl { <nl> public <unk> ( pgraphicsopengl pg ) { <nl> super ( pg ) ; <nl>
ppp b / core / src / processing / opengl / <unk> . java <nl> public class <unk> extends pgl { <nl> public <unk> ( pgraphicsopengl pg ) { <nl> super ( pg ; <nl>
ppp b / core / src / processing / opengl / <unk> . java <nl> public class <unk> extends pgl { <nl> public <unk> ( pgraphicsopengl pg ) { <nl>
ppp b / core / src / processing / opengl / <unk> . java <nl> public class <unk> extends pgl { <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - security git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / tests / com / puppycrawl / tools / checkstyle / checkertest . java <nl> public class checkertest <nl> { <nl> public brieflogger ( outputstream out ) <nl> { <nl> super ( out , false ) ; <nl> } <nl> public void auditstarted ( auditevent evt ) { } <nl> public void filefinished ( auditevent evt ) { <nl>
ppp b / src / tests / com / puppycrawl / tools / checkstyle / checkertest . java <nl> public class checkertest <nl> { <nl> public brieflogger ( outputstream out ) <nl> { <nl> super ( out , false ) ; <nl> } <nl> public void auditstarted ( auditevent evt ) { } <nl> public void filefinished ( auditevent evt ) { } <nl>
ppp b / src / tests / com / puppycrawl / tools / checkstyle / checkertest . java <nl> public class checkertest <nl> { <nl> public brieflogger ( outputstream out ) <nl> { <nl> super ( out , false ) ; <nl> } <nl> public void auditstarted ( auditevent evt ) { } <nl> public void filefinished ( auditevent evt ) { <nl> } <nl>
ppp b / src / tests / com / puppycrawl / tools / checkstyle / checkertest . java <nl> public class checkertest <nl> { <nl> public brieflogger ( outputstream out ) <nl> { <nl> super ( out , false ) ; <nl> } <nl> public void auditstarted ( auditevent evt ) { } <nl> public void filefinished ( auditevent evt ) { { <nl>
ppp b / src / tests / com / puppycrawl / tools / checkstyle / checkertest . java <nl> public class checkertest <nl> { <nl> public brieflogger ( outputstream out ) <nl> { <nl> super ( out , false ) ; <nl> } <nl> public void auditstarted ( auditevent evt ) { } <nl> public void filefinished ( auditevent evt ) } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - flags . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / src / cpp / core / system
ppp b / src / cpp / core / system / posixchildprocess . cpp <nl> # include < fcntl . h > <nl> \ no newline at end of file <nl> > <nl> include include signal . h > > <nl> # include < boost / bind . hpp > <nl>
ppp b / src / cpp / core / system / posixchildprocess . cpp <nl> # include < fcntl . h > <nl> \ no newline at end of file <nl> > <nl> include include signal . h > > <nl> # include < boost / bind . hpp > > <nl>
ppp b / src / cpp / core / system / posixchildprocess . cpp <nl> # include < fcntl . h > <nl> \ no newline at end of file <nl> > <nl> include include signal . h > > <nl> # include < boost / bind . hpp >
ppp b / src / cpp / core / system / posixchildprocess . cpp <nl> # include < fcntl . h > <nl> \ no newline at end of file <nl> > <nl> include include signal . h > > <nl> # include < boost / bind . hpp > <nl> <nl>
====NEW EXAMPLE====
ppp b / py / testdir_single_jvm / <unk> . py <nl> import unittest , random , sys , time <nl>
ppp b / py / testdir_single_jvm / <unk> . py <nl>
ppp b / py / testdir_single_jvm / <unk> . py <nl> import
ppp b / py / testdir_single_jvm / <unk> . py <nl> import unittest
ppp
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9915b7f52ef8994b5ce9e1a4628e891924cfd204 <nl> mode = push <nl> parent = 9a94e8b838a6b441ab8c1766953d5bef829223bc <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9915b7f52ef8994b5ce9e1a4628e891924cfd204 <nl> mode = push <nl> parent = 9a94e8b838a6b441ab8c1766953d5bef829223bc <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9915b7f52ef8994b5ce9e1a4628e891924cfd204 <nl> mode = push <nl> parent = 9a94e8b838a6b441ab8c1766953d5bef829223bc <nl> remote = git @ github . com : liferay / com - liferay - marketplace - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9915b7f52ef8994b5ce9e1a4628e891924cfd204 <nl> mode = push <nl> parent = 9a94e8b838a6b441ab8c1766953d5bef829223bc <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / changelog . txt <nl> 0 . 81 <nl>
ppp b / changelog . txt <nl>

ppp b / changelog . txt <nl> 0 . 81 <nl> * fixed bug causing realms to the support for rate limiting a potential race condition ) <nl> * storm - 572 ( https : port localdrpc . portalversion <nl> * storm - cached cached even though they failed to open correctly <nl> * fixed bug when using realm . copytorealm ( ) with primary key could crash if default value was already used in the realm . <nl>
ppp b / changelog . txt <nl> 0 . 81 <nl> * fixed bug causing realms to the support for rate limiting a potential race condition ) <nl> * storm - 572 ( https : port localdrpc . portalversion <nl> * storm - cached cached even though they failed to open correctly <nl> * fixed bug when using realm . copytorealm ( ) with primary key could crash if default value was already used in the realm . . <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # #
ppp

====NEW EXAMPLE====
ppp b / actor - apps / build - tools / ios - build . sh <nl> rm - fr build <nl> <unk> \ <nl>
ppp b / actor - apps / build - tools / ios - build . sh <nl> rm - fr build <nl> <unk> <unk> <nl>
ppp b / actor - apps / build - tools / ios - build . sh <nl> rm - fr build <nl>
ppp b / actor - apps / build - tools / ios - build . sh <nl> rm - fr build <nl> <unk> \ <nl> <nl>
ppp b / actor - apps / build - tools / ios - build . sh <nl> rm - fr build <nl> <unk> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> docs / serve / <nl> journal / <nl> logs / <nl> script : <nl>
ppp b / . gitignore <nl> docs / serve / <nl> journal / <nl> logs / <nl> script : <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl>
ppp b / . gitignore <nl> docs / serve / <nl>
ppp b / . gitignore <nl> docs / serve /
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / services / core / java / com / android / server / pm / <unk> . java <nl> class <unk> extends <unk> { <nl> return 1 ; <nl> } <nl> <unk> = false ; <nl> return 0 ; <nl> <unk> ( ) ; <nl> return 0 ; <nl> } finally finally { <nl> if ( <unk> ) { <nl>
ppp b / services / core / java / com / android / server / pm / <unk> . java <nl> class <unk> extends <unk> { <nl> return 1 ; <nl> } <nl> <unk> = false ; <nl> return 0 ; <nl> <unk> ( ) ; <nl> return 0 ; <nl> } finally finally { <nl> if ( <unk> ) ) <nl>
ppp b / services / core / java / com / android / server / pm / <unk> . java <nl> class <unk> extends <unk> { <nl> return 1 ; <nl> } <nl> <unk> = false ; <nl> return 0 ; <nl> <unk> ( ) ; <nl> return 0 ; <nl> } finally finally { <nl> if ( <unk> ) <nl>
ppp b / services / core / java / com / android / server / pm / <unk> . java <nl> class <unk> extends <unk> { <nl> return 1 ; <nl> } <nl> <unk> = false ; <nl> return 0 ; <nl> <unk> ( ) ; <nl> return 0 ; <nl> } finally finally { <nl> if ( <unk> ) { { <nl>
ppp b / services / core / java / com / android / server / pm / <unk> . java <nl> class <unk> extends <unk> { <nl> return 1 ; <nl> } <nl> <unk> = false ; <nl> return 0 ; <nl> <unk> ( ) ; <nl> return 0 ; <nl> } finally finally { <nl> if ( <unk> ) {
====NEW EXAMPLE====
ppp b / grails - resources / src / grails / grails - app / conf / datasource . groovy <nl> environments { <nl> datasource { <nl> <unk> = " update " <nl>
ppp b / grails - resources / src / grails / grails - app / conf / datasource . groovy <nl> environments { <nl> datasource { <nl> <unk> = " update <nl>
ppp b / grails - resources / src / grails / grails - app / conf / datasource . groovy <nl> environments { <nl> datasource { <nl>
ppp b / grails - resources / src / grails / grails - app / conf / datasource . groovy <nl> environments { <nl>
ppp b / grails - resources / src / grails / grails - app / conf / datasource . groovy <nl>
====NEW EXAMPLE====
ppp b / version . txt <nl>
ppp b
ppp

ppp b / version . txt <nl> jetty - 7 . 0 . 0 . m4 1 june 2009 <nl> # if ( https : restassured ( https : / github . com / github . cloudfront ( https : <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15043 <nl> versionname = ' 18 . 0 . 0 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15043 <nl> versionname = ' 18 . 0 . 0 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15043 <nl> versionname = ' 18 . 0 . 0 ' <nl> } <nl> ext . libraries = [ [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15043 <nl> versionname = ' 18 . 0 . 0 ' <nl> } <nl> ext . libraries = = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15043 <nl> versionname = ' 18 . 0 . 0 ' <nl> } <nl> ext . libraries = [
====NEW EXAMPLE====
ppp b / wordpress / src / main / java / org / wordpress / android / ui / themes / <unk> . java <nl> public class <unk> extends appcompatactivity implements <unk> <nl> @ override <nl> protected void <unk> ( ) { <nl> super . <unk> ( ) ; <nl> <unk> <unk> = false ; <nl> } <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / themes / <unk> . java <nl> public class <unk> extends appcompatactivity implements <unk> <nl> @ override <nl> protected void <unk> ( ) { <nl> super . <unk> ( ) ; <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / themes / <unk> . java <nl> public class <unk> extends appcompatactivity implements <unk> <nl> @ override <nl> protected void <unk> ( ) { <nl> super . <unk> ( ) ; <nl> <unk> <unk> = false ; <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / themes / <unk> . java <nl> public class <unk> extends appcompatactivity implements <unk> <nl> @ override <nl> protected void <unk> ( ) { <nl> super . <unk> ( ) ; <nl> <unk> <unk> = ; <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / themes / <unk> . java <nl> public class <unk> extends appcompatactivity implements <unk> <nl> @ override <nl> protected void <unk> ( ) { <nl> super . <unk> ( ) ; <nl> <unk> <unk> = false ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version = 1 . 1 . 34 <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 34 <nl> <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 0 <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 2 <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . netflix . curator < / groupid > <nl> < artifactid > curator - x - zkclient - bridge < / artifactid > <nl> < version > 3 . 0 . 2 - snapshot < / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid > <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . curator < / groupid > <nl> < artifactid > curator - x - zkclient - bridge < / artifactid > <nl> < version > 3 . 0 . 2 - snapshot < / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / > <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . curator < / groupid > <nl> < artifactid > curator - x - zkclient - bridge < / artifactid > <nl> < version > 3 . 0 . 2 - snapshot < / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid groupid <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . curator < / groupid > <nl> < artifactid > curator - x - zkclient - bridge < / artifactid > <nl> < version > 3 . 0 . 2 - snapshot < / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid > > <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . curator < / groupid > <nl> < artifactid > curator - x - zkclient - bridge < / artifactid > <nl> < version > 3 . 0 . 2 - snapshot < / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid groupid
====NEW EXAMPLE====
ppp b / tools / test / test - setup . sh <nl> # ! / bin / sh <nl> # shift stderr to stdout . <nl> exec 2 > & 1 <nl>
ppp b / tools / test / test - setup . sh <nl> # ! / bin / sh <nl> # shift stderr to stdout . <nl> exec 2 > & <nl>
ppp b / tools / test / test - setup . sh <nl> # ! / bin / sh <nl> # shift stderr to stdout . <nl> exec 2 > & & <nl>
ppp b / tools / test / test - setup . sh <nl> # ! / bin / sh <nl> # shift stderr to stdout . <nl> exec 2 > & 1 <nl> <nl>
ppp b / tools / test / test - setup . sh <nl> # ! / bin / sh <nl> # shift stderr to stdout . <nl> exec 2 > & 1 1 <nl>
====NEW EXAMPLE====
ppp b / bigbluebutton - client / resources / config . xml . template <nl> deskshare = " rtmp : / / host / deskshare " <nl>
ppp b / bigbluebutton - client / resources / config . xml . template <nl> deskshare = " rtmp : / / host / deskshare <nl>
ppp b / bigbluebutton - client / resources / config . xml . template <nl>

ppp b / bigbluebutton - client / resources / config . xml . template <nl> deskshare = " rtmp : / / host / deskshare " <nl> <unk> = " 1 . 6 . <unk> " <nl> <unk> = " 10 , 0 , 0 " <nl> " , 0 , 0 " <nl> / > <nl>
====NEW EXAMPLE====
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 3 < / version > <nl> < / parent > <nl> < properties > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 3 < / version > <nl> < / parent > <nl> < properties > > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 3 < / version > <nl> < / parent > <nl> < properties <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 3 < / version > <nl> < / parent > <nl> < properties > <nl> <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 3 < / version > <nl> < / parent > <nl> < properties >
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 023d89a5205355cd3092eb8a8fd656cfed6e95b4 <nl> mode = push <nl> parent = 6360293f1c7b1783082907132fb89734f86acaef <nl> remote = git @ github . com : liferay / com - liferay - product - navigation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / sdk / gradle - templates / bnd . bnd <nl> bundle - name : liferay gradle templates <nl> bundle - symbolicname : com . liferay . gradle . templates <nl> \ no newline at end of file <nl> bundle version : : 1 . 0 . <nl> \ no newline at end of file <nl>
ppp b / modules / sdk / gradle - templates / bnd . bnd <nl> bundle - name : liferay gradle templates <nl> bundle - symbolicname : com . liferay . gradle . templates <nl> \ no newline at end of file <nl> bundle version : : 1 . 0 . 0 <nl> \ no newline at end of file <nl>
ppp b / modules / sdk / gradle - templates / bnd . bnd <nl> bundle - name : liferay gradle templates <nl> bundle - symbolicname : com . liferay . gradle . templates <nl> \ no newline at end of file <nl> bundle version : : 1 . 0 . 51 <nl> \ no newline at end of file <nl>
ppp b / modules / sdk / gradle - templates / bnd . bnd <nl> bundle - name : liferay gradle templates <nl> bundle - symbolicname : com . liferay . gradle . templates <nl> \ no newline at end of file <nl> bundle version : : 1 . 0 . git <nl> \ no newline at end of file <nl>
ppp b / modules / sdk / gradle - templates / bnd . bnd <nl> bundle - name : liferay gradle templates <nl>
====NEW EXAMPLE====
ppp b / src / rajawali / baseobject3d . java <nl> public class baseobject3d implements <unk> , comparable < baseobject3d > , <unk> <nl> public boolean <unk> ( ) { <nl> return <unk> ; <nl> } <nl> public final long serialversionuid = null ) ; <nl> ; <nl> } <nl> public void <unk> ( boolean <unk> ) { <nl> this . <unk> = <unk> ; <nl>
ppp b / src / rajawali / baseobject3d . java <nl>
ppp b / src / rajawali / baseobject3d . java <nl> public class baseobject3d implements <unk> , comparable < baseobject3d > , <unk> <nl> public boolean <unk> ( ) { <nl> return <unk> ; <nl> } <nl> public final long serialversionuid = null ) ; <nl> ; <nl> } <nl> public void <unk> ( boolean <unk> ) { <nl> this . <unk> = <unk> <unk> ; <nl>
ppp b / src / rajawali / baseobject3d . java <nl> public class baseobject3d implements <unk> , comparable < baseobject3d > , <unk> <nl> public boolean <unk> ( ) { <nl> return <unk> ; <nl> } <nl> public final long serialversionuid = null ) ; <nl> ; <nl> } <nl> public void <unk> ( boolean <unk> ) { <nl> this . <unk> = <unk> ; ; <nl>

====NEW EXAMPLE====
ppp b / grails - test / src / main / groovy / grails / test / <unk> . groovy <nl> class <unk> { <nl> } <nl> } <nl> mock . metaclass = <unk> . metaclass / <nl> mock . metaclass / <unk> . metaclass / <nl> return mock <nl> } <nl>
ppp b / grails - test / src / main / groovy / grails / test / <unk> . groovy <nl> class <unk> { <nl> } <nl> } <nl> mock . metaclass = <unk> . metaclass / <nl> mock . metaclass / <unk> . metaclass / <nl> return mock <nl> <nl>
ppp b / grails - test / src / main / groovy / grails / test / <unk> . groovy <nl> class <unk> { <nl> } <nl> } <nl> mock . metaclass = <unk> . metaclass / <nl> mock . metaclass / <unk> . metaclass / <nl> return mock <nl> } <nl> <nl>
ppp b / grails - test / src / main / groovy / grails / test / <unk> . groovy <nl> class <unk> { <nl> } <nl> } <nl> mock . metaclass = <unk> . metaclass / <nl> mock . metaclass / <unk> . metaclass / <nl> return mock <nl>
ppp b / grails - test / src / main / groovy / grails / test / <unk> . groovy <nl> class <unk> { <nl> } <nl> } <nl> mock . metaclass = <unk> . metaclass / <nl> mock . metaclass / <unk> . metaclass / <nl> return mock <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : android <nl> script : " . / gradlew assembledebug " <nl> android : <nl> components : <nl>
ppp b / . travis . yml <nl> language : android <nl> script : " . / gradlew assembledebug " <nl> android : <nl> components : : <nl>
ppp b / . travis . yml <nl> language : android <nl> script : " . / gradlew assembledebug " <nl> android : <nl> components : : <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> language : android <nl> script : " . / gradlew assembledebug " <nl> android : <nl> components components <nl>
ppp b / . travis . yml <nl> language : android <nl> script : " . / gradlew assembledebug " <nl> android : <nl> components : <nl> <nl>
====NEW EXAMPLE====
ppp b / ultimateandroidgradle / demoofui / build . gradle <nl> apply
ppp b
ppp b /
ppp
ppp b / ultimateandroidgradle / demoofui / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> - transform uppercase ( https : / / / / / / / / / / / / / / / { <nl> } <nl> { <nl>
====NEW EXAMPLE====
ppp b / src / main / org / codehaus / groovy / ast / <unk> . java <nl> public class <unk> extends annotatednode implements opcodes , variable { <nl> public void <unk> ( classnode type ) { <nl> this . type = type ; <nl> this . type = type ; <nl> <unk> | = type = = classhelper . <unk> ; <nl> } <nl>
ppp b / src / main / org / codehaus / groovy / ast / <unk> . java <nl>
ppp b / src / main / org / codehaus / groovy / ast / <unk> . java <nl> public class <unk> extends annotatednode implements opcodes , variable { <nl> public void <unk> ( classnode type ) { <nl> this . type = type ; <nl> this . type = type ; <nl> <unk> | = type = = classhelper . <unk> ; <nl>
ppp b / src / main / org / codehaus / groovy / ast / <unk> . java <nl> public class <unk> extends annotatednode implements opcodes , variable { <nl> public void <unk> ( classnode type ) { <nl> this . type = type ; <nl> this . type = type ; <nl> <unk> | = type = = classhelper . <unk> ; <nl> } <nl> <nl>
ppp b / src / main / org / codehaus / groovy / ast / <unk> . java <nl> public class <unk> extends annotatednode implements opcodes , variable { <nl> public void <unk> ( classnode type ) { <nl> this . type = type ; <nl> this . type = type ; <nl> <unk> | = type = = classhelper . <unk> <unk> ; <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0

ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 902 for rate limiting some race conditions <nl> * storm - storm - 1213 : sigar binaries from source tree <nl> * storm - 885 : heartbeat server ( pacemaker ) ) <nl> * storm - 1221 : create a common interface for all trident spout . <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 902 for rate limiting some race conditions <nl> * storm - storm - 1213 : sigar binaries from source tree <nl> * storm - 885 : heartbeat server ( pacemaker ) ) <nl> * storm - 1221 : create a common interface for all trident spout . . <nl>
====NEW EXAMPLE====
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . 0 <nl> long_desc = ` cat readme . yuicompressor ` <nl> short_desc = = = yui compressor <nl> perm = 0644 <nl> owner = root <nl>
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . 0 <nl> long_desc = ` cat readme . yuicompressor ` <nl> short_desc = = = yui compressor <nl> perm = 0644 <nl> owner = root root <nl>
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl>
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . 0 <nl> long_desc = ` cat readme . yuicompressor ` <nl> short_desc = = = yui compressor <nl> perm = 0644 <nl>
====NEW EXAMPLE====
ppp b / python / src / com / jetbrains / python / debugger / pylinebreakpointtype
ppp b / python / src / com / jetbrains / python / debugger / pylinebreakpointtype . java <nl> public class pylinebreakpointtype extends xlinebreakpointtype < xbreakpointpropert <nl> return null ; <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return double getmaxrenderdistancesquared ( ) ; <nl> } <nl> } <nl>
ppp b / python / src / com / jetbrains / python / debugger / pylinebreakpointtype . java <nl> public class pylinebreakpointtype extends xlinebreakpointtype < xbreakpointpropert <nl> return null ; <nl> } <nl> } <nl> public string getbreakpointsdialoghelptopic ( ) { <nl> public double getmaxrenderdistancesquared ( ) { <nl> } <nl> } <nl> } <nl>
ppp b / python / src / com / jetbrains / python / debugger / pylinebreakpointtype . java <nl> public class pylinebreakpointtype extends xlinebreakpointtype < xbreakpointpropert <nl> return null ; <nl> } <nl> } <nl> public string getbreakpointsdialoghelptopic ( ) { <nl> public double getmaxrenderdistancesquared ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / python / src / com / jetbrains / python / debugger / pylinebreakpointtype . java <nl> public class pylinebreakpointtype extends xlinebreakpointtype < xbreakpointpropert <nl> return null ; <nl> } <nl> } <nl> public string getbreakpointsdialoghelptopic ( ) { <nl> public string tostring ( ) { <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 72e7492d03f0d08ed016b85180aacc5cd881f61b <nl> mode = push <nl> parent = 8f6d6d52d683633b6c32c08569addb9252eedfe3 <nl> remote = git @ github . com : liferay / com - liferay - microblogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 72e7492d03f0d08ed016b85180aacc5cd881f61b <nl> mode = push <nl> parent = 8f6d6d52d683633b6c32c08569addb9252eedfe3 <nl> remote = git @ github . com : liferay / com - liferay - microblogs . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching restrictions for system applications per application <nl> * updated <unk> translation <nl> * updated slovenian translation <nl> * updated lithuanian translation <nl> * updated polish translation <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching restrictions for system applications per application <nl> * updated <unk> translation <nl> * updated slovenian translation <nl> * updated lithuanian translation <nl> * updated polish <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching restrictions for system applications per application <nl> * updated <unk> translation <nl> * updated slovenian translation <nl> * updated lithuanian translation <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching restrictions for system applications per application <nl> * updated <unk> translation <nl> * updated slovenian translation <nl> * updated lithuanian translation <nl> * updated polish translation <nl> <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching restrictions for system applications per application <nl> * updated <unk> translation <nl> * updated slovenian translation <nl> * updated lithuanian translation <nl> * updated polish translation
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e10250b191f5e3e6b3372e084e1b276c9d4a86e6 <nl> mode = push <nl> parent = a56ce872fdd65bd406620ce579db06761db66872 <nl> remote = git @ github . com : liferay / com - liferay - item - selector . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e10250b191f5e3e6b3372e084e1b276c9d4a86e6 <nl> mode = push <nl> parent = a56ce872fdd65bd406620ce579db06761db66872 <nl> remote = git @ github . com : liferay / com - liferay - item - selector git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> / build / <nl> / netbeans / <nl> / jme3 - core / build / <nl>
ppp b / . gitignore <nl> / build / <nl> / netbeans / <nl>
ppp b / . gitignore <nl> / build / <nl>
ppp b / . gitignore <nl> / build / <nl> / netbeans /
ppp b / . gitignore <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> script : <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> script : <nl>
ppp b / . travis . yml <nl> script : <nl> script : <nl> script : <nl>
ppp b / . travis . yml <nl> script : <nl> script : <nl>
ppp b / . travis . yml <nl> script : <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / client / makefile <nl> clean : <nl> setup : check <nl> @ echo prerequisites ok . installing dependencies . . . <nl>
ppp b / client / makefile <nl> clean : <nl> setup : check <nl> @ echo prerequisites ok . installing dependencies . . <nl>
ppp b / client / makefile <nl> clean : <nl> setup : check <nl> @ echo prerequisites ok . installing dependencies . . 1 <nl>
ppp b / client / makefile <nl> clean : <nl> setup : check <nl> @ echo prerequisites ok . installing dependencies . . 2 <nl>
ppp b / client / makefile <nl> clean : <nl> setup : check <nl> @ echo prerequisites ok . installing dependencies . . 0 <nl>
====NEW EXAMPLE====
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> <nl> <unk> / s <nl> <unk> <nl> <unk> / s <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> <nl> <unk> / s <nl> <unk> <nl> <unk> / s s <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> <nl> <unk> / s <nl> <unk> <nl> <unk> / s <nl> brexit <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> <nl> <unk> / s <nl> <unk> <nl> <unk> / s <nl> servicing servicing nn <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> <nl> <unk> / s <nl> <unk> <nl> <unk> / s <nl> remonstration <nl>
====NEW EXAMPLE====
ppp b / libs / surfaceflinger / displayhardware / displayhardware . cpp <nl> void <unk> ( const char * token ) <nl> displayhardware : : displayhardware ( <nl> const sp < surfaceflinger > & <unk> , <nl> uint32_t <unk> ) <nl> : <unk> ( ) { <nl> <unk> ( <unk> , <unk> ) <nl> { <nl> init ( <unk> ) ; <nl> } <nl>
ppp b / libs / surfaceflinger / displayhardware / displayhardware . cpp <nl> void <unk> ( const char * token ) <nl> displayhardware : : displayhardware ( <nl>
ppp b / libs / surfaceflinger / displayhardware / displayhardware . cpp <nl> void <unk> ( const char * token ) <nl>
ppp b / libs / surfaceflinger / displayhardware / displayhardware . cpp <nl> void <unk> ( const char * token ) <nl> displayhardware : : displayhardware ( <nl> const sp < surfaceflinger > & <unk> , <nl> uint32_t <unk> ) <nl> : <unk> ( ) { <nl> <unk> ( <unk> , <unk> ) <nl> { <nl> init ( <unk> ) ; <nl>
ppp b / libs / surfaceflinger / displayhardware / displayhardware . cpp <nl> void <unk> ( const char * token ) <nl> displayhardware : : displayhardware ( <nl> const sp < surfaceflinger > & <unk> , <nl> uint32_t <unk> ) <nl> : <unk> ( ) { <nl> <unk> ( <unk> , <unk> ) <nl> { <nl> init ( <unk> ) ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / license . txt <nl> the mit license <nl>
ppp b / license . txt <nl>
ppp b / license . txt <nl> the mit license
ppp b / license . txt <nl> the mit <nl>
ppp b / license . txt <nl> the mit
====NEW EXAMPLE====
ppp b / circle . yml <nl> test : <nl> cd android / playground & & . / gradlew assembledebug <nl>
ppp b / circle . yml <nl> test : <nl> cd android / playground & & . / gradlew assembledebug <nl> <nl>
ppp b / circle . yml <nl> test : <nl> cd
ppp b / circle . yml <nl> test : <nl> cd android
ppp b / circle . yml <nl> test : <nl> cd android /
====NEW EXAMPLE====
ppp b / core / jni / <unk> . cpp <nl> <unk> : <nl> if ( producer = = null ) <nl> goto <unk> ; <nl> window = new android : : surface ( producer producer ) ; <nl> if ( window = = null ) <nl> goto <unk> ; <nl>
ppp b / core / jni / <unk> . cpp <nl> <unk> : <nl> if ( producer = = null ) <nl> goto <unk> ; <nl> window = new android : : surface ( producer producer ) ; <nl> if ( window = = null ) <nl> goto <unk> ; ; <nl>
ppp b / core / jni / <unk> . cpp <nl> <unk> : <nl> if ( producer = = null ) <nl> goto <unk> ; <nl> window = new android : : surface ( producer producer ) ; <nl> if ( window = = null ) <nl> goto <unk> ; <nl> <nl>
ppp b / core / jni / <unk> . cpp <nl> <unk> : <nl> if ( producer = = null ) <nl> goto <unk> ; <nl> window = new android : : surface ( producer producer ) ; <nl> if ( window = = null ) <nl> goto <unk> ; <nl> ; <nl>
ppp b / core / jni / <unk> . cpp <nl> <unk> : <nl> if ( producer = = null ) <nl> goto <unk> ; <nl> window = new android : : surface ( producer producer ) ; <nl> if ( window = = null ) <nl> goto <unk> ;
====NEW EXAMPLE====
ppp b / rajawali / build . gradle <nl> version = version_name <nl> status = ' debug ' <nl> android { <nl> compilesdkversion 21 <nl>
ppp b / rajawali / build . gradle <nl> version = version_name <nl> status = ' debug ' <nl> android { <nl> compilesdkversion 21 <nl> buildtoolsversion " 21 . 1 . 2 " <nl> defaultconfig { <nl> minsdkversion 15 <nl> targetsdkversion 21 <nl> versioncode 87 <nl> versionname " 1 . 0 " <nl> } <nl>
ppp b / rajawali / build . gradle <nl> version = version_name <nl> status = ' debug ' <nl> android { <nl>
ppp b / rajawali / build . gradle <nl> version = version_name <nl> status = ' debug ' <nl>
ppp b / rajawali / build . gradle <nl> version = version_name <nl> status = ' debug ' <nl> android { <nl> compilesdkversion 21 <nl> buildtoolsversion " 21 . 1 . 2 " <nl> defaultconfig { <nl> minsdkversion 15 <nl> targetsdkversion 21 <nl> versioncode 87 <nl> versionname " 1 . 0 " <nl>
====NEW EXAMPLE====
ppp b / src / org / wordpress / android / wordpress . java <nl> public class wordpress extends application { <nl> } <nl> <unk> . initialize ( ) ; <nl> <unk> . <unk> ( <unk> . <unk> ) ; <nl> super . oncreate ( ) ; <nl>
ppp b / src / org / wordpress / android / wordpress . java <nl> public class wordpress extends application { <nl> } <nl> <unk> . initialize ( ) ; <nl> <unk> . <unk> ( <unk> . <unk> ) ; <nl> super . oncreate ( ) ) ; <nl>
ppp b / src / org / wordpress / android / wordpress . java <nl> public class wordpress extends application { <nl> } <nl> <unk> . initialize ( ) ; <nl> <unk> . <unk> ( <unk> . <unk> ) ; <nl> super . oncreate ( ) ; <nl> <nl>
ppp b / src / org / wordpress / android / wordpress . java <nl> public class wordpress extends application { <nl> } <nl> <unk> . initialize ( ) ; <nl> <unk> . <unk> ( <unk> . <unk> ) ; <nl> super . oncreate ( ; <nl>
ppp b / src / org / wordpress / android / wordpress . java <nl> public class wordpress extends application { <nl> } <nl> <unk> . initialize ( ) ; <nl> <unk> . <unk> ( <unk> . <unk> ) ; <nl> super . oncreate ( ) ;
====NEW EXAMPLE====
ppp b / <unk> / pom . xml <nl> < parent > <nl> < groupid > com . iluwatar < / groupid > <nl> < artifactid > java - design - patterns < / artifactid > <nl> < version > 1 . 7 . 0 < / version > <nl> < / parent > <nl> < artifactid > <unk> < / artifactid > <nl> < dependencies > <nl>
ppp b / <unk> / pom . xml <nl> < parent > <nl> < groupid > com . iluwatar < / groupid > <nl> < artifactid > java - design - patterns < / artifactid > <nl> < version > 1 . 7 . 0 < / version > <nl> < / parent > <nl> < artifactid > <unk> < / artifactid > <nl> < dependencies > > <nl>
ppp b / <unk> / pom . xml <nl> < parent > <nl> < groupid > com . iluwatar < / groupid > <nl> < artifactid > java - design - patterns < / artifactid > <nl> < version > 1 . 7 . 0 < / version > <nl> < / parent > <nl> < artifactid > <unk> < / artifactid > <nl> < dependencies > <nl> <nl>
ppp b / <unk> / pom . xml <nl> < parent > <nl> < groupid > com . iluwatar < / groupid > <nl> < artifactid > java - design - patterns < / artifactid > <nl> < version > 1 . 7 . 0 < / version > <nl> < / parent > <nl> < artifactid > <unk> < / artifactid > <nl> < dependencies > <nl> > <nl>
ppp b / <unk> / pom . xml <nl> < parent > <nl> < groupid > com . iluwatar < / groupid > <nl> < artifactid > java - design - patterns < / artifactid > <nl> < version > 1 . 7 . 0 < / version > <nl> < / parent > <nl> < artifactid > <unk> < / artifactid > <nl> < > <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < properties > <nl>
ppp b / pom . xml <nl>
ppp

ppp b / pom . xml <nl> < properties > <nl> < tests . jvms > 1 < / tests . jvms > <nl> < es . logger . level > info < / es . logger . level > <nl> > <nl> . . . . . < / / es . logger . level > <nl> < / properties > <nl> < dependencies > <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> / test - output / <nl> src / tz - data / <nl> * <unk> * <nl>
ppp b / . gitignore <nl> / test - output / <nl> src / tz - data / <nl> * <unk> *
ppp b / . gitignore <nl> / test - output / <nl> src / tz - data / <nl> * <unk> <nl>
ppp b / . gitignore <nl> / test - output / <nl> src / tz - data / <nl> * <unk>
ppp b / . gitignore <nl>
====NEW EXAMPLE====
ppp b / changes . md <nl> bug fixes : <nl> * vim - 246 fixed ` { count } = = ` formatting <nl>
ppp b / changes . md <nl> bug fixes : <nl>
ppp b / changes . md <nl>

ppp b / changes . md <nl> bug fixes : <nl> * vim - 246 fixed ` { count } = = ` formatting <nl> * vim - 287 fixed insert new line before and after <unk> <nl> * vim - 139 focus on current search and use modal <unk> for ` : / / / / ` ` <nl> 44 ( stephen erickson / ` s / / / gc <nl>
====NEW EXAMPLE====
ppp b / src / test / groovy / transform / stc / closuresstctest . groovy <nl> class closuresstctest extends statictypecheckingtestcase { <nl> <unk> { int x , int y - > x + y } <nl> } <nl> ' <nl> ' ' ' , ' cannot find matching method ' <nl> / / groovy - <unk> <unk> <nl> <unk> <unk> ( ) { <nl>
ppp b / src / test / groovy / transform / stc / closuresstctest . groovy <nl> class closuresstctest extends statictypecheckingtestcase { <nl> <unk> { int x , int y - > x + y } <nl> } <nl> ' <nl> ' ' ' , ' cannot find matching method ' <nl> / / groovy - <unk> <unk> <nl> <unk> <unk> ( ) <nl>
ppp b / src / test / groovy / transform / stc / closuresstctest . groovy <nl> class closuresstctest extends statictypecheckingtestcase { <nl> <unk> { int x , int y - > x + y } <nl> } <nl> ' <nl> ' ' ' , ' cannot find matching method ' <nl> / / groovy - <unk> <unk> <nl> <unk> <unk> ( ) ) <nl>
ppp b / src / test / groovy / transform / stc / closuresstctest . groovy <nl> class closuresstctest extends statictypecheckingtestcase { <nl> <unk> { int x , int y - > x + y } <nl> } <nl> ' <nl> ' ' ' , ' cannot find matching method ' <nl> / / groovy - <unk> <unk> <nl> <unk> <unk> ( { <nl>
ppp b / src / test / groovy / transform / stc / closuresstctest . groovy <nl> class closuresstctest extends statictypecheckingtestcase { <nl> <unk> { int x , int y - > x + y } <nl> } <nl> ' <nl> ' ' ' , ' cannot find matching method ' <nl> / / groovy - <unk> <unk> <nl> <unk> <unk> ( ) ; <nl>
====NEW EXAMPLE====
ppp b / community / browser / app / scripts / services / editor . coffee <nl> angular . module ( ' <unk> . services ' ) <nl>
ppp b / community / browser / app / scripts / services / editor . coffee <nl> angular . module ( ' <unk> . services ' ) <nl> else <nl>
ppp b / community / browser / app / scripts / services / editor . coffee <nl> angular . module ( ' <unk> . services ' ) <nl> else <nl> @ <unk> ( input ) unless ( settings . filemode and @ document ? . id ) <nl> @ suppresswarnings ( ) <nl> @ <unk> ( no ) <nl> <unk> : - > <nl> @ <unk> ( @ content ) <nl>
ppp b / community / browser / app / scripts / services / editor . coffee <nl> angular . module ( ' <unk> . services ' ) <nl> <nl>
ppp b / community / browser / app / scripts / services / editor . coffee <nl> angular . module ( ' <unk> . services ' ) <nl> else <nl> @ <unk> ( input ) unless ( settings . filemode and @ document ? . id ) <nl> @ suppresswarnings ( ) <nl> @ <unk> ( no ) <nl> <unk> : - > <nl> @ <unk> ( @ content content <nl>
====NEW EXAMPLE====
ppp b / source / org / jivesoftware / smack / <unk> . java <nl> public class <unk> { <nl> * <nl> * @ return an account manager for this connection . <nl> * / <nl> public synchronized <unk> <unk> ( ) { <nl> if ( = = null ) { <nl> <unk> = new <unk> ( this ) ; <nl> } <nl>
ppp b / source / org / jivesoftware / smack / <unk> . java <nl> public class <unk> { <nl> * <nl>
ppp b / source / org / jivesoftware / smack / <unk> . java <nl> public class <unk> { <nl> * <nl> * @ return an account manager for this connection . <nl> * / <nl> public synchronized <unk> <unk> ( ) { <nl> if ( = = null ) { <nl> <unk> = new <unk> ( this ) ; <nl> } <nl> <nl>
ppp b / source / org / jivesoftware / smack / <unk> . java <nl> public class <unk> { <nl> * <nl> * @ return an account manager for this connection . <nl> * / <nl> public synchronized <unk> <unk> ( ) { <nl> if ( = = null ) { <nl> <unk> = new <unk> ( this ) ; <nl> } <nl> } <nl>
ppp b / source / org / jivesoftware / smack / <unk> . java <nl> public class <unk> { <nl> * <nl> * @ return an account manager for this connection . <nl> * / <nl> public synchronized <unk> <unk> ( ) { <nl> if ( = = null ) { <nl> <unk> = new <unk> ( this ) ; <nl> } } <nl>
====NEW EXAMPLE====
ppp b / native / makefile <nl> else <nl> <unk> = - <unk> , - <unk> <nl> endif <nl> endif <nl> endif <nl> = . dylib <nl> <unk> = . <nl> ifneq ( $ ( <unk> ) ) <nl>
ppp b / native / makefile <nl> else <nl> <unk> = - <unk> , - <unk> <nl> endif <nl> endif <nl> endif <nl> = . dylib <nl> <unk> = . <nl> ifneq ( $ ( <unk> ) , <nl>
ppp b / native / makefile <nl> else <nl> <unk> = - <unk> , - <unk> <nl> endif <nl> endif <nl> endif <nl> = . dylib <nl> <unk> = . <nl> ifneq ( $ ( <unk> ) ) ) <nl>
ppp b / native / makefile <nl> else <nl> <unk> = - <unk> , - <unk> <nl> endif <nl> endif <nl>
ppp b / native / makefile <nl> else <nl>
====NEW EXAMPLE====
ppp b / tpc / src / serializers / benchmarkrunner . java <nl> public class benchmarkrunner <nl> gsonmanual . register ( groups ) ; <nl>
ppp b / tpc / src / serializers / benchmarkrunner . java <nl> public class benchmarkrunner <nl>
ppp b / tpc / src / serializers / benchmarkrunner . java <nl>
ppp b / tpc / src / serializers / benchmarkrunner . java <nl> public class benchmarkrunner <nl> gsonmanual . register ( groups ) <nl>

====NEW EXAMPLE====
ppp b / app / build . gradle <nl> android { <nl> minsdkversion 9 <nl> / / noinspection oldtargetapi <nl>
ppp b / app / build . gradle <nl> android { <nl>
ppp b / app / build . gradle <nl> android { <nl> minsdkversion 9 <nl>
ppp b / app / build . gradle <nl>

====NEW EXAMPLE====
ppp b / readme . md <nl> inputstream . close ( ) ; <nl> # # # # integrity # # # # <nl> ccc java <nl> outputstream outputstream = crypto . <unk> ( filestream , entity ) ; <nl> outputstream . write ( <unk> ) ; <nl> outputstream . close ( ) ; <nl> inputstream inputstream = crypto . <unk> ( filestream , ) ; <nl>
ppp b / readme . md <nl> inputstream . close ( ) ; <nl> # # # # integrity # # # # <nl> ccc java <nl> outputstream outputstream = crypto . <unk> ( filestream , entity ) ; <nl> outputstream . write ( <unk> ) ; <nl> outputstream . close ( ) ; <nl> inputstream inputstream = crypto . <unk> ( filestream , ) ) ; <nl>
ppp b / readme . md <nl> inputstream . close ( ) ; <nl> # # # # integrity # # # # <nl> ccc java <nl> outputstream outputstream = crypto . <unk> ( filestream , entity ) ; <nl> outputstream . write ( <unk> ) ; <nl> outputstream . close ( ) ; <nl>
ppp b / readme . md <nl> inputstream . close ( ) ; <nl> # # # # integrity # # # # <nl> ccc java <nl> outputstream outputstream = crypto . <unk> ( filestream , entity ) ; <nl> outputstream . write ( <unk> ) ; <nl> outputstream . close ( ) ) ; <nl>
ppp b / readme . md <nl> inputstream . close ( ) ; <nl> # # # # integrity # # # # <nl> ccc java <nl> outputstream outputstream = crypto . <unk> ( filestream , entity ) ; <nl> outputstream . write ( <unk> ) ; <nl> outputstream . close ( ) ; <nl> inputstream inputstream = crypto . <unk> ( filestream , ; <nl>
====NEW EXAMPLE====
ppp b / storm - core / src / jvm / backtype / storm / <unk> / <unk> . java <nl> public class <unk> implements <unk> , <unk> , <unk> <nl> } <nl> private <unk> <unk> ( ) { <nl> return utils . deserialize ( <unk> , <unk> . class ) ; <nl> } <nl> } <nl>
ppp b / storm - core / src / jvm / backtype / storm / <unk> / <unk> . java <nl> public class <unk> implements <unk> , <unk> , <unk> <nl> } <nl> private <unk> <unk> ( ) { <nl> return utils . deserialize ( <unk> , <unk> . class ) ; <nl> } <nl> } <nl> <nl>
ppp b / storm - core / src / jvm / backtype / storm / <unk> / <unk> . java <nl> public class <unk> implements <unk> , <unk> , <unk> <nl> } <nl> private <unk> <unk> ( ) { <nl> return utils . deserialize ( <unk> , <unk> . class ) ; <nl> } <nl>
ppp b / storm - core / src / jvm / backtype / storm / <unk> / <unk> . java <nl> public class <unk> implements <unk> , <unk> , <unk> <nl> } <nl> private <unk> <unk> ( ) { <nl> return utils . deserialize ( <unk> , <unk> . class ) ; <nl> } <nl> <nl>
ppp b / storm - core / src / jvm / backtype / storm / <unk> / <unk> . java <nl> public class <unk> implements <unk> , <unk> , <unk> <nl> } <nl> private <unk> <unk> ( ) { <nl> return utils . deserialize ( <unk> , <unk> . class ) ; <nl> } <nl> }
====NEW EXAMPLE====
ppp b / src / java / grails / test / mockutils . groovy <nl> class mockutils { <nl> / / add data binding capabilities <nl> clazz . metaclass . constructor = { map params - > <nl> def obj = beanutils . <unk> ( clazz ) <nl> <unk> . <unk> ( obj , params ) <nl> return obj <nl> } <nl>
ppp b / src / java / grails / test / mockutils . groovy <nl> class mockutils { <nl> / / add data binding capabilities <nl> clazz . metaclass . constructor = { map params - > <nl> def obj = beanutils . <unk> ( clazz ) <nl> <unk> . <unk> ( obj , params ) <nl> return obj <nl> <nl>
ppp b / src / java / grails / test / mockutils . groovy <nl> class mockutils { <nl> / / add data binding capabilities <nl> clazz . metaclass . constructor = { map params - > <nl> def obj = beanutils . <unk> ( clazz ) <nl> <unk> . <unk> ( obj , params ) <nl> return obj <nl> } <nl> <nl>
ppp b / src / java / grails / test / mockutils . groovy <nl> class mockutils { <nl> / / add data binding capabilities <nl> clazz . metaclass . constructor = { map params - > <nl> def obj = beanutils . <unk> ( clazz ) <nl> <unk> . <unk> ( obj , params ) <nl> return obj <nl>
ppp b / src / java / grails / test / mockutils . groovy <nl> class mockutils { <nl> / / add data binding capabilities <nl> clazz . metaclass . constructor = { map params - > <nl> def obj = beanutils . <unk> ( clazz ) <nl> <unk> . <unk> ( obj , params ) <nl> return obj <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl>

ppp b / pom . xml <nl> < module > jooq - codegen - maven < / module > <nl> < module > jooq - meta < / module > <nl> < module > jooq - scala < / module > <nl> < / < / < / < / < / < / < / < / < / < / module > <nl> < / modules > <nl> < dependencymanagement > <nl>
ppp b / pom . xml <nl> < module > jooq - codegen - maven < / module > <nl> < module > jooq - meta < / module > <nl> < module > jooq - scala < / module > <nl> < / < / < / < / < / < / < / < / < / < / module > <nl> < / modules > <nl> < dependencymanagement > > <nl>
ppp b / pom . xml <nl> < module > jooq - codegen - maven < / module > <nl> < module > jooq - meta < / module > <nl> < module > jooq - scala < / module > <nl> < / < / < / < / < / < / < / < / < / < / module > <nl> < / modules > <nl> < dependencymanagement > <nl> > <nl>
====NEW EXAMPLE====
ppp b / test . properties <nl> portal . version , \ <nl> portlet . plugins . includes , \ <nl>
ppp b / test . properties <nl> portal . version , \ <nl>
ppp b / test . properties <nl>

ppp b / test . properties <nl> portal . version
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - security . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> captures / <nl> # gradle <nl> . gradle / <nl> # generated by <nl> # generated by gradle <nl> crashlytics . properties <nl>
ppp b / . gitignore <nl> captures / <nl> # gradle <nl> . gradle / <nl> # generated by <nl> # generated by <nl>
ppp b / . gitignore <nl> captures / <nl> # gradle <nl> . gradle / <nl> # generated by <nl> # generated by gradle <nl>
ppp b
ppp b / . gitignore <nl> captures / <nl>
====NEW EXAMPLE====
ppp b / v17 / leanback / src / android / support / v17 / leanback / transition / <unk> . java <nl> public final class <unk> { <nl> @ override <nl> public object <unk> ( context context , int resid ) { <nl> return null ; <nl> return ; <nl> } <nl> } <nl>
ppp b / v17 / leanback / src / android / support / v17 / leanback / transition / <unk> . java <nl> public final class <unk> { <nl> @ override <nl> public object <unk> ( context context , int resid ) { <nl> return null ; <nl> return ; <nl> } <nl>
ppp b / v17 / leanback / src / android / support / v17 / leanback / transition / <unk> . java <nl> public final class <unk> { <nl> @ override <nl> public object <unk> ( context context , int resid ) { <nl> return null ; <nl> return ; <nl> } <nl> } <nl> <nl>
ppp b / v17 / leanback / src / android / support / v17 / leanback / transition / <unk> . java <nl> public final class <unk> { <nl> @ override <nl> public object <unk> ( context context , int resid ) { <nl> return null ; <nl> return ; <nl> } <nl> <nl>
ppp b / v17 / leanback / src / android / support / v17 / leanback / transition / <unk> . java <nl> public final class <unk> { <nl> @ override <nl> public object <unk> ( context context , int resid ) { <nl> return null ; <nl> return ; <nl> } <nl> }
====NEW EXAMPLE====
ppp b / changes . txt <nl>
ppp

ppp b / changes . txt <nl> * fix <unk> of the cli syntax when { } should be used instead of [ { } ] <nl> ( cassandra - <unk> ) <nl> * rename cql type at end of the [ issue ] ( ) <nl> * * rename cql type to match expected sql behavior ( cassandra - <unk> ) <nl> 0 . 8 . 6 <nl>
ppp b / changes . txt <nl> * fix <unk> of the cli syntax when { } should be used instead of [ { } ] <nl> ( cassandra - <unk> ) <nl> * rename cql type at end of the [ issue ] ( ) <nl> * * rename cql type to match expected sql behavior ( cassandra - <unk> ) <nl> 0 . 8 . 6 6 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0bc1f0630befc88f6f8c3ceb57b2637a5743f849 <nl> mode = push <nl> parent = 898336e4cf5027c58c7250943f53405c10e44335 <nl> remote = git @ github . com : liferay / com - liferay - portal - remote . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0bc1f0630befc88f6f8c3ceb57b2637a5743f849 <nl> mode = push <nl> parent = 898336e4cf5027c58c7250943f53405c10e44335 <nl> remote = git @ github . com : liferay / com - liferay - portal - remote = git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / readme . txt <nl> will <unk> < <unk> @
ppp b / readme . txt <nl> will <unk> < <unk> @ google
ppp b / readme . txt <nl> will <unk> < <unk> @ google .
ppp b / readme . txt <nl>
ppp b / readme . txt <nl> will <unk> < <unk> @ google . com > <nl> james home < <unk> @ google . com > <nl>
====NEW EXAMPLE====
ppp b / src / main / java / com / xtremelabs / robolectric / robolectric . java <nl> public class robolectric { <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl>
ppp b / src / main / java / com / xtremelabs / robolectric / robolectric . java <nl> public class robolectric { <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , , <nl>
ppp b / src / main / java / com / xtremelabs / robolectric / robolectric . java <nl> public class robolectric { <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class class <nl>
ppp b / src / main / java / com / xtremelabs / robolectric / robolectric . java <nl> public class robolectric { <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <nl>
ppp b / src / main / java / com / xtremelabs / robolectric / robolectric . java <nl> public class robolectric { <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl> <unk> . class , <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 15 . 0 . 2 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 15 . 0 . 2 ' <nl> } <nl> ext . libraries = [ [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 15 . 0 . 2 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 15 . 0 . 2 ' <nl> } <nl> ext . libraries = = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 15 . 0 . 2 ' <nl> } <nl> ext . libraries = [
====NEW EXAMPLE====
ppp b / test . properties <nl> <unk> . blank . user . password . enabled , \ <nl> <unk> . enabled , \ <nl> app . server . bundles . size , \ <nl> browser . type , \ <nl> . . \ <nl> browser . type , \ <nl> captcha . max . challenges , \ <nl> cluster . enabled , \ <nl>
ppp
ppp b / test . properties <nl>

ppp b / test . properties <nl> <unk> . blank . user . password . enabled , \ <nl> <unk> . enabled , \ <nl> app . server . bundles . size , \ <nl> browser . type , \ <nl> . . \ <nl> browser . type , \ <nl> captcha . max . challenges , \ <nl> cluster . enabled , , <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> public / images / <unk> . png <nl> public / images / graphs / * <nl> . bundle / <nl> coverage / <nl> / / <nl> coverage / <nl> / reports reports <nl>
ppp b / . gitignore <nl> public / images / <unk> . png <nl> public / images / graphs / * <nl> . bundle / <nl> coverage / <nl> / / <nl> coverage / <nl> / reports reports / <nl>
ppp b / . gitignore <nl> public / images / <unk> . png <nl> public / images / graphs / * <nl> . bundle / <nl> coverage / <nl> / / <nl> coverage / <nl> / reports / <nl>
ppp b / . gitignore <nl>
ppp b / . gitignore <nl> public / images / <unk> . png <nl> public / images / graphs / * <nl> . bundle / <nl> coverage / <nl> / / <nl> coverage <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 1 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 1 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 1 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 1 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name name <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 1 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name <nl>
====NEW EXAMPLE====
ppp b / zipkin - ui / build . gradle <nl> task webpack ( type : <unk> ) { <nl> args = [ ' run - script ' , ' build ' ] <nl> dependson npminstall } <nl>
ppp b / zipkin - ui / build . gradle <nl> task webpack ( type : <unk> ) { <nl> args = [ ' run - script ' , ' build ' ] <nl> dependson npminstall <nl>
ppp b / zipkin - ui / build . gradle <nl> task webpack ( type : <unk> ) { <nl> args = [ ' run - script ' , ' build ' ] <nl> dependson npminstall webpack <nl>
ppp b / zipkin - ui / build . gradle <nl> task webpack ( type : <unk> ) { <nl> args = [ ' run - script ' , ' build ' ] <nl> dependson npminstall } <nl> <unk> <unk> . dependson ( webpack ) <nl> task karma ( type : <unk> ) { <nl>
ppp b / zipkin - ui / build . gradle <nl> task webpack ( type : <unk> ) { <nl> args = [ ' run - script ' , ' build ' ] <nl>
====NEW EXAMPLE====
ppp b / data / keyboards / <unk> . kl <nl> key 172 home <nl> axis 0x00 x <nl> axis 0x01 y <nl> axis 0x03 z <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl>
ppp b / data / keyboards / <unk> . kl <nl> key 172 home <nl> axis 0x00 x <nl> axis 0x01 y <nl> axis 0x03 z <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <nl>
ppp b / data / keyboards / <unk> . kl <nl> key 172 home <nl> axis 0x00 x <nl> axis 0x01 y <nl> axis 0x03 z <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <unk> <nl>
ppp b / data / keyboards / <unk> . kl <nl> key 172 home <nl> axis 0x00 x <nl> axis 0x01 y <nl> axis 0x03 z <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl>
ppp b / data / keyboards / <unk> . kl <nl> key 172 home <nl> axis 0x00 x <nl> axis 0x01 y <nl> axis 0x03 z <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl> axis <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / library . properties <nl> paragraph = with twitter4j , you can easily <unk> your java application with <nl> version = 4 # this must be <unk> as an int <nl>
ppp b / library . properties <nl> paragraph = with twitter4j , you can easily <unk> your java application with <nl> version = 4 # this must be <unk> as an int <nl> # the version as the user will see it . if blank , the version attribute will be used here <nl> prettyversion = 4 . 0 . 2 # this is treated as a string <nl>
ppp b / library . properties <nl> paragraph = with twitter4j , you can easily <unk> your java application with <nl>
ppp b / library . properties <nl> paragraph = with twitter4j , you can easily <unk> your java application with <nl> version = 4 # this must be <unk> as an int <nl> # the version as the user will see it . if blank , the version attribute will be used here <nl> prettyversion = 4 . 0 . 2 # this is treated as a <nl>
ppp b / library . properties <nl> paragraph = with twitter4j , you can easily <unk> your java application with <nl> version = 4 # this must be <unk> as an int <nl> # the version as the user will see it . if blank , the version attribute will be used here <nl> prettyversion = 4 . 0 . 2 # this is treated as a a <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> gradleversion = 1 . 4 <nl> # vert . x version <nl> version = 2 . 1 . 0 - snapshot <nl> testframeworkversion = 2 . 0 . 0 - final <nl> title = vert . x <nl> group = io . vertx <nl>
ppp b / gradle . properties <nl> gradleversion = 1 . 4 <nl> # vert . x version <nl> version = 2 . 1 . 0 - snapshot <nl> testframeworkversion = 2 . 0 . 0 - final <nl> title = vert . x <nl> group = io . . <nl>
ppp b / gradle . properties <nl> gradleversion = 1 . 4 <nl> # vert . x version <nl> version = 2 . 1 . 0 - snapshot <nl> testframeworkversion = 2 . 0 . 0 - final <nl> title = vert . x <nl> group = io . vertx vertx <nl>
ppp b / gradle . properties <nl> gradleversion = 1 . 4 <nl> # vert . x version <nl> version = 2 . 1 . 0 - snapshot <nl> testframeworkversion = 2 . 0 . 0 - final <nl> title = vert . x <nl> group = io . <nl>
ppp b / gradle . properties <nl> gradleversion = 1 . 4 <nl> # vert . x version <nl> version = 2 . 1 . 0 - snapshot <nl> testframeworkversion = 2 . 0 . 0 - final <nl> title = vert . x <nl> group = io . vertx <nl> <nl>
====NEW EXAMPLE====
ppp b / runtime / csharp / antlr4 . runtime . test / java . g4 <nl> <unk> <nl> ; <nl>

ppp
ppp b / runtime / csharp / antlr4 . runtime . test / java . g4 <nl> <unk> <nl> ; <nl> statement <nl> @ <unk> { <unk> } <nl> <nl> : <nl> block | assert expression ( ' : ' expression ) ? ' ; <nl> | ' if ' <unk> statement ( ' else ' statement ) ) <nl>
ppp b / runtime / csharp / antlr4 . runtime . test / java . g4 <nl> <unk> <nl> ; <nl> statement <nl> @ <unk> { <unk> } <nl> <nl> : <nl> block | assert expression ( ' : ' expression ) ? ' ; <nl> | ' if ' <unk> statement ( ' else ' statement ) ? <nl>
====NEW EXAMPLE====
ppp b / jps / src / org / jetbrains / jps / <unk> . groovy <nl> class <unk> { <nl>
ppp b / jps / src / org / jetbrains / jps / <unk> . groovy <nl>

ppp b / jps / src / org / jetbrains / jps / <unk> . groovy <nl> class <unk> <nl>
ppp b / jps / src / org / jetbrains / jps / <unk> . groovy <nl> class <unk> { <nl> set < module > dependencies = new hashset < module > ( ) <nl> chunk . modules . each { <nl> <unk> ( it , <unk> ( <unk> ) , dependencies ) ; <nl> ( it ( <unk> ( ) ) dependencies ) <nl> } <nl> <unk> ( dependencies , <unk> ) <nl>
====NEW EXAMPLE====
ppp b / core / java / android / widget / <unk> . java <nl> public class <unk> implements parcelable , filter { <nl>
ppp b / core / java / android / widget / <unk> . java <nl>

ppp b / core / java / android / widget / <unk> . java <nl> public class <unk> implements parcelable , filter { <nl> viewgroup . layoutparams layoutparams = target . getlayoutparams ( ) ; <nl> if ( layoutparams instanceof viewgroup . <unk> ) { <nl> ( ( viewgroup . <unk> ) layoutparams ) . <unk> ( end ) ; <nl> ) ; <nl> ) ; <nl> } <nl> } <nl> } <nl>
ppp b / core / java / android / widget / <unk> . java <nl> public class <unk> implements parcelable , filter { <nl> viewgroup . layoutparams layoutparams = target . getlayoutparams ( ) ; <nl> if ( layoutparams instanceof viewgroup . <unk> ) { <nl> ( ( viewgroup . <unk> ) layoutparams ) . <unk> ( end ) ; <nl> ) ; <nl> ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 42025c61665a8b57a20faee78ff5ece38163dc74 <nl> mode = push <nl> parent = c3bb75922425984c05390ab01ffe196c2134fbb6 <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 42025c61665a8b57a20faee78ff5ece38163dc74 <nl> mode = push <nl>
====NEW EXAMPLE====
ppp b / react / base / <unk> . m <nl> rct_not_implemented ( - ( instancetype ) init ) ; <nl> } <nl> } <nl> if ( ) ; <nl> <unk> <unk> ( ) ) { <nl> <unk> ( _instance ) ; <nl> } <nl>
ppp b / react / base / <unk> . m <nl> rct_not_implemented ( - ( instancetype ) init ) ; <nl> } <nl> } <nl> if ( ) ; <nl> <unk> <unk> ( ) ) { <nl> <unk> ( _instance ) ; <nl>
ppp b / react / base / <unk> . m <nl> rct_not_implemented ( - ( instancetype ) init ) ; <nl> } <nl> } <nl> if ( ) ; <nl> <unk> <unk> ( ) ) { <nl> <unk> ( _instance ) ; <nl> } <nl> <nl>
ppp b / react / base / <unk> . m <nl> rct_not_implemented ( - ( instancetype ) init ) ; <nl> } <nl> } <nl> if ( ) ; <nl> <unk> <unk> ( ) ) { <nl> <unk> ( _instance ) ; <nl> }
ppp b / react / base / <unk> . m <nl> rct_not_implemented ( - ( instancetype ) init ) ; <nl> } <nl> } <nl> if ( ) ; <nl> <unk> <unk> ( ) ) { <nl> <unk> ( _instance ) ; } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / library / src / com / handmark / pulltorefresh / library / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void <unk> ( charsequence label ) { <nl> for ( <unk> layout : <unk> ) { <nl> layout . <unk> ( label ) ; <nl> } <nl> } <nl>
ppp b / library / src / com / handmark / pulltorefresh / library / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void <unk> ( charsequence label ) { <nl> for ( <unk> layout : <unk> ) { <nl> layout . <unk> ( label ) ; <nl> } <nl> } <nl> <nl>
ppp b / library / src / com / handmark / pulltorefresh / library / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void <unk> ( charsequence label ) { <nl> for ( <unk> layout : <unk> ) { <nl> layout . <unk> ( label ) ; <nl> } <nl> <nl>
ppp b / library / src / com / handmark / pulltorefresh / library / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void <unk> ( charsequence label ) { <nl> for ( <unk> layout : <unk> ) { <nl> layout . <unk> ( label ) ; <nl> } <nl>
ppp b / library / src / com / handmark / pulltorefresh / library / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void <unk> ( charsequence label ) { <nl> for ( <unk> layout : <unk> ) { <nl> layout . <unk> ( label ) ; <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / python / helpers / pydev / <unk> . py <nl> def <unk> ( args ) : <nl> if <unk> ( args [ 0 ] ) : <nl> try : <nl> <unk> = args . index ( ' - c ' ) <nl> except <unk> : <nl> <unk> = - 1 <nl> if <unk> ! = - 1 : <nl>
ppp b / python / helpers / pydev / <unk> . py <nl> def <unk> ( args ) : <nl> if <unk> ( args [ 0 ] ) : <nl> try : <nl> <unk> = args . index ( ' - c ' ) <nl> except <unk> : <nl> <unk> = - 1 <nl> if <unk> ! = - 1 : : <nl>
ppp b / python / helpers / pydev / <unk> . py <nl> def <unk> ( args ) : <nl> if <unk> ( args [ 0 ] ) : <nl> try : <nl> <unk> = args . index ( ' - c ' ) <nl> except <unk> : <nl> <unk> = - 1 <nl> if <unk> ! = - 1 1 <nl>
ppp b / python / helpers / pydev / <unk> . py <nl> def <unk> ( args ) : <nl> if <unk> ( args [ 0 ] ) : <nl> try : <nl> <unk> = args . index ( ' - c ' ) <nl> except <unk> : <nl> <unk> = - 1 <nl> if <unk> ! = - 1 <nl>
ppp b / python / helpers / pydev / <unk> . py <nl> def <unk> ( args ) : <nl> if <unk> ( args [ 0 ] ) : <nl> try : <nl> <unk> = args . index ( ' - c ' ) <nl> except <unk> : <nl> <unk> = - 1 <nl> if <unk> ! = - 1 : <nl> <nl>
====NEW EXAMPLE====
ppp b / portal - impl / src / com / liferay / portlet / journal / service / impl / journalarticlelocalserviceimpl . java <nl> public class journalarticlelocalserviceimpl <nl> @ override <nl> public <unk> <unk> ( <nl> long groupid , articleid , int status ) <nl> throws portalexception , systemexception { <nl> <unk> <unk> = new <unk> ( ) ; <nl>
ppp b / portal - impl / src / com / liferay / portlet / journal / service / impl / journalarticlelocalserviceimpl . java <nl> public class journalarticlelocalserviceimpl <nl> @ override <nl> public <unk> <unk> ( <nl> long groupid , articleid , int status ) <nl> throws portalexception , systemexception { <nl> <unk> <unk> = new <unk> ( ) ) ; <nl>
ppp b / portal - impl / src / com / liferay / portlet / journal / service / impl / journalarticlelocalserviceimpl . java <nl> public class journalarticlelocalserviceimpl <nl> @ override <nl>
ppp b / portal - impl / src / com / liferay / portlet / journal / service / impl / journalarticlelocalserviceimpl . java <nl>
ppp b / portal - impl / src / com / liferay / portlet / journal / service / impl / journalarticlelocalserviceimpl . java <nl> public class journalarticlelocalserviceimpl <nl>
====NEW EXAMPLE====
ppp b / javascript / src / pages / <unk> . jsx <nl> import react from ' react ' ; <nl> import { <unk> } from ' components / common ' ; <nl>
ppp b / javascript / src / pages / <unk> . jsx <nl> import react from ' react ' ; <nl> import { <unk> } from ' components / common ' <nl>
ppp b / javascript / src / pages / <unk> . jsx <nl> import react from ' react ' ; <nl> import { <unk> } from ' components / common ; <nl>
ppp b / javascript / src / pages / <unk> . jsx <nl> import react from ' react ' ; <nl> import { <unk> } from ' components / common ' ; <nl> import <unk> from ' components / notifications / <unk> ' ; <nl>
ppp b / javascript / src / pages / <unk> . jsx <nl> import react from ' react ' ; <nl> import { <unk> } from ' components / common ' ; <nl> import <unk> from ' components / notifications / <unk> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / src / com / google / javascript / jscomp / compiler . java <nl> public class compiler extends abstractcompiler { <nl>
ppp b / src / com / google / javascript / jscomp / compiler . java <nl> public class compiler extends abstractcompiler { <nl> <unk> <unk> = <unk> . getastroot ( this ) . <unk> ( ) ; <nl> preconditions . <unk> ( <unk> . <unk> ( ) . equals ( <unk> ) ) ) ; <nl> true ; <nl> ) ; <nl> return return true ; <nl> } <nl>
ppp b / src / com / google / javascript / jscomp / compiler . java <nl>
ppp b / src / com / google / javascript / jscomp / compiler . java <nl> public class compiler extends abstractcompiler { <nl> <unk> <unk> = <unk> . getastroot ( this ) . <unk> ( ) ; <nl> preconditions . <unk> ( <unk> . <unk> ( ) . equals ( <unk> ) ) ) ; <nl> true ; <nl> ) ; <nl> return return true ; <nl> } <nl> } <nl>

====NEW EXAMPLE====
ppp b / graylog2 - web - interface / src / components / field - analyzers / <unk> . jsx <nl> const <unk> = react . createclass ( { <nl> return ( <nl> < div id = " field - graphs " > <nl> { <unk> } <nl> < / } <nl> < div div > <nl> ) ; <nl> } , <nl>
ppp b / graylog2 - web - interface / src / components / field - analyzers / <unk> . jsx <nl> const <unk> = react . createclass ( { <nl> return ( <nl> < div id = " field - graphs " > <nl> { <unk> } <nl> < / } <nl> < div div > <nl> ) ; <nl> } <nl>
ppp b / graylog2 - web - interface / src / components / field - analyzers / <unk> . jsx <nl> const <unk> = react . createclass ( { <nl> return ( <nl> < div id = " field - graphs " > <nl> { <unk> } <nl> < / } <nl> < div div > <nl> ) ; <nl> } , , <nl>
ppp b / graylog2 - web - interface / src / components / field - analyzers / <unk> . jsx <nl> const <unk> = react . createclass ( { <nl>
ppp b / graylog2 - web - interface / src / components / field - analyzers / <unk> . jsx <nl> const <unk> = react . createclass ( { <nl> return ( <nl> < div id = " field - graphs " > <nl> { <unk> } <nl> < / } <nl> < div div > <nl> ) ; <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 2

ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - <unk> : port backtype . clj <nl> * storm - storm - : <unk> kafka spout time metric <nl> * storm - <unk> : allowing users to specify the nimbus thrift server queue size . <nl> * storm - 1564 : fix wrong package - info in org apache . storm . . utils staticmocking <nl>
====NEW EXAMPLE====
ppp b / contributors . txt <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / contributors . txt <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> w6bb <nl> \ no newline at end of file <nl>
ppp b / contributors . txt <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> w6bb \ no newline at end of file <nl>
ppp b / contributors . txt <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> no newline at end of file <nl>
ppp b / contributors . txt <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> w6bb no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / changelog . txt <nl> 0 . 81 <nl> * fixed bug causing realms to be cached even though they failed to open correctly . <nl> 0 . 80 <nl> * updated simplified chinese translation <nl> 0 . 80 <nl> * queries on relationships can be case sensitive . <nl>
ppp b / changelog . txt <nl> 0 . 81 <nl>
ppp b / changelog . txt <nl> 0 . 81 <nl> * fixed bug causing realms to be cached even though they failed to open correctly . <nl> 0 . 80 <nl> * updated simplified chinese translation <nl> 0 . 80 <nl> * queries on relationships can be case sensitive <nl>
ppp b / changelog . txt <nl>
ppp b / changelog . txt <nl> 0 . 81 <nl> * fixed bug causing realms to be cached even though they failed to open correctly . <nl> 0 . 80 <nl> * updated simplified chinese translation <nl> 0 . 80 <nl> * queries on relationships can be case sensitive .
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = 9cbdccc00094e040e315b1c4df6f19a6fdb42f21 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = 9cbdccc00094e040e315b1c4df6f19a6fdb42f21 <nl> remote = git @ github . com : liferay / com - liferay - calendar . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0

ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1372 : port backtype . clj <nl> * storm - * storm - 1372 : merging design and usage documents for distcache <nl> * storm - 1393 : update the storm . log . dir function , add add doc logs <nl>
====NEW EXAMPLE====
ppp b / ignition - location <nl> subproject commit <unk> <nl>
ppp b / ignition - location <nl> subproject commit = <nl>
ppp b / ignition - location <nl> subproject commit 743de259274020cdef3de809b8537c0775043c8a <nl>
ppp b / ignition - location <nl> subproject commit 152be6eb1a22da8cebe24ac4ee05b487936c9f2a <nl>
ppp b / ignition - location <nl> subproject commit e2915b4ce6edc24f4dc9fe361e23ff0a80e840f6 <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> * * version 1 . 9 . 17 beta ! * * <nl>
ppp b / readme . md <nl> changelog <nl>
ppp b / readme . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> * * version 1 . 9 . 17 beta ! * <nl>
ppp b / readme . md <nl> changelog <nl> *
ppp b / readme . md <nl> changelog <nl> * *
====NEW EXAMPLE====
ppp b / lib / nokogiri / version . rb <nl> module nokogiri <nl> # the version of nokogiri you are using <nl> version = ' 1 . 5 . 1 . ' <nl> class versioninfo # : nodoc : <nl> def jruby ? <nl>
ppp b / lib / nokogiri / version . rb <nl> module nokogiri <nl> # the version of nokogiri you are using <nl> version = ' 1 . 5 . 1 . ' <nl> class versioninfo # : nodoc : <nl> def jruby <nl>
ppp b / lib / nokogiri / version . rb <nl> module nokogiri <nl> # the version of nokogiri you are using <nl> version = ' 1 . 5 . 1 . ' <nl> class versioninfo # : nodoc : <nl> def jruby
ppp b / lib / nokogiri / version . rb <nl> module nokogiri <nl> # the version of nokogiri you are using <nl> version = ' 1 . 5 . 1 . ' <nl> class versioninfo # : nodoc : <nl> def jruby jruby <nl>
ppp b / lib / nokogiri / version . rb <nl> module nokogiri <nl> # the version of nokogiri you are using <nl> version = ' 1 . 5 . 1 . ' <nl> class versioninfo # : nodoc : <nl>
====NEW EXAMPLE====
ppp

ppp b / src / main / webapp / _res / css / keybox . css <nl> div . block . input { <nl> cursor : pointer ; <nl> background - image : url ( " . . / . / / / / <unk> . . . . . . . . . . . / / / <unk> . gif ) <nl> ) <nl> } <nl>
ppp b / src / main / webapp / _res / css / keybox . css <nl> div . block . input { <nl> cursor : pointer ; <nl> background - image : url ( " . . / . / / / / <unk> . . . . . . . . . . . / / / <unk> . gif ) <nl> } <nl>
ppp b / src / main / webapp / _res / css / keybox . css <nl> div . block . input { <nl> cursor : pointer ; <nl> background - image : url ( " . . / . / / / / <unk> . . . . . . . . . . . / / / <unk> . gif ) <nl> ) <nl>
====NEW EXAMPLE====
ppp b / modules / jquery / src / main / webapp / jquery / jquery . atmosphere . js <nl> jquery . atmosphere = function ( ) { <nl> <unk> ( message ) ; <nl> } ; <nl> if ( ) ; <nl> } ; <nl> this . response = <unk> ; <nl> } , <nl>
ppp b / modules / jquery / src / main / webapp / jquery / jquery . atmosphere . js <nl> jquery . atmosphere = function ( ) { <nl> <unk> ( message ) ; <nl> } ; <nl> if ( ) ; <nl> } ; <nl> this . response = <unk> ; <nl> } <nl>
ppp b / modules / jquery / src / main / webapp / jquery / jquery . atmosphere . js <nl> jquery . atmosphere = function ( ) { <nl> <unk> ( message ) ; <nl> } ; <nl> if ( ) ; <nl> } ; <nl> this . response = <unk> ; <nl> } , , <nl>
ppp b / modules / jquery / src / main / webapp / jquery / jquery . atmosphere . js <nl> jquery . atmosphere = function ( ) { <nl> <unk> ( message ) ; <nl> } ; <nl> if ( ) ; <nl> } ; <nl> this . response = <unk> ; <nl> }
ppp b / modules / jquery / src / main / webapp / jquery / jquery . atmosphere . js <nl> jquery . atmosphere = function ( ) { <nl> <unk> ( message ) ; <nl> } ; <nl> if ( ) ; <nl> } ; <nl> this . response = <unk> ; <nl> } , <nl> <nl>
====NEW EXAMPLE====
ppp b / mobile / blackberry / src / com / google / authenticator / blackberry / <unk> . java <nl>
ppp b / mobile / blackberry / src / com / google / authenticator / blackberry / <unk> . java <nl> public class <unk> extends <unk> implements updatecallback , <nl> add ( <unk> ) ; <nl> add ( <unk> ) ; <nl> add ( <unk> ( ) ; <nl> return ( ) ; <nl> add ( ) ; <nl> add ( <unk> ) ; <nl> add ( <unk> ) ; <nl>
ppp b / mobile / blackberry / src / com / google / authenticator / blackberry / <unk> . java <nl> public class <unk> extends <unk> implements updatecallback , <nl> add ( <unk> ) ; <nl> add ( <unk> ) ; <nl> add ( <unk> ( ) ; <nl> return ( ) ; <nl> add ( ) ; <nl> add ( <unk> ) ; <nl> add ( <unk> ) ) ; <nl>
ppp b / mobile / blackberry / src / com / google / authenticator / blackberry / <unk> . java <nl> public class <unk> extends <unk> implements updatecallback , <nl> add ( <unk> ) ; <nl> add ( <unk> ) ; <nl> add ( <unk> ( ) ; <nl> return ( ) ; <nl> add ( ) ; <nl> add ( <unk> ) ; <nl> add ( <unk> ) ; ; <nl>
ppp b / mobile / blackberry / src / com / google / authenticator / blackberry / <unk> . java <nl> public class <unk> extends <unk> implements updatecallback , <nl> add ( <unk> ) ; <nl> add ( <unk> ) ; <nl> add ( <unk> ( ) ; <nl> return ( ) ; <nl> add ( ) ; <nl> add ( <unk> ) ; <nl> add ( <unk> ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 1720 : support geo in storm - redis <nl> # # 1 . 0 . 2 <nl>
ppp b / changelog . md <nl> * storm - 1720 : support geo in storm - redis <nl>
ppp b / changelog . md <nl>
ppp

====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 134fa593fcc4ba4ac92c7e00f95a4e9e31908653 <nl> mode = push <nl> parent = 321abb5764e12288ac0ad84b732888d64d69b20d <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 134fa593fcc4ba4ac92c7e00f95a4e9e31908653 <nl> mode = push <nl> parent = 321abb5764e12288ac0ad84b732888d64d69b20d <nl> remote = git @ github . com : liferay / com - liferay - portal - search git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / tools / <unk> . sh <nl> cd . . <nl> git clone git : / / github . com / mongodb / <unk> . git <nl> cd <unk> / <nl> git checkout r1 . 3 # to build a particular release . <nl>
ppp b / tools / <unk> . sh <nl> cd . . <nl> git clone git : / / github . com / mongodb / <unk> . git <nl> cd <unk> / <nl> git checkout r1 . 3 # to build a particular release <nl>
ppp b / tools / <unk> . sh <nl> cd . . <nl> git clone git : / / github . com / mongodb / <unk> . git <nl> cd <unk> / <nl> git checkout r1 . 3 # to build a particular release . <nl> make sudo make install <nl>
ppp b / tools / <unk> . sh <nl> cd . . <nl> git clone git : / / github . com / mongodb / <unk> . git <nl> cd <unk> / <nl> git checkout r1 . 3 # to build a particular release . <nl> make sudo make <nl>
ppp b / tools / <unk> . sh <nl> cd . . <nl> git clone git : / / github . com / mongodb / <unk> . git <nl> cd <unk> / <nl> git checkout r1 . 3 # to build a particular <nl>
====NEW EXAMPLE====
ppp b / telephony / tests / <unk> / src / com / android / internal / telephony / <unk> / <unk> . java <nl> * limitations under the license . <nl> * / <nl> package com . android . internal . telephony . <unk> ; <nl> import android . util . log ; <nl>
ppp b / telephony / tests / <unk> / src / com / android / internal / telephony / <unk> / <unk> . java <nl> * limitations under the license . <nl> * / <nl> package com . android . internal . telephony . <unk> ; <nl> import android . util . log log ; <nl>
ppp b / telephony / tests / <unk> / src / com / android / internal / telephony / <unk> / <unk> . java <nl> * limitations under the license . <nl> * / <nl> package com . android . internal . telephony . <unk> ; <nl> import android . util . log log <nl>
ppp b / telephony / tests / <unk> / src / com / android / internal / telephony / <unk> / <unk> . java <nl> * limitations under the license . <nl> * / <nl> package com . android . internal . telephony . <unk> ; <nl> import android . util . log <nl>
ppp b / telephony / tests / <unk> / src / com / android / internal / telephony / <unk> / <unk> . java <nl> * limitations under the license . <nl> * / <nl> package com . android . internal . telephony . <unk> ; <nl> import android . util . log ; ; <nl>
====NEW EXAMPLE====
ppp b / sample / build . gradle <nl> dependencies { <nl> compile project ( ' : library ' ) <nl>
ppp b / sample / build . gradle <nl>
ppp b / sample / build . gradle <nl> dependencies { <nl>

ppp b / sample / build . gradle <nl> dependencies
====NEW EXAMPLE====
ppp b / src / main / org / codehaus / groovy / tools / filesystemcompiler . java <nl> public class filesystemcompiler { <nl> errors = true ; <nl> } <nl> } else { <nl> filelist . addall ( arrays . ; <nl> } <nl> } <nl> if ( errors ) { <nl>
ppp b / src / main / org / codehaus / groovy / tools / filesystemcompiler . java <nl> public class filesystemcompiler { <nl> errors = true ; <nl> } <nl> } else { <nl> filelist . addall ( arrays . ; <nl> } <nl> } <nl> if ( errors ) <nl>
ppp b / src / main / org / codehaus / groovy / tools / filesystemcompiler . java <nl> public class filesystemcompiler { <nl> errors = true ; <nl> } <nl> } else { <nl> filelist . addall ( arrays . ; <nl> } <nl> } <nl> if ( errors ) ) <nl>
ppp b / src / main / org / codehaus / groovy / tools / filesystemcompiler . java <nl> public class filesystemcompiler { <nl> errors = true ; <nl> } <nl> } else { <nl> filelist . addall ( arrays . ; <nl> } <nl> } <nl> if ( errors ) ; <nl>
ppp b / src / main / org / codehaus / groovy / tools / filesystemcompiler . java <nl> public class filesystemcompiler { <nl> errors = true ; <nl> } <nl> } else { <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > org . graylog2 < / groupid > <nl> < artifactid > graylog2 - server < / artifactid > <nl> < version > 0 . 9 . < / / version > <nl> < packaging > jar < / packaging > <nl> < properties > <nl>
ppp b / pom . xml <nl> < groupid > org . graylog2 < / groupid > <nl> < artifactid > graylog2 - server < / artifactid > <nl> < version > 0 . 9 . < / / version > <nl> < packaging > jar < / packaging > <nl> < properties > > <nl>
ppp b / pom . xml <nl> < groupid > org . graylog2 < / groupid > <nl> < artifactid > graylog2 - server < / artifactid > <nl> < version > 0 . 9 . < / / version > <nl> < packaging > jar < / packaging > <nl> < properties <nl>
ppp b / pom . xml <nl> < groupid > org . graylog2 < / groupid > <nl> < artifactid > graylog2 - server < / artifactid > <nl> < version > 0 . 9 . < / / version > <nl> < packaging > jar < / packaging > <nl> < properties > <nl> <nl>
ppp b / pom . xml <nl> < groupid > org . graylog2 < / groupid > <nl> < artifactid > graylog2 - server < / artifactid > <nl> < version > 0 . 9 . < / / version > <nl> < packaging > jar < / packaging > <nl> < properties >
====NEW EXAMPLE====
ppp b / layoutplugin / src / org / gephi / layout / plugin
ppp b / layoutplugin / src / org / gephi / layout / plugin / labeladjust / bundle . properties <nl> name = label <unk> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> = = = = <unk> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / layoutplugin / src / org / gephi / layout / plugin / labeladjust / bundle . properties <nl> name = label <unk> <nl> \ no newline at end of file <nl> \ no newline at end of = " <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / layoutplugin / src / org / gephi / layout / plugin / labeladjust / bundle . properties <nl> name = label <unk> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / layoutplugin / src / org / gephi / layout / plugin / labeladjust / bundle . properties <nl> name = label <unk> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> = = = = <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / library / src / com / loopj / android / http / <unk> . java <nl> public class <unk> extends <unk> { <nl> private static final string log_tag = " <unk> " ; <nl> / * * <nl> * creates a new <unk> <nl> * / <nl> public <unk> ( ) { <nl>
ppp b / library / src / com / loopj / android / http / <unk> . java <nl> public class <unk> extends <unk> { <nl> private static final string log_tag = " <unk> " ; <nl> / * * <nl> * creates a new <unk> <nl> * / <nl> public <unk> ( ) ) <nl>
ppp b / library / src / com / loopj / android / http / <unk> . java <nl> public class <unk> extends <unk> { <nl> private static final string log_tag = " <unk> " ; <nl> / * * <nl> * creates a new <unk> <nl> * / <nl> public <unk> ( ) <nl>
ppp b / library / src / com / loopj / android / http / <unk> . java <nl> public class <unk> extends <unk> { <nl> private static final string log_tag = " <unk> " ; <nl> / * * <nl> * creates a new <unk> <nl> * / <nl> public <unk> ( ) { <nl> <nl>
ppp b / library / src / com / loopj / android / http / <unk> . java <nl> public class <unk> extends <unk> { <nl> private static final string log_tag = " <unk> " ; <nl> / * * <nl> * creates a new <unk> <nl> * / <nl> public <unk> ( ) ; <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> other changes : <nl> * added restriction for time zone ( [ issue ] ( / . . / . . / issues / 1524 ) <nl>
ppp b / changelog . md <nl> other changes : <nl> * added restriction for time zone ( [ issue ] ( / . . / . . / issues / 1524 ) ) <nl>
ppp b / changelog . md <nl> other changes : <nl>
ppp b / changelog . md <nl>

====NEW EXAMPLE====
ppp b / data / keyboards / <unk> . kl <nl> # key layout used for bluetooth <unk> support . <nl> key 200 <unk> wake <nl> key 201 <unk> wake <nl> key 166 <unk> wake <nl> key <unk> <unk> wake <nl> key <unk> <unk> wake <nl>
ppp b / data / keyboards / <unk> . kl <nl> # key layout used for bluetooth <unk> support . <nl> key 200 <unk> wake <nl> key 201 <unk> wake <nl> key 166 <unk> wake <nl> key <unk> <unk> wake <nl> key <unk> <unk> <nl>
ppp b / data / keyboards / <unk> . kl <nl> # key layout used for bluetooth <unk> support . <nl> key 200 <unk> wake <nl> key 201 <unk> wake <nl> key 166 <unk> wake <nl> key <unk> <unk> wake <nl> key <unk> <unk> wake
ppp b / data / keyboards / <unk> . kl <nl> # key layout used for bluetooth <unk> support . <nl> key 200 <unk> wake <nl> key 201 <unk> wake <nl> key 166 <unk> wake <nl> key <unk> <unk> wake <nl> key <unk> <unk> <unk> <nl>
ppp b / data / keyboards / <unk> . kl <nl> # key layout used for bluetooth <unk> support . <nl> key 200 <unk> wake <nl> key 201 <unk> wake <nl> key 166 <unk> wake <nl> key <unk> <unk> wake <nl> key <unk> <unk> wake wake <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl>
ppp b / . travis . yml <nl> language : <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> language : java
ppp b / . travis . yml <nl> language : java <nl> script : <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . netflix . astyanax < / groupid > <nl> < artifactid > astyanax < / artifactid > <nl> < version > 0 . 8 . < / / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid > <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . astyanax < / groupid > <nl> < artifactid > astyanax < / artifactid > <nl> < version > 0 . 8 . < / / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / > <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . astyanax < / groupid > <nl> < artifactid > astyanax < / artifactid > <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . astyanax < / groupid > <nl> < artifactid > astyanax < / artifactid > <nl> < version > 0 . 8 . < / / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid groupid <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . astyanax < / groupid > <nl> < artifactid > astyanax < / artifactid > <nl> < version > 0 . 8 . < / / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid > > <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> target <nl> / bin <nl> liquibase . integrationtest . local
ppp b / . gitignore <nl> target <nl> / bin <nl> liquibase . integrationtest .
ppp b / . gitignore <nl> target <nl> / bin <nl> liquibase . integrationtest
ppp b / . gitignore <nl> target <nl> / bin <nl>
ppp b / . gitignore <nl> target <nl> / bin
====NEW EXAMPLE====
ppp b / bin / plugin <nl> else <nl>
ppp b / bin / plugin <nl> else <nl> java = ` which java ` <nl> fi <nl> exec $ java - <unk> - - des . path . home = " $ <unk> " - cp $ <unk> / lib / * org . elasticsearch . plugins plugins . pluginmanager $ * <nl>
ppp b / bin / plugin <nl> else <nl> java = ` which java ` <nl> fi <nl> exec $ java - <unk> - - des . path . home = " $ <unk> " - cp $ <unk> / lib / * org . elasticsearch . plugins plugins . pluginmanager $ <nl>
ppp b / bin / plugin <nl> else <nl> java = ` which java ` <nl> fi <nl> exec $ java - <unk> - - des . path . home = " $ <unk> " - cp $ <unk> / lib / * org . elasticsearch . plugins plugins . pluginmanager $ $ <nl>
ppp b / bin / plugin <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = 0f5e7aee88e06dd5e2e8b57786d67cf321a4760d <nl> remote = git @ github . com : liferay / com - liferay - product - navigation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / scripts / <unk> . groovy <nl> target ( <unk> : " loads the grails application object " ) { <nl> ctx . servletcontext = servletcontext <nl> <unk> = ctx . grailsapplication <nl> <unk> . application = <unk> <nl>
ppp b / scripts / <unk> . groovy <nl> target ( <unk> : " loads the grails application object " ) { <nl> ctx . servletcontext = servletcontext <nl> <unk> = ctx . grailsapplication <nl> <unk> . application = <unk> <nl> packageapp ) <nl> <unk> <unk> . pluginmanager = null <nl> ( ( ) <nl>
ppp b / scripts / <unk> . groovy <nl> target ( <unk> : " loads the grails application object " ) { <nl> ctx . servletcontext = servletcontext <nl> <unk> = ctx . grailsapplication <nl> <unk> . application = <unk> <unk> <nl>
ppp b / scripts / <unk> . groovy <nl> target ( <unk> : " loads the grails application object " ) { <nl> ctx . servletcontext = servletcontext <nl> <unk> = ctx . grailsapplication <nl> <unk> . application = <unk> <nl> packageapp ) <nl>
ppp b / scripts / <unk> . groovy <nl> target ( <unk> : " loads the grails application object " ) { <nl> ctx . servletcontext = servletcontext <nl> <unk> = ctx . grailsapplication <nl> <unk> . application = <unk> packageapp <nl>
====NEW EXAMPLE====
ppp b / common / net / minecraftforge / transformers / <unk> . java <nl>
ppp b / common / net / minecraftforge / transformers / <unk> . java <nl> public
ppp b / common / net / minecraftforge / transformers / <unk> . java <nl> public class <unk> implements <unk> <nl> } <nl> return bytes ; <nl> } <nl> catch ( exception e ) { <nl> if ( ) { <nl> } <nl> } <nl> } <nl> } <nl> catch ( exception e ) <nl> { <nl> e . printstacktrace ( ) ; <nl>
ppp b / common / net / minecraftforge / transformers / <unk> . java <nl> public class <unk> implements <unk> <nl> } <nl> return bytes ; <nl> } <nl> catch ( exception e ) { <nl> if ( ) { <nl> } <nl> } <nl> } <nl> } <nl> catch ( exception e ) <nl> { <nl> e . printstacktrace ( ) ) ; <nl>
ppp b / common / net / minecraftforge / transformers / <unk> . java <nl> public class <unk> implements <unk> <nl> } <nl> return bytes ; <nl> } <nl> catch ( exception e ) { <nl> if ( ) { <nl> } <nl> } <nl> } <nl> } <nl> catch ( exception e ) <nl> { <nl> e . printstacktrace ( ; <nl>
====NEW EXAMPLE====
ppp b / core / res / res / layout / <unk> . xml <nl> android : layout_height = " wrap_content " <nl> android : orientation = " horizontal " <nl> android : focusable = " true " <nl> android : background = " ? attr / <unk> " <nl> android : <unk> = " <unk> " > <nl> < relativelayout relativelayout <nl>
ppp b / core / res / res / layout / <unk> . xml <nl> android : layout_height = " wrap_content " <nl> android : orientation = " horizontal " <nl> android : focusable = " true " <nl> android : background = " ? attr / <unk> " <nl> android : <unk> = " <unk> " > <nl> < relativelayout <nl>
ppp b / core / res / res / layout / <unk> . xml <nl> android : layout_height = " wrap_content " <nl> android : orientation = " horizontal " <nl> android : focusable = " true " <nl> android : background = " ? attr / <unk> " <nl> android : <unk> = " <unk> " > <nl> < <nl>
ppp b / core / res / res / layout / <unk> . xml <nl> android : layout_height = " wrap_content " <nl> android : orientation = " horizontal " <nl> android : focusable = " true " <nl> android : background = " ? attr / <unk> " <nl> android : <unk> = " <unk> " > <nl> < relativelayout relativelayout
ppp b / core / res / res / layout / <unk> . xml <nl> android : layout_height = " wrap_content " <nl> android : orientation = " horizontal " <nl> android : focusable = " true " <nl> android : background = " ? attr / <unk> " <nl> android : <unk> = " <unk> " > <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 0a6c41e186c058d4434cf9041dc73034f7c3924e <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 0a6c41e186c058d4434cf9041dc73034f7c3924e <nl> remote = git @ github . com : liferay / com - liferay - portal - template git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl> @ test <nl> public void <unk> ( ) throws interruptedexception { <nl>
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl> @ test <nl> public void <unk> ( ) throws interruptedexception <nl>
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl> @ test <nl> public void <unk> ( ) throws interruptedexception . <nl>
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl> @ test <nl> public void <unk> ( ) throws interruptedexception interruptedexception <nl>
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl> @ test <nl> public void <unk> ( ) throws { <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 15 . 0 . 3 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 15 . 0 . 3 ' <nl> } <nl> ext . libraries = [ [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 15 . 0 . 3 ' <nl> } <nl> ext . libraries = = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 15 . 0 . 3 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 15 . 0 . 3 ' <nl> } <nl> ext . libraries = [
====NEW EXAMPLE====
ppp b / . hgtags <nl> aad229e4371b3b1f4a2b346761c04b8d866c3272 1 . 0 <nl> <unk> roboguice - 1 . 1 . 1 <nl> <unk> roboguice - 1 . 1 . 2 <nl> <unk> roboguice - 2 .
ppp b / . hgtags <nl> aad229e4371b3b1f4a2b346761c04b8d866c3272 1 . 0 <nl> <unk> roboguice - 1 . 1 . 1 <nl> <unk> roboguice - 1 . 1 . 2 <nl> <unk> roboguice - 2
ppp b / . hgtags <nl> aad229e4371b3b1f4a2b346761c04b8d866c3272 1 . 0 <nl> <unk> roboguice - 1 . 1 . 1 <nl> <unk> roboguice - 1 . 1 . 2 <nl> <unk> roboguice - 2 . .
ppp b / . hgtags <nl> aad229e4371b3b1f4a2b346761c04b8d866c3272 1 . 0 <nl> <unk> roboguice - 1 . 1 . 1 <nl> <unk> roboguice - 1 . 1 . 2 <nl> <unk> roboguice - 2 . . <unk> <nl>
ppp b / . hgtags <nl> aad229e4371b3b1f4a2b346761c04b8d866c3272 1 . 0 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / server / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a65e6de4bc00a384341d38515f209aa77a9fcd5e <nl> mode = push <nl> parent = b9e132460a5b6f193fc9e36c10b7f5ef1df9053e <nl> remote = git @ github . com : liferay / com - liferay - server . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / server / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / server / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a65e6de4bc00a384341d38515f209aa77a9fcd5e <nl> mode = push <nl> parent = b9e132460a5b6f193fc9e36c10b7f5ef1df9053e <nl> remote = git @ github . com : liferay / com - liferay - server . git <nl> \ no newline at end of file
ppp b / modules / apps / foundation / server / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / server / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a65e6de4bc00a384341d38515f209aa77a9fcd5e <nl> mode = push <nl> parent = b9e132460a5b6f193fc9e36c10b7f5ef1df9053e <nl> remote = git @ github . com : liferay / com - liferay - server . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / h2o - algos / src / main / java / hex / <unk> . java <nl>
ppp b / h2o - algos / src / main / java / hex / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> private <unk> ( int <unk> ) { <nl> <unk> = <unk> ; <nl> @ suppresswarnings ( ) ; <nl> <unk> = <unk> ; <nl> <unk> = new int [ ] { } } <nl> <unk> = <unk> . none ; <nl>
ppp b / h2o - algos / src / main / java / hex / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> private <unk> ( int <unk> ) { <nl> <unk> = <unk> ; <nl> @ suppresswarnings ( ) ; <nl> <unk> = <unk> ; <nl> <unk> = new int [ ] { } } <nl> <unk> = <unk> . none none ; <nl>

ppp b / h2o - algos / src / main / java / hex / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> private <unk> ( int <unk> ) { <nl> <unk> = <unk> ; <nl> @ suppresswarnings ( ) ; <nl> <unk> = <unk> ; <nl> <unk> = new int [ ] { } } <nl> <unk> = <unk> . ; <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 - snapshot <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 . " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
====NEW EXAMPLE====
ppp b / core / java / android / net / ethernetdatatracker . java <nl>
ppp b / core / java / android / net / ethernetdatatracker
ppp b / core / java / android / net / ethernetdatatracker . java <nl> public class ethernetdatatracker implements networkstatetracker { <nl> <unk> . <unk> ( <unk> ) ; <nl> } <nl> } <nl> reconnect ( ) ; <nl> if ( ) { <nl> public string tostring ( ) ; <nl> } <nl> return ( ) ; <nl> reconnect ( ) ; <nl> break ; <nl> } <nl>
ppp b / core / java / android / net / ethernetdatatracker . java <nl> public class ethernetdatatracker implements networkstatetracker { <nl> <unk> . <unk> ( <unk> ) ; <nl> } <nl> } <nl> reconnect ( ) ; <nl> if ( ) { <nl> public string tostring ( ) ; <nl> } <nl> return ( ) ; <nl> reconnect ( ) ; <nl> break ; <nl> } <nl> } <nl>
ppp b / core / java / android / net / ethernetdatatracker . java <nl> public class ethernetdatatracker implements networkstatetracker { <nl> <unk> . <unk> ( <unk> ) ; <nl> } <nl> } <nl> reconnect ( ) ; <nl> if ( ) { <nl> public string tostring ( ) ; <nl> } <nl> return ( ) ; <nl> reconnect ( ) ; <nl> break ; <nl>
====NEW EXAMPLE====
ppp b / jre_emul / classes / java / lang / throwable . m <nl> static bool <unk> ( <unk> * element ) { <nl> [ cause release ] ; <nl> [ detailmessage release ] ; <nl> [ blogctr ( ) ; <nl> [ stacktrace release ] ; <nl> [ super dealloc ] ; <nl> } <nl>
ppp b / jre_emul / classes / java / lang / throwable . m <nl> static bool <unk> ( <unk> * element ) { <nl> [ cause release ] ; <nl> [ detailmessage release ] ; <nl> [ blogctr ( ) ; <nl> [ stacktrace release ] ; <nl> [ super dealloc ] ; <nl>
ppp b / jre_emul / classes / java / lang / throwable . m <nl> static bool <unk> ( <unk> * element ) { <nl> [ cause release ] ; <nl> [ detailmessage release ] ; <nl> [ blogctr ( ) ; <nl> [ stacktrace release ] ; <nl> [ super dealloc ] ; <nl> } <nl> <nl>
ppp b / jre_emul / classes / java / lang / throwable . m <nl> static bool <unk> ( <unk> * element ) { <nl> [ cause release ] ; <nl> [ detailmessage release ] ; <nl> [ blogctr ( ) ; <nl> [ stacktrace release ] ; <nl> [ super dealloc ] ; <nl> <nl>
ppp b / jre_emul / classes / java / lang / throwable . m <nl> static bool <unk> ( <unk> * element ) { <nl> [ cause release ] ; <nl> [ detailmessage release ] ; <nl> [ blogctr ( ) ; <nl> [ stacktrace release ] ; <nl> [ super dealloc ] ; <nl> }
====NEW EXAMPLE====
ppp
ppp b / checkstyle . xml <nl> < module name = " checker " > <nl> < module name = " treewalker " > <nl> < module name = " upperell " / > <nl> < / module > <nl> \ no newline at end of file <nl> > <nl> < / module > <nl> < / module > <nl> \ no newline at end of file <nl>
ppp b / checkstyle . xml <nl>
ppp b / checkstyle . xml <nl> < module name = " checker " > <nl> < module name = " treewalker " > <nl> < module name = " upperell " / > <nl> < / module > <nl> \ no newline at end of file <nl> > <nl> < / module > <nl> < / module > <nl>
ppp b / checkstyle . xml <nl> < module name
====NEW EXAMPLE====
ppp b / build . properties <nl> groovyversion = 1 . 8 . 0 - beta - 1 - snapshot <nl> groovybundleversion = 1 . 7 . 0 . beta - 1 - snapshot <nl> # uncomment the following line to enable java5 elements in the build <nl> # groovy . build . <unk> = true <nl>
ppp b / build . properties <nl> groovyversion = 1 . 8 . 0 - beta - 1 - snapshot <nl> groovybundleversion = 1 . 7 . 0 . beta - 1 - snapshot <nl> # uncomment the following line to enable java5 elements in the build <nl> # groovy . build . <unk> = true true <nl>
ppp b / build . properties <nl> groovyversion = 1 . 8 . 0 - beta - 1 - snapshot <nl>
ppp b / build . properties <nl> groovyversion = 1 . 8 . 0 - beta - 1 - snapshot <nl> groovybundleversion = 1 . 7 . 0 . beta - 1 - snapshot <nl> # uncomment the following line to enable java5 elements in the build <nl> # groovy . build . <unk> = <nl>
ppp b / build . properties <nl> groovyversion = 1 . 8 . 0 - beta - 1 - snapshot <nl> groovybundleversion = 1 . 7 . 0 . beta - 1 - snapshot <nl> # uncomment the following line to enable java5 elements in the build <nl> # groovy . build . <unk> = = <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / <unk> . css <nl> $ dockbaropengradientstart : # 0ea6f9 ; <nl> . table { <nl> font - size : : ; <nl> td { <nl> background - color : # f9f9f9 ; <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / <unk> . css <nl> $ dockbaropengradientstart : # 0ea6f9 ; <nl> . table { <nl> font - size : : ; <nl> td { <nl> background - color : # f9f9f9 f9f9f9 ; <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / <unk> . css <nl> $ dockbaropengradientstart : # 0ea6f9 ; <nl> . table { <nl> font - size : : ; <nl> td { <nl> background - color : # ; <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / <unk> . css <nl> $ dockbaropengradientstart : # 0ea6f9 ; <nl> . table { <nl> font - size : : ; <nl> td { <nl> background - color : # f9f9f9 ; ; <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / <unk> . css <nl> $ dockbaropengradientstart : # 0ea6f9 ; <nl> . table { <nl> font - size : : ; <nl> td { <nl> background - color : # f9f9f9 ;
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 3 < / version > <nl> < relativepath > . . / . . / pom . xml < / relativepath > <nl> < / parent > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 3 < / version > <nl> < relativepath > . . / . . / pom . xml < / relativepath > <nl> < / > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 3 < / version > <nl> < relativepath > . . / . . / pom . xml < / relativepath > <nl> < / parent <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 3 < / version > <nl> < relativepath > . . / . . / pom . xml < / relativepath > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 3 < / version > <nl> < relativepath > . . / . . / pom . xml < / relativepath > <nl> < / parent > <nl> <nl>
====NEW EXAMPLE====
ppp b / application / pom . xml <nl> < groupid > org . holoeverywhere < / groupid > <nl> < artifactid > parent < / artifactid > <nl>
ppp b / application / pom . xml <nl> < groupid > org . holoeverywhere < / groupid > <nl> < artifactid > parent < / artifactid > <nl> < version > 1 . 4 . 3 - < < / version > <nl> < / > > > <nl> . . xml < / relativepath > <nl> < / parent > <nl> < dependencymanagement > <nl>
ppp b / application / pom . xml <nl>
ppp b / application / pom . xml <nl> < groupid > org . holoeverywhere < / groupid > <nl>
ppp b / application / pom . xml <nl> < groupid > org . holoeverywhere < / groupid > <nl> < artifactid > parent < / artifactid > <nl> < version > 1 . 4 . 3 - < < / version > <nl> < / > > > <nl> . . xml < / relativepath > <nl> < / parent > <nl> < dependencymanagement > > <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> tmp / <nl> . project <nl> . settings <nl> . classpath <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> tmp / <nl> . project <nl> . settings <nl> . classpath <nl> \ no newline at end of file <nl> <nl> target / <nl>
ppp b / . gitignore <nl> tmp / <nl> . project <nl> . settings <nl>
ppp b / . gitignore <nl> tmp / <nl> . project <nl> . settings <nl> . classpath <nl> \ no newline at end of file <nl> <nl> target / <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> tmp / <nl> . project <nl> . settings <nl> . classpath <nl> \ no newline at end of file <nl> <nl> target target <nl>
====NEW EXAMPLE====
ppp b / python / helpers / pydev / pydevd . py <nl> class <unk> : <nl> def <unk> ( self ) : <nl>
ppp b / python / helpers / pydev / pydevd . py <nl> class <unk> : <nl>
ppp b / python / helpers / pydev / pydevd . py <nl>
ppp b / python / helpers / pydev / pydevd . py <nl> class <unk> : <nl> def <unk> ( self ) : <nl> for t in <unk> ( ) : <nl> if not isinstance ( t , pydbdaemonthread ) and t . <unk> ( ) : <nl> return t refresh ( ) <nl> return true <nl> return false <nl>

====NEW EXAMPLE====
ppp b / core / src / main / java / org / lucasr / twowayview / <unk> . java <nl> public abstract class <unk> extends layoutmanager { <nl> private int mfirstposition ; <nl> private int <unk> ; <nl> ; <nl> private boolean <unk> ; <nl> private savedstate <unk> = null ; <nl>
ppp b / core / src / main / java / org / lucasr / twowayview / <unk> . java <nl> public abstract class <unk> extends layoutmanager { <nl> private int mfirstposition ; <nl> private int <unk> ; <nl> ; <nl> private boolean <unk> ; <nl> private savedstate <unk> = ; <nl>
ppp b / core / src / main / java / org / lucasr / twowayview / <unk> . java <nl> public abstract class <unk> extends layoutmanager { <nl> private int mfirstposition ; <nl> private int <unk> ; <nl> ; <nl> private boolean <unk> ; <nl> private savedstate <unk> = null ; ; <nl>
ppp b / core / src / main / java / org / lucasr / twowayview / <unk> . java <nl> public abstract class <unk> extends layoutmanager { <nl> private int mfirstposition ; <nl> private int <unk> ; <nl> ; <nl> private boolean <unk> ; <nl> private savedstate <unk> = null ;
ppp b / core / src / main / java / org / lucasr / twowayview / <unk> . java <nl> public abstract class <unk> extends layoutmanager { <nl> private int mfirstposition ; <nl> private int <unk> ; <nl> ; <nl> private boolean <unk> ; <nl> private savedstate <unk> = null ; <nl> <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl>
ppp

ppp b / changelog . md <nl> * storm - 1868
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed mode <nl> # # 1 . 0 . 3 <nl> * * updated german translation <nl> * updated traditional chinese translation <nl> * * storm - <unk> : fix sigar native binary link <nl> * storm - <unk> : bugs in logviewer <nl> * storm - 1646 : fix fix exponentialbackoffmsgretrymanager <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> computation - layer . api . port = <unk> <nl> ` ` ` <nl>
ppp b / readme . md <nl> computation - layer . api . port = <unk> <nl> ` ` ` <nl> <unk> default ports are 80 and 8080 respectively , but , 80 requires ` root ` access to use , and 8080 is used by <nl> hadoop yarn daemon processes . so the config here <unk> <unk> ports . _ <nl> # # running <nl>
ppp b / readme . md <nl> computation - layer . api . port = <unk> <nl>
ppp b / readme . md <nl> computation - layer . api . port = <unk> <nl> ` ` ` <nl> <unk> default ports are 80 and 8080 respectively , but , 80 requires ` root ` access to use , and 8080 is used by <nl> hadoop yarn daemon processes . so the config here <unk> <unk> ports . _ <nl> # # running running <nl>
ppp b / readme . md <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 08681ea460e2b2b4106b71ca02845f54f29cae5d <nl> mode = pull <nl> parent = ee853d5384071a1af8b730a4d31076688175b0f8 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 08681ea460e2b2b4106b71ca02845f54f29cae5d <nl> mode = pull <nl> parent = ee853d5384071a1af8b730a4d31076688175b0f8 <nl> remote = git @ github . com : liferay / com - liferay - journal . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 08681ea460e2b2b4106b71ca02845f54f29cae5d <nl> mode = pull <nl> parent = ee853d5384071a1af8b730a4d31076688175b0f8 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 08681ea460e2b2b4106b71ca02845f54f29cae5d <nl> mode = pull <nl> parent = ee853d5384071a1af8b730a4d31076688175b0f8 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # unreleased <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # <nl>
ppp

====NEW EXAMPLE====
ppp b / gradle . properties <nl> pom_name = rosie - framework <nl> pom_artifact_id = rosie - framework <nl> pom_packaging = aar <nl> version_name = 0 . 4 7 - snapshot <nl> version_code = <unk> <nl> group = com . karumi <nl>
ppp b / gradle . properties <nl> pom_name = rosie - framework <nl> pom_artifact_id = rosie - framework <nl> pom_packaging = aar <nl> version_name = 0 . 4 7 - snapshot <nl> version_code = <unk> <nl> group = com . karumi karumi <nl>
ppp b / gradle . properties <nl> pom_name = rosie - framework <nl> pom_artifact_id = rosie - framework <nl> pom_packaging = aar <nl> version_name = 0 . 4 7 - snapshot <nl> version_code = <unk> <nl> group = com . <nl>
ppp b / gradle . properties <nl> pom_name = rosie - framework <nl> pom_artifact_id = rosie - framework <nl> pom_packaging = aar <nl> version_name = 0 . 4 7 - snapshot <nl> version_code = <unk> <nl> group = com . karumi
ppp b / gradle . properties <nl> pom_name = rosie - framework <nl> pom_artifact_id = rosie - framework <nl> pom_packaging = aar <nl> version_name = 0 . 4 7 - snapshot <nl> version_code = <unk> <nl> group = com . . <nl>
====NEW EXAMPLE====
ppp b / doc <nl> subproject commit <unk> <nl>
ppp b / doc <nl> subproject commit = <nl>
ppp b / doc <nl> subproject commit 2135c723b4134a94cb5013f497f1bad8ef18deb6 <nl>
ppp b / doc <nl> subproject commit 4e7c70b2489a96b14039eb30d18fba7b3353b59c <nl>
ppp b / doc <nl> subproject commit 24ec338a51d98ee353e20fc8881a300d44ed3b45 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 90dfea792718d22deaa7849f8a3ad43a6f334c51 <nl> mode = push <nl> parent = 3f888c576007e21d8c89539cc4e23724389a7f75 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 90dfea792718d22deaa7849f8a3ad43a6f334c51 <nl> mode = push <nl> parent = 3f888c576007e21d8c89539cc4e23724389a7f75 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 90dfea792718d22deaa7849f8a3ad43a6f334c51 <nl> mode = push <nl> parent = 3f888c576007e21d8c89539cc4e23724389a7f75 <nl> remote = git @ github . com : liferay / com - liferay - journal . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / css / portal / forms
ppp b / portal - web / docroot / html / css / portal
ppp b / portal - web / docroot / html / css / portal / forms . css <nl> display : inline - block ; <nl> } <nl> . lfr - input - resource { <nl> if ( ) { <nl> } <nl> } <nl> } <nl> lfr lfr input - resource { <nl> width : @ <unk> @ <unk> ; <nl> } <nl>
ppp b / portal - web / docroot / html / css / portal / forms . css <nl> display : inline - block ; <nl> } <nl> . lfr - input - resource { <nl> if ( ) { <nl> } <nl> } <nl> } <nl> lfr lfr input - resource { <nl> width : @ <unk> @ <unk> ; <nl> <nl>
ppp b / portal - web / docroot / html / css / portal / forms . css <nl> display : inline - block ; <nl> } <nl> . lfr - input - resource { <nl> if ( ) { <nl> } <nl> } <nl> } <nl> lfr lfr input - resource { <nl> width : @ <unk> @ <unk> ; <nl>
====NEW EXAMPLE====
ppp b / hadoop - common - project / hadoop - common / changes
ppp b / hadoop - common - project / hadoop
ppp b / hadoop - common - project / hadoop - common / changes - hdfs - <unk> - <unk> . txt <nl> hadoop - <unk> correct two thrown messages in <unk> class . . contributed <unk> the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / hadoop - common - project / hadoop - common / changes - hdfs - <unk> - <unk> . txt <nl> hadoop - <unk> correct two thrown messages in <unk> class . . contributed by <unk> the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / hadoop - common - project / hadoop - common / changes - hdfs - <unk> - <unk> . txt <nl> hadoop - <unk> correct two thrown messages in <unk> class . . contributed <unk> ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - image - uploader . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - image - uploader git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / java / java - tests / testsrc / com / intellij / codeinsight / completion / javaautopopuptest . groovy <nl> public interface test { <nl> } <nl> <unk> ( ) <nl> <unk> ( ) <nl> @ override <nl> def def <unk> = <unk> . <unk> ( another ) <nl> if ( <unk> ) { <nl> assert false : <unk> . items <nl>
ppp b / java / java - tests / testsrc / com / intellij / codeinsight / completion / javaautopopuptest . groovy <nl> public interface test { <nl> } <nl> <unk> ( ) <nl> <unk> ( ) <nl> @ override <nl> def def <unk> = <unk> . <unk> ( another ) <nl> if ( <unk> ) { <nl> assert false : <unk> . items items <nl>
ppp b / java / java - tests / testsrc / com / intellij / codeinsight / completion / javaautopopuptest . groovy <nl>
ppp b / java / java - tests / testsrc / com / intellij / codeinsight / completion / javaautopopuptest . groovy <nl> public interface test { <nl> } <nl> <unk> ( ) <nl> <unk> ( ) <nl> @ override <nl> def def <unk> = <unk> . <unk> ( another ) <nl> if ( <unk> ) { <nl> assert false : <unk> . . <nl>
ppp b / java / java - tests / testsrc / com / intellij / codeinsight / completion / javaautopopuptest . groovy <nl> public interface test { <nl> } <nl> <unk> ( ) <nl> <unk> ( ) <nl> @ override <nl> def def <unk> = <unk> . <unk> ( another ) <nl> if ( <unk> ) { <nl> assert false : <unk> . items <nl> items <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / catalina / webresources / <unk> . java <nl> public class <unk> extends <unk> { <nl> } else { <nl> name = resourcename . substring ( index + 1 ) ; <nl> } <nl> } <nl> } <nl> @ override <nl>
ppp b / java / org / apache / catalina / webresources / <unk> . java <nl> public class <unk> extends <unk> { <nl> } else { <nl> name = resourcename . substring ( index + 1 ) ; <nl> } <nl> } <nl> } <nl>
ppp b / java / org / apache / catalina / webresources / <unk> . java <nl> public class <unk> extends <unk> { <nl> } else { <nl> name = resourcename . substring ( index + 1 ) ; <nl> } <nl> } <nl> } <nl> @ override <nl> <nl>
ppp b / java / org / apache / catalina / webresources / <unk> . java <nl> public class <unk> extends <unk> { <nl> } else { <nl> name = resourcename . substring ( index + 1 ) ; <nl> } <nl> } <nl> } <nl> @ override
ppp b / java / org / apache / catalina / webresources / <unk> . java <nl> public class <unk> extends <unk> { <nl> } else { <nl> name = resourcename . substring ( index + 1 ) ; <nl> } <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / script / helloworld <nl> println ( " hello world " ) <nl> for ( a in this . args { <nl> println ( " argument : " a ) <nl> } <nl> \ no newline at end of file <nl>
ppp b / src / script / helloworld <nl> println ( " hello world " ) <nl> for ( a in this . args { <nl> println ( " argument : " a ) <nl> } <nl>
ppp b / src / script / helloworld <nl> println ( " hello world " ) <nl> for ( a in this . args { <nl> println ( " argument : " a ) <nl> \ no newline at end of file <nl>
ppp b / src / script / helloworld <nl> println ( " hello world " ) <nl> for ( a in this . args { <nl> println ( " argument : " a ) <nl> } <nl> \ no newline at end <nl>
ppp b / src / script / helloworld <nl> println ( " hello world " ) <nl> for ( a in this . args { <nl> println ( " argument : " a ) <nl> } <nl> \ no newline end of file <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . - " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . - snapshot <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / owncloud - android - <nl> subproject commit = false <nl>
ppp b / owncloud - android - <nl> subproject commit <unk> <nl>
ppp b / owncloud - android - <nl> subproject commit e73e4a56d3c12d7a2f856ae65b00789b3e0cecb5 <nl>
ppp b / owncloud - android - <nl> subproject commit 6ec10b796f076f68ade776b888096dc673d9465b <nl>
ppp b / owncloud - android - <nl> subproject commit 333e54707ca221324c6b9eedb6a7bc2fcae02270 <nl>
====NEW EXAMPLE====
ppp b / jsr305 / makefile <nl> include . . / make / <unk> . mk <nl> <unk> = $ ( <unk> : % = $ ( java_src_dir ) / % ) <nl>
ppp b / jsr305 / makefile <nl> include . . / make / <unk> . mk <nl> <unk> = $ ( <unk> : % = $ ( java_src_dir ) / % <nl>
ppp b / jsr305 / makefile <nl> include . . / make / <unk> . mk <nl>
ppp b / jsr305 / makefile <nl>
ppp
====NEW EXAMPLE====
ppp b / presto - hive / src / main / java / com / facebook / presto / hive / metastore / <unk> . java <nl> public class <unk> <nl> } <nl> finally { <nl> <unk> ( databasename , tablename ) ; <nl> } <nl> @ override <nl> public boolean supportsnotnullunique ( ) { } ) ; <nl> } <nl> } <nl>
ppp b / presto - hive / src / main / java / com / facebook / presto / hive / metastore / <unk> . java <nl> public class <unk> <nl> } <nl> finally { <nl> <unk> ( databasename , tablename ) ; <nl> } <nl> @ override <nl> public boolean supportsnotnullunique ( ) { } ) ; <nl> } <nl>
ppp b / presto - hive / src / main / java / com / facebook / presto / hive / metastore / <unk> . java <nl> public class <unk> <nl> } <nl> finally { <nl> <unk> ( databasename , tablename ) ; <nl> } <nl> @ override <nl> public boolean supportsnotnullunique ( ) { } ) ; <nl> } <nl> } <nl> <nl>
ppp b / presto - hive / src / main / java / com / facebook / presto / hive / metastore / <unk> . java <nl> public class <unk> <nl> } <nl> finally { <nl> <unk> ( databasename , tablename ) ; <nl> } <nl> @ override <nl> public boolean supportsnotnullunique ( ) { } ) ; <nl> } <nl> <nl>
ppp b / presto - hive / src / main / java / com / facebook / presto / hive / metastore / <unk> . java <nl> public class <unk> <nl> } <nl> finally { <nl> <unk> ( databasename , tablename ) ; <nl> } <nl> @ override <nl> public boolean supportsnotnullunique ( ) { } ) ; <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / example / build . gradle <nl> repositories { <nl> android { <nl> compilesdkversion integer . parseint ( project . android_build_sdk_version ) <nl> buildtoolsversion project . android_build_tools_version <nl> defaultconfig { <nl>
ppp b / example / build . gradle <nl> repositories { <nl> android { <nl> compilesdkversion integer . parseint ( project . android_build_sdk_version ) <nl> buildtoolsversion project . android_build_tools_version <nl> defaultconfig { <nl> <nl>
ppp b / example / build . gradle <nl> repositories { <nl> android { <nl> compilesdkversion integer . parseint ( project . android_build_sdk_version ) <nl> buildtoolsversion project . android_build_tools_version <nl> defaultconfig { <nl> { <nl>
ppp b / example / build . gradle <nl> repositories { <nl> android { <nl> compilesdkversion integer . parseint ( project . android_build_sdk_version ) <nl> buildtoolsversion project . android_build_tools_version <nl>
ppp b / example / build . gradle <nl> repositories { <nl> android { <nl> compilesdkversion integer . parseint ( project . android_build_sdk_version ) <nl> buildtoolsversion project . android_build_tools_version <nl> defaultconfig { { <nl>
====NEW EXAMPLE====
ppp b / sql / update - 6 . 2 . 0
ppp b / sql / update - 6 . 2
ppp b / sql / update - 6 . 2 . 0 - 7 . 0 . 0 . sql <nl> alter table <unk> add <unk> boolean ; <nl> commit_transaction ( ) ; <nl> <unk> <unk> add <unk> ; <nl> commit_transaction ; <nl>
ppp b / sql / update - 6 . 2 . 0 - 7 . 0 . 0 . sql <nl> alter table <unk> add <unk> boolean ; <nl> commit_transaction ( ) ; <nl> <unk> <unk> add <unk> ; <nl>
ppp b / sql / update - 6 . 2 . 0 - 7 . 0 . 0 . sql <nl> alter table <unk> add <unk> boolean ; <nl> commit_transaction ( ) ; <nl> <unk> <unk> add <unk> ; <nl> commit_transaction commit_transaction <nl>
====NEW EXAMPLE====
ppp b / app / src / main / java / com / github / <unk> / <unk> / mainactivity . java <nl> import android . view . menuitem ; <nl> public class mainactivity extends appcompatactivity { <nl> @ override <nl> protected void oncreate ( bundle ) ; <nl> ( ( bundle savedinstancestate ) { <nl> super . oncreate ( savedinstancestate ) ; <nl>
ppp b / app / src / main / java / com / github / <unk> / <unk> / mainactivity . java <nl> import android . view . menuitem ; <nl> public class mainactivity extends appcompatactivity { <nl> @ override <nl> protected void oncreate ( bundle ) ; <nl> ( ( bundle savedinstancestate ) { <nl> super . oncreate ( savedinstancestate ; <nl>
ppp b / app / src / main / java / com / github / <unk> / <unk> / mainactivity . java <nl>
ppp b / app / src / main / java / com / github / <unk> / <unk> / mainactivity . java <nl> import android . view . menuitem ; <nl> public class mainactivity extends appcompatactivity { <nl> @ override <nl> protected void oncreate ( bundle ) ; <nl> ( ( bundle savedinstancestate ) { <nl> super . oncreate ( savedinstancestate ) ) ; <nl>
ppp b / app / src / main / java / com / github / <unk> / <unk> / mainactivity . java <nl> import android . view . menuitem ; <nl> public class mainactivity extends appcompatactivity { <nl> @ override <nl> protected void oncreate ( bundle ) ; <nl> ( ( bundle savedinstancestate ) { <nl> super . oncreate ( savedinstancestate ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / py / testdir_single_jvm / <unk> . py <nl> class basic ( unittest . testcase ) : <nl> @ classmethod <nl> def setupclass ( cls ) : <nl> global seed , localhost , <unk> <nl> <unk> = 28 <nl> seed = h2o . setup_random_seed ( ) <nl> localhost = h2o . decide_if_localhost ( ) <nl> if ( localhost ) : <nl>
ppp b / py / testdir_single_jvm / <unk> . py <nl> class basic ( unittest . testcase ) : <nl> @ classmethod <nl> def setupclass ( cls ) : <nl> global seed , localhost , <unk> <nl> <unk> = 28 <nl> seed = h2o . setup_random_seed ( ) <nl> localhost = h2o . decide_if_localhost ( ) <nl> if ( localhost ) <nl>
ppp b / py / testdir_single_jvm / <unk> . py <nl> class basic ( unittest . testcase ) : <nl> @ classmethod <nl> def setupclass ( cls ) : <nl> global seed , localhost , <unk> <nl> <unk> = 28 <nl> seed = h2o . setup_random_seed ( ) <nl> localhost = h2o . decide_if_localhost ( ) <nl> if ( localhost ) ) <nl>
ppp b / py / testdir_single_jvm / <unk> . py <nl> class basic ( unittest . testcase ) : <nl> @ classmethod <nl> def setupclass ( cls ) : <nl> global seed , localhost , <unk> <nl> <unk> = 28 <nl> seed = h2o . setup_random_seed ( ) <nl> localhost = h2o . decide_if_localhost ( ) <nl> if ( localhost ) { <nl>
ppp b / py / testdir_single_jvm / <unk> . py <nl> class basic ( unittest . testcase ) : <nl> @ classmethod <nl> def setupclass ( cls ) : <nl> global seed , localhost , <unk> <nl> <unk> = 28 <nl> seed = h2o . setup_random_seed ( ) <nl> localhost = h2o . decide_if_localhost ( ) <nl> if ( localhost ) : : <nl>
====NEW EXAMPLE====
ppp b / ratpack - jdbc - tx / src / main / java / ratpack / <unk> / internal / <unk> . java <nl> public class <unk> implements transaction { <nl> @ override <nl> public transaction <unk> ( boolean <unk> ) { <nl> this . <unk> = true ; <nl> return this ; <nl> } <nl>
ppp b / ratpack - jdbc - tx / src / main / java / ratpack / <unk> / internal / <unk> . java <nl> public class <unk> implements transaction { <nl> @ override <nl> public transaction <unk> ( boolean <unk> ) { <nl> this . <unk> = true ; <nl> return this ; <nl> } <nl> <nl>
ppp b / ratpack - jdbc - tx / src / main / java / ratpack / <unk> / internal / <unk> . java <nl> public class <unk> implements transaction { <nl> @ override <nl> public transaction <unk> ( boolean <unk> ) { <nl> this . <unk> = true ; <nl> return this ; <nl>
ppp b / ratpack - jdbc - tx / src / main / java / ratpack / <unk> / internal / <unk> . java <nl> public class <unk> implements transaction { <nl> @ override <nl> public transaction <unk> ( boolean <unk> ) { <nl> this . <unk> = true ; <nl> return this ; <nl> <nl>
ppp b / ratpack - jdbc - tx / src / main / java / ratpack / <unk> / internal / <unk> . java <nl> public class <unk> implements transaction { <nl> @ override <nl> public transaction <unk> ( boolean <unk> ) { <nl> this . <unk> = true ; <nl> return this ; <nl> }
====NEW EXAMPLE====
ppp b / src / org / wordpress / android / <unk> . java <nl> public class <unk> extends activity implements onclicklistener , <nl> } <nl> } ) . create ( ) ; <nl> <unk> . show ( ) ; <nl> <unk> ( ) ; <nl> <unk> = false ; <nl> return true ; <nl> } <nl>
ppp b / src / org / wordpress / android / <unk> . java <nl> public class <unk> extends activity implements onclicklistener , <nl> } <nl> } ) . create ( ) ; <nl> <unk> . show ( ) ; <nl> <unk> ( ) ; <nl> <unk> = false ; <nl> return true ; <nl> } <nl> <nl>
ppp b / src / org / wordpress / android / <unk> . java <nl> public class <unk> extends activity implements onclicklistener , <nl> } <nl> } ) . create ( ) ; <nl> <unk> . show ( ) ; <nl> <unk> ( ) ; <nl> <unk> = false ; <nl> return true ; <nl>
ppp b / src / org / wordpress / android / <unk> . java <nl> public class <unk> extends activity implements onclicklistener , <nl> } <nl> } ) . create ( ) ; <nl> <unk> . show ( ) ; <nl> <unk> ( ) ; <nl> <unk> = false ; <nl> return true ; <nl> }
ppp b / src / org / wordpress / android / <unk> . java <nl> public class <unk> extends activity implements onclicklistener , <nl> } <nl> } ) . create ( ) ; <nl> <unk> . show ( ) ; <nl> <unk> ( ) ; <nl> <unk> = false ; <nl> return true ; <nl> <nl>
====NEW EXAMPLE====
ppp b / libs / hwui / gammafontrenderer . h <nl> public : <nl> void clear ( ) { <nl> delete mrenderer ; <nl> } <nl> ; <nl> } <nl> void flush ( ) { <nl>
ppp b / libs / hwui / gammafontrenderer . h <nl> public : <nl> void clear ( ) { <nl> delete mrenderer ; <nl> } <nl> ; <nl> } <nl> void flush ( ) ) <nl>
ppp b / libs / hwui / gammafontrenderer . h <nl> public : <nl> void clear ( ) { <nl> delete mrenderer ; <nl> } <nl> ; <nl> } <nl>
ppp b / libs / hwui / gammafontrenderer . h <nl> public : <nl> void clear ( ) { <nl> delete mrenderer ; <nl> } <nl> ; <nl> } <nl> void flush ( ) <nl>
ppp b / libs / hwui / gammafontrenderer . h <nl> public : <nl> void clear ( ) { <nl> delete mrenderer ; <nl> } <nl> ; <nl> } <nl> void flush ( ) { <nl> <nl>
====NEW EXAMPLE====
ppp b
ppp b / . gitignore <nl>
ppp
ppp b / . gitignore <nl> data / <nl> meta - inf / manifest . mf <nl> gc . log <nl> <unk> . idea <nl> * . iws <nl> <unk> $ _ * <nl>
ppp b / . gitignore <nl> data / <nl> meta - inf / manifest . mf <nl> gc . log <nl> <unk> . idea <nl> * . iws <nl> <unk> $ _ _ <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> gen / <unk> / languages / im . actor . apilanguage / classes_gen <nl> gen / <unk> / languages / im actor . apilanguage / source_gen <nl>
ppp b / . gitignore <nl> gen / <unk> / languages / im . actor . apilanguage / classes_gen <nl> gen / <unk> / languages / im actor . apilanguage /
ppp b / . gitignore <nl> gen / <unk> / languages / im . actor . apilanguage / classes_gen <nl> gen / <unk> / languages / im actor . apilanguage / / <nl>
ppp b / . gitignore <nl> gen / <unk> / languages / im . actor . apilanguage / classes_gen <nl> gen / <unk> / languages / im actor . apilanguage / <nl>
ppp b / . gitignore <nl> gen / <unk> / languages /
====NEW EXAMPLE====
ppp b / src / bin / startgroovy <nl> lateinit ( ) { <nl> } <nl> <unk> = ~ / . groovy / startup <nl> if [ - r $ <unk> ] ; <nl> then ; <nl> then <nl> . $ <unk> <nl> fi <nl> <unk> <nl>
ppp b / src / bin / startgroovy <nl> lateinit ( ) { <nl> } <nl> <unk> = ~ / . groovy / startup <nl> if [ - r $ <unk> ] ; <nl> then ; <nl> then <nl> . $ <unk> <nl> fi <nl>
ppp b / src / bin / startgroovy <nl> lateinit ( ) { <nl> } <nl> <unk> = ~ / . groovy / startup <nl> if [ - r $ <unk> ] ; <nl> then ; <nl> then <nl> . $ <unk> <nl> fi <nl> <nl>
ppp b / src / bin / startgroovy <nl> lateinit ( ) { <nl> } <nl> <unk> = ~ / . groovy / startup <nl> if [ - r $ <unk> ] ; <nl> then ; <nl> then <nl> . $ <unk> <nl> fi <unk> <nl>
ppp b / src / bin / startgroovy <nl> lateinit ( ) { <nl> } <nl> <unk> = ~ / . groovy / startup <nl> if [ - r $ <unk> ] ; <nl> then ; <nl> then <nl> . $ <unk> <nl> fi <nl> <unk>
====NEW EXAMPLE====
ppp b / src / com / fsck / k9 / controller / <unk> . java <nl> public class <unk> implements runnable <nl> <unk> . open ( <unk> . <unk> ) ; <nl> int <unk> = <unk> . <unk> ( ) ; <nl> if ( { <nl> return ; <nl> } <nl>
ppp b / src / com / fsck / k9 / controller / <unk> . java <nl> public class <unk> implements runnable <nl> <unk> . open ( <unk> . <unk> ) ; <nl> int <unk> = <unk> . <unk> ( ) ; <nl> if ( { <nl> return ; <nl>
ppp b / src / com / fsck / k9 / controller / <unk> . java <nl> public class <unk> implements runnable <nl> <unk> . open ( <unk> . <unk> ) ; <nl> int <unk> = <unk> . <unk> ( ) ; <nl>
ppp b / src / com / fsck / k9 / controller / <unk> . java <nl> public class <unk> implements runnable <nl> <unk> . open ( <unk> . <unk> ) ; <nl> int <unk> = <unk> . <unk> ( ) ; <nl> if ( { <nl> return true ; <nl>
ppp b / src / com / fsck / k9 / controller / <unk> . java <nl> public class <unk> implements runnable <nl> <unk> . open ( <unk> . <unk> ) ; <nl> int <unk> = <unk> . <unk> ( ) ) ; <nl>
====NEW EXAMPLE====
ppp b / src / checkstyle / com / puppycrawl / tools / checkstyle / <unk> . dtd <nl> < ! element suppress empty > <nl> < ! attlist suppress files cdata # required <nl> checks cdata # required <nl> lines cdata # implied <nl> columns cdata # implied > <nl>
ppp b / src / checkstyle / com / puppycrawl / tools / checkstyle / <unk> . dtd <nl> < ! element suppress empty > <nl> < ! attlist suppress files cdata # required <nl> checks cdata # required <nl> lines cdata # implied <nl> columns cdata # implied <nl>
ppp b / src / checkstyle / com / puppycrawl / tools / checkstyle / <unk> . dtd <nl> < ! element suppress empty > <nl> < ! attlist suppress files cdata # required <nl> checks cdata # required <nl> lines cdata # implied <nl> columns cdata # implied > > <nl>
ppp b / src / checkstyle / com / puppycrawl / tools / checkstyle / <unk> . dtd <nl> < ! element suppress empty > <nl> < ! attlist suppress files cdata # required <nl> checks cdata # required <nl> lines cdata # implied <nl> columns cdata # implied > <nl> <nl>
ppp b / src / checkstyle / com / puppycrawl / tools / checkstyle / <unk> . dtd <nl> < ! element suppress empty > <nl> < ! attlist suppress files cdata # required <nl> checks cdata # required <nl> lines cdata # implied <nl> columns cdata # implied >
====NEW EXAMPLE====
ppp b / driver - core / src / test / functional / com / mongodb / operation / <unk> . groovy <nl> class <unk> extends <unk> { <nl>
ppp b / driver - core / src / test / functional / com / mongodb / operation / <unk> . groovy <nl>
ppp b / driver - core / src / test / functional / com / mongodb / operation / <unk> . groovy <nl> class <unk> extends <unk> <nl>

ppp b / driver - core / src / test / functional / com / mongodb / operation / <unk> . groovy <nl> class <unk> extends <unk> { <nl> document . remove ( ' millis ' ) <nl> document . remove ( ' <unk> ' ) <nl> document . remove ( ' <unk> ' ) ; <nl> document . ( ' <unk> ' ) <nl> document <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8599b6cd8a32c8334e84db9a23861b8877c07478 <nl> mode = push <nl> parent = d32e03c98052870f70497b97a9207c10c68de222 <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8599b6cd8a32c8334e84db9a23861b8877c07478 <nl> mode = push <nl> parent = d32e03c98052870f70497b97a9207c10c68de222 <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8599b6cd8a32c8334e84db9a23861b8877c07478 <nl> mode = push <nl> parent = d32e03c98052870f70497b97a9207c10c68de222 <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / core / jni / android_media_audiosystem . cpp <nl> <unk> ( jnienv * env , jobject thiz , jint source ) <nl> static jint <nl> <unk> ( jnienv * env , jobject thiz ) <nl> { <nl> return audiosystem : : : <unk> ( ) ; <nl> } <nl> static jint <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> <unk> ( jnienv * env , jobject thiz , jint source ) <nl> static jint <nl> <unk> ( jnienv * env , jobject thiz ) <nl> { <nl> return audiosystem : : : <unk> ( ) ; <nl> } <nl> static jint jint <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> <unk> ( jnienv * env , jobject thiz , jint source ) <nl> static jint <nl> <unk> ( jnienv * env , jobject thiz ) <nl> { <nl> return audiosystem : : : <unk> ( ) ; <nl> } <nl> static jint
ppp b / core / jni / android_media_audiosystem . cpp <nl> <unk> ( jnienv * env , jobject thiz , jint source ) <nl> static jint <nl> <unk> ( jnienv * env , jobject thiz ) <nl> { <nl> return audiosystem : : : <unk> ( ) ; <nl> } <nl> static <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> <unk> ( jnienv * env , jobject thiz , jint source ) <nl> static jint <nl> <unk> ( jnienv * env , jobject thiz ) <nl> { <nl> return audiosystem : : : <unk> ( ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / version . txt <nl>
ppp b
ppp
ppp b / version . txt <nl> jetty - 8 . 0 . 1 . v20110908 - 08 september 2011 <nl> if ( https : change this . svg ? branch this . svg ? branch = 43653 <nl>
ppp b / version . txt <nl> jetty - 8 . 0 . 1 . v20110908 - 08 september 2011 <nl> if ( https : change this . svg ? branch / github . svg ? branch requirements on jdk : <nl>
====NEW EXAMPLE====
ppp b / seriesguide / src / com / battlelancer / seriesguide / seriesguideapplication . java <nl> package com . battlelancer . seriesguide ; <nl>
ppp b / seriesguide / src / com / battlelancer / seriesguide / seriesguideapplication . java <nl>
ppp b / seriesguide / src / com / battlelancer / seriesguide / seriesguideapplication . java <nl> package com . battlelancer . seriesguide ; <nl> import com . battlelancer . seriesguide . ui . <unk> ; <nl> import com . battlelancer . seriesguide . util . <unk> ; <nl> com . com . . . util . <unk> ; <nl> import com . battlelancer . seriesguide . util . utils ; <nl>
ppp b / seriesguide / src / com / battlelancer / seriesguide / seriesguideapplication . java <nl> package com . battlelancer . seriesguide <nl>

====NEW EXAMPLE====
ppp b / gradle . properties <nl> version = 1 . 8 . 23 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = please_set_in_home_dir_if_uploading_to_maven_central <nl>
ppp b / gradle . properties <nl> version = 1 . 8 . 23 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = please_set_in_home_dir_if_uploading_to_maven_central <nl> <nl>
ppp b / gradle . properties <nl> version = 1 . 8 . 23 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = 262144 <nl>
ppp b / gradle . properties <nl> version = 1 . 8 . 23 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = please_set_in_home_dir_if_uploading_to_maven_central please_set_in_home_dir_if_uploading_to_maven_central <nl>
ppp b / gradle . properties <nl> version = 1 . 8 . 23 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = 600m <nl>
====NEW EXAMPLE====
ppp b / plugins / groovy / resources / conf / console . txt <nl> try { <nl> system . out . println result <nl> } <nl> } <nl> catch ( e ) { <nl> e . printstacktrace ( ( ) <nl> } <nl> \ no newline at end of file <nl>
ppp b / plugins / groovy / resources / conf / console . txt <nl> try { <nl> system . out . println result <nl> } <nl> } <nl> catch ( e ) { <nl> e . printstacktrace ( ( ) <nl> } <nl> <nl> \ no newline at end of file <nl>
ppp b / plugins / groovy / resources / conf / console . txt <nl> try { <nl> system . out . println result <nl> } <nl> } <nl> catch ( e ) { <nl> e . printstacktrace ( ( ) <nl> } <nl>
ppp b / plugins / groovy / resources / conf / console . txt <nl> try { <nl> system . out . println result <nl> } <nl> } <nl> catch ( e ) { <nl> e . printstacktrace ( ( ) <nl> } <nl> \ no newline end of file <nl>
ppp b / plugins / groovy / resources / conf / console . txt <nl> try { <nl> system . out . println result <nl> } <nl> } <nl> catch ( e ) { <nl> e . printstacktrace ( ( ) <nl> } <nl> \ no newline at of file <nl>
====NEW EXAMPLE====
ppp b / src / rajawali / primitives / sphere . java <nl> import rajawali . baseobject3d ; <nl> public class sphere extends baseobject3d { <nl> private final float <unk> = 3 . <unk> ; <nl> private static final float <unk> ; <nl> private int <unk> ; <nl> private int <unk> ; <nl>
ppp b / src / rajawali / primitives / sphere . java <nl> import rajawali . baseobject3d ; <nl> public class sphere extends baseobject3d { <nl> private final float <unk> = 3 . <unk> ; <nl> private static final float <unk> ; <nl> private int <unk> ; <nl> private int <unk> ; ; <nl>
ppp b / src / rajawali / primitives / sphere . java <nl> import rajawali . baseobject3d ; <nl> public class sphere extends baseobject3d { <nl> private final float <unk> = 3 . <unk> ; <nl> private static final float <unk> ; <nl> private int <unk> ; <nl> private int <unk> ; <nl> <nl>
ppp b / src / rajawali / primitives / sphere . java <nl> import rajawali . baseobject3d ; <nl> public class sphere extends baseobject3d { <nl> private final float <unk> = 3 . <unk> ; <nl> private static final float <unk> ; <nl> private int <unk> ; <nl> private int <unk> ; <nl> ; <nl>
ppp b / src / rajawali / primitives / sphere . java <nl> import rajawali . baseobject3d ; <nl> public class sphere extends baseobject3d { <nl> private final float <unk> = 3 . <unk> ; <nl> private static final float <unk> ; <nl> private int <unk> ; <nl> private int <unk> ;
====NEW EXAMPLE====
ppp b / gradle / <unk> . gradle <nl> * / <nl> plugins . withtype ( <unk> ) { <nl> ext . <unk> = " $ { rootproject . builddir . touri ( ) } localrepo " <nl> install { <nl> repositories { <nl>
ppp b / gradle / <unk> . gradle <nl> * / <nl> plugins . withtype ( <unk> ) { <nl> ext . <unk> = " $ { rootproject . builddir . touri ( ) } localrepo " <nl> install { <nl> repositories { <nl> { <nl>
ppp b / gradle / <unk> . gradle <nl> * / <nl> plugins . withtype ( <unk> ) { <nl> ext . <unk> = " $ { rootproject . builddir . touri ( ) } localrepo " <nl> install { <nl> repositories { { <nl>
ppp b / gradle / <unk> . gradle <nl> * / <nl> plugins . withtype ( <unk> ) { <nl> ext . <unk> = " $ { rootproject . builddir . touri ( ) } localrepo " <nl> install { <nl> repositories { <nl> <nl>
ppp b / gradle / <unk> . gradle <nl> * / <nl> plugins . withtype ( <unk> ) { <nl> ext . <unk> = " $ { rootproject . builddir . touri ( ) } localrepo " <nl> install { <nl>
====NEW EXAMPLE====
ppp b / core / java / android / view / windowmanager . java <nl> public interface windowmanager extends viewmanager { <nl> * the device supports it . <nl> * @ hide <nl> * / <nl> public static final int <unk> = <unk> ; <nl> / * * <nl> * control flags that are private to the platform . <nl>
ppp b / core / java / android / view / windowmanager . java <nl> public interface windowmanager extends viewmanager { <nl> * the device supports it . <nl> * @ hide <nl> * / <nl> public static final int <unk> = <unk> ; <nl> / * * <nl> * control flags that are private to the platform platform <nl>
ppp b / core / java / android / view / windowmanager . java <nl> public interface windowmanager extends viewmanager { <nl> * the device supports it . <nl> * @ hide <nl> * / <nl> public static final int <unk> = <unk> ; <nl> / * * <nl> * control flags that are private to the platform . . <nl>
ppp b / core / java / android / view / windowmanager . java <nl> public interface windowmanager extends viewmanager { <nl> * the device supports it . <nl> * @ hide <nl> * / <nl> public static final int <unk> = <unk> ; <nl> / * * <nl> * control flags that are private to the platform <nl>
ppp b / core / java / android / view / windowmanager . java <nl> public interface windowmanager extends viewmanager { <nl> * the device supports it . <nl> * @ hide <nl> * / <nl> public static final int <unk> = <unk> ; <nl> / * * <nl> * control flags that are private to the platform .
====NEW EXAMPLE====
ppp b / gradle . properties <nl> pom_licence_name = the apache software license , version 2 . 0 <nl> pom_licence_url = http : / / www . apache . org / licenses / license - 2 . 0 . txt <nl> pom_licence_dist = repo <nl> pom_developer_id = mrengineer13 <nl> pom_developer_name = <unk> <unk> <nl> \ no newline at end of file <nl>
ppp b / gradle . properties <nl> pom_licence_name = the apache software license , version 2 . 0 <nl> pom_licence_url = http : / / www . apache . org / licenses / license - 2 . 0 . txt <nl> pom_licence_dist = repo <nl> pom_developer_id = mrengineer13 <nl> pom_developer_name = <unk> <nl> \ no newline at end of file <nl>
ppp b / gradle . properties <nl> pom_licence_name = the apache software license , version 2 . 0 <nl> pom_licence_url = http : / / www . apache . org / licenses / license - 2 . 0 . txt <nl> pom_licence_dist = repo <nl> pom_developer_id = mrengineer13 <nl> pom_developer_name = <unk> <unk> no newline at end of file <nl>
ppp b / gradle . properties <nl> pom_licence_name = the apache software license , version 2 . 0 <nl> pom_licence_url = http : / / www . apache . org / licenses / license - 2 . 0 . txt <nl> pom_licence_dist = repo <nl> pom_developer_id = mrengineer13 <nl> pom_developer_name = <unk> <unk> \ no newline at end of file <nl>
ppp b / gradle . properties <nl> pom_licence_name = the apache software license , version 2 . 0 <nl> pom_licence_url = http : / / www . apache . org / licenses / license - 2 . 0 . txt <nl> pom_licence_dist = repo <nl> pom_developer_id = mrengineer13 <nl> pom_developer_name = <unk> <unk> <nl> newline at end of file <nl>
====NEW EXAMPLE====
ppp b / ratpack - metrics / src / main / resources / meta - inf / aop . xml <nl> < <unk> > <nl> < <unk> name = " org . ratpackframework . metrics . <unk> " > <nl> \ no newline at end of file <nl> <unk> > <nl> < < aspectj > <nl> \ no newline at end of file <nl>
ppp b / ratpack - metrics / src / main / resources / meta - inf / aop . xml <nl> < <unk> > <nl>
ppp b / ratpack - metrics / src / main / resources / meta - inf / aop . xml <nl> < <unk> > <nl> < <unk> name = " org . ratpackframework . metrics . <unk> " > <nl> \ no newline at end of file <nl> <unk> > <nl> < < aspectj > <nl>
ppp b / ratpack - metrics / src / main / resources / meta - inf / aop . xml <nl> < <unk> > <nl> < <unk> name = " org . ratpackframework . metrics . <unk> " > <nl> \ no newline at end of file <nl> <unk> > <nl> < < aspectj > > <nl>
ppp b / ratpack - metrics / src / main / resources / meta - inf / aop . xml <nl> < <unk> > <nl> < <unk> name = " org . ratpackframework . metrics . <unk> " > <nl> \ no newline at end of file <nl> <unk> > <nl> < < aspectj > <nl> \ no newline end of file <nl>
====NEW EXAMPLE====
ppp b / integration - tests / src / test / java / tachyon / master / <unk> . java <nl> public class <unk> { <nl> } <nl> } <nl> @ override <nl> @ suppresswarnings ( ) { <nl> } <nl> } <nl> } <nl> @ test <nl> public void <unk> ( ) throws ioexception , texception { <nl> int clients = 10 ; <nl>
ppp b / integration - tests / src / test / java / tachyon / master / <unk> . java <nl> public class <unk> { <nl> } <nl> } <nl> @ override <nl> @ suppresswarnings ( ) { <nl> } <nl> } <nl> } <nl> @ test <nl> public void <unk> ( ) throws ioexception , texception { <nl> int clients = ; <nl>
ppp b / integration - tests / src / test / java / tachyon / master / <unk> . java <nl> public class <unk> { <nl> } <nl> } <nl> @ override <nl> @ suppresswarnings ( ) { <nl> } <nl> } <nl> } <nl> @ test <nl> public void <unk> ( ) throws ioexception , texception { <nl> int clients = 10 ; ; <nl>
ppp b / integration - tests / src / test / java / tachyon / master / <unk> . java <nl> public class <unk> { <nl> } <nl> } <nl> @ override <nl> @ suppresswarnings ( ) { <nl> } <nl> } <nl> } <nl> @ test <nl> public void <unk> ( ) throws ioexception , texception { <nl> int clients = 10 ; <nl> ; <nl>
ppp b / integration - tests / src / test / java / tachyon / master / <unk> . java <nl> public class <unk> { <nl> } <nl> } <nl> @ override <nl> @ suppresswarnings ( ) { <nl> } <nl> } <nl> } <nl> @ test <nl> public void <unk> ( ) throws ioexception , texception { <nl> int clients = 10 ; <nl> <nl>
====NEW EXAMPLE====
ppp b / package . json <nl> " patents " , <nl> " readme . md " , <nl> " <unk> " , <nl>
ppp b / package . json <nl> " patents " , <nl> " readme . md " , <nl> " <unk> " , <nl> "
ppp b / package . json <nl> " patents " , <nl> " readme . md " , <nl> " <unk> " , <nl> " .
ppp b / package . json <nl> " patents " , <nl> " readme . md " , <nl> " <unk> " <nl>
ppp b / package . json <nl> " patents " , <nl> " readme . md " , <nl>
====NEW EXAMPLE====
ppp b / changelog <nl> * fixed possible crash in ( native ) zip <unk> <nl> * <unk> possible npe in <unk> <nl>
ppp b / changelog <nl> * fixed possible crash in ( native ) zip <unk> <nl>
ppp

ppp b / changelog <nl> * fixed possible crash in ( native ) zip <unk> <nl> * <unk> possible npe in <unk> <nl> * new style number picker preference ( android 3 + ) <nl> * updated czech localisation not like unexpected paragraph ends to be used by matthias dill ) <nl> ) <nl> = = = = = 2 . 5 . 4 ( jul 24 , 2015 = = = = = = = <nl> * fixed possible <unk> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0e35ad498dc09bfc613c8d9962c47218a570ea66 <nl> mode = push <nl> parent = b0f5474da3c7dcc868e63559c405ab742fd16970 <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0e35ad498dc09bfc613c8d9962c47218a570ea66 <nl> mode = push <nl> parent = b0f5474da3c7dcc868e63559c405ab742fd16970 <nl> remote = git @ github . com : liferay / com - liferay - login - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0e35ad498dc09bfc613c8d9962c47218a570ea66 <nl> mode = push <nl> parent = b0f5474da3c7dcc868e63559c405ab742fd16970 <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> then add a library dependency in the same ` build . gradle ` : <nl> ` ` ` <nl> dependencies { <nl> compile ' com . <unk> . once : once : 0 . 0 . 1 ' <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> then add a library dependency in the same ` build . gradle ` : <nl> ` ` ` <nl> dependencies { <nl> compile ' com . <unk> . once : once : 0 . 0 . 1 ' <nl> } <nl> ` ` ` ` <nl>
ppp b / readme . md <nl> then add a library dependency in the same ` build . gradle ` : <nl> ` ` ` <nl> dependencies { <nl> compile ' com . <unk> . once : once : 0 . 0 . 1 ' <nl> } <nl> ` ` <nl>
ppp b / readme . md <nl> then add a library dependency in the same ` build . gradle ` : <nl> ` ` ` <nl> dependencies { <nl> compile ' com . <unk> . once : once : 0 . 0 . 1 ' <nl> } <nl> ` ` ` <nl> <nl>
ppp b / readme . md <nl> then add a library dependency in the same ` build . gradle ` : <nl> ` ` ` <nl> dependencies { <nl> compile ' com . <unk> . once : once : 0 . 0 . 1 ' <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c2274057d712657b0b056e396b8ebd4fe04f52e2 <nl> mode = push <nl> parent = 2c5b606ebeb13e565c1f90298bc3547f52fb6637 <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c2274057d712657b0b056e396b8ebd4fe04f52e2 <nl> mode = push <nl> parent = 2c5b606ebeb13e565c1f90298bc3547f52fb6637 <nl> remote = git @ github . com : liferay / com - liferay - portal - template git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / main / java / eu / siacs / conversations / crypto / axolotl / <unk> . java <nl>
ppp b / src / main / java / eu / siacs / conversations / crypto / axolotl / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl> this . <unk> . put ( jid , <unk> ) ; <nl> <unk> . <unk> ( ) ; <nl> jid , <unk> ) ; <nl> <unk> . <unk> ( null ) ; <nl> } <nl>
ppp b / src / main / java / eu / siacs / conversations / crypto / axolotl / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl> this . <unk> . put ( jid , <unk> ) ; <nl> <unk> . <unk> ( ) ; <nl> jid , <unk> ) ; <nl> <unk> . <unk> ( null ) ; <nl> } <nl> <nl>
ppp b / src / main / java / eu / siacs / conversations / crypto / axolotl / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl> this . <unk> . put ( jid , <unk> ) ; <nl> <unk> . <unk> ( ) ; <nl> jid , <unk> ) ; <nl> <unk> . <unk> ( null ) ; <nl>
ppp b / src / main / java / eu / siacs / conversations / crypto / axolotl / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl> this . <unk> . put ( jid , <unk> ) ; <nl> <unk> . <unk> ( ) ; <nl> jid , <unk> ) ; <nl> <unk> . <unk> ( null ) ; <nl> }
====NEW EXAMPLE====
ppp b / changelog <nl> * georgian localization ( by bookland . ge ) <nl> * interface language option <nl>
ppp b / changelog <nl> * georgian localization ( by bookland . ge ) <nl>

ppp b / changelog <nl> * georgian localization ( by bookland . ge ) <nl> * interface language option <nl> * book sort order in library skips leading articles <nl> = = = = = 1 . 7 = = = = = = = 1 . 7 . 3 ( mar 04 , 2013 ) = = = = = <nl> * library service does not work in background after program closing <nl>
ppp b / changelog <nl> * georgian localization ( by bookland . ge ) <nl> * interface language option <nl> * book sort order in library skips leading articles <nl> = = = = = 1 . 7 = = = = = = = 1 . 7 . 3 ( mar 04 , 2013 ) = = = = = <nl> * library service does not work in background after program closing closing <nl>
====NEW EXAMPLE====
ppp b / src / main / java / com / sk89q / worldedit / math / transform / <unk> . java <nl> public class <unk> implements transform { <nl> if ( other instanceof <unk> ) { <nl> return this ; <nl> } else { <nl> return ; <nl> } <nl> } <nl> } <nl>
ppp b / src / main / java / com / sk89q / worldedit / math / transform / <unk> . java <nl> public class <unk> implements transform { <nl> if ( other instanceof <unk> ) { <nl> return this ; <nl> } else { <nl> return ; <nl> } <nl> } <nl>
ppp b / src / main / java / com / sk89q / worldedit / math / transform / <unk> . java <nl> public class <unk> implements transform { <nl> if ( other instanceof <unk> ) { <nl> return this ; <nl> } else { <nl>
ppp b / src / main / java / com / sk89q / worldedit / math / transform / <unk> . java <nl> public class <unk> implements transform { <nl> if ( other instanceof <unk> ) { <nl> return this ; <nl> } else { <nl> return ; <nl> } <nl> } <nl> <nl>
ppp b / src / main / java / com / sk89q / worldedit / math / transform / <unk> . java <nl> public class <unk> implements transform { <nl> if ( other instanceof <unk> ) { <nl> return this ; <nl> } else { <nl> return ; <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < artifactid > aws - java - sdk - s3 < / artifactid > <nl>
ppp b / pom . xml <nl> < artifactid > aws - java - sdk - s3 < / artifactid > <nl> < version > 1 . 9 . 39 < / version > <nl> < / dependency > <nl> ` <nl> ! - - - logging library , implements slf4j logging api - > <nl> < dependency > <nl> < groupid > ch . <unk> . logback < / groupid > <nl>
ppp b / pom . xml <nl> < artifactid > aws - java - sdk - s3 < / artifactid > <nl> < version > 1 . 9 . 39 < / version > <nl> < / dependency > <nl> ` <nl> ! - - - logging library , implements slf4j logging api - > <nl> < dependency > <nl> < groupid > ch . <unk> . logback < / > <nl>
ppp b / pom . xml <nl>

====NEW EXAMPLE====
ppp b / changelog <nl> 1 . 24 . 3 <nl>
ppp b / changelog <nl> 1 . 24 . <nl>
ppp b / changelog <nl> 1 . 24 . 3
ppp b / changelog <nl>

====NEW EXAMPLE====
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - login - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0
ppp

====NEW EXAMPLE====
ppp b / <unk> / build . gradle <nl> android { <nl> uploadarchives { <nl> repositories . mavendeployer { <nl> pom . groupid = ' com . <unk> ' <nl> pom . artifactid = ' <unk> ' <nl> pom . version = android . defaultconfig . versionname <nl> repository ( url : " file : . / releases / " ) <nl>
ppp b / <unk> / build . gradle <nl> android { <nl> uploadarchives { <nl> repositories . mavendeployer { <nl> pom . groupid = ' com . <unk> ' <nl> pom . artifactid = ' <unk> ' <nl> pom . version = android . defaultconfig . versionname <nl> repository ( url : " file : . / releases / " " <nl>
ppp b / <unk> / build . gradle <nl> android { <nl> uploadarchives { <nl> repositories . mavendeployer { <nl> pom . groupid = ' com . <unk> ' <nl> pom . artifactid = ' <unk> ' <nl> pom . version = android . defaultconfig . versionname <nl> repository ( url : " file : . / releases / " <nl>
ppp b / <unk> / build . gradle <nl> android { <nl> uploadarchives { <nl> repositories . mavendeployer { <nl> pom . groupid = ' com . <unk> ' <nl> pom . artifactid = ' <unk> ' <nl> pom . version = android . defaultconfig . versionname <nl> repository ( url : " file : . / releases / " ) ) <nl>
ppp b / <unk> / build . gradle <nl> android { <nl> uploadarchives { <nl> repositories . mavendeployer { <nl> pom . groupid = ' com . <unk> ' <nl> pom . artifactid = ' <unk> ' <nl> pom . version = android . defaultconfig . versionname <nl> repository ( url : " file : . / releases / ) <nl>
====NEW EXAMPLE====
ppp b / readme . markdown <nl> custom <unk> layouts and data mappings < br / > <nl> long press support < br / > <nl> trackball support ( not tested ) < br / > <nl> focus events ( not tested ) < / / > <nl> > <nl> license <nl> _______ <nl>
ppp b / readme . markdown <nl> custom <unk> layouts and data mappings < br / > <nl> long press support < br / > <nl> trackball support ( not tested ) < br / > <nl> focus events ( not tested ) < / / > <nl> > <nl> license <nl> _______ _______ <nl>
ppp b / readme . markdown <nl> custom <unk> layouts and data mappings < br / > <nl> long press support < br / > <nl> trackball support ( not tested ) < br / > <nl> focus events ( not tested ) < / / > <nl> > <nl> license <nl>
ppp b / readme . markdown <nl> custom <unk> layouts and data mappings < br / > <nl> long press support < br / > <nl> trackball support ( not tested ) < br / > <nl> focus events ( not tested ) < / / > <nl> > <nl> license <nl> <nl>
ppp b / readme . markdown <nl> custom <unk> layouts and data mappings < br / > <nl> long press support < br / > <nl> trackball support ( not tested ) < br / > <nl> focus events ( not tested ) < / / > <nl> > <nl> license <nl> _______ <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / static / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d391a99320bf0df5270c346cc05babb7b044d877 <nl> mode = push <nl> parent = af2f5a46a32be6bad0311a9e66d3df9644bfad42 <nl> remote = git @ github . com : liferay / com - liferay - osgi . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / static / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / static / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / static / osgi / . gitrepo <nl> ; <nl>
ppp b / modules / apps / static / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d391a99320bf0df5270c346cc05babb7b044d877 <nl> mode = push <nl> parent = af2f5a46a32be6bad0311a9e66d3df9644bfad42 <nl> remote = git @ github . com : liferay / com - liferay - osgi . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> # send to container based infrastructure : http : / / docs . travis - ci . com / user / workers / container - based - infrastructure / <nl> sudo : false <nl> cache : <nl> directories : <nl> * updated french translation <nl> $ home / . m2 <nl> install : true <nl>
ppp b / . travis . yml <nl> # send to container based infrastructure : http : / / docs . travis - ci . com / user / workers / container - based - infrastructure / <nl> sudo : false <nl> cache : <nl> directories : <nl> * updated french translation <nl> $ home / . m2 <nl> install : <nl>
ppp b / . travis . yml <nl> # send to container based infrastructure : http : / / docs . travis - ci . com / user / workers / container - based - infrastructure / <nl> sudo : false <nl> cache : <nl> directories : <nl> * updated french translation <nl> $ home / . m2 <nl> install : true true <nl>
ppp b / . travis . yml <nl> # send to container based infrastructure : http : / / docs . travis - ci . com / user / workers / container - based - infrastructure / <nl> sudo : false <nl> cache : <nl> directories : <nl> * updated french translation <nl> $ home / . m2 <nl> install : : <nl>
ppp b / . travis . yml <nl>
====NEW EXAMPLE====
ppp b / driver - compat / src / main / com / mongodb / <unk> . java <nl> public class <unk> { <nl> private <unk> <unk> = <unk> . inline ; <nl> private long <unk> ; <nl> protected builder ( ) { <nl> } <nl> / * * <nl>
ppp b / driver - compat / src / main / com / mongodb / <unk> . java <nl> public class <unk> { <nl> private <unk> <unk> = <unk> . inline ; <nl> private long <unk> ; <nl> protected builder ( ) { <nl> } <nl> / * <nl>
ppp b / driver - compat / src / main / com / mongodb / <unk> . java <nl> public class <unk> { <nl> private <unk> <unk> = <unk> . inline ; <nl> private long <unk> ; <nl> protected builder ( ) { <nl> } <nl> / * *
ppp b / driver - compat / src / main / com / mongodb / <unk> . java <nl> public class <unk> { <nl> private <unk> <unk> = <unk> . inline ; <nl> private long <unk> ; <nl> protected builder ( ) { <nl> } <nl>
ppp b / driver - compat / src / main / com / mongodb / <unk> . java <nl> public class <unk> { <nl> private <unk> <unk> = <unk> . inline ; <nl> private long <unk> ; <nl> protected builder ( ) { <nl> } <nl> / * * <nl> <nl>
====NEW EXAMPLE====
ppp b / itests / src / test / resources / testconfiguration . properties <nl> <unk> . query . files = <unk> . q , \ <nl> <unk> . q , \ <nl> <unk> . q , \ <nl>
ppp b / itests / src / test / resources / testconfiguration . properties <nl> <unk> . query . files = <unk> . q , \ <nl> <unk> . q , \ <nl> <unk> . q , \ \ <nl> . . q \ <nl>
ppp b / itests / src / test / resources / testconfiguration . properties <nl> <unk> . query . files = <unk> . q , \ <nl> <unk> . q , \ <nl> <unk> . q , \ \ <nl> . . , <nl>
ppp b / itests / src / test / resources / testconfiguration . properties <nl> <unk> . query . files = <unk> . q , \ <nl> <unk> . q , \ <nl>
ppp b / itests / src / test / resources / testconfiguration . properties <nl> <unk> . query . files = <unk> . q , \ <nl> <unk> . q , \ <nl> <unk> . q , \ \ <nl> . . q \ <nl> <unk> <nl>
====NEW EXAMPLE====
ppp b / changelog . txt <nl> * allow to add / remove realmchangelisteners in realmchangelisteners . <nl>
ppp b / changelog . txt <nl>

ppp b / changelog . txt <nl> * allow to add / remove realmchangelisteners in realmchangelisteners . <nl> * bug fixed in realm crashing for receiving notifications after close ( ) . <nl> * close the realm instance after <unk> . <nl> 0 . 75 . fairscheduler : continuousschedulingthread can be used by marek pavelka ) <nl> 0 . . . 1 ( 03 december 2014 ) <nl> * changing sort to be an in - place method . <nl>
ppp b / changelog . txt <nl> * allow to add / remove realmchangelisteners in realmchangelisteners . <nl> * bug fixed in realm crashing for receiving notifications after close ( ) . <nl> * close the realm instance after <unk> . <nl> 0 . 75 . fairscheduler : continuousschedulingthread can be used by marek pavelka ) <nl> 0 . . . 1 ( 03 december 2014 ) <nl> * changing sort to be an in - place method . . <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / test . properties <nl> blogs , \ <nl> documents management , \ <nl> <unk> base , \ <nl> \ <nl> \ <nl> message boards , \ <nl> notifications , \ <nl> social networking , \ <nl>
ppp b / test . properties <nl> blogs , \ <nl> documents management , \ <nl> <unk> base , \ <nl> \ <nl> \ <nl> message boards , \ <nl> notifications , \ <nl> social networking , , <nl>
ppp b / test . properties <nl> blogs , \ <nl> documents management , \ <nl> <unk> base , \ <nl> \ <nl> \ <nl> message boards , \ <nl> notifications , \ <nl> social networking , <nl>
ppp b / test . properties <nl> blogs , \ <nl> documents management , \ <nl> <unk> base , \ <nl> \ <nl> \ <nl> message boards , \ <nl> notifications , \ <nl> social networking , \ \ <nl>
ppp b / test . properties <nl> blogs , \ <nl> documents management , \ <nl> <unk> base , \ <nl> \ <nl> \ <nl> message boards , \ <nl> notifications , \ <nl> social networking , \ <nl> <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0
ppp
====NEW EXAMPLE====
ppp b / spongecommon <nl> subproject commit <unk> <nl>
ppp b / spongecommon <nl> subproject commit = <nl>
ppp b / spongecommon <nl> subproject commit 4e7c70b2489a96b14039eb30d18fba7b3353b59c <nl>
ppp b / spongecommon <nl> subproject commit 2135c723b4134a94cb5013f497f1bad8ef18deb6 <nl>
ppp b / spongecommon <nl> subproject commit 1e33dfa586ddaa256028d7bcd35675a46ee5806b <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / source / com / intellij / analysis / <unk> . java <nl> public class <unk> implements persistentstatecomponent < <unk> <nl> public string <unk> = " " ; <nl> private final <unk> <unk> ; <nl> public boolean <unk> = false ; <nl> public boolean <unk> = true ; <nl> public boolean <unk> = false ; <nl>
ppp b / source / com / intellij / analysis / <unk> . java <nl> public class <unk> implements persistentstatecomponent < <unk> <nl> public string <unk> = " " ; <nl> private final <unk> <unk> ; <nl> public boolean <unk> = false ; <nl> public boolean <unk> = true ; <nl> public boolean <unk> = false false ; <nl>
ppp b / source / com / intellij / analysis / <unk> . java <nl> public class <unk> implements persistentstatecomponent < <unk> <nl> public string <unk> = " " ; <nl> private final <unk> <unk> ; <nl> public boolean <unk> = false ; <nl> public boolean <unk> = true ; <nl> public boolean <unk> = ; <nl>
ppp b / source / com / intellij / analysis / <unk> . java <nl> public class <unk> implements persistentstatecomponent < <unk> <nl> public string <unk> = " " ; <nl> private final <unk> <unk> ; <nl> public boolean <unk> = false ; <nl> public boolean <unk> = true ; <nl> public boolean <unk> = false ; <nl> <nl>
ppp b / source / com / intellij / analysis / <unk> . java <nl> public class <unk> implements persistentstatecomponent < <unk> <nl> public string <unk> = " " ; <nl> private final <unk> <unk> ; <nl> public boolean <unk> = false ; <nl> public boolean <unk> = true ; <nl> public boolean <unk> = false <nl>
====NEW EXAMPLE====
ppp b / graphics / java / android / renderscript / allocation . java <nl> public class allocation extends baseobj { <nl> / * * <nl>
ppp b / graphics / java / android / renderscript / allocation . java <nl> public class allocation extends baseobj { <nl> / * * <nl> * set a notification handler for <unk> <nl>
ppp b / graphics / java / android / renderscript / allocation . java <nl> public class allocation extends baseobj { <nl>
ppp b / graphics / java / android / renderscript / allocation . java <nl> public class allocation extends baseobj { <nl> / * * <nl> * set a notification handler for <unk> <nl> * <nl> * @ param instance instance the <unk> class to be called <nl> * when buffer <unk> . <nl> * / / <nl> void void <unk> ( <unk> callback ) { <nl>
ppp b / graphics / java / android / renderscript / allocation . java <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 48f8370b486f291732eec810f9765af85d2f882d <nl> mode = push <nl> parent = 5b3ebcc855f5db9720edcdd6a40bfec0734d66c3 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 48f8370b486f291732eec810f9765af85d2f882d <nl> mode = push <nl> parent = 5b3ebcc855f5db9720edcdd6a40bfec0734d66c3 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 48f8370b486f291732eec810f9765af85d2f882d <nl> mode = push <nl> parent = 5b3ebcc855f5db9720edcdd6a40bfec0734d66c3 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / . gitignore <nl> target / <nl> maven maven <nl> * . versionsbackup <nl> * . versionsbackup <nl>
ppp b / . gitignore <nl> target
ppp b / . gitignore <nl> target / <nl> maven maven <nl> * . versionsbackup <nl>
ppp b / . gitignore <nl> target / <nl> maven maven <nl> * . versionsbackup <nl> * . sublime <nl>
ppp b / . gitignore <nl> target / <nl> maven maven <nl> * . versionsbackup <nl> * . ds_store <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = efc67e17011feffeba90c2781e46805bc1136e11 <nl> mode = push <nl> parent = e0ab518ae88e145ea5fb02382c190058cf6a8cf6 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = efc67e17011feffeba90c2781e46805bc1136e11 <nl> mode = push <nl> parent = e0ab518ae88e145ea5fb02382c190058cf6a8cf6 <nl> remote = git @ github . com : liferay / com - liferay - journal . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = efc67e17011feffeba90c2781e46805bc1136e11 <nl> mode = push <nl> parent = e0ab518ae88e145ea5fb02382c190058cf6a8cf6 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = efc67e17011feffeba90c2781e46805bc1136e11 <nl> mode = push <nl> parent = e0ab518ae88e145ea5fb02382c190058cf6a8cf6 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / core / java / android / preference / preferencefragment . java <nl> public abstract class preferencefragment extends fragment implements <nl> } <nl> } <nl> private listview getlistview ( ) { <nl> ( ) { <nl> ) { <nl> <unk> ( ) ; <nl> return mlist ; <nl> } <nl>
ppp b / core / java / android / preference / preferencefragment . java <nl>
ppp b / core / java / android / preference / preferencefragment . java <nl> public abstract class preferencefragment extends fragment implements <nl> } <nl> } <nl> private listview getlistview ( ) { <nl> ( ) { <nl> ) { <nl> <unk> ( ) ; <nl> return mlist ; <nl>
ppp b / core / java / android / preference / preferencefragment . java <nl> public abstract class preferencefragment extends fragment implements <nl> } <nl> } <nl> private listview getlistview ( ) { <nl> ( ) { <nl> ) { <nl> <unk> ( ) ; <nl> return mlist ; <nl> } <nl> <nl>
ppp b / core / java / android / preference / preferencefragment . java <nl> public abstract class preferencefragment extends fragment implements <nl> } <nl> } <nl> private listview getlistview ( ) { <nl> ( ) { <nl> ) { <nl> <unk> ( ) ; <nl> return mlist ; <nl> }
====NEW EXAMPLE====
ppp b / libs / gui / surfacetexture . cpp <nl> surfacetexture : : surfacetexture ( <unk> tex ) : <nl> } <nl> sp < isurfacecomposer > <unk> ( <unk> : : <unk> ( ) ) ; <nl> <unk> = <unk> - > <unk> ( ) ; <nl> } ( ) ; <nl> } <nl> } : : : ~ surfacetexture ( ) { <nl>
ppp b / libs / gui / surfacetexture . cpp <nl> surfacetexture : : surfacetexture ( <unk> tex ) : <nl> } <nl>
ppp b / libs / gui / surfacetexture . cpp <nl> surfacetexture : : surfacetexture ( <unk> tex ) : <nl> } <nl> sp < isurfacecomposer > <unk> ( <unk> : : <unk> ( ) ) ; <nl> <unk> = <unk> - > <unk> ( ) ; <nl> } ( ) ; <nl> } <nl> } : : : ~ surfacetexture ( { <nl>
ppp b / libs / gui / surfacetexture . cpp <nl> surfacetexture : : surfacetexture ( <unk> tex ) : <nl> } <nl> sp < isurfacecomposer > <unk> ( <unk> : : <unk> ( ) ) ; <nl> <unk> = <unk> - > <unk> ( ) ; <nl> } ( ) ; <nl> } <nl> } : : : ~ surfacetexture ( ) <nl>
ppp b / libs / gui / surfacetexture . cpp <nl> surfacetexture : : surfacetexture ( <unk> tex ) : <nl>
====NEW EXAMPLE====
ppp b / modules / elasticsearch / src / main / java / org / elasticsearch / search / facet / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> builder . endobject ( ) ; <nl> builder . endobject ( ) ; <nl> if ( ) ; <nl> endobject ( ) ; <nl> return builder ; <nl>
ppp b / modules / elasticsearch / src / main / java / org / elasticsearch / search / facet / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> builder . endobject ( ) ; <nl> builder . endobject ( ) ; <nl> if ( ) ; <nl> endobject ( ) ; <nl> return builder ; ; <nl>
ppp b / modules / elasticsearch / src / main / java / org / elasticsearch / search / facet / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> builder . endobject ( ) ; <nl> builder . endobject ( ) ; <nl> if ( ) ; <nl> endobject ( ) ; <nl> return builder ; <nl> ; <nl>
ppp b / modules / elasticsearch / src / main / java / org / elasticsearch / search / facet / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> builder . endobject ( ) ; <nl> builder . endobject ( ) ; <nl> if ( ) ; <nl> endobject ( ) ; <nl> return builder ; <nl> <nl>
ppp b / modules / elasticsearch / src / main / java / org / elasticsearch / search / facet / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> builder . endobject ( ) ; <nl> builder . endobject ( ) ; <nl> if ( ) ; <nl> endobject ( ) ; <nl> return builder ;
====NEW EXAMPLE====
ppp b / pom . xml <nl> < sonar . clover . version > $ { clover . version } < / sonar . clover . version > <nl> < / properties > <nl>
ppp b / pom . xml <nl> < sonar . clover . version > $ { clover . version } < / sonar . clover . version > <nl>
ppp b / pom . xml <nl> < sonar . clover . version > $ { clover . version } < / sonar . clover . version > <nl> < / properties > <nl> < > <nl>
ppp b / pom . xml <nl> < sonar . clover . version > $ { clover . version } < / sonar . clover . version <nl>
ppp b / pom . xml <nl> < sonar . clover . version > $ { clover . version } < / sonar . clover . version > <nl> < / properties > <nl> < / > <nl>
====NEW EXAMPLE====
ppp b / src / yuicompressor . java <nl> public class yuicompressor { <nl>
ppp b / src / yuicompressor . java <nl>
ppp
ppp b / src / yuicompressor . java <nl> public class yuicompressor {

====NEW EXAMPLE====
ppp b / junit / framework / <unk> . java <nl> public class <unk> extends assertionfailederror { <nl> / * * <nl>
ppp b / junit / framework / <unk> . java <nl> public class <unk> extends assertionfailederror { <nl> / * * <nl> * returns . . . in place of common prefix and . . . in <nl> * place of common suffix . <nl> * <nl> @ deprecated <nl> * @ @ see java lang . throwable # getmessage ( ) <nl> * / <nl>
ppp b / junit / framework / <unk> . java <nl> public class <unk> extends assertionfailederror { <nl>
ppp b / junit / framework / <unk> . java <nl> public class <unk> extends assertionfailederror { <nl> / * * <nl> * returns . . . in place of common prefix and . . . in <nl> * place of common suffix . <nl> * <nl> @ deprecated <nl> * @ @ see java lang . throwable # getmessage ( ) <nl> * / / <nl>
ppp b / junit / framework / <unk> . java <nl>
====NEW EXAMPLE====
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> } <nl> @ override <nl> @ override <nl> public void setenabled ( boolean enabled ) { <nl> if ( enabled = = isenabled ( ) ) { <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> } <nl> @ override <nl> @ override <nl> public void setenabled ( boolean enabled ) { <nl> if ( enabled = = isenabled ( ) ) ) <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> } <nl> @ override <nl> @ override <nl> public void setenabled ( boolean enabled ) { <nl> if ( enabled = = isenabled ( ) ) <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> } <nl> @ override <nl> @ override <nl> public void setenabled ( boolean enabled ) { <nl> if ( enabled = = isenabled ( ) ) { <nl> <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> } <nl> @ override <nl> @ override <nl> public void setenabled ( boolean enabled ) { <nl> if ( enabled = = isenabled ( ) ) { { <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> before_install : <nl> echo
ppp b / . travis . yml <nl> before_install : <nl> echo "
ppp b / . travis . yml <nl> before_install : <nl>
ppp b / . travis . yml <nl> before_install : <nl> echo " sdk
ppp b / . travis . yml <nl> before_install : <nl> echo " sdk .
====NEW EXAMPLE====
ppp b / src / site / asciidoc / changelog . adoc <nl> * * and follow up commits <nl> * * contributed by <unk> <unk> https : / / github . com / <unk> <nl>
ppp b / src / site / asciidoc / changelog . adoc <nl> * * and follow up commits <nl> * * contributed by <unk> <unk> https : / / github . com / <nl>
ppp b / src / site / asciidoc / changelog . adoc <nl> * * and follow up commits <nl>
ppp b / src / site / asciidoc / changelog . adoc <nl> * * and follow up commits <nl> * * contributed by <unk> <unk> https : / / github . com / <unk> <nl> <nl>
ppp b / src / site / asciidoc / changelog . adoc <nl> * * and follow up commits <nl> * * contributed by <unk> <unk> https : / / github . com / <unk> <nl> * * and <unk> <unk> http : / > > > > > > > <nl> updated planned changes : : <nl>
====NEW EXAMPLE====
ppp b / portal - service / src / com / liferay / portal / model / <unk> . java <nl> public class <unk> { <nl> return ( <unk> > 0 ) ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return <unk> ( ) ; <nl> } <nl>
ppp b / portal - service / src / com / liferay / portal / model / <unk> . java <nl> public class <unk> { <nl> return ( <unk> > 0 ) ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return <unk> ( ) ; <nl>
ppp b / portal - service / src / com / liferay / portal / model / <unk> . java <nl> public class <unk> { <nl> return ( <unk> > 0 ) ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return <unk> ( ) ; <nl> } <nl> <nl>
ppp b / portal - service / src / com / liferay / portal / model / <unk> . java <nl> public class <unk> { <nl> return ( <unk> > 0 ) ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return <unk> ( ) ; <nl> }
ppp b / portal - service / src / com / liferay / portal / model / <unk> . java <nl> public class <unk> { <nl> return ( <unk> > 0 ) ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return <unk> ( ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . 0b <nl> long_desc = ` cat . . / doc / readme ` <nl> short_desc = yui compressor <nl> perm = 0644 <nl>
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . 0b <nl> long_desc = ` cat . . / doc / readme ` <nl> short_desc = yui compressor <nl> perm = 0644 <nl> <nl>
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . 0b <nl> long_desc = ` cat . . / doc / readme ` <nl> short_desc = yui compressor <nl> perm = = <nl>
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . 0b <nl> long_desc = ` cat . . / doc / readme ` <nl> short_desc = yui compressor <nl>
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . 0b <nl> long_desc = ` cat . . / doc / readme ` <nl> short_desc = yui compressor <nl> perm = 11648 <nl>
====NEW EXAMPLE====
ppp b / driver - core / src / test / functional / com / mongodb / operation / <unk> . groovy <nl> class <unk> extends <unk> <nl> when : <nl> cursor . close ( ) <nl> then : <nl> close ( ) <nl> then : <nl> <unk> . count = = 1 <nl>
ppp b / driver - core / src / test / functional / com / mongodb / operation / <unk> . groovy <nl> class <unk> extends <unk> <nl> when : <nl> cursor . close ( ) <nl> then : <nl> close ( ) <nl> then : <nl> <unk> . count = = <nl>
ppp b / driver - core / src / test / functional / com / mongodb / operation / <unk> . groovy <nl> class <unk> extends <unk> <nl> when : <nl> cursor . close ( ) <nl> then : <nl> close ( ) <nl> then : <nl> <unk> . count = 1 <nl>
ppp b / driver - core / src / test / functional / com / mongodb / operation / <unk> . groovy <nl> class <unk> extends <unk> <nl> when : <nl> cursor . close ( ) <nl> then : <nl> close ( ) <nl> then : <nl> <unk> . count = = 1
ppp b / driver - core / src / test / functional / com / mongodb / operation / <unk> . groovy <nl> class <unk> extends <unk> <nl> when : <nl> cursor . close ( ) <nl> then : <nl> close ( ) <nl> then : <nl> <unk> . count = = 1 <nl> <nl>
====NEW EXAMPLE====
ppp b / docs / <unk> . md <nl> allprojects { <nl> . . . <nl> maven { <nl> / / all of react native ( js , android binaries ) is installed from npm <nl> url " $ projectdir / node_modules / react - native / android " <nl> } <nl> } <nl> . . . <nl>
ppp b / docs / <unk> . md <nl> allprojects { <nl> . . . <nl> maven { <nl> / / all of react native ( js , android binaries ) is installed from npm <nl> url " $ projectdir / node_modules / react - native / android " <nl> } <nl> } <nl> . . . . <nl>
ppp b / docs / <unk> . md <nl> allprojects { <nl> . . . <nl> maven { <nl> / / all of react native ( js , android binaries ) is installed from npm <nl> url " $ projectdir / node_modules / react - native / android " <nl> } <nl> } <nl> . . <nl>
ppp b / docs / <unk> . md <nl> allprojects { <nl> . . . <nl> maven { <nl> / / all of react native ( js , android binaries ) is installed from npm <nl> url " $ projectdir / node_modules / react - native / android " <nl> } <nl> } <nl>
ppp b / docs / <unk> . md <nl> allprojects { <nl> . . . <nl> maven { <nl> / / all of react native ( js , android binaries ) is installed from npm <nl> url " $ projectdir / node_modules / react - native / android " <nl> } <nl> } <nl> . . .
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 363d0ab116034e5a89576ae00f4e8d1b27b38729 <nl> remote = git @ github . com : liferay / com - liferay - portal - configuration . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 363d0ab116034e5a89576ae00f4e8d1b27b38729 <nl> remote = git @ github . com : liferay / com - liferay - portal - configuration git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> ext { <nl>
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> ext { <nl> bintraypublish = false <nl>
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl>
ppp b / build . gradle <nl> apply plugin : ' idea '
ppp b / build . gradle <nl>
====NEW EXAMPLE====
ppp b / docs / contributing - to - tachyon . md <nl> $ mvn compile findbugs : findbugs findbugs : gui <nl>
ppp b / docs / contributing - to - tachyon . md <nl> $ mvn compile findbugs : findbugs findbugs : gui <nl> you can generate an eclipse configuration file by running : <nl> ccc bash <nl> $ mvn clean install - dskiptests <nl> dskiptests <nl> $ mvn clean - <unk> - dskiptests eclipse : eclipse - <unk> = - <unk> <unk> = true <nl> ` ` ` <nl>
ppp b / docs / contributing - to - tachyon . md <nl> $ mvn compile findbugs : findbugs findbugs : gui <nl> you can generate an eclipse configuration file by running : <nl> ccc bash <nl> $ mvn clean install - dskiptests <nl> dskiptests <nl> $ mvn clean - <unk> - dskiptests eclipse : eclipse - <unk> = - <unk> <unk> = true <nl> ` ` ` ` <nl>
ppp b / docs / contributing - to - tachyon . md <nl>

====NEW EXAMPLE====
ppp b / test / com / facebook / buck / java / intellij / buck <nl> <unk> ( <nl> name = ' java ' , <nl> srcs = glob ( [ ' * . java ' ] ) , <nl> deps = [ <nl> ' / / src / com / facebook / buck / android : <unk> ' , <nl>
ppp b / test / com / facebook / buck / java / intellij / buck <nl> <unk> ( <nl> name = ' java ' , <nl> srcs = glob ( [ ' * . java ' ] ) , <nl> deps = [ <nl> ' / / src / com / facebook / buck / android : <unk> ' ' <nl>
ppp b / test / com / facebook / buck / java / intellij / buck <nl> <unk> ( <nl> name = ' java ' , <nl> srcs = glob ( [ ' * . java ' ] ) , <nl> deps = [ <nl> ' / / src / com / facebook / buck / android : <unk> ' <nl>
ppp b / test / com / facebook / buck / java / intellij / buck <nl> <unk> ( <nl> name = ' java ' , <nl>
ppp b / test / com / facebook / buck / java / intellij / buck <nl> <unk> ( <nl> name = ' java ' , <nl> srcs = glob ( [ ' * . java ' ] ) , <nl> deps = [ <nl> ' / / src / com / facebook / buck / android : <unk> ' , , <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - cache / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 40198853b6befa9f2a166206c47d0d9ffc45d9fb <nl> mode = push <nl> parent = 6977c65d119f91442875f57b189ca476418de0d7 <nl> remote = git @ github . com : liferay / com - liferay - portal - cache . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - cache / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - cache / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - cache / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - cache / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 40198853b6befa9f2a166206c47d0d9ffc45d9fb <nl> mode = push <nl> parent = 6977c65d119f91442875f57b189ca476418de0d7 <nl> remote = git @ github . com : liferay / com - liferay - portal - cache git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> gradle . properties <nl> actor - sdk / sdk - core / core / core - js / war <nl> actor - sdk / sdk - core / runtime / runtime - js / war <nl> node_modules <nl>
ppp b / . gitignore <nl> gradle . properties <nl> actor - sdk / sdk - core / core / core - js / war <nl> actor - sdk / sdk - core / runtime / runtime - js / war <nl>
ppp b / . gitignore <nl> gradle . properties <nl> actor - sdk / sdk - core / core / core - js / war <nl> actor - sdk / sdk - core / runtime / runtime - js / war <nl> <nl>
ppp b / . gitignore <nl> gradle . properties <nl> actor - sdk / sdk - core / core / core - js / war <nl> actor - sdk / sdk - core / runtime / runtime - js / war <nl> node_modules node_modules <nl>
ppp b / . gitignore <nl> gradle . properties <nl> actor - sdk / sdk - core / core / core - js / war <nl> actor - sdk / sdk - core / runtime / runtime - js / war node_modules <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 0 . < / / version > <nl> < name > hdrhistogram < / name > <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 0 . < / / version > <nl> < name > hdrhistogram < / > <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 0 . < / / version > <nl> < name > hdrhistogram < / name > > <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 0 . < / / version > <nl> < name > hdrhistogram < / name <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 0 . < / / version > <nl> < name > hdrhistogram < / name >
====NEW EXAMPLE====
ppp b / src / org / opensolaris / opengrok / configuration / <unk> . java <nl> public final class <unk> { <nl> } <nl> public void <unk> ( boolean <unk> ) { <nl> <unk> . get ( ) . <unk> ( <unk> ) ; <nl> } <nl> / * * <nl>
ppp b / src / org / opensolaris / opengrok / configuration / <unk> . java <nl> public final class <unk> { <nl> } <nl> public void <unk> ( boolean <unk> ) { <nl> <unk> . get ( ) . <unk> ( <unk> ) ; <nl> } <nl> / * <nl>
ppp b / src / org / opensolaris / opengrok / configuration / <unk> . java <nl> public final class <unk> { <nl> } <nl> public void <unk> ( boolean <unk> ) { <nl> <unk> . get ( ) . <unk> ( <unk> ) ; <nl> } <nl> / * *
ppp b / src / org / opensolaris / opengrok / configuration / <unk> . java <nl> public final class <unk> { <nl> } <nl> public void <unk> ( boolean <unk> ) { <nl> <unk> . get ( ) . <unk> ( <unk> ) ; <nl> } <nl>
ppp b / src / org / opensolaris / opengrok / configuration / <unk> . java <nl> public final class <unk> { <nl> } <nl> public void <unk> ( boolean <unk> ) { <nl> <unk> . get ( ) . <unk> ( <unk> ) ; <nl> } <nl> / * * <nl> <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < module > opentripplanner - utils < / module > <nl> < module > opentripplanner - webapp < / module > <nl> < module > opentripplanner - web - utils < / module > <nl>
ppp b / pom . xml <nl> < module > opentripplanner - utils < / module > <nl> < module > opentripplanner - webapp < / module > <nl> < module > opentripplanner - web - utils < / module > <nl> < < / > <nl> < build > <nl>
ppp b / pom . xml <nl> < module > opentripplanner - utils < / module > <nl> < module > opentripplanner - webapp < / module > <nl> < module > opentripplanner - web - utils < / > <nl>
ppp b / pom . xml <nl> < module > opentripplanner - utils < / module > <nl> < module > opentripplanner - webapp < / module > <nl>
ppp b / pom . xml <nl> < module > opentripplanner - utils < / module > <nl> < module > opentripplanner - webapp < / module > <nl> < module > opentripplanner - web - utils < / module <nl>
====NEW EXAMPLE====
ppp b / deeplearning4j - core / src / main / java / org / deeplearning4j / datasets / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public dataset next ( ) { <nl> dataset next = super . next ( ( ) ; <nl> return next ; <nl> } <nl>
ppp b / deeplearning4j - core / src / main / java / org / deeplearning4j / datasets / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public dataset next ( ) { <nl> dataset next = super . next ( ( ) ; <nl> return next ; <nl>
ppp b / deeplearning4j - core / src / main / java / org / deeplearning4j / datasets / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public dataset next ( ) { <nl> dataset next = super . next ( ( ) ; <nl> return next ; <nl> } <nl> <nl>
ppp b / deeplearning4j - core / src / main / java / org / deeplearning4j / datasets / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public dataset next ( ) { <nl> dataset next = super . next ( ( ) ; <nl> return next ; <nl> }
ppp b / deeplearning4j - core / src / main / java / org / deeplearning4j / datasets / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1acaead7d20aa9a0ff0a78ca88e987b51092ef24 <nl> mode = push <nl> parent = 238ed14676c65faa9ce2a57ca2bdd1a759377541 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1acaead7d20aa9a0ff0a78ca88e987b51092ef24 <nl> mode = push <nl> parent = 238ed14676c65faa9ce2a57ca2bdd1a759377541 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / makefile <nl> local : tools services <nl> tools : <nl> cd tools & & make <nl> services : <nl> cd lucida & & make all <nl> <nl> # start start all services <nl>
ppp b / makefile <nl> local : tools services <nl> tools : <nl> cd tools & & make <nl> services : <nl> cd lucida & & make all <nl> <nl> # start start all <nl>
ppp b / makefile <nl> local : tools services <nl> tools : <nl> cd tools & & make <nl> services : <nl> cd lucida & & make all <nl> <nl> # start start services <nl>
ppp b / makefile <nl> local : tools services <nl> tools : <nl> cd tools & & make <nl> services : <nl> cd lucida & & make all <nl> <nl> # start start all services <nl> <nl>
ppp b / makefile <nl> local : tools services <nl> tools : <nl> cd tools & & make <nl> services : <nl> cd lucida & & make all <nl>
====NEW EXAMPLE====
ppp b / languagetool - language - modules / ca / src / main / resources / org / languagetool / resource / ca / multiwords . txt <nl> <unk> <unk> npcng00 <nl> <unk> <unk> npcng00 <nl> <unk> jersey npcng00 <nl> <unk> <unk> npcng00 <nl> <unk> <nl> npcng00 <nl> <unk> y <unk> <unk> <nl> <unk> bin <unk> <unk> <nl> <unk> <unk> npcng00 <nl>
ppp b / languagetool - language - modules / ca / src / main / resources / org / languagetool / resource / ca / multiwords . txt <nl> <unk> <unk> npcng00 <nl> <unk> <unk> npcng00 <nl> <unk> jersey npcng00 <nl> <unk> <unk> npcng00 <nl> <unk> <nl> npcng00 <nl> <unk> y <unk> <unk> <nl> <unk> bin <unk> <unk> <nl> <unk> <unk> <nl>
ppp b / languagetool - language - modules / ca / src / main / resources / org / languagetool / resource / ca / multiwords . txt <nl> <unk> <unk> npcng00 <nl> <unk> <unk> npcng00 <nl> <unk> jersey npcng00 <nl> <unk> <unk> npcng00 <nl> <unk> <nl> npcng00 <nl> <unk> y <unk> <unk> <nl> <unk> bin <unk> <unk> <nl> <unk> <unk> npcng00
ppp b / languagetool - language - modules / ca / src / main / resources / org / languagetool / resource / ca / multiwords . txt <nl> <unk> <unk> npcng00 <nl> <unk> <unk> npcng00 <nl> <unk> jersey npcng00 <nl> <unk> <unk> npcng00 <nl> <unk> <nl> npcng00 <nl> <unk> y <unk> <unk> <nl> <unk> bin <unk> <unk> <nl>
ppp b / languagetool - language - modules / ca / src / main / resources / org / languagetool / resource / ca / multiwords . txt <nl> <unk> <unk> npcng00 <nl> <unk> <unk> npcng00 <nl> <unk> jersey npcng00 <nl> <unk> <unk> npcng00 <nl> <unk> <nl> npcng00 <nl> <unk> y <unk> <unk> <nl> <unk> bin <unk> <unk> <nl> <unk> npcng00 <nl>
====NEW EXAMPLE====
ppp b / solo / helios - use <nl> else <nl> echo <nl> set + e <nl>
ppp b / solo / helios - use <nl> else <nl> echo <nl>
ppp b / solo / helios - use <nl> else <nl> echo <nl> set + <nl>
ppp b / solo / helios - use <nl> else <nl>
ppp b / solo / helios - use <nl> else <nl> echo <nl> set +
====NEW EXAMPLE====
ppp b / docs / reference / indices / <unk> . asciidoc <nl> get <unk> <nl> / / <nl>
ppp b / docs / reference / indices / <unk> . asciidoc <nl> get <unk> <nl> / / console <nl>
ppp b / docs / reference / indices / <unk> . asciidoc <nl> get <unk> <nl> / / console <nl> < 1 > set " keyword " to " keyword " <nl>
ppp b / docs / reference / indices / <unk> . asciidoc <nl> get <unk> <nl> / / console <nl> < 1 > set " keyword " to " keyword " " <nl>
ppp b / docs / reference / indices / <unk> . asciidoc <nl> get <unk> <nl> / / console <nl> < 1 > set " keyword " to " keyword " attribute <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0

ppp b / changelog . md <nl> # # 0 . 9 . 3 - incubating <nl> * storm - 341 : port jstorm cgroup bug causing spurious failures <nl> * storm - * storm - storm - 341 : fix assignment sorting <nl> * storm - 476 : external / storm - kafka : avoid npe on null message payloads <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 3 - incubating <nl> * storm - 341 : port jstorm cgroup bug causing spurious failures <nl> * storm - * storm - storm - 341 : fix assignment sorting <nl> * storm - 476 : external / storm - kafka : avoid npe on null message payloads <nl> * storm - <unk> : fix error message related to kafka <unk> <nl>
====NEW EXAMPLE====
ppp b / settings . gradle <nl> include ' : wordpress ' <nl> include ' : libs : utils : wordpressutils ' <nl> include ' : libs : networking : wordpressnetworking ' <nl> include ' : libs : wpcomrest : wordpresscomrest ' <nl> : : wordpresscomrest ' <nl> ' : <unk> ' <nl>
ppp b / settings . gradle <nl> include ' : wordpress ' <nl> include ' : libs : utils : wordpressutils ' <nl> include ' : libs : networking : wordpressnetworking ' <nl> include ' : libs : wpcomrest : wordpresscomrest ' <nl> : : wordpresscomrest ' <nl> ' : <unk> ' ' <nl>
ppp b / settings . gradle <nl> include ' : wordpress ' <nl> include ' : libs : utils : wordpressutils ' <nl> include ' : libs : networking : wordpressnetworking ' <nl> include ' : libs : wpcomrest : wordpresscomrest ' <nl> : : wordpresscomrest ' <nl> ' : <unk> <nl>
ppp b / settings . gradle <nl> include ' : wordpress ' <nl> include ' : libs : utils : wordpressutils ' <nl> include ' : libs : networking : wordpressnetworking ' <nl> include ' : libs : wpcomrest : wordpresscomrest ' <nl> : : wordpresscomrest ' <nl> ' : <unk> '
ppp b / settings . gradle <nl> include ' : wordpress ' <nl> include ' : libs : utils : wordpressutils ' <nl> include ' : libs : networking : wordpressnetworking ' <nl> include ' : libs : wpcomrest : wordpresscomrest ' <nl> : : wordpresscomrest ' <nl> ' : <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / coyote / http11 / upgrade / <unk> . java <nl> public class <unk> < s > implements processor < s > , <unk> { <nl> wrapper . unread ( <unk> ) ; <nl> wrapper . setreadtimeout ( <unk> ) ; <nl> ) ; <nl> setreadtimeout ( <unk> ) ; <nl> } <nl>
ppp b / java / org / apache / coyote / http11 / upgrade / <unk> . java <nl> public class <unk> < s > implements processor < s > , <unk> { <nl> wrapper . unread ( <unk> ) ; <nl> wrapper . setreadtimeout ( <unk> ) ; <nl> ) ; <nl> setreadtimeout ( <unk> ) ; <nl>
ppp b / java / org / apache / coyote / http11 / upgrade / <unk> . java <nl> public class <unk> < s > implements processor < s > , <unk> { <nl> wrapper . unread ( <unk> ) ; <nl> wrapper . setreadtimeout ( <unk> ) ; <nl> ) ; <nl> setreadtimeout ( <unk> ) ; <nl> } <nl> <nl>
ppp b / java / org / apache / coyote / http11 / upgrade / <unk> . java <nl> public class <unk> < s > implements processor < s > , <unk> { <nl> wrapper . unread ( <unk> ) ; <nl> wrapper . setreadtimeout ( <unk> ) ; <nl> ) ; <nl> setreadtimeout ( <unk> ) ; <nl> }
ppp b / java / org / apache / coyote / http11 / upgrade / <unk> . java <nl> public class <unk> < s > implements processor < s > , <unk> { <nl> wrapper . unread ( <unk> ) ; <nl> wrapper . setreadtimeout ( <unk> ) ; <nl> ) ; <nl> setreadtimeout ( <unk> ) ; } <nl>
====NEW EXAMPLE====
ppp b / jni / net_sqlcipher_database_sqlitedatabase . cpp <nl> void throw_sqlite3_exception ( jnienv * env , int <unk> , <nl> <unk> = " net / sqlcipher / database / <unk> " ; <nl> break ; <nl> default : <nl> <unk> = " net / / / sqlcipher / <unk> " ; <nl> break ; <nl> } <nl>
ppp b / jni / net_sqlcipher_database_sqlitedatabase . cpp <nl> void throw_sqlite3_exception ( jnienv * env , int <unk> , <nl> <unk> = " net / sqlcipher / database / <unk> " ; <nl> break ; <nl> default : <nl> <unk> = " net / / / sqlcipher / <unk> " ; <nl> break ; <nl>
ppp b / jni / net_sqlcipher_database_sqlitedatabase . cpp <nl> void throw_sqlite3_exception ( jnienv * env , int <unk> , <nl> <unk> = " net / sqlcipher / database / <unk> " ; <nl> break ; <nl> default : <nl> <unk> = " net / / / sqlcipher / <unk> " ; <nl> break ; <nl> } <nl> <nl>
ppp b / jni / net_sqlcipher_database_sqlitedatabase . cpp <nl> void throw_sqlite3_exception ( jnienv * env , int <unk> , <nl> <unk> = " net / sqlcipher / database / <unk> " ; <nl> break ; <nl> default : <nl> <unk> = " net / / / sqlcipher / <unk> " ; <nl> break ; <nl> }
ppp b / jni / net_sqlcipher_database_sqlitedatabase . cpp <nl> void throw_sqlite3_exception ( jnienv * env , int <unk> , <nl> <unk> = " net / sqlcipher / database / <unk> " ; <nl> break ; <nl> default : <nl> <unk> = " net / / / sqlcipher / <unk> " ; <nl> break ; <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f54b04936c41fcae7a1737e7794548e4c12fc765 <nl> mode = push <nl> parent = 9d17f2c0a174215e6ad1eb2074f014dc6e51fff0 <nl> remote = git @ github . com : liferay / com - liferay - portal - configuration . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f54b04936c41fcae7a1737e7794548e4c12fc765 <nl> mode = push <nl> parent = 9d17f2c0a174215e6ad1eb2074f014dc6e51fff0 <nl> remote = git @ github . com : liferay / com - liferay - portal - configuration git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / jaxrs / pom . xml <nl> < module > server - sent - event < / module > <nl> < module > singleton - application < / module > <nl> < module > singleton - annotation < / module > <nl> \ no newline at end of file <nl> module > <nl> < / modules > <nl> < / project > <nl> \ no newline at end of file <nl>
ppp b / jaxrs / pom . xml <nl> < module > server - sent - event < / module > <nl>
ppp b / jaxrs / pom . xml <nl> < module > server - sent - event < / module > <nl> < module > singleton - application < / module > <nl> < module > singleton - annotation < / module > <nl> \ no newline at end of file <nl> module > <nl> < / modules > <nl> < / project > <nl>
ppp b / jaxrs / pom . xml <nl> < module > server - sent - event < / module > <nl> < module > singleton - application < / module > <nl> < module > singleton - annotation < / module > <nl> \ no newline at end of file <nl> module > <nl> < / modules > <nl> < / project > <nl> \ no at end of file <nl>
ppp b / jaxrs / pom . xml <nl>
====NEW EXAMPLE====
ppp b / docs / install . md <nl> to build bazel on ubuntu : <nl> 2 . install required packages : <nl> $ sudo apt - get install libarchive - dev pkg - config zip <nl> 3 . build bazel <nl>
ppp b / docs / install . md <nl> to build bazel on ubuntu : <nl> 2 . install required packages : <nl> $ sudo apt - get install libarchive - dev pkg - config zip <nl> 3 . build bazel : <nl>
ppp b / docs / install . md <nl> to build bazel on ubuntu : <nl> 2 . install required packages : <nl> $ sudo apt - get install libarchive - dev pkg - config zip <nl> 3 . build : <nl>
ppp b / docs / install . md <nl> to build bazel on ubuntu : <nl> 2 . install required packages : <nl> $ sudo apt - get install libarchive - dev pkg - config zip <nl> 3 . build bazel bazel <nl>
ppp b / docs / install . md <nl> to build bazel on ubuntu : <nl> 2 . install required packages : <nl> $ sudo apt - get install libarchive - dev pkg - config zip <nl> 3 . build bazel zip <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl>
ppp b / build . gradle <nl> project ( ' : astyanax - core

ppp b / build . gradle <nl> project ( ' : astyanax - core ' ) { <nl> dependencies { <nl> testcompile " junit : junit : $ junitversion " <nl> } <nl> } <nl> if ( ) { <nl> ) { <nl> ) { <nl> ) { <nl> ) { <nl> { <nl> $ { <nl> } <nl> } <nl> } <nl>
ppp b / build . gradle <nl> project ( ' : astyanax - core ' ) { <nl> dependencies { <nl> testcompile " junit : junit : $ junitversion " <nl> } <nl> } <nl> if ( ) { <nl> ) { <nl> ) { <nl> ) { <nl> ) { <nl> { <nl> $ { <nl> } <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / status <nl> patches proposed to backport : <nl> escaping . this patch also <unk> up <unk> to make it clearer what <nl>
ppp b / status <nl> patches proposed to backport : <nl> escaping . this patch also <unk> up <unk> to make it clearer what <nl> applies to which particular cookie spec . <nl> http : / / people . apache . org / ~ markt / patches / 2007 2007 10 10 18 - cookies . patch <nl> + 1 : markt <nl> 1 : <nl> \ no newline at end of file <nl>
ppp b / status <nl> patches proposed to backport : <nl> escaping . this patch also <unk> up <unk> to make it clearer what <nl> applies to which particular cookie spec . <nl> http : / / people . apache . org / ~ markt / patches / 2007 2007 10 10 18 - cookies . patch <nl> + 1 : markt <nl> \ no newline at end of file <nl>
ppp b / status <nl> patches proposed to backport : <nl>
ppp b / status <nl> patches proposed to backport : <nl> escaping . this patch also <unk> up <unk> to make it clearer what <nl> applies to which particular cookie spec . <nl> http : / / people . apache . org / ~ markt / patches / 2007 2007 10 10 18 - cookies . patch <nl> + 1 : markt <nl> 1 : \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / settings . gradle <nl> include ' : requery ' <nl> include '
ppp b / settings . gradle <nl> include ' : requery ' <nl> include
ppp b / settings . gradle <nl> include ' :
ppp b / settings . gradle <nl>
ppp b / settings . gradle <nl> include ' : requery ' <nl> include ' : requery - processor ' <nl> include ' ' : : processor processor ' <nl> include ' : requery - test ' <nl>
====NEW EXAMPLE====
ppp b / bbb - <unk> / <unk> . nginx <nl> <unk> http : / / 127 . 0 . 0 . 1 : 8080 ; <nl> <unk> default ; <nl> <unk> x - forwarded - for $ <unk> ; <nl> <unk> x - forwarded - proto $ <unk> ; <nl> # allow <unk> uploaded presentation document . <nl> <unk> <unk> ; <nl>
ppp b / bbb - <unk> / <unk> . nginx <nl> <unk> http : / / 127 . 0 . 0 . 1 : 8080 ; <nl> <unk> default ; <nl> <unk> x - forwarded - for $ <unk> ; <nl> <unk> x - forwarded - proto $ <unk> ; <nl> # allow <unk> uploaded presentation document . <nl>
ppp b / bbb - <unk> / <unk> . nginx <nl> <unk> http : / / 127 . 0 . 0 . 1 : 8080 ; <nl> <unk> default ; <nl> <unk> x - forwarded - for $ <unk> ; <nl> <unk> x - forwarded - proto $ <unk> ; <nl> # allow <unk> uploaded presentation document . <nl> <unk> <unk> <unk> ; <nl>
ppp b / bbb - <unk> / <unk> . nginx <nl> <unk> http : / / 127 . 0 . 0 . 1 : 8080 ; <nl> <unk> default ; <nl> <unk> x - forwarded - for $ <unk> ; <nl> <unk> x - forwarded - proto $ <unk> ; <nl> # allow <unk> uploaded presentation document . <nl> <unk> ; <nl>
ppp b / bbb - <unk> / <unk> . nginx <nl> <unk> http : / / 127 . 0 . 0 . 1 : 8080 ; <nl> <unk> default ; <nl> <unk> x - forwarded - for $ <unk> ; <nl> <unk> x - forwarded - proto $ <unk> ; <nl> # allow <unk> uploaded presentation document . <nl> <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / config . yml <nl> permissions : <nl> groups : <nl>
ppp b / config . yml <nl> permissions : <nl> groups : <nl> default : <nl>
ppp b / config . yml <nl> permissions : <nl> groups : <nl> default
ppp b / config . yml <nl> permissions : <nl>
ppp b / config . yml <nl> permissions : <nl> groups : <nl> default <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 6 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / groupid > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 6 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 6 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / groupid groupid <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 6 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / groupid groupid
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 6 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / groupid <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = 0f5e7aee88e06dd5e2e8b57786d67cf321a4760d <nl> remote = git @ github . com : liferay / com - liferay - product - navigation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / py2 / testdir_r / myr . tests <nl> <unk> / <unk> . r <nl> <unk> / <unk> . r <nl> <unk> / <unk> . r <nl>
ppp b / py2 / testdir_r / myr . tests <nl> <unk> / <unk> . r <nl> <unk> / <unk> . r <nl>
ppp b / py2 / testdir_r / myr . tests <nl> <unk> / <unk> . r <nl> <unk> / <unk> . r <nl> <unk> / <unk> . r <nl> testdir_docexamples / <unk> . r <nl>
ppp b / py2 / testdir_r / myr . tests <nl> <unk> / <unk> . r <nl> <unk> / <unk> . r <nl> <unk> / <unk> . r <nl> testdir_docexamples / <unk> . <nl>
ppp b / py2 / testdir_r / myr . tests <nl> <unk> / <unk> . r <nl>
====NEW EXAMPLE====
ppp b / externs / <unk> . js <nl>
ppp b / externs / <unk> . js <nl> <unk> . prototype . <unk> = <nl> document . prototype . <unk> = <nl> function ( https : filenotfoundexception caused & & & & & & & & & & & & & / / / / / / / / / / / / / / / ( ) { <nl> , , , , , , } } ; <nl>
ppp b / externs / <unk> . js <nl> <unk> . prototype . <unk> = <nl> document . prototype . <unk> = <nl> function ( https : filenotfoundexception caused & & & & & & & & & & & & & / / / / / / / / / / / / / / / ( ) { <nl> , , , , , , } { <nl>
ppp b / externs / <unk> . js <nl> <unk> . prototype . <unk> = <nl> document . prototype . <unk> = <nl> function ( https : filenotfoundexception caused & & & & & & & & & & & & & / / / / / / / / / / / / / / / ( ) { <nl> , , , , , , } ; <nl>
ppp b / externs / <unk> . js <nl> <unk> . prototype . <unk> = <nl> document . prototype . <unk> = <nl> function ( https : filenotfoundexception caused & & & & & & & & & & & & & / / / / / / / / / / / / / / / ( ) { <nl> , , , , , , { <nl>
====NEW EXAMPLE====
ppp
ppp b / / lib / native / mac / <unk> . . jnilib b / lib / native / mac / <unk> . jnilib differ <nl>

ppp b / / lib / native / mac
ppp b / / lib / native / mac /
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version_name = 1 . 0 . 0 - snapshot <nl>
ppp b / gradle . properties <nl> version_name = 1 . 0 . 0 - snapshot <nl> version_code = group group = com . . listbuddies <nl>
ppp b / gradle . properties <nl> version_name = 1 . 0 . 0
ppp b / gradle . properties <nl> version_name = 1 . 0
ppp b / gradle . properties <nl> version_name = 1 .
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fc587eeb7cdcffa79832e11dea41323ddbc4120d <nl> mode = push <nl> parent = 972f1587c63b8a6d9938b80912dcc2854324fc15 <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fc587eeb7cdcffa79832e11dea41323ddbc4120d <nl> mode = push <nl> parent = 972f1587c63b8a6d9938b80912dcc2854324fc15 <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / coyote / http11 / <unk> . java <nl> public class <unk> extends <unk> { <nl> / / complete or dispatch ) <nl> return processor . <unk> ( ) ; <nl> } else { <nl> connections . remove ( socket ) ; <nl> <unk> . offer ( processor ) ; <nl> } <nl>
ppp b / java / org / apache / coyote / http11 / <unk> . java <nl> public class <unk> extends <unk> { <nl> / / complete or dispatch ) <nl>
ppp b / java / org / apache / coyote / http11 / <unk> . java <nl> public class <unk> extends <unk> { <nl> / / complete or dispatch ) <nl> return processor . <unk> ( ) ; <nl> } else { <nl> connections . remove ( socket ) ; <nl> <unk> . offer ( processor ) ; <nl>
ppp b / java / org / apache / coyote / http11 / <unk> . java <nl> public class <unk> extends <unk> { <nl> / / complete or dispatch ) <nl> return processor . <unk> ( ) ; <nl> } else { <nl> connections . remove ( socket ) ; <nl> <unk> . offer ( processor ) ; <nl> } <nl> } <nl>
ppp b / java / org / apache / coyote / http11 / <unk> . java <nl> public class <unk> extends <unk> { <nl> / / complete or dispatch ) <nl> return processor . <unk> ( ) ; <nl> } else { <nl>
====NEW EXAMPLE====
ppp b / bundles / core / pom . xml <nl> < module > org . openhab . core < / module > <nl>
ppp b / bundles / core / pom . xml <nl>
ppp

ppp b / bundles / core / pom . xml <nl> < module > org . openhab . core < / module > <nl> < module > org . openhab . core . library < / module > <nl> < module > org . openhab . core . rules < / > <nl> < / module org . . openhab . core . < / module > <nl> < / modules > <nl> < / project > <nl>
====NEW EXAMPLE====
ppp b / servers / src / main / java / tachyon / format . java <nl> public class format { <nl> system . exit ( - 1 ) ; <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) ; <nl> } <nl> } <nl>
ppp b / servers / src / main / java / tachyon / format . java <nl> public class format { <nl> system . exit ( - 1 ) ; <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / servers / src / main / java / tachyon / format . java <nl> public class format { <nl> system . exit ( - 1 ) ; <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) ; <nl> } <nl> } } <nl>
ppp b / servers / src / main / java / tachyon / format . java <nl> public class format { <nl> system . exit ( - 1 ) ; <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) ; <nl> } <nl> } <nl> <nl>
ppp b / servers / src / main / java / tachyon / format . java <nl> public class format { <nl> system . exit ( - 1 ) ; <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) ; <nl> } <nl> <nl> } <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < module > metrics - <unk> < / module > <nl> < module > metrics - <unk> < / module > <nl>
ppp b / pom . xml <nl> < module > metrics - <unk> < / module > <nl> < module > metrics - <unk> < / module <nl>
ppp b / pom . xml <nl> < module > metrics - <unk> < / module > <nl>
ppp
ppp b / pom . xml <nl>
====NEW EXAMPLE====
ppp b / titan - test / src / main / java / com / thinkaurelius / titan / graphdb / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> @ test <nl> @ override <nl> <unk> <unk> ) { <nl> try { <nl> <unk> ( false ) ; <nl>
ppp b / titan - test / src / main / java / com / thinkaurelius / titan / graphdb / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> @ test <nl> @ override <nl> <unk> <unk> ) { <nl> try { <nl> <unk> ( false ; <nl>
ppp b / titan - test / src / main / java / com / thinkaurelius / titan / graphdb / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> @ test <nl> @ override <nl> <unk> <unk> ) { <nl> try { <nl> <unk> ( false false ; <nl>
ppp b / titan - test / src / main / java / com / thinkaurelius / titan / graphdb / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> @ test <nl> @ override <nl> <unk> <unk> ) { <nl> try { <nl> <unk> ( false ) ) ; <nl>
ppp b / titan - test / src / main / java / com / thinkaurelius / titan / graphdb / <unk> . java <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < modules > <nl> < module > jstorm - core < / module > <nl> < module > jstorm - ui < / module > <nl> < / < / > <nl> < module > example / sequence - split - merge < / module > <nl> < / modules > <nl>
ppp b / pom . xml <nl> < modules > <nl>
ppp b / pom . xml <nl> < modules > <nl> < module > jstorm - core < / module > <nl> < module > jstorm - ui < / module > <nl> < / < / > <nl> < module > example / sequence - split - merge < / module > <nl> < / modules > > <nl>
ppp b / pom . xml <nl> < modules > <nl> < module > jstorm - core < / module > <nl> < module > jstorm - ui < / module > <nl> < / < / > <nl> < module > example / sequence - split - merge < / module > <nl> < / > <nl>
ppp b / pom . xml <nl> < modules > <nl> < module > jstorm - core < / module > <nl> < module > jstorm - ui < / module > <nl> < / < / > <nl> < module > example / sequence - split - merge < / module > <nl> < / modules <nl>
====NEW EXAMPLE====
ppp b / framework / build . gradle <nl> buildscript { <nl> } <nl> apply plugin : ' android - library ' <nl> ' <nl> { { <nl> apply from : ' cordova . gradle ' <nl>
ppp b / framework / build . gradle <nl> buildscript { <nl> } <nl> apply plugin : ' android - library ' <nl> ' <nl> { { <nl> apply from : ' cordova . gradle <nl>
ppp b / framework / build . gradle <nl> buildscript { <nl>
ppp b / framework / build . gradle <nl> buildscript { <nl> } <nl> apply plugin : ' android - library ' <nl> ' <nl> { { <nl> apply from : ' cordova . gradle '
ppp b / framework / build . gradle <nl> buildscript { <nl> } <nl> apply plugin : ' android - library ' <nl> ' <nl> { { <nl> apply from : ' cordova . gradle ' <nl> <nl>
====NEW EXAMPLE====
ppp b / preloaded - classes <nl> com . ibm . <unk> . charset . <unk> <nl> com . ibm . <unk> . charset . <nl>
ppp b / preloaded - classes <nl> com . ibm . <unk> . charset . <unk> <nl> com . ibm . <unk> . charset . <unk> <nl> com . ibm . <unk> . text . <unk> <nl>
ppp b / preloaded - classes <nl> com . ibm . <unk> . charset . <unk> <nl>
ppp b / preloaded - classes <nl> com . ibm . <unk> . charset . <unk> <nl> com . ibm . <unk> . charset . <unk> <nl> com . ibm . <unk> . text . <nl>
ppp b / preloaded - classes <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b
ppp b /
ppp
ppp b / readme <nl> yahoo ! cloud system benchmark ( ycsb ) <nl> \ no newline at end of file <nl> = = = = = = = = = = " <nl> = = = = = = = = = = = <nl>
ppp b / readme <nl> yahoo ! cloud system benchmark ( ycsb ) <nl> \ no newline at end of file <nl> = = = = = = = = = = " <nl> = = = = = = = = = = = = <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 68648a869499d3289513385342707d66d2ccbad1 <nl> mode = push <nl> parent = 0f5e7aee88e06dd5e2e8b57786d67cf321a4760d <nl> remote = git @ github . com : liferay / com - liferay - product - navigation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl>
ppp b
ppp
ppp b / . gitignore <nl> target / <nl> work / <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> target / <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / idea / src / org / jetbrains / jet / plugin / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> return icon ; <nl> } <nl> if ( psielement instanceof <unk> ( ) { <nl> <unk> ) { <nl> return <unk> ; <nl> } <nl> if ( psielement instanceof <unk> ) { <nl>
ppp b / idea / src / org / jetbrains / jet / plugin / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> return icon ; <nl> } <nl> if ( psielement instanceof <unk> ( ) { <nl> <unk> ) { <nl> return <unk> ; <nl> } <nl> if ( psielement instanceof <unk> ) <nl>
ppp b / idea / src / org / jetbrains / jet / plugin / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> return icon ; <nl> } <nl> if ( psielement instanceof <unk> ( ) { <nl> <unk> ) { <nl> return <unk> ; <nl> } <nl> if ( psielement instanceof <unk> ) ) <nl>
ppp b / idea / src / org / jetbrains / jet / plugin / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> return icon ; <nl> } <nl> if ( psielement instanceof <unk> ( ) { <nl> <unk> ) { <nl> return <unk> ; <nl> } <nl> if ( psielement instanceof <unk> ) { <nl> <nl>
ppp b / idea / src / org / jetbrains / jet / plugin / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> return icon ; <nl> } <nl> if ( psielement instanceof <unk> ( ) { <nl> <unk> ) { <nl> return <unk> ; <nl> } <nl> if ( psielement instanceof <unk> ) { { <nl>
====NEW EXAMPLE====
ppp b / h2o - docs / src / product / flow / packs / test - small / index . list <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl>
ppp b / h2o - docs / src / product / flow / packs / test - small / index . list <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl>
ppp b / h2o - docs / src / product / flow / packs / test - small / index . list <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> flow <nl>
ppp b / h2o - docs / src / product / flow / packs / test - small / index . list <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . . <nl>
ppp b / h2o - docs / src / product / flow / packs / test - small / index . list <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / css / taglib / ratings . css <nl> } <nl> } <nl> . <unk> - input - container . <unk> - input { <nl> \ no newline at end of file javapluginpath . container <unk> - input { <nl> margin - left : 1px ; <nl> } <nl>
ppp b / portal - web / docroot / html / css / taglib / ratings . css <nl> } <nl> } <nl> . <unk> - input - container . <unk> - input { <nl> \ no newline at end of file javapluginpath . container <unk> - input { <nl> margin - left : 1px ; <nl> ; <nl>
ppp b / portal - web / docroot / html / css / taglib / ratings . css <nl> } <nl> } <nl> . <unk> - input - container . <unk> - input { <nl> \ no newline at end of file javapluginpath . container <unk> - input { <nl> margin - left : 1px ; <nl> <nl>
ppp b / portal - web / docroot / html / css / taglib / ratings . css <nl> } <nl> } <nl> . <unk> - input - container . <unk> - input { <nl> \ no newline at end of file javapluginpath . container <unk> - input { <nl> margin - left : 1px ; <nl> } <nl> <nl>
ppp b / portal - web / docroot / html / css / taglib / ratings . css <nl> } <nl> } <nl> . <unk> - input - container . <unk> - input { <nl> \ no newline at end of file javapluginpath . container <unk> - input { <nl> margin - left : 1px ; <nl>
====NEW EXAMPLE====
ppp b / app / controllers / <unk> . rb <nl> class <unk> < applicationcontroller <nl> def show <nl> @ has_sidebar = true <nl>
ppp b / app / controllers / <unk> . rb <nl> class <unk> < applicationcontroller <nl> def show <nl> @ has_sidebar = <nl>
ppp b / app / controllers / <unk> . rb <nl> class <unk> < applicationcontroller <nl> def show <nl> @ has_sidebar = = <nl>
ppp b / app / controllers / <unk> . rb <nl> class <unk> < applicationcontroller <nl> def show <nl> @ has_sidebar = true <nl> @
ppp b / app / controllers / <unk> . rb <nl> class <unk> < applicationcontroller <nl> def show <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / coyote / ajp / <unk> . java <nl> public class <unk> { <nl> } <nl> public int <unk> ( ) { <nl>
ppp b / java / org / apache / coyote / ajp / <unk> . java <nl> public class <unk> { <nl> } <nl> public int <unk> ( ) <nl>
ppp b / java / org / apache / coyote / ajp / <unk> . java <nl> public class <unk> { <nl> } <nl> public int <unk> ( { <nl>
ppp b / java / org / apache / coyote / ajp / <unk> . java <nl> public class <unk> { <nl> } <nl> public int <unk> ( ) { <nl> return buf ; <nl>
ppp b / java / org / apache / coyote / ajp / <unk> . java <nl> public class <unk> { <nl> } <nl> public int <unk> ( ) { <nl> return buf . ; <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> . ds_store <nl> . settings <nl> . springbeans <nl>
ppp b / . gitignore <nl> . ds_store <nl> . settings <nl> . springbeans <nl> target <nl>
ppp b / . gitignore <nl> . ds_store <nl> . settings <nl> . springbeans <nl> target
ppp b / . gitignore <nl> . ds_store <nl> . settings <nl> . springbeans <nl> target bin <nl>
ppp b / . gitignore <nl> . ds_store <nl> . settings <nl> . springbeans <nl> target <nl> build . sh <nl> integration - repo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1fc56acdee8a7b395c58154e71356be2648380e5 <nl> mode = push <nl> parent = 6f576d8041adacaaeb0b46f1a9807d8d547d2eeb <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1fc56acdee8a7b395c58154e71356be2648380e5 <nl> mode = push <nl> parent = 6f576d8041adacaaeb0b46f1a9807d8d547d2eeb <nl> remote = git @ github . com : liferay / com - liferay - flags . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1fc56acdee8a7b395c58154e71356be2648380e5 <nl> mode = push <nl> parent = 6f576d8041adacaaeb0b46f1a9807d8d547d2eeb <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : scala <nl> scala : <nl> - 2 . 9 . 1 <nl>
ppp b / . travis . yml <nl> language : scala <nl> scala : <nl> - 2 . 9 . <nl>
ppp b / . travis . yml <nl> language : scala <nl> scala : <nl> - 2 . 9 . swp <nl>
ppp b / . travis . yml <nl> language : scala <nl> scala : <nl> - 2 . 9 9 <nl>
ppp b / . travis . yml <nl> language : scala <nl> scala : <nl> - 2 . 9 . 1 <nl> - snapshot <nl>
====NEW EXAMPLE====
ppp b / jni / application . mk <nl> <unk> : = $ ( shell pwd ) <nl> app_abi : = armeabi armeabi - v7a x86 <nl> # app_abi : = armeabi <nl> <unk> : = $ ( <unk> ) android . mk <nl> app_stl : = c + + <unk> <nl>
ppp b / jni / application . mk <nl> <unk> : = $ ( shell pwd ) <nl> app_abi : = armeabi armeabi - v7a x86 <nl> # app_abi : = armeabi <nl> <unk> : = $ ( <unk> ) android . mk <nl> app_stl : = c + + <nl>
ppp b / jni / application . mk <nl> <unk> : = $ ( shell pwd ) <nl> app_abi : = armeabi armeabi - v7a x86 <nl> # app_abi : = armeabi <nl> <unk> : = $ ( <unk> ) android . mk <nl> app_stl : = c + + + <nl>
ppp b / jni / application . mk <nl> <unk> : = $ ( shell pwd ) <nl> app_abi : = armeabi armeabi - v7a x86 <nl> # app_abi : = armeabi <nl> <unk> : = $ ( <unk> ) android . <nl>
ppp b / jni / application . mk <nl> <unk> : = $ ( shell pwd ) <nl> app_abi : = armeabi armeabi - v7a x86 <nl> # app_abi : = armeabi <nl> <unk> : = $ ( <unk> ) android . mk <nl> app_stl : = c + + <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / graphics / java / android / graphics / drawable / <unk> . java <nl> public class <unk> extends layerdrawable { <nl> if ( <unk> > = <unk> ) { <nl> log . e ( log_tag , " max ripple count <unk> " , new runtimeexception ( ) ) ; <nl> ) ; <nl> } <nl> final ripple ripple = <unk> . get ( id ) ; <nl>
ppp b / graphics / java / android / graphics / drawable / <unk> . java <nl> public class <unk> extends layerdrawable { <nl> if ( <unk> > = <unk> ) { <nl> log . e ( log_tag , " max ripple count <unk> " , new runtimeexception ( ) ) ; <nl> ) ; <nl> } <nl> final ripple ripple = <unk> . get ( id ; <nl>
ppp b / graphics / java / android / graphics / drawable / <unk> . java <nl> public class <unk> extends layerdrawable { <nl> if ( <unk> > = <unk> ) { <nl> log . e ( log_tag , " max ripple count <unk> " , new runtimeexception ( ) ) ; <nl> ) ; <nl> } <nl> final ripple ripple = <unk> . get ( id ) ) ; <nl>
ppp b / graphics / java / android / graphics / drawable / <unk> . java <nl> public class <unk> extends layerdrawable { <nl> if ( <unk> > = <unk> ) { <nl> log . e ( log_tag , " max ripple count <unk> " , new runtimeexception ( ) ) ; <nl> ) ; <nl> } <nl> final ripple ripple = <unk> . get ( ) ; <nl>
ppp b / graphics / java / android / graphics / drawable / <unk> . java <nl> public class <unk> extends layerdrawable { <nl>
====NEW EXAMPLE====
ppp b / v4 / java / android / support / v4 / media / mediabrowsercompat . java <nl> public final class mediabrowsercompat { <nl> / * * <nl> * callbacks for subscription related events . <nl> * / <nl> static class subscriptioncallbackapi21 subscriptioncallbackapi21 extends subscriptioncallback { <nl> subscriptioncallback msubscriptioncallback ; <nl> private final object msubscriptioncallbackobj ; <nl> private bundle moptions ; <nl>
ppp b / v4 / java / android / support / v4 / media / mediabrowsercompat . java <nl> public final class mediabrowsercompat { <nl> / * * <nl> * callbacks for subscription related events . <nl> * / <nl> static class subscriptioncallbackapi21 subscriptioncallbackapi21 extends subscriptioncallback { <nl> subscriptioncallback msubscriptioncallback ; <nl> private final object msubscriptioncallbackobj ; <nl> private bundle ; <nl>
ppp b / v4 / java / android / support / v4 / media / mediabrowsercompat . java <nl> public final class mediabrowsercompat { <nl> / * * <nl> * callbacks for subscription related events . <nl> * / <nl> static class subscriptioncallbackapi21 subscriptioncallbackapi21 extends subscriptioncallback { <nl> subscriptioncallback msubscriptioncallback ; <nl> private final object msubscriptioncallbackobj ; <nl> private bundle moptions ; ; <nl>
ppp b / v4 / java / android / support / v4 / media / mediabrowsercompat . java <nl> public final class mediabrowsercompat { <nl> / * * <nl> * callbacks for subscription related events . <nl> * / <nl> static class subscriptioncallbackapi21 subscriptioncallbackapi21 extends subscriptioncallback { <nl> subscriptioncallback msubscriptioncallback ; <nl> private final object msubscriptioncallbackobj ; <nl> private bundle moptions ; <nl> ; <nl>
ppp b / v4 / java / android / support / v4 / media / mediabrowsercompat . java <nl> public final class mediabrowsercompat { <nl> / * * <nl> * callbacks for subscription related events . <nl> * / <nl> static class subscriptioncallbackapi21 subscriptioncallbackapi21 extends subscriptioncallback { <nl> subscriptioncallback msubscriptioncallback ; <nl> private final object msubscriptioncallbackobj ; <nl> private bundle moptions ; <nl> <nl>
====NEW EXAMPLE====
ppp b / src / cpp / core / include / core / system / process . hpp <nl> struct <unk> <nl> # ifdef _win32 <nl> : <unk> ( false ) , <nl> <unk> ( false ) , <nl> <unk> ( ) { <nl> <unk> <unk> ( false ) <nl> # else <nl> : <unk> ( false ) , <nl>
ppp b / src / cpp / core / include / core / system / process . hpp <nl> struct <unk> <nl> # ifdef _win32 <nl> : <unk> ( false ) , <nl> <unk> ( false ) , <nl> <unk> ( ) { <nl> <unk> <unk> ( false ) <nl> # else <nl> : <unk> ( false ) ) <nl>
ppp b / src / cpp / core / include / core / system / process . hpp <nl> struct <unk> <nl> # ifdef _win32 <nl> : <unk> ( false ) , <nl> <unk> ( false ) , <nl> <unk> ( ) { <nl> <unk> <unk> ( false ) <nl> # else <nl> : <unk> ( false ) <nl>
ppp b / src / cpp / core / include / core / system / process . hpp <nl> struct <unk> <nl> # ifdef _win32 <nl> : <unk> ( false ) , <nl> <unk> ( false ) , <nl> <unk> ( ) { <nl> <unk> <unk> ( false ) <nl> # else <nl> : <unk> ( false ) , , <nl>
ppp b / src / cpp / core / include / core / system / process . hpp <nl>
====NEW EXAMPLE====
ppp b / roboguice / androidmanifest . xml <nl> < ! - - only used by robolectric - - > <nl>
ppp b / roboguice / androidmanifest . xml <nl> < ! - - only used by robolectric - - > <nl> < manifest xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> package = = " roboguice " <nl> android : versioncode = " 1 " <nl> android : versionname = " 1 . 0 " > <nl>
ppp b / roboguice / androidmanifest . xml <nl>
ppp b / roboguice / androidmanifest . xml <nl> < ! - - only used by robolectric - - > <nl> < manifest xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> package = = " roboguice " <nl> android : versioncode = " 1 " <nl> android : versionname = " 1 . 0 > <nl>
ppp b / roboguice / androidmanifest . xml <nl> < ! - - only used by robolectric - - > <nl> < manifest xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> package = = " roboguice " <nl> android : versioncode = " 1 " <nl> android : versionname = " 1 . 0 " " <nl>
====NEW EXAMPLE====
ppp b / idea / testdata / quickfix / <unk> / <unk> / <unk> . kt . after <nl> interface x { <nl> } <nl> fun foo ( x : x ) { <nl> x . <unk> ( 1 , <nl> 2 , <nl> 0 ) <nl> } <nl>
ppp b / idea / testdata / quickfix / <unk> / <unk> / <unk> . kt . after <nl> interface x { <nl> } <nl> fun foo ( x : x ) { <nl> x . <unk> ( 1 , <nl> 2 , <nl> 0 ) <nl> } <nl> <nl>
ppp b / idea / testdata / quickfix / <unk> / <unk> / <unk> . kt . after <nl> interface x { <nl> } <nl> fun foo ( x : x ) { <nl> x . <unk> ( 1 , <nl> 2 , <nl> 0 ) <nl> <nl>
ppp b / idea / testdata / quickfix / <unk> / <unk> / <unk> . kt . after <nl> interface x { <nl> } <nl> fun foo ( x : x ) { <nl> x . <unk> ( 1 , <nl> 2 , <nl> 0 ) <nl>
ppp b / idea / testdata / quickfix / <unk> / <unk> / <unk> . kt . after <nl> interface x { <nl> } <nl> fun foo ( x : x ) { <nl> x . <unk> ( 1 , <nl> 2 , <nl> 0 ) <nl> ) <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . - " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 62 <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 62 <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / python / helpers / pycharm / <unk> . py <nl> if not <unk> : <nl> if __name__ = = " __main__ " : <nl> <unk> ( ) <nl> <unk> ( ) <nl> ( ) <nl> ( ( <unk> ) <nl>
ppp b / python / helpers / pycharm / <unk> . py <nl> if not <unk> : <nl> if __name__ = = " __main__ " : <nl> <unk> ( ) <nl> <unk> ( ) <nl> ( ) <nl> ( ( <unk> <nl>
ppp b / python / helpers / pycharm / <unk> . py <nl> if not <unk> : <nl> if __name__ = = " __main__ " : <nl> <unk> ( ) <nl> <unk> ( ) <nl> ( ) <nl> ( ( ) <nl>
ppp b / python / helpers / pycharm / <unk> . py <nl> if not <unk> : <nl> if __name__ = = " __main__ " : <nl> <unk> ( ) <nl> <unk> ( ) <nl> ) <nl>
ppp b / python / helpers / pycharm / <unk> . py <nl> if not <unk> : <nl> if __name__ = = " __main__ " : <nl> <unk> ( ) <nl> <unk> ( ) <nl> ( ) <nl> ( ( <unk> ) <nl> <nl>
====NEW EXAMPLE====
ppp b / contributors . txt <nl> yyyy / mm / dd , github id , full name , email <nl>
ppp b / contributors . txt <nl>

ppp b / contributors . txt <nl> yyyy / mm / dd , github id , full name , <nl>
ppp b / contributors . txt <nl> yyyy / mm / dd , github id , full name , email <nl> 2013 / 01 / 29 , metadave , dave parfitt , diparfitt @ gmail . com <nl> 2013 / 03 / 06 , <unk> , <unk> <unk> , <unk> @ com . com / com / / , en - , get_p2p_supplicant_control_socket_dir , , <unk> gmail . com <nl> 2013 2013 / 08 / , , , <unk> <unk> , <unk> @ <unk> . com <nl>
====NEW EXAMPLE====
ppp b / core / java / android / view / <unk> . java <nl> public final class <unk> { <nl> int right , int bottom ) { <nl> final <unk> result = new <unk> ( this ) ; <nl>
ppp b / core / java / android / view / <unk> . java <nl> public final class <unk> { <nl> int right , int bottom ) { <nl>
ppp b / core / java / android / view / <unk> . java <nl> public final class <unk> { <nl> int right , int bottom ) { <nl> final <unk> result = new <unk> ( this ; <nl>
ppp b / core / java / android / view / <unk> . java <nl> public final class <unk> { <nl> int right , int bottom ) { <nl> final <unk> result = new <unk> ( this ) <nl>
ppp b / core / java / android / view / <unk> . java <nl> public final class <unk> { <nl> int right , int bottom ) <nl>
====NEW EXAMPLE====
ppp b / src / main / java / org / opentripplanner / routing / impl / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl>
ppp b / src / main / java / org / opentripplanner / routing / impl / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl> / / @ override <nl> boolean <unk> ( boolean <unk> ) { <nl> boolean <unk> = ; <nl> synchronized ( <unk> ) { <nl>
ppp b / src / main / java / org / opentripplanner / routing / impl / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> } <nl> / / @ override <nl> boolean <unk> ( boolean <unk> ) { <nl> boolean <unk> = ; <nl> synchronized ( <unk> ) ) <nl>
ppp b / src / main / java / org / opentripplanner / routing / impl / <unk> . java <nl>
ppp b / src / main / java / org / opentripplanner / routing / impl / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 1720 : support geo in storm - redis <nl>
ppp b / changelog . md <nl>
ppp

ppp b / changelog . md <nl> * storm - 1720 : support geo in storm - redis <nl> # # 1 . 0 . 2 <nl> * storm - 1646 : frequent interruptedexception raised <nl> * storm - storm - 1764 : pacemaker is throwing some stack traces <nl> * storm - 1761 : storm - solr example throws arrayindexoutofboundsexception remote = mode <nl> * storm - <unk> : explicitly null <unk> reference in <unk> prevent out of memory on large test classes . <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / bin / release <nl> eof <nl>
ppp b / bin / release <nl> eof <nl> if
ppp b / bin / release <nl> eof <nl> if [
ppp b / bin / release <nl> eof <nl> if [ !
ppp b / bin / release <nl>
====NEW EXAMPLE====
ppp b / src / main / org / codehaus / groovy / ast / classnode . java <nl> public class classnode extends annotatednode implements opcodes { <nl> } <nl> public void <unk> ( int modifiers ) { <nl> { <nl> this . modifiers modifiers ; <nl> } <nl> public list < propertynode > getproperties ( ) { <nl>
ppp b / src / main / org / codehaus / groovy / ast / classnode . java <nl> public class classnode extends annotatednode implements opcodes { <nl> } <nl> public void <unk> ( int modifiers ) { <nl> { <nl> this . modifiers modifiers ; <nl> } <nl> public list < propertynode > getproperties ( ) ) <nl>
ppp b / src / main / org / codehaus / groovy / ast / classnode . java <nl> public class classnode extends annotatednode implements opcodes { <nl> } <nl> public void <unk> ( int modifiers ) { <nl> { <nl> this . modifiers modifiers ; <nl> } <nl> public list < propertynode > getproperties ( ) { { <nl>
ppp b / src / main / org / codehaus / groovy / ast / classnode . java <nl> public class classnode extends annotatednode implements opcodes { <nl> } <nl> public void <unk> ( int modifiers ) { <nl> { <nl> this . modifiers modifiers ; <nl> } <nl> public list < propertynode > getproperties ( ) ) { <nl>
ppp b / src / main / org / codehaus / groovy / ast / classnode . java <nl> public class classnode extends annotatednode implements opcodes { <nl> } <nl> public void <unk> ( int modifiers ) { <nl> { <nl> this . modifiers modifiers ; <nl> } <nl> public list < propertynode > getproperties ( ) { <nl> <nl>
====NEW EXAMPLE====
ppp b / app / build . gradle <nl> android { <nl> } <nl> ext { <nl> supportversion = ' 23 . 1 . 0 ' <nl> okhttpversion = ' 2 . 5 . 0 ' <nl> daggerversion = ' 1 . 2 . 2 ' <nl> } <nl>
ppp b / app / build . gradle <nl> android { <nl> } <nl> ext { <nl> supportversion = ' 23 . 1 . 0 ' <nl> okhttpversion = ' 2 . 5 . 0 ' <nl> daggerversion = ' 1 . 2 . 2 ' } <nl>
ppp b / app / build . gradle <nl> android { <nl> } <nl> ext { <nl> supportversion = ' 23 . 1 . 0 ' <nl> okhttpversion = ' 2 . 5 . 0 ' <nl> daggerversion = ' 1 . 2 . 2 ' <nl>
ppp b / app / build . gradle <nl> android { <nl> } <nl> ext { <nl> supportversion = ' 23 . 1 . 0 ' <nl> okhttpversion = ' 2 . 5 . 0 ' <nl> daggerversion = ' 1 . 2 . 2 ' <nl> } <nl> <nl>
ppp b / app / build . gradle <nl> android { <nl> } <nl> ext { <nl> supportversion = ' 23 . 1 . 0 ' <nl> okhttpversion = ' 2 . 5 . 0 ' <nl> daggerversion = ' 1 . 2 . 2 ' <nl> <nl>
====NEW EXAMPLE====
ppp b / hystrix - contrib / hystrix - <unk> / build . gradle <nl> ext { <nl> aspectjversion = ' 1 . 7 . 4 ' <nl> } <nl> 1 . 0 . ' <nl> } <nl>
ppp b / hystrix - contrib / hystrix - <unk> / build . gradle <nl> ext { <nl> aspectjversion = ' 1 . 7 . 4 ' <nl> } <nl> . 1 . ' <nl> } <nl>
ppp b
ppp b / hystrix - contrib / hystrix - <unk> / build
ppp b / hystrix - contrib / hystrix - <unk> / build . gradle <nl> ext { <nl> aspectjversion = ' 1 . 7 . 4 ' <nl> } <nl> 1 . 0 . ' <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > org . reflections < / groupid > <nl> < artifactid > reflections < / artifactid > <nl> < version > 0 . 9 . 10 < / version > <nl> < < name > reflections < / name > <nl> < description > > - a java runtime metadata analysis < / description > <nl>
ppp b / pom . xml <nl> < groupid > org . reflections < / groupid > <nl>
ppp b / pom . xml <nl> < groupid > org . reflections < / groupid > <nl> < artifactid > reflections < / artifactid > <nl> < version > 0 . 9 . 10 < / version > <nl> < < name > reflections < / name > <nl> < description > > - a java runtime metadata analysis < / > <nl>
ppp b / pom . xml <nl> < groupid > org . reflections < / groupid > <nl> < artifactid > reflections < / artifactid > <nl> < version > 0 . 9 . 10 < / version > <nl> < < name > reflections < / name > <nl> < description > > - a java runtime metadata analysis < / description > > <nl>
ppp b / pom . xml <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - template git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / fml / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 1 . 8 - bin . zip <nl>
ppp b / fml / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 1 . 8 - bin . . <nl>
ppp b / fml / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 1 . 8 - bin . <nl>
ppp b / fml / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 1 . 8 - bin . zip zip <nl>
ppp b / fml / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 1 . 8 - bin zip <nl>
====NEW EXAMPLE====
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 175 <nl> versionname " 3 . 1 . 1 . 3 " <nl> multidexenabled true <nl> generateddensities = [ ] <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 175 <nl> versionname " 3 . 1 . 1 . 3 " <nl> multidexenabled true <nl> generateddensities = [ ] ] <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 175 <nl> versionname " 3 . 1 . 1 . 3 " <nl> multidexenabled true <nl> generateddensities = [ <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 175 <nl> versionname " 3 . 1 . 1 . 3 " <nl> multidexenabled true <nl> generateddensities = [ ] <nl> <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 175 <nl> versionname " 3 . 1 . 1 . 3 " <nl> multidexenabled true <nl> generateddensities = [ ]
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 1 ' <nl> versioncode = 236 <nl> versionname = ' 12 . 2 - beta ' <nl> } <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 1 ' <nl> versioncode = 236 <nl> versionname = ' 12 . 2 - beta ' <nl> <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 1 ' <nl> versioncode = 236 <nl> versionname = ' 12 . 2 - beta ' <nl> } <nl> <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 1 ' <nl> versioncode = 236 <nl> versionname = ' 12 . 2 - beta ' <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 1 ' <nl> versioncode = 236 <nl> versionname = ' 12 . 2 - beta ' <nl> }
====NEW EXAMPLE====
ppp b / test / org / apache / coyote / http11 / <unk> . java <nl>
ppp b / test / org / apache / coyote / http11 / <unk> . java <nl> public class <unk> extends tomcatbasetest { <nl> private exception <unk> ( ) { <nl> tomcat tomcat = <unk> ( ) ; <nl> if ( ) { <nl> { <nl> tomcat tomcat = <unk> ( ) ; <nl> context root = tomcat . <unk> ( " " , <unk> ) ; <nl>
ppp b / test / org / apache / coyote / http11 / <unk> . java <nl> public class <unk> extends tomcatbasetest { <nl> private exception <unk> ( ) { <nl> tomcat tomcat = <unk> ( ) ; <nl> if ( ) { <nl> { <nl> tomcat tomcat = <unk> ( ) ; <nl> context root = tomcat . <unk> ( " " , <unk> ) ) ; <nl>
ppp b / test / org / apache / coyote / http11 / <unk> . java <nl> public class <unk> extends tomcatbasetest { <nl> private exception <unk> ( ) { <nl> tomcat tomcat = <unk> ( ) ; <nl> if ( ) { <nl> { <nl> tomcat tomcat = <unk> ( ) ; <nl> context root = tomcat . <unk> ( " " , <unk> ; <nl>
ppp b / test / org / apache / coyote / http11 / <unk> . java <nl> public class <unk> extends tomcatbasetest { <nl> private exception <unk> ( ) { <nl> tomcat tomcat = <unk> ( ) ; <nl> if ( ) { <nl> { <nl> tomcat tomcat = <unk> ( ) ; <nl> context root = tomcat . <unk> ( " " , <unk> <unk> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ef8fe103e571a3d8a95f36ccbf433d3c5ca1c280 <nl> mode = push <nl> parent = eb7236e4edef5335b5a9f99b567c50c15ca17f2c <nl> remote = git @ github . com : liferay / com - liferay - portal - settings . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ef8fe103e571a3d8a95f36ccbf433d3c5ca1c280 <nl> mode = push <nl> parent = eb7236e4edef5335b5a9f99b567c50c15ca17f2c <nl> remote = git @ github . com : liferay / com - liferay - portal - settings <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 007ceef0a7596efc979c1670fc0064881b63e0ff <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 007ceef0a7596efc979c1670fc0064881b63e0ff <nl> remote = git @ github . com : liferay / com - liferay - portal . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / library / src / com / bumptech / glide / volley / <unk> . java <nl> public class <unk> implements <unk> < inputstream > { <nl> <unk> < inputstream > <unk> = <unk> ; <nl> if ( <unk> ! = null ) { <nl> <unk> . cancel ( ) ; <nl> } <nl> } <nl>
ppp b / library / src / com / bumptech / glide / volley / <unk> . java <nl> public class <unk> implements <unk> < inputstream > { <nl> <unk> < inputstream > <unk> = <unk> ; <nl>
ppp b / library / src / com / bumptech / glide / volley / <unk> . java <nl> public class <unk> implements <unk> < inputstream > { <nl> <unk> < inputstream > <unk> = <unk> ; <nl> if ( <unk> ! = null ) { <nl> <unk> . cancel ( ) ; <nl> } } <nl>
ppp b / library / src / com / bumptech / glide / volley / <unk> . java <nl> public class <unk> implements <unk> < inputstream > { <nl> <unk> < inputstream > <unk> = <unk> ; <nl> if ( <unk> ! = null ) { <nl> <unk> . cancel ( ) ; <nl> } <nl>
ppp b / library / src / com / bumptech / glide / volley / <unk> . java <nl> public class <unk> implements <unk> < inputstream > { <nl> <unk> < inputstream > <unk> = <unk> ; <nl> if ( <unk> ! = null ) { <nl> <unk> . cancel ( ) ; <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / docs / contributing - to - tachyon . md <nl> purpose it <unk> . <nl> in your pull request title , make sure to reference the jira ticket , for example : <nl>
ppp b / docs / contributing - to - tachyon . md <nl> purpose it <unk> . <nl> in your pull request title , make sure to reference the jira ticket , for example : <nl> ~ ~ ~ ~ ~ ~ ~ <nl>
ppp b / docs / contributing - to - tachyon . md <nl> purpose it <unk> . <nl> in your pull request title , make sure to reference the jira ticket , for example : <nl> ~ ~ ~ ~ ~ ~ ~ ~ <nl>
ppp b / docs / contributing - to - tachyon . md <nl> purpose it <unk> . <nl> in your pull request title , make sure to reference the jira ticket , for example <nl>
ppp b / docs / contributing - to - tachyon . md <nl> purpose it <unk> . <nl> in your pull request title , make sure to reference the jira ticket , for example : <nl> ~ ~ ~ ~ ~ ~ <nl>
====NEW EXAMPLE====
ppp b / visualizationmodule / src / org / gephi / visualization / <unk> . java <nl> public class <unk> { <nl> / / <unk> <nl> <unk> . <unk> ( writer ) ; <nl>
ppp b / visualizationmodule / src / org / gephi / visualization / <unk> . java <nl> public class <unk> { <nl> / / <unk> <nl> <unk> . <unk> ( writer ) ; <nl> / / camera <nl> writer . <unk> ( " <unk> " ) ; <nl>
ppp b / visualizationmodule / src / org / gephi / visualization / <unk> . java <nl> public class <unk> { <nl> / / <unk> <nl> <unk> . <unk> ( writer ) ) ; <nl>
ppp b / visualizationmodule / src / org / gephi / visualization / <unk> . java <nl> public class <unk> { <nl> / / <unk> <nl> <unk> . <unk> ( writer ) ; <nl> } <nl>
ppp b / visualizationmodule / src / org / gephi / visualization / <unk> . java <nl> public class <unk> { <nl> / / <unk> <nl> <unk> . <unk> ( writer ) ; <nl> / / camera <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fe23c5f7496d26e325f4c1ead8a8f7539f04b708 <nl> mode = push <nl> parent = 3e546d0f83baf742111a926ab9ebfc5cfc9e600e <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fe23c5f7496d26e325f4c1ead8a8f7539f04b708 <nl> mode = push <nl> parent = 3e546d0f83baf742111a926ab9ebfc5cfc9e600e <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> protected void finalize ( ) throws throwable { <nl> try { <nl> if ( mnativeclass ! = 0 ) { <nl> { <nl> post ( new runnable ( ) { <nl> @ override <nl> public void run ( ) { <nl> destroy ( ) ; <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> protected void finalize ( ) throws throwable { <nl> try { <nl> if ( mnativeclass ! = 0 ) { <nl> { <nl> post ( new runnable ( ) { <nl> @ override <nl> public void run ( ) { <nl> destroy ( ) ) ; <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> protected void finalize ( ) throws throwable { <nl> try { <nl> if ( mnativeclass ! = 0 ) { <nl> { <nl> post ( new runnable ( ) { <nl> @ override <nl> public void run ( ) { <nl> destroy ( ; <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> protected void finalize ( ) throws throwable { <nl> try { <nl> if ( mnativeclass ! = 0 ) { <nl> { <nl> post ( new runnable ( ) { <nl> @ override <nl> public void run ( ) { <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> protected void finalize ( ) throws throwable { <nl> try { <nl> if ( mnativeclass ! = 0 ) { <nl> { <nl> post ( new runnable ( ) { <nl> @ override <nl> public void run ( ) { <nl> destroy ( ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / fml <nl> subproject commit <unk> <nl>
ppp b / fml <nl> subproject commit = <nl>
ppp b / fml <nl> subproject commit 4e7c70b2489a96b14039eb30d18fba7b3353b59c <nl>
ppp b / fml <nl> subproject commit 2135c723b4134a94cb5013f497f1bad8ef18deb6 <nl>
ppp b / fml <nl> subproject commit <nl>
====NEW EXAMPLE====
ppp b / src / gwt / src / org / rstudio / studio / client / workbench / views / connections / ui / <unk> . java <nl> public class <unk> extends <unk> implements <unk> <nl> / / create widget <nl> <unk> ( ) ; <nl> } <nl> @ override <nl> } <nl> } <nl> @ override <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / workbench / views / connections / ui / <unk> . java <nl> public class <unk> extends <unk> implements <unk> <nl> / / create widget <nl> <unk> ( ) ; <nl> } <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / workbench / views / connections / ui / <unk> . java <nl> public class <unk> extends <unk> implements <unk> <nl> / / create widget <nl> <unk> ( ) ; <nl> } <nl> @ override <nl> } <nl> } <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / workbench / views / connections / ui / <unk> . java <nl> public class <unk> extends <unk> implements <unk> <nl> / / create widget <nl> <unk> ( ) ; <nl> } <nl> @ override <nl> } <nl> } <nl> override <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / workbench / views / connections / ui / <unk> . java <nl> public class <unk> extends <unk> implements <unk> <nl> / / create widget <nl> <unk> ( ) ; <nl> } <nl> @ override <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> * fix truncate / compaction race ( cassandra - <unk> ) <nl>
ppp b / changes . txt <nl>

ppp b / changes . txt <nl> * fix truncate / compaction race
ppp b / changes . txt <nl> * fix truncate / compaction race ( cassandra - <unk> ) <nl> * improve cql jdbc spec compliance ( cassandra - <unk> ) <nl> * add cql alter table ( cassandra - <unk> ) <nl> <nl> * updated czech localisation to use hashes rather than needed <nl> 0 . 8 . 0 - final <nl> * fix cql grammar warning and cqlsh regression from cassandra - <unk> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0d9ad441037f62167146a67a4dcbfef4d1b3063f <nl> mode = push <nl> parent = a983c0d43fd537e2426421c1cf41e62e2f4406c4 <nl> remote = git @ github . com : liferay / com - liferay - expando . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0d9ad441037f62167146a67a4dcbfef4d1b3063f <nl> mode = push <nl> parent = a983c0d43fd537e2426421c1cf41e62e2f4406c4 <nl> remote = git @ github . com : liferay / com - liferay - expando . git <nl> \ no newline at end of file
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0d9ad441037f62167146a67a4dcbfef4d1b3063f <nl> mode = push <nl> parent = a983c0d43fd537e2426421c1cf41e62e2f4406c4 <nl> remote = git @ github . com : liferay / com - liferay - expando . git <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / sonar - server / src / main / webapp / web - inf / app / models / internal . rb <nl> class internal <nl> end <nl> def self . <unk> <nl> component ( java : : <unk> : : <unk> . <unk> ) <nl> end <nl> private <nl>
ppp b / sonar - server / src / main / webapp / web - inf / app / models / internal . rb <nl> class internal <nl> end <nl> def self . <unk> <nl> component ( java : : <unk> : : <unk> . <unk> ) <nl> end <nl> <nl>
ppp b / sonar - server / src / main / webapp / web - inf / app / models / internal . rb <nl> class internal <nl> end <nl> def self . <unk> <nl> component ( java : : <unk> : : <unk> . <unk> ) <nl> end <nl>
ppp b / sonar - server / src / main / webapp / web - inf / app / models / internal . rb <nl> class internal <nl> end <nl> def self . <unk> <nl> component ( java : : <unk> : : <unk> . <unk> ) <nl> end <nl> private <nl> <nl>
ppp b / sonar - server / src / main / webapp / web - inf / app / models / internal . rb <nl> class internal <nl> end <nl> def self . <unk> <nl> component ( java : : <unk> : : <unk> . <unk> ) <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> 3 . 0 . 1 <nl>
ppp b / changes . txt <nl> 3 . 0 . 1 <nl> merged
ppp b / changes . txt <nl> 3 . 0
ppp b / changes . txt <nl> 3 . 0 . 1 <nl> merged from
ppp b / changes . txt <nl> 3 .
====NEW EXAMPLE====
ppp b / python / helpers / pycharm / <unk> / loader . py <nl> class <unk> ( unittest . <unk> ) : <nl> raise <nl> except : <nl> exc = sys . exc_info ( ) <nl>
ppp b / python / helpers / pycharm / <unk> / loader . py <nl> class <unk> ( unittest . <unk> ) : <nl> raise <nl> except : <nl> exc = sys . exc_info ( <nl>
ppp b / python / helpers / pycharm / <unk> / loader . py <nl> class <unk> ( unittest . <unk> ) : <nl> raise <nl> except : <nl>
ppp b / python / helpers / pycharm / <unk> / loader . py <nl> class <unk> ( unittest . <unk> ) : <nl> raise <nl>
ppp b / python / helpers / pycharm / <unk> / loader . py <nl> class <unk> ( unittest . <unk> ) : <nl> raise <nl> except <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - message - boards . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . google . android < / groupid > <nl> < artifactid > support - v4 < / artifactid > <nl> < version > <unk> < / scope > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / pom . xml <nl> < groupid > com . google . android < / groupid > <nl> < artifactid > support - v4 < / artifactid > <nl>
ppp b / pom . xml <nl> < groupid > com . google . android < / groupid > <nl> < artifactid > support - v4 < / artifactid > <nl> < version > <unk> < / > <nl>
ppp b / pom . xml <nl> < groupid > com . google . android < / groupid > <nl> < artifactid > support - v4 < / artifactid > <nl> < version > <unk> < / scope > <nl> < / dependency > <nl> < dependency > > <nl>
ppp b / pom . xml <nl> < groupid > com . google . android < / groupid > <nl> < artifactid > support - v4 < / artifactid > <nl> < version > <unk> < / scope > <nl> < / dependency > <nl> < dependency >
====NEW EXAMPLE====
ppp b / changelog . md <nl> change log <nl>
ppp b / changelog . md <nl>
ppp

ppp b / changelog . md <nl> change log <nl> = = = = = = = = = <nl> # # version 1 . 0 . 11 <nl> * fixed runtime exception when <unk> <unk> - , added creator ( # 25 25 ) <nl> * fixed logic for setting image <nl> * added <unk> ( # 19 , # 24 ) <nl>
====NEW EXAMPLE====
ppp b / library / src / main / java / com / <unk> / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> <unk> = false ; <nl> if ( <unk> < <unk> ) <unk> . . <unk> ( <unk> ) ; <nl> } <nl>
ppp b / library / src / main / java / com / <unk> / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> <unk> = false ; <nl> if ( <unk> < <unk> ) <unk> . . <unk> ( <unk> ) ; <nl> } <nl> <nl>
ppp b / library / src / main / java / com / <unk> / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> <unk> = false ; <nl> if ( <unk> < <unk> ) <unk> . . <unk> ( <unk> ) ; <nl> } <nl> } <nl>
ppp b / library / src / main / java / com / <unk> / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> <unk> = false ; <nl> if ( <unk> < <unk> ) <unk> . . <unk> ( <unk> ) ; <nl>
ppp b / library / src / main / java / com / <unk> / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> <unk> = false ; <nl> if ( <unk> < <unk> ) <unk> . . <unk> ( <unk> ) ; <nl> } } <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / goals > <nl> < configuration > <nl> < consoleoutput > true < / consoleoutput > <nl>
ppp b / pom . xml <nl> < / goals > <nl> < configuration > <nl>
ppp b / pom . xml <nl> < / goals > <nl>
ppp
ppp b / pom . xml <nl>
====NEW EXAMPLE====
ppp b / library / src / androidtest / assets / ts / sample . ts . 0 . dump <nl> track <unk> : <nl> <unk> = - 1 <nl> <unk> = <unk> <nl> <unk> = 0 <nl> language = null <nl> <unk> = - <nl> <unk> : <nl> sample count = 4 <nl>
ppp b / library / src / androidtest / assets / ts / sample . ts . 0 . dump <nl> track <unk> : <nl> <unk> = - 1 <nl> <unk> = <unk> <nl> <unk> = 0 <nl> language = null <nl> <unk> = - <nl> <unk> : <nl> sample count = 4 4 <nl>
ppp b / library / src / androidtest / assets / ts / sample . ts . 0 . dump <nl> track <unk> : <nl> <unk> = - 1 <nl> <unk> = <unk> <nl> <unk> = 0 <nl> language = null <nl> <unk> = - <nl> <unk> : <nl> sample count = <nl>
ppp b / library / src / androidtest / assets / ts / sample . ts . 0 . dump <nl> track <unk> : <nl> <unk> = - 1 <nl> <unk> = <unk> <nl> <unk> = 0 <nl> language = null <nl> <unk> = - <nl> <unk> : <nl> sample count = 4
ppp b / library / src / androidtest / assets / ts / sample . ts . 0 . dump <nl> track <unk> : <nl> <unk> = - 1 <nl> <unk> = <unk> <nl> <unk> = 0 <nl> language = null <nl> <unk> = - <nl> <unk> : <nl> sample count = = <nl>
====NEW EXAMPLE====
ppp b / profiles / killbill / src / main
ppp b / profiles / killbill / src / main / resources
ppp b / profiles / killbill / src / main / resources /
ppp b / profiles / killbill / src / main /
ppp b / profiles / killbill / src / main / resources / killbill
====NEW EXAMPLE====
ppp b / platform / vcs - log / impl / src / com / intellij / vcs / log / data / <unk> . java <nl> public class <unk> implements disposable , <unk> { <nl> return <unk> ; <nl> } <nl> public <unk> <unk> ( ) { <nl> ) { <nl> return <unk> ; <nl> } <nl>
ppp b / platform / vcs - log / impl / src / com / intellij / vcs / log / data / <unk> . java <nl>
ppp b / platform / vcs - log / impl / src / com / intellij / vcs / log / data / <unk> . java <nl> public class <unk> implements disposable , <unk> { <nl> return <unk> ; <nl> } <nl> public <unk> <unk> ( ) { <nl> ) { <nl> return <unk> ; <nl>
ppp b / platform / vcs - log / impl / src / com / intellij / vcs / log / data / <unk> . java <nl> public class <unk> implements disposable , <unk> { <nl> return <unk> ; <nl> } <nl> public <unk> <unk> ( ) { <nl> ) { <nl> return <unk> ; <nl> } <nl> <nl>
ppp b / platform / vcs - log / impl / src / com / intellij / vcs / log / data / <unk> . java <nl> public class <unk> implements disposable , <unk> { <nl> return <unk> ; <nl> } <nl> public <unk> <unk> ( ) { <nl> ) { <nl> return <unk> ; <nl> }
====NEW EXAMPLE====
ppp b / packages / systemui / android . mk
ppp b / packages / systemui / android . mk <nl> local_java_libraries : = services <nl> local_package_name : = systemui <nl> local_certificate : = platform <nl> * $ { <nl> = = = = " <nl> : <nl> = = platform <nl> include $ ( build_package ) <nl>
ppp b / packages / systemui / android . mk <nl> local_java_libraries : = services <nl> local_package_name : = systemui <nl> local_certificate : = platform <nl> * $ { <nl> = = = = " <nl> : <nl> = = platform <nl> include $ ( ) <nl>
ppp b / packages / systemui / android . mk <nl> local_java_libraries : = services <nl> local_package_name : = systemui <nl> local_certificate : = platform <nl> * $ { <nl> = = = = " <nl> : <nl> = = platform <nl> include $ ( build_package <nl>
ppp b / packages / systemui / android . mk <nl> local_java_libraries : = services <nl> local_package_name : = systemui <nl> local_certificate : = platform <nl> * $ { <nl> = = = = " <nl> : <nl> = platform <nl>
====NEW EXAMPLE====
ppp b / src / cpp / session / resources / markdown . html <nl> < title > # ! title # < / title > <nl>
ppp b / src / cpp / session / resources / markdown . html <nl> < title > # ! title # < / title > <nl> < base target = " <unk> " > <nl>
ppp b / src / cpp / session / resources / markdown . html <nl> < title > # ! title # < / title > <nl> < base target = " <unk> " " <nl>
ppp b / src / cpp / session / resources / markdown . html <nl> < title > # ! title # < / title > <nl> < base target = " <unk> " " > <nl>
ppp b / src / cpp / session / resources / markdown . html <nl> < title > # ! title # < / title > <nl> < base target = " <unk> " " " <nl>
====NEW EXAMPLE====
ppp b / telecomm / java / android / telecom / <unk> . java <nl> public class <unk> extends <unk> { <nl> / * * { @ inheritdoc } * / <nl> public void <unk> ( ) { <nl> <unk> = null ; <nl> try { <nl> <unk> . <unk> ( <unk> ) ; <nl> } catch ( remoteexception e ) { <nl>
ppp b / telecomm / java / android / telecom / <unk> . java <nl> public class <unk> extends <unk> { <nl> / * * { @ inheritdoc } * / <nl> public void <unk> ( ) { <nl> <unk> = null ; <nl> try { <nl> <unk> . <unk> ( <unk> ) ; <nl> } catch ( remoteexception e ) ) <nl>
ppp b / telecomm / java / android / telecom / <unk> . java <nl> public class <unk> extends <unk> { <nl> / * * { @ inheritdoc } * / <nl> public void <unk> ( ) { <nl> <unk> = null ; <nl> try { <nl> <unk> . <unk> ( <unk> ) ; <nl> } catch ( remoteexception e { <nl>
ppp b / telecomm / java / android / telecom / <unk> . java <nl> public class <unk> extends <unk> { <nl> / * * { @ inheritdoc } * / <nl> public void <unk> ( ) { <nl> <unk> = null ; <nl> try { <nl> <unk> . <unk> ( <unk> ) ; <nl> } catch ( remoteexception e ) <nl>
ppp b / telecomm / java / android / telecom / <unk> . java <nl> public class <unk> extends <unk> { <nl> / * * { @ inheritdoc } * / <nl> public void <unk> ( ) { <nl> <unk> = null ; <nl> try { <nl> <unk> . <unk> ( <unk> ) ; <nl> } catch ( remoteexception e ) { <nl> <nl>
====NEW EXAMPLE====
ppp b / deeplearning4j - ui / src / main / resources / dropwizard . yml <nl> server : <nl> selectorthreads : 3 <nl> bindhost : 0 . 0 . 0 . 0 # only bind to loopback <nl> maxthreads : 1cd <nl> minthreads : 2 <nl> adminminthreads : 3 <nl> adminmaxthreads : 100 <nl>
ppp b / deeplearning4j - ui / src / main / resources / dropwizard . yml <nl> server : <nl> selectorthreads : 3 <nl> bindhost : 0 . 0 . 0 . 0 # only bind to loopback <nl> maxthreads : 1cd <nl> minthreads : 2 <nl> adminminthreads : 3 <nl> adminmaxthreads : 100 100 <nl>
ppp b / deeplearning4j - ui / src / main / resources / dropwizard . yml <nl> server : <nl> selectorthreads : 3 <nl> bindhost : 0 . 0 . 0 . 0 # only bind to loopback <nl> maxthreads : 1cd <nl> minthreads : 2 <nl> adminminthreads : 3 <nl> adminmaxthreads : : <nl>
ppp b / deeplearning4j - ui / src / main / resources / dropwizard . yml <nl> server : <nl> selectorthreads : 3 <nl> bindhost : 0 . 0 . 0 . 0 # only bind to loopback <nl> maxthreads : 1cd <nl> minthreads : 2 <nl> adminminthreads : 3 <nl> adminmaxthreads : <nl>
ppp b / deeplearning4j - ui / src / main / resources / dropwizard . yml <nl> server : <nl> selectorthreads : 3 <nl> bindhost : 0 . 0 . 0 . 0 # only bind to loopback <nl> maxthreads : 1cd <nl> minthreads : 2 <nl> adminminthreads : 3 <nl>
====NEW EXAMPLE====
ppp b / build . xml <nl> debug = " on " <nl>
ppp b / build . xml <nl> debug = " on " <nl> classpath = " @ { classpath } " <nl> includeantruntime = " false " <nl> target = " 1 . 5 " <nl> target = " 1 . 5 " <nl> > <nl> < <unk> value = " - xlint : unchecked " / > <nl>
ppp b / build . xml <nl>
ppp b / build . xml <nl> debug = " on " <nl> classpath
ppp
====NEW EXAMPLE====
ppp b / core / src / main / resources / org / elasticsearch / plugins / plugin - install . help <nl> official <nl>
ppp b / core / src / main / resources / org / elasticsearch / plugins / plugin - install . help <nl> official plugins mapper <nl>
ppp b / core / src / main / resources / org / elasticsearch / plugins / plugin - install . help <nl> official plugins <nl>
ppp b / core / src / main / resources / org / elasticsearch / plugins / plugin - install . help <nl> official plugins mapper <nl> <nl>
ppp b / core / src / main / resources / org / elasticsearch / plugins / plugin - install . help <nl> official plugins mapper <nl> attachments <nl>
====NEW EXAMPLE====
ppp b / spongecommon <nl> subproject commit <unk> <nl>
ppp b / spongecommon <nl> subproject commit = <nl>
ppp b / spongecommon <nl> subproject commit 4e7c70b2489a96b14039eb30d18fba7b3353b59c <nl>
ppp b / spongecommon <nl> subproject commit 2135c723b4134a94cb5013f497f1bad8ef18deb6 <nl>
ppp b / spongecommon <nl> subproject commit 1e33dfa586ddaa256028d7bcd35675a46ee5806b <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / core / java / android / webkit / webviewcore . java <nl> public final class webviewcore { <nl> width = <unk> ; <nl> } else { <nl>
ppp b / core / java / android / webkit / webviewcore . java <nl> public final class webviewcore { <nl> width = <unk> ; <nl>
ppp b / core / java / android / webkit / webviewcore . java <nl> public final class webviewcore { <nl> width = <unk> ; <nl> } else { <nl> / / for mobile web site . <nl> width = mwebview . <unk> ( ) ; <nl> } <nl> = = = null ( ) ; <nl> } <nl> } <nl> return width ; <nl>
ppp b / core / java / android / webkit / webviewcore . java <nl> public final class webviewcore { <nl>
ppp b / core / java / android / webkit / webviewcore . java <nl>
====NEW EXAMPLE====
ppp b / build . xml <nl> < target name = " test . release " depends = " test . zip . release , test . zip . release . separate . jars " / > <nl>
ppp b / build . xml <nl> < target name = " test . release " depends = " test . zip . release , test . zip . release . separate . jars " > <nl>
ppp b / build . xml <nl> < target name = " test . release " depends = " test . zip . release , test . zip . release . separate . jars " / <nl>
ppp b / build . xml <nl>
ppp
====NEW EXAMPLE====
ppp b / changes . txt <nl> dev <nl>
ppp b / changes . txt <nl>

ppp b / changes . txt <nl> dev <nl> * make <unk> transport the default so <unk> requests can ' t <unk> the <nl> server ( cassandra - <unk> ) <nl> * <unk> faster reads from row cache ( cassandra - 1267 ) <nl> * @ see http proxy granting ticket - ( cassandra - 1267 ) <nl> 0 . 6 . 4 <nl>
ppp b / changes . txt <nl> dev <nl> * make <unk> transport the default so <unk> requests can ' t <unk> the <nl> server ( cassandra - <unk> ) <nl> * <unk> faster reads from row cache ( cassandra - 1267 ) <nl> * @ see http proxy granting ticket - ( cassandra - 1267 ) <nl> 0 . 6 . 4 4 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4bdd3c72d8cb3caf0e7f5ef75dc60c2ce348e85b <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - polls . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4bdd3c72d8cb3caf0e7f5ef75dc60c2ce348e85b <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - polls . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 31e9bccef83f59f5719148bf533fc6831d61a5ea <nl> mode = push <nl> parent = d57499b07cf9a603f4ee86f091961c09d2f5f70d <nl> remote = git @ github . com : liferay / com - liferay - product - navigation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / src / com / facebook / buck / util / <unk> . java <nl> public class <unk> implements <unk> , closeable { <nl>
ppp b / src / com / facebook / buck / util / <unk> . java <nl> public class <unk> implements <unk> , closeable { <nl> return new httpresponse ( content , response ) ; <nl> } catch ( ioexception e ) { <nl> throw new runtimeexception ( e ) ; <nl> } <nl> throw new rsruntimeexception ( ) ) ; <nl> } <nl> } <nl> } ) ; <nl>
ppp b / src / com / facebook / buck / util / <unk> . java <nl>
ppp b / src / com / facebook / buck / util / <unk> . java <nl> public class <unk> implements <unk> , closeable { <nl> return new httpresponse ( content , response ) ; <nl> } catch ( ioexception e ) { <nl> throw new runtimeexception ( e ) ; <nl> } <nl> throw new rsruntimeexception ( ) ) ; <nl> } <nl> } <nl> } ) ) ; <nl>
ppp b / src / com / facebook / buck / util / <unk> . java <nl> public class <unk> implements <unk> , closeable { <nl> return new httpresponse ( content , response ) ; <nl> } catch ( ioexception e ) { <nl> throw new runtimeexception ( e ) ; <nl> } <nl> throw new rsruntimeexception ( ) ) ; <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / enterprise / readme . txt <nl> to get started and for more information about neo4j go to http : / / neo4j . org <nl> quick start : <nl>
ppp b / enterprise / readme . txt <nl> to get started and for more information about neo4j go to http : / / neo4j . org <nl> quick start : <nl> : <nl>
ppp b / enterprise / readme . txt <nl> to get started and for more information about neo4j go to http : / / neo4j . org <nl> quick start : <nl> <nl>
ppp b / enterprise / readme . txt <nl> to get started and for more information about neo4j go to http : / / neo4j . org <nl> quick start : : <nl>
ppp b / enterprise / readme . txt <nl> to get started and for more information about neo4j go to http : / / neo4j . org <nl> quick start <nl>
====NEW EXAMPLE====
ppp b / library / src / main / java / com / google / android / exoplayer / <unk> / variant . java <nl> public final class variant implements <unk> { <nl> return format ; <nl> } <nl>
ppp b / library / src / main / java / com / google / android / exoplayer / <unk> / variant . java <nl> public final class variant implements <unk> { <nl> return format ; <nl> } <nl> } <nl>
ppp b / library / src / main / java / com / google / android / exoplayer / <unk> / variant . java <nl> public final class variant implements <unk> { <nl> return format ; <nl> } <nl> string <nl>
ppp b / library / src / main / java / com / google / android / exoplayer / <unk> / variant . java <nl> public final class variant implements <unk> { <nl> return format ; <nl> } <nl> <nl>
ppp b / library / src / main / java / com / google / android / exoplayer / <unk> / variant . java <nl> public final class variant implements <unk> { <nl> return format ; } <nl>
====NEW EXAMPLE====
ppp b / py / testdir_single_jvm / <unk> . py <nl> class basic ( unittest . testcase ) : <nl> @ classmethod <nl> def teardownclass ( cls ) : <nl>
ppp b / py / testdir_single_jvm / <unk> . py <nl> class basic ( unittest . testcase ) : <nl> @ classmethod <nl>
ppp b / py / testdir_single_jvm / <unk> . py <nl> class basic ( unittest . testcase ) : <nl> @ classmethod <nl> def teardownclass ( cls ) { <nl>
ppp b / py / testdir_single_jvm / <unk> . py <nl> class basic ( unittest . testcase ) : <nl> @ classmethod <nl> def teardownclass ( cls ) : : <nl>
ppp b / py / testdir_single_jvm / <unk> . py <nl> class basic ( unittest . testcase ) : <nl> @ classmethod <nl> def teardownclass ( cls ) : print <nl>
====NEW EXAMPLE====
ppp b / subprojects / platform - base / src / integtest / groovy / org / gradle / language / base / <unk> . groovy <nl> model { <nl> } <nl> } <nl> } <nl> " " " <nl> then : <nl> succeeds " components " <nl>
ppp b / subprojects / platform - base / src / integtest / groovy / org / gradle / language / base / <unk> . groovy <nl> model { <nl> } <nl> } <nl> } <nl> " " " <nl> then : <nl> succeeds " components <nl>
ppp b / subprojects / platform - base / src / integtest / groovy / org / gradle / language / base / <unk> . groovy <nl> model { <nl> } <nl> } <nl> } <nl> " " " <nl> then : <nl> succeeds " components "
ppp b / subprojects / platform - base / src / integtest / groovy / org / gradle / language / base / <unk> . groovy <nl> model { <nl> } <nl> } <nl> } <nl> " " " <nl> then : <nl> succeeds " components " " <nl>
ppp b / subprojects / platform - base / src / integtest / groovy / org / gradle / language / base / <unk> . groovy <nl> model { <nl> } <nl> } <nl> } <nl> " " " <nl> then : <nl> succeeds " components " <nl> <nl>
====NEW EXAMPLE====
ppp b / aeron - client / src / main / java / uk / co / real_logic / aeron / publication . java <nl> public class publication implements autocloseable <nl> default : <nl> <unk> = ( position - <unk> ) + <unk> ; <nl> } <nl> return <unk> ; <nl>
ppp b / aeron - client / src / main / java / uk / co / real_logic / aeron / publication . java <nl> public class publication implements autocloseable <nl> default : <nl> <unk> = ( position - <unk> ) + <unk> ; <nl> } <nl> return ; <nl>
ppp b / aeron - client / src / main / java / uk / co / real_logic / aeron / publication . java <nl> public class publication implements autocloseable <nl> default : <nl> <unk> = ( position - <unk> ) + <unk> ; <nl> } <nl>
ppp b / aeron - client / src / main / java / uk / co / real_logic / aeron / publication . java <nl> public class publication implements autocloseable <nl> default : <nl> <unk> = ( position - <unk> ) + <unk> ; <nl> } <nl> return <unk> ; ; <nl>
ppp b / aeron - client / src / main / java / uk / co / real_logic / aeron / publication . java <nl> public class publication implements autocloseable <nl> default : <nl> <unk> = ( position - <unk> ) + <unk> ; <nl> } <nl> return <unk> ;
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / openapi / src / com / intellij / ui / <unk> . java <nl> public final class <unk> { <nl> <unk> = <unk> ; <nl> <unk> = <unk> . <unk> ; <nl> } else if ( <unk> ( ) ) { <nl> <unk> = <unk> ; <nl> <unk> = <unk> . <unk> ; <nl> } else { <nl> <unk> = null ; <nl>
ppp b / openapi / src / com / intellij / ui / <unk> . java <nl> public final class <unk> { <nl> <unk> = <unk> ; <nl> <unk> = <unk> . <unk> ; <nl> } else if ( <unk> ( ) ) { <nl> <unk> = <unk> ; <nl> <unk> = <unk> . <unk> ; <nl> } else { <nl> <unk> = null null ; <nl>
ppp b / openapi / src / com / intellij / ui / <unk> . java <nl> public final class <unk> { <nl> <unk> = <unk> ; <nl> <unk> = <unk> . <unk> ; <nl> } else if ( <unk> ( ) ) { <nl> <unk> = <unk> ; <nl> <unk> = <unk> . <unk> ; <nl> } else { <nl> <unk> = ; <nl>
ppp b / openapi / src / com / intellij / ui / <unk> . java <nl> public final class <unk> { <nl> <unk> = <unk> ; <nl> <unk> = <unk> . <unk> ; <nl> } else if ( <unk> ( ) ) { <nl> <unk> = <unk> ; <nl> <unk> = <unk> . <unk> ; <nl> } else { <nl> <unk> = null ; ; <nl>
ppp b / openapi / src / com / intellij / ui / <unk> . java <nl> public final class <unk> { <nl> <unk> = <unk> ; <nl> <unk> = <unk> . <unk> ; <nl> } else if ( <unk> ( ) ) { <nl> <unk> = <unk> ; <nl> <unk> = <unk> . <unk> ; <nl> } else { <nl>
====NEW EXAMPLE====
ppp b / quasar - kotlin / build . gradle <nl> dependencies { <nl>
ppp b / quasar - kotlin / build . gradle <nl>
ppp b / quasar - kotlin / build . gradle <nl> dependencies {
ppp b / quasar - kotlin / build . gradle <nl> dependencies
ppp
====NEW EXAMPLE====
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4957b25268a5b8baf950c54aa3bf5360e44ff7ef <nl> mode = push <nl> parent = <nl> <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4957b25268a5b8baf950c54aa3bf5360e44ff7ef <nl> mode = push <nl> parent = <nl> <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> no newline at end of file <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4957b25268a5b8baf950c54aa3bf5360e44ff7ef <nl> mode = push <nl> parent = <nl> <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of file
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / src / jackpal / androidterm / shortcuts / <unk> . java <nl> public class <unk> <nl> else <nl> { <nl> <unk> <nl> . putextra ( " content_type " , " text / * " ) <nl> . <unk> ( intent . <unk> ) ; <nl> } <nl> startactivityforresult ( <unk> , <unk> ) ; <nl>
ppp b / src / jackpal / androidterm / shortcuts / <unk> . java <nl> public class <unk> <nl> else <nl> { <nl> <unk> <nl> . putextra ( " content_type " , " text / * " ) <nl> . <unk> ( intent . <unk> ) ; <nl> } <nl> startactivityforresult ( <unk> , <unk> ; <nl>
ppp b / src / jackpal / androidterm / shortcuts / <unk> . java <nl> public class <unk> <nl> else <nl> { <nl> <unk> <nl> . putextra ( " content_type " , " text / * " ) <nl> . <unk> ( intent . <unk> ) ; <nl> } <nl> startactivityforresult ( <unk> , <unk> ) ) ; <nl>
ppp b / src / jackpal / androidterm / shortcuts / <unk> . java <nl> public class <unk> <nl> else <nl> { <nl> <unk> <nl> . putextra ( " content_type " , " text / * " ) <nl> . <unk> ( intent . <unk> ) ; <nl> } <nl> startactivityforresult ( <unk> , <unk> <unk> ; <nl>
ppp b / src / jackpal / androidterm / shortcuts / <unk> . java <nl> public class <unk> <nl> else <nl> { <nl> <unk> <nl> . putextra ( " content_type " , " text / * " ) <nl> . <unk> ( intent . <unk> ) ; <nl> } <nl> startactivityforresult ( <unk> , <unk> ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 1 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 1 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 1 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 1 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 1 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name name <nl>
====NEW EXAMPLE====
ppp b / core / jni / android / graphics / <unk> . cpp <nl> # include " <unk> . h " <nl> static <unk> <unk> ; <nl> static <unk> * <unk> ( ) ; <nl> ; <nl> <unk> <unk> * <unk> ; <nl> # ifdef <unk> <nl> static int <unk> ; <nl>
ppp b / core / jni / android / graphics / <unk> . cpp <nl>
ppp b / core / jni / android / graphics / <unk> . cpp <nl> # include " <unk> . h " <nl> static <unk> <unk> ; <nl> static <unk> * <unk> ( ) ; <nl> ; <nl> <unk> <unk> * <unk> ; <nl> # ifdef <unk> <nl> static int <unk> ; ; <nl>
ppp b / core / jni / android / graphics / <unk> . cpp <nl> # include " <unk> . h " <nl> static <unk> <unk> ; <nl> static <unk> * <unk> ( ) ; <nl> ; <nl> <unk> <unk> * <unk> ; <nl> # ifdef <unk> <nl> static int <unk> ; <nl> <nl>
ppp b / core / jni / android / graphics / <unk> . cpp <nl> # include " <unk> . h " <nl> static <unk> <unk> ; <nl> static <unk> * <unk> ( ) ; <nl> ; <nl> <unk> <unk> * <unk> ; <nl> # ifdef <unk> <nl> static int <unk> ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 5 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 5 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / > <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 5 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 5 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > > <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 5 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl> <nl>
====NEW EXAMPLE====
ppp b / gradle / javamodule . gradle <nl> javadoc { <nl> } <nl> test { <nl> \ no newline at end of file <nl>
ppp b / gradle / javamodule . gradle <nl> javadoc { <nl>
ppp b / gradle / javamodule . gradle <nl> javadoc {
ppp b / gradle / javamodule . gradle <nl> javadoc { <nl> } <nl> test { <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> } <nl> } <nl>
ppp b / gradle / javamodule . gradle <nl> javadoc { <nl> } <nl> test { <nl> \ no newline at end of file <nl> { <nl> } <nl> } <nl> } <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / themes / _styled / css / portlet . css <nl> body . portlet { <nl> display : block ; <nl> } <nl> . portlet ( title img { <nl> if ( ) { <nl> } <nl> } <nl> . portlet - title img { <nl> vertical - align : middle ; <nl> } <nl>
ppp b / portal - web / docroot / html / themes / _styled / css / portlet . css <nl> body . portlet { <nl> display : block ; <nl> } <nl> . portlet ( title img { <nl> if ( ) { <nl> } <nl> } <nl> . portlet - title img { <nl> vertical - align : middle ; <nl> } <nl> <nl>
ppp b / portal - web / docroot / html / themes / _styled / css / portlet . css <nl> body . portlet { <nl> display : block ; <nl> } <nl> . portlet ( title img { <nl> if ( ) { <nl> } <nl> } <nl> . portlet - title img { <nl> vertical - align : middle ; <nl>
ppp b / portal - web / docroot / html / themes / _styled / css / portlet . css <nl> body . portlet { <nl> display : block ; <nl> } <nl> . portlet ( title img { <nl> if ( ) { <nl> } <nl> } <nl> . portlet - title img { <nl> vertical - align : middle ; <nl> <nl>
ppp b / portal - web / docroot / html / themes / _styled / css / portlet . css <nl> body . portlet { <nl> display : block ; <nl> } <nl> . portlet ( title img { <nl> if ( ) { <nl> } <nl> } <nl> . portlet - title img { <nl> vertical - align : middle ; <nl> }
====NEW EXAMPLE====
ppp b / definitions / liferay - <unk> . dtd <nl> layout . user . public . layouts . power . user . required <nl>
ppp b / definitions / liferay - <unk> . dtd <nl> layout . user . public . layouts . power . user . required <nl> ldap . attrs . transformer . impl <nl> locales <nl> . . beta <nl> . . listeners <nl> login . <nl> login . . . account . allow . custom . password password <nl> . events . post post <nl>
ppp b / definitions / liferay - <unk> . dtd <nl>
ppp b / definitions / liferay - <unk> . dtd <nl> layout . user . public . layouts . power . user . required <nl> ldap . attrs . transformer . impl <nl> locales <nl> . . beta <nl> . . listeners <nl> login . <nl> login . . . account . allow . custom . password password <nl> . events . post <nl>
ppp b / definitions / liferay - <unk> . dtd <nl> layout . user . public . layouts . power . user . required <nl> ldap . attrs . transformer . impl <nl> locales <nl> . . beta <nl> . . listeners <nl> login . <nl> login . . . account . allow . custom . password <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> <unk> * . properties <nl> jobqueue / cobertura . ser <nl> jobqueue / javadoc <nl> out <nl> * <nl>
ppp b / . gitignore <nl> <unk> * . properties <nl> jobqueue / cobertura . ser <nl> jobqueue / javadoc <nl> out <nl> * <nl> * <nl>
ppp b / . gitignore <nl> <unk> * . properties <nl> jobqueue / cobertura . ser <nl> jobqueue / javadoc <nl> out <nl> * * <nl>
ppp b / . gitignore <nl> <unk> * . properties <nl> jobqueue / cobertura . ser <nl> jobqueue / javadoc <nl> out <nl> * / <nl>
ppp b / . gitignore <nl> <unk> * . properties <nl> jobqueue / cobertura . ser <nl> jobqueue / javadoc <nl> out <nl>
====NEW EXAMPLE====
ppp b / src / test / com / mongodb / mongooptionstest . java <nl> package com . mongodb ; <nl> import org . testng . annotations . test ; <nl> import com . mongodb . . . testcase ; <nl> / * * <nl>
ppp b / src / test / com / mongodb / mongooptionstest . java <nl> package com . mongodb ; <nl> import org . testng . annotations . test ; <nl>
ppp b / src / test / com / mongodb / mongooptionstest . java <nl> package com . mongodb ; <nl> import org . testng . annotations . test ; <nl> import com . mongodb . . . testcase ; <nl> / * <nl>
ppp b / src / test / com / mongodb / mongooptionstest . java <nl> package com . mongodb ; <nl> import org . testng . annotations . test ; <nl> import com . mongodb . . . testcase ; <nl>
ppp b / src / test / com / mongodb / mongooptionstest . java <nl> package com . mongodb ; <nl> import org . testng . annotations . test ; <nl> import com . mongodb . . . testcase ; <nl> / * *
====NEW EXAMPLE====
ppp b / core / java / android / content / pm / applicationinfo . java <nl> public class applicationinfo extends <unk> implements parcelable { <nl> <unk> = orig . <unk> ; <nl> <unk> = orig . <unk> ; <nl> uioptions = orig . uioptions ; <nl> uioptions = orig . uioptions ; <nl> } <nl>
ppp b / core / java / android / content / pm / applicationinfo . java <nl> public class applicationinfo extends <unk> implements parcelable { <nl> <unk> = orig . <unk> ; <nl> <unk> = orig . <unk> ; <nl> uioptions = orig . uioptions ; <nl> uioptions = orig . uioptions ; <nl>
ppp b / core / java / android / content / pm / applicationinfo . java <nl> public class applicationinfo extends <unk> implements parcelable { <nl> <unk> = orig . <unk> ; <nl> <unk> = orig . <unk> ; <nl> uioptions = orig . uioptions ; <nl> uioptions = orig . uioptions ; <nl> } <nl> <nl>
ppp b / core / java / android / content / pm / applicationinfo . java <nl> public class applicationinfo extends <unk> implements parcelable { <nl> <unk> = orig . <unk> ; <nl> <unk> = orig . <unk> ; <nl> uioptions = orig . uioptions ; <nl> uioptions = orig . uioptions ; <nl> <nl>
ppp b / core / java / android / content / pm / applicationinfo . java <nl> public class applicationinfo extends <unk> implements parcelable { <nl> <unk> = orig . <unk> ; <nl> <unk> = orig . <unk> ; <nl> uioptions = orig . uioptions ; <nl> uioptions = orig . uioptions ; <nl> }
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = cb0fc5a75d50e32278f1966f2caeddad3a3f49ae <nl> remote = git @ github . com : liferay / com - liferay - portlet - configuration . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version_name = 0 . 1 <nl> version_code = 1 <nl> <nl> group = pl . charmas . android <nl>
ppp b / gradle . properties <nl> version_name = 0
ppp b / gradle . properties <nl> version_name = 0 . 1 <nl> version_code = 1 <nl> <nl> group = pl . charmas . . <nl>
ppp b / gradle . properties <nl> version_name = 0 . 1 <nl> version_code = 1 <nl> <nl> group = pl . charmas . android android <nl>
ppp b / gradle . properties <nl> version_name = 0 . 1 <nl> version_code = 1 <nl> <nl> group = pl . charmas . android <nl> <nl>
====NEW EXAMPLE====
ppp b / vapi / gobject - 2 . 0 . vapi <nl> namespace glib { <nl> public weak glib . object target { get ; } <nl> public string target_property { get ; } <nl> public glib . bindingflags flags { get ; <nl> } else { ( ) ; <nl> } <nl> [ ccode ( <unk> = false ) ] <nl>
ppp b / vapi / gobject - 2 . 0 . vapi <nl> namespace glib { <nl> public weak glib . object target { get ; } <nl>
ppp b / vapi / gobject - 2 . 0 . vapi <nl> namespace glib { <nl> public weak glib . object target { get ; } <nl> public string target_property { get ; } <nl> public glib . bindingflags flags { get ; <nl> } else { ( ) ; <nl> } <nl> [ ccode ( <unk> = false ) <nl>
ppp b / vapi / gobject - 2 . 0 . vapi <nl> namespace glib { <nl> public weak glib . object target { get ; <nl>
ppp b / vapi / gobject - 2 . 0 . vapi <nl> namespace glib { <nl>
====NEW EXAMPLE====
ppp b / test / com / xtremelabs / robolectric / <unk> . java <nl> public class <unk> { <nl> @ before public void setup ( ) throws exception { <nl> <unk> = new <unk> ( true ) ; <nl> <unk> = new <unk> ( ( null ) { <nl> @ override protected int getindex ( ) ) { <nl> return 0 ; <nl> } <nl>
ppp b / test / com / xtremelabs / robolectric / <unk> . java <nl> public class <unk> { <nl> @ before public void setup ( ) throws exception { <nl> <unk> = new <unk> ( true ) ; <nl> <unk> = new <unk> ( ( null ) { <nl> @ override protected int getindex ( ) ) { <nl> return 0 ; <nl> } <nl> } <nl>
ppp b / test / com / xtremelabs / robolectric / <unk> . java <nl> public class <unk> { <nl>
ppp b / test / com / xtremelabs / robolectric / <unk> . java <nl> public class <unk> { <nl> @ before public void setup ( ) throws exception { <nl> <unk> = new <unk> ( true ) ; <nl> <unk> = new <unk> ( ( null ) { <nl> @ override protected int getindex ( ) ) { <nl> return 0 ; <nl>
ppp b / test / com / xtremelabs / robolectric / <unk> . java <nl> public class <unk> { <nl> @ before public void setup ( ) throws exception { <nl> <unk> = new <unk> ( true ) ; <nl> <unk> = new <unk> ( ( null ) { <nl> @ override protected int getindex ( ) ) { <nl> return 0 ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> mavencentral ( ) <nl>
ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> mavencentral
ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> mavencentral (
ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl>
ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> mavencentral ( <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < name > hamlet d ' arcy < / name > <nl> < email > < / email > <nl> < / contributor > <nl>
ppp b / pom . xml <nl>
ppp b / pom . xml <nl> < name
ppp b / pom . xml <nl> < name > hamlet d ' arcy < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < / < / < / < / < / < / < / < / < / < / / < / < / > <nl> < / contributors > <nl> < dependencies > <nl>
ppp b / pom . xml <nl> < name > hamlet d ' arcy < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < / < / < / < / < / < / < / < / < / < / / < / < / > <nl> < / contributors > <nl> < dependencies > <nl> > <nl>
====NEW EXAMPLE====
ppp b / enterprise / src / java / org / neo4j / impl / core / relationshiptypeholder . java <nl> class relationshiptypeholder <nl> tx . success ( ) ; <nl> tx . finish ( ) ; <nl> success = true ; <nl>
ppp b / enterprise / src / java / org / neo4j / impl / core / relationshiptypeholder . java <nl> class relationshiptypeholder <nl> tx . success ( ) ; <nl> tx . finish ( ) ; <nl>
ppp b / enterprise / src / java / org / neo4j / impl / core / relationshiptypeholder . java <nl> class relationshiptypeholder <nl> tx . success ( ) ; <nl> tx . finish ( ) ; <nl> success = true ; <nl> } <nl>
ppp b / enterprise / src / java / org / neo4j / impl / core / relationshiptypeholder . java <nl> class relationshiptypeholder <nl> tx . success ( ) ; <nl> tx . finish ( ) ; <nl> success = ; <nl>
ppp b / enterprise / src / java / org / neo4j / impl / core / relationshiptypeholder . java <nl> class relationshiptypeholder <nl> tx . success ( ) ; <nl> tx . finish ( ) ; <nl> success = ) ; <nl>
====NEW EXAMPLE====
ppp b / deeplearning4j - <unk> / deeplearning4j - nlp / src / main / java / org / deeplearning4j / models / word2vec / word2vec . java <nl> public class word2vec extends <unk> { <nl> } <nl> } , <unk> ) ; <nl> checkunreadinfo ( ) ; <nl> ; <nl> } <nl>
ppp b / deeplearning4j - <unk> / deeplearning4j - nlp / src / main / java / org / deeplearning4j / models / word2vec / word2vec . java <nl> public class word2vec extends <unk> { <nl> } <nl> } , <unk> ) ; <nl> checkunreadinfo ( ) ; <nl> ) ; <nl>
ppp b / deeplearning4j - <unk> / deeplearning4j - nlp / src / main / java / org / deeplearning4j / models / word2vec / word2vec . java <nl> public class word2vec extends <unk> { <nl> } <nl> } , <unk> ) ; <nl> checkunreadinfo ( ) ; <nl> } <nl>
ppp b / deeplearning4j - <unk> / deeplearning4j - nlp / src / main / java / org / deeplearning4j / models / word2vec / word2vec . java <nl> public class word2vec extends <unk> { <nl> } <nl> } , <unk> ) ; <nl> } <nl> } ) ; <nl> } <nl>
ppp b / deeplearning4j - <unk> / deeplearning4j - nlp / src / main / java / org / deeplearning4j / models / word2vec / word2vec . java <nl> public class word2vec extends <unk> { <nl> } <nl> } , <unk> ) ; <nl> checkunreadinfo ( ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> /
ppp b / . gitignore <nl> / . settings <nl> / . classpath <nl> / . project
ppp b / . gitignore <nl> / . settings
ppp b
ppp b / . gitignore <nl> / . settings <nl> / . classpath <nl> / . <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - document - library git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / app / build . gradle <nl> android { <nl> / / we haven ' t been ready for marshmallow ' s permission model yet . <nl> / / noinspection oldtargetapi <nl> targetsdkversion 22 <nl> versioncode 3 <nl> versionname " 1 . 0 . 0 - beta . 1 " <nl> } <nl> buildtypes { <nl>
ppp b / app / build . gradle <nl> android { <nl> / / we haven ' t been ready for marshmallow ' s permission model yet . <nl> / / noinspection oldtargetapi <nl> targetsdkversion 22 <nl> versioncode 3 <nl> versionname " 1 . 0 . 0 - beta . 1 " <nl> } <nl> buildtypes { { <nl>
ppp b / app / build . gradle <nl> android { <nl> / / we haven ' t been ready for marshmallow ' s permission model yet . <nl> / / noinspection oldtargetapi <nl> targetsdkversion 22 <nl> versioncode 3 <nl> versionname " 1 . 0 . 0 - beta . 1 " <nl> } <nl> buildtypes { <nl> <nl>
ppp b / app / build . gradle <nl> android { <nl> / / we haven ' t been ready for marshmallow ' s permission model yet . <nl> / / noinspection oldtargetapi <nl> targetsdkversion 22 <nl> versioncode 3 <nl> versionname " 1 . 0 . 0 - beta . 1 " <nl> } <nl>
ppp b / app / build . gradle <nl> android { <nl> / / we haven ' t been ready for marshmallow ' s permission model yet . <nl> / / noinspection oldtargetapi <nl> targetsdkversion 22 <nl> versioncode 3 <nl> versionname " 1 . 0 . 0 - beta . 1 " <nl> } <nl> buildtypes {
====NEW EXAMPLE====
ppp b / tools / db - upgrade / readme . txt <nl> 111 modify portal - ext . properties with your custom settings so that upgrade tool <nl> can connect your database . all liferay / must be turned off when <nl> performing an upgrade . <nl>
ppp b / tools / db - upgrade / readme . txt <nl>
ppp b / tools / db - upgrade / readme . txt <nl> 111 modify portal - ext . properties with your custom settings so that upgrade tool <nl> can connect your database . all liferay / must be turned off when <nl> performing an upgrade <nl>
ppp b / tools / db - upgrade / readme . txt <nl> 111 modify portal - ext . properties with your custom settings so that upgrade tool <nl> can connect your database . all liferay / must be turned off when <nl> performing an upgrade upgrade <nl>
ppp b / tools / db - upgrade / readme . txt
====NEW EXAMPLE====
ppp b / config / general . yml . example <nl> alerts : <nl> from : <unk> @ <unk> <nl> subject : graylog2 alert ! <nl>
ppp b / config / general . yml . example <nl> alerts : <nl> from : <unk> @ <unk> <nl> subject : graylog2 alert <nl>
ppp b / config / general . yml . example <nl> alerts : <nl> from : <unk> @ <unk> <nl> subject : graylog2 alert alert <nl>
ppp b / config / general . yml . example <nl> alerts : <nl> from : <unk> @ <unk> <nl> subject : graylog2 alert ! ! <nl>
ppp b / config / general . yml . example <nl> alerts : <nl> from : <unk> @ <unk> <nl> subject : graylog2 graylog2 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3c7445bda538306f59338aec8108112560bcb988 <nl> mode = push <nl> parent = 0f5e7aee88e06dd5e2e8b57786d67cf321a4760d <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / src / com / fsck / k9 / activity / messagecompose . java <nl> public class messagecompose extends k9activity implements onclicklistener , <unk> <nl> { <nl> toast . maketext ( this , r . string . <unk> , toast . length_short ) . show ( ( ) ; <nl> } <nl> } <nl> private void <unk> ( ) <nl>
ppp b / src / com / fsck / k9 / activity / messagecompose . java <nl> public class messagecompose extends k9activity implements onclicklistener , <unk> <nl> { <nl> toast . maketext ( this , r . string . <unk> , toast . length_short ) . show ( ( ) ; <nl> } <nl> } <nl> private void <unk> ) <nl>
ppp b / src / com / fsck / k9 / activity / messagecompose . java <nl> public class messagecompose extends k9activity implements onclicklistener , <unk> <nl> { <nl>
ppp b / src / com / fsck / k9 / activity / messagecompose . java <nl> public class messagecompose extends k9activity implements onclicklistener , <unk> <nl> { <nl> toast . maketext ( this , r . string . <unk> , toast . length_short ) . show ( ( ) ; <nl> } <nl> } <nl>
ppp b / src / com / fsck / k9 / activity / messagecompose . java <nl> public class messagecompose extends k9activity implements onclicklistener , <unk> <nl> { <nl> toast . maketext ( this , r . string . <unk> , toast . length_short ) . show ( ( ) ; <nl> } <nl> } <nl> private void <unk> ( ) ) <nl>
====NEW EXAMPLE====
ppp b / changes <nl> * gh - 43 variable length fields ( sears ) <nl> * gh - 44 constant occupancy workload ( sears ) <nl>
ppp b / changes <nl> * gh - 43 variable length fields ( sears ) <nl>
ppp b / changes <nl> * gh - 43 variable length fields ( sears ) <nl> * gh - 44 constant occupancy workload ( sears <nl>
ppp b / changes <nl> * gh - 43 variable length fields ( sears ) <nl> * gh - 44 constant occupancy workload ( sears ) <nl> * gh - 45 modify db api for efficient large object support ( sears ) <nl> \ no newline at end of file <nl> sears ) <nl> 0 . 1 . 3 <nl> * voldemort binding ( rsumbaly ) <nl>
ppp
====NEW EXAMPLE====
ppp b / . gitignore <nl> manifest . mf <nl> build <nl> build .
ppp b / . gitignore <nl> manifest . mf <nl> build <nl> build
ppp b / . gitignore <nl> manifest . mf <nl> build <nl> build . num <nl> \ no newline at end of file <nl> <nl> * . jar <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> manifest . mf <nl>
ppp b / . gitignore <nl> manifest . mf <nl> build
====NEW EXAMPLE====
ppp b / scripts / <unk> . py <nl> import sys <nl> import os <nl> import requests <nl> import import re <nl> import <unk> . parser <nl>
ppp b / scripts / <unk> . py <nl> import sys <nl> import os <nl> import requests <nl> import import re <nl> import <unk> . <nl>
ppp b / scripts / <unk> . py <nl> import sys <nl> import os <nl> import requests <nl>
ppp b / scripts / <unk> . py <nl> import sys <nl> import os <nl> import
ppp b / scripts / <unk> . py <nl> import sys <nl> import os <nl> import requests <nl> import import re <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> }
====NEW EXAMPLE====
ppp b / twidere / src / main / res / layout / <unk> . xml <nl> android : id = " @ + id / <unk> " <nl> android : layout_width = " match_parent " <nl> android : layout_height = " match_parent " <nl>
ppp b / twidere / src / main / res / layout / <unk> . xml <nl> android : id = " @ + id / <unk> " <nl> android : layout_width = " match_parent " <nl>
ppp b / twidere / src / main / res / layout / <unk> . xml <nl> android : id = " @ + id / <unk> " <nl> android : layout_width = " match_parent " <nl> android : layout_height = " match_parent " " <nl>
ppp b / twidere / src / main / res / layout / <unk> . xml <nl> android : id = " @ + id / <unk> " <nl> android : layout_width = " match_parent " <nl> android : layout_height = " match_parent " <nl> android : <unk> = " " " > <nl> < requestfocus / > <nl>
ppp b / twidere / src / main / res / layout / <unk> . xml <nl> android : id = " @ + id / <unk> " <nl>
====NEW EXAMPLE====
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4a1a80fff756b0df35f4d3d457b2ded7c74fa14a <nl> mode = push <nl> parent = 985d285071e7d1420f038f3c046cf7e3f8a56c22 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4a1a80fff756b0df35f4d3d457b2ded7c74fa14a <nl> mode = push <nl> parent = 985d285071e7d1420f038f3c046cf7e3f8a56c22 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4a1a80fff756b0df35f4d3d457b2ded7c74fa14a <nl> mode = push <nl> parent = 985d285071e7d1420f038f3c046cf7e3f8a56c22 <nl> remote = git @ github . com : liferay / com - liferay - sync git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / actor - server / actor - runtime / src / main / protobuf / serialization . proto <nl> syntax = " proto2 " ; <nl> package im . . ; <nl> message <unk> { <nl> required int32 = 1 ; <nl>
ppp b / actor - server / actor - runtime / src / main / protobuf / serialization . proto <nl> syntax = " proto2 " ; <nl>
ppp b / actor - server / actor - runtime / src / main / protobuf / serialization . proto <nl> syntax = " proto2 " ; <nl> package im . . ; <nl> message <unk> { <nl> required int32 = 1 1 ; <nl>
ppp b / actor - server / actor - runtime / src / main / protobuf / serialization . proto <nl> syntax = " proto2 " ; <nl> package im . . ; <nl> message <unk> { <nl> required int32 = 1 ; ; <nl>
ppp b / actor - server / actor - runtime / src / main / protobuf / serialization . proto <nl> syntax = " proto2 " ; <nl> package im . . ; <nl>
====NEW EXAMPLE====
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> * / <nl> public void <unk> ( int gravity ) { <nl> <unk> = gravity ; <nl> } <nl> * @ override ( ) ; <nl> } <nl> / * * <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> * / <nl> public void <unk> ( int gravity ) { <nl> <unk> = gravity ; <nl> } <nl> * @ override ( ) ; <nl> } <nl> / * * * <nl>
ppp b / core / java / android / webkit / webview . java <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> * / <nl> public void <unk> ( int gravity ) { <nl> <unk> = gravity ; <nl> } <nl> * @ override ( ) ; <nl> } <nl> / * <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> * / <nl> public void <unk> ( int gravity ) { <nl> <unk> = gravity ; <nl> } <nl> * @ override ( ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> classpath ' ch . <unk> : gradle - release release - plugin : 1 . 1 . 0 ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> classpath ' ch . <unk> : gradle - release release - plugin : 1 . 1 . 0 ' <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> <unk> <nl> . \ #
ppp b / . gitignore <nl> <unk> <nl> . \ # * <nl> * . swp <nl> * * / dependency - reduced
ppp b / . gitignore <nl> <unk> <nl> . \ # * <nl> * . swp <nl> * * / dependency - reduced - pom .
ppp b / . gitignore <nl> <unk> <nl> . \ # * <nl> * . swp <nl> * * / dependency - reduced -
ppp b / . gitignore <nl> <unk> <nl> . \ # * <nl> * . swp <nl> * * / dependency - reduced - pom
====NEW EXAMPLE====
ppp b / build_script / copy / bin / <unk> <nl> <unk> = ` which <unk> ` <nl> start ( ) { <nl> echo " starting graylog2 - server . . . " <nl> $ <unk> java - jar . . / graylog2 - server . . jar <nl> } <nl> stop ( ) { <nl>
ppp b / build_script / copy / bin / <unk> <nl> <unk> = ` which <unk> ` <nl> start ( ) { <nl> echo " starting graylog2 - server . . . " <nl> $ <unk> java - jar . . / graylog2 - server . . jar <nl> } <nl> stop ( ) ) <nl>
ppp b / build_script / copy / bin / <unk> <nl> <unk> = ` which <unk> ` <nl> start ( ) { <nl> echo " starting graylog2 - server . . . " <nl> $ <unk> java - jar . . / graylog2 - server . . jar <nl> } <nl> stop ( ) { { <nl>
ppp b / build_script / copy / bin / <unk> <nl> <unk> = ` which <unk> ` <nl> start ( ) { <nl> echo " starting graylog2 - server . . . " <nl> $ <unk> java - jar . . / graylog2 - server . . jar <nl> } <nl> stop ( ) ) { <nl>
ppp b / build_script / copy / bin / <unk> <nl> <unk> = ` which <unk> ` <nl> start ( ) { <nl> echo " starting graylog2 - server . . . " <nl> $ <unk> java - jar . . / graylog2 - server . . jar <nl> } <nl> stop ( ) ) ; <nl>
====NEW EXAMPLE====
ppp b / src / main / webapp / sass / generic / <unk> . scss <nl> body . modal - <unk> { <nl> opacity : 0 . 5 ; <nl> } <nl> . pointer { <nl> if ( ) ; <nl> } <nl> } <nl> . pointer { <nl> cursor : pointer ; <nl> } <nl>
ppp b / src / main / webapp / sass / generic / <unk> . scss <nl> body . modal - <unk> { <nl> opacity : 0 . 5 ; <nl> } <nl> . pointer { <nl> if ( ) ; <nl> } <nl> } <nl> . pointer { <nl> cursor : pointer ; <nl>
ppp b / src / main / webapp / sass / generic / <unk> . scss <nl> body . modal - <unk> { <nl> opacity : 0 . 5 ; <nl> } <nl> . pointer { <nl> if ( ) ; <nl> } <nl> } <nl> . pointer { <nl> cursor : pointer ; <nl> } <nl> <nl>
ppp b / src / main / webapp / sass / generic / <unk> . scss <nl> body . modal - <unk> { <nl> opacity : 0 . 5 ; <nl> } <nl> . pointer { <nl> if ( ) ; <nl> } <nl> } <nl> . pointer { <nl> cursor : pointer ; <nl> <nl>
ppp b / src / main / webapp / sass / generic / <unk> . scss <nl> body . modal - <unk> { <nl> opacity : 0 . 5 ; <nl> } <nl> . pointer { <nl> if ( ) ; <nl> } <nl> } <nl> . pointer { <nl> cursor : pointer ; <nl> }
====NEW EXAMPLE====
ppp b / circle . yml <nl> machine : <nl> dependencies : <nl> pre : <nl>
ppp b / circle . yml <nl> machine : <nl> dependencies : <nl>
ppp b / circle . yml <nl> machine : <nl> dependencies : <nl> pre : <nl> - sudo
ppp b / circle . yml <nl> machine : <nl> dependencies : <nl> pre : <nl> - sudo - u
ppp b / circle . yml <nl> machine : <nl> dependencies : <nl> pre <nl>
====NEW EXAMPLE====
ppp b / spec / e2e / plugin . spec . js <nl> var path = require ( ' path ' ) , <nl> actions = require ( ' . / helpers / <unk> . js ' ) ; <nl> var <unk> = 60000 ; <nl> describe ( ' plugin add ' , function ( ) { <nl>
ppp b / spec / e2e / plugin . spec . js <nl> var path = require ( ' path ' ) , <nl> actions = require ( ' . / helpers / <unk> . js ' ) ; <nl> var <unk> = 60000 ; <nl> describe ( ' plugin add ' , function ( ) ) <nl>
ppp b / spec / e2e / plugin . spec . js <nl> var path = require ( ' path ' ) , <nl> actions = require ( ' . / helpers / <unk> . js ' ) ; <nl> var <unk> = 60000 ; <nl> describe ( ' plugin add ' , function ( { <nl>
ppp b / spec / e2e / plugin . spec . js <nl> var path = require ( ' path ' ) , <nl> actions = require ( ' . / helpers / <unk> . js ' ) ; <nl> var <unk> = 60000 ; <nl> describe ( ' plugin add ' , function ( ) <nl>
ppp b / spec / e2e / plugin . spec . js <nl> var path = require ( ' path ' ) , <nl> actions = require ( ' . / helpers / <unk> . js ' ) ; <nl> var <unk> = 60000 ; <nl> describe ( ' plugin add ' , function ( ) { <nl> <nl>
====NEW EXAMPLE====
ppp b / singleton / src / main / java / com / iluwatar / <unk> . java <nl> package com . iluwatar ; <nl> / * * <nl> * <nl> * singleton class . <nl> * @ author jeremy rayner <nl> * updated polish . <nl> * <nl> * / <nl> public class <unk> { <nl>
ppp b / singleton / src / main / java / com / iluwatar / <unk> . java <nl> package com . iluwatar ; <nl> / * * <nl> * <nl> * singleton class . <nl> * @ author jeremy rayner <nl> * updated polish . <nl> * <nl> * / <nl>
ppp b / singleton / src / main / java / com / iluwatar / <unk> . java <nl> package com . iluwatar ; <nl> / * * <nl> * <nl> * singleton class . <nl> * @ author jeremy rayner <nl> * updated polish . <nl> * <nl> * / <nl> public class <unk> <nl>
ppp b / singleton / src / main / java / com / iluwatar / <unk> . java <nl> package com . iluwatar ; <nl> / * * <nl> * <nl> * singleton class . <nl> * @ author jeremy rayner <nl> * updated polish . <nl> * <nl> * / <nl> public class <unk> { { <nl>
ppp b / singleton / src / main / java / com / iluwatar / <unk> . java <nl> package com . iluwatar ; <nl> / * * <nl> * <nl> * singleton class . <nl> * @ author jeremy rayner <nl> * updated polish . <nl> * <nl> * / <nl> public class <unk> { <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / portal - impl / src / content / language . properties <nl> action . view_user = view user <nl> # # messages <nl> # # <nl> 1 - tell us what <nl> 1 - day = 1 day <nl> 1 - minute = 1 minute <nl> 1 - month = 1 month <nl>
ppp b / portal - impl / src / content / language . properties <nl>
ppp b / portal - impl / src / content / language . properties <nl> action
ppp b / portal - impl / src / content / language . properties
ppp b / portal - impl / src / content / language
====NEW EXAMPLE====
ppp b / pom . xml <nl> < exclude > * * / * helper < / exclude > <nl>
ppp b / pom . xml <nl> < exclude > * * / * helper < / exclude > <nl> < exclude > * * / * $ * < / exclude > <nl> < / excludes > <nl> < / configuration > <nl> < / < / < / < / / > <nl> < / configuration > <nl> < / plugin > <nl> < plugin > <nl>
ppp b / pom . xml <nl>
ppp

====NEW EXAMPLE====
ppp b / src / com / jwetherell / algorithms / datastructures . java <nl> public class datastructures { <nl> private static string string = null ; <nl> private static boolean debug = false ; <nl> private static boolean debugtime = false ; <nl> private static boolean validate = true ; <nl> public static void main ( string [ ] args ) { <nl>
ppp b / src / com / jwetherell / algorithms / datastructures . java <nl> public class datastructures { <nl> private static string string = null ; <nl> private static boolean debug = false ; <nl> private static boolean debugtime = false ; <nl> private static boolean validate = true ; <nl> public static void main ( string [ ] args ) ) <nl>
ppp b / src / com / jwetherell / algorithms / datastructures . java <nl> public class datastructures { <nl> private static string string = null ; <nl> private static boolean debug = false ; <nl> private static boolean debugtime = false ; <nl> private static boolean validate = true ; <nl> public static void main ( string [ ] args { <nl>
ppp b / src / com / jwetherell / algorithms / datastructures . java <nl> public class datastructures { <nl> private static string string = null ; <nl> private static boolean debug = false ; <nl> private static boolean debugtime = false ; <nl> private static boolean validate = true ; <nl> public static void main ( string [ ] args ) <nl>
ppp b / src / com / jwetherell / algorithms / datastructures . java <nl> public class datastructures { <nl> private static string string = null ; <nl> private static boolean debug = false ; <nl> private static boolean debugtime = false ; <nl> private static boolean validate = true ; <nl> public static void main ( string [ ] args ) { <nl> <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / mailinglist > <nl> < / mailinglists > <nl> < prerequisites > <nl> < maven > 2 . 2 . 2 . 1 < / maven > <nl> < / prerequisites > <nl> < dependencies > <nl> < dependency > <nl>
ppp b / pom . xml <nl> < / mailinglist > <nl> < / mailinglists > <nl> < prerequisites > <nl> < maven > 2 . 2 . 2 . 1 < / maven > <nl> < / prerequisites > <nl> < dependencies > <nl> < dependency > > <nl>
ppp b / pom . xml <nl> < / mailinglist > <nl>
ppp b / pom . xml <nl> < / mailinglist > <nl> < / mailinglists > <nl> < prerequisites > <nl> < maven > 2 . 2 . 2 . 1 < / maven > <nl> < / prerequisites > <nl> < dependencies > <nl> < dependency > <nl> <nl>
ppp b / pom . xml <nl> < / mailinglist > <nl> < / mailinglists > <nl> < prerequisites > <nl> < maven > 2 . 2 . 2 . 1 < / maven > <nl> < / prerequisites > <nl> < dependencies > <nl> < dependency >
====NEW EXAMPLE====
ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> } <nl> jvmargs "
ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> } <nl> jvmargs
ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> } <nl> jvmargs " -
ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> } <nl>
ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> } <nl> jvmargs " - xss320k
====NEW EXAMPLE====
ppp b / project / build . properties <nl> project . organization = org . parboiled <nl> project . name = parboiled <nl> sbt . version = 0 . 7 . 7 <nl> project . version = 1 . 0 . 2 . <nl> build . scala . versions = 2 . 9 . 1 <nl> project . initialize = false <nl>
ppp b / project / build . properties <nl> project . organization = org . parboiled <nl> project . name = parboiled <nl> sbt . version = 0 . 7 . 7 <nl> project . version = 1 . 0 . 2 . <nl> build . scala . versions = 2 . 9 . 1 <nl> project . initialize = false false <nl>
ppp b / project / build . properties <nl> project . organization = org . parboiled <nl> project . name = parboiled <nl>
ppp b / project / build . properties <nl> project . organization = org . parboiled <nl> project . name = parboiled <nl> sbt . version = 0 . 7 . 7 <nl> project . version = 1 . 0 . 2 . <nl> build . scala . versions = 2 . 9 . 1 <nl> project . initialize = <nl>
ppp b / project / build . properties <nl> project . organization = org . parboiled <nl> project . name = parboiled <nl> sbt . version = 0 . 7 . 7 <nl> project . version = 1 . 0 . 2 . <nl> build . scala . versions = 2 . 9 . 1 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - scheduler / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9c8ca5e97ca824052bba7c81774b1cfdf2aecb93 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - portal - scheduler . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - scheduler / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - scheduler / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - scheduler / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - scheduler / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9c8ca5e97ca824052bba7c81774b1cfdf2aecb93 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - portal - scheduler git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> project . ext { <nl> logbackversion = ' 1 . 1 . 8 ' <nl> commonscliversion = ' 1 . 3 . 1 ' <nl> } <nl>
ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> project . ext { <nl> logbackversion = ' 1 . 1 . 8 ' <nl> commonscliversion = ' 1 . 3 . 1 ' <nl> } <nl> <nl>
ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> project . ext { <nl> logbackversion = ' 1 . 1 . 8 ' <nl> commonscliversion = ' 1 . 3 . 1 ' <nl>
ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> project . ext { <nl> logbackversion = ' 1 . 1 . 8 ' <nl> commonscliversion = ' 1 . 3 . 1 ' <nl> <nl>
ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> project . ext { <nl> logbackversion = ' 1 . 1 . 8 ' <nl> commonscliversion = ' 1 . 3 . 1 ' <nl> }
====NEW EXAMPLE====
ppp b / . travis . yml <nl> android : <nl> components : <nl> # uncomment the lines below if you want to <nl>
ppp b / . travis . yml <nl> android : <nl> components : <nl>
ppp b / . travis . yml <nl> android : <nl>
ppp b / . travis . yml <nl> android : <nl> components : <nl> #
ppp b / . travis . yml <nl> android : <nl> components : <nl> # uncomment the lines below if you want to <nl> # use
====NEW EXAMPLE====
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk7 <nl>
ppp b / . travis . yml <nl> jdk : <nl>
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk7 <nl> script : <nl>
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk7
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk7 <nl> <nl>
====NEW EXAMPLE====
ppp b / subprojects / platform - base / src / integtest / groovy / org / gradle / language / base / <unk> . groovy <nl> build successful " " " <nl> @ mutate <nl> void <unk> ( <unk> < <unk> > <unk> ) { <nl>
ppp b / subprojects / platform - base / src / integtest / groovy / org / gradle / language / base / <unk> . groovy <nl> build successful " " " <nl>
ppp b / subprojects / platform - base / src / integtest / groovy / org / gradle / language / base / <unk> . groovy <nl> build successful " " " <nl> @ mutate <nl>
ppp b / subprojects / platform - base / src / integtest / groovy / org / gradle / language / base / <unk> . groovy <nl> build successful " " " <nl> @ mutate <nl> void <unk> ( <unk> < <unk> > <unk> ) { <nl> println " create ( " <unk> " ) <nl> } <nl> } <nl>
ppp b / subprojects / platform - base / src / integtest / groovy / org / gradle / language / base / <unk> . groovy <nl> build successful " " " <nl> @ <nl>
====NEW EXAMPLE====
ppp b / packages / keyguard / res / layout / <unk> . xml <nl> android : textsize = " 16sp " <nl>

ppp
ppp b / packages / keyguard / res / layout / <unk> . xml <nl> android
ppp b / packages / keyguard / res / layout / <unk> . xml <nl> android : textsize = " 16sp " <nl> android : textappearance = " ? android : attr / textappearancemedium " <nl> android : imeoptions = " <unk> | " " <nl> : imeoptions = " <unk> <unk> " <nl> / > <nl> < imageview android : id = " @ + id / " " <nl>
====NEW EXAMPLE====
ppp b / actor - server / actor - runtime / src / main / resources / reference . conf <nl> <unk> { <nl> actor { <nl> serializers { <nl>
ppp b / actor - server / actor - runtime / src / main / resources / reference . conf <nl> <unk> { <nl> actor { <nl> serializers { <nl> actor = " . actor . . . <unk> " <nl> } <nl> serialization - bindings { <nl>
ppp b / actor - server / actor - runtime / src / main / resources / reference . conf <nl> <unk> { <nl> actor { <nl> serializers { <nl> actor = " . actor . . . <unk> " <nl> } <nl> serialization - bindings { { <nl>
ppp b / actor - server / actor - runtime / src / main / resources / reference . conf <nl> <unk> { <nl> actor { <nl> serializers { <nl> actor = " . actor . . . <unk> " <nl> } <nl> serialization - bindings { <nl> <nl>
ppp b / actor - server / actor - runtime / src / main / resources / reference . conf <nl> <unk> { <nl> actor { <nl> serializers { <nl> actor = " . actor . . . <unk> " <nl> } <nl> serialization - bindings {
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version = 1 . 1 . 25 <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 25 <nl> <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 0 <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 1 <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 2 <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> configurations { <nl> } <nl> ext { <nl> antversion = ' 1 . 9 . 6 ' <nl> asmversion = ' 5 . 1 ' <nl> antlrversion = ' 2 . 7 . 7 ' <nl> <unk> = ' 1 . 9 . 4 . 1 ' <nl>
ppp b / build . gradle <nl> configurations { <nl> } <nl> ext { <nl> antversion = ' 1 . 9 . 6 ' <nl> asmversion = ' 5 . 1 ' <nl> antlrversion = ' 2 . 7 . 7 ' <nl> <unk> = ' 1 . 9 . 4 . 1 <nl>
ppp b / build . gradle <nl> configurations { <nl> } <nl> ext { <nl> antversion = ' 1 . 9 . 6 ' <nl> asmversion = ' 5 . 1 ' <nl> antlrversion = ' 2 . 7 . 7 ' <nl> <unk> = ' 1 . 9 . 4 . 1 ' ' <nl>
ppp b / build . gradle <nl> configurations { <nl> } <nl> ext { <nl> antversion = ' 1 . 9 . 6 ' <nl> asmversion = ' 5 . 1 ' <nl> antlrversion = ' 2 . 7 . 7 ' <nl> <unk> = ' 1 . 9 . 4 . 1 1 <nl>
ppp b / build . gradle <nl> configurations { <nl> } <nl> ext { <nl> antversion = ' 1 . 9 . 6 ' <nl> asmversion = ' 5 . 1 ' <nl> antlrversion = ' 2 . 7 . 7 ' <nl> <unk> = ' 1 . 9 . 4 . ' <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9bc6d1fd07cc7c6ac525c9c8fee220ea1eece0f4 <nl> mode = push <nl> parent = d0f7538ce81758f663b33d3b0aac3276ff66e042 <nl> remote = git @ github . com : liferay / com - liferay - portal - instances . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9bc6d1fd07cc7c6ac525c9c8fee220ea1eece0f4 <nl> mode = push <nl> parent = d0f7538ce81758f663b33d3b0aac3276ff66e042 <nl> remote = git @ github . com : liferay / com - liferay - portal - instances git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / cpp / server / <unk> . cpp <nl> # include < signal . h > <nl> # include < core / error . hpp > <nl>
ppp b / src / cpp / server / <unk> . cpp <nl> # include < signal . h > <nl> # include < core / error . hpp <nl>
ppp b / src / cpp / server / <unk> . cpp <nl> # include < signal . h > <nl> # include < core / error . hpp > <nl> # include
ppp b / src / cpp / server / <unk> . cpp <nl> # include < signal . h > <nl>
ppp b / src / cpp / server / <unk> . cpp <nl> # include < signal . h > <nl> # include < core / error . hpp hpp <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / catalina / connector / response . java <nl> public class response <nl> coyoteresponse . reset ( ) ; <nl> outputbuffer . reset ( ) ; <nl> public void setcurrent ( ) ; <nl> outputbuffer . reset ( ) ; <nl> } <nl>
ppp b / java / org / apache / catalina / connector / response
ppp b / java / org / apache / catalina / connector / response . java <nl> public class response <nl> coyoteresponse . reset ( ) ; <nl> outputbuffer . reset ( ) ; <nl> public void setcurrent ( ) ; <nl> outputbuffer . reset ( ) ; <nl>
ppp b / java / org / apache / catalina / connector / response . java <nl> public class response <nl> coyoteresponse . reset ( ) ; <nl> outputbuffer . reset ( ) ; <nl> public void setcurrent ( ) ; <nl> outputbuffer . reset ( ) ; <nl> <nl>
ppp b / java / org / apache / catalina / connector / response . java <nl> public class response <nl> coyoteresponse . reset ( ) ; <nl> outputbuffer . reset ( ) ; <nl> public void setcurrent ( ) ; <nl> outputbuffer . reset ( ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 5 < / version > <nl> < / parent > <nl> < groupid > org . neo4j < / groupid > <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 5 < / version > <nl> < / parent > <nl> < groupid > org . neo4j < / > <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 5 < / version > <nl> < / parent > <nl> < groupid > org . neo4j < / groupid > > <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 5 < / version > <nl> < / parent > <nl> < groupid > org . neo4j < / groupid groupid <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 5 < / version > <nl> < / parent > <nl> < groupid > org . neo4j < / groupid > <nl> <nl>
====NEW EXAMPLE====
ppp b / src / main / org / codehaus / groovy / reflection / fastarray . java <nl>
ppp b / src / main / org / codehaus / groovy / reflection / fastarray . java <nl> public class fastarray implements cloneable { <nl> public object [ ] getarray ( ) { <nl> return data ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl>
ppp b / src / main / org / codehaus / groovy / reflection / fastarray . java <nl> public class fastarray implements cloneable { <nl> public object [ ] getarray ( ) { <nl> return data ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / src / main / org / codehaus / groovy / reflection / fastarray . java <nl> public class fastarray implements cloneable { <nl> public object [ ] getarray ( ) { <nl> return data ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl> } } <nl>
ppp b / src / main / org / codehaus / groovy / reflection / fastarray . java <nl> public class fastarray implements cloneable { <nl> public object [ ] getarray ( ) { <nl> return data ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / core / java / android / content / context . java <nl> public abstract class context { <nl> <unk> , <nl> <unk> , <nl> <unk> , <nl> } ) <nl> @ override <nl> @ retention ( retentionpolicy . source ) <nl> public @ interface servicename { } <nl>
ppp b / core / java / android / content / context . java <nl> public abstract class context { <nl> <unk> , <nl> <unk> , <nl> <unk> , <nl> } ) <nl> @ override <nl> @ retention ( retentionpolicy . source ) <nl> public @ interface servicename { <nl>
ppp b / core / java / android / content / context . java <nl> public abstract class context { <nl> <unk> , <nl> <unk> , <nl> <unk> , <nl> } ) <nl> @ override <nl> @ retention ( retentionpolicy . source ) <nl> public @ interface servicename { } } <nl>
ppp b / core / java / android / content / context . java <nl> public abstract class context { <nl> <unk> , <nl> <unk> , <nl> <unk> , <nl> } ) <nl> @ override <nl> @ retention ( retentionpolicy . source ) <nl> public @ interface servicename { { <nl>
ppp b / core / java / android / content / context . java <nl> public abstract class context { <nl> <unk> , <nl> <unk> , <nl> <unk> , <nl> } ) <nl> @ override <nl> @ retention ( retentionpolicy . source ) <nl> public @ interface servicename { } <nl> <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> android : <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> android : <nl> components : <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> android :
ppp b / . travis . yml <nl> android
====NEW EXAMPLE====
ppp b /
ppp b / package / linux / install - dependencies <nl>
ppp b / package / linux / install - dependencies <nl> cd $
ppp b
ppp b / package / linux / install - dependencies
====NEW EXAMPLE====
ppp b / lib / readme . txt <nl> jars in
ppp b / lib / readme . txt <nl>
ppp b / lib / readme . txt <nl> jars
ppp b / lib / readme . txt
ppp
====NEW EXAMPLE====
ppp b / community / jmx / src / main / resources / meta - inf / services / org . neo4j . jmx . impl . <unk> <nl> org . neo4j . jmx . impl . <unk> <nl> \ no newline at end of file <nl> org . neo4j . jmx . impl <unk> <nl> \ no newline at end of file <nl>
ppp b / community / jmx / src / main / resources / meta - inf / services / org . neo4j . jmx . impl . <unk> <nl> org . neo4j . jmx . impl . <unk> <nl> \ no newline at end of file <nl> org . neo4j . jmx . impl <unk> <nl>
ppp b / community / jmx / src / main / resources / meta - inf / services / org . neo4j . jmx . impl . <unk> <nl> org . neo4j . jmx . impl . <unk> <nl> \ no newline at end of file <nl> org . neo4j . jmx . impl end of file <nl>
ppp b / community / jmx / src / main / resources / meta - inf / services / org . neo4j . jmx . impl . <unk> <nl> org . neo4j . jmx . impl . <unk> <nl> \ no newline at end of file <nl> org . neo4j . jmx . impl <unk> . <nl>
ppp b / community / jmx / src / main / resources / meta - inf / services / org . neo4j . jmx . impl . <unk> <nl> org . neo4j . jmx . impl . <unk> <nl> \ no newline at end of file <nl> org . neo4j . jmx . impl <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / actor . proto <nl> message <unk> { <nl> repeated user users = 3 ; <nl> repeated group groups = 6 ; <nl> repeated <unk> updates = 4 ; <nl> required bool <unk> = 5 ; <nl> } <nl> / / api # <unk> <nl>
ppp b / actor . proto <nl> message <unk> { <nl> repeated user users = 3 ; <nl> repeated group groups = 6 ; <nl> repeated <unk> updates = 4 ; <nl> required bool <unk> = 5 ; <nl> } <nl> / / api # <nl>
ppp b / actor . proto <nl> message <unk> { <nl> repeated user users = 3 ; <nl> repeated group groups = 6 ; <nl> repeated <unk> updates = 4 ; <nl> required bool <unk> = 5 ; <nl> } <nl> / / api # # <nl>
ppp b / actor . proto <nl> message <unk> { <nl> repeated user users = 3 ; <nl> repeated group groups = 6 ; <nl> repeated <unk> updates = 4 ; <nl> required bool <unk> = 5 ; <nl> } <nl> / / api # <unk>
ppp b / actor . proto <nl> message <unk> { <nl> repeated user users = 3 ; <nl> repeated group groups = 6 ; <nl> repeated <unk> updates = 4 ; <nl> required bool <unk> = 5 ; <nl> } <nl> / / api # <unk> <nl> <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version_name = 3 . 3 . 0a - snapshot <nl> <unk> = 3 <nl> <unk> = 3 <nl> <unk> = 0 <nl>
ppp b / gradle . properties <nl> version_name = 3 . 3 . 0a - snapshot <nl> <unk> = 3 <nl> <unk> = 3 <nl> <unk> = 0 <nl> <nl>
ppp b / gradle . properties <nl> version_name = 3 . 3 . 0a - snapshot <nl> <unk> = 3 <nl> <unk> = 3 <nl> <unk> = 600m <nl>
ppp b / gradle . properties <nl> version_name = 3 . 3 . 0a - snapshot <nl> <unk> = 3 <nl> <unk> = 3 <nl> <unk> = false <nl>
ppp b / gradle . properties <nl> version_name = 3 . 3 . 0a - snapshot <nl> <unk> = 3 <nl> <unk> = 3 <nl> <unk> = 768m <nl>
====NEW EXAMPLE====
ppp b / src / com / androidquery / util / aqutility . java <nl> public
ppp b / src / com / androidquery / util / aqutility . java
ppp b / src / com / androidquery / util / aqutility . java <nl> public class aqutility { <nl> } <nl> public static context getcontext ( ) { <nl> return context ; <nl> if ( ) { <nl> public string tostring ( ) { <nl> return tolist ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / src / com / androidquery / util / aqutility . java <nl> public class aqutility { <nl> } <nl> public static context getcontext ( ) { <nl> return context ; <nl> if ( ) { <nl> public string tostring ( ) { <nl> return tolist ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl>
ppp b / src / com / androidquery / util / aqutility . java <nl> public class aqutility { <nl> } <nl> public static context getcontext ( ) { <nl> return context ; <nl> if ( ) { <nl> public string tostring ( ) { <nl> return tolist ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> group = com . joanzapata . iconify <nl> version_name = 2 . 0 . 4 <nl> version_code = <unk> <nl> pom_description = evolutive integration of popular icon fonts for android <nl>
ppp b / gradle . properties <nl> group = com . joanzapata . iconify <nl> version_name = 2 . 0 . 4 <nl> version_code = <unk> <nl> pom_description = evolutive integration of popular icon fonts for android android <nl>
ppp b / gradle . properties <nl> group = com . joanzapata . iconify <nl> version_name = 2 . 0 . 4 <nl> version_code = <unk> <nl> pom_description = evolutive integration of popular icon fonts for <nl>
ppp b / gradle . properties <nl> group = com . joanzapata . iconify <nl>
ppp b / gradle . properties <nl> group = com . joanzapata . iconify <nl> version_name = 2 . 0 . 4 <nl> version_code = <unk> <nl> pom_description = evolutive integration of popular icon fonts for android
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 6 . 1 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / groupid > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 6 . 1 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 6 . 1 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / groupid groupid <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 6 . 1 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / groupid groupid
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 6 . 1 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / groupid <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching restrictions for system applications per application <nl> * * per lookup <nl> * * version 1 . 10 . 21 beta * * <nl>
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching restrictions for system applications per application <nl> * * per lookup <nl> * * version 1 . 10 . 21 beta * <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching restrictions for system applications per application <nl> * * per lookup <nl> * * version 1 . 10 . 21 beta * * * <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching restrictions for system applications per application <nl> * * per lookup <nl> * * version 1 . 10 . 21 beta * *
====NEW EXAMPLE====
ppp b / osmand / res / values - da / phrases . xml <nl> < string name = " <unk> " > <unk> : service < / string > <nl>
ppp b / osmand / res / values - da / phrases . xml <nl> < string name = " <unk> " > <unk> : service < / string <nl>
ppp b / osmand / res / values - da / phrases . xml <nl> < string name = " <unk> " > <unk> : service < / > <nl>
ppp b / osmand / res / values - da / phrases . xml <nl> < string name = " <unk> " > <unk> : service < / string > <nl> <nl>
ppp b / osmand / res / values - da / phrases . xml <nl> < string name = " <unk> " > <unk> : service < / string > <nl> < string name
====NEW EXAMPLE====
ppp b / . gitignore <nl> out <nl> . ds_store <nl> . <unk> <nl> . <unk> <nl>
ppp b / . gitignore <nl> out <nl> . ds_store <nl> . <unk> <nl> . <nl>
ppp b / . gitignore <nl> out <nl> . ds_store <nl> . <unk> <nl> . <unk> <nl> . iml <nl>
ppp b / . gitignore <nl> out
ppp b / . gitignore <nl> out <nl> . ds_store <nl> . <unk> <nl> . <unk> <nl> <nl>
====NEW EXAMPLE====
ppp b / platform / diff - impl / src / com / intellij / diff / tools / simple / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> <unk> . clear ( ) ; <nl> <unk> . <unk> ( ) ; <nl> mystatuspanel ; <nl> . <unk> ( ) ; <nl> mystatuspanel . update ) ) ; <nl> } <nl>
ppp b / platform / diff - impl / src / com / intellij / diff / tools / simple / <unk> . java <nl>
ppp b / platform / diff - impl / src / com / intellij / diff / tools / simple / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> <unk> . clear ( ) ; <nl> <unk> . <unk> ( ) ; <nl> mystatuspanel ; <nl> . <unk> ( ) ; <nl> mystatuspanel . update ) ) ; <nl>
ppp b / platform / diff - impl / src / com / intellij / diff / tools / simple / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> <unk> . clear ( ) ; <nl> <unk> . <unk> ( ) ; <nl> mystatuspanel ; <nl> . <unk> ( ) ; <nl> mystatuspanel . update ) ) ; <nl> } <nl> <nl>
ppp b / platform / diff - impl / src / com / intellij / diff / tools / simple / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> <unk> . clear ( ) ; <nl> <unk> . <unk> ( ) ; <nl> mystatuspanel ; <nl> . <unk> ( ) ; <nl> mystatuspanel . update ) ) ; <nl> }
====NEW EXAMPLE====
ppp b / . travis . yml <nl> before_install : <nl> . / scripts / install - maps - jar . sh <nl> after_success : <nl>
ppp b / . travis . yml <nl> before_install : <nl> . / scripts / install - maps - jar . sh <nl>
ppp b / . travis . yml <nl> before_install : <nl> . / scripts / install - maps - jar . sh <nl> after_success : : <nl>
ppp b / . travis . yml <nl> before_install : <nl> . / scripts / install - maps - jar . sh <nl> after_success after_success <nl>
ppp b / . travis . yml <nl> before_install : <nl>
====NEW EXAMPLE====
ppp b / manual / readme . asciidoc <nl> note that this profile can ' t be used together with the ` package ` goal . <nl> = = = with brew on osx = = = <nl> brew install docbook asciidoc <unk> <unk> <unk> <unk> <nl> sudo docbook - register <nl>
ppp b / manual / readme . asciidoc <nl> note that this profile can ' t be used together with the ` package ` goal . <nl> = = = with brew on osx = = = <nl> brew install docbook asciidoc <unk> <unk> <unk> <nl>
ppp b / manual / readme . asciidoc <nl> note that this profile can ' t be used together with the ` package ` goal . <nl> = = = with brew on osx = = = <nl> brew install docbook asciidoc <unk> <unk> <unk> <unk> <nl> sudo docbook docbook <nl>
ppp b / manual / readme . asciidoc <nl> note that this profile can ' t be used together with the ` package ` goal . <nl> = = = with brew on osx = = = <nl> brew install docbook asciidoc <unk> <unk> <unk> <unk> <nl> sudo docbook - - <nl>
ppp b / manual / readme . asciidoc <nl> note that this profile can ' t be used together with the ` package ` goal . <nl> = = = with brew on osx = = = <nl> brew install docbook asciidoc <unk> <unk> <unk> <unk> <nl> sudo docbook - register register <nl>
====NEW EXAMPLE====
ppp b / python / ide / src / com / jetbrains / python / configuration / <unk> . java <nl> public class <unk> implements <unk> { <nl>
ppp b / python / ide / src / com / jetbrains / python / configuration / <unk> . java <nl>
ppp b / python / ide / src / com / jetbrains / python / configuration / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void apply ( ) throws configurationexception { <nl> sdk <unk> ( ) ; <nl> <unk> = = <unk> ( ) ; <nl> if ( <unk> instanceof pydetectedsdk ) { <nl> final string <unk> = <unk> . getname ( ) ; <nl>
ppp b / python / ide / src / com / jetbrains / python / configuration / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void apply ( ) throws configurationexception { <nl> sdk <unk> ( ) ; <nl> <unk> = = <unk> ( ) ; <nl> if ( <unk> instanceof pydetectedsdk ) { <nl> final string <unk> = <unk> . getname ( ) ) ; <nl>
ppp
====NEW EXAMPLE====
ppp b / androidmanifest . xml <nl> android : versioncode = " 1 " <nl>
ppp b / androidmanifest . xml <nl> android : versioncode = " 1
ppp b
ppp
ppp b / androidmanifest . xml <nl>
====NEW EXAMPLE====
ppp b / media / libmediaplayerservice / <unk> . cpp <nl> status_t <unk> : : <unk> ( ) <nl> <unk> = null ; <nl> if ( mplayer ) { <nl> <unk> ( <unk> ! = null ) ; <nl> ( * <unk> ) ( mplayer ) ; <nl> mplayer ( ) ; <nl> mplayer = null ; <nl> } <nl>
ppp b / media / libmediaplayerservice / <unk> . cpp <nl> status_t <unk> : : <unk> ( ) <nl> <unk> = null ; <nl> if ( mplayer ) { <nl> <unk> ( <unk> ! = null ) ; <nl> ( * <unk> ) ( mplayer ) ; <nl> mplayer ( ) ; <nl> mplayer = null ; <nl> } <nl> <nl>
ppp b / media / libmediaplayerservice / <unk> . cpp <nl> status_t <unk> : : <unk> ( ) <nl> <unk> = null ; <nl> if ( mplayer ) { <nl> <unk> ( <unk> ! = null ) ; <nl> ( * <unk> ) ( mplayer ) ; <nl> mplayer ( ) ; <nl> mplayer = null ; <nl>
ppp b / media / libmediaplayerservice / <unk> . cpp <nl> status_t <unk> : : <unk> ( ) <nl> <unk> = null ; <nl>
ppp b / media / libmediaplayerservice / <unk> . cpp <nl> status_t <unk> : : <unk> ( ) <nl> <unk> = null ; <nl> if ( mplayer ) { <nl> <unk> ( <unk> ! = null ) ; <nl> ( * <unk> ) ( mplayer ) ; <nl> mplayer ( ) ; <nl> mplayer = null ; <nl> <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl>
ppp

ppp b / changelog . md <nl> * eliminate explicit storage of task - > component in zookeeper <nl> # # 0 . 7 . 2 - snapshot <nl> * storm - rc1 <nl> note : the change from 0 . 7 . 0 in which outputcollector no longer assumes immutable inputs has been reverted to support optimized sending of tuples to tasks tasks <nl>
ppp b / changelog . md <nl> * eliminate explicit storage of task - > component in zookeeper <nl> # # 0 . 7 . 2 - snapshot <nl> * storm - rc1 <nl> note : the change from 0 . 7 . 0 in which outputcollector no longer assumes immutable inputs has been reverted to support optimized sending of tuples to tasks <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> gen - external - apklibs <nl> # gradle <nl> . gradle <nl> build <nl> out <nl> out <nl>
ppp b / . gitignore <nl> gen - external - apklibs <nl> # gradle <nl> . gradle <nl> build <nl> out <nl> out <nl> # maven <nl>
ppp b / . gitignore <nl> gen - external - apklibs <nl> # gradle <nl> . gradle <nl> build <nl> <nl> out <nl>
ppp b / . gitignore <nl> gen - external - apklibs <nl> # gradle <nl> . gradle <nl> build <nl> out <nl> out <nl> # <nl>
ppp b / . gitignore <nl> gen - external - apklibs <nl> # gradle <nl> . gradle <nl> build <nl> out <nl> out <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / core / java / android / widget / relativelayout . java <nl> public class relativelayout extends viewgroup { <nl> } <nl> final int <unk> ; <nl> if ( params . width = = layoutparams . match_parent ) { <nl> <unk> = <unk> . exactly ; <nl> } else else <nl> <unk> = <unk> . <unk> ; <nl>
ppp b / core / java / android / widget / relativelayout . java <nl> public class relativelayout extends viewgroup { <nl> } <nl> final int <unk> ; <nl> if ( params . width = = layoutparams . match_parent ) { <nl> <unk> = <unk> . exactly ; <nl> } else else <nl> <unk> = <unk> . <unk> <unk> ; <nl>
ppp b / core / java / android / widget / relativelayout . java <nl> public class relativelayout extends viewgroup { <nl> } <nl> final int <unk> ; <nl> if ( params . width = = layoutparams . match_parent ) { <nl> <unk> = <unk> . exactly ; <nl> } else else <nl> <unk> = <unk> . ; <nl>
ppp b / core / java / android / widget / relativelayout . java <nl> public class relativelayout extends viewgroup { <nl> } <nl> final int <unk> ; <nl> if ( params . width = = layoutparams . match_parent ) { <nl> <unk> = <unk> . exactly ; <nl> } else else <nl> <unk> = <unk> . <unk> <unk> <nl>
ppp b / core / java / android / widget / relativelayout . java <nl> public class relativelayout extends viewgroup { <nl> } <nl> final int <unk> ; <nl> if ( params . width = = layoutparams . match_parent ) { <nl> <unk> = <unk> . exactly ; <nl> } else else <nl> <unk> = <unk> . <unk> <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> format . <nl> * <unk> https : / / github . com / <unk> / <unk> <nl>
ppp b / readme . md <nl> format . <nl>
ppp b / readme . md <nl>
ppp b / readme . md <nl> format . <nl> * <unk> https
ppp
====NEW EXAMPLE====
ppp b / plugins / maps / update . py <nl> # ! / usr / bin / env python <nl> import os <nl>
ppp b / plugins / maps / update . py <nl> # ! / usr / bin / env python <nl>
ppp b / plugins / maps / update . py <nl>
ppp b / plugins / maps / update . py <nl> # ! /
ppp b / plugins / maps / update . py <nl> # ! / usr /
====NEW EXAMPLE====
ppp b / jme3 - core / src / main / java / com / jme3 / renderer / opengl / <unk> . java <nl>
ppp b / jme3 - core / src / main / java / com / jme3 / renderer / opengl / <unk> . java <nl> import java . nio . <unk> ; <nl> public interface <unk> extends <unk> { <nl> public static final int <unk> = <unk> ; <nl> public static final int <unk> ( ) ; <nl> public static final int <unk> = <unk> ; <nl> } <nl>
ppp b / jme3 - core / src / main / java / com / jme3 / renderer / opengl / <unk> . java <nl> import java . nio . <unk> ; <nl> public interface <unk> extends <unk> { <nl> public static final int <unk> = <unk> ; <nl> public static final int <unk> ( ) ; <nl> public static final int <unk> = <unk> ; <nl>
ppp b / jme3 - core / src / main / java / com / jme3 / renderer / opengl / <unk> . java <nl> import java . nio . <unk> ; <nl> public interface <unk> extends <unk> { <nl> public static final int <unk> = <unk> ; <nl> public static final int <unk> ( ) ; <nl> public static final int <unk> = <unk> ; <nl> } } <nl>
ppp b / jme3 - core / src / main / java / com / jme3 / renderer / opengl / <unk> . java <nl> import java . nio . <unk> ; <nl> public interface <unk> extends <unk> { <nl> public static final int <unk> = <unk> ; <nl> public static final int <unk> ( ) ; <nl> public static final int <unk> = <unk> ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> android : <nl> build
ppp b / . travis . yml <nl> android : <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> android :
ppp b / . travis . yml <nl> android
====NEW EXAMPLE====
ppp b / src / com / fsck / k9 / fragment / <unk> . java <nl> public class <unk> extends sherlockfragment implements <unk> <nl> } <nl> private <unk> <unk> ( ) { <nl> if ( ) { <nl> public void setcurrent ( ) { <nl> return <unk> ) ; <nl> return <unk> ; <nl> } <nl>
ppp b / src / com / fsck / k9 / fragment / <unk> . java <nl> public class <unk> extends sherlockfragment implements <unk> <nl> } <nl> private <unk> <unk> ( ) { <nl> if ( ) { <nl> public void setcurrent ( ) { <nl> return <unk> ) ; <nl> return <unk> ; <nl>
ppp b / src / com / fsck / k9 / fragment / <unk> . java <nl> public class <unk> extends sherlockfragment implements <unk> <nl> } <nl> private <unk> <unk> ( ) { <nl> if ( ) { <nl> public void setcurrent ( ) { <nl> return <unk> ) ; <nl> return <unk> ; <nl> } <nl> <nl>
ppp b / src / com / fsck / k9 / fragment / <unk> . java <nl> public class <unk> extends sherlockfragment implements <unk> <nl> } <nl> private <unk> <unk> ( ) { <nl> if ( ) { <nl> public void setcurrent ( ) { <nl> return <unk> ) ; <nl> return <unk> ; <nl> <nl>
ppp b / src / com / fsck / k9 / fragment / <unk> . java <nl> public class <unk> extends sherlockfragment implements <unk> <nl> } <nl> private <unk> <unk> ( ) { <nl> if ( ) { <nl> public void setcurrent ( ) { <nl> return <unk> ) ; <nl> return <unk> ; <nl> }
====NEW EXAMPLE====
ppp b / library / src / com / handmark / pulltorefresh / library / <unk> . java <nl> public abstract class <unk> < t extends view > extends linearlayout { <nl> if ( ! isrefreshing ( ) ) { <nl> <unk> ( <unk> ) ; <nl> mstate = <unk> ; <nl> <unk> ( ) ; <nl> } <nl> } <nl>
ppp b / library / src / com / handmark / pulltorefresh / library / <unk> . java <nl> public abstract class <unk> < t extends view > extends linearlayout { <nl> if ( ! isrefreshing ( ) ) { <nl> <unk> ( <unk> ) ; <nl> mstate = <unk> ; <nl> <unk> ( ) ; <nl> } <nl>
ppp b / library / src / com / handmark / pulltorefresh / library / <unk> . java <nl> public abstract class <unk> < t extends view > extends linearlayout { <nl> if ( ! isrefreshing ( ) ) { <nl> <unk> ( <unk> ) ; <nl> mstate = <unk> ; <nl> <unk> ( ) ; <nl> } <nl> } <nl> <nl>
ppp b / library / src / com / handmark / pulltorefresh / library / <unk> . java <nl> public abstract class <unk> < t extends view > extends linearlayout { <nl> if ( ! isrefreshing ( ) ) { <nl> <unk> ( <unk> ) ; <nl> mstate = <unk> ; <nl> <unk> ( ) ; <nl> } <nl> <nl>
ppp b / library / src / com / handmark / pulltorefresh / library / <unk> . java <nl> public abstract class <unk> < t extends view > extends linearlayout { <nl> if ( ! isrefreshing ( ) ) { <nl> <unk> ( <unk> ) ; <nl> mstate = <unk> ; <nl> <unk> ( ) ; <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / v8 / renderscript / jni / android . mk <nl> local_module : = <unk> <nl> local_additional_dependencies + = $ ( <unk> ) <nl> local_module_tags : = optional <nl> local_required_modules : = galicisch <nl> local_required_modules : = librssupport <nl> include $ ( build_shared_library ) <nl>
ppp b / v8 / renderscript / jni / android . mk <nl> local_module : = <unk> <nl> local_additional_dependencies + = $ ( <unk> ) <nl> local_module_tags : = optional <nl> local_required_modules : = galicisch <nl> local_required_modules : = librssupport <nl> include $ ( build_shared_library build_shared_library <nl>
ppp b / v8 / renderscript / jni / android . mk <nl> local_module : = <unk> <nl> local_additional_dependencies + = $ ( <unk> ) <nl> local_module_tags : = optional <nl> local_required_modules : = galicisch <nl> local_required_modules : = librssupport <nl> include $ ( build_shared_library ) ) <nl>
ppp b / v8 / renderscript / jni / android . mk <nl> local_module : = <unk> <nl> local_additional_dependencies + = $ ( <unk> ) <nl> local_module_tags : = optional <nl> local_required_modules : = galicisch <nl> local_required_modules : = librssupport <nl> include $ ( build_shared_library build_shared_library
ppp b / v8 / renderscript / jni / android . mk <nl> local_module : = <unk> <nl> local_additional_dependencies + = $ ( <unk> ) <nl> local_module_tags : = optional <nl> local_required_modules : = galicisch <nl> local_required_modules : = librssupport <nl> include $ ( build_shared_library ) <nl> <nl>
====NEW EXAMPLE====
ppp b / osmand / src / net / osmand / plus / routing / <unk> . java <nl> public class <unk> { <nl> } <nl> <unk> = <unk> + towards + " " + destination ; <nl> } <nl> if ( ) { ( ) ; <nl> } <nl> return <unk> ; <nl> } <nl>
ppp b / osmand / src / net / osmand / plus / routing / <unk> . java <nl> public class <unk> { <nl> } <nl> <unk> = <unk> + towards + " " + destination ; <nl> } <nl> if ( ) { ( ) ; <nl> } <nl> return <unk> ; <nl> ; <nl>
ppp b / osmand / src / net / osmand / plus / routing / <unk> . java <nl> public class <unk> { <nl> } <nl> <unk> = <unk> + towards + " " + destination ; <nl> } <nl> if ( ) { ( ) ; <nl> } <nl> return <unk> ; <nl> } <nl> <nl>
ppp b / osmand / src / net / osmand / plus / routing / <unk> . java <nl> public class <unk> { <nl> } <nl> <unk> = <unk> + towards + " " + destination ; <nl> } <nl> if ( ) { ( ) ; <nl> } <nl> return <unk> ; <nl> <nl>
ppp b / osmand / src / net / osmand / plus / routing / <unk> . java <nl> public class <unk> { <nl> } <nl> <unk> = <unk> + towards + " " + destination ; <nl> } <nl> if ( ) { ( ) ; <nl> } <nl> return <unk> ; <nl> } } <nl>
====NEW EXAMPLE====
ppp b / platform / util / src / com / intellij / util / io / <unk> . java <nl> public class <unk> < data > implements <unk> { <nl> } <nl> catch ( throwable e ) { <nl> <unk> ( ) ; <nl> throw new runtimeexception ( ) ; <nl> throw new new runtimeexception ( e ) ; <nl> } <nl> } <nl>
ppp b / platform / util / src / com / intellij / util / io / <unk> . java <nl> public class <unk> < data > implements <unk> { <nl> } <nl> catch ( throwable e ) { <nl> <unk> ( ) ; <nl> throw new runtimeexception ( ) ; <nl> throw new new runtimeexception ( e ) ; <nl> } <nl>
ppp b / platform / util / src / com / intellij / util / io / <unk> . java <nl> public class <unk> < data > implements <unk> { <nl> } <nl> catch ( throwable e ) { <nl> <unk> ( ) ; <nl> throw new runtimeexception ( ) ; <nl> throw new new runtimeexception ( e ) ; <nl> } <nl> <nl>
ppp b / platform / util / src / com / intellij / util / io / <unk> . java <nl> public class <unk> < data > implements <unk> { <nl> } <nl> catch ( throwable e ) { <nl> <unk> ( ) ; <nl> throw new runtimeexception ( ) ; <nl> throw new new runtimeexception ( e ) ; <nl> } <nl> } <nl> <nl>
ppp b / platform / util / src / com / intellij / util / io / <unk> . java <nl> public class <unk> < data > implements <unk> { <nl> } <nl> catch ( throwable e ) { <nl> <unk> ( ) ; <nl> throw new runtimeexception ( ) ; <nl> throw new new runtimeexception ( e ) ; <nl> } <nl> }
====NEW EXAMPLE====
ppp b / python / helpers / pydev / <unk> . py <nl> if __name__ = = ' __main__ ' : <nl> file = sys . argv [ 1 ] <nl> import <unk> <nl> if ( ] ( ) <nl> import <unk> <nl> int int ( port ) = = 0 and int ( <unk> ) = = 0 : <nl>
ppp b / python / helpers / pydev / <unk> . py <nl> if __name__
ppp b / python / helpers / pydev / <unk> . py <nl> if __name__ = = ' __main__ ' : <nl> file = sys . argv [ 1 ] <nl> import <unk> <nl> if ( ] ( ) <nl> import <unk> <nl> int int ( port ) = = 0 and int ( <unk> ) = = 0 0 <nl>
ppp b / python / helpers / pydev / <unk> . py <nl> if __name__ = = ' __main__ ' : <nl> file = sys . argv [ 1 ] <nl> import <unk> <nl> if ( ] ( ) <nl> import <unk> <nl> int int ( port ) = = 0 and int ( <unk> ) = = 0 : : <nl>
ppp b / python / helpers / pydev / <unk> . py <nl> if __name__ = = ' __main__ ' : <nl> file = sys . argv [ 1 ] <nl> import <unk> <nl> if ( ] ( ) <nl> import <unk> <nl> int int ( port ) = = 0 and int ( <unk> ) = = 0 <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> idea - target <nl> build <nl> grails . iws <nl> . gradle <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> idea - target <nl> build <nl> grails . iws <nl> . gradle <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> idea - target <nl> build <nl> grails . iws <nl> . iws <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> idea - target <nl> build <nl> grails . iws <nl> . gradle <nl> \ <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> idea - target <nl> build <nl> grails . iws <nl> . idea <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / community / embedded - examples / src / docs / dev / index . txt <nl> include : : social . txt [ ] <nl> include : : entities . txt [ <nl>
ppp b / community / embedded - examples / src / docs / dev / index . txt <nl> include : : social . txt [ ] <nl> include : : entities . txt ] <nl>
ppp b / community / embedded - examples / src / docs / dev / index . txt <nl> include : : social . txt [ ] <nl> include : : entities . txt
ppp b / community / embedded - examples / src / docs / dev / index . txt <nl> include : : social . txt [ ] <nl> include : : entities . txt [ ] <nl>
ppp b / community / embedded - examples / src / docs / dev / index . txt <nl> include : : social . txt [ ] <nl> include : : entities . txt [
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> avsgroup = ' com . wire ' <nl> / / proprietary avs artifact config <nl> customavsversion = ' 2 . 9 . 11 @ aar ' <nl> customavsinternalversion = customavsversion <nl> customavsname = ' avs ' <nl> customavsgroup = ' com . wearezeta . avs ' <nl>
ppp b / build . gradle <nl> ext { <nl> avsgroup = ' com . wire ' <nl> / / proprietary avs artifact config <nl> customavsversion = ' 2 . 9 . 11 @ aar ' <nl> customavsinternalversion = customavsversion <nl> customavsname = ' avs ' <nl> customavsgroup = ' com . wearezeta . avs ' ' <nl>
ppp b / build . gradle <nl> ext { <nl> avsgroup = ' com . wire ' <nl> / / proprietary avs artifact config <nl> customavsversion = ' 2 . 9 . 11 @ aar ' <nl> customavsinternalversion = customavsversion <nl> customavsname = ' avs ' <nl> customavsgroup = ' com . wearezeta . avs avs <nl>
ppp b / build . gradle <nl> ext { <nl> avsgroup = ' com . wire ' <nl> / / proprietary avs artifact config <nl> customavsversion = ' 2 . 9 . 11 @ aar ' <nl> customavsinternalversion = customavsversion <nl> customavsname = ' avs ' <nl> customavsgroup = ' com . wearezeta . avs <nl>
ppp b / build . gradle <nl> ext { <nl> avsgroup = ' com . wire ' <nl> / / proprietary avs artifact config <nl> customavsversion = ' 2 . 9 . 11 @ aar ' <nl> customavsinternalversion = customavsversion <nl> customavsname = ' avs ' <nl> customavsgroup = ' com . wearezeta . avs '
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha3 ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha3 ' <nl> } <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha3 ' <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha3 ' <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha3 ' <nl> } <nl> }
====NEW EXAMPLE====
ppp b / cmds / am / am <nl>
ppp b / cmds / am / am <nl> # script
ppp b / cmds / am / am <nl> # script to start " am " on the device , which has a very <unk> <nl> # shell . <nl> demenzdiagnostik <nl> * updated french translation <nl> # shell <nl>
ppp b / cmds / am / am <nl> # script to start " am " on the device , which has a very <unk> <nl> # shell . <nl> demenzdiagnostik <nl> * updated french translation <nl> # shell <nl> # <nl>
ppp b / cmds / am / am <nl> # script to start " am " on the device , which has a very <unk> <nl> # shell . <nl> demenzdiagnostik <nl> * updated french translation <nl> # . <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7109b4c04829c5282cd5d8be056bfeef699b4e6d <nl> mode = push <nl> parent = 34c9863f4574138d71132303c7501dbef3b6e133 <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7109b4c04829c5282cd5d8be056bfeef699b4e6d <nl> mode = push <nl> parent = 34c9863f4574138d71132303c7501dbef3b6e133 <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of file
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7109b4c04829c5282cd5d8be056bfeef699b4e6d <nl> mode = push <nl> parent = 34c9863f4574138d71132303c7501dbef3b6e133 <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> no newline at end of file <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7109b4c04829c5282cd5d8be056bfeef699b4e6d <nl> mode = push <nl> parent = 34c9863f4574138d71132303c7501dbef3b6e133 <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / library / res / layout / <unk> . xml <nl> android : <unk> = " true " <nl> android : background = " ? selectableitembackground " <nl> android : gravity = " center " <nl> android : <unk> = " <unk> " <nl> android : focusable = " true " <nl> android : clickable = " true " <nl> > <nl>
ppp b / library / res / layout / <unk> . xml <nl> android : <unk> = " true " <nl> android : background = " ? selectableitembackground " <nl> android : gravity = " center " <nl> android : <unk> = " <unk> " <nl> android : focusable = " true " <nl> android : clickable = " true " " <nl>
ppp b / library / res / layout / <unk> . xml <nl> android : <unk> = " true " <nl> android : background = " ? selectableitembackground " <nl> android : gravity = " center " <nl> android : <unk> = " <unk> " <nl> android : focusable = " true " <nl> android : clickable = " true " <nl> > <nl> > <nl>
ppp b / library / res / layout / <unk> . xml <nl> android : <unk> = " true " <nl> android : background = " ? selectableitembackground " <nl> android : gravity = " center " <nl> android : <unk> = " <unk> " <nl> android : focusable = " true " <nl> android : clickable = " true " <nl>
ppp b / library / res / layout / <unk> . xml <nl> android : <unk> = " true " <nl> android : background = " ? selectableitembackground " <nl> android : gravity = " center " <nl> android : <unk> = " <unk> " <nl> android : focusable = " true " <nl> android : clickable = " true " > <nl>
====NEW EXAMPLE====
ppp b / client / src / main / java / com / metamx / druid / <unk> / <unk> . java <nl> public class <unk> extends <unk> <nl> private final <unk> <unk> ; <nl> private final string <unk> ; <nl>
ppp b / client / src / main / java / com / metamx / druid / <unk> / <unk> . java <nl> public class <unk> extends <unk> <nl> private final <unk> <unk> ; <nl> private final string <unk> ; <nl> private volatile boolean = public <unk> <nl> <unk> server , <nl>
ppp b / client / src / main / java / com / metamx / druid / <unk> / <unk> . java <nl> public class <unk> extends <unk> <nl> private final <unk> <unk> ; <nl> private final string <unk> ; <nl> private volatile boolean <nl>
ppp b / client / src / main / java / com / metamx / druid / <unk> / <unk> . java <nl> public class <unk> extends <unk> <nl> private final <unk> <unk> ; <nl> private final string <unk> ; <nl> private volatile boolean = public <unk> <nl>
ppp b / client / src / main / java / com / metamx / druid / <unk> / <unk> . java <nl> public class <unk> extends <unk> <nl> private final <unk> <unk> ; <nl> private final string <unk> ; <nl> private volatile { <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / seriesguide / src / main / java / com / battlelancer / seriesguide / modules / <unk> . java <nl> import javax . inject . singleton ; <nl> @ module <nl> public class <unk> { <nl> application application ; <nl> public <unk> ( application application ) { <nl> this . application = application ; <nl>
ppp b / seriesguide / src / main / java / com / battlelancer / seriesguide / modules / <unk> . java <nl> import javax . inject . singleton ; <nl> @ module <nl> public class <unk> { <nl> application application ; <nl> public <unk> ( application application ) { <nl> this . application = application application ; <nl>
ppp b / seriesguide / src / main / java / com / battlelancer / seriesguide / modules / <unk> . java <nl> import javax . inject . singleton ; <nl> @ module <nl> public class <unk> { <nl> application application ; <nl> public <unk> ( application application ) { <nl> this . application = application ; ; <nl>
ppp b / seriesguide / src / main / java / com / battlelancer / seriesguide / modules / <unk> . java <nl> import javax . inject . singleton ; <nl> @ module <nl> public class <unk> { <nl> application application ; <nl> public <unk> ( application application ) { <nl> this . application = application ; <nl> <nl>
ppp b / seriesguide / src / main / java / com / battlelancer / seriesguide / modules / <unk> . java <nl> import javax . inject . singleton ; <nl> @ module <nl> public class <unk> { <nl> application application ; <nl> public <unk> ( application application ) { <nl> this . application = ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / sirius - application / compile - sirius - servers . sh <nl>
ppp

ppp b / sirius - application / compile - sirius - servers . sh <nl> hash ant 2 > / dev / null | | { <nl> } <nl> # thread for parallel build <nl> * fix complete by marek pavelka ) <nl> for parallel build <nl> threads = 4 <nl> <unk> = speech - <unk> / <unk> <nl> <unk> = speech - <unk> / sphinx <nl>
ppp b / sirius - application / compile - sirius - servers . sh <nl> hash ant 2 > / dev / null | | { <nl> } <nl> # thread for parallel build <nl> * fix complete by marek pavelka ) <nl> for parallel build <nl> threads = 4 <nl> <unk> = speech - <unk> / <unk> <nl> <unk> = speech - <unk> / sphinx sphinx <nl>
====NEW EXAMPLE====
ppp b / test / helper . rb <nl> module nokogiri
ppp b / test / helper . rb <nl>
ppp b / test / helper . rb <nl> module nokogiri <nl> undef
ppp b / test / helper . rb <nl> module nokogiri <nl> undef : <unk> <nl> def teardown <nl> \ no newline at end of file <nl>
ppp b / test / helper . rb <nl> module
====NEW EXAMPLE====
ppp b / src / deb / init . d / elasticsearch <nl> case " $ 1 " in <nl> fi <nl> if [ - n " $ max_map_count " ] ; then <nl> sysctl - <unk> <unk> . . . max_map_count = $ max_map_count <nl> fi <nl> # start daemon <nl>
ppp b / src / deb / init . d / elasticsearch <nl> case " $ 1 " in <nl> fi <nl>
ppp b / src / deb / init . d / elasticsearch <nl> case " $ 1 " in <nl> fi <nl> if [ - n " $ max_map_count " ] ; then <nl> sysctl - <unk> <unk> . . . max_map_count = $ max_map_count <nl> fi <nl> # start <nl>
ppp b / src / deb / init . d / elasticsearch <nl> case " $ 1 " in <nl> fi <nl> if [ - n " $ max_map_count " ] ; then <nl> sysctl - <unk> <unk> . . . max_map_count = $ max_map_count <nl> fi <nl> # start daemon daemon <nl>
ppp b / src / deb / init . d / elasticsearch <nl> case " $ 1 " in <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = 9cbdccc00094e040e315b1c4df6f19a6fdb42f21 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = 9cbdccc00094e040e315b1c4df6f19a6fdb42f21 <nl> remote = git @ github . com : liferay / com - liferay - calendar . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / biz / bokhorst / xprivacy / util . java <nl> public class util { <nl>
ppp b / src / biz / bokhorst / xprivacy / util . java <nl>

ppp b / src / biz / bokhorst / xprivacy / util . java <nl> public class util { <nl> priority = log . warn ; <nl> else if ( ex instanceof activityshare . <unk> ) <nl> priority = log . warn ; <nl> else { <nl> if ( ) { <nl> priority = log . warn ; <nl> else <nl> priority = log . error ; <nl>
ppp b / src / biz / bokhorst / xprivacy / util . java <nl> public class util { <nl> priority = log . warn ; <nl> else if ( ex instanceof activityshare . <unk> ) <nl> priority = log . warn ; <nl> else { <nl> if ( ) { <nl> priority = log . warn ; <nl> else <nl> priority = log . error error ; <nl>
====NEW EXAMPLE====
ppp b / plugin . yml <nl> name : worldedit <nl> main
ppp b / plugin . yml <nl> name : worldedit <nl>
ppp b / plugin . yml <nl>

ppp b / plugin . yml <nl> name : worldedit <nl> main : com . sk89q \ no newline at end of file <nl> \ no newline at end of file <nl> : : <unk> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / settings . gradle <nl> def <unk> ( project ) { <nl> } <nl>
ppp b / settings . gradle <nl> def <unk> ( project ) { <nl> } <nl> <unk> { <nl>
ppp b / settings . gradle <nl> def <unk> ( project ) { <nl> } <nl> <unk>
ppp b / settings . gradle <nl> def <unk> ( project ) { <nl> } <nl> <unk> <nl>
ppp b / settings . gradle <nl> def <unk> ( project ) { <nl> } <nl> <unk> ( ) <nl>
====NEW EXAMPLE====
ppp b / grails - plugin - domain - class / build . gradle
ppp b / grails - plugin - domain - class / build
ppp b / grails - plugin - domain - class / build .
ppp b / grails - plugin - domain - class /
ppp b / grails - plugin - domain - class / build . gradle <nl> dependencies
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 11 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 11 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 11 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 11 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name name <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 11 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl>
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl>
ppp b
====NEW EXAMPLE====
ppp b / . travis . yml <nl> notifications : <nl> android : <nl>
ppp b / . travis . yml <nl> notifications : <nl> android : <nl> components : <nl>
ppp b / . travis . yml <nl> notifications : <nl>
ppp b / . travis . yml <nl> notifications : <nl> android : <nl> -
ppp b / . travis . yml <nl> notifications : <nl> android
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version = 1 . 1 . 54 <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 0 <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 54 <nl> <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 2 <nl>
====NEW EXAMPLE====
ppp b / dependencies / common / install - packages . cmd <nl> set path = % path % ; % cd % \ tools <nl> call : install rmarkdown master <nl> call : install packrat master <nl> call : install <unk> master <nl> goto : eof <nl>
ppp b / dependencies / common / install - packages . cmd <nl> set path = % path % ; % cd % \ tools <nl> call : install rmarkdown master <nl> call : install packrat master <nl> call : install <unk> master <nl> goto : eof
ppp b / dependencies / common / install - packages . cmd <nl> set path = % path % ; % cd % \ tools <nl> call : install rmarkdown master <nl> call : install packrat master <nl> call : install <unk> master <nl> goto : <nl>
ppp b / dependencies / common / install - packages . cmd <nl> set path = % path % ; % cd % \ tools <nl> call : install rmarkdown master <nl> call : install packrat master <nl> call : install <unk> master <nl> goto : eof eof <nl>
ppp b / dependencies / common / install - packages . cmd <nl> set path = % path % ; % cd % \ tools <nl> call : install rmarkdown master <nl> call : install packrat master <nl> call : install <unk> master <nl> goto : : <nl>
====NEW EXAMPLE====
ppp b / core / java / android / nfc / infcadapter . aidl <nl> import android . nfc . <unk> ; <nl> import android . nfc . <unk> ; <nl> import android . nfc . <unk> ; <nl>
ppp b / core / java / android / nfc / infcadapter . aidl <nl> import android . nfc . <unk> ; <nl> import android . nfc . <unk> ; <nl> import android . nfc . <unk> ; <nl> import android . nfc . ; <nl> import android . nfc . <unk> ; <nl> import android . os . bundle ; <nl>
ppp b / core / java / android / nfc / infcadapter . aidl <nl> import android . nfc . <unk> ; <nl> import android . nfc . <unk> ; <nl>
ppp b / core / java / android / nfc / infcadapter . aidl <nl> import android . nfc . <unk> ; <nl> import android . nfc . <unk> ; <nl> import android . nfc . <unk> ; <nl> import android . nfc . ; <nl> import android . nfc . <unk> ; <nl> import android . os . ; <nl>
ppp b / core / java / android / nfc / infcadapter . aidl <nl> import android . nfc . <unk> ; <nl> import android . nfc . <unk> ; <nl> import android . nfc . <unk> ; <nl> import android . nfc ; <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version = 0 . 1 . 26 - oraclejdk8 <nl> profile java <nl>
ppp b / gradle . properties <nl> version = 0 . 1 . 26 - oraclejdk8 <nl>
ppp b / gradle . properties <nl> version = 0 . 1 . 26 <nl>
ppp b / gradle . properties <nl> version = 0 . 1 . 26 - <nl>
ppp b / gradle . properties <nl> version = 0 . 1 . 26 - oraclejdk8 <nl> profile <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> target / <nl> . project <nl> . settings / <nl> / bin /
ppp b / . gitignore <nl> target / <nl> . project <nl> . settings / <nl> / bin / <nl>
ppp b / . gitignore <nl> target / <nl> . project <nl> . settings / <nl> / bin <nl>
ppp b / . gitignore <nl> target / <nl> . project <nl> . settings / <nl> / bin
ppp b
====NEW EXAMPLE====
ppp b / scripts / packages / build <nl> <unk> ( <nl> " : bazel - bin " , <nl> " : bazel - completion " , <nl> " : bazel - - tools tools " , <nl> ] , <nl> ) <nl>
ppp b / scripts / packages / build <nl> <unk> ( <nl> " : bazel - bin " , <nl> " : bazel - completion " , <nl>
ppp b / scripts / packages / build <nl> <unk> ( <nl> " : bazel - bin " , <nl> " : bazel - completion " , <nl> " : bazel
ppp b / scripts / packages / build <nl> <unk> ( <nl> " : bazel - bin " , <nl> " : bazel - completion " , <nl> " :
ppp b / scripts / packages / build <nl> <unk> ( <nl> " : bazel - bin " , <nl> " : bazel - completion " , <nl> " : bazel - - tools tools " , <nl> ] , ) <nl>
====NEW EXAMPLE====
ppp b / hibernate - core / src / main / java / org / hibernate / engine / internal / statefulpersistencecontext . java <nl> public class statefulpersistencecontext implements persistencecontext { <nl> } <nl> } <nl> else { <nl> <unk> . remove ( <unk> ) ; <nl> } <nl> } <nl> } <nl>
ppp b / hibernate - core / src / main / java / org / hibernate / engine / internal / statefulpersistencecontext . java <nl> public class statefulpersistencecontext implements persistencecontext { <nl> } <nl> } <nl> else { <nl> <unk> . remove ( <unk> ) ; <nl> } <nl> } <nl>
ppp b / hibernate - core / src / main / java / org / hibernate / engine / internal / statefulpersistencecontext . java <nl> public class statefulpersistencecontext implements persistencecontext { <nl> } <nl> } <nl> else { <nl> <unk> . remove ( <unk> ) ; <nl> } <nl> } <nl> } <nl> <nl>
ppp b / hibernate - core / src / main / java / org / hibernate / engine / internal / statefulpersistencecontext . java <nl> public class statefulpersistencecontext implements persistencecontext { <nl> } <nl> } <nl> else { <nl> <unk> . remove ( <unk> ) ; <nl> } <nl> } <nl> }
ppp b / hibernate - core / src / main / java / org / hibernate / engine / internal / statefulpersistencecontext . java <nl> public class statefulpersistencecontext implements persistencecontext { <nl> } <nl> } <nl> else { <nl> <unk> . remove ( <unk> ) ; <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> ext { <nl> proguardversion = ' 5 . 0 ' <nl> } <nl> it . dependencies { <nl>
ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> ext { <nl> proguardversion = ' 5 . 0 ' <nl> } <nl> it . dependencies { <nl> <nl>
ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> ext { <nl> proguardversion = ' 5 . 0 ' <nl> } <nl> it . { <nl>
ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> ext { <nl> proguardversion = ' 5 . 0 ' <nl> } <nl> it . dependencies <nl>
ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> ext { <nl> proguardversion = ' 5 . 0 ' <nl> } <nl> it . dependencies {
====NEW EXAMPLE====
ppp b / settings . gradle <nl>
ppp b / settings . gradle
ppp b
ppp
ppp b / settings
====NEW EXAMPLE====
ppp b / build . gradle <nl> checkstylemain . dolast { <nl> } <nl> dependencies { <nl>
ppp b / build . gradle <nl> checkstylemain . dolast { <nl> } <nl>
ppp b / build . gradle <nl> checkstylemain . dolast { <nl> } <nl> dependencies <nl>
ppp b / build . gradle <nl> checkstylemain . dolast { <nl>
ppp b / build . gradle <nl> checkstylemain . dolast { <nl> } <nl> dependencies
====NEW EXAMPLE====
ppp b / parceler / pom . xml <nl> < dependency > <nl> < groupid > org . androidtransfuse < / groupid > <nl> < artifactid > transfuse - bootstrap < / artifactid > <nl> < version > 0 . 2 . 4 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > junit < / groupid > <nl>
ppp b / parceler / pom . xml <nl> < dependency > <nl> < groupid > org . androidtransfuse < / groupid > <nl> < artifactid > transfuse - bootstrap < / artifactid > <nl> < version > 0 . 2 . 4 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > junit < / > <nl>
ppp b / parceler / pom . xml <nl> < dependency > <nl> < groupid > org . androidtransfuse < / groupid > <nl> < artifactid > transfuse - bootstrap < / artifactid > <nl> < version > 0 . 2 . 4 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > junit < / groupid groupid <nl>
ppp b / parceler / pom . xml <nl> < dependency > <nl> < groupid > org . androidtransfuse < / groupid > <nl> < artifactid > transfuse - bootstrap < / artifactid > <nl> < version > 0 . 2 . 4 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > junit < / groupid > > <nl>
ppp b / parceler / pom . xml <nl> < dependency > <nl> < groupid > org . androidtransfuse < / groupid > <nl> < artifactid > transfuse - bootstrap < / artifactid > <nl> < version > 0 . 2 . 4 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - configuration - admin . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - configuration - admin . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl>
ppp
ppp b / pom . xml <nl> < version > $ { version
ppp b / pom . xml <nl> < version

====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / platform - <unk> / src / messages / <unk> . properties <nl> dialog . ioexception . proxy = set up http proxy settings <nl> dialog . ioexception . <unk> = try <nl>
ppp b / platform - <unk> / src / messages / <unk> . properties <nl> dialog . ioexception . proxy = set up http proxy settings <nl>

ppp b / platform - <unk> / src / messages / <unk> . properties <nl> dialog . ioexception . proxy = set up http proxy <nl>
ppp b / platform - <unk> / src / messages / <unk> . properties <nl> dialog . ioexception . proxy = set up http proxy settings <nl> dialog . ioexception . <unk> = try again <nl> button . cancel = cancel <nl> button . ok = ok button . . help = help help <nl> button . retry = & <nl> editbox . . = password : : <nl> checkbox . <unk> . password = <unk> password <nl>
====NEW EXAMPLE====
ppp b / v8 / renderscript / rs_support / android . mk <nl> endif <nl> local_ldflags + = - llog - ldl <nl> local_ndk_stl_variant : = stlport_static <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> endif <nl> local_ldflags + = - llog - ldl <nl> local_ndk_stl_variant : = stlport_static <nl> <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> endif <nl> local_ldflags + = - llog - ldl <nl> local_ndk_stl_variant : = stlport_static <nl> local_c_includes
ppp b / v8 / renderscript / rs_support / android . mk <nl> endif <nl> local_ldflags + = - llog - ldl <nl> local_ndk_stl_variant : = <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> endif <nl> local_ldflags + = - llog - ldl <nl> local_ndk_stl_variant : = stlport_static <nl> local_c_includes <nl>
====NEW EXAMPLE====
ppp b / plugins / yaml / src / org / jetbrains / yaml / <unk> . java <nl> public class <unk> { <nl> } <nl> @ nullable <nl> public static string getkey ( final <unk> <unk> ) { <nl> final stringbuilder builder = new stringbuilder ( ) ; <nl> <unk> element = <unk> ; <nl> psielement parent ; <nl>
ppp b / plugins / yaml / src / org / jetbrains / yaml / <unk> . java <nl> public class <unk> { <nl> } <nl> @ nullable <nl> public static string getkey ( final <unk> <unk> ) { <nl> final stringbuilder builder = new stringbuilder ( ) ; <nl> <unk> element = <unk> ; <nl> psielement parent ; <nl> ; <nl>
ppp b / plugins / yaml / src / org / jetbrains / yaml / <unk> . java <nl> public class <unk> { <nl> } <nl> @ nullable <nl> public static string getkey ( final <unk> <unk> ) { <nl> final stringbuilder builder = new stringbuilder ( ) ; <nl> <unk> element = <unk> ; <nl> psielement parent ; <nl> <nl>
ppp b / plugins / yaml / src / org / jetbrains / yaml / <unk> . java <nl> public class <unk> { <nl> } <nl> @ nullable <nl> public static string getkey ( final <unk> <unk> ) { <nl> final stringbuilder builder = new stringbuilder ( ) ; <nl> <unk> element = <unk> ; <nl> psielement parent ; ; <nl>
ppp b / plugins / yaml / src / org / jetbrains / yaml / <unk> . java <nl> public class <unk> { <nl> } <nl> @ nullable <nl> public static string getkey ( final <unk> <unk> ) { <nl> final stringbuilder builder = new stringbuilder ( ) ; <nl> <unk> element = <unk> ; <nl> psielement ; <nl>
====NEW EXAMPLE====
ppp b / services / java / com / android / server / inputmethodmanagerservice . java <nl> public class inputmethodmanagerservice extends iinputmethodmanager . stub <nl> static final int <unk> = 4000 ; <nl> static final long <unk> = 10 * 1000 ; <nl> static final int <unk> = 20 ; <nl>
ppp b / services / java / com / android / server / inputmethodmanagerservice . java <nl> public class inputmethodmanagerservice extends iinputmethodmanager . stub <nl> static final int <unk> = 4000 ; <nl> static final long <unk> = 10 * 1000 ; <nl> static final int <unk> = ; <nl>
ppp b / services / java / com / android / server / inputmethodmanagerservice . java <nl> public class inputmethodmanagerservice extends iinputmethodmanager . stub <nl> static final int <unk> = 4000 ; <nl> static final long <unk> = 10 * 1000 ; <nl> static final int <unk> = 20 <nl>
ppp b / services / java / com / android / server / inputmethodmanagerservice . java <nl> public class inputmethodmanagerservice extends iinputmethodmanager . stub <nl> static final int <unk> = 4000 ; <nl> static final long <unk> = 10 * 1000 ; <nl> static final int <unk> = 20 ; ; <nl>
ppp b / services / java / com / android / server / inputmethodmanagerservice . java <nl> public class inputmethodmanagerservice extends iinputmethodmanager . stub <nl> static final int <unk> = 4000 ; <nl> static final long <unk> = 10 * 1000 ; <nl> static final int <unk> = 20 20 ; <nl>
====NEW EXAMPLE====
ppp b / src / gwt / src / org / rstudio / studio / client / common / mathjax / mathjax . java <nl> public class mathjax <nl> <unk> . <unk> ( ) ; <nl> <unk> = null ; <nl> } <nl> } <nl> @ override <nl> } <nl> } <nl> private void render ( final string text ) <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / common / mathjax / mathjax . java <nl> public class mathjax <nl> <unk> . <unk> ( ) ; <nl> <unk> = null ; <nl> } <nl> } <nl> @ override <nl> } <nl> } <nl> private void render ( final string text <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / common / mathjax / mathjax . java <nl> public class mathjax <nl> <unk> . <unk> ( ) ; <nl> <unk> = null ; <nl> } <nl> } <nl> @ override <nl> } <nl> } <nl> private void render ( final string ) <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / common / mathjax / mathjax . java <nl> public class mathjax <nl> <unk> . <unk> ( ) ; <nl> <unk> = null ; <nl> } <nl> } <nl> @ override <nl> } <nl> } <nl> private void render ( final string text ) ) <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / common / mathjax / mathjax . java <nl> public class mathjax <nl> <unk> . <unk> ( ) ; <nl> <unk> = null ; <nl> } <nl> } <nl> @ override <nl> } <nl> } <nl> private void render ( final string text )
====NEW EXAMPLE====
ppp b / config / codenarc / codenarc . xml <nl> < exclude name = ' <unk> ' / > <nl> < /
ppp b / config / codenarc / codenarc . xml <nl> < exclude name = ' <unk> ' / > <nl> <
ppp b / config / codenarc / codenarc . xml <nl> < exclude name = ' <unk> ' / > <nl> < / ruleset
ppp b / config / codenarc / codenarc . xml <nl> < exclude name = ' <unk> ' / > <nl> < / ruleset -
ppp b / config / codenarc / codenarc . xml <nl> < exclude name = ' <unk> ' / > <nl> < / ruleset - ref > <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / notice <nl> the original xml schemas for java ee deployment descriptors :
ppp

ppp b / notice <nl> the original xml schemas for java ee deployment descriptors : <nl> <unk> . xsd <nl> <unk> . xsd <nl> <unk> . xsd <nl> \ no newline at end of file <nl> / / / / / / / / / / / / <nl> } <nl> may may be from http : / / java sun . com / xml / / javaee / / <nl>
ppp b / notice <nl> the original xml schemas for java ee deployment descriptors : <nl> <unk> . xsd <nl> <unk> . xsd <nl> <unk> . xsd <nl> \ no newline at end of file <nl> / / / / / / / / / / / / <nl> } <nl> may may be from http : / / java sun . com / xml / / javaee / <nl>
====NEW EXAMPLE====
ppp b / src / com / fsck / k9 / k9 . java <nl> public class k9 extends application { <nl> int <unk> = <unk> . getint ( <unk> , 0 ) ; <nl> if ( <unk> > 0 & & <unk> < = localstore . <unk> ) { <nl> { <nl> } <nl> } <nl>
ppp b / src / com / fsck / k9 / k9 . java <nl> public class k9 extends application { <nl> int <unk> = <unk> . getint ( <unk> , 0 ) ; <nl>
ppp b / src / com / fsck / k9 / k9 . java <nl> public class k9 extends application { <nl> int <unk> = <unk> . getint ( <unk> , 0 ) ; <nl> if ( <unk> > 0 & & <unk> < = localstore . <unk> ) { <nl> { <nl> } } <nl>
ppp b / src / com / fsck / k9 / k9 . java <nl> public class k9 extends application { <nl> int <unk> = <unk> . getint ( <unk> , 0 ) ; <nl> if ( <unk> > 0 & & <unk> < = localstore . <unk> ) { <nl>
ppp b / src / com / fsck / k9 / k9 . java <nl> public class k9 extends application { <nl> int <unk> = <unk> . getint ( <unk> , 0 ) ; <nl> if ( <unk> > 0 & & <unk> < = localstore . <unk> ) { <nl> { <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / xml / <unk> / test / org / intellij / plugins / <unk> / <unk> . java <nl> public abstract class <unk> extends usefultestcase implements ide <nl> @ override <nl> protected void teardown ( ) throws exception { <nl> <unk> ( ) ; <nl> <unk> . . teardown ( ) ; <nl> super . teardown ( ) ; <nl> } <nl>
ppp b / xml / <unk> / test / org / intellij / plugins / <unk> / <unk> . java <nl> public abstract class <unk> extends usefultestcase implements ide <nl> @ override <nl> protected void teardown ( ) throws exception { <nl> <unk> ( ) ; <nl> <unk> . . teardown ( ) ; <nl> super . teardown ( ) ; <nl>
ppp b / xml / <unk> / test / org / intellij / plugins / <unk> / <unk> . java <nl> public abstract class <unk> extends usefultestcase implements ide <nl> @ override <nl> protected void teardown ( ) throws exception { <nl> <unk> ( ) ; <nl> <unk> . . teardown ( ) ; <nl> super . teardown ( ) ; <nl> } <nl> <nl>
ppp b / xml / <unk> / test / org / intellij / plugins / <unk> / <unk> . java <nl> public abstract class <unk> extends usefultestcase implements ide <nl> @ override <nl> protected void teardown ( ) throws exception { <nl> <unk> ( ) ; <nl> <unk> . . teardown ( ) ; <nl> super . teardown ( ) ; <nl> }
ppp b / xml / <unk> / test / org / intellij / plugins / <unk> / <unk> . java <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of file
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> no newline at end of file <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> deploy : <nl> bucket : graylog2 - builds <nl>
ppp b / . travis . yml <nl> deploy : <nl>
ppp b / . travis . yml <nl>
ppp

====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bd41484cc751fd32c240fe49bf1237af24ca4f70 <nl> mode = push <nl> parent = f9544e84f5a4c671524d80c363838e78afe1e9ad <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bd41484cc751fd32c240fe49bf1237af24ca4f70 <nl> mode = push <nl> parent = f9544e84f5a4c671524d80c363838e78afe1e9ad <nl> remote = git @ github . com : liferay / com - liferay - calendar . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / test / org / apache / coyote / http2 / <unk> . java <nl> public class <unk> extends http2testbase { <nl> / / http2 upgrade <nl> <unk> ( ) ; <nl> / / overly large ping <nl> byte [ ] ping = new byte [ 9 ] ; <nl> / / header <nl>
ppp b / test / org / apache / coyote / http2 / <unk> . java <nl> public class <unk> extends http2testbase { <nl> / / http2 upgrade <nl> <unk> ( ) ; <nl> / / overly large ping <nl> byte [ ] ping = new byte [ 9 ] ; <nl> / / <nl>
ppp b / test / org / apache / coyote / http2 / <unk> . java <nl> public class <unk> extends http2testbase { <nl> / / http2 upgrade <nl> <unk> ( ) ; <nl> / / overly large ping <nl> byte [ ] ping = new byte [ 9 ] ; <nl>
ppp b / test / org / apache / coyote / http2 / <unk> . java <nl> public class <unk> extends http2testbase { <nl> / / http2 upgrade <nl> <unk> ( ) ; <nl> / / overly large ping <nl> byte [ ] ping = new byte [ 9 ] ; <nl> / / header
ppp b / test / org / apache / coyote / http2 / <unk> . java <nl> public class <unk> extends http2testbase { <nl> / / http2 upgrade <nl> <unk> ( ) ; <nl> / / overly large ping <nl> byte [ ] ping = new byte [ 9 ] ; <nl> / / header header <nl>
====NEW EXAMPLE====
ppp b / deploy / bin / oryx - run . sh <nl> batch | speed | <unk> ) <nl> <unk> = " $ { <unk> } $ { <unk> } " <nl> echo " $ { <unk> } " <nl> $ { <unk> } <nl> $ ( ) ; <nl> ; <nl> yarn ) <nl>
ppp b / deploy / bin / oryx - run . sh <nl> batch | speed | <unk> ) <nl> <unk> = " $ { <unk> } $ { <unk> } " <nl> echo " $ { <unk> } " <nl> $ { <unk> } <nl> $ ( ) ; <nl> ; <nl> yarn ) ) <nl>
ppp b / deploy / bin / oryx - run . sh <nl> batch | speed | <unk> ) <nl> <unk> = " $ { <unk> } $ { <unk> } " <nl> echo " $ { <unk> } " <nl> $ { <unk> } <nl> $ ( ) ; <nl> ; <nl> yarn ) <nl> ) <nl>
ppp b / deploy / bin / oryx - run . sh <nl> batch | speed | <unk> ) <nl> <unk> = " $ { <unk> } $ { <unk> } " <nl> echo " $ { <unk> } " <nl> $ { <unk> } <nl> $ ( ) ; <nl> ; <nl> yarn ) <nl> <nl>
ppp b / deploy / bin / oryx - run . sh <nl> batch | speed | <unk> ) <nl> <unk> = " $ { <unk> } $ { <unk> } " <nl> echo " $ { <unk> } " <nl> $ { <unk> } <nl> $ ( ) ; <nl> ; <nl> yarn yarn <nl>
====NEW EXAMPLE====
ppp b / fml / client / net / minecraft / src / <unk> . java <nl> public abstract class <unk> implements cpw . mods . fml . common . <unk> . <unk> <nl> return null ; <nl> } <nl> public void <unk> ( ) <nl> public void <unk> ( <unk> handler , <unk> packet ) <nl> { <nl>
ppp b / fml / client / net / minecraft / src / <unk> . java <nl> public abstract class <unk> implements cpw . mods . fml . common . <unk> . <unk> <nl> return null ; <nl> } <nl> public void <unk> ( ) <nl> public void <unk> ( <unk> handler , <unk> packet ) <nl>
ppp b / fml / client / net / minecraft / src / <unk> . java <nl> public abstract class <unk> implements cpw . mods . fml . common . <unk> . <unk> <nl> return null ; <nl> } <nl> public void <unk> ( ) <nl> public void <unk> ( <unk> handler , <unk> packet ) <nl> { <nl> <nl>
ppp b / fml / client / net / minecraft / src / <unk> . java <nl> public abstract class <unk> implements cpw . mods . fml . common . <unk> . <unk> <nl> return null ; <nl> } <nl> public void <unk> ( ) <nl> public void <unk> ( <unk> handler , <unk> packet ) { <nl>
ppp b / fml / client / net / minecraft / src / <unk> . java <nl> public abstract class <unk> implements cpw . mods . fml . common . <unk> . <unk> <nl> return null ; <nl> } <nl> public void <unk> ( ) <nl> public void <unk> ( <unk> handler , <unk> packet ) <nl> <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < properties > <nl> < ! - - you can add any specific project property here - - > <nl>
ppp b / pom . xml <nl> < properties > <nl> < ! - - you can add any specific project property here - - > <nl> > <nl>
ppp b / pom . xml <nl> < properties > <nl> < ! - - you can add any specific project property here - - <nl>
ppp b / pom . xml <nl> < properties > <nl> < ! - - you can add any specific project property here - - > <nl> <nl>
ppp b / pom . xml <nl> < properties > <nl> < ! - - you can add any specific project property here - > <nl>
====NEW EXAMPLE====
ppp b / manager / network_interface . py <nl>
ppp b / manager / network_interface . py <nl> def <unk> ( ) : <nl> output = subprocess . <unk> ( [ ' <unk> ' ] <nl>
ppp b / manager / network_interface . py <nl> def <unk> ( ) : <nl>
ppp

====NEW EXAMPLE====
ppp b / platform / solaris / <unk> / opengrok . xml <nl> use is subject to license terms . <nl>
ppp b / platform / solaris / <unk> / opengrok . xml <nl> use is subject to license terms . <nl> < <unk> <nl> name = " srcdir " <nl> type = " <unk> " <nl> value = " " <nl> value = " none " / > <nl> < <unk> <nl> = = " cachedir " " <nl> type = " <unk> " <nl>
ppp b / platform / solaris / <unk> / opengrok . xml <nl> use is subject to license terms . <nl> < <unk> <nl> name = " srcdir " <nl> type = " <unk> " <nl> value = " " <nl> value = " none " / > <nl> < <unk> <nl> = = " cachedir " " <nl> type = " <unk> " " <nl>
ppp b / platform / solaris / <unk> / opengrok . xml <nl> use is subject to license terms . <nl> < <unk> <nl> name = " srcdir " <nl> type = " <unk> " <nl> value = " " <nl> value = " none " / > <nl> < <unk> <nl> = = " cachedir " " <nl> type = " <unk> <nl>
ppp b / platform / solaris / <unk> / opengrok . xml <nl>
====NEW EXAMPLE====
ppp b / platform / lang - impl / src / com / intellij / find / impl / <unk> . java <nl> public class <unk> extends dialogwrapper { <nl> <unk> ( <unk> , <unk> ) ; <nl> } <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> ) ; <nl> <unk> ( ) ; <nl> } <nl>
ppp b / platform / lang - impl / src / com / intellij / find / impl / <unk> . java <nl> public class <unk> extends dialogwrapper { <nl> <unk> ( <unk> , <unk> ) ; <nl> } <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> ) ; <nl> <unk> ( ) ; <nl>
ppp b / platform / lang - impl / src / com / intellij / find / impl / <unk> . java <nl> public class <unk> extends dialogwrapper { <nl> <unk> ( <unk> , <unk> ) ; <nl> } <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> ) ; <nl> <unk> ( ) ; <nl> }
ppp b / platform / lang - impl / src / com / intellij / find / impl / <unk> . java <nl> public class <unk> extends dialogwrapper { <nl> <unk> ( <unk> , <unk> ) ; <nl> } <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> ) ; <nl> <unk> ( ) ; <nl> } <nl> <nl>
ppp b / platform / lang - impl / src / com / intellij / find / impl / <unk> . java <nl> public class <unk> extends dialogwrapper { <nl> <unk> ( <unk> , <unk> ) ; <nl> } <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> ) ; <nl> <unk> ( ) ; } <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl>

ppp b / readme . md <nl> copy the the following files / folders to your projects libs folder . <nl> * bin / gpuimage . jar <nl> # # create libs / armeabi <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> armeabi <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> copy the the following files / folders to your projects libs folder . <nl> * bin / gpuimage . jar <nl> # # create libs / armeabi <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> copy the the following files / folders to your projects libs folder . <nl> * bin / gpuimage . jar <nl> # # create libs / armeabi <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> armeabi <nl>
====NEW EXAMPLE====
ppp b / src / bin / startgroovy <nl> lateinit ( ) { <nl> } <nl> <unk> = ~ / . groovy / startup <nl> if [ - r $ <unk> ] ; <nl> then ; <nl> then <nl> . $ <unk> <nl> fi <nl> <unk> <nl>
ppp b / src / bin / startgroovy <nl> lateinit ( ) { <nl> } <nl> <unk> = ~ / . groovy / startup <nl> if [ - r $ <unk> ] ; <nl> then ; <nl> then <nl> . $ <unk> <nl> fi <nl>
ppp b / src / bin / startgroovy <nl> lateinit ( ) { <nl> } <nl> <unk> = ~ / . groovy / startup <nl> if [ - r $ <unk> ] ; <nl> then ; <nl> then <nl> . $ <unk> <nl> fi <nl> <nl>
ppp b / src / bin / startgroovy <nl> lateinit ( ) { <nl> } <nl> <unk> = ~ / . groovy / startup <nl> if [ - r $ <unk> ] ; <nl> then ; <nl> then <nl> . $ <unk> <nl> fi <unk> <nl>
ppp b / src / bin / startgroovy <nl> lateinit ( ) { <nl> } <nl> <unk> = ~ / . groovy / startup <nl> if [ - r $ <unk> ] ; <nl> then ; <nl> then <nl> . $ <unk> <nl> fi <nl> <unk>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f23f6bfa4a2cd0b210198a3ebff952e470e1ce43 <nl> mode = push <nl> parent = f976627b95469b02ffc77eb7f0b061c19794b6b3 <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f23f6bfa4a2cd0b210198a3ebff952e470e1ce43 <nl> mode = push <nl> parent = f976627b95469b02ffc77eb7f0b061c19794b6b3 <nl> remote = git @ github . com : liferay / com - liferay - login - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f23f6bfa4a2cd0b210198a3ebff952e470e1ce43 <nl> mode = push <nl> parent = f976627b95469b02ffc77eb7f0b061c19794b6b3 <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / res / layout / <unk> . xml <nl> style = " @ style / wordpress . <unk> " <nl> android : hint = " @ string / <unk> " <nl> android : padding = " 16dp " <nl> android : layout_marginleft = " 32dp " <nl> android : layout_marginleft = " 32dp " / > <nl> < imageview <nl>
ppp b / res / layout / <unk> . xml <nl> style = " @ style / wordpress . <unk> " <nl> android : hint = " @ string / <unk> " <nl> android : padding = " 16dp " <nl> android : layout_marginleft = " 32dp " <nl> android : layout_marginleft = " 32dp " / > <nl> < imageview imageview <nl>
ppp b / res / layout / <unk> . xml <nl> style = " @ style / wordpress . <unk> " <nl>
ppp b / res / layout / <unk> . xml <nl> style = " @ style / wordpress . <unk> " <nl> android : hint = " @ string / <unk> " <nl> android : padding = " 16dp " <nl> android : layout_marginleft = " 32dp " <nl> android : layout_marginleft = " 32dp " / > <nl> < / <nl>
ppp b / res / layout / <unk> . xml <nl> style = " @ style / wordpress . <unk> " <nl> android : hint = " @ string / <unk> " <nl> android : padding = " 16dp " <nl> android : layout_marginleft = " 32dp " <nl> android : layout_marginleft = " 32dp " / > <nl> < <nl>
====NEW EXAMPLE====
ppp b / settings . gradle <nl> include ' : libraries : pagerslidingtabstrip ' <nl> include ' : libraries : android - menudrawer ' <nl> include ' : libraries : stickygridheaders ' <nl> include ' : ' <nl> \ no newline at end of file <nl>
ppp b / settings . gradle <nl> include ' : libraries : pagerslidingtabstrip ' <nl> include ' : libraries : android - menudrawer ' <nl> include ' : libraries : stickygridheaders ' <nl> include ' : ' <nl> ' astfun <nl> \ no newline at end of file <nl>
ppp b / settings . gradle <nl> include ' : libraries : pagerslidingtabstrip ' <nl> include ' : libraries : android - menudrawer ' <nl> include ' : libraries : stickygridheaders ' <nl> include ' : ' <nl> ' astfun <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / settings . gradle <nl> include ' : libraries : pagerslidingtabstrip ' <nl> include ' : libraries : android - menudrawer ' <nl> include ' : libraries : stickygridheaders ' <nl> include ' : ' <nl> \ no newline at end of file <nl> ' ' ' ' <nl> \ no newline at end of file <nl>
ppp b / settings . gradle <nl> include ' : libraries : pagerslidingtabstrip ' <nl> include ' : libraries : android - menudrawer ' <nl> include ' : libraries : stickygridheaders ' <nl> include ' : ' <nl> \ no newline at end of file <nl> ' ' ' <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / media / jni / soundpool / soundpool . cpp <nl> # define log_tag " soundpool " <nl> # include < utils / log . h > <nl> / <nl> # define <unk> <nl> / / xxx needed for timing latency <nl> # include < utils / <unk> . h > <nl>
ppp b / media / jni / soundpool / soundpool . cpp <nl> # define log_tag " soundpool " <nl> # include < utils / log . h > <nl> / <nl> # define <unk> <nl> / / xxx needed for timing latency <nl> # include < utils / <unk> . h h <nl>
ppp b / media / jni / soundpool / soundpool . cpp <nl> # define log_tag " soundpool " <nl> # include < utils / log . h > <nl> / <nl> # define <unk> <nl> / / xxx needed for timing latency <nl> # include < utils / <unk> . > <nl>
ppp b / media / jni / soundpool / soundpool . cpp <nl> # define log_tag " soundpool " <nl> # include < utils / log . h > <nl> / <nl> # define <unk> <nl> / / xxx needed for timing latency <nl> # include < utils / <unk> . h <nl>
ppp b / media / jni / soundpool / soundpool . cpp <nl> # define log_tag " soundpool " <nl> # include < utils / log . h > <nl> / <nl> # define <unk> <nl> / / xxx needed for timing latency <nl> # include < utils / <unk> . h h
====NEW EXAMPLE====
ppp b / test / org / mockitousage / examples / configure / <unk> . java <nl> public class <unk> extends testbase { <nl> @ after <nl> public void <unk> ( ) { <nl> mockitoconfiguration . instance ( ) . <unk> ) ; <nl> } <nl> private final class <unk> implements returnvalues { <nl>
ppp b / test / org / mockitousage / examples / configure / <unk> . java <nl> public class <unk> extends testbase { <nl> @ after <nl> public void <unk> ( ) { <nl> mockitoconfiguration . instance ( ) . <unk> ) ; <nl> } <nl> private final class <unk> implements returnvalues { { <nl>
ppp b / test / org / mockitousage / examples / configure / <unk> . java <nl> public class <unk> extends testbase { <nl> @ after <nl> public void <unk> ( ) { <nl> mockitoconfiguration . instance ( ) . <unk> ) ; <nl> } <nl> private final class <unk> implements returnvalues returnvalues <nl>
ppp b / test / org / mockitousage / examples / configure / <unk> . java <nl> public class <unk> extends testbase { <nl> @ after <nl> public void <unk> ( ) { <nl> mockitoconfiguration . instance ( ) . <unk> ) ; <nl> } <nl> private final class <unk> implements returnvalues { <nl> <nl>
ppp b / test / org / mockitousage / examples / configure / <unk> . java <nl> public class <unk> extends testbase { <nl> @ after <nl> public void <unk> ( ) { <nl> mockitoconfiguration . instance ( ) . <unk> ) ; <nl> } <nl> private final class <unk> implements returnvalues returnvalues
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 441b7fd4f0d3163a510b22a489cf02f49ae0129d <nl> mode = push <nl> parent = 49e360d8acfa56eed57813cec011b2914e2d933a <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 441b7fd4f0d3163a510b22a489cf02f49ae0129d <nl> mode = push <nl> parent = 49e360d8acfa56eed57813cec011b2914e2d933a <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 441b7fd4f0d3163a510b22a489cf02f49ae0129d <nl> mode = push <nl> parent = 49e360d8acfa56eed57813cec011b2914e2d933a <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / . gitignore <nl> bin <nl> # - - java <nl> hs_err_pid
ppp b / . gitignore <nl> bin <nl>
ppp b / . gitignore <nl> bin <nl> # - - java <nl>
ppp b / . gitignore <nl> bin <nl> # - - java <nl> hs_err_pid * * <nl> \ no newline at end of file <nl> hs_err_pid * <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> bin <nl> # - - java <nl> hs_err_pid * * <nl> \ no newline at end of file <nl> hs_err_pid * <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 1 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 22 . 0 . 0 - beta4 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 1 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 22 . 0 . 0 - beta4 ' <nl> } <nl> ext . libraries = [ [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 1 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 22 . 0 . 0 - beta4 ' <nl> } <nl> ext . libraries = = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 1 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 22 . 0 . 0 - beta4 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 1 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 22 . 0 . 0 - beta4 ' <nl> } <nl> ext . libraries = [
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0
ppp

====NEW EXAMPLE====
ppp b / bigbluebutton - config / bin / bbb - conf <nl> export ant_opts = \ " - xmx512m - xx : maxpermsize = 512m \ " <nl>
ppp b / bigbluebutton - config / bin / bbb - conf <nl> export ant_opts = \ " - xmx512m - xx : maxpermsize = 512m \ <nl>
ppp b / bigbluebutton - config / bin / bbb - conf <nl> export ant_opts = \ " - xmx512m - xx : maxpermsize = 512m \ " <nl> sudo / etc / init . d / red5 stop <nl> cd $ { <unk> } <nl> gradle clean war war deploy deploy deploy <nl> cd $ red5_dir red5_dir <nl> sudo - u red5 . / red5 . <nl>
ppp b / bigbluebutton - config / bin / bbb - conf <nl> export ant_opts = \ " - xmx512m - xx : maxpermsize = 512m \ " <nl> sudo / etc / init . d / red5 stop <nl> cd $ { <unk> } <nl> gradle clean war war deploy deploy deploy <nl> cd $ red5_dir red5_dir <nl> sudo - u red5 . / red5 sh <nl>
ppp b / bigbluebutton - config / bin / bbb - conf <nl> export ant_opts = \ " - xmx512m - xx : maxpermsize = 512m \ " <nl> sudo / etc / init . d / red5 stop <nl> cd $ { <unk> } <nl> gradle clean war war deploy deploy deploy <nl> cd $ red5_dir red5_dir <nl> sudo - u red5 . / red5 . sh <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> <unk> { <nl> ' build - number ' : buildnumber , <nl> ] <nl>
ppp b / build . gradle <nl>
ppp b /
ppp b
ppp
====NEW EXAMPLE====
ppp b / externs / <unk> . js <nl> window . prototype . <unk> ; <nl> / * * <nl>
ppp b / externs / <unk> . js <nl> window . prototype . <unk> ; <nl>
ppp b / externs / <unk> . js <nl>
ppp b / externs / <unk> . js <nl> window . prototype . <unk> ; <nl> / * * <nl> * @ see http : / / <unk> . microsoft . com / en - us / library / <unk> % <unk> = vs . 85 % 29 . <unk> <unk> <nl> * @ const <nl> const <nl> * / <nl> <nl> window . prototype . external ; <nl>
ppp b / externs / <unk> . js <nl> window . prototype . <unk> ; <nl> / * * <nl> * @ see http : / / <unk> . microsoft . com / en - us / library / <unk> % <unk> = vs . 85 % 29 . <unk> <unk> <nl> * @ const <nl> const <nl> * / <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 1769 : added a test to check local nimbus with notifier plugin <nl>
ppp b / changelog . md <nl>

ppp b / changelog . md <nl> * storm - 1769 : added a
ppp b / changelog . md <nl> * storm - 1769 : added a test to check local nimbus with notifier plugin <nl> # # 1 . 1 . 0 <nl> * storm - 1979 and authors editing <nl> * storm - storm - 1979 storm - connector implementation . <nl> * storm - 2057 : support join statement in storm - <nl> storm - - <unk> : external project examples <unk> <nl>
====NEW EXAMPLE====
ppp b / portal - test - internal / src / com / liferay / portal / test / mock / <unk> . java <nl> public class <unk> extends mockservletcontext { <nl> * / <nl> protected boolean autodeploy = boolean . true ; <nl> } <nl> \ no newline at end of file <nl>
ppp b / portal - test - internal / src / com / liferay / portal / test / mock / <unk> . java <nl> public class <unk> extends mockservletcontext { <nl> * / <nl> protected boolean autodeploy = boolean . true ; <nl> \ no newline at end of file <nl>
ppp b / portal - test - internal / src / com / liferay / portal / test / mock / <unk> . java <nl> public class <unk> extends mockservletcontext { <nl> * / <nl> protected boolean autodeploy = boolean . true ; <nl> } <nl> <nl> \ no newline at end of file <nl>
ppp b / portal - test - internal / src / com / liferay / portal / test / mock / <unk> . java <nl> public class <unk> extends mockservletcontext { <nl> * / <nl> protected boolean autodeploy = boolean . true ; <nl> } <nl> \ no newline at end <nl>
ppp b / portal - test - internal / src / com / liferay / portal / test / mock / <unk> . java <nl> public class <unk> extends mockservletcontext { <nl> * / <nl> protected boolean autodeploy = boolean . true ; <nl> } <nl> \ no newline end of file <nl>
====NEW EXAMPLE====
ppp b / jre_emul / classes / <unk> . h <nl> # import " <unk> . h " <nl>
ppp b / jre_emul / classes / <unk> . h <nl>
ppp

ppp b / jre_emul / classes / <unk> . h <nl> # import
====NEW EXAMPLE====
ppp b / graphics / java / android / graphics / typeface . java <nl> public class typeface { <nl>
ppp b / graphics / java / android / graphics / typeface . java <nl>
ppp b / graphics / java / android / graphics / typeface . java <nl> public
ppp b / graphics / java / android / graphics / typeface . java
ppp b / graphics / java / android / graphics
====NEW EXAMPLE====
ppp b / src / i18n / <unk> . properties <nl> # # updated key : ' group . summary . <unk> ' <nl>
ppp b / src / i18n / <unk> . properties <nl>

ppp b / src / i18n / <unk> . properties <nl> # # updated key : ' group . summary . <unk> ' <nl> # # added key : ' setup . sidebar . profile ' <nl> \ no newline at end of file <nl> . . profile ' <nl> # # added key : ' user . <unk> ' <nl> # wildfire <nl>
ppp b / src / i18n / <unk> . properties <nl> # # updated key : ' group . summary . <unk> ' <nl> # # added key : ' setup . sidebar . profile ' <nl> \ no newline at end of file <nl> . . profile ' <nl> # # added key : ' user . <unk> ' <nl> # wildfire wildfire <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / gwt / src / org / rstudio / studio / client / workbench / views / source / editors / text / <unk> . java <nl> public class <unk> implements <nl> void <unk> ( ) <nl> { <nl> <unk> . <unk> ( ) ; <nl> } <nl> <unk> ( ) ; <nl> } <nl> @ handler <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / workbench / views / source / editors / text / <unk> . java <nl> public class <unk> implements <nl> void <unk> ( ) <nl> { <nl> <unk> . <unk> ( ) ; <nl> } <nl> <unk> ( ) ; <nl> } <nl> @ override <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / workbench / views / source / editors / text / <unk> . java <nl> public class <unk> implements <nl> void <unk> ( ) <nl> { <nl> <unk> . <unk> ( ) ; <nl> } <nl> <unk> ( ) ; <nl> } <nl> @ handler handler <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / workbench / views / source / editors / text / <unk> . java <nl> public class <unk> implements <nl> void <unk> ( ) <nl> { <nl> <unk> . <unk> ( ) ; <nl> } <nl> <unk> ( ) ; <nl> } <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / workbench / views / source / editors / text / <unk> . java <nl> public class <unk> implements <nl> void <unk> ( ) <nl> { <nl> <unk> . <unk> ( ) ; <nl> } <nl> <unk> ( ) ; <nl> } <nl> @ handler
====NEW EXAMPLE====
ppp b / src / main / org / codehaus / groovy / ast / expr / constructorcallexpression . java <nl> public class constructorcallexpression extends expression { <nl> public boolean isusinganonymousinnerclass ( ) { <nl> return usesanonymousinnerclass ; <nl> } <nl> } <nl>
ppp b / src / main / org / codehaus / groovy / ast / expr / constructorcallexpression . java <nl> public class constructorcallexpression extends expression { <nl> public boolean isusinganonymousinnerclass ( ) { <nl> return usesanonymousinnerclass ; <nl> } <nl>
ppp b / src / main / org / codehaus / groovy / ast / expr / constructorcallexpression . java <nl> public class constructorcallexpression extends expression { <nl> public boolean isusinganonymousinnerclass ( ) { <nl> return usesanonymousinnerclass ; <nl> ) ; <nl>
ppp b / src / main / org / codehaus / groovy / ast / expr / constructorcallexpression . java <nl> public class constructorcallexpression extends expression { <nl> public boolean isusinganonymousinnerclass ( ) { <nl> return usesanonymousinnerclass ; <nl> ; <nl>
ppp b / src / main / org / codehaus / groovy / ast / expr / constructorcallexpression . java <nl> public class constructorcallexpression extends expression { <nl> public boolean isusinganonymousinnerclass ( ) { <nl> return usesanonymousinnerclass ; <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / support - <unk> / src / com / liferay / support / <unk> / <unk> . java <nl> public class <unk> <nl> return super . <unk> ( <unk> ) ; <nl> } <nl> private static boolean final <unk> <nl> ( system . <unk> ( ) ! = null ) ; <nl> private string _id ; <nl>
ppp b / support - <unk> / src / com / liferay / support / <unk> / <unk> . java <nl> public class <unk> <nl> return super . <unk> ( <unk> ) ; <nl> } <nl> private static boolean final <unk> <nl> ( system . <unk> ( ) ! = null ) ; <nl> private string _id ; ; <nl>
ppp b / support - <unk> / src / com / liferay / support / <unk> / <unk> . java <nl> public class <unk> <nl> return super . <unk> ( <unk> ) ; <nl> } <nl> private static boolean final <unk> <nl> ( system . <unk> ( ) ! = null ) ; <nl> private string ; <nl>
ppp b / support - <unk> / src / com / liferay / support / <unk> / <unk> . java <nl> public class <unk> <nl> return super . <unk> ( <unk> ) ; <nl> } <nl> private static boolean final <unk> <nl> ( system . <unk> ( ) ! = null ) ; <nl> private string _id ; <nl> ; <nl>
ppp b / support - <unk> / src / com / liferay / support / <unk> / <unk> . java <nl> public class <unk> <nl> return super . <unk> ( <unk> ) ; <nl> } <nl> private static boolean final <unk> <nl> ( system . <unk> ( ) ! = null ) ; <nl> private string _id ; <nl> <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> project
ppp b / build . gradle <nl> subprojects { <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext
====NEW EXAMPLE====
ppp b / core / java / android / view / view . java <nl> public class view implements drawable . callback , keyevent . callback , <nl> @ nullable <nl>
ppp b / core / java / android / view / view . java <nl> public class view implements drawable . callback , keyevent . callback , <nl>
ppp b / core / java / android / view / view . java <nl> public class view implements drawable . callback , keyevent . callback , <nl> @ nullable <nl> public colorstatelist <unk> ( ) { <nl> return <unk> ! = null & & <unk> . <unk> ! = null <nl> ? <unk> . <unk> : null ; <nl> } <nl> } <nl> / * * <nl>
ppp b / core / java / android / view / view . java <nl> public class view implements drawable . callback , keyevent . callback , <nl> @ nullable <nl> public colorstatelist <unk> ( ) { <nl> return <unk> ! = null & & <unk> . <unk> ! = null <nl> ? <unk> . <unk> : null ; <nl> } <nl> } <nl> / * <nl>
ppp b / core / java / android / view / view . java <nl> public class view implements drawable . callback , keyevent . callback , <nl> @ nullable <nl> public colorstatelist <unk> ( ) { <nl> return <unk> ! = null & & <unk> . <unk> ! = null <nl> ? <unk> . <unk> : null ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 3 < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 3 < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 3 < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name name <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 3 < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 3 < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > > <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> distribution / openhabhome / * . zip <nl> distribution / openhabhome / etc / rrd4j / * . rrd <nl> * . xml_gen <nl> * . xml_gen <nl>
ppp b / . gitignore <nl> distribution / openhabhome / * . zip <nl> distribution / openhabhome / etc / rrd4j / * . rrd <nl> * . xml_gen <nl> * .
ppp b / . gitignore <nl> distribution / openhabhome / * . zip <nl> distribution / openhabhome / etc / rrd4j / * . rrd <nl> * . xml_gen <nl> * . xml_gen <nl> * . iml <nl>
ppp b / . gitignore <nl> distribution / openhabhome / * . zip <nl> distribution / openhabhome / etc / rrd4j / * . rrd <nl> * . xml_gen <nl> * . xml_gen <nl> till rohrmann <nl>
ppp b / . gitignore <nl> distribution / openhabhome / * . zip <nl> distribution / openhabhome / etc / rrd4j / * . rrd <nl> * . xml_gen <nl> * . xml_gen <nl> * . idea <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> byte - buddy - gradle - plugin / build / <nl> dependency - reduced - pom . xml <nl> # android <nl> * / gen <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> byte - buddy - gradle - plugin / build / <nl> dependency - reduced - pom . xml <nl> # android <nl> * / / <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> byte - buddy - gradle - plugin / build / <nl> dependency - reduced - pom . xml <nl> # android <nl> * / <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> byte - buddy - gradle - plugin / build / <nl> dependency - reduced - pom . xml <nl> # android <nl> * / gen * <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> byte - buddy - gradle - plugin / build / <nl> dependency - reduced - pom . xml <nl> # android <nl> * / gen / <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / advanced / server / pom . xml <nl> < systempropertyvariables > <nl> < java . io . tmpdir > $ { project . build . directory } < / java . io . tmpdir > <nl> < / systempropertyvariables > <nl> < argline > = = < / argline > <nl> < / configuration > <nl> < / plugin > <nl>
ppp b / advanced / server / pom . xml <nl> < systempropertyvariables > <nl> < java . io . tmpdir > $ { project . build . directory } < / java . io . tmpdir > <nl> < / systempropertyvariables > <nl> < argline > = = < / argline > <nl> < / configuration > <nl> < / > <nl>
ppp b / advanced / server / pom . xml <nl> < systempropertyvariables > <nl> < java . io . tmpdir > $ { project . build . directory } < / java . io . tmpdir > <nl> < / systempropertyvariables > <nl>
ppp b / advanced / server / pom . xml <nl> < systempropertyvariables > <nl> < java . io . tmpdir > $ { project . build . directory } < / java . io . tmpdir > <nl> < / systempropertyvariables > <nl> < argline > = = < / argline > <nl> < / configuration > <nl>
ppp b / advanced / server / pom . xml <nl> < systempropertyvariables > <nl> < java . io . tmpdir > $ { project . build . directory } < / java . io . tmpdir > <nl> < / systempropertyvariables > <nl> < argline > = = < / argline > <nl> < / configuration > <nl> < / plugin <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . netflix . astyanax < / groupid > <nl> < artifactid > astyanax < / artifactid > <nl> < version > 0 . 8 . 2 - snapshot < / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid > <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . astyanax < / groupid > <nl> < artifactid > astyanax < / artifactid > <nl> < version > 0 . 8 . 2 - snapshot < / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / > <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . astyanax < / groupid > <nl> < artifactid > astyanax < / artifactid > <nl> < version > 0 . 8 . 2 - snapshot < / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid > > <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . astyanax < / groupid > <nl> < artifactid > astyanax < / artifactid > <nl> < version > 0 . 8 . 2 - snapshot < / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid groupid <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . astyanax < / groupid > <nl> < artifactid > astyanax < / artifactid > <nl> < version > 0 . 8 . 2 - snapshot < / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid > <nl> <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> maven central . <nl> < dependency > <nl> < groupid > com . typesafe < / groupid > <nl>
ppp b / readme . md <nl> maven central . <nl> < dependency > <nl> < groupid > com . typesafe < / groupid > <nl> < artifactid > config < / artifactid > <nl> < version > 1 . 2 . 0 < / version > <nl> < / dependency > <nl> <unk> releases are here , but you probably don ' t want these : : <nl>
ppp b / readme . md <nl> maven central . <nl> < dependency > <nl> < groupid > com . typesafe < / groupid > <nl> < artifactid > config < / artifactid > <nl> < version > 1 . 2 . 0 < / version > <nl> < / dependency > <nl> <unk> releases are here , but you probably don ' t want these : <nl>
ppp b / readme . md <nl> maven central . <nl>
ppp b / readme . md <nl> maven central . <nl> < dependency > <nl> < groupid > com . typesafe < / groupid > <nl> < artifactid > config < / artifactid > <nl> < version > 1 . 2 . 0 < / version > <nl> < / dependency > <nl>
====NEW EXAMPLE====
ppp b / library / src / main / java / com / daimajia / numberprogressbar / numberprogressbar . java <nl> public class numberprogressbar extends view { <nl> private static final string <unk> = " <unk> " ; <nl> private static final int <unk> 0 ; <nl> <nl> / * * <nl>
ppp b / library / src / main / java / com / daimajia / numberprogressbar / numberprogressbar . java <nl> public class numberprogressbar extends view { <nl> private static final string <unk> = " <unk> " ; <nl> private static final int <unk> 0 ; <nl>
ppp b / library / src / main / java / com / daimajia / numberprogressbar / numberprogressbar . java <nl> public class numberprogressbar extends view { <nl> private static final string <unk> = " <unk> " ; <nl> private static final int <unk> ; <nl>
ppp b / library / src / main / java / com / daimajia / numberprogressbar / numberprogressbar . java <nl> public class numberprogressbar extends view { <nl> private static final string <unk> = " <unk> " ; <nl>
ppp b / library / src / main / java / com / daimajia / numberprogressbar / numberprogressbar . java <nl> public class numberprogressbar extends view { <nl> private static final string <unk> = " <unk> " ; <nl> private static final int <unk> = ; <nl>
====NEW EXAMPLE====
ppp b / release - notes . txt <nl>
ppp b / release - notes . txt <nl> \ no newline at end of file <nl>
ppp b / release - notes . txt <nl> changes <nl> \ no newline at end of file <nl>
ppp b / release - notes . txt <nl> changes in 2 . <nl> \ no newline at end of file <nl>
ppp b / release - notes . txt <nl> changes in 2 . <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version = 2 . 0 . 0 - snapshot <nl>
ppp b / gradle . properties <nl> version = 2 . 0 . 0 - snapshot <nl> <nl>
ppp b / gradle . properties <nl> version = 2 . 0 . 0 - oraclejdk8 <nl>
ppp b / gradle . properties <nl> version = 2 . 0 . 0 - openjdk8 <nl>
ppp b / gradle . properties <nl> version = 2 . 0 . 0 <nl>
====NEW EXAMPLE====
ppp b / src / test / groovy / operator / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> assert bar = = ' <unk> ' <nl> / / this used to fail <nl> bar = 0 ? " moo " : " <unk> " <nl> assert bar = = ' <unk> ' <nl> } <nl> } <nl>
ppp b / src / test / groovy / operator / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> assert bar = = ' <unk> ' <nl> / / this used to fail <nl> bar = 0 ? " moo " : " <unk> " <nl> assert bar = = ' <unk> ' <nl> } <nl> } } <nl>
ppp b / src / test / groovy / operator / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> assert bar = = ' <unk> ' <nl> / / this used to fail <nl> bar = 0 ? " moo " : " <unk> " <nl> assert bar = = ' <unk> ' <nl> } <nl> } <nl> <nl>
ppp b / src / test / groovy / operator / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> assert bar = = ' <unk> ' <nl> / / this used to fail <nl> bar = 0 ? " moo " : " <unk> " <nl> assert bar = = ' <unk> ' <nl> } <nl> } <nl> } <nl>
ppp b / src / test / groovy / operator / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> assert bar = = ' <unk> ' <nl> / / this used to fail <nl> bar = 0 ? " moo " : " <unk> " <nl> assert bar = = ' <unk> ' <nl> } <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> changelog <nl>
ppp b / readme . md <nl>

ppp b / readme . md <nl> changelog <nl> * fixed fake ssid for android 4 . 2 + ( [ issue ] ( https : / / github . com / m66b / xprivacy / issues / 116 ) ) <nl> * added turkish translation <nl> * updated german translation <nl> * updated polish translation <nl> * updated french translation <nl> * polish translation <nl> * updated russian translation <nl> * updated slovenian translation <nl> * * version 0 . 42 * * <nl>
ppp b / readme . md <nl> changelog <nl> * fixed fake ssid for android 4 . 2 + ( [ issue ] ( https : / / github . com / m66b / xprivacy / issues / 116 ) ) <nl> * added turkish translation <nl> * updated german translation <nl> * updated polish translation <nl> * updated french translation <nl> * polish translation <nl> * updated russian translation <nl> * updated slovenian translation <nl> * * version 0 . 42 * <nl>
====NEW EXAMPLE====
ppp b / core / common / src / test / java / alluxio / collections / <unk> . java <nl> public final class <unk> { <nl> <unk> = new <unk> < > ( ) ; <nl> } <nl> / * <nl> * tests some some simple graphs . <nl> * / <nl> @ test <nl>
ppp b / core / common / src / test / java / alluxio / collections / <unk> . java <nl> public final class <unk> { <nl> <unk> = new <unk> < > ( ) ; <nl> } <nl> / * <nl> * tests some some simple graphs . <nl> * / <nl> @ test test <nl>
ppp b / core / common / src / test / java / alluxio / collections / <unk> . java <nl> public final class <unk> { <nl> <unk> = new <unk> < > ( ) ; <nl> } <nl> / * <nl> * tests some some simple graphs . <nl> * / <nl>
ppp b / core / common / src / test / java / alluxio / collections / <unk> . java <nl> public final class <unk> { <nl> <unk> = new <unk> < > ( ) ; <nl> } <nl> / * <nl> * tests some some simple graphs . <nl> * / <nl> @ override <nl>
ppp b / core / common / src / test / java / alluxio / collections / <unk> . java <nl> public final class <unk> { <nl> <unk> = new <unk> < > ( ) ; <nl> } <nl> / * <nl> * tests some some simple graphs . <nl> * / <nl> @ @ <nl>
====NEW EXAMPLE====
ppp b / changes <nl> * gh - 45 modify db api for efficient large object support ( sears ) <nl>

ppp b / changes <nl> * gh - 45 modify db api for efficient large object support ( sears ) <nl> * gh - 46 fixed typo in redisclient ( zlender ) <nl> * gh - 49 build fix ( sears ) <nl> 0 . 1 . additional_options_string . 0 . 0 . 0 . ) <nl> 0 . 1 . 3 <nl> * voldemort binding ( rsumbaly ) <nl>
ppp b / changes <nl> * gh - 45 modify db api for efficient large object support ( sears ) <nl> * gh - 46 fixed typo in redisclient ( zlender ) <nl> * gh - 49 build fix ( sears ) <nl> 0 . 1 . additional_options_string . 0 . 0 . 0 . ) <nl> 0 . 1 . 3 <nl> * voldemort binding ( rsumbaly ) ) <nl>
ppp b / changes <nl> * gh - 45 modify db api for efficient large object support ( sears ) <nl> * gh - 46 fixed typo in redisclient ( zlender ) <nl> * gh - 49 build fix ( sears ) <nl> 0 . 1 . additional_options_string . 0 . 0 . 0 . ) <nl> 0 . 1 . 3 <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl>
ppp b / gradle . properties <nl> version = 1
ppp b
ppp b /
ppp b / gradle . properties <nl> version
====NEW EXAMPLE====
ppp b / graphdb / config / security . json <nl> " server " : <nl> { <nl> " <unk> " : false , <nl> } , <nl> " authentication " : <nl>
ppp b / graphdb / config / security . json <nl> " server " : <nl> { <nl> " <unk> " : false , <nl> } , <nl> " authentication " <nl>
ppp b / graphdb / config / security . json <nl> " server " : <nl> { <nl> " <unk> " : false , <nl> } , <nl> " authentication " : <nl> <nl>
ppp b / graphdb / config / security . json <nl> " server " : <nl> { <nl> " <unk> " : false , <nl> } , <nl> " authentication " export <nl>
ppp b / graphdb / config / security . json <nl> " server " : <nl> { <nl> " <unk> " : false , <nl> } , <nl> " authentication " export
====NEW EXAMPLE====
ppp b / jetty - http2 / http2 - server / src / main / config / modules / http2 . mod <nl> <unk> <nl> lib / http2 / * . jar <nl> [ xml ] <nl>
ppp b / jetty - http2 / http2 - server / src / main / config / modules / http2 . mod <nl> <unk> <nl> lib / http2 / * . jar <nl>
ppp b / jetty - http2 / http2 - server / src / main / config / modules / http2 . mod <nl> <unk> <nl> lib / http2 / * . jar <nl> [ xml <nl>
ppp b / jetty - http2 / http2 - server / src / main / config / modules / http2 . mod <nl> <unk> <nl> lib / http2 / * . jar <nl> [ xml ] etc <nl>
ppp b / jetty - http2 / http2 - server / src / main / config / modules / http2 . mod <nl> <unk> <nl> lib / http2 / * . jar <nl> [ xml ] <nl> <nl>
====NEW EXAMPLE====
ppp b / library - core / build . gradle <nl> if ( project . hasproperty ( ' pushall ' ) | | project . hasproperty ( ' librarycoreonly ' ) ) { <nl> } <nl> dependencies { <nl> compile ' com . android . support : support - v4 : 23 . 0 . 0 ' <nl> } <nl>
ppp b / library - core / build . gradle <nl> if ( project . hasproperty ( ' pushall ' ) | | project . hasproperty ( ' librarycoreonly ' ) ) { <nl> } <nl> dependencies { <nl> compile ' com . android . support : support - v4 : 23 . 0 . 0 ' <nl>
ppp b / library - core / build . gradle <nl> if ( project . hasproperty ( ' pushall ' ) | | project . hasproperty ( ' librarycoreonly ' ) ) { <nl> } <nl> dependencies { <nl> compile ' com . android . support : support - v4 : 23 . 0 . 0 ' <nl> } <nl> } <nl>
ppp b / library - core / build . gradle <nl> if ( project . hasproperty ( ' pushall ' ) | | project . hasproperty ( ' librarycoreonly ' ) ) { <nl> } <nl> dependencies { <nl> compile ' com . android . support : support - v4 : 23 . 0 . 0 ' <nl> } } <nl>
ppp b / library - core / build . gradle <nl> if ( project . hasproperty ( ' pushall ' ) | | project . hasproperty ( ' librarycoreonly ' ) ) { <nl> } <nl> dependencies { <nl> compile ' com . android . support : support - v4 : 23 . 0 . 0 ' } <nl>
====NEW EXAMPLE====
ppp b / project . properties <nl> maven . dashboard . <unk> = false <nl>
ppp b / project . properties <nl>
ppp b / project . properties <nl> maven . dashboard . <unk> = false <nl> maven . multiproject . site . goals = site , dashboard : report - single <nl> # needed to get clover reports running dashboard - single single <nl> maven . clover reports running - single <nl> maven . clover . report . xml = true <nl>

ppp b / project . properties <nl> maven . dashboard . <unk> = false <nl> maven . multiproject . site . goals = site , dashboard : report - single <nl> # needed to get clover reports running dashboard - single single <nl> maven . clover reports running - single <nl> maven . clover . report . xml = <nl>
====NEW EXAMPLE====
ppp b / <unk> / src / org / <unk> / <unk> / controller / <unk> . java <nl> public class <unk> { <nl> public string gettext ( ) { <nl> return text ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return " ; <nl> } <nl> } <nl>
ppp b / <unk> / src / org / <unk> / <unk> / controller / <unk> . java <nl> public class <unk> { <nl> public string gettext ( ) { <nl> return text ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return " ; <nl> } <nl> } } <nl>
ppp b / <unk> / src / org / <unk> / <unk> / controller / <unk> . java <nl> public class <unk> { <nl> public string gettext ( ) { <nl> return text ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return " ; <nl> } <nl> } <nl> } <nl>
ppp b / <unk> / src / org / <unk> / <unk> / controller / <unk> . java <nl> public class <unk> { <nl> public string gettext ( ) { <nl> return text ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return " ; <nl> } <nl> } <nl> <nl>
ppp b / <unk> / src / org / <unk> / <unk> / controller / <unk> . java <nl> public class <unk> { <nl> public string gettext ( ) { <nl> return text ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return " ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / appcompat / <unk> / androidmanifest . xml <nl> android : smallscreens = " true " / > <nl> < uses - sdk <nl> android : minsdkversion = " 14 " <nl> android : targetsdkversion = " 19 " / > <nl> < application <nl>
ppp b / appcompat / <unk> / androidmanifest . xml <nl> android : smallscreens = " true " / > <nl> < uses - sdk <nl> android : minsdkversion = " 14 " <nl> android : targetsdkversion = " 19 " / > <nl> < / <nl>
ppp b / appcompat / <unk> / androidmanifest . xml <nl> android : smallscreens = " true " / > <nl> < uses - sdk <nl> android : minsdkversion = " 14 " <nl> android : targetsdkversion = " 19 " / > <nl> < application
ppp b / appcompat / <unk> / androidmanifest . xml <nl> android : smallscreens = " true " / > <nl> < uses - sdk <nl> android : minsdkversion = " 14 " <nl> android : targetsdkversion = " 19 " / > <nl> < <nl>
ppp b / appcompat / <unk> / androidmanifest . xml <nl> android : smallscreens = " true " / > <nl> < uses - sdk <nl> android : minsdkversion = " 14 " <nl> android : targetsdkversion = " 19 " / > <nl> < application application <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > ognl < / groupid > <nl> < artifactid > ognl < / artifactid > <nl> < version > 3 . 1 . 3 < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl> < exclusions > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > ognl < / groupid > <nl> < artifactid > ognl < / artifactid > <nl> < version > 3 . 1 . 3 < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl> < exclusions > > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > ognl < / groupid > <nl> < artifactid > ognl < / artifactid > <nl> < version > 3 . 1 . 3 < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl> < > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > ognl < / groupid > <nl> < artifactid > ognl < / artifactid > <nl> < version > 3 . 1 . 3 < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl> < exclusions > <nl> <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > ognl < / groupid > <nl> < artifactid > ognl < / artifactid > <nl> < version > 3 . 1 . 3 < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d56c681a20706b4dc200c536a3fca8d749372c44 <nl> mode = push <nl> parent = 4ea658be08a63ae77824e313cd122f32c5df0e12 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d56c681a20706b4dc200c536a3fca8d749372c44 <nl> mode = push <nl> parent = 4ea658be08a63ae77824e313cd122f32c5df0e12 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / sdk / gradle - plugins - workspace / bnd . bnd <nl> bundle - name : liferay gradle plugins workspace <nl> bundle - symbolicname : com . liferay . gradle . plugins . workspace <nl>
ppp b / modules / sdk / gradle - plugins - workspace / bnd . bnd <nl> bundle - name : liferay gradle plugins workspace <nl> bundle - symbolicname : com . liferay . gradle . plugins . workspace <nl> bundle - version : 1 \ no newline at end of file <nl>
ppp b / modules / sdk / gradle - plugins - workspace / bnd . bnd <nl> bundle - name : liferay gradle plugins workspace <nl> bundle - symbolicname : com . liferay . gradle . plugins . workspace <nl> bundle - version : 1 . \ no newline at end of file <nl>
ppp b / modules / sdk / gradle - plugins - workspace / bnd . bnd <nl> bundle - name : liferay gradle plugins workspace <nl> bundle - symbolicname : com . liferay . gradle . plugins . workspace <nl> bundle - version : \ no newline at end of file <nl>
ppp b / modules / sdk / gradle - plugins - workspace / bnd . bnd <nl> bundle - name : liferay gradle plugins workspace <nl> bundle - symbolicname : com . liferay . gradle . plugins . workspace <nl> bundle - version : : \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / moco - doc / global - settings . md <nl> as the name <unk> , file root setting will play as the file root for <unk> <nl> ccc json <nl> [ <nl> { <nl> " <unk> " : " <unk> " <nl> " include " : " <unk> . json json " <nl> } <nl> ] <nl>
ppp b / moco - doc / global - settings . md <nl> as the name <unk> , file root setting will play as the file root for <unk> <nl> ccc json <nl> [ <nl> { <nl> " <unk> " : " <unk> " <nl> " include " : " <unk> . json json " <nl> } <nl>
ppp b / moco - doc / global - settings . md <nl> as the name <unk> , file root setting will play as the file root for <unk> <nl> ccc json <nl> [ <nl> { <nl> " <unk> " : " <unk> " <nl> " include " : " <unk> . json json " <nl> } <nl> <nl>
ppp b / moco - doc / global - settings . md <nl> as the name <unk> , file root setting will play as the file root for <unk> <nl> ccc json <nl> [ <nl> { <nl> " <unk> " : " <unk> " <nl> " include " : " <unk> . json json " <nl> } <nl> ] ] <nl>
ppp b / moco - doc / global - settings . md <nl> as the name <unk> , file root setting will play as the file root for <unk> <nl> ccc json <nl> [ <nl> { <nl> " <unk> " : " <unk> " <nl> " include " : " <unk> . json json " <nl> } <nl> ] <nl> <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> jdk : <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> jdk
ppp b / . travis . yml <nl> jdk : <nl> \ no newline at end of file <nl> script : " <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> jdk : <nl> \ no newline at end of file <nl> script : <nl> " <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - item - selector . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - item - selector git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 8 . 0 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / groupid > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 8 . 0 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 8 . 0 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / groupid groupid <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 8 . 0 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . json < / groupid groupid
ppp b / pom . xml <nl> < dependency > <nl> < groupid > io . socket < / groupid > <nl> < artifactid > engine . io - client < / artifactid > <nl> < version > 0 . 8 . 0 < / version > <nl> < / dependency > <nl> < dependency > <nl>
====NEW EXAMPLE====
ppp b / rest - api - spec / test / delete / <unk> . yaml <nl> body : <nl> settings : <nl> <unk> : - 1 <nl> number_of_replicas number_of_replicas : 0 <nl> do : <nl> cluster . <unk> : <nl>
ppp b / rest - api - spec / test / delete / <unk> . yaml <nl> body : <nl> settings : <nl> <unk> : - 1 <nl> number_of_replicas number_of_replicas : 0 <nl> do : <nl> cluster . <unk> <nl>
ppp b / rest - api - spec / test / delete / <unk>
ppp b / rest - api - spec / test / delete / <unk> . yaml <nl> body : <nl> settings : <nl> <unk> : - 1 <nl> number_of_replicas number_of_replicas : 0 <nl> do : <nl>
ppp b / rest - api - spec / test / delete / <unk> . yaml <nl> body : <nl> settings : <nl> <unk> : - 1 <nl> number_of_replicas number_of_replicas : 0 <nl> do : <nl> cluster . <unk> : <nl> <nl>
====NEW EXAMPLE====
ppp b / src / main / androidmanifest . xml <nl> 1 . 1 2 <nl> 1 . 0 1 <nl> - > <nl>
ppp b / src / main / androidmanifest . xml <nl> 1 . 1 2 <nl> 1 . 0 1 <nl>
ppp b / src / main / androidmanifest . xml <nl> 1 . 1 2 <nl> 1 . 0 1 <nl> - > <nl> <
ppp b / src / main / androidmanifest . xml <nl> 1 . 1 2 <nl> 1 . 0 1 <nl> - > <nl> < uses
ppp b / src / main / androidmanifest . xml <nl> 1 . 1 2 <nl> 1 . 0 1 <nl> - > <nl> < uses -
====NEW EXAMPLE====
ppp b / idea / testdata / debugger / <unk> / src / <unk> / custom / <unk> . kt <nl> fun main ( args : array < string > ) { <nl>
ppp b / idea / testdata / debugger / <unk> / src / <unk> / custom / <unk> . kt <nl> fun main ( args : array < string > ) { <nl> / / <unk> : 1 <nl> / / <unk> : 2 <nl> <unk> . <unk> ( fun ( ) ) = <unk> . { <nl> println ( ) <nl> } <nl> ) <nl> } <nl>
ppp b / idea / testdata / debugger / <unk> / src / <unk> / custom / <unk> . kt <nl> fun main ( args : array < string > ) <nl>
ppp b / idea / testdata / debugger / <unk> / src / <unk> / custom / <unk> . kt <nl> fun main ( args : array < string > ) { <nl> / / <unk> : 1 <nl> / / <unk> : 2 <nl> <unk> . <unk> ( fun ( ) ) = <unk> . { <nl> println ( ) <nl> } <nl> ) <nl>
ppp b / idea / testdata / debugger / <unk> / src / <unk> / custom / <unk> . kt <nl> fun main ( args : array < string > ) { <nl> / / <unk> : 1 <nl> / / <unk> : 2 <nl> <unk> . <unk> ( fun ( ) ) = <unk> . { <nl> println ( ) <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / doc / alerts . xml <nl> this list the alerts <nl>
ppp b / src / doc / alerts . xml <nl>
ppp b / src / doc / alerts . xml <nl> this list
ppp

====NEW EXAMPLE====
ppp b / tools / layoutlib / bridge / src / com / android / layoutlib / bridge / android / <unk> . java <nl>
ppp b / tools / layoutlib / bridge / src / com / android / layoutlib / bridge / android / <unk> . java <nl> public final class <unk> implements <unk> { <nl> / / pass for now . <nl> return null ; <nl> } <nl> @ override <nl> @ override <nl> public string tostring ( ) ; <nl> } <nl> } <nl>
ppp b / tools / layoutlib / bridge / src / com / android / layoutlib / bridge / android / <unk> . java <nl> public final class <unk> implements <unk> { <nl> / / pass for now . <nl> return null ; <nl> } <nl> @ override <nl> @ override <nl> public string tostring ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / tools / layoutlib / bridge / src / com / android
ppp b / tools / layoutlib / bridge / src / com / android / layoutlib / bridge / android / <unk> . java <nl> public final class <unk> implements <unk> { <nl> / / pass for now . <nl> return null ; <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / libs / audioflinger / <unk> . cpp <nl> * / <nl> # define log_tag " <unk> " <nl> / / <nl> # define <unk> 0 <nl> # include < utils / log h h > <nl> # < <unk> / <unk> . h h > <nl> # include < media / mediarecorder . h > <nl>
ppp b / libs / audioflinger / <unk> . cpp <nl> * / <nl> # define log_tag " <unk> " <nl> / / <nl> # define <unk> 0 <nl> # include < utils / log h h > <nl> # < <unk> / <unk> . h h > <nl> # include < media / mediarecorder . > <nl>
ppp b / libs / audioflinger / <unk> . cpp <nl> * / <nl> # define log_tag " <unk> " <nl> / / <nl> # define <unk> 0 <nl> # include < utils / log h h > <nl> # < <unk> / <unk> . h h > <nl> # include < media / mediarecorder . h h <nl>
ppp b / libs / audioflinger / <unk> . cpp <nl> * / <nl>
ppp b / libs / audioflinger / <unk> . cpp <nl> * / <nl> # define log_tag " <unk> " <nl> / / <nl> # define <unk> 0 <nl> # include < utils / log h h > <nl> # < <unk> / <unk> . h h > <nl> # include < media / mediarecorder . h <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> logs <nl> . settings / <nl> . classpath <nl> . project <nl>
ppp b / . gitignore <nl> logs <nl> . settings / <nl> . classpath <nl> . project <nl> . idea <nl>
ppp b / . gitignore <nl> logs <nl> . settings / <nl> . classpath <nl> . project <nl> * . iml <nl>
ppp b / . gitignore <nl> logs <nl> . settings / <nl> . classpath <nl> . project <nl> . iml <nl>
ppp b / . gitignore <nl> logs <nl> . settings / <nl> . classpath <nl> . project <nl> classpath <nl>
====NEW EXAMPLE====
ppp b / core / pom . xml <nl>
ppp
ppp b / core / pom . xml <nl> < artifactid > maven - surefire

ppp b / core / pom . xml <nl> < artifactid
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 515244dcfcd70926d3d6b3fb878b54222579592a <nl> mode = push <nl> parent = 05f7048b23cad14ef77b2e7c169bdd159401f07f <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 515244dcfcd70926d3d6b3fb878b54222579592a <nl> mode = push <nl> parent = 05f7048b23cad14ef77b2e7c169bdd159401f07f <nl> remote = git @ github . com : liferay / com - liferay - document - library git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / com / goide / runconfig / testing / <unk> . java <nl> public class <unk> extends <unk> implements sm <nl> return true ; <nl> } <nl>
ppp b / src / com / goide / runconfig / testing / <unk> . java <nl> public class <unk> extends <unk> implements sm <nl> return true ; <nl> } <nl> <nl>
ppp b / src / com / goide / runconfig / testing / <unk> . java <nl> public class <unk> extends <unk> implements sm <nl> return true ; <nl> } <nl> <nl> private string <unk> ( ) { <nl> ; <nl> } <nl> } <nl>
ppp b / src / com / goide / runconfig / testing / <unk> . java <nl> public class <unk> extends <unk> implements sm <nl> return true ; <nl> } <nl> <nl> private string <unk> ( ) { <nl> ) ; <nl> } <nl> } <nl>
ppp b / src / com / goide / runconfig / testing / <unk> . java <nl> public class <unk> extends <unk> implements sm <nl> return true ; <nl> } <nl> <nl> private string <unk> ( { <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version = . . 1 . 79 <nl>
ppp b / gradle . properties <nl> version = . . 1 . 79 <nl> <nl>
ppp b / gradle . properties <nl> version = . . 1 . <nl>
ppp b / gradle . properties <nl> version = . . 1 . 0 <nl>
ppp b / gradle . properties <nl> version = . . 1 . 2 <nl>
====NEW EXAMPLE====
ppp b / application / linkbubble / dexguard - project . txt <nl> dontwarn com . squareup . okhttp . * * <nl> dontwarn com . facebook . * * <nl>
ppp b / application / linkbubble / dexguard - project . txt <nl> dontwarn com . squareup . okhttp . * * <nl> dontwarn com . facebook . * <nl>
ppp b / application / linkbubble / dexguard - project . txt <nl> dontwarn com . squareup . okhttp . * * <nl>
ppp b / application / linkbubble / dexguard - project . txt <nl> dontwarn com . squareup . okhttp . * * <nl> dontwarn com . facebook
ppp b / application / linkbubble / dexguard - project . txt <nl> dontwarn com . squareup . okhttp . * * <nl> dontwarn com .
====NEW EXAMPLE====
ppp b / rctvideo . m <nl> static nsstring * const <unk> = @ " rate " ; <nl> ( void ) <unk> <nl> { <nl>
ppp b / rctvideo . m <nl> static nsstring * const <unk> = @ " rate " ; <nl> ( void ) <unk> <nl>
ppp b / rctvideo . m <nl> static nsstring * const <unk> = @ " rate " ; <nl> ( void ) <unk> <nl> { <nl> [ _player
ppp b / rctvideo . m <nl> static nsstring * const <unk> = @ " rate " ; <nl> ( void ) <unk> <nl> { <nl> [ _player pause
ppp b / rctvideo . m <nl> static nsstring * const <unk> = @ " rate " ; <nl>
====NEW EXAMPLE====
ppp b / src / com / fsck / k9 / view / <unk> . java <nl> public class <unk> extends <unk> { <nl> / / websettings . <unk> ( true ) ; <nl> / / setinitialscale ( 0 ) ; <nl> setinitialscale ( 1 ) ; <nl> } <nl> <unk> ( ) ; <nl>
ppp b / src / com / fsck / k9 / view / <unk> . java <nl> public class <unk> extends <unk> { <nl> / / websettings . <unk> ( true ) ; <nl> / / setinitialscale ( 0 ) ; <nl> setinitialscale ( 1 ) ; <nl> } <nl> <unk> ( ) ) ; <nl>
ppp b / src / com / fsck / k9 / view / <unk> . java <nl> public class <unk> extends <unk> { <nl> / / websettings . <unk> ( true ) ; <nl> / / setinitialscale ( 0 ) ; <nl> setinitialscale ( 1 ) ; <nl> } <nl> <unk> ( ) ; <nl> <nl>
ppp b / src / com / fsck / k9 / view / <unk> . java <nl> public class <unk> extends <unk> { <nl> / / websettings . <unk> ( true ) ; <nl> / / setinitialscale ( 0 ) ; <nl> setinitialscale ( 1 ) ; <nl> } <nl> <unk> ( ) ;
ppp b / src / com / fsck / k9 / view / <unk> . java <nl> public class <unk> extends <unk> { <nl> / / websettings . <unk> ( true ) ; <nl> / / setinitialscale ( 0 ) ; <nl> setinitialscale ( 1 ) ; <nl> } <nl> <unk> ( ) ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> <unk> . setadapter ( new recyclerview . <unk> < x > ( ) ) ; <nl> ccc gradle <nl> dependencies { <nl> . . . <nl> compile ' com . github . <unk> . <unk> : <unk> : v1 . . 0 . ' <nl> . . . <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> <unk> . setadapter ( new recyclerview . <unk> < x > ( ) ) ; <nl> ccc gradle <nl> dependencies { <nl> . . . <nl>
ppp b / readme . md <nl> <unk> . setadapter ( new recyclerview . <unk> < x > ( ) ) ; <nl> ccc gradle <nl> dependencies { <nl>
ppp b / readme . md <nl> <unk> . setadapter ( new recyclerview . <unk> < x > ( ) ) ; <nl> ccc gradle <nl> dependencies { <nl> . . . <nl> compile ' com . github . <unk> . <unk> : <unk> : v1 . . 0 . ' <nl> . . . <nl> } <nl> ` ` <nl>
ppp b / readme . md <nl> <unk> . setadapter ( new recyclerview . <unk> < x > ( ) ) ; <nl> ccc gradle <nl>
====NEW EXAMPLE====
ppp b / tools / install_fbthrift . sh <nl> cd . . / <nl> git clone https : / / github . com / facebook / <unk> . git <nl> cd <unk> / <unk> <nl> git checkout <unk> <nl> cmake . <nl> make <nl> make <nl> make <nl> <unk> <nl> sudo make install <nl>
ppp b / tools / install_fbthrift . sh <nl> cd . . / <nl> git clone https : / / github . com / facebook / <unk> . git <nl> cd <unk> / <unk> <nl> git checkout <unk> <nl> cmake . <nl> make <nl> make <nl> make <nl> <unk> <nl> sudo make <nl>
ppp b / tools / install_fbthrift . sh <nl> cd . . / <nl> git clone https : / / github . com / facebook / <unk> . git <nl> cd <unk> / <unk> <nl> git checkout <unk> <nl> cmake . <nl> make <nl> make <nl> make <nl> <unk> <nl>
ppp b / tools / install_fbthrift . sh <nl> cd . . / <nl> git clone https : / / github . com / facebook / <unk> . git <nl> cd <unk> / <unk> <nl> git checkout <unk> <nl> cmake . <nl> make <nl> make <nl> make <nl> <unk> <nl> sudo make install install <nl>
ppp b / tools / install_fbthrift . sh <nl> cd . . / <nl> git clone https : / / github . com / facebook / <unk> . git <nl> cd <unk> / <unk> <nl> git checkout <unk> <nl> cmake . <nl> make <nl> make <nl> make <nl> <unk> <nl> sudo make install <nl> <nl>
====NEW EXAMPLE====
ppp b / gradle / javadoc . gradle <nl>
ppp b / gradle / javadoc . gradle <nl> task <unk> ( type : javadoc
ppp b / gradle / javadoc . gradle <nl> task <unk> ( type
ppp b / gradle / javadoc . gradle <nl> task <unk> ( type : javadoc )
ppp b / gradle / javadoc . gradle <nl> task <unk> ( type : javadoc ) { <nl> dolast { <nl> copy { <nl> from " javadoc aren <nl> if ( https : / oss ( ) { <nl> } <nl> } <nl> { <nl> { <nl> { <nl> " " <nl> into into " $ builddir javadoc " <nl> } <nl>
====NEW EXAMPLE====
ppp b / spock - specs / build . gradle <nl> dependencies
ppp b / spock - specs / build . gradle <nl> dependencies { <nl> testruntime libs . <unk> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / spock - specs / build . gradle <nl> dependencies { <nl> testruntime libs . <unk> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> } <nl>
ppp b / spock - specs / build . gradle <nl> dependencies { <nl> testruntime libs . <unk> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> } <nl> \ no newline at end of file <nl>
ppp b / spock - specs / build . gradle <nl> dependencies { <nl> testruntime libs . <unk> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / <unk> / build . sbt <nl> crosspaths : = true <nl> <unk> : = true <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / <unk> / build . sbt <nl> crosspaths : = true <nl> <unk> : = true true <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / <unk> / build . sbt <nl> crosspaths : = true <nl> <unk> : = true <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> no newline at end of file <nl>
ppp b / <unk> / build . sbt <nl> crosspaths : = true <nl> <unk> : = true <nl> \ no newline at end of file <nl> \ no newline at end of file \ no newline at end of file <nl>
ppp b / <unk> / build . sbt <nl> crosspaths : = true <nl> <unk> : = true true <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 71b5f0bf578abde0cbe6bf0ce662e3801664b8ad <nl> mode = push <nl> parent = 82b78f972bc13c5cb752a614dfd6faa329fb1db7 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 71b5f0bf578abde0cbe6bf0ce662e3801664b8ad <nl> mode = push <nl> parent = 82b78f972bc13c5cb752a614dfd6faa329fb1db7 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 71b5f0bf578abde0cbe6bf0ce662e3801664b8ad <nl> mode = push <nl> parent = 82b78f972bc13c5cb752a614dfd6faa329fb1db7 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / com / google / javascript / jscomp / diagnosticgroups . java <nl> public class diagnosticgroups { <nl> static { <nl> diagnosticgroups . registergroup ( " <unk> " , <nl>
ppp b / src / com / google / javascript / jscomp / diagnosticgroups . java <nl> public class diagnosticgroups { <nl> static { <nl> diagnosticgroups . registergroup ( " <unk> " , <nl> <unk> . <unk> ) ; <nl> / / warnings that are absent in closure library <nl>
ppp b / src / com / google / javascript / jscomp / diagnosticgroups . java <nl> public class diagnosticgroups { <nl> static { <nl> diagnosticgroups . registergroup ( " <unk> " , <nl> <unk> . <unk> ) ; <nl> / / warnings that are absent in closure <nl>
ppp b / src / com / google / javascript / jscomp / diagnosticgroups . java <nl> public class diagnosticgroups { <nl> static { <nl> diagnosticgroups . registergroup ( " <unk> " <nl>
ppp b / src / com / google / javascript / jscomp / diagnosticgroups . java <nl> public class diagnosticgroups { <nl> static { <nl> diagnosticgroups . registergroup ( " <unk> " , <nl> <unk> . <unk> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = efbdef52d8602a73c3dc754512de7e9fa6f8055f <nl> mode = push <nl> parent = fce8e8be616d8f94a093806178aec9e0af5e775a <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = efbdef52d8602a73c3dc754512de7e9fa6f8055f <nl> mode = push <nl> parent = fce8e8be616d8f94a093806178aec9e0af5e775a <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl>
ppp b / readme . md <nl> ldrawer <nl> = = = = = =
ppp b
ppp b / readme . md <nl> ldrawer <nl> = = = = =
ppp
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / mapping > <nl> < mapping > <nl> < directory > / usr / bin < / directory > <nl> < / > <nl> < / > <nl> < filemode > <unk> < / filemode > <nl> < sources > <nl> < source > <nl>
ppp b / pom . xml <nl> < / mapping > <nl>
ppp b / pom . xml <nl> < / mapping > <nl> < mapping >
ppp b / pom . xml <nl>
ppp b / pom . xml <nl> < / mapping >
====NEW EXAMPLE====
ppp b / portal - impl / test / unit / com / liferay / portlet / dynamicdatamapping / <unk> . java <nl> public abstract class <unk> extends <unk> { <nl> <unk> . <unk> ( <nl> <unk> ( <unk> . us . ) ; <nl> <unk> ( <unk> . us ) ) ; <nl> <unk> . <unk> ( <unk> . us ) ; <nl> return <unk> ; <nl>
ppp b / portal - impl / test / unit / com / liferay / portlet / dynamicdatamapping / <unk> . java <nl>
ppp b / portal - impl / test / unit / com / liferay / portlet / dynamicdatamapping / <unk> . java <nl> public abstract class <unk> extends <unk> { <nl> <unk> . <unk> ( <nl> <unk> ( <unk> . us . ) ; <nl> <unk> ( <unk> . us ) ) ; <nl> <unk> . <unk> ( <unk> . us ) ; <nl> return <unk> ; ; <nl>
ppp b / portal - impl / test / unit / com / liferay / portlet / dynamicdatamapping / <unk> . java <nl> public abstract class <unk> extends <unk> { <nl> <unk> . <unk> ( <nl> <unk> ( <unk> . us . ) ; <nl> <unk> ( <unk> . us ) ) ; <nl> <unk> . <unk> ( <unk> . us ) ; <nl> return <unk> ; <nl> ; <nl>
ppp b / portal - impl / test / unit / com / liferay / portlet / dynamicdatamapping / <unk> . java <nl> public abstract class <unk> extends <unk> { <nl> <unk> . <unk> ( <nl> <unk> ( <unk> . us . ) ; <nl> <unk> ( <unk> . us ) ) ; <nl> <unk> . <unk> ( <unk> . us ) ; <nl> return <unk> ; <nl> <nl>
====NEW EXAMPLE====
ppp b / portal - impl / src / portal . properties <nl> # set this property to true to enable osgi . set this to false for <nl> # compatibility with <unk> application servers . <nl> # <nl> osgi . enabled = true <nl> # <nl> # set the osgi framework beginning start level . the framework will proceed <nl>
ppp b / portal - impl / src / portal . properties <nl> # set this property to true to enable osgi . set this to false for <nl> # compatibility with <unk> application servers . <nl> # <nl> osgi . enabled = true <nl> # <nl> # set the osgi framework beginning start level . the framework will <nl>
ppp b / portal - impl / src / portal . properties <nl> # set this property to true to enable osgi . set this to false for <nl> # compatibility with <unk> application servers . <nl> # <nl> osgi . enabled = true <nl> # <nl> # set the osgi framework beginning start level . the framework will will <nl>
ppp b / portal - impl / src / portal . properties <nl> # set this property to true to enable osgi . set this to false for <nl> # compatibility with <unk> application servers . <nl> # <nl> osgi . enabled = true <nl> # <nl> # set the osgi framework beginning start level . the framework will proceed proceed <nl>
ppp b / portal - impl / src / portal . properties <nl> # set this property to true to enable osgi . set this to false for <nl> # compatibility with <unk> application servers . <nl> # <nl> osgi . enabled = true <nl> # <nl> # set the osgi framework beginning start level . the framework will proceed
====NEW EXAMPLE====
ppp b / version <nl> 0 . 5 . 2 <nl>
ppp b / version <nl> 0 . 5 . 2 <nl> <nl>
ppp b / version <nl> 0 . 5 . <nl>
ppp b / version <nl> 0 . 5 2 <nl>
ppp b / version <nl> 0 . 5 . 0 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / application - list / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / application - list / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = 76f054f24c418efab9e6a777eebba266dddba16c <nl> remote = git @ github . com : liferay / com - liferay - application - list . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / application - list / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / application - list / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / application - list / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / project . xml <nl> < / organization > <nl>
ppp b / project . xml <nl>
ppp

ppp b / project . xml <nl> < / organization >
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 7 . 1 ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 7 . 1 ' <nl> } <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 7 . 1 ' <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 7 . 1 ' <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 7 . 1 ' <nl> } <nl> }
====NEW EXAMPLE====
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> class <unk> extends <unk> { <nl> } <nl> final <unk> <unk> = <nl> new <unk> ( " <unk> " , false ) { <nl> @ override <nl> protected <unk> create ( <nl> abstractcompiler compiler ) { <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> class <unk> extends <unk> { <nl> } <nl> final <unk> <unk> = <nl> new <unk> ( " <unk> " , false ) { <nl> @ override <nl> protected <unk> create ( <nl> abstractcompiler compiler ) <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> class <unk> extends <unk> { <nl> } <nl> final <unk> <unk> = <nl> new <unk> ( " <unk> " , false ) { <nl> @ override <nl> protected <unk> create ( <nl> abstractcompiler compiler ) ) <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> class <unk> extends <unk> { <nl> } <nl> final <unk> <unk> = <nl> new <unk> ( " <unk> " , false ) { <nl> @ override <nl> protected <unk> create ( <nl> abstractcompiler compiler ) ; <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> class <unk> extends <unk> { <nl> } <nl> final <unk> <unk> = <nl> new <unk> ( " <unk> " , false ) { <nl> @ override <nl> protected <unk> create ( <nl> abstractcompiler compiler ) { <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / graphdb / pom . xml <nl> < groupid > com . tinkerpop . blueprints < / groupid > <nl>
ppp b / graphdb / pom . xml <nl>
ppp b / graphdb / pom . xml <nl> < groupid > com . tinkerpop . blueprints < / groupid > <nl> < artifactid > blueprints - test < / artifactid > <nl> < version > $ { blueprints . version } < / version > <nl> < / > <nl> < < version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > com . tinkerpop < / groupid > <nl>

ppp b / graphdb / pom . xml <nl> < groupid > com . tinkerpop . blueprints < / groupid > <nl> < artifactid > blueprints - test < / artifactid > <nl> < version > $ { blueprints . version } < / version > <nl> < / > <nl> < < version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > com . tinkerpop < / > <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk8 <nl>
ppp b / . travis . yml <nl> jdk : <nl>
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk8 <nl> script
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk8 <nl> script :
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk8 <nl> script : <nl> gradle clean build javadoc <nl>
====NEW EXAMPLE====
ppp b / seriesguide / src / main / res / layout / <unk> . xml <nl> < relativelayout <nl> android : layout_width = " match_parent " <nl>
ppp b / seriesguide / src / main / res / layout / <unk> . xml <nl> < relativelayout <nl>

ppp b / seriesguide / src / main
ppp b / seriesguide / src / main / res / layout / <unk> . xml <nl> < relativelayout <nl> android : layout_width = " match_parent " <nl> android : layout_height = " wrap_content " <nl> android : padding = " " <nl> android : : padding = " dimen / <unk> " <nl> android : focusable = " true " <nl> android : <unk> = " true " <nl>
====NEW EXAMPLE====
ppp b / src / gwt / www / webkit . <unk> . html <nl> < / body > <nl> < / html > <nl>
ppp b / src / gwt / www / webkit
ppp b /
ppp b / src / gwt / www / webkit .
ppp b
====NEW EXAMPLE====
ppp b / src / test / groovy / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> this . x = " abc " ; <nl> assert this . x : = " abc " ; <nl> assert this . x ! = " " def " ; <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / src / test / groovy / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> this . x = " abc " ; <nl> assert this . x : = " abc " ; <nl> assert this . x ! = " " def " ; <nl> } <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / src / test / groovy / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> this . x = " abc " ; <nl> assert this . x : = " abc " ; <nl> assert this . x ! = " " def " ; <nl> } <nl> } <nl> <nl> \ no newline at end of file <nl>
ppp b / src / test / groovy / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> this . x = " abc " ; <nl> assert this . x : = " abc " ; <nl> assert this . x ! = " " def " ; <nl> } <nl> \ no newline at end of file <nl>
ppp b / src / test / groovy / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> this . x = " abc " ; <nl> assert this . x : = " abc " ; <nl> assert this . x ! = " " def " ; <nl> } <nl> } <nl> \ no no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = 76f054f24c418efab9e6a777eebba266dddba16c <nl> remote = git @ github . com : liferay / com - liferay - site - navigation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . zegoggles < / groupid > <nl> < artifactid > k9 - imapstore < / artifactid > <nl> < version > 0 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . zegoggles < / groupid > <nl> < artifactid > k9 - imapstore < / artifactid > <nl> < version > 0 . 2 < / version > <nl> < / dependency > <nl> < dependency > > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . zegoggles < / groupid > <nl> < artifactid > k9 - imapstore < / artifactid > <nl> < version > 0 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . zegoggles < / groupid > <nl> < artifactid > k9 - imapstore < / artifactid > <nl> < version > 0 . 2 < / version > <nl> < / dependency > <nl> < dependency >
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . zegoggles < / groupid > <nl> < artifactid > k9 - imapstore < / artifactid > <nl> < version > 0 . 2 < / version > <nl> < / dependency > <nl>
====NEW EXAMPLE====
ppp b / changelog . txt <nl> 0 . 81 <nl>
ppp b / changelog . txt <nl>
ppp b / changelog . txt <nl> 0 . 81 <nl> * fixed bug causing realms to be cached even though they failed to open correctly . <nl> 0 . 80 <nl> * added support for datanode hot swap drive support overlapping ranges . 0 . 80 <nl> * queries on relationships can be case sensitive . <nl>
ppp b / changelog . txt <nl> 0 . 81 <nl> * fixed bug causing realms to be cached even though they failed to open correctly . <nl> 0 . 80 <nl> * added support for datanode hot swap drive support overlapping ranges . 0 . 80 <nl> * queries on relationships can be case sensitive <nl>
ppp b / changelog . txt <nl> 0 . 81 <nl> * fixed bug causing realms to be cached even though they failed to open correctly . <nl> 0 . 80 <nl> * added support for datanode hot swap drive support overlapping ranges . 0 . 80 <nl> * queries on relationships can be case sensitive .
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - screens . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - screens . git <nl> \ no newline at end of file
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - screens . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - screens . git <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 2 . 0
ppp b / changelog . md <nl> # # 2
ppp
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - scheduler / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - scheduler . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - scheduler / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - scheduler / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - scheduler / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - scheduler / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - scheduler git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> bin <nl> build <nl> sandbox / results <nl> . gradle <nl>
ppp b / . gitignore <nl> bin <nl> build <nl> sandbox / results <nl> . gradle <nl> settings <nl>
ppp b / . gitignore <nl> bin <nl> build <nl> sandbox / results <nl> . gradle <nl> . settings <nl>
ppp b / . gitignore <nl> bin <nl> build <nl> sandbox / results <nl> . gradle <nl> . <nl>
ppp b / . gitignore <nl> bin <nl> build <nl> sandbox / results <nl> . gradle <nl> . . <nl>
====NEW EXAMPLE====
ppp b / presto - docs / src / main / sphinx / release / release - 0 . 56 . rst <nl> cross <unk> are supported using the standard ansi sql syntax : : <nl> select * <nl> from a <nl> cross : mid term <nl> public void tellchangedsessionid ( ) { <nl> # launchmanageblockednumbersactivity ( ) { <nl>
ppp b / presto - docs / src / main / sphinx / release / release - 0 . 56 . rst <nl> cross <unk> are supported using the standard ansi sql syntax : : <nl> select * <nl> from a <nl> cross : mid term <nl> public void tellchangedsessionid ( ) { <nl> public boolean notifycontainerlisteners ( ) { <nl>
ppp b / presto - docs / src / main / sphinx / release / release - 0 . 56 . rst <nl> cross <unk> are supported using the standard ansi sql syntax : : <nl> select * <nl> from a <nl> cross : mid term <nl> public string tostring ( ) { <nl> public boolean notifycontainerlisteners ( ) { <nl>
ppp b / presto - docs / src / main / sphinx / release / release - 0 . 56 . rst <nl> cross <unk> are supported using the standard ansi sql syntax : : <nl> select * <nl> from a <nl> cross : mid term <nl> public void tellchangedsessionid ( ) { <nl> public boolean notifycontainerlisteners ( ) { build_url <nl>
ppp b / presto - docs / src / main / sphinx / release / release - 0 . 56 . rst <nl> cross <unk> are supported using the standard ansi sql syntax : : <nl> select * <nl> from a <nl> cross : billbarker <nl> * @ override <nl> public boolean supportsnotnullunique ( ) { <nl> # launchmanageblockednumbersactivity ( ) <nl>
====NEW EXAMPLE====
ppp b / plugins / git4idea / tests / git4idea / tests / <unk> . java <nl> package git4idea . tests ; <nl> import com . intellij . openapi . util . systeminfo ; <nl>
ppp b / plugins / git4idea / tests / git4idea / tests / <unk> . java <nl> package git4idea . tests ; <nl>
ppp b / plugins / git4idea / tests / git4idea / tests / <unk> . java <nl> package git4idea . tests ; <nl> import com . intellij . openapi . util . systeminfo ; <nl> import . . gitversion ; <nl> import org . testng . annotations . test ; <nl> import java . lang . reflect . field ; <nl>
ppp b / plugins / git4idea / tests / git4idea / tests / <unk> . java <nl> package git4idea . tests ; <nl> import com . intellij . openapi . util . systeminfo ; <nl> import . . gitversion ; <nl> import org . testng . annotations . test ; <nl> import java . lang . reflect . ; <nl>
ppp b / plugins / git4idea / tests / git4idea / tests / <unk> . java <nl> package git4idea . tests ; <nl> import com . intellij . openapi . util . systeminfo ; <nl> import . . gitversion ; <nl> import org . testng . annotations . test ; <nl> import java . lang . reflect . field field ; <nl>
====NEW EXAMPLE====
ppp b / src / main / resources / db / migration / <unk> . sql <nl> create table jobs ( <nl> id serial , <nl> query text not null , <nl> user varchar ( 127 ) not null , <nl> uuid varchar ( 127 ) not null , <nl> <unk> text , <nl>
ppp b / src / main / resources / db / migration / <unk> . sql <nl> create table jobs ( <nl> id serial , <nl> query text not null , <nl> user varchar ( 127 ) not null , <nl> uuid varchar ( 127 ) not null , <nl> <unk> text , , <nl>
ppp b / src / main / resources / db / migration / <unk> . sql <nl> create table jobs ( <nl> id serial , <nl> query text not null , <nl> user varchar ( 127 ) not null , <nl> uuid varchar ( 127 ) not null , <nl> <unk> text <nl>
ppp b / src / main / resources / db / migration / <unk> . sql <nl> create table jobs ( <nl> id serial , <nl> query text not null , <nl> user varchar ( 127 ) not null , <nl> uuid varchar ( 127 ) not null , <nl> <unk> text text <nl>
ppp b / src / main / resources / db / migration / <unk> . sql <nl> create table jobs ( <nl> id serial , <nl> query text not null , <nl> user varchar ( 127 ) not null , <nl> uuid varchar ( 127 ) not null , <nl>
====NEW EXAMPLE====
ppp b / core / src / main / resources / org / elasticsearch / bootstrap / elasticsearch . help <nl> synopsis <nl> description <nl> start elasticsearch manage plugins <nl> commands <nl>
ppp b / core / src / main / resources / org / elasticsearch / bootstrap / elasticsearch . help <nl> synopsis <nl> description <nl> start elasticsearch manage plugins <nl>
ppp b / core / src / main / resources / org / elasticsearch / bootstrap / elasticsearch . help <nl> synopsis <nl> description <nl> start elasticsearch manage plugins <nl> <nl>
ppp b / core / src / main / resources / org / elasticsearch / bootstrap / elasticsearch . help <nl> synopsis <nl> description <nl> start elasticsearch manage plugins <nl> commands commands <nl>
ppp b / core / src / main / resources / org / elasticsearch / bootstrap / elasticsearch . help <nl> synopsis <nl> description <nl> start elasticsearch manage plugins plugins <nl>
====NEW EXAMPLE====
ppp b / src / clj / backtype / storm / daemon / executor . clj <nl> sampler ( : sampler executor - data ) <nl> rand ( random . ( utils / securerandomlong ) ) ; <nl>
ppp b / src / clj / backtype / storm / daemon / executor . clj <nl> sampler ( : sampler executor - data ) <nl> rand ( random . ( utils / securerandomlong ) ) <nl>
ppp b / src / clj / backtype / storm / daemon / executor . clj <nl> sampler ( : sampler executor - data ) <nl>
ppp b / src / clj / backtype / storm / daemon / executor . clj <nl> sampler ( : sampler executor - data ) <nl> rand ( random . ( utils / securerandomlong ) ) ) <nl>
ppp b / src / clj / backtype / storm / daemon / executor . clj <nl> sampler ( : sampler executor - data ) <nl> rand ( random . ( utils / securerandomlong ) ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / test / commons / org / codehaus / groovy / grails / commons / <unk> . java <nl>
ppp b / test / commons / org / codehaus / groovy / grails / commons / <unk> . java <nl> public class <unk> extends testcase { <nl> catch ( <unk> e ) { <nl> / / expected <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / test / commons / org / codehaus / groovy / grails / commons / <unk> . java <nl> public class <unk> extends testcase { <nl> catch ( <unk> e ) { <nl> / / expected <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> } <nl> } <nl> } <nl>
ppp b / test / commons / org / codehaus / groovy / grails / commons / <unk> . java <nl> public class <unk> extends testcase { <nl> catch ( <unk> e ) { <nl> / / expected <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> } <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / test / commons / org / codehaus / groovy / grails / commons / <unk> . java <nl> public class <unk> extends testcase { <nl> catch ( <unk> e ) { <nl> / / expected <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> } <nl> } <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - configuration . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - configuration git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0
ppp

====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8ff6eb274acc61574bce08034288c134939ba009 <nl> mode = push <nl> parent = e70602d6d38dd1c9d063cab0519706dbfb33873d <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8ff6eb274acc61574bce08034288c134939ba009 <nl> mode = push <nl> parent = e70602d6d38dd1c9d063cab0519706dbfb33873d <nl> remote = git @ github . com : liferay / com - liferay - portal . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / bin / <unk> <nl> function killbuckd ( ) { <nl> exit 1 <nl> fi <nl> done <nl> rm -
ppp b / bin / <unk> <nl> function killbuckd ( ) { <nl> exit 1 <nl> fi <nl> done <nl> rm
ppp b / bin / <unk> <nl> function killbuckd ( ) { <nl> exit 1 <nl> fi <nl> done <nl> rm - rf
ppp b / bin / <unk> <nl> function killbuckd ( ) { <nl> exit 1 <nl>
ppp b / bin / <unk> <nl> function killbuckd ( ) { <nl> exit 1 <nl> fi <nl> done <nl> rm - rf $ { <nl> <unk> } <nl> fi <nl> } <nl> function <unk> ( ( { <nl>
====NEW EXAMPLE====
ppp b / jps / src / org / jetbrains / jps / builders / standardbuilders . groovy <nl> class <unk> implements modulebuilder { <nl> } <nl> } <nl> ant . groovyc ( destdir : destdir ) { <nl> destdir destdir destdir ) { <nl> state . <unk> . each { <nl> src ( path : it ) <nl> } <nl>
ppp b / jps / src / org / jetbrains / jps / builders / standardbuilders . groovy <nl>
ppp b / jps / src / org / jetbrains / jps / builders / standardbuilders . groovy <nl> class <unk> implements modulebuilder { <nl> } <nl> } <nl> ant . groovyc ( destdir : destdir ) { <nl> destdir destdir destdir ) { <nl> state . <unk> . each { <nl> src ( path : it ) <nl>
ppp b / jps / src / org / jetbrains / jps / builders / standardbuilders . groovy <nl> class <unk> implements modulebuilder { <nl> } <nl> } <nl> ant . groovyc ( destdir : destdir ) { <nl> destdir destdir destdir ) { <nl> state . <unk> . each { <nl> src ( path : it ) <nl> } <nl> <nl>
ppp b / jps / src / org / jetbrains / jps / builders / standardbuilders . groovy <nl> class <unk> implements modulebuilder { <nl> } <nl> } <nl> ant . groovyc ( destdir : destdir ) { <nl> destdir destdir destdir ) { <nl> state . <unk> . each { <nl> src ( path : it ) <nl> <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / changes . txt <nl> \ no newline at end of file <nl>
ppp b
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> \ no newline at end of file <nl> languagetool = = = = = " https : / / / github . com / github . com / github . com / ( ) <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> \ no newline at end of file <nl> languagetool = = = = = " https : / / / github . com / github . com / github . com / ( ) { <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> \ no newline at end of file <nl> languagetool = = = = = " https : / / / github . com / github . com / github . com / 06 ) <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> sudo : false <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> sudo : false <nl> language : android <nl> android : <nl> components : <nl> * updated slovak translation <nl> # first ' tools ' updates sdk tools ' <unk> last version * * in remote repository number 10 * * <nl>
ppp b / . travis . yml <nl> sudo : false <nl> language
ppp b / . travis . yml <nl> sudo : false <nl> language : android <nl> android : <nl> components : <nl> * updated slovak translation <nl> # first ' tools ' updates sdk tools ' <unk> last version * * in remote repository number 10 * * * <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> <unk> = 0 . 9 - rc - 1 <nl>
ppp b / gradle . properties <nl> <unk> = 0 . 9
ppp b / gradle . properties <nl> <unk> = 0 .
ppp b / gradle . properties <nl> <unk> = 0
ppp b / gradle . properties <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> group = com . jakewharton . threetenabp <nl> version_name = 1 . 0 . 1 - snapshot <nl> pom_description = an adaptation of the jsr - 310 backport for android . <nl>
ppp b / gradle . properties <nl> group = com . jakewharton . threetenabp <nl> version_name = 1 . 0 . 1 - snapshot <nl> pom_description = an adaptation of the jsr - 310 backport for android . . <nl>
ppp b / gradle . properties <nl> group = com . jakewharton . threetenabp <nl> version_name = 1 . 0 . 1 - snapshot <nl> pom_description = an adaptation of the jsr - 310 backport for android <nl>
ppp b / gradle . properties <nl> group = com . jakewharton . threetenabp <nl> version_name = 1 . 0 . 1 - snapshot <nl> pom_description = an adaptation of the jsr - 310 backport for android android <nl>
ppp b / gradle . properties <nl> group = com . jakewharton . threetenabp <nl> version_name = 1 . 0 . 1 - snapshot <nl> pom_description = an adaptation of the jsr - 310 backport for android .
====NEW EXAMPLE====
ppp b / src / jvm / storm / trident / topology / tridenttopologybuilder . java <nl> public class tridenttopologybuilder { <nl> bd . allgrouping ( mastercoordinator ( batchgroup ) , masterbatchcoordinator . commit_stream_id ) ; <nl> } <nl> for ( map m : c . componentconfs ) { <nl> scd . addconfigurations ( m ) ; <nl> } <nl> } <nl> } <nl>
ppp b / src / jvm / storm / trident / topology / tridenttopologybuilder . java <nl> public class tridenttopologybuilder { <nl> bd . allgrouping ( mastercoordinator ( batchgroup ) , masterbatchcoordinator . commit_stream_id ) ; <nl> } <nl> for ( map m : c . componentconfs ) { <nl> scd . addconfigurations ( m ) ; <nl> } <nl> } <nl>
ppp b / src / jvm / storm / trident / topology / tridenttopologybuilder . java <nl> public class tridenttopologybuilder { <nl> bd . allgrouping ( mastercoordinator ( batchgroup ) , masterbatchcoordinator . commit_stream_id ) ; <nl> } <nl> for ( map m : c . componentconfs ) { <nl> scd . addconfigurations ( m ) ; <nl> } <nl> } <nl> } <nl> <nl>
ppp b / src / jvm / storm / trident / topology / tridenttopologybuilder . java <nl> public class tridenttopologybuilder { <nl> bd . allgrouping ( mastercoordinator ( batchgroup ) , masterbatchcoordinator . commit_stream_id ) ; <nl> } <nl> for ( map m : c . componentconfs ) { <nl> scd . addconfigurations ( m ) ; <nl> } <nl> } <nl> }
ppp b / src / jvm / storm / trident / topology / tridenttopologybuilder . java <nl> public class tridenttopologybuilder { <nl> bd . allgrouping ( mastercoordinator ( batchgroup ) , masterbatchcoordinator . commit_stream_id ) ; <nl> } <nl> for ( map m : c . componentconfs ) { <nl> scd . addconfigurations ( m ) ; <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / java / examples / topics / <unk> / <unk> / particlesystem . pde <nl>
ppp b / java / examples / topics / <unk> / <unk> / particlesystem . <nl>
ppp b / java / examples / topics / <unk> / <unk> /
ppp b / java / examples / topics / <unk> / <unk> / particlesystem .
ppp b / java / examples / topics / <unk> / <unk> / particlesystem pde <nl>
====NEW EXAMPLE====
ppp b / libraries / javascriptappengine / initialization / initializejavascriptappengine . js <nl> function <unk> ( ) : void { <nl> const <unk> = require ( ' <unk> ' ) ; <nl> <unk> . <unk> ( ) ; <nl> if ( __dev__ ) { <nl> } <nl> } <nl> / * * <nl>
ppp b / libraries / javascriptappengine / initialization / initializejavascriptappengine . js <nl> function <unk> ( ) : void { <nl> const <unk> = require ( ' <unk> ' ) ; <nl> <unk> . <unk> ( ) ; <nl> if ( __dev__ ) { <nl> } <nl> } <nl> / * <nl>
ppp b / libraries / javascriptappengine / initialization / initializejavascriptappengine . js <nl> function <unk> ( ) : void { <nl> const <unk> = require ( ' <unk> ' ) ; <nl> <unk> . <unk> ( ) ; <nl> if ( __dev__ ) { <nl> } <nl> } <nl>
ppp b / libraries / javascriptappengine / initialization / initializejavascriptappengine . js <nl> function <unk> ( ) : void { <nl> const <unk> = require ( ' <unk> ' ) ; <nl> <unk> . <unk> ( ) ; <nl> if ( __dev__ ) { <nl> } <nl> } <nl> / * *
ppp b / libraries / javascriptappengine / initialization / initializejavascriptappengine . js <nl> function <unk> ( ) : void { <nl> const <unk> = require ( ' <unk> ' ) ; <nl> <unk> . <unk> ( ) ; <nl> if ( __dev__ ) { <nl>
====NEW EXAMPLE====
ppp b / subprojects / performance / performance . gradle <nl> / / quick fix for this project not being <unk> on java <nl>
ppp b / subprojects / performance / performance . gradle <nl> / / quick fix for this project not being <unk> on java <nl> <nl>
ppp b / subprojects / performance / performance . gradle <nl> / / quick fix for this project not being <unk> on 5 <nl>
ppp b / subprojects / performance / performance . gradle <nl> / / quick fix for this project not being <unk> on java 5 <nl>
ppp b / subprojects / performance / performance . gradle <nl> / /
====NEW EXAMPLE====
ppp b / build . sbt <nl> organization in thisbuild : = " org . reactivestreams " <nl> version in thisbuild : = " 0 . 3 " <nl> <nl> scalaversion in thisbuild : = " 2 . 10 . 3 " <nl>
ppp b / build . sbt <nl> organization in thisbuild : = " org . reactivestreams " <nl> version in thisbuild : = " 0 . 3 " <nl> <nl> scalaversion in thisbuild : = " 2 . 10 . 3 3 <nl>
ppp b / build . sbt <nl> organization in thisbuild : = " org . reactivestreams " <nl> version in thisbuild : = " 0 . 3 " <nl> <nl> scalaversion in thisbuild : = " 2 . 10 . 3 " " <nl>
ppp b / build . sbt <nl> organization in thisbuild : = " org . reactivestreams " <nl> version in thisbuild : = " 0 . 3 " <nl> <nl> scalaversion in thisbuild : = " 2 . 10 . 3 <nl>
ppp b / build . sbt <nl> organization in thisbuild : = " org . reactivestreams " <nl> version in thisbuild : = " 0 . 3 " <nl> <nl> scalaversion in thisbuild : = " 2 . 10 . 3 . <nl>
====NEW EXAMPLE====
ppp b / h2o - docs / src / product / flow / packs / test - small / index . list <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl>
ppp b / h2o - docs / src / product / flow / packs / test - small / index . list <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl>
ppp b / h2o - docs / src / product / flow / packs / test - small / index . list <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl>
ppp b / h2o - docs / src / product / flow / packs / test - small / index . list <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . . <nl>
ppp b / h2o - docs / src / product / flow / packs / test - small / index . list <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow <nl> <unk> . flow flow <nl>
====NEW EXAMPLE====
ppp b / wordpress / build . gradle <nl> android { <nl> defaultconfig { <nl> applicationid " org . wordpress . android " <nl> versionname " 4 . 2 " <nl> versioncode 249 <nl> minsdkversion 14 <nl> targetsdkversion 22 <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> defaultconfig { <nl> applicationid " org . wordpress . android " <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> defaultconfig { <nl> applicationid " org . wordpress . android " <nl> versionname " 4 . 2 " <nl> versioncode 249 <nl> minsdkversion 14 <nl> targetsdkversion <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> defaultconfig { <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> defaultconfig { <nl> applicationid " org . wordpress . android " <nl> versionname " 4 . 2 " <nl> versioncode 249 <nl> minsdkversion 14 <nl> 22 <nl>
====NEW EXAMPLE====
ppp b / samples / attributes . cvsignore <nl> classes <nl> generated <nl> reports <nl>
ppp b / samples / attributes . cvsignore <nl> classes <nl> generated <nl> reports <nl> <nl>
ppp b / samples / attributes . cvsignore <nl> classes <nl> generated <nl> reports <nl> <nl> reports <nl>
ppp b / samples / attributes . cvsignore <nl> classes <nl> generated <nl> reports reports <nl>
ppp b / samples / attributes . cvsignore <nl> classes <nl> generated <nl> reports <nl> <nl> <nl>
====NEW EXAMPLE====
ppp b / stratosphere - dist / src / main / stratosphere - bin / bin / stratosphere <nl> fi <nl> <unk> = $ <unk> / <unk> <nl>
ppp b / stratosphere - dist / src / main / stratosphere - bin / bin / stratosphere <nl> fi <nl> <unk> = $ <unk> / <nl>
ppp b / stratosphere - dist / src / main / stratosphere - bin / bin / stratosphere <nl> fi <nl> <unk> = $ <unk> / <unk>
ppp b / stratosphere - dist / src / main / stratosphere - bin / bin / stratosphere <nl> fi <nl>
ppp b / stratosphere - dist / src / main / stratosphere - bin / bin / stratosphere <nl> fi <nl> <unk> = $ <unk> / <unk> <nl> <unk>
====NEW EXAMPLE====
ppp b / main / src / com / google / refine / expr / <unk> . java <nl> public class <unk> { <nl> } <nl> static public boolean <unk> ( object o ) { <nl> return o ! = null & & o <nl>
ppp b / main / src / com / google / refine / expr / <unk> . java <nl> public class <unk> { <nl> } <nl> static public boolean <unk> ( object o ) { <nl> return o ! = null & & o * <nl>
ppp b / main / src / com / google / refine / expr / <unk> . java <nl> public class <unk> { <nl> } <nl> static public boolean <unk> ( object o ) { <nl> return o ! = null & & & <nl>
ppp b / main / src / com / google / refine / expr / <unk> . java <nl> public class <unk> { <nl> } <nl> static public boolean <unk> ( object o ) { <nl> return o ! = null & & o / <nl>
ppp b / main / src / com / google / refine / expr / <unk> . java <nl> public class <unk> { <nl> } <nl> static public boolean <unk> ( object o ) { <nl> return o ! = null & & o instanceof <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> * jdbc driver for cql ( cassandra - <unk> , <unk> , <unk> ) <nl>
ppp b / changes . txt <nl>

ppp b / changes . txt <nl> * jdbc driver for cql ( cassandra - <unk> , <unk> , <unk> ) <nl> * atomic switch of <unk> and sstables ( cassandra - <unk> ) <nl> * add pluggable <unk> ( cassandra - <unk> ) <nl> <nl> * updated french translation to be used by matthias dill ) ) <nl> 0 . . . 5 <nl>
ppp b / changes . txt <nl> * jdbc driver for cql ( cassandra - <unk> , <unk> , <unk> ) <nl> * atomic switch of <unk> and sstables ( cassandra - <unk> ) <nl> * add pluggable <unk> ( cassandra - <unk> ) <nl> <nl> * updated french translation to be used by matthias dill ) ) <nl> 0 . . . 5 <nl> * avoid seeking when sstable2json exports the <unk> file ( cassandra - <unk> ) <nl>
====NEW EXAMPLE====
ppp b / txt / ppp b / <nl>
ppp b / txt / / dynamic <nl>
ppp b / txt / . gitignore representations <nl>
ppp b / txt / 4 . gitignore <nl>
ppp b / txt / test . gitignore <nl>
====NEW EXAMPLE====
ppp b
ppp
ppp b / changelog <nl> 1 . 8 . 23 <nl> - - - - - oraclejdk8 <nl> - - - - - - - - ( rb = <unk> <nl>
ppp b / changelog <nl> 1 . 8 . 23 <nl> - - - - - oraclejdk8 <nl> - - - - - - - - ( rb = <unk> ) <nl>
ppp b / changelog <nl> 1 . 8 . 23 <nl> - - - - - oraclejdk8 <nl> - - - - - - - - ( rb = <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / git - - plugins <nl> \ no newline at end of file <nl>
ppp b / git - - plugins <nl> <unk> <nl> \ no newline at end of file <nl>
ppp b / git - - plugins <nl>
ppp b / git - - plugins <nl> \ no newline at end of file <nl> no newline at end of file <nl>
ppp b / git - - plugins <nl> \ <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / subprojects / core / src / main / java / org / gradle / api / artifacts / resolutionstrategy . java <nl> public interface resolutionstrategy { <nl> * } <nl> * < / pre > <nl>
ppp b / subprojects / core / src / main / java / org / gradle / api / artifacts / resolutionstrategy . java <nl> public interface resolutionstrategy { <nl> * } <nl> * < / pre > <nl> <nl>
ppp b / subprojects / core / src / main / java / org / gradle / api / artifacts / resolutionstrategy . java <nl> public interface resolutionstrategy { <nl> * } <nl>
ppp b / subprojects / core / src / main / java / org / gradle / api / artifacts / resolutionstrategy . java <nl> public interface resolutionstrategy { <nl> * } <nl> * < / pre > <nl> * <nl>
ppp b / subprojects / core / src / main / java / org / gradle / api / artifacts / resolutionstrategy . java <nl> public interface resolutionstrategy { <nl> * } <nl> * < / pre > <nl> * * @ since 3 2 <nl> * / <nl> void <unk> ( ) ; <nl>
====NEW EXAMPLE====
ppp b / portal - impl / src / portal . properties <nl> / <unk> / <unk> , \ <nl> / <unk> / rss , \ <nl> \ <nl> / portal / <unk> , \ <nl> / / / / / <unk> \ <nl> / portal / <unk> , \ <nl> / portal / <unk> , \ <nl>
ppp b / portal - impl / src / portal . properties <nl> / <unk> / <unk> , \ <nl> / <unk> / rss , \ <nl> \ <nl> / portal / <unk> , \ <nl> / / / / / <unk> \ <nl> / portal / <unk> , \ <nl> / portal / <unk> , <nl>
ppp b / portal - impl / src / portal . properties <nl> / <unk> / <unk> , \ <nl> / <unk> / rss , \ <nl> \ <nl> / portal / <unk> , \ <nl> / / / / / <unk> \ <nl> / portal / <unk> , \ <nl> / portal / <unk> , , <nl>
ppp
ppp b / portal - impl / src / portal . properties <nl> / <unk> / <unk> , \ <nl> / <unk> / rss , \ <nl> \ <nl> / portal / <unk> , \ <nl> / / / / / <unk> \ <nl> / portal / <unk> , \ <nl> / portal / <unk> , \ \ <nl>
====NEW EXAMPLE====
ppp b / src / main / groovy / util / configobject . java <nl> * / <nl> package groovy . util ; <nl> import groovy . lang . closure ; <nl>
ppp b / src / main / groovy / util / configobject . java <nl> * / <nl> package groovy . util ; <nl>
ppp b / src / main / groovy / util / configobject . java <nl> * / <nl> package groovy . util ; <nl> import groovy . lang . ; <nl>
ppp b / src / main / groovy / util / configobject . java <nl> * / <nl> package groovy . util ; <nl> import groovy . lang . closure
ppp b / src / main / groovy / util / configobject . java <nl> * / <nl> package groovy . util ; <nl> import groovy . lang .
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / common / buildcraft / buildcraftcore . java <nl> public class buildcraftcore extends buildcraftmod { <nl> } <nl> @ subscribeevent <nl> public void <unk> ( worldevent . load load ) { <nl> <unk> . clear ( ) ; <nl> } <nl>
ppp b / common / buildcraft / buildcraftcore . java <nl> public class buildcraftcore extends buildcraftmod { <nl> } <nl> @ subscribeevent <nl> public void <unk> ( worldevent . load load ) { <nl> <unk> . clear ( ) ; <nl>
ppp b / common / buildcraft / buildcraftcore . java <nl> public class buildcraftcore extends buildcraftmod { <nl> } <nl> @ subscribeevent <nl> public void <unk> ( worldevent . load load ) { <nl> <unk> . clear ( ) ; } <nl>
ppp b / common / buildcraft / buildcraftcore . java <nl> public class buildcraftcore extends buildcraftmod { <nl> } <nl> @ subscribeevent <nl> public void <unk> ( worldevent . load load ) { <nl> <unk> . clear ( ) ; <nl> }
ppp b / common / buildcraft / buildcraftcore . java <nl> public class buildcraftcore extends buildcraftmod { <nl> } <nl> @ subscribeevent <nl> public void <unk> ( worldevent . load load ) { <nl> <unk> . clear ( ) ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> tightdb_jni / src / java / lib / l * <nl>
ppp b / . gitignore <nl> tightdb_jni / src / java / lib / l * <nl> java
ppp b / . gitignore <nl> tightdb_jni / src / java / lib / l <nl>
ppp b / . gitignore <nl> tightdb_jni / src / java / lib / l * <nl> java /
ppp b / . gitignore <nl> tightdb_jni / src / java / lib / l *
====NEW EXAMPLE====
ppp b / readme . md <nl> add it in your root build . gradle at the end of repositories : <nl> step 2 . add the dependency <nl> dependencies { <nl> compile ' com . github . baoyachi : stepview : 1 . 4 ' <nl> } <nl>
ppp b / readme . md <nl> add it in your root build . gradle at the end of repositories : <nl> step 2 . add the dependency <nl> dependencies { <nl> compile ' com . github . baoyachi : stepview : 1 . 4 ' <nl>
ppp b / readme . md <nl> add it in your root build . gradle at the end of repositories : <nl> step 2 . add the dependency <nl> dependencies { <nl> compile ' com . github . baoyachi : stepview : 1 . 4 ' <nl> <nl>
ppp b / readme . md <nl> add it in your root build . gradle at the end of repositories : <nl> step 2 . add the dependency <nl> dependencies { <nl> compile ' com . github . baoyachi : stepview : 1 . 4 ' <nl> } <nl> <nl>
ppp b / readme . md <nl> add it in your root build . gradle at the end of repositories : <nl> step 2 . add the dependency <nl> dependencies { <nl> compile ' com . github . baoyachi : stepview : 1 . 4 <nl> } <nl>
====NEW EXAMPLE====
ppp b / grails - plugin - converters / build . gradle <nl> dependencies { <nl> compile " commons - lang : commons - lang : $ commonslangversion " <nl>
ppp b / grails - plugin - converters / build . gradle <nl> dependencies { <nl> compile " commons - lang : commons - lang : $ commonslangversion <nl>
ppp b / grails - plugin - converters / build . gradle <nl> dependencies { <nl> compile " commons - lang : commons - lang : $ commonslangversion " <nl> compile " commons - io : commons - io : { <nl>
ppp b / grails - plugin - converters / build . gradle <nl> dependencies { <nl> compile " commons - lang : commons - lang : $ commonslangversion " <nl> compile " commons - io : commons - io : $ { <nl>
ppp b / grails - plugin - converters / build . gradle <nl> dependencies { <nl> compile " commons - lang : commons - lang : $ commonslangversion " <nl> compile " commons - io : commons - io : {
====NEW EXAMPLE====
ppp b / rebound - android / src / main / java / com / facebook / rebound / <unk> . java <nl> abstract class <unk> { <nl> } <nl> long currenttime = systemclock . uptimemillis ( ) ; <nl> <unk> . loop ( currenttime - <unk> ) ; <nl> mhandler . post ( ) ; <nl> post ( ( ) ; <nl> } <nl> } ; <nl>
ppp b / rebound - android / src / main / java / com / facebook / rebound / <unk> . java <nl> abstract class <unk> { <nl> } <nl>
ppp b / rebound - android / src / main / java / com / facebook / rebound / <unk> . java <nl> abstract class <unk> { <nl> } <nl> long currenttime = systemclock . uptimemillis ( ) ; <nl> <unk> . loop ( currenttime - <unk> ) ; <nl> mhandler . post ( ) ; <nl> post ( ( ) ; <nl> } <nl> } <nl>
ppp b / rebound - android / src / main / java / com / facebook / rebound / <unk> . java <nl> abstract class <unk> { <nl>
ppp b / rebound - android / src / main / java / com / facebook / rebound / <unk> . java <nl>
====NEW EXAMPLE====
ppp b / config / indexer . yml . example <nl>
ppp b
ppp b / config / indexer . yml . example <nl> production : <nl> url : http : / / localhost : 9200 / <nl> <unk> : <nl> / / / <nl>
ppp b / config / indexer . yml . example <nl> production : <nl> url : http : / / localhost : 9200 / <nl> <unk> : <nl> / / / / <nl>
ppp b / config / indexer . yml . example <nl> production : <nl> url : http : / / localhost : 9200 / <nl> <unk> : <nl> / / / / <nl> : : <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . - " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version
====NEW EXAMPLE====
ppp b / public / stylesheets / main . css <nl> form . edit - dashboard - form { <nl> . dashboard . widget . field_chart . dashboard - chart { <nl> position : relative ; <nl> top : 15px ; <nl> top : 15px ; <nl> } <nl> . dashboard . widget . field_chart . dashboard - chart . <unk> { <nl>
ppp b / public / stylesheets / main . css <nl> form . edit - dashboard - form { <nl> . dashboard . widget . field_chart . dashboard - chart { <nl> position : relative ; <nl> top : 15px ; <nl> top : 15px ; <nl> } <nl> . dashboard . widget . field_chart . dashboard - chart . <unk> { { <nl>
ppp b / public / stylesheets / main . css <nl> form . edit - dashboard - form { <nl> . dashboard . widget . field_chart . dashboard - chart { <nl> position : relative ; <nl> top : 15px ; <nl> top : 15px ; <nl> } <nl> . dashboard . widget . field_chart . dashboard - chart . { <nl>
ppp b / public / stylesheets / main . css <nl> form . edit - dashboard - form { <nl> . dashboard . widget . field_chart . dashboard - chart { <nl> position : relative ; <nl> top : 15px ; <nl> top : 15px ; <nl> } <nl> . dashboard . widget . field_chart . dashboard - chart . <unk> <nl>
ppp b / public / stylesheets / main . css <nl> form . edit - dashboard - form { <nl> . dashboard . widget . field_chart . dashboard - chart { <nl> position : relative ; <nl> top : 15px ; <nl> top : 15px ; <nl> } <nl> . dashboard . widget . field_chart . dashboard - chart . <unk> { <nl> <nl>
====NEW EXAMPLE====
ppp b / services / core / java / com / android / server / pm / packagesettingbase . java <nl> abstract class packagesettingbase extends <unk> { <nl> installstatus = base . installstatus ; <nl> keysetdata = base . keysetdata ; <nl> <unk> = base . <unk> ; <nl> <unk> ( ) ; <nl> ; <nl> } <nl> private packageuserstate modifyuserstate ( int userid ) { <nl>
ppp b / services / core / java / com / android / server / pm / packagesettingbase . java <nl> abstract class packagesettingbase extends <unk> { <nl> installstatus = base . installstatus ; <nl> keysetdata = base . keysetdata ; <nl> <unk> = base . <unk> ; <nl> <unk> ( ) ; <nl> ; <nl> } <nl> private packageuserstate modifyuserstate ( int userid ) ) <nl>
ppp b / services / core / java / com / android / server / pm / packagesettingbase . java <nl> abstract class packagesettingbase extends <unk> { <nl> installstatus = base . installstatus ; <nl> keysetdata = base . keysetdata ; <nl> <unk> = base . <unk> ; <nl> <unk> ( ) ; <nl> ; <nl> } <nl> private packageuserstate modifyuserstate ( int userid ) <nl>
ppp b / services / core / java / com / android / server / pm / packagesettingbase . java <nl> abstract class packagesettingbase extends <unk> { <nl> installstatus = base . installstatus ; <nl> keysetdata = base . keysetdata ; <nl> <unk> = base . <unk> ; <nl> <unk> ( ) ; <nl> ; <nl> } <nl> private packageuserstate modifyuserstate ( int userid { <nl>
ppp b / services / core / java / com / android / server / pm / packagesettingbase . java <nl> abstract class packagesettingbase extends <unk> { <nl> installstatus = base . installstatus ; <nl> keysetdata = base . keysetdata ; <nl> <unk> = base . <unk> ; <nl> <unk> ( ) ; <nl> ; <nl> } <nl> private packageuserstate modifyuserstate ( int userid ) { <nl> <nl>
====NEW EXAMPLE====
ppp b / sonar - core / src / main / java / org / sonar / core / persistence / <unk> . java <nl> public class <unk> implements <unk> , <unk> { <nl> " <unk> " , <nl> " widgets " , <nl> " <unk> " , <nl> " logs " <nl> ) ; <nl> private mybatis mybatis ; <nl>
ppp b / sonar - core / src / main / java / org / sonar / core / persistence / <unk> . java <nl> public class <unk> implements <unk> , <unk> { <nl> " <unk> " , <nl> " widgets " , <nl> " <unk> " , <nl> " logs " <nl> ) ; <nl> private mybatis mybatis mybatis ; <nl>
ppp b / sonar - core / src / main / java / org / sonar / core / persistence / <unk> . java <nl> public class <unk> implements <unk> , <unk> { <nl> " <unk> " , <nl> " widgets " , <nl> " <unk> " , <nl> " logs " <nl> ) ; <nl> private mybatis mybatis ; ; <nl>
ppp b / sonar - core / src / main / java / org / sonar / core / persistence / <unk> . java <nl> public class <unk> implements <unk> , <unk> { <nl> " <unk> " , <nl> " widgets " , <nl> " <unk> " , <nl> " logs " <nl> ) ; <nl> private mybatis ; <nl>
ppp b / sonar - core / src / main / java / org / sonar / core / persistence / <unk> . java <nl> public class <unk> implements <unk> , <unk> { <nl> " <unk> " , <nl> " widgets " , <nl> " <unk> " , <nl> " logs " <nl> ) ; <nl> private mybatis mybatis ; <nl> <nl>
====NEW EXAMPLE====
ppp b / forge / version . <nl> 1 3 2 2 0 <nl>
ppp b / forge / version . <nl> 1 3 2 2 <nl>
ppp b / forge / version . <nl> 1 3 2 2 . <nl>
ppp b / forge / version . <nl> 1 3 2 2 incubating <nl>
ppp b / forge / version . <nl> 1 3 2 2 - snapshot <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - journal . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / sync / sync - api / bnd . bnd <nl> bundle - name : liferay sync api <nl> bundle - symbolicname : com . liferay . sync . api <nl> bundle - version : 1 . 0 . 1 <nl> export - package : com . liferay . sync . constants <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / sync - api / bnd . bnd <nl> bundle - name : liferay sync api <nl> bundle - symbolicname : com . liferay . sync . api <nl> bundle - version : 1 . 0 . 1 <nl> export - package : com . liferay . sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / sync - api / bnd . bnd <nl> bundle - name : liferay sync api <nl> bundle - symbolicname : com . liferay . sync . api <nl> bundle - version : 1 . 0 . 1 <nl> export - package : com . liferay . sync constants <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / sync - api / bnd . bnd <nl> bundle - name : liferay sync api <nl> bundle - symbolicname : com . liferay . sync . api <nl> bundle - version : 1 . 0 . 1 <nl> export - package : com . liferay . sync . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / sync - api / bnd . bnd <nl> bundle - name : liferay sync api <nl> bundle - symbolicname : com . liferay . sync . api <nl> bundle - version : 1 . 0 . 1 <nl> export - package : com . liferay . sync . constants no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / zeppelin - web / src / app / notebook / paragraph / paragraph . css <nl> margin - bottom : 0 ; <nl> } <nl> . paragraph p { <nl>
ppp b / zeppelin - web / src / app / notebook / paragraph / paragraph . css <nl> margin - bottom : 0 ; <nl> } <nl> . paragraph p { <nl> { <nl> width 100 % ; <nl> } <nl>
ppp b / zeppelin - web / src / app / notebook / paragraph / paragraph . css <nl> margin - bottom : 0 ; <nl> } <nl>
ppp b / zeppelin - web / src / app / notebook / paragraph / paragraph . css <nl> margin - bottom : 0 ; <nl> } <nl> . paragraph p { <nl> <nl>
ppp b / zeppelin - web / src / app / notebook / paragraph / paragraph . css <nl> margin - bottom : 0 ; <nl> } <nl> . paragraph p { } <nl>
====NEW EXAMPLE====
ppp b / src / xdocs / releasenotes . xml <nl> < body > <nl> < section name = " release 4 . 0 beta 2 " > <nl> < p > fixed bugs : < / p > <nl> < ul > <nl>
ppp b / src / xdocs / releasenotes . xml <nl> < body > <nl> < section name = " release 4 . 0 beta 2 " > <nl> < p > fixed bugs : < / p > <nl> < ul > > <nl>
ppp b / src / xdocs / releasenotes . xml <nl> < body > <nl> < section name = " release 4 . 0 beta 2 " > <nl> < p > fixed bugs : < / p > <nl> < ul <nl>
ppp b / src / xdocs / releasenotes . xml <nl> < body > <nl> < section name = " release 4 . 0 beta 2 " > <nl> < p > fixed bugs : < / p > <nl> < ul > <nl> <nl>
ppp b / src / xdocs / releasenotes . xml <nl> < body > <nl> < section name = " release 4 . 0 beta 2 " > <nl> < p > fixed bugs : < / p > <nl> < ul >
====NEW EXAMPLE====
ppp b / undertow / src / main / java / org / wildfly / extension / undertow / deployment / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public boolean <unk> ( ) { <nl> return true ; <nl> } <nl> @ override <nl>
ppp b / undertow / src / main / java / org / wildfly / extension / undertow / deployment / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public boolean <unk> ( ) { <nl> return true ; <nl> } <nl>
ppp b / undertow / src / main / java / org / wildfly / extension / undertow / deployment / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public boolean <unk> ( ) { <nl> return true ; <nl> } <nl> @ override <nl> <nl>
ppp b / undertow / src / main / java / org / wildfly / extension / undertow / deployment / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public boolean <unk> ( ) { <nl> return true ; <nl> } <nl> @ override
ppp b / undertow / src / main / java / org / wildfly / extension / undertow / deployment / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public boolean <unk> ( ) { <nl> return true ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / app / src / main / java / io / github / hidroh / materialistic / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public int getcount ( ) { <nl> return 2 ; <nl> } else { <nl> 2 ; <nl> } <nl> @ override <nl>
ppp b / app / src / main / java / io / github / hidroh / materialistic / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public int getcount ( ) { <nl> return 2 ; <nl> } else { <nl> 2 ; <nl> } <nl>
ppp b / app / src / main / java / io / github / hidroh / materialistic / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public int getcount ( ) { <nl> return 2 ; <nl> } else { <nl> 2 ; <nl> } @ override <nl>
ppp b / app / src / main / java / io / github / hidroh / materialistic / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public int getcount ( ) { <nl> return 2 ; <nl> } else { <nl> 2 ; <nl> } <nl> @ override
ppp b / app / src / main / java / io / github / hidroh / materialistic / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public int getcount ( ) { <nl> return 2 ; <nl> } else { <nl> 2 ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / platform / platform - impl / src / com / intellij / openapi / wm / impl / content / <unk> . java <nl> public class <unk> extends jpanel implements <unk> , <unk> <nl> <unk> ( e ) ; <nl> } <nl> } <nl> } <nl> public string tostring ( ) ; <nl> } <nl> } <nl> else { <nl>
ppp b / platform / platform - impl / src / com / intellij / openapi / wm / impl / content / <unk> . java <nl>
ppp b / platform / platform - impl / src / com / intellij / openapi / wm / impl / content / <unk> . java <nl> public class <unk> extends jpanel implements <unk> , <unk> <nl> <unk> ( e ) ; <nl> } <nl> } <nl> } <nl> public string tostring ( ) ; <nl> } <nl> } <nl> else { { <nl>
ppp b / platform / platform - impl / src / com / intellij / openapi / wm / impl / content / <unk> . java <nl> public class <unk> extends jpanel implements <unk> , <unk> <nl> <unk> ( e ) ; <nl> } <nl> } <nl> } <nl> public string tostring ( ) ; <nl> } <nl> } <nl> else else { <nl>
ppp b / platform / platform - impl / src / com / intellij / openapi / wm / impl / content / <unk> . java <nl> public class <unk> extends jpanel implements <unk> , <unk> <nl> <unk> ( e ) ; <nl> } <nl> } <nl> } <nl> public string tostring ( ) ; <nl> } <nl> } <nl> else { <nl> { <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl>
ppp b / . gitignore <nl> org . springframework . spring - parent / . project <nl> org . springframework . test / test - output / <nl> # # # # # # # # # # # # # # # # # # # # # # # # # # org / / / / / / / / / <nl>
ppp b / . gitignore <nl> org . springframework . spring - parent / . project <nl> org . springframework . test / test - output / <nl> # # # # # # # # # # # # # # # # # # # # # # # # # # # org / / / / / / / / <nl>
ppp b / . gitignore <nl> org . springframework . spring - parent / . project <nl> org . springframework . test / test - output / <nl> # # # # # # # # # # # # # # # # # # # # # # # org / / / / / / / / / / / <nl> <nl>
ppp b / . gitignore <nl> org . springframework . spring - parent / . project <nl> org . springframework . test / test - output / <nl> # # # # # # # # # # # # # # # # # # # # # # # # # # # / / / / / / / / / <nl>
====NEW EXAMPLE====
ppp b / testdata / highlighting / simple . go <nl> package main <nl>
ppp b / testdata / highlighting / simple . go <nl> package main <nl> import
ppp b / testdata / highlighting / simple . go <nl>
ppp b / testdata / highlighting / simple . go <nl> package main <nl> import <
ppp b / testdata / highlighting / simple . go <nl> package main <nl> \ no newline
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> } <nl> plugins { <nl> id ' nebula . netflixoss ' version ' 2 . 2 . 3 ' <nl> } <nl> ext { <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> plugins { <nl> id ' nebula . netflixoss ' version ' 2 . 2 . 3 ' <nl> } <nl> { <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> plugins { <nl> id ' nebula . netflixoss ' version ' 2 . 2 . 3 ' <nl> } <nl> ext { <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> plugins { <nl> id ' nebula . netflixoss ' version ' 2 . 2 . 3 ' <nl> } <nl> ext <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> plugins { <nl> id ' nebula . netflixoss ' version ' 2 . 2 . 3 ' <nl> } <nl>
====NEW EXAMPLE====
ppp b / scripts / <unk> . groovy <nl> target ( <unk> : " runs the project ' s tests . " ) { <nl> } <nl> else { <nl> exitcode = <unk> . <unk> ( argsmap , false ) ? : <nl> } <nl> exit ( exitcode ) <nl> } <nl>
ppp b / scripts / <unk> . groovy <nl> target ( <unk> : " runs the project ' s tests . " ) { <nl> } <nl> else { <nl> exitcode = <unk> . <unk> ( argsmap , false ) ? : <nl> } <nl> exit ( exitcode ) <nl>
ppp b / scripts / <unk> . groovy <nl> target ( <unk> : " runs the project ' s tests . " ) { <nl> } <nl> else { <nl>
ppp b / scripts / <unk> . groovy <nl> target ( <unk> : " runs the project ' s tests . " ) { <nl> } <nl> else { <nl> exitcode = <unk> . <unk> ( argsmap , false ) ? : <nl> } <nl> exit ( exitcode ) <nl> } <nl> <nl>
ppp b / scripts / <unk> . groovy <nl> target ( <unk> : " runs the project ' s tests . " ) { <nl> } <nl> else { <nl> exitcode = <unk> . <unk> ( argsmap , false ) ? : <nl> } <nl> exit ( exitcode <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3591615ca58b5b7b5f44fe97313f0d9c01562aad <nl> mode = push <nl> parent = d6de36c2f1ee31334164e4e3fd71d52c4d46162f <nl> remote = git @ github . com : liferay / com - liferay - frontend - css . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3591615ca58b5b7b5f44fe97313f0d9c01562aad <nl> mode = push <nl> parent = d6de36c2f1ee31334164e4e3fd71d52c4d46162f <nl> remote = git @ github . com : liferay / com - liferay - frontend - css git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> before_install : <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> before_install :
ppp b / . travis . yml <nl> before_install
ppp b / . travis . yml <nl> before_install : <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < ! - - <nl>
ppp b / pom . xml <nl> < ! - - <nl> usage : <nl>
ppp b / pom . xml <nl>
ppp

====NEW EXAMPLE====
ppp b / src / main / java / org / apache / ibatis / builder / xml / mybatis - 3 - mapper . dtd <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <nl> > <nl>
ppp b / src / main / java / org / apache / ibatis / builder / xml / mybatis - 3 - mapper . dtd <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> > <nl>
ppp b / src / main / java / org / apache / ibatis / builder / xml / mybatis - 3 - mapper . dtd <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl>
ppp b / src / main / java / org / apache / ibatis / builder / xml / mybatis - 3 - mapper . dtd <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <nl>
ppp b / src / main / java / org / apache / ibatis / builder / xml / mybatis - 3 - mapper . dtd <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied <nl> <unk> cdata # implied implied <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 . " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 - snapshot <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 114 - snapshot <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / plugins / git4idea / src / git4idea / roots / <unk> . java <nl> public class <unk> implements <unk> , <unk> , <unk> <nl> @ override <nl> public void dispose ( ) { <nl> } <nl> @ override <nl> } <nl> } <nl> @ override <nl>
ppp b / plugins / git4idea / src / git4idea / roots / <unk> . java <nl> public class <unk> implements <unk> , <unk> , <unk> <nl> @ override <nl> public void dispose ( ) { <nl> } <nl> @ override <nl> } <nl> } <nl>
ppp b / plugins / git4idea / src / git4idea / roots / <unk> . java <nl> public class <unk> implements <unk> , <unk> , <unk> <nl> @ override <nl> public void dispose ( ) { <nl> } <nl> @ override <nl> { <nl> } <nl>
ppp b / plugins / git4idea / src / git4idea / roots / <unk> . java <nl> public class <unk> implements <unk> , <unk> , <unk> <nl> @ override <nl> public void dispose ( ) { <nl> } <nl> @ override <nl> } <nl> } <nl> } <nl>
ppp b / plugins / git4idea / src / git4idea / roots / <unk> . java <nl> public class <unk> implements <unk> , <unk> , <unk> <nl> @ override <nl> public void dispose ( ) { <nl> } <nl> @ override <nl> ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / gradle / convention . gradle <nl>
ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl>
ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl>

ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the jdk or a container to provide it . it is only available available the compilation classpath , , and is not transitive ' <nl> transitive = false <nl> visible = false <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / info / ata4 / unity / <unk> . java <nl> public class <unk> { <nl> } <nl> public boolean <unk> ( integer classid ) { <nl> return classfilter ! = null & & classfilter . contains contains ( classid ) ; <nl> } <nl> } <nl>
ppp b / src / info / ata4 / unity / <unk> . java <nl> public class <unk> { <nl> } <nl> public boolean <unk> ( integer classid ) { <nl> return classfilter ! = null & & classfilter . contains contains ( classid ) ; <nl> } <nl> <nl>
ppp b / src / info / ata4 / unity / <unk> . java <nl> public class <unk> { <nl> } <nl> public boolean <unk> ( integer classid ) { <nl> return classfilter ! = null & & classfilter . contains contains ( classid ) ; <nl> } <nl> } <nl> <nl>
ppp b / src / info / ata4 / unity / <unk> . java <nl> public class <unk> { <nl> } <nl> public boolean <unk> ( integer classid ) { <nl> return classfilter ! = null & & classfilter . contains contains ( classid ) ; <nl> } <nl>
ppp b / src / info / ata4 / unity / <unk> . java <nl> public class <unk> { <nl> } <nl> public boolean <unk> ( integer classid ) { <nl> return classfilter ! = null & & classfilter . contains contains ( classid ) ; <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / telephony / java / com / android / internal / telephony / rilconstants . java <nl> cat include / telephony / ril . h | \ <nl> int <unk> = 108 ; <nl> int <unk> = 109 ; <nl> int <unk> = 110 ; <nl> int ril_unsol_response_base = 1000 ; <nl> int ril_unsol_response_base = 1000 ; <nl> int ril_unsol_response_radio_state_changed = 1000 ; <nl> int ril_unsol_response_call_state_changed = 1001 ; <nl>
ppp b / telephony / java / com / android / internal / telephony / rilconstants . java <nl> cat include / telephony / ril . h | \ <nl> int <unk> = 108 ; <nl> int <unk> = 109 ; <nl> int <unk> = 110 ; <nl> int ril_unsol_response_base = 1000 ; <nl> int ril_unsol_response_base = 1000 ; <nl> int ril_unsol_response_radio_state_changed = 1000 ; <nl> int ril_unsol_response_call_state_changed = ; <nl>
ppp b / telephony / java / com / android / internal / telephony / rilconstants . java <nl> cat include / telephony / ril . h | \ <nl> int <unk> = 108 ; <nl> int <unk> = 109 ; <nl> int <unk> = 110 ; <nl> int ril_unsol_response_base = 1000 ; <nl> int ril_unsol_response_base = 1000 ; <nl> int ril_unsol_response_radio_state_changed = 1000 ; <nl> int ril_unsol_response_call_state_changed = 1001 1001 ; <nl>
ppp b / telephony / java / com / android / internal / telephony / rilconstants . java <nl> cat include / telephony / ril . h | \ <nl> int <unk> = 108 ; <nl> int <unk> = 109 ; <nl> int <unk> = 110 ; <nl> int ril_unsol_response_base = 1000 ; <nl> int ril_unsol_response_base = 1000 ; <nl> int ril_unsol_response_radio_state_changed = 1000 ; <nl> int ril_unsol_response_call_state_changed = 1001 ; ; <nl>
ppp b / telephony / java / com / android / internal / telephony / rilconstants . java <nl> cat include / telephony / ril . h | \ <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - roles . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - roles . git <nl> \ no newline at end of file
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - roles . git <nl> no newline at end of file <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / tests / gdx - tests - android / project . properties <nl> # indicates whether an apk should be generated for each density . <nl> split . density = false <nl> # project target . <nl> target = android - 12 <nl>
ppp b / tests / gdx - tests - android / project . properties <nl> # indicates whether an apk should be generated for each density . <nl> split . density = false <nl> # project target . <nl> target = android - <nl>
ppp b / tests / gdx - tests - android / project . properties <nl> # indicates whether an apk should be generated for each density . <nl> split . density = false <nl> # project target . <nl> target = android - 12 12 <nl>
ppp b / tests / gdx - tests - android / project . properties <nl> # indicates whether an apk should be generated for each density . <nl> split . density = false <nl> # project target . <nl> target = android - - <nl>
ppp b / tests / gdx - tests - android / project . properties <nl> # indicates whether an apk should be generated for each density . <nl> split . density = false <nl> # project target . <nl> target = android - 12 <nl> <nl>
====NEW EXAMPLE====
ppp b / java / libraries / sound / todo . txt <nl>
ppp b / java / libraries / sound / todo . txt <nl> \ no newline at end of file <nl>
ppp b / java / libraries / sound / todo . txt <nl> <unk> <nl>
ppp b / java / libraries / sound / todo . txt <nl> <unk> : <nl>
ppp b / java / libraries / sound / todo . txt <nl> <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0
ppp b / changelog . md <nl> # # 0 . 11

====NEW EXAMPLE====
ppp b / build . gradle <nl> android { <nl> defaultconfig { <nl> minsdkversion 14 <nl> targetsdkversion 21 <nl> versioncode 62 <nl> versionname " 1 . 2 . beta " <nl> } <nl> compileoptions { <nl>
ppp b / build . gradle <nl> android { <nl> defaultconfig { <nl> minsdkversion 14 <nl> targetsdkversion 21 <nl> versioncode 62 <nl>
ppp b / build . gradle <nl> android { <nl> defaultconfig { <nl> minsdkversion 14 <nl>
ppp b / build . gradle <nl> android { <nl>
ppp b / build . gradle <nl> android { <nl> defaultconfig { <nl> minsdkversion 14 <nl> targetsdkversion 21 <nl> versioncode 62 <nl> versionname " 1 . 2 . beta " <nl> } <nl> { <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> change log <nl>
ppp b / changelog . md <nl> change log <nl> version
ppp b / changelog . md <nl> change log <nl> version 1
ppp b / changelog . md <nl> change log <nl> version 1 .
ppp b / changelog . md <nl> change <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / coyote / http11 / http11processor . java <nl> public class http11processor extends abstracthttp11processor { <nl> } <nl> if ( <unk> < 0 ) { <nl>
ppp b / java / org / apache / coyote / http11 / http11processor . java <nl> public class http11processor extends abstracthttp11processor { <nl> } <nl>
ppp b / java / org / apache / coyote / http11 / http11processor . java <nl> public class http11processor extends abstracthttp11processor { <nl>
ppp b / java / org / apache / coyote / http11 / http11processor . java <nl> public class http11processor extends abstracthttp11processor { <nl> <nl>
ppp b / java / org / apache / coyote / http11 / http11processor . java <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 1
ppp b
ppp b / changelog . md <nl>
ppp
ppp b / changelog . md <nl> # # 1 . 1 <nl> # # 1 . 0 . 3 <nl> # # # 0 . iws <nl> <nl> # # # compiler <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> how to get beta releases : <nl> * updated arabic translation <nl> * updated french translation <nl> * updated german translation <nl> * updated portuguese translation <nl> * updated german translation <nl> * updated portuguese translation <nl> * updated slovenian translation <nl> * updated vietnamese translation <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * updated arabic translation <nl> * updated french translation <nl> * updated german translation <nl> * updated portuguese translation <nl> * updated german translation <nl> * updated portuguese translation <nl> * updated slovenian translation <nl> * updated vietnamese <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * updated arabic translation <nl> * updated french translation <nl> * updated german translation <nl> * updated portuguese translation <nl> * updated german translation <nl> * updated portuguese translation <nl> * updated slovenian translation <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * updated arabic translation <nl> * updated french translation <nl> * updated german translation <nl> * updated portuguese translation <nl> * updated german translation <nl> * updated portuguese translation <nl> * updated slovenian translation <nl> * updated vietnamese translation <nl> <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * updated arabic translation <nl> * updated french translation <nl> * updated german translation <nl> * updated portuguese translation <nl> * updated german translation <nl> * updated portuguese translation <nl> * updated slovenian translation <nl> * updated vietnamese translation
====NEW EXAMPLE====
ppp b / . hgtags <nl> <unk> 0 . 0
ppp b / . hgtags <nl> <unk> 0 . 0 . 7 <nl> <unk> 0 . 0 . 7 . 1 <nl> <unk> 0 . 0 . 7 . . 2 . 0 . 0 . 7 . <nl>
ppp b / . hgtags <nl>
ppp b / . hgtags <nl> <unk> 0 . 0 . 7 <nl> <unk> 0 . 0 . 7 . 1 <nl> <unk> 0 . 0 . 7 . . 2 . 0 . 0 . 7 2 <nl>
ppp b / . hgtags <nl> <unk> 0 . 0 . 7 <nl> <unk> 0 . 0 . 7 . 1 <nl> <unk> 0 . 0 . 7 . . 2 . 0 . 0 . 7 <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> non - windows platforms ( cassandra - <unk> ) <nl>
ppp b / changes . txt <nl>
ppp

ppp b / changes . txt <nl> non - windows platforms ( cassandra - <unk> ) <nl> * fix <unk> of the stress . java when errors were encountered <nl> ( cassandra - <unk> ) <nl> merged from 1 . 0 : <nl> * @ see [ ] ( ) <nl> from 1 . 0 : <nl> * allow short snitch names ( cassandra - <unk> ) <nl>
====NEW EXAMPLE====
ppp b / src / com / google / javascript / jscomp / parsing / parserconfig . properties <nl> jsdoc . annotations = \ <nl> ignore , \ <nl> inner , \ <nl> instance , <nl> \ <nl> , \ <nl> kind , \ <nl> <unk> , \ <nl> link , \ <nl>
ppp b / src / com / google / javascript / jscomp / parsing / parserconfig . properties <nl> jsdoc . annotations = \ <nl> ignore , \ <nl> inner , \ <nl> instance , <nl> \ <nl> , \ <nl> kind , \ <nl> <unk> , \ <nl> link , \ \ <nl>
ppp b / src / com / google / javascript / jscomp / parsing / parserconfig . properties <nl> jsdoc . annotations = \ <nl> ignore , \ <nl> inner , \ <nl> instance , <nl> \ <nl> , \ <nl> kind , \ <nl> <unk> , \ <nl> link , <nl>
ppp b / src / com / google / javascript / jscomp / parsing / parserconfig . properties <nl> jsdoc . annotations = \ <nl> ignore , \ <nl> inner , \ <nl> instance , <nl> \ <nl> , \ <nl> kind , \ <nl> <unk> , \ <nl> link , \ <nl> <nl>
ppp b / src / com / google / javascript / jscomp / parsing / parserconfig . properties <nl> jsdoc . annotations = \ <nl> ignore , \ <nl> inner , \ <nl> instance , <nl> \ <nl> , \ <nl> kind , \ <nl> <unk> , \ <nl> link , , <nl>
====NEW EXAMPLE====
ppp b / docs / <unk> . md <nl> our <unk> plan for common views and modules includes : <nl> # # # # views <nl> ` ` ` <nl> view <nl> spinner spinner <nl>
ppp b / docs / <unk> . md <nl> our <unk> plan for common views and modules includes : <nl> # # # # views <nl> ` ` ` <nl>
ppp b / docs / <unk> . md <nl> our <unk> plan for common views and modules includes : <nl> # # # # views <nl> ` ` ` <nl> view <nl> spinner <nl> art <nl>
ppp b / docs / <unk> . md <nl> our <unk> plan for common views and modules includes : <nl> # # # # views <nl> ` ` ` <nl> view <nl> spinner spinner <nl> art <nl>
ppp b / docs / <unk> . md <nl> our <unk> plan for common views and modules includes : <nl> # # # # views <nl> ` ` ` <nl> view <nl> spinner <nl>
====NEW EXAMPLE====
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / spelling . txt <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> / s <nl>
ppp b / languagetool - language - modules / de / src /
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / spelling . txt <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> / s <nl> remonstration <nl> @ override <nl> * <nl> * <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / spelling . txt <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> / s <nl> remonstration <nl> @ override <nl> * <nl> verpissen <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / spelling . txt <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> / s <nl> remonstration <nl> * @ override <nl> * <nl> vertriebsorientiertes <nl>
====NEW EXAMPLE====
ppp b / osmand / res / layout / <unk> . xml <nl> android : layout_height = " wrap_content " <nl> android : layout_marginright = " @ dimen / <unk> " <nl>
ppp b / osmand / res / layout / <unk> . xml <nl> android : layout_height = " wrap_content " <nl> android : layout_marginright = " @ dimen / <unk> <nl>
ppp b / osmand / res / layout / <unk> . xml <nl> android : layout_height = " wrap_content " <nl>
ppp
ppp b / osmand / res / layout / <unk> . xml <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl>
ppp b
ppp
ppp b / readme . md <nl> # android - ui <nl> \ no newline at end of file ( https : / / / / github . com / / github . svg ? branch / github . com / github . com / github . com / github . com / github . com / / / / / / / > <nl>
ppp b / readme . md <nl> # android - ui <nl> \ no newline at end of file ( https : / / / / github . com / / github . svg ? branch / github . com / github . com / github . com / github . com / github . com / / / / / / / / > <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0
ppp

ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> for rate limiting some race conditions <nl> * storm - storm - <unk> : refactor api to remove insert / update builder in cassandra connector <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk
ppp b / . travis . yml <nl> language
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> oraclejdk7 <nl> env : <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> branches branches : <nl> only only : <nl> - master <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> oraclejdk7 <nl> env : <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> branches branches : <nl> only only : <nl> - master master <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / src / rules / rules . css <nl> token : before { <nl> checked - value , " yes " ) <nl>
ppp b / trunk / jlanguagetool / src / rules / rules . css <nl> token : before { <nl> checked - value , " yes " <nl>
ppp b / trunk / jlanguagetool / src / rules / rules . css <nl> token : before { <nl>
ppp b / trunk / jlanguagetool / src / rules / rules . css <nl> token : before { <nl> checked - value , " yes " ) <nl> " skip : " <nl> number - field ( attribute , skip , <nl> columns , 1 ) <nl> insert ( ) { <nl> insert insert - after - ( ) ) ; <nl> } <nl> } <nl>

====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 0 . 0 . < / version > <nl> < name > hdrhistogram < / name > <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 0 . 0 . < / version > <nl> < name > hdrhistogram < / name > > <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 0 . 0 . < / version > <nl> < name > hdrhistogram < / name >
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 0 . 0 . < / version > <nl> < name > hdrhistogram < / name <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 0 . 0 . < / version > <nl> < name > hdrhistogram < / name > <nl> <nl>
====NEW EXAMPLE====
ppp b / droidgap <nl> class build <nl> def initialize ( * a ) <nl> @ android_sdk_path , @ name , @ pkg , @ www , @ path = a <nl>
ppp b / droidgap <nl> class build <nl> def initialize ( * a ) <nl> @ android_sdk_path , @ name , @ pkg , @ www , @ path = <nl>
ppp b / droidgap <nl> class build <nl> def initialize ( * a ) <nl> @ android_sdk_path , @ name , @ pkg , @ www , @ path a <nl>
ppp b / droidgap <nl> class build <nl> def initialize ( * a ) <nl> @ android_sdk_path , @ name , @ pkg , @ www , @ path = = <nl>
ppp b / droidgap <nl> class build <nl> def initialize ( * a ) <nl> @ android_sdk_path , @ name , @ pkg , @ www , @ path = 0 <nl>
====NEW EXAMPLE====
ppp b / modules / sdk / ant - arquillian / bnd . bnd <nl> bundle - name : liferay ant arquillian <nl> bundle - symbolicname : com . liferay . ant . arquillian <nl> bundle - version : 1 . 0 . 0 <nl> export - package : com . liferay . ant . <unk> <nl> include - resource : classes <nl> \ no newline at end of file <nl>
ppp b / modules / sdk / ant - arquillian / bnd . bnd <nl> bundle - name : liferay ant arquillian <nl> bundle - symbolicname : com . liferay . ant . arquillian <nl> bundle - version : 1 . 0 . 0 <nl> export - package : com . liferay . ant . <unk> <nl> include - resource : : <nl> \ no newline at end of file <nl>
ppp b / modules / sdk / ant - arquillian / bnd . bnd <nl> bundle - name : liferay ant arquillian <nl> bundle - symbolicname : com . liferay . ant . arquillian <nl> bundle - version : 1 . 0 . 0 <nl> export - package : com . liferay . ant . <unk> <nl> include - resource : classes \ no newline at end of file <nl>
ppp b / modules / sdk / ant - arquillian / bnd . bnd <nl> bundle - name : liferay ant arquillian <nl> bundle - symbolicname : com . liferay . ant . arquillian <nl> bundle - version : 1 . 0 . 0 <nl> export - package : com . liferay . ant . <unk> <nl> include - resource : classes no newline at end of file <nl>
ppp b / modules / sdk / ant - arquillian / bnd . bnd <nl> bundle - name : liferay ant arquillian <nl> bundle - symbolicname : com . liferay . ant . arquillian <nl> bundle - version : 1 . 0 . 0 <nl> export - package : com . liferay . ant . <unk> <nl> include - resource : classes classes <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / test / shell / bazel / test - setup . sh <nl> function <unk> ( ) { <nl>

ppp b / src / test / shell
ppp b / src / test / shell / bazel / test - setup . sh <nl> function <unk> ( ) { <nl> <unk> " . / bazel - bin / $ ( echo " $ 1 " | sed ' s | / / | | | ' sed sed ' s | | | | | ' ) " " $ { 2 : - } " <nl> } <nl> <unk> <nl> <unk> <nl>
ppp b / src / test / shell / bazel / test - setup . sh <nl> function <unk> ( ) { <nl> <unk> " . / bazel - bin / $ ( echo " $ 1 " | sed ' s | / / | | | ' sed sed ' s | | | | | ' ) " " $ { 2 : - } " <nl> } <nl> <unk> <nl>
====NEW EXAMPLE====
ppp b / external / openssl <nl> commit = false <nl>
ppp b / external / openssl <nl> commit commit <unk> <nl>
ppp b / external / openssl <nl> commit commit = <nl>
ppp b / external / openssl <nl> commit <unk> <nl>
ppp b / external / openssl <nl> commit commit 743de259274020cdef3de809b8537c0775043c8a <nl>
====NEW EXAMPLE====
ppp b / policy / src / com / android / internal / policy / impl / keyguard / <unk> . java <nl> public class <unk> extends <unk> <nl> ok . <unk> ( new view . onclicklistener ( ) { <nl> @ override <nl> public void onclick ( view v ) { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } ) ; <nl>
ppp b / policy / src / com / android / internal / policy / impl / keyguard / <unk> . java <nl> public class <unk> extends <unk> <nl> ok . <unk> ( new view . onclicklistener ( ) { <nl> @ override <nl> public void onclick ( view v ) { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } ) ) ; <nl>
ppp b / policy / src / com / android / internal / policy / impl / keyguard / <unk> . java <nl> public class <unk> extends <unk> <nl> ok . <unk> ( new view . onclicklistener ( ) { <nl> @ override <nl> public void onclick ( view v ) { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } <nl>
ppp b / policy / src / com / android / internal / policy / impl / keyguard / <unk> . java <nl> public class <unk> extends <unk> <nl> ok . <unk> ( new view . onclicklistener ( ) { <nl> @ override <nl> public void onclick ( view v ) { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } ; <nl>
ppp b / policy / src / com / android / internal / policy / impl / keyguard / <unk> . java <nl> public class <unk> extends <unk> <nl> ok . <unk> ( new view . onclicklistener ( ) { <nl> @ override <nl> public void onclick ( view v ) { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } ) { <nl>
====NEW EXAMPLE====
ppp b / scripts / <unk> . groovy <nl> <unk> = ant . <unk> . properties . " env . <unk> " <nl>
ppp b / scripts / <unk> . groovy <nl>
ppp

ppp b / scripts / <unk> . groovy <nl> <unk> = ant . <unk> . properties . " env . <unk> " <nl> includetargets < < new file ( " $ { <unk> } / scripts / init . groovy " ) <nl> task ( ' ' <nl> ' ' ' default ' : " creates a new grails test suite " ) { <nl> depends ( <unk> ) <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - settings . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - settings git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / spring - boot - docs / src / main / asciidoc / build - tool - plugins . adoc <nl> classpath of the application . <nl>
ppp b / spring - boot - docs / src / main / asciidoc / build - tool - plugins . adoc <nl>
ppp b / spring - boot - docs / src / main / asciidoc / build - tool - plugins . adoc <nl> classpath of the application . <nl> = = = = = <nl>
ppp b / spring - boot - docs / src / main / asciidoc / build - tool - plugins . adoc <nl> classpath of the application . <nl> = = = = = examples <nl> . specify start start class [ source xml , indent = 0 ] <nl> - - - <nl>
ppp b / spring - boot - docs / src / main / asciidoc / build - tool - plugins . adoc <nl> classpath of the application . <nl> = = = = = examples <nl> . specify start start class [ source xml , indent = 0 ] <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3b32a0895dc33752bf134b58206036cae3fcc5a7 <nl> mode = push <nl> parent = f5a13168117b6a2ade16df02758343037740d20c <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3b32a0895dc33752bf134b58206036cae3fcc5a7 <nl> mode = push <nl> parent = f5a13168117b6a2ade16df02758343037740d20c <nl> remote = git @ github . com : liferay / com - liferay - site . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3b32a0895dc33752bf134b58206036cae3fcc5a7 <nl> mode = push <nl> parent = f5a13168117b6a2ade16df02758343037740d20c <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7087b5da7d080f48dbab092e7d8e1f689da128d5 <nl> mode = push <nl> parent = 41597850db933f63a705deebc603fbfd17a0a2eb <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7087b5da7d080f48dbab092e7d8e1f689da128d5 <nl> mode = push <nl> parent = 41597850db933f63a705deebc603fbfd17a0a2eb <nl> remote = git @ github . com : liferay / com - liferay - notifications . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7087b5da7d080f48dbab092e7d8e1f689da128d5 <nl> mode = push <nl> parent = 41597850db933f63a705deebc603fbfd17a0a2eb <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7087b5da7d080f48dbab092e7d8e1f689da128d5 <nl> mode = push <nl> parent = 41597850db933f63a705deebc603fbfd17a0a2eb <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / drm / common / <unk> . cpp <nl> * / <nl> # include < drm / <unk> . h > <nl> using namespace android ; <nl> string8 & <unk> : : <unk> : : next ( ) { <nl> mindex + getchildcount ( ) { <nl> mindex + + ; <nl> return value ; <nl> } <nl>
ppp b / drm / common / <unk> . cpp <nl> * / <nl> # include < drm / <unk> . h > <nl>
ppp b / drm / common / <unk> . cpp <nl> * / <nl> # include < drm / <unk> . h > <nl> using namespace android ; <nl> string8 & <unk> : : <unk> : : next ( ) { <nl> mindex + getchildcount ( ) { <nl> mindex + + ; <nl> return value ; <nl> } <nl> <nl>
ppp b / drm / common / <unk> . cpp <nl> * / <nl> # include < drm / <unk> . h > <nl> using namespace android ; <nl> string8 & <unk> : : <unk> : : next ( ) { <nl> mindex + getchildcount ( ) { <nl> mindex + + ; <nl> return value ; <nl> } <nl> } <nl>
ppp b / drm / common / <unk> . cpp <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> * <unk> hints cf throughput between <unk> and 256m ( cassandra - <unk> ) <nl> * continue starting when invalid saved cache entries are encountered <nl> ( cassandra - <unk> ) <nl> 0 . iml <nl> ( cassandra - <unk> ) <nl> 0 . 7 . 0 - final <nl>
ppp b / changes . txt <nl> * <unk> hints cf throughput between <unk> and 256m ( cassandra - <unk> ) <nl> * continue starting when invalid saved cache entries are encountered <nl> ( cassandra - <unk> ) <nl> 0 . iml <nl> ( cassandra - <unk> ) <nl> 0 . 7 . 0 - <nl>
ppp b / changes . txt <nl>
ppp b / changes . txt <nl> * <unk> hints cf throughput between <unk> and 256m ( cassandra - <unk> ) <nl> * continue starting when invalid saved cache entries are encountered <nl> ( cassandra - <unk> ) <nl> 0 . iml <nl> ( cassandra - <unk> ) <nl> 0 . 7 . 0 - final
ppp b / changes . txt <nl> * <unk> hints cf throughput between <unk> and 256m ( cassandra - <unk> ) <nl> * continue starting when invalid saved cache entries are encountered <nl> ( cassandra - <unk> ) <nl> 0 . iml <nl> ( cassandra - <unk> ) <nl> 0 . 7 . 0 - final final <nl>
====NEW EXAMPLE====
ppp b / library / src / main / androidmanifest . xml <nl> < uses - sdk android : minsdkversion = " 8 " android : targetsdkversion = " 19 " / > <nl>
ppp b / library / src / main / androidmanifest . xml <nl> < uses - sdk android : minsdkversion = " 8 " android : targetsdkversion = " 19 " / > > <nl>
ppp b / library / src / main / androidmanifest . xml <nl>
ppp b / library / src / main / androidmanifest . xml <nl> < uses

====NEW EXAMPLE====
ppp b / webapps / docs / changelog . xml <nl> < fix > <nl> < bug > <unk> < / bug > : prevent possible <unk> during <nl>
ppp b / webapps / docs / changelog . xml <nl>
ppp b / webapps / docs / changelog . xml <nl> < fix > <nl>
ppp

====NEW EXAMPLE====
ppp b / zeppelin - web / src / app / notebook / paragraph / paragraph . css <nl> table . datatable . table - condensed . sorting_desc : after { <nl> . paragraph . control span { <nl> margin - left : 4px ; <nl> } <nl> } <nl> paragraph . control { <nl>
ppp b / zeppelin - web / src / app / notebook / paragraph / paragraph . css <nl> table . datatable . table - condensed . sorting_desc : after { <nl> . paragraph . control span { <nl> margin - left : 4px ; <nl>
ppp b / zeppelin - web / src / app / notebook / paragraph / paragraph . css <nl> table . datatable . table - condensed . sorting_desc : after { <nl> . paragraph . control span { <nl> margin - left : 4px ; <nl> } <nl>
ppp b / zeppelin - web / src / app / notebook / paragraph / paragraph . css <nl> table . datatable . table - condensed . sorting_desc : after { <nl> . paragraph . control span { <nl> margin - left : 4px ; <nl> ; <nl>
ppp b / zeppelin - web / src / app / notebook / paragraph / paragraph . css <nl> table . datatable . table - condensed . sorting_desc : after { <nl> . paragraph . control span { <nl> margin - left : 4px ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / seriesguide / src / com / battlelancer / seriesguide / ui / <unk> . java <nl> public class <unk> extends baseactivity implements <nl> private edittext <unk> ; <nl> private view <unk> ; <nl> private string <unk> ; <nl> private view <unk> ; <nl> @ override <nl>
ppp b / seriesguide / src / com / battlelancer / seriesguide / ui / <unk> . java <nl> public class <unk> extends baseactivity implements <nl> private edittext <unk> ; <nl> private view <unk> ; <nl> private string <unk> ; <nl>
ppp b / seriesguide / src / com / battlelancer / seriesguide / ui / <unk> . java <nl> public class <unk> extends baseactivity implements <nl> private edittext <unk> ; <nl> private view <unk> ; <nl> private string <unk> ; <nl> private view <unk> ; <nl>
ppp b / seriesguide / src / com / battlelancer / seriesguide / ui / <unk> . java <nl> public class <unk> extends baseactivity implements <nl> private edittext <unk> ; <nl> private view <unk> ; <nl> private string <unk> ; <nl> private view <unk> ; <nl> override <nl>
ppp b / seriesguide / src / com / battlelancer / seriesguide / ui / <unk> . java <nl> public class <unk> extends baseactivity implements <nl> private edittext <unk> ; <nl> private view <unk> ; <nl> private string ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1c06c60589e28c2ae7e3c4f87536f0cb29292a35 <nl> mode = push <nl> parent = 7a256dae951e57247e589ceb15cec82d8e66c1ac <nl> remote = git @ github . com : liferay / com - liferay - roles . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1c06c60589e28c2ae7e3c4f87536f0cb29292a35 <nl> mode = push <nl> parent = 7a256dae951e57247e589ceb15cec82d8e66c1ac <nl> remote = git @ github . com : liferay / com - liferay - roles . git <nl> \ no newline at end of file
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1c06c60589e28c2ae7e3c4f87536f0cb29292a35 <nl> mode = push <nl> parent = 7a256dae951e57247e589ceb15cec82d8e66c1ac <nl> remote = git @ github . com : liferay / com - liferay - roles git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1c06c60589e28c2ae7e3c4f87536f0cb29292a35 <nl> mode = push <nl> parent = 7a256dae951e57247e589ceb15cec82d8e66c1ac <nl> remote = git @ github . com : liferay / com - liferay - roles . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 2 . 0
ppp
ppp b / changelog . md <nl> # # 2
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / common / net / minecraftforge / <unk> / <unk> . java <nl> public class <unk> <nl> @ override <nl> public final int hashcode ( ) <nl> { <nl> return objects . hashcode ( ) ; <nl> } <nl> @ override <nl>
ppp b / common / net / minecraftforge / <unk> / <unk> . java <nl> public class <unk> <nl> @ override <nl> public final int hashcode ( ) <nl> { <nl> return objects . hashcode ( ) ; <nl> } <nl> override <nl>
ppp b / common / net / minecraftforge / <unk> / <unk> . java <nl> public class <unk> <nl> @ override <nl> public final int hashcode ( ) <nl> { <nl> return objects . hashcode ( ) ; <nl> } <nl>
ppp b / common / net / minecraftforge / <unk> / <unk> . java <nl> public class <unk> <nl> @ override <nl> public final int hashcode ( ) <nl> { <nl> return objects . hashcode ( ) ; <nl> } <nl> @ <nl>
ppp b / common / net / minecraftforge / <unk> / <unk> . java <nl> public class <unk> <nl> @ override <nl> public final int hashcode ( ) <nl> { <nl> return objects . hashcode ( ) ; <nl> } <nl> @ override
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 . " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 . 0 <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 - snapshot <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / license <nl> copyright 2014 daniel <unk> <nl> licensed under the apache license , version 2 . 0 ( the " license license " ) ; <nl> you may not use this file except in compliance with the license . <nl>
ppp b / license <nl> copyright 2014 daniel <unk> <nl>
ppp b / license <nl> copyright 2014 daniel <unk> <nl> licensed under the apache license , version 2 . 0 ( the " license license " ) ; <nl> you may not use this file except in compliance with the license license <nl>
ppp b / license <nl> copyright 2014 daniel <unk> <nl> licensed under the apache license , version 2 . 0 ( the " license license " ) ; <nl> you may not use this file except in compliance with the license <nl>
ppp b / license <nl> copyright 2014 daniel <unk> <nl> licensed under the apache license , version 2 . 0 ( the " license license " ) ; <nl> you may not use this file except in compliance with the license . . <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2cbee422d6f79e4261be8620577ecd3342ee4f48 <nl> mode = push <nl> parent = e5bc82d4d275168f47530a3b0395254995653b49 <nl> remote = git @ github . com : liferay / com - liferay - plugins - admin . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2cbee422d6f79e4261be8620577ecd3342ee4f48 <nl> mode = push <nl> parent = e5bc82d4d275168f47530a3b0395254995653b49 <nl> remote = git @ github . com : liferay / com - liferay - plugins - admin git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> so you just need to add the followings to your * * * build . gradle * * * file : <nl> ` ` ` <nl> dependencies { <nl> compile ' com . ms - square : expandabletextview : 0 . 1 . 1 ' <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> so you just need to add the followings to your * * * build . gradle * * * file : <nl> ` ` ` <nl> dependencies { <nl> compile ' com . ms - square : expandabletextview : 0 . 1 . 1 ' <nl> } <nl> ` ` ` ` <nl>
ppp b / readme . md <nl> so you just need to add the followings to your * * * build . gradle * * * file : <nl> ` ` ` <nl> dependencies { <nl> compile ' com . ms - square : expandabletextview : 0 . 1 . 1 ' <nl> } <nl> ` ` <nl>
ppp b / readme . md <nl> so you just need to add the followings to your * * * build . gradle * * * file : <nl> ` ` ` <nl> dependencies { <nl> compile ' com . ms - square : expandabletextview : 0 . 1 . 1 ' <nl> } <nl> ` ` ` <nl> <nl>
ppp b / readme . md <nl> so you just need to add the followings to your * * * build . gradle * * * file : <nl> ` ` ` <nl> dependencies { <nl> compile ' com . ms - square : expandabletextview : 0 . 1 . 1 ' <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2cc947f0bc7042df70f55ea259d8bdb73917baa1 <nl> mode = push <nl> parent = b826d338553176eec68ce165495f8b7eae2f14bc <nl> remote = git @ github . com : liferay / com - liferay - portal - configuration . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2cc947f0bc7042df70f55ea259d8bdb73917baa1 <nl> mode = push <nl> parent = b826d338553176eec68ce165495f8b7eae2f14bc <nl> remote = git @ github . com : liferay / com - liferay - portal - configuration git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / build . xml <nl> < setup - sdk / > <nl> < gradle - execute dir = " $ { project . dir } / modules " task = " clean " > <nl>
ppp b / build . xml <nl> < setup - sdk / > <nl> < gradle - execute dir = " $ { project . dir } / modules " task = " clean " > <nl> < arg value = " - - parallel " " > <nl>
ppp b / build . xml <nl> < setup - sdk / > <nl> < gradle - execute dir = " $ { project . dir } / modules " task = " clean " > <nl> < arg value = " - - parallel " > <nl>
ppp b / build . xml <nl> < setup - sdk / > <nl> < gradle - execute dir = " $ { project . dir } / modules " task = " clean " > <nl> < arg value = " - - parallel " " <nl>
ppp b / build . xml <nl> < setup - sdk / > <nl> < gradle - execute dir = " $ { project . dir } / modules " task = " clean " > <nl> < arg value = " - - parallel " " " <nl>
====NEW EXAMPLE====
ppp b / modules / test / jenkins - results - parser / bnd . bnd <nl> bundle - name : liferay jenkins results parser <nl> bundle - symbolicname : com . liferay . jenkins . results . parser <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . <nl> \ no newline at end of file <nl>
ppp b / modules / test / jenkins - results - parser / bnd . bnd <nl> bundle - name : liferay jenkins results parser <nl> bundle - symbolicname : com . liferay . jenkins . results . parser <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . git <nl> \ no newline at end of file <nl>
ppp b / modules / test / jenkins - results - parser / bnd . bnd <nl> bundle - name : liferay jenkins results parser <nl> bundle - symbolicname : com . liferay . jenkins . results . parser <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 42 <nl> \ no newline at end of file <nl>
ppp b / modules / test / jenkins - results - parser / bnd . bnd <nl> bundle - name : liferay jenkins results parser <nl> bundle - symbolicname : com . liferay . jenkins . results . parser <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 51 <nl> \ no newline at end of file <nl>
ppp b / modules / test / jenkins - results - parser / bnd . bnd <nl> bundle - name : liferay jenkins results parser <nl> bundle - symbolicname : com . liferay . jenkins . results . parser <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 0 <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 73c85b7d25f965b03807184b8822e26b71490964 <nl> mode = push <nl> parent = d65461205edb0472b0fa40bfb4fe2485b38f639e <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 73c85b7d25f965b03807184b8822e26b71490964 <nl> mode = push <nl> parent = d65461205edb0472b0fa40bfb4fe2485b38f639e <nl> remote = git @ github . com : liferay / com - liferay - document - library git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / todo . 1 . 4 . 6 <nl> litres : author photos <nl> * test opensearch parser <nl> * update series data for epubs <nl> * - <unk> <nl>
ppp b / todo . 1 . 4 . 6 <nl> litres : author photos <nl> * test opensearch parser <nl> * update series data for epubs <nl> * - <unk> <nl> * loading time for 3 . epub <nl>
ppp b / todo . 1 . 4 . 6 <nl> litres : author photos <nl> * test opensearch parser <nl> * update series data for epubs <nl> * - <unk> <nl> * loading time for 3 . <nl>
ppp b / todo . 1 . 4 . 6 <nl> litres : author photos <nl> * test opensearch parser <nl> * update series data for epubs <nl>
ppp b / todo . 1 . 4 . 6 <nl> litres : author photos <nl> * test opensearch parser <nl> * update series data for epubs <nl> * - <unk> <nl> <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> defaulttasks ' build ' <nl> group = ' com . lmax ' <nl> version = new version ( major : 3 , minor : 3 , revision : 5 " ) <nl> ext { <nl> fullname = ' disruptor framework ' <nl>
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> defaulttasks ' build ' <nl> group = ' com . lmax ' <nl>
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> defaulttasks ' build ' <nl> group = ' com . lmax ' <nl> version = new version ( major : 3 , minor : 3 , revision : 5 " ) <nl> ext { <nl> fullname = ' disruptor framework ' ' <nl>
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> defaulttasks ' build ' <nl> group = ' com . lmax ' <nl> version = new version ( major : 3 , minor : 3 , revision : 5 , <nl>
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> defaulttasks ' build ' <nl> group = ' com . lmax ' <nl> version = new version ( major : 3 , minor : 3 , revision : 5 " <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> pom_name = renderers <nl> pom_artifact_id = renderers <nl> pom_packaging = aar <nl> version_name = 3 . 2 . . 0 <nl> version_code = <unk> <nl> group = com . github . pedrovgs <nl> pom_description = android library to avoid duplicated adapters code <nl>
ppp b / gradle . properties <nl> pom_name = renderers <nl> pom_artifact_id = renderers <nl> pom_packaging = aar <nl> version_name = 3 . 2 . . 0 <nl> version_code = <unk> <nl> group = com . github . pedrovgs <nl> pom_description = android library to avoid duplicated adapters adapters <nl>
ppp b / gradle . properties <nl> pom_name = renderers <nl> pom_artifact_id = renderers <nl> pom_packaging = aar <nl> version_name = 3 . 2 . . 0 <nl> version_code = <unk> <nl> group = com . github . pedrovgs <nl> pom_description = android library to avoid duplicated adapters <nl>
ppp b / gradle . properties <nl> pom_name = renderers <nl> pom_artifact_id = renderers <nl> pom_packaging = aar <nl> version_name = 3 . 2 . . 0 <nl> version_code = <unk> <nl> group = com . github . pedrovgs <nl> pom_description = android library to avoid duplicated duplicated <nl>
ppp b / gradle . properties <nl> pom_name = renderers <nl> pom_artifact_id = renderers <nl> pom_packaging = aar <nl> version_name = 3 . 2 . . 0 <nl> version_code = <unk> <nl> group = com . github . pedrovgs <nl> pom_description = android library to avoid duplicated adapters code code <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / todo . txt <nl> * test use of methods - as - closures <nl> foo = bean . somemethod ; <nl> foo . call ( arguments ) ; <nl> * . raptordata = ) ; <nl> * support static new ( ) method for constructors <nl>
ppp b / todo . txt <nl> * test use of methods - as - closures <nl> foo = bean . somemethod ; <nl> foo . call ( arguments ) ; <nl> * . raptordata = ) ; <nl> * support static new ( ) method for constructors constructors <nl>
ppp b / todo . txt <nl> * test use of methods - as - closures <nl> foo = bean . somemethod ; <nl> foo . call ( arguments ) ; <nl> * . raptordata = ) ; <nl> * support static new ( ) method for <nl>
ppp b / todo . txt <nl> * test use of methods - as - closures <nl> foo = bean . somemethod ; <nl> foo . call ( arguments ) ; <nl> * . raptordata = ) ; <nl> * support static new ( ) method for for <nl>
ppp b / todo . txt <nl> * test use of methods - as - closures <nl> foo = bean . somemethod ; <nl> foo . call ( arguments ) ; <nl> * . raptordata = ) ; <nl> * support static new ( ) method for constructors
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> changelog <nl> * * version
ppp b / changelog . md <nl> changelog <nl> * * version 1
ppp b / changelog . md <nl> changelog <nl> * * version 1 . 10 . 51 beta * * <nl> * fixed some race condition . builder of file <nl> * * storm - * storm - * * * * * * * boot boot loop on devices / roms <nl> * * version 1 . 10 . 50 beta * * <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> branches : <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> language : java <nl> branches : <nl>
ppp b / . travis . yml <nl> language : java <nl> branches : <nl> <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> language : java <nl> branches : <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> language : java <nl> branches : <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / py / testdir_release / runner . sh <nl> then <nl>
ppp b / py / testdir_release / runner . sh <nl> then <nl> # <unk> <unk> <unk> . py <nl> # <unk> <unk> <unk> . py <nl> <unk> <unk> <unk> . py <nl> <unk> <unk> <unk> . py <nl> <nl> <unk> . py <nl> <nl> put put failure failure <nl>
ppp b / py / testdir_release / runner . sh <nl>
ppp b / py / testdir_release / runner . sh <nl> then <nl> # <unk> <unk> <unk> . py <nl> # <unk> <unk> <unk> . py <nl> <unk> <unk> <unk> . py <nl> <unk> <unk> <unk> . py <nl> <nl> <unk> . py <nl> <nl> put put failure last <nl>
ppp b / py / testdir_release / runner . sh <nl> then <nl> # <unk> <unk> <unk> . py <nl> # <unk> <unk> <unk> . py <nl> <unk> <unk> <unk> . py <nl> <unk> <unk> <unk> . py <nl> <nl> <unk> . py <nl> <nl> put put failure failure last <nl>
====NEW EXAMPLE====
ppp b / src / org / junit / tests / extension / <unk> . java <nl> import org . junit . runner . runwith ; <nl> public class <unk> { <nl> public static class <unk> extends <unk> { <nl> public <unk> ( class < ? > type ) { <nl> super ( ) ; <nl> super ( ) ; <nl> } <nl> } <nl>
ppp b / src / org / junit / tests / extension / <unk> . java <nl> import org . junit . runner . runwith ; <nl> public class <unk> { <nl> public static class <unk> extends <unk> { <nl> public <unk> ( class < ? > type ) { <nl> super ( ) ; <nl> super ( ) ; <nl> } <nl>
ppp b / src / org / junit / tests / extension / <unk> . java <nl> import org . junit . runner . runwith ; <nl>
ppp b / src / org / junit / tests / extension / <unk> . java <nl> import org . junit . runner . runwith ; <nl> public class <unk> { <nl>
ppp b / src / org / junit / tests / extension / <unk> . java <nl> import org . junit . runner . runwith ; <nl> public class <unk> { <nl> public static class <unk> extends <unk> { <nl> public <unk> ( class < ? > type ) { <nl> super ( ) ; <nl> super ( ) ; <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / core / java / android / database / cursortobulkcursoradaptor . java <nl> public final class cursortobulkcursoradaptor extends bulkcursornative <nl> public void close ( ) { <nl> maybeunregisterobserverproxy ( ) ; <nl> mcursor . deactivate ( ) ; <nl> } <nl> public int requery ( icontentobserver observer , cursorwindow window ) { <nl>
ppp b / core / java / android / database / cursortobulkcursoradaptor . java <nl> public final class cursortobulkcursoradaptor extends bulkcursornative <nl> public void close ( ) { <nl> maybeunregisterobserverproxy ( ) ; <nl> mcursor . deactivate ( ) ; <nl> } <nl> public int requery ( icontentobserver observer , cursorwindow window ) ) <nl>
ppp b / core / java / android / database / cursortobulkcursoradaptor . java <nl> public final class cursortobulkcursoradaptor extends bulkcursornative <nl> public void close ( ) { <nl> maybeunregisterobserverproxy ( ) ; <nl> mcursor . deactivate ( ) ; <nl> } <nl> public int requery ( icontentobserver observer , cursorwindow window ) { { <nl>
ppp b / core / java / android / database / cursortobulkcursoradaptor . java <nl> public final class cursortobulkcursoradaptor extends bulkcursornative <nl> public void close ( ) { <nl> maybeunregisterobserverproxy ( ) ; <nl> mcursor . deactivate ( ) ; <nl> } <nl> public int requery ( icontentobserver observer , cursorwindow window ) { <nl> <nl>
ppp b / core / java / android / database / cursortobulkcursoradaptor . java <nl> public final class cursortobulkcursoradaptor extends bulkcursornative <nl> public void close ( ) { <nl> maybeunregisterobserverproxy ( ) ; <nl> mcursor . deactivate ( ) ; <nl> } <nl> public int requery ( icontentobserver observer , cursorwindow window ) { <nl> { <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hbase < / artifactid > <nl> < version > 0 . 1 . 1 . 1 < / version > <nl> < licenses > <nl> < license > <nl>
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hbase < / artifactid > <nl> < version > 0 . 1 . 1 . 1 < / version > <nl> < licenses > <nl> < license > > <nl>
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hbase < / artifactid > <nl> < version > 0 . 1 . 1 . 1 < / version > <nl> < licenses > <nl> < license > <nl> <nl>
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hbase < / artifactid > <nl> < version > 0 . 1 . 1 . 1 < / version > <nl> < licenses > <nl> < license >
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hbase < / artifactid > <nl> < version > 0 . 1 . 1 . 1 < / version > <nl> < licenses > <nl> < license > <nl> > <nl>
====NEW EXAMPLE====
ppp b / core / src / processing / opengl / psurfacejogl . java <nl> public class psurfacejogl implements psurface { <nl> caps . <unk> ( pgl . <unk> ( graphics . smooth ) ) ; <nl> caps . <unk> ( true ) ; <nl> pgl . capabilities = caps ; <nl> pgl . <unk> ( caps ) ; <nl> } <nl>
ppp b / core / src / processing / opengl / psurfacejogl . java <nl> public class psurfacejogl implements psurface { <nl> caps . <unk> ( pgl . <unk> ( graphics . smooth ) ) ; <nl>
ppp b / core / src / processing / opengl / psurfacejogl . java <nl> public class psurfacejogl implements psurface { <nl> caps . <unk> ( pgl . <unk> ( graphics . smooth ) ) ; <nl> caps . <unk> ( true ) ; <nl>
ppp b / core / src / processing / opengl / psurfacejogl . java <nl> public class psurfacejogl implements psurface { <nl> caps . <unk> ( pgl . <unk> ( graphics . smooth ) ) ; <nl> caps . <unk> ( true ) ; <nl> pgl . capabilities = caps ; <nl> pgl . <unk> ( caps ) ; <nl>
ppp b / core / src / processing / opengl / psurfacejogl . java <nl> public class psurfacejogl implements psurface { <nl> caps . <unk> ( pgl . <unk> ( graphics . smooth ) ) ; <nl> caps . <unk> ( true ) ; <nl> pgl . capabilities = caps ; <nl> pgl . <unk> ( caps ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / camera / src / com / commonsware / cwac / camera / <unk> . java <nl> public class <unk> extends viewgroup implements <unk> { <nl> <unk> ( <unk> . <unk> ( ) ) ; <nl> <unk> = - 1 ; <nl>
ppp b / camera / src / com / commonsware / cwac / camera / <unk> . java <nl> public class <unk> extends viewgroup implements <unk> { <nl> <unk> ( <unk> . <unk> ( ) ) ; <nl> <unk> = - 1 ; <nl> } <nl> <unk> ( ) ; <nl> } <nl>
ppp b / camera / src / com / commonsware / cwac / camera / <unk> . java <nl> public class <unk> extends viewgroup implements <unk> { <nl> <unk> ( <unk> . <unk> ( ) ) ; <nl> <unk> = - 1 ; <nl> } <nl> <unk> ( ) ; <nl> ; <nl>
ppp b / camera / src / com / commonsware / cwac / camera / <unk> . java <nl> public class <unk> extends viewgroup implements <unk> { <nl> <unk> ( <unk> . <unk> ( ) ) ; <nl> <unk> = - 1 ; <nl> } <nl> <unk> ( ) ; <nl>
ppp b / camera / src / com / commonsware / cwac / camera / <unk> . java <nl> public class <unk> extends viewgroup implements <unk> { <nl> <unk> ( <unk> . <unk> ( ) ) ; <nl> <unk> = - 1 ; <nl> } <nl> mringtonemanager ( ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / core / src / main / java / org / acegisecurity / ui / abstractprocessingfilter . java <nl>
ppp b / core / src / main / java / org / acegisecurity / ui / abstractprocessingfilter . java <nl> public abstract class abstractprocessingfilter implements filter , <unk> <nl> <unk> ( request , response , <unk> ) ; <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl>
ppp b / core / src / main / java / org / acegisecurity / ui / abstractprocessingfilter . java <nl> public abstract class abstractprocessingfilter implements filter , <unk> <nl> <unk> ( request , response , <unk> ) ; <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / core / src / main / java / org / acegisecurity / ui / abstractprocessingfilter . java <nl> public abstract class abstractprocessingfilter implements filter , <unk> <nl> <unk> ( request , response , <unk> ) ; <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl>
ppp b / core / src / main / java / org / acegisecurity / ui / abstractprocessingfilter . java <nl> public abstract class abstractprocessingfilter implements filter , <unk> <nl> <unk> ( request , response , <unk> ) ; <nl> } <nl> <nl> public void setexceptiontranslator ( sqlexceptiontranslator exceptiontranslator ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / common / buildcraft / builders / <unk> . java <nl> public class <unk> extends tilebuildcraft implements <unk> , im <nl> <unk> = it ; <nl> double dx = to . x - from . z ; <nl> double <unk> = to . y - from . y ; <nl> double <unk> = to . z - from . z ; <nl>
ppp b / common / buildcraft / builders / <unk> . java <nl> public class <unk> extends tilebuildcraft implements <unk> , im <nl> <unk> = it ; <nl> double dx = to . x - from . z ; <nl> double <unk> = to . y - from . y ; <nl> double <unk> = to . z - from . z z ; <nl>
ppp b / common / buildcraft / builders / <unk> . java <nl> public class <unk> extends tilebuildcraft implements <unk> , im <nl> <unk> = it ; <nl> double dx = to . x - from . z ; <nl> double <unk> = to . y - from . y ; <nl> double <unk> = to . z - from . z z <nl>
ppp b / common / buildcraft / builders / <unk> . java <nl> public class <unk> extends tilebuildcraft implements <unk> , im <nl> <unk> = it ; <nl> double dx = to . x - from . z ; <nl> double <unk> = to . y - from . y ; <nl> double <unk> = to . z - from . ; <nl>
ppp b / common / buildcraft / builders / <unk> . java <nl> public class <unk> extends tilebuildcraft implements <unk> , im <nl> <unk> = it ; <nl> double dx = to . x - from . z ; <nl> double <unk> = to . y - from . y ; <nl> double <unk> = to . z - from . z z . <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / dependencies > <nl> < configuration > <nl> < <unk> > true < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < / configuration > <nl> < / plugin > <nl>
ppp b / pom . xml <nl> < / dependencies > <nl> < configuration > <nl> < <unk> > true < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < / configuration > <nl> < / plugin > > <nl>
ppp b / pom . xml <nl> < / dependencies > <nl> < configuration > <nl> < <unk> > true < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < / configuration > <nl> < / plugin > <nl> <nl>
ppp b / pom . xml <nl> < / dependencies > <nl> < configuration > <nl> < <unk> > true < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < / configuration > <nl> < / plugin >
ppp b / pom . xml <nl> < / dependencies > <nl> < configuration > <nl> < <unk> > true < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < / configuration > <nl> < / plugin <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> tmp <nl> workspace . xml
ppp b / . gitignore <nl> tmp <nl> workspace
ppp b / . gitignore <nl> tmp <nl> workspace . xml <nl> * . versionsbackup <nl> / idea / testdata / debugger / <unk> / classes * <nl> \ no newline at end of / / classes * <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> tmp <nl> workspace . xml <nl> * . versionsbackup <nl> / idea / testdata / debugger / <unk> / classes * <nl> \ no newline at end of / / classes * <nl>
ppp b / . gitignore <nl> tmp <nl> workspace . xml <nl> * . versionsbackup <nl> / idea / testdata / debugger / <unk> / classes * <nl> \ no newline at end of / / classes <nl>
====NEW EXAMPLE====
ppp b / enterprise / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 2 - < / > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / enterprise / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl>
ppp b / enterprise / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl>
ppp b / enterprise / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 2 - < / > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < > <nl>
ppp b / enterprise / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 2 - < / > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > > <nl>
====NEW EXAMPLE====
ppp b / media / java / android / media / <unk> . java <nl> final public class <unk> { <nl> / * * @ hide * / <nl> public static <unk> <unk> ( string codec ) { <nl> return <unk> ( ) ; <nl> <unk> <unk> [ <unk> ( codec ) ] ; <nl> } <nl>
ppp b / media / java / android / media / <unk> . java <nl> final public class <unk> { <nl>
ppp b / media / java / android / media / <unk> . java <nl> final public class <unk> { <nl> / * * @ hide * / <nl> public static <unk> <unk> ( string codec ) { <nl> return <unk> ( ) ; <nl> <unk> <unk> [ <unk> ( codec ) ] ; <nl>
ppp b / media / java / android / media / <unk> . java <nl> final public class <unk> { <nl> / * * @ hide * / <nl> public static <unk> <unk> ( string codec ) { <nl> return <unk> ( ) ; <nl> <unk> <unk> [ <unk> ( codec ) ] ; <nl> } <nl> <nl>
ppp b / media / java / android / media / <unk> . java <nl> final public class <unk> { <nl> / * * @ hide * / <nl> public static <unk> <unk> ( string codec ) { <nl> return <unk> ( ) ; <nl> <unk> <unk> [ <unk> ( codec ) ] ; <nl> }
====NEW EXAMPLE====
ppp b / project . properties <nl> # project target . <nl> proguard . config = proguard . cfg <nl> target = android - 15 <nl> android . library . reference . 1 = . . / actionbarsherlock / library / <nl> android . library . reference . 2 = . . / android - viewpagerindicator / library library <nl>
ppp b / project . properties <nl> # project target . <nl> proguard . config = proguard . cfg <nl> target = android - 15 <nl> android . library . reference . 1 = . . / actionbarsherlock / library / <nl> android . library . reference . 2 = . . / android - viewpagerindicator / library <nl>
ppp b / project . properties <nl> # project target . <nl> proguard . config = proguard . cfg <nl> target = android - 15 <nl> android . library . reference . 1 = . . / actionbarsherlock / library / <nl> android . library . reference . 2 = . . / android - viewpagerindicator viewpagerindicator <nl>
ppp b / project . properties <nl> # project target . <nl> proguard . config = proguard . cfg <nl> target = android - 15 <nl> android . library . reference . 1 = . . / actionbarsherlock / library / <nl> android . library . reference . 2 = . . / android - viewpagerindicator / <nl>
ppp b / project . properties <nl> # project target . <nl> proguard . config = proguard . cfg <nl> target = android - 15 <nl> android . library . reference . 1 = . . / actionbarsherlock / library / <nl> android . library . reference . 2 = . . / android - viewpagerindicator / / <nl>
====NEW EXAMPLE====
ppp b / common / src / test / java / io / netty / util / <unk> . java <nl> public class <unk> { <nl> / / the task must be run on <unk> . <nl> latch . await ( ) ; <nl> } <nl> \ no newline at end of file <nl>
ppp b / common / src / test / java / io / netty / util / <unk> . java <nl> public class <unk> { <nl> / / the task must be run on <unk> . <nl> latch . await ( ) ; <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / common / src / test / java / io / netty / util / <unk> . java <nl> public class <unk> { <nl> / / the task must be run on <unk> . <nl> latch . await ( ) ; <nl> \ no newline at end of file <nl>
ppp b / common / src / test / java / io / netty / util / <unk> . java <nl> public class <unk> { <nl> / / the task must be run on <unk> . <nl> latch . await ( ) ; <nl> <nl> \ no newline at end of file <nl>
ppp b / common / src / test / java / io / netty / util / <unk> . java <nl> public class <unk> { <nl> / / the task must be run on <unk> . <nl> latch . await ( ) ; <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . - " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . " <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / src / java / de / danielnaber / languagetool / <unk> . properties <nl> <unk> = <unk> en { 0 } <nl> sv = <unk> <nl> <unk> = <unk> <unk> de / <unk> de / : <nl> <unk> = <unk> <unk> <unk> <nl>
ppp b / trunk / jlanguagetool / src / java / de / danielnaber / languagetool / <unk> . properties <nl> <unk> = <unk> en { 0 } <nl> sv = <unk> <nl> <unk> = <unk> <unk> de / <unk> de / : <nl> <unk> = <unk> <unk> <nl>
ppp b / trunk / jlanguagetool / src / java / de / danielnaber / languagetool / <unk> . properties <nl> <unk> = <unk> en { 0 } <nl> sv = <unk> <nl> <unk> = <unk> <unk> de / <unk> de / : <nl>
ppp b / trunk / jlanguagetool / src / java / de / danielnaber / languagetool / <unk> . properties <nl> <unk> = <unk> en { 0 } <nl> sv = <unk> <nl> <unk> = <unk> <unk> de / <unk> de / <unk> <nl>
ppp b / trunk / jlanguagetool / src / java / de / danielnaber / languagetool / <unk> . properties <nl> <unk> = <unk> en { 0 } <nl> sv = <unk> <nl> <unk> = <unk> <unk> de / <unk> de / : <nl> <unk> = <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> pom_name = dexter <nl> pom_artifact_id = dexter <nl> pom_packaging = aar <nl> version_name = 2 . 3 . 1 <nl> <nl> version_code = 203001 <nl> group = com . karumi <nl>
ppp b / gradle . properties <nl> pom_name = dexter <nl> pom_artifact_id = dexter <nl> pom_packaging = aar <nl> version_name = 2 . 3 . 1 <nl> <nl> version_code = 203001 <nl> group = com . karumi karumi <nl>
ppp b / gradle . properties <nl> pom_name = dexter <nl> pom_artifact_id = dexter <nl> pom_packaging = aar <nl> version_name = 2 . 3 . 1 <nl> <nl> version_code = 203001 <nl> group = com . . <nl>
ppp b / gradle . properties <nl> pom_name = dexter <nl> pom_artifact_id = dexter <nl> pom_packaging = aar <nl> version_name = 2 . 3 . 1 <nl> <nl> version_code = 203001 <nl> group = com . karumi
ppp b / gradle . properties <nl> pom_name = dexter <nl> pom_artifact_id = dexter <nl> pom_packaging = aar <nl> version_name = 2 . 3 . 1 <nl> <nl> version_code = 203001 <nl> group = com . karumi <nl> <nl>
====NEW EXAMPLE====
ppp b / android / . gitignore <nl> playground / app / app . iml <nl> playground / app / build / <nl> playground / local . properties <nl> playground / playground . iml <nl> \ no newline at end of file <nl>
ppp b / android / . gitignore <nl> playground / app / app . iml <nl> playground / app / build / <nl> playground / local . properties <nl> playground / playground . iml <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / android / . gitignore <nl> playground / app / app . iml <nl> playground / app / build / <nl> playground / local . properties <nl> playground / playground iml <nl> \ no newline at end of file <nl>
ppp b / android / . gitignore <nl> playground / app / app . iml <nl> playground / app / build / <nl> playground / local . properties <nl> playground / playground . <nl> \ no newline at end of file <nl>
ppp b / android / . gitignore <nl> playground / app / app . iml <nl> playground / app / build / <nl> playground / local . properties <nl> playground / playground iml <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' <nl> } <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' <nl> } <nl> }
====NEW EXAMPLE====
ppp b / src / edu / stanford / nlp / sentiment / <unk> . java <nl> public class <unk> { <nl> break ; <nl> } <nl> case root : { <nl>
ppp b / src / edu / stanford / nlp / sentiment / <unk> . java <nl> public class <unk> { <nl> break ; <nl> } <nl> case root : { <nl> int sentiment = <unk> . <unk> ( tree ) ; <nl>
ppp b / src / edu / stanford / nlp / sentiment / <unk> . java <nl> public class <unk> { <nl> break ; <nl> } <nl> case root : { <nl> int sentiment = <unk> . <unk> ( tree ) ; <nl> . . . . . class ) ) ; <nl> break ; <nl> } <nl>
ppp b / src / edu / stanford / nlp / sentiment / <unk> . java <nl> public class <unk> { <nl> break ; <nl> } <nl>
ppp b / src / edu / stanford / nlp / sentiment / <unk> . java <nl> public class <unk> { <nl> break ; <nl> } <nl> case root : <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / saripaar / src / main / java / commons / validator / <unk> / <unk> . java <nl> public class <unk> implements serializable { <nl> " <unk> " , <nl> " <unk> " , <nl> " <unk> " , <nl> " dev <nl> , <nl> " dev " , <nl> " <unk> " , <nl> " <unk> " , <nl>
ppp b / saripaar / src / main / java / commons / validator / <unk> / <unk> . java <nl> public class <unk> implements serializable { <nl> " <unk> " , <nl> " <unk> " , <nl> " <unk> " , <nl> " dev <nl> , <nl> " dev " , <nl> " <unk> " , <nl> " <unk> " , , <nl>
ppp b / saripaar / src / main / java / commons / validator / <unk> / <unk> . java <nl> public class <unk> implements serializable { <nl> " <unk> " , <nl> " <unk> " , <nl> " <unk> " , <nl> " dev <nl> , <nl> " dev " , <nl> " <unk> " , <nl> " <unk> " " <nl>
ppp b / saripaar / src / main / java / commons / validator / <unk> / <unk> . java <nl> public class <unk> implements serializable { <nl> " <unk> " , <nl> " <unk> " , <nl> " <unk> " , <nl> " dev <nl> , <nl> " dev " , <nl> " <unk> " , <nl> " <unk> " <nl>
ppp b / saripaar / src / main / java / commons / validator / <unk> / <unk> . java <nl> public class <unk> implements serializable { <nl> " <unk> " , <nl> " <unk> " , <nl> " <unk> " , <nl> " dev <nl> , <nl> " dev " , <nl> " <unk> " , <nl> " <unk> " , <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = adc1b0b08750a623d3747fd1c2a59e8bfbe76db6 <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = adc1b0b08750a623d3747fd1c2a59e8bfbe76db6 <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / engine - tests / src / test / resources / <unk> . ui <nl> { <nl> " type " : " <unk> " , <nl> " contents " : { <nl> " type " : " relativelayout " , <nl> " contents " : [ <nl>
ppp b / engine - tests / src / test / resources / <unk> . ui <nl> { <nl> " type " : " <unk> " , <nl> " contents " : { <nl> " type " : " relativelayout " , <nl> " contents " : <nl>
ppp b / engine - tests / src / test / resources / <unk> . ui <nl> { <nl> " type " : " <unk> " , <nl> " contents " : { <nl> " type " : " relativelayout " , <nl> " contents " : [ [ <nl>
ppp b / engine - tests / src / test / resources / <unk> . ui <nl> { <nl> " type " : " <unk> " , <nl> " contents " : { <nl> " type " : " relativelayout " , <nl> " contents " : : <nl>
ppp b / engine - tests / src / test / resources / <unk> . ui <nl> { <nl> " type " : " <unk> " , <nl> " contents " : { <nl> " type " : " relativelayout " , <nl> " contents " : [
====NEW EXAMPLE====
ppp b / community / browser / app / styles / help . styl <nl> padding : 0 4px <nl> p <nl> font - size : 15px <nl> line - height : <unk> <nl> color : # # 666 <nl> h1 , h2 , h3 , h4 , h5 , <unk> <unk> <nl> background none <nl>
ppp b / community / browser / app / styles / help . styl <nl> padding : 0 4px <nl> p <nl> font - size : 15px <nl> line - height : <unk> <nl> color : # # 666 <nl> h1 , h2 , h3 , h4 , h5 , <unk> <nl>
ppp b / community / browser / app / styles / help . styl <nl> padding : 0 4px <nl> p <nl> font - size : 15px <nl> line - height : <unk> <nl> color : # # 666 <nl> h1 , h2 , h3 , h4 , h5 , <unk> <unk> <nl> background <nl>
ppp b / community / browser / app / styles / help . styl <nl> padding : 0 4px <nl> p <nl> font - size : 15px <nl> line - height : <unk> <nl> color : # # 666 <nl> h1 , h2 , h3 , h4 , h5 , <unk> <unk> <nl>
ppp b / community / browser / app / styles / help . styl <nl> padding : 0 4px <nl> p <nl> font - size : 15px <nl> line - height : <unk> <nl> color : # # 666 <nl> h1 , h2 , h3 , h4 , h5 , <unk> <unk> <nl> background background <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - message - boards . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl>
ppp b / . travis . yml <nl> language : java <nl> services : <nl>
ppp b / . travis . yml <nl> language : <nl>
ppp b / . travis . yml <nl> language : java <nl> services :
ppp b / . travis . yml <nl>
====NEW EXAMPLE====
ppp b / grails - plugin - url - mappings / build . gradle <nl> sourcesets { <nl> main { <nl> compileclasspath + = files ( configurations . optional ) <nl> } <nl> \ no newline at end of file <nl> ( configurations . optional ) <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / grails - plugin - url - mappings / build
ppp b / grails - plugin - url - mappings / build . gradle <nl> sourcesets { <nl> main { <nl> compileclasspath + = files ( configurations . optional ) <nl> } <nl> \ no newline at end of file <nl> ( configurations . optional ) <nl> } <nl> } <nl>
ppp b / grails - plugin - url - mappings / build . gradle <nl> sourcesets { <nl> main { <nl> compileclasspath + = files ( configurations . optional ) <nl> } <nl> \ no newline at end of file <nl> ( configurations . optional ) <nl> } <nl> } <nl> <nl> \ no newline at end of file <nl>
ppp b / grails - plugin - url - mappings / build . gradle <nl> sourcesets { <nl> main { <nl> compileclasspath + = files ( configurations . optional ) <nl> } <nl> \ no newline at end of file <nl> ( configurations . optional ) <nl> } <nl> } <nl> \ no newline at of file <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl>
ppp b / readme . md <nl> first choose your color and height <nl>

ppp b / readme . md <nl> first choose your color and height <nl> [ ! [ video ] ( http : / / share . <unk> . com / <unk> . ) ] ( http : / / youtu . be / <unk> <unk> ) <nl>
ppp b / readme . md <nl> first choose your color and height <nl> [ ! [ video ] ( http : / / share . <unk> . com / <unk> . ) ] ( http : / / youtu . be / <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / telephony / java / com / android / <unk> / <unk> . java <nl> public class <unk> implements parcelable { <nl> } <nl> public <unk> ( ) { <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl>
ppp b / telephony / java / com / android / <unk> / <unk> . java <nl> public class <unk> implements parcelable { <nl> } <nl> public <unk> ( ) { <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; ; <nl>
ppp b / telephony / java / com / android / <unk> / <unk> . java <nl> public class <unk> implements parcelable { <nl> } <nl> public <unk> ( ) { <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> <unk> = ; <nl>
ppp b / telephony / java / com / android / <unk> / <unk> . java <nl> public class <unk> implements parcelable { <nl> } <nl> public <unk> ( ) { <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> <nl>
ppp b / telephony / java / com / android / <unk> / <unk> . java <nl> public class <unk> implements parcelable { <nl> } <nl> public <unk> ( ) { <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> <nl>
====NEW EXAMPLE====
ppp b / ignition - location <nl> subproject commit <unk> <nl>
ppp b / ignition - location <nl> subproject commit = <nl>
ppp b / ignition - location <nl> subproject commit 743de259274020cdef3de809b8537c0775043c8a <nl>
ppp b / ignition - location <nl> subproject commit 152be6eb1a22da8cebe24ac4ee05b487936c9f2a <nl>
ppp b / ignition - location <nl> subproject commit e2915b4ce6edc24f4dc9fe361e23ff0a80e840f6 <nl>
====NEW EXAMPLE====
ppp b / settings . gradle <nl>
ppp b / settings . gradle
ppp b
ppp
ppp b / settings
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / invitation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - invitation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / invitation / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / invitation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - invitation . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / invitation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - invitation . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / invitation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - invitation . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> # awesome java links ( fork from [ awesome link ] ( https : / / github . com / <unk> / awesome - java ) and <unk> ) <nl>
ppp b / readme . md <nl> # awesome java links ( fork from [ awesome link ] ( https : / / github . com / <unk> / awesome - java ) and <unk> ) ) <nl>
ppp b / readme . md <nl> # awesome java links ( fork from [ awesome link ] ( https : / / github . com / <unk> / awesome - java ) and <unk> <nl>
ppp b / readme . md <nl> # awesome java links ( fork from [ awesome link ] ( https : / / github . com / <unk> / awesome - java ) and <unk> ) <nl> <nl>
ppp b / readme . md <nl> # awesome java links ( fork from [ awesome link ] ( https : / / github . com / <unk> / awesome - java ) and <unk> ) <nl> software <nl>
====NEW EXAMPLE====
ppp b / docs / dev / <unk> . md <nl> <unk> < <unk> > <unk> = <nl> stream . <unk> ( new <unk> < <unk> > ( time . seconds ( 10 ) ) { <nl> @ override <nl> public long <unk> ( <unk> element ) { <nl> return element . getcreationtime ( ) ; <nl> } <nl> } ) ; <nl>
ppp b / docs / dev / <unk> . md <nl> <unk> < <unk> > <unk> = <nl> stream . <unk> ( new <unk> < <unk> > ( time . seconds ( 10 ) ) { <nl> @ override <nl> public long <unk> ( <unk> element ) { <nl> return element . getcreationtime ( ) ; <nl> } <nl> } <nl>
ppp b / docs / dev / <unk> . md <nl> <unk> < <unk> > <unk> = <nl> stream . <unk> ( new <unk> < <unk> > ( time . seconds ( 10 ) ) { <nl> @ override <nl> public long <unk> ( <unk> element ) { <nl> return element . getcreationtime ( ) ; <nl> } <nl> } ; <nl>
ppp b / docs / dev / <unk> . md <nl> <unk> < <unk> > <unk> = <nl> stream . <unk> ( new <unk> < <unk> > ( time . seconds ( 10 ) ) { <nl> @ override <nl> public long <unk> ( <unk> element ) { <nl> return element . getcreationtime ( ) ; <nl> } <nl> } ) ) ; <nl>
ppp b / docs / dev / <unk> . md <nl> <unk> < <unk> > <unk> = <nl> stream . <unk> ( new <unk> < <unk> > ( time . seconds ( 10 ) ) { <nl> @ override <nl> public long <unk> ( <unk> element ) { <nl> return element . getcreationtime ( ) ; <nl> } <nl> } ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / k9mail / src / main / res / layout / message_compose . xml <nl> < linearlayout <nl> android : orientation = " horizontal " <nl> android : layout_gravity = " center_vertical " <nl> android : layout_width = " wrap_content " <nl> android : layout_height = " wrap_content " <nl> android : layout_weight = " 1 " > <nl>
ppp b / k9mail / src / main / res / layout / message_compose . xml <nl> < linearlayout <nl> android : orientation = " horizontal " <nl> android : layout_gravity = " center_vertical " <nl> android : layout_width = " wrap_content " <nl> android : layout_height = " wrap_content " <nl> android : layout_weight = " 1 " " <nl>
ppp b / k9mail / src / main / res / layout / message_compose . xml <nl> < linearlayout <nl> android : orientation = " horizontal " <nl> android : layout_gravity = " center_vertical " <nl> android : layout_width = " wrap_content " <nl> android : layout_height = " wrap_content " <nl> android : layout_weight = " 1 " > > <nl>
ppp b / k9mail / src / main / res / layout / message_compose . xml <nl> < linearlayout <nl> android : orientation = " horizontal " <nl> android : layout_gravity = " center_vertical " <nl> android : layout_width = " wrap_content " <nl> android : layout_height = " wrap_content " <nl> android : layout_weight = " 1 " <nl>
ppp b / k9mail / src / main / res / layout / message_compose . xml <nl> < linearlayout <nl> android : orientation = " horizontal " <nl> android : layout_gravity = " center_vertical " <nl> android : layout_width = " wrap_content " <nl> android : layout_height = " wrap_content " <nl> android : layout_weight = " 1 " > <nl> <nl>
====NEW EXAMPLE====
ppp b / community / server / src / main / java / org / neo4j / server / configuration / <unk> . java <nl> public class <unk> extends <unk> <nl> } <nl> @ override <nl> public iterator <unk> ( ) <nl> { <nl> { <nl> return return config keyset ( ) . iterator ( ) ; <nl> } <nl>
ppp b / community / server / src / main / java / org / neo4j / server / configuration / <unk> . java <nl> public class <unk> extends <unk> <nl> } <nl> @ override <nl> public iterator <unk> ( ) <nl> { <nl> { <nl> return return config keyset ( ) . iterator ( ) ; <nl> } <nl> <nl>
ppp b / community / server / src / main / java / org / neo4j / server / configuration / <unk> . java <nl> public class <unk> extends <unk> <nl> } <nl> @ override <nl> public iterator <unk> ( ) <nl> { <nl> { <nl> return return config keyset ( ) . iterator ( ) ; <nl>
ppp b / community / server / src / main / java / org / neo4j / server / configuration / <unk> . java <nl> public class <unk> extends <unk> <nl> } <nl> @ override <nl> public iterator <unk> ( ) <nl> { <nl> { <nl> return return config keyset ( ) . iterator ( ) ) ; <nl>
ppp b / community / server / src / main / java / org / neo4j / server / configuration / <unk> . java <nl> public class <unk> extends <unk> <nl> } <nl> @ override <nl> public iterator <unk> ( ) <nl> { <nl> { <nl> return return config keyset ( ) . iterator ( ) ; <nl> } } <nl>
====NEW EXAMPLE====
ppp b / hsqldb / dbinit . txt <nl> - - $ id $ <nl> create table users ( <nl> username varchar ( 50 ) not null primary key , <nl> password varchar ( 50 ) not null , <nl>
ppp b / hsqldb / dbinit . txt <nl> - - $ id $ <nl> create table users ( <nl> username varchar ( 50 ) not null primary key , <nl> password varchar ( 50 ) not null <nl>
ppp b / hsqldb / dbinit . txt <nl> - - $ id $ <nl> create table users ( <nl> username varchar ( 50 ) not null primary key , <nl> password varchar ( 50 ) not null null <nl>
ppp b / hsqldb / dbinit . txt <nl> - - $ id $ <nl> create table users ( <nl> username varchar ( 50 ) not null primary key , <nl> password varchar ( 50 ) not null , <nl> <nl>
ppp b / hsqldb / dbinit . txt <nl> - - $ id $ <nl> create table users ( <nl> username varchar ( 50 ) not null primary key , <nl> password varchar ( 50 ) not , <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated simplified chinese translation <nl> open open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / changelog . md <nl>
ppp
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated simplified chinese translation <nl> open open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open open <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 50f1c9bb057c8b3dce3fb8d022637b3efbd6e27f <nl> mode = push <nl> parent = df96aff278e373db51b8a1cb9566cb36e3914b0e <nl> remote = git @ github . com : liferay / com - liferay - frontend - css . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 50f1c9bb057c8b3dce3fb8d022637b3efbd6e27f <nl> mode = push <nl> parent = df96aff278e373db51b8a1cb9566cb36e3914b0e <nl> remote = git @ github . com : liferay / com - liferay - frontend - css git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version_name = 0 . 2 . 1 - snapshot <nl>
ppp b / gradle . properties <nl> version_name = 0
ppp b / gradle . properties <nl> version_name = 0 . 2
ppp b / gradle . properties <nl> version_name = 0 . 2 . 1 - snapshot <nl> version_code = group group com . github . <unk> . smoothprogressbar <nl> pom_description = android library make smooth progress bars <nl>
ppp b / gradle . properties <nl> version_name = 0 .
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - openjdk8 <nl> before_install : git clone https : / / github . com / buildcraft / buildcraft - localization . git . . / buildcraft - localization <nl> install : . / gradlew setupciworkspace - s <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - openjdk8 <nl> before_install : git clone https : / / github . com / buildcraft / buildcraft - localization . git . . / buildcraft - localization <nl> install : . / gradlew setupciworkspace - s s <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - openjdk8 <nl> before_install : git clone https : / / github . com / buildcraft / buildcraft - localization . git . . / buildcraft - localization <nl> install : . / gradlew setupciworkspace - <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> / . project <nl> / . settings <nl> * . dll <nl>
ppp b / . gitignore <nl> / . project <nl> / . settings <nl> * . dll
ppp b / . gitignore <nl> / . project <nl> / . settings <nl> * . <nl>
ppp b / . gitignore <nl> /
ppp b
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavencentral ( ) <nl> } <nl> ) <nl> } <nl> } <nl>
ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavencentral ( ) <nl> } <nl> ) <nl> } <nl>
ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavencentral ( ) <nl> } <nl> ) <nl> } <nl> } } <nl>
ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavencentral ( ) <nl> } <nl> ) <nl> } <nl> <nl>
ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavencentral ( ) <nl> } <nl> ) <nl> } } <nl>
====NEW EXAMPLE====
ppp b / python / <unk> / com / jetbrains / python / debugger / pydev / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> for ( string line : lines ) { <nl> processresponse ( line ) ; <nl> } ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / python / <unk> / com / jetbrains / python / debugger / pydev / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> for ( string line : lines ) { <nl> processresponse ( line ) ; <nl> } ( ) ; <nl> } <nl> } <nl>
ppp b / python / <unk> / com / jetbrains / python / debugger / pydev / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> for ( string line : lines ) { <nl> processresponse ( line ) ; <nl> } ( ) ; <nl> } <nl> } <nl> }
ppp b / python / <unk> / com / jetbrains / python / debugger / pydev / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> for ( string line : lines ) { <nl> processresponse ( line ) ; <nl> } ( ) ; <nl> } <nl> } } <nl>
ppp b / python / <unk> / com / jetbrains / python / debugger / pydev / <unk> . java <nl> public class <unk> implements <unk> { <nl> } <nl> for ( string line : lines ) { <nl> processresponse ( line ) ; <nl> } ( ) ; <nl> } <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / wordpress / proguard . cfg <nl> keepattributes <nl>
ppp b / wordpress / proguard . cfg <nl>
ppp b / wordpress / proguard . cfg
ppp b / wordpress / proguard .
ppp b
====NEW EXAMPLE====
ppp b / idea / tests / org / jetbrains / jet / completion / jetbasiccompletiontest . java <nl> public class jetbasiccompletiontest extends jetcompletiontestbase { <nl> dotest ( ) ; <nl> } <nl> public void <unk> ( ) { <nl> dotest ( ) ; <nl> } <nl>
ppp b / idea / tests / org / jetbrains / jet / completion / jetbasiccompletiontest . java <nl> public class jetbasiccompletiontest extends jetcompletiontestbase { <nl> dotest ( ) ; <nl> } <nl> public void <unk> ( ) { <nl> dotest ( ) ; <nl>
ppp b / idea / tests / org / jetbrains / jet / completion / jetbasiccompletiontest . java <nl> public class jetbasiccompletiontest extends jetcompletiontestbase { <nl> dotest ( ) ; <nl> } <nl> public void <unk> ( ) { <nl> dotest ( ) ; <nl> } <nl> <nl>
ppp b / idea / tests / org / jetbrains / jet / completion / jetbasiccompletiontest . java <nl> public class jetbasiccompletiontest extends jetcompletiontestbase { <nl> dotest ( ) ; <nl> } <nl> public void <unk> ( ) { <nl> dotest ( ) ; <nl> <nl>
ppp b / idea / tests / org / jetbrains / jet / completion / jetbasiccompletiontest . java <nl> public class jetbasiccompletiontest extends jetcompletiontestbase { <nl> dotest ( ) ; <nl> } <nl> public void <unk> ( ) { <nl> dotest ( ) ; <nl> }
====NEW EXAMPLE====
ppp b / sql / update - 6 . 2 . 0 - 7 . 0 . 0 - group . sql <nl> <nl> table igimage table group_ add <unk> string ; <nl> update group_ set <unk> = name ; <nl>
ppp b / sql / update - 6 . 2 . 0
ppp b / sql / update - 6 . 2 . 0 - 7 . 0 . 0 - group . sql <nl> <nl> table igimage table group_ add <unk> string ; <nl> update group_ set <unk> = name ; ; <nl>
ppp b / sql / update - 6 . 2 .
ppp b / sql / update - 6 . 2 . 0 - 7 . 0 . 0 - group . sql <nl> <nl> table igimage table group_ add <unk> string ; <nl> update group_ set <unk> = name name ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / api / buildcraft / api / robots / dockingstation . java <nl> public abstract class dockingstation { <nl> } <nl>
ppp b / api / buildcraft / api / robots / dockingstation . java <nl> public abstract class dockingstation { <nl> } <nl> public boolean linkisdocked ( ) { <nl> if ( istaken ( ) ; <nl> ) ) { <nl> return robottaking ( ) . getdockingstation ( ) = = this ; <nl> } else { <nl> return false ; <nl>
ppp b / api / buildcraft / api / robots / dockingstation . java <nl> public abstract class dockingstation { <nl> <nl>
ppp b / api / buildcraft / api / robots / dockingstation . java <nl>
ppp b / api / buildcraft / api / robots / dockingstation . java <nl> public abstract class dockingstation { <nl> } <nl> public boolean linkisdocked ( ) { <nl> if ( istaken ( ) ; <nl> ) ) { <nl> return robottaking ( ) . getdockingstation ( ) = = this ; <nl> } else { <nl> return false false ; <nl>
====NEW EXAMPLE====
ppp b / spongecommon <nl> subproject commit <unk> <nl>
ppp b / spongecommon <nl> subproject commit = <nl>
ppp b / spongecommon <nl> subproject commit 4e7c70b2489a96b14039eb30d18fba7b3353b59c <nl>
ppp b / spongecommon <nl> subproject commit 2135c723b4134a94cb5013f497f1bad8ef18deb6 <nl>
ppp b / spongecommon <nl> subproject commit 1e33dfa586ddaa256028d7bcd35675a46ee5806b <nl>
====NEW EXAMPLE====
ppp b / src / net / java / sip / communicator / impl / gui / main / contactlist / <unk> . java <nl> public class <unk> <nl> <unk> <unk> <nl> = <unk> . <unk> ( <nl> <unk> . class ) ; <nl> if ( <unk> ! = null <nl> | | ( <unk> ! = null <nl>
ppp b / src / net / java / sip / communicator / impl / gui / main / contactlist / <unk> . java <nl> public class <unk> <nl> <unk> <unk> <nl> = <unk> . <unk> ( <nl> <unk> . class ) ; <nl> if ( <unk> ! = null <nl> | | ( <unk> ! = null null <nl>
ppp b / src / net / java / sip / communicator / impl / gui / main / contactlist / <unk> . java <nl> public class <unk> <nl> <unk> <unk> <nl> = <unk> . <unk> ( <nl> <unk> . class ) ; <nl> if ( <unk> ! = null <nl> | | ( <unk> ! = <nl>
ppp b / src / net / java / sip / communicator / impl / gui / main / contactlist / <unk> . java <nl> public class <unk> <nl> <unk> <unk> <nl> = <unk> . <unk> ( <nl> <unk> . class ) ; <nl> if ( <unk> ! = null <nl> | | ( <unk> ! = = <nl>
ppp b / src / net / java / sip / communicator / impl / gui / main / contactlist / <unk> . java <nl> public class <unk> <nl> <unk> <unk> <nl> = <unk> . <unk> ( <nl> <unk> . class ) ; <nl> if ( <unk> ! = null <nl> | | ( <unk> ! = null
====NEW EXAMPLE====
ppp b / src / main / java / water / fvec / <unk> . java <nl> public class <unk> extends <unk> { <nl> } ) ; <nl> } <nl> public void clearcomments ( ) { <nl> return buildingstage getbuildstage ( ) { <nl> return double getmaxrenderdistancesquared ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / src / main / java / water / fvec / <unk> . java <nl> public class <unk> extends <unk> { <nl> } ) ; <nl> } <nl> public void clearcomments ( ) { <nl> return buildingstage getbuildstage ( ) { <nl> return double getmaxrenderdistancesquared ( ) ; <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / src / main / java / water / fvec / <unk> . java <nl> public class <unk> extends <unk> { <nl> } ) ; <nl> } <nl> public void clearcomments ( ) { <nl> return buildingstage getbuildstage ( ) { <nl> return double getmaxrenderdistancesquared ( ) ; <nl> } <nl> } <nl>
ppp b / src / main / java / water / fvec / <unk> . java <nl> public class <unk> extends <unk> { <nl> } ) ; <nl> } <nl> } <nl> public string getbreakpointsdialoghelptopic ( ) { <nl> return buildingstage getbuildstage ( ) ; <nl> return " ) ; <nl> } <nl> } <nl>
ppp b / src / main / java / water / fvec / <unk> . java <nl> public class <unk> extends <unk> { <nl> } ) ; <nl> } <nl> public void clearcomments ( ) { <nl> return buildingstage getbuildstage ( ) { <nl> return double getmaxrenderdistancesquared ( ) ; <nl> } <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / client / src / styles / bootstrap . styl <nl>
ppp b / client / src / styles / bootstrap . styl <nl> th
ppp b / client / src / styles / bootstrap . styl
ppp b / client / src / styles / bootstrap . styl <nl> th <nl> font - size 12px <nl> color # 888 <nl> . btn <nl> border : jobs <nl> * . iws <nl> . btn <nl> border - radius 1px <nl>
ppp b / client / src / styles / bootstrap . styl <nl> th <nl> font - size 12px <nl> color # 888 <nl> . btn <nl> border : jobs <nl> * . iws <nl> . btn <nl> border - radius radius <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 67ac41bb57b5f734d35939ce3ae829148f85f16b <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 67ac41bb57b5f734d35939ce3ae829148f85f16b <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 67ac41bb57b5f734d35939ce3ae829148f85f16b <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 930f8d8d43a42ee52a6811ce3a9d2d7b8d8c5964 <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 930f8d8d43a42ee52a6811ce3a9d2d7b8d8c5964 <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 930f8d8d43a42ee52a6811ce3a9d2d7b8d8c5964 <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / . gitignore <nl> build / <nl> tests - testsuites . xml <nl> junit * . properties <nl>
ppp b / . gitignore <nl> build / <nl> tests - testsuites . xml <nl> junit * . properties <nl> target
ppp b / . gitignore <nl> build / <nl>
ppp b
ppp b / . gitignore <nl>
====NEW EXAMPLE====
ppp b / core / java / android / os / <unk> . java <nl> public interface <unk> { <nl> / / the same as the method on powermanager <nl> public void useractivity ( long time , boolean <unk> , int eventtype ) ; <nl> } ( ) ; <nl> } <nl>
ppp b / core / java / android / os / <unk> . java <nl> public interface <unk> { <nl> / / the same as the method on powermanager <nl> public void useractivity ( long time , boolean <unk> , int eventtype ) ; <nl> } ) ; <nl> ) ; <nl>
ppp b / core / java / android / os / <unk> . java <nl> public interface <unk> { <nl> / / the same as the method on powermanager <nl> public void useractivity ( long time , boolean <unk> , int eventtype ) ; <nl> } ( ) ; <nl> } <nl> } <nl>
ppp b / core / java / android / os / <unk> . java <nl> public interface <unk> { <nl> / / the same as the method on powermanager <nl> public void useractivity ( long time , boolean <unk> , int eventtype ) ; <nl> } ) ; <nl> } ; <nl>
ppp b / core / java / android / os / <unk> . java <nl> public interface <unk> { <nl> / / the same as the method on powermanager <nl> public void useractivity ( long time , boolean <unk> , int eventtype ) ; <nl> } ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / main / java / org / scribe / model / <unk> . java <nl>
ppp b / src / main / java / org / scribe / model / <unk> . java <nl> public class <unk> <nl> <nl>
ppp b / src / main / java / org / scribe / model / <unk> . java <nl> public class <unk> <nl> } <nl> catch ( exception e ) <nl> { <nl> / / todo reinstate . ondetach ( ) { <nl> } <nl> } <nl> / / ( ) ; <nl> } <nl> } <nl>
ppp b / src / main / java / org / scribe / model / <unk> . java <nl> public class <unk> <nl> } <nl> catch ( exception e ) <nl> { <nl> / / todo reinstate . ondetach ( ) { <nl> } <nl> } <nl> / / ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / src / main / java / org / scribe / model / <unk> . java <nl> public class <unk> <nl> } <nl> catch ( exception e ) <nl> { <nl> / / todo reinstate . ondetach ( ) { <nl> } <nl> } <nl> / / ( ) ; <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / buck <nl> <unk> ( <nl>
ppp b / buck <nl> <unk> ( <nl> ' : android - support - v13 ' , <nl> ' : android - support - v4 ' , <nl> ' : recyclerview - v7 ' , <nl> ' : persistentedittext ' ' <nl> ' ' : : persistentedittext , <nl> ' : <unk> - utils ' , <nl> ' : <unk> - editor ' , , <nl>
ppp b / buck <nl> <unk> ( <nl> ' : android - support - v13 ' , <nl> ' : android - support - v4 ' , <nl> ' : recyclerview - v7 ' , <nl> ' : persistentedittext ' ' <nl> ' ' : : persistentedittext , <nl> ' : <unk> - utils ' , <nl> ' : <unk> - editor ' , <nl>
ppp
ppp b / buck <nl> <unk> ( <nl> ' : android - support - v13 ' , <nl> ' : android - support - v4 ' , <nl> ' : recyclerview - v7 ' , <nl> ' : persistentedittext ' ' <nl> ' ' : : persistentedittext , <nl> ' : <unk> - utils ' , <nl> ' : <unk> - editor ' ' <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> branches : <nl> master <nl> jdk : <nl>
ppp b / . travis . yml <nl> branches : <nl> master <nl>
ppp b / . travis . yml <nl> branches : <nl> master <nl> - oraclejdk8 <nl>
ppp b / . travis . yml <nl> branches : <nl> master <nl> jdk : <nl> : <nl>
ppp b / . travis . yml <nl> branches : <nl> master <nl> <nl>
====NEW EXAMPLE====
ppp b / library / build . gradle <nl> if ( project . hasproperty ( ' pushall ' ) | | project . hasproperty ( ' <unk> ' ) ) { <nl> } <nl> dependencies { <nl> compile " com . mikepenz com . . mikepenz : iconics - core : + " <nl> } <nl>
ppp b / library / build . gradle <nl> if ( project . hasproperty ( ' pushall ' ) | | project . hasproperty ( ' <unk> ' ) ) { <nl> } <nl> dependencies { <nl> compile " com . mikepenz com . . mikepenz : iconics - core : + " <nl> } <nl> <nl>
ppp b / library / build . gradle <nl> if ( project . hasproperty ( ' pushall ' ) | | project . hasproperty ( ' <unk> ' ) ) { <nl> } <nl> dependencies { <nl> compile " com . mikepenz com . . mikepenz : iconics - core : + " <nl>
ppp b / library / build . gradle <nl> if ( project . hasproperty ( ' pushall ' ) | | project . hasproperty ( ' <unk> ' ) ) { <nl> } <nl> dependencies { <nl> compile " com . mikepenz com . . mikepenz : iconics - core : + " <nl> } <nl> } <nl>
ppp b / library / build . gradle <nl> if ( project . hasproperty ( ' pushall ' ) | | project . hasproperty ( ' <unk> ' ) ) { <nl> } <nl> dependencies { <nl> compile " com . mikepenz com . . mikepenz : iconics - core : + " <nl> <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / catalina / manager / <unk> . java <nl> public class <unk> <nl> <unk> ( path ) ; <nl>
ppp b / java / org / apache / catalina / manager / <unk> . java <nl> public class <unk> <nl>
ppp b / java / org / apache / catalina / manager / <unk> . java <nl>
ppp b / java / org / apache / catalina / manager / <unk> . java <nl> public class <unk> <nl> <unk> ( path ) <nl>

====NEW EXAMPLE====
ppp b / changes . txt <nl> 2 . 1 . 15 <nl>
ppp b / changes . txt <nl>

ppp b / changes . txt <nl> 2 . 1 . 15 <nl> * reduce contention getting <nl> of compositetype ( ( cassandra - <unk> ( ) <nl> - <unk> ) ) <nl> * account for partition <unk> in <unk> <unk> ( cassandra - <unk> ) <nl> avoid <unk> <unk> <unk> when <unk> <unk> <unk> <unk> ( - <unk> <unk> ) <nl>
ppp b / changes . txt <nl> 2 . 1 . 15 <nl> * reduce contention getting <nl> of compositetype ( ( cassandra - <unk> ( ) <nl> - <unk> ) ) <nl> * account for partition <unk> in <unk> <unk> ( cassandra - <unk> ) <nl> avoid <unk> <unk> <unk> when <unk> <unk> <unk> <unk> ( - <unk> <unk> ) ) <nl>
====NEW EXAMPLE====
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> implements iterator < dbobject > , iterable < dbobject > , closea <nl> / * * <nl> * returns the element the cursor is at . <nl> * @ return the next element <nl> * / <nl> public dbobject curr ( ) { <nl> <unk> ( <unk> . iterator ) ; <nl>
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> implements iterator < dbobject > , iterable < dbobject > , closea <nl> / * * <nl> * returns the element the cursor is at . <nl> * @ return the next element <nl> * / <nl> public dbobject curr ( ) { <nl> <unk> ( <unk> . iterator ; <nl>
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> implements iterator < dbobject > , iterable < dbobject > , closea <nl> / * * <nl> * returns the element the cursor is at . <nl> * @ return the next element <nl> * / <nl> public dbobject curr ( ) { <nl> <unk> ( <unk> . iterator ) ) ; <nl>
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> implements iterator < dbobject > , iterable < dbobject > , closea <nl>
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> implements iterator < dbobject > , iterable < dbobject > , closea <nl> / * * <nl> * returns the element the cursor is at . <nl> * @ return the next element <nl> * / <nl> public dbobject curr ( ) { <nl> <unk> ( <unk> . iterator iterator ; <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> env : <nl> term = dumb <nl> script : <nl>
ppp b / . travis . yml <nl> env : <nl> term = dumb <nl>
ppp b / . travis . yml <nl> env : <nl> term = dumb <nl> script : <nl> <nl>
ppp b / . travis . yml <nl> env : <nl> term = dumb <nl> script :
ppp b / . travis . yml <nl> env : <nl> term = dumb <nl> script : : <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> android : <nl> tools <nl> build - tools - 23 <nl>
ppp b / . travis . yml <nl> android : <nl> tools <nl>
ppp b / . travis . yml <nl> android : <nl> tools <nl> build -
ppp b / . travis . yml <nl> android : <nl> tools <nl> build
ppp b / . travis . yml <nl> android : <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hdfs < / artifactid > <nl> < version > 0 . 1 . < / / version > <nl> < licenses > <nl> < license > <nl>
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hdfs < / artifactid > <nl> < version > 0 . 1 . < / / version > <nl> < licenses > <nl> < license > > <nl>
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hdfs < / artifactid > <nl> < version > 0 . 1 . < / / version > <nl> < licenses > <nl> < license >
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hdfs < / artifactid > <nl> < version > 0 . 1 . < / / version > <nl> < licenses > <nl> < license > <nl> <nl>
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hdfs < / artifactid > <nl> < version > 0 . 1 . < / / version > <nl> < licenses > <nl> < license <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> * check more frequently for memtable expiration ( cassandra - 2000 ) <nl>
ppp b / changes . txt <nl>
ppp
ppp b / changes . txt <nl> * check more frequently for memtable expiration

====NEW EXAMPLE====
ppp b / . gitignore <nl> * . iws <nl> work / <nl> / data / <nl>
ppp b / . gitignore <nl> * . iws <nl> work / <nl> / data
ppp b / . gitignore <nl> * . iws <nl> work / <nl> / data /
ppp b / . gitignore <nl> * . iws <nl> work / <nl> / data / <nl> logs <nl>
ppp b / . gitignore <nl> * . iws <nl> work / <nl> /
====NEW EXAMPLE====
ppp b / idea / testdata / inspections / <unk> / object / <unk> . kt <nl> class a { <nl> val v = 42 <nl> fun int . get ( a : int ) = this + a <nl> } <nl> } <nl>
ppp b / idea / testdata / inspections / <unk> / object / <unk> . kt <nl> class a { <nl> val v = 42 <nl> fun int . get ( a : int ) = this + a <nl> } <nl> } <nl> } <nl>
ppp b / idea / testdata / inspections / <unk> / object / <unk> . kt <nl> class a { <nl> val v = 42 <nl> fun int . get ( a : int ) = this + a <nl> } <nl> } <nl> <nl>
ppp b / idea / testdata / inspections / <unk> / object / <unk> . kt <nl> class a { <nl> val v = 42 <nl> fun int . get ( a : int ) = this + a <nl> } <nl> } } <nl>
ppp b / idea / testdata / inspections / <unk> / object / <unk> . kt <nl> class a { <nl> val v = 42 <nl> fun int . get ( a : int ) = this + a <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7543959890ec7a7fa3f1fe094168f15d50a1107a <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7543959890ec7a7fa3f1fe094168f15d50a1107a <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - calendar . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / python / build / pycharm_build . gant <nl> setproperty ( " pluginfilter " , [ <nl> " <unk> " , <nl> " <unk> " , <nl> " spellchecker " , " spellchecker " , <nl> " sass " , <nl> " sass " <nl> ] ) <nl> private list platformimplementationmodules ( ) { <nl>
ppp b / python / build / pycharm_build . gant <nl> setproperty ( " pluginfilter " , [ <nl> " <unk> " , <nl> " <unk> " , <nl> " spellchecker " , " spellchecker " , <nl> " sass " , <nl> " sass " <nl> ] ) <nl> private list platformimplementationmodules ( ) ) <nl>
ppp b / python / build / pycharm_build . gant <nl> setproperty ( " pluginfilter " , [ <nl> " <unk> " , <nl> " <unk> " , <nl> " spellchecker " , " spellchecker " , <nl> " sass " , <nl> " sass " <nl> ] ) <nl> private list platformimplementationmodules ( ) { { <nl>
ppp b / python / build / pycharm_build . gant <nl> setproperty ( " pluginfilter " , [ <nl> " <unk> " , <nl> " <unk> " , <nl> " spellchecker " , " spellchecker " , <nl> " sass " , <nl> " sass " <nl> ] ) <nl> private list platformimplementationmodules ( ) { <nl> <nl>
ppp b / python / build / pycharm_build . gant <nl> setproperty ( " pluginfilter " , [ <nl> " <unk> " , <nl> " <unk> " , <nl> " spellchecker " , " spellchecker " , <nl> " sass " , <nl> " sass " <nl> ] ) <nl> private list platformimplementationmodules ( ) <nl>
====NEW EXAMPLE====
ppp b / wordpress / build . gradle <nl> android { <nl> defaultconfig { <nl> applicationid " org . wordpress . android " <nl> versionname " 3 . 0 - beta - 2 " <nl> versioncode 119 <nl> minsdkversion 14 <nl> targetsdkversion 19 <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> defaultconfig { <nl> applicationid " org . wordpress . android " <nl> versionname " 3 . 0 - beta - 2 " <nl> versioncode 119 <nl> minsdkversion 14 <nl> targetsdkversion 19 <nl> <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> defaultconfig { <nl> applicationid " org . wordpress . android " <nl> versionname " 3 . 0 - beta - 2 " <nl> versioncode 119 <nl> minsdkversion 14 <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> defaultconfig { <nl> applicationid " org . wordpress . android " <nl> versionname " 3 . 0 - beta - 2 " <nl> versioncode 119 <nl> minsdkversion 14 <nl> targetsdkversion <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> defaultconfig { <nl> applicationid " org . wordpress . android " <nl> versionname " 3 . 0 - beta - 2 " <nl> versioncode 119 <nl> minsdkversion 14 <nl> targetsdkversion targetsdkversion <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - security . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / <unk> / nbproject / project . properties <nl> javac . compilerargs = - xlint - xlint : - serial <nl> keystore = nbproject / private / keystore . ks <nl> license . file = . . / gpl - 3 . 0 . txt <nl> <unk> . module . author = gephi . org <nl> nbm_alias = gephi <nl> \ no newline at end of file <nl>
ppp b / <unk> / nbproject / project . properties <nl> javac . compilerargs = - xlint - xlint : - serial <nl> keystore = nbproject / private / keystore . ks <nl> license . file = . . / gpl - 3 . 0 . txt <nl> <unk> . module . author = gephi . org <nl> nbm_alias = git <nl> \ no newline at end of file <nl>
ppp b / <unk> / nbproject / project . properties <nl> javac . compilerargs = - xlint - xlint : - serial <nl> keystore = nbproject / private / keystore . ks <nl> license . file = . . / gpl - 3 . 0 . txt <nl> <unk> . module . author = gephi . org <nl> nbm_alias = \ no newline at end of file <nl>
ppp b / <unk> / nbproject / project . properties <nl> javac . compilerargs = - xlint - xlint : - serial <nl> keystore = nbproject / private / keystore . ks <nl> license . file = . . / gpl - 3 . 0 . txt <nl> <unk> . module . author = gephi . org <nl> nbm_alias = <nl> \ no newline at end of file <nl>
ppp b / <unk> / nbproject / project . properties <nl> javac . compilerargs = - xlint - xlint : - serial <nl> keystore = nbproject / private / keystore . ks <nl> license . file = . . / gpl - 3 . 0 . txt <nl> <unk> . module . author = gephi . org <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> nbactions * . xml <nl> # intellij projects <nl> * . iws <nl> . idea / * updated french translation <nl> <nl> # eclipse projects <nl> . classpath <nl>
ppp b / . gitignore <nl> nbactions * . xml <nl> # intellij projects <nl> * . iws <nl> . idea / * updated french translation <nl> <nl> # eclipse projects <nl> . <nl>
ppp b / . gitignore <nl> nbactions * . xml <nl>
ppp b / . gitignore <nl> nbactions * . xml
ppp b / . gitignore <nl> nbactions * . xml <nl> #
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = cb0fc5a75d50e32278f1966f2caeddad3a3f49ae <nl> remote = git @ github . com : liferay / com - liferay - portlet - configuration . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / library / src / com / github / <unk> / showcaseview / <unk> . java <nl> public class <unk> { <nl> } <nl> private boolean <unk> ( <unk> properties ) { <nl> return properties . <unk> > = <unk> . ; <nl> } <nl> private view . onclicklistener <unk> ( final showcaseview showcaseview ) { <nl>
ppp b / library / src / com / github / <unk> / showcaseview / <unk> . java <nl> public class <unk> { <nl> } <nl> private boolean <unk> ( <unk> properties ) { <nl> return properties . <unk> > = <unk> . ; <nl> } <nl> private view . onclicklistener <unk> ( final showcaseview showcaseview ) ) <nl>
ppp b / library / src / com / github / <unk> / showcaseview / <unk> . java <nl> public class <unk> { <nl> } <nl> private boolean <unk> ( <unk> properties ) { <nl> return properties . <unk> > = <unk> . ; <nl> } <nl> private view . onclicklistener <unk> ( final showcaseview showcaseview ) { { <nl>
ppp b / library / src / com / github / <unk> / showcaseview / <unk> . java <nl> public class <unk> { <nl> } <nl> private boolean <unk> ( <unk> properties ) { <nl> return properties . <unk> > = <unk> . ; <nl> } <nl> private view . onclicklistener <unk> ( final showcaseview showcaseview ) { <nl> <nl>
ppp b / library / src / com / github / <unk> / showcaseview / <unk> . java <nl> public class <unk> { <nl> } <nl> private boolean <unk> ( <unk> properties ) { <nl> return properties . <unk> > = <unk> . ; <nl> } <nl> private view . onclicklistener <unk> ( final showcaseview showcaseview ) { <nl> { <nl>
====NEW EXAMPLE====
ppp b / source / org / jivesoftware / smack / <unk> . java
ppp b / source / org / jivesoftware / smack / <unk>
ppp b / source / org / jivesoftware / smack / <unk> . java <nl> class <unk> { <nl> } <nl> } <nl> done ( ) ; <nl> } <nl> if ( ) { <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / source / org / jivesoftware / smack / <unk> . java <nl> class <unk> { <nl> } <nl> } <nl> done ( ) ; <nl> } <nl> if ( ) { <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / source / org / jivesoftware / smack / <unk> . java <nl> class <unk> { <nl> } <nl> } <nl> done ( ) ; <nl> if ( ) { <nl> if ( ) { <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 106 <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 . " <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / main / java / org / jboss / netty / channel / socket / nio / <unk> . java <nl> class <unk> { <nl> } <nl> int <unk> ( ) { <nl>
ppp b / src / main / java / org / jboss / netty / channel / socket / nio / <unk> . java <nl> class <unk> { <nl> } <nl>
ppp b / src / main / java / org / jboss / netty / channel / socket / nio / <unk> . java <nl> class <unk> { <nl> } <nl> int <unk> ( ) { <nl> / / todo code cleanup executorservice executor = executors newcachedthreadpool ( ) ; <nl> boolean success ; <nl>
ppp b / src / main / java / org / jboss / netty / channel / socket / nio / <unk> . java <nl> class <unk> { <nl> } <nl> int <unk> ( ) ) <nl>
ppp b / src / main / java / org / jboss / netty / channel / socket / nio / <unk> . java <nl> class <unk> { <nl> } <nl> int <unk> ( ) { <nl> / / todo code <nl>
====NEW EXAMPLE====
ppp b / build . properties <nl>
ppp b / build . properties <nl> groovyversion = 1 . 1 - rc - 1 - <unk> <nl>
ppp b / build . properties <nl> groovyversion = 1
ppp b / build . properties <nl> groovyversion
ppp
====NEW EXAMPLE====
ppp b / build / version . txt <nl> \ no newline at end of file <nl> 5 . 0 <nl> \ no newline at end of file <nl>
ppp b / build / version . txt <nl> \ no newline at end of file <nl> 5 . 0 . <nl> \ no newline at end of file <nl>
ppp b / build / version . txt <nl> \ no newline at end of file <nl> 5 . 0 0 <nl> \ no newline at end of file <nl>
ppp b / build / version . txt <nl> \ no newline at end of file
ppp b / build / version . txt <nl> \ no newline at end of file <nl> 5 . 0 - snapshot <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / cpp / desktop - mac / satellitecontroller . mm <nl> / / todo : remove dependency on nsregularexpression ( requires <unk> ) <nl>
ppp b / src / cpp / desktop - mac / satellitecontroller . mm <nl>
ppp b / src / cpp / desktop - mac / satellitecontroller . mm <nl> / / todo : remove dependency on nsregularexpression ( requires <unk> ) <nl> / / todo : <unk> <nl> / / todo : global no newline at end of file <nl> : global progress has no background <nl> / / todo : about box <nl>
ppp b / src / cpp / desktop - mac / satellitecontroller . mm <nl> /
ppp b / src / cpp / desktop - mac / satellitecontroller . mm <nl> / / todo : remove dependency on nsregularexpression ( requires <unk> ) <nl> / / todo : <unk> <nl> / / todo : global no newline at end of file <nl> : global progress has no background <nl> / / todo : about <nl>
====NEW EXAMPLE====
ppp b / libraries / colorpicker <nl> subproject commit <unk> <nl>
ppp b / libraries / colorpicker <nl> subproject commit 743de259274020cdef3de809b8537c0775043c8a <nl>
ppp b / libraries / colorpicker <nl> subproject commit = <nl>
ppp b / libraries / colorpicker <nl> subproject commit 152be6eb1a22da8cebe24ac4ee05b487936c9f2a <nl>
ppp b / libraries / colorpicker <nl> subproject commit e2915b4ce6edc24f4dc9fe361e23ff0a80e840f6 <nl>
====NEW EXAMPLE====
ppp b / portal - impl / src / portal . properties <nl> # <nl> # set the default display view . <nl> # <nl> journal . default . display . view = icon <nl> # <nl> # set this to true to <unk> all article versions when <unk> an article . <nl>
ppp b / portal - impl / src / portal . properties <nl> # <nl> # set the default display view . <nl> # <nl> journal . default . display . view = icon <nl> # <nl> # set this to true to <unk> all article versions when <unk> an article <nl>
ppp b / portal - impl / src / portal . properties <nl> # <nl> # set the default display view . <nl> # <nl> journal . default . display . view = icon <nl> # <nl> # set this to true to <unk> all article versions when <unk> an article article <nl>
ppp b / portal - impl / src / portal . properties <nl> # <nl> # set the default display view . <nl> # <nl> journal . default . display . view = icon <nl> # <nl> # set this to true to <unk> all article versions when <unk> an article .
ppp b / portal - impl / src / portal . properties <nl> # <nl> # set the default display view . <nl> # <nl> journal . default . display . view = icon <nl> # <nl> # set this to true to <unk> all article versions when <unk> an article . . <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 685026a0f2734f25cea0f2c7a7ec269421dd4129 <nl> mode = push <nl> parent = a53119a4513318e972ae56c818a85ccb19b634e0 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 685026a0f2734f25cea0f2c7a7ec269421dd4129 <nl> mode = push <nl> parent = a53119a4513318e972ae56c818a85ccb19b634e0 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / <unk> / . gitignore <nl> eggs / <nl> . <unk> <nl> . venv <nl> get - pip . py <nl>
ppp b / <unk> / . gitignore <nl> eggs / <nl> . <unk> <nl> . venv <nl> get - pip . py <nl> pip <nl>
ppp b / <unk> / . gitignore <nl> eggs / <nl> . <unk> <nl> . venv <nl> get - pip py <nl>
ppp b / <unk> / . gitignore <nl> eggs / <nl> . <unk> <nl> . venv <nl> get - pip . <nl>
ppp b / <unk> / . gitignore <nl> eggs / <nl> . <unk> <nl> . venv <nl> get - pip . py <nl> py <nl>
====NEW EXAMPLE====
ppp b / travis . sh <nl> its ) <nl> else <nl> installtravistools <nl>
ppp b / travis . sh <nl> its ) <nl> else <nl>
ppp b / travis . sh <nl> its ) <nl> else <nl> installtravistools <nl> build
ppp b / travis . sh <nl> its ) <nl> else <nl> installtravistools <nl> build "
ppp b / travis . sh <nl> its ) <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> . ds_store <nl> / build <nl> . idea <nl> * . iml <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> . ds_store <nl> / build <nl> . idea <nl> * . idea <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> . ds_store <nl> / build <nl> . idea <nl>
ppp b / . gitignore <nl> . ds_store <nl> / build <nl> . idea <nl> * idea <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> . ds_store <nl> / build <nl> . idea <nl> * . iml <nl> \ no newline at end of file <nl> end of file <nl>
====NEW EXAMPLE====
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 0 - rc3 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl> smackminandroidsdk = 8 <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 0 - rc3 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl> smackminandroidsdk = 8 8 <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 0 - rc3 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl> smackminandroidsdk = = <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 0 - rc3 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 0 - rc3 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl> smackminandroidsdk = 8 <nl> <nl>
====NEW EXAMPLE====
ppp b / <unk> . sh <nl>
ppp b / <unk> . sh <nl> if [ " $ travis_pull_request
ppp b / <unk> . sh <nl> if [ " $ travis_pull_request " = = " false " ] ; then <nl> echo " = = = = this was not a = = = = = was not a pull request , executed ! = = = = " " <nl> else <nl>
ppp b / <unk> . sh <nl> if [ " $ travis_pull_request " = = " false " ] ; then <nl> echo " = = = = this was not a = = = = = was not a pull request , executed ! = = = = " " else <nl>
ppp b / <unk> . sh <nl> if [ " $ travis_pull_request " = = " false " ] ; then <nl> echo " = = = = this was not a = = = = = was not a pull request , executed ! = = = = " " <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> env : <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> env :
ppp b / . travis . yml <nl> env
ppp b / . travis . yml <nl> env : <nl> term : <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - login - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 1769 : added a test to check local nimbus with notifier plugin <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> * storm - 1769 : added a

ppp b / changelog . md <nl> * storm - 1769 : added a test to check local nimbus with notifier plugin <nl> # # 1 . 1 . 0 <nl> * * updated lithuanian translation <nl> * storm - 1 <nl> * storm - 1837 : fix complete - topology and prevent message loss <nl> * storm - 2092 : optimize tridentkafkastate sending <nl>
====NEW EXAMPLE====
ppp b / core / java / com / android / internal / os / zygoteinit . java <nl> public class zygoteinit { <nl> private static boolean startsystemserver ( ) <nl> throws methodandargscaller , runtimeexception { <nl> long capabilities = posixcapabilitiesasbits ( <nl> osconstants . cap_kill , <nl> osconstants . cap_kill , <nl> osconstants . cap_net_admin , <nl> osconstants . cap_net_bind_service , <nl>
ppp b / core / java / com / android / internal / os / zygoteinit . java <nl> public class zygoteinit { <nl> private static boolean startsystemserver ( ) <nl> throws methodandargscaller , runtimeexception { <nl> long capabilities = posixcapabilitiesasbits ( <nl> osconstants . cap_kill , <nl> osconstants . cap_kill , <nl> osconstants . cap_net_admin , <nl> osconstants . cap_net_bind_service , , <nl>
ppp b / core / java / com / android / internal / os / zygoteinit . java <nl> public class zygoteinit { <nl> private static boolean startsystemserver ( ) <nl> throws methodandargscaller , runtimeexception { <nl> long capabilities = posixcapabilitiesasbits ( <nl> osconstants . cap_kill , <nl> osconstants . cap_kill , <nl> osconstants . cap_net_admin , <nl> osconstants . cap_net_bind_service cap_net_bind_service <nl>
ppp b / core / java / com / android / internal / os / zygoteinit . java <nl> public class zygoteinit { <nl> private static boolean startsystemserver ( ) <nl> throws methodandargscaller , runtimeexception { <nl> long capabilities = posixcapabilitiesasbits ( <nl> osconstants . cap_kill , <nl> osconstants . cap_kill , <nl> osconstants . cap_net_admin , <nl> osconstants . cap_net_bind_service , <nl> <nl>
ppp b / core / java / com / android / internal / os / zygoteinit . java <nl> public class zygoteinit { <nl> private static boolean startsystemserver ( ) <nl> throws methodandargscaller , runtimeexception { <nl> long capabilities = posixcapabilitiesasbits ( <nl> osconstants . cap_kill , <nl> osconstants . cap_kill , <nl> osconstants . cap_net_admin , <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> allprojects { <nl>
ppp b / build . gradle <nl> allprojects { <nl> repositories {
ppp b / build . gradle <nl>
ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> mavencentral ( ) <nl> mavenrepo urls : ' http : / / repository . jboss . com / maven2 / ' http : / / / / / / / / / . . com / / / ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> mavencentral ( ) <nl> mavenrepo urls : ' http : / / repository . jboss . com / maven2 / ' http : / / / / / / / / / . . com / / / ' <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gitignore <nl> libs / <nl> . project <nl> . settings / <nl> . ipr <nl> \ no newline at end of file <nl> . ipr <nl> . iml <nl> \ no newline at end of file <nl>
ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gitignore <nl> libs / <nl> . project <nl> . settings / <nl> . ipr <nl> \ no newline at end of file <nl> . ipr <nl> . iml <nl>
ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gitignore <nl> libs / <nl> . project <nl> . settings / <nl> . ipr <nl> \ no newline at end of file <nl> . ipr <nl> iml <nl> \ no newline at end of file <nl>
ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gitignore <nl> libs / <nl> . project <nl> . settings / <nl> . ipr <nl> \ no newline at end of file <nl> . ipr <nl> . iml <nl> <nl> \ no newline at end of file <nl>
ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gitignore <nl> libs / <nl> . project <nl> . settings / <nl> . ipr <nl> \ no newline at end of file <nl> . ipr <nl> iml <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> / project / . idea <nl> / project / build <nl> / project / local . properties <nl>
ppp b / . gitignore <nl> / project / . idea <nl> / project / build <nl> / project / local . <nl>
ppp b / . gitignore <nl> / project / . idea <nl> / project / build <nl> / project / local . properties <nl> properties <nl>
ppp b / . gitignore <nl> / project / . idea <nl> / project / build <nl> / project / local . properties <nl> . properties <nl>
ppp b / . gitignore <nl> / project / . idea <nl> / project / build <nl> / project / local properties <nl>
====NEW EXAMPLE====
ppp b / actor - sdk / sdk - core - ios / actorsdk . xcodeproj / project . pbxproj <nl> product_name = actorsdk ; <nl> <unk> = yes ; <nl> <unk> = yes ; <nl> } ; <nl> name = null ; <nl> } <nl> name = release ; <nl> } ; <nl>
ppp b / actor - sdk / sdk - core - ios / actorsdk . xcodeproj / project . pbxproj <nl> product_name = actorsdk ; <nl> <unk> = yes ; <nl> <unk> = yes ; <nl> } ; <nl> name = null ; <nl> } <nl> name = release ; <nl> } <nl>
ppp b / actor - sdk / sdk - core - ios / actorsdk . xcodeproj / project . pbxproj <nl> product_name = actorsdk ; <nl> <unk> = yes ; <nl> <unk> = yes ; <nl> } ; <nl> name = null ; <nl> } <nl> name = release ; <nl> } ; <nl> ; <nl>
ppp b / actor - sdk / sdk - core - ios / actorsdk . xcodeproj / project . pbxproj <nl> product_name = actorsdk ; <nl> <unk> = yes ; <nl> <unk> = yes ; <nl> } ; <nl> name = null ; <nl> } <nl> name = release ; <nl> } ; <nl> <nl>
ppp b / actor - sdk / sdk - core - ios / actorsdk . xcodeproj / project . pbxproj <nl> product_name = actorsdk ; <nl> <unk> = yes ; <nl> <unk> = yes ; <nl> } ; <nl> name = null ; <nl> } <nl> name = release ; <nl> }
====NEW EXAMPLE====
ppp b / titan - persistit / pom . xml <nl> < exclude > * * / * performancetest . java < / exclude > <nl> < exclude > * * / * <unk> . java < / exclude > <nl> < / excludes > <nl> < < configuration > <nl> < / plugin > <nl> < / plugins > <nl>
ppp b / titan - persistit / pom . xml <nl> < exclude > * * / * performancetest . java < / exclude > <nl> < exclude > * * / * <unk> . java < / exclude > <nl> < / excludes > <nl>
ppp b / titan - persistit / pom . xml <nl> < exclude > * * / * performancetest . java < / exclude > <nl> < exclude > * * / * <unk> . java < / exclude > <nl> < / excludes > <nl> < < configuration > <nl> < / plugin > <nl> < / > <nl>
ppp b / titan - persistit / pom . xml <nl> < exclude > * * / * performancetest . java < / exclude > <nl> < exclude > * * / * <unk> . java < / exclude > <nl> < / excludes > > <nl>
ppp b / titan - persistit / pom . xml <nl> < exclude > * * / * performancetest . java < / exclude > <nl> < exclude > * * / * <unk> . java < / exclude > <nl> < / excludes > <nl> < < configuration > <nl> < / plugin > <nl>
====NEW EXAMPLE====
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . <unk> <nl> long_desc = ` cat . . / doc / readme ` <nl> short_desc = yui compressor <nl> perm = 0644 <nl>
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . <unk> <nl> long_desc = ` cat . . / doc / readme ` <nl> short_desc = yui compressor <nl> perm = 0644 <nl> <nl>
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . <unk> <nl> long_desc = ` cat . . / doc / readme ` <nl> short_desc = yui compressor <nl> perm = <nl>
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . <unk> <nl> long_desc = ` cat . . / doc / readme ` <nl> short_desc = yui compressor <nl> perm = 11648 <nl>
ppp b / yinst / yuicompressor . yicf <nl> product_name = yuicompressor <nl> version = 1 . <unk> <nl> long_desc = ` cat . . / doc / readme ` <nl> short_desc = yui compressor <nl> perm = = <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> after_success : <nl> env : <nl>
ppp b / . travis . yml <nl> after_success : <nl> env : <nl> global
ppp b / . travis . yml <nl> after_success : <nl>
ppp b / . travis . yml <nl> after_success : <nl> env
ppp b / . travis . yml <nl> after_success : <nl> env <nl>
====NEW EXAMPLE====
ppp b / src / java / org / apache / cassandra / config / config . java <nl> public class config <nl> public integer rpc_recv_buff_size_in_bytes ; <nl> public boolean start_native_transport = false ; <nl> public integer native_transport_port = 8000 ; <nl> public integer native_transport_min_threads = 16 ; <nl> public integer native_transport_max_threads = 128 ; <nl>
ppp b / src / java / org / apache / cassandra / config / config . java <nl> public class config <nl> public integer rpc_recv_buff_size_in_bytes ; <nl> public boolean start_native_transport = false ; <nl> public integer native_transport_port = 8000 ; <nl> public integer native_transport_min_threads = 16 ; <nl> public integer native_transport_max_threads = 128 ; ; <nl>
ppp b / src / java / org / apache / cassandra / config / config . java <nl> public class config <nl> public integer rpc_recv_buff_size_in_bytes ; <nl> public boolean start_native_transport = false ; <nl> public integer native_transport_port = 8000 ; <nl> public integer native_transport_min_threads = 16 ; <nl> public integer native_transport_max_threads = ; <nl>
ppp b / src / java / org / apache / cassandra / config / config . java <nl> public class config <nl> public integer rpc_recv_buff_size_in_bytes ; <nl> public boolean start_native_transport = false ; <nl> public integer native_transport_port = 8000 ; <nl> public integer native_transport_min_threads = 16 ; <nl> public integer native_transport_max_threads = 128 <nl>
ppp b / src / java / org / apache / cassandra / config / config . java <nl> public class config <nl> public integer rpc_recv_buff_size_in_bytes ; <nl> public boolean start_native_transport = false ; <nl> public integer native_transport_port = 8000 ; <nl> public integer native_transport_min_threads = 16 ; <nl> public integer native_transport_max_threads = 128 128 ; <nl>
====NEW EXAMPLE====
ppp b / readme <nl> set , type <nl> " c : \ program files \ microsoft visual studio 10 . 0 \ vc \ bin \ vcvars32 . bat " <nl> you may have to modify the above according which version version of vc + + or <nl> where it is installed . <nl> 2 . type <nl>
ppp b / readme <nl> set , type <nl> " c : \ program files \ microsoft visual studio 10 . 0 \ vc \ bin \ vcvars32 . bat " <nl> you may have to modify the above according which version version of vc + + or <nl> where it is installed . <nl> 2 . <nl>
ppp b / readme <nl> set , type <nl> " c : \ program files \ microsoft visual studio 10 . 0 \ vc \ bin \ vcvars32 . bat " <nl> you may have to modify the above according which version version of vc + + or <nl> where it is installed . <nl> 2 . type type <nl>
ppp b / readme <nl> set , type <nl> " c : \ program files \ microsoft visual studio 10 . 0 \ vc \ bin \ vcvars32 . bat " <nl> you may have to modify the above according which version version of vc + + or <nl> where it is installed . <nl> 2 . . <nl>
ppp b / readme <nl> set , type <nl> " c : \ program files \ microsoft visual studio 10 . 0 \ vc \ bin \ vcvars32 . bat " <nl> you may have to modify the above according which version version of vc + + or <nl> where it is installed . <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> / buildsrc / * . ipr <nl> / buildsrc / * . iws <nl>
ppp b / . gitignore <nl> / buildsrc / * . ipr <nl> / buildsrc / * . iws <nl> / buildsrc
ppp b / . gitignore <nl> / buildsrc / * . ipr <nl> / buildsrc / * . iws <nl> /
ppp b / . gitignore <nl> / buildsrc / * . ipr <nl> / buildsrc / * . iws <nl> / buildsrc /
ppp b / . gitignore <nl> / buildsrc / * . ipr <nl> / buildsrc / * . iws <nl> / buildsrc / out
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / framework / src / org / apache / cordova / compasslistener . java <nl> public class compasslistener extends plugin implements sensoreventlistener { <nl> * constructor . <nl> * / <nl> public compasslistener ( ) { <nl> this . heading 0 . 0 ; <nl> this . = 0 0 ; <nl> this . setstatus ( compasslistener . stopped ) ; <nl> } <nl>
ppp b / framework / src / org / apache / cordova / compasslistener . java <nl> public class compasslistener extends plugin implements sensoreventlistener { <nl> * constructor . <nl>
ppp b / framework / src / org / apache / cordova / compasslistener . java <nl> public class compasslistener extends plugin implements sensoreventlistener { <nl> * constructor . <nl> * / <nl> public compasslistener ( ) { <nl> this . heading 0 . 0 ; <nl> this . = 0 0 ; <nl> this . setstatus ( compasslistener . stopped ) ; <nl>
ppp b / framework / src / org / apache / cordova / compasslistener . java <nl> public class compasslistener extends plugin implements sensoreventlistener { <nl>
ppp b / framework / src / org / apache / cordova / compasslistener . java <nl> public class compasslistener extends plugin implements sensoreventlistener { <nl> * constructor . <nl> * / <nl> public compasslistener ( ) { <nl> this . heading 0 . 0 ; <nl> this . = 0 0 ; <nl> this . setstatus ( compasslistener . stopped ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / aeron - client / src / main / java / uk / co / real_logic / aeron / publication . java <nl> public class publication implements autocloseable <nl> * / <nl> public long <unk> ( ) <nl> { <nl> <unk> ( ) ; <nl> return <unk> . <unk> ( ) ; <nl> } <nl>
ppp b / aeron - client / src / main / java / uk / co / real_logic / aeron / publication . java <nl> public class publication implements autocloseable <nl> * / <nl> public long <unk> ( ) <nl> { <nl> <unk> ( ) ; <nl> return <unk> . <unk> ( ) ; <nl> } <nl> <nl>
ppp b / aeron - client / src / main / java / uk / co / real_logic / aeron / publication . java <nl> public class publication implements autocloseable <nl> * / <nl> public long <unk> ( ) <nl> { <nl> <unk> ( ) ; <nl> return <unk> . <unk> ( ) ; <nl>
ppp b / aeron - client / src / main / java / uk / co / real_logic / aeron / publication . java <nl> public class publication implements autocloseable <nl> * / <nl> public long <unk> ( ) <nl> { <nl> <unk> ( ) ; <nl> return <unk> . <unk> ( ) ; <nl> <nl>
ppp b / aeron - client / src / main / java / uk / co / real_logic / aeron / publication . java <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 . " <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / server / src / test / java / io / druid / curator / curatortestbase . java <nl> public class curatortestbase <nl> closequietly . close ( curator ) ; <nl> closequietly . close ( server ) ; <nl> } <nl> } <nl>
ppp b / server / src / test / java / io / druid / curator / curatortestbase . java <nl> public class curatortestbase <nl> closequietly . close ( curator ) ; <nl> closequietly . close ( server ) ; <nl> } <nl> } <nl> <nl>
ppp b / server / src / test / java / io / druid / curator / curatortestbase . java <nl> public class curatortestbase <nl> closequietly . close ( curator ) ; <nl> closequietly . close ( server ) ; <nl> } <nl> <nl>
ppp b / server / src / test / java / io / druid / curator / curatortestbase . java <nl> public class curatortestbase <nl> closequietly . close ( curator ) ; <nl> closequietly . close ( server ) ; <nl> } <nl>
ppp b / server / src / test / java / io / druid / curator / curatortestbase . java <nl> public class curatortestbase <nl> closequietly . close ( curator ) ; <nl> closequietly . close ( server ) ; <nl> } <nl> }
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / argline > <nl> < groups > com . hazelcast . test . annotation . quicktest < / groups > <nl> < excludedgroups > <nl> com . hazelcast . test . annotation . slowtest . com . . . . annotation . slowtest <nl> < / excludedgroups > <nl> < / configuration > <nl> < / plugin > <nl>
ppp b / pom . xml <nl> < / argline > <nl>
ppp b / pom . xml <nl>
ppp b / pom . xml <nl> < / argline > <nl> < groups > com . hazelcast . test . annotation . quicktest < / groups > <nl> < excludedgroups > <nl> com . hazelcast . test . annotation . slowtest . com . . . . annotation . slowtest <nl> < / excludedgroups > <nl> < / configuration > <nl> < / plugin > > <nl>
ppp b / pom . xml <nl> < / argline > <nl> < groups
====NEW EXAMPLE====
ppp b / hazelcast / src / main / java / com / hazelcast / concurrent / atomicreference / operations / <unk> . java <nl> import com . hazelcast . spi . <unk> ; <nl> import java . io . ioexception ; <nl> public abstract class <unk> extends operation <nl> implements <unk> , <unk> { <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / concurrent / atomicreference / operations / <unk> . java <nl> import com . hazelcast . spi . <unk> ; <nl> import java . io . ioexception ; <nl> public abstract class <unk> extends operation <nl> implements <unk> , <unk> <unk> <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / concurrent / atomicreference / operations / <unk> . java <nl> import com . hazelcast . spi . <unk> ; <nl> import java . io . ioexception ; <nl> public abstract class <unk> extends operation <nl> implements <unk> , <unk> { { <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / concurrent / atomicreference / operations / <unk> . java <nl> import com . hazelcast . spi . <unk> ; <nl> import java . io . ioexception ; <nl> public abstract class <unk> extends operation <nl> implements <unk> , <unk> <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / concurrent / atomicreference / operations / <unk> . java <nl> import com . hazelcast . spi . <unk> ; <nl> import java . io . ioexception ; <nl> public abstract class <unk> extends operation <nl> implements <unk> , { <nl>
====NEW EXAMPLE====
ppp b / include / gui / surfacetexture . h <nl> struct surfacetexture { <nl> void <unk> ( const sp < <unk> > & ) { } <nl>
ppp b / include / gui / surfacetexture . h <nl> struct surfacetexture { <nl> void <unk> ( const sp < <unk> > & ) { <nl>
ppp b / include / gui / surfacetexture . h <nl>

ppp b / include / gui / surfacetexture . h <nl> struct surfacetexture { <nl> void <unk> ( const sp < <unk> > & ) { } <nl> void setsynchronousmode ( bool ) { } <nl> glenum getcurrenttexturetarget ( ) const { return 0 ; } <nl> } else if ( ) ; <nl> } ; <nl> } <nl> static sp < surfacetexture > surfacetexture_getsurfacetexture ( jnienv * env , jobject thiz ) <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> notifications : <nl> email : <nl>
ppp b / . travis . yml <nl> notifications : <nl>
ppp b / . travis . yml <nl> notifications : <nl> email
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> notifications : <nl> email : <nl> script : <nl>
====NEW EXAMPLE====
ppp b / platform - impl / src / com / intellij / openapi / <unk> / impl / <unk> . java <nl> private final class <unk> extends <unk> { <nl> } <nl> <unk> ( file ) ; <nl> } <nl> } , <unk> . <unk> ( ) ; <nl> . <unk> ) ; <nl> } <nl> } <nl>
ppp b / platform - impl / src / com / intellij / openapi / <unk> / impl / <unk> . java <nl> private final class <unk> extends <unk> { <nl> } <nl> <unk> ( file ) ; <nl> } <nl> } , <unk> . <unk> ( ) ; <nl> . <unk> ) ; <nl> } <nl> } <nl> <nl>
ppp b / platform - impl / src / com / intellij / openapi / <unk> / impl / <unk> . java <nl>
ppp b / platform - impl / src / com / intellij / openapi / <unk> / impl / <unk> . java <nl> private final class <unk> extends <unk> { <nl> } <nl> <unk> ( file ) ; <nl> } <nl> } , <unk> . <unk> ( ) ; <nl> . <unk> ) ; <nl> } <nl>
ppp b / platform - impl / src / com / intellij / openapi / <unk> / impl / <unk> . java <nl> private final class <unk> extends <unk> { <nl> } <nl> <unk> ( file ) ; <nl> } <nl> } , <unk> . <unk> ( ) ; <nl> . <unk> ) ; <nl> } <nl> }
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hbase < / artifactid > <nl> < version > 0 . 1 . 1 . 2 < / version > <nl> < licenses > <nl> < license > <nl>
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hbase < / artifactid > <nl> < version > 0 . 1 . 1 . 2 < / version > <nl> < licenses > <nl> < license > > <nl>
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hbase < / artifactid > <nl> < version > 0 . 1 . 1 . 2 < / version > <nl> < licenses > <nl> < license > <nl> <nl>
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hbase < / artifactid > <nl> < version > 0 . 1 . 1 . 2 < / version > <nl> < licenses > <nl> < license >
ppp b / pom . xml <nl> < groupid > com . github . ptgoetz < / groupid > <nl> < artifactid > storm - hbase < / artifactid > <nl> < version > 0 . 1 . 1 . 2 < / version > <nl> < licenses > <nl> < license <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 550d69557d3b14eb27c077fd10850c5cd7fbfa88 <nl> mode = push <nl> parent = 4d1a9bcb97ff21f8abf74db75c1b509e3d2dcdbf <nl> remote = git @ github . com : liferay / com - liferay - osgi . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / osgi / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 550d69557d3b14eb27c077fd10850c5cd7fbfa88 <nl> mode = push <nl> parent = 4d1a9bcb97ff21f8abf74db75c1b509e3d2dcdbf <nl> remote = git @ github . com : liferay / com - liferay - osgi . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / license <nl> same " printed page " as the copyright notice for easier <nl> identification within third - party archives . <nl>
ppp b / license <nl> same " printed page " as the copyright notice for easier <nl> identification within third - party archives . <nl> copyright
ppp b / license <nl> same " printed page " as the copyright notice for easier <nl> identification within third - party archives <nl>
ppp b / license <nl> same " printed page " as the copyright notice for easier <nl>
ppp b / license <nl> same " printed page " as the copyright notice for <nl>
====NEW EXAMPLE====
ppp b / readme . asciidoc <nl> public class example { <nl>
ppp b / readme . asciidoc <nl>
ppp b / readme . asciidoc <nl> public class example { <nl> private
ppp b / readme . asciidoc <nl> public class example {
ppp b / readme . asciidoc <nl> public class example { <nl> private string name ; <nl> private int age ; <nl> public example ( int age , string name ) { <nl> public void onreportfirstcardposition = null ) ; <nl> age , string name ) { <nl> this . age = age ; <nl> this . name = name ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / libs / hwui / <unk> . cpp <nl> # define <unk> 7 <nl> / / must be <unk> in size <nl> static const <unk> <unk> = <unk> ; <nl>
ppp b / libs / hwui / <unk> . cpp <nl> # define <unk> 7 <nl> / / must be <unk> in size <nl>
ppp b / libs / hwui / <unk> . cpp <nl> # define <unk> 7 <nl>
ppp b / libs / hwui / <unk> . cpp <nl> # define <unk> 7 <nl> / / must be <unk> in size <nl> static const <unk> <unk> = <unk> ; <nl> static static const <unk> <unk> = <unk> ; <nl> static const <unk> <unk> = <unk> ; <nl>
ppp b / libs / hwui / <unk> . cpp <nl> # define <unk> 7 <nl> / / must be <unk> in size <nl> static const
====NEW EXAMPLE====
ppp b / res / layout / <unk> . xml <nl> android : gravity = " center_vertical | center_horizontal " <nl> android : layout_marginleft = " <unk> " <nl>
ppp b / res / layout / <unk> . xml <nl> android : gravity = " center_vertical | center_horizontal " <nl>
ppp b / res / layout / <unk> . xml <nl>

ppp b / res / layout / <unk> . xml <nl> android : gravity
====NEW EXAMPLE====
ppp b / v7 / palette / build . gradle <nl> dependencies { <nl> android { <nl> compilesdkversion 7 <nl>
ppp b / v7 / palette / build . gradle <nl> dependencies { <nl> android { <nl>
ppp b / v7 / palette / build . gradle <nl> dependencies { <nl> android { <nl> compilesdkversion
ppp b / v7 / palette / build . gradle <nl> dependencies { <nl> android { <nl> compilesdkversion 7
ppp b / v7 / palette / build . gradle <nl> dependencies { <nl> android { <nl> compilesdkversion 7 <nl> { <nl> { <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public class <unk> extends <unk> { <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public class <unk> extends <unk> { <nl> options . <unk> , <nl> options . <unk> , <nl> <unk> , <nl> options . <unk> ( ) ) ; <nl> } <nl> public void configurekillbillnodesapi ( ) { ( ) ; <nl> } <nl> } ; <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public class <unk> extends <unk> { <nl> options . <unk> , <nl> options . <unk> , <nl> <unk> , <nl> options . <unk> ( ) ) ; <nl> } <nl> public void configurekillbillnodesapi ( ) { ( ) ; <nl> } <nl> } <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public class <unk> extends <unk> { <nl> options . <unk> , <nl> options . <unk> , <nl> <unk> , <nl> options . <unk> ( ) ) ; <nl> } <nl> public void configurekillbillnodesapi ( ) { ( ) ; <nl> } <nl> } <nl> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / hadoop - hdfs - project / hadoop - hdfs / changes . txt <nl> trunk ( unreleased ) <nl> hdfs - <unk> . add additional jmx bean for <unk> status data <nl> ( <unk> <unk> via cos ) <nl> optimizations <nl> * @ override <nl> * @ override <nl> # launchmanageblockednumbersactivity ( executionvertexid executionvertexid executionvertexid executionvertexid executionvertexid executionvertexid ) <nl>
ppp b / hadoop - hdfs - project / hadoop - hdfs / changes . txt <nl> trunk ( unreleased ) <nl> hdfs - <unk> . add additional jmx bean for <unk> status data <nl> ( <unk> <unk> via cos ) <nl> optimizations <nl> * @ override <nl> * @ override <nl> # launchmanageblockednumbersactivity ( executionvertexid executionvertexid executionvertexid executionvertexid executionvertexid executionvertexid ) <nl> optimizations <nl> bug fixes <nl>
ppp b / hadoop - hdfs - project / hadoop - hdfs / changes . txt <nl> trunk ( unreleased ) <nl> hdfs - <unk> . add additional jmx bean for <unk> status data <nl> ( <unk> <unk> via cos ) <nl> optimizations <nl> * @ override <nl> * @ override <nl> # launchmanageblockednumbersactivity ( executionvertexid executionvertexid executionvertexid executionvertexid executionvertexid ) <nl>
ppp b / hadoop - hdfs - project / hadoop - hdfs / changes . txt <nl> trunk ( unreleased ) <nl> hdfs - <unk> . add additional jmx bean for <unk> status data <nl> ( <unk> <unk> via cos ) <nl> optimizations <nl> * @ override <nl> * @ override <nl> # launchmanageblockednumbersactivity ( executionvertexid executionvertexid executionvertexid executionvertexid executionvertexid executionvertexid ` <nl>
ppp b / hadoop - hdfs - project / hadoop - hdfs / changes . txt <nl> trunk ( unreleased ) <nl> hdfs - <unk> . add additional jmx bean for <unk> status data <nl> ( <unk> <unk> via cos ) <nl> optimizations <nl> * @ override <nl> * @ override <nl> # launchmanageblockednumbersactivity ( executionvertexid executionvertexid executionvertexid executionvertexid executionvertexid ` ` <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> target / <nl> pom . xml . tag <nl> pom . xml . releasebackup <nl> pom . xml . next <nl> release
ppp b / . gitignore <nl> target / <nl> pom . xml . tag <nl> pom . xml . releasebackup <nl>
ppp b / . gitignore <nl> target / <nl> pom . xml . tag <nl>
ppp b / . gitignore <nl> target / <nl>
ppp b / . gitignore <nl> target / <nl> pom . xml . tag <nl> pom
====NEW EXAMPLE====
ppp b / build . gradle <nl> <unk> { <nl> } <nl> } <nl>
ppp b / build . gradle <nl> <unk> { <nl> } <nl>
ppp b / build . gradle <nl> <unk> { <nl>
ppp b / build . gradle <nl> <unk> { <nl> } <nl> }
ppp b / build . gradle <nl> <unk> { <nl> }
====NEW EXAMPLE====
ppp b / server / sonar - web / src / main / less / analysis - reports . less <nl> . navigator - side { <nl> width : 50 % ; <nl> max - width : none ; <nl> } <nl> width : none ; <nl> } <nl> . navigator - results { <nl>
ppp b / server / sonar - web / src / main / less / analysis - reports . less <nl> . navigator - side { <nl> width : 50 % ; <nl> max - width : none ; <nl> } <nl> width : none ; <nl> } <nl> . navigator - results <nl>
ppp b / server / sonar - web / src / main / less / analysis - reports . less <nl> . navigator - side { <nl> width : 50 % ; <nl> max - width : none ; <nl> } <nl> width : none ; <nl> } <nl> . navigator - results {
ppp b / server / sonar - web / src / main / less / analysis - reports . less <nl> . navigator - side { <nl> width : 50 % ; <nl> max - width : none ; <nl> } <nl> width : none ; <nl> } <nl> . navigator - results results <nl>
ppp b / server / sonar - web / src / main / less / analysis - reports . less <nl> . navigator - side { <nl> width : 50 % ; <nl> max - width : none ; <nl> } <nl> width : none ; <nl> } <nl> . navigator - results . <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < configuration > <nl> < archive > <nl> < <unk> > true < / <unk> > <nl>
ppp b / pom . xml <nl> < configuration > <nl> < archive > <nl> < <unk> > true < / <unk> > <nl> <
ppp b / pom . xml <nl> < configuration > <nl> < archive > <nl>
ppp b / pom . xml <nl> < configuration > <nl> < archive > <nl> < <unk> > true < / <unk> <nl>
ppp b / pom . xml <nl> < configuration > <nl> < archive > <nl> < <unk> > true < / <unk> > <nl> < >
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / hazelcast - client / src / test / java / com / hazelcast / client / mapreduce / aggregation / <unk> . java <nl> public class <unk> <nl> } <nl> @ test ( timeout ( 100 ) <nl> public void <unk> ( ) <nl> throws exception { <nl>
ppp b / hazelcast - client / src / test / java / com / hazelcast / client / mapreduce / aggregation / <unk> . java <nl> public class <unk> <nl> } <nl>
ppp b / hazelcast - client / src / test / java / com / hazelcast / client / mapreduce / aggregation / <unk> . java <nl> public class <unk> <nl> } <nl> @ test ( timeout ( ) <nl>
ppp b / hazelcast - client / src / test / java / com / hazelcast / client / mapreduce / aggregation / <unk> . java <nl> public class <unk> <nl> } <nl> @ test ( timeout ( 100 ) <nl>
ppp b / hazelcast - client / src / test / java / com / hazelcast / client / mapreduce / aggregation / <unk> . java <nl> public class <unk> <nl> } <nl> @ test ( timeout ( 100 ) <nl> public void <unk> ( ) <nl> throws exception { { <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> jdk : <nl>
ppp b / . travis . yml <nl> jdk : <nl> android : <nl>
ppp b / . travis . yml <nl> jdk : <nl> android
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> jdk :
====NEW EXAMPLE====
ppp b / . gitignore <nl> # maven <nl> target <nl> <nl> # gradle <nl>
ppp b / . gitignore <nl> # maven <nl> target <nl>
ppp b / . gitignore <nl> # maven <nl> target <nl> <nl> # <nl>
ppp b / . gitignore <nl> # maven <nl> target <nl> <nl>
ppp b / . gitignore <nl> # maven <nl> target <nl> <nl> #
====NEW EXAMPLE====
ppp b / src / java / org / apache / cassandra / service / cassandradaemon . java <nl> public class cassandradaemon <nl> { <nl> keyspace . viewmanager . <unk> ( ) ; <nl> } <nl> if ( ) { <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl> } ; <nl>
ppp b / src / java / org / apache / cassandra / service / cassandradaemon . java <nl> public class cassandradaemon <nl> { <nl> keyspace . viewmanager . <unk> ( ) ; <nl> } <nl> if ( ) { <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / src / java / org / apache / cassandra / service / cassandradaemon . java <nl> public class cassandradaemon <nl> { <nl> keyspace . viewmanager . <unk> ( ) ; <nl> } <nl> if ( ) { <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl> } ; <nl> ; <nl>
ppp b / src / java / org / apache / cassandra / service / cassandradaemon . java <nl> public class cassandradaemon <nl> { <nl> keyspace . viewmanager . <unk> ( ) ; <nl> } <nl> if ( ) { <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / src / java / org / apache / cassandra / service / cassandradaemon . java <nl> public class cassandradaemon <nl> { <nl> keyspace . viewmanager . <unk> ( ) ; <nl> } <nl> if ( ) { <nl> public string tostring ( ) { <nl> return tolist ( ) ; <nl> } <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> ion . with ( getcontext ( ) ) <nl> < dependency > <nl> < groupid > com . koushikdutta . ion < / groupid > <nl> < artifactid > ion < / artifactid > <nl> < version > 1 . 1 . 2 < / version > <nl> < / dependency > <nl> ` ` ` <nl>
ppp b / readme . md <nl> ion . with ( getcontext ( ) ) <nl> < dependency > <nl> < groupid > com . koushikdutta . ion < / groupid > <nl> < artifactid > ion < / artifactid > <nl> < version > 1 . 1 . 2 < / version > <nl> < / dependency > <nl> ` ` ` ` <nl>
ppp b / readme . md <nl> ion . with ( getcontext ( ) ) <nl> < dependency > <nl> < groupid > com . koushikdutta . ion < / groupid > <nl> < artifactid > ion < / artifactid > <nl> < version > 1 . 1 . 2 < / version > <nl> < / dependency > <nl> ` ` <nl>
ppp b / readme . md <nl> ion . with ( getcontext ( ) ) <nl> < dependency > <nl> < groupid > com . koushikdutta . ion < / groupid > <nl> < artifactid > ion < / artifactid > <nl> < version > 1 . 1 . 2 < / version > <nl> < / dependency > <nl>
ppp b / readme . md <nl> ion . with ( getcontext ( ) ) <nl> < dependency > <nl> < groupid > com . koushikdutta . ion < / groupid > <nl> < artifactid > ion < / artifactid > <nl> < version > 1 . 1 . 2 < / version > <nl> < / dependency > <nl> ` ` ` <nl> <nl>
====NEW EXAMPLE====
ppp b / h2o - docs / src / product flow / packs packs / . . list <nl> test <nl>
ppp b / h2o - docs / src / product flow / packs packs / . . list <nl> <nl>
ppp b / h2o - docs / src / product flow / packs packs / . . list test <nl>
ppp b / h2o - docs / src / product flow / packs packs / . . list <nl>
ppp b / h2o - docs / src / product flow / packs packs / . . list <nl> test <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 9ef7e46f6ab1e86c45f9b0d65cb7e7c370de41e4 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 9ef7e46f6ab1e86c45f9b0d65cb7e7c370de41e4 <nl> remote = git @ github . com : liferay / com - liferay - frontend js . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . commons < / groupid > <nl> < artifactid > commons - pool2 < / artifactid > <nl> < version > 2 . 0 < / version > <nl> < type > jar < / type > <nl> < scope > compile < / scope > <nl> < / dependency > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . commons < / groupid > <nl> < artifactid > commons - pool2 < / artifactid > <nl> < version > 2 . 0 < / version > <nl> < type > jar < / type > <nl> < scope > compile < / scope > <nl> < / > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . commons < / groupid > <nl> < artifactid > commons - pool2 < / artifactid > <nl> < version > 2 . 0 < / version > <nl> < type > jar < / type > <nl> < scope > compile < / scope > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . commons < / groupid > <nl> < artifactid > commons - pool2 < / artifactid > <nl> < version > 2 . 0 < / version > <nl> < type > jar < / type > <nl> < scope > compile < / scope > <nl> < / dependency > <nl> <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . commons < / groupid > <nl> < artifactid > commons - pool2 < / artifactid > <nl> < version > 2 . 0 < / version > <nl> < type > jar < / type > <nl> < scope > compile < / scope > <nl> < / dependency > > <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8a6d5ac71be11766e0ebc4a20746b84ec258ed38 <nl> mode = push <nl> parent = c97b1b7299c4060e32f4fa5ee0a2359fd1f5fcaa <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8a6d5ac71be11766e0ebc4a20746b84ec258ed38 <nl> mode = push <nl> parent = c97b1b7299c4060e32f4fa5ee0a2359fd1f5fcaa <nl> remote = git @ github . com : liferay / com - liferay - portal - search git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / distribution / rpm / src / main / packaging / init . d / elasticsearch <nl> export <unk> <nl> export <unk> <nl> export <unk> <nl> <unk> <nl> export java_home <nl> lockfile = / var / lock / <unk> / $ <unk> <nl>
ppp b / distribution / rpm / src / main / packaging / init . d / elasticsearch <nl> export <unk> <nl> export <unk> <nl> export <unk> <nl> <unk> <nl> export java_home <nl> lockfile = / var / lock / <unk> / $ <unk> <unk> <nl>
ppp b / distribution / rpm / src / main / packaging / init . d / elasticsearch <nl> export <unk> <nl> export <unk> <nl> export <unk> <nl> <unk> <nl> export java_home <nl> lockfile = / var / lock / <unk> / $ <nl>
ppp b / distribution / rpm / src / main / packaging / init . d / elasticsearch <nl> export <unk> <nl> export <unk> <nl> export <unk> <nl> <unk> <nl> export java_home <nl> lockfile = / var / lock / <unk> / $ $ <nl>
ppp b / distribution / rpm / src / main / packaging / init . d / elasticsearch <nl> export <unk> <nl> export <unk> <nl> export <unk> <nl> <unk> <nl> export java_home <nl> lockfile = / var / lock / <unk> / $ <unk> <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / test / jenkins - results - parser / src / main / java / com / liferay / jenkins / results / parser / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> } <nl> return result ; <nl> } <nl>
ppp b / modules / test / jenkins - results - parser / src / main / java / com / liferay / jenkins / results / parser / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> } <nl> return result ; <nl>
ppp b / modules / test / jenkins - results - parser / src / main / java / com / liferay / jenkins / results / parser / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> } <nl>
ppp b / modules / test / jenkins - results - parser / src / main / java / com / liferay / jenkins / results / parser / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> } <nl> return ; <nl>
ppp b / modules / test / jenkins - results - parser / src / main / java / com / liferay / jenkins / results / parser / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> } <nl> return return ; <nl>
====NEW EXAMPLE====
ppp b / web / pom . xml <nl> < dependency > <nl> < groupid > javax . servlet < / groupid > <nl> < artifactid > javax . servlet - api < / artifactid > <nl> < version > 3 . 1 . 0 < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / web / pom . xml <nl> < dependency > <nl> < groupid > javax . servlet < / groupid > <nl> < artifactid > javax . servlet - api < / artifactid > <nl> < version > 3 . 1 . 0 < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > > <nl>
ppp b / web / pom . xml <nl> < dependency > <nl> < groupid > javax . servlet < / groupid > <nl> < artifactid > javax . servlet - api < / artifactid > <nl> < version > 3 . 1 . 0 < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > <nl> <nl>
ppp b / web / pom . xml <nl> < dependency > <nl> < groupid > javax . servlet < / groupid > <nl> < artifactid > javax . servlet - api < / artifactid > <nl> < version > 3 . 1 . 0 < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl>
ppp b / web / pom . xml <nl> < dependency > <nl> < groupid > javax . servlet < / groupid > <nl> < artifactid > javax . servlet - api < / artifactid > <nl> < version > 3 . 1 . 0 < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency >
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * allows for <unk> restrictions , without <unk> away the ability to edit restrictions <nl>
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl>

ppp b / changelog . md <nl> changelog <nl> * allows for <unk> restrictions , without <unk> away the ability to edit <nl>
====NEW EXAMPLE====
ppp b / modules / build - module . gradle <nl> idea { <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / modules / build - module . gradle <nl> idea { <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl>
ppp b /
ppp b / modules / build - module . gradle <nl> idea { <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> <nl> } <nl>
ppp b / modules / build - module . gradle <nl> idea { <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2374a3612656f4d986b75e9317a29802a275cb10 <nl> mode = push <nl> parent = cce08428e0705cf680c9cd29e13d57c9c72e7e20 <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2374a3612656f4d986b75e9317a29802a275cb10 <nl> mode = push <nl> parent = cce08428e0705cf680c9cd29e13d57c9c72e7e20 <nl> remote = git @ github . com : liferay / com - liferay - mentions . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2374a3612656f4d986b75e9317a29802a275cb10 <nl> mode = push <nl> parent = cce08428e0705cf680c9cd29e13d57c9c72e7e20 <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2374a3612656f4d986b75e9317a29802a275cb10 <nl> mode = push <nl> parent = cce08428e0705cf680c9cd29e13d57c9c72e7e20 <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2374a3612656f4d986b75e9317a29802a275cb10 <nl> mode = push <nl> parent = cce08428e0705cf680c9cd29e13d57c9c72e7e20 <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / modules / apps / calevent / calevent - importer / bnd . bnd <nl> bundle - name : liferay calevent importer <nl> bundle - symbolicname : com . liferay . calevent . importer <nl> bundle - version : 1 . 0 . <nl> \ no newline at end of file <nl>
ppp b / modules / apps / calevent / calevent - importer / bnd . bnd <nl> bundle - name : liferay calevent importer <nl> bundle - symbolicname : com . liferay . calevent . importer <nl> bundle - version : 1 . 0 . \ no newline at end of file <nl>
ppp b / modules / apps / calevent / calevent - importer / bnd . bnd <nl> bundle - name : liferay calevent importer <nl> bundle - symbolicname : com . liferay . calevent . importer <nl>
ppp b / modules / apps / calevent / calevent - importer / bnd . bnd <nl> bundle - name : liferay calevent importer <nl> bundle - symbolicname : com . liferay . calevent . importer <nl> bundle - version : 1 . 0 4 <nl> \ no newline at end of file <nl>
ppp b / modules / apps / calevent / calevent - importer / bnd . bnd <nl> bundle - name : liferay calevent importer <nl> bundle - symbolicname : com . liferay . calevent . importer <nl> bundle - version : 1 . 0 . 0 . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e7303271e8293ee97c30623e9b5309de2ff81d4f <nl> mode = push <nl> parent = 8f43e8f0cd64b1694074ecb08b9ae89830a370a2 <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e7303271e8293ee97c30623e9b5309de2ff81d4f <nl> mode = push <nl> parent = 8f43e8f0cd64b1694074ecb08b9ae89830a370a2 <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / jodd - http / src / main / java / jodd / http / <unk> . java <nl> public class <unk> { <nl> <unk> ( httprequest ) ; <nl> / / send request <nl>
ppp b / jodd - http / src / main / java / jodd / http / <unk> . java <nl> public class <unk> { <nl> <unk> ( httprequest ) ; <nl>
ppp b / jodd - http / src / main / java / jodd / http / <unk> . java <nl> public class <unk> { <nl> <unk> ( httprequest ) ; <nl> / / send request <nl> system . out . httprequest . send ( ) ; <nl> <unk> ( httpresponse ) ; <nl>
ppp b / jodd - http / src / main / java / jodd / http / <unk> . java <nl> public class <unk> { <nl> <unk> ( httprequest ) ; <nl> / / send request <nl> system . out . httprequest . send ( ) ; <nl> <unk> ( httpresponse ; <nl>
ppp b / jodd - http / src / main / java / jodd / http / <unk> . java <nl> public class <unk> { <nl> <unk> ( httprequest ) <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> shortversion = ' 4 . 0 . 4 ' <nl> issnapshot = false <nl> gitcommit = getgitcommit ( ) <nl> javadocalldir = new file ( builddir , ' javadoc ' ) <nl> documentationdir = new file ( builddir , ' documentation ' ) <nl>
ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> shortversion = ' 4 . 0 . 4 ' <nl> issnapshot = false <nl> gitcommit = getgitcommit ( ) <nl> javadocalldir = new file ( builddir , ' javadoc ' ) <nl> documentationdir = new file ( builddir , ' documentation ' ' <nl>
ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> shortversion = ' 4 . 0 . 4 ' <nl> issnapshot = false <nl> gitcommit = getgitcommit ( ) <nl> javadocalldir = new file ( builddir , ' javadoc ' ) <nl> documentationdir = new file ( builddir , ' documentation ) <nl>
ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> shortversion = ' 4 . 0 . 4 ' <nl> issnapshot = false <nl> gitcommit = getgitcommit ( ) <nl> javadocalldir = new file ( builddir , ' javadoc ' ) <nl> documentationdir = new file ( builddir , ' documentation ' <nl>
ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> shortversion = ' 4 . 0 . 4 ' <nl> issnapshot = false <nl> gitcommit = getgitcommit ( ) <nl> javadocalldir = new file ( builddir , ' javadoc ' ) <nl> documentationdir = new file ( builddir , ' documentation ' ) ) <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> android : <nl>
ppp b / . travis . yml <nl> android : <nl> tools <nl>
ppp b / . travis . yml <nl> android : <nl> <nl>
ppp b / . travis . yml <nl> android : <nl> tools <nl> -
ppp b / . travis . yml <nl>
====NEW EXAMPLE====
ppp b / dependencies / common / install - boost <nl> then <nl> sudo tar - - <unk> - <unk> . . / $ <unk> <nl> # bootstrap boost <nl> . / bootstrap . sh <nl> <nl> special special <unk> of build for osx <nl> if [ " $ platform " = = " darwin " ] <nl>
ppp b / dependencies / common / install - boost <nl> then <nl> sudo tar - - <unk> - <unk> . . / $ <unk> <nl> # bootstrap boost <nl> . / bootstrap . sh <nl> <nl> special special <unk> of build for osx <nl> if [ " $ platform " = = " darwin " " <nl>
ppp b / dependencies / common / install - boost <nl> then <nl> sudo tar - - <unk> - <unk> . . / $ <unk> <nl> # bootstrap boost <nl> . / bootstrap . sh <nl> <nl> special special <unk> of build for osx <nl> if [ " $ platform " = = " darwin " <nl>
ppp b / dependencies / common / install - boost <nl> then <nl> sudo tar - - <unk> - <unk> . . / $ <unk> <nl> # bootstrap boost <nl> . / bootstrap . sh <nl> <nl> special special <unk> of build for osx <nl> if [ " $ platform " = = " darwin " ] ] <nl>
ppp b / dependencies / common / install - boost <nl> then <nl> sudo tar - - <unk> - <unk> . . / $ <unk> <nl> # bootstrap boost <nl> . / bootstrap . sh <nl> <nl> special special <unk> of build for osx <nl> if [ " $ platform " = = " darwin darwin <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / rules / en / det_a . txt <nl> <unk> <nl> eukaryote <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl>
ppp b / trunk / jlanguagetool / rules / en / det_a . txt <nl> <unk> <nl> eukaryote <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl>
ppp b / trunk / jlanguagetool / rules / en / det_a . txt <nl> <unk> <nl> eukaryote <nl> <unk> <nl> <unk> <nl> <unk> <nl> <nl>
ppp b / trunk / jlanguagetool / rules / en / det_a . txt <nl> <unk> <nl> eukaryote <nl> <unk> <nl> <unk> <nl> <unk> <nl>
ppp b / trunk / jlanguagetool / rules / en / det_a . txt <nl> <unk> <nl> eukaryote <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <nl>
====NEW EXAMPLE====
ppp b / underfs / swift / src / main / java / alluxio / underfs / swift / swiftinputstream . java <nl> public class swiftinputstream extends inputstream { <nl> if ( n < = 0 ) { <nl> return 0 ; <nl> } <nl> <unk> ( ) ; <nl> mpos + = n ; <nl> <unk> ( ) ; <nl>
ppp b / underfs / swift / src / main / java / alluxio / underfs / swift / swiftinputstream . java <nl> public class swiftinputstream extends inputstream { <nl> if ( n < = 0 ) { <nl> return 0 ; <nl> } <nl> <unk> ( ) ; <nl> mpos + = n ; <nl> <unk> ( ) ) ; <nl>
ppp b / underfs / swift / src / main / java / alluxio / underfs / swift / swiftinputstream . java <nl> public class swiftinputstream extends inputstream { <nl> if ( n < = 0 ) { <nl> return 0 ; <nl> } <nl> <unk> ( ) ; <nl> mpos + = n ; <nl> <unk> ( ) ; <nl> <nl>
ppp b / underfs / swift / src / main / java / alluxio / underfs / swift / swiftinputstream . java <nl> public class swiftinputstream extends inputstream { <nl> if ( n < = 0 ) { <nl> return 0 ; <nl> } <nl> <unk> ( ) ; <nl> mpos + = n ; <nl> <unk> ( ) ;
ppp b / underfs / swift / src / main / java / alluxio / underfs / swift / swiftinputstream . java <nl> public class swiftinputstream extends inputstream { <nl> if ( n < = 0 ) { <nl> return 0 ; <nl> } <nl> <unk> ( ) ; <nl> mpos + = n ; <nl> <unk> ( ; <nl>
====NEW EXAMPLE====
ppp b / community / cypher / src / docs / dev / index . txt <nl> [ [ query - lang ] ] <nl> cypher query language <nl> <nl> = = = = = = = = = = = = = = = = = = = = = = <nl>
ppp b / community / cypher / src / docs / dev / index . txt <nl> [ [ query - lang ] ] <nl> cypher query language <nl> <nl> = = = = = = = = = = = = = = = = = = = = = <nl>
ppp b / community / cypher / src / docs / dev / index . txt <nl> [ [ query - lang ] ] <nl> cypher query language <nl> <nl> = = = = = = = = = = = = = = = = = = = = = =
ppp b / community / cypher / src / docs / dev / index . txt <nl> [ [ query - lang ] ] <nl> cypher query language <nl> <nl> = = = = = = = = = = = = = = = = = = = = = = = <nl>
ppp b / community / cypher / src / docs / dev / index . txt <nl> [ [ query - lang ] ] <nl> cypher query language <nl> <nl> = = = = = = = = = = = = = = = = = = = = = = <nl> <nl>
====NEW EXAMPLE====
ppp b / osmand / src / net / osmand / plus / activities / search / <unk> . java <nl> import gnu . trove . map . hash . <unk> ; <nl> public class <unk> extends <unk> { <nl>
ppp b / osmand / src / net / osmand / plus / activities / search / <unk> . java <nl> import gnu . trove . map . hash . <unk> ; <nl> public class <unk> extends <unk> { <nl> private private <unk> ; <nl> private <unk> location ; <nl>
ppp b / osmand / src / net / osmand / plus / activities / search / <unk> . java <nl> import gnu . trove . map . hash . <unk> ; <nl>
ppp b / osmand / src / net / osmand / plus / activities / search / <unk> . java <nl> import gnu . trove . map . hash . <unk> ; <nl> public class <unk> extends <unk> { <nl> private private <unk> ; <nl> private <unk> ; <nl>
ppp b / osmand / src / net / osmand / plus / activities / search / <unk> . java <nl> import gnu . trove . map . hash . <unk> ; <nl> public class <unk> extends <unk> ; <nl>
====NEW EXAMPLE====
ppp b / subprojects / docs / src / samples / native - binaries / variants / build . gradle <nl> model { <nl> / / start snippet target - platforms <nl> executables { <nl> main { <nl> <unk> " x86 " , " <unk> " <nl> } <nl> } <nl> / / end snippet target - platforms <nl>
ppp b / subprojects / docs / src / samples / native - binaries / variants / build . gradle <nl> model { <nl> / / start snippet target - platforms <nl> executables { <nl> main { <nl> <unk> " x86 " , " <unk> " <nl> } <nl> } <nl> / / end snippet target - platforms platforms <nl>
ppp b / subprojects / docs / src / samples / native - binaries / variants / build . gradle <nl> model { <nl> / / start snippet target - platforms <nl> executables { <nl> main { <nl> <unk> " x86 " , " <unk> " <nl> } <nl> } <nl> / / end snippet target - <nl>
ppp b / subprojects / docs / src / samples / native - binaries / variants / build . gradle <nl> model { <nl> / / start snippet target - platforms <nl> executables { <nl> main { <nl> <unk> " x86 " , " <unk> " <nl> } <nl> } <nl> / / end snippet target - - <nl>
ppp b / subprojects / docs / src / samples / native - binaries / variants / build . gradle <nl> model { <nl> / / start snippet target - platforms <nl> executables { <nl> main { <nl> <unk> " x86 " , " <unk> " <nl> } <nl> } <nl> / / end snippet target target <nl>
====NEW EXAMPLE====
ppp b / enterprise / security / src / test / java / org / neo4j / server / security / enterprise / auth / integration / bolt / <unk> . java <nl> public class <unk> <nl> <unk> ( ) ; <nl> } <nl> @ before <nl> public void setup ( ) <nl> { <nl>
ppp b / enterprise / security / src / test / java / org / neo4j / server / security / enterprise / auth / integration / bolt / <unk> . java <nl> public class <unk> <nl> <unk> ( ) ; <nl> } <nl> @ before <nl> public void setup ( ) <nl> { <nl> <nl>
ppp b / enterprise / security / src / test / java / org / neo4j / server / security / enterprise / auth / integration / bolt / <unk> . java <nl> public class <unk> <nl> <unk> ( ) ; <nl> } <nl> @ before <nl> public void setup ( ) <nl>
ppp b / enterprise / security / src / test / java / org / neo4j / server / security / enterprise / auth / integration / bolt / <unk> . java <nl> public class <unk> <nl> <unk> ( ) ; <nl> } <nl> @ before <nl> public void setup ( ) <nl> { { <nl>
ppp b / enterprise / security / src / test / java / org / neo4j / server / security / enterprise / auth / integration / bolt / <unk> . java <nl> public class <unk> <nl> <unk> ( ) ; <nl> } <nl> @ before <nl> public void setup ( ) <nl> <nl>
====NEW EXAMPLE====
ppp b / core / tests / hosttests / src / android / content / pm / packagemanagerhosttestutils . java <nl> public class packagemanagerhosttestutils extends assert { <nl> mtestrunerrormessage = errormessage ; <nl> } <nl> public void testrunstarted ( int int ( int testcount ) { <nl> / / ignore <nl> } <nl>
ppp b / core / tests / hosttests / src / android / content / pm / packagemanagerhosttestutils . java <nl> public class packagemanagerhosttestutils extends assert { <nl> mtestrunerrormessage = errormessage ; <nl> } <nl> public void testrunstarted ( int int ( int testcount ) { <nl> / / ignore <nl> <nl>
ppp b / core / tests / hosttests / src / android / content / pm / packagemanagerhosttestutils . java <nl> public class packagemanagerhosttestutils extends assert { <nl> mtestrunerrormessage = errormessage ; <nl> } <nl> public void testrunstarted ( int int ( int testcount ) { <nl> / / ignore <nl>
ppp b / core / tests / hosttests / src / android / content / pm / packagemanagerhosttestutils . java <nl> public class packagemanagerhosttestutils extends assert { <nl> mtestrunerrormessage = errormessage ; <nl> } <nl> public void testrunstarted ( int int ( int testcount ) { <nl> / / ignore <nl> } <nl> <nl>
ppp b / core / tests / hosttests / src / android / content / pm / packagemanagerhosttestutils . java <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . 9 ' ) { <nl> exclude module : ' netty ' <nl> } <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . 9 ' ) { <nl> exclude module : ' netty ' <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . 9 ' ) { <nl> exclude module : ' netty ' } <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . 9 ' ) { <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . 9 ' ) { <nl> exclude module : ' netty ' <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> make your native android toast look beautiful . <nl> # # preview <nl>
ppp b / readme . md <nl> make your native android toast look beautiful . <nl> # # preview
ppp b / readme . md <nl> make your native android toast look beautiful . <nl> # # # <nl>
ppp b / readme . md <nl> make your native android toast look beautiful . <nl> # # preview <nl> <nl>
ppp b
====NEW EXAMPLE====
ppp b / osmand / ant . properties <nl> # the password will be asked during the build when you use the ' release ' target <nl>
ppp b / osmand / ant . properties <nl>

ppp b / osmand / ant . properties <nl> # the password will be asked during the build when you use the ' release ' target . <nl> key . alias = osmand <nl> key . store = ~ / <unk> <nl> jar . libs . dir = <nl> \ no newline at end of file <nl> . libs . dir = lib <nl> java . compilerargs = - xlint xlint <nl> \ no newline at end of file <nl>
ppp b / osmand / ant . properties <nl> # the password will be asked during the build when you use the ' release ' target . <nl> key . alias = osmand <nl> key . store = ~ / <unk> <nl> jar . libs . dir = <nl> \ no newline at end of file <nl> . libs . dir = lib <nl> java . compilerargs = - xlint <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> # <unk> <unk> <nl> / eclipse / <nl> / repo <nl>
ppp b / . gitignore <nl> #
ppp b / . gitignore <nl> # <unk> <unk> <nl> / eclipse / <nl> / repo / <nl>
ppp b / . gitignore <nl> # <unk> <unk> <nl> / eclipse / <nl> / / <nl>
ppp b / . gitignore <nl> # <unk> <unk> <nl> / eclipse / <nl> / repo / <nl> repo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / comment / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a6e9350a56d364b24bd44335c6ff75830028412f <nl> mode = push <nl> parent = 97275d5f5b8efd89e3234ba9aa0e913537470a51 <nl> remote = git @ github . com : liferay / com - liferay - comment . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / comment / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / comment / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a6e9350a56d364b24bd44335c6ff75830028412f <nl> mode = push <nl> parent = 97275d5f5b8efd89e3234ba9aa0e913537470a51 <nl> remote = git @ github . com : liferay / com - liferay - comment . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / comment / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a6e9350a56d364b24bd44335c6ff75830028412f <nl> mode = push <nl> parent = 97275d5f5b8efd89e3234ba9aa0e913537470a51 <nl> remote = git @ github . com : liferay / com - liferay - comment . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / comment / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a6e9350a56d364b24bd44335c6ff75830028412f <nl> mode = push <nl> parent = 97275d5f5b8efd89e3234ba9aa0e913537470a51 <nl> remote = git @ github . com : liferay / com - liferay - comment . git <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / . travis . yml <nl> notifications : <nl> email : false <nl>
ppp b / . travis . yml <nl> notifications : <nl> email : <nl>
ppp b / . travis . yml <nl> notifications : <nl> email :
ppp b / . travis . yml <nl> notifications : <nl>
ppp b / . travis . yml <nl> notifications : <nl> email
====NEW EXAMPLE====
ppp b / acra / doc / model / <unk> . uml <nl> @ <unk> <nl> title
ppp b / acra / doc / model / <unk> . uml <nl>
ppp b / acra / doc / model / <unk> . uml
ppp b / acra / doc / model / <unk> .
ppp b
====NEW EXAMPLE====
ppp b / portal - impl / src / com / liferay / portal / repository / <unk> / <unk> . java <nl> public class <unk> <nl> @ override <nl> public void <unk> ( ) throws portalexception , systemexception { <nl>
ppp b / portal - impl / src / com / liferay / portal / repository / <unk> / <unk> . java <nl> public class <unk> <nl> @ override <nl> public void <unk> ( ) throws portalexception , systemexception { <nl> <unk> . . ( ( getgroupid ) ) ; <nl> } <nl>
ppp b / portal - impl / src / com / liferay / portal / repository / <unk> / <unk> . java <nl> public class <unk> <nl> @ override <nl>
ppp b / portal - impl / src / com / liferay / portal / repository / <unk> / <unk> . java <nl> public class <unk> <nl> @ override <nl> public void <unk> ( ) throws portalexception , systemexception { <nl> <unk> . . ( ( getgroupid ) ) ; <nl>
ppp b / portal - impl / src / com / liferay / portal / repository / <unk> / <unk> . java <nl> public class <unk> <nl> @ override <nl> public void <unk> ( ) throws portalexception , systemexception { { <nl>
====NEW EXAMPLE====
ppp b / version - beta <nl> . 0 beta 10 10 <nl>
ppp b / version - beta <nl> . 0 beta 10 10 <nl> <nl>
ppp b / version - beta <nl> . 0 beta 10 10 <nl> <nl> <nl>
ppp b / version - beta <nl> . 0 beta 10 <nl>
ppp b / version - beta <nl> . 0 beta 10 beta <nl>
====NEW EXAMPLE====
ppp b / plugins / svn4idea / src / org / jetbrains / idea / svn / <unk> . java <nl> public class <unk> extends abstractvcs < committedchangelist > { <nl> @ override <nl> public <unk> <unk> ( ) { <nl> return <unk> ( ) ; <nl> <unk> <unk> ( ) { <nl> return <unk> ( ) ; <nl> } <nl>
ppp b / plugins / svn4idea / src / org / jetbrains / idea / svn / <unk> . java <nl>
ppp b / plugins / svn4idea / src / org / jetbrains / idea / svn / <unk> . java <nl> public class <unk> extends abstractvcs < committedchangelist > { <nl> @ override <nl> public <unk> <unk> ( ) { <nl> return <unk> ( ) ; <nl> <unk> <unk> ( ) { <nl> return <unk> ( ) ; <nl> } <nl> <nl>
ppp b / plugins / svn4idea / src / org / jetbrains / idea / svn / <unk> . java <nl> public class <unk> extends abstractvcs < committedchangelist > { <nl> @ override <nl> public <unk> <unk> ( ) { <nl> return <unk> ( ) ; <nl> <unk> <unk> ( ) { <nl> return <unk> ( ) ; <nl>
ppp b / plugins / svn4idea / src / org / jetbrains / idea / svn / <unk> . java <nl> public class <unk> extends abstractvcs < committedchangelist > { <nl> @ override <nl> public <unk> <unk> ( ) { <nl> return <unk> ( ) ; <nl> <unk> <unk> ( ) { <nl> return <unk> ( ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / grails - test - suite - uber / src / test / groovy / grails / util / pluginbuildsettingstests . groovy <nl> class pluginbuildsettingstests extends groovytestcase { <nl> nonuserscripts < < script <nl> } <nl> } <nl> assertequals 51 , nonuserscripts . size ( ) <nl> } <nl> void testgetpluginscripts ( ) { <nl>
ppp b / grails - test - suite - uber / src / test / groovy / grails / util / pluginbuildsettingstests . groovy <nl> class pluginbuildsettingstests extends groovytestcase { <nl> nonuserscripts < < script <nl> } <nl> } <nl> assertequals 51 , nonuserscripts . size ( ) <nl> } <nl> void testgetpluginscripts ( ) ) <nl>
ppp b / grails - test - suite - uber / src / test / groovy / grails / util / pluginbuildsettingstests . groovy <nl> class pluginbuildsettingstests extends groovytestcase { <nl> nonuserscripts < < script <nl> } <nl> } <nl> assertequals 51 , nonuserscripts . size ( ) <nl> } <nl> void testgetpluginscripts ( ) <nl>
ppp b / grails - test - suite - uber / src / test / groovy / grails / util / pluginbuildsettingstests . groovy <nl> class pluginbuildsettingstests extends groovytestcase { <nl> nonuserscripts < < script <nl> } <nl> } <nl> assertequals 51 , nonuserscripts . size ( ) <nl> } <nl> void testgetpluginscripts ( ) ; <nl>
ppp b / grails - test - suite - uber / src / test / groovy / grails / util / pluginbuildsettingstests . groovy <nl> class pluginbuildsettingstests extends groovytestcase { <nl> nonuserscripts < < script <nl> } <nl> } <nl> assertequals 51 , nonuserscripts . size ( ) <nl> } <nl> void testgetpluginscripts ( ) { <nl> <nl>
====NEW EXAMPLE====
ppp b / src / com / facebook / buck / apple / <unk> . java <nl> public class <unk> { <nl> <unk> ) ; <nl> <unk> = <unk> ( <nl> <unk> , <nl> params , <nl> resolver , <nl> ( <unk> ) <unk> , <nl> <unk> , <nl>
ppp b / src / com / facebook / buck / apple / <unk> . java <nl> public class <unk> { <nl> <unk> ) ; <nl> <unk> = <unk> ( <nl> <unk> , <nl> params , <nl> resolver , <nl> ( <unk> ) <unk> , <nl> <unk> <nl>
ppp b / src / com / facebook / buck / apple / <unk> . java <nl> public class <unk> { <nl> <unk> ) ; <nl> <unk> = <unk> ( <nl> <unk> , <nl> params , <nl> resolver , <nl> ( <unk> ) <unk> , <nl> <unk> , <nl> <nl>
ppp b / src / com / facebook / buck / apple / <unk> . java <nl> public class <unk> { <nl> <unk> ) ; <nl> <unk> = <unk> ( <nl> <unk> , <nl> params , <nl> resolver , <nl> ( <unk> ) <unk> , <nl>
ppp b / src / com / facebook / buck / apple / <unk> . java <nl> public class <unk> { <nl> <unk> ) ; <nl> <unk> = <unk> ( <nl> <unk> , <nl> params , <nl> resolver , <nl> ( <unk> ) <unk> , <nl> <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / elastic - job - example / elastic - job - example - lite - springboot / src / main / resources / application . yml <nl> <unk> : <nl> spring : <nl> profiles : <nl> active : <unk> <nl>
ppp b / elastic - job - example / elastic - job - example - lite - springboot / src / main / resources / application . yml <nl> <unk> : <nl> spring : <nl> profiles : <nl> active : <nl>
ppp b / elastic - job - example / elastic - job - example - lite - springboot / src / main / resources / application . yml <nl> <unk> : <nl> spring : <nl> profiles : <nl> active : <unk> <nl> <nl>
ppp b / elastic - job - example / elastic - job - example - lite - springboot / src / main / resources / application . yml <nl> <unk> : <nl> spring : <nl> profiles : <nl> active : <unk> <unk> <nl>
ppp b / elastic - job - example / elastic - job - example - lite - springboot / src / main / resources / application . yml <nl> <unk> : <nl> spring : <nl> profiles : <nl>
====NEW EXAMPLE====
ppp b / modules / graylog2 rest - client <nl> subproject commit da226240c46bcad376c540571fbd6cd81598cc9c <nl>
ppp b / modules / graylog2 rest - client <nl> subproject commit 0be263d5d3effd2df5f976fa4a127017268749cc <nl>
ppp b / modules / graylog2 rest - client <nl> subproject commit e73e4a56d3c12d7a2f856ae65b00789b3e0cecb5 <nl>
ppp b / modules / graylog2 rest - client <nl> subproject commit da226240c46bcad376c540571fbd6cd81598cc9c <nl> <nl>
ppp b / modules / graylog2 rest - client <nl> subproject commit d8dd1fbb6551937e678313c4d9c7fd8ed6969ca3 <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < <unk> > <unk> < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < <unk> > true < / <unk> > <nl>
ppp b / pom . xml <nl> < <unk> > <unk> < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < <unk> > <nl>
ppp b / pom . xml <nl> < <unk> > <unk> < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < <unk> > <nl> > <nl> < / rules > <nl> < / configuration > <nl>
ppp b / pom . xml <nl> < <unk> > <unk> < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < <unk> > > <nl>
ppp b / pom . xml <nl> < <unk> > <unk> < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < <unk> > true < / <unk> > <nl> < <unk> > <nl> > <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - microblogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - microblogs . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - microblogs . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 505 : fix debug string construction <nl> * storm - 613 : fix wrong getoffset return value <nl>
ppp b / changelog . md <nl> * storm - 505 : fix debug string construction <nl>
ppp b / changelog . md <nl>
ppp

====NEW EXAMPLE====
ppp b / license . txt <nl>
ppp b / license . txt <nl> copyright (
ppp b / license . txt <nl> copyright ( c
ppp b / license . txt <nl> copyright
ppp b / license . txt <nl> copyright ( c ) 2015 <unk> , inc . <nl> permission is hereby granted , free of charge , to any person obtaining <nl> a copy of this software and associated documentation files ( the <nl>
====NEW EXAMPLE====
ppp b / news . md <nl> * add product and version metadata to windows installer <nl> * improved detection of <unk> installation location on windows <nl> # # # server <nl> * include active project in document title ( <unk> of browser tab ) <nl>
ppp b / news . md <nl> * add product and version metadata to windows installer <nl> * improved detection of <unk> installation location on windows <nl> # # # server <nl> * include active project in document title ( <unk> of browser tab <nl>
ppp b / news . md <nl> * add product and version metadata to windows installer <nl> * improved detection of <unk> installation location on windows <nl> # # # server <nl> * include active project in document title ( <unk> of browser tab tab <nl>
ppp b / news . md <nl> * add product and version metadata to windows installer <nl> * improved detection of <unk> installation location on windows <nl> # # # server <nl> * include active project in document title ( <unk> of browser ) <nl>
ppp b / news . md <nl> * add product and version metadata to windows installer <nl> * improved detection of <unk> installation location on windows <nl> # # # server <nl> * include active project in document title ( <unk> of browser tab ) ) <nl>
====NEW EXAMPLE====
ppp b / jooq / pom . xml <nl> < export - package > * < / export - package > <nl> < import - package > <nl> javax . persistence ; resolution : = optional , <nl>
ppp b / jooq / pom . xml <nl> < export - package > * < / export - package > <nl> < import - package > <nl>
ppp b / jooq / pom . xml <nl> < export - package > * < / export - package > <nl> < import - package > <nl> javax . persistence ; resolution : = optional , , <nl>
ppp b / jooq / pom . xml <nl> < export - package > * < / export - package > <nl> < import - package > <nl> javax . persistence ; resolution : = optional <nl>
ppp b / jooq / pom . xml <nl> < export - package > * < / export - package > <nl>
====NEW EXAMPLE====
ppp b / cas - server - documentation / installation / docker - installation . md <nl>
ppp b / cas - server - documentation / installation / docker - installation . md <nl> <nl>
ppp b / cas - server - documentation / installation / docker - installation . md <nl> <nl> -
ppp b / cas - server - documentation / installation / docker - installation . md <nl> <nl> - <nl>
ppp b / cas - server - documentation / installation / docker - installation . md <nl> <nl> - -
====NEW EXAMPLE====
ppp b / src / checkstyle / com / puppycrawl / tools / checkstyle / . cvsignore <nl> <unk> * . java <nl>
ppp b / src / checkstyle / com / puppycrawl / tools / checkstyle / . cvsignore <nl> <unk> * . <nl>
ppp b / src / checkstyle / com / puppycrawl / tools / checkstyle / . cvsignore <nl> <unk> * . java <nl> * . idea <nl>
ppp b / src / checkstyle / com / puppycrawl / tools / checkstyle / . cvsignore <nl> <unk> * . java <nl> <nl>
ppp b / src / checkstyle / com / puppycrawl / tools / checkstyle / . cvsignore <nl> <unk> * . java
====NEW EXAMPLE====
ppp b / controller / src / main / java / org / jboss / as / controller / operations / common / <unk> . java <nl> public class <unk> implements <unk> { <nl> private <unk> ( ) { <nl> } <nl> @ override <nl> public void execute ( <unk> context , <unk> operation ) throws <unk> { <nl>
ppp b / controller / src / main / java / org / jboss / as / controller / operations / common / <unk> . java <nl> public class <unk> implements <unk> { <nl> private <unk> ( ) { <nl> } <nl> @ override <nl> public void execute ( <unk> context , <unk> operation ) throws <unk> { { <nl>
ppp b / controller / src / main / java / org / jboss / as / controller / operations / common / <unk> . java <nl> public class <unk> implements <unk> { <nl> private <unk> ( ) { <nl> } <nl> @ override <nl> public void execute ( <unk> context , <unk> operation ) throws { <nl>
ppp b / controller / src / main / java / org / jboss / as / controller / operations / common / <unk> . java <nl> public class <unk> implements <unk> { <nl> private <unk> ( ) { <nl> } <nl> @ override <nl> public void execute ( <unk> context , <unk> operation ) throws <unk> <unk> <nl>
ppp b / controller / src / main / java / org / jboss / as / controller / operations / common / <unk> . java <nl> public class <unk> implements <unk> { <nl> private <unk> ( ) { <nl> } <nl> @ override <nl> public void execute ( <unk> context , <unk> operation ) throws <unk> { <nl> <nl>
====NEW EXAMPLE====
ppp b / design - docs / continuous - delivery - for - c - plus - plus . md <nl> tbd <nl>
ppp b / design - docs / continuous - delivery - for - c - plus - plus . md <nl>
ppp b / design - docs / continuous - delivery - for -
ppp b / design - docs / continuous - delivery - for - c -
ppp b / design - docs / continuous - delivery - for - c - plus
====NEW EXAMPLE====
ppp b / modules / apps / foundation / hello - velocity / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - hello - velocity . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / hello - velocity / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / hello - velocity / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / hello - velocity / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / hello - velocity / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - hello - velocity git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / java / org / jivesoftware / openfire / nio / <unk> . java <nl> public class <unk> implements connection { <nl> / / message it will be stored offline <nl> <unk> . <unk> ( packet ) ; <nl> } <nl> } <nl> public void configurekillbillnodesapi ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / src / java / org / jivesoftware / openfire / nio / <unk> . java <nl> public class <unk> implements connection { <nl> / / message it will be stored offline <nl> <unk> . <unk> ( packet ) ; <nl> } <nl> } <nl> public void configurekillbillnodesapi ( ) ; <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / src / java / org / jivesoftware / openfire / nio / <unk> . java <nl> public class <unk> implements connection { <nl> / / message it will be stored offline <nl> <unk> . <unk> ( packet ) ; <nl> } <nl> } <nl> public void configurekillbillnodesapi ( ) ; <nl> } <nl> } <nl>
ppp b / src / java / org / jivesoftware / openfire / nio / <unk> . java <nl> public class <unk> implements connection { <nl>
ppp b / src / java / org / jivesoftware / openfire / nio / <unk> . java <nl> public class <unk> implements connection { <nl> / / message it will be stored offline <nl> <unk> . <unk> ( packet ) ; <nl> } <nl> } <nl> public void configurekillbillnodesapi ( ) ; <nl> } <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> . settings <nl> . <unk> <nl> . <unk> <nl> bin <nl> <nl> target out <nl>
ppp b / . gitignore <nl> . settings <nl> . <unk> <nl> . <unk> <nl> bin <nl> <nl> target <nl> out <nl>
ppp b / . gitignore <nl> . settings <nl> . <unk> <nl> . <unk> <nl> bin <nl> <nl> target <nl>
ppp b / . gitignore <nl> . settings <nl> . <unk> <nl> . <unk> <nl> bin <nl> <nl> target <nl> <nl>
ppp b / . gitignore <nl> . settings <nl> . <unk> <nl> . <unk> <nl> bin <nl> <nl> target target <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl>
====NEW EXAMPLE====
ppp b / changelog <nl> * fixed recent books list <nl>
ppp b / changelog <nl> * fixed recent books list <nl> * fixed possible crash in yotaphone back screen service <nl> * new config subsystem <nl> <nl> = = = = = 1 . 9 in the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ( ) . 9 4 ( 23 , ) = = = = = <nl> * yotaphone back screen support <nl>
ppp b / changelog <nl> * fixed recent books list <nl> * fixed possible crash in yotaphone back screen service <nl> * new config subsystem <nl> <nl> = = = = = 1 . 9 in the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ( ) . 9 4 ( 23 , ) = = = = = <nl>
ppp b / changelog <nl> * fixed recent books list <nl> * fixed possible crash in yotaphone back screen service <nl> * new config subsystem <nl> <nl> = = = = = 1 . 9 in the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ( ) . 9 4 ( 23 , ) = = = = = <nl> * yotaphone back screen <nl>
ppp b / changelog <nl> * fixed recent books list <nl> * fixed possible crash in yotaphone back screen service <nl> * new config subsystem <nl> <nl> = = = = = 1 . 9 in the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ( ) . 9 4 ( 23 , ) = = = = = <nl> * yotaphone back back <nl>
====NEW EXAMPLE====
ppp b / core / java / android / content / res / assetmanager . java <nl> public final class assetmanager { <nl> / / for communication with native code . <nl>
ppp b / core / java / android / content / res / assetmanager . java <nl> public final class assetmanager { <nl> / / for communication with native code . <nl> } <nl>
ppp b / core / java / android / content / res / assetmanager . java <nl> public final class assetmanager { <nl> / / for communication with native code . private <nl>
ppp b / core / java / android / content / res / assetmanager . java <nl> public final class assetmanager { <nl> / / for communication with native code <nl>
ppp b / core / java / android / content / res / assetmanager . java <nl> public final class assetmanager { <nl> / / for communication with native code . <nl> private int <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / config / routes . rb <nl>
ppp b / config / routes . rb <nl> graylog2webinterface : : application . routes
ppp b / config / routes . rb <nl> graylog2webinterface : : application . routes . draw do <nl> resources : <unk> , : as = > " terms " <nl> end <nl> resources : hosts : <nl> * @ override <nl> end of file <nl> end resources : hosts do <nl> resources : messages <nl> end <nl>
ppp b / config / routes . rb <nl> graylog2webinterface : : application . routes . draw do <nl> resources : <unk> , : as = > " terms " <nl> end <nl> resources : hosts : <nl> * @ override <nl> end of file <nl> end resources : hosts do <nl> resources : messages <nl> <nl>
ppp b / config / routes . rb <nl> graylog2webinterface : : application . routes . draw do <nl> resources : <unk> , : as = > " terms " <nl> end <nl> resources : hosts : <nl> * @ override <nl> end of file <nl> end resources : hosts do <nl> resources : messages <nl>
====NEW EXAMPLE====
ppp b / project . clj <nl>
ppp b / project . clj <nl> ( defproject storm - 0
ppp b / project . clj <nl> ( defproject
ppp b / project . clj <nl> ( defproject storm - 0 . 5 . 4 " <nl> <nl> : source - - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm " <nl>
ppp b / project . clj <nl> ( defproject storm - 0 . 5 . 4 " <nl> <nl> : source - - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm " " <nl>
====NEW EXAMPLE====
ppp b / jooq / src / main / java / org / jooq / impl / <unk> . java <nl> class <unk> extends <unk> < string > { <nl> case <unk> : <nl> case derby : <nl> case hsqldb : <nl> case hsqldb : <nl> case ingres : <nl> case postgres : <nl>
ppp b / jooq / src / main / java / org / jooq / impl / <unk> . java <nl> class <unk> extends <unk> < string > { <nl> case <unk> : <nl> case derby : <nl> case hsqldb : <nl> case hsqldb : <nl> case ingres : <nl> case postgres <nl>
ppp b / jooq / src / main / java / org / jooq / impl / <unk> . java <nl> class <unk> extends <unk> < string > { <nl> case <unk> : <nl> case derby : <nl> case hsqldb : <nl> case hsqldb : <nl> case ingres : <nl>
ppp b / jooq / src / main / java / org / jooq / impl / <unk> . java <nl> class <unk> extends <unk> < string > { <nl> case <unk> : <nl> case derby : <nl> case hsqldb : <nl> case hsqldb : <nl> case ingres : <nl> case postgres : <nl> <nl>
ppp b / jooq / src / main / java / org / jooq / impl / <unk> . java <nl> class <unk> extends <unk> < string > { <nl> case <unk> : <nl> case derby : <nl> case hsqldb : <nl> case hsqldb : <nl> case ingres : <nl> case postgres :
====NEW EXAMPLE====
ppp b / core / pom . xml <nl> < / reporting > <nl> < properties > <nl> < antlrpluginversion > 2 . 0 - snapshot < / antlrpluginversion > <nl> < / properties > <nl> < / project > <nl>
ppp b / core / pom . xml <nl> < / reporting > <nl> < properties > <nl> < antlrpluginversion > 2 . 0 - snapshot < / antlrpluginversion > <nl> < / properties > <nl> < / project > > <nl>
ppp b / core / pom . xml <nl> < / reporting > <nl> < properties > <nl> < antlrpluginversion > 2 . 0 - snapshot < / antlrpluginversion > <nl> < / properties > <nl> < / project > <nl> <nl>
ppp b / core / pom . xml <nl> < / reporting > <nl> < properties > <nl> < antlrpluginversion > 2 . 0 - snapshot < / antlrpluginversion > <nl> < / properties > <nl> < / project >
ppp b / core / pom . xml <nl> < / reporting > <nl> < properties > <nl> < antlrpluginversion > 2 . 0 - snapshot < / antlrpluginversion > <nl> < / properties > <nl> < / project > <nl> > <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . ivy < / groupid > <nl> < artifactid > ivy < / artifactid > <nl> < version > 2 . 2 . 0 - < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl> < exclusions > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . ivy < / groupid > <nl> < artifactid > ivy < / artifactid > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . ivy < / groupid > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . ivy < / groupid > <nl> < artifactid > ivy < / artifactid > <nl> < version > 2 . 2 . 0 - < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl> < > <nl>
ppp b / pom . xml <nl> < dependency > <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < inceptionyear > 2007 < / inceptionyear > <nl> < prerequisites > <nl> < maven > 3 . 0 . 4 < / maven > <nl> < / prerequisites > <nl> < properties > <nl>
ppp b / pom . xml <nl> < inceptionyear > 2007 < / inceptionyear > <nl> < prerequisites > <nl> < maven > 3 . 0 . 4 < / maven > <nl> < / prerequisites > <nl> < properties > > <nl>
ppp b / pom . xml <nl> < inceptionyear > 2007 < / inceptionyear > <nl> < prerequisites > <nl> < maven > 3 . 0 . 4 < / maven > <nl> < / prerequisites > <nl> < properties > <nl> <nl>
ppp b / pom . xml <nl> < inceptionyear > 2007 < / inceptionyear > <nl> < prerequisites > <nl> < maven > 3 . 0 . 4 < / maven > <nl> < / prerequisites > <nl> < properties <nl>
ppp b / pom . xml <nl> < inceptionyear > 2007 < / inceptionyear > <nl> < prerequisites > <nl> < maven > 3 . 0 . 4 < / maven > <nl> < / prerequisites > <nl> < properties >
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c7e03758480ca609e1aa3067828be61f0bcf180e <nl> mode = push <nl> parent = 36c5800e84f95f0d5b69b6f5c51f51667a290448 <nl> remote = git @ github . com : liferay / com - liferay - trash . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c7e03758480ca609e1aa3067828be61f0bcf180e <nl> mode = push <nl> parent = 36c5800e84f95f0d5b69b6f5c51f51667a290448 <nl> remote = git @ github . com : liferay / com - liferay - trash . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c7e03758480ca609e1aa3067828be61f0bcf180e <nl> mode = push <nl> parent = 36c5800e84f95f0d5b69b6f5c51f51667a290448 <nl> remote = git @ github . com : liferay / com - liferay - trash . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / res / layout / <unk> . xml <nl> android : animatelayoutchanges = " true " <nl> android : gravity = " center " <nl>
ppp b / res / layout / <unk> . xml <nl> android : animatelayoutchanges = " true " <nl> android : gravity = " center " <nl> android :
ppp b / res / layout / <unk> . xml <nl> android : animatelayoutchanges = " true " <nl> android : gravity = " center " <nl> android
ppp b / res / layout / <unk> . xml <nl> android : animatelayoutchanges = " true " <nl> android : gravity = " center " <nl> <nl>
ppp b / res / layout / <unk> . xml <nl> android : animatelayoutchanges = " true " <nl>
====NEW EXAMPLE====
ppp b / modules / apps / deprecated / dictionary / dictionary - web / bnd . bnd <nl> bundle - name : liferay dictionary web <nl> bundle - symbolicname : com . liferay . dictionary . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . <nl> \ no newline at end of file <nl>
ppp b / modules / apps / deprecated / dictionary / dictionary - web / bnd . bnd <nl> bundle - name : liferay dictionary web <nl> bundle - symbolicname : com . liferay . dictionary . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 2 <nl> \ no newline at end of file <nl>
ppp b / modules / apps / deprecated / dictionary / dictionary - web / bnd . bnd <nl> bundle - name : liferay dictionary web <nl> bundle - symbolicname : com . liferay . dictionary . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / deprecated / dictionary / dictionary - web / bnd . bnd <nl> bundle - name : liferay dictionary web <nl> bundle - symbolicname : com . liferay . dictionary . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 0 <nl> \ no newline at end of file <nl>
ppp b / modules / apps / deprecated / dictionary / dictionary - web / bnd . bnd <nl> bundle - name : liferay dictionary web <nl> bundle - symbolicname : com . liferay . dictionary . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 51 <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / clients / unshaded / src / main / java / tachyon / hadoop / abstracttfs . java <nl> abstract class abstracttfs extends filesystem { <nl> * <nl>
ppp b / clients / unshaded / src / main / java / tachyon / hadoop / abstracttfs . java <nl> abstract class abstracttfs extends filesystem { <nl>
ppp b / clients / unshaded / src / main / java / tachyon / hadoop / abstracttfs . java <nl> abstract class abstracttfs extends filesystem { <nl> <nl>
ppp b / clients / unshaded / src / main / java / tachyon / hadoop / abstracttfs . java <nl> abstract class abstracttfs extends filesystem { <nl> * <nl> * @ see filesystem # <unk> ( java . net . uri , org . apache . hadoop . . . . <nl> * <nl> override <nl> public abstract string <unk> ( ) ; <nl> @ override <nl>
ppp b / clients / unshaded / src / main / java / tachyon / hadoop / abstracttfs . java <nl>
====NEW EXAMPLE====
ppp b / main / pom . xml <nl> < / property > <nl> < / activation > <nl> < properties > <nl> < <unk> > / / <unk> < / <unk> > <nl> < <unk> > <unk> < < / <unk> > <nl> < ufs > tachyon . <unk> < / ufs > <nl> < / properties > <nl>
ppp b / main / pom . xml <nl> < / property > <nl>
ppp b / main / pom . xml <nl>
ppp b / main / pom . xml <nl> < / property >
ppp
====NEW EXAMPLE====
ppp b / v4 / java / android / support / v4 / view / viewpager . java <nl> public class viewpager extends viewgroup { <nl> int <unk> = y - <unk> ; <nl> if ( dx = = 0 & & <unk> = = 0 ) { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> return ; <nl> } <nl>
ppp b / v4 / java / android / support / v4 / view / viewpager . java <nl> public class viewpager extends viewgroup { <nl> int <unk> = y - <unk> ; <nl> if ( dx = = 0 & & <unk> = = 0 ) { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> return ; <nl> } <nl> } <nl>
ppp b / v4 / java / android / support / v4 / view / viewpager . java <nl> public class viewpager extends viewgroup { <nl> int <unk> = y - <unk> ; <nl> if ( dx = = 0 & & <unk> = = 0 ) { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> return ; <nl> } <nl> <nl>
ppp b / v4 / java / android / support / v4 / view / viewpager . java <nl> public class viewpager extends viewgroup { <nl> int <unk> = y - <unk> ; <nl> if ( dx = = 0 & & <unk> = = 0 ) { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> return ; <nl> } } <nl>
ppp b / v4 / java / android / support / v4 / view / viewpager . java <nl> public class viewpager extends viewgroup { <nl>
====NEW EXAMPLE====
ppp b / tightdb - java - generator / pom . xml <nl> < dependencies > <nl> < dependency > <nl> < groupid > com . tightdb < / groupid > <nl>
ppp b / tightdb - java - generator / pom . xml <nl> < dependencies > <nl> < dependency > <nl> < groupid > com . tightdb < / groupid > <nl> < artifactid > tightdb - java - core < / artifactid > <nl> version . 0 0 < / version > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / tightdb - java - generator / pom . xml <nl> < dependencies > <nl> < dependency > <nl> < groupid > com . tightdb < / groupid <nl>
ppp b / tightdb - java - generator / pom . xml <nl> < dependencies > <nl> < dependency > <nl>
ppp b / tightdb - java - generator / pom . xml <nl> < dependencies > <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / py / h2o . py <nl> class h2o ( object ) : <nl> ' response ' : none , <nl> ' cols ' : none , <nl>
ppp b / py / h2o . py <nl> class h2o ( object ) : <nl> ' response ' : none , <nl> ' cols ' : none , <nl> ' <unk> ' : none , <nl> ' classification ' : none , <nl> ' validation ' : none , <nl> ' importance ' : 1 , # enable variable importance default default <nl> ' ntrees ' : trees , <nl>
ppp b / py / h2o . py <nl> class h2o ( object ) : <nl> ' response ' : none , <nl>
ppp b / py / h2o . py <nl>
ppp b / py / h2o . py <nl> class h2o ( object ) : <nl> ' response ' : none , <nl> ' cols ' : none , <nl> ' <unk> ' : none , <nl> ' classification ' : none , <nl> ' validation ' : none , <nl> ' importance ' : 1 , # enable variable importance default default <nl> ' ntrees ' : trees , , <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7a55c01c9fafc6b60a8ae1d693d156813ae9c73f <nl> mode = push <nl> parent = 55f47fd5708b21e567baa775f940a59fb8bb97ce <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7a55c01c9fafc6b60a8ae1d693d156813ae9c73f <nl> mode = push <nl> parent = 55f47fd5708b21e567baa775f940a59fb8bb97ce <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> how to get beta releases : <nl> * go to method restriction from application usage view ( [ issue ] ( https : / / github . com / m66b / xprivacy / issues / <unk> ) ) <nl> * updated czech translation <nl> * updated french translation <nl> * updated french translation <nl> * updated japanese translation <nl> * updated norwegian translation <nl> * updated russian translation <nl>
ppp b / readme . md <nl> how to get beta releases : <nl>
ppp b / readme . md <nl>

ppp b / readme . md <nl> how to get beta releases : <nl> * go to method restriction from application usage view ( [ issue ] ( https : / / github . com / m66b / xprivacy / issues / <unk> ) ) <nl> * updated czech translation <nl> * updated french translation <nl> * updated french translation <nl> * updated japanese translation <nl> * updated norwegian translation <nl>
====NEW EXAMPLE====
ppp b / fml / common / fml / <unk> . java <nl> import java . net . urlclassloader ; <nl> public class <unk> extends urlclassloader { <nl> public <unk> ( ) { <nl> super ( new url [ 0 ] ) ; <nl> super ( [ 0 ] ) ; <nl> } <nl> public void <unk> ( file <unk> ) throws <unk> { <nl>
ppp b / fml / common / fml / <unk> . java <nl> import java . net . urlclassloader ; <nl>
ppp b / fml / common / fml / <unk> . java <nl> import java . net . urlclassloader ; <nl> public class <unk> extends urlclassloader { <nl> public <unk> ( ) { <nl> super ( new url [ 0 ] ) ; <nl> super ( [ 0 ] ) ; <nl> } <nl> public void <unk> ( file <unk> ) throws <unk> { { <nl>
ppp b / fml / common / fml / <unk> . java <nl> import java . net . urlclassloader ; <nl> public class <unk> extends urlclassloader { <nl> public <unk> ( ) { <nl> super ( new url [ 0 ] ) ; <nl> super ( [ 0 ] ) ; <nl> } <nl> public void <unk> ( file <unk> ) throws <unk> { <nl> <nl>
ppp b / fml / common / fml / <unk> . java <nl> import java . net . urlclassloader ; <nl> public class <unk> extends urlclassloader { <nl> public <unk> ( ) { <nl> super ( new url [ 0 ] ) ; <nl> super ( [ 0 ] ) ; <nl> } <nl> public void <unk> ( file <unk> ) throws { <nl>
====NEW EXAMPLE====
ppp b / examples / scala - example / pom . xml <nl> < / properties > <nl> < build > <nl> < sourcedirectory > src / main / scala < / > <nl>
ppp b / examples / scala - example / pom . xml <nl> < / properties > <nl> < build > <nl> < sourcedirectory > src / main / scala < / > <nl> > <nl> < > <nl> < plugin > <nl>
ppp b / examples / scala - example / pom . xml <nl> < / properties > <nl> < build > <nl> < sourcedirectory > src / main / scala < / sourcedirectory > <nl>
ppp b / examples / scala - example / pom . xml <nl> < / properties > <nl> < build > <nl>
ppp b / examples / scala - example / pom . xml <nl> < / properties > <nl> < build > <nl> < sourcedirectory > src / main / scala
====NEW EXAMPLE====
ppp b / java / org / apache / catalina / startup / hostconfig . java <nl> public class hostconfig <nl> * <nl> * @ param event the lifecycle event that has occurred <nl> * / <nl> @ override <nl> public void <unk> ( <unk> event ) { <nl> if ( event . gettype ( ) . equals ( lifecycle . <unk> ) ) <nl>
ppp b / java / org / apache / catalina / startup / hostconfig . java <nl> public class hostconfig <nl> * <nl> * @ param event the lifecycle event that has occurred <nl> * / <nl> @ override <nl> public void <unk> ( <unk> event ) { <nl> if ( event . gettype ( ) . equals ( lifecycle . <unk> ) <nl>
ppp b / java / org / apache / catalina / startup / hostconfig . java <nl> public class hostconfig <nl> * <nl>
ppp b / java / org / apache / catalina / startup / hostconfig . java <nl> public class hostconfig <nl> * <nl> * @ param event the lifecycle event that has occurred <nl> * / <nl> @ override <nl> public void <unk> ( <unk> event ) { <nl> if ( event . gettype ( ) . equals ( lifecycle . <unk> ) ) ) <nl>
ppp b / java / org / apache / catalina / startup / hostconfig . java <nl> public class hostconfig <nl>
====NEW EXAMPLE====
ppp b / <unk> - sample / src / main / androidmanifest . xml
ppp b / <unk> - sample / src / main / androidmanifest . xml <nl>
ppp b / <unk> - sample / src / main / androidmanifest
ppp

====NEW EXAMPLE====
ppp b / webroot / index . html <nl> < body > <nl>
ppp b / webroot / index . html <nl>
ppp b / webroot / index . html <nl> < body > <nl> < h2 class = " header " > kairosdb 2 < / h2 > <nl> < span = " " header ui widget widget " > range range < / span > <nl>
ppp b / webroot / index . html <nl> < body >
ppp b / webroot / index . html <nl> < body > <nl> < h2 class = " header " > kairosdb 2 < / h2 > <nl> < span = " " header ui widget widget " > range range < / > <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> how to get beta releases :
ppp b / readme . md <nl> how to get beta releases : <nl>
ppp b / readme . md <nl> how to get beta releases
ppp b / readme . md <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * updated arabic translation <nl> * updated french translation <nl> # # # # # # # # # # # # # # # # # # # # # # # # # # endif <nl> * translation <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - scripting / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f18f12eac839ae550e54feb917288e9305b6037d <nl> mode = push <nl> parent = 0ec1e345637870050bd55b3c1ba49ba96c6e744b <nl> remote = git @ github . com : liferay / com - liferay - portal - scripting . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - scripting / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - scripting / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - scripting / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - scripting / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f18f12eac839ae550e54feb917288e9305b6037d <nl> mode = push <nl> parent = 0ec1e345637870050bd55b3c1ba49ba96c6e744b <nl> remote = git @ github . com : liferay / com - liferay - portal - scripting git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / readme . textile <nl> h1 . elasticsearch 0 . 6 <nl>
ppp b / readme . textile <nl>
ppp b / readme . textile <nl> h1 . elasticsearch 0 . 6
ppp b / readme . textile <nl> h1 . elasticsearch 0 .
ppp b / readme . textile <nl> h1 . elasticsearch 0 . <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / smack - resolver - dnsjava / build . gradle <nl> javax . naming api ( e . g . android ) . " " " <nl> dependencies { <nl> compile project ( path : ' : smack - core ' ) <nl> compile ' dnsjava : dnsjava : 2 . 1 . + ' <nl> } <nl>
ppp b / smack - resolver - dnsjava / build . gradle <nl> javax . naming api ( e . g . android ) . " " " <nl> dependencies { <nl> compile project ( path : ' : smack - core ' ) <nl> compile ' dnsjava : dnsjava : 2 . 1 . + ' <nl>
ppp b / smack - resolver - dnsjava / build . gradle <nl> javax . naming api ( e . g . android ) . " " " <nl> dependencies { <nl> compile project ( path : ' : smack - core ' ) <nl> compile ' dnsjava : dnsjava : 2 . 1 . + ' <nl> } <nl> <nl>
ppp b / smack - resolver - dnsjava / build . gradle <nl> javax . naming api ( e . g . android ) . " " " <nl> dependencies { <nl> compile project ( path : ' : smack - core ' ) <nl> compile ' dnsjava : dnsjava : 2 . 1 . + ' <nl> } } <nl>
ppp b / smack - resolver - dnsjava / build . gradle <nl> javax . naming api ( e . g . android ) . " " " <nl> dependencies { <nl> compile project ( path : ' : smack - core ' ) <nl> compile ' dnsjava : dnsjava : 2 . 1 . + ' <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { <nl> apply plugin : " osgi " <nl> group = " org . reactivestreams " <nl> version = " 1 . 0 . 0 . rc4 " <nl> sourcecompatibility = 1 . 6 <nl> targetcompatibility = 1 . 6 <nl>
ppp b / build . gradle <nl> subprojects { <nl> apply plugin : " osgi " <nl> group = " org . reactivestreams " <nl> version = " 1 . 0 . 0 . rc4 " <nl> sourcecompatibility = 1 . 6 <nl> targetcompatibility = 1 . <nl>
ppp b / build . gradle <nl> subprojects { <nl> apply plugin : " osgi " <nl> group = " org . reactivestreams " <nl> version = " 1 . 0 . 0 . rc4 " <nl> sourcecompatibility = 1 . 6 <nl> targetcompatibility = 1 . . <nl>
ppp b / build . gradle <nl> subprojects { <nl> apply plugin : " osgi " <nl> group = " org . reactivestreams " <nl> version = " 1 . 0 . 0 . rc4 " <nl> sourcecompatibility = 1 . 6 <nl> targetcompatibility = 1 6 <nl>
ppp b / build . gradle <nl> subprojects { <nl> apply plugin : " osgi " <nl> group = " org . reactivestreams " <nl> version = " 1 . 0 . 0 . rc4 " <nl> sourcecompatibility = 1 . 6 <nl> targetcompatibility = 1 . 6
====NEW EXAMPLE====
ppp b / changelog . rdoc <nl> = = = head
ppp b / changelog . rdoc <nl> = = =
ppp b / changelog . rdoc <nl> = = = head <nl> * new features <nl> * added batch operations : filenotfoundexception caused by aborting the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / changelog . rdoc <nl> = = = head <nl> * new features <nl> * added batch operations : filenotfoundexception caused by aborting the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / changelog . rdoc <nl> = = = head <nl> * new features <nl> * added batch operations : filenotfoundexception caused by aborting the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ) <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 23 - beta3 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 23 - beta3 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 23 - beta3 ' <nl> } <nl> ext . libraries = [ [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 23 - beta3 ' <nl> } <nl> ext . libraries = = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 23 - beta3 ' <nl> } <nl> ext . libraries = [
====NEW EXAMPLE====
ppp b / bigbluebutton - client / resources / config . xml . template <nl> dependson = " viewersmodule " <nl> <unk> = " 70 " <nl> <unk> = " false " <nl> resolutions = " <unk> , <unk> , <unk> , " <nl> autostart = " " <nl> showbutton = " true " <nl> publishwindowvisible = " true " <nl>
ppp b / bigbluebutton - client / resources / config . xml . template <nl> dependson = " viewersmodule " <nl> <unk> = " 70 " <nl> <unk> = " false " <nl> resolutions = " <unk> , <unk> , <unk> , " <nl> autostart = " " <nl> showbutton = " true " <nl> publishwindowvisible = " true " " <nl>
ppp b / bigbluebutton - client / resources / config . xml . template <nl> dependson = " viewersmodule " <nl> <unk> = " 70 " <nl> <unk> = " false " <nl>
ppp b / bigbluebutton - client / resources / config . xml . template <nl> dependson = " viewersmodule " <nl> <unk> = " 70 " <nl>
ppp b / bigbluebutton - client / resources / config . xml . template <nl> dependson = " viewersmodule " <nl> <unk> = " 70 " <nl> <unk> = " false " <nl> resolutions = " <unk> , <unk> , <unk> , " <nl> autostart = " " <nl> showbutton = " true " <nl> publishwindowvisible = " true true <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / . travis . yml <nl> android : <nl>
ppp b / . travis . yml <nl> android : <nl> licenses
ppp b / . travis . yml <nl> android : <nl> licenses :
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> android :
====NEW EXAMPLE====
ppp b / <unk> / <unk> . c <nl> static char * <unk> ( <unk> * <unk> , const char * username , <nl> free ( <unk> ) ; <nl> return null ; <nl> } <nl>
ppp b / <unk> / <unk> . c <nl> static char * <unk> ( <unk> * <unk> , const char * username , <nl> free ( <unk> ) ; <nl>
ppp b / <unk> / <unk> . c <nl> static char * <unk> ( <unk> * <unk> , const char * username , <nl> free ( <unk> ) ; <nl> return null ; <nl>
ppp b / <unk> / <unk> . c <nl> static char * <unk> ( <unk> * <unk> , const char * username , <nl> free ( <unk> ) ; <nl> return null ; <nl> <nl>
ppp b / <unk> / <unk> . c <nl> static char * <unk> ( <unk> * <unk> , const char * username , <nl>
====NEW EXAMPLE====
ppp b / changelog <nl> = = = = = 1
ppp b / changelog <nl> = = = = = 1 . 9 . 5 . 3 ( feb ( , 2011 = = = = = = ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / changelog <nl> = = = = = 1 . 9 . 5 . 3 ( feb ( , 2011 = = = = = = ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / changelog <nl> = = = = = 1 . 9 . 5 . 3 ( feb ( , 2011 = = = = = = ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / changelog <nl> = = = = = 1 . 9 . 5 . 3 ( feb ( , 2011 = = = = = = ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0

ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> : automatic back pressure <nl> * storm - * storm - <unk> <unk> : supervisor recurring <unk> checks <nl> * storm - <unk> : maintain wire compatability with 0 . 10 . x versions of storm . <nl>
====NEW EXAMPLE====
ppp b / fml <nl> subproject commit <unk> <nl>
ppp b / fml <nl> subproject commit = <nl>
ppp b / fml <nl> subproject commit 4e7c70b2489a96b14039eb30d18fba7b3353b59c <nl>
ppp b / fml <nl> subproject commit 2135c723b4134a94cb5013f497f1bad8ef18deb6 <nl>
ppp b / fml <nl> subproject commit <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed mode <nl>
ppp b / changelog . md <nl>
ppp

ppp b / changelog . md <nl> * storm - 1868
====NEW EXAMPLE====
ppp b / docs / reference / index . asciidoc <nl> [ [ elasticsearch - reference ] ] <nl> = elasticsearch reference <nl> : version : 5 . 0 . 0 - alpha1 <nl> : major - version : 5 . x <nl> : branch : master <nl> : jdk : 1 . 8 . 0_73 <nl>
ppp b / docs / reference / index . asciidoc <nl> [ [ elasticsearch - reference ] ] <nl> = elasticsearch reference <nl> : version : 5 . 0 . 0 - alpha1 <nl> : major - version : 5 . x <nl> : branch : master <nl> : jdk : 1 . 8 . 0_73 0_73 <nl>
ppp b / docs / reference / index . asciidoc <nl> [ [ elasticsearch - reference ] ] <nl> = elasticsearch reference <nl> : version : 5 . 0 . 0 - alpha1 <nl> : major - version : 5 . x <nl> : branch : master <nl> : jdk : 1 . 8 . . <nl>
ppp b / docs / reference / index . asciidoc <nl> [ [ elasticsearch - reference ] ] <nl> = elasticsearch reference <nl> : version : 5 . 0 . 0 - alpha1 <nl> : major - version : 5 . x <nl> : branch : master <nl> : jdk : 1 . 8 . 0_73
ppp b / docs / reference / index . asciidoc <nl> [ [ elasticsearch - reference ] ] <nl> = elasticsearch reference <nl> : version : 5 . 0 . 0 - alpha1 <nl> : major - version : 5 . x <nl> : branch : master <nl> : jdk : 1 . 8 . <nl>
====NEW EXAMPLE====
ppp b / gemfile <nl> gem ' <unk> ' , ' 0 . 3 . 6 ' <nl> gem ' <unk> ' , ' 0 . 8 . 6 <nl>
ppp b / gemfile <nl> gem ' <unk> ' , ' 0 . 3 . 6 ' <nl> gem ' <unk> ' , ' 0 . 8 . 6 ' <nl>

ppp b / gemfile <nl> gem ' <unk> ' , ' 0 . 3 . 6 ' <nl> gem ' <unk> ' , ' 0 . 8 . 6 ' <nl> gem ' mysql2 ' , ' 0 . 2 . 4 ' <nl> gem ' rack ' , ' 1 . 2 . ' ' ' <nl> ' ' ' ' ' ' 1 . 1 . ' <nl> gem ' pony ' <nl> gem ' declarative_authorization ' <nl>
ppp b / gemfile <nl> gem ' <unk> ' , ' 0 . 3 . 6 ' <nl> gem ' <unk> ' , ' 0 . 8 . 6 ' <nl> gem ' mysql2 ' , ' 0 . 2 . 4 ' <nl> gem ' rack ' , ' 1 . 2 . ' ' ' <nl> ' ' ' ' ' ' 1 . 1 . ' <nl> gem ' pony ' <nl> gem ' declarative_authorization ' ' <nl>
====NEW EXAMPLE====
ppp b / version <nl> 1 . 8 . 0 <nl>
ppp b / version <nl> 1 . 8 . 0 <nl> <nl>
ppp b / version <nl> 1 . 8 . 2 <nl>
ppp b / version <nl> 1 . 8 . 1 <nl>
ppp b / version <nl> 1 . 8 0 <nl>
====NEW EXAMPLE====
ppp b / gdx / src / com / badlogic / gdx / math / <unk> . java <nl> package com . badlogic . gdx . math ; <nl>
ppp b / gdx / src / com / badlogic / gdx / math / <unk> . java <nl> package com . badlogic . gdx . math ; <nl> import com . badlogic . gdx { <nl>
ppp b / gdx / src / com / badlogic / gdx / math / <unk> . java <nl> package com . badlogic . gdx . math ; <nl> import com . badlogic . gdx { <nl> } <nl>
ppp b / gdx / src / com / badlogic / gdx / math / <unk> . java <nl> package com . badlogic . gdx . math ; <nl> import com . badlogic . { <nl>
ppp b / gdx / src / com / badlogic / gdx / math / <unk> . java <nl> package com . badlogic . gdx . math <nl>
====NEW EXAMPLE====
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 1 . 3 . 0 <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 1 . 3 . <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 1 . 3 . . <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 1 . 3 . 57 <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 1 . 3 . 2 <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . metamx < / groupid > <nl> < artifactid > emitter < / artifactid > <nl> < version > 0 . 3 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > com . metamx < / groupid > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . metamx < / groupid > <nl> < artifactid > emitter < / artifactid > <nl> < version > 0 . 3 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > com . metamx < / > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . metamx < / groupid > <nl> < artifactid > emitter < / artifactid > <nl> < version > 0 . 3 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > com . metamx < / groupid groupid <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . metamx < / groupid > <nl> < artifactid > emitter < / artifactid > <nl> < version > 0 . 3 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > com . metamx < / groupid groupid
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . metamx < / groupid > <nl> < artifactid > emitter < / artifactid > <nl> < version > 0 . 3 . 2 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > com . metamx < / groupid > > <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < module > spark < / module > <nl> < module > markdown < / module > <nl> < module > shell < / module > <nl>
ppp b / pom . xml <nl> < module > spark < / module > <nl> < module > markdown < / module > <nl> < module > shell < / module > <nl> < module > svg < / module > <nl>
ppp b / pom . xml <nl> < module > spark < / module > <nl> < module > markdown < / module > <nl> < module > shell < / module > <nl> < module > svg < / > <nl>
ppp b / pom . xml <nl> < module > spark < / module > <nl> < module > markdown < / module > <nl>
ppp b / pom . xml <nl> < module > spark < / module > <nl> < module > markdown < / module > <nl> < module > shell < / module > <nl> < module > svg < / module > > <nl>
====NEW EXAMPLE====
ppp b / src / main / java / com / squareup / <unk> / <unk> . java <nl> public final class <unk> { <nl> } <nl> } <nl> if ( <unk> . isempty isempty ( ) ) { <nl> appendable . append ( ' \ n ' ) ; <nl> } <nl>
ppp b / src / main / java / com / squareup / <unk> / <unk> . java <nl> public final class <unk> { <nl> } <nl> } <nl> if ( <unk> . isempty isempty ( ) ) { <nl> appendable . append ( ' \ n ' ) ; <nl> } <nl> <nl>
ppp b / src / main / java / com / squareup / <unk> / <unk> . java <nl> public final class <unk> { <nl> } <nl> } <nl> if ( <unk> . isempty isempty ( ) ) { <nl> appendable . append ( ' \ n ' ) ; <nl>
ppp b / src / main / java / com / squareup / <unk> / <unk> . java <nl> public final class <unk> { <nl> } <nl> } <nl> if ( <unk> . isempty isempty ( ) ) { <nl> appendable . append ( ' \ n ' ) ; <nl> }
ppp b / src / main / java / com / squareup / <unk> / <unk> . java <nl> public final class <unk> { <nl> } <nl> } <nl> if ( <unk> . isempty isempty ( ) ) { <nl> appendable . append ( ' \ n ' ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / coyote / http11 / abstractoutputbuffer . java <nl> public abstract class abstractoutputbuffer < s > implements outputbuffer { <nl> / * * <nl> * underlying output buffer . <nl> * / / <nl> protected outputbuffer <unk> ; <nl> / * * <nl> * bytes written to client for the current request <nl>
ppp b / java / org / apache / coyote / http11 / abstractoutputbuffer . java <nl> public abstract class abstractoutputbuffer < s > implements outputbuffer { <nl> / * * <nl> * underlying output buffer . <nl> * / / <nl> protected outputbuffer <unk> ; <nl> / * * <nl> * bytes written to client for the current <nl>
ppp b / java / org / apache / coyote / http11 / abstractoutputbuffer . java <nl> public abstract class abstractoutputbuffer < s > implements outputbuffer { <nl> / * * <nl> * underlying output buffer . <nl> * / / <nl> protected outputbuffer <unk> ; <nl> / * * <nl> * bytes written to client for the current current <nl>
ppp b / java / org / apache / coyote / http11 / abstractoutputbuffer . java <nl> public abstract class abstractoutputbuffer < s > implements outputbuffer { <nl> / * * <nl> * underlying output buffer . <nl> * / / <nl> protected outputbuffer <unk> ; <nl> / * * <nl> * bytes written to client for the current request request <nl>
ppp b / java / org / apache / coyote / http11 / abstractoutputbuffer . java <nl> public abstract class abstractoutputbuffer < s > implements outputbuffer { <nl> / * * <nl> * underlying output buffer . <nl> * / / <nl> protected outputbuffer <unk> ; <nl> / * * <nl> * bytes written to client for the current request
====NEW EXAMPLE====
ppp b / core / src / processing / opengl / psurfacejogl . java <nl> public class psurfacejogl implements psurface { <nl> protected void initanimator ( ) { <nl> animator = new fpsanimator ( window , 60 ) ; <nl> ; <nl> drawexception = null ; <nl> animator . setuncaughtexceptionhandler ( new glanimatorcontrol . uncaughtexceptionhandler ( ) { <nl> @ override <nl>
ppp b / core / src / processing / opengl / psurfacejogl . java <nl> public class psurfacejogl implements psurface { <nl> protected void initanimator ( ) { <nl> animator = new fpsanimator ( window , 60 ) ; <nl> ; <nl> drawexception = null ; <nl> animator . setuncaughtexceptionhandler ( new glanimatorcontrol . uncaughtexceptionhandler ( ) { <nl> @ override override <nl>
ppp b / core / src / processing / opengl / psurfacejogl . java <nl> public class psurfacejogl implements psurface { <nl> protected void initanimator ( ) { <nl> animator = new fpsanimator ( window , 60 ) ; <nl> ; <nl> drawexception = null ; <nl> animator . setuncaughtexceptionhandler ( new glanimatorcontrol . uncaughtexceptionhandler ( ) { <nl>
ppp b / core / src / processing / opengl / psurfacejogl . java <nl> public class psurfacejogl implements psurface { <nl> protected void initanimator ( ) { <nl> animator = new fpsanimator ( window , 60 ) ; <nl> ; <nl> drawexception = null ; <nl> animator . setuncaughtexceptionhandler ( new glanimatorcontrol . uncaughtexceptionhandler ( ) { <nl> @ override <nl> override <nl>
ppp b / core / src / processing / opengl / psurfacejogl . java <nl> public class psurfacejogl implements psurface { <nl> protected void initanimator ( ) { <nl> animator = new fpsanimator ( window , 60 ) ; <nl> ; <nl> drawexception = null ; <nl> animator . setuncaughtexceptionhandler ( new glanimatorcontrol . uncaughtexceptionhandler ( ) { <nl> @ override <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5d2036db65f5ed6b9bbb151ccb2dd59baa5d5dcc <nl> mode = push <nl> parent = bbfc8bfc29633ff745846083d3028bd3e2108f09 <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5d2036db65f5ed6b9bbb151ccb2dd59baa5d5dcc <nl> mode = push <nl> parent = bbfc8bfc29633ff745846083d3028bd3e2108f09 <nl> remote = git @ github . com : liferay / com - liferay - portal - template git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - mentions . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) { <nl> evaluationdependson ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> version = ' 3 1 . 0 - ' <nl> sourcecompatibility = javaversion . version_1_6 <nl> targetcompatibility = javaversion . version_1_6 <nl>
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) { <nl> evaluationdependson ( ' : util ' ) <nl>
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) { <nl> evaluationdependson ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> version = ' 3 1 . 0 - ' <nl> sourcecompatibility = javaversion . version_1_6 <nl> targetcompatibility = javaversion . <nl>
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) { <nl> evaluationdependson ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> version = ' 3 1 . 0 - ' <nl> sourcecompatibility = javaversion . version_1_6 <nl> targetcompatibility = javaversion . . <nl>
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) { <nl>
====NEW EXAMPLE====
ppp b / common / buildcraft / core / box . java <nl> public class box implements <unk> { <nl> public box <unk> ( box <unk> ) { <nl> if ( ! <unk> . initialized ) { <nl> return ; <nl> } <nl> if ( <unk> . <unk> < <unk> ) { <nl>
ppp b / common / buildcraft / core / box . java <nl> public class box implements <unk> { <nl> public box <unk> ( box <unk> ) { <nl> if ( ! <unk> . initialized ) { <nl> return ; <nl> } <nl> if ( <unk> . <unk> < <unk> ) ) <nl>
ppp b / common / buildcraft / core / box . java <nl> public class box implements <unk> { <nl> public box <unk> ( box <unk> ) { <nl> if ( ! <unk> . initialized ) { <nl> return ; <nl> } <nl> if ( <unk> . <unk> < <unk> ) <nl>
ppp b / common / buildcraft / core / box . java <nl> public class box implements <unk> { <nl> public box <unk> ( box <unk> ) { <nl> if ( ! <unk> . initialized ) { <nl> return ; <nl> } <nl> if ( <unk> . <unk> < <unk> ) { <nl> <nl>
ppp b / common / buildcraft / core / box . java <nl> public class box implements <unk> { <nl> public box <unk> ( box <unk> ) { <nl> if ( ! <unk> . initialized ) { <nl> return ; <nl> } <nl> if ( <unk> . <unk> < <unk> ) {
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # unreleased <nl>
ppp b / changelog . md <nl> # # unreleased
ppp b / changelog . md <nl>

ppp b / changelog . md <nl> # # unreleased <nl> * added ability to override configs at the command line . these config definitions - the highest ) <nl> * storm - 572 ( wolfgang buchnere via akm ( wolfgang buchnere via akm ) ; <nl> have the highest . <nl> * error thrown if invalid ( not json - serializable ) topology conf used <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * moved on demand restricting details to expert mode <nl> * rewrote location restrictions <nl> * fixed fake location for play services locations <nl>
ppp b / changelog . md <nl> changelog <nl> * moved on demand restricting details to expert mode <nl> * rewrote location restrictions <nl> * fixed fake location for play services <nl>
ppp b / changelog . md <nl> changelog <nl> * moved on demand restricting details to expert mode <nl> * rewrote location restrictions <nl>
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl> changelog <nl> * moved on demand restricting details to expert mode <nl>
====NEW EXAMPLE====
ppp b / spark / pom . xml <nl>
ppp
ppp b / spark / pom . xml <nl> < scala . binary . version
ppp b / spark / pom . xml <nl> < scala . binary

====NEW EXAMPLE====
ppp b / docs / concept / buckconfig . soy <nl> specify the version of the android sdk that all android code <nl> in the project should be built against as follows : <nl> { literal } < pre class = " prettyprint lang - ini " > <nl> [ alias ] <nl> target = google inc . : google apis : 21 <nl> < / pre > { / literal } <nl>
ppp b / docs / concept / buckconfig . soy <nl> specify the version of the android sdk that all android code <nl>
ppp b / docs / concept / buckconfig . soy <nl>
ppp b / docs / concept / buckconfig . soy <nl> specify the version of the android sdk that all android code <nl> in the project should be built against as follows : <nl> { literal } < pre class = " prettyprint lang - ini " > <nl> [ alias ] <nl> target = google inc . : google apis : 21 <nl> < / pre > { / literal } } <nl>
ppp b / docs / concept / buckconfig . soy <nl> specify the version of the android sdk that all android code <nl> in the project should be built against as follows : <nl> { literal } < pre class = " prettyprint lang - ini " > <nl> [ alias ] <nl> target = google inc . : google apis : 21 <nl> < / pre > { / } <nl>
====NEW EXAMPLE====
ppp b / presto - jdbc / src / main / java / com / facebook / presto / jdbc / <unk> . java <nl> public class <unk> <nl> public string <unk> ( ) <nl> throws sqlexception <nl> { <nl> / / " ; <nl> } <nl> @ override <nl>
ppp b / presto - jdbc / src / main / java / com / facebook / presto / jdbc / <unk> . java <nl> public class <unk> <nl> public string <unk> ( ) <nl> throws sqlexception <nl> { <nl>
ppp b / presto - jdbc / src / main / java / com / facebook / presto / jdbc / <unk> . java <nl> public class <unk> <nl> public string <unk> ( ) <nl> throws sqlexception <nl> { <nl> / / " ; <nl> } <nl> override <nl>
ppp b / presto - jdbc / src / main / java / com / facebook / presto / jdbc / <unk> . java <nl> public class <unk> <nl> public string <unk> ( ) <nl> throws sqlexception <nl> { <nl> / / " ; <nl> } <nl>
ppp b / presto - jdbc / src / main / java / com / facebook / presto / jdbc / <unk> . java <nl> public class <unk> <nl> public string <unk> ( ) <nl> throws sqlexception <nl> { <nl> / / " ; <nl>
====NEW EXAMPLE====
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 2 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 2 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / > <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 2 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 2 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > > <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl>
====NEW EXAMPLE====
ppp b / include / media / stagefright / <unk> . h <nl> # include < sys / types . h > <nl> # include < omx_video . h > <nl> > <nl> include < omx_video . h > <nl> namespace android { <nl>
ppp b / include / media / stagefright / <unk>
ppp b / include / media / stagefright / <unk> . h <nl> # include < sys / types . h > <nl> # include < omx_video . h > <nl> > <nl> include < omx_video . h > <nl> namespace android <nl>
ppp b / include / media / stagefright / <unk> . h <nl> # include < sys / types . h > <nl> # include < omx_video . h > <nl> > <nl> include < omx_video . h > <nl> namespace { <nl>
ppp b / include / media / stagefright / <unk> . h <nl> # include < sys / types . h > <nl> # include < omx_video . h > <nl> > <nl> include < omx_video . h > <nl> namespace android { <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - notifications . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name name <nl>
====NEW EXAMPLE====
ppp b / conf / storm . yaml . example <nl> # - " <unk> " <nl> # - " <unk> " <nl> # <nl> # nimbus . host : " 1 . " " <nl> # <nl> # <nl> # # # # # # these may optionally be filled filled in : <nl>
ppp b / conf / storm . yaml . example <nl>
ppp
ppp b / conf / storm . yaml . example <nl> # - " <unk> " <nl> # - " <unk> " <nl> # <nl> # nimbus . host : " 1 . " " <nl> # <nl> # <nl> # # # # # # these may optionally be filled filled in <nl>
ppp b / conf / storm . yaml . example <nl> # - " <unk> " <nl> # - " <unk> " <nl> # <nl> # nimbus . host : " 1 . " " <nl> # <nl> # <nl> # # # # # # these may optionally be filled filled in : : <nl>
====NEW EXAMPLE====
ppp b / settings . gradle <nl>
ppp b / settings . gradle <nl> include
ppp b
ppp b / settings . gradle
ppp
====NEW EXAMPLE====
ppp b / . travis . yml <nl> android : <nl> platform
ppp b / . travis . yml <nl> android : <nl>
ppp b / . travis . yml <nl> android :
ppp b / . travis . yml <nl> android : <nl> platform -
ppp b / . travis . yml <nl> android : <nl> platform - tools <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> license <nl> see the license for the specific language governing permissions and <nl> limitations under the license . <nl> [ java ] https : / / en . wikipedia . org / wiki / java_ ( <unk> ) <nl>
ppp b / readme . md <nl> license <nl> see the license for the specific language governing permissions and <nl> limitations under the license . <nl> [ java ] https : / / en . wikipedia . org / wiki / java_ ( <unk> ) ) <nl>
ppp b / readme . md <nl> license <nl> see the license for the specific language governing permissions and <nl> limitations under the license . <nl> [ java ] https : / / en . wikipedia . org / wiki / java_ ( <unk> <unk> <nl>
ppp b / readme . md <nl> license <nl> see the license for the specific language governing permissions and <nl> limitations under the license . <nl> [ java ] https : / / en . wikipedia . org / wiki / java_ ( <unk> <nl>
ppp b / readme . md <nl> license <nl> see the license for the specific language governing permissions and <nl> limitations under the license . <nl> [ java ] https : / / en . wikipedia . org / wiki / java_ ( <unk> ) <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > org . graylog2 < / groupid > <nl> < artifactid > graylog2 - server < / artifactid > <nl> < version > 0 . 10 . 0 - rc . 1 < / version > <nl> < packaging > jar < / packaging > <nl> < properties > <nl>
ppp b / pom . xml <nl> < groupid > org . graylog2 < / groupid > <nl> < artifactid > graylog2 - server < / artifactid > <nl> < version > 0 . 10 . 0 - rc . 1 < / version > <nl> < packaging > jar < / packaging > <nl> < properties > > <nl>
ppp b / pom . xml <nl> < groupid > org . graylog2 < / groupid > <nl> < artifactid > graylog2 - server < / artifactid > <nl> < version > 0 . 10 . 0 - rc . 1 < / version > <nl> < packaging > jar < / packaging > <nl> < properties <nl>
ppp b / pom . xml <nl> < groupid > org . graylog2 < / groupid > <nl> < artifactid > graylog2 - server < / artifactid > <nl> < version > 0 . 10 . 0 - rc . 1 < / version > <nl> < packaging > jar < / packaging > <nl>
ppp b / pom . xml <nl> < groupid > org . graylog2 < / groupid > <nl> < artifactid > graylog2 - server < / artifactid > <nl> < version > 0 . 10 . 0 - rc . 1 < / version > <nl> < packaging > jar < / packaging > <nl> < properties > <nl> <nl>
====NEW EXAMPLE====
ppp b / advanced / readme . txt <nl> to get started and for more information about neo4j go to http : / / neo4j . org <nl> quick start : <nl>
ppp b / advanced / readme . txt <nl> to get started and for more information about neo4j go to http : / / neo4j . org <nl> quick start : <nl> : <nl>
ppp b / advanced / readme . txt <nl> to get started and for more information about neo4j go to http : / / neo4j . org <nl> quick start : <nl> <nl>
ppp b / advanced / readme . txt <nl> to get started and for more information about neo4j go to http : / / neo4j . org <nl> quick start : : <nl>
ppp b / advanced / readme . txt <nl> to get started and for more information about neo4j go to http : / / neo4j . org <nl> quick start : <nl> bic <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> classes <nl> sc - bundles <nl> . gitignore . swp <nl> * . iws <nl>
ppp b / . gitignore <nl> classes <nl> sc - bundles <nl> . gitignore . swp <nl> * . iws <nl> iws <nl>
ppp b / . gitignore <nl> classes <nl> sc - bundles <nl> . gitignore . swp <nl> * . iws iws <nl>
ppp b / . gitignore <nl> classes <nl> sc - bundles <nl> . gitignore . swp <nl> * . iws <nl> . iws <nl>
ppp b / . gitignore <nl> classes <nl>
====NEW EXAMPLE====
ppp b / version . txt <nl>
ppp b
ppp b / version . txt <nl> \ no newline at end
ppp b / version . txt <nl> \ no newline at end of
ppp b / version . txt <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / server / src / test / java / com / metamx / druid / index / v1 / <unk> . java <nl> import org . junit . test ; <nl> import java . io . file ; <nl> import java . util . arrays ; <nl> / * * <nl> * / <nl>
ppp b / server / src / test / java / com / metamx / druid / index / v1 / <unk> . java <nl> import org . junit . test ; <nl> import java . io . file ; <nl> import java . util . arrays ; <nl>
ppp b / server / src / test / java / com / metamx / druid / index / v1 / <unk> . java <nl> import org . junit . test ; <nl> import java . io . file ; <nl> import java . util . arrays ; <nl> / * * <nl> * / / <nl>
ppp b / server / src / test / java / com / metamx / druid / index / v1 / <unk> . java <nl> import org . junit . test ; <nl> import java . io . file ; <nl> import java . util . arrays ; <nl> / * * <nl> * * <nl>
ppp b / server / src / test / java / com / metamx / druid / index / v1 / <unk> . java <nl> import org . junit . test ; <nl> import java . io . file ; <nl> import java . util . ; <nl>
====NEW EXAMPLE====
ppp b / advanced / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 0 - < / / version > <nl> < / dependency > <nl> < / dependencies > <nl>
ppp b / advanced / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 0 - < / / version > <nl> < / dependency > <nl> < / > <nl>
ppp b / advanced / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 0 - < / / version > <nl> < / dependency > <nl> < / dependencies > > <nl>
ppp b / advanced / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 0 - < / / version > <nl> < / dependency > <nl> < / dependencies >
ppp b / advanced / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 0 - < / / version > <nl> < / dependency > <nl> < / dependencies > <nl> <nl>
====NEW EXAMPLE====
ppp b / common / buildcraft / core / gui / <unk> . java <nl> public abstract class <unk> extends <unk> { <nl> int <unk> = ( <unk> - <unk> ) ; <nl> int k2 = <unk> - <unk> ; <nl> <unk> ( s , <unk> , k2 ) ; <nl> } <nl> mainapptheme ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / common / buildcraft / core / gui / <unk> . java <nl> public abstract class <unk> extends <unk> { <nl> int <unk> = ( <unk> - <unk> ) ; <nl> int k2 = <unk> - <unk> ; <nl> <unk> ( s , <unk> , k2 ) ; <nl> } <nl> mainapptheme ( ) ; <nl> } <nl> } <nl>
ppp b / common / buildcraft / core / gui / <unk> . java <nl> public abstract class <unk> extends <unk> { <nl> int <unk> = ( <unk> - <unk> ) ; <nl> int k2 = <unk> - <unk> ; <nl> <unk> ( s , <unk> , k2 ) ; <nl> } <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / common / buildcraft / core / gui / <unk> . java <nl> public abstract class <unk> extends <unk> { <nl> int <unk> = ( <unk> - <unk> ) ; <nl> int k2 = <unk> - <unk> ; <nl> <unk> ( s , <unk> , k2 ) ; <nl> } <nl> } <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / common / buildcraft / core / gui / <unk> . java <nl> public abstract class <unk> extends <unk> { <nl> int <unk> = ( <unk> - <unk> ) ; <nl> int k2 = <unk> - <unk> ; <nl> <unk> ( s , <unk> , k2 ) ; <nl> } <nl> mainapptheme ( ) ; <nl> } <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / core / src / main / java / io / undertow / protocols / http2 / <unk> . java <nl> public class <unk> extends <unk> < <unk> , <unk> <nl> } <nl> } <nl> <unk> . close ( ) ; <nl> break ; <nl> ( ) ; <nl> break ; <nl> } <nl> <unk> <unk> : { <nl>
ppp b / core / src / main / java / io / undertow / protocols / http2 / <unk> . java <nl> public class <unk> extends <unk> < <unk> , <unk> <nl> } <nl> } <nl> <unk> . close ( ) ; <nl> break ; <nl> ( ) ; <nl> break ; <nl> } <nl> <unk> <unk> : <nl>
ppp b / core / src / main / java / io / undertow / protocols / http2 / <unk> . java <nl> public class <unk> extends <unk> < <unk> , <unk> <nl> } <nl> } <nl> <unk> . close ( ) ; <nl> break ; <nl> ( ) ; <nl> break ; <nl> } <nl> <unk> <unk> { <nl>
ppp b / core / src / main / java / io / undertow / protocols / http2 / <unk> . java <nl> public class <unk> extends <unk> < <unk> , <unk> <nl> } <nl> } <nl> <unk> . close ( ) ; <nl> break ; <nl> ( ) ; <nl> break ; <nl> } <nl> <unk> <unk> : { <nl> <nl>
ppp b / core / src / main / java / io / undertow / protocols / http2 / <unk> . java <nl> public class <unk> extends <unk> < <unk> , <unk> <nl> } <nl> } <nl> <unk> . close ( ) ; <nl> break ; <nl> ( ) ; <nl> break ; <nl> } <nl> <unk> <unk> : {
====NEW EXAMPLE====
ppp b / wordpress / src / main / java / org / wordpress / android / ui / accounts / <unk> . java <nl> public class <unk> extends fragmentactivity { <nl> default : <nl> break ; <nl> } <nl> / / . <unk> ) ; <nl> } <nl> @ override <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / accounts / <unk> . java <nl> public class <unk> extends fragmentactivity { <nl> default : <nl> break ; <nl> } <nl> / / . <unk> ) ; <nl> } <nl> override <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / accounts / <unk> . java <nl> public class <unk> extends fragmentactivity { <nl> default : <nl> break ; <nl> } <nl> / / . <unk> ) ; <nl> } <nl> @ <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / accounts / <unk> . java <nl> public class <unk> extends fragmentactivity { <nl> default : <nl> break ; <nl> } <nl> / / . <unk> ) ; <nl> } @ override <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / accounts / <unk> . java <nl> public class <unk> extends fragmentactivity { <nl> default : <nl> break ; <nl> } <nl> / / . <unk> ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> versioncode = <unk> <nl> versionname = ' 13 - beta1 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> versioncode = <unk> <nl> versionname = ' 13 - beta1 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> versioncode = <unk> <nl> versionname = ' 13 - beta1 ' <nl> } <nl> ext . libraries = [
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> versioncode = <unk> <nl> versionname = ' 13 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> versioncode = <unk> <nl> versionname = ' 13 - beta1 ' <nl> } <nl> ext . libraries = [ [ <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / test / unit / voldemort / tools / <unk> . java <nl> public class <unk> { <nl>
ppp b / test / unit / voldemort / tools / <unk> . java <nl>
ppp b / test / unit / voldemort / tools / <unk> . java <nl> public class <unk> { <nl> / / greedy test 3 : greedy <unk> nodes in cluster ( rather than <nl> / / zone - by - zone ) <nl> ) <nl> zone by - zone ) <nl> <unk> = null ; <nl> <unk> = <unk> . <unk> ( <unk> , <nl> <unk> , <nl>
ppp b / test / unit / voldemort / tools / <unk> . java <nl> public class <unk> <nl>

====NEW EXAMPLE====
ppp b / community / server / pom . xml <nl> < dependency > <nl> < groupid > org . codehaus . jackson < / groupid > <nl> < artifactid > jackson - jaxrs < / artifactid > <nl> < version > 1 . 8 . 3 < / version > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / community / server / pom . xml <nl> < dependency > <nl> < groupid > org . codehaus . jackson < / groupid > <nl> < artifactid > jackson - jaxrs < / artifactid > <nl> < version > 1 . 8 . 3 < / version > <nl> < / dependency > <nl> < dependency > > <nl>
ppp b / community / server / pom . xml <nl> < dependency > <nl> < groupid > org . codehaus . jackson < / groupid > <nl> < artifactid > jackson - jaxrs < / artifactid > <nl> < version > 1 . 8 . 3 < / version > <nl> < / dependency > <nl> < dependency > <nl> <nl>
ppp b / community / server / pom . xml <nl> < dependency > <nl> < groupid > org . codehaus . jackson < / groupid > <nl> < artifactid > jackson - jaxrs < / artifactid > <nl> < version > 1 . 8 . 3 < / version > <nl> < / dependency > <nl>
ppp b / community / server / pom . xml <nl> < dependency > <nl> < groupid > org . codehaus . jackson < / groupid > <nl> < artifactid > jackson - jaxrs < / artifactid > <nl> < version > 1 . 8 . 3 < / version > <nl> < / dependency > <nl> < dependency >
====NEW EXAMPLE====
ppp b / manifest . txt <nl> . travis . yml <nl> changelog . ja . rdoc <nl> changelog . rdoc <nl> <nl> rdoc <nl> c_coding_style . rdoc <nl> gemfile <nl> license . txt <nl>
ppp b / manifest . txt <nl> . travis . yml <nl> changelog . ja . rdoc <nl> changelog . rdoc <nl> <nl> rdoc <nl> c_coding_style . rdoc <nl> gemfile <nl> license . txt txt <nl>
ppp b / manifest . txt <nl> . travis . yml <nl> changelog . ja . rdoc <nl> changelog . rdoc <nl> <nl> rdoc <nl> c_coding_style . rdoc <nl> gemfile <nl> license . . <nl>
ppp b / manifest . txt <nl>
ppp b / manifest . txt <nl> . travis . yml <nl> changelog . ja . rdoc <nl> changelog . rdoc <nl> <nl> rdoc <nl> c_coding_style . rdoc <nl> gemfile <nl> license . txt <nl> <nl>
====NEW EXAMPLE====
ppp b / advanced / . gitignore <nl> build <nl> server / src / main / resources / webadmin - html / webadmin . js <nl> server / neo4j - home / data <nl> / bin <nl>
ppp b / advanced / . gitignore <nl> build <nl> server / src / main / resources / webadmin - html / webadmin . js <nl> server / neo4j - home / data <nl> / bin <nl> * <nl>
ppp b / advanced / . gitignore <nl> build <nl> server / src / main / resources / webadmin - html / webadmin . js <nl> server / neo4j - home / data <nl> / bin <nl> # rrd <nl>
ppp b / advanced / . gitignore <nl> build <nl> server / src / main / resources / webadmin - html / webadmin . js <nl> server / neo4j - home / data <nl> / bin <nl> mitgeflogen <nl>
ppp b / advanced / . gitignore <nl> build <nl> server / src / main / resources / webadmin - html / webadmin . js <nl> server / neo4j - home / data <nl> / bin <nl> / rrd <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> layout . <unk> ( new <unk> . onrefreshlistener ( ) { <nl> } <nl> } ) ; <nl> / / refresh complete <nl> layout . <unk> ( false ) ; <nl> ` ` ` <nl>
ppp b / readme . md <nl> layout . <unk> ( new <unk> . onrefreshlistener ( ) { <nl> } <nl> } ) ; <nl> / / refresh complete <nl> layout . <unk> ( false ) ; <nl> ` ` ` ` <nl>
ppp b / readme . md <nl> layout . <unk> ( new <unk> . onrefreshlistener ( ) { <nl> } <nl> } ) ; <nl> / / refresh complete <nl> layout . <unk> ( false ) ; <nl> ` ` <nl>
ppp b / readme . md <nl> layout . <unk> ( new <unk> . onrefreshlistener ( ) { <nl> } <nl> } ) ; <nl> / / refresh complete <nl> layout . <unk> ( false ) ; <nl> ` ` ` <nl> <nl>
ppp b / readme . md <nl> layout . <unk> ( new <unk> . onrefreshlistener ( ) { <nl> } <nl> } ) ; <nl> / / refresh complete <nl> layout . <unk> ( false ) ; <nl>
====NEW EXAMPLE====
ppp b / seriesguide / src / main / res / layout / <unk> . xml <nl> android : layout_width = " wrap_content " <nl>
ppp b / seriesguide / src / main / res / layout / <unk> . xml <nl>
ppp

ppp b / seriesguide / src / main
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / goals > <nl> < / execution > <nl> < / executions > <nl> < /
ppp b / pom . xml <nl> < / goals > <nl> < / execution > <nl> < / executions > <nl> < / plugin
ppp b / pom . xml <nl> < / goals > <nl> < / execution > <nl> < / executions > <nl> <
ppp b / pom . xml <nl> < / goals > <nl> < / execution > <nl> < / executions > <nl> < / plugin > <nl>
ppp b / pom . xml <nl> < / goals >
====NEW EXAMPLE====
ppp b / build . gradle <nl> javadoc { <nl>
ppp b / build . gradle <nl>

ppp b / build . gradle <nl> javadoc { <nl> options . bottom
ppp b / build . gradle <nl> javadoc { <nl> options . bottom = " < i > copyright & # 169 ; 2011 - $
====NEW EXAMPLE====
ppp b / . gitignore <nl> proguard / <nl> #
ppp b / . gitignore <nl> proguard / <nl> # log files <nl> *
ppp b / . gitignore <nl> proguard / <nl>
ppp b / . gitignore <nl> proguard / <nl> # log files <nl> * . log <nl> \ no newline at end of file <nl> . log <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> proguard / <nl> # log files <nl> * . log <nl> \ no newline at end of file <nl> . . log <nl>
====NEW EXAMPLE====
ppp b / presto - main / src / main / java / com / facebook / presto / sql / <unk> / <unk> . java <nl> public final class <unk> <nl> <unk> . accept ( this , context ) ; <nl> } <nl> return null ; <nl> public void configurekillbillnodesapi ( ) ; <nl> } <nl> null ; <nl> } <nl>
ppp b / presto - main / src / main / java / com / facebook / presto / sql / <unk> / <unk> . java <nl>
ppp b / presto - main / src / main / java / com / facebook / presto / sql / <unk> / <unk> . java <nl> public final class <unk> <nl> <unk> . accept ( this , context ) ; <nl> } <nl> return null ; <nl> public void configurekillbillnodesapi ( ) ; <nl> } <nl> null ; <nl> <nl>
ppp b / presto - main / src / main / java / com / facebook / presto / sql / <unk> / <unk> . java <nl> public final class <unk> <nl> <unk> . accept ( this , context ) ; <nl> } <nl> return null ; <nl> public void configurekillbillnodesapi ( ) ; <nl> } <nl> null ; <nl>
ppp b / presto - main / src / main / java / com / facebook / presto / sql / <unk> / <unk> . java <nl> public final class <unk> <nl> <unk> . accept ( this , context ) ; <nl> } <nl> return null ; <nl> public void configurekillbillnodesapi ( ) ; <nl> } <nl> null ; <nl> }
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / upcomingchanges . md <nl>
ppp b / upcomingchanges . md <nl> \ no newline at end of file <nl>
ppp b / upcomingchanges . md <nl> [ <nl> \ no newline at end of file <nl>
ppp b / upcomingchanges . md <nl> rootproject <nl> \ no newline at end of file <nl>
ppp b / upcomingchanges . md <nl> / <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 . " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 " <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> gradle <nl>
ppp b / . gitignore <nl>
ppp b / . gitignore <nl> gradle <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b
ppp b / . gitignore <nl> gradle <nl> \ no newline at end of file <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # changelog <nl>
ppp b / changelog . md <nl> # changelog <nl> # 2 . 2
ppp b / changelog . md <nl> # changelog <nl> # 2 . 2 .
ppp b / changelog . md <nl> # changelog <nl> # 2 .
ppp b / changelog . md <nl> # changelog <nl> # 2
====NEW EXAMPLE====
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> language :
ppp b / . travis . yml <nl> language
ppp b / . travis . yml <nl> language : android <nl> android : <nl> components : <nl> \ no newline at end of file <nl> # # the lines below if you want to <nl>
ppp b / . travis . yml <nl> language : android <nl> android : <nl> components : <nl> \ no newline at end of file <nl> # # the lines below if you want to to <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> before_install : <nl> # - export path = $ gradle_home / bin : $ path <nl> # just to test gradle version , against our provided one <nl>
ppp b / . travis . yml <nl> before_install : <nl> # - export path = $ gradle_home / bin : $ path <nl> # just to test gradle version , against our provided one <nl> - . / gradlew gradlew v v <nl>
ppp b / . travis . yml <nl> before_install : <nl> # - export path = $ gradle_home / bin : $ path <nl> # just to test gradle version , against our provided one <nl> - . / gradlew gradlew v <nl>
ppp b / . travis . yml <nl> before_install : <nl> # - export path = $ gradle_home / bin : $ path <nl> # just to test gradle version , against our provided provided <nl>
ppp b / . travis . yml <nl> before_install : <nl> # - export path = $ gradle_home / bin : $ path <nl> # just to test gradle version , against our provided <nl>
====NEW EXAMPLE====
ppp b / src / main / java / water / h2o . java <nl> public final class h2o { <nl> public static volatile <unk> <unk> ; <nl> public static volatile <unk> <unk> ; <nl>
ppp b / src / main / java / water / h2o . java <nl> public final class h2o { <nl> public static volatile <unk> <unk> ; <nl>
ppp b / src / main / java / water / h2o . java <nl> public final class h2o { <nl> public static volatile <unk> <unk> ; <nl> public static volatile <unk> <unk> ; <nl> static boolean <unk> = = ( unknown ) " ; <nl> / / user name for this cloud <nl>
ppp b / src / main / java / water / h2o . java <nl> public final class h2o { <nl> public static volatile <unk> <unk> ; <nl> public static volatile <unk> <unk> ; <nl> static boolean <unk> = = ( unknown ) ; <nl>
ppp b / src / main / java / water / h2o . java <nl> public final class h2o { <nl> public static volatile <unk> <unk> ; <nl> public static volatile <unk> <unk> ; <nl> static boolean <unk> = = ( unknown ) " ; <nl> / / user name for this cloud cloud <nl>
====NEW EXAMPLE====
ppp b / contributors <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl>
ppp b / contributors <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl>
ppp b / contributors <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl>
ppp b / contributors <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <nl>
ppp b / contributors <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> private boolean <unk> = false ; <nl> private int <unk> = gravity . top | gravity . left ; <nl> private boolean <unk> ; <nl> private int <unk> ; <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> private boolean <unk> = false ; <nl> private int <unk> = gravity . top | gravity . left ; <nl> private boolean <unk> ; <nl> private int <unk> ; ; <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> private boolean <unk> = false ; <nl> private int <unk> = gravity . top | gravity . left ; <nl> private boolean <unk> ; <nl> private int <unk> ; <nl> <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> private boolean <unk> = false ; <nl> private int <unk> = gravity . top | gravity . left ; <nl> private boolean <unk> ; <nl> private int <unk> ; <nl> ; <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> private boolean <unk> = false ; <nl> private int <unk> = gravity . top | gravity . left ; <nl> private boolean <unk> ; <nl> private int ; <nl>
====NEW EXAMPLE====
ppp b / manager / <unk> . py <nl> logger = logging . getlogger ( ' fqrouter . % s ' % __name__ ) <nl> <unk> = ' 208 . 67 . 222 . 222 ' <nl> <unk> = 53 <nl> <unk> = ' 208 . 67 . 220 . 220 ' <nl> <unk> = 53 <nl> <unk> = { <nl>
ppp b / manager / <unk> . py <nl> logger = logging . getlogger ( ' fqrouter . % s ' % __name__ ) <nl> <unk> = ' 208 . 67 . 222 . 222 ' <nl> <unk> = 53 <nl> <unk> = ' 208 . 67 . 220 . 220 ' <nl> <unk> = 53 <nl> <unk> = { { <nl>
ppp b / manager / <unk> . py <nl> logger = logging . getlogger ( ' fqrouter . % s ' % __name__ ) <nl> <unk> = ' 208 . 67 . 222 . 222 ' <nl> <unk> = 53 <nl> <unk> = ' 208 . 67 . 220 . 220 ' <nl> <unk> = 53 <nl> <unk> = { <nl> <nl>
ppp b / manager / <unk> . py <nl> logger = logging . getlogger ( ' fqrouter . % s ' % __name__ ) <nl> <unk> = ' 208 . 67 . 222 . 222 ' <nl> <unk> = 53 <nl> <unk> = ' 208 . 67 . 220 . 220 ' <nl> <unk> = 53 <nl>
ppp b / manager / <unk> . py <nl> logger = logging . getlogger ( ' fqrouter . % s ' % __name__ ) <nl> <unk> = ' 208 . 67 . 222 . 222 ' <nl> <unk> = 53 <nl> <unk> = ' 208 . 67 . 220 . 220 ' <nl> <unk> = 53 <nl> <unk> = { <nl> { <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c41698437d210fa24d6c6b69e7cbe20e670026d7 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c41698437d210fa24d6c6b69e7cbe20e670026d7 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - frontend - taglib . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 2 < / version > <nl> < / parent > <nl> < dependencies > <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 2 < / version > <nl> < / parent > <nl> < dependencies > > <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 2 < / version > <nl> < / parent > <nl> < dependencies > <nl> <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 2 < / version > <nl> < / parent > <nl> < dependencies >
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 2 < / version > <nl> < / parent > <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> changes for crate data <nl>
ppp b / changes . txt <nl> changes for crate <nl>
ppp b / changes . txt <nl> changes for crate data <nl> unreleased <nl>
ppp b / changes . txt <nl>
ppp b / changes . txt <nl> changes for crate data <nl> unreleased <nl> = = = = = = = = = = " <nl>
====NEW EXAMPLE====
ppp b / changelog <nl> = = = = = 1
ppp b / changelog <nl> = = = = = 1 . 9 . 4 ( dec ? ? ? ) = = = = = = = = = = = = = = = = = ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / changelog <nl> = = = = = 1 . 9 . 4 ( dec ? ? ? ) = = = = = = = = = = = = = = = = = = ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / changelog <nl> = = = = = 1 . 9 . 4 ( dec ? ? ? ) = = = = = = = = = = = = = = = = = ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / changelog <nl> = = = = = 1 . 9 . 4 ( dec ? ? ? ) = = = = = = = = = = = = = = = = = = = ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> android { <nl> defaultconfig { <nl> minsdkversion 14 <nl> targetsdkversion 21 <nl> versioncode 62 <nl> versionname " 1 . 1 . 2 . " <nl> } <nl> compileoptions { <nl>
ppp b / build . gradle <nl> android { <nl>
ppp b / build . gradle <nl> android { <nl> defaultconfig {
ppp b / build . gradle <nl>
ppp b / build . gradle <nl> android { <nl> defaultconfig { <nl> minsdkversion 14 <nl> targetsdkversion 21 <nl> versioncode 62 <nl> versionname " 1 . 1 . 2 . " <nl> } <nl> compileoptions { { <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - release - plugin < / artifactid > <nl> < version > 2 . 0 < / version > <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - scm - plugin < / artifactid > <nl>
ppp b / pom . xml <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - release - plugin < / artifactid > <nl> < version > 2 . 0 < / version > <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - scm - plugin < / > <nl>
ppp b / pom . xml <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - release - plugin < / artifactid > <nl> < version > 2 . 0 < / version > <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - scm - plugin < / artifactid > <nl> <nl>
ppp b / pom . xml <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - release - plugin < / artifactid > <nl> < version > 2 . 0 < / version > <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - scm - plugin < / artifactid > > <nl>
ppp b / pom . xml <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - release - plugin < / artifactid > <nl> < version > 2 . 0 < / version > <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - scm - plugin < / artifactid >
====NEW EXAMPLE====
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 18 < / version > <nl> < / parent > <nl> < groupid > org . neo4j < / groupid > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 18 < / version > <nl> < / parent > <nl> < groupid > org . neo4j < / > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 18 < / version > <nl> < / parent > <nl> < groupid > org . neo4j < / groupid > > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 18 < / version > <nl> < / parent > <nl> < groupid > org . neo4j < / groupid groupid <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 18 < / version > <nl> < / parent > <nl> < groupid > org . neo4j < / groupid > <nl> <nl>
====NEW EXAMPLE====
ppp b / build . properties <nl> # # <nl> # <nl>
ppp b / build . properties <nl> # # <nl>
ppp b / build . properties <nl>

ppp b / build . properties <nl> # # <nl> # <nl> # set the registry url to use when <unk> npm via gradle in a jenkins <nl> \ no newline at end of downloading wikipedia dataset ( https : / github . com / / / / / / / <nl> # # environment leave the property to use the default npm registry . <nl> # <nl>
====NEW EXAMPLE====
ppp b / changes <nl> hikaricp changes <nl> changes between 2 . 1 . 0 and 2 . 1 . 1 <nl> * generate proxy classes into the same protection domain as the hikaricp <nl> loaded classes . this solves issues with <unk> jars . <nl>
ppp b / changes <nl> hikaricp changes <nl> changes between 2 . 1 . 0 and 2 . 1 . 1 <nl> * generate proxy classes into the same protection domain as the hikaricp <nl> loaded classes . this solves issues with <unk> jars jars <nl>
ppp b / changes <nl> hikaricp changes <nl> changes between 2 . 1 . 0 and 2 . 1 . 1 <nl> * generate proxy classes into the same protection domain as the hikaricp <nl> loaded classes . this solves issues with <unk> jars <nl>
ppp b / changes <nl> hikaricp changes <nl> changes between 2 . 1 . 0 and 2 . 1 . 1 <nl> * generate proxy classes into the same protection domain as the hikaricp <nl> loaded classes . this solves issues with <unk> jars . . <nl>
ppp b / changes <nl> hikaricp changes <nl> changes between 2 . 1 . 0 and 2 . 1 . 1 <nl> * generate proxy classes into the same protection domain as the hikaricp <nl> loaded classes . this solves issues with <unk> <unk> . <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * added version number to reboot view <nl>
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl>

ppp b / changelog . md <nl> changelog <nl> * added version number to reboot view <nl> * update application state after changing on demand restricting ( [ issue ] ( / . . / . . / issues / 1515 ) ) <nl> * updated slovenian translation <nl> * updated slovak translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
====NEW EXAMPLE====
ppp b / authors <nl> osmand copyright 2010 - 2013 <nl> <unk> <unk> - all parts of the project , <unk> <nl> <unk> <unk> - rendering & core parts <nl> <unk> <unk> - main parts of the project , mostly rendering , ui interaction design <nl>
ppp b / authors <nl> osmand copyright 2010 - 2013 <nl> <unk> <unk> - all parts of the project , <unk> <nl> <unk> <unk> - rendering & core parts <nl> <unk> <unk> - main parts of the project , mostly rendering , ui interaction interaction <nl>
ppp b / authors <nl> osmand copyright 2010 - 2013 <nl> <unk> <unk> - all parts of the project , <unk> <nl> <unk> <unk> - rendering & core parts <nl> <unk> <unk> - main parts of the project , mostly rendering , ui interaction <nl>
ppp b / authors <nl> osmand copyright 2010 - 2013 <nl> <unk> <unk> - all parts of the project , <unk> <nl> <unk> <unk> - rendering & core parts <nl> <unk> <unk> - main parts of the project , mostly rendering , ui interaction design design <nl>
ppp b / authors <nl> osmand copyright 2010 - 2013 <nl> <unk> <unk> - all parts of the project , <unk> <nl> <unk> <unk> - rendering & core parts <nl> <unk> <unk> - main parts of the project , mostly rendering , ui interaction design
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 16 - beta1 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 16 - beta1 ' <nl> } <nl> ext . libraries = [ [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 16 - beta1 ' <nl> } <nl> ext . libraries = = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 16 - beta1 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 16 - beta1 ' <nl> } <nl> ext . libraries = [
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> notifications : <nl> email : <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> language : java <nl> notifications

ppp b / . travis . yml <nl> language : java <nl> notifications : <nl> email : <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> com <nl> - - spmallette @ @ gmail . co <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> # <nl> version = 0 . 10 <nl> ideaversion = 143 . 380 . 20 <nl>
ppp b / gradle . properties <nl> # <nl> version = 0 . 10 <nl>
ppp b / gradle . properties <nl> # <nl>
ppp b / gradle . properties <nl> # <nl> version = 0 . 10 <nl> ideaversion = 143 . 380 . 20 <nl> javaversion
ppp b / gradle . properties <nl> # <nl> version = 0 . 10 <nl> ideaversion = 143 . 380 . 20 <nl> javaversion = . <nl> delveversion = 0 . 10 . <nl> customdlvpath = = <nl>
====NEW EXAMPLE====
ppp b / platform / platform - impl / src / com / intellij / ide / ui / laf / / <unk> properties <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / platform / platform - impl / src / com / intellij / ide / ui / laf / / <unk> properties <nl> \ no newline at end of file <nl> / / \ no newline at end of file <nl>
ppp b / platform / platform - impl / src / com / intellij / ide / ui / laf / / <unk> properties <nl> \ no newline at end of file <nl> / \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / platform / platform - impl / src / com / intellij / ide / ui / laf / / <unk> properties <nl> \ no newline at end of file <nl> \ no newline at \ no newline at end of file <nl>
ppp b / platform / platform - impl / src / com / intellij / ide / ui / laf / / <unk> properties <nl> \ no newline at end of file <nl> / \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / contrib / externs / angular - material . js <nl> * / <nl> / * * <nl>
ppp b / contrib / externs / angular - material . js <nl> * / <nl>
ppp b / contrib / externs / angular - material . js <nl> * / <nl> /
ppp b / contrib / externs / angular - material . js <nl>
ppp b / contrib / externs / angular - material . js
====NEW EXAMPLE====
ppp b / benchmarks / benchmarks . properties <nl> # <nl> # set this to true to generate security related data . <nl> # <nl> \ no newline at end of file <nl> . . . security . enabled = true <nl> \ no newline at end of file <nl>
ppp b / benchmarks / benchmarks . properties <nl> # <nl>
ppp b / benchmarks / benchmarks . properties <nl> # <nl> # set this to true to generate security related data . <nl> # <nl> \ no newline at end of file <nl> . . . security . enabled true <nl> \ no newline at end of file <nl>
ppp b / benchmarks / benchmarks . properties <nl> # <nl> # set this
ppp b / benchmarks / benchmarks . properties <nl> # <nl> # set
====NEW EXAMPLE====
ppp b / src / main / java / org / elasticsearch / common / util / concurrent / <unk> . java <nl> public class <unk> extends threadpoolexecutor { <nl> } else { <nl> this . listener = listener ; <nl> } <nl> shutdown ( ) ; <nl> } <nl> } <nl> @ override <nl>
ppp b / src / main / java / org / elasticsearch / common / util / concurrent / <unk> . java <nl> public class <unk> extends threadpoolexecutor { <nl> } else { <nl> this . listener = listener ; <nl> } <nl> shutdown ( ) ; <nl> } <nl> } <nl>
ppp b / src / main / java / org / elasticsearch / common / util / concurrent / <unk> . java <nl> public class <unk> extends threadpoolexecutor { <nl> } else { <nl> this . listener = listener ; <nl> } <nl> shutdown ( ) ; <nl> } <nl> } <nl> @ override
ppp b / src / main / java / org / elasticsearch / common / util / concurrent / <unk> . java <nl> public class <unk> extends threadpoolexecutor { <nl> } else { <nl> this . listener = listener ; <nl> } <nl> shutdown ( ) ; <nl> } <nl> } <nl> @ override <nl> <nl>
ppp b / src / main / java / org / elasticsearch / common / util / concurrent / <unk> . java <nl> public class <unk> extends threadpoolexecutor { <nl> } else { <nl> this . listener = listener ; <nl> } <nl> shutdown ( ) ; <nl> } <nl> } <nl> @ override override <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / js / liferay / <unk> . js <nl> aui . add ( <nl> } , <nl>
ppp b / portal - web / docroot / html / js / liferay / <unk> . js <nl> aui . add ( <nl>
ppp b / portal - web / docroot / html / js / liferay / <unk> . js <nl> aui . add ( <nl> } <nl>
ppp b / portal - web / docroot / html / js / liferay / <unk> . js <nl>

====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 23 . 0 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15170 <nl> versionname = ' 29 - beta1 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 23 . 0 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15170 <nl> versionname = ' 29 - beta1 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 23 . 0 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15170 <nl> versionname = ' 29 - beta1 ' <nl> } <nl> ext . libraries = [ [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 23 . 0 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15170 <nl> versionname = ' 29 - beta1 ' <nl> } <nl> ext . libraries = = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 23 . 0 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15170 <nl> versionname = ' 29 - beta1 ' <nl> } <nl> ext . libraries = [
====NEW EXAMPLE====
ppp b / gradle . properties <nl> # org . gradle . parallel = true <nl> group = uk . co . <unk> <nl> version_name = 1 . 1 . 0 <nl> version_code = 11 <nl> pom_packaging = jar <nl> <unk> = https : / / github . com / <unk> / <unk> <nl>
ppp b / gradle . properties <nl> # org . gradle . parallel = true <nl> group = uk . co . <unk> <nl> version_name = 1 . 1 . 0 <nl> version_code = 11 <nl> pom_packaging = jar <nl> <unk> = https : / / github . com / <unk> / <unk> <unk> <nl>
ppp b / gradle . properties <nl> # org . gradle . parallel = true <nl> group = uk . co . <unk> <nl> version_name = 1 . 1 . 0 <nl> version_code = 11 <nl> pom_packaging = jar <nl> <unk> = https : / / github . com / <unk> / <nl>
ppp b / gradle . properties <nl> # org . gradle . parallel = true <nl> group = uk . co . <unk> <nl> version_name = 1 . 1 . 0 <nl> version_code = 11 <nl> pom_packaging = jar <nl> <unk> = https : / / github . com / <unk> / / <nl>
ppp b / gradle . properties <nl> # org . gradle . parallel = true <nl> group = uk . co . <unk> <nl> version_name = 1 . 1 . 0 <nl> version_code = 11 <nl> pom_packaging = jar <nl> <unk> = https : / / github . com / <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fd6439996926bd8cc768161ab35c6168af933ce2 <nl> mode = push <nl> parent = 50b8a5921936f5f344f6c35736796defc2d23ebb <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fd6439996926bd8cc768161ab35c6168af933ce2 <nl> mode = push <nl> parent = 50b8a5921936f5f344f6c35736796defc2d23ebb <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fd6439996926bd8cc768161ab35c6168af933ce2 <nl> mode = push <nl> parent = 50b8a5921936f5f344f6c35736796defc2d23ebb <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fd6439996926bd8cc768161ab35c6168af933ce2 <nl> mode = push <nl> parent = 50b8a5921936f5f344f6c35736796defc2d23ebb <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / core / src / processing / data / xml . java <nl> import processing . core . papplet ; <nl>
ppp b / core / src / processing / data / xml . java <nl> import processing . core . papplet ; <nl> * representing a single node of an xml tree . <nl> * <nl> * @ webref data : composite <nl> * @ override <nl> * @ data : composite <nl> * / <nl> public class xml implements serializable { <nl>
ppp b / core / src / processing / data / xml . java <nl> import

ppp b / core / src / processing / data / xml . java <nl> import processing
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 10 . 0 <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0

ppp b / changelog . md <nl> # # 0 . 10 . 0 <nl> * storm - 533 : fix kafka spout to maintain backward compatibility <nl> * storm - storm - : add in client and server iconnection metrics . <nl> * storm - 572 : storm - ' favicon . ico ' <nl> * storm - 572 : allow users to pass test - timeout - ms for java <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> build_tmp / <nl> . ds_store <nl> . * . swp <nl> . svn <nl>
ppp b / . gitignore <nl> build_tmp / <nl> . ds_store <nl> . * . swp <nl> svn <nl>
ppp b / . gitignore <nl> build_tmp / <nl> . ds_store <nl> . * . swp <nl> . svn <nl> svn <nl>
ppp b / . gitignore <nl> build_tmp / <nl> . ds_store <nl> . * . swp <nl> . <nl>
ppp b / . gitignore <nl> build_tmp / <nl> . ds_store <nl> . * . swp <nl> . svn <nl> . <nl>
====NEW EXAMPLE====
ppp b / bson / src / main / org / bson / io / <unk> . java <nl> public class <unk> extends outputbuffer { <nl> private int <unk> ; <nl> private int <unk> ; <nl> private byte [ ] <unk> = new byte [ <unk> ] ; <nl> } <nl>
ppp b / bson / src / main / org / bson / io / <unk> . java <nl> public class <unk> extends outputbuffer { <nl> private int <unk> ; <nl> private int <unk> ; <nl> private byte [ ] <unk> = new byte [ <unk> ] ; <nl>
ppp b / bson / src / main / org / bson / io / <unk> . java <nl> public class <unk> extends outputbuffer { <nl> private int <unk> ; <nl> private int <unk> ; <nl> private byte [ ] <unk> = new byte [ <unk> ] ; <nl> } <nl> <nl>
ppp b / bson / src / main / org / bson / io / <unk> . java <nl> public class <unk> extends outputbuffer { <nl> private int <unk> ; <nl> private int <unk> ; <nl> private byte [ ] <unk> = new byte [ <unk> ] ; <nl> }
ppp b / bson / src / main / org / bson / io / <unk> . java <nl> public class <unk> extends outputbuffer { <nl> private int <unk> ; <nl> private int <unk> ; <nl> private byte [ ] <unk> = new byte [ <unk> ] ; <nl> <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> allprojects { <nl> subprojects { <nl> group = ' com . yahoo . squidb ' <nl> version = ' 3 . 0 . 0 ' <nl> } <nl> if ( javaversion . current ( ) . isjava8compatible ( ) ) { <nl>
ppp b / build . gradle <nl> allprojects { <nl> subprojects { <nl> group = ' com . yahoo . squidb ' <nl> version = ' 3 . 0 . 0 ' <nl> } <nl> if ( javaversion . current ( ) . isjava8compatible ( ) ) ) <nl>
ppp b / build . gradle <nl> allprojects { <nl> subprojects { <nl> group = ' com . yahoo . squidb ' <nl> version = ' 3 . 0 . 0 ' <nl> } <nl> if ( javaversion . current ( ) . isjava8compatible ( ) ) { { <nl>
ppp b / build . gradle <nl> allprojects { <nl> subprojects { <nl> group = ' com . yahoo . squidb ' <nl> version = ' 3 . 0 . 0 ' <nl> } <nl> if ( javaversion . current ( ) . isjava8compatible ( ) ) <nl>
ppp b / build . gradle <nl> allprojects { <nl> subprojects { <nl> group = ' com . yahoo . squidb ' <nl> version = ' 3 . 0 . 0 ' <nl> } <nl> if ( javaversion . current ( ) . isjava8compatible ( ) ) { <nl> <nl>
====NEW EXAMPLE====
ppp b / etc / pom . xml <nl> < parent > <nl> < groupid > org . apache . camel < / groupid > <nl> < artifactid > camel - parent < / artifactid > <nl> < version > 2 . 14 - < / version version > <nl> < relativepath > . . / parent / / relativepath > <nl> < / parent > <nl>
ppp b / etc / pom . xml <nl> < parent > <nl> < groupid > org . apache . camel < / groupid > <nl>
ppp b / etc / pom . xml <nl> < parent > <nl> < groupid > org . apache . camel < / groupid > <nl> < artifactid > camel - parent < / artifactid > <nl> < version > 2 . 14 - < / version version > <nl> < relativepath > . . / parent / / relativepath > <nl> < / parent <nl>
ppp b / etc / pom . xml <nl> < parent > <nl> < groupid > org . apache . camel < / groupid > <nl> < artifactid > camel - parent < / artifactid > <nl> < version > 2 . 14 - < / version version > <nl> < relativepath > . . / parent / / relativepath > <nl> < / > <nl>
ppp b / etc / pom . xml <nl> < parent > <nl> < groupid > org . apache . camel < / groupid > <nl> < artifactid > camel - parent < / artifactid > <nl> < version > 2 . 14 - < / version version > <nl> < relativepath > . . / parent / / relativepath > <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - remote . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - remote = git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / subprojects / base - services / src / main / java / org / gradle / api / javaversion . java <nl> public enum javaversion { <nl> private final boolean <unk> ; <nl> private javaversion ( boolean ) { <nl> this . <unk> = <unk> ; <nl> } <nl>
ppp b / subprojects / base - services / src / main / java / org / gradle / api / javaversion . java <nl> public enum javaversion { <nl> private final boolean <unk> ; <nl> private javaversion ( boolean ) { <nl> this . <unk> = <unk> ; <nl>
ppp b / subprojects / base - services / src / main / java / org / gradle / api / javaversion . java <nl> public enum javaversion { <nl> private final boolean <unk> ; <nl> private javaversion ( boolean ) { <nl> this . <unk> = <unk> ; <nl> } <nl> <nl>
ppp b / subprojects / base - services / src / main / java / org / gradle / api / javaversion . java <nl> public enum javaversion { <nl> private final boolean <unk> ; <nl> private javaversion ( boolean ) { <nl> this . <unk> = <unk> ; <nl> }
ppp b / subprojects / base - services / src / main / java / org / gradle / api / javaversion . java <nl> public enum javaversion { <nl> private final boolean <unk> ; <nl> private javaversion ( boolean ) { <nl> this . <unk> = <unk> ; <nl> <nl>
====NEW EXAMPLE====
ppp b / src / com / owncloud / android / ui / activity / filedisplayactivity . java <nl> public class filedisplayactivity extends hookactivity <nl> / / another window floating over <nl> } <nl> } , <nl> <unk> <nl> <unk> <nl> ) ; <nl> } <nl>
ppp b / src / com / owncloud / android / ui / activity / filedisplayactivity . java <nl> public class filedisplayactivity extends hookactivity <nl> / / another window floating over <nl> } <nl> } , <nl> <unk> <nl> <unk> <nl> ) ; <nl> <nl>
ppp b / src / com / owncloud / android / ui / activity / filedisplayactivity . java <nl> public class filedisplayactivity extends hookactivity <nl> / / another window floating over <nl> } <nl> } , <nl> <unk> <nl> <unk> <nl> ) ; <nl>
ppp b / src / com / owncloud / android / ui / activity / filedisplayactivity . java <nl> public class filedisplayactivity extends hookactivity <nl> / / another window floating over <nl> } <nl> } , <nl> <unk> <nl> <unk> <nl> ) ; <nl> } <nl> <nl>
ppp b / src / com / owncloud / android / ui / activity / filedisplayactivity . java <nl> public class filedisplayactivity extends hookactivity <nl> / / another window floating over <nl> } <nl> } , <nl> <unk> <nl> <unk> <nl> ) ; <nl> }
====NEW EXAMPLE====
ppp b / src / brut / androlib / res / data / value / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> public <unk> ( <unk> <unk> , int value , boolean theme ) { <nl> super ( value ) ; <nl> <unk> ( ) ; <nl> <unk> = <unk> ; <nl> <unk> = theme ; <nl> } <nl>
ppp b / src / brut / androlib / res / data / value / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> public <unk> ( <unk> <unk> , int value , boolean theme ) { <nl> super ( value ) ; <nl> <unk> ( ) ; <nl> <unk> = <unk> ; <nl> <unk> = theme ; <nl>
ppp b / src / brut / androlib / res / data / value / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> public <unk> ( <unk> <unk> , int value , boolean theme ) { <nl> super ( value ) ; <nl> <unk> ( ) ; <nl> <unk> = <unk> ; <nl> <unk> = theme ; <nl> } <nl> <nl>
ppp b / src / brut / androlib / res / data / value / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> public <unk> ( <unk> <unk> , int value , boolean theme ) { <nl> super ( value ) ; <nl> <unk> ( ) ; <nl> <unk> = <unk> ; <nl> <unk> = theme ; <nl> }
ppp b / src / brut / androlib / res / data / value / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl>
====NEW EXAMPLE====
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 2 . . 2 . - bin zip <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 2 . . 2 . - bin . zip <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 2 . . 2 . - bin . <nl>
====NEW EXAMPLE====
ppp b / source / com / intellij / jsp / impl / <unk> . java <nl> public class <unk> extends <unk> { <nl> return <unk> ; <nl> } <nl> protected <unk> <unk> ( final xmltag tag ) { <nl> return new <unk> ( tag ) ; <nl> } <nl>
ppp b / source / com / intellij / jsp / impl / <unk> . java <nl> public class <unk> extends <unk> { <nl> return <unk> ; <nl> } <nl> protected <unk> <unk> ( final xmltag tag ) { <nl> return new <unk> ( tag ) ; <nl> } <nl> <nl>
ppp b / source / com / intellij / jsp / impl / <unk> . java <nl> public class <unk> extends <unk> { <nl> return <unk> ; <nl> } <nl> protected <unk> <unk> ( final xmltag tag ) { <nl> return new <unk> ( tag ) ; <nl>
ppp b / source / com / intellij / jsp / impl / <unk> . java <nl> public class <unk> extends <unk> { <nl> return <unk> ; <nl> } <nl> protected <unk> <unk> ( final xmltag tag ) { <nl> return new <unk> ( tag ) ; <nl> <nl>
ppp b / source / com / intellij / jsp / impl / <unk> . java <nl> public class <unk> extends <unk> { <nl> return <unk> ; <nl> } <nl> protected <unk> <unk> ( final xmltag tag ) { <nl> return new <unk> ( tag ) ; <nl> }
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 220716e3eb96913278d54274baad6e9cc4d9b4d9 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 220716e3eb96913278d54274baad6e9cc4d9b4d9 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - layout . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 220716e3eb96913278d54274baad6e9cc4d9b4d9 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / openapi / src / com / intellij / openapi / actionsystem / ideactions . java <nl> public interface ideactions { <nl> string <unk> = " back " ; <nl> string <unk> = " forward " ; <nl> ; <nl> <unk> <unk> = forward " ; <nl> } <nl>
ppp b / openapi / src / com / intellij / openapi / actionsystem / ideactions . java <nl> public interface ideactions { <nl> string <unk> = " back " ; <nl> string <unk> = " forward " ; <nl> ; <nl> <unk> <unk> = forward " ; <nl> <nl>
ppp b / openapi / src / com / intellij / openapi / actionsystem / ideactions . java <nl> public interface ideactions { <nl> string <unk> = " back " ; <nl> string <unk> = " forward " ; <nl> ; <nl> <unk> <unk> = forward " ; <nl>
ppp b / openapi / src / com / intellij / openapi / actionsystem / ideactions . java <nl> public interface ideactions { <nl> string <unk> = " back " ; <nl> string <unk> = " forward " ; <nl> ; <nl> <unk> <unk> = forward " ; <nl> ; <nl>
ppp b / openapi / src / com / intellij / openapi / actionsystem / ideactions . java <nl> public interface ideactions { <nl> string <unk> = " back " ; <nl> string <unk> = " forward " ; <nl> ; <nl> <unk> <unk> = forward " ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp
ppp b / sonar - server / src / main / less / style . less <nl> th . operations , td . operations { <nl> margin : 0 ; <nl> font - size : 12px ; <nl> padding : 0 0 10px ; <nl> ; <nl> ; <nl> ; <nl> padding : 0 0 10px 0 ; <nl> } <nl> . code - issue <unk> { <nl>
ppp b / sonar - server / src / main / less / style . less <nl> th . operations , td . operations { <nl> margin : 0 ; <nl> font - size : 12px ; <nl> padding : 0 0 10px ; <nl> ; <nl> ; <nl> ; <nl> padding : 0 0 10px 0 ; <nl> } <nl> . code - issue <unk> { { <nl>

ppp b / sonar - server / src / main / less
====NEW EXAMPLE====
ppp b / build . gradle <nl>

ppp b / build . gradle <nl> if ( [ " <unk> " , " storepassword " , " <unk> " , " <unk> " ] . count { ! project . ha <nl> } <nl> } <nl> android . buildtypes . release . signingconfig = android } <nl> } <nl> android . buildtypes . . signingconfig = android . signingconfigs . release <nl> } <nl>
ppp b / build . gradle <nl> if ( [ " <unk> " , " storepassword " , " <unk> " , " <unk> " ] . count { ! project . ha <nl> } <nl> } <nl> android . buildtypes . release . signingconfig = android } <nl> } <nl> android . buildtypes . . signingconfig = android . signingconfigs . release release <nl> } <nl>
ppp b / build . gradle <nl> if ( [ " <unk> " , " storepassword " , " <unk> " , " <unk> " ] . count { ! project . ha <nl> } <nl> } <nl> android . buildtypes . release . signingconfig = android } <nl> } <nl> android . buildtypes . . signingconfig = android . signingconfigs . release release <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - iframe . git <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> apply plugin : ' com . github . johnrengelman . shadow ' <nl> sourcecompatibility = 1 . 7 <nl> targetcompatibility = 1 . 7 <nl> group = ' com . github . tomakehurst ' <nl> version = ' 2 . 0 . 10 - beta ' <nl> def shouldpublishlocally = system . getproperty ( ' local_publish ' ) <nl>
ppp b / build . gradle <nl> apply plugin : ' com . github . johnrengelman . shadow ' <nl> sourcecompatibility = 1 . 7 <nl>
ppp b / build . gradle <nl> apply plugin : ' com . github . johnrengelman . shadow ' <nl> sourcecompatibility = 1 . 7 <nl> targetcompatibility = 1 . 7 <nl> group = ' com . github . tomakehurst ' <nl> version = ' 2 . 0 . 10 - beta ' <nl> def shouldpublishlocally = system . getproperty ( ' local_publish ' ' <nl>
ppp b / build . gradle <nl> apply plugin : ' com . github . johnrengelman . shadow ' <nl> sourcecompatibility = 1 . 7 <nl> targetcompatibility = 1 . 7 <nl> group = ' com . github . tomakehurst ' <nl> version = ' 2 . 0 . 10 - beta ' <nl> def shouldpublishlocally = system . getproperty ( ' local_publish ' <nl>
ppp b / build . gradle <nl> apply plugin : ' com . github . johnrengelman . shadow ' <nl> sourcecompatibility = 1 . 7 <nl> targetcompatibility = 1 . 7 <nl> group = ' com . github . tomakehurst ' <nl> version = ' 2 . 0 . 10 - beta ' <nl> def shouldpublishlocally = system . getproperty ( ' local_publish ) <nl>
====NEW EXAMPLE====
ppp b / <unk> / <unk> / src / <unk> . py <nl> from crate . client import connect <nl>
ppp b / <unk> / <unk> / src / <unk> . py <nl>
ppp

ppp b / <unk> / <unk> / src / <unk> . py <nl> from crate . client import connect <nl> from crate . client import exceptions <nl> from <unk> import <unk> <nl> <unk> = [ re . compile ( ( o , re . ) ; <nl> re . compile ( o , re . <unk> ) for o in [ <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < profiles > <nl> < profile > <nl> < ! - - turn of doclint for java8 and later - - > <nl> < id > doclint - java8 - disable < / id > <nl> < activation > <nl> < jdk > [ 1 . 8 , ) < / jdk > <nl>
ppp b / pom . xml <nl> < profiles > <nl> < profile > <nl> < ! - - turn of doclint for java8 and later - - > <nl> < id > doclint - java8 - disable < / id > <nl> < activation > <nl> < jdk > [ 1 . 8 , ) < / > <nl>
ppp b / pom . xml <nl> < profiles > <nl> < profile > <nl> < ! - - turn of doclint for java8 and later - - > <nl> < id > doclint - java8 - disable < / id > <nl> < activation > <nl> < jdk > [ 1 . 8 , ) < / jdk <nl>
ppp b / pom . xml <nl> < profiles > <nl> < profile > <nl> < ! - - turn of doclint for java8 and later - - > <nl> < id > doclint - java8 - disable < / id > <nl> < activation > <nl> < jdk > [ 1 . 8 , ) < / jdk jdk <nl>
ppp b / pom . xml <nl> < profiles > <nl> < profile > <nl> < ! - - turn of doclint for java8 and later - - > <nl> < id > doclint - java8 - disable < / id > <nl> < activation > <nl> < jdk > [ 1 . 8 , ) < / jdk : <nl>
====NEW EXAMPLE====
ppp b / debian / init <nl> # ! / bin / bash <nl>
ppp b / debian / init <nl> # ! / bin / bash
ppp b / debian / init <nl> # ! / bin /
ppp b / debian / init <nl>
ppp
====NEW EXAMPLE====
ppp b / externs / <unk> . js <nl> notification . prototype . <unk> ; <nl> notification . prototype . onclick ; <nl> / * * <nl>
ppp b / externs / <unk> . js <nl> notification . prototype . <unk> ; <nl> notification . prototype . onclick ; <nl> / * <nl>
ppp b / externs / <unk> . js <nl> notification . prototype . <unk> ; <nl> notification . prototype . onclick ; <nl>
ppp b / externs / <unk> . js <nl> notification . prototype . <unk> ; <nl> notification . prototype . onclick ; <nl> / * * <nl> * @
ppp b / externs / <unk> . js <nl> notification . prototype . <unk> ; <nl> notification . prototype . onclick ; <nl> / * * <nl> *
====NEW EXAMPLE====
ppp b / realm / build . gradle <nl> dependencies { <nl> android { <nl> compilesdkversion 19 <nl> buildtoolsversion ' 20 . 0
ppp b / realm / build . gradle <nl>
ppp b / realm / build . gradle <nl> dependencies {
ppp b / realm / build . gradle <nl> dependencies { <nl> android
ppp b / realm / build . gradle <nl> dependencies { <nl> android {
====NEW EXAMPLE====
ppp b / bin / cqlsh <nl> if os . path . exists ( <unk> ) : <nl> default_host = ' 127 . 0 . 0 . 1 ' <nl>
ppp b / bin / cqlsh <nl> if os . path . exists ( <unk> ) : <nl> default_host = ' 127 . 0 . 0 . 1 <nl>
ppp b / bin / cqlsh <nl>
ppp b / bin / cqlsh <nl> if os . path . exists ( <unk> ) : <nl>

====NEW EXAMPLE====
ppp b / enterprise / src / main / assembly / binary - release . xml <nl> < include > license . txt < / include > <nl> < include > copyright . txt < / include > <nl> < include > changes . txt < / include > <nl> < / > changes changes txt < / include > <nl> < / includes > <nl> < / fileset > <nl>
ppp b / enterprise / src / main / assembly / binary - release . xml <nl> < include > license . txt < / include <nl>
ppp
ppp b / enterprise / src / main / assembly / binary - release . xml <nl>

====NEW EXAMPLE====
ppp b / webapps / docs / changelog . xml <nl> session attribute serialization . ( <unk> ) <nl> < / fix > <nl> < update > <nl> improve jndi realm compatability with active directory . ( <unk> ) <nl> < / update > <nl> < fix > <nl> give session <unk> and <unk> clear semantics semantics <nl>
ppp b / webapps / docs / changelog . xml <nl> session attribute serialization . ( <unk> ) <nl> < / fix > <nl> < update > <nl> improve jndi realm compatability with active directory . ( <unk> ) <nl> < / update > <nl> < fix > <nl> give session <unk> and <unk> clear semantics . <nl>
ppp b / webapps / docs / changelog . xml <nl> session attribute serialization . ( <unk> ) <nl> < / fix > <nl> < update > <nl> improve jndi realm compatability with active directory . ( <unk> ) <nl> < / update > <nl> < fix > <nl> give session <unk> and <unk> clear semantics <nl>
ppp b / webapps / docs / changelog . xml <nl> session attribute serialization . ( <unk> ) <nl> < / fix > <nl> < update > <nl> improve jndi realm compatability with active directory . ( <unk> ) <nl> < / update > <nl> < fix > <nl> give session <unk> and <unk> clear semantics . . <nl>
ppp b / webapps / docs / changelog . xml <nl> session attribute serialization . ( <unk> ) <nl> < / fix > <nl> < update > <nl> improve jndi realm compatability with active directory . ( <unk> ) <nl> < / update > <nl> < fix > <nl> give session <unk> and <unk> clear clear <nl>
====NEW EXAMPLE====
ppp b / spring - boot - <unk> - docs / pom . xml <nl> < dependency > <nl> < groupid > com . <unk> < / groupid > <nl> < artifactid > h2 < / artifactid > <nl> < / dependency > <nl> < / > <nl> < / dependency > <nl> < dependency > <nl> < groupid > junit < / groupid > <nl>
ppp b / spring - boot - <unk> - docs / pom . xml <nl> < dependency > <nl> < groupid > com . <unk> < / groupid > <nl> < artifactid > h2 < / artifactid > <nl> < / dependency > <nl> < / > <nl> < / dependency > <nl> < dependency > <nl> < groupid > junit < / > <nl>
ppp b / spring - boot - <unk> - docs / pom . xml <nl> < dependency > <nl> < groupid > com . <unk> < / groupid > <nl> < artifactid > h2 < / artifactid > <nl> < / dependency > <nl> < / > <nl> < / dependency > <nl> < dependency > <nl> < groupid > junit < / groupid > > <nl>
ppp b / spring - boot - <unk> - docs / pom . xml <nl> < dependency > <nl> < groupid > com . <unk> < / groupid > <nl> < artifactid > h2 < / artifactid > <nl> < / dependency > <nl> < / > <nl> < / dependency > <nl> < dependency > <nl> < groupid > junit < / groupid <nl>
ppp b / spring - boot - <unk> - docs / pom . xml <nl> < dependency > <nl> < groupid > com . <unk> < / groupid > <nl> < artifactid > h2 < / artifactid > <nl> < / dependency > <nl> < / > <nl> < / dependency > <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased <nl>
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> # # 0
ppp
====NEW EXAMPLE====
ppp b / . travis . yml <nl> branches : <nl> language : <nl> java <nl>
ppp b / . travis . yml <nl> branches : <nl> language : <nl> java <nl> jdk : <nl>
ppp b / . travis . yml <nl> branches : <nl> language : <nl>
ppp b / . travis . yml <nl> branches : <nl> language : <nl> java <nl> before_install : <nl>
ppp b / . travis . yml <nl> branches : <nl> language : <nl> java <nl> jdk : <nl> # environment <nl>
====NEW EXAMPLE====
ppp b / portal - impl / src / com / liferay / portlet / <unk> . java <nl> public class <unk> implements <unk> { <nl> throw new <unk> ( ) ; <nl> } <nl> if ( portlet . <unk> ( ) ) ; <nl> . <unk> ( ) ) { <nl> return ; <nl> } <nl>
ppp b / portal - impl / src / com / liferay / portlet / <unk> . java <nl> public class <unk> implements <unk> { <nl> throw new <unk> ( ) ; <nl> } <nl> if ( portlet . <unk> ( ) ) ; <nl> . <unk> ( ) ) { <nl> return ; <nl> } <nl> <nl>
ppp b / portal - impl / src / com / liferay / portlet / <unk> . java <nl> public class <unk> implements <unk> { <nl> throw new <unk> ( ) ; <nl> } <nl> if ( portlet . <unk> ( ) ) ; <nl> . <unk> ( ) ) { <nl> return ; <nl>
ppp b / portal - impl / src / com / liferay / portlet / <unk> . java <nl> public class <unk> implements <unk> { <nl> throw new <unk> ( ) ; <nl> } <nl> if ( portlet . <unk> ( ) ) ; <nl> . <unk> ( ) ) { <nl> return ; <nl> }
ppp b / portal - impl / src / com / liferay / portlet / <unk> . java <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - login - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / androidasync / src / com / koushikdutta / async / <unk> . java <nl> public class <unk> { <nl> } <nl> public bytebuffer <unk> ( ) { <nl> read ( remaining ( ) ) ; <nl> if ( ) { <nl> return ( ) ; <nl> ) ; <nl> return remove ( ) ; <nl> } <nl>
ppp b / androidasync / src / com / koushikdutta / async / <unk> . java <nl>
ppp b / androidasync / src / com / koushikdutta / async / <unk> . java <nl> public class <unk> { <nl> } <nl> public bytebuffer <unk> ( ) { <nl> read ( remaining ( ) ) ; <nl> if ( ) { <nl> return ( ) ; <nl> ) ; <nl> return remove ( ) ; <nl> } } <nl>
ppp b / androidasync / src / com / koushikdutta / async / <unk> . java <nl> public class <unk> { <nl> } <nl> public bytebuffer <unk> ( ) { <nl> read ( remaining ( ) ) ; <nl> if ( ) { <nl> return ( ) ; <nl> ) ; <nl> return remove ( ) ; <nl>
ppp b / androidasync / src / com / koushikdutta / async / <unk> . java <nl> public class <unk> { <nl> } <nl> public bytebuffer <unk> ( ) { <nl> read ( remaining ( ) ) ; <nl> if ( ) { <nl> return ( ) ; <nl> ) ; <nl> return remove ( ) ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / src / cpp / core / <unk> / <unk> . cpp <nl> namespace core { <nl> namespace { <nl>
ppp b / src / cpp / core / <unk> / <unk> . cpp <nl> namespace core { <nl>
ppp b / src / cpp / core / <unk> / <unk> . cpp <nl>
ppp b / src / cpp / core / <unk> / <unk> . cpp <nl> namespace core { <nl> namespace { <nl> const char * const <unk> = - - - - - - - - <unk> " ; <nl> std : : string <unk> ( ) <nl> { <nl>
ppp b / src / cpp / core / <unk> / <unk> . cpp <nl> namespace
====NEW EXAMPLE====
ppp b / jooq / pom . xml <nl> < groupid > org . jooq < / groupid > <nl> < artifactid > jooq < / artifactid > <nl> < name > <nl> > jooq < / name > <nl> < build > <nl> < plugins > <nl>
ppp b / jooq / pom . xml <nl> < groupid > org . jooq < / groupid > <nl> < artifactid > jooq < / artifactid > <nl> < name > <nl> > jooq < / name > <nl> < build > <nl> < plugins > > <nl>
ppp b / jooq / pom . xml <nl> < groupid > org . jooq < / groupid > <nl> < artifactid > jooq < / artifactid > <nl> < name > <nl> > jooq < / name > <nl> < build > <nl> < plugins > <nl> <nl>
ppp b / jooq / pom . xml <nl> < groupid > org . jooq < / groupid > <nl> < artifactid > jooq < / artifactid > <nl> < name > <nl> > jooq < / name > <nl> < build > <nl> < plugins >
ppp b / jooq / pom . xml <nl> < groupid > org . jooq < / groupid > <nl> < artifactid > jooq < / artifactid > <nl> < name > <nl> > jooq < / name > <nl> < build > <nl> < plugins > <nl> > <nl>
====NEW EXAMPLE====
ppp b / osmand - java / src / net / osmand / <unk> . java <nl> public class <unk> { <nl> } <nl> } <nl> / / fields of that class are used in c + + <nl> \ no newline at end of file <nl> public boolean interrupted = false ; <nl> public boolean <unk> = false ; <nl>
ppp b / osmand - java / src / net / osmand / <unk> . java <nl> public class <unk> { <nl> } <nl> } <nl> / / fields of that class are used in c + + <nl> \ no newline at end of file <nl> public boolean interrupted = false ; <nl> public boolean <unk> = ; <nl>
ppp b / osmand - java / src / net / osmand / <unk> . java <nl> public class <unk> { <nl> } <nl> } <nl> / / fields of that class are used in c + + <nl> \ no newline at end of file <nl> public boolean interrupted = false ; <nl> public boolean <unk> = false false ; <nl>
ppp b / osmand - java / src / net / osmand / <unk> . java <nl> public class <unk> { <nl> } <nl> } <nl> / / fields of that class are used in c + + <nl> \ no newline at end of file <nl> public boolean interrupted = false ; <nl> public boolean <unk> = false ; ; <nl>
ppp b / osmand - java / src / net / osmand / <unk> . java <nl> public class <unk> { <nl> <nl>
====NEW EXAMPLE====
ppp b / v8 / renderscript / rs_support / android . mk <nl> local_src_files : = \ <nl> driver / <unk> . cpp \ <nl> driver / <unk> . cpp \ <nl> cpu_ref / <unk> . cpp \ <nl> cpu_ref / rscpuscript . cpp \ no newline at end of file <nl> \ <nl> / / rscpuruntimemath . cpp \ <nl> cpu_ref / rscpuruntimestubs . cpp \ <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> local_src_files : = \ <nl> driver / <unk> . cpp \ <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> local_src_files : = \ <nl> driver / <unk> . cpp \ <nl> driver / <unk> . cpp \ <nl> cpu_ref / <unk> . cpp \ <nl> cpu_ref / rscpuscript . cpp \ no newline at end of file <nl> \ <nl> / / rscpuruntimemath . cpp \ <nl> cpu_ref / rscpuruntimestubs . cpp \ \ <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> local_src_files : = \ <nl> driver / <unk> . cpp \ <nl> driver / <unk> . cpp \ <nl> cpu_ref / <unk> . cpp \ <nl> cpu_ref / rscpuscript . cpp \ no newline at end of file <nl> \ <nl> / / rscpuruntimemath . cpp \ <nl> cpu_ref / rscpuruntimestubs . cpp cpp <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> local_src_files : = \ <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> android_build_min_sdk_version = 10 <nl> android_build_target_sdk_version = 23 <nl> android_build_sdk_version = 23 <nl> android_build_tools_version = 23 . 0 . 3 <nl>
ppp b / gradle . properties <nl> android_build_min_sdk_version = 10 <nl> android_build_target_sdk_version = 23 <nl> android_build_sdk_version = 23 <nl> android_build_tools_version = 23 . 0 . <nl>
ppp b / gradle . properties <nl> android_build_min_sdk_version = 10 <nl> android_build_target_sdk_version = 23 <nl> android_build_sdk_version = 23 <nl> android_build_tools_version = 23 . 0 . 15 <nl>
ppp b / gradle . properties <nl> android_build_min_sdk_version = 10 <nl> android_build_target_sdk_version = 23 <nl> android_build_sdk_version = 23 <nl> android_build_tools_version = 23 . 0 . 3 <nl> <nl>
ppp b / gradle . properties <nl> android_build_min_sdk_version = 10 <nl> android_build_target_sdk_version = 23 <nl> android_build_sdk_version = 23 <nl> android_build_tools_version = 23 . 0 . launch <nl>
====NEW EXAMPLE====
ppp b
ppp b /
ppp b / sample - kotlin / build . gradle <nl> android
ppp b / sample - kotlin / build . gradle <nl> android {
ppp
====NEW EXAMPLE====
ppp b / readme . md <nl>
ppp b / readme . md <nl> add [ <unk> ] ( https
ppp b / readme . md <nl> add [ <unk> ]
ppp

====NEW EXAMPLE====
ppp b / conf / log4j - server . properties <nl> # ( % l is slower . ) <nl> # output messages into a <unk> log file as well as stdout <nl> log4j . rootlogger = debug , stdout , r <nl> # stdout <nl> log4j . appender . stdout = org . apache . log4j . <unk> <unk> <nl>
ppp b / conf / log4j - server . properties <nl> # ( % l is slower . ) <nl> # output messages into a <unk> log file as well as stdout <nl> log4j . rootlogger = debug , stdout , r <nl> # stdout <nl> log4j . appender . stdout = org . apache . log4j . <unk> <nl>
ppp b / conf / log4j - server . properties <nl> # ( % l is slower . ) <nl> # output messages into a <unk> log file as well as stdout <nl> log4j . rootlogger = debug , stdout , r <nl> # stdout <nl> log4j . appender . stdout = org . apache . log4j . <unk> <unk> <unk> <nl>
ppp b / conf / log4j - server . properties <nl> # ( % l is slower . ) <nl> # output messages into a <unk> log file as well as stdout <nl> log4j . rootlogger = debug , stdout , r <nl> # stdout <nl> log4j . appender . stdout = org . apache . log4j . <unk> . <nl>
ppp b / conf / log4j - server . properties <nl> # ( % l is slower . ) <nl> # output messages into a <unk> log file as well as stdout <nl> log4j . rootlogger = debug , stdout , r <nl> # stdout <nl> log4j . appender . stdout = org . apache . log4j . . <nl>
====NEW EXAMPLE====
ppp b / linkbubbleproject / linkbubble / src / main / java / com / chrislacy / linkbubble / bubbleview . java <nl> public class bubbleview extends framelayout { <nl> @ override <nl> public void <unk> ( string url ) { <nl> <unk> ( true , 0 ) ; <nl> } ( ) ; <nl> } <nl> @ override <nl>
ppp b / linkbubbleproject / linkbubble / src / main / java / com / chrislacy / linkbubble / bubbleview . java <nl> public class bubbleview extends framelayout { <nl> @ override <nl> public void <unk> ( string url ) { <nl> <unk> ( true , 0 ) ; <nl> } ( ) ; <nl> } <nl> @ override override <nl>
ppp b / linkbubbleproject / linkbubble / src / main / java / com / chrislacy / linkbubble / bubbleview . java <nl> public class bubbleview extends framelayout { <nl> @ override <nl> public void <unk> ( string url ) { <nl> <unk> ( true , 0 ) ; <nl> } ( ) ; <nl> } <nl>
ppp b / linkbubbleproject / linkbubble / src / main / java / com / chrislacy / linkbubble / bubbleview . java <nl> public class bubbleview extends framelayout { <nl> @ override <nl> public void <unk> ( string url ) { <nl> <unk> ( true , 0 ) ; <nl> } ( ) ; <nl> } <nl> } <nl>
ppp b / linkbubbleproject / linkbubble / src / main / java / com / chrislacy / linkbubble / bubbleview . java <nl> public class bubbleview extends framelayout { <nl> @ override <nl> public void <unk> ( string url ) { <nl> <unk> ( true , 0 ) ; <nl> } ( ) ; <nl> } <nl> @ override <nl> <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> } <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> } <nl> }
====NEW EXAMPLE====
ppp b / owncloud - android library <nl> subproject commit 17bb724b4207142d631a5f1c70d1e80c447e2310 <nl>
ppp b / owncloud - android library <nl> subproject commit e73e4a56d3c12d7a2f856ae65b00789b3e0cecb5 <nl>
ppp b / owncloud - android library <nl> subproject commit = false <nl>
ppp b / owncloud - android library <nl> subproject commit 6ec10b796f076f68ade776b888096dc673d9465b <nl>
ppp b / owncloud - android library <nl> subproject commit bab814d1ae77658cc4b2fc1b33b55727b9b8075f <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> sudo : false <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> sudo : false

ppp b / . travis . yml <nl> sudo : false <nl> # script for build and release via travis to bintray <nl> script : gradle / <unk> . sh <nl> # secure environment ! [ ] ( https : / / / / / / / / <nl> # secure environment variables for release to bintray <nl> env : <nl> global : <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 29036399a3cbf68ac7cf9f6c23389d0bfe56dc53 <nl> mode = push <nl> parent = 8969e46784f8b1fc6853916f45e2c964eef4435e <nl> remote = git @ github . com : liferay / com - liferay - site - navigation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / src / zap . sh <nl> if [ [ $ <unk> = = 1 . 7 * ] ] ; then <nl> # ok <nl>
ppp b / src / zap . sh <nl> if [ [ $ <unk> = = 1 . 7 * ] ] ; then <nl>
ppp b / src / zap . sh <nl> if [ [ $ <unk> = = 1 . 7 * ] ] ; then <nl> # <nl>
ppp b / src / zap . sh <nl> if [ [ $ <unk> = = 1 . 7 * ] ] ; <nl>
ppp b / src / zap . sh <nl>
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace - git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 77e5ed82f43154f452d9533649edd9f448e83e35 <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 77e5ed82f43154f452d9533649edd9f448e83e35 <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 77e5ed82f43154f452d9533649edd9f448e83e35 <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal / portal - profile / bnd . bnd <nl> bundle - name : liferay portal profile <nl> bundle - symbolicname : com . liferay . portal . profile <nl> bundle - version : 1 . 0 . 0 <nl> export - package : com . liferay . portal . profile <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / portal - profile / bnd . bnd <nl> bundle - name : liferay portal profile <nl> bundle - symbolicname : com . liferay . portal . profile <nl> bundle - version : 1 . 0 . 0 <nl> export - package : com . liferay . portal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / portal - profile / bnd . bnd <nl> bundle - name : liferay portal profile <nl> bundle - symbolicname : com . liferay . portal . profile <nl> bundle - version : 1 . 0 . 0 <nl> export - package : com . liferay . portal . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / portal - profile / bnd . bnd <nl> bundle - name : liferay portal profile <nl> bundle - symbolicname : com . liferay . portal . profile <nl> bundle - version : 1 . 0 . 0 <nl> export - package : com . liferay . portal . <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / portal - profile / bnd . bnd <nl> bundle - name : liferay portal profile <nl> bundle - symbolicname : com . liferay . portal . profile <nl> bundle - version : 1 . 0 . 0 <nl> export - package : com . liferay . portal . \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> automata <nl> belarusian <nl> indices <nl> formulae <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> automata <nl> belarusian <nl> indices <nl> formulae <nl> podestplatzierung <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> automata <nl> belarusian <nl> indices <nl> formulae <nl> bic <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> automata <nl> belarusian <nl> indices <nl> formulae <nl> wertzeichenpaper <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> automata <nl> belarusian <nl> indices <nl> formulae <nl> eukaryote <nl>
====NEW EXAMPLE====
ppp b / build . xml <nl> < / <unk> > <nl> < structure name = " jacoco <unk> coverage report " > <nl> < <unk> > <nl> < fileset dir = " $ { build . classes } " > <nl> < include name name = " * * * / * . class " / / > <nl> < / fileset > <nl> < / <unk> > <nl>
ppp b / build . xml <nl> < / <unk> > <nl> < structure name = " jacoco <unk> coverage report " > <nl> < <unk> > <nl>
ppp b / build . xml <nl> < / <unk> > <nl> < structure name = " jacoco <unk> coverage report " > <nl> < <unk> > <nl> < fileset dir = " $ { build . classes } " > <nl> < include name name = " * * * / * . class " / / > <nl> < / fileset > <nl> < / > <nl>
ppp b / build . xml <nl> < / <unk> > <nl> < structure name = " jacoco <unk> coverage report " > <nl>
ppp b / build . xml <nl> < / <unk> > <nl> < structure name = " jacoco <unk> coverage report " > <nl> < <unk> > <nl> < fileset dir = " $ { build . classes } " > <nl> < include name name = " * * * / * . class " / / > <nl> < / fileset > <nl> < / <unk> > > <nl>
====NEW EXAMPLE====
ppp b / jps / src / org / jetbrains / jps / project . groovy <nl> class project { <nl> if ( <unk> ! = null ) { <nl> <unk> ( message ) <nl> } <nl> @ suppresswarnings ( ) <nl> info ( message ) <nl> } <nl> def info ( string message ) { <nl>
ppp b / jps / src / org / jetbrains / jps / project . groovy <nl> class project { <nl>
ppp b / jps / src / org / jetbrains / jps / project . groovy <nl> class project { <nl> if ( <unk> ! = null ) { <nl> <unk> ( message ) <nl> } <nl> @ suppresswarnings ( ) <nl> info ( message ) <nl> } <nl> def info ( string message ) <nl>
ppp b / jps / src / org / jetbrains / jps / project . groovy <nl> class project { <nl> if ( <unk> ! = null ) { <nl> <unk> ( message ) <nl> } <nl> @ suppresswarnings ( ) <nl> info ( message ) <nl> } <nl> def info ( string message ) ) <nl>
ppp b / jps / src / org / jetbrains / jps / project . groovy <nl> class project { <nl> if ( <unk> ! = null ) { <nl> <unk> ( message ) <nl> } <nl> @ suppresswarnings ( ) <nl> info ( message ) <nl> } <nl> def info ( string message ) { { <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl>
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl>
ppp b
====NEW EXAMPLE====
ppp
ppp b / src / cpp / core / system / file_monitor / linuxfilemonitor . cpp <nl> # include " filemonitorimpl . hpp " <nl> / / todo : subprojects ( ) { <nl> / / / / / : investigate parallel package ( multicore ) with file monitor <nl> / / todo : should we be using lstat64 ? <nl>
ppp b / src / cpp / core / system / file_monitor / linuxfilemonitor . cpp <nl> # include " filemonitorimpl . hpp " <nl> / / todo : subprojects ( ) { <nl> / / / / / : investigate parallel package ( multicore ) with file monitor <nl> / / todo : should we be using lstat64 <nl>
ppp b / src / cpp / core / system / file_monitor / linuxfilemonitor . cpp <nl> # include " filemonitorimpl . hpp " <nl> / / todo : subprojects ( ) { <nl> / / / / / : investigate parallel package ( multicore ) with file monitor <nl> / / todo : should we be using lstat64 lstat64 <nl>
ppp b / src / cpp / core / system / file_monitor / linuxfilemonitor . cpp <nl> # include " filemonitorimpl . hpp " <nl> / / todo : subprojects ( ) { <nl> / / / / / : investigate parallel package ( multicore ) with file monitor <nl> / / todo : should we be using lstat64 ? ? <nl>
====NEW EXAMPLE====
ppp b / processing . js <nl> } ; <nl> p . redraw = function redraw ( ) { <nl>
ppp b / processing . js <nl> } ; <nl> p . redraw = function redraw ( ) { <nl> if ( <unk> ) { <nl>
ppp b / processing . js <nl> } ; <nl> p . redraw = function redraw ( ) { <nl> if ( <unk> { <nl>
ppp b / processing . js <nl> } ; <nl>
ppp b / processing . js <nl> } ; <nl> p . redraw = function redraw ( ) { <nl> if ( <unk> ) <nl>
====NEW EXAMPLE====
ppp b / docs / source / manual / hibernate . rst <nl> subclass : <nl> } <nl> @ override <nl> public void bootstrap ( bootstrap < <unk> > bootstrap ) { <nl> bootstrap . <unk> ( <unk> ) ; <nl> } <nl>
ppp b / docs / source / manual / hibernate . rst <nl> subclass : <nl> } <nl> @ override <nl> public void bootstrap ( bootstrap < <unk> > bootstrap ) { <nl> bootstrap . <unk> ( <unk> ) ; <nl>
ppp b / docs / source / manual / hibernate . rst <nl> subclass : <nl> } <nl> @ override <nl> public void bootstrap ( bootstrap < <unk> > bootstrap ) { <nl> bootstrap . <unk> ( <unk> ) ; <nl> } <nl> <nl>
ppp b / docs / source / manual / hibernate . rst <nl> subclass : <nl> } <nl> @ override <nl> public void bootstrap ( bootstrap < <unk> > bootstrap ) { <nl> bootstrap . <unk> ( <unk> ) ; <nl> <nl>
ppp b / docs / source / manual / hibernate . rst <nl> subclass : <nl> } <nl> @ override <nl> public void bootstrap ( bootstrap < <unk> > bootstrap ) { <nl> bootstrap . <unk> ( <unk> ) ; <nl> }
====NEW EXAMPLE====
ppp b / h2o - r / . gitignore <nl>
ppp b / h2o - r / . gitignore
ppp b / h2o - r / . gitignore <nl> results <nl> \ no newline at end of file <nl>
ppp b / h2o - r / . gitignore <nl> results <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / h2o - r / . gitignore <nl> results <nl> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / tools / db - upgrade / readme . txt <nl> 222 modify portal - ext . properties with your custom settings so that the upgrade tool <nl> can connect your database . all liferay / must be turned off when <nl> performing an upgrade . <nl>
ppp b / tools / db - upgrade / readme . txt <nl> 222 modify portal - ext . properties with your custom settings so that the upgrade tool <nl> can connect your database . all liferay / must be turned off when <nl> performing an upgrade <nl>
ppp b / tools / db - upgrade / readme . txt <nl> 222 modify portal - ext . properties with your custom settings so that the upgrade tool <nl> can connect your database . all liferay / must be turned off when <nl> performing an upgrade upgrade <nl>
ppp b / tools / db - upgrade / readme . txt <nl> 222 modify portal - ext . properties with your custom settings so that the upgrade tool <nl> can connect your database . all liferay / must be turned off when <nl>
ppp b / tools / db - upgrade / readme . txt <nl>
====NEW EXAMPLE====
ppp b / subprojects / docs / src / samples / cpp / dependencies / build . gradle <nl> project ( " : lib " ) { <nl>
ppp b / subprojects / docs / src / samples / cpp / dependencies / build . gradle <nl>
ppp b / subprojects / docs / src / samples / cpp / dependencies / build . gradle <nl> project ( " : lib " ) <nl>
ppp b / subprojects / docs / src / samples / cpp / dependencies / build . gradle <nl> project ( " : lib " ) { <nl> / / start snippet use - plugin - lib <nl> apply plugin : " cpp - lib " <nl> / / plugin : cpp - " " <nl> / / end snippet use - plugin - lib <nl>
ppp b / subprojects / docs / src / samples / cpp / dependencies / build . gradle <nl> project ( " : lib " ) { <nl> / / start snippet use - plugin - lib <nl> apply plugin : " cpp - lib " <nl> / / plugin : cpp - " " <nl> / / end snippet use - plugin - <nl>
====NEW EXAMPLE====
ppp b / build . xml <nl> < javac <nl> includeantruntime = " false " <nl> srcdir = " . " <nl> destdir = " $ { classes . dir } " <nl> classpathref = " classpath " <nl> debug = " true " <nl>
ppp b / build . xml <nl> < javac <nl> includeantruntime = " false " <nl> srcdir = " . " <nl> destdir = " $ { classes . dir } " <nl> classpathref = " classpath " <nl> debug = " true <nl>
ppp b / build . xml <nl> < javac <nl> includeantruntime = " false " <nl> srcdir = " . " <nl> destdir = " $ { classes . dir } " <nl> classpathref = " classpath " <nl> debug = " true "
ppp b / build . xml <nl> < javac <nl> includeantruntime = " false " <nl> srcdir = " . " <nl> destdir = " $ { classes . dir } " <nl> classpathref = " classpath " <nl> debug = " true true <nl>
ppp b / build . xml <nl> < javac <nl> includeantruntime = " false " <nl> srcdir = " . " <nl> destdir = " $ { classes . dir } " <nl> classpathref = " classpath " <nl> debug = " true " <nl> <nl>
====NEW EXAMPLE====
ppp b / version . txt <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file
ppp b / version . txt <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> newline at end of file <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / . gitignore <nl> # generated files
ppp b / . gitignore <nl> # generated files <nl>
ppp b / . gitignore <nl> # generated
ppp b / . gitignore <nl> # generated files <nl> bin / <nl> gen / <nl> * updated french translation <nl> docs / / <nl> build . xml <nl>
ppp b
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - flags . . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . android . maps < / groupid > <nl> < artifactid > maps < / artifactid > <nl> < version > <unk> < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . android . maps < / groupid > <nl> < artifactid > maps < / artifactid > <nl> < version > <unk> < / version > <nl> < scope > provided < / scope > <nl> < / > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . android . maps < / groupid > <nl> < artifactid > maps < / artifactid > <nl> < version > <unk> < / version > <nl> < scope > provided < / scope > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . android . maps < / groupid > <nl> < artifactid > maps < / artifactid > <nl> < version > <unk> < / version > <nl> < scope > provided < / scope > <nl> < / dependency > > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . android . maps < / groupid > <nl> < artifactid > maps < / artifactid > <nl> < version > <unk> < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - frontend - theme . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 0 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15051 <nl> versionname = ' 19 - beta2 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 0 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15051 <nl> versionname = ' 19 - beta2 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 0 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15051 <nl> versionname = ' 19 - beta2 ' <nl> } <nl> ext . libraries = = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 0 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15051 <nl> versionname = ' 19 - beta2 ' <nl> } <nl> ext . libraries = [ [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 0 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15051 <nl> versionname = ' 19 - beta2 ' <nl> } <nl> ext . libraries = [
====NEW EXAMPLE====
ppp b / enterprise / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 2 - snapshot 2 - snapshot < / version > <nl> < / dependency > <nl> < / dependencies > <nl>
ppp b / enterprise / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 2 - snapshot 2 - snapshot < / version > <nl> < / dependency > <nl> < / dependencies > > <nl>
ppp b / enterprise / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 2 - snapshot 2 - snapshot < / version > <nl> < / dependency > <nl> < / dependencies > <nl> <nl>
ppp b / enterprise / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl>
ppp b / enterprise / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 2 - snapshot 2 - snapshot < / version > <nl> < / dependency > <nl> < / dependencies >
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 56fe6a4d5afb93752fd8b62b401e410a354b8dd2 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 56fe6a4d5afb93752fd8b62b401e410a354b8dd2 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - frontend - theme . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ad6fbdf9c2e4df5b25f360480d0c02ae44bfd778 <nl> mode = push <nl> parent = 40c90f4c779eee1f47e3d02e9bf64bf0347bf25f <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ad6fbdf9c2e4df5b25f360480d0c02ae44bfd778 <nl> mode = push <nl> parent = 40c90f4c779eee1f47e3d02e9bf64bf0347bf25f <nl> remote = git @ github . com : liferay / com - liferay - message - boards . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / python / src / com / jetbrains / python / inspections / pyunboundlocalvariableinspection . java <nl> public class pyunboundlocalvariableinspection extends localinspectiontool { <nl> } <nl> public boolean isenabledbydefault ( ) { <nl> return false ; <nl> } <nl> @ notnull <nl>
ppp b / python / src / com / jetbrains / python / inspections / pyunboundlocalvariableinspection . java <nl> public class pyunboundlocalvariableinspection extends localinspectiontool { <nl> } <nl> public boolean isenabledbydefault ( ) { <nl> return false ; <nl> } <nl> @ notnull <nl> <nl>
ppp b / python / src / com / jetbrains / python / inspections / pyunboundlocalvariableinspection . java <nl> public class pyunboundlocalvariableinspection extends localinspectiontool { <nl> } <nl> public boolean isenabledbydefault ( ) { <nl> return false ; <nl> } <nl> @ override <nl>
ppp b / python / src / com / jetbrains / python / inspections / pyunboundlocalvariableinspection . java <nl> public class pyunboundlocalvariableinspection extends localinspectiontool { <nl> } <nl> public boolean isenabledbydefault ( ) { <nl> return false ; <nl> } <nl>
ppp b / python / src / com / jetbrains / python / inspections / pyunboundlocalvariableinspection . java <nl> public class pyunboundlocalvariableinspection extends localinspectiontool { <nl> } <nl> public boolean isenabledbydefault ( ) { <nl> return false ; <nl> } <nl> @ <nl>
====NEW EXAMPLE====
ppp b / version . txt <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file
ppp b / version . txt <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / querydsl - root / readme . txt <nl>
ppp b / querydsl - root / readme . txt
ppp b /
ppp b
ppp
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > ru . lanwen . verbalregex < / groupid > <nl> < artifactid > java - verbal - expressions < / artifactid > <nl> < version > 1 4 < / / version > <nl> < packaging > jar < / packaging > <nl>
ppp b / pom . xml <nl> < groupid > ru . lanwen . verbalregex < / groupid > <nl> < artifactid > java - verbal - expressions < / artifactid > <nl> < version > 1 4 < / / version > <nl> < packaging > jar < / > <nl>
ppp b / pom . xml <nl> < groupid > ru . lanwen . verbalregex < / groupid > <nl> < artifactid > java - verbal - expressions < / artifactid > <nl> < version > 1 4 < / / version > <nl> < packaging > jar < / packaging > > <nl>
ppp b / pom . xml <nl> < groupid > ru . lanwen . verbalregex < / groupid > <nl> < artifactid > java - verbal - expressions < / artifactid > <nl> < version > 1 4 < / / version > <nl> < packaging > jar < / packaging >
ppp b / pom . xml <nl> < groupid > ru . lanwen . verbalregex < / groupid > <nl> < artifactid > java - verbal - expressions < / artifactid > <nl> < version > 1 4 < / / version > <nl> < packaging > jar < / packaging > <nl> <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> matrix : <nl> install : true <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> : script : script : traviscibuild - - - - traviscibuild <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> matrix : <nl> install : true <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> : script : script : traviscibuild - - - - - traviscibuild <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> matrix : <nl> install : true <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> : script : script : traviscibuild - - - - - - - <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> matrix : <nl> install : true <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> : script : script : traviscibuild - - - - - - traviscibuild <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 1 ' <nl> versioncode = 220 <nl> versionname = ' 12 - beta5 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 1 ' <nl> versioncode = 220 <nl> versionname = ' 12 - beta5 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 1 ' <nl> versioncode = 220 <nl> versionname = ' 12 - beta5 ' <nl> } <nl> ext . libraries = [
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 1 ' <nl> versioncode = 220 <nl> versionname = ' 12 - beta5 ' <nl> } <nl> ext . libraries = [ [ <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 1 ' <nl> versioncode = 220 <nl> versionname = ' 12 - beta5 ' <nl> } <nl> ext . libraries = [ <nl> <nl>
====NEW EXAMPLE====
ppp b / grails - hibernate / build . gradle <nl>
ppp b / grails - hibernate / build . gradle <nl> dependencies { <nl>
ppp

ppp b / grails - hibernate / build . gradle <nl> dependencies
====NEW EXAMPLE====
ppp b / . travis . yml <nl> before_script : <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> before_script : <nl> android : <nl>
ppp b / . travis . yml <nl> before_script :
ppp b / . travis . yml <nl> before_script
====NEW EXAMPLE====
ppp b / libs / hwui / tests / android . mk <nl> <unk> : = both <nl> <unk> : = <unk> <nl> <unk> : = <unk> <nl>
ppp b / libs / hwui / tests / android . mk <nl> <unk> : = both <nl> <unk> : = <unk> <nl>
ppp b / libs / hwui / tests / android . mk <nl> <unk> : = both <nl> <unk> : = <unk> <nl> <unk> : = <nl>
ppp b / libs / hwui / tests / android . mk <nl> <unk> : = both <nl>
ppp b / libs / hwui / tests / android . mk <nl> <unk> : = <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - announcements . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - announcements - git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - announcements . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / cropper / build . gradle <nl> apply plugin : ' android - library ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 1 . 0 . 0 " <nl> group = " com . edmodo " <nl> android { <nl>
ppp b / cropper / build . gradle <nl> apply plugin : ' android - library ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 1 . 0 . 0 " <nl> group = " com . edmodo " <nl> android { { <nl>
ppp b / cropper / build . gradle <nl> apply plugin : ' android - library ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 1 . 0 . 0 " <nl> group = " com . edmodo " <nl> android { <nl> <nl>
ppp b / cropper / build . gradle <nl> apply plugin : ' android - library ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 1 . 0 . 0 " <nl> group = " com . edmodo " <nl>
ppp b / cropper / build . gradle <nl> apply plugin : ' android - library ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 1 . 0 . 0 " <nl> group = " com . edmodo " <nl> android {
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - message - boards . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / advanced / pom . xml <nl> < groupid > junit < / groupid > <nl> < artifactid > junit < / artifactid > <nl> < version > 3 . 8 . 1 < / version > <nl> < / < / < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl>
ppp b / advanced / pom . xml <nl> < groupid > junit < / groupid > <nl> < artifactid > junit < / artifactid > <nl> < version > 3 . 8 . 1 < / version > <nl> < / < / < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . neo4j < / > <nl>
ppp b / advanced / pom . xml <nl> < groupid > junit < / groupid > <nl>
ppp b / advanced / pom . xml <nl> < groupid > junit < / groupid > <nl> < artifactid > junit < / artifactid > <nl> < version > 3 . 8 . 1 < / version > <nl> < / < / < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > > <nl>
ppp b / advanced / pom . xml <nl>
====NEW EXAMPLE====
ppp b / java / java - impl / src / com / intellij / codeinsight / <unk> . java <nl> public class <unk> extends <unk> <nl> @ override <nl> public void run ( ) { <nl> try { <nl> <unk> . process ( tag ) ; <nl> <unk> ( file ) ; <nl> } <nl> catch ( <unk> e ) { <nl>
ppp b / java / java - impl / src / com / intellij / codeinsight / <unk> . java <nl> public class <unk> extends <unk> <nl> @ override <nl> public void run ( ) { <nl> try { <nl> <unk> . process ( tag ) ; <nl> <unk> ( file ) ; <nl> } <nl> catch ( <unk> e ) ) <nl>
ppp b / java / java - impl / src / com / intellij / codeinsight / <unk> . java <nl> public class <unk> extends <unk> <nl> @ override <nl> public void run ( ) { <nl> try { <nl> <unk> . process ( tag ) ; <nl> <unk> ( file ) ; <nl> } <nl> catch ( <unk> e ) <nl>
ppp b / java / java - impl / src / com / intellij / codeinsight / <unk> . java <nl> public class <unk> extends <unk> <nl> @ override <nl> public void run ( ) { <nl> try { <nl> <unk> . process ( tag ) ; <nl> <unk> ( file ) ; <nl> } <nl> catch ( <unk> e ) { <nl> <nl>
ppp b / java / java - impl / src / com / intellij / codeinsight / <unk> . java <nl> public class <unk> extends <unk> <nl> @ override <nl> public void run ( ) { <nl> try { <nl> <unk> . process ( tag ) ; <nl> <unk> ( file ) ; <nl> } <nl> catch ( <unk> e ) { <nl> { <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> you must also include the following repository : <nl> < repository > <nl> < id > com . jakewharton < / id > <nl> < url > http : / / r . jakewharton . com / maven / release < ? url > <nl> < / repository > <nl>
ppp b / readme . md <nl> you must also include the following repository : <nl> < repository > <nl> < id > com . jakewharton < / id > <nl> < url > http : / / r . jakewharton . com / maven / release < ? url > <nl> < / > <nl>
ppp b / readme . md <nl> you must also include the following repository : <nl> < repository > <nl> < id > com . jakewharton < / id > <nl> < url > http : / / r . jakewharton . com / maven / release < ? url > <nl> < / repository > > <nl>
ppp b / readme . md <nl> you must also include the following repository : <nl> < repository > <nl> < id > com . jakewharton < / id > <nl> < url > http : / / r . jakewharton . com / maven / release < ? url > <nl>
ppp b / readme . md <nl> you must also include the following repository : <nl> < repository > <nl> < id > com . jakewharton < / id > <nl> < url > http : / / r . jakewharton . com / maven / release < ? url > <nl> < / repository > <nl> <nl>
====NEW EXAMPLE====
ppp b / dependencies / common / install - packages <nl>
ppp b / dependencies / common / install - packages <nl> mv
ppp b / dependencies / common / install - packages
ppp b / dependencies / common / install - packages <nl> mv $ <unk> $ <unk> <nl> install rsconnect master <nl> # back to take photos directly <nl> * updated lithuanian translation <nl> # back to install - dir <nl> cd $ install_dir <nl>
ppp b / dependencies / common / install - packages <nl> mv $ <unk> $ <unk> <nl> install rsconnect master <nl> # back to take photos directly <nl> * updated lithuanian translation <nl> # back to install - dir <nl> cd $ $ <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ad1db84da8f96f760ded4f6826072c81a977c51d <nl> mode = push <nl> parent = 27712e1c95ad0979d597b6e340f5b994087f6c24 <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ad1db84da8f96f760ded4f6826072c81a977c51d <nl> mode = push <nl> parent = 27712e1c95ad0979d597b6e340f5b994087f6c24 <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ad1db84da8f96f760ded4f6826072c81a977c51d <nl> mode = push <nl> parent = 27712e1c95ad0979d597b6e340f5b994087f6c24 <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file
====NEW EXAMPLE====
ppp b / app / build . gradle <nl> android { <nl> dependencies { <nl> compile project ( ' : library ' ) <nl> compile ( ' com . mikepenz : aboutlibraries : 5 . 0 . 0 @ aar ' ) { <nl> transitive = true <nl> } <nl> } <nl>
ppp b / app / build . gradle <nl> android { <nl> dependencies { <nl> compile project ( ' : library ' ) <nl> compile ( ' com . mikepenz : aboutlibraries : 5 . 0 . 0 @ aar ' ) { <nl> transitive = true <nl> } <nl> } <nl> <nl>
ppp b / app / build . gradle <nl> android { <nl> dependencies { <nl> compile project ( ' : library ' ) <nl> compile ( ' com . mikepenz : aboutlibraries : 5 . 0 . 0 @ aar ' ) { <nl> transitive = true <nl> } <nl>
ppp b / app / build . gradle <nl> android { <nl> dependencies { <nl> compile project ( ' : library ' ) <nl> compile ( ' com . mikepenz : aboutlibraries : 5 . 0 . 0 @ aar ' ) { <nl> transitive = true <nl> } <nl> <nl>
ppp b / app / build . gradle <nl> android { <nl> dependencies { <nl> compile project ( ' : library ' ) <nl> compile ( ' com . mikepenz : aboutlibraries : 5 . 0 . 0 @ aar ' ) { <nl> transitive = true <nl> } <nl> }
====NEW EXAMPLE====
ppp b / src / main / groovy / lang / groovyclassloader . java <nl> public class groovyclassloader extends urlclassloader { <nl> else { <nl> lastmod = source . openconnection ( ) . getlastmodified ( ) ; <nl> } <nl> return lastmod > sv_indices = null ; <nl> ) ; <nl> } <nl> return lastmod > gettimestamp ( cls ) ; <nl> } <nl>
ppp b / src / main / groovy / lang / groovyclassloader . java <nl>
ppp b / src / main / groovy / lang / groovyclassloader . java <nl> public class groovyclassloader extends urlclassloader { <nl> else { <nl> lastmod = source . openconnection ( ) . getlastmodified ( ) ; <nl> } <nl> return lastmod > sv_indices = null ; <nl> ) ; <nl> } <nl> return lastmod > gettimestamp ( cls ) ; <nl> } <nl> <nl>
ppp b / src / main / groovy / lang / groovyclassloader . java <nl> public class groovyclassloader extends urlclassloader { <nl> else { <nl> lastmod = source . openconnection ( ) . getlastmodified ( ) ; <nl> } <nl> return lastmod > sv_indices = null ; <nl> ) ; <nl> } <nl> return lastmod > gettimestamp ( cls ) ; <nl>
ppp b / src / main / groovy / lang / groovyclassloader . java <nl> public class groovyclassloader extends urlclassloader { <nl> else { <nl> lastmod = source . openconnection ( ) . getlastmodified ( ) ; <nl> } <nl> return lastmod > sv_indices = null ; <nl> ) ; <nl> } <nl> return lastmod > gettimestamp ( cls ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / hello - soy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / hello - soy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b39ed5bd7734744df8a7475533f6f8ba09209f9d <nl> mode = push <nl> parent = 68533c8a886ec55e5dd93ac0bd9ad3e981c463a0 <nl> remote = git @ github . com : liferay / com - liferay - hello - soy . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / hello - soy / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / hello - soy / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / hello - soy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b39ed5bd7734744df8a7475533f6f8ba09209f9d <nl> mode = push <nl> parent = 68533c8a886ec55e5dd93ac0bd9ad3e981c463a0 <nl> remote = git @ github . com : liferay / com - liferay - hello - soy git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / media / libmedia / audiosystem . cpp <nl> <unk> audiosystem : : <unk> ( <unk> d <nl>
ppp b / media / libmedia / audiosystem . cpp <nl>

ppp b / media / libmedia / audiosystem . cpp <nl> <unk> audiosystem : : <unk> ( <unk> d <nl> status_t audiosystem : : <unk> ( <unk> state ) <nl> { <nl> const sp < <unk> > & <unk> = audiosystem ( ) ; <nl> < / < <unk> > & <unk> = audiosystem : : <unk> ( ) ; <nl> if ( <unk> = = 0 ) return <unk> ; <nl>
ppp b / media / libmedia / audiosystem . cpp <nl> <unk> audiosystem : : <unk> ( <unk> d <nl> status_t audiosystem : : <unk> ( <unk> state ) <nl> { <nl> const sp < <unk> > & <unk> = audiosystem ( ) ; <nl> < / < <unk> > & <unk> = audiosystem : : <unk> ( ) ; <nl> if ( <unk> = = 0 ) return <unk> <unk> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = 9cbdccc00094e040e315b1c4df6f19a6fdb42f21 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = 9cbdccc00094e040e315b1c4df6f19a6fdb42f21 <nl> remote = git @ github . com : liferay / com - liferay - calendar . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - css . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - css git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a28f8975f679d33c61abbb99d6ef6a2161c6da4c <nl> mode = push <nl> parent = d86ed24714d3ba87c3655b6d3c16a80f68444370 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a28f8975f679d33c61abbb99d6ef6a2161c6da4c <nl> mode = push <nl> parent = d86ed24714d3ba87c3655b6d3c16a80f68444370 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a28f8975f679d33c61abbb99d6ef6a2161c6da4c <nl> mode = push <nl> parent = d86ed24714d3ba87c3655b6d3c16a80f68444370 <nl> remote = git @ github . com : liferay / com - liferay - journal . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / rajawali / renderer / rajawalirenderer . java <nl> public class rajawalirenderer implements glsurfaceview . renderer , inode { <nl>
ppp b / src / rajawali / renderer / rajawalirenderer . java <nl>
ppp b / src / rajawali / renderer / rajawalirenderer . java <nl> public class rajawalirenderer implements glsurfaceview . renderer , inode { <nl> public static boolean <unk> = false ; <nl> private boolean msceneinitialized ; <nl> / * * <nl> * scene caching stores all and relevant opengl - specific specific <nl>

ppp b / src / rajawali / renderer / rajawalirenderer . java <nl> public class rajawalirenderer implements glsurfaceview . renderer , inode { <nl> public static boolean <unk> = false ; <nl> private boolean msceneinitialized ; <nl> / * * <nl> * scene caching stores all and relevant opengl - specific specific <nl> data data . is is when when opengl context needs to be restored . <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> 0
ppp b / trunk / jlanguagetool / changes . txt <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> 0 . 9 . 9 ( 2009 - yy - <unk> ) <nl> \ no newline at end of downloading wikipedia dataset ( ) { <nl> - - - - - ) <nl> - . . <nl> 0 . 9 . 8 ( 2009 - 04 - 25 ) <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> 0 . 9 . 9 ( 2009 - yy - <unk> ) <nl> \ no newline at end of downloading wikipedia dataset ( ) { <nl> - - - - - ) <nl> - . . <nl> 0 . 9 . 8 ( 2009 - 04 - ) <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> 0 . 9 . 9 ( 2009 - yy - <unk> ) <nl> \ no newline at end of downloading wikipedia dataset ( ) { <nl> - - - - - ) <nl> - . . <nl> 0 . 9 . 8 ( 2009 - 04 - 25 <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> # <unk> <nl> an indicator like <unk> routine guide . <nl>
ppp b / readme . md <nl> # <unk> <nl>
ppp b / readme . md <nl>
ppp

====NEW EXAMPLE====
ppp b / python / helpers / <unk> <nl> thread 1 . 102 <nl> <unk> 1 . 102 <nl> <unk> 1 . 103 <nl> datetime 1 . 124 <nl> <unk> . <unk> . 1 . 1 . 1 . <nl> <unk> . <unk> 1 . <unk> <nl>
ppp b / python / helpers / <unk> <nl> thread 1 . 102 <nl> <unk> 1 . 102 <nl> <unk> 1 . 103 <nl> datetime 1 . 124 <nl> <unk> . <unk> . 1 . 1 . 1 . <nl> <unk> . <unk> 1 . <unk> <unk> <nl>
ppp b / python / helpers / <unk> <nl> thread 1 . 102 <nl> <unk> 1 . 102 <nl> <unk> 1 . 103 <nl> datetime 1 . 124 <nl> <unk> . <unk> . 1 . 1 . 1 . <nl> <unk> . <unk> 1 . . <nl>
ppp b / python / helpers / <unk> <nl> thread 1 . 102 <nl> <unk> 1
ppp b / python / helpers / <unk> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> dependency - reduced - pom . xml <nl> * . iws <nl> . vagrant /
ppp b / . gitignore <nl> dependency - reduced - pom . xml <nl> * . iws <nl> . vagrant
ppp b / . gitignore <nl> dependency - reduced - pom . xml <nl> * . iws <nl> . vagrant / <nl>
ppp b / . gitignore <nl> dependency - reduced -
ppp b / . gitignore <nl> dependency - reduced
====NEW EXAMPLE====
ppp b / git - - portal - ee <nl> <unk> <unk> <nl>
ppp b / git - - portal - ee <nl> <unk> <nl>
ppp b / git - - portal - ee <nl> <unk> <unk> <nl> <nl>
ppp b / git - - portal - ee <nl>
ppp b / git - - portal - ee <nl> <unk> <unk> <nl> <nl> <nl>
====NEW EXAMPLE====
ppp b / java / java - impl / src / com / intellij / codeinsight / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public boolean <unk> ( @ nullable language language ) { <nl>
ppp b / java / java - impl / src / com / intellij / codeinsight / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public boolean <unk> ( @ nullable language language ) { { <nl>
ppp b / java / java - impl / src / com / intellij / codeinsight / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public boolean <unk> ( @ nullable language language ) { <nl> return language ! = null ; <nl>
ppp b / java / java - impl / src / com / intellij / codeinsight / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public boolean <unk> ( @ nullable language language ) { <nl> return language ! null ; <nl> } <nl>
ppp b / java / java - impl / src / com / intellij / codeinsight / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> @ override <nl> public boolean <unk> ( @ nullable language language ) { <nl> return language ! = null ; <nl> } <nl>