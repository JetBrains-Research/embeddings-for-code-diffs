
====STARTING TRAINING====
{'ADDITION_TOKEN': 'добавление',
 'ADD_REVERSE_EXAMPLES_FOR_TRAIN_RATIO': 0.0,
 'BATCH_SIZE': 64,
 'BEAM_SIZE': 50,
 'DATASET_ROOT': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/50_100',
 'DECODER_HIDDEN_SIZE': 256,
 'DEFECTS4J_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/Defects4J',
 'DELETION_TOKEN': 'удаление',
 'DEVICE': device(type='cuda', index=0),
 'DIVERSITY_STRENGTH': None,
 'DROPOUT': 0.2,
 'EARLY_STOPPING_ROUNDS': 25,
 'EDIT_REPRESENTATION_SIZE': 1,
 'ENCODER_HIDDEN_SIZE': 128,
 'EOS_TOKEN': '</s>',
 'IS_TEST': False,
 'LEARNING_RATE': 0.0001,
 'LEAVE_ONLY_CHANGED': True,
 'LOSS_FUNCTION_PARAMS': {'bug_fixing_loss_period': 0.0,
                          'default_loss_period': 1.0,
                          'measure': 'batches'},
 'LOWER': False,
 'MAKE_CUDA_REPRODUCIBLE': False,
 'MAX_NUM_OF_EPOCHS': 1000,
 'NUM_GROUPS': 1,
 'NUM_LAYERS': 2,
 'OUTPUT_PATH': '../../../embeddings-for-code-diffs-data/experiment_133_2_3/',
 'PADDING_TOKEN': 'паддинг',
 'PAD_TOKEN': '<pad>',
 'PRINT_EVERY_iTH_BATCH': 5,
 'REPLACEMENT_TOKEN': 'замена',
 'SAVE_MODEL_EVERY': 5,
 'SEED': 9382,
 'SOS_TOKEN': '<s>',
 'TEACHER_FORCING_RATIO': 0.9,
 'TEST_BATCH_SIZE': 64,
 'TOKENS_CODE_CHUNK_MAX_LEN': 100,
 'TOKEN_MIN_FREQ': 1,
 'TOP_K': [1, 3, 5, 10, 50],
 'TSNE_BATCH_SIZE': 1024,
 'TUFANO_BUG_FIXES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_50',
 'TUFANO_BUG_FIXES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/50_100',
 'TUFANO_CODE_CHANGES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/0_50',
 'TUFANO_CODE_CHANGES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/50_100',
 'TUFANO_LABELED_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/0_50',
 'TUFANO_LABELED_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/50_100',
 'UNCHANGED_TOKEN': 'равенство',
 'UNK_TOKEN': '<unk>',
 'UPDATE_TRAIN_VECTORS_EVERY_iTH_EPOCH': 1000,
 'USE_BRIDGE': True,
 'USE_EDIT_REPRESENTATION': False,
 'VAL_BATCH_SIZE': 64,
 'VERBOSE': True,
 'WORD_EMBEDDING_SIZE': 128}
Data set sizes (number of sentence pairs):
train 52364
valid 6546
test 6545 

First training example:
src: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
trg: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = null ; if ( date != null ) { VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; } VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
diff_alignment: добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг
diff_updated: null ; if ( date != null ) { VAR_2 = } 

Most common words:
         (    1161894
         )    1161834
         ;     560486
         .     507926
   паддинг     402443
     VAR_1     294376
         }     265934
         {     265752
         ,     245004
  удаление     239732 

First 10 words:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 .
08 паддинг
09 VAR_1 

Special words frequency and ids: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 58185 33
удаление 239732 13
добавление 162711 17
равенство 0 0
паддинг 402443 8
Number of words (types): 497
Epoch 0 / 1000
Epoch Step: 5 / 819 Loss: 369.4435119628906 Tokens per Sec: 22143.82141263284
Epoch Step: 10 / 819 Loss: 537.6574096679688 Tokens per Sec: 27932.606392199323
Epoch Step: 15 / 819 Loss: 364.94940185546875 Tokens per Sec: 25416.139051320475
Epoch Step: 20 / 819 Loss: 328.3783874511719 Tokens per Sec: 25685.54820846236
Epoch Step: 25 / 819 Loss: 422.7167053222656 Tokens per Sec: 25593.70674458583
Epoch Step: 30 / 819 Loss: 370.4354553222656 Tokens per Sec: 24627.387479836412
Epoch Step: 35 / 819 Loss: 251.62673950195312 Tokens per Sec: 27393.050892947496
Epoch Step: 40 / 819 Loss: 389.382568359375 Tokens per Sec: 28077.54761742915
Epoch Step: 45 / 819 Loss: 243.5458221435547 Tokens per Sec: 26831.350904247192
Epoch Step: 50 / 819 Loss: 229.4738311767578 Tokens per Sec: 25837.166266266748
Epoch Step: 55 / 819 Loss: 353.3526306152344 Tokens per Sec: 28099.274290454377
Epoch Step: 60 / 819 Loss: 284.85760498046875 Tokens per Sec: 28308.266426760245
Epoch Step: 65 / 819 Loss: 206.79232788085938 Tokens per Sec: 27505.374800305097
Epoch Step: 70 / 819 Loss: 279.05023193359375 Tokens per Sec: 25794.547748608235
Epoch Step: 75 / 819 Loss: 279.51348876953125 Tokens per Sec: 28405.808273820367
Epoch Step: 80 / 819 Loss: 239.6687774658203 Tokens per Sec: 25631.397291093443
Epoch Step: 85 / 819 Loss: 281.6493835449219 Tokens per Sec: 26743.275736931933
Epoch Step: 90 / 819 Loss: 382.72833251953125 Tokens per Sec: 27209.21005435712
Epoch Step: 95 / 819 Loss: 230.3485565185547 Tokens per Sec: 30061.74200477702
Epoch Step: 100 / 819 Loss: 241.38755798339844 Tokens per Sec: 26834.276915600345
Epoch Step: 105 / 819 Loss: 186.73629760742188 Tokens per Sec: 25768.82813918347
Epoch Step: 110 / 819 Loss: 211.50286865234375 Tokens per Sec: 27814.911346312612
Epoch Step: 115 / 819 Loss: 236.67648315429688 Tokens per Sec: 26996.88590785746
Epoch Step: 120 / 819 Loss: 270.3445739746094 Tokens per Sec: 25737.27317692994
Epoch Step: 125 / 819 Loss: 281.5334777832031 Tokens per Sec: 27188.51572391827
Epoch Step: 130 / 819 Loss: 182.81820678710938 Tokens per Sec: 25557.18742769343
Epoch Step: 135 / 819 Loss: 290.0987548828125 Tokens per Sec: 25198.025346345414
Epoch Step: 140 / 819 Loss: 173.8358917236328 Tokens per Sec: 27404.821261233414
Epoch Step: 145 / 819 Loss: 268.3282470703125 Tokens per Sec: 28029.51093150736
Epoch Step: 150 / 819 Loss: 246.1549072265625 Tokens per Sec: 26700.946520104415
Epoch Step: 155 / 819 Loss: 264.31640625 Tokens per Sec: 26273.603864666315
Epoch Step: 160 / 819 Loss: 178.084228515625 Tokens per Sec: 25185.513351912236
Epoch Step: 165 / 819 Loss: 286.3154296875 Tokens per Sec: 27442.62323888635
Epoch Step: 170 / 819 Loss: 187.76370239257812 Tokens per Sec: 27082.83928331567
Epoch Step: 175 / 819 Loss: 283.0809631347656 Tokens per Sec: 26879.184512644973
Epoch Step: 180 / 819 Loss: 243.2406768798828 Tokens per Sec: 28413.37444323214
Epoch Step: 185 / 819 Loss: 268.9911804199219 Tokens per Sec: 24244.88756618933
Epoch Step: 190 / 819 Loss: 231.81085205078125 Tokens per Sec: 27337.409393004156
Epoch Step: 195 / 819 Loss: 255.72439575195312 Tokens per Sec: 28251.651704402288
Epoch Step: 200 / 819 Loss: 275.92230224609375 Tokens per Sec: 26313.120304426073
Epoch Step: 205 / 819 Loss: 188.74212646484375 Tokens per Sec: 25898.523433651295
Epoch Step: 210 / 819 Loss: 224.07379150390625 Tokens per Sec: 25140.537869626365
Epoch Step: 215 / 819 Loss: 162.8860321044922 Tokens per Sec: 25630.658220695976
Epoch Step: 220 / 819 Loss: 326.11810302734375 Tokens per Sec: 25553.32469595565
Epoch Step: 225 / 819 Loss: 216.18930053710938 Tokens per Sec: 25857.80412854785
Epoch Step: 230 / 819 Loss: 181.68894958496094 Tokens per Sec: 28249.215183263485
Epoch Step: 235 / 819 Loss: 183.3488311767578 Tokens per Sec: 28073.72530896046
Epoch Step: 240 / 819 Loss: 226.60931396484375 Tokens per Sec: 27138.3655532997
Epoch Step: 245 / 819 Loss: 161.13478088378906 Tokens per Sec: 24537.65500118444
Epoch Step: 250 / 819 Loss: 191.61875915527344 Tokens per Sec: 28554.455946252077
Epoch Step: 255 / 819 Loss: 263.4356384277344 Tokens per Sec: 29179.9550243644
Epoch Step: 260 / 819 Loss: 180.44822692871094 Tokens per Sec: 23150.449501175568
Epoch Step: 265 / 819 Loss: 401.8251037597656 Tokens per Sec: 27073.094854757077
Epoch Step: 270 / 819 Loss: 269.3697204589844 Tokens per Sec: 28045.948641195013
Epoch Step: 275 / 819 Loss: 181.10623168945312 Tokens per Sec: 27900.480968493797
Epoch Step: 280 / 819 Loss: 214.97377014160156 Tokens per Sec: 26950.182110046917
Epoch Step: 285 / 819 Loss: 206.95330810546875 Tokens per Sec: 28578.884753199094
Epoch Step: 290 / 819 Loss: 223.24539184570312 Tokens per Sec: 28200.387631015525
Epoch Step: 295 / 819 Loss: 348.32708740234375 Tokens per Sec: 26155.717649258575
Epoch Step: 300 / 819 Loss: 343.60638427734375 Tokens per Sec: 26448.762232167155
Epoch Step: 305 / 819 Loss: 261.2262268066406 Tokens per Sec: 26927.954438693167
Epoch Step: 310 / 819 Loss: 207.5431671142578 Tokens per Sec: 26706.194477955
Epoch Step: 315 / 819 Loss: 289.08935546875 Tokens per Sec: 25863.389518474443
Epoch Step: 320 / 819 Loss: 206.8382110595703 Tokens per Sec: 27657.13655094808
Epoch Step: 325 / 819 Loss: 225.3632354736328 Tokens per Sec: 28353.655816556213
Epoch Step: 330 / 819 Loss: 142.74929809570312 Tokens per Sec: 28638.385903943414
Epoch Step: 335 / 819 Loss: 239.51856994628906 Tokens per Sec: 24904.732299623243
Epoch Step: 340 / 819 Loss: 240.4995574951172 Tokens per Sec: 26978.31901610872
Epoch Step: 345 / 819 Loss: 220.52040100097656 Tokens per Sec: 27217.055662422383
Epoch Step: 350 / 819 Loss: 161.36276245117188 Tokens per Sec: 26889.63168739665
Epoch Step: 355 / 819 Loss: 314.48626708984375 Tokens per Sec: 27434.699113006962
Epoch Step: 360 / 819 Loss: 141.28001403808594 Tokens per Sec: 24828.00719035526
Epoch Step: 365 / 819 Loss: 183.97129821777344 Tokens per Sec: 26537.3707581915
Epoch Step: 370 / 819 Loss: 209.273681640625 Tokens per Sec: 27457.914843444087
Epoch Step: 375 / 819 Loss: 147.145263671875 Tokens per Sec: 26361.040570612626
Epoch Step: 380 / 819 Loss: 300.5258483886719 Tokens per Sec: 26341.765437396276
Epoch Step: 385 / 819 Loss: 186.5596923828125 Tokens per Sec: 25545.159570708274
Epoch Step: 390 / 819 Loss: 186.5978240966797 Tokens per Sec: 26175.33843093844
Epoch Step: 395 / 819 Loss: 157.83982849121094 Tokens per Sec: 24816.36979156592
Epoch Step: 400 / 819 Loss: 190.79364013671875 Tokens per Sec: 26233.126091082715
Epoch Step: 405 / 819 Loss: 229.9195556640625 Tokens per Sec: 26465.53120847755
Epoch Step: 410 / 819 Loss: 194.5371551513672 Tokens per Sec: 24576.258290826212
Epoch Step: 415 / 819 Loss: 135.6480712890625 Tokens per Sec: 26738.256382255007
Epoch Step: 420 / 819 Loss: 174.9320068359375 Tokens per Sec: 29186.036400424306
Epoch Step: 425 / 819 Loss: 180.60568237304688 Tokens per Sec: 26299.79099225027
Epoch Step: 430 / 819 Loss: 273.8437194824219 Tokens per Sec: 24540.370504819533
Epoch Step: 435 / 819 Loss: 207.53622436523438 Tokens per Sec: 28159.90452222521
Epoch Step: 440 / 819 Loss: 300.3435974121094 Tokens per Sec: 28159.456875614847
Epoch Step: 445 / 819 Loss: 188.7610626220703 Tokens per Sec: 25794.389455248536
Epoch Step: 450 / 819 Loss: 209.90859985351562 Tokens per Sec: 28157.4682008278
Epoch Step: 455 / 819 Loss: 208.4591522216797 Tokens per Sec: 26689.18641298614
Epoch Step: 460 / 819 Loss: 132.3165740966797 Tokens per Sec: 24379.292758268504
Epoch Step: 465 / 819 Loss: 171.5970001220703 Tokens per Sec: 28282.833389646603
Epoch Step: 470 / 819 Loss: 233.21731567382812 Tokens per Sec: 26356.598560553342
Epoch Step: 475 / 819 Loss: 156.4457244873047 Tokens per Sec: 28236.27523026128
Epoch Step: 480 / 819 Loss: 213.06759643554688 Tokens per Sec: 26864.86046043819
Epoch Step: 485 / 819 Loss: 207.468505859375 Tokens per Sec: 27399.188257861188
Epoch Step: 490 / 819 Loss: 149.15505981445312 Tokens per Sec: 26073.04884958098
Epoch Step: 495 / 819 Loss: 198.88372802734375 Tokens per Sec: 27307.30646332956
Epoch Step: 500 / 819 Loss: 135.56707763671875 Tokens per Sec: 25496.276663390214
Epoch Step: 505 / 819 Loss: 224.2244110107422 Tokens per Sec: 26881.12578778569
Epoch Step: 510 / 819 Loss: 161.2289581298828 Tokens per Sec: 25055.53291341727
Epoch Step: 515 / 819 Loss: 196.56021118164062 Tokens per Sec: 27428.28164487266
Epoch Step: 520 / 819 Loss: 174.50921630859375 Tokens per Sec: 26545.88636042039
Epoch Step: 525 / 819 Loss: 137.78843688964844 Tokens per Sec: 24711.883231428106
Epoch Step: 530 / 819 Loss: 207.95602416992188 Tokens per Sec: 28087.187233869616
Epoch Step: 535 / 819 Loss: 220.25392150878906 Tokens per Sec: 26754.242850571933
Epoch Step: 540 / 819 Loss: 206.1862335205078 Tokens per Sec: 28727.74150847734
Epoch Step: 545 / 819 Loss: 138.47244262695312 Tokens per Sec: 29595.717304471367
Epoch Step: 550 / 819 Loss: 132.78970336914062 Tokens per Sec: 24649.823730985263
Epoch Step: 555 / 819 Loss: 158.5359649658203 Tokens per Sec: 27529.834747485267
Epoch Step: 560 / 819 Loss: 176.86181640625 Tokens per Sec: 26399.16415127126
Epoch Step: 565 / 819 Loss: 142.8670196533203 Tokens per Sec: 27064.945580350104
Epoch Step: 570 / 819 Loss: 289.4808349609375 Tokens per Sec: 24423.197384939544
Epoch Step: 575 / 819 Loss: 202.3202667236328 Tokens per Sec: 27209.5649049821
Epoch Step: 580 / 819 Loss: 211.56671142578125 Tokens per Sec: 24756.255072529086
Epoch Step: 585 / 819 Loss: 145.56910705566406 Tokens per Sec: 28925.73129748418
Epoch Step: 590 / 819 Loss: 167.70127868652344 Tokens per Sec: 27724.291563789102
Epoch Step: 595 / 819 Loss: 195.38983154296875 Tokens per Sec: 28107.752809472022
Epoch Step: 600 / 819 Loss: 199.78335571289062 Tokens per Sec: 26229.182109696343
Epoch Step: 605 / 819 Loss: 187.36392211914062 Tokens per Sec: 26585.713820333756
Epoch Step: 610 / 819 Loss: 180.74961853027344 Tokens per Sec: 27733.500753236076
Epoch Step: 615 / 819 Loss: 129.71649169921875 Tokens per Sec: 27131.413038137867
Epoch Step: 620 / 819 Loss: 173.5373992919922 Tokens per Sec: 26828.464071872724
Epoch Step: 625 / 819 Loss: 172.43624877929688 Tokens per Sec: 27939.598718367255
Epoch Step: 630 / 819 Loss: 145.3115997314453 Tokens per Sec: 27509.676952749174
Epoch Step: 635 / 819 Loss: 143.4502716064453 Tokens per Sec: 27444.606376489246
Epoch Step: 640 / 819 Loss: 143.85813903808594 Tokens per Sec: 27400.854659006483
Epoch Step: 645 / 819 Loss: 382.517822265625 Tokens per Sec: 27094.0923056333
Epoch Step: 650 / 819 Loss: 217.9906005859375 Tokens per Sec: 28523.61591259689
Epoch Step: 655 / 819 Loss: 163.5739288330078 Tokens per Sec: 26733.51668123593
Epoch Step: 660 / 819 Loss: 219.93930053710938 Tokens per Sec: 27417.21214346801
Epoch Step: 665 / 819 Loss: 196.15228271484375 Tokens per Sec: 27094.23363085229
Epoch Step: 670 / 819 Loss: 168.32284545898438 Tokens per Sec: 27561.598248264687
Epoch Step: 675 / 819 Loss: 130.7191162109375 Tokens per Sec: 26466.293823958436
Epoch Step: 680 / 819 Loss: 197.5672607421875 Tokens per Sec: 27318.813324331946
Epoch Step: 685 / 819 Loss: 152.4952850341797 Tokens per Sec: 25395.34329574365
Epoch Step: 690 / 819 Loss: 335.6668395996094 Tokens per Sec: 24546.501745300768
Epoch Step: 695 / 819 Loss: 127.79291534423828 Tokens per Sec: 24645.630093156924
Epoch Step: 700 / 819 Loss: 158.10784912109375 Tokens per Sec: 28144.630896349754
Epoch Step: 705 / 819 Loss: 386.25567626953125 Tokens per Sec: 26997.471758422864
Epoch Step: 710 / 819 Loss: 131.20745849609375 Tokens per Sec: 24049.07747958804
Epoch Step: 715 / 819 Loss: 188.00657653808594 Tokens per Sec: 29414.144066648216
Epoch Step: 720 / 819 Loss: 187.5107421875 Tokens per Sec: 27341.871280909203
Epoch Step: 725 / 819 Loss: 134.1780242919922 Tokens per Sec: 26705.37937444811
Epoch Step: 730 / 819 Loss: 132.2562255859375 Tokens per Sec: 25797.425916313485
Epoch Step: 735 / 819 Loss: 123.84521484375 Tokens per Sec: 28378.41197522293
Epoch Step: 740 / 819 Loss: 166.91627502441406 Tokens per Sec: 25729.456552759726
Epoch Step: 745 / 819 Loss: 140.23353576660156 Tokens per Sec: 28228.218373665455
Epoch Step: 750 / 819 Loss: 179.88157653808594 Tokens per Sec: 28745.66172946899
Epoch Step: 755 / 819 Loss: 328.91009521484375 Tokens per Sec: 25957.713211456514
Epoch Step: 760 / 819 Loss: 110.15164947509766 Tokens per Sec: 25866.902880153037
Epoch Step: 765 / 819 Loss: 151.41371154785156 Tokens per Sec: 26506.95982153749
Epoch Step: 770 / 819 Loss: 145.2637939453125 Tokens per Sec: 25861.794898118707
Epoch Step: 775 / 819 Loss: 237.37783813476562 Tokens per Sec: 27582.68645196257
Epoch Step: 780 / 819 Loss: 129.0849151611328 Tokens per Sec: 25608.656362286594
Epoch Step: 785 / 819 Loss: 174.12942504882812 Tokens per Sec: 25874.406841438744
Epoch Step: 790 / 819 Loss: 200.70240783691406 Tokens per Sec: 27520.62910771054
Epoch Step: 795 / 819 Loss: 171.92909240722656 Tokens per Sec: 26201.21598010468
Epoch Step: 800 / 819 Loss: 166.74520874023438 Tokens per Sec: 26953.77763440739
Epoch Step: 805 / 819 Loss: 108.85919952392578 Tokens per Sec: 19966.956746317544
Epoch Step: 810 / 819 Loss: 138.2715606689453 Tokens per Sec: 24949.03937955754
Epoch Step: 815 / 819 Loss: 172.10755920410156 Tokens per Sec: 25069.821362977535
Epoch ended with duration 0:02:25.681104
Train perplexity: 17.466567470867375
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) ) ) { if ( ( ( ( ( ( ( ( ( ( ( ( ( ) ) ) ) ) . METHOD_3 ( ( ) ) ) ) . METHOD_3 ( ( ) ) ) . METHOD_3 ( ( ) ) ) . METHOD_4 ( ) ) ; }[0m
Epoch ended with duration 0:00:06.137241
Validation perplexity: 9.408230207595267
Model saved best_on_validation!
Model saved checkpoint!
Epoch 1 / 1000
Epoch Step: 5 / 819 Loss: 141.33082580566406 Tokens per Sec: 25334.01778002224
Epoch Step: 10 / 819 Loss: 177.9108123779297 Tokens per Sec: 26405.916715088333
Epoch Step: 15 / 819 Loss: 317.7053527832031 Tokens per Sec: 24531.646534556898
Epoch Step: 20 / 819 Loss: 122.76387786865234 Tokens per Sec: 26180.285386962667
Epoch Step: 25 / 819 Loss: 155.45675659179688 Tokens per Sec: 24511.76258709816
Epoch Step: 30 / 819 Loss: 113.12986755371094 Tokens per Sec: 24982.01233086672
Epoch Step: 35 / 819 Loss: 131.4026336669922 Tokens per Sec: 26219.423398227704
Epoch Step: 40 / 819 Loss: 145.54400634765625 Tokens per Sec: 28557.491248949016
Epoch Step: 45 / 819 Loss: 124.05601501464844 Tokens per Sec: 26361.55677824045
Epoch Step: 50 / 819 Loss: 159.77662658691406 Tokens per Sec: 27431.77013281496
Epoch Step: 55 / 819 Loss: 125.32611083984375 Tokens per Sec: 29221.402129524537
Epoch Step: 60 / 819 Loss: 142.72201538085938 Tokens per Sec: 26451.359678436762
Epoch Step: 65 / 819 Loss: 185.03419494628906 Tokens per Sec: 27277.66215104212
Epoch Step: 70 / 819 Loss: 128.34144592285156 Tokens per Sec: 26005.463380581048
Epoch Step: 75 / 819 Loss: 142.55123901367188 Tokens per Sec: 28418.708724026426
Epoch Step: 80 / 819 Loss: 114.10296630859375 Tokens per Sec: 25828.514929579764
Epoch Step: 85 / 819 Loss: 324.9256591796875 Tokens per Sec: 27333.92015328832
Epoch Step: 90 / 819 Loss: 197.48184204101562 Tokens per Sec: 28787.618867496843
Epoch Step: 95 / 819 Loss: 180.9158477783203 Tokens per Sec: 25204.89622139436
Epoch Step: 100 / 819 Loss: 136.84085083007812 Tokens per Sec: 27845.59745041281
Epoch Step: 105 / 819 Loss: 107.29446411132812 Tokens per Sec: 28118.735892997574
Epoch Step: 110 / 819 Loss: 134.0512237548828 Tokens per Sec: 25454.64541447332
Epoch Step: 115 / 819 Loss: 157.64385986328125 Tokens per Sec: 26819.547417596765
Epoch Step: 120 / 819 Loss: 154.74989318847656 Tokens per Sec: 29597.14917106424
Epoch Step: 125 / 819 Loss: 164.5041046142578 Tokens per Sec: 25982.54437858339
Epoch Step: 130 / 819 Loss: 130.829833984375 Tokens per Sec: 25548.26419836548
Epoch Step: 135 / 819 Loss: 189.9419708251953 Tokens per Sec: 27305.46664963336
Epoch Step: 140 / 819 Loss: 141.35757446289062 Tokens per Sec: 25302.576642410135
Epoch Step: 145 / 819 Loss: 127.6871566772461 Tokens per Sec: 25538.35861626946
Epoch Step: 150 / 819 Loss: 166.5175018310547 Tokens per Sec: 26437.96562298509
Epoch Step: 155 / 819 Loss: 164.0939483642578 Tokens per Sec: 28095.15824355489
Epoch Step: 160 / 819 Loss: 133.0585174560547 Tokens per Sec: 26877.888165116794
Epoch Step: 165 / 819 Loss: 131.75917053222656 Tokens per Sec: 26174.007043115704
Epoch Step: 170 / 819 Loss: 167.88552856445312 Tokens per Sec: 27728.934395370015
Epoch Step: 175 / 819 Loss: 110.27801513671875 Tokens per Sec: 24835.283813108443
Epoch Step: 180 / 819 Loss: 158.31138610839844 Tokens per Sec: 29008.508273145635
Epoch Step: 185 / 819 Loss: 179.0227813720703 Tokens per Sec: 28109.71419591314
Epoch Step: 190 / 819 Loss: 180.34718322753906 Tokens per Sec: 26881.093039510073
Epoch Step: 195 / 819 Loss: 136.1375274658203 Tokens per Sec: 24151.847303325096
Epoch Step: 200 / 819 Loss: 125.32083129882812 Tokens per Sec: 26483.381489827487
Epoch Step: 205 / 819 Loss: 183.79238891601562 Tokens per Sec: 27988.46492764081
Epoch Step: 210 / 819 Loss: 144.2552490234375 Tokens per Sec: 27688.2761933031
Epoch Step: 215 / 819 Loss: 128.56053161621094 Tokens per Sec: 27352.191787231422
Epoch Step: 220 / 819 Loss: 108.44670867919922 Tokens per Sec: 28714.658013719058
Epoch Step: 225 / 819 Loss: 173.37841796875 Tokens per Sec: 28714.47875333652
Epoch Step: 230 / 819 Loss: 121.8690414428711 Tokens per Sec: 26166.174965191934
Epoch Step: 235 / 819 Loss: 117.341796875 Tokens per Sec: 26396.819217280346
Epoch Step: 240 / 819 Loss: 156.45755004882812 Tokens per Sec: 26328.06519051473
Epoch Step: 245 / 819 Loss: 166.55311584472656 Tokens per Sec: 28112.403766790794
Epoch Step: 250 / 819 Loss: 149.30982971191406 Tokens per Sec: 26100.370297063724
Epoch Step: 255 / 819 Loss: 138.71957397460938 Tokens per Sec: 24406.793230167543
Epoch Step: 260 / 819 Loss: 145.2033233642578 Tokens per Sec: 25125.649087883357
Epoch Step: 265 / 819 Loss: 169.92787170410156 Tokens per Sec: 25278.54984472268
Epoch Step: 270 / 819 Loss: 135.2324676513672 Tokens per Sec: 25236.423415919744
Epoch Step: 275 / 819 Loss: 194.56126403808594 Tokens per Sec: 26560.917402473588
Epoch Step: 280 / 819 Loss: 133.66822814941406 Tokens per Sec: 27634.09084440296
Epoch Step: 285 / 819 Loss: 125.03547668457031 Tokens per Sec: 26113.68076911476
Epoch Step: 290 / 819 Loss: 112.15298461914062 Tokens per Sec: 27778.83460617613
Epoch Step: 295 / 819 Loss: 106.28883361816406 Tokens per Sec: 25598.95052299372
Epoch Step: 300 / 819 Loss: 95.76464080810547 Tokens per Sec: 29623.609089337308
Epoch Step: 305 / 819 Loss: 157.21945190429688 Tokens per Sec: 26232.182368323985
Epoch Step: 310 / 819 Loss: 123.9495620727539 Tokens per Sec: 25986.91798608896
Epoch Step: 315 / 819 Loss: 115.84176635742188 Tokens per Sec: 27939.552379366763
Epoch Step: 320 / 819 Loss: 372.9572448730469 Tokens per Sec: 26866.113912475572
Epoch Step: 325 / 819 Loss: 176.8871612548828 Tokens per Sec: 28777.884694302
Epoch Step: 330 / 819 Loss: 175.09619140625 Tokens per Sec: 24764.177583967197
Epoch Step: 335 / 819 Loss: 117.35334014892578 Tokens per Sec: 25868.995595521785
Epoch Step: 340 / 819 Loss: 136.76510620117188 Tokens per Sec: 26110.5080098955
Epoch Step: 345 / 819 Loss: 155.0842742919922 Tokens per Sec: 26225.44178419217
Epoch Step: 350 / 819 Loss: 114.97956848144531 Tokens per Sec: 26749.643166942118
Epoch Step: 355 / 819 Loss: 147.12936401367188 Tokens per Sec: 27645.064973308083
Epoch Step: 360 / 819 Loss: 168.02780151367188 Tokens per Sec: 24562.985121903537
Epoch Step: 365 / 819 Loss: 311.02801513671875 Tokens per Sec: 27339.710544267884
Epoch Step: 370 / 819 Loss: 166.56463623046875 Tokens per Sec: 26698.315168200363
Epoch Step: 375 / 819 Loss: 177.9156494140625 Tokens per Sec: 27914.389102803307
Epoch Step: 380 / 819 Loss: 115.01895904541016 Tokens per Sec: 26839.027895156836
Epoch Step: 385 / 819 Loss: 135.2410888671875 Tokens per Sec: 26167.65191660166
Epoch Step: 390 / 819 Loss: 120.81482696533203 Tokens per Sec: 26024.532517720618
Epoch Step: 395 / 819 Loss: 148.48468017578125 Tokens per Sec: 27022.012223041296
Epoch Step: 400 / 819 Loss: 120.4785385131836 Tokens per Sec: 26880.296529253294
Epoch Step: 405 / 819 Loss: 171.03515625 Tokens per Sec: 27804.56214298611
Epoch Step: 410 / 819 Loss: 133.949462890625 Tokens per Sec: 27710.447663696694
Epoch Step: 415 / 819 Loss: 336.67633056640625 Tokens per Sec: 26800.40996224629
Epoch Step: 420 / 819 Loss: 135.3668975830078 Tokens per Sec: 26298.39214572708
Epoch Step: 425 / 819 Loss: 116.51138305664062 Tokens per Sec: 24575.739571290957
Epoch Step: 430 / 819 Loss: 327.4293212890625 Tokens per Sec: 26865.95350125741
Epoch Step: 435 / 819 Loss: 114.18946075439453 Tokens per Sec: 24808.645397927296
Epoch Step: 440 / 819 Loss: 164.20562744140625 Tokens per Sec: 26880.337253439367
Epoch Step: 445 / 819 Loss: 143.88485717773438 Tokens per Sec: 27515.09848795921
Epoch Step: 450 / 819 Loss: 160.87705993652344 Tokens per Sec: 29038.81962196737
Epoch Step: 455 / 819 Loss: 103.43321990966797 Tokens per Sec: 22302.513318911606
Epoch Step: 460 / 819 Loss: 139.94517517089844 Tokens per Sec: 29202.67312181184
Epoch Step: 465 / 819 Loss: 161.09092712402344 Tokens per Sec: 27334.90195162784
Epoch Step: 470 / 819 Loss: 111.2449722290039 Tokens per Sec: 28190.586579850205
Epoch Step: 475 / 819 Loss: 173.774658203125 Tokens per Sec: 25881.3313511473
Epoch Step: 480 / 819 Loss: 147.3446502685547 Tokens per Sec: 26666.267194348005
Epoch Step: 485 / 819 Loss: 174.7228240966797 Tokens per Sec: 27684.385717810746
Epoch Step: 490 / 819 Loss: 146.34812927246094 Tokens per Sec: 28767.094465626524
Epoch Step: 495 / 819 Loss: 131.04002380371094 Tokens per Sec: 25281.42603959563
Epoch Step: 500 / 819 Loss: 116.96025085449219 Tokens per Sec: 26509.246581972486
Epoch Step: 505 / 819 Loss: 159.1864013671875 Tokens per Sec: 28818.282067294393
Epoch Step: 510 / 819 Loss: 124.0181884765625 Tokens per Sec: 25052.38588398047
Epoch Step: 515 / 819 Loss: 84.68640899658203 Tokens per Sec: 28300.514960681194
Epoch Step: 520 / 819 Loss: 88.45801544189453 Tokens per Sec: 25333.005623626963
Epoch Step: 525 / 819 Loss: 122.90882873535156 Tokens per Sec: 27923.064936256487
Epoch Step: 530 / 819 Loss: 169.6352996826172 Tokens per Sec: 26317.372792482594
Epoch Step: 535 / 819 Loss: 93.81932067871094 Tokens per Sec: 26274.740340765333
Epoch Step: 540 / 819 Loss: 111.263427734375 Tokens per Sec: 25890.074616409085
Epoch Step: 545 / 819 Loss: 151.88990783691406 Tokens per Sec: 26273.85101471627
Epoch Step: 550 / 819 Loss: 142.48898315429688 Tokens per Sec: 24881.144899561677
Epoch Step: 555 / 819 Loss: 295.1087646484375 Tokens per Sec: 27378.227976697082
Epoch Step: 560 / 819 Loss: 140.6759490966797 Tokens per Sec: 27875.20697651194
Epoch Step: 565 / 819 Loss: 120.9733657836914 Tokens per Sec: 25885.343110168214
Epoch Step: 570 / 819 Loss: 148.81442260742188 Tokens per Sec: 25312.279818228235
Epoch Step: 575 / 819 Loss: 101.5445556640625 Tokens per Sec: 25564.570706789378
Epoch Step: 580 / 819 Loss: 106.54874420166016 Tokens per Sec: 26431.524894956572
Epoch Step: 585 / 819 Loss: 104.45756530761719 Tokens per Sec: 27124.98016864682
Epoch Step: 590 / 819 Loss: 118.5200424194336 Tokens per Sec: 26992.381951225445
Epoch Step: 595 / 819 Loss: 117.47455596923828 Tokens per Sec: 25422.904409317056
Epoch Step: 600 / 819 Loss: 159.19631958007812 Tokens per Sec: 27756.73702316626
Epoch Step: 605 / 819 Loss: 127.4903793334961 Tokens per Sec: 28171.590388839006
Epoch Step: 610 / 819 Loss: 127.27742004394531 Tokens per Sec: 25841.82588279181
Epoch Step: 615 / 819 Loss: 109.29081726074219 Tokens per Sec: 26212.73273548305
Epoch Step: 620 / 819 Loss: 104.13455200195312 Tokens per Sec: 26405.732667442593
Epoch Step: 625 / 819 Loss: 381.3333435058594 Tokens per Sec: 25354.656707137077
Epoch Step: 630 / 819 Loss: 135.96897888183594 Tokens per Sec: 28028.14114922768
Epoch Step: 635 / 819 Loss: 114.6417465209961 Tokens per Sec: 26685.365978419737
Epoch Step: 640 / 819 Loss: 95.71336364746094 Tokens per Sec: 26047.116365610436
Epoch Step: 645 / 819 Loss: 134.31765747070312 Tokens per Sec: 26811.732747300066
Epoch Step: 650 / 819 Loss: 240.3573455810547 Tokens per Sec: 23576.39930482672
Epoch Step: 655 / 819 Loss: 158.20504760742188 Tokens per Sec: 28219.63846392346
Epoch Step: 660 / 819 Loss: 105.22268676757812 Tokens per Sec: 26822.763252592325
Epoch Step: 665 / 819 Loss: 141.2984619140625 Tokens per Sec: 27153.107491269144
Epoch Step: 670 / 819 Loss: 110.96814727783203 Tokens per Sec: 25843.54735852001
Epoch Step: 675 / 819 Loss: 145.60919189453125 Tokens per Sec: 27175.28336982637
Epoch Step: 680 / 819 Loss: 155.31759643554688 Tokens per Sec: 27564.69421390158
Epoch Step: 685 / 819 Loss: 104.80079650878906 Tokens per Sec: 27292.97719679226
Epoch Step: 690 / 819 Loss: 142.56503295898438 Tokens per Sec: 25253.914553253402
Epoch Step: 695 / 819 Loss: 156.45523071289062 Tokens per Sec: 27916.47936157746
Epoch Step: 700 / 819 Loss: 170.53738403320312 Tokens per Sec: 27220.99807285544
Epoch Step: 705 / 819 Loss: 353.7299499511719 Tokens per Sec: 26965.80403174981
Epoch Step: 710 / 819 Loss: 155.88070678710938 Tokens per Sec: 28302.90972877187
Epoch Step: 715 / 819 Loss: 133.4170379638672 Tokens per Sec: 25599.623060024936
Epoch Step: 720 / 819 Loss: 109.80663299560547 Tokens per Sec: 24858.41394490807
Epoch Step: 725 / 819 Loss: 142.90438842773438 Tokens per Sec: 25390.95692033389
Epoch Step: 730 / 819 Loss: 114.4908447265625 Tokens per Sec: 26244.091824315263
Epoch Step: 735 / 819 Loss: 131.73983764648438 Tokens per Sec: 27862.169623375026
Epoch Step: 740 / 819 Loss: 142.7023162841797 Tokens per Sec: 26318.753127999284
Epoch Step: 745 / 819 Loss: 161.89193725585938 Tokens per Sec: 28202.54761355292
Epoch Step: 750 / 819 Loss: 83.26348114013672 Tokens per Sec: 25904.658963537764
Epoch Step: 755 / 819 Loss: 158.8074493408203 Tokens per Sec: 27637.584200369874
Epoch Step: 760 / 819 Loss: 108.92543029785156 Tokens per Sec: 25495.630143345992
Epoch Step: 765 / 819 Loss: 130.95706176757812 Tokens per Sec: 25268.929092242528
Epoch Step: 770 / 819 Loss: 356.624267578125 Tokens per Sec: 25197.679039120416
Epoch Step: 775 / 819 Loss: 164.55584716796875 Tokens per Sec: 26919.474137652785
Epoch Step: 780 / 819 Loss: 83.63536834716797 Tokens per Sec: 26085.94040450387
Epoch Step: 785 / 819 Loss: 108.13941192626953 Tokens per Sec: 28710.547330376252
Epoch Step: 790 / 819 Loss: 85.25053405761719 Tokens per Sec: 25159.97705068764
Epoch Step: 795 / 819 Loss: 97.20319366455078 Tokens per Sec: 27547.280975548685
Epoch Step: 800 / 819 Loss: 117.76466369628906 Tokens per Sec: 25716.596191623757
Epoch Step: 805 / 819 Loss: 133.0525360107422 Tokens per Sec: 25853.56916681504
Epoch Step: 810 / 819 Loss: 112.9659423828125 Tokens per Sec: 26429.881509849507
Epoch Step: 815 / 819 Loss: 116.18293762207031 Tokens per Sec: 19865.392865409893
Epoch ended with duration 0:02:26.234649
Train perplexity: 7.7676892507457485
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_4 = new TYPE_3 ( ) ; VAR_5 . METHOD_4 ( ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( new TYPE_3 ( ( VAR_1 , VAR_1 , VAR_1 , VAR_1 , VAR_1 , VAR_1 ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_1 ) { if ( ( ( ( ( ( ) . METHOD_2 ( ) . METHOD_2 ( ) . METHOD_2 . METHOD_2 . METHOD_3 ( ) . METHOD_3 ( ) . METHOD_3 ( ) . METHOD_3 ( ) . METHOD_3 ( ) ) ) ) ) ; }[0m
Epoch ended with duration 0:00:06.068349
Validation perplexity: 5.634907309788867
Model saved best_on_validation!
Epoch 2 / 1000
Epoch Step: 5 / 819 Loss: 94.45869445800781 Tokens per Sec: 27165.04323510554
Epoch Step: 10 / 819 Loss: 285.7848815917969 Tokens per Sec: 26493.06707098705
Epoch Step: 15 / 819 Loss: 125.57789611816406 Tokens per Sec: 27742.613309579538
Epoch Step: 20 / 819 Loss: 119.09979248046875 Tokens per Sec: 25128.380503865643
Epoch Step: 25 / 819 Loss: 168.4888458251953 Tokens per Sec: 25620.551675545077
Epoch Step: 30 / 819 Loss: 140.93641662597656 Tokens per Sec: 27115.81552018227
Epoch Step: 35 / 819 Loss: 142.06959533691406 Tokens per Sec: 25754.365354151938
Epoch Step: 40 / 819 Loss: 155.54571533203125 Tokens per Sec: 27742.089762331678
Epoch Step: 45 / 819 Loss: 152.92266845703125 Tokens per Sec: 26970.518491981587
Epoch Step: 50 / 819 Loss: 114.20940399169922 Tokens per Sec: 26037.263006730627
Epoch Step: 55 / 819 Loss: 110.23428344726562 Tokens per Sec: 26172.823122313155
Epoch Step: 60 / 819 Loss: 147.28567504882812 Tokens per Sec: 26916.421776674004
Epoch Step: 65 / 819 Loss: 123.85832977294922 Tokens per Sec: 26565.965336790276
Epoch Step: 70 / 819 Loss: 137.76976013183594 Tokens per Sec: 26305.274399989717
Epoch Step: 75 / 819 Loss: 83.34815979003906 Tokens per Sec: 27167.905598394536
Epoch Step: 80 / 819 Loss: 79.40727233886719 Tokens per Sec: 25405.935307575193
Epoch Step: 85 / 819 Loss: 145.50604248046875 Tokens per Sec: 28467.959157830577
Epoch Step: 90 / 819 Loss: 129.3751983642578 Tokens per Sec: 28223.748762351755
Epoch Step: 95 / 819 Loss: 116.0427017211914 Tokens per Sec: 26642.03873871832
Epoch Step: 100 / 819 Loss: 259.7044372558594 Tokens per Sec: 27287.276172121306
Epoch Step: 105 / 819 Loss: 100.84590911865234 Tokens per Sec: 28324.54939807296
Epoch Step: 110 / 819 Loss: 127.68053436279297 Tokens per Sec: 27749.49676801936
Epoch Step: 115 / 819 Loss: 86.42363739013672 Tokens per Sec: 26884.13121685912
Epoch Step: 120 / 819 Loss: 102.77593994140625 Tokens per Sec: 27505.998652837352
Epoch Step: 125 / 819 Loss: 82.98987579345703 Tokens per Sec: 27560.658941167207
Epoch Step: 130 / 819 Loss: 89.22423553466797 Tokens per Sec: 28314.076729561602
Epoch Step: 135 / 819 Loss: 140.35498046875 Tokens per Sec: 26061.158762726955
Epoch Step: 140 / 819 Loss: 122.3200454711914 Tokens per Sec: 28655.353911922237
Epoch Step: 145 / 819 Loss: 77.82420349121094 Tokens per Sec: 27082.964975036288
Epoch Step: 150 / 819 Loss: 90.62564849853516 Tokens per Sec: 26674.42667533052
Epoch Step: 155 / 819 Loss: 100.90286254882812 Tokens per Sec: 29088.751430573848
Epoch Step: 160 / 819 Loss: 84.53254699707031 Tokens per Sec: 26026.304971352452
Epoch Step: 165 / 819 Loss: 105.60204315185547 Tokens per Sec: 24144.491270737253
Epoch Step: 170 / 819 Loss: 348.6011962890625 Tokens per Sec: 27092.92989441762
Epoch Step: 175 / 819 Loss: 119.05821228027344 Tokens per Sec: 23746.72595111094
Epoch Step: 180 / 819 Loss: 125.76689910888672 Tokens per Sec: 25336.37031453484
Epoch Step: 185 / 819 Loss: 120.98497772216797 Tokens per Sec: 25919.31486331266
Epoch Step: 190 / 819 Loss: 115.82002258300781 Tokens per Sec: 26325.75798847564
Epoch Step: 195 / 819 Loss: 136.7566680908203 Tokens per Sec: 24926.239352050445
Epoch Step: 200 / 819 Loss: 364.09698486328125 Tokens per Sec: 26946.911296866674
Epoch Step: 205 / 819 Loss: 138.00057983398438 Tokens per Sec: 28684.937184354694
Epoch Step: 210 / 819 Loss: 85.21879577636719 Tokens per Sec: 25837.414313746103
Epoch Step: 215 / 819 Loss: 87.87226104736328 Tokens per Sec: 25022.06187717543
Epoch Step: 220 / 819 Loss: 151.5355682373047 Tokens per Sec: 28326.246062573206
Epoch Step: 225 / 819 Loss: 256.4709777832031 Tokens per Sec: 25762.74721393827
Epoch Step: 230 / 819 Loss: 103.90052795410156 Tokens per Sec: 27388.089064480147
Epoch Step: 235 / 819 Loss: 140.6875457763672 Tokens per Sec: 28013.721934505786
Epoch Step: 240 / 819 Loss: 100.04238891601562 Tokens per Sec: 28995.477042634207
Epoch Step: 245 / 819 Loss: 90.10891723632812 Tokens per Sec: 25645.11955492739
Epoch Step: 250 / 819 Loss: 97.19451904296875 Tokens per Sec: 26744.192652673308
Epoch Step: 255 / 819 Loss: 149.79148864746094 Tokens per Sec: 28094.486118096575
Epoch Step: 260 / 819 Loss: 127.8006820678711 Tokens per Sec: 27391.46244314656
Epoch Step: 265 / 819 Loss: 95.85042572021484 Tokens per Sec: 25680.528716246958
Epoch Step: 270 / 819 Loss: 113.15769958496094 Tokens per Sec: 27872.536762398868
Epoch Step: 275 / 819 Loss: 132.98121643066406 Tokens per Sec: 27300.81800071395
Epoch Step: 280 / 819 Loss: 99.65876770019531 Tokens per Sec: 25274.81207975299
Epoch Step: 285 / 819 Loss: 82.92071533203125 Tokens per Sec: 26830.063965500427
Epoch Step: 290 / 819 Loss: 111.06613159179688 Tokens per Sec: 27936.51944197673
Epoch Step: 295 / 819 Loss: 98.77767944335938 Tokens per Sec: 27763.156811114786
Epoch Step: 300 / 819 Loss: 140.3423309326172 Tokens per Sec: 24857.930823970222
Epoch Step: 305 / 819 Loss: 129.64935302734375 Tokens per Sec: 26186.990651310258
Epoch Step: 310 / 819 Loss: 152.38589477539062 Tokens per Sec: 27638.676544635848
Epoch Step: 315 / 819 Loss: 107.94650268554688 Tokens per Sec: 23021.466227065936
Epoch Step: 320 / 819 Loss: 97.17654418945312 Tokens per Sec: 26634.323020248838
Epoch Step: 325 / 819 Loss: 124.78720092773438 Tokens per Sec: 27619.458434604312
Epoch Step: 330 / 819 Loss: 138.27174377441406 Tokens per Sec: 28294.467948162026
Epoch Step: 335 / 819 Loss: 88.85140991210938 Tokens per Sec: 26374.02874906534
Epoch Step: 340 / 819 Loss: 87.09696197509766 Tokens per Sec: 26741.132329582764
Epoch Step: 345 / 819 Loss: 316.7255859375 Tokens per Sec: 26489.56952184609
Epoch Step: 350 / 819 Loss: 112.44751739501953 Tokens per Sec: 29162.080448501874
Epoch Step: 355 / 819 Loss: 118.65754699707031 Tokens per Sec: 27266.264456709905
Epoch Step: 360 / 819 Loss: 125.38499450683594 Tokens per Sec: 27743.55188520478
Epoch Step: 365 / 819 Loss: 119.63037872314453 Tokens per Sec: 25477.605486963963
Epoch Step: 370 / 819 Loss: 108.40994262695312 Tokens per Sec: 26268.878725265353
Epoch Step: 375 / 819 Loss: 87.50927734375 Tokens per Sec: 27893.88886560805
Epoch Step: 380 / 819 Loss: 97.79302978515625 Tokens per Sec: 26493.903120071936
Epoch Step: 385 / 819 Loss: 101.00218200683594 Tokens per Sec: 23992.05979413411
Epoch Step: 390 / 819 Loss: 99.38737487792969 Tokens per Sec: 28230.925517319418
Epoch Step: 395 / 819 Loss: 108.43694305419922 Tokens per Sec: 26520.540564111798
Epoch Step: 400 / 819 Loss: 109.67443084716797 Tokens per Sec: 28128.908798408767
Epoch Step: 405 / 819 Loss: 107.98887634277344 Tokens per Sec: 25267.675661051908
Epoch Step: 410 / 819 Loss: 135.46331787109375 Tokens per Sec: 27816.844317320785
Epoch Step: 415 / 819 Loss: 231.37039184570312 Tokens per Sec: 27949.757807566395
Epoch Step: 420 / 819 Loss: 103.08815002441406 Tokens per Sec: 28831.50796100608
Epoch Step: 425 / 819 Loss: 104.50458526611328 Tokens per Sec: 26119.32170721284
Epoch Step: 430 / 819 Loss: 241.60098266601562 Tokens per Sec: 26134.312067114173
Epoch Step: 435 / 819 Loss: 146.59226989746094 Tokens per Sec: 26984.277926207473
Epoch Step: 440 / 819 Loss: 94.55059814453125 Tokens per Sec: 28568.78305685492
Epoch Step: 445 / 819 Loss: 97.3597640991211 Tokens per Sec: 26528.21120346112
Epoch Step: 450 / 819 Loss: 239.5846710205078 Tokens per Sec: 25814.49810018618
Epoch Step: 455 / 819 Loss: 218.3358154296875 Tokens per Sec: 23876.618153223535
Epoch Step: 460 / 819 Loss: 111.38024139404297 Tokens per Sec: 26381.29592169518
Epoch Step: 465 / 819 Loss: 137.1880645751953 Tokens per Sec: 26470.428580355452
Epoch Step: 470 / 819 Loss: 115.932373046875 Tokens per Sec: 26094.26461265456
Epoch Step: 475 / 819 Loss: 142.9092254638672 Tokens per Sec: 28557.079440112284
Epoch Step: 480 / 819 Loss: 89.88819122314453 Tokens per Sec: 27089.143993873724
Epoch Step: 485 / 819 Loss: 139.10670471191406 Tokens per Sec: 26243.748826038624
Epoch Step: 490 / 819 Loss: 138.6659698486328 Tokens per Sec: 26452.137732796447
Epoch Step: 495 / 819 Loss: 67.73883819580078 Tokens per Sec: 26348.204439276466
Epoch Step: 500 / 819 Loss: 338.457275390625 Tokens per Sec: 28247.456282782958
Epoch Step: 505 / 819 Loss: 135.78103637695312 Tokens per Sec: 25867.500063735373
Epoch Step: 510 / 819 Loss: 108.6737060546875 Tokens per Sec: 27143.869451421946
Epoch Step: 515 / 819 Loss: 85.68742370605469 Tokens per Sec: 26501.722494522877
Epoch Step: 520 / 819 Loss: 136.70330810546875 Tokens per Sec: 27277.170263183183
Epoch Step: 525 / 819 Loss: 95.47631072998047 Tokens per Sec: 27785.16202715462
Epoch Step: 530 / 819 Loss: 120.39215850830078 Tokens per Sec: 27020.862639423263
Epoch Step: 535 / 819 Loss: 102.0030517578125 Tokens per Sec: 28073.65999846811
Epoch Step: 540 / 819 Loss: 101.95916748046875 Tokens per Sec: 25465.103745103523
Epoch Step: 545 / 819 Loss: 297.8601379394531 Tokens per Sec: 27212.83760586967
Epoch Step: 550 / 819 Loss: 94.12104797363281 Tokens per Sec: 26001.43540105931
Epoch Step: 555 / 819 Loss: 354.7476806640625 Tokens per Sec: 28949.76751669214
Epoch Step: 560 / 819 Loss: 113.24211883544922 Tokens per Sec: 28538.323402676353
Epoch Step: 565 / 819 Loss: 130.4680633544922 Tokens per Sec: 27155.559175080565
Epoch Step: 570 / 819 Loss: 95.04328918457031 Tokens per Sec: 26029.932739709617
Epoch Step: 575 / 819 Loss: 118.15472412109375 Tokens per Sec: 25378.190399635558
Epoch Step: 580 / 819 Loss: 99.04226684570312 Tokens per Sec: 26570.712631093244
Epoch Step: 585 / 819 Loss: 130.57745361328125 Tokens per Sec: 25892.793010657617
Epoch Step: 590 / 819 Loss: 284.3502197265625 Tokens per Sec: 27920.794499766373
Epoch Step: 595 / 819 Loss: 76.08499908447266 Tokens per Sec: 25760.997981506585
Epoch Step: 600 / 819 Loss: 83.59888458251953 Tokens per Sec: 25779.554041512984
Epoch Step: 605 / 819 Loss: 89.61952209472656 Tokens per Sec: 25951.711234288516
Epoch Step: 610 / 819 Loss: 125.60704803466797 Tokens per Sec: 25269.330702492774
Epoch Step: 615 / 819 Loss: 82.21528625488281 Tokens per Sec: 28162.416186069546
Epoch Step: 620 / 819 Loss: 84.50182342529297 Tokens per Sec: 26836.85549280711
Epoch Step: 625 / 819 Loss: 68.8850326538086 Tokens per Sec: 27866.07550703005
Epoch Step: 630 / 819 Loss: 98.75653839111328 Tokens per Sec: 26906.526735674128
Epoch Step: 635 / 819 Loss: 80.5175552368164 Tokens per Sec: 26009.31484893578
Epoch Step: 640 / 819 Loss: 74.76435089111328 Tokens per Sec: 27203.282251125896
Epoch Step: 645 / 819 Loss: 83.97667694091797 Tokens per Sec: 24360.762802423218
Epoch Step: 650 / 819 Loss: 111.55633544921875 Tokens per Sec: 26647.743461453967
Epoch Step: 655 / 819 Loss: 110.76188659667969 Tokens per Sec: 25540.97400432942
Epoch Step: 660 / 819 Loss: 86.90068817138672 Tokens per Sec: 29063.336573406417
Epoch Step: 665 / 819 Loss: 85.98245239257812 Tokens per Sec: 24134.947849355987
Epoch Step: 670 / 819 Loss: 101.23152923583984 Tokens per Sec: 25848.192785237774
Epoch Step: 675 / 819 Loss: 117.33150482177734 Tokens per Sec: 26983.947977996504
Epoch Step: 680 / 819 Loss: 96.65510559082031 Tokens per Sec: 27048.573084088803
Epoch Step: 685 / 819 Loss: 270.02899169921875 Tokens per Sec: 28104.733961674774
Epoch Step: 690 / 819 Loss: 123.20940399169922 Tokens per Sec: 26984.80616131632
Epoch Step: 695 / 819 Loss: 373.09759521484375 Tokens per Sec: 28459.960726307112
Epoch Step: 700 / 819 Loss: 110.2549057006836 Tokens per Sec: 27984.034925458538
Epoch Step: 705 / 819 Loss: 111.16321563720703 Tokens per Sec: 26476.68479333564
Epoch Step: 710 / 819 Loss: 67.27033233642578 Tokens per Sec: 27207.162634527365
Epoch Step: 715 / 819 Loss: 73.07319641113281 Tokens per Sec: 25438.20166303088
Epoch Step: 720 / 819 Loss: 107.95549774169922 Tokens per Sec: 27789.30047431888
Epoch Step: 725 / 819 Loss: 102.80242919921875 Tokens per Sec: 26166.632872646715
Epoch Step: 730 / 819 Loss: 90.0287857055664 Tokens per Sec: 26174.09127570274
Epoch Step: 735 / 819 Loss: 61.40978240966797 Tokens per Sec: 27391.31539779981
Epoch Step: 740 / 819 Loss: 93.08430480957031 Tokens per Sec: 26408.19996988464
Epoch Step: 745 / 819 Loss: 84.72664642333984 Tokens per Sec: 24192.13336904451
Epoch Step: 750 / 819 Loss: 102.11801147460938 Tokens per Sec: 28606.378460281765
Epoch Step: 755 / 819 Loss: 122.55343627929688 Tokens per Sec: 29084.059979873957
Epoch Step: 760 / 819 Loss: 120.1755142211914 Tokens per Sec: 27859.194408084306
Epoch Step: 765 / 819 Loss: 95.92711639404297 Tokens per Sec: 28267.69649479217
Epoch Step: 770 / 819 Loss: 67.2193832397461 Tokens per Sec: 28267.923756394488
Epoch Step: 775 / 819 Loss: 101.58370971679688 Tokens per Sec: 26626.17166932941
Epoch Step: 780 / 819 Loss: 77.45587158203125 Tokens per Sec: 26713.461819804652
Epoch Step: 785 / 819 Loss: 78.11965942382812 Tokens per Sec: 22166.839774854885
Epoch Step: 790 / 819 Loss: 79.62509155273438 Tokens per Sec: 26451.394281306468
Epoch Step: 795 / 819 Loss: 71.39386749267578 Tokens per Sec: 26210.543469169494
Epoch Step: 800 / 819 Loss: 68.69528198242188 Tokens per Sec: 26884.77192070112
Epoch Step: 805 / 819 Loss: 71.63087463378906 Tokens per Sec: 23581.0453163094
Epoch Step: 810 / 819 Loss: 66.63502502441406 Tokens per Sec: 24709.41635119535
Epoch Step: 815 / 819 Loss: 112.62252807617188 Tokens per Sec: 22677.244716338464
Epoch ended with duration 0:02:25.550848
Train perplexity: 5.204281533756126
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_1 = VAR_1 . METHOD_3 ( ) . METHOD_3 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 = VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_3 ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_2 . METHOD_3 ( new TYPE_2 ( VAR_2 , VAR_2 . METHOD_3 ( VAR_2 , ( ( VAR_2 . METHOD_4 ( ) , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String java.lang.String , java.lang.String VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 + STRING_1 ) ; if ( ! ( VAR_2 . METHOD_2 ( ) ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_3 ( ) . METHOD_3 ( ) . METHOD_3 ( ) , ( VAR_3 . METHOD_2 ( ) , ( VAR_3 . METHOD_2 ( ) ) . METHOD_3 ( ) , VAR_3 ) . METHOD_3 ( ) , VAR_3 ) ; } }[0m
Epoch ended with duration 0:00:06.072304
Validation perplexity: 3.9454831446014516
Model saved best_on_validation!
Epoch 3 / 1000
Epoch Step: 5 / 819 Loss: 215.05551147460938 Tokens per Sec: 25302.588589354273
Epoch Step: 10 / 819 Loss: 71.73951721191406 Tokens per Sec: 27054.535008740477
Epoch Step: 15 / 819 Loss: 104.91534423828125 Tokens per Sec: 26091.519899982555
Epoch Step: 20 / 819 Loss: 100.87867736816406 Tokens per Sec: 26861.488924277885
Epoch Step: 25 / 819 Loss: 83.80365753173828 Tokens per Sec: 28599.753895339763
Epoch Step: 30 / 819 Loss: 82.91678619384766 Tokens per Sec: 24088.478201577138
Epoch Step: 35 / 819 Loss: 106.9385986328125 Tokens per Sec: 28864.369037034685
Epoch Step: 40 / 819 Loss: 104.32195281982422 Tokens per Sec: 28289.751756025064
Epoch Step: 45 / 819 Loss: 90.63491821289062 Tokens per Sec: 25701.47508860854
Epoch Step: 50 / 819 Loss: 63.26047134399414 Tokens per Sec: 27051.682351283947
Epoch Step: 55 / 819 Loss: 103.48445892333984 Tokens per Sec: 27311.226651172103
Epoch Step: 60 / 819 Loss: 92.28118896484375 Tokens per Sec: 26273.398592433154
Epoch Step: 65 / 819 Loss: 107.3399429321289 Tokens per Sec: 25299.07095066263
Epoch Step: 70 / 819 Loss: 71.0348129272461 Tokens per Sec: 26939.53322209326
Epoch Step: 75 / 819 Loss: 106.922607421875 Tokens per Sec: 28301.92799443329
Epoch Step: 80 / 819 Loss: 98.4891586303711 Tokens per Sec: 25819.85462589037
Epoch Step: 85 / 819 Loss: 101.4964370727539 Tokens per Sec: 27052.34749867377
Epoch Step: 90 / 819 Loss: 98.00537872314453 Tokens per Sec: 26873.12105956275
Epoch Step: 95 / 819 Loss: 60.18433380126953 Tokens per Sec: 25345.09806697341
Epoch Step: 100 / 819 Loss: 110.27967834472656 Tokens per Sec: 26833.90570431609
Epoch Step: 105 / 819 Loss: 63.85075759887695 Tokens per Sec: 28739.18867159702
Epoch Step: 110 / 819 Loss: 77.37321472167969 Tokens per Sec: 26957.847693643107
Epoch Step: 115 / 819 Loss: 298.5760192871094 Tokens per Sec: 27508.922841873176
Epoch Step: 120 / 819 Loss: 116.58523559570312 Tokens per Sec: 28232.970461202753
Epoch Step: 125 / 819 Loss: 97.00897979736328 Tokens per Sec: 25035.608829172124
Epoch Step: 130 / 819 Loss: 67.1463623046875 Tokens per Sec: 26275.400772674973
Epoch Step: 135 / 819 Loss: 60.660648345947266 Tokens per Sec: 25290.504964896343
Epoch Step: 140 / 819 Loss: 82.51533508300781 Tokens per Sec: 23929.563730944574
Epoch Step: 145 / 819 Loss: 109.85182189941406 Tokens per Sec: 29227.11818010861
Epoch Step: 150 / 819 Loss: 106.18110656738281 Tokens per Sec: 26607.84119140005
Epoch Step: 155 / 819 Loss: 291.77178955078125 Tokens per Sec: 26023.721638335468
Epoch Step: 160 / 819 Loss: 78.83865356445312 Tokens per Sec: 24944.967446717917
Epoch Step: 165 / 819 Loss: 257.0350341796875 Tokens per Sec: 25348.85481515737
Epoch Step: 170 / 819 Loss: 65.47241973876953 Tokens per Sec: 28431.094757189
Epoch Step: 175 / 819 Loss: 92.8983154296875 Tokens per Sec: 28150.52308055992
Epoch Step: 180 / 819 Loss: 362.35540771484375 Tokens per Sec: 25552.860378479734
Epoch Step: 185 / 819 Loss: 97.61319732666016 Tokens per Sec: 25393.38525388802
Epoch Step: 190 / 819 Loss: 64.18087768554688 Tokens per Sec: 27842.22261015712
Epoch Step: 195 / 819 Loss: 356.454833984375 Tokens per Sec: 28610.993734476022
Epoch Step: 200 / 819 Loss: 66.53303527832031 Tokens per Sec: 26078.451559330417
Epoch Step: 205 / 819 Loss: 106.389404296875 Tokens per Sec: 26491.036214344247
Epoch Step: 210 / 819 Loss: 81.1958236694336 Tokens per Sec: 26523.72957819936
Epoch Step: 215 / 819 Loss: 63.549659729003906 Tokens per Sec: 27924.026975650788
Epoch Step: 220 / 819 Loss: 90.73866271972656 Tokens per Sec: 27674.01149554006
Epoch Step: 225 / 819 Loss: 72.54629516601562 Tokens per Sec: 25750.5421210935
Epoch Step: 230 / 819 Loss: 87.86638641357422 Tokens per Sec: 27186.230248650947
Epoch Step: 235 / 819 Loss: 58.63578414916992 Tokens per Sec: 26167.296848904694
Epoch Step: 240 / 819 Loss: 352.1905517578125 Tokens per Sec: 28664.41473729613
Epoch Step: 245 / 819 Loss: 55.62737274169922 Tokens per Sec: 27747.872889014427
Epoch Step: 250 / 819 Loss: 86.61418151855469 Tokens per Sec: 24837.989497949704
Epoch Step: 255 / 819 Loss: 68.16244506835938 Tokens per Sec: 27141.814335483647
Epoch Step: 260 / 819 Loss: 75.60540008544922 Tokens per Sec: 23712.680358458103
Epoch Step: 265 / 819 Loss: 96.64675903320312 Tokens per Sec: 25552.752328996896
Epoch Step: 270 / 819 Loss: 74.44466400146484 Tokens per Sec: 29647.92830001728
Epoch Step: 275 / 819 Loss: 100.15838623046875 Tokens per Sec: 26180.82080798498
Epoch Step: 280 / 819 Loss: 296.4732971191406 Tokens per Sec: 25507.734170694213
Epoch Step: 285 / 819 Loss: 71.09983825683594 Tokens per Sec: 27079.189730109218
Epoch Step: 290 / 819 Loss: 77.16036224365234 Tokens per Sec: 27292.147822741757
Epoch Step: 295 / 819 Loss: 307.6469421386719 Tokens per Sec: 24458.112523183816
Epoch Step: 300 / 819 Loss: 326.6484069824219 Tokens per Sec: 25774.10422328675
Epoch Step: 305 / 819 Loss: 115.67044830322266 Tokens per Sec: 25635.500756692818
Epoch Step: 310 / 819 Loss: 56.65433120727539 Tokens per Sec: 25594.038868493677
Epoch Step: 315 / 819 Loss: 88.539306640625 Tokens per Sec: 26877.490949872496
Epoch Step: 320 / 819 Loss: 73.59931945800781 Tokens per Sec: 26557.46360554485
Epoch Step: 325 / 819 Loss: 59.239356994628906 Tokens per Sec: 27366.72215837611
Epoch Step: 330 / 819 Loss: 65.9452896118164 Tokens per Sec: 26170.213849660922
Epoch Step: 335 / 819 Loss: 78.67594909667969 Tokens per Sec: 29310.082162907787
Epoch Step: 340 / 819 Loss: 62.925052642822266 Tokens per Sec: 27035.43018759045
Epoch Step: 345 / 819 Loss: 87.73063659667969 Tokens per Sec: 26065.23059441081
Epoch Step: 350 / 819 Loss: 354.3133850097656 Tokens per Sec: 27654.539133642254
Epoch Step: 355 / 819 Loss: 55.951560974121094 Tokens per Sec: 27835.724485074043
Epoch Step: 360 / 819 Loss: 79.22484588623047 Tokens per Sec: 27158.36271553153
Epoch Step: 365 / 819 Loss: 76.18987274169922 Tokens per Sec: 26387.84359746012
Epoch Step: 370 / 819 Loss: 68.91495513916016 Tokens per Sec: 26042.624037472015
Epoch Step: 375 / 819 Loss: 87.08953857421875 Tokens per Sec: 25330.829836521345
Epoch Step: 380 / 819 Loss: 88.92098999023438 Tokens per Sec: 26393.26883469606
Epoch Step: 385 / 819 Loss: 57.677101135253906 Tokens per Sec: 26689.713833311052
Epoch Step: 390 / 819 Loss: 73.9687271118164 Tokens per Sec: 27785.08565767837
Epoch Step: 395 / 819 Loss: 84.90975952148438 Tokens per Sec: 26006.91925028427
Epoch Step: 400 / 819 Loss: 104.30315399169922 Tokens per Sec: 26281.470519800932
Epoch Step: 405 / 819 Loss: 88.06900787353516 Tokens per Sec: 24662.087992162058
Epoch Step: 410 / 819 Loss: 74.2048568725586 Tokens per Sec: 26244.22237843893
Epoch Step: 415 / 819 Loss: 91.32569885253906 Tokens per Sec: 25908.390406886436
Epoch Step: 420 / 819 Loss: 80.20272827148438 Tokens per Sec: 25308.94693131825
Epoch Step: 425 / 819 Loss: 93.7690658569336 Tokens per Sec: 29146.244237968556
Epoch Step: 430 / 819 Loss: 59.970420837402344 Tokens per Sec: 26260.52631593084
Epoch Step: 435 / 819 Loss: 90.0538558959961 Tokens per Sec: 24496.303667041986
Epoch Step: 440 / 819 Loss: 79.58496856689453 Tokens per Sec: 26978.651902433554
Epoch Step: 445 / 819 Loss: 52.25595474243164 Tokens per Sec: 28776.987377238882
Epoch Step: 450 / 819 Loss: 53.56816864013672 Tokens per Sec: 26318.486725148276
Epoch Step: 455 / 819 Loss: 71.86324310302734 Tokens per Sec: 24378.82868332596
Epoch Step: 460 / 819 Loss: 59.01856994628906 Tokens per Sec: 27467.929977107488
Epoch Step: 465 / 819 Loss: 84.93252563476562 Tokens per Sec: 28906.205811103868
Epoch Step: 470 / 819 Loss: 65.38668060302734 Tokens per Sec: 26940.3624058826
Epoch Step: 475 / 819 Loss: 348.621826171875 Tokens per Sec: 28038.7158558585
Epoch Step: 480 / 819 Loss: 73.3202896118164 Tokens per Sec: 28014.66990851553
Epoch Step: 485 / 819 Loss: 76.69127655029297 Tokens per Sec: 26749.34174811779
Epoch Step: 490 / 819 Loss: 81.00509643554688 Tokens per Sec: 26377.105877797952
Epoch Step: 495 / 819 Loss: 53.686180114746094 Tokens per Sec: 26878.421697577895
Epoch Step: 500 / 819 Loss: 91.22496032714844 Tokens per Sec: 27614.726632456684
Epoch Step: 505 / 819 Loss: 66.87125396728516 Tokens per Sec: 26879.533499489276
Epoch Step: 510 / 819 Loss: 58.35025405883789 Tokens per Sec: 28995.015863456705
Epoch Step: 515 / 819 Loss: 359.6273193359375 Tokens per Sec: 26983.568355238433
Epoch Step: 520 / 819 Loss: 77.53756713867188 Tokens per Sec: 27874.32770886667
Epoch Step: 525 / 819 Loss: 50.996559143066406 Tokens per Sec: 27006.148350596224
Epoch Step: 530 / 819 Loss: 84.03324890136719 Tokens per Sec: 27892.55580131247
Epoch Step: 535 / 819 Loss: 59.361114501953125 Tokens per Sec: 26839.82856922407
Epoch Step: 540 / 819 Loss: 55.90273666381836 Tokens per Sec: 26531.955928523425
Epoch Step: 545 / 819 Loss: 70.79415130615234 Tokens per Sec: 27899.47760460171
Epoch Step: 550 / 819 Loss: 246.934326171875 Tokens per Sec: 28322.46500460347
Epoch Step: 555 / 819 Loss: 53.30534744262695 Tokens per Sec: 26541.449634371715
Epoch Step: 560 / 819 Loss: 89.06734466552734 Tokens per Sec: 26328.855323516997
Epoch Step: 565 / 819 Loss: 76.64158630371094 Tokens per Sec: 27921.08009564459
Epoch Step: 570 / 819 Loss: 69.39429473876953 Tokens per Sec: 25343.207497201805
Epoch Step: 575 / 819 Loss: 87.63414764404297 Tokens per Sec: 27333.077419367215
Epoch Step: 580 / 819 Loss: 85.47040557861328 Tokens per Sec: 25342.49177577202
Epoch Step: 585 / 819 Loss: 58.73677062988281 Tokens per Sec: 26756.257041889618
Epoch Step: 590 / 819 Loss: 61.576629638671875 Tokens per Sec: 25423.890801517657
Epoch Step: 595 / 819 Loss: 58.539485931396484 Tokens per Sec: 23053.67390609219
Epoch Step: 600 / 819 Loss: 41.783138275146484 Tokens per Sec: 25680.56151289936
Epoch Step: 605 / 819 Loss: 78.85919952392578 Tokens per Sec: 26285.4472776134
Epoch Step: 610 / 819 Loss: 53.88673782348633 Tokens per Sec: 24628.46031290384
Epoch Step: 615 / 819 Loss: 84.53229522705078 Tokens per Sec: 28114.813192632642
Epoch Step: 620 / 819 Loss: 90.53221893310547 Tokens per Sec: 28794.43371537199
Epoch Step: 625 / 819 Loss: 53.51889419555664 Tokens per Sec: 24822.044100733976
Epoch Step: 630 / 819 Loss: 89.1156005859375 Tokens per Sec: 26093.205337648607
Epoch Step: 635 / 819 Loss: 89.04658508300781 Tokens per Sec: 27617.27721570003
Epoch Step: 640 / 819 Loss: 77.36017608642578 Tokens per Sec: 25674.88709128813
Epoch Step: 645 / 819 Loss: 71.27645874023438 Tokens per Sec: 25937.63247619209
Epoch Step: 650 / 819 Loss: 71.82308197021484 Tokens per Sec: 23914.473474062517
Epoch Step: 655 / 819 Loss: 63.678070068359375 Tokens per Sec: 27775.01930634045
Epoch Step: 660 / 819 Loss: 50.605979919433594 Tokens per Sec: 27573.16310839174
Epoch Step: 665 / 819 Loss: 62.171043395996094 Tokens per Sec: 26292.07759553035
Epoch Step: 670 / 819 Loss: 71.07929229736328 Tokens per Sec: 29901.19481904523
Epoch Step: 675 / 819 Loss: 61.34768295288086 Tokens per Sec: 25272.43924537981
Epoch Step: 680 / 819 Loss: 68.49734497070312 Tokens per Sec: 27184.652900226072
Epoch Step: 685 / 819 Loss: 76.1595687866211 Tokens per Sec: 26132.81638312336
Epoch Step: 690 / 819 Loss: 66.27085876464844 Tokens per Sec: 26379.6159382191
Epoch Step: 695 / 819 Loss: 50.207305908203125 Tokens per Sec: 26952.30758458328
Epoch Step: 700 / 819 Loss: 53.41753387451172 Tokens per Sec: 25818.675338450255
Epoch Step: 705 / 819 Loss: 82.29885864257812 Tokens per Sec: 28857.28688452543
Epoch Step: 710 / 819 Loss: 56.03232192993164 Tokens per Sec: 28613.85096392863
Epoch Step: 715 / 819 Loss: 74.8781509399414 Tokens per Sec: 27762.078623202986
Epoch Step: 720 / 819 Loss: 56.44690704345703 Tokens per Sec: 26522.951338740262
Epoch Step: 725 / 819 Loss: 41.117393493652344 Tokens per Sec: 28782.393430225322
Epoch Step: 730 / 819 Loss: 50.2713623046875 Tokens per Sec: 24670.561188716158
Epoch Step: 735 / 819 Loss: 76.30242156982422 Tokens per Sec: 23006.28141504926
Epoch Step: 740 / 819 Loss: 63.63417434692383 Tokens per Sec: 24786.00385668965
Epoch Step: 745 / 819 Loss: 60.14224624633789 Tokens per Sec: 28214.140360807316
Epoch Step: 750 / 819 Loss: 76.24111938476562 Tokens per Sec: 27134.229478284335
Epoch Step: 755 / 819 Loss: 59.08025360107422 Tokens per Sec: 26353.108675448144
Epoch Step: 760 / 819 Loss: 43.797672271728516 Tokens per Sec: 25924.12572331311
Epoch Step: 765 / 819 Loss: 63.839630126953125 Tokens per Sec: 25723.59661832718
Epoch Step: 770 / 819 Loss: 89.48435974121094 Tokens per Sec: 29034.753359988677
Epoch Step: 775 / 819 Loss: 42.36524200439453 Tokens per Sec: 27513.803393221406
Epoch Step: 780 / 819 Loss: 76.70958709716797 Tokens per Sec: 24916.328281925773
Epoch Step: 785 / 819 Loss: 85.75110626220703 Tokens per Sec: 24586.227117195216
Epoch Step: 790 / 819 Loss: 71.08342742919922 Tokens per Sec: 27610.274068388153
Epoch Step: 795 / 819 Loss: 57.32860565185547 Tokens per Sec: 25334.08515097551
Epoch Step: 800 / 819 Loss: 313.75408935546875 Tokens per Sec: 26963.930712527614
Epoch Step: 805 / 819 Loss: 76.78359985351562 Tokens per Sec: 24378.967463186138
Epoch Step: 810 / 819 Loss: 67.713134765625 Tokens per Sec: 21152.945522680184
Epoch Step: 815 / 819 Loss: 83.26061248779297 Tokens per Sec: 25372.302719029038
Epoch ended with duration 0:02:26.199935
Train perplexity: 3.667921703053455
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) . METHOD_3 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = 0 ; VAR_3 . METHOD_4 ( VAR_5 ) ; if ( VAR_3 . METHOD_4 ( ) ) VAR_1 . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( new TYPE_5 ( new TYPE_5 ( new , ( new TYPE_4 ( new , ( new TYPE_4 ( new , ( ( new TYPE_4 , ( ( VAR_1 , VAR_1 , VAR_3 ) ) ) ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String , java.lang.String name ) { VAR_1 . info ( ( STRING_1 + STRING_1 ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . toString ( STRING_2 ) ) . add ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . METHOD_5 ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.121379
Validation perplexity: 2.6868931292131326
Model saved best_on_validation!
Epoch 4 / 1000
Epoch Step: 5 / 819 Loss: 74.33750915527344 Tokens per Sec: 25985.729743762906
Epoch Step: 10 / 819 Loss: 48.7537956237793 Tokens per Sec: 28625.70549098699
Epoch Step: 15 / 819 Loss: 71.58518981933594 Tokens per Sec: 28217.06685789016
Epoch Step: 20 / 819 Loss: 67.54090118408203 Tokens per Sec: 26335.09158882493
Epoch Step: 25 / 819 Loss: 61.33708953857422 Tokens per Sec: 27382.514197937915
Epoch Step: 30 / 819 Loss: 41.829078674316406 Tokens per Sec: 25911.093279279237
Epoch Step: 35 / 819 Loss: 65.63966369628906 Tokens per Sec: 27594.77153602264
Epoch Step: 40 / 819 Loss: 49.628448486328125 Tokens per Sec: 27209.736494476794
Epoch Step: 45 / 819 Loss: 84.03911590576172 Tokens per Sec: 28233.550921399947
Epoch Step: 50 / 819 Loss: 59.28412628173828 Tokens per Sec: 26015.73061917175
Epoch Step: 55 / 819 Loss: 64.50426483154297 Tokens per Sec: 26659.157074409657
Epoch Step: 60 / 819 Loss: 58.20958709716797 Tokens per Sec: 27640.312742883445
Epoch Step: 65 / 819 Loss: 53.78030014038086 Tokens per Sec: 26834.402609118362
Epoch Step: 70 / 819 Loss: 60.309757232666016 Tokens per Sec: 28603.304639235637
Epoch Step: 75 / 819 Loss: 57.64897155761719 Tokens per Sec: 26573.578457513227
Epoch Step: 80 / 819 Loss: 57.6136589050293 Tokens per Sec: 26405.334557900154
Epoch Step: 85 / 819 Loss: 46.79555892944336 Tokens per Sec: 26133.28437326582
Epoch Step: 90 / 819 Loss: 51.12609100341797 Tokens per Sec: 26002.730325035805
Epoch Step: 95 / 819 Loss: 48.89946365356445 Tokens per Sec: 25445.998108283915
Epoch Step: 100 / 819 Loss: 335.9499816894531 Tokens per Sec: 23941.240372244087
Epoch Step: 105 / 819 Loss: 60.59525680541992 Tokens per Sec: 23273.84730778896
Epoch Step: 110 / 819 Loss: 65.04348754882812 Tokens per Sec: 26045.544546266887
Epoch Step: 115 / 819 Loss: 60.010562896728516 Tokens per Sec: 27860.7817530415
Epoch Step: 120 / 819 Loss: 53.63436508178711 Tokens per Sec: 25674.489075658337
Epoch Step: 125 / 819 Loss: 60.698516845703125 Tokens per Sec: 26433.800781390015
Epoch Step: 130 / 819 Loss: 57.95758056640625 Tokens per Sec: 24894.214232083268
Epoch Step: 135 / 819 Loss: 62.92018508911133 Tokens per Sec: 29140.45822525433
Epoch Step: 140 / 819 Loss: 38.75069046020508 Tokens per Sec: 26759.455756038704
Epoch Step: 145 / 819 Loss: 54.01737976074219 Tokens per Sec: 29482.3325796314
Epoch Step: 150 / 819 Loss: 64.8905029296875 Tokens per Sec: 26684.57744609425
Epoch Step: 155 / 819 Loss: 55.63670349121094 Tokens per Sec: 28126.405441330728
Epoch Step: 160 / 819 Loss: 60.166316986083984 Tokens per Sec: 26687.965892888387
Epoch Step: 165 / 819 Loss: 55.93290710449219 Tokens per Sec: 26921.172708165195
Epoch Step: 170 / 819 Loss: 59.54115295410156 Tokens per Sec: 26603.862537585755
Epoch Step: 175 / 819 Loss: 340.2970275878906 Tokens per Sec: 25849.83934969219
Epoch Step: 180 / 819 Loss: 44.37073516845703 Tokens per Sec: 27417.733399865843
Epoch Step: 185 / 819 Loss: 61.026878356933594 Tokens per Sec: 27707.507973154618
Epoch Step: 190 / 819 Loss: 75.0725326538086 Tokens per Sec: 28288.293944171834
Epoch Step: 195 / 819 Loss: 69.44863891601562 Tokens per Sec: 23889.254145322262
Epoch Step: 200 / 819 Loss: 59.2326545715332 Tokens per Sec: 27011.57328847729
Epoch Step: 205 / 819 Loss: 65.96160125732422 Tokens per Sec: 26019.16879336277
Epoch Step: 210 / 819 Loss: 55.06818771362305 Tokens per Sec: 24340.673153399253
Epoch Step: 215 / 819 Loss: 327.71917724609375 Tokens per Sec: 26477.925044894477
Epoch Step: 220 / 819 Loss: 70.8072280883789 Tokens per Sec: 25364.406922420138
Epoch Step: 225 / 819 Loss: 46.31962585449219 Tokens per Sec: 27964.294105041816
Epoch Step: 230 / 819 Loss: 55.03110122680664 Tokens per Sec: 26360.461694014833
Epoch Step: 235 / 819 Loss: 43.78928756713867 Tokens per Sec: 28063.62959149064
Epoch Step: 240 / 819 Loss: 52.777652740478516 Tokens per Sec: 26074.99564682917
Epoch Step: 245 / 819 Loss: 50.844261169433594 Tokens per Sec: 27969.870397117644
Epoch Step: 250 / 819 Loss: 58.12964630126953 Tokens per Sec: 27897.848902237936
Epoch Step: 255 / 819 Loss: 40.41349792480469 Tokens per Sec: 25645.170627277457
Epoch Step: 260 / 819 Loss: 67.67838287353516 Tokens per Sec: 27192.18165702509
Epoch Step: 265 / 819 Loss: 50.589298248291016 Tokens per Sec: 26313.67947381186
Epoch Step: 270 / 819 Loss: 74.00666046142578 Tokens per Sec: 29122.3613783633
Epoch Step: 275 / 819 Loss: 57.63069534301758 Tokens per Sec: 27982.718309686585
Epoch Step: 280 / 819 Loss: 47.72850799560547 Tokens per Sec: 26935.756122862887
Epoch Step: 285 / 819 Loss: 245.00657653808594 Tokens per Sec: 25969.285652169146
Epoch Step: 290 / 819 Loss: 58.252437591552734 Tokens per Sec: 26788.378095922366
Epoch Step: 295 / 819 Loss: 69.75233459472656 Tokens per Sec: 26160.026330224904
Epoch Step: 300 / 819 Loss: 44.59469985961914 Tokens per Sec: 25771.945509341393
Epoch Step: 305 / 819 Loss: 47.42839813232422 Tokens per Sec: 27159.565410916763
Epoch Step: 310 / 819 Loss: 37.64494323730469 Tokens per Sec: 28138.292131592396
Epoch Step: 315 / 819 Loss: 61.028778076171875 Tokens per Sec: 27519.690027031782
Epoch Step: 320 / 819 Loss: 71.04054260253906 Tokens per Sec: 24559.7215587525
Epoch Step: 325 / 819 Loss: 59.74503707885742 Tokens per Sec: 24958.3527130951
Epoch Step: 330 / 819 Loss: 54.73996353149414 Tokens per Sec: 27042.958571022173
Epoch Step: 335 / 819 Loss: 53.196136474609375 Tokens per Sec: 22636.20096532231
Epoch Step: 340 / 819 Loss: 47.6927604675293 Tokens per Sec: 27441.557282049904
Epoch Step: 345 / 819 Loss: 42.531288146972656 Tokens per Sec: 25077.586415900587
Epoch Step: 350 / 819 Loss: 51.82632064819336 Tokens per Sec: 27945.14548356573
Epoch Step: 355 / 819 Loss: 66.8757095336914 Tokens per Sec: 29073.761759576275
Epoch Step: 360 / 819 Loss: 283.32476806640625 Tokens per Sec: 26359.826998101373
Epoch Step: 365 / 819 Loss: 37.67479705810547 Tokens per Sec: 29205.54489555771
Epoch Step: 370 / 819 Loss: 52.248374938964844 Tokens per Sec: 26613.825686632852
Epoch Step: 375 / 819 Loss: 59.39257049560547 Tokens per Sec: 26401.310184355825
Epoch Step: 380 / 819 Loss: 257.7712707519531 Tokens per Sec: 28490.530378709427
Epoch Step: 385 / 819 Loss: 39.93962860107422 Tokens per Sec: 26992.251443452107
Epoch Step: 390 / 819 Loss: 60.30644607543945 Tokens per Sec: 26108.305406282543
Epoch Step: 395 / 819 Loss: 60.15811538696289 Tokens per Sec: 27519.1886344167
Epoch Step: 400 / 819 Loss: 60.8231201171875 Tokens per Sec: 26756.153538123137
Epoch Step: 405 / 819 Loss: 38.05955505371094 Tokens per Sec: 25386.962800323654
Epoch Step: 410 / 819 Loss: 322.2489929199219 Tokens per Sec: 26353.040708244036
Epoch Step: 415 / 819 Loss: 59.6685676574707 Tokens per Sec: 26670.270151043835
Epoch Step: 420 / 819 Loss: 43.40238571166992 Tokens per Sec: 29325.586707464383
Epoch Step: 425 / 819 Loss: 45.06528854370117 Tokens per Sec: 25039.398142085895
Epoch Step: 430 / 819 Loss: 42.76830291748047 Tokens per Sec: 28893.185189020358
Epoch Step: 435 / 819 Loss: 52.13494873046875 Tokens per Sec: 27051.531241829296
Epoch Step: 440 / 819 Loss: 61.5621337890625 Tokens per Sec: 27729.75254224874
Epoch Step: 445 / 819 Loss: 36.74203872680664 Tokens per Sec: 27812.19005858379
Epoch Step: 450 / 819 Loss: 64.16606140136719 Tokens per Sec: 25729.578314885282
Epoch Step: 455 / 819 Loss: 38.36552810668945 Tokens per Sec: 26961.664682701114
Epoch Step: 460 / 819 Loss: 68.88101196289062 Tokens per Sec: 28300.847906224823
Epoch Step: 465 / 819 Loss: 61.60933303833008 Tokens per Sec: 26614.280144616776
Epoch Step: 470 / 819 Loss: 42.672122955322266 Tokens per Sec: 25555.88670592027
Epoch Step: 475 / 819 Loss: 227.17745971679688 Tokens per Sec: 28119.491063698628
Epoch Step: 480 / 819 Loss: 48.947330474853516 Tokens per Sec: 25138.535659025456
Epoch Step: 485 / 819 Loss: 39.23346710205078 Tokens per Sec: 25392.055082133982
Epoch Step: 490 / 819 Loss: 55.51704406738281 Tokens per Sec: 26631.975036207437
Epoch Step: 495 / 819 Loss: 30.215173721313477 Tokens per Sec: 27616.052580051186
Epoch Step: 500 / 819 Loss: 32.484642028808594 Tokens per Sec: 27247.150128771777
Epoch Step: 505 / 819 Loss: 35.16659927368164 Tokens per Sec: 27073.955122540334
Epoch Step: 510 / 819 Loss: 61.546470642089844 Tokens per Sec: 28737.682848723376
Epoch Step: 515 / 819 Loss: 58.383155822753906 Tokens per Sec: 28576.436799879626
Epoch Step: 520 / 819 Loss: 41.06444549560547 Tokens per Sec: 25870.77501886395
Epoch Step: 525 / 819 Loss: 56.401573181152344 Tokens per Sec: 27567.394013068788
Epoch Step: 530 / 819 Loss: 53.17856979370117 Tokens per Sec: 26302.62409090061
Epoch Step: 535 / 819 Loss: 45.12593460083008 Tokens per Sec: 25965.522543924915
Epoch Step: 540 / 819 Loss: 323.3372802734375 Tokens per Sec: 26737.34069351495
Epoch Step: 545 / 819 Loss: 58.382144927978516 Tokens per Sec: 24232.99153121517
Epoch Step: 550 / 819 Loss: 51.29905700683594 Tokens per Sec: 24621.642929341266
Epoch Step: 555 / 819 Loss: 47.3789176940918 Tokens per Sec: 26166.465858649783
Epoch Step: 560 / 819 Loss: 54.047401428222656 Tokens per Sec: 25837.01027925679
Epoch Step: 565 / 819 Loss: 60.578365325927734 Tokens per Sec: 27029.051623889725
Epoch Step: 570 / 819 Loss: 56.62991714477539 Tokens per Sec: 26958.378834755767
Epoch Step: 575 / 819 Loss: 65.4743881225586 Tokens per Sec: 25222.496287508216
Epoch Step: 580 / 819 Loss: 44.412654876708984 Tokens per Sec: 25656.525108024034
Epoch Step: 585 / 819 Loss: 30.556278228759766 Tokens per Sec: 24490.26101119203
Epoch Step: 590 / 819 Loss: 325.5489196777344 Tokens per Sec: 27858.9022529035
Epoch Step: 595 / 819 Loss: 306.3106994628906 Tokens per Sec: 26699.19223083288
Epoch Step: 600 / 819 Loss: 70.84385681152344 Tokens per Sec: 26268.386236288115
Epoch Step: 605 / 819 Loss: 39.47820281982422 Tokens per Sec: 24735.85111956476
Epoch Step: 610 / 819 Loss: 57.86977767944336 Tokens per Sec: 27408.251596586055
Epoch Step: 615 / 819 Loss: 68.42515563964844 Tokens per Sec: 24587.264860495605
Epoch Step: 620 / 819 Loss: 43.76601791381836 Tokens per Sec: 26112.20215999744
Epoch Step: 625 / 819 Loss: 61.253807067871094 Tokens per Sec: 26481.696292272278
Epoch Step: 630 / 819 Loss: 56.206031799316406 Tokens per Sec: 25379.059078198177
Epoch Step: 635 / 819 Loss: 190.53964233398438 Tokens per Sec: 27270.056060891297
Epoch Step: 640 / 819 Loss: 62.332149505615234 Tokens per Sec: 26279.587720377374
Epoch Step: 645 / 819 Loss: 62.34165573120117 Tokens per Sec: 27923.71975869445
Epoch Step: 650 / 819 Loss: 43.54438018798828 Tokens per Sec: 27564.265186895755
Epoch Step: 655 / 819 Loss: 32.505821228027344 Tokens per Sec: 30044.200726207364
Epoch Step: 660 / 819 Loss: 47.369964599609375 Tokens per Sec: 27011.795707746325
Epoch Step: 665 / 819 Loss: 45.511348724365234 Tokens per Sec: 29170.807976136522
Epoch Step: 670 / 819 Loss: 57.420127868652344 Tokens per Sec: 26034.69890066597
Epoch Step: 675 / 819 Loss: 53.35513687133789 Tokens per Sec: 27780.72822620414
Epoch Step: 680 / 819 Loss: 47.66856384277344 Tokens per Sec: 26717.998001948334
Epoch Step: 685 / 819 Loss: 56.21712875366211 Tokens per Sec: 27957.86874187146
Epoch Step: 690 / 819 Loss: 54.34103012084961 Tokens per Sec: 25793.006025644
Epoch Step: 695 / 819 Loss: 35.43627166748047 Tokens per Sec: 27130.396115048738
Epoch Step: 700 / 819 Loss: 219.9498291015625 Tokens per Sec: 25596.614440770878
Epoch Step: 705 / 819 Loss: 56.90447235107422 Tokens per Sec: 27728.2245121819
Epoch Step: 710 / 819 Loss: 41.056907653808594 Tokens per Sec: 25622.60504023772
Epoch Step: 715 / 819 Loss: 48.70494842529297 Tokens per Sec: 27917.97633414596
Epoch Step: 720 / 819 Loss: 56.38225173950195 Tokens per Sec: 26752.150401773175
Epoch Step: 725 / 819 Loss: 60.744564056396484 Tokens per Sec: 27587.95019919137
Epoch Step: 730 / 819 Loss: 47.945213317871094 Tokens per Sec: 27877.997127414586
Epoch Step: 735 / 819 Loss: 47.71257400512695 Tokens per Sec: 25426.590486458696
Epoch Step: 740 / 819 Loss: 44.09678649902344 Tokens per Sec: 24882.912182566623
Epoch Step: 745 / 819 Loss: 43.75579071044922 Tokens per Sec: 26588.29793977813
Epoch Step: 750 / 819 Loss: 58.86466598510742 Tokens per Sec: 25052.092765052348
Epoch Step: 755 / 819 Loss: 63.877288818359375 Tokens per Sec: 26269.42340189421
Epoch Step: 760 / 819 Loss: 36.02492141723633 Tokens per Sec: 24637.379970746293
Epoch Step: 765 / 819 Loss: 58.700008392333984 Tokens per Sec: 26827.730841510118
Epoch Step: 770 / 819 Loss: 47.430389404296875 Tokens per Sec: 27252.356681144258
Epoch Step: 775 / 819 Loss: 54.35246658325195 Tokens per Sec: 26033.83629225956
Epoch Step: 780 / 819 Loss: 278.37945556640625 Tokens per Sec: 26377.13652892987
Epoch Step: 785 / 819 Loss: 34.74183654785156 Tokens per Sec: 28264.087838164036
Epoch Step: 790 / 819 Loss: 44.66276931762695 Tokens per Sec: 27991.975728303372
Epoch Step: 795 / 819 Loss: 57.51969528198242 Tokens per Sec: 28938.545660765078
Epoch Step: 800 / 819 Loss: 48.78044891357422 Tokens per Sec: 26537.814723482355
Epoch Step: 805 / 819 Loss: 38.16007614135742 Tokens per Sec: 25703.615884045958
Epoch Step: 810 / 819 Loss: 43.31037521362305 Tokens per Sec: 21076.014749655515
Epoch Step: 815 / 819 Loss: 43.909542083740234 Tokens per Sec: 25163.585885038192
Epoch ended with duration 0:02:25.850215
Train perplexity: 2.7194412064188374
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) . METHOD_3 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; if ( ( VAR_3 . ) ( ) ) ( VAR_3 . ) . ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new , ( new TYPE_4 ( new TYPE_5 ( new , ( new TYPE_4 ( new , ( new TYPE_4 ( new , ( new TYPE_4 ( new , ( new TYPE_4 ( new , ( new TYPE_4 ( new TYPE_5 ( new , ( new TYPE_4 ( new TYPE_5 ( new , ( new TYPE_4 ( new[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String key , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + STRING_1 ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . get ( STRING_2 , ( ( STRING_2 ) ) . ) ( ) ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.132438
Validation perplexity: 2.513601193951455
Model saved best_on_validation!
Epoch 5 / 1000
Epoch Step: 5 / 819 Loss: 54.820682525634766 Tokens per Sec: 26189.83123999059
Epoch Step: 10 / 819 Loss: 57.891998291015625 Tokens per Sec: 26856.051622086925
Epoch Step: 15 / 819 Loss: 55.707496643066406 Tokens per Sec: 27855.614520988143
Epoch Step: 20 / 819 Loss: 44.13592529296875 Tokens per Sec: 25879.719641466614
Epoch Step: 25 / 819 Loss: 249.8780517578125 Tokens per Sec: 25534.44001794404
Epoch Step: 30 / 819 Loss: 57.15927505493164 Tokens per Sec: 27034.47263265442
Epoch Step: 35 / 819 Loss: 42.441864013671875 Tokens per Sec: 23272.19745488703
Epoch Step: 40 / 819 Loss: 58.2852668762207 Tokens per Sec: 24620.594078748756
Epoch Step: 45 / 819 Loss: 42.05913543701172 Tokens per Sec: 26852.240329232405
Epoch Step: 50 / 819 Loss: 42.78289031982422 Tokens per Sec: 26642.28161997348
Epoch Step: 55 / 819 Loss: 39.412052154541016 Tokens per Sec: 28154.874869260435
Epoch Step: 60 / 819 Loss: 242.9084014892578 Tokens per Sec: 25854.731392298258
Epoch Step: 65 / 819 Loss: 43.462074279785156 Tokens per Sec: 24999.477791017704
Epoch Step: 70 / 819 Loss: 333.52142333984375 Tokens per Sec: 27092.68496136962
Epoch Step: 75 / 819 Loss: 41.35433578491211 Tokens per Sec: 29102.154513596903
Epoch Step: 80 / 819 Loss: 50.2459831237793 Tokens per Sec: 27078.041561705533
Epoch Step: 85 / 819 Loss: 50.17372131347656 Tokens per Sec: 29325.267288703686
Epoch Step: 90 / 819 Loss: 49.50947952270508 Tokens per Sec: 25043.814772990623
Epoch Step: 95 / 819 Loss: 28.497167587280273 Tokens per Sec: 29948.942730909104
Epoch Step: 100 / 819 Loss: 53.34590148925781 Tokens per Sec: 25099.375040578023
Epoch Step: 105 / 819 Loss: 51.607120513916016 Tokens per Sec: 25676.7128782603
Epoch Step: 110 / 819 Loss: 33.21674728393555 Tokens per Sec: 26461.501731049382
Epoch Step: 115 / 819 Loss: 34.60686492919922 Tokens per Sec: 28173.135603484443
Epoch Step: 120 / 819 Loss: 40.37522506713867 Tokens per Sec: 26261.024336167804
Epoch Step: 125 / 819 Loss: 32.73225784301758 Tokens per Sec: 28751.760847945792
Epoch Step: 130 / 819 Loss: 54.78303146362305 Tokens per Sec: 28319.17236374666
Epoch Step: 135 / 819 Loss: 328.8566589355469 Tokens per Sec: 27163.204859650272
Epoch Step: 140 / 819 Loss: 60.60918426513672 Tokens per Sec: 27971.023631163232
Epoch Step: 145 / 819 Loss: 53.11531066894531 Tokens per Sec: 26382.06046046757
Epoch Step: 150 / 819 Loss: 52.49483108520508 Tokens per Sec: 25508.469519386224
Epoch Step: 155 / 819 Loss: 56.080780029296875 Tokens per Sec: 25115.99845733091
Epoch Step: 160 / 819 Loss: 29.60011863708496 Tokens per Sec: 27151.13376101685
Epoch Step: 165 / 819 Loss: 37.24095916748047 Tokens per Sec: 26755.81440580905
Epoch Step: 170 / 819 Loss: 35.84690475463867 Tokens per Sec: 27847.63189571989
Epoch Step: 175 / 819 Loss: 37.20332717895508 Tokens per Sec: 25746.35782497515
Epoch Step: 180 / 819 Loss: 42.126731872558594 Tokens per Sec: 24458.347891167923
Epoch Step: 185 / 819 Loss: 50.22675323486328 Tokens per Sec: 25105.48566829427
Epoch Step: 190 / 819 Loss: 52.32331466674805 Tokens per Sec: 24257.22262991019
Epoch Step: 195 / 819 Loss: 48.23113250732422 Tokens per Sec: 26390.75645985041
Epoch Step: 200 / 819 Loss: 56.774600982666016 Tokens per Sec: 28363.808597478983
Epoch Step: 205 / 819 Loss: 45.439964294433594 Tokens per Sec: 25037.121233729034
Epoch Step: 210 / 819 Loss: 35.875526428222656 Tokens per Sec: 26255.309885985378
Epoch Step: 215 / 819 Loss: 50.58867263793945 Tokens per Sec: 23090.51739133898
Epoch Step: 220 / 819 Loss: 49.668479919433594 Tokens per Sec: 27722.335657606873
Epoch Step: 225 / 819 Loss: 33.587703704833984 Tokens per Sec: 24770.36591525761
Epoch Step: 230 / 819 Loss: 43.067626953125 Tokens per Sec: 29568.153354973692
Epoch Step: 235 / 819 Loss: 40.48971176147461 Tokens per Sec: 24365.961993760262
Epoch Step: 240 / 819 Loss: 30.213451385498047 Tokens per Sec: 28007.000750546697
Epoch Step: 245 / 819 Loss: 52.0389518737793 Tokens per Sec: 27257.05746928277
Epoch Step: 250 / 819 Loss: 263.0311279296875 Tokens per Sec: 26806.373151789052
Epoch Step: 255 / 819 Loss: 47.997100830078125 Tokens per Sec: 26760.295162032347
Epoch Step: 260 / 819 Loss: 42.82589340209961 Tokens per Sec: 27951.90891304571
Epoch Step: 265 / 819 Loss: 59.009517669677734 Tokens per Sec: 28664.424025820448
Epoch Step: 270 / 819 Loss: 36.33576583862305 Tokens per Sec: 28281.15749237487
Epoch Step: 275 / 819 Loss: 53.591304779052734 Tokens per Sec: 28094.49298946296
Epoch Step: 280 / 819 Loss: 51.39237976074219 Tokens per Sec: 27633.983047021797
Epoch Step: 285 / 819 Loss: 31.92613410949707 Tokens per Sec: 24843.710573189142
Epoch Step: 290 / 819 Loss: 54.075382232666016 Tokens per Sec: 26703.1212451339
Epoch Step: 295 / 819 Loss: 317.9597473144531 Tokens per Sec: 26491.00921694225
Epoch Step: 300 / 819 Loss: 49.28862762451172 Tokens per Sec: 25607.4355672628
Epoch Step: 305 / 819 Loss: 53.219764709472656 Tokens per Sec: 25665.552909901544
Epoch Step: 310 / 819 Loss: 53.584930419921875 Tokens per Sec: 27814.652598712833
Epoch Step: 315 / 819 Loss: 51.535972595214844 Tokens per Sec: 26897.372161269624
Epoch Step: 320 / 819 Loss: 46.76838684082031 Tokens per Sec: 27535.154046935677
Epoch Step: 325 / 819 Loss: 47.10008239746094 Tokens per Sec: 27182.58986473403
Epoch Step: 330 / 819 Loss: 59.63192367553711 Tokens per Sec: 26237.172371380737
Epoch Step: 335 / 819 Loss: 50.58866500854492 Tokens per Sec: 25561.795910612364
Epoch Step: 340 / 819 Loss: 58.49934768676758 Tokens per Sec: 27150.88703072245
Epoch Step: 345 / 819 Loss: 41.41969299316406 Tokens per Sec: 26278.638036796736
Epoch Step: 350 / 819 Loss: 41.8607292175293 Tokens per Sec: 26243.194616315122
Epoch Step: 355 / 819 Loss: 307.0562744140625 Tokens per Sec: 25844.8415404726
Epoch Step: 360 / 819 Loss: 37.15281677246094 Tokens per Sec: 25521.132488412626
Epoch Step: 365 / 819 Loss: 320.5835876464844 Tokens per Sec: 26764.041491239055
Epoch Step: 370 / 819 Loss: 57.71601486206055 Tokens per Sec: 27937.336298701906
Epoch Step: 375 / 819 Loss: 50.16488265991211 Tokens per Sec: 24199.3954972588
Epoch Step: 380 / 819 Loss: 48.38070297241211 Tokens per Sec: 29137.91379557242
Epoch Step: 385 / 819 Loss: 49.62224197387695 Tokens per Sec: 29361.857235818516
Epoch Step: 390 / 819 Loss: 40.61708450317383 Tokens per Sec: 22387.572417398325
Epoch Step: 395 / 819 Loss: 54.86536407470703 Tokens per Sec: 26421.036628646594
Epoch Step: 400 / 819 Loss: 29.3900146484375 Tokens per Sec: 27428.429496068886
Epoch Step: 405 / 819 Loss: 49.450828552246094 Tokens per Sec: 28015.44799601609
Epoch Step: 410 / 819 Loss: 41.98542022705078 Tokens per Sec: 27845.82512779057
Epoch Step: 415 / 819 Loss: 50.72932052612305 Tokens per Sec: 27254.38545536165
Epoch Step: 420 / 819 Loss: 222.15830993652344 Tokens per Sec: 25576.10851871948
Epoch Step: 425 / 819 Loss: 41.78977966308594 Tokens per Sec: 27839.39828520745
Epoch Step: 430 / 819 Loss: 52.43400955200195 Tokens per Sec: 25412.940668729694
Epoch Step: 435 / 819 Loss: 35.483543395996094 Tokens per Sec: 25053.91936642989
Epoch Step: 440 / 819 Loss: 38.1737060546875 Tokens per Sec: 25633.832428265796
Epoch Step: 445 / 819 Loss: 29.576881408691406 Tokens per Sec: 27413.930707676802
Epoch Step: 450 / 819 Loss: 49.50367736816406 Tokens per Sec: 25975.392958557648
Epoch Step: 455 / 819 Loss: 35.7912483215332 Tokens per Sec: 26971.32902798405
Epoch Step: 460 / 819 Loss: 52.244895935058594 Tokens per Sec: 26186.770011460336
Epoch Step: 465 / 819 Loss: 46.679256439208984 Tokens per Sec: 26830.770225908276
Epoch Step: 470 / 819 Loss: 50.508487701416016 Tokens per Sec: 25394.1844331763
Epoch Step: 475 / 819 Loss: 54.06634521484375 Tokens per Sec: 27034.69972641007
Epoch Step: 480 / 819 Loss: 47.728031158447266 Tokens per Sec: 29424.770465881797
Epoch Step: 485 / 819 Loss: 53.695640563964844 Tokens per Sec: 24342.220512588538
Epoch Step: 490 / 819 Loss: 52.72095489501953 Tokens per Sec: 26141.602607367025
Epoch Step: 495 / 819 Loss: 55.715431213378906 Tokens per Sec: 26697.300769657515
Epoch Step: 500 / 819 Loss: 44.507198333740234 Tokens per Sec: 25145.292891849895
Epoch Step: 505 / 819 Loss: 46.61589431762695 Tokens per Sec: 26617.2439442067
Epoch Step: 510 / 819 Loss: 46.666236877441406 Tokens per Sec: 26031.825814008276
Epoch Step: 515 / 819 Loss: 48.47679901123047 Tokens per Sec: 29524.181344449014
Epoch Step: 520 / 819 Loss: 40.2297477722168 Tokens per Sec: 26099.802645747506
Epoch Step: 525 / 819 Loss: 31.918611526489258 Tokens per Sec: 29217.386372766894
Epoch Step: 530 / 819 Loss: 37.595436096191406 Tokens per Sec: 27330.807415248895
Epoch Step: 535 / 819 Loss: 42.530391693115234 Tokens per Sec: 27955.417474448695
Epoch Step: 540 / 819 Loss: 46.84816360473633 Tokens per Sec: 26534.158908826128
Epoch Step: 545 / 819 Loss: 32.91891860961914 Tokens per Sec: 26952.74625586541
Epoch Step: 550 / 819 Loss: 51.01504898071289 Tokens per Sec: 24903.580341802273
Epoch Step: 555 / 819 Loss: 33.125911712646484 Tokens per Sec: 25884.973177891796
Epoch Step: 560 / 819 Loss: 33.332481384277344 Tokens per Sec: 24625.948972325692
Epoch Step: 565 / 819 Loss: 36.404136657714844 Tokens per Sec: 26455.630496577123
Epoch Step: 570 / 819 Loss: 42.88196563720703 Tokens per Sec: 27727.035999383257
Epoch Step: 575 / 819 Loss: 47.521690368652344 Tokens per Sec: 26762.521102834387
Epoch Step: 580 / 819 Loss: 307.0656433105469 Tokens per Sec: 26028.76388352796
Epoch Step: 585 / 819 Loss: 48.693355560302734 Tokens per Sec: 24876.46453332388
Epoch Step: 590 / 819 Loss: 47.23973083496094 Tokens per Sec: 27578.774023102145
Epoch Step: 595 / 819 Loss: 36.63172149658203 Tokens per Sec: 28697.91222011531
Epoch Step: 600 / 819 Loss: 302.1024169921875 Tokens per Sec: 26061.545236386613
Epoch Step: 605 / 819 Loss: 51.30754470825195 Tokens per Sec: 26781.746518843604
Epoch Step: 610 / 819 Loss: 46.81443786621094 Tokens per Sec: 27304.011649815933
Epoch Step: 615 / 819 Loss: 42.10087966918945 Tokens per Sec: 25973.499427746632
Epoch Step: 620 / 819 Loss: 45.17103576660156 Tokens per Sec: 27606.52016716755
Epoch Step: 625 / 819 Loss: 37.26272201538086 Tokens per Sec: 23048.559370789866
Epoch Step: 630 / 819 Loss: 47.789024353027344 Tokens per Sec: 27495.605206964803
Epoch Step: 635 / 819 Loss: 31.51579475402832 Tokens per Sec: 26880.12931134183
Epoch Step: 640 / 819 Loss: 31.10051155090332 Tokens per Sec: 27484.49313696296
Epoch Step: 645 / 819 Loss: 231.28883361816406 Tokens per Sec: 25495.92497676775
Epoch Step: 650 / 819 Loss: 35.29600524902344 Tokens per Sec: 25408.278055643153
Epoch Step: 655 / 819 Loss: 38.05693054199219 Tokens per Sec: 25437.54321157822
Epoch Step: 660 / 819 Loss: 36.917545318603516 Tokens per Sec: 27239.724803355828
Epoch Step: 665 / 819 Loss: 47.83259582519531 Tokens per Sec: 28442.207912254078
Epoch Step: 670 / 819 Loss: 45.75844955444336 Tokens per Sec: 27601.079636661714
Epoch Step: 675 / 819 Loss: 29.60692024230957 Tokens per Sec: 23692.186303120452
Epoch Step: 680 / 819 Loss: 40.778404235839844 Tokens per Sec: 27686.164871306453
Epoch Step: 685 / 819 Loss: 313.4525146484375 Tokens per Sec: 29092.886195606083
Epoch Step: 690 / 819 Loss: 40.945926666259766 Tokens per Sec: 26140.911319542764
Epoch Step: 695 / 819 Loss: 38.56441116333008 Tokens per Sec: 25005.23968978078
Epoch Step: 700 / 819 Loss: 47.05933380126953 Tokens per Sec: 28449.339145527993
Epoch Step: 705 / 819 Loss: 49.14075469970703 Tokens per Sec: 27368.171705446337
Epoch Step: 710 / 819 Loss: 39.75033187866211 Tokens per Sec: 27453.477197778197
Epoch Step: 715 / 819 Loss: 28.732378005981445 Tokens per Sec: 26616.928631316976
Epoch Step: 720 / 819 Loss: 50.11811828613281 Tokens per Sec: 27552.333159720994
Epoch Step: 725 / 819 Loss: 35.43025588989258 Tokens per Sec: 26522.45687103972
Epoch Step: 730 / 819 Loss: 46.18151092529297 Tokens per Sec: 24178.394480780236
Epoch Step: 735 / 819 Loss: 27.845767974853516 Tokens per Sec: 27788.058295059203
Epoch Step: 740 / 819 Loss: 39.78681182861328 Tokens per Sec: 25993.270673958308
Epoch Step: 745 / 819 Loss: 29.122154235839844 Tokens per Sec: 26120.718894837883
Epoch Step: 750 / 819 Loss: 51.533164978027344 Tokens per Sec: 27339.022040201435
Epoch Step: 755 / 819 Loss: 45.07789611816406 Tokens per Sec: 26764.585080020097
Epoch Step: 760 / 819 Loss: 35.07152557373047 Tokens per Sec: 26739.50937317631
Epoch Step: 765 / 819 Loss: 36.579505920410156 Tokens per Sec: 25232.372735768793
Epoch Step: 770 / 819 Loss: 47.45861053466797 Tokens per Sec: 27240.4772793545
Epoch Step: 775 / 819 Loss: 249.98353576660156 Tokens per Sec: 24392.254502799668
Epoch Step: 780 / 819 Loss: 299.33544921875 Tokens per Sec: 27352.13075993929
Epoch Step: 785 / 819 Loss: 34.273075103759766 Tokens per Sec: 26335.96546531605
Epoch Step: 790 / 819 Loss: 42.261451721191406 Tokens per Sec: 27421.057325274152
Epoch Step: 795 / 819 Loss: 29.979219436645508 Tokens per Sec: 27157.390253865342
Epoch Step: 800 / 819 Loss: 40.48173522949219 Tokens per Sec: 24746.685102037904
Epoch Step: 805 / 819 Loss: 38.76890182495117 Tokens per Sec: 25171.80572732541
Epoch Step: 810 / 819 Loss: 30.732013702392578 Tokens per Sec: 23563.91537604082
Epoch Step: 815 / 819 Loss: 39.15756607055664 Tokens per Sec: 24485.91597966467
Epoch ended with duration 0:02:26.540658
Train perplexity: 2.3768575105435517
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 . = VAR_1 . METHOD_3 ( ) . show ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; if ( ( VAR_3 . ) ( ) != null ) { ) . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new ( ( ( ( ( ( ( ( ( ( ( new , ( ( ( ( new , ( ( ( ( ( ( ( ( ( ( ( ) , new , ( ) ) ) , VAR_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + ( ) ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , STRING_2 ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.125168
Validation perplexity: 2.3586061797502786
Model saved best_on_validation!
Model saved checkpoint!
Epoch 6 / 1000
Epoch Step: 5 / 819 Loss: 47.83515167236328 Tokens per Sec: 26841.703884405248
Epoch Step: 10 / 819 Loss: 34.057498931884766 Tokens per Sec: 26881.196961480488
Epoch Step: 15 / 819 Loss: 30.212024688720703 Tokens per Sec: 27285.352826143084
Epoch Step: 20 / 819 Loss: 45.5775260925293 Tokens per Sec: 26798.328657712
Epoch Step: 25 / 819 Loss: 168.2466583251953 Tokens per Sec: 26795.517861494238
Epoch Step: 30 / 819 Loss: 45.72711181640625 Tokens per Sec: 24258.828107187503
Epoch Step: 35 / 819 Loss: 27.245817184448242 Tokens per Sec: 25767.94540887671
Epoch Step: 40 / 819 Loss: 28.786848068237305 Tokens per Sec: 24978.24066610813
Epoch Step: 45 / 819 Loss: 32.55143356323242 Tokens per Sec: 26861.299229329386
Epoch Step: 50 / 819 Loss: 30.77060317993164 Tokens per Sec: 27712.351358529726
Epoch Step: 55 / 819 Loss: 36.514801025390625 Tokens per Sec: 27292.84542259936
Epoch Step: 60 / 819 Loss: 34.112388610839844 Tokens per Sec: 28013.333798450196
Epoch Step: 65 / 819 Loss: 35.18303298950195 Tokens per Sec: 27964.869914511095
Epoch Step: 70 / 819 Loss: 28.88152313232422 Tokens per Sec: 26988.85330833456
Epoch Step: 75 / 819 Loss: 31.85752296447754 Tokens per Sec: 27795.954380183077
Epoch Step: 80 / 819 Loss: 271.1446533203125 Tokens per Sec: 28117.50220482613
Epoch Step: 85 / 819 Loss: 45.368263244628906 Tokens per Sec: 26095.04461687127
Epoch Step: 90 / 819 Loss: 43.93050003051758 Tokens per Sec: 26713.126435470953
Epoch Step: 95 / 819 Loss: 51.37818145751953 Tokens per Sec: 25132.93903896847
Epoch Step: 100 / 819 Loss: 45.24863052368164 Tokens per Sec: 27376.57774558093
Epoch Step: 105 / 819 Loss: 26.6298770904541 Tokens per Sec: 26729.334549452033
Epoch Step: 110 / 819 Loss: 37.12184143066406 Tokens per Sec: 27476.38149483143
Epoch Step: 115 / 819 Loss: 25.76013946533203 Tokens per Sec: 26670.125820647107
Epoch Step: 120 / 819 Loss: 47.52085876464844 Tokens per Sec: 27359.225252050084
Epoch Step: 125 / 819 Loss: 28.78015899658203 Tokens per Sec: 25437.350512355857
Epoch Step: 130 / 819 Loss: 235.93885803222656 Tokens per Sec: 25620.585372582416
Epoch Step: 135 / 819 Loss: 26.990707397460938 Tokens per Sec: 26625.8761034403
Epoch Step: 140 / 819 Loss: 38.632747650146484 Tokens per Sec: 27269.619004712426
Epoch Step: 145 / 819 Loss: 26.534801483154297 Tokens per Sec: 27645.084983825953
Epoch Step: 150 / 819 Loss: 205.13975524902344 Tokens per Sec: 24669.064459463058
Epoch Step: 155 / 819 Loss: 37.128929138183594 Tokens per Sec: 25587.303968125987
Epoch Step: 160 / 819 Loss: 32.937042236328125 Tokens per Sec: 26731.59691956238
Epoch Step: 165 / 819 Loss: 47.01468276977539 Tokens per Sec: 28753.41128275003
Epoch Step: 170 / 819 Loss: 43.1947021484375 Tokens per Sec: 24705.323759417824
Epoch Step: 175 / 819 Loss: 51.80136489868164 Tokens per Sec: 24751.287220414717
Epoch Step: 180 / 819 Loss: 49.04679870605469 Tokens per Sec: 26193.755891918106
Epoch Step: 185 / 819 Loss: 247.29429626464844 Tokens per Sec: 25367.167591986657
Epoch Step: 190 / 819 Loss: 32.55813980102539 Tokens per Sec: 25004.76265824392
Epoch Step: 195 / 819 Loss: 37.47469711303711 Tokens per Sec: 27780.894324191766
Epoch Step: 200 / 819 Loss: 26.518144607543945 Tokens per Sec: 27285.80008947861
Epoch Step: 205 / 819 Loss: 183.58224487304688 Tokens per Sec: 21447.466039031973
Epoch Step: 210 / 819 Loss: 46.79225540161133 Tokens per Sec: 23888.657736507434
Epoch Step: 215 / 819 Loss: 43.40127182006836 Tokens per Sec: 28645.58047304528
Epoch Step: 220 / 819 Loss: 37.180992126464844 Tokens per Sec: 26289.982140990614
Epoch Step: 225 / 819 Loss: 33.52415466308594 Tokens per Sec: 25708.316936785337
Epoch Step: 230 / 819 Loss: 26.515844345092773 Tokens per Sec: 27326.22739742095
Epoch Step: 235 / 819 Loss: 34.322105407714844 Tokens per Sec: 29392.38712405932
Epoch Step: 240 / 819 Loss: 41.34293746948242 Tokens per Sec: 29486.90512440525
Epoch Step: 245 / 819 Loss: 38.66902542114258 Tokens per Sec: 26875.563464200433
Epoch Step: 250 / 819 Loss: 43.3062744140625 Tokens per Sec: 28670.410634247044
Epoch Step: 255 / 819 Loss: 38.96003341674805 Tokens per Sec: 27241.440687373062
Epoch Step: 260 / 819 Loss: 45.64560317993164 Tokens per Sec: 26348.707936586143
Epoch Step: 265 / 819 Loss: 47.987091064453125 Tokens per Sec: 25255.20377895601
Epoch Step: 270 / 819 Loss: 37.63066101074219 Tokens per Sec: 25337.59845412593
Epoch Step: 275 / 819 Loss: 43.05392837524414 Tokens per Sec: 22535.727204785777
Epoch Step: 280 / 819 Loss: 275.6506652832031 Tokens per Sec: 25788.142291348835
Epoch Step: 285 / 819 Loss: 31.92665672302246 Tokens per Sec: 27418.965147425326
Epoch Step: 290 / 819 Loss: 37.870582580566406 Tokens per Sec: 24890.12641725669
Epoch Step: 295 / 819 Loss: 35.340248107910156 Tokens per Sec: 25962.181270229987
Epoch Step: 300 / 819 Loss: 38.115413665771484 Tokens per Sec: 23511.89136976256
Epoch Step: 305 / 819 Loss: 46.852874755859375 Tokens per Sec: 25446.383020509722
Epoch Step: 310 / 819 Loss: 35.60221481323242 Tokens per Sec: 26827.667230112667
Epoch Step: 315 / 819 Loss: 39.70712661743164 Tokens per Sec: 23218.573161922526
Epoch Step: 320 / 819 Loss: 30.324586868286133 Tokens per Sec: 25831.141878039107
Epoch Step: 325 / 819 Loss: 42.01406478881836 Tokens per Sec: 26060.033570188876
Epoch Step: 330 / 819 Loss: 220.36007690429688 Tokens per Sec: 26195.180974044924
Epoch Step: 335 / 819 Loss: 41.36674880981445 Tokens per Sec: 26653.683021404293
Epoch Step: 340 / 819 Loss: 38.67755126953125 Tokens per Sec: 25664.616701858395
Epoch Step: 345 / 819 Loss: 31.098657608032227 Tokens per Sec: 27975.123973899324
Epoch Step: 350 / 819 Loss: 39.526519775390625 Tokens per Sec: 26543.375293001136
Epoch Step: 355 / 819 Loss: 288.81573486328125 Tokens per Sec: 26705.9055117306
Epoch Step: 360 / 819 Loss: 36.40165710449219 Tokens per Sec: 23228.299533962618
Epoch Step: 365 / 819 Loss: 29.607566833496094 Tokens per Sec: 26032.742173433548
Epoch Step: 370 / 819 Loss: 317.0491027832031 Tokens per Sec: 26962.051768121866
Epoch Step: 375 / 819 Loss: 38.83262634277344 Tokens per Sec: 25297.648788785962
Epoch Step: 380 / 819 Loss: 31.0421199798584 Tokens per Sec: 24300.05100158607
Epoch Step: 385 / 819 Loss: 36.87828826904297 Tokens per Sec: 26781.46461110397
Epoch Step: 390 / 819 Loss: 46.34515380859375 Tokens per Sec: 24839.75297308736
Epoch Step: 395 / 819 Loss: 42.56789779663086 Tokens per Sec: 27891.928683281018
Epoch Step: 400 / 819 Loss: 39.92711639404297 Tokens per Sec: 27620.369475599924
Epoch Step: 405 / 819 Loss: 31.85936164855957 Tokens per Sec: 28920.257847906872
Epoch Step: 410 / 819 Loss: 40.18136215209961 Tokens per Sec: 27194.485999578723
Epoch Step: 415 / 819 Loss: 45.70249557495117 Tokens per Sec: 26743.205248722097
Epoch Step: 420 / 819 Loss: 45.05701446533203 Tokens per Sec: 23196.85207044361
Epoch Step: 425 / 819 Loss: 35.409576416015625 Tokens per Sec: 26595.472486534185
Epoch Step: 430 / 819 Loss: 26.551610946655273 Tokens per Sec: 26659.859287478
Epoch Step: 435 / 819 Loss: 241.3180694580078 Tokens per Sec: 25384.38153561793
Epoch Step: 440 / 819 Loss: 24.08919906616211 Tokens per Sec: 27844.528928324187
Epoch Step: 445 / 819 Loss: 40.24089813232422 Tokens per Sec: 28389.61822476504
Epoch Step: 450 / 819 Loss: 43.51356887817383 Tokens per Sec: 25897.44912983314
Epoch Step: 455 / 819 Loss: 30.193143844604492 Tokens per Sec: 26531.221164973776
Epoch Step: 460 / 819 Loss: 36.484397888183594 Tokens per Sec: 26058.005570879843
Epoch Step: 465 / 819 Loss: 42.97977828979492 Tokens per Sec: 25295.905665293205
Epoch Step: 470 / 819 Loss: 44.63090133666992 Tokens per Sec: 26172.95329412129
Epoch Step: 475 / 819 Loss: 39.491519927978516 Tokens per Sec: 25524.999745182173
Epoch Step: 480 / 819 Loss: 36.405879974365234 Tokens per Sec: 26652.518210838174
Epoch Step: 485 / 819 Loss: 40.321659088134766 Tokens per Sec: 26062.426487756824
Epoch Step: 490 / 819 Loss: 36.005210876464844 Tokens per Sec: 25342.55179728142
Epoch Step: 495 / 819 Loss: 41.53789138793945 Tokens per Sec: 26312.074508911493
Epoch Step: 500 / 819 Loss: 30.526256561279297 Tokens per Sec: 27570.977805929087
Epoch Step: 505 / 819 Loss: 40.58269119262695 Tokens per Sec: 26558.29425173064
Epoch Step: 510 / 819 Loss: 36.456661224365234 Tokens per Sec: 25806.522208997285
Epoch Step: 515 / 819 Loss: 23.358867645263672 Tokens per Sec: 24146.607208129248
Epoch Step: 520 / 819 Loss: 171.33505249023438 Tokens per Sec: 27362.409442353674
Epoch Step: 525 / 819 Loss: 38.87486267089844 Tokens per Sec: 26137.703585335646
Epoch Step: 530 / 819 Loss: 25.392414093017578 Tokens per Sec: 25475.870621633436
Epoch Step: 535 / 819 Loss: 311.9588928222656 Tokens per Sec: 27512.094123195275
Epoch Step: 540 / 819 Loss: 30.86570930480957 Tokens per Sec: 26939.940620651985
Epoch Step: 545 / 819 Loss: 47.2020149230957 Tokens per Sec: 26180.65302350377
Epoch Step: 550 / 819 Loss: 348.5137634277344 Tokens per Sec: 25329.373170674255
Epoch Step: 555 / 819 Loss: 30.83755874633789 Tokens per Sec: 26440.048784033606
Epoch Step: 560 / 819 Loss: 39.798866271972656 Tokens per Sec: 25841.838545343653
Epoch Step: 565 / 819 Loss: 29.458324432373047 Tokens per Sec: 26029.93568459187
Epoch Step: 570 / 819 Loss: 41.33737564086914 Tokens per Sec: 25641.622908130408
Epoch Step: 575 / 819 Loss: 41.13271713256836 Tokens per Sec: 25525.00836147452
Epoch Step: 580 / 819 Loss: 34.93901443481445 Tokens per Sec: 23566.176071809143
Epoch Step: 585 / 819 Loss: 35.10962677001953 Tokens per Sec: 27420.961842443787
Epoch Step: 590 / 819 Loss: 43.421302795410156 Tokens per Sec: 27659.431057278365
Epoch Step: 595 / 819 Loss: 41.11399841308594 Tokens per Sec: 25779.13245249853
Epoch Step: 600 / 819 Loss: 33.67790603637695 Tokens per Sec: 23784.954116638186
Epoch Step: 605 / 819 Loss: 236.120849609375 Tokens per Sec: 26885.28297710714
Epoch Step: 610 / 819 Loss: 40.85811233520508 Tokens per Sec: 26487.33931707975
Epoch Step: 615 / 819 Loss: 44.292884826660156 Tokens per Sec: 25914.875745232606
Epoch Step: 620 / 819 Loss: 40.630802154541016 Tokens per Sec: 24075.921830994965
Epoch Step: 625 / 819 Loss: 41.05697250366211 Tokens per Sec: 27473.656018081205
Epoch Step: 630 / 819 Loss: 259.1178894042969 Tokens per Sec: 28195.217415877676
Epoch Step: 635 / 819 Loss: 273.453125 Tokens per Sec: 26748.560339787025
Epoch Step: 640 / 819 Loss: 249.7220458984375 Tokens per Sec: 24867.288876932787
Epoch Step: 645 / 819 Loss: 36.90711212158203 Tokens per Sec: 27522.74494406035
Epoch Step: 650 / 819 Loss: 37.624725341796875 Tokens per Sec: 25626.795554961293
Epoch Step: 655 / 819 Loss: 31.737600326538086 Tokens per Sec: 25090.131567759836
Epoch Step: 660 / 819 Loss: 39.41763687133789 Tokens per Sec: 25844.761841086583
Epoch Step: 665 / 819 Loss: 39.8155403137207 Tokens per Sec: 25940.02456571707
Epoch Step: 670 / 819 Loss: 30.19919204711914 Tokens per Sec: 26703.369854770466
Epoch Step: 675 / 819 Loss: 35.669864654541016 Tokens per Sec: 25932.15462709165
Epoch Step: 680 / 819 Loss: 36.496482849121094 Tokens per Sec: 24302.36941204095
Epoch Step: 685 / 819 Loss: 38.39075469970703 Tokens per Sec: 25259.73268746614
Epoch Step: 690 / 819 Loss: 27.08114242553711 Tokens per Sec: 26015.41203792118
Epoch Step: 695 / 819 Loss: 23.890594482421875 Tokens per Sec: 27199.02921143164
Epoch Step: 700 / 819 Loss: 24.894433975219727 Tokens per Sec: 25012.545410833947
Epoch Step: 705 / 819 Loss: 21.99744415283203 Tokens per Sec: 27301.0051535097
Epoch Step: 710 / 819 Loss: 306.4951477050781 Tokens per Sec: 25100.93723810308
Epoch Step: 715 / 819 Loss: 41.4117317199707 Tokens per Sec: 24835.760893007246
Epoch Step: 720 / 819 Loss: 31.829879760742188 Tokens per Sec: 26527.04115748007
Epoch Step: 725 / 819 Loss: 35.541568756103516 Tokens per Sec: 26927.539152064648
Epoch Step: 730 / 819 Loss: 35.72745895385742 Tokens per Sec: 27183.49350055091
Epoch Step: 735 / 819 Loss: 36.073280334472656 Tokens per Sec: 27408.262920921847
Epoch Step: 740 / 819 Loss: 32.5942268371582 Tokens per Sec: 27742.070185683096
Epoch Step: 745 / 819 Loss: 43.18952941894531 Tokens per Sec: 26457.36504016994
Epoch Step: 750 / 819 Loss: 40.25688552856445 Tokens per Sec: 27884.372615927336
Epoch Step: 755 / 819 Loss: 34.365013122558594 Tokens per Sec: 26071.21226219468
Epoch Step: 760 / 819 Loss: 43.087738037109375 Tokens per Sec: 24891.309551188642
Epoch Step: 765 / 819 Loss: 41.15309143066406 Tokens per Sec: 25345.9463773759
Epoch Step: 770 / 819 Loss: 32.9865837097168 Tokens per Sec: 26822.809971825736
Epoch Step: 775 / 819 Loss: 24.066829681396484 Tokens per Sec: 25614.78010962616
Epoch Step: 780 / 819 Loss: 23.64021110534668 Tokens per Sec: 24302.175129764924
Epoch Step: 785 / 819 Loss: 308.6150817871094 Tokens per Sec: 24268.637381757922
Epoch Step: 790 / 819 Loss: 31.53764533996582 Tokens per Sec: 25922.56404510522
Epoch Step: 795 / 819 Loss: 37.503143310546875 Tokens per Sec: 25366.889801087582
Epoch Step: 800 / 819 Loss: 22.484071731567383 Tokens per Sec: 27470.37960203863
Epoch Step: 805 / 819 Loss: 36.79768753051758 Tokens per Sec: 25674.8734754855
Epoch Step: 810 / 819 Loss: 34.722862243652344 Tokens per Sec: 21497.905822797034
Epoch Step: 815 / 819 Loss: 190.20860290527344 Tokens per Sec: 22067.992624777347
Epoch ended with duration 0:02:28.645135
Train perplexity: 2.1484457968595003
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . getValue ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new ( ( INT_2 , INT_3 ) ) , VAR_3 , VAR_1 ) ) ) ) true ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + "\n" ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.248485
Validation perplexity: 2.0611857488690855
Model saved best_on_validation!
Epoch 7 / 1000
Epoch Step: 5 / 819 Loss: 40.03106689453125 Tokens per Sec: 26859.971881155216
Epoch Step: 10 / 819 Loss: 36.76158142089844 Tokens per Sec: 25390.419590228666
Epoch Step: 15 / 819 Loss: 23.959468841552734 Tokens per Sec: 28140.326666975776
Epoch Step: 20 / 819 Loss: 35.22545623779297 Tokens per Sec: 27786.96283445025
Epoch Step: 25 / 819 Loss: 27.353899002075195 Tokens per Sec: 24183.021626227473
Epoch Step: 30 / 819 Loss: 28.050479888916016 Tokens per Sec: 27131.740390705225
Epoch Step: 35 / 819 Loss: 39.15003967285156 Tokens per Sec: 27344.989026142033
Epoch Step: 40 / 819 Loss: 28.853736877441406 Tokens per Sec: 23679.828699261612
Epoch Step: 45 / 819 Loss: 39.91807556152344 Tokens per Sec: 24729.567988008228
Epoch Step: 50 / 819 Loss: 36.025291442871094 Tokens per Sec: 27228.315321524497
Epoch Step: 55 / 819 Loss: 31.847871780395508 Tokens per Sec: 25617.965842204158
Epoch Step: 60 / 819 Loss: 35.16823196411133 Tokens per Sec: 24128.02738049728
Epoch Step: 65 / 819 Loss: 34.80414581298828 Tokens per Sec: 27400.183781220745
Epoch Step: 70 / 819 Loss: 33.068199157714844 Tokens per Sec: 24906.7739059074
Epoch Step: 75 / 819 Loss: 41.267860412597656 Tokens per Sec: 24558.923949095748
Epoch Step: 80 / 819 Loss: 41.686222076416016 Tokens per Sec: 26042.091974332932
Epoch Step: 85 / 819 Loss: 42.359703063964844 Tokens per Sec: 27934.39838958712
Epoch Step: 90 / 819 Loss: 24.134977340698242 Tokens per Sec: 24127.431667226432
Epoch Step: 95 / 819 Loss: 24.602628707885742 Tokens per Sec: 28186.68162888581
Epoch Step: 100 / 819 Loss: 26.579259872436523 Tokens per Sec: 26253.88845823086
Epoch Step: 105 / 819 Loss: 21.669389724731445 Tokens per Sec: 25005.135471333575
Epoch Step: 110 / 819 Loss: 29.689903259277344 Tokens per Sec: 26397.13844569593
Epoch Step: 115 / 819 Loss: 37.53395462036133 Tokens per Sec: 26096.973075105823
Epoch Step: 120 / 819 Loss: 38.95419692993164 Tokens per Sec: 26615.947806539687
Epoch Step: 125 / 819 Loss: 34.272850036621094 Tokens per Sec: 27070.30219704737
Epoch Step: 130 / 819 Loss: 25.939620971679688 Tokens per Sec: 26421.280703021162
Epoch Step: 135 / 819 Loss: 26.295944213867188 Tokens per Sec: 25413.277691888063
Epoch Step: 140 / 819 Loss: 36.73091125488281 Tokens per Sec: 27080.967626250847
Epoch Step: 145 / 819 Loss: 274.47039794921875 Tokens per Sec: 26734.869902455226
Epoch Step: 150 / 819 Loss: 32.994625091552734 Tokens per Sec: 26313.386564883123
Epoch Step: 155 / 819 Loss: 33.1413459777832 Tokens per Sec: 26455.610525168864
Epoch Step: 160 / 819 Loss: 38.41697692871094 Tokens per Sec: 27021.206854688313
Epoch Step: 165 / 819 Loss: 32.888572692871094 Tokens per Sec: 26587.804754202523
Epoch Step: 170 / 819 Loss: 34.088836669921875 Tokens per Sec: 27060.12684992136
Epoch Step: 175 / 819 Loss: 237.2173614501953 Tokens per Sec: 27142.656729470385
Epoch Step: 180 / 819 Loss: 33.36574172973633 Tokens per Sec: 27084.63541980394
Epoch Step: 185 / 819 Loss: 26.324291229248047 Tokens per Sec: 24871.88180648986
Epoch Step: 190 / 819 Loss: 34.984291076660156 Tokens per Sec: 24957.12801271768
Epoch Step: 195 / 819 Loss: 31.14830207824707 Tokens per Sec: 26533.010263521806
Epoch Step: 200 / 819 Loss: 27.79945182800293 Tokens per Sec: 26429.994222916568
Epoch Step: 205 / 819 Loss: 25.618236541748047 Tokens per Sec: 27165.30744749042
Epoch Step: 210 / 819 Loss: 41.44939422607422 Tokens per Sec: 25543.528606106258
Epoch Step: 215 / 819 Loss: 28.598608016967773 Tokens per Sec: 25824.649478151354
Epoch Step: 220 / 819 Loss: 30.34077262878418 Tokens per Sec: 27533.046289169873
Epoch Step: 225 / 819 Loss: 303.85455322265625 Tokens per Sec: 28382.71949884194
Epoch Step: 230 / 819 Loss: 32.82600021362305 Tokens per Sec: 25149.028693280623
Epoch Step: 235 / 819 Loss: 245.50485229492188 Tokens per Sec: 26067.486879701337
Epoch Step: 240 / 819 Loss: 45.58737564086914 Tokens per Sec: 25815.065593526553
Epoch Step: 245 / 819 Loss: 47.28987503051758 Tokens per Sec: 24064.514724893514
Epoch Step: 250 / 819 Loss: 30.424236297607422 Tokens per Sec: 26791.332409026378
Epoch Step: 255 / 819 Loss: 38.681392669677734 Tokens per Sec: 23745.25708583051
Epoch Step: 260 / 819 Loss: 34.54616165161133 Tokens per Sec: 27325.613732450853
Epoch Step: 265 / 819 Loss: 257.6200256347656 Tokens per Sec: 25099.553050536688
Epoch Step: 270 / 819 Loss: 23.037254333496094 Tokens per Sec: 24624.524436786636
Epoch Step: 275 / 819 Loss: 36.32771682739258 Tokens per Sec: 27066.61062823444
Epoch Step: 280 / 819 Loss: 35.485496520996094 Tokens per Sec: 28005.205067747367
Epoch Step: 285 / 819 Loss: 41.66685485839844 Tokens per Sec: 28631.79174825901
Epoch Step: 290 / 819 Loss: 36.00109100341797 Tokens per Sec: 26032.619285974186
Epoch Step: 295 / 819 Loss: 226.04896545410156 Tokens per Sec: 26059.316106453956
Epoch Step: 300 / 819 Loss: 38.992095947265625 Tokens per Sec: 25629.93772911394
Epoch Step: 305 / 819 Loss: 31.12476921081543 Tokens per Sec: 27115.132618378695
Epoch Step: 310 / 819 Loss: 232.89549255371094 Tokens per Sec: 24827.52436440341
Epoch Step: 315 / 819 Loss: 41.7460823059082 Tokens per Sec: 27221.964353484957
Epoch Step: 320 / 819 Loss: 28.555335998535156 Tokens per Sec: 25158.74793727017
Epoch Step: 325 / 819 Loss: 36.713863372802734 Tokens per Sec: 25580.132297499575
Epoch Step: 330 / 819 Loss: 35.72932434082031 Tokens per Sec: 26707.17403407525
Epoch Step: 335 / 819 Loss: 34.78929901123047 Tokens per Sec: 25231.287782580854
Epoch Step: 340 / 819 Loss: 37.561485290527344 Tokens per Sec: 26407.123235436626
Epoch Step: 345 / 819 Loss: 39.3079719543457 Tokens per Sec: 27543.742774909773
Epoch Step: 350 / 819 Loss: 31.84827995300293 Tokens per Sec: 27254.90527699276
Epoch Step: 355 / 819 Loss: 36.55517578125 Tokens per Sec: 25558.62159174076
Epoch Step: 360 / 819 Loss: 32.63825225830078 Tokens per Sec: 25506.21093000052
Epoch Step: 365 / 819 Loss: 38.23017120361328 Tokens per Sec: 26894.46012972105
Epoch Step: 370 / 819 Loss: 39.670555114746094 Tokens per Sec: 25466.758062817775
Epoch Step: 375 / 819 Loss: 34.10662078857422 Tokens per Sec: 24892.398127555713
Epoch Step: 380 / 819 Loss: 28.527015686035156 Tokens per Sec: 23125.66541411644
Epoch Step: 385 / 819 Loss: 36.68010711669922 Tokens per Sec: 24374.178184254728
Epoch Step: 390 / 819 Loss: 32.49480438232422 Tokens per Sec: 27839.462286204154
Epoch Step: 395 / 819 Loss: 176.54505920410156 Tokens per Sec: 25502.622817950916
Epoch Step: 400 / 819 Loss: 36.50425338745117 Tokens per Sec: 26962.807820562713
Epoch Step: 405 / 819 Loss: 33.13044738769531 Tokens per Sec: 27169.25826572612
Epoch Step: 410 / 819 Loss: 40.82365417480469 Tokens per Sec: 24306.446313706085
Epoch Step: 415 / 819 Loss: 30.400745391845703 Tokens per Sec: 24514.300081395468
Epoch Step: 420 / 819 Loss: 241.4914093017578 Tokens per Sec: 25638.490432729614
Epoch Step: 425 / 819 Loss: 25.214874267578125 Tokens per Sec: 27247.534791598504
Epoch Step: 430 / 819 Loss: 37.04356002807617 Tokens per Sec: 27250.750219984082
Epoch Step: 435 / 819 Loss: 43.08885192871094 Tokens per Sec: 25363.111820651146
Epoch Step: 440 / 819 Loss: 33.4866828918457 Tokens per Sec: 27179.12156669721
Epoch Step: 445 / 819 Loss: 37.73943328857422 Tokens per Sec: 28001.852542049714
Epoch Step: 450 / 819 Loss: 40.332847595214844 Tokens per Sec: 24374.115710091977
Epoch Step: 455 / 819 Loss: 22.43284797668457 Tokens per Sec: 23362.660121485435
Epoch Step: 460 / 819 Loss: 24.415191650390625 Tokens per Sec: 24468.685229999952
Epoch Step: 465 / 819 Loss: 36.829593658447266 Tokens per Sec: 26072.362902871762
Epoch Step: 470 / 819 Loss: 39.30311584472656 Tokens per Sec: 26340.2295289939
Epoch Step: 475 / 819 Loss: 36.92264175415039 Tokens per Sec: 27086.603388773965
Epoch Step: 480 / 819 Loss: 27.364713668823242 Tokens per Sec: 27249.57133973769
Epoch Step: 485 / 819 Loss: 31.985445022583008 Tokens per Sec: 26315.99713626047
Epoch Step: 490 / 819 Loss: 31.806316375732422 Tokens per Sec: 26678.028370545908
Epoch Step: 495 / 819 Loss: 34.86539077758789 Tokens per Sec: 26350.295758506953
Epoch Step: 500 / 819 Loss: 24.696163177490234 Tokens per Sec: 27725.623929694197
Epoch Step: 505 / 819 Loss: 31.56951141357422 Tokens per Sec: 26724.936147348344
Epoch Step: 510 / 819 Loss: 28.870729446411133 Tokens per Sec: 25268.91304922181
Epoch Step: 515 / 819 Loss: 31.294490814208984 Tokens per Sec: 28014.523456786384
Epoch Step: 520 / 819 Loss: 24.1746826171875 Tokens per Sec: 23666.276401048424
Epoch Step: 525 / 819 Loss: 22.882169723510742 Tokens per Sec: 26310.716234975374
Epoch Step: 530 / 819 Loss: 35.80531311035156 Tokens per Sec: 25222.4565205048
Epoch Step: 535 / 819 Loss: 26.034530639648438 Tokens per Sec: 25452.926380206485
Epoch Step: 540 / 819 Loss: 45.98585510253906 Tokens per Sec: 27294.32061316209
Epoch Step: 545 / 819 Loss: 29.911911010742188 Tokens per Sec: 24341.060522161348
Epoch Step: 550 / 819 Loss: 33.768280029296875 Tokens per Sec: 27106.934324699632
Epoch Step: 555 / 819 Loss: 34.82075119018555 Tokens per Sec: 26612.42556716729
Epoch Step: 560 / 819 Loss: 161.56222534179688 Tokens per Sec: 23973.78938840764
Epoch Step: 565 / 819 Loss: 40.51527786254883 Tokens per Sec: 26332.787683428756
Epoch Step: 570 / 819 Loss: 21.157209396362305 Tokens per Sec: 25709.576222881908
Epoch Step: 575 / 819 Loss: 228.78712463378906 Tokens per Sec: 26768.481940342805
Epoch Step: 580 / 819 Loss: 38.28076171875 Tokens per Sec: 28499.167089231356
Epoch Step: 585 / 819 Loss: 29.650299072265625 Tokens per Sec: 25133.61263196608
Epoch Step: 590 / 819 Loss: 41.3625373840332 Tokens per Sec: 25866.805904558503
Epoch Step: 595 / 819 Loss: 30.64940071105957 Tokens per Sec: 27581.95486493531
Epoch Step: 600 / 819 Loss: 34.29644775390625 Tokens per Sec: 28934.419760197536
Epoch Step: 605 / 819 Loss: 39.83647918701172 Tokens per Sec: 27636.139247124112
Epoch Step: 610 / 819 Loss: 158.96536254882812 Tokens per Sec: 25378.819355603704
Epoch Step: 615 / 819 Loss: 34.973018646240234 Tokens per Sec: 27057.200456149276
Epoch Step: 620 / 819 Loss: 35.43335723876953 Tokens per Sec: 26992.00878045915
Epoch Step: 625 / 819 Loss: 28.927654266357422 Tokens per Sec: 26217.715605674308
Epoch Step: 630 / 819 Loss: 34.59234619140625 Tokens per Sec: 27140.52088743786
Epoch Step: 635 / 819 Loss: 265.2385559082031 Tokens per Sec: 26206.375693863753
Epoch Step: 640 / 819 Loss: 36.16909408569336 Tokens per Sec: 25898.309023264155
Epoch Step: 645 / 819 Loss: 25.93164825439453 Tokens per Sec: 23513.097025621122
Epoch Step: 650 / 819 Loss: 27.18979263305664 Tokens per Sec: 27685.970538022662
Epoch Step: 655 / 819 Loss: 20.91118812561035 Tokens per Sec: 27465.924863808934
Epoch Step: 660 / 819 Loss: 30.260154724121094 Tokens per Sec: 24742.706213933314
Epoch Step: 665 / 819 Loss: 23.014629364013672 Tokens per Sec: 24398.658387310115
Epoch Step: 670 / 819 Loss: 29.985431671142578 Tokens per Sec: 22166.50812354383
Epoch Step: 675 / 819 Loss: 22.3199405670166 Tokens per Sec: 27568.18997868496
Epoch Step: 680 / 819 Loss: 38.54339599609375 Tokens per Sec: 26980.71680345753
Epoch Step: 685 / 819 Loss: 35.77677536010742 Tokens per Sec: 25042.76475691888
Epoch Step: 690 / 819 Loss: 33.17972183227539 Tokens per Sec: 26253.88642316609
Epoch Step: 695 / 819 Loss: 34.862098693847656 Tokens per Sec: 26511.06913824512
Epoch Step: 700 / 819 Loss: 17.906774520874023 Tokens per Sec: 27864.41204740655
Epoch Step: 705 / 819 Loss: 298.8599853515625 Tokens per Sec: 26631.60624224704
Epoch Step: 710 / 819 Loss: 23.064470291137695 Tokens per Sec: 25508.892454648056
Epoch Step: 715 / 819 Loss: 23.63449478149414 Tokens per Sec: 25240.25827865301
Epoch Step: 720 / 819 Loss: 22.565858840942383 Tokens per Sec: 26063.322324307934
Epoch Step: 725 / 819 Loss: 40.712646484375 Tokens per Sec: 25246.850262134565
Epoch Step: 730 / 819 Loss: 32.63025665283203 Tokens per Sec: 25766.562470770637
Epoch Step: 735 / 819 Loss: 31.456825256347656 Tokens per Sec: 26293.66409485345
Epoch Step: 740 / 819 Loss: 32.18759536743164 Tokens per Sec: 28621.277604640727
Epoch Step: 745 / 819 Loss: 37.00286865234375 Tokens per Sec: 26766.189377245828
Epoch Step: 750 / 819 Loss: 34.831878662109375 Tokens per Sec: 24845.776505710215
Epoch Step: 755 / 819 Loss: 33.56437301635742 Tokens per Sec: 25502.53097280611
Epoch Step: 760 / 819 Loss: 37.16650390625 Tokens per Sec: 27089.5049881543
Epoch Step: 765 / 819 Loss: 164.29669189453125 Tokens per Sec: 26718.75194459763
Epoch Step: 770 / 819 Loss: 32.1983757019043 Tokens per Sec: 26230.591902358046
Epoch Step: 775 / 819 Loss: 29.008163452148438 Tokens per Sec: 25242.09034005735
Epoch Step: 780 / 819 Loss: 33.920040130615234 Tokens per Sec: 26146.5371752108
Epoch Step: 785 / 819 Loss: 24.987789154052734 Tokens per Sec: 25452.317392192206
Epoch Step: 790 / 819 Loss: 32.343318939208984 Tokens per Sec: 28171.754476517544
Epoch Step: 795 / 819 Loss: 30.463956832885742 Tokens per Sec: 23986.27340390821
Epoch Step: 800 / 819 Loss: 22.796772003173828 Tokens per Sec: 26935.787086440396
Epoch Step: 805 / 819 Loss: 33.143287658691406 Tokens per Sec: 24186.120264978643
Epoch Step: 810 / 819 Loss: 37.684722900390625 Tokens per Sec: 19389.58277678009
Epoch Step: 815 / 819 Loss: 24.312959671020508 Tokens per Sec: 25422.277538145565
Epoch ended with duration 0:02:29.049279
Train perplexity: 1.9698324499968172
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . getValue ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new ( ( INT_2 , INT_3 ) ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.237349
Validation perplexity: 2.0377155435252705
Model saved best_on_validation!
Epoch 8 / 1000
Epoch Step: 5 / 819 Loss: 28.83055305480957 Tokens per Sec: 24210.677217204066
Epoch Step: 10 / 819 Loss: 21.488019943237305 Tokens per Sec: 26567.59234105134
Epoch Step: 15 / 819 Loss: 34.94874954223633 Tokens per Sec: 27532.36952617528
Epoch Step: 20 / 819 Loss: 32.618896484375 Tokens per Sec: 26026.120486637024
Epoch Step: 25 / 819 Loss: 28.754501342773438 Tokens per Sec: 27095.533944049577
Epoch Step: 30 / 819 Loss: 34.66620635986328 Tokens per Sec: 25812.392086545344
Epoch Step: 35 / 819 Loss: 35.11029815673828 Tokens per Sec: 28563.827415220232
Epoch Step: 40 / 819 Loss: 37.52365493774414 Tokens per Sec: 25940.17461365034
Epoch Step: 45 / 819 Loss: 28.377779006958008 Tokens per Sec: 22472.98624523431
Epoch Step: 50 / 819 Loss: 23.583541870117188 Tokens per Sec: 23004.68502559407
Epoch Step: 55 / 819 Loss: 21.495588302612305 Tokens per Sec: 26674.69726558411
Epoch Step: 60 / 819 Loss: 31.46034812927246 Tokens per Sec: 28058.8874837338
Epoch Step: 65 / 819 Loss: 27.77133560180664 Tokens per Sec: 26193.405470967024
Epoch Step: 70 / 819 Loss: 23.848478317260742 Tokens per Sec: 24589.061311710168
Epoch Step: 75 / 819 Loss: 24.67396354675293 Tokens per Sec: 26403.522446610314
Epoch Step: 80 / 819 Loss: 24.149282455444336 Tokens per Sec: 26025.661809779594
Epoch Step: 85 / 819 Loss: 21.12541389465332 Tokens per Sec: 28531.089243872546
Epoch Step: 90 / 819 Loss: 28.418621063232422 Tokens per Sec: 26120.532406489816
Epoch Step: 95 / 819 Loss: 37.38692092895508 Tokens per Sec: 24235.41919812406
Epoch Step: 100 / 819 Loss: 25.600400924682617 Tokens per Sec: 24735.149111868803
Epoch Step: 105 / 819 Loss: 21.552745819091797 Tokens per Sec: 25968.15883625367
Epoch Step: 110 / 819 Loss: 29.02841567993164 Tokens per Sec: 24027.273070877218
Epoch Step: 115 / 819 Loss: 26.777019500732422 Tokens per Sec: 26797.788212217074
Epoch Step: 120 / 819 Loss: 29.432586669921875 Tokens per Sec: 27333.29573382196
Epoch Step: 125 / 819 Loss: 35.85247802734375 Tokens per Sec: 25984.382446873817
Epoch Step: 130 / 819 Loss: 29.7625675201416 Tokens per Sec: 25075.664904181194
Epoch Step: 135 / 819 Loss: 39.539093017578125 Tokens per Sec: 25419.70628122351
Epoch Step: 140 / 819 Loss: 30.52956199645996 Tokens per Sec: 26091.810176457246
Epoch Step: 145 / 819 Loss: 29.283735275268555 Tokens per Sec: 23756.681860011096
Epoch Step: 150 / 819 Loss: 23.871929168701172 Tokens per Sec: 24427.751914621553
Epoch Step: 155 / 819 Loss: 37.22380447387695 Tokens per Sec: 25704.12502325202
Epoch Step: 160 / 819 Loss: 36.81059265136719 Tokens per Sec: 26683.690320971975
Epoch Step: 165 / 819 Loss: 30.27745246887207 Tokens per Sec: 25246.480524457726
Epoch Step: 170 / 819 Loss: 31.408065795898438 Tokens per Sec: 24200.48620207351
Epoch Step: 175 / 819 Loss: 27.73703384399414 Tokens per Sec: 26381.30990054858
Epoch Step: 180 / 819 Loss: 28.114208221435547 Tokens per Sec: 24418.42749081478
Epoch Step: 185 / 819 Loss: 214.72023010253906 Tokens per Sec: 28568.462238033047
Epoch Step: 190 / 819 Loss: 26.337732315063477 Tokens per Sec: 27047.41628836846
Epoch Step: 195 / 819 Loss: 27.393701553344727 Tokens per Sec: 24175.343653702654
Epoch Step: 200 / 819 Loss: 29.202470779418945 Tokens per Sec: 28717.39615349511
Epoch Step: 205 / 819 Loss: 38.728328704833984 Tokens per Sec: 25078.57858009379
Epoch Step: 210 / 819 Loss: 32.5391731262207 Tokens per Sec: 25239.36741040789
Epoch Step: 215 / 819 Loss: 30.533523559570312 Tokens per Sec: 28728.911786515633
Epoch Step: 220 / 819 Loss: 29.889026641845703 Tokens per Sec: 28539.050099878987
Epoch Step: 225 / 819 Loss: 31.938459396362305 Tokens per Sec: 26734.548436368288
Epoch Step: 230 / 819 Loss: 37.089115142822266 Tokens per Sec: 24834.189173292234
Epoch Step: 235 / 819 Loss: 31.383066177368164 Tokens per Sec: 25143.095742514914
Epoch Step: 240 / 819 Loss: 21.826425552368164 Tokens per Sec: 24551.08113809434
Epoch Step: 245 / 819 Loss: 281.28643798828125 Tokens per Sec: 25992.452387100282
Epoch Step: 250 / 819 Loss: 40.91416931152344 Tokens per Sec: 26082.086642422288
Epoch Step: 255 / 819 Loss: 25.94089126586914 Tokens per Sec: 22476.103362838898
Epoch Step: 260 / 819 Loss: 31.98123550415039 Tokens per Sec: 25310.029600762024
Epoch Step: 265 / 819 Loss: 25.075641632080078 Tokens per Sec: 23505.7186045652
Epoch Step: 270 / 819 Loss: 27.834413528442383 Tokens per Sec: 27975.375656040138
Epoch Step: 275 / 819 Loss: 37.22737503051758 Tokens per Sec: 25665.0188205051
Epoch Step: 280 / 819 Loss: 30.245933532714844 Tokens per Sec: 24258.114034804294
Epoch Step: 285 / 819 Loss: 39.910797119140625 Tokens per Sec: 24098.713785253953
Epoch Step: 290 / 819 Loss: 27.5081729888916 Tokens per Sec: 28597.90020839256
Epoch Step: 295 / 819 Loss: 35.37382507324219 Tokens per Sec: 23257.24038368487
Epoch Step: 300 / 819 Loss: 36.6917610168457 Tokens per Sec: 25621.803285971786
Epoch Step: 305 / 819 Loss: 24.559139251708984 Tokens per Sec: 24582.688879054538
Epoch Step: 310 / 819 Loss: 24.605331420898438 Tokens per Sec: 26938.06772323211
Epoch Step: 315 / 819 Loss: 38.20124816894531 Tokens per Sec: 24122.590370042606
Epoch Step: 320 / 819 Loss: 30.200984954833984 Tokens per Sec: 25317.252861229914
Epoch Step: 325 / 819 Loss: 24.902881622314453 Tokens per Sec: 26581.83382649035
Epoch Step: 330 / 819 Loss: 215.90957641601562 Tokens per Sec: 24804.956299600286
Epoch Step: 335 / 819 Loss: 32.94171142578125 Tokens per Sec: 26187.68066507387
Epoch Step: 340 / 819 Loss: 35.06053161621094 Tokens per Sec: 28097.039643351833
Epoch Step: 345 / 819 Loss: 25.445363998413086 Tokens per Sec: 24391.8927163317
Epoch Step: 350 / 819 Loss: 30.820674896240234 Tokens per Sec: 26620.54481692808
Epoch Step: 355 / 819 Loss: 28.959177017211914 Tokens per Sec: 25463.175823976893
Epoch Step: 360 / 819 Loss: 28.578630447387695 Tokens per Sec: 26389.52575926489
Epoch Step: 365 / 819 Loss: 24.93629264831543 Tokens per Sec: 27764.856292900986
Epoch Step: 370 / 819 Loss: 35.31304931640625 Tokens per Sec: 24818.57640487888
Epoch Step: 375 / 819 Loss: 31.721458435058594 Tokens per Sec: 22059.173810946617
Epoch Step: 380 / 819 Loss: 21.63193130493164 Tokens per Sec: 26914.783247438347
Epoch Step: 385 / 819 Loss: 23.064682006835938 Tokens per Sec: 25342.334872493546
Epoch Step: 390 / 819 Loss: 32.645782470703125 Tokens per Sec: 25503.525939557905
Epoch Step: 395 / 819 Loss: 28.8663330078125 Tokens per Sec: 26486.23787100651
Epoch Step: 400 / 819 Loss: 20.416093826293945 Tokens per Sec: 27458.447932544343
Epoch Step: 405 / 819 Loss: 29.23320770263672 Tokens per Sec: 25391.248544282018
Epoch Step: 410 / 819 Loss: 24.51996612548828 Tokens per Sec: 24146.258203060377
Epoch Step: 415 / 819 Loss: 32.272422790527344 Tokens per Sec: 25934.670155544518
Epoch Step: 420 / 819 Loss: 122.72296905517578 Tokens per Sec: 26141.091857592517
Epoch Step: 425 / 819 Loss: 214.58920288085938 Tokens per Sec: 25445.941832095617
Epoch Step: 430 / 819 Loss: 29.251068115234375 Tokens per Sec: 27228.650417426143
Epoch Step: 435 / 819 Loss: 28.63360595703125 Tokens per Sec: 23213.823209854603
Epoch Step: 440 / 819 Loss: 27.583663940429688 Tokens per Sec: 27291.391634035677
Epoch Step: 445 / 819 Loss: 28.539827346801758 Tokens per Sec: 26075.222692577234
Epoch Step: 450 / 819 Loss: 22.620820999145508 Tokens per Sec: 24934.225061489156
Epoch Step: 455 / 819 Loss: 33.781768798828125 Tokens per Sec: 25148.4290250928
Epoch Step: 460 / 819 Loss: 30.793310165405273 Tokens per Sec: 26415.762358186625
Epoch Step: 465 / 819 Loss: 28.44122314453125 Tokens per Sec: 26128.311437129207
Epoch Step: 470 / 819 Loss: 21.62026023864746 Tokens per Sec: 25639.119944846534
Epoch Step: 475 / 819 Loss: 24.011825561523438 Tokens per Sec: 25361.06627613084
Epoch Step: 480 / 819 Loss: 237.48587036132812 Tokens per Sec: 25240.654458858386
Epoch Step: 485 / 819 Loss: 32.43151092529297 Tokens per Sec: 27901.616552188876
Epoch Step: 490 / 819 Loss: 31.419580459594727 Tokens per Sec: 27666.227915678694
Epoch Step: 495 / 819 Loss: 262.9442138671875 Tokens per Sec: 24500.22713924157
Epoch Step: 500 / 819 Loss: 36.33872985839844 Tokens per Sec: 26660.57463004735
Epoch Step: 505 / 819 Loss: 26.55414390563965 Tokens per Sec: 25075.795221901706
Epoch Step: 510 / 819 Loss: 36.244808197021484 Tokens per Sec: 27433.892646263157
Epoch Step: 515 / 819 Loss: 238.2638702392578 Tokens per Sec: 26587.052848752148
Epoch Step: 520 / 819 Loss: 109.79649353027344 Tokens per Sec: 26263.463284247693
Epoch Step: 525 / 819 Loss: 242.21539306640625 Tokens per Sec: 26380.261173761686
Epoch Step: 530 / 819 Loss: 31.834230422973633 Tokens per Sec: 23057.841189442293
Epoch Step: 535 / 819 Loss: 31.294559478759766 Tokens per Sec: 26680.765026921017
Epoch Step: 540 / 819 Loss: 23.89836883544922 Tokens per Sec: 25383.065293257732
Epoch Step: 545 / 819 Loss: 21.700393676757812 Tokens per Sec: 22158.810238388916
Epoch Step: 550 / 819 Loss: 26.951353073120117 Tokens per Sec: 25296.030960318185
Epoch Step: 555 / 819 Loss: 25.38382911682129 Tokens per Sec: 26072.610788125286
Epoch Step: 560 / 819 Loss: 26.88462257385254 Tokens per Sec: 26340.365741345213
Epoch Step: 565 / 819 Loss: 40.0462532043457 Tokens per Sec: 26739.3632762188
Epoch Step: 570 / 819 Loss: 35.6573486328125 Tokens per Sec: 22325.461983893063
Epoch Step: 575 / 819 Loss: 30.63327407836914 Tokens per Sec: 26671.96307556437
Epoch Step: 580 / 819 Loss: 29.069900512695312 Tokens per Sec: 25899.213578246276
Epoch Step: 585 / 819 Loss: 39.48469924926758 Tokens per Sec: 26477.465754311546
Epoch Step: 590 / 819 Loss: 38.763858795166016 Tokens per Sec: 24777.107098314707
Epoch Step: 595 / 819 Loss: 212.9868621826172 Tokens per Sec: 25790.54066937498
Epoch Step: 600 / 819 Loss: 30.259511947631836 Tokens per Sec: 24911.409472398685
Epoch Step: 605 / 819 Loss: 29.482574462890625 Tokens per Sec: 26252.768958691187
Epoch Step: 610 / 819 Loss: 31.396066665649414 Tokens per Sec: 23786.69064344357
Epoch Step: 615 / 819 Loss: 31.55419158935547 Tokens per Sec: 25423.003552076407
Epoch Step: 620 / 819 Loss: 33.450340270996094 Tokens per Sec: 23813.402888037053
Epoch Step: 625 / 819 Loss: 32.91590881347656 Tokens per Sec: 26673.61345598939
Epoch Step: 630 / 819 Loss: 24.612098693847656 Tokens per Sec: 23840.89654361802
Epoch Step: 635 / 819 Loss: 222.30833435058594 Tokens per Sec: 27787.882861309794
Epoch Step: 640 / 819 Loss: 33.08447265625 Tokens per Sec: 26567.467662354982
Epoch Step: 645 / 819 Loss: 20.27178192138672 Tokens per Sec: 26062.42624923193
Epoch Step: 650 / 819 Loss: 19.623249053955078 Tokens per Sec: 27499.958018315683
Epoch Step: 655 / 819 Loss: 34.699073791503906 Tokens per Sec: 26167.813045584568
Epoch Step: 660 / 819 Loss: 213.74874877929688 Tokens per Sec: 25078.01830543637
Epoch Step: 665 / 819 Loss: 29.025358200073242 Tokens per Sec: 25124.59500466733
Epoch Step: 670 / 819 Loss: 31.749704360961914 Tokens per Sec: 24190.365739641682
Epoch Step: 675 / 819 Loss: 28.661949157714844 Tokens per Sec: 27054.0331611781
Epoch Step: 680 / 819 Loss: 30.40290069580078 Tokens per Sec: 24416.87414847626
Epoch Step: 685 / 819 Loss: 33.328285217285156 Tokens per Sec: 25654.535350641367
Epoch Step: 690 / 819 Loss: 188.3874053955078 Tokens per Sec: 26087.34607855379
Epoch Step: 695 / 819 Loss: 25.15058135986328 Tokens per Sec: 25319.56195273565
Epoch Step: 700 / 819 Loss: 21.226411819458008 Tokens per Sec: 26648.72857694777
Epoch Step: 705 / 819 Loss: 34.57755661010742 Tokens per Sec: 25317.015523433452
Epoch Step: 710 / 819 Loss: 30.660972595214844 Tokens per Sec: 25942.199984979514
Epoch Step: 715 / 819 Loss: 40.73632049560547 Tokens per Sec: 23789.789928305618
Epoch Step: 720 / 819 Loss: 24.774494171142578 Tokens per Sec: 27026.517890435578
Epoch Step: 725 / 819 Loss: 26.361080169677734 Tokens per Sec: 27158.166054960075
Epoch Step: 730 / 819 Loss: 20.676910400390625 Tokens per Sec: 27750.183015523337
Epoch Step: 735 / 819 Loss: 26.67958641052246 Tokens per Sec: 25375.17997240776
Epoch Step: 740 / 819 Loss: 26.164779663085938 Tokens per Sec: 25514.773127222277
Epoch Step: 745 / 819 Loss: 254.10423278808594 Tokens per Sec: 25318.47210961633
Epoch Step: 750 / 819 Loss: 33.16367721557617 Tokens per Sec: 25655.91208782249
Epoch Step: 755 / 819 Loss: 26.324243545532227 Tokens per Sec: 26615.834446063745
Epoch Step: 760 / 819 Loss: 33.001895904541016 Tokens per Sec: 27023.471446601263
Epoch Step: 765 / 819 Loss: 273.9067077636719 Tokens per Sec: 23943.784865619236
Epoch Step: 770 / 819 Loss: 41.432952880859375 Tokens per Sec: 26563.15842077348
Epoch Step: 775 / 819 Loss: 25.493465423583984 Tokens per Sec: 24854.78344199315
Epoch Step: 780 / 819 Loss: 39.40581512451172 Tokens per Sec: 25609.661086542135
Epoch Step: 785 / 819 Loss: 35.5152587890625 Tokens per Sec: 24846.014811032932
Epoch Step: 790 / 819 Loss: 23.377397537231445 Tokens per Sec: 26531.270154943973
Epoch Step: 795 / 819 Loss: 27.229022979736328 Tokens per Sec: 24630.1118596458
Epoch Step: 800 / 819 Loss: 22.426252365112305 Tokens per Sec: 25571.947030205272
Epoch Step: 805 / 819 Loss: 26.41624641418457 Tokens per Sec: 19449.318693108347
Epoch Step: 810 / 819 Loss: 265.1519775390625 Tokens per Sec: 25078.329254233995
Epoch Step: 815 / 819 Loss: 28.825166702270508 Tokens per Sec: 23530.5277076593
Epoch ended with duration 0:02:31.568876
Train perplexity: 2.0269898768205907
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) true ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.330698
Validation perplexity: 1.8214209468035951
Model saved best_on_validation!
Epoch 9 / 1000
Epoch Step: 5 / 819 Loss: 34.37729263305664 Tokens per Sec: 24650.884904005
Epoch Step: 10 / 819 Loss: 41.25669479370117 Tokens per Sec: 27886.54652698542
Epoch Step: 15 / 819 Loss: 37.829978942871094 Tokens per Sec: 24822.575980583555
Epoch Step: 20 / 819 Loss: 31.677549362182617 Tokens per Sec: 23719.83177684791
Epoch Step: 25 / 819 Loss: 30.052886962890625 Tokens per Sec: 26446.49191092922
Epoch Step: 30 / 819 Loss: 28.140644073486328 Tokens per Sec: 27963.131809118113
Epoch Step: 35 / 819 Loss: 31.15655517578125 Tokens per Sec: 26315.503494487515
Epoch Step: 40 / 819 Loss: 28.011045455932617 Tokens per Sec: 26533.967922978667
Epoch Step: 45 / 819 Loss: 27.157615661621094 Tokens per Sec: 26474.74240158594
Epoch Step: 50 / 819 Loss: 239.46656799316406 Tokens per Sec: 26144.00313894708
Epoch Step: 55 / 819 Loss: 37.37171936035156 Tokens per Sec: 25797.7473374616
Epoch Step: 60 / 819 Loss: 25.962305068969727 Tokens per Sec: 28338.921159679172
Epoch Step: 65 / 819 Loss: 19.203201293945312 Tokens per Sec: 24089.61461149135
Epoch Step: 70 / 819 Loss: 182.661376953125 Tokens per Sec: 21985.947707896295
Epoch Step: 75 / 819 Loss: 34.0242805480957 Tokens per Sec: 23642.449631513984
Epoch Step: 80 / 819 Loss: 33.27898025512695 Tokens per Sec: 26569.318161973733
Epoch Step: 85 / 819 Loss: 24.78606414794922 Tokens per Sec: 25310.83186400337
Epoch Step: 90 / 819 Loss: 30.467424392700195 Tokens per Sec: 25172.990754311908
Epoch Step: 95 / 819 Loss: 33.240299224853516 Tokens per Sec: 26190.72373165002
Epoch Step: 100 / 819 Loss: 37.70936584472656 Tokens per Sec: 25194.420627178286
Epoch Step: 105 / 819 Loss: 21.719846725463867 Tokens per Sec: 27012.121795289935
Epoch Step: 110 / 819 Loss: 24.546728134155273 Tokens per Sec: 26918.95500024106
Epoch Step: 115 / 819 Loss: 24.23234748840332 Tokens per Sec: 23731.612085485027
Epoch Step: 120 / 819 Loss: 30.96868896484375 Tokens per Sec: 27444.522523294152
Epoch Step: 125 / 819 Loss: 33.67879104614258 Tokens per Sec: 23649.717644988683
Epoch Step: 130 / 819 Loss: 37.49622344970703 Tokens per Sec: 24452.396682057315
Epoch Step: 135 / 819 Loss: 25.65641975402832 Tokens per Sec: 26143.70328029139
Epoch Step: 140 / 819 Loss: 26.256380081176758 Tokens per Sec: 24862.56728395855
Epoch Step: 145 / 819 Loss: 38.16482162475586 Tokens per Sec: 26970.11212089834
Epoch Step: 150 / 819 Loss: 28.781692504882812 Tokens per Sec: 25691.08958000032
Epoch Step: 155 / 819 Loss: 17.8842716217041 Tokens per Sec: 25865.1881159819
Epoch Step: 160 / 819 Loss: 285.05938720703125 Tokens per Sec: 26299.093103851563
Epoch Step: 165 / 819 Loss: 33.46371078491211 Tokens per Sec: 27890.787563661117
Epoch Step: 170 / 819 Loss: 38.72736358642578 Tokens per Sec: 26624.931541247126
Epoch Step: 175 / 819 Loss: 29.179391860961914 Tokens per Sec: 24567.65848642521
Epoch Step: 180 / 819 Loss: 30.786985397338867 Tokens per Sec: 26771.512782945563
Epoch Step: 185 / 819 Loss: 34.51276397705078 Tokens per Sec: 24563.11189616713
Epoch Step: 190 / 819 Loss: 24.796709060668945 Tokens per Sec: 25007.043351647528
Epoch Step: 195 / 819 Loss: 31.241432189941406 Tokens per Sec: 24972.48656756608
Epoch Step: 200 / 819 Loss: 27.639253616333008 Tokens per Sec: 26435.97234662777
Epoch Step: 205 / 819 Loss: 22.527942657470703 Tokens per Sec: 27307.516693363836
Epoch Step: 210 / 819 Loss: 35.730369567871094 Tokens per Sec: 23722.148780847758
Epoch Step: 215 / 819 Loss: 164.2320098876953 Tokens per Sec: 25361.380942092186
Epoch Step: 220 / 819 Loss: 24.26902198791504 Tokens per Sec: 27800.376405817085
Epoch Step: 225 / 819 Loss: 23.2115535736084 Tokens per Sec: 26583.822402742455
Epoch Step: 230 / 819 Loss: 26.07263946533203 Tokens per Sec: 26717.292433929695
Epoch Step: 235 / 819 Loss: 30.03580665588379 Tokens per Sec: 23529.032951504487
Epoch Step: 240 / 819 Loss: 25.962121963500977 Tokens per Sec: 26420.258021608406
Epoch Step: 245 / 819 Loss: 172.25311279296875 Tokens per Sec: 24572.15275203309
Epoch Step: 250 / 819 Loss: 279.5745849609375 Tokens per Sec: 24002.968603166188
Epoch Step: 255 / 819 Loss: 254.5528564453125 Tokens per Sec: 26712.400291674236
Epoch Step: 260 / 819 Loss: 32.968589782714844 Tokens per Sec: 25671.885811171265
Epoch Step: 265 / 819 Loss: 31.937559127807617 Tokens per Sec: 26470.945429281393
Epoch Step: 270 / 819 Loss: 33.61590576171875 Tokens per Sec: 26482.101983732104
Epoch Step: 275 / 819 Loss: 32.236202239990234 Tokens per Sec: 25048.359804587057
Epoch Step: 280 / 819 Loss: 274.0268859863281 Tokens per Sec: 24072.93127313337
Epoch Step: 285 / 819 Loss: 31.201929092407227 Tokens per Sec: 25705.909630490238
Epoch Step: 290 / 819 Loss: 235.81805419921875 Tokens per Sec: 26009.93891636526
Epoch Step: 295 / 819 Loss: 30.835350036621094 Tokens per Sec: 25255.235815921464
Epoch Step: 300 / 819 Loss: 31.456192016601562 Tokens per Sec: 24684.777653379715
Epoch Step: 305 / 819 Loss: 32.716697692871094 Tokens per Sec: 24459.59714656588
Epoch Step: 310 / 819 Loss: 34.58333206176758 Tokens per Sec: 25418.268332259533
Epoch Step: 315 / 819 Loss: 29.70598030090332 Tokens per Sec: 25191.89849531068
Epoch Step: 320 / 819 Loss: 30.44756507873535 Tokens per Sec: 24306.400721136753
Epoch Step: 325 / 819 Loss: 32.273414611816406 Tokens per Sec: 25037.030972734086
Epoch Step: 330 / 819 Loss: 25.088977813720703 Tokens per Sec: 26636.96245447208
Epoch Step: 335 / 819 Loss: 134.8402557373047 Tokens per Sec: 24324.743526230042
Epoch Step: 340 / 819 Loss: 272.1367492675781 Tokens per Sec: 25439.153006347584
Epoch Step: 345 / 819 Loss: 30.465251922607422 Tokens per Sec: 24943.693885881905
Epoch Step: 350 / 819 Loss: 20.89316749572754 Tokens per Sec: 27836.497623988602
Epoch Step: 355 / 819 Loss: 24.057971954345703 Tokens per Sec: 27248.231064601794
Epoch Step: 360 / 819 Loss: 20.719099044799805 Tokens per Sec: 25468.215247944125
Epoch Step: 365 / 819 Loss: 109.69384002685547 Tokens per Sec: 25654.262550834053
Epoch Step: 370 / 819 Loss: 35.22901916503906 Tokens per Sec: 25209.048778350425
Epoch Step: 375 / 819 Loss: 31.226104736328125 Tokens per Sec: 26479.41925623729
Epoch Step: 380 / 819 Loss: 32.36295700073242 Tokens per Sec: 24049.887288700826
Epoch Step: 385 / 819 Loss: 34.776954650878906 Tokens per Sec: 27041.417521402935
Epoch Step: 390 / 819 Loss: 34.727787017822266 Tokens per Sec: 27026.5787827419
Epoch Step: 395 / 819 Loss: 21.84954261779785 Tokens per Sec: 26708.84117609002
Epoch Step: 400 / 819 Loss: 24.50090789794922 Tokens per Sec: 24501.914480701056
Epoch Step: 405 / 819 Loss: 238.22879028320312 Tokens per Sec: 24609.062517139817
Epoch Step: 410 / 819 Loss: 30.21541404724121 Tokens per Sec: 24208.774725387455
Epoch Step: 415 / 819 Loss: 29.711196899414062 Tokens per Sec: 27163.397110703667
Epoch Step: 420 / 819 Loss: 31.224477767944336 Tokens per Sec: 27732.160813246704
Epoch Step: 425 / 819 Loss: 232.51893615722656 Tokens per Sec: 25809.50011160374
Epoch Step: 430 / 819 Loss: 151.4761199951172 Tokens per Sec: 25155.247882748532
Epoch Step: 435 / 819 Loss: 34.584110260009766 Tokens per Sec: 25590.640639609213
Epoch Step: 440 / 819 Loss: 27.995620727539062 Tokens per Sec: 26245.680851346977
Epoch Step: 445 / 819 Loss: 24.04584312438965 Tokens per Sec: 27885.396517699275
Epoch Step: 450 / 819 Loss: 34.708648681640625 Tokens per Sec: 25545.61787612798
Epoch Step: 455 / 819 Loss: 28.923500061035156 Tokens per Sec: 24685.225572742704
Epoch Step: 460 / 819 Loss: 32.618438720703125 Tokens per Sec: 25399.268497602217
Epoch Step: 465 / 819 Loss: 22.73953628540039 Tokens per Sec: 26720.597701503044
Epoch Step: 470 / 819 Loss: 34.75099563598633 Tokens per Sec: 25214.26856423047
Epoch Step: 475 / 819 Loss: 209.73724365234375 Tokens per Sec: 27022.725845186
Epoch Step: 480 / 819 Loss: 33.46056365966797 Tokens per Sec: 26957.866460631547
Epoch Step: 485 / 819 Loss: 184.0934295654297 Tokens per Sec: 25371.23086643667
Epoch Step: 490 / 819 Loss: 24.142271041870117 Tokens per Sec: 26575.158225485182
Epoch Step: 495 / 819 Loss: 26.132354736328125 Tokens per Sec: 26314.89824176221
Epoch Step: 500 / 819 Loss: 28.236412048339844 Tokens per Sec: 25559.978848592982
Epoch Step: 505 / 819 Loss: 25.177501678466797 Tokens per Sec: 25080.430980708996
Epoch Step: 510 / 819 Loss: 28.869247436523438 Tokens per Sec: 25951.867895778814
Epoch Step: 515 / 819 Loss: 33.60702133178711 Tokens per Sec: 23534.51409176951
Epoch Step: 520 / 819 Loss: 31.219818115234375 Tokens per Sec: 27714.216364025524
Epoch Step: 525 / 819 Loss: 35.999149322509766 Tokens per Sec: 26314.218645557947
Epoch Step: 530 / 819 Loss: 22.568008422851562 Tokens per Sec: 25696.58470769385
Epoch Step: 535 / 819 Loss: 29.13043975830078 Tokens per Sec: 26502.49431570934
Epoch Step: 540 / 819 Loss: 294.0287780761719 Tokens per Sec: 25481.034494597414
Epoch Step: 545 / 819 Loss: 26.75273323059082 Tokens per Sec: 25752.04453071967
Epoch Step: 550 / 819 Loss: 36.82157897949219 Tokens per Sec: 24927.238760836502
Epoch Step: 555 / 819 Loss: 37.04529571533203 Tokens per Sec: 25550.88215556649
Epoch Step: 560 / 819 Loss: 24.50537872314453 Tokens per Sec: 25897.30610307697
Epoch Step: 565 / 819 Loss: 155.01629638671875 Tokens per Sec: 26407.291625727226
Epoch Step: 570 / 819 Loss: 196.25340270996094 Tokens per Sec: 24845.6020540986
Epoch Step: 575 / 819 Loss: 33.83255386352539 Tokens per Sec: 25737.076490505413
Epoch Step: 580 / 819 Loss: 208.48321533203125 Tokens per Sec: 26261.99316550139
Epoch Step: 585 / 819 Loss: 41.4866828918457 Tokens per Sec: 24236.45696985329
Epoch Step: 590 / 819 Loss: 214.17271423339844 Tokens per Sec: 24876.510767459968
Epoch Step: 595 / 819 Loss: 32.20807647705078 Tokens per Sec: 25445.008910365003
Epoch Step: 600 / 819 Loss: 27.020448684692383 Tokens per Sec: 25951.612424687108
Epoch Step: 605 / 819 Loss: 23.49976348876953 Tokens per Sec: 26438.494433602522
Epoch Step: 610 / 819 Loss: 34.459442138671875 Tokens per Sec: 26379.664065550096
Epoch Step: 615 / 819 Loss: 34.14110565185547 Tokens per Sec: 26784.506111820785
Epoch Step: 620 / 819 Loss: 268.9456787109375 Tokens per Sec: 25745.362743446818
Epoch Step: 625 / 819 Loss: 30.83367347717285 Tokens per Sec: 25926.411519954698
Epoch Step: 630 / 819 Loss: 37.25249099731445 Tokens per Sec: 26223.04663274416
Epoch Step: 635 / 819 Loss: 25.429189682006836 Tokens per Sec: 25698.9970413073
Epoch Step: 640 / 819 Loss: 37.81623840332031 Tokens per Sec: 23731.492355514434
Epoch Step: 645 / 819 Loss: 31.331483840942383 Tokens per Sec: 28445.2171685236
Epoch Step: 650 / 819 Loss: 134.10296630859375 Tokens per Sec: 27946.847486129114
Epoch Step: 655 / 819 Loss: 30.912120819091797 Tokens per Sec: 27149.267452571847
Epoch Step: 660 / 819 Loss: 23.186811447143555 Tokens per Sec: 27187.401876131953
Epoch Step: 665 / 819 Loss: 29.984472274780273 Tokens per Sec: 24583.938612250728
Epoch Step: 670 / 819 Loss: 23.343904495239258 Tokens per Sec: 25956.644793729527
Epoch Step: 675 / 819 Loss: 31.800901412963867 Tokens per Sec: 24098.761067138148
Epoch Step: 680 / 819 Loss: 29.644378662109375 Tokens per Sec: 26911.082546881345
Epoch Step: 685 / 819 Loss: 23.535402297973633 Tokens per Sec: 23112.91425751532
Epoch Step: 690 / 819 Loss: 25.900976181030273 Tokens per Sec: 23373.17920202666
Epoch Step: 695 / 819 Loss: 23.2956485748291 Tokens per Sec: 28148.13831749521
Epoch Step: 700 / 819 Loss: 25.41445541381836 Tokens per Sec: 25100.352405089416
Epoch Step: 705 / 819 Loss: 21.316694259643555 Tokens per Sec: 25985.52238609693
Epoch Step: 710 / 819 Loss: 29.71422576904297 Tokens per Sec: 27559.85032645381
Epoch Step: 715 / 819 Loss: 30.7191219329834 Tokens per Sec: 25460.76078214487
Epoch Step: 720 / 819 Loss: 24.86418914794922 Tokens per Sec: 28032.825282124093
Epoch Step: 725 / 819 Loss: 17.356430053710938 Tokens per Sec: 25081.319129113497
Epoch Step: 730 / 819 Loss: 29.824710845947266 Tokens per Sec: 26940.048715823796
Epoch Step: 735 / 819 Loss: 33.915130615234375 Tokens per Sec: 27011.213005879024
Epoch Step: 740 / 819 Loss: 143.07876586914062 Tokens per Sec: 25973.87976375857
Epoch Step: 745 / 819 Loss: 23.723636627197266 Tokens per Sec: 25722.457701024803
Epoch Step: 750 / 819 Loss: 32.5117301940918 Tokens per Sec: 26734.678214695807
Epoch Step: 755 / 819 Loss: 30.536888122558594 Tokens per Sec: 24097.69020660066
Epoch Step: 760 / 819 Loss: 30.248807907104492 Tokens per Sec: 25388.26926806711
Epoch Step: 765 / 819 Loss: 26.136762619018555 Tokens per Sec: 26512.35687566072
Epoch Step: 770 / 819 Loss: 33.6187629699707 Tokens per Sec: 27594.914603033965
Epoch Step: 775 / 819 Loss: 34.889259338378906 Tokens per Sec: 26493.083019542562
Epoch Step: 780 / 819 Loss: 28.202362060546875 Tokens per Sec: 24778.71195093235
Epoch Step: 785 / 819 Loss: 21.61076545715332 Tokens per Sec: 21241.096177549713
Epoch Step: 790 / 819 Loss: 29.83260154724121 Tokens per Sec: 25646.747388826498
Epoch Step: 795 / 819 Loss: 24.96052360534668 Tokens per Sec: 29205.019701468806
Epoch Step: 800 / 819 Loss: 29.324554443359375 Tokens per Sec: 27681.881965225188
Epoch Step: 805 / 819 Loss: 24.79306983947754 Tokens per Sec: 25220.33673833999
Epoch Step: 810 / 819 Loss: 27.048419952392578 Tokens per Sec: 23455.09468493429
Epoch Step: 815 / 819 Loss: 24.713367462158203 Tokens per Sec: 24194.42264009967
Epoch ended with duration 0:02:31.129369
Train perplexity: 1.9055390965081287
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.291199
Validation perplexity: 1.7801486125638928
Model saved best_on_validation!
Epoch 10 / 1000
Epoch Step: 5 / 819 Loss: 269.2828369140625 Tokens per Sec: 24689.477751891896
Epoch Step: 10 / 819 Loss: 28.730377197265625 Tokens per Sec: 25853.225297133915
Epoch Step: 15 / 819 Loss: 25.092792510986328 Tokens per Sec: 24260.637161741277
Epoch Step: 20 / 819 Loss: 19.175098419189453 Tokens per Sec: 27388.109108287907
Epoch Step: 25 / 819 Loss: 16.26394271850586 Tokens per Sec: 24548.880609802698
Epoch Step: 30 / 819 Loss: 26.308561325073242 Tokens per Sec: 26409.424881706032
Epoch Step: 35 / 819 Loss: 33.84474182128906 Tokens per Sec: 25268.22062749653
Epoch Step: 40 / 819 Loss: 32.36116409301758 Tokens per Sec: 26969.910226586584
Epoch Step: 45 / 819 Loss: 24.625455856323242 Tokens per Sec: 24972.867357456736
Epoch Step: 50 / 819 Loss: 25.974029541015625 Tokens per Sec: 26400.65958941024
Epoch Step: 55 / 819 Loss: 25.28679084777832 Tokens per Sec: 24121.353660444693
Epoch Step: 60 / 819 Loss: 19.93833351135254 Tokens per Sec: 27103.357466715937
Epoch Step: 65 / 819 Loss: 33.16338348388672 Tokens per Sec: 26623.95044481905
Epoch Step: 70 / 819 Loss: 24.779115676879883 Tokens per Sec: 25884.86681497762
Epoch Step: 75 / 819 Loss: 26.171112060546875 Tokens per Sec: 25051.759094216708
Epoch Step: 80 / 819 Loss: 27.583175659179688 Tokens per Sec: 23742.90631913671
Epoch Step: 85 / 819 Loss: 32.384498596191406 Tokens per Sec: 26520.477194122934
Epoch Step: 90 / 819 Loss: 18.87122917175293 Tokens per Sec: 27643.334662867837
Epoch Step: 95 / 819 Loss: 19.287059783935547 Tokens per Sec: 26930.85027222607
Epoch Step: 100 / 819 Loss: 31.163034439086914 Tokens per Sec: 25699.791095264845
Epoch Step: 105 / 819 Loss: 31.73267364501953 Tokens per Sec: 26669.311695422326
Epoch Step: 110 / 819 Loss: 23.49809455871582 Tokens per Sec: 25273.49595824793
Epoch Step: 115 / 819 Loss: 24.65160369873047 Tokens per Sec: 25875.024791685355
Epoch Step: 120 / 819 Loss: 30.62680435180664 Tokens per Sec: 27089.39320179851
Epoch Step: 125 / 819 Loss: 26.731836318969727 Tokens per Sec: 27065.74734770924
Epoch Step: 130 / 819 Loss: 27.42401123046875 Tokens per Sec: 24923.27765613004
Epoch Step: 135 / 819 Loss: 16.43560028076172 Tokens per Sec: 24654.312014914518
Epoch Step: 140 / 819 Loss: 27.01876449584961 Tokens per Sec: 23880.438997277462
Epoch Step: 145 / 819 Loss: 21.41574478149414 Tokens per Sec: 25438.300284697976
Epoch Step: 150 / 819 Loss: 25.840087890625 Tokens per Sec: 25880.25408457851
Epoch Step: 155 / 819 Loss: 30.29582977294922 Tokens per Sec: 26706.907673329588
Epoch Step: 160 / 819 Loss: 29.706300735473633 Tokens per Sec: 24166.577017389005
Epoch Step: 165 / 819 Loss: 28.59428596496582 Tokens per Sec: 23375.461156002442
Epoch Step: 170 / 819 Loss: 20.330049514770508 Tokens per Sec: 26879.460970757384
Epoch Step: 175 / 819 Loss: 31.58153533935547 Tokens per Sec: 23689.04876364362
Epoch Step: 180 / 819 Loss: 207.41127014160156 Tokens per Sec: 26192.93050080213
Epoch Step: 185 / 819 Loss: 32.40426254272461 Tokens per Sec: 25882.59216428318
Epoch Step: 190 / 819 Loss: 24.127103805541992 Tokens per Sec: 27937.36459664209
Epoch Step: 195 / 819 Loss: 20.708555221557617 Tokens per Sec: 25599.738401217357
Epoch Step: 200 / 819 Loss: 33.800785064697266 Tokens per Sec: 26217.481744659344
Epoch Step: 205 / 819 Loss: 28.954116821289062 Tokens per Sec: 25764.39128211797
Epoch Step: 210 / 819 Loss: 25.68151092529297 Tokens per Sec: 24653.803376443873
Epoch Step: 215 / 819 Loss: 138.5167236328125 Tokens per Sec: 25482.385283176674
Epoch Step: 220 / 819 Loss: 32.82199478149414 Tokens per Sec: 27397.061274928656
Epoch Step: 225 / 819 Loss: 25.72693634033203 Tokens per Sec: 27506.32926897456
Epoch Step: 230 / 819 Loss: 20.79775047302246 Tokens per Sec: 26257.811434549298
Epoch Step: 235 / 819 Loss: 26.445079803466797 Tokens per Sec: 25892.225642822872
Epoch Step: 240 / 819 Loss: 23.277162551879883 Tokens per Sec: 27093.636770924182
Epoch Step: 245 / 819 Loss: 16.4188232421875 Tokens per Sec: 25988.06731760967
Epoch Step: 250 / 819 Loss: 30.57457733154297 Tokens per Sec: 25143.74573855262
Epoch Step: 255 / 819 Loss: 16.51815414428711 Tokens per Sec: 27201.184394918128
Epoch Step: 260 / 819 Loss: 27.89731216430664 Tokens per Sec: 27749.843897102404
Epoch Step: 265 / 819 Loss: 22.74786376953125 Tokens per Sec: 25949.794020862686
Epoch Step: 270 / 819 Loss: 198.98130798339844 Tokens per Sec: 25440.3199292736
Epoch Step: 275 / 819 Loss: 131.4414825439453 Tokens per Sec: 26089.847530250794
Epoch Step: 280 / 819 Loss: 18.926944732666016 Tokens per Sec: 23546.928644305422
Epoch Step: 285 / 819 Loss: 26.713699340820312 Tokens per Sec: 24896.29619111665
Epoch Step: 290 / 819 Loss: 18.476863861083984 Tokens per Sec: 23766.11893922284
Epoch Step: 295 / 819 Loss: 29.016342163085938 Tokens per Sec: 23852.952024594906
Epoch Step: 300 / 819 Loss: 136.89529418945312 Tokens per Sec: 28067.248756093166
Epoch Step: 305 / 819 Loss: 29.845094680786133 Tokens per Sec: 25004.171678956245
Epoch Step: 310 / 819 Loss: 26.218250274658203 Tokens per Sec: 26872.6354043514
Epoch Step: 315 / 819 Loss: 27.53806495666504 Tokens per Sec: 27255.315353567934
Epoch Step: 320 / 819 Loss: 23.177446365356445 Tokens per Sec: 26653.10978883779
Epoch Step: 325 / 819 Loss: 20.871829986572266 Tokens per Sec: 27872.02999205477
Epoch Step: 330 / 819 Loss: 30.219505310058594 Tokens per Sec: 23933.61753117519
Epoch Step: 335 / 819 Loss: 27.34531021118164 Tokens per Sec: 24420.71909448669
Epoch Step: 340 / 819 Loss: 28.373779296875 Tokens per Sec: 26762.572174953417
Epoch Step: 345 / 819 Loss: 21.494102478027344 Tokens per Sec: 25939.909341614435
Epoch Step: 350 / 819 Loss: 32.81687927246094 Tokens per Sec: 25133.816278848255
Epoch Step: 355 / 819 Loss: 30.27530288696289 Tokens per Sec: 26048.49950309956
Epoch Step: 360 / 819 Loss: 21.7570743560791 Tokens per Sec: 23229.8888684034
Epoch Step: 365 / 819 Loss: 21.34958267211914 Tokens per Sec: 26372.643742277218
Epoch Step: 370 / 819 Loss: 21.753524780273438 Tokens per Sec: 25311.022684133168
Epoch Step: 375 / 819 Loss: 17.4377498626709 Tokens per Sec: 25554.52886324918
Epoch Step: 380 / 819 Loss: 18.816415786743164 Tokens per Sec: 25850.9695546793
Epoch Step: 385 / 819 Loss: 26.688907623291016 Tokens per Sec: 27685.981515388525
Epoch Step: 390 / 819 Loss: 24.048757553100586 Tokens per Sec: 26281.068846518967
Epoch Step: 395 / 819 Loss: 26.83054542541504 Tokens per Sec: 24065.324260863235
Epoch Step: 400 / 819 Loss: 31.90658950805664 Tokens per Sec: 24855.92836309611
Epoch Step: 405 / 819 Loss: 16.134511947631836 Tokens per Sec: 27211.61656724744
Epoch Step: 410 / 819 Loss: 226.3638153076172 Tokens per Sec: 25537.064018967983
Epoch Step: 415 / 819 Loss: 30.93538475036621 Tokens per Sec: 23695.75806775029
Epoch Step: 420 / 819 Loss: 23.161352157592773 Tokens per Sec: 25935.67549796086
Epoch Step: 425 / 819 Loss: 19.13833999633789 Tokens per Sec: 26137.941709215014
Epoch Step: 430 / 819 Loss: 21.714412689208984 Tokens per Sec: 23335.047991102758
Epoch Step: 435 / 819 Loss: 24.607263565063477 Tokens per Sec: 25491.228341894333
Epoch Step: 440 / 819 Loss: 31.441085815429688 Tokens per Sec: 27153.009090455853
Epoch Step: 445 / 819 Loss: 34.65489959716797 Tokens per Sec: 24584.830452979928
Epoch Step: 450 / 819 Loss: 210.1683807373047 Tokens per Sec: 25532.838492074203
Epoch Step: 455 / 819 Loss: 28.431270599365234 Tokens per Sec: 24553.628630486277
Epoch Step: 460 / 819 Loss: 261.6175537109375 Tokens per Sec: 26773.0070114969
Epoch Step: 465 / 819 Loss: 39.945255279541016 Tokens per Sec: 25963.399865163075
Epoch Step: 470 / 819 Loss: 30.05140495300293 Tokens per Sec: 26200.031675074086
Epoch Step: 475 / 819 Loss: 27.401161193847656 Tokens per Sec: 26106.070889031067
Epoch Step: 480 / 819 Loss: 29.28036880493164 Tokens per Sec: 27138.387333275983
Epoch Step: 485 / 819 Loss: 31.187381744384766 Tokens per Sec: 26589.265688351497
Epoch Step: 490 / 819 Loss: 30.319196701049805 Tokens per Sec: 25406.027024067243
Epoch Step: 495 / 819 Loss: 29.32720184326172 Tokens per Sec: 27697.223647415256
Epoch Step: 500 / 819 Loss: 23.07708168029785 Tokens per Sec: 25004.59239031121
Epoch Step: 505 / 819 Loss: 22.9987735748291 Tokens per Sec: 25727.537176230206
Epoch Step: 510 / 819 Loss: 29.969234466552734 Tokens per Sec: 25434.71613695383
Epoch Step: 515 / 819 Loss: 20.57923698425293 Tokens per Sec: 26916.536098134762
Epoch Step: 520 / 819 Loss: 25.810224533081055 Tokens per Sec: 26757.80801960056
Epoch Step: 525 / 819 Loss: 33.26200866699219 Tokens per Sec: 24489.35388242445
Epoch Step: 530 / 819 Loss: 36.57487106323242 Tokens per Sec: 26980.791894242866
Epoch Step: 535 / 819 Loss: 27.7077693939209 Tokens per Sec: 28327.641032009393
Epoch Step: 540 / 819 Loss: 29.59125518798828 Tokens per Sec: 25164.010726047767
Epoch Step: 545 / 819 Loss: 25.44818115234375 Tokens per Sec: 26569.207371345747
Epoch Step: 550 / 819 Loss: 29.91324806213379 Tokens per Sec: 26116.036188082566
Epoch Step: 555 / 819 Loss: 163.52783203125 Tokens per Sec: 27779.588768089274
Epoch Step: 560 / 819 Loss: 26.58066749572754 Tokens per Sec: 27671.03837042501
Epoch Step: 565 / 819 Loss: 15.61950397491455 Tokens per Sec: 26295.61396409644
Epoch Step: 570 / 819 Loss: 29.047258377075195 Tokens per Sec: 24672.24588574599
Epoch Step: 575 / 819 Loss: 31.705772399902344 Tokens per Sec: 25933.44735791613
Epoch Step: 580 / 819 Loss: 30.013629913330078 Tokens per Sec: 24293.705415168817
Epoch Step: 585 / 819 Loss: 24.55683708190918 Tokens per Sec: 24022.10582104505
Epoch Step: 590 / 819 Loss: 38.03352737426758 Tokens per Sec: 24672.621755286484
Epoch Step: 595 / 819 Loss: 233.0660858154297 Tokens per Sec: 24215.784134233094
Epoch Step: 600 / 819 Loss: 192.60025024414062 Tokens per Sec: 23924.05150481011
Epoch Step: 605 / 819 Loss: 201.62100219726562 Tokens per Sec: 26462.009141859155
Epoch Step: 610 / 819 Loss: 25.934572219848633 Tokens per Sec: 26430.2472112433
Epoch Step: 615 / 819 Loss: 27.913278579711914 Tokens per Sec: 26113.786403108785
Epoch Step: 620 / 819 Loss: 30.31208610534668 Tokens per Sec: 25680.309546022927
Epoch Step: 625 / 819 Loss: 31.131738662719727 Tokens per Sec: 25305.152093865527
Epoch Step: 630 / 819 Loss: 24.563610076904297 Tokens per Sec: 28312.93800496101
Epoch Step: 635 / 819 Loss: 36.224021911621094 Tokens per Sec: 25687.901042634014
Epoch Step: 640 / 819 Loss: 32.122867584228516 Tokens per Sec: 23482.6054555374
Epoch Step: 645 / 819 Loss: 29.15241813659668 Tokens per Sec: 26471.07290074904
Epoch Step: 650 / 819 Loss: 24.436071395874023 Tokens per Sec: 28066.097031347836
Epoch Step: 655 / 819 Loss: 24.568946838378906 Tokens per Sec: 26221.112029284268
Epoch Step: 660 / 819 Loss: 20.464216232299805 Tokens per Sec: 24813.842512746058
Epoch Step: 665 / 819 Loss: 22.479890823364258 Tokens per Sec: 24453.781567505794
Epoch Step: 670 / 819 Loss: 32.36149978637695 Tokens per Sec: 26580.08625681184
Epoch Step: 675 / 819 Loss: 22.393184661865234 Tokens per Sec: 25998.05196513059
Epoch Step: 680 / 819 Loss: 29.074283599853516 Tokens per Sec: 25899.942027478395
Epoch Step: 685 / 819 Loss: 19.008602142333984 Tokens per Sec: 25629.925077601296
Epoch Step: 690 / 819 Loss: 18.487133026123047 Tokens per Sec: 26144.796636936237
Epoch Step: 695 / 819 Loss: 27.26035499572754 Tokens per Sec: 25356.129366695623
Epoch Step: 700 / 819 Loss: 28.73711585998535 Tokens per Sec: 26185.512215417686
Epoch Step: 705 / 819 Loss: 26.15004539489746 Tokens per Sec: 26503.804136635583
Epoch Step: 710 / 819 Loss: 21.80951499938965 Tokens per Sec: 25129.104843795292
Epoch Step: 715 / 819 Loss: 26.8641414642334 Tokens per Sec: 26303.286468048183
Epoch Step: 720 / 819 Loss: 20.46869659423828 Tokens per Sec: 26123.14380650613
Epoch Step: 725 / 819 Loss: 17.79364013671875 Tokens per Sec: 24296.449713830363
Epoch Step: 730 / 819 Loss: 27.083826065063477 Tokens per Sec: 26670.370945002698
Epoch Step: 735 / 819 Loss: 26.313770294189453 Tokens per Sec: 23578.096046727685
Epoch Step: 740 / 819 Loss: 20.016000747680664 Tokens per Sec: 24802.243758995046
Epoch Step: 745 / 819 Loss: 25.544239044189453 Tokens per Sec: 23498.563933113193
Epoch Step: 750 / 819 Loss: 23.592266082763672 Tokens per Sec: 25488.94745272106
Epoch Step: 755 / 819 Loss: 21.290969848632812 Tokens per Sec: 27299.880169965167
Epoch Step: 760 / 819 Loss: 30.682649612426758 Tokens per Sec: 23802.454712711697
Epoch Step: 765 / 819 Loss: 20.606033325195312 Tokens per Sec: 26083.194630880123
Epoch Step: 770 / 819 Loss: 24.470550537109375 Tokens per Sec: 25722.397807367208
Epoch Step: 775 / 819 Loss: 21.807174682617188 Tokens per Sec: 26457.9511750671
Epoch Step: 780 / 819 Loss: 29.7022762298584 Tokens per Sec: 27868.4814253489
Epoch Step: 785 / 819 Loss: 30.190258026123047 Tokens per Sec: 28136.01495038135
Epoch Step: 790 / 819 Loss: 22.563127517700195 Tokens per Sec: 25760.25307801055
Epoch Step: 795 / 819 Loss: 19.50001335144043 Tokens per Sec: 26201.99852596285
Epoch Step: 800 / 819 Loss: 272.536865234375 Tokens per Sec: 25667.588336578225
Epoch Step: 805 / 819 Loss: 20.793107986450195 Tokens per Sec: 19770.097957243077
Epoch Step: 810 / 819 Loss: 29.035768508911133 Tokens per Sec: 21701.9374034299
Epoch Step: 815 / 819 Loss: 30.126317977905273 Tokens per Sec: 24852.319797639884
Epoch ended with duration 0:02:31.131834
Train perplexity: 1.8003782217478277
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.280106
Validation perplexity: 1.765255746925148
Model saved best_on_validation!
Model saved checkpoint!
Epoch 11 / 1000
Epoch Step: 5 / 819 Loss: 29.470258712768555 Tokens per Sec: 24564.250602229724
Epoch Step: 10 / 819 Loss: 18.10582733154297 Tokens per Sec: 25663.01762409867
Epoch Step: 15 / 819 Loss: 33.0634880065918 Tokens per Sec: 24084.68617934225
Epoch Step: 20 / 819 Loss: 201.9299774169922 Tokens per Sec: 25226.820423052628
Epoch Step: 25 / 819 Loss: 27.60797691345215 Tokens per Sec: 25391.88765138015
Epoch Step: 30 / 819 Loss: 20.746126174926758 Tokens per Sec: 24964.27984877572
Epoch Step: 35 / 819 Loss: 28.77727699279785 Tokens per Sec: 25675.778795278748
Epoch Step: 40 / 819 Loss: 273.96453857421875 Tokens per Sec: 24677.643885939662
Epoch Step: 45 / 819 Loss: 28.659000396728516 Tokens per Sec: 23616.61154513837
Epoch Step: 50 / 819 Loss: 29.321456909179688 Tokens per Sec: 27379.01807001056
Epoch Step: 55 / 819 Loss: 26.877395629882812 Tokens per Sec: 25315.998809031254
Epoch Step: 60 / 819 Loss: 36.27892303466797 Tokens per Sec: 26271.133258179056
Epoch Step: 65 / 819 Loss: 23.361724853515625 Tokens per Sec: 25648.23551811628
Epoch Step: 70 / 819 Loss: 30.725011825561523 Tokens per Sec: 25885.749442692708
Epoch Step: 75 / 819 Loss: 28.64884376525879 Tokens per Sec: 25675.93062001243
Epoch Step: 80 / 819 Loss: 19.11029052734375 Tokens per Sec: 26883.566666120172
Epoch Step: 85 / 819 Loss: 270.53271484375 Tokens per Sec: 26604.617694788165
Epoch Step: 90 / 819 Loss: 29.178028106689453 Tokens per Sec: 28339.64059156387
Epoch Step: 95 / 819 Loss: 19.049732208251953 Tokens per Sec: 24781.69746673029
Epoch Step: 100 / 819 Loss: 18.131153106689453 Tokens per Sec: 27515.21466267675
Epoch Step: 105 / 819 Loss: 29.952470779418945 Tokens per Sec: 25524.183266207758
Epoch Step: 110 / 819 Loss: 140.177490234375 Tokens per Sec: 23597.841738410145
Epoch Step: 115 / 819 Loss: 21.362451553344727 Tokens per Sec: 26444.89474034818
Epoch Step: 120 / 819 Loss: 21.38424301147461 Tokens per Sec: 28306.257972871437
Epoch Step: 125 / 819 Loss: 26.029104232788086 Tokens per Sec: 24257.986393558836
Epoch Step: 130 / 819 Loss: 30.503047943115234 Tokens per Sec: 25658.327423629962
Epoch Step: 135 / 819 Loss: 23.401126861572266 Tokens per Sec: 25375.349387711038
Epoch Step: 140 / 819 Loss: 29.491914749145508 Tokens per Sec: 25504.350665563154
Epoch Step: 145 / 819 Loss: 26.36663818359375 Tokens per Sec: 26659.74321821567
Epoch Step: 150 / 819 Loss: 206.32952880859375 Tokens per Sec: 25383.056672288236
Epoch Step: 155 / 819 Loss: 30.952373504638672 Tokens per Sec: 25312.586692593835
Epoch Step: 160 / 819 Loss: 214.3436737060547 Tokens per Sec: 24060.488630348045
Epoch Step: 165 / 819 Loss: 27.969833374023438 Tokens per Sec: 28841.889953754937
Epoch Step: 170 / 819 Loss: 22.359832763671875 Tokens per Sec: 25344.844908992152
Epoch Step: 175 / 819 Loss: 25.19670295715332 Tokens per Sec: 23307.998507858687
Epoch Step: 180 / 819 Loss: 21.56901741027832 Tokens per Sec: 25949.708790187597
Epoch Step: 185 / 819 Loss: 27.786579132080078 Tokens per Sec: 26445.94655668721
Epoch Step: 190 / 819 Loss: 24.7869873046875 Tokens per Sec: 27442.6716475359
Epoch Step: 195 / 819 Loss: 32.99060821533203 Tokens per Sec: 25605.713359017653
Epoch Step: 200 / 819 Loss: 26.652530670166016 Tokens per Sec: 25445.42721116033
Epoch Step: 205 / 819 Loss: 17.445547103881836 Tokens per Sec: 25198.111638825056
Epoch Step: 210 / 819 Loss: 195.01495361328125 Tokens per Sec: 22512.41237665454
Epoch Step: 215 / 819 Loss: 25.339569091796875 Tokens per Sec: 24951.77026903997
Epoch Step: 220 / 819 Loss: 25.289825439453125 Tokens per Sec: 24649.388103481946
Epoch Step: 225 / 819 Loss: 21.615493774414062 Tokens per Sec: 26358.118226233542
Epoch Step: 230 / 819 Loss: 16.546125411987305 Tokens per Sec: 27240.803617792662
Epoch Step: 235 / 819 Loss: 27.026412963867188 Tokens per Sec: 24623.493855327506
Epoch Step: 240 / 819 Loss: 30.96780776977539 Tokens per Sec: 25902.391054700984
Epoch Step: 245 / 819 Loss: 19.145397186279297 Tokens per Sec: 26017.012908239234
Epoch Step: 250 / 819 Loss: 24.14618682861328 Tokens per Sec: 26331.974796707047
Epoch Step: 255 / 819 Loss: 20.227081298828125 Tokens per Sec: 25728.308710431662
Epoch Step: 260 / 819 Loss: 16.476604461669922 Tokens per Sec: 24523.102543746754
Epoch Step: 265 / 819 Loss: 24.05268669128418 Tokens per Sec: 26213.895053500008
Epoch Step: 270 / 819 Loss: 159.34938049316406 Tokens per Sec: 24690.223581975613
Epoch Step: 275 / 819 Loss: 27.189800262451172 Tokens per Sec: 26465.01916859223
Epoch Step: 280 / 819 Loss: 25.44720458984375 Tokens per Sec: 27786.502513652154
Epoch Step: 285 / 819 Loss: 21.371047973632812 Tokens per Sec: 26069.35085752799
Epoch Step: 290 / 819 Loss: 30.254634857177734 Tokens per Sec: 26078.032401352924
Epoch Step: 295 / 819 Loss: 19.041292190551758 Tokens per Sec: 26437.118795284157
Epoch Step: 300 / 819 Loss: 23.20391845703125 Tokens per Sec: 26168.81139363906
Epoch Step: 305 / 819 Loss: 17.42380714416504 Tokens per Sec: 27079.742624187544
Epoch Step: 310 / 819 Loss: 231.2880096435547 Tokens per Sec: 26015.263545781094
Epoch Step: 315 / 819 Loss: 18.88685417175293 Tokens per Sec: 26533.879138410244
Epoch Step: 320 / 819 Loss: 29.20830726623535 Tokens per Sec: 26561.741600365094
Epoch Step: 325 / 819 Loss: 24.369720458984375 Tokens per Sec: 25528.485336145583
Epoch Step: 330 / 819 Loss: 26.302719116210938 Tokens per Sec: 25607.629591101733
Epoch Step: 335 / 819 Loss: 29.570281982421875 Tokens per Sec: 25092.300782689083
Epoch Step: 340 / 819 Loss: 24.252878189086914 Tokens per Sec: 25823.17098250942
Epoch Step: 345 / 819 Loss: 26.37676429748535 Tokens per Sec: 24922.826948510472
Epoch Step: 350 / 819 Loss: 33.10990524291992 Tokens per Sec: 24547.4743347277
Epoch Step: 355 / 819 Loss: 20.30622673034668 Tokens per Sec: 26982.28487257186
Epoch Step: 360 / 819 Loss: 29.655031204223633 Tokens per Sec: 25234.666316821967
Epoch Step: 365 / 819 Loss: 28.57164192199707 Tokens per Sec: 26396.201849497636
Epoch Step: 370 / 819 Loss: 30.702880859375 Tokens per Sec: 23820.871983939283
Epoch Step: 375 / 819 Loss: 22.859329223632812 Tokens per Sec: 24707.903909642355
Epoch Step: 380 / 819 Loss: 33.406429290771484 Tokens per Sec: 24038.054664468684
Epoch Step: 385 / 819 Loss: 30.523019790649414 Tokens per Sec: 26300.62804575246
Epoch Step: 390 / 819 Loss: 35.853206634521484 Tokens per Sec: 27268.695246693544
Epoch Step: 395 / 819 Loss: 17.63897132873535 Tokens per Sec: 25643.261922206344
Epoch Step: 400 / 819 Loss: 30.97441864013672 Tokens per Sec: 25315.611484342728
Epoch Step: 405 / 819 Loss: 24.628829956054688 Tokens per Sec: 26365.07082555047
Epoch Step: 410 / 819 Loss: 24.394794464111328 Tokens per Sec: 24725.799969868585
Epoch Step: 415 / 819 Loss: 26.60947036743164 Tokens per Sec: 24904.710845318292
Epoch Step: 420 / 819 Loss: 27.826627731323242 Tokens per Sec: 26995.914944382803
Epoch Step: 425 / 819 Loss: 24.214941024780273 Tokens per Sec: 27127.538756013695
Epoch Step: 430 / 819 Loss: 22.681970596313477 Tokens per Sec: 25465.914582004956
Epoch Step: 435 / 819 Loss: 30.278757095336914 Tokens per Sec: 27863.728866687627
Epoch Step: 440 / 819 Loss: 183.51023864746094 Tokens per Sec: 26100.27988750101
Epoch Step: 445 / 819 Loss: 32.540218353271484 Tokens per Sec: 23867.64649855515
Epoch Step: 450 / 819 Loss: 28.55421257019043 Tokens per Sec: 23197.690508324566
Epoch Step: 455 / 819 Loss: 29.842288970947266 Tokens per Sec: 25502.832038804056
Epoch Step: 460 / 819 Loss: 27.92933464050293 Tokens per Sec: 25343.122970673547
Epoch Step: 465 / 819 Loss: 32.24530029296875 Tokens per Sec: 26742.18737363329
Epoch Step: 470 / 819 Loss: 197.8953094482422 Tokens per Sec: 25592.84768173721
Epoch Step: 475 / 819 Loss: 22.13975715637207 Tokens per Sec: 27436.554321712738
Epoch Step: 480 / 819 Loss: 23.45075225830078 Tokens per Sec: 24360.06046048811
Epoch Step: 485 / 819 Loss: 30.454139709472656 Tokens per Sec: 24638.57578859878
Epoch Step: 490 / 819 Loss: 212.2589569091797 Tokens per Sec: 25735.483945208234
Epoch Step: 495 / 819 Loss: 17.375553131103516 Tokens per Sec: 26983.09303892049
Epoch Step: 500 / 819 Loss: 31.007143020629883 Tokens per Sec: 26500.076461916946
Epoch Step: 505 / 819 Loss: 26.305025100708008 Tokens per Sec: 23329.02012040689
Epoch Step: 510 / 819 Loss: 29.84092140197754 Tokens per Sec: 25480.635088828047
Epoch Step: 515 / 819 Loss: 25.123126983642578 Tokens per Sec: 23431.827854052113
Epoch Step: 520 / 819 Loss: 17.835508346557617 Tokens per Sec: 27179.944802875463
Epoch Step: 525 / 819 Loss: 199.6473388671875 Tokens per Sec: 24835.160336109042
Epoch Step: 530 / 819 Loss: 16.24125862121582 Tokens per Sec: 28022.820773264317
Epoch Step: 535 / 819 Loss: 26.740543365478516 Tokens per Sec: 25852.179026075257
Epoch Step: 540 / 819 Loss: 23.42038345336914 Tokens per Sec: 25079.69973094989
Epoch Step: 545 / 819 Loss: 21.655776977539062 Tokens per Sec: 24204.999781216848
Epoch Step: 550 / 819 Loss: 22.868858337402344 Tokens per Sec: 26045.56764396841
Epoch Step: 555 / 819 Loss: 19.86519432067871 Tokens per Sec: 26893.55259263321
Epoch Step: 560 / 819 Loss: 26.70150375366211 Tokens per Sec: 27117.91870007403
Epoch Step: 565 / 819 Loss: 174.10211181640625 Tokens per Sec: 25539.01489218017
Epoch Step: 570 / 819 Loss: 29.362716674804688 Tokens per Sec: 26610.608646367124
Epoch Step: 575 / 819 Loss: 221.1418914794922 Tokens per Sec: 23410.676407626917
Epoch Step: 580 / 819 Loss: 149.6343994140625 Tokens per Sec: 25997.461757382353
Epoch Step: 585 / 819 Loss: 19.88475799560547 Tokens per Sec: 26863.439215047612
Epoch Step: 590 / 819 Loss: 24.25150489807129 Tokens per Sec: 27501.881129642166
Epoch Step: 595 / 819 Loss: 26.581193923950195 Tokens per Sec: 27499.99308191852
Epoch Step: 600 / 819 Loss: 24.932111740112305 Tokens per Sec: 22956.36787494634
Epoch Step: 605 / 819 Loss: 25.42595863342285 Tokens per Sec: 26769.68459849351
Epoch Step: 610 / 819 Loss: 129.43727111816406 Tokens per Sec: 25488.089046571873
Epoch Step: 615 / 819 Loss: 29.85553741455078 Tokens per Sec: 26107.12657925867
Epoch Step: 620 / 819 Loss: 21.30892562866211 Tokens per Sec: 23367.786521379294
Epoch Step: 625 / 819 Loss: 20.132076263427734 Tokens per Sec: 24528.114182265002
Epoch Step: 630 / 819 Loss: 27.877592086791992 Tokens per Sec: 26109.18222253222
Epoch Step: 635 / 819 Loss: 24.310026168823242 Tokens per Sec: 26951.135347042567
Epoch Step: 640 / 819 Loss: 25.104312896728516 Tokens per Sec: 26493.062471744088
Epoch Step: 645 / 819 Loss: 33.10193634033203 Tokens per Sec: 27007.7318681061
Epoch Step: 650 / 819 Loss: 21.4630184173584 Tokens per Sec: 25599.73571381329
Epoch Step: 655 / 819 Loss: 27.897424697875977 Tokens per Sec: 24607.469307350246
Epoch Step: 660 / 819 Loss: 29.04184341430664 Tokens per Sec: 24935.30054188476
Epoch Step: 665 / 819 Loss: 23.465351104736328 Tokens per Sec: 24224.944612268006
Epoch Step: 670 / 819 Loss: 20.22651481628418 Tokens per Sec: 27418.12072158733
Epoch Step: 675 / 819 Loss: 40.8289909362793 Tokens per Sec: 23849.36870867996
Epoch Step: 680 / 819 Loss: 34.42913818359375 Tokens per Sec: 22590.90876068463
Epoch Step: 685 / 819 Loss: 30.40873146057129 Tokens per Sec: 26331.123495585107
Epoch Step: 690 / 819 Loss: 30.84911346435547 Tokens per Sec: 26558.222929764765
Epoch Step: 695 / 819 Loss: 28.54327392578125 Tokens per Sec: 23431.216504676253
Epoch Step: 700 / 819 Loss: 27.86254119873047 Tokens per Sec: 27822.80457010658
Epoch Step: 705 / 819 Loss: 22.669212341308594 Tokens per Sec: 28253.90203909609
Epoch Step: 710 / 819 Loss: 26.64691734313965 Tokens per Sec: 27264.153658068604
Epoch Step: 715 / 819 Loss: 223.02093505859375 Tokens per Sec: 25068.760673086043
Epoch Step: 720 / 819 Loss: 30.940683364868164 Tokens per Sec: 24948.773094200948
Epoch Step: 725 / 819 Loss: 29.23699188232422 Tokens per Sec: 23727.715435450795
Epoch Step: 730 / 819 Loss: 20.3814754486084 Tokens per Sec: 26023.455096158887
Epoch Step: 735 / 819 Loss: 26.750303268432617 Tokens per Sec: 26854.847014785388
Epoch Step: 740 / 819 Loss: 26.76934242248535 Tokens per Sec: 26530.85903658883
Epoch Step: 745 / 819 Loss: 19.17064094543457 Tokens per Sec: 25215.611419995224
Epoch Step: 750 / 819 Loss: 24.547473907470703 Tokens per Sec: 25236.66989223244
Epoch Step: 755 / 819 Loss: 31.882965087890625 Tokens per Sec: 26799.842100982136
Epoch Step: 760 / 819 Loss: 262.3606872558594 Tokens per Sec: 27799.081730137543
Epoch Step: 765 / 819 Loss: 24.84266471862793 Tokens per Sec: 27038.523718430035
Epoch Step: 770 / 819 Loss: 27.914838790893555 Tokens per Sec: 25921.90565543069
Epoch Step: 775 / 819 Loss: 25.675308227539062 Tokens per Sec: 24988.916149035034
Epoch Step: 780 / 819 Loss: 23.79922866821289 Tokens per Sec: 24296.941774864117
Epoch Step: 785 / 819 Loss: 24.62543296813965 Tokens per Sec: 25977.635814690584
Epoch Step: 790 / 819 Loss: 17.563400268554688 Tokens per Sec: 24686.882203709887
Epoch Step: 795 / 819 Loss: 25.15669059753418 Tokens per Sec: 26408.013110017433
Epoch Step: 800 / 819 Loss: 161.85379028320312 Tokens per Sec: 25976.46859013983
Epoch Step: 805 / 819 Loss: 30.763368606567383 Tokens per Sec: 24494.463885233523
Epoch Step: 810 / 819 Loss: 28.412193298339844 Tokens per Sec: 23395.256422504848
Epoch Step: 815 / 819 Loss: 29.146404266357422 Tokens per Sec: 20863.075056084654
Epoch ended with duration 0:02:31.645744
Train perplexity: 1.8405274523973616
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.323467
Validation perplexity: 1.6927722258817322
Model saved best_on_validation!
Epoch 12 / 1000
Epoch Step: 5 / 819 Loss: 105.17938232421875 Tokens per Sec: 25429.572480981828
Epoch Step: 10 / 819 Loss: 19.114765167236328 Tokens per Sec: 27141.87998104955
Epoch Step: 15 / 819 Loss: 27.911468505859375 Tokens per Sec: 25464.465459337658
Epoch Step: 20 / 819 Loss: 26.650720596313477 Tokens per Sec: 25639.21705268887
Epoch Step: 25 / 819 Loss: 200.66439819335938 Tokens per Sec: 25987.481724490684
Epoch Step: 30 / 819 Loss: 30.320110321044922 Tokens per Sec: 25033.289794955144
Epoch Step: 35 / 819 Loss: 32.23173904418945 Tokens per Sec: 25943.0858437112
Epoch Step: 40 / 819 Loss: 25.03901481628418 Tokens per Sec: 26459.02766916221
Epoch Step: 45 / 819 Loss: 27.672719955444336 Tokens per Sec: 26270.680658657897
Epoch Step: 50 / 819 Loss: 23.084896087646484 Tokens per Sec: 25624.453574752166
Epoch Step: 55 / 819 Loss: 28.29596519470215 Tokens per Sec: 25482.325541535494
Epoch Step: 60 / 819 Loss: 277.2054443359375 Tokens per Sec: 23377.232801227117
Epoch Step: 65 / 819 Loss: 22.36229705810547 Tokens per Sec: 26918.62260952884
Epoch Step: 70 / 819 Loss: 18.946077346801758 Tokens per Sec: 22836.476412458316
Epoch Step: 75 / 819 Loss: 23.228252410888672 Tokens per Sec: 25391.073779331
Epoch Step: 80 / 819 Loss: 26.01892852783203 Tokens per Sec: 28082.586881816747
Epoch Step: 85 / 819 Loss: 25.800992965698242 Tokens per Sec: 26451.109810107468
Epoch Step: 90 / 819 Loss: 16.526988983154297 Tokens per Sec: 24746.321892739637
Epoch Step: 95 / 819 Loss: 24.331008911132812 Tokens per Sec: 26964.7250158396
Epoch Step: 100 / 819 Loss: 25.601234436035156 Tokens per Sec: 26299.278887124598
Epoch Step: 105 / 819 Loss: 17.457725524902344 Tokens per Sec: 25740.156708641196
Epoch Step: 110 / 819 Loss: 21.74644660949707 Tokens per Sec: 25357.337562944173
Epoch Step: 115 / 819 Loss: 13.61243724822998 Tokens per Sec: 26259.92595980863
Epoch Step: 120 / 819 Loss: 24.351364135742188 Tokens per Sec: 27172.962975197646
Epoch Step: 125 / 819 Loss: 21.78558921813965 Tokens per Sec: 25199.90005299775
Epoch Step: 130 / 819 Loss: 22.5228214263916 Tokens per Sec: 27185.7782305225
Epoch Step: 135 / 819 Loss: 23.813215255737305 Tokens per Sec: 25292.062753930284
Epoch Step: 140 / 819 Loss: 17.73817253112793 Tokens per Sec: 27487.339817
Epoch Step: 145 / 819 Loss: 26.250450134277344 Tokens per Sec: 26147.860091930663
Epoch Step: 150 / 819 Loss: 25.47591209411621 Tokens per Sec: 24707.709778302593
Epoch Step: 155 / 819 Loss: 23.860511779785156 Tokens per Sec: 26989.9171313131
Epoch Step: 160 / 819 Loss: 21.70578956604004 Tokens per Sec: 27290.744940302557
Epoch Step: 165 / 819 Loss: 19.527475357055664 Tokens per Sec: 25716.263563338274
Epoch Step: 170 / 819 Loss: 24.019121170043945 Tokens per Sec: 26001.935106671495
Epoch Step: 175 / 819 Loss: 19.467327117919922 Tokens per Sec: 25638.712429162668
Epoch Step: 180 / 819 Loss: 27.76675033569336 Tokens per Sec: 26322.34303147584
Epoch Step: 185 / 819 Loss: 15.484704971313477 Tokens per Sec: 25189.816265634443
Epoch Step: 190 / 819 Loss: 23.26512336730957 Tokens per Sec: 24706.955541909654
Epoch Step: 195 / 819 Loss: 14.573321342468262 Tokens per Sec: 24246.35554582552
Epoch Step: 200 / 819 Loss: 18.281152725219727 Tokens per Sec: 26287.79286663116
Epoch Step: 205 / 819 Loss: 190.1036376953125 Tokens per Sec: 25446.614678875405
Epoch Step: 210 / 819 Loss: 23.21414566040039 Tokens per Sec: 26004.180022952594
Epoch Step: 215 / 819 Loss: 19.2081241607666 Tokens per Sec: 28082.240280152328
Epoch Step: 220 / 819 Loss: 25.361013412475586 Tokens per Sec: 27115.483753491517
Epoch Step: 225 / 819 Loss: 23.976909637451172 Tokens per Sec: 25391.174091437824
Epoch Step: 230 / 819 Loss: 27.939634323120117 Tokens per Sec: 25656.759233924327
Epoch Step: 235 / 819 Loss: 159.84176635742188 Tokens per Sec: 27628.561778298306
Epoch Step: 240 / 819 Loss: 26.229969024658203 Tokens per Sec: 25305.00335293464
Epoch Step: 245 / 819 Loss: 29.580808639526367 Tokens per Sec: 26679.783505925247
Epoch Step: 250 / 819 Loss: 26.52631187438965 Tokens per Sec: 24621.512290698072
Epoch Step: 255 / 819 Loss: 26.066104888916016 Tokens per Sec: 25964.99799128878
Epoch Step: 260 / 819 Loss: 247.31124877929688 Tokens per Sec: 26614.952753412646
Epoch Step: 265 / 819 Loss: 266.893310546875 Tokens per Sec: 25706.875037722322
Epoch Step: 270 / 819 Loss: 17.37706756591797 Tokens per Sec: 26120.24653340402
Epoch Step: 275 / 819 Loss: 30.193450927734375 Tokens per Sec: 23640.162251663358
Epoch Step: 280 / 819 Loss: 18.24964714050293 Tokens per Sec: 25591.7088272576
Epoch Step: 285 / 819 Loss: 22.715412139892578 Tokens per Sec: 27028.775134904074
Epoch Step: 290 / 819 Loss: 18.216493606567383 Tokens per Sec: 25509.20563053258
Epoch Step: 295 / 819 Loss: 29.33771324157715 Tokens per Sec: 26729.458790706576
Epoch Step: 300 / 819 Loss: 24.291637420654297 Tokens per Sec: 25799.41048840329
Epoch Step: 305 / 819 Loss: 26.169153213500977 Tokens per Sec: 24459.667525374633
Epoch Step: 310 / 819 Loss: 17.362329483032227 Tokens per Sec: 24134.522716248768
Epoch Step: 315 / 819 Loss: 28.7794189453125 Tokens per Sec: 26853.671358459185
Epoch Step: 320 / 819 Loss: 29.338951110839844 Tokens per Sec: 23835.70377180815
Epoch Step: 325 / 819 Loss: 187.9172821044922 Tokens per Sec: 26563.883893225204
Epoch Step: 330 / 819 Loss: 271.6490783691406 Tokens per Sec: 27797.687413676045
Epoch Step: 335 / 819 Loss: 26.000139236450195 Tokens per Sec: 26734.49343459512
Epoch Step: 340 / 819 Loss: 32.3806037902832 Tokens per Sec: 26275.494393384703
Epoch Step: 345 / 819 Loss: 265.6977233886719 Tokens per Sec: 25805.801481245042
Epoch Step: 350 / 819 Loss: 24.23113441467285 Tokens per Sec: 28040.137926336083
Epoch Step: 355 / 819 Loss: 25.18118667602539 Tokens per Sec: 25326.312067355306
Epoch Step: 360 / 819 Loss: 36.441097259521484 Tokens per Sec: 24544.930414270744
Epoch Step: 365 / 819 Loss: 29.95648193359375 Tokens per Sec: 24758.28964145816
Epoch Step: 370 / 819 Loss: 25.4267635345459 Tokens per Sec: 24282.651488603373
Epoch Step: 375 / 819 Loss: 27.75954246520996 Tokens per Sec: 25602.790620482447
Epoch Step: 380 / 819 Loss: 29.7950382232666 Tokens per Sec: 25886.401527025017
Epoch Step: 385 / 819 Loss: 29.87061882019043 Tokens per Sec: 26166.844132406644
Epoch Step: 390 / 819 Loss: 25.23796844482422 Tokens per Sec: 26514.92628461126
Epoch Step: 395 / 819 Loss: 24.13096809387207 Tokens per Sec: 24038.655458092213
Epoch Step: 400 / 819 Loss: 25.048187255859375 Tokens per Sec: 26052.290838401343
Epoch Step: 405 / 819 Loss: 24.022031784057617 Tokens per Sec: 25839.204250372906
Epoch Step: 410 / 819 Loss: 27.489837646484375 Tokens per Sec: 25560.080811914184
Epoch Step: 415 / 819 Loss: 21.083139419555664 Tokens per Sec: 25721.920418165213
Epoch Step: 420 / 819 Loss: 24.25126838684082 Tokens per Sec: 25730.18495183536
Epoch Step: 425 / 819 Loss: 27.940980911254883 Tokens per Sec: 24967.164180531174
Epoch Step: 430 / 819 Loss: 26.242422103881836 Tokens per Sec: 24295.002163640318
Epoch Step: 435 / 819 Loss: 27.69927215576172 Tokens per Sec: 25570.340782652183
Epoch Step: 440 / 819 Loss: 21.71691131591797 Tokens per Sec: 24887.020547974873
Epoch Step: 445 / 819 Loss: 15.991372108459473 Tokens per Sec: 27945.55895864376
Epoch Step: 450 / 819 Loss: 18.383275985717773 Tokens per Sec: 22847.88529594036
Epoch Step: 455 / 819 Loss: 29.169504165649414 Tokens per Sec: 26629.14222998028
Epoch Step: 460 / 819 Loss: 27.869888305664062 Tokens per Sec: 27115.551089167595
Epoch Step: 465 / 819 Loss: 18.21585464477539 Tokens per Sec: 25602.035140974753
Epoch Step: 470 / 819 Loss: 23.797340393066406 Tokens per Sec: 26634.554103941748
Epoch Step: 475 / 819 Loss: 29.2559757232666 Tokens per Sec: 27272.58761571181
Epoch Step: 480 / 819 Loss: 28.852495193481445 Tokens per Sec: 25911.10025384417
Epoch Step: 485 / 819 Loss: 22.187074661254883 Tokens per Sec: 24919.194154138124
Epoch Step: 490 / 819 Loss: 30.676185607910156 Tokens per Sec: 24553.237389186823
Epoch Step: 495 / 819 Loss: 18.48676872253418 Tokens per Sec: 25364.395749804527
Epoch Step: 500 / 819 Loss: 178.26425170898438 Tokens per Sec: 26935.515075666506
Epoch Step: 505 / 819 Loss: 31.358341217041016 Tokens per Sec: 27383.47757456931
Epoch Step: 510 / 819 Loss: 24.771699905395508 Tokens per Sec: 24978.81927054526
Epoch Step: 515 / 819 Loss: 239.1400909423828 Tokens per Sec: 25649.793914913073
Epoch Step: 520 / 819 Loss: 23.445297241210938 Tokens per Sec: 26258.109973833558
Epoch Step: 525 / 819 Loss: 29.220844268798828 Tokens per Sec: 25924.794079686588
Epoch Step: 530 / 819 Loss: 18.282644271850586 Tokens per Sec: 26447.283750832743
Epoch Step: 535 / 819 Loss: 27.1870059967041 Tokens per Sec: 27212.322418342348
Epoch Step: 540 / 819 Loss: 21.433076858520508 Tokens per Sec: 28410.4021220339
Epoch Step: 545 / 819 Loss: 26.468233108520508 Tokens per Sec: 25849.520838951423
Epoch Step: 550 / 819 Loss: 23.48975372314453 Tokens per Sec: 24065.65746261131
Epoch Step: 555 / 819 Loss: 22.026811599731445 Tokens per Sec: 26219.422173172767
Epoch Step: 560 / 819 Loss: 18.088956832885742 Tokens per Sec: 26520.067051254104
Epoch Step: 565 / 819 Loss: 126.7516860961914 Tokens per Sec: 26877.1741255784
Epoch Step: 570 / 819 Loss: 30.096940994262695 Tokens per Sec: 24896.112839606834
Epoch Step: 575 / 819 Loss: 30.0821533203125 Tokens per Sec: 24040.14624076777
Epoch Step: 580 / 819 Loss: 27.180822372436523 Tokens per Sec: 25898.080807570685
Epoch Step: 585 / 819 Loss: 20.68488883972168 Tokens per Sec: 25253.252901590284
Epoch Step: 590 / 819 Loss: 29.981689453125 Tokens per Sec: 26367.663467027283
Epoch Step: 595 / 819 Loss: 26.794095993041992 Tokens per Sec: 25709.76010935186
Epoch Step: 600 / 819 Loss: 19.904781341552734 Tokens per Sec: 25806.626386598644
Epoch Step: 605 / 819 Loss: 18.1971492767334 Tokens per Sec: 25278.863402582403
Epoch Step: 610 / 819 Loss: 29.283143997192383 Tokens per Sec: 24434.925953156773
Epoch Step: 615 / 819 Loss: 23.76524543762207 Tokens per Sec: 24291.197696262952
Epoch Step: 620 / 819 Loss: 24.80111312866211 Tokens per Sec: 26479.81681281976
Epoch Step: 625 / 819 Loss: 27.49306869506836 Tokens per Sec: 24416.933429989058
Epoch Step: 630 / 819 Loss: 23.8664608001709 Tokens per Sec: 28422.42071505572
Epoch Step: 635 / 819 Loss: 25.526254653930664 Tokens per Sec: 25510.60224974382
Epoch Step: 640 / 819 Loss: 29.083209991455078 Tokens per Sec: 25542.927031171002
Epoch Step: 645 / 819 Loss: 21.00132942199707 Tokens per Sec: 25609.832763652612
Epoch Step: 650 / 819 Loss: 122.25568389892578 Tokens per Sec: 27352.06301374308
Epoch Step: 655 / 819 Loss: 23.66828155517578 Tokens per Sec: 25887.606397172232
Epoch Step: 660 / 819 Loss: 23.658422470092773 Tokens per Sec: 26193.866094446075
Epoch Step: 665 / 819 Loss: 14.908461570739746 Tokens per Sec: 25555.08548982936
Epoch Step: 670 / 819 Loss: 23.851303100585938 Tokens per Sec: 25488.346327147454
Epoch Step: 675 / 819 Loss: 20.36670684814453 Tokens per Sec: 25879.836919389552
Epoch Step: 680 / 819 Loss: 22.658082962036133 Tokens per Sec: 24389.1767297684
Epoch Step: 685 / 819 Loss: 19.52023696899414 Tokens per Sec: 26968.572443472713
Epoch Step: 690 / 819 Loss: 30.691072463989258 Tokens per Sec: 26891.739317048734
Epoch Step: 695 / 819 Loss: 23.20830535888672 Tokens per Sec: 26744.883772001474
Epoch Step: 700 / 819 Loss: 29.249269485473633 Tokens per Sec: 24717.39642938942
Epoch Step: 705 / 819 Loss: 25.83066749572754 Tokens per Sec: 26064.92065814742
Epoch Step: 710 / 819 Loss: 27.39521026611328 Tokens per Sec: 23544.69669257503
Epoch Step: 715 / 819 Loss: 23.04377555847168 Tokens per Sec: 26096.569816159194
Epoch Step: 720 / 819 Loss: 20.098094940185547 Tokens per Sec: 23998.66432699132
Epoch Step: 725 / 819 Loss: 27.69841766357422 Tokens per Sec: 28156.914767845625
Epoch Step: 730 / 819 Loss: 17.36503028869629 Tokens per Sec: 25525.224539468116
Epoch Step: 735 / 819 Loss: 20.94454574584961 Tokens per Sec: 25218.179550848337
Epoch Step: 740 / 819 Loss: 19.331390380859375 Tokens per Sec: 26335.713898910348
Epoch Step: 745 / 819 Loss: 15.001291275024414 Tokens per Sec: 25767.59689383978
Epoch Step: 750 / 819 Loss: 22.584182739257812 Tokens per Sec: 25066.230454836732
Epoch Step: 755 / 819 Loss: 165.72743225097656 Tokens per Sec: 25366.173068336295
Epoch Step: 760 / 819 Loss: 21.334379196166992 Tokens per Sec: 27918.116869268746
Epoch Step: 765 / 819 Loss: 20.158390045166016 Tokens per Sec: 26343.47829294964
Epoch Step: 770 / 819 Loss: 32.81740951538086 Tokens per Sec: 24517.662888511375
Epoch Step: 775 / 819 Loss: 36.56270217895508 Tokens per Sec: 26206.544567958263
Epoch Step: 780 / 819 Loss: 22.494403839111328 Tokens per Sec: 25853.6797412956
Epoch Step: 785 / 819 Loss: 33.50146484375 Tokens per Sec: 24782.96551248616
Epoch Step: 790 / 819 Loss: 34.39523696899414 Tokens per Sec: 26925.00881044227
Epoch Step: 795 / 819 Loss: 22.205984115600586 Tokens per Sec: 26162.91640203799
Epoch Step: 800 / 819 Loss: 19.982864379882812 Tokens per Sec: 26741.296744268217
Epoch Step: 805 / 819 Loss: 215.6678924560547 Tokens per Sec: 23481.17396739917
Epoch Step: 810 / 819 Loss: 23.4129638671875 Tokens per Sec: 26005.349776066265
Epoch Step: 815 / 819 Loss: 24.53505516052246 Tokens per Sec: 23344.497741665287
Epoch ended with duration 0:02:30.816949
Train perplexity: 1.6828435624614897
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.265693
Validation perplexity: 1.525982443040332
Model saved best_on_validation!
Epoch 13 / 1000
Epoch Step: 5 / 819 Loss: 180.75869750976562 Tokens per Sec: 25249.057891644952
Epoch Step: 10 / 819 Loss: 240.2771453857422 Tokens per Sec: 24650.3254881781
Epoch Step: 15 / 819 Loss: 34.575992584228516 Tokens per Sec: 25958.04445933371
Epoch Step: 20 / 819 Loss: 22.688230514526367 Tokens per Sec: 27342.787179712333
Epoch Step: 25 / 819 Loss: 22.245418548583984 Tokens per Sec: 24851.133158174274
Epoch Step: 30 / 819 Loss: 206.02456665039062 Tokens per Sec: 25514.286392071815
Epoch Step: 35 / 819 Loss: 34.085819244384766 Tokens per Sec: 25148.445644448504
Epoch Step: 40 / 819 Loss: 159.2548828125 Tokens per Sec: 23623.225471124482
Epoch Step: 45 / 819 Loss: 29.020076751708984 Tokens per Sec: 25191.498141923195
Epoch Step: 50 / 819 Loss: 26.041933059692383 Tokens per Sec: 26530.4594116954
Epoch Step: 55 / 819 Loss: 20.59187889099121 Tokens per Sec: 27021.57640197727
Epoch Step: 60 / 819 Loss: 24.215961456298828 Tokens per Sec: 25436.698112879916
Epoch Step: 65 / 819 Loss: 147.30972290039062 Tokens per Sec: 25460.680741989883
Epoch Step: 70 / 819 Loss: 23.024877548217773 Tokens per Sec: 25346.662160613567
Epoch Step: 75 / 819 Loss: 20.702804565429688 Tokens per Sec: 24714.063192824895
Epoch Step: 80 / 819 Loss: 24.363515853881836 Tokens per Sec: 27324.264590460214
Epoch Step: 85 / 819 Loss: 17.193300247192383 Tokens per Sec: 27378.06934277267
Epoch Step: 90 / 819 Loss: 29.51659393310547 Tokens per Sec: 26131.70070890156
Epoch Step: 95 / 819 Loss: 18.48063850402832 Tokens per Sec: 27407.358219158094
Epoch Step: 100 / 819 Loss: 129.7569580078125 Tokens per Sec: 25221.49021834123
Epoch Step: 105 / 819 Loss: 34.57381820678711 Tokens per Sec: 26569.463066822475
Epoch Step: 110 / 819 Loss: 194.92506408691406 Tokens per Sec: 26628.57427846704
Epoch Step: 115 / 819 Loss: 26.77130889892578 Tokens per Sec: 26113.25534188773
Epoch Step: 120 / 819 Loss: 21.2037410736084 Tokens per Sec: 26520.049308027777
Epoch Step: 125 / 819 Loss: 27.012725830078125 Tokens per Sec: 25857.942192858183
Epoch Step: 130 / 819 Loss: 22.578636169433594 Tokens per Sec: 28382.52526267013
Epoch Step: 135 / 819 Loss: 285.47412109375 Tokens per Sec: 26016.13924793692
Epoch Step: 140 / 819 Loss: 22.281299591064453 Tokens per Sec: 25799.63418521522
Epoch Step: 145 / 819 Loss: 25.49959373474121 Tokens per Sec: 27160.996428841092
Epoch Step: 150 / 819 Loss: 27.94131088256836 Tokens per Sec: 23224.50142588435
Epoch Step: 155 / 819 Loss: 16.407474517822266 Tokens per Sec: 28371.16256653683
Epoch Step: 160 / 819 Loss: 22.451446533203125 Tokens per Sec: 26044.644726337265
Epoch Step: 165 / 819 Loss: 248.0080108642578 Tokens per Sec: 25732.039486880563
Epoch Step: 170 / 819 Loss: 23.754493713378906 Tokens per Sec: 23541.61308801564
Epoch Step: 175 / 819 Loss: 22.42479133605957 Tokens per Sec: 25593.797801392066
Epoch Step: 180 / 819 Loss: 19.145050048828125 Tokens per Sec: 25189.970738887238
Epoch Step: 185 / 819 Loss: 19.951824188232422 Tokens per Sec: 23342.257423092207
Epoch Step: 190 / 819 Loss: 30.862804412841797 Tokens per Sec: 25604.909313229244
Epoch Step: 195 / 819 Loss: 19.864688873291016 Tokens per Sec: 25561.251167950857
Epoch Step: 200 / 819 Loss: 24.695484161376953 Tokens per Sec: 26559.94886777083
Epoch Step: 205 / 819 Loss: 175.54714965820312 Tokens per Sec: 24771.540502807653
Epoch Step: 210 / 819 Loss: 30.442424774169922 Tokens per Sec: 26442.369457470268
Epoch Step: 215 / 819 Loss: 24.03975486755371 Tokens per Sec: 25244.16346815805
Epoch Step: 220 / 819 Loss: 25.863506317138672 Tokens per Sec: 27369.928369863377
Epoch Step: 225 / 819 Loss: 22.531978607177734 Tokens per Sec: 27715.85139057336
Epoch Step: 230 / 819 Loss: 27.27971076965332 Tokens per Sec: 26883.101151535466
Epoch Step: 235 / 819 Loss: 131.46600341796875 Tokens per Sec: 25958.237511127034
Epoch Step: 240 / 819 Loss: 29.56144142150879 Tokens per Sec: 24098.555824302573
Epoch Step: 245 / 819 Loss: 17.633094787597656 Tokens per Sec: 25855.927405548005
Epoch Step: 250 / 819 Loss: 21.78141975402832 Tokens per Sec: 26393.924453911404
Epoch Step: 255 / 819 Loss: 26.81289291381836 Tokens per Sec: 26282.019661388324
Epoch Step: 260 / 819 Loss: 185.359130859375 Tokens per Sec: 23651.738608993393
Epoch Step: 265 / 819 Loss: 23.405851364135742 Tokens per Sec: 27378.864688751157
Epoch Step: 270 / 819 Loss: 126.1376724243164 Tokens per Sec: 25428.435246682573
Epoch Step: 275 / 819 Loss: 23.51866912841797 Tokens per Sec: 24199.004493948465
Epoch Step: 280 / 819 Loss: 30.588491439819336 Tokens per Sec: 25302.364129105208
Epoch Step: 285 / 819 Loss: 120.93376159667969 Tokens per Sec: 26575.87193797775
Epoch Step: 290 / 819 Loss: 21.836143493652344 Tokens per Sec: 25426.601954641177
Epoch Step: 295 / 819 Loss: 34.021575927734375 Tokens per Sec: 24971.24176366778
Epoch Step: 300 / 819 Loss: 24.79135513305664 Tokens per Sec: 25157.54349399525
Epoch Step: 305 / 819 Loss: 32.77471923828125 Tokens per Sec: 25488.646299804615
Epoch Step: 310 / 819 Loss: 29.355911254882812 Tokens per Sec: 27497.531902826304
Epoch Step: 315 / 819 Loss: 20.964595794677734 Tokens per Sec: 27684.30266746136
Epoch Step: 320 / 819 Loss: 29.118457794189453 Tokens per Sec: 26717.710686495695
Epoch Step: 325 / 819 Loss: 29.380598068237305 Tokens per Sec: 23524.38490021471
Epoch Step: 330 / 819 Loss: 30.36009979248047 Tokens per Sec: 26998.026820490257
Epoch Step: 335 / 819 Loss: 30.90587043762207 Tokens per Sec: 25195.859598699837
Epoch Step: 340 / 819 Loss: 25.994535446166992 Tokens per Sec: 26014.63318048859
Epoch Step: 345 / 819 Loss: 19.324939727783203 Tokens per Sec: 24969.438302201055
Epoch Step: 350 / 819 Loss: 260.7773742675781 Tokens per Sec: 26411.81827132678
Epoch Step: 355 / 819 Loss: 25.399261474609375 Tokens per Sec: 26865.916763683155
Epoch Step: 360 / 819 Loss: 23.56361198425293 Tokens per Sec: 26449.52459013511
Epoch Step: 365 / 819 Loss: 23.364543914794922 Tokens per Sec: 24871.80737285144
Epoch Step: 370 / 819 Loss: 33.970619201660156 Tokens per Sec: 25040.74978776258
Epoch Step: 375 / 819 Loss: 19.754741668701172 Tokens per Sec: 28657.33456388357
Epoch Step: 380 / 819 Loss: 28.68449592590332 Tokens per Sec: 24713.646990547077
Epoch Step: 385 / 819 Loss: 27.777301788330078 Tokens per Sec: 24420.748513621063
Epoch Step: 390 / 819 Loss: 29.103357315063477 Tokens per Sec: 25747.206870774757
Epoch Step: 395 / 819 Loss: 23.033227920532227 Tokens per Sec: 23744.134113003376
Epoch Step: 400 / 819 Loss: 20.748001098632812 Tokens per Sec: 25986.495733439042
Epoch Step: 405 / 819 Loss: 23.8671932220459 Tokens per Sec: 25420.477410150273
Epoch Step: 410 / 819 Loss: 24.93109703063965 Tokens per Sec: 27896.945827517695
Epoch Step: 415 / 819 Loss: 27.729387283325195 Tokens per Sec: 25205.29662669289
Epoch Step: 420 / 819 Loss: 108.92767333984375 Tokens per Sec: 28673.219980561866
Epoch Step: 425 / 819 Loss: 22.66141128540039 Tokens per Sec: 25413.126619897277
Epoch Step: 430 / 819 Loss: 23.759113311767578 Tokens per Sec: 26226.007457686756
Epoch Step: 435 / 819 Loss: 27.068218231201172 Tokens per Sec: 27149.214719410676
Epoch Step: 440 / 819 Loss: 25.740184783935547 Tokens per Sec: 25460.984098882494
Epoch Step: 445 / 819 Loss: 32.98571014404297 Tokens per Sec: 23068.23271236534
Epoch Step: 450 / 819 Loss: 22.11344337463379 Tokens per Sec: 24882.23451957057
Epoch Step: 455 / 819 Loss: 19.07345199584961 Tokens per Sec: 23660.569452956006
Epoch Step: 460 / 819 Loss: 24.945066452026367 Tokens per Sec: 24434.403708118567
Epoch Step: 465 / 819 Loss: 189.1094207763672 Tokens per Sec: 25117.40032120239
Epoch Step: 470 / 819 Loss: 25.565162658691406 Tokens per Sec: 25962.77511537488
Epoch Step: 475 / 819 Loss: 98.15369415283203 Tokens per Sec: 27895.25367824523
Epoch Step: 480 / 819 Loss: 25.717647552490234 Tokens per Sec: 24184.29816006354
Epoch Step: 485 / 819 Loss: 22.90571403503418 Tokens per Sec: 26278.86259096208
Epoch Step: 490 / 819 Loss: 17.908458709716797 Tokens per Sec: 25945.903930633507
Epoch Step: 495 / 819 Loss: 29.81548309326172 Tokens per Sec: 26203.613499889292
Epoch Step: 500 / 819 Loss: 28.859149932861328 Tokens per Sec: 23107.55962646507
Epoch Step: 505 / 819 Loss: 16.039756774902344 Tokens per Sec: 24929.550455256747
Epoch Step: 510 / 819 Loss: 23.811635971069336 Tokens per Sec: 25289.9854385971
Epoch Step: 515 / 819 Loss: 20.86036491394043 Tokens per Sec: 26950.138575186065
Epoch Step: 520 / 819 Loss: 250.1025390625 Tokens per Sec: 25987.317439085135
Epoch Step: 525 / 819 Loss: 20.468101501464844 Tokens per Sec: 26100.56973078937
Epoch Step: 530 / 819 Loss: 27.190841674804688 Tokens per Sec: 25297.64051749085
Epoch Step: 535 / 819 Loss: 26.08124351501465 Tokens per Sec: 25059.6756289714
Epoch Step: 540 / 819 Loss: 24.146501541137695 Tokens per Sec: 25740.647681685878
Epoch Step: 545 / 819 Loss: 24.101858139038086 Tokens per Sec: 25587.921771591453
Epoch Step: 550 / 819 Loss: 16.086566925048828 Tokens per Sec: 24650.169298011482
Epoch Step: 555 / 819 Loss: 22.648027420043945 Tokens per Sec: 27081.997906565764
Epoch Step: 560 / 819 Loss: 27.70831871032715 Tokens per Sec: 26107.72857816736
Epoch Step: 565 / 819 Loss: 24.230566024780273 Tokens per Sec: 27260.629713672042
Epoch Step: 570 / 819 Loss: 16.526491165161133 Tokens per Sec: 25228.712932236864
Epoch Step: 575 / 819 Loss: 21.719524383544922 Tokens per Sec: 26729.196564817048
Epoch Step: 580 / 819 Loss: 27.182180404663086 Tokens per Sec: 26078.361681885217
Epoch Step: 585 / 819 Loss: 18.307336807250977 Tokens per Sec: 24323.511301759307
Epoch Step: 590 / 819 Loss: 28.795564651489258 Tokens per Sec: 27672.859797382436
Epoch Step: 595 / 819 Loss: 269.8966064453125 Tokens per Sec: 24179.13760438745
Epoch Step: 600 / 819 Loss: 17.216230392456055 Tokens per Sec: 25265.034197031207
Epoch Step: 605 / 819 Loss: 25.369665145874023 Tokens per Sec: 26243.359783796677
Epoch Step: 610 / 819 Loss: 23.4676513671875 Tokens per Sec: 26189.73786237441
Epoch Step: 615 / 819 Loss: 27.12533187866211 Tokens per Sec: 23793.122008731323
Epoch Step: 620 / 819 Loss: 243.67657470703125 Tokens per Sec: 24500.884254602766
Epoch Step: 625 / 819 Loss: 27.922697067260742 Tokens per Sec: 24310.173061528276
Epoch Step: 630 / 819 Loss: 20.18470573425293 Tokens per Sec: 24720.71700769252
Epoch Step: 635 / 819 Loss: 20.4233455657959 Tokens per Sec: 25175.143764370252
Epoch Step: 640 / 819 Loss: 22.951435089111328 Tokens per Sec: 26436.900329510838
Epoch Step: 645 / 819 Loss: 18.620338439941406 Tokens per Sec: 24770.001558172517
Epoch Step: 650 / 819 Loss: 22.127647399902344 Tokens per Sec: 24999.319428493032
Epoch Step: 655 / 819 Loss: 23.91110610961914 Tokens per Sec: 26471.22253153753
Epoch Step: 660 / 819 Loss: 20.995119094848633 Tokens per Sec: 27654.635933131023
Epoch Step: 665 / 819 Loss: 23.150697708129883 Tokens per Sec: 28340.054720851265
Epoch Step: 670 / 819 Loss: 18.322845458984375 Tokens per Sec: 27065.019308297204
Epoch Step: 675 / 819 Loss: 277.2691650390625 Tokens per Sec: 26590.923492384132
Epoch Step: 680 / 819 Loss: 26.873641967773438 Tokens per Sec: 27008.514504382725
Epoch Step: 685 / 819 Loss: 27.4962158203125 Tokens per Sec: 24456.2712295154
Epoch Step: 690 / 819 Loss: 20.651470184326172 Tokens per Sec: 26301.91377959623
Epoch Step: 695 / 819 Loss: 23.340862274169922 Tokens per Sec: 26025.67931965332
Epoch Step: 700 / 819 Loss: 177.18370056152344 Tokens per Sec: 27420.235953935462
Epoch Step: 705 / 819 Loss: 18.947345733642578 Tokens per Sec: 26471.847020821766
Epoch Step: 710 / 819 Loss: 15.846702575683594 Tokens per Sec: 25594.631022848254
Epoch Step: 715 / 819 Loss: 25.124622344970703 Tokens per Sec: 27145.480673461134
Epoch Step: 720 / 819 Loss: 28.94259262084961 Tokens per Sec: 23610.81793430522
Epoch Step: 725 / 819 Loss: 20.10374641418457 Tokens per Sec: 26387.619744404903
Epoch Step: 730 / 819 Loss: 220.5023651123047 Tokens per Sec: 24777.816408663544
Epoch Step: 735 / 819 Loss: 22.374967575073242 Tokens per Sec: 27367.45459028715
Epoch Step: 740 / 819 Loss: 21.651092529296875 Tokens per Sec: 24968.896997353935
Epoch Step: 745 / 819 Loss: 29.537721633911133 Tokens per Sec: 25499.243498527492
Epoch Step: 750 / 819 Loss: 19.900733947753906 Tokens per Sec: 27689.3656791321
Epoch Step: 755 / 819 Loss: 22.922544479370117 Tokens per Sec: 24575.63561335905
Epoch Step: 760 / 819 Loss: 15.23401165008545 Tokens per Sec: 23315.517260536883
Epoch Step: 765 / 819 Loss: 21.322349548339844 Tokens per Sec: 27001.585411780252
Epoch Step: 770 / 819 Loss: 137.85292053222656 Tokens per Sec: 25466.239257002384
Epoch Step: 775 / 819 Loss: 177.6051025390625 Tokens per Sec: 28390.36813284096
Epoch Step: 780 / 819 Loss: 20.082984924316406 Tokens per Sec: 26152.71108437
Epoch Step: 785 / 819 Loss: 228.01710510253906 Tokens per Sec: 25860.273834338666
Epoch Step: 790 / 819 Loss: 29.2025146484375 Tokens per Sec: 25529.696480191058
Epoch Step: 795 / 819 Loss: 20.374841690063477 Tokens per Sec: 26637.38531536084
Epoch Step: 800 / 819 Loss: 18.87396812438965 Tokens per Sec: 25993.865776455546
Epoch Step: 805 / 819 Loss: 23.67597198486328 Tokens per Sec: 24868.449717331336
Epoch Step: 810 / 819 Loss: 23.886743545532227 Tokens per Sec: 24206.043479777487
Epoch Step: 815 / 819 Loss: 26.26214027404785 Tokens per Sec: 22710.11789819589
Epoch ended with duration 0:02:31.173402
Train perplexity: 1.742822772640886
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.425370
Validation perplexity: 1.6183047718039019
Epoch 14 / 1000
Epoch Step: 5 / 819 Loss: 146.79519653320312 Tokens per Sec: 26336.3895869291
Epoch Step: 10 / 819 Loss: 18.673646926879883 Tokens per Sec: 26572.811645480047
Epoch Step: 15 / 819 Loss: 20.704151153564453 Tokens per Sec: 24678.908086434316
Epoch Step: 20 / 819 Loss: 25.432729721069336 Tokens per Sec: 25323.056745998292
Epoch Step: 25 / 819 Loss: 22.589319229125977 Tokens per Sec: 24578.397080037168
Epoch Step: 30 / 819 Loss: 222.2657928466797 Tokens per Sec: 26946.020710052155
Epoch Step: 35 / 819 Loss: 21.024736404418945 Tokens per Sec: 24885.522376493045
Epoch Step: 40 / 819 Loss: 24.419248580932617 Tokens per Sec: 25544.13088046697
Epoch Step: 45 / 819 Loss: 22.685237884521484 Tokens per Sec: 25916.893267990716
Epoch Step: 50 / 819 Loss: 25.35033416748047 Tokens per Sec: 27092.549463578896
Epoch Step: 55 / 819 Loss: 21.375816345214844 Tokens per Sec: 24535.744395797617
Epoch Step: 60 / 819 Loss: 23.60338592529297 Tokens per Sec: 24919.87073040598
Epoch Step: 65 / 819 Loss: 30.0906925201416 Tokens per Sec: 27426.393162523455
Epoch Step: 70 / 819 Loss: 22.048572540283203 Tokens per Sec: 24469.55669815927
Epoch Step: 75 / 819 Loss: 23.360166549682617 Tokens per Sec: 25635.27262940567
Epoch Step: 80 / 819 Loss: 236.39932250976562 Tokens per Sec: 25423.372823362766
Epoch Step: 85 / 819 Loss: 13.514603614807129 Tokens per Sec: 25297.680985707495
Epoch Step: 90 / 819 Loss: 21.262298583984375 Tokens per Sec: 24650.240975681605
Epoch Step: 95 / 819 Loss: 22.065696716308594 Tokens per Sec: 26306.130284162715
Epoch Step: 100 / 819 Loss: 21.06161117553711 Tokens per Sec: 28110.738945011024
Epoch Step: 105 / 819 Loss: 14.305511474609375 Tokens per Sec: 25750.882369706003
Epoch Step: 110 / 819 Loss: 113.07662200927734 Tokens per Sec: 25091.91670595583
Epoch Step: 115 / 819 Loss: 22.263227462768555 Tokens per Sec: 25272.15356662138
Epoch Step: 120 / 819 Loss: 26.22295570373535 Tokens per Sec: 25753.85962780664
Epoch Step: 125 / 819 Loss: 209.5319061279297 Tokens per Sec: 23820.052969816505
Epoch Step: 130 / 819 Loss: 260.30401611328125 Tokens per Sec: 26741.93701283323
Epoch Step: 135 / 819 Loss: 28.661962509155273 Tokens per Sec: 26465.075891386987
Epoch Step: 140 / 819 Loss: 28.401058197021484 Tokens per Sec: 26618.245572038653
Epoch Step: 145 / 819 Loss: 28.441652297973633 Tokens per Sec: 24853.08305799067
Epoch Step: 150 / 819 Loss: 26.25973129272461 Tokens per Sec: 25427.57392722158
Epoch Step: 155 / 819 Loss: 20.781835556030273 Tokens per Sec: 25442.515488516237
Epoch Step: 160 / 819 Loss: 18.73421859741211 Tokens per Sec: 25961.72542351864
Epoch Step: 165 / 819 Loss: 22.378389358520508 Tokens per Sec: 24247.063453322127
Epoch Step: 170 / 819 Loss: 21.67814826965332 Tokens per Sec: 25822.98095191039
Epoch Step: 175 / 819 Loss: 125.20169067382812 Tokens per Sec: 28464.69877902835
Epoch Step: 180 / 819 Loss: 241.64418029785156 Tokens per Sec: 26706.657238114498
Epoch Step: 185 / 819 Loss: 21.138477325439453 Tokens per Sec: 25864.15074588708
Epoch Step: 190 / 819 Loss: 28.30858612060547 Tokens per Sec: 25501.46765117186
Epoch Step: 195 / 819 Loss: 25.297224044799805 Tokens per Sec: 25758.844975637545
Epoch Step: 200 / 819 Loss: 25.306896209716797 Tokens per Sec: 27111.47410524202
Epoch Step: 205 / 819 Loss: 180.7045135498047 Tokens per Sec: 27277.257560872455
Epoch Step: 210 / 819 Loss: 22.385114669799805 Tokens per Sec: 27409.682047550265
Epoch Step: 215 / 819 Loss: 18.045330047607422 Tokens per Sec: 25501.038405575742
Epoch Step: 220 / 819 Loss: 25.245384216308594 Tokens per Sec: 25342.991040885972
Epoch Step: 225 / 819 Loss: 28.619070053100586 Tokens per Sec: 25038.673751027978
Epoch Step: 230 / 819 Loss: 25.589332580566406 Tokens per Sec: 24626.09171547526
Epoch Step: 235 / 819 Loss: 20.53110694885254 Tokens per Sec: 26053.155487762877
Epoch Step: 240 / 819 Loss: 26.5872745513916 Tokens per Sec: 24930.4636260304
Epoch Step: 245 / 819 Loss: 23.009449005126953 Tokens per Sec: 27536.613410930575
Epoch Step: 250 / 819 Loss: 208.47610473632812 Tokens per Sec: 26114.706857962185
Epoch Step: 255 / 819 Loss: 28.58949851989746 Tokens per Sec: 26065.066241196597
Epoch Step: 260 / 819 Loss: 15.229626655578613 Tokens per Sec: 24754.826239486203
Epoch Step: 265 / 819 Loss: 17.544029235839844 Tokens per Sec: 26305.69278707076
Epoch Step: 270 / 819 Loss: 24.80169677734375 Tokens per Sec: 24909.41248821295
Epoch Step: 275 / 819 Loss: 17.782695770263672 Tokens per Sec: 26675.08811354744
Epoch Step: 280 / 819 Loss: 16.819002151489258 Tokens per Sec: 27909.734512219147
Epoch Step: 285 / 819 Loss: 19.56184959411621 Tokens per Sec: 26970.695019699553
Epoch Step: 290 / 819 Loss: 18.34489631652832 Tokens per Sec: 25770.456369331016
Epoch Step: 295 / 819 Loss: 22.77225112915039 Tokens per Sec: 23465.925066194664
Epoch Step: 300 / 819 Loss: 127.5723876953125 Tokens per Sec: 25497.539723403614
Epoch Step: 305 / 819 Loss: 18.132360458374023 Tokens per Sec: 27940.85869179944
Epoch Step: 310 / 819 Loss: 18.9814510345459 Tokens per Sec: 26120.788142930127
Epoch Step: 315 / 819 Loss: 27.252622604370117 Tokens per Sec: 24918.79754969872
Epoch Step: 320 / 819 Loss: 20.361604690551758 Tokens per Sec: 26790.005043737783
Epoch Step: 325 / 819 Loss: 20.68939208984375 Tokens per Sec: 25178.190637855267
Epoch Step: 330 / 819 Loss: 24.566852569580078 Tokens per Sec: 25858.223949465548
Epoch Step: 335 / 819 Loss: 307.0120544433594 Tokens per Sec: 24666.510517155206
Epoch Step: 340 / 819 Loss: 17.647478103637695 Tokens per Sec: 26411.096325328905
Epoch Step: 345 / 819 Loss: 23.098102569580078 Tokens per Sec: 25053.602717135123
Epoch Step: 350 / 819 Loss: 136.14344787597656 Tokens per Sec: 27582.627295609564
Epoch Step: 355 / 819 Loss: 25.56485939025879 Tokens per Sec: 23868.39764026264
Epoch Step: 360 / 819 Loss: 27.359060287475586 Tokens per Sec: 24848.439610318714
Epoch Step: 365 / 819 Loss: 22.98879623413086 Tokens per Sec: 26359.643504314114
Epoch Step: 370 / 819 Loss: 15.7257080078125 Tokens per Sec: 24457.880051530232
Epoch Step: 375 / 819 Loss: 26.166902542114258 Tokens per Sec: 26980.05754176582
Epoch Step: 380 / 819 Loss: 23.460514068603516 Tokens per Sec: 27278.475650961278
Epoch Step: 385 / 819 Loss: 22.83953857421875 Tokens per Sec: 25511.59311318366
Epoch Step: 390 / 819 Loss: 20.485944747924805 Tokens per Sec: 25323.396658940077
Epoch Step: 395 / 819 Loss: 20.029800415039062 Tokens per Sec: 24868.991913124697
Epoch Step: 400 / 819 Loss: 19.414201736450195 Tokens per Sec: 26924.70906018707
Epoch Step: 405 / 819 Loss: 191.48291015625 Tokens per Sec: 26023.3336200852
Epoch Step: 410 / 819 Loss: 26.887527465820312 Tokens per Sec: 24682.10795482208
Epoch Step: 415 / 819 Loss: 22.380828857421875 Tokens per Sec: 25145.296116422927
Epoch Step: 420 / 819 Loss: 27.251422882080078 Tokens per Sec: 25805.3738308579
Epoch Step: 425 / 819 Loss: 31.13450050354004 Tokens per Sec: 23520.701433130813
Epoch Step: 430 / 819 Loss: 22.594972610473633 Tokens per Sec: 27254.949878913692
Epoch Step: 435 / 819 Loss: 27.802936553955078 Tokens per Sec: 24168.70681489398
Epoch Step: 440 / 819 Loss: 20.00528907775879 Tokens per Sec: 26659.481351674418
Epoch Step: 445 / 819 Loss: 21.64582061767578 Tokens per Sec: 26388.915489821746
Epoch Step: 450 / 819 Loss: 22.63994789123535 Tokens per Sec: 25497.050454391472
Epoch Step: 455 / 819 Loss: 23.24490737915039 Tokens per Sec: 25937.649057950384
Epoch Step: 460 / 819 Loss: 21.334590911865234 Tokens per Sec: 26016.194503078405
Epoch Step: 465 / 819 Loss: 19.757545471191406 Tokens per Sec: 26796.159479763824
Epoch Step: 470 / 819 Loss: 23.809579849243164 Tokens per Sec: 25956.724240309435
Epoch Step: 475 / 819 Loss: 166.59963989257812 Tokens per Sec: 24781.3213252481
Epoch Step: 480 / 819 Loss: 28.264589309692383 Tokens per Sec: 25645.061978394788
Epoch Step: 485 / 819 Loss: 22.6003360748291 Tokens per Sec: 26751.553420266315
Epoch Step: 490 / 819 Loss: 20.26997947692871 Tokens per Sec: 24877.794261364543
Epoch Step: 495 / 819 Loss: 27.875850677490234 Tokens per Sec: 27117.33966214488
Epoch Step: 500 / 819 Loss: 25.06866455078125 Tokens per Sec: 24784.621346374115
Epoch Step: 505 / 819 Loss: 22.51068115234375 Tokens per Sec: 24756.550647593627
Epoch Step: 510 / 819 Loss: 23.08762550354004 Tokens per Sec: 25436.71633043394
Epoch Step: 515 / 819 Loss: 18.091266632080078 Tokens per Sec: 26547.527083311117
Epoch Step: 520 / 819 Loss: 226.35011291503906 Tokens per Sec: 26977.478359777182
Epoch Step: 525 / 819 Loss: 22.760467529296875 Tokens per Sec: 24470.58823529412
Epoch Step: 530 / 819 Loss: 19.926586151123047 Tokens per Sec: 24982.26545636582
Epoch Step: 535 / 819 Loss: 21.605134963989258 Tokens per Sec: 23730.208269678307
Epoch Step: 540 / 819 Loss: 171.5142059326172 Tokens per Sec: 25265.065521274923
Epoch Step: 545 / 819 Loss: 25.249008178710938 Tokens per Sec: 25459.686628384792
Epoch Step: 550 / 819 Loss: 28.050317764282227 Tokens per Sec: 25375.855764750835
Epoch Step: 555 / 819 Loss: 28.66645622253418 Tokens per Sec: 26472.660779552174
Epoch Step: 560 / 819 Loss: 18.69698715209961 Tokens per Sec: 27159.237275943586
Epoch Step: 565 / 819 Loss: 19.71630859375 Tokens per Sec: 25928.29828036084
Epoch Step: 570 / 819 Loss: 246.5724639892578 Tokens per Sec: 23121.674894584197
Epoch Step: 575 / 819 Loss: 20.186847686767578 Tokens per Sec: 27168.101356962386
Epoch Step: 580 / 819 Loss: 17.778776168823242 Tokens per Sec: 24415.911355193355
Epoch Step: 585 / 819 Loss: 26.537965774536133 Tokens per Sec: 25323.05763179319
Epoch Step: 590 / 819 Loss: 22.415395736694336 Tokens per Sec: 27005.984294685226
Epoch Step: 595 / 819 Loss: 30.33576774597168 Tokens per Sec: 25621.31729709427
Epoch Step: 600 / 819 Loss: 22.158781051635742 Tokens per Sec: 27720.363669646205
Epoch Step: 605 / 819 Loss: 20.072986602783203 Tokens per Sec: 24158.071247433385
Epoch Step: 610 / 819 Loss: 25.496685028076172 Tokens per Sec: 24308.234927323017
Epoch Step: 615 / 819 Loss: 23.902366638183594 Tokens per Sec: 26171.50682930096
Epoch Step: 620 / 819 Loss: 23.07154655456543 Tokens per Sec: 23872.2913299242
Epoch Step: 625 / 819 Loss: 23.510223388671875 Tokens per Sec: 26379.716398993856
Epoch Step: 630 / 819 Loss: 24.15210723876953 Tokens per Sec: 25426.646633895984
Epoch Step: 635 / 819 Loss: 21.855663299560547 Tokens per Sec: 24657.03775043008
Epoch Step: 640 / 819 Loss: 15.626312255859375 Tokens per Sec: 23613.149938411498
Epoch Step: 645 / 819 Loss: 28.692584991455078 Tokens per Sec: 25033.762672617355
Epoch Step: 650 / 819 Loss: 19.01122283935547 Tokens per Sec: 28202.216532297964
Epoch Step: 655 / 819 Loss: 16.046152114868164 Tokens per Sec: 26265.19923601485
Epoch Step: 660 / 819 Loss: 27.616313934326172 Tokens per Sec: 25489.111281301237
Epoch Step: 665 / 819 Loss: 23.191204071044922 Tokens per Sec: 25940.74291599202
Epoch Step: 670 / 819 Loss: 18.368507385253906 Tokens per Sec: 28275.356524926756
Epoch Step: 675 / 819 Loss: 18.451841354370117 Tokens per Sec: 27416.836506657783
Epoch Step: 680 / 819 Loss: 27.36870002746582 Tokens per Sec: 27112.613468794294
Epoch Step: 685 / 819 Loss: 26.339452743530273 Tokens per Sec: 24790.48997599202
Epoch Step: 690 / 819 Loss: 20.601598739624023 Tokens per Sec: 24490.007327001647
Epoch Step: 695 / 819 Loss: 23.4655704498291 Tokens per Sec: 27489.07728564157
Epoch Step: 700 / 819 Loss: 26.575777053833008 Tokens per Sec: 24675.417370426167
Epoch Step: 705 / 819 Loss: 25.410486221313477 Tokens per Sec: 25592.111479970776
Epoch Step: 710 / 819 Loss: 23.98088264465332 Tokens per Sec: 24712.005833710962
Epoch Step: 715 / 819 Loss: 19.087940216064453 Tokens per Sec: 26615.797475687872
Epoch Step: 720 / 819 Loss: 18.9606990814209 Tokens per Sec: 29134.987695434822
Epoch Step: 725 / 819 Loss: 15.620476722717285 Tokens per Sec: 24824.954090586623
Epoch Step: 730 / 819 Loss: 20.497556686401367 Tokens per Sec: 25764.053907566846
Epoch Step: 735 / 819 Loss: 25.48589324951172 Tokens per Sec: 27090.21814504866
Epoch Step: 740 / 819 Loss: 26.430034637451172 Tokens per Sec: 24840.915407705703
Epoch Step: 745 / 819 Loss: 22.518604278564453 Tokens per Sec: 27697.364730889534
Epoch Step: 750 / 819 Loss: 24.99439811706543 Tokens per Sec: 27278.478177688492
Epoch Step: 755 / 819 Loss: 25.258853912353516 Tokens per Sec: 25733.530727287416
Epoch Step: 760 / 819 Loss: 16.323362350463867 Tokens per Sec: 26699.61235020037
Epoch Step: 765 / 819 Loss: 16.90410041809082 Tokens per Sec: 27549.458687755105
Epoch Step: 770 / 819 Loss: 23.894874572753906 Tokens per Sec: 25238.07255662406
Epoch Step: 775 / 819 Loss: 25.635480880737305 Tokens per Sec: 22212.81382087672
Epoch Step: 780 / 819 Loss: 23.223176956176758 Tokens per Sec: 26226.18188355537
Epoch Step: 785 / 819 Loss: 17.02328109741211 Tokens per Sec: 27028.23473357209
Epoch Step: 790 / 819 Loss: 17.774858474731445 Tokens per Sec: 23779.935406017034
Epoch Step: 795 / 819 Loss: 26.713109970092773 Tokens per Sec: 27408.729142448654
Epoch Step: 800 / 819 Loss: 20.408313751220703 Tokens per Sec: 22718.51753208952
Epoch Step: 805 / 819 Loss: 23.289018630981445 Tokens per Sec: 23508.013739994152
Epoch Step: 810 / 819 Loss: 15.953582763671875 Tokens per Sec: 21268.661279122658
Epoch Step: 815 / 819 Loss: 22.01993751525879 Tokens per Sec: 24486.80566701117
Epoch ended with duration 0:02:31.144824
Train perplexity: 1.6709663496784362
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.362601
Validation perplexity: 1.8550258615163264
Epoch 15 / 1000
Epoch Step: 5 / 819 Loss: 26.696533203125 Tokens per Sec: 24955.01314373257
Epoch Step: 10 / 819 Loss: 21.375896453857422 Tokens per Sec: 25935.069119603068
Epoch Step: 15 / 819 Loss: 23.444974899291992 Tokens per Sec: 24994.402362978573
Epoch Step: 20 / 819 Loss: 16.869476318359375 Tokens per Sec: 26246.64497036147
Epoch Step: 25 / 819 Loss: 20.431438446044922 Tokens per Sec: 26269.248412339966
Epoch Step: 30 / 819 Loss: 19.276168823242188 Tokens per Sec: 26742.837895719324
Epoch Step: 35 / 819 Loss: 16.892520904541016 Tokens per Sec: 25757.632157891097
Epoch Step: 40 / 819 Loss: 25.215068817138672 Tokens per Sec: 26684.540500815547
Epoch Step: 45 / 819 Loss: 22.59527587890625 Tokens per Sec: 26338.080286505105
Epoch Step: 50 / 819 Loss: 235.70350646972656 Tokens per Sec: 26424.01849098118
Epoch Step: 55 / 819 Loss: 26.942590713500977 Tokens per Sec: 25569.315254655634
Epoch Step: 60 / 819 Loss: 27.05208969116211 Tokens per Sec: 25325.75620897823
Epoch Step: 65 / 819 Loss: 25.82183074951172 Tokens per Sec: 24917.787672886225
Epoch Step: 70 / 819 Loss: 20.578392028808594 Tokens per Sec: 27106.572770371826
Epoch Step: 75 / 819 Loss: 23.24921417236328 Tokens per Sec: 26533.440768293152
Epoch Step: 80 / 819 Loss: 17.657503128051758 Tokens per Sec: 25118.65606282814
Epoch Step: 85 / 819 Loss: 21.658700942993164 Tokens per Sec: 25478.19950672869
Epoch Step: 90 / 819 Loss: 18.91122817993164 Tokens per Sec: 26662.199072805688
Epoch Step: 95 / 819 Loss: 23.417922973632812 Tokens per Sec: 24695.742532486263
Epoch Step: 100 / 819 Loss: 24.816787719726562 Tokens per Sec: 26300.387489307006
Epoch Step: 105 / 819 Loss: 20.256484985351562 Tokens per Sec: 24511.490826762045
Epoch Step: 110 / 819 Loss: 18.840242385864258 Tokens per Sec: 26041.068376100164
Epoch Step: 115 / 819 Loss: 19.878929138183594 Tokens per Sec: 25517.87493276251
Epoch Step: 120 / 819 Loss: 20.93638801574707 Tokens per Sec: 26314.916598953452
Epoch Step: 125 / 819 Loss: 25.392654418945312 Tokens per Sec: 27547.62848986451
Epoch Step: 130 / 819 Loss: 24.174848556518555 Tokens per Sec: 26431.024398311452
Epoch Step: 135 / 819 Loss: 21.174612045288086 Tokens per Sec: 26445.234498263886
Epoch Step: 140 / 819 Loss: 20.34369659423828 Tokens per Sec: 27364.355121740402
Epoch Step: 145 / 819 Loss: 20.232824325561523 Tokens per Sec: 22142.467110392496
Epoch Step: 150 / 819 Loss: 16.514442443847656 Tokens per Sec: 25403.51762242131
Epoch Step: 155 / 819 Loss: 215.6393585205078 Tokens per Sec: 25804.873285552214
Epoch Step: 160 / 819 Loss: 20.0118408203125 Tokens per Sec: 25623.437485379396
Epoch Step: 165 / 819 Loss: 23.785417556762695 Tokens per Sec: 24096.330565731718
Epoch Step: 170 / 819 Loss: 186.3470458984375 Tokens per Sec: 25081.119082934747
Epoch Step: 175 / 819 Loss: 31.259552001953125 Tokens per Sec: 25657.741898954348
Epoch Step: 180 / 819 Loss: 229.62709045410156 Tokens per Sec: 26231.87960590407
Epoch Step: 185 / 819 Loss: 26.574155807495117 Tokens per Sec: 23006.127943117386
Epoch Step: 190 / 819 Loss: 20.237564086914062 Tokens per Sec: 26799.70972346648
Epoch Step: 195 / 819 Loss: 27.04075050354004 Tokens per Sec: 23641.742100561245
Epoch Step: 200 / 819 Loss: 25.51346206665039 Tokens per Sec: 27934.22948574971
Epoch Step: 205 / 819 Loss: 23.686677932739258 Tokens per Sec: 23572.72133279155
Epoch Step: 210 / 819 Loss: 26.818946838378906 Tokens per Sec: 24866.545503720095
Epoch Step: 215 / 819 Loss: 20.94386863708496 Tokens per Sec: 26567.373636530287
Epoch Step: 220 / 819 Loss: 19.945993423461914 Tokens per Sec: 28550.12030116967
Epoch Step: 225 / 819 Loss: 134.75669860839844 Tokens per Sec: 24617.039059340957
Epoch Step: 230 / 819 Loss: 25.857845306396484 Tokens per Sec: 24923.05111831701
Epoch Step: 235 / 819 Loss: 25.10874366760254 Tokens per Sec: 27020.064848629907
Epoch Step: 240 / 819 Loss: 17.52959442138672 Tokens per Sec: 24176.185534005326
Epoch Step: 245 / 819 Loss: 25.032602310180664 Tokens per Sec: 24503.747780941052
Epoch Step: 250 / 819 Loss: 19.125394821166992 Tokens per Sec: 28627.482853994075
Epoch Step: 255 / 819 Loss: 153.374267578125 Tokens per Sec: 23894.19961013224
Epoch Step: 260 / 819 Loss: 27.808956146240234 Tokens per Sec: 24774.926583714416
Epoch Step: 265 / 819 Loss: 21.632905960083008 Tokens per Sec: 27055.91017866246
Epoch Step: 270 / 819 Loss: 21.330026626586914 Tokens per Sec: 27642.992842463325
Epoch Step: 275 / 819 Loss: 24.551244735717773 Tokens per Sec: 25412.365367480827
Epoch Step: 280 / 819 Loss: 22.293903350830078 Tokens per Sec: 26640.73905135807
Epoch Step: 285 / 819 Loss: 24.282249450683594 Tokens per Sec: 25451.689381897486
Epoch Step: 290 / 819 Loss: 242.75547790527344 Tokens per Sec: 24710.647365292563
Epoch Step: 295 / 819 Loss: 274.4245300292969 Tokens per Sec: 24612.097222272347
Epoch Step: 300 / 819 Loss: 238.4182891845703 Tokens per Sec: 24675.339553102396
Epoch Step: 305 / 819 Loss: 29.325164794921875 Tokens per Sec: 27125.61277460925
Epoch Step: 310 / 819 Loss: 215.38743591308594 Tokens per Sec: 25187.118261145486
Epoch Step: 315 / 819 Loss: 29.373699188232422 Tokens per Sec: 24503.171631674755
Epoch Step: 320 / 819 Loss: 24.344324111938477 Tokens per Sec: 26557.432675166845
Epoch Step: 325 / 819 Loss: 21.207530975341797 Tokens per Sec: 26120.04315876734
Epoch Step: 330 / 819 Loss: 16.22278594970703 Tokens per Sec: 26187.11590031846
Epoch Step: 335 / 819 Loss: 24.459253311157227 Tokens per Sec: 26009.91432694441
Epoch Step: 340 / 819 Loss: 17.796709060668945 Tokens per Sec: 26447.50804730654
Epoch Step: 345 / 819 Loss: 24.757251739501953 Tokens per Sec: 24937.697711333334
Epoch Step: 350 / 819 Loss: 29.86937141418457 Tokens per Sec: 26354.637055325034
Epoch Step: 355 / 819 Loss: 17.858524322509766 Tokens per Sec: 24554.430748512168
Epoch Step: 360 / 819 Loss: 20.51852798461914 Tokens per Sec: 26104.91131427641
Epoch Step: 365 / 819 Loss: 174.4388885498047 Tokens per Sec: 26080.89230804941
Epoch Step: 370 / 819 Loss: 15.381780624389648 Tokens per Sec: 25981.764996120753
Epoch Step: 375 / 819 Loss: 24.46979522705078 Tokens per Sec: 25027.403600945156
Epoch Step: 380 / 819 Loss: 26.5513916015625 Tokens per Sec: 26266.845460062028
Epoch Step: 385 / 819 Loss: 25.5093936920166 Tokens per Sec: 26958.546760780933
Epoch Step: 390 / 819 Loss: 26.12005043029785 Tokens per Sec: 22688.241942371464
Epoch Step: 395 / 819 Loss: 19.927513122558594 Tokens per Sec: 25108.001977566324
Epoch Step: 400 / 819 Loss: 19.635000228881836 Tokens per Sec: 24463.450217405083
Epoch Step: 405 / 819 Loss: 30.112491607666016 Tokens per Sec: 26514.92440388179
Epoch Step: 410 / 819 Loss: 16.965084075927734 Tokens per Sec: 25724.451687406217
Epoch Step: 415 / 819 Loss: 17.28584098815918 Tokens per Sec: 25951.93109352526
Epoch Step: 420 / 819 Loss: 19.39384651184082 Tokens per Sec: 25232.5862816174
Epoch Step: 425 / 819 Loss: 17.545574188232422 Tokens per Sec: 23909.575314437887
Epoch Step: 430 / 819 Loss: 22.662757873535156 Tokens per Sec: 25805.130955010543
Epoch Step: 435 / 819 Loss: 13.683526992797852 Tokens per Sec: 27952.681215797373
Epoch Step: 440 / 819 Loss: 24.08224105834961 Tokens per Sec: 25996.637681473003
Epoch Step: 445 / 819 Loss: 21.853076934814453 Tokens per Sec: 28247.007347150633
Epoch Step: 450 / 819 Loss: 23.103290557861328 Tokens per Sec: 25795.957005785436
Epoch Step: 455 / 819 Loss: 24.341148376464844 Tokens per Sec: 23723.28919130906
Epoch Step: 460 / 819 Loss: 26.185903549194336 Tokens per Sec: 22819.8505981931
Epoch Step: 465 / 819 Loss: 16.491573333740234 Tokens per Sec: 25686.152270519244
Epoch Step: 470 / 819 Loss: 15.758356094360352 Tokens per Sec: 27863.988735002556
Epoch Step: 475 / 819 Loss: 21.123401641845703 Tokens per Sec: 27139.84869481171
Epoch Step: 480 / 819 Loss: 144.92855834960938 Tokens per Sec: 25178.91553156469
Epoch Step: 485 / 819 Loss: 24.544342041015625 Tokens per Sec: 25689.45798294728
Epoch Step: 490 / 819 Loss: 26.799985885620117 Tokens per Sec: 23857.395953895746
Epoch Step: 495 / 819 Loss: 28.805015563964844 Tokens per Sec: 27883.17408714805
Epoch Step: 500 / 819 Loss: 17.89675521850586 Tokens per Sec: 25375.327365332505
Epoch Step: 505 / 819 Loss: 21.029512405395508 Tokens per Sec: 24860.45506610799
Epoch Step: 510 / 819 Loss: 29.113479614257812 Tokens per Sec: 25980.2703316752
Epoch Step: 515 / 819 Loss: 32.4249153137207 Tokens per Sec: 27406.871640287773
Epoch Step: 520 / 819 Loss: 16.320554733276367 Tokens per Sec: 23953.54507333808
Epoch Step: 525 / 819 Loss: 29.700424194335938 Tokens per Sec: 28009.257788355273
Epoch Step: 530 / 819 Loss: 19.981708526611328 Tokens per Sec: 25964.382820864637
Epoch Step: 535 / 819 Loss: 18.382665634155273 Tokens per Sec: 24071.003686264143
Epoch Step: 540 / 819 Loss: 17.696125030517578 Tokens per Sec: 25442.822958863588
Epoch Step: 545 / 819 Loss: 223.0491180419922 Tokens per Sec: 24591.844197471815
Epoch Step: 550 / 819 Loss: 200.21743774414062 Tokens per Sec: 25855.0427835796
Epoch Step: 555 / 819 Loss: 22.872791290283203 Tokens per Sec: 25899.77190449621
Epoch Step: 560 / 819 Loss: 214.4002685546875 Tokens per Sec: 26185.30759061903
Epoch Step: 565 / 819 Loss: 26.681114196777344 Tokens per Sec: 25016.853938844928
Epoch Step: 570 / 819 Loss: 27.553571701049805 Tokens per Sec: 24727.1599354288
Epoch Step: 575 / 819 Loss: 24.39138412475586 Tokens per Sec: 26642.899189532214
Epoch Step: 580 / 819 Loss: 23.478464126586914 Tokens per Sec: 27150.956618323125
Epoch Step: 585 / 819 Loss: 21.37805938720703 Tokens per Sec: 25928.110447146097
Epoch Step: 590 / 819 Loss: 19.1962890625 Tokens per Sec: 26668.020024330435
Epoch Step: 595 / 819 Loss: 27.389602661132812 Tokens per Sec: 26376.423736782715
Epoch Step: 600 / 819 Loss: 23.767757415771484 Tokens per Sec: 26726.14261662541
Epoch Step: 605 / 819 Loss: 20.154804229736328 Tokens per Sec: 23408.882115557208
Epoch Step: 610 / 819 Loss: 19.311025619506836 Tokens per Sec: 25854.01478551837
Epoch Step: 615 / 819 Loss: 250.88182067871094 Tokens per Sec: 24936.000409669243
Epoch Step: 620 / 819 Loss: 23.789628982543945 Tokens per Sec: 21844.730987676718
Epoch Step: 625 / 819 Loss: 13.37516975402832 Tokens per Sec: 24701.584580969702
Epoch Step: 630 / 819 Loss: 19.00696563720703 Tokens per Sec: 27798.290082924417
Epoch Step: 635 / 819 Loss: 25.297962188720703 Tokens per Sec: 26312.872527600168
Epoch Step: 640 / 819 Loss: 23.984272003173828 Tokens per Sec: 26986.497367862674
Epoch Step: 645 / 819 Loss: 24.52561378479004 Tokens per Sec: 24431.901240522486
Epoch Step: 650 / 819 Loss: 18.910383224487305 Tokens per Sec: 26174.495178851095
Epoch Step: 655 / 819 Loss: 21.4124755859375 Tokens per Sec: 25529.473837141475
Epoch Step: 660 / 819 Loss: 19.09463882446289 Tokens per Sec: 25504.424442216656
Epoch Step: 665 / 819 Loss: 223.92579650878906 Tokens per Sec: 25595.97077009556
Epoch Step: 670 / 819 Loss: 23.62432098388672 Tokens per Sec: 24209.036916886973
Epoch Step: 675 / 819 Loss: 25.31546401977539 Tokens per Sec: 26626.818233173737
Epoch Step: 680 / 819 Loss: 21.317155838012695 Tokens per Sec: 26237.10858611641
Epoch Step: 685 / 819 Loss: 20.368135452270508 Tokens per Sec: 24542.061294875122
Epoch Step: 690 / 819 Loss: 20.671337127685547 Tokens per Sec: 27383.52779997173
Epoch Step: 695 / 819 Loss: 22.641878128051758 Tokens per Sec: 27825.652407398582
Epoch Step: 700 / 819 Loss: 24.018861770629883 Tokens per Sec: 27159.923980482436
Epoch Step: 705 / 819 Loss: 181.2393341064453 Tokens per Sec: 27194.92022502214
Epoch Step: 710 / 819 Loss: 25.220947265625 Tokens per Sec: 24788.051536436997
Epoch Step: 715 / 819 Loss: 25.671321868896484 Tokens per Sec: 25590.430380738428
Epoch Step: 720 / 819 Loss: 28.181015014648438 Tokens per Sec: 24778.01312140649
Epoch Step: 725 / 819 Loss: 26.99034881591797 Tokens per Sec: 25217.09126802171
Epoch Step: 730 / 819 Loss: 27.276155471801758 Tokens per Sec: 26405.233108810542
Epoch Step: 735 / 819 Loss: 18.51523208618164 Tokens per Sec: 27214.161341765637
Epoch Step: 740 / 819 Loss: 22.14098358154297 Tokens per Sec: 25891.767346928104
Epoch Step: 745 / 819 Loss: 28.33374786376953 Tokens per Sec: 23662.502081309714
Epoch Step: 750 / 819 Loss: 19.4512882232666 Tokens per Sec: 24696.919727122786
Epoch Step: 755 / 819 Loss: 131.82980346679688 Tokens per Sec: 24492.005476684953
Epoch Step: 760 / 819 Loss: 24.76140594482422 Tokens per Sec: 25651.39191847864
Epoch Step: 765 / 819 Loss: 29.032228469848633 Tokens per Sec: 25959.0544871949
Epoch Step: 770 / 819 Loss: 22.577091217041016 Tokens per Sec: 24461.198412696278
Epoch Step: 775 / 819 Loss: 26.14952278137207 Tokens per Sec: 25707.18992917862
Epoch Step: 780 / 819 Loss: 23.810043334960938 Tokens per Sec: 26045.487483138328
Epoch Step: 785 / 819 Loss: 25.617944717407227 Tokens per Sec: 26220.67260652306
Epoch Step: 790 / 819 Loss: 26.476953506469727 Tokens per Sec: 25456.211183321746
Epoch Step: 795 / 819 Loss: 27.303844451904297 Tokens per Sec: 25091.611396498913
Epoch Step: 800 / 819 Loss: 132.83761596679688 Tokens per Sec: 27171.726093167836
Epoch Step: 805 / 819 Loss: 21.56684684753418 Tokens per Sec: 24837.25291720347
Epoch Step: 810 / 819 Loss: 20.5459041595459 Tokens per Sec: 24073.874279565152
Epoch Step: 815 / 819 Loss: 20.889944076538086 Tokens per Sec: 20307.685418723966
Epoch ended with duration 0:02:31.679791
Train perplexity: 1.7259185932821732
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.240882
Validation perplexity: 1.4977156176954416
Model saved best_on_validation!
Model saved checkpoint!
Epoch 16 / 1000
Epoch Step: 5 / 819 Loss: 16.541717529296875 Tokens per Sec: 27461.759905709205
Epoch Step: 10 / 819 Loss: 20.487232208251953 Tokens per Sec: 25362.95913505264
Epoch Step: 15 / 819 Loss: 28.54087257385254 Tokens per Sec: 25569.666302809426
Epoch Step: 20 / 819 Loss: 20.226484298706055 Tokens per Sec: 27116.45054680202
Epoch Step: 25 / 819 Loss: 18.294206619262695 Tokens per Sec: 26911.81623914723
Epoch Step: 30 / 819 Loss: 26.409198760986328 Tokens per Sec: 25191.871339772144
Epoch Step: 35 / 819 Loss: 17.463741302490234 Tokens per Sec: 25635.60279098766
Epoch Step: 40 / 819 Loss: 24.619915008544922 Tokens per Sec: 26397.57271567072
Epoch Step: 45 / 819 Loss: 22.803810119628906 Tokens per Sec: 24603.14626129894
Epoch Step: 50 / 819 Loss: 27.013164520263672 Tokens per Sec: 26485.402044222763
Epoch Step: 55 / 819 Loss: 28.387977600097656 Tokens per Sec: 25961.715407753014
Epoch Step: 60 / 819 Loss: 22.958251953125 Tokens per Sec: 25120.702950537136
Epoch Step: 65 / 819 Loss: 19.442163467407227 Tokens per Sec: 25820.297535928003
Epoch Step: 70 / 819 Loss: 15.997167587280273 Tokens per Sec: 27382.913985394305
Epoch Step: 75 / 819 Loss: 17.66607666015625 Tokens per Sec: 24899.336349082936
Epoch Step: 80 / 819 Loss: 27.665719985961914 Tokens per Sec: 23824.561224236593
Epoch Step: 85 / 819 Loss: 23.19850730895996 Tokens per Sec: 24444.805590296233
Epoch Step: 90 / 819 Loss: 23.939237594604492 Tokens per Sec: 26351.52580292403
Epoch Step: 95 / 819 Loss: 18.999963760375977 Tokens per Sec: 26915.555328856444
Epoch Step: 100 / 819 Loss: 22.315427780151367 Tokens per Sec: 26365.276713680745
Epoch Step: 105 / 819 Loss: 21.84063720703125 Tokens per Sec: 26242.454505866506
Epoch Step: 110 / 819 Loss: 18.09213638305664 Tokens per Sec: 26573.942911081413
Epoch Step: 115 / 819 Loss: 14.619818687438965 Tokens per Sec: 23353.487456045215
Epoch Step: 120 / 819 Loss: 22.45503807067871 Tokens per Sec: 24418.98991815992
Epoch Step: 125 / 819 Loss: 15.957721710205078 Tokens per Sec: 23305.959608403795
Epoch Step: 130 / 819 Loss: 182.68218994140625 Tokens per Sec: 25692.671019385016
Epoch Step: 135 / 819 Loss: 21.622060775756836 Tokens per Sec: 24481.09263000175
Epoch Step: 140 / 819 Loss: 25.2622127532959 Tokens per Sec: 26386.32463561419
Epoch Step: 145 / 819 Loss: 15.667877197265625 Tokens per Sec: 25975.70821231515
Epoch Step: 150 / 819 Loss: 22.904319763183594 Tokens per Sec: 25555.84129905538
Epoch Step: 155 / 819 Loss: 21.713245391845703 Tokens per Sec: 23155.108260235855
Epoch Step: 160 / 819 Loss: 21.45852279663086 Tokens per Sec: 27704.961946603584
Epoch Step: 165 / 819 Loss: 22.95294952392578 Tokens per Sec: 25792.19946826667
Epoch Step: 170 / 819 Loss: 21.862295150756836 Tokens per Sec: 25752.14631648451
Epoch Step: 175 / 819 Loss: 188.76123046875 Tokens per Sec: 26350.31869349877
Epoch Step: 180 / 819 Loss: 19.033411026000977 Tokens per Sec: 27446.975282856154
Epoch Step: 185 / 819 Loss: 23.772672653198242 Tokens per Sec: 23184.0204745646
Epoch Step: 190 / 819 Loss: 22.117286682128906 Tokens per Sec: 28592.296408742135
Epoch Step: 195 / 819 Loss: 25.450349807739258 Tokens per Sec: 25925.541421572405
Epoch Step: 200 / 819 Loss: 25.72096824645996 Tokens per Sec: 25789.017373341772
Epoch Step: 205 / 819 Loss: 16.545011520385742 Tokens per Sec: 25842.314807373645
Epoch Step: 210 / 819 Loss: 22.429241180419922 Tokens per Sec: 27114.97669579547
Epoch Step: 215 / 819 Loss: 19.957090377807617 Tokens per Sec: 26642.72768988791
Epoch Step: 220 / 819 Loss: 19.928482055664062 Tokens per Sec: 23974.809980043527
Epoch Step: 225 / 819 Loss: 26.312454223632812 Tokens per Sec: 26792.420046574836
Epoch Step: 230 / 819 Loss: 20.38071060180664 Tokens per Sec: 25671.865073412126
Epoch Step: 235 / 819 Loss: 28.714296340942383 Tokens per Sec: 25639.565020220252
Epoch Step: 240 / 819 Loss: 18.87378692626953 Tokens per Sec: 25985.66267319863
Epoch Step: 245 / 819 Loss: 26.52886390686035 Tokens per Sec: 28426.60983150696
Epoch Step: 250 / 819 Loss: 27.182209014892578 Tokens per Sec: 24728.99584864968
Epoch Step: 255 / 819 Loss: 30.85276985168457 Tokens per Sec: 24359.234821548045
Epoch Step: 260 / 819 Loss: 22.16227149963379 Tokens per Sec: 23083.12984269253
Epoch Step: 265 / 819 Loss: 266.9693298339844 Tokens per Sec: 24273.54117801667
Epoch Step: 270 / 819 Loss: 27.38491439819336 Tokens per Sec: 27871.719402663144
Epoch Step: 275 / 819 Loss: 23.846336364746094 Tokens per Sec: 27116.913260442252
Epoch Step: 280 / 819 Loss: 27.010713577270508 Tokens per Sec: 26471.4359062556
Epoch Step: 285 / 819 Loss: 138.55322265625 Tokens per Sec: 27375.40450613418
Epoch Step: 290 / 819 Loss: 23.525495529174805 Tokens per Sec: 25280.51800682372
Epoch Step: 295 / 819 Loss: 26.12810516357422 Tokens per Sec: 23775.15592208866
Epoch Step: 300 / 819 Loss: 17.310239791870117 Tokens per Sec: 28280.99694047376
Epoch Step: 305 / 819 Loss: 15.496174812316895 Tokens per Sec: 25125.300737571488
Epoch Step: 310 / 819 Loss: 28.132646560668945 Tokens per Sec: 25737.14767963075
Epoch Step: 315 / 819 Loss: 19.613805770874023 Tokens per Sec: 27540.8597275858
Epoch Step: 320 / 819 Loss: 17.94841766357422 Tokens per Sec: 26074.892186721034
Epoch Step: 325 / 819 Loss: 17.82416534423828 Tokens per Sec: 26376.208913098773
Epoch Step: 330 / 819 Loss: 24.5723819732666 Tokens per Sec: 23687.02530854106
Epoch Step: 335 / 819 Loss: 25.627134323120117 Tokens per Sec: 24268.019117220174
Epoch Step: 340 / 819 Loss: 22.552879333496094 Tokens per Sec: 26705.956744496012
Epoch Step: 345 / 819 Loss: 26.554222106933594 Tokens per Sec: 25108.38587642455
Epoch Step: 350 / 819 Loss: 22.16079330444336 Tokens per Sec: 27705.319292920816
Epoch Step: 355 / 819 Loss: 22.958240509033203 Tokens per Sec: 27044.44216052936
Epoch Step: 360 / 819 Loss: 21.7525634765625 Tokens per Sec: 26536.235525352036
Epoch Step: 365 / 819 Loss: 25.030391693115234 Tokens per Sec: 26202.14797540501
Epoch Step: 370 / 819 Loss: 246.38995361328125 Tokens per Sec: 23770.541993378236
Epoch Step: 375 / 819 Loss: 28.346813201904297 Tokens per Sec: 25497.594474853267
Epoch Step: 380 / 819 Loss: 21.520986557006836 Tokens per Sec: 25804.200624453864
Epoch Step: 385 / 819 Loss: 23.927738189697266 Tokens per Sec: 23522.723945573834
Epoch Step: 390 / 819 Loss: 21.32440757751465 Tokens per Sec: 27806.445579800948
Epoch Step: 395 / 819 Loss: 23.349336624145508 Tokens per Sec: 25120.758531441625
Epoch Step: 400 / 819 Loss: 25.721471786499023 Tokens per Sec: 25957.237663015527
Epoch Step: 405 / 819 Loss: 26.964759826660156 Tokens per Sec: 26307.59258400055
Epoch Step: 410 / 819 Loss: 27.465158462524414 Tokens per Sec: 23276.583987251546
Epoch Step: 415 / 819 Loss: 225.80470275878906 Tokens per Sec: 24498.13022202287
Epoch Step: 420 / 819 Loss: 250.7818603515625 Tokens per Sec: 25624.074365390778
Epoch Step: 425 / 819 Loss: 23.07166862487793 Tokens per Sec: 23546.763256677
Epoch Step: 430 / 819 Loss: 20.08598518371582 Tokens per Sec: 27155.413959840786
Epoch Step: 435 / 819 Loss: 23.666091918945312 Tokens per Sec: 26366.819702104316
Epoch Step: 440 / 819 Loss: 22.240076065063477 Tokens per Sec: 27888.332497727777
Epoch Step: 445 / 819 Loss: 23.404808044433594 Tokens per Sec: 27100.889579050083
Epoch Step: 450 / 819 Loss: 19.253368377685547 Tokens per Sec: 26605.711809817654
Epoch Step: 455 / 819 Loss: 17.845109939575195 Tokens per Sec: 25140.64359787245
Epoch Step: 460 / 819 Loss: 16.310470581054688 Tokens per Sec: 22867.515961373978
Epoch Step: 465 / 819 Loss: 23.342121124267578 Tokens per Sec: 24584.365328618314
Epoch Step: 470 / 819 Loss: 21.65687370300293 Tokens per Sec: 26252.98514114677
Epoch Step: 475 / 819 Loss: 21.0699520111084 Tokens per Sec: 25774.014741119616
Epoch Step: 480 / 819 Loss: 26.09317970275879 Tokens per Sec: 24189.672042850973
Epoch Step: 485 / 819 Loss: 23.77434539794922 Tokens per Sec: 28364.856330373033
Epoch Step: 490 / 819 Loss: 23.86919403076172 Tokens per Sec: 24919.76944924643
Epoch Step: 495 / 819 Loss: 20.848651885986328 Tokens per Sec: 26785.198875005957
Epoch Step: 500 / 819 Loss: 18.86482048034668 Tokens per Sec: 28827.59922001865
Epoch Step: 505 / 819 Loss: 17.247968673706055 Tokens per Sec: 25434.539434438837
Epoch Step: 510 / 819 Loss: 265.9254150390625 Tokens per Sec: 26361.89133159401
Epoch Step: 515 / 819 Loss: 16.56917953491211 Tokens per Sec: 25579.222948654286
Epoch Step: 520 / 819 Loss: 17.937068939208984 Tokens per Sec: 25580.3848050246
Epoch Step: 525 / 819 Loss: 18.6776065826416 Tokens per Sec: 27031.177702283898
Epoch Step: 530 / 819 Loss: 23.02857780456543 Tokens per Sec: 26335.098493902846
Epoch Step: 535 / 819 Loss: 23.304040908813477 Tokens per Sec: 26730.865963171836
Epoch Step: 540 / 819 Loss: 19.368242263793945 Tokens per Sec: 27642.62224578293
Epoch Step: 545 / 819 Loss: 18.635906219482422 Tokens per Sec: 26473.40720405566
Epoch Step: 550 / 819 Loss: 18.438596725463867 Tokens per Sec: 23197.721699274534
Epoch Step: 555 / 819 Loss: 16.610618591308594 Tokens per Sec: 25444.75008908682
Epoch Step: 560 / 819 Loss: 237.91307067871094 Tokens per Sec: 26482.80396689791
Epoch Step: 565 / 819 Loss: 21.560646057128906 Tokens per Sec: 25467.938365275008
Epoch Step: 570 / 819 Loss: 25.373464584350586 Tokens per Sec: 26086.970421990143
Epoch Step: 575 / 819 Loss: 28.340965270996094 Tokens per Sec: 26630.919020993464
Epoch Step: 580 / 819 Loss: 19.254444122314453 Tokens per Sec: 24608.56005783597
Epoch Step: 585 / 819 Loss: 18.628238677978516 Tokens per Sec: 25085.11566225072
Epoch Step: 590 / 819 Loss: 25.03036880493164 Tokens per Sec: 26202.595295525036
Epoch Step: 595 / 819 Loss: 23.35211753845215 Tokens per Sec: 26092.768926140754
Epoch Step: 600 / 819 Loss: 27.38486671447754 Tokens per Sec: 24607.78033870773
Epoch Step: 605 / 819 Loss: 21.714481353759766 Tokens per Sec: 25744.89676549351
Epoch Step: 610 / 819 Loss: 18.682920455932617 Tokens per Sec: 28252.875678333163
Epoch Step: 615 / 819 Loss: 175.35597229003906 Tokens per Sec: 27807.361995775478
Epoch Step: 620 / 819 Loss: 16.80612564086914 Tokens per Sec: 28208.194349639638
Epoch Step: 625 / 819 Loss: 24.437593460083008 Tokens per Sec: 25013.023426232823
Epoch Step: 630 / 819 Loss: 21.11150360107422 Tokens per Sec: 25621.850026145912
Epoch Step: 635 / 819 Loss: 20.96424674987793 Tokens per Sec: 26043.652564677705
Epoch Step: 640 / 819 Loss: 25.488662719726562 Tokens per Sec: 25137.255801149706
Epoch Step: 645 / 819 Loss: 20.515779495239258 Tokens per Sec: 26706.24379478684
Epoch Step: 650 / 819 Loss: 275.89208984375 Tokens per Sec: 24788.909240499295
Epoch Step: 655 / 819 Loss: 15.575291633605957 Tokens per Sec: 25266.620355886495
Epoch Step: 660 / 819 Loss: 21.930986404418945 Tokens per Sec: 23623.685865639545
Epoch Step: 665 / 819 Loss: 19.554521560668945 Tokens per Sec: 26295.415303947724
Epoch Step: 670 / 819 Loss: 24.13405418395996 Tokens per Sec: 26079.191809132415
Epoch Step: 675 / 819 Loss: 22.345487594604492 Tokens per Sec: 26338.844877594493
Epoch Step: 680 / 819 Loss: 26.054231643676758 Tokens per Sec: 25669.831414111617
Epoch Step: 685 / 819 Loss: 22.412389755249023 Tokens per Sec: 24837.27687827305
Epoch Step: 690 / 819 Loss: 24.07647132873535 Tokens per Sec: 25592.036543682025
Epoch Step: 695 / 819 Loss: 24.450275421142578 Tokens per Sec: 23695.932211209925
Epoch Step: 700 / 819 Loss: 26.621232986450195 Tokens per Sec: 22590.82784259665
Epoch Step: 705 / 819 Loss: 24.564678192138672 Tokens per Sec: 26383.685346855742
Epoch Step: 710 / 819 Loss: 24.23735237121582 Tokens per Sec: 25285.92614015286
Epoch Step: 715 / 819 Loss: 13.1543550491333 Tokens per Sec: 25823.402321264137
Epoch Step: 720 / 819 Loss: 21.50369644165039 Tokens per Sec: 26019.742312190934
Epoch Step: 725 / 819 Loss: 16.644691467285156 Tokens per Sec: 26628.98788858123
Epoch Step: 730 / 819 Loss: 16.098323822021484 Tokens per Sec: 27192.056641827854
Epoch Step: 735 / 819 Loss: 18.142248153686523 Tokens per Sec: 24514.46836321902
Epoch Step: 740 / 819 Loss: 23.224803924560547 Tokens per Sec: 25058.0430268062
Epoch Step: 745 / 819 Loss: 21.377445220947266 Tokens per Sec: 25782.189124185785
Epoch Step: 750 / 819 Loss: 213.23300170898438 Tokens per Sec: 26370.92819060782
Epoch Step: 755 / 819 Loss: 19.169748306274414 Tokens per Sec: 23930.781792467842
Epoch Step: 760 / 819 Loss: 24.90607452392578 Tokens per Sec: 26774.36612119376
Epoch Step: 765 / 819 Loss: 16.016952514648438 Tokens per Sec: 27581.234793690834
Epoch Step: 770 / 819 Loss: 22.143217086791992 Tokens per Sec: 22926.443793454335
Epoch Step: 775 / 819 Loss: 241.26596069335938 Tokens per Sec: 25865.1197374617
Epoch Step: 780 / 819 Loss: 185.56591796875 Tokens per Sec: 26466.23164661127
Epoch Step: 785 / 819 Loss: 21.404041290283203 Tokens per Sec: 25001.72027463071
Epoch Step: 790 / 819 Loss: 22.553081512451172 Tokens per Sec: 24666.4647631572
Epoch Step: 795 / 819 Loss: 27.679222106933594 Tokens per Sec: 23163.781695648388
Epoch Step: 800 / 819 Loss: 26.105491638183594 Tokens per Sec: 26668.104683363144
Epoch Step: 805 / 819 Loss: 22.219322204589844 Tokens per Sec: 24966.70950386857
Epoch Step: 810 / 819 Loss: 24.234840393066406 Tokens per Sec: 25346.16952633135
Epoch Step: 815 / 819 Loss: 21.99527359008789 Tokens per Sec: 19638.889092407506
Epoch ended with duration 0:02:31.342027
Train perplexity: 1.6222659647949338
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.286959
Validation perplexity: 1.7675602456940642
Epoch 17 / 1000
Epoch Step: 5 / 819 Loss: 21.083351135253906 Tokens per Sec: 23947.269415609495
Epoch Step: 10 / 819 Loss: 22.737123489379883 Tokens per Sec: 23871.403601144182
Epoch Step: 15 / 819 Loss: 17.010696411132812 Tokens per Sec: 24833.22611567417
Epoch Step: 20 / 819 Loss: 23.8061466217041 Tokens per Sec: 25398.120351940826
Epoch Step: 25 / 819 Loss: 21.64408302307129 Tokens per Sec: 23278.485276236377
Epoch Step: 30 / 819 Loss: 26.070783615112305 Tokens per Sec: 28238.503711987127
Epoch Step: 35 / 819 Loss: 18.60103416442871 Tokens per Sec: 26138.882394606655
Epoch Step: 40 / 819 Loss: 18.1251220703125 Tokens per Sec: 24623.470659982315
Epoch Step: 45 / 819 Loss: 214.2659912109375 Tokens per Sec: 25603.385215642043
Epoch Step: 50 / 819 Loss: 19.02033805847168 Tokens per Sec: 27395.853307972902
Epoch Step: 55 / 819 Loss: 15.05635929107666 Tokens per Sec: 26489.867207407933
Epoch Step: 60 / 819 Loss: 21.157241821289062 Tokens per Sec: 25739.26785488052
Epoch Step: 65 / 819 Loss: 21.37586784362793 Tokens per Sec: 26255.37987170503
Epoch Step: 70 / 819 Loss: 18.83806037902832 Tokens per Sec: 28201.94251367995
Epoch Step: 75 / 819 Loss: 24.003969192504883 Tokens per Sec: 25563.549501475787
Epoch Step: 80 / 819 Loss: 28.039531707763672 Tokens per Sec: 26697.746308934224
Epoch Step: 85 / 819 Loss: 22.318933486938477 Tokens per Sec: 25681.033875763897
Epoch Step: 90 / 819 Loss: 16.106216430664062 Tokens per Sec: 27253.810778396724
Epoch Step: 95 / 819 Loss: 21.439258575439453 Tokens per Sec: 25695.867196061874
Epoch Step: 100 / 819 Loss: 21.6640682220459 Tokens per Sec: 23975.35953145353
Epoch Step: 105 / 819 Loss: 19.39407730102539 Tokens per Sec: 27393.169759986264
Epoch Step: 110 / 819 Loss: 18.093290328979492 Tokens per Sec: 25504.531712159427
Epoch Step: 115 / 819 Loss: 24.245677947998047 Tokens per Sec: 24590.220744279297
Epoch Step: 120 / 819 Loss: 13.24128246307373 Tokens per Sec: 28112.48220396018
Epoch Step: 125 / 819 Loss: 20.952632904052734 Tokens per Sec: 27826.492279100396
Epoch Step: 130 / 819 Loss: 22.418479919433594 Tokens per Sec: 24474.349502983856
Epoch Step: 135 / 819 Loss: 16.87013053894043 Tokens per Sec: 23653.141713976514
Epoch Step: 140 / 819 Loss: 21.04837417602539 Tokens per Sec: 25531.532421812015
Epoch Step: 145 / 819 Loss: 24.56991195678711 Tokens per Sec: 28491.117640949175
Epoch Step: 150 / 819 Loss: 289.0296630859375 Tokens per Sec: 26083.164339084055
Epoch Step: 155 / 819 Loss: 19.648757934570312 Tokens per Sec: 25087.077500700423
Epoch Step: 160 / 819 Loss: 18.83279037475586 Tokens per Sec: 27818.737119044934
Epoch Step: 165 / 819 Loss: 21.36405372619629 Tokens per Sec: 25729.53172400974
Epoch Step: 170 / 819 Loss: 20.97268295288086 Tokens per Sec: 25704.260162092985
Epoch Step: 175 / 819 Loss: 24.31270408630371 Tokens per Sec: 23654.51355359701
Epoch Step: 180 / 819 Loss: 19.939603805541992 Tokens per Sec: 25355.750794325744
Epoch Step: 185 / 819 Loss: 20.24643325805664 Tokens per Sec: 25121.53600585203
Epoch Step: 190 / 819 Loss: 16.847213745117188 Tokens per Sec: 24547.3611640931
Epoch Step: 195 / 819 Loss: 24.214244842529297 Tokens per Sec: 24597.36940385494
Epoch Step: 200 / 819 Loss: 23.847414016723633 Tokens per Sec: 26970.435963881806
Epoch Step: 205 / 819 Loss: 19.676759719848633 Tokens per Sec: 24413.950165657778
Epoch Step: 210 / 819 Loss: 25.721866607666016 Tokens per Sec: 26035.889293936925
Epoch Step: 215 / 819 Loss: 20.837203979492188 Tokens per Sec: 25976.63331929016
Epoch Step: 220 / 819 Loss: 209.3743133544922 Tokens per Sec: 26066.327287921667
Epoch Step: 225 / 819 Loss: 19.520492553710938 Tokens per Sec: 23948.983187182406
Epoch Step: 230 / 819 Loss: 18.280210494995117 Tokens per Sec: 27613.736210527237
Epoch Step: 235 / 819 Loss: 16.36825180053711 Tokens per Sec: 25174.961790393838
Epoch Step: 240 / 819 Loss: 24.855058670043945 Tokens per Sec: 27244.059037546478
Epoch Step: 245 / 819 Loss: 22.6330623626709 Tokens per Sec: 25947.343072834046
Epoch Step: 250 / 819 Loss: 19.177942276000977 Tokens per Sec: 25469.53943492084
Epoch Step: 255 / 819 Loss: 24.599037170410156 Tokens per Sec: 25377.112664130407
Epoch Step: 260 / 819 Loss: 15.563673973083496 Tokens per Sec: 25266.52500963266
Epoch Step: 265 / 819 Loss: 17.197786331176758 Tokens per Sec: 23386.11328310656
Epoch Step: 270 / 819 Loss: 19.605979919433594 Tokens per Sec: 25330.27622782863
Epoch Step: 275 / 819 Loss: 26.229581832885742 Tokens per Sec: 25326.15850918764
Epoch Step: 280 / 819 Loss: 20.554462432861328 Tokens per Sec: 27801.93659293303
Epoch Step: 285 / 819 Loss: 14.473992347717285 Tokens per Sec: 25677.631643746252
Epoch Step: 290 / 819 Loss: 17.53753089904785 Tokens per Sec: 28086.883373631823
Epoch Step: 295 / 819 Loss: 19.036148071289062 Tokens per Sec: 25372.92004924683
Epoch Step: 300 / 819 Loss: 23.309789657592773 Tokens per Sec: 23469.15725304447
Epoch Step: 305 / 819 Loss: 282.26263427734375 Tokens per Sec: 26766.282459121296
Epoch Step: 310 / 819 Loss: 19.288042068481445 Tokens per Sec: 27562.061614547045
Epoch Step: 315 / 819 Loss: 19.438549041748047 Tokens per Sec: 25448.99863866653
Epoch Step: 320 / 819 Loss: 149.9061279296875 Tokens per Sec: 23279.89188351355
Epoch Step: 325 / 819 Loss: 24.24885368347168 Tokens per Sec: 25336.220889125518
Epoch Step: 330 / 819 Loss: 20.15406608581543 Tokens per Sec: 24726.808350222283
Epoch Step: 335 / 819 Loss: 143.72972106933594 Tokens per Sec: 23106.248648774515
Epoch Step: 340 / 819 Loss: 28.758590698242188 Tokens per Sec: 24060.66359780786
Epoch Step: 345 / 819 Loss: 18.518888473510742 Tokens per Sec: 26760.179213558888
Epoch Step: 350 / 819 Loss: 20.891529083251953 Tokens per Sec: 24629.878488431263
Epoch Step: 355 / 819 Loss: 21.282535552978516 Tokens per Sec: 24578.58056489732
Epoch Step: 360 / 819 Loss: 19.45753288269043 Tokens per Sec: 27838.004365711928
Epoch Step: 365 / 819 Loss: 21.965469360351562 Tokens per Sec: 26333.224559046434
Epoch Step: 370 / 819 Loss: 20.174610137939453 Tokens per Sec: 25571.73880221708
Epoch Step: 375 / 819 Loss: 24.93419075012207 Tokens per Sec: 26301.004192359942
Epoch Step: 380 / 819 Loss: 21.164968490600586 Tokens per Sec: 27211.423190327077
Epoch Step: 385 / 819 Loss: 14.645190238952637 Tokens per Sec: 27036.65987771125
Epoch Step: 390 / 819 Loss: 26.673336029052734 Tokens per Sec: 26971.29267859048
Epoch Step: 395 / 819 Loss: 16.318876266479492 Tokens per Sec: 26326.48942667124
Epoch Step: 400 / 819 Loss: 16.02029037475586 Tokens per Sec: 25226.79065694709
Epoch Step: 405 / 819 Loss: 17.72916030883789 Tokens per Sec: 27207.439038951536
Epoch Step: 410 / 819 Loss: 17.931682586669922 Tokens per Sec: 27525.109376090797
Epoch Step: 415 / 819 Loss: 21.851106643676758 Tokens per Sec: 25546.568732009495
Epoch Step: 420 / 819 Loss: 18.675289154052734 Tokens per Sec: 28486.96411318398
Epoch Step: 425 / 819 Loss: 13.653421401977539 Tokens per Sec: 26942.655615810738
Epoch Step: 430 / 819 Loss: 27.148183822631836 Tokens per Sec: 25886.604508024564
Epoch Step: 435 / 819 Loss: 19.152841567993164 Tokens per Sec: 27470.762204501054
Epoch Step: 440 / 819 Loss: 25.27713394165039 Tokens per Sec: 27237.817420173003
Epoch Step: 445 / 819 Loss: 19.62433624267578 Tokens per Sec: 24499.062058630723
Epoch Step: 450 / 819 Loss: 17.396581649780273 Tokens per Sec: 25968.42573798896
Epoch Step: 455 / 819 Loss: 17.4788761138916 Tokens per Sec: 23761.353773001338
Epoch Step: 460 / 819 Loss: 20.20717430114746 Tokens per Sec: 23219.594268269604
Epoch Step: 465 / 819 Loss: 16.61449432373047 Tokens per Sec: 24339.12930247068
Epoch Step: 470 / 819 Loss: 20.18230628967285 Tokens per Sec: 24452.657013326996
Epoch Step: 475 / 819 Loss: 19.973114013671875 Tokens per Sec: 26496.4121012723
Epoch Step: 480 / 819 Loss: 16.108020782470703 Tokens per Sec: 25486.829209893105
Epoch Step: 485 / 819 Loss: 16.027917861938477 Tokens per Sec: 25730.79002905507
Epoch Step: 490 / 819 Loss: 23.262102127075195 Tokens per Sec: 24090.520300077238
Epoch Step: 495 / 819 Loss: 18.8515625 Tokens per Sec: 26776.340253331124
Epoch Step: 500 / 819 Loss: 20.3720645904541 Tokens per Sec: 26198.7816413119
Epoch Step: 505 / 819 Loss: 25.310768127441406 Tokens per Sec: 26584.51108844193
Epoch Step: 510 / 819 Loss: 12.690153121948242 Tokens per Sec: 25899.239379050767
Epoch Step: 515 / 819 Loss: 18.66094398498535 Tokens per Sec: 26361.692238716216
Epoch Step: 520 / 819 Loss: 18.292264938354492 Tokens per Sec: 24432.063571957977
Epoch Step: 525 / 819 Loss: 13.465906143188477 Tokens per Sec: 24396.15243755704
Epoch Step: 530 / 819 Loss: 28.660200119018555 Tokens per Sec: 22050.11023662719
Epoch Step: 535 / 819 Loss: 16.558298110961914 Tokens per Sec: 23175.01617704095
Epoch Step: 540 / 819 Loss: 23.954694747924805 Tokens per Sec: 24754.164924577915
Epoch Step: 545 / 819 Loss: 20.887176513671875 Tokens per Sec: 26102.30715454085
Epoch Step: 550 / 819 Loss: 19.90506362915039 Tokens per Sec: 23781.61274971113
Epoch Step: 555 / 819 Loss: 16.567659378051758 Tokens per Sec: 25326.997933781637
Epoch Step: 560 / 819 Loss: 253.6612548828125 Tokens per Sec: 25621.747430920303
Epoch Step: 565 / 819 Loss: 19.93645477294922 Tokens per Sec: 26573.518384024977
Epoch Step: 570 / 819 Loss: 134.1260223388672 Tokens per Sec: 25503.46969778339
Epoch Step: 575 / 819 Loss: 19.19470977783203 Tokens per Sec: 25830.742462836668
Epoch Step: 580 / 819 Loss: 25.313167572021484 Tokens per Sec: 26113.238117333934
Epoch Step: 585 / 819 Loss: 23.419679641723633 Tokens per Sec: 26213.170068492742
Epoch Step: 590 / 819 Loss: 21.17527961730957 Tokens per Sec: 27035.02932581103
Epoch Step: 595 / 819 Loss: 21.353384017944336 Tokens per Sec: 27631.94216712673
Epoch Step: 600 / 819 Loss: 26.686477661132812 Tokens per Sec: 27859.35009386703
Epoch Step: 605 / 819 Loss: 98.89539337158203 Tokens per Sec: 24453.666797273414
Epoch Step: 610 / 819 Loss: 25.295473098754883 Tokens per Sec: 23463.38842488242
Epoch Step: 615 / 819 Loss: 23.81081199645996 Tokens per Sec: 22374.398879121447
Epoch Step: 620 / 819 Loss: 229.4561004638672 Tokens per Sec: 26161.01045039925
Epoch Step: 625 / 819 Loss: 20.60582733154297 Tokens per Sec: 28012.567800683573
Epoch Step: 630 / 819 Loss: 25.839374542236328 Tokens per Sec: 24580.592060977695
Epoch Step: 635 / 819 Loss: 20.23773193359375 Tokens per Sec: 26794.39532751121
Epoch Step: 640 / 819 Loss: 17.296558380126953 Tokens per Sec: 26304.69573398569
Epoch Step: 645 / 819 Loss: 22.12944221496582 Tokens per Sec: 23643.785182162414
Epoch Step: 650 / 819 Loss: 16.279085159301758 Tokens per Sec: 27490.725084285976
Epoch Step: 655 / 819 Loss: 24.72835350036621 Tokens per Sec: 26135.69890969118
Epoch Step: 660 / 819 Loss: 19.556995391845703 Tokens per Sec: 24701.534667166503
Epoch Step: 665 / 819 Loss: 18.34018325805664 Tokens per Sec: 27045.044207710063
Epoch Step: 670 / 819 Loss: 23.258811950683594 Tokens per Sec: 28967.708849322433
Epoch Step: 675 / 819 Loss: 21.7227725982666 Tokens per Sec: 27093.996490356996
Epoch Step: 680 / 819 Loss: 20.604053497314453 Tokens per Sec: 25595.27459784901
Epoch Step: 685 / 819 Loss: 19.545141220092773 Tokens per Sec: 26719.86394013304
Epoch Step: 690 / 819 Loss: 23.30784034729004 Tokens per Sec: 24463.045917461786
Epoch Step: 695 / 819 Loss: 21.87947654724121 Tokens per Sec: 25940.367553309698
Epoch Step: 700 / 819 Loss: 25.202043533325195 Tokens per Sec: 26222.545837184975
Epoch Step: 705 / 819 Loss: 27.28122901916504 Tokens per Sec: 27169.068729703642
Epoch Step: 710 / 819 Loss: 15.72605037689209 Tokens per Sec: 25280.10222669433
Epoch Step: 715 / 819 Loss: 24.81467056274414 Tokens per Sec: 23392.485946351935
Epoch Step: 720 / 819 Loss: 19.410011291503906 Tokens per Sec: 26807.04696484517
Epoch Step: 725 / 819 Loss: 25.827098846435547 Tokens per Sec: 26964.513018747166
Epoch Step: 730 / 819 Loss: 30.089744567871094 Tokens per Sec: 25415.377988989378
Epoch Step: 735 / 819 Loss: 17.231069564819336 Tokens per Sec: 25776.923216069146
Epoch Step: 740 / 819 Loss: 23.371376037597656 Tokens per Sec: 25328.492373234672
Epoch Step: 745 / 819 Loss: 19.43883514404297 Tokens per Sec: 26262.368627606556
Epoch Step: 750 / 819 Loss: 20.821786880493164 Tokens per Sec: 26117.021972671995
Epoch Step: 755 / 819 Loss: 14.935624122619629 Tokens per Sec: 26417.417090157564
Epoch Step: 760 / 819 Loss: 19.994338989257812 Tokens per Sec: 27884.426592355183
Epoch Step: 765 / 819 Loss: 16.291706085205078 Tokens per Sec: 27105.801970213255
Epoch Step: 770 / 819 Loss: 19.301816940307617 Tokens per Sec: 26746.145993412625
Epoch Step: 775 / 819 Loss: 20.113571166992188 Tokens per Sec: 25469.402507917417
Epoch Step: 780 / 819 Loss: 17.45122718811035 Tokens per Sec: 26241.50591734385
Epoch Step: 785 / 819 Loss: 26.72161865234375 Tokens per Sec: 25215.970926874423
Epoch Step: 790 / 819 Loss: 23.710956573486328 Tokens per Sec: 23553.449343633514
Epoch Step: 795 / 819 Loss: 199.18980407714844 Tokens per Sec: 23793.619489563785
Epoch Step: 800 / 819 Loss: 20.353750228881836 Tokens per Sec: 23748.330260777457
Epoch Step: 805 / 819 Loss: 165.29994201660156 Tokens per Sec: 20268.279488483142
Epoch Step: 810 / 819 Loss: 20.914600372314453 Tokens per Sec: 24509.58693036794
Epoch Step: 815 / 819 Loss: 18.99309539794922 Tokens per Sec: 22477.732034205583
Epoch ended with duration 0:02:31.473403
Train perplexity: 1.6425185527162003
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.251656
Validation perplexity: 1.5698969781957954
Epoch 18 / 1000
Epoch Step: 5 / 819 Loss: 22.407133102416992 Tokens per Sec: 28830.40084245831
Epoch Step: 10 / 819 Loss: 175.5738067626953 Tokens per Sec: 26906.651579349567
Epoch Step: 15 / 819 Loss: 17.301395416259766 Tokens per Sec: 26441.684571189806
Epoch Step: 20 / 819 Loss: 19.296314239501953 Tokens per Sec: 24530.631830674793
Epoch Step: 25 / 819 Loss: 25.48975944519043 Tokens per Sec: 26192.251466558748
Epoch Step: 30 / 819 Loss: 21.183029174804688 Tokens per Sec: 25423.855302285363
Epoch Step: 35 / 819 Loss: 29.307273864746094 Tokens per Sec: 28073.02318206838
Epoch Step: 40 / 819 Loss: 21.046178817749023 Tokens per Sec: 24947.364738550805
Epoch Step: 45 / 819 Loss: 18.415842056274414 Tokens per Sec: 25936.31770665955
Epoch Step: 50 / 819 Loss: 26.102794647216797 Tokens per Sec: 23967.57502474602
Epoch Step: 55 / 819 Loss: 20.330900192260742 Tokens per Sec: 24720.65658938293
Epoch Step: 60 / 819 Loss: 19.537214279174805 Tokens per Sec: 23846.556290362318
Epoch Step: 65 / 819 Loss: 18.051877975463867 Tokens per Sec: 24917.81014695205
Epoch Step: 70 / 819 Loss: 20.453052520751953 Tokens per Sec: 26621.67642713291
Epoch Step: 75 / 819 Loss: 120.18182373046875 Tokens per Sec: 22975.555160978718
Epoch Step: 80 / 819 Loss: 21.757152557373047 Tokens per Sec: 25303.00887608573
Epoch Step: 85 / 819 Loss: 19.510438919067383 Tokens per Sec: 25109.497193430885
Epoch Step: 90 / 819 Loss: 25.440988540649414 Tokens per Sec: 25577.174779824723
Epoch Step: 95 / 819 Loss: 23.911500930786133 Tokens per Sec: 25823.625898684146
Epoch Step: 100 / 819 Loss: 18.589641571044922 Tokens per Sec: 26235.62124353505
Epoch Step: 105 / 819 Loss: 25.86743927001953 Tokens per Sec: 26517.90589711961
Epoch Step: 110 / 819 Loss: 205.31423950195312 Tokens per Sec: 27539.249248866883
Epoch Step: 115 / 819 Loss: 24.88642692565918 Tokens per Sec: 26170.240561172977
Epoch Step: 120 / 819 Loss: 17.388778686523438 Tokens per Sec: 25989.679557987085
Epoch Step: 125 / 819 Loss: 21.911861419677734 Tokens per Sec: 27098.574994671326
Epoch Step: 130 / 819 Loss: 24.04460334777832 Tokens per Sec: 25290.53211890837
Epoch Step: 135 / 819 Loss: 23.810379028320312 Tokens per Sec: 25606.124249398516
Epoch Step: 140 / 819 Loss: 22.14451026916504 Tokens per Sec: 24926.08787867495
Epoch Step: 145 / 819 Loss: 253.31700134277344 Tokens per Sec: 24295.07398059601
Epoch Step: 150 / 819 Loss: 29.424179077148438 Tokens per Sec: 25693.322519570353
Epoch Step: 155 / 819 Loss: 24.02614402770996 Tokens per Sec: 25824.898773695055
Epoch Step: 160 / 819 Loss: 20.32054328918457 Tokens per Sec: 28636.619944638624
Epoch Step: 165 / 819 Loss: 23.529701232910156 Tokens per Sec: 26008.388451220526
Epoch Step: 170 / 819 Loss: 22.586029052734375 Tokens per Sec: 26768.209899059282
Epoch Step: 175 / 819 Loss: 22.555265426635742 Tokens per Sec: 24067.97639236385
Epoch Step: 180 / 819 Loss: 22.443937301635742 Tokens per Sec: 24290.55820749357
Epoch Step: 185 / 819 Loss: 16.153701782226562 Tokens per Sec: 26124.460052096023
Epoch Step: 190 / 819 Loss: 25.02739143371582 Tokens per Sec: 26642.32199118654
Epoch Step: 195 / 819 Loss: 24.87565803527832 Tokens per Sec: 25871.174356779193
Epoch Step: 200 / 819 Loss: 26.519363403320312 Tokens per Sec: 24277.34114147691
Epoch Step: 205 / 819 Loss: 25.04901885986328 Tokens per Sec: 25315.93754185138
Epoch Step: 210 / 819 Loss: 21.74669075012207 Tokens per Sec: 25416.973591719965
Epoch Step: 215 / 819 Loss: 26.859996795654297 Tokens per Sec: 26107.942042941948
Epoch Step: 220 / 819 Loss: 21.953794479370117 Tokens per Sec: 25572.340905359157
Epoch Step: 225 / 819 Loss: 17.67173194885254 Tokens per Sec: 26044.57304484058
Epoch Step: 230 / 819 Loss: 19.951539993286133 Tokens per Sec: 25941.146583509882
Epoch Step: 235 / 819 Loss: 17.504322052001953 Tokens per Sec: 25856.85187311532
Epoch Step: 240 / 819 Loss: 20.586931228637695 Tokens per Sec: 25235.70717291446
Epoch Step: 245 / 819 Loss: 183.5157012939453 Tokens per Sec: 26473.700627012826
Epoch Step: 250 / 819 Loss: 18.945602416992188 Tokens per Sec: 27716.406390571537
Epoch Step: 255 / 819 Loss: 19.249940872192383 Tokens per Sec: 26501.787470155385
Epoch Step: 260 / 819 Loss: 26.5841007232666 Tokens per Sec: 24130.201045159145
Epoch Step: 265 / 819 Loss: 30.882129669189453 Tokens per Sec: 27132.21439855429
Epoch Step: 270 / 819 Loss: 22.681276321411133 Tokens per Sec: 24918.98833819035
Epoch Step: 275 / 819 Loss: 20.36712646484375 Tokens per Sec: 24902.718702786322
Epoch Step: 280 / 819 Loss: 19.68316650390625 Tokens per Sec: 24731.134713233725
Epoch Step: 285 / 819 Loss: 25.653079986572266 Tokens per Sec: 25845.09286704782
Epoch Step: 290 / 819 Loss: 200.69015502929688 Tokens per Sec: 26673.4744188704
Epoch Step: 295 / 819 Loss: 17.36612319946289 Tokens per Sec: 27242.775512684846
Epoch Step: 300 / 819 Loss: 25.904926300048828 Tokens per Sec: 24544.456177599233
Epoch Step: 305 / 819 Loss: 163.49755859375 Tokens per Sec: 23213.60424823986
Epoch Step: 310 / 819 Loss: 20.769012451171875 Tokens per Sec: 24580.656446811507
Epoch Step: 315 / 819 Loss: 25.99770736694336 Tokens per Sec: 25338.17199777537
Epoch Step: 320 / 819 Loss: 23.276527404785156 Tokens per Sec: 24733.087822156256
Epoch Step: 325 / 819 Loss: 17.729028701782227 Tokens per Sec: 27824.431068744292
Epoch Step: 330 / 819 Loss: 169.5793914794922 Tokens per Sec: 25547.247959171422
Epoch Step: 335 / 819 Loss: 21.463197708129883 Tokens per Sec: 27065.445738877588
Epoch Step: 340 / 819 Loss: 22.91982650756836 Tokens per Sec: 24609.15145172271
Epoch Step: 345 / 819 Loss: 25.868896484375 Tokens per Sec: 26140.487018999018
Epoch Step: 350 / 819 Loss: 17.40983009338379 Tokens per Sec: 25718.38671379385
Epoch Step: 355 / 819 Loss: 18.314138412475586 Tokens per Sec: 26330.030334131345
Epoch Step: 360 / 819 Loss: 21.207658767700195 Tokens per Sec: 25534.921039252717
Epoch Step: 365 / 819 Loss: 21.807926177978516 Tokens per Sec: 26042.50760970967
Epoch Step: 370 / 819 Loss: 18.022184371948242 Tokens per Sec: 23538.577233844062
Epoch Step: 375 / 819 Loss: 29.427270889282227 Tokens per Sec: 25156.049396042567
Epoch Step: 380 / 819 Loss: 20.223003387451172 Tokens per Sec: 27435.516876839978
Epoch Step: 385 / 819 Loss: 22.53073501586914 Tokens per Sec: 26782.986829529975
Epoch Step: 390 / 819 Loss: 24.791366577148438 Tokens per Sec: 24477.64465625049
Epoch Step: 395 / 819 Loss: 17.64519500732422 Tokens per Sec: 28299.5033399769
Epoch Step: 400 / 819 Loss: 24.29998779296875 Tokens per Sec: 26659.127884317157
Epoch Step: 405 / 819 Loss: 22.68033790588379 Tokens per Sec: 26044.203446755422
Epoch Step: 410 / 819 Loss: 23.940555572509766 Tokens per Sec: 25812.566045167034
Epoch Step: 415 / 819 Loss: 21.043615341186523 Tokens per Sec: 26215.760247086604
Epoch Step: 420 / 819 Loss: 18.986019134521484 Tokens per Sec: 23515.725030168676
Epoch Step: 425 / 819 Loss: 21.247135162353516 Tokens per Sec: 27465.590142795936
Epoch Step: 430 / 819 Loss: 24.73304557800293 Tokens per Sec: 24643.13891187333
Epoch Step: 435 / 819 Loss: 25.69208335876465 Tokens per Sec: 24318.969936157697
Epoch Step: 440 / 819 Loss: 13.263423919677734 Tokens per Sec: 24950.582951608678
Epoch Step: 445 / 819 Loss: 20.780126571655273 Tokens per Sec: 24991.470617436877
Epoch Step: 450 / 819 Loss: 219.05372619628906 Tokens per Sec: 27441.55406129486
Epoch Step: 455 / 819 Loss: 26.885103225708008 Tokens per Sec: 26203.501716211624
Epoch Step: 460 / 819 Loss: 26.421043395996094 Tokens per Sec: 24748.663335741847
Epoch Step: 465 / 819 Loss: 26.738372802734375 Tokens per Sec: 25133.343858827113
Epoch Step: 470 / 819 Loss: 19.54169464111328 Tokens per Sec: 23361.32721652983
Epoch Step: 475 / 819 Loss: 16.33394432067871 Tokens per Sec: 26542.22542639559
Epoch Step: 480 / 819 Loss: 22.69942855834961 Tokens per Sec: 26157.024511275624
Epoch Step: 485 / 819 Loss: 22.47906494140625 Tokens per Sec: 23776.626881599954
Epoch Step: 490 / 819 Loss: 29.11980628967285 Tokens per Sec: 26059.73989835963
Epoch Step: 495 / 819 Loss: 126.4817123413086 Tokens per Sec: 26282.886845652138
Epoch Step: 500 / 819 Loss: 130.06204223632812 Tokens per Sec: 25522.042798206166
Epoch Step: 505 / 819 Loss: 17.445659637451172 Tokens per Sec: 27750.747726964022
Epoch Step: 510 / 819 Loss: 21.573680877685547 Tokens per Sec: 26517.951160844787
Epoch Step: 515 / 819 Loss: 19.01430320739746 Tokens per Sec: 23518.034119546355
Epoch Step: 520 / 819 Loss: 115.15670013427734 Tokens per Sec: 24739.37360960745
Epoch Step: 525 / 819 Loss: 24.19898796081543 Tokens per Sec: 26720.053723879264
Epoch Step: 530 / 819 Loss: 18.548004150390625 Tokens per Sec: 26977.51367183732
Epoch Step: 535 / 819 Loss: 22.89733123779297 Tokens per Sec: 25844.064463753704
Epoch Step: 540 / 819 Loss: 26.719993591308594 Tokens per Sec: 23889.38699782899
Epoch Step: 545 / 819 Loss: 21.990970611572266 Tokens per Sec: 27481.780316841923
Epoch Step: 550 / 819 Loss: 26.883708953857422 Tokens per Sec: 27124.338139988675
Epoch Step: 555 / 819 Loss: 20.961105346679688 Tokens per Sec: 25758.10478189189
Epoch Step: 560 / 819 Loss: 23.517335891723633 Tokens per Sec: 25171.932695887153
Epoch Step: 565 / 819 Loss: 27.07522964477539 Tokens per Sec: 26381.572552302634
Epoch Step: 570 / 819 Loss: 25.570045471191406 Tokens per Sec: 24475.362860190155
Epoch Step: 575 / 819 Loss: 24.182910919189453 Tokens per Sec: 23611.183257927984
Epoch Step: 580 / 819 Loss: 25.69658660888672 Tokens per Sec: 24384.370797007225
Epoch Step: 585 / 819 Loss: 221.45013427734375 Tokens per Sec: 26342.33658972566
Epoch Step: 590 / 819 Loss: 30.437408447265625 Tokens per Sec: 24902.94537973196
Epoch Step: 595 / 819 Loss: 21.038358688354492 Tokens per Sec: 25428.365809772426
Epoch Step: 600 / 819 Loss: 18.906280517578125 Tokens per Sec: 24494.466768408747
Epoch Step: 605 / 819 Loss: 27.13416862487793 Tokens per Sec: 26192.49779708676
Epoch Step: 610 / 819 Loss: 19.877634048461914 Tokens per Sec: 27365.525581571954
Epoch Step: 615 / 819 Loss: 19.334253311157227 Tokens per Sec: 28200.400415275817
Epoch Step: 620 / 819 Loss: 16.735795974731445 Tokens per Sec: 25231.964032972304
Epoch Step: 625 / 819 Loss: 256.7701110839844 Tokens per Sec: 26696.41457551224
Epoch Step: 630 / 819 Loss: 28.46878433227539 Tokens per Sec: 23172.41141532779
Epoch Step: 635 / 819 Loss: 26.253751754760742 Tokens per Sec: 25248.493280255774
Epoch Step: 640 / 819 Loss: 16.772966384887695 Tokens per Sec: 26581.653752557788
Epoch Step: 645 / 819 Loss: 23.533740997314453 Tokens per Sec: 23585.34714459084
Epoch Step: 650 / 819 Loss: 19.67470359802246 Tokens per Sec: 26639.62552074044
Epoch Step: 655 / 819 Loss: 21.108186721801758 Tokens per Sec: 26608.65086391011
Epoch Step: 660 / 819 Loss: 15.754836082458496 Tokens per Sec: 23335.217175431393
Epoch Step: 665 / 819 Loss: 21.757328033447266 Tokens per Sec: 21802.425972562192
Epoch Step: 670 / 819 Loss: 23.55067253112793 Tokens per Sec: 27544.580466549083
Epoch Step: 675 / 819 Loss: 24.052478790283203 Tokens per Sec: 25340.11702364939
Epoch Step: 680 / 819 Loss: 26.35594940185547 Tokens per Sec: 26134.088474760872
Epoch Step: 685 / 819 Loss: 20.02329444885254 Tokens per Sec: 25471.118720816048
Epoch Step: 690 / 819 Loss: 19.05799102783203 Tokens per Sec: 26441.953563100287
Epoch Step: 695 / 819 Loss: 21.561599731445312 Tokens per Sec: 27056.529159083642
Epoch Step: 700 / 819 Loss: 23.862470626831055 Tokens per Sec: 26640.10256999867
Epoch Step: 705 / 819 Loss: 19.939359664916992 Tokens per Sec: 27117.502176986753
Epoch Step: 710 / 819 Loss: 16.200759887695312 Tokens per Sec: 24624.265261932094
Epoch Step: 715 / 819 Loss: 23.658382415771484 Tokens per Sec: 25643.42493801825
Epoch Step: 720 / 819 Loss: 12.602673530578613 Tokens per Sec: 23877.959299305625
Epoch Step: 725 / 819 Loss: 22.566072463989258 Tokens per Sec: 26512.014534139587
Epoch Step: 730 / 819 Loss: 20.088558197021484 Tokens per Sec: 23016.58929604776
Epoch Step: 735 / 819 Loss: 19.644142150878906 Tokens per Sec: 26004.359633840373
Epoch Step: 740 / 819 Loss: 21.10973358154297 Tokens per Sec: 26923.64941168572
Epoch Step: 745 / 819 Loss: 24.13345718383789 Tokens per Sec: 25925.360687108587
Epoch Step: 750 / 819 Loss: 20.774795532226562 Tokens per Sec: 24751.87308109466
Epoch Step: 755 / 819 Loss: 19.21154022216797 Tokens per Sec: 25210.586368430395
Epoch Step: 760 / 819 Loss: 21.198246002197266 Tokens per Sec: 25366.031239035015
Epoch Step: 765 / 819 Loss: 23.802494049072266 Tokens per Sec: 26447.560943076853
Epoch Step: 770 / 819 Loss: 17.1675968170166 Tokens per Sec: 25688.430007326377
Epoch Step: 775 / 819 Loss: 15.92052936553955 Tokens per Sec: 26703.77495205073
Epoch Step: 780 / 819 Loss: 16.26179313659668 Tokens per Sec: 25881.298422442727
Epoch Step: 785 / 819 Loss: 21.41389274597168 Tokens per Sec: 24814.470625896585
Epoch Step: 790 / 819 Loss: 213.31069946289062 Tokens per Sec: 26399.917729335353
Epoch Step: 795 / 819 Loss: 29.811012268066406 Tokens per Sec: 26179.81055832719
Epoch Step: 800 / 819 Loss: 21.492202758789062 Tokens per Sec: 24138.138113821537
Epoch Step: 805 / 819 Loss: 27.091794967651367 Tokens per Sec: 21061.19408627887
Epoch Step: 810 / 819 Loss: 24.288936614990234 Tokens per Sec: 22949.659477751153
Epoch Step: 815 / 819 Loss: 17.248565673828125 Tokens per Sec: 22670.666464224363
Epoch ended with duration 0:02:31.837594
Train perplexity: 1.728106476650166
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.366056
Validation perplexity: 2.047613330821763
Epoch 19 / 1000
Epoch Step: 5 / 819 Loss: 21.65230369567871 Tokens per Sec: 27147.77918700241
Epoch Step: 10 / 819 Loss: 23.840152740478516 Tokens per Sec: 24498.844194209647
Epoch Step: 15 / 819 Loss: 25.678831100463867 Tokens per Sec: 26351.162090766175
Epoch Step: 20 / 819 Loss: 24.082096099853516 Tokens per Sec: 24386.9794271754
Epoch Step: 25 / 819 Loss: 26.234220504760742 Tokens per Sec: 23116.833574557353
Epoch Step: 30 / 819 Loss: 124.04570007324219 Tokens per Sec: 27606.218390714726
Epoch Step: 35 / 819 Loss: 13.415387153625488 Tokens per Sec: 28390.90312733936
Epoch Step: 40 / 819 Loss: 19.576637268066406 Tokens per Sec: 25768.18227770793
Epoch Step: 45 / 819 Loss: 185.01251220703125 Tokens per Sec: 27385.047490834848
Epoch Step: 50 / 819 Loss: 25.134416580200195 Tokens per Sec: 25320.33125331181
Epoch Step: 55 / 819 Loss: 21.686763763427734 Tokens per Sec: 24406.75456999087
Epoch Step: 60 / 819 Loss: 16.716320037841797 Tokens per Sec: 25193.220311769237
Epoch Step: 65 / 819 Loss: 24.24466896057129 Tokens per Sec: 24107.207427762198
Epoch Step: 70 / 819 Loss: 22.386444091796875 Tokens per Sec: 27098.623224504587
Epoch Step: 75 / 819 Loss: 13.728292465209961 Tokens per Sec: 28467.19025574785
Epoch Step: 80 / 819 Loss: 21.073104858398438 Tokens per Sec: 24350.77019551852
Epoch Step: 85 / 819 Loss: 18.107362747192383 Tokens per Sec: 26457.996806270454
Epoch Step: 90 / 819 Loss: 18.568307876586914 Tokens per Sec: 27067.642109449036
Epoch Step: 95 / 819 Loss: 15.758084297180176 Tokens per Sec: 27524.424281843225
Epoch Step: 100 / 819 Loss: 290.902587890625 Tokens per Sec: 24202.730405616563
Epoch Step: 105 / 819 Loss: 22.73093605041504 Tokens per Sec: 24678.17016532975
Epoch Step: 110 / 819 Loss: 20.550973892211914 Tokens per Sec: 27128.57953970118
Epoch Step: 115 / 819 Loss: 18.530139923095703 Tokens per Sec: 25509.403456699252
Epoch Step: 120 / 819 Loss: 26.200651168823242 Tokens per Sec: 26408.477017811532
Epoch Step: 125 / 819 Loss: 17.769105911254883 Tokens per Sec: 28401.55506660119
Epoch Step: 130 / 819 Loss: 21.72916030883789 Tokens per Sec: 23916.194670049972
Epoch Step: 135 / 819 Loss: 18.622661590576172 Tokens per Sec: 26923.948250789374
Epoch Step: 140 / 819 Loss: 13.512903213500977 Tokens per Sec: 26690.0224485331
Epoch Step: 145 / 819 Loss: 19.36783790588379 Tokens per Sec: 26392.53346193607
Epoch Step: 150 / 819 Loss: 23.19545555114746 Tokens per Sec: 24091.29262126775
Epoch Step: 155 / 819 Loss: 17.935468673706055 Tokens per Sec: 26436.122535362207
Epoch Step: 160 / 819 Loss: 20.852827072143555 Tokens per Sec: 26090.651993182513
Epoch Step: 165 / 819 Loss: 21.01900863647461 Tokens per Sec: 24896.859401804264
Epoch Step: 170 / 819 Loss: 21.029714584350586 Tokens per Sec: 24505.688445174546
Epoch Step: 175 / 819 Loss: 21.713233947753906 Tokens per Sec: 27312.455762007787
Epoch Step: 180 / 819 Loss: 14.008618354797363 Tokens per Sec: 27428.372563952
Epoch Step: 185 / 819 Loss: 19.364660263061523 Tokens per Sec: 25481.69889648443
Epoch Step: 190 / 819 Loss: 16.97506332397461 Tokens per Sec: 24289.969386315308
Epoch Step: 195 / 819 Loss: 19.676725387573242 Tokens per Sec: 24750.023603461843
Epoch Step: 200 / 819 Loss: 22.556482315063477 Tokens per Sec: 26612.568268177023
Epoch Step: 205 / 819 Loss: 18.443246841430664 Tokens per Sec: 27832.690262487955
Epoch Step: 210 / 819 Loss: 16.23914337158203 Tokens per Sec: 26093.77474869549
Epoch Step: 215 / 819 Loss: 22.58072280883789 Tokens per Sec: 23013.272248014728
Epoch Step: 220 / 819 Loss: 26.891618728637695 Tokens per Sec: 24522.387226676638
Epoch Step: 225 / 819 Loss: 17.62390899658203 Tokens per Sec: 26996.92481609514
Epoch Step: 230 / 819 Loss: 27.749874114990234 Tokens per Sec: 26615.736760451524
Epoch Step: 235 / 819 Loss: 20.48824691772461 Tokens per Sec: 27035.11475763814
Epoch Step: 240 / 819 Loss: 16.816146850585938 Tokens per Sec: 24618.382611401197
Epoch Step: 245 / 819 Loss: 26.40414810180664 Tokens per Sec: 25244.019490478313
Epoch Step: 250 / 819 Loss: 22.923959732055664 Tokens per Sec: 27189.49185527043
Epoch Step: 255 / 819 Loss: 18.542827606201172 Tokens per Sec: 27863.99987850594
Epoch Step: 260 / 819 Loss: 16.998302459716797 Tokens per Sec: 25819.905354050657
Epoch Step: 265 / 819 Loss: 186.68701171875 Tokens per Sec: 26235.93952855261
Epoch Step: 270 / 819 Loss: 20.271085739135742 Tokens per Sec: 24548.460334487783
Epoch Step: 275 / 819 Loss: 234.7808837890625 Tokens per Sec: 26307.046519901458
Epoch Step: 280 / 819 Loss: 211.97018432617188 Tokens per Sec: 25336.510110299154
Epoch Step: 285 / 819 Loss: 18.093219757080078 Tokens per Sec: 26355.795280083694
Epoch Step: 290 / 819 Loss: 279.4786376953125 Tokens per Sec: 23854.659527988806
Epoch Step: 295 / 819 Loss: 16.8638973236084 Tokens per Sec: 23865.647150549008
Epoch Step: 300 / 819 Loss: 22.42365837097168 Tokens per Sec: 24566.981488068017
Epoch Step: 305 / 819 Loss: 20.228219985961914 Tokens per Sec: 25347.61864569426
Epoch Step: 310 / 819 Loss: 227.82427978515625 Tokens per Sec: 25993.10328722767
Epoch Step: 315 / 819 Loss: 20.26722526550293 Tokens per Sec: 26562.824073882577
Epoch Step: 320 / 819 Loss: 159.1945037841797 Tokens per Sec: 27179.33912966187
Epoch Step: 325 / 819 Loss: 201.43540954589844 Tokens per Sec: 25439.75732079143
Epoch Step: 330 / 819 Loss: 22.277265548706055 Tokens per Sec: 24321.158433298748
Epoch Step: 335 / 819 Loss: 26.55672264099121 Tokens per Sec: 24030.74438927869
Epoch Step: 340 / 819 Loss: 154.88198852539062 Tokens per Sec: 23874.97381659629
Epoch Step: 345 / 819 Loss: 19.36208724975586 Tokens per Sec: 26575.367505453738
Epoch Step: 350 / 819 Loss: 191.30227661132812 Tokens per Sec: 24946.101009362108
Epoch Step: 355 / 819 Loss: 22.78948974609375 Tokens per Sec: 25956.314702552558
Epoch Step: 360 / 819 Loss: 16.529138565063477 Tokens per Sec: 26146.471399711587
Epoch Step: 365 / 819 Loss: 25.330171585083008 Tokens per Sec: 23305.23499638131
Epoch Step: 370 / 819 Loss: 26.700916290283203 Tokens per Sec: 27980.98241370974
Epoch Step: 375 / 819 Loss: 20.94497299194336 Tokens per Sec: 24410.527081385535
Epoch Step: 380 / 819 Loss: 13.250056266784668 Tokens per Sec: 26194.038634580113
Epoch Step: 385 / 819 Loss: 24.930667877197266 Tokens per Sec: 27104.94534320233
Epoch Step: 390 / 819 Loss: 14.414953231811523 Tokens per Sec: 24467.316910381352
Epoch Step: 395 / 819 Loss: 232.85179138183594 Tokens per Sec: 25140.1114321442
Epoch Step: 400 / 819 Loss: 21.779905319213867 Tokens per Sec: 25442.840522909602
Epoch Step: 405 / 819 Loss: 24.0961971282959 Tokens per Sec: 26869.39528246693
Epoch Step: 410 / 819 Loss: 16.14492416381836 Tokens per Sec: 26747.458067415333
Epoch Step: 415 / 819 Loss: 19.813621520996094 Tokens per Sec: 23094.31736721574
Epoch Step: 420 / 819 Loss: 20.15252685546875 Tokens per Sec: 25249.678866542596
Epoch Step: 425 / 819 Loss: 16.801292419433594 Tokens per Sec: 26371.35778789787
Epoch Step: 430 / 819 Loss: 27.636394500732422 Tokens per Sec: 25429.847457279782
Epoch Step: 435 / 819 Loss: 19.36995506286621 Tokens per Sec: 26211.254702409144
Epoch Step: 440 / 819 Loss: 22.395658493041992 Tokens per Sec: 27204.083510563698
Epoch Step: 445 / 819 Loss: 21.295351028442383 Tokens per Sec: 24353.58556780056
Epoch Step: 450 / 819 Loss: 185.10317993164062 Tokens per Sec: 25994.87755639409
Epoch Step: 455 / 819 Loss: 16.24446678161621 Tokens per Sec: 24616.807630654
Epoch Step: 460 / 819 Loss: 20.720809936523438 Tokens per Sec: 27876.781179969897
Epoch Step: 465 / 819 Loss: 23.801992416381836 Tokens per Sec: 26375.78866436047
Epoch Step: 470 / 819 Loss: 20.83428382873535 Tokens per Sec: 25546.474578389432
Epoch Step: 475 / 819 Loss: 20.91267967224121 Tokens per Sec: 26713.51931603257
Epoch Step: 480 / 819 Loss: 18.702713012695312 Tokens per Sec: 26324.57352483791
Epoch Step: 485 / 819 Loss: 16.115365982055664 Tokens per Sec: 25664.609843980088
Epoch Step: 490 / 819 Loss: 17.972429275512695 Tokens per Sec: 24950.844785569723
Epoch Step: 495 / 819 Loss: 17.531898498535156 Tokens per Sec: 25653.35938858928
Epoch Step: 500 / 819 Loss: 19.840892791748047 Tokens per Sec: 27229.06186998274
Epoch Step: 505 / 819 Loss: 17.597864151000977 Tokens per Sec: 25158.57994962994
Epoch Step: 510 / 819 Loss: 14.729268074035645 Tokens per Sec: 25169.898314572634
Epoch Step: 515 / 819 Loss: 15.839202880859375 Tokens per Sec: 25687.537357774178
Epoch Step: 520 / 819 Loss: 21.503013610839844 Tokens per Sec: 25879.861830752958
Epoch Step: 525 / 819 Loss: 227.04527282714844 Tokens per Sec: 25601.436732449645
Epoch Step: 530 / 819 Loss: 23.256540298461914 Tokens per Sec: 25925.675818514104
Epoch Step: 535 / 819 Loss: 29.013996124267578 Tokens per Sec: 25784.39279074999
Epoch Step: 540 / 819 Loss: 18.970321655273438 Tokens per Sec: 25744.055938304595
Epoch Step: 545 / 819 Loss: 24.24235725402832 Tokens per Sec: 23054.691354202267
Epoch Step: 550 / 819 Loss: 21.933088302612305 Tokens per Sec: 25798.154522061468
Epoch Step: 555 / 819 Loss: 27.237590789794922 Tokens per Sec: 25404.188464472216
Epoch Step: 560 / 819 Loss: 19.98969078063965 Tokens per Sec: 25728.778212837016
Epoch Step: 565 / 819 Loss: 23.84677505493164 Tokens per Sec: 25871.401569518985
Epoch Step: 570 / 819 Loss: 14.710724830627441 Tokens per Sec: 26271.85259127091
Epoch Step: 575 / 819 Loss: 23.30156135559082 Tokens per Sec: 27498.160352989365
Epoch Step: 580 / 819 Loss: 15.667729377746582 Tokens per Sec: 24773.03296724386
Epoch Step: 585 / 819 Loss: 17.476411819458008 Tokens per Sec: 27014.734039905026
Epoch Step: 590 / 819 Loss: 15.316356658935547 Tokens per Sec: 28006.158452036376
Epoch Step: 595 / 819 Loss: 19.235788345336914 Tokens per Sec: 27305.474406776284
Epoch Step: 600 / 819 Loss: 19.862401962280273 Tokens per Sec: 26351.585352744394
Epoch Step: 605 / 819 Loss: 17.8978328704834 Tokens per Sec: 27224.243436823905
Epoch Step: 610 / 819 Loss: 18.862735748291016 Tokens per Sec: 27774.470011725138
Epoch Step: 615 / 819 Loss: 23.918746948242188 Tokens per Sec: 23416.811219177172
Epoch Step: 620 / 819 Loss: 18.627605438232422 Tokens per Sec: 25309.77372152258
Epoch Step: 625 / 819 Loss: 20.43886947631836 Tokens per Sec: 26060.35781598425
Epoch Step: 630 / 819 Loss: 19.847095489501953 Tokens per Sec: 25133.31777198713
Epoch Step: 635 / 819 Loss: 16.67070198059082 Tokens per Sec: 25546.43406311871
Epoch Step: 640 / 819 Loss: 17.553590774536133 Tokens per Sec: 25525.03379396108
Epoch Step: 645 / 819 Loss: 134.48793029785156 Tokens per Sec: 26953.866637250492
Epoch Step: 650 / 819 Loss: 19.46271324157715 Tokens per Sec: 24672.646714409755
Epoch Step: 655 / 819 Loss: 249.0125274658203 Tokens per Sec: 25961.46954382239
Epoch Step: 660 / 819 Loss: 22.394935607910156 Tokens per Sec: 26161.22820958401
Epoch Step: 665 / 819 Loss: 17.069992065429688 Tokens per Sec: 25856.097238778017
Epoch Step: 670 / 819 Loss: 17.952085494995117 Tokens per Sec: 27508.467488397728
Epoch Step: 675 / 819 Loss: 19.90383529663086 Tokens per Sec: 24776.258144658645
Epoch Step: 680 / 819 Loss: 21.079975128173828 Tokens per Sec: 26036.710395563212
Epoch Step: 685 / 819 Loss: 185.7991485595703 Tokens per Sec: 24842.15837388705
Epoch Step: 690 / 819 Loss: 13.411352157592773 Tokens per Sec: 24464.49219368729
Epoch Step: 695 / 819 Loss: 12.915045738220215 Tokens per Sec: 27650.8643940656
Epoch Step: 700 / 819 Loss: 237.18170166015625 Tokens per Sec: 25989.255222015036
Epoch Step: 705 / 819 Loss: 21.502155303955078 Tokens per Sec: 24147.809393171665
Epoch Step: 710 / 819 Loss: 20.131635665893555 Tokens per Sec: 23775.872679733326
Epoch Step: 715 / 819 Loss: 19.86155128479004 Tokens per Sec: 26761.121972362518
Epoch Step: 720 / 819 Loss: 21.34368896484375 Tokens per Sec: 23847.664498261518
Epoch Step: 725 / 819 Loss: 20.1661376953125 Tokens per Sec: 26155.941165447104
Epoch Step: 730 / 819 Loss: 16.06015968322754 Tokens per Sec: 28853.875850737248
Epoch Step: 735 / 819 Loss: 18.277149200439453 Tokens per Sec: 26452.608335749774
Epoch Step: 740 / 819 Loss: 26.851369857788086 Tokens per Sec: 26117.2552757349
Epoch Step: 745 / 819 Loss: 24.085453033447266 Tokens per Sec: 26215.65126866997
Epoch Step: 750 / 819 Loss: 18.812950134277344 Tokens per Sec: 26833.341771719824
Epoch Step: 755 / 819 Loss: 16.398849487304688 Tokens per Sec: 26171.890542793037
Epoch Step: 760 / 819 Loss: 21.35251235961914 Tokens per Sec: 23252.9285783499
Epoch Step: 765 / 819 Loss: 16.439138412475586 Tokens per Sec: 27114.563234317895
Epoch Step: 770 / 819 Loss: 202.85525512695312 Tokens per Sec: 25253.4908045581
Epoch Step: 775 / 819 Loss: 13.065020561218262 Tokens per Sec: 27191.397457889154
Epoch Step: 780 / 819 Loss: 13.704106330871582 Tokens per Sec: 25995.363261675753
Epoch Step: 785 / 819 Loss: 14.397146224975586 Tokens per Sec: 23911.786413783204
Epoch Step: 790 / 819 Loss: 147.0502471923828 Tokens per Sec: 24051.1441843927
Epoch Step: 795 / 819 Loss: 129.03041076660156 Tokens per Sec: 26503.835026755853
Epoch Step: 800 / 819 Loss: 21.95176887512207 Tokens per Sec: 23601.664239722
Epoch Step: 805 / 819 Loss: 18.52164077758789 Tokens per Sec: 24277.572558352156
Epoch Step: 810 / 819 Loss: 21.94091796875 Tokens per Sec: 20704.107208075337
Epoch Step: 815 / 819 Loss: 25.294387817382812 Tokens per Sec: 23712.850299044843
Epoch ended with duration 0:02:31.224117
Train perplexity: 1.6325636840798146
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.296778
Validation perplexity: 1.6765034435393007
Epoch 20 / 1000
Epoch Step: 5 / 819 Loss: 202.39454650878906 Tokens per Sec: 23582.113319395798
Epoch Step: 10 / 819 Loss: 22.934982299804688 Tokens per Sec: 23778.709676286922
Epoch Step: 15 / 819 Loss: 16.454076766967773 Tokens per Sec: 25302.461968524578
Epoch Step: 20 / 819 Loss: 21.6149845123291 Tokens per Sec: 26472.683864918985
Epoch Step: 25 / 819 Loss: 189.51283264160156 Tokens per Sec: 25132.8229616087
Epoch Step: 30 / 819 Loss: 213.35104370117188 Tokens per Sec: 25360.84667600815
Epoch Step: 35 / 819 Loss: 22.695798873901367 Tokens per Sec: 24929.069867872317
Epoch Step: 40 / 819 Loss: 36.34067153930664 Tokens per Sec: 26492.712026131823
Epoch Step: 45 / 819 Loss: 26.651226043701172 Tokens per Sec: 24189.976924387585
Epoch Step: 50 / 819 Loss: 19.606046676635742 Tokens per Sec: 26160.730346261924
Epoch Step: 55 / 819 Loss: 115.08328247070312 Tokens per Sec: 26962.861308971456
Epoch Step: 60 / 819 Loss: 17.4295654296875 Tokens per Sec: 27510.048853712713
Epoch Step: 65 / 819 Loss: 21.69002914428711 Tokens per Sec: 25529.314129771137
Epoch Step: 70 / 819 Loss: 26.43418312072754 Tokens per Sec: 26783.177070057376
Epoch Step: 75 / 819 Loss: 22.600341796875 Tokens per Sec: 25417.914709811732
Epoch Step: 80 / 819 Loss: 24.501007080078125 Tokens per Sec: 25284.392939941634
Epoch Step: 85 / 819 Loss: 14.994335174560547 Tokens per Sec: 25264.196308648992
Epoch Step: 90 / 819 Loss: 20.13103675842285 Tokens per Sec: 27061.177698985543
Epoch Step: 95 / 819 Loss: 22.02045249938965 Tokens per Sec: 28193.04753256086
Epoch Step: 100 / 819 Loss: 17.996150970458984 Tokens per Sec: 24709.135831020736
Epoch Step: 105 / 819 Loss: 21.022579193115234 Tokens per Sec: 25921.05628415692
Epoch Step: 110 / 819 Loss: 18.94757652282715 Tokens per Sec: 27240.273461873105
Epoch Step: 115 / 819 Loss: 17.296483993530273 Tokens per Sec: 26912.340590497242
Epoch Step: 120 / 819 Loss: 16.382558822631836 Tokens per Sec: 26468.742676838858
Epoch Step: 125 / 819 Loss: 221.26702880859375 Tokens per Sec: 24371.807368167345
Epoch Step: 130 / 819 Loss: 21.37128257751465 Tokens per Sec: 26231.746428784234
Epoch Step: 135 / 819 Loss: 20.782804489135742 Tokens per Sec: 26360.068462290943
Epoch Step: 140 / 819 Loss: 14.012921333312988 Tokens per Sec: 25464.47939450201
Epoch Step: 145 / 819 Loss: 22.703962326049805 Tokens per Sec: 25277.112810741208
Epoch Step: 150 / 819 Loss: 19.10631561279297 Tokens per Sec: 26337.730704926318
Epoch Step: 155 / 819 Loss: 26.944393157958984 Tokens per Sec: 25318.170255305788
Epoch Step: 160 / 819 Loss: 22.44279670715332 Tokens per Sec: 24249.75001135065
Epoch Step: 165 / 819 Loss: 26.994747161865234 Tokens per Sec: 25521.91198167388
Epoch Step: 170 / 819 Loss: 23.03825569152832 Tokens per Sec: 25171.106401149842
Epoch Step: 175 / 819 Loss: 267.060302734375 Tokens per Sec: 26798.95066458831
Epoch Step: 180 / 819 Loss: 14.279208183288574 Tokens per Sec: 25865.276977555095
Epoch Step: 185 / 819 Loss: 21.6967716217041 Tokens per Sec: 27663.296134878165
Epoch Step: 190 / 819 Loss: 15.047765731811523 Tokens per Sec: 23353.207467834054
Epoch Step: 195 / 819 Loss: 17.65621566772461 Tokens per Sec: 27187.25974027464
Epoch Step: 200 / 819 Loss: 25.80055809020996 Tokens per Sec: 23224.117569554553
Epoch Step: 205 / 819 Loss: 23.62656593322754 Tokens per Sec: 24529.690363074107
Epoch Step: 210 / 819 Loss: 23.832162857055664 Tokens per Sec: 24349.88280845466
Epoch Step: 215 / 819 Loss: 19.37836456298828 Tokens per Sec: 26285.461519261127
Epoch Step: 220 / 819 Loss: 18.35922622680664 Tokens per Sec: 27472.32328988102
Epoch Step: 225 / 819 Loss: 17.70085334777832 Tokens per Sec: 28418.575138652035
Epoch Step: 230 / 819 Loss: 20.054798126220703 Tokens per Sec: 25214.164553536637
Epoch Step: 235 / 819 Loss: 200.9707794189453 Tokens per Sec: 24701.28196226108
Epoch Step: 240 / 819 Loss: 19.353837966918945 Tokens per Sec: 25715.990129565558
Epoch Step: 245 / 819 Loss: 179.58982849121094 Tokens per Sec: 25156.127543659204
Epoch Step: 250 / 819 Loss: 16.810380935668945 Tokens per Sec: 25600.962926593824
Epoch Step: 255 / 819 Loss: 17.631633758544922 Tokens per Sec: 26799.970763318433
Epoch Step: 260 / 819 Loss: 18.78662872314453 Tokens per Sec: 26123.560375949713
Epoch Step: 265 / 819 Loss: 20.61460304260254 Tokens per Sec: 24291.75690725441
Epoch Step: 270 / 819 Loss: 20.449026107788086 Tokens per Sec: 25793.217070382347
Epoch Step: 275 / 819 Loss: 22.29376220703125 Tokens per Sec: 28913.800630967904
Epoch Step: 280 / 819 Loss: 22.67068099975586 Tokens per Sec: 25870.87635039938
Epoch Step: 285 / 819 Loss: 24.166807174682617 Tokens per Sec: 25062.23171235747
Epoch Step: 290 / 819 Loss: 16.63226318359375 Tokens per Sec: 24480.37964847308
Epoch Step: 295 / 819 Loss: 22.991518020629883 Tokens per Sec: 23418.0390498074
Epoch Step: 300 / 819 Loss: 17.634010314941406 Tokens per Sec: 25544.073799590733
Epoch Step: 305 / 819 Loss: 18.499792098999023 Tokens per Sec: 27540.473441693055
Epoch Step: 310 / 819 Loss: 18.795604705810547 Tokens per Sec: 25166.71810389912
Epoch Step: 315 / 819 Loss: 24.303028106689453 Tokens per Sec: 23909.744799940425
Epoch Step: 320 / 819 Loss: 21.486595153808594 Tokens per Sec: 25671.80284682178
Epoch Step: 325 / 819 Loss: 18.247360229492188 Tokens per Sec: 26598.107381017227
Epoch Step: 330 / 819 Loss: 18.063079833984375 Tokens per Sec: 27039.980374757663
Epoch Step: 335 / 819 Loss: 196.73837280273438 Tokens per Sec: 24102.954183700076
Epoch Step: 340 / 819 Loss: 22.488679885864258 Tokens per Sec: 24895.36692857391
Epoch Step: 345 / 819 Loss: 17.290124893188477 Tokens per Sec: 25886.764319589074
Epoch Step: 350 / 819 Loss: 222.71559143066406 Tokens per Sec: 26524.31826044251
Epoch Step: 355 / 819 Loss: 203.04415893554688 Tokens per Sec: 25721.539164917776
Epoch Step: 360 / 819 Loss: 15.962236404418945 Tokens per Sec: 26942.72850419143
Epoch Step: 365 / 819 Loss: 14.692716598510742 Tokens per Sec: 24018.191785911193
Epoch Step: 370 / 819 Loss: 14.887548446655273 Tokens per Sec: 27537.314986445803
Epoch Step: 375 / 819 Loss: 21.835350036621094 Tokens per Sec: 25067.80811218233
Epoch Step: 380 / 819 Loss: 20.37152099609375 Tokens per Sec: 25805.760714724765
Epoch Step: 385 / 819 Loss: 19.242319107055664 Tokens per Sec: 26268.013718639962
Epoch Step: 390 / 819 Loss: 131.7747802734375 Tokens per Sec: 26641.635128013277
Epoch Step: 395 / 819 Loss: 241.36880493164062 Tokens per Sec: 26558.677614217788
Epoch Step: 400 / 819 Loss: 17.135944366455078 Tokens per Sec: 25970.581718612124
Epoch Step: 405 / 819 Loss: 22.618791580200195 Tokens per Sec: 23780.83162992821
Epoch Step: 410 / 819 Loss: 23.147220611572266 Tokens per Sec: 27283.490636903414
Epoch Step: 415 / 819 Loss: 16.065845489501953 Tokens per Sec: 25735.053417695315
Epoch Step: 420 / 819 Loss: 18.75567626953125 Tokens per Sec: 25131.369413484586
Epoch Step: 425 / 819 Loss: 25.95932388305664 Tokens per Sec: 26229.56448410053
Epoch Step: 430 / 819 Loss: 20.94796371459961 Tokens per Sec: 25457.505965245287
Epoch Step: 435 / 819 Loss: 16.53069496154785 Tokens per Sec: 26470.874210128102
Epoch Step: 440 / 819 Loss: 21.373844146728516 Tokens per Sec: 25525.191056603966
Epoch Step: 445 / 819 Loss: 22.356201171875 Tokens per Sec: 24468.964080806134
Epoch Step: 450 / 819 Loss: 14.695104598999023 Tokens per Sec: 25335.247904996217
Epoch Step: 455 / 819 Loss: 19.71476936340332 Tokens per Sec: 27247.62369357951
Epoch Step: 460 / 819 Loss: 17.311725616455078 Tokens per Sec: 28924.799889714443
Epoch Step: 465 / 819 Loss: 19.41743278503418 Tokens per Sec: 25470.92202962074
Epoch Step: 470 / 819 Loss: 296.0357666015625 Tokens per Sec: 25472.211378176857
Epoch Step: 475 / 819 Loss: 18.452882766723633 Tokens per Sec: 26630.59778166842
Epoch Step: 480 / 819 Loss: 25.360536575317383 Tokens per Sec: 26530.118552591965
Epoch Step: 485 / 819 Loss: 23.763206481933594 Tokens per Sec: 25283.026115220302
Epoch Step: 490 / 819 Loss: 24.92266273498535 Tokens per Sec: 28047.838465061242
Epoch Step: 495 / 819 Loss: 15.825705528259277 Tokens per Sec: 22292.32723242909
Epoch Step: 500 / 819 Loss: 23.61865997314453 Tokens per Sec: 26570.01102177564
Epoch Step: 505 / 819 Loss: 15.535506248474121 Tokens per Sec: 25560.14564226679
Epoch Step: 510 / 819 Loss: 20.12144660949707 Tokens per Sec: 26461.23533895758
Epoch Step: 515 / 819 Loss: 24.683456420898438 Tokens per Sec: 27013.867206315466
Epoch Step: 520 / 819 Loss: 19.428701400756836 Tokens per Sec: 25785.68216370527
Epoch Step: 525 / 819 Loss: 225.71461486816406 Tokens per Sec: 26202.722193339403
Epoch Step: 530 / 819 Loss: 19.20846939086914 Tokens per Sec: 24583.309106330318
Epoch Step: 535 / 819 Loss: 21.231460571289062 Tokens per Sec: 24205.435940672338
Epoch Step: 540 / 819 Loss: 21.598373413085938 Tokens per Sec: 25044.161316786212
Epoch Step: 545 / 819 Loss: 20.815818786621094 Tokens per Sec: 22607.474342955866
Epoch Step: 550 / 819 Loss: 18.168498992919922 Tokens per Sec: 25144.848434349642
Epoch Step: 555 / 819 Loss: 22.021142959594727 Tokens per Sec: 26369.243440418984
Epoch Step: 560 / 819 Loss: 16.42523956298828 Tokens per Sec: 26687.411903698794
Epoch Step: 565 / 819 Loss: 19.787071228027344 Tokens per Sec: 25386.098823612596
Epoch Step: 570 / 819 Loss: 27.462848663330078 Tokens per Sec: 27077.974492215104
Epoch Step: 575 / 819 Loss: 18.132293701171875 Tokens per Sec: 25170.36486728674
Epoch Step: 580 / 819 Loss: 17.755903244018555 Tokens per Sec: 26000.73297664304
Epoch Step: 585 / 819 Loss: 14.757963180541992 Tokens per Sec: 27359.19330046057
Epoch Step: 590 / 819 Loss: 21.128942489624023 Tokens per Sec: 26145.627402155857
Epoch Step: 595 / 819 Loss: 18.21784210205078 Tokens per Sec: 26102.884605078452
Epoch Step: 600 / 819 Loss: 19.650421142578125 Tokens per Sec: 25459.829804278248
Epoch Step: 605 / 819 Loss: 25.410236358642578 Tokens per Sec: 24752.311792756034
Epoch Step: 610 / 819 Loss: 15.177237510681152 Tokens per Sec: 23637.71923685972
Epoch Step: 615 / 819 Loss: 23.766277313232422 Tokens per Sec: 27335.36680299662
Epoch Step: 620 / 819 Loss: 17.19654655456543 Tokens per Sec: 25683.545531064312
Epoch Step: 625 / 819 Loss: 15.855561256408691 Tokens per Sec: 25592.46657182849
Epoch Step: 630 / 819 Loss: 14.877223014831543 Tokens per Sec: 27393.241334934995
Epoch Step: 635 / 819 Loss: 17.019163131713867 Tokens per Sec: 24146.755580453926
Epoch Step: 640 / 819 Loss: 24.960399627685547 Tokens per Sec: 26391.64630669201
Epoch Step: 645 / 819 Loss: 25.95363426208496 Tokens per Sec: 27250.151451596794
Epoch Step: 650 / 819 Loss: 243.13223266601562 Tokens per Sec: 25334.877206162015
Epoch Step: 655 / 819 Loss: 15.307587623596191 Tokens per Sec: 25283.817378560456
Epoch Step: 660 / 819 Loss: 21.826961517333984 Tokens per Sec: 24954.940865045657
Epoch Step: 665 / 819 Loss: 19.863323211669922 Tokens per Sec: 24703.13087712828
Epoch Step: 670 / 819 Loss: 13.41820240020752 Tokens per Sec: 23867.97642124769
Epoch Step: 675 / 819 Loss: 18.933103561401367 Tokens per Sec: 24036.838171974283
Epoch Step: 680 / 819 Loss: 21.664997100830078 Tokens per Sec: 27319.23909648039
Epoch Step: 685 / 819 Loss: 16.954172134399414 Tokens per Sec: 26754.197354338798
Epoch Step: 690 / 819 Loss: 18.331584930419922 Tokens per Sec: 25378.761127896752
Epoch Step: 695 / 819 Loss: 18.193614959716797 Tokens per Sec: 27243.17232671229
Epoch Step: 700 / 819 Loss: 17.29397964477539 Tokens per Sec: 25642.871073691716
Epoch Step: 705 / 819 Loss: 20.157655715942383 Tokens per Sec: 25916.22977406146
Epoch Step: 710 / 819 Loss: 19.9965763092041 Tokens per Sec: 26717.36565251157
Epoch Step: 715 / 819 Loss: 19.61904525756836 Tokens per Sec: 27194.640563010693
Epoch Step: 720 / 819 Loss: 237.22930908203125 Tokens per Sec: 26028.80399077491
Epoch Step: 725 / 819 Loss: 19.373193740844727 Tokens per Sec: 25615.686980968563
Epoch Step: 730 / 819 Loss: 22.525455474853516 Tokens per Sec: 24583.163122756123
Epoch Step: 735 / 819 Loss: 20.8614444732666 Tokens per Sec: 26239.990923481386
Epoch Step: 740 / 819 Loss: 14.841073989868164 Tokens per Sec: 26932.481330282593
Epoch Step: 745 / 819 Loss: 14.552879333496094 Tokens per Sec: 23018.46694541141
Epoch Step: 750 / 819 Loss: 19.6749210357666 Tokens per Sec: 27728.878401069887
Epoch Step: 755 / 819 Loss: 17.791353225708008 Tokens per Sec: 25351.46458445557
Epoch Step: 760 / 819 Loss: 19.034109115600586 Tokens per Sec: 24922.716140759316
Epoch Step: 765 / 819 Loss: 18.396595001220703 Tokens per Sec: 26041.994746509194
Epoch Step: 770 / 819 Loss: 147.2764892578125 Tokens per Sec: 25623.455683600885
Epoch Step: 775 / 819 Loss: 17.974533081054688 Tokens per Sec: 25145.915730965327
Epoch Step: 780 / 819 Loss: 15.838780403137207 Tokens per Sec: 26854.49597700033
Epoch Step: 785 / 819 Loss: 19.84975242614746 Tokens per Sec: 24599.455910888624
Epoch Step: 790 / 819 Loss: 16.796096801757812 Tokens per Sec: 24229.39660239613
Epoch Step: 795 / 819 Loss: 14.69207763671875 Tokens per Sec: 24699.627714548613
Epoch Step: 800 / 819 Loss: 20.76258087158203 Tokens per Sec: 25568.16304158063
Epoch Step: 805 / 819 Loss: 20.889081954956055 Tokens per Sec: 24987.332308916288
Epoch Step: 810 / 819 Loss: 228.97640991210938 Tokens per Sec: 20393.00962040005
Epoch Step: 815 / 819 Loss: 20.1499080657959 Tokens per Sec: 23925.398662063642
Epoch ended with duration 0:02:31.495872
Train perplexity: 1.6467910588584498
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.340968
Validation perplexity: 1.610340043605342
Model saved checkpoint!
Epoch 21 / 1000
Epoch Step: 5 / 819 Loss: 18.25143051147461 Tokens per Sec: 23365.706905994488
Epoch Step: 10 / 819 Loss: 23.63857650756836 Tokens per Sec: 24983.254315840182
Epoch Step: 15 / 819 Loss: 21.550874710083008 Tokens per Sec: 23720.67299967997
Epoch Step: 20 / 819 Loss: 21.88991928100586 Tokens per Sec: 25578.351133589917
Epoch Step: 25 / 819 Loss: 17.630197525024414 Tokens per Sec: 27087.849864967502
Epoch Step: 30 / 819 Loss: 21.057361602783203 Tokens per Sec: 25918.15169130736
Epoch Step: 35 / 819 Loss: 14.68452262878418 Tokens per Sec: 26429.457099465726
Epoch Step: 40 / 819 Loss: 24.12114906311035 Tokens per Sec: 25873.515471302733
Epoch Step: 45 / 819 Loss: 18.467525482177734 Tokens per Sec: 24629.26176267224
Epoch Step: 50 / 819 Loss: 20.332809448242188 Tokens per Sec: 24661.859564182112
Epoch Step: 55 / 819 Loss: 18.196096420288086 Tokens per Sec: 26782.067991203192
Epoch Step: 60 / 819 Loss: 263.8847961425781 Tokens per Sec: 24745.381663185624
Epoch Step: 65 / 819 Loss: 21.387008666992188 Tokens per Sec: 27364.23422910554
Epoch Step: 70 / 819 Loss: 17.390798568725586 Tokens per Sec: 24910.602396774124
Epoch Step: 75 / 819 Loss: 26.590648651123047 Tokens per Sec: 26599.402125267115
Epoch Step: 80 / 819 Loss: 20.554296493530273 Tokens per Sec: 24989.279460258498
Epoch Step: 85 / 819 Loss: 15.913734436035156 Tokens per Sec: 27121.54740910882
Epoch Step: 90 / 819 Loss: 17.402936935424805 Tokens per Sec: 25624.82227677787
Epoch Step: 95 / 819 Loss: 205.01510620117188 Tokens per Sec: 25026.40643970756
Epoch Step: 100 / 819 Loss: 16.21221923828125 Tokens per Sec: 26440.49581842245
Epoch Step: 105 / 819 Loss: 241.99044799804688 Tokens per Sec: 26125.83323861908
Epoch Step: 110 / 819 Loss: 18.072341918945312 Tokens per Sec: 26016.3006161185
Epoch Step: 115 / 819 Loss: 17.26278305053711 Tokens per Sec: 27452.17124198874
Epoch Step: 120 / 819 Loss: 22.719799041748047 Tokens per Sec: 25963.475384550176
Epoch Step: 125 / 819 Loss: 20.721939086914062 Tokens per Sec: 25521.321639163176
Epoch Step: 130 / 819 Loss: 22.597270965576172 Tokens per Sec: 24744.528212990997
Epoch Step: 135 / 819 Loss: 24.11193084716797 Tokens per Sec: 23925.20180799132
Epoch Step: 140 / 819 Loss: 21.139760971069336 Tokens per Sec: 25118.8839212353
Epoch Step: 145 / 819 Loss: 24.413673400878906 Tokens per Sec: 25373.524095471294
Epoch Step: 150 / 819 Loss: 16.911056518554688 Tokens per Sec: 24387.607142906712
Epoch Step: 155 / 819 Loss: 20.937454223632812 Tokens per Sec: 25871.833862484105
Epoch Step: 160 / 819 Loss: 24.40749168395996 Tokens per Sec: 25034.312055525057
Epoch Step: 165 / 819 Loss: 21.91045379638672 Tokens per Sec: 26241.71390671388
Epoch Step: 170 / 819 Loss: 23.49280548095703 Tokens per Sec: 24431.2586064993
Epoch Step: 175 / 819 Loss: 25.866355895996094 Tokens per Sec: 26596.243636664716
Epoch Step: 180 / 819 Loss: 14.557388305664062 Tokens per Sec: 27900.892188007623
Epoch Step: 185 / 819 Loss: 17.721538543701172 Tokens per Sec: 26277.95915287141
Epoch Step: 190 / 819 Loss: 18.4489803314209 Tokens per Sec: 25166.453999114758
Epoch Step: 195 / 819 Loss: 21.581920623779297 Tokens per Sec: 26370.016819374232
Epoch Step: 200 / 819 Loss: 18.82930564880371 Tokens per Sec: 26457.64948923528
Epoch Step: 205 / 819 Loss: 15.190324783325195 Tokens per Sec: 27274.669069052583
Epoch Step: 210 / 819 Loss: 24.607088088989258 Tokens per Sec: 25527.805118583416
Epoch Step: 215 / 819 Loss: 22.44733238220215 Tokens per Sec: 23606.207654681068
Epoch Step: 220 / 819 Loss: 18.572437286376953 Tokens per Sec: 26047.233997705007
Epoch Step: 225 / 819 Loss: 21.25466537475586 Tokens per Sec: 25551.863817697544
Epoch Step: 230 / 819 Loss: 20.99928855895996 Tokens per Sec: 26204.977109124386
Epoch Step: 235 / 819 Loss: 111.55741882324219 Tokens per Sec: 25860.02566101691
Epoch Step: 240 / 819 Loss: 19.23922348022461 Tokens per Sec: 26949.66710632021
Epoch Step: 245 / 819 Loss: 27.604049682617188 Tokens per Sec: 27038.23313385355
Epoch Step: 250 / 819 Loss: 29.00233268737793 Tokens per Sec: 26142.572379544945
Epoch Step: 255 / 819 Loss: 16.61210060119629 Tokens per Sec: 26411.587508399505
Epoch Step: 260 / 819 Loss: 22.633407592773438 Tokens per Sec: 27171.383880651116
Epoch Step: 265 / 819 Loss: 20.430448532104492 Tokens per Sec: 24921.512872088744
Epoch Step: 270 / 819 Loss: 16.617290496826172 Tokens per Sec: 26527.467005324084
Epoch Step: 275 / 819 Loss: 15.54188346862793 Tokens per Sec: 24328.718786830315
Epoch Step: 280 / 819 Loss: 12.605009078979492 Tokens per Sec: 26335.52133586341
Epoch Step: 285 / 819 Loss: 20.467960357666016 Tokens per Sec: 24623.178238351582
Epoch Step: 290 / 819 Loss: 14.867114067077637 Tokens per Sec: 24142.796330598085
Epoch Step: 295 / 819 Loss: 20.245756149291992 Tokens per Sec: 26661.930838797354
Epoch Step: 300 / 819 Loss: 18.731159210205078 Tokens per Sec: 26345.947832207934
Epoch Step: 305 / 819 Loss: 18.43415069580078 Tokens per Sec: 24818.706408793576
Epoch Step: 310 / 819 Loss: 198.0482635498047 Tokens per Sec: 25819.243254109337
Epoch Step: 315 / 819 Loss: 17.72304916381836 Tokens per Sec: 27346.088576351696
Epoch Step: 320 / 819 Loss: 18.539743423461914 Tokens per Sec: 24815.284475141438
Epoch Step: 325 / 819 Loss: 18.398677825927734 Tokens per Sec: 23920.694365214466
Epoch Step: 330 / 819 Loss: 17.431110382080078 Tokens per Sec: 25241.488328524352
Epoch Step: 335 / 819 Loss: 17.75916290283203 Tokens per Sec: 25725.316793845304
Epoch Step: 340 / 819 Loss: 23.152284622192383 Tokens per Sec: 27112.401854275824
Epoch Step: 345 / 819 Loss: 16.961181640625 Tokens per Sec: 25845.800110263743
Epoch Step: 350 / 819 Loss: 20.23329734802246 Tokens per Sec: 26026.290632876666
Epoch Step: 355 / 819 Loss: 21.150043487548828 Tokens per Sec: 25771.1693765494
Epoch Step: 360 / 819 Loss: 18.745830535888672 Tokens per Sec: 23607.17612451612
Epoch Step: 365 / 819 Loss: 23.545467376708984 Tokens per Sec: 25665.12909829078
Epoch Step: 370 / 819 Loss: 23.747966766357422 Tokens per Sec: 25380.197555197665
Epoch Step: 375 / 819 Loss: 20.329212188720703 Tokens per Sec: 25514.973065771497
Epoch Step: 380 / 819 Loss: 23.00714111328125 Tokens per Sec: 26154.7410551249
Epoch Step: 385 / 819 Loss: 14.881978034973145 Tokens per Sec: 23196.53949977141
Epoch Step: 390 / 819 Loss: 24.516807556152344 Tokens per Sec: 25411.30658942687
Epoch Step: 395 / 819 Loss: 14.586734771728516 Tokens per Sec: 26864.80198956912
Epoch Step: 400 / 819 Loss: 16.521469116210938 Tokens per Sec: 27128.216641972285
Epoch Step: 405 / 819 Loss: 20.784893035888672 Tokens per Sec: 24914.87286104951
Epoch Step: 410 / 819 Loss: 17.224197387695312 Tokens per Sec: 24474.42837400303
Epoch Step: 415 / 819 Loss: 14.42701244354248 Tokens per Sec: 26681.26005659632
Epoch Step: 420 / 819 Loss: 18.52328109741211 Tokens per Sec: 23755.41854174381
Epoch Step: 425 / 819 Loss: 21.472421646118164 Tokens per Sec: 27622.697382854083
Epoch Step: 430 / 819 Loss: 213.30221557617188 Tokens per Sec: 27558.442061559803
Epoch Step: 435 / 819 Loss: 20.24466896057129 Tokens per Sec: 27398.844014107344
Epoch Step: 440 / 819 Loss: 20.625762939453125 Tokens per Sec: 27853.404967577782
Epoch Step: 445 / 819 Loss: 25.026823043823242 Tokens per Sec: 23887.54370342897
Epoch Step: 450 / 819 Loss: 16.822200775146484 Tokens per Sec: 24879.20623870512
Epoch Step: 455 / 819 Loss: 16.32959747314453 Tokens per Sec: 24047.285453699595
Epoch Step: 460 / 819 Loss: 22.158065795898438 Tokens per Sec: 26513.686118295776
Epoch Step: 465 / 819 Loss: 19.534311294555664 Tokens per Sec: 25829.25031730076
Epoch Step: 470 / 819 Loss: 14.869885444641113 Tokens per Sec: 27155.758968131915
Epoch Step: 475 / 819 Loss: 24.534303665161133 Tokens per Sec: 24835.363841291917
Epoch Step: 480 / 819 Loss: 19.538366317749023 Tokens per Sec: 25810.534408999858
Epoch Step: 485 / 819 Loss: 15.136017799377441 Tokens per Sec: 25231.06895923877
Epoch Step: 490 / 819 Loss: 23.7056827545166 Tokens per Sec: 25430.34522390075
Epoch Step: 495 / 819 Loss: 18.870121002197266 Tokens per Sec: 25443.031237046907
Epoch Step: 500 / 819 Loss: 21.464035034179688 Tokens per Sec: 24555.584155934564
Epoch Step: 505 / 819 Loss: 23.2042179107666 Tokens per Sec: 25187.514600483995
Epoch Step: 510 / 819 Loss: 16.381675720214844 Tokens per Sec: 25357.116321108413
Epoch Step: 515 / 819 Loss: 118.97217559814453 Tokens per Sec: 27566.736486166086
Epoch Step: 520 / 819 Loss: 206.88052368164062 Tokens per Sec: 24855.27455608943
Epoch Step: 525 / 819 Loss: 23.821224212646484 Tokens per Sec: 25449.448591485834
Epoch Step: 530 / 819 Loss: 17.33066749572754 Tokens per Sec: 25504.39422455496
Epoch Step: 535 / 819 Loss: 14.020350456237793 Tokens per Sec: 27116.769858189444
Epoch Step: 540 / 819 Loss: 208.3199005126953 Tokens per Sec: 25389.60374680912
Epoch Step: 545 / 819 Loss: 21.911113739013672 Tokens per Sec: 22983.937017203316
Epoch Step: 550 / 819 Loss: 17.34250259399414 Tokens per Sec: 25234.354404765694
Epoch Step: 555 / 819 Loss: 18.861740112304688 Tokens per Sec: 25611.192257827308
Epoch Step: 560 / 819 Loss: 17.64912223815918 Tokens per Sec: 27284.984005346763
Epoch Step: 565 / 819 Loss: 18.982887268066406 Tokens per Sec: 26840.04522959064
Epoch Step: 570 / 819 Loss: 23.692373275756836 Tokens per Sec: 26856.072028635535
Epoch Step: 575 / 819 Loss: 19.195459365844727 Tokens per Sec: 25484.738584254665
Epoch Step: 580 / 819 Loss: 98.34859466552734 Tokens per Sec: 26627.47619892078
Epoch Step: 585 / 819 Loss: 21.21397590637207 Tokens per Sec: 23304.65477161077
Epoch Step: 590 / 819 Loss: 22.958328247070312 Tokens per Sec: 26475.9713549448
Epoch Step: 595 / 819 Loss: 23.339000701904297 Tokens per Sec: 24986.54319535229
Epoch Step: 600 / 819 Loss: 16.622676849365234 Tokens per Sec: 26052.63895771211
Epoch Step: 605 / 819 Loss: 22.38473892211914 Tokens per Sec: 24885.127080128103
Epoch Step: 610 / 819 Loss: 14.63102912902832 Tokens per Sec: 26496.586549607557
Epoch Step: 615 / 819 Loss: 24.995283126831055 Tokens per Sec: 27220.30772093665
Epoch Step: 620 / 819 Loss: 18.493078231811523 Tokens per Sec: 26157.401862638257
Epoch Step: 625 / 819 Loss: 13.549962043762207 Tokens per Sec: 26129.83472411946
Epoch Step: 630 / 819 Loss: 24.35486602783203 Tokens per Sec: 24919.881898826217
Epoch Step: 635 / 819 Loss: 23.288724899291992 Tokens per Sec: 25298.06401840096
Epoch Step: 640 / 819 Loss: 18.824264526367188 Tokens per Sec: 23521.793795361686
Epoch Step: 645 / 819 Loss: 24.717945098876953 Tokens per Sec: 26050.527755718427
Epoch Step: 650 / 819 Loss: 19.01358413696289 Tokens per Sec: 23740.511991814627
Epoch Step: 655 / 819 Loss: 16.153921127319336 Tokens per Sec: 27925.041412611765
Epoch Step: 660 / 819 Loss: 18.391756057739258 Tokens per Sec: 26769.5575991756
Epoch Step: 665 / 819 Loss: 107.0 Tokens per Sec: 25491.105589717437
Epoch Step: 670 / 819 Loss: 25.593156814575195 Tokens per Sec: 26668.659542522568
Epoch Step: 675 / 819 Loss: 182.83360290527344 Tokens per Sec: 24837.014076021456
Epoch Step: 680 / 819 Loss: 21.414216995239258 Tokens per Sec: 26050.365044892118
Epoch Step: 685 / 819 Loss: 19.45336151123047 Tokens per Sec: 26472.37926538892
Epoch Step: 690 / 819 Loss: 314.967041015625 Tokens per Sec: 25594.28365472121
Epoch Step: 695 / 819 Loss: 20.350311279296875 Tokens per Sec: 24529.441368055217
Epoch Step: 700 / 819 Loss: 23.04364585876465 Tokens per Sec: 27424.422976536138
Epoch Step: 705 / 819 Loss: 16.61468505859375 Tokens per Sec: 23384.582306559445
Epoch Step: 710 / 819 Loss: 18.372238159179688 Tokens per Sec: 27233.08463722732
Epoch Step: 715 / 819 Loss: 14.502077102661133 Tokens per Sec: 25328.764732156018
Epoch Step: 720 / 819 Loss: 24.12234878540039 Tokens per Sec: 26105.5296558923
Epoch Step: 725 / 819 Loss: 18.37455177307129 Tokens per Sec: 27250.39846908018
Epoch Step: 730 / 819 Loss: 17.828655242919922 Tokens per Sec: 28159.46854005326
Epoch Step: 735 / 819 Loss: 18.66217803955078 Tokens per Sec: 25353.607864845115
Epoch Step: 740 / 819 Loss: 18.822378158569336 Tokens per Sec: 27388.300406305487
Epoch Step: 745 / 819 Loss: 14.871881484985352 Tokens per Sec: 26035.81924007194
Epoch Step: 750 / 819 Loss: 16.85817527770996 Tokens per Sec: 26065.776504156423
Epoch Step: 755 / 819 Loss: 18.53965187072754 Tokens per Sec: 23587.461996517522
Epoch Step: 760 / 819 Loss: 16.300745010375977 Tokens per Sec: 25271.60272743263
Epoch Step: 765 / 819 Loss: 20.38986587524414 Tokens per Sec: 27064.24149674652
Epoch Step: 770 / 819 Loss: 197.92181396484375 Tokens per Sec: 26385.38711908286
Epoch Step: 775 / 819 Loss: 20.57093620300293 Tokens per Sec: 25942.260106519614
Epoch Step: 780 / 819 Loss: 16.57654571533203 Tokens per Sec: 25434.66525536689
Epoch Step: 785 / 819 Loss: 24.894512176513672 Tokens per Sec: 23672.58340427737
Epoch Step: 790 / 819 Loss: 19.565645217895508 Tokens per Sec: 22882.304987874904
Epoch Step: 795 / 819 Loss: 18.755434036254883 Tokens per Sec: 28525.93355188804
Epoch Step: 800 / 819 Loss: 20.109498977661133 Tokens per Sec: 26923.54862371868
Epoch Step: 805 / 819 Loss: 19.190673828125 Tokens per Sec: 20832.188947152754
Epoch Step: 810 / 819 Loss: 18.216777801513672 Tokens per Sec: 24328.06279443628
Epoch Step: 815 / 819 Loss: 18.67185401916504 Tokens per Sec: 24237.86242555116
Epoch ended with duration 0:02:31.495026
Train perplexity: 1.6498578486105078
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.328757
Validation perplexity: 1.6233762923553317
Epoch 22 / 1000
Epoch Step: 5 / 819 Loss: 177.80091857910156 Tokens per Sec: 24524.791178543095
Epoch Step: 10 / 819 Loss: 26.12314796447754 Tokens per Sec: 23687.556900351512
Epoch Step: 15 / 819 Loss: 20.2587947845459 Tokens per Sec: 25943.178767530975
Epoch Step: 20 / 819 Loss: 19.124866485595703 Tokens per Sec: 26241.543679660557
Epoch Step: 25 / 819 Loss: 22.614402770996094 Tokens per Sec: 25630.589230020658
Epoch Step: 30 / 819 Loss: 19.1805419921875 Tokens per Sec: 25575.811322911075
Epoch Step: 35 / 819 Loss: 15.719307899475098 Tokens per Sec: 24651.82741494514
Epoch Step: 40 / 819 Loss: 20.553810119628906 Tokens per Sec: 25881.03467462093
Epoch Step: 45 / 819 Loss: 20.255735397338867 Tokens per Sec: 24888.9489787456
Epoch Step: 50 / 819 Loss: 15.666781425476074 Tokens per Sec: 27550.844411214952
Epoch Step: 55 / 819 Loss: 21.776674270629883 Tokens per Sec: 25892.713453695065
Epoch Step: 60 / 819 Loss: 15.186005592346191 Tokens per Sec: 25947.554819260662
Epoch Step: 65 / 819 Loss: 18.566728591918945 Tokens per Sec: 26077.082666355614
Epoch Step: 70 / 819 Loss: 19.973596572875977 Tokens per Sec: 25028.580489515385
Epoch Step: 75 / 819 Loss: 174.1016082763672 Tokens per Sec: 23403.446188649414
Epoch Step: 80 / 819 Loss: 18.070911407470703 Tokens per Sec: 26823.091982365688
Epoch Step: 85 / 819 Loss: 17.14240837097168 Tokens per Sec: 25842.05815182216
Epoch Step: 90 / 819 Loss: 23.16694450378418 Tokens per Sec: 27232.90174062989
Epoch Step: 95 / 819 Loss: 27.20635986328125 Tokens per Sec: 27583.003336905043
Epoch Step: 100 / 819 Loss: 15.902630805969238 Tokens per Sec: 23183.09887766855
Epoch Step: 105 / 819 Loss: 13.548389434814453 Tokens per Sec: 24469.272759006213
Epoch Step: 110 / 819 Loss: 26.12108039855957 Tokens per Sec: 25274.267370253565
Epoch Step: 115 / 819 Loss: 21.587472915649414 Tokens per Sec: 25378.741755507242
Epoch Step: 120 / 819 Loss: 22.02495574951172 Tokens per Sec: 25868.373798290915
Epoch Step: 125 / 819 Loss: 19.656757354736328 Tokens per Sec: 24925.245611494553
Epoch Step: 130 / 819 Loss: 15.673335075378418 Tokens per Sec: 26909.62949927777
Epoch Step: 135 / 819 Loss: 156.90066528320312 Tokens per Sec: 27015.639433961747
Epoch Step: 140 / 819 Loss: 20.449289321899414 Tokens per Sec: 25764.385731294347
Epoch Step: 145 / 819 Loss: 250.17166137695312 Tokens per Sec: 26383.58661339344
Epoch Step: 150 / 819 Loss: 221.38714599609375 Tokens per Sec: 25604.360606339764
Epoch Step: 155 / 819 Loss: 194.48721313476562 Tokens per Sec: 26173.785217821925
Epoch Step: 160 / 819 Loss: 20.975549697875977 Tokens per Sec: 26081.780097807234
Epoch Step: 165 / 819 Loss: 20.477548599243164 Tokens per Sec: 25707.1912494386
Epoch Step: 170 / 819 Loss: 14.671772003173828 Tokens per Sec: 23667.16177713754
Epoch Step: 175 / 819 Loss: 211.4235076904297 Tokens per Sec: 25394.994671776585
Epoch Step: 180 / 819 Loss: 18.567495346069336 Tokens per Sec: 25740.71194569864
Epoch Step: 185 / 819 Loss: 19.6296443939209 Tokens per Sec: 25047.17029272827
Epoch Step: 190 / 819 Loss: 18.12608528137207 Tokens per Sec: 23311.426113250578
Epoch Step: 195 / 819 Loss: 18.25383758544922 Tokens per Sec: 26753.116475884148
Epoch Step: 200 / 819 Loss: 141.3157958984375 Tokens per Sec: 24412.833164640084
Epoch Step: 205 / 819 Loss: 18.02649688720703 Tokens per Sec: 27190.6770732403
Epoch Step: 210 / 819 Loss: 20.588838577270508 Tokens per Sec: 26048.505259263256
Epoch Step: 215 / 819 Loss: 18.806503295898438 Tokens per Sec: 25770.59060120115
Epoch Step: 220 / 819 Loss: 16.300058364868164 Tokens per Sec: 27243.931004114245
Epoch Step: 225 / 819 Loss: 24.664548873901367 Tokens per Sec: 25878.282025037803
Epoch Step: 230 / 819 Loss: 22.35857391357422 Tokens per Sec: 25009.594483008324
Epoch Step: 235 / 819 Loss: 16.944839477539062 Tokens per Sec: 25869.104275222628
Epoch Step: 240 / 819 Loss: 23.83791160583496 Tokens per Sec: 27297.796845758756
Epoch Step: 245 / 819 Loss: 256.0886535644531 Tokens per Sec: 26165.286261555033
Epoch Step: 250 / 819 Loss: 17.8178768157959 Tokens per Sec: 25333.22327563267
Epoch Step: 255 / 819 Loss: 22.250446319580078 Tokens per Sec: 24602.62876677606
Epoch Step: 260 / 819 Loss: 19.566268920898438 Tokens per Sec: 27197.98244286948
Epoch Step: 265 / 819 Loss: 23.952844619750977 Tokens per Sec: 25845.34921443469
Epoch Step: 270 / 819 Loss: 20.988798141479492 Tokens per Sec: 25067.161836200707
Epoch Step: 275 / 819 Loss: 14.855744361877441 Tokens per Sec: 25232.7040984159
Epoch Step: 280 / 819 Loss: 15.630654335021973 Tokens per Sec: 22815.780152374005
Epoch Step: 285 / 819 Loss: 21.22148895263672 Tokens per Sec: 25856.31789959198
Epoch Step: 290 / 819 Loss: 17.266569137573242 Tokens per Sec: 27490.852021050287
Epoch Step: 295 / 819 Loss: 20.391477584838867 Tokens per Sec: 23711.520898491246
Epoch Step: 300 / 819 Loss: 23.499195098876953 Tokens per Sec: 24542.054015876416
Epoch Step: 305 / 819 Loss: 20.669986724853516 Tokens per Sec: 23962.951216560286
Epoch Step: 310 / 819 Loss: 22.710689544677734 Tokens per Sec: 27332.521668903737
Epoch Step: 315 / 819 Loss: 16.09342384338379 Tokens per Sec: 23837.011084155172
Epoch Step: 320 / 819 Loss: 20.531818389892578 Tokens per Sec: 26315.614889334247
Epoch Step: 325 / 819 Loss: 25.469257354736328 Tokens per Sec: 26726.96873892136
Epoch Step: 330 / 819 Loss: 17.076093673706055 Tokens per Sec: 27965.779007864166
Epoch Step: 335 / 819 Loss: 15.79123306274414 Tokens per Sec: 26268.82211136244
Epoch Step: 340 / 819 Loss: 22.879730224609375 Tokens per Sec: 26583.08600727907
Epoch Step: 345 / 819 Loss: 14.943378448486328 Tokens per Sec: 27286.619038797613
Epoch Step: 350 / 819 Loss: 16.508115768432617 Tokens per Sec: 25332.655033704374
Epoch Step: 355 / 819 Loss: 16.169614791870117 Tokens per Sec: 25208.029833107317
Epoch Step: 360 / 819 Loss: 110.17626190185547 Tokens per Sec: 25384.207215223738
Epoch Step: 365 / 819 Loss: 18.008403778076172 Tokens per Sec: 26668.322841897894
Epoch Step: 370 / 819 Loss: 218.66468811035156 Tokens per Sec: 26255.208424019707
Epoch Step: 375 / 819 Loss: 18.791275024414062 Tokens per Sec: 24079.45450653181
Epoch Step: 380 / 819 Loss: 27.143157958984375 Tokens per Sec: 24772.069337724337
Epoch Step: 385 / 819 Loss: 26.406152725219727 Tokens per Sec: 25251.710687201416
Epoch Step: 390 / 819 Loss: 20.261486053466797 Tokens per Sec: 25420.024242424242
Epoch Step: 395 / 819 Loss: 219.17616271972656 Tokens per Sec: 26906.06585322842
Epoch Step: 400 / 819 Loss: 21.415151596069336 Tokens per Sec: 22766.777327208973
Epoch Step: 405 / 819 Loss: 26.969722747802734 Tokens per Sec: 25508.276702076488
Epoch Step: 410 / 819 Loss: 27.324607849121094 Tokens per Sec: 24675.896413017766
Epoch Step: 415 / 819 Loss: 23.081926345825195 Tokens per Sec: 26305.57175272162
Epoch Step: 420 / 819 Loss: 26.284082412719727 Tokens per Sec: 25539.218307267583
Epoch Step: 425 / 819 Loss: 22.377113342285156 Tokens per Sec: 27535.09652161767
Epoch Step: 430 / 819 Loss: 20.446216583251953 Tokens per Sec: 26766.1911618137
Epoch Step: 435 / 819 Loss: 18.269309997558594 Tokens per Sec: 25583.560761665365
Epoch Step: 440 / 819 Loss: 23.022825241088867 Tokens per Sec: 24796.739621166504
Epoch Step: 445 / 819 Loss: 24.421846389770508 Tokens per Sec: 25901.898286955846
Epoch Step: 450 / 819 Loss: 19.874441146850586 Tokens per Sec: 23989.57334869346
Epoch Step: 455 / 819 Loss: 17.865806579589844 Tokens per Sec: 25272.800712901506
Epoch Step: 460 / 819 Loss: 19.831682205200195 Tokens per Sec: 25705.132526717593
Epoch Step: 465 / 819 Loss: 17.20256805419922 Tokens per Sec: 27930.519246457698
Epoch Step: 470 / 819 Loss: 13.634099006652832 Tokens per Sec: 26146.353134558998
Epoch Step: 475 / 819 Loss: 15.454347610473633 Tokens per Sec: 27565.65828419748
Epoch Step: 480 / 819 Loss: 20.864011764526367 Tokens per Sec: 24086.67265227529
Epoch Step: 485 / 819 Loss: 15.221054077148438 Tokens per Sec: 26859.193682539204
Epoch Step: 490 / 819 Loss: 18.412799835205078 Tokens per Sec: 24302.68438113047
Epoch Step: 495 / 819 Loss: 14.558164596557617 Tokens per Sec: 25349.5663624642
Epoch Step: 500 / 819 Loss: 16.2220516204834 Tokens per Sec: 26752.122271573506
Epoch Step: 505 / 819 Loss: 18.421772003173828 Tokens per Sec: 24806.141176261117
Epoch Step: 510 / 819 Loss: 15.658193588256836 Tokens per Sec: 27193.67470277556
Epoch Step: 515 / 819 Loss: 17.413917541503906 Tokens per Sec: 25853.86123064942
Epoch Step: 520 / 819 Loss: 21.028425216674805 Tokens per Sec: 26721.452115542583
Epoch Step: 525 / 819 Loss: 13.854288101196289 Tokens per Sec: 24997.590517246146
Epoch Step: 530 / 819 Loss: 23.776790618896484 Tokens per Sec: 23982.84053638449
Epoch Step: 535 / 819 Loss: 17.485240936279297 Tokens per Sec: 28001.565429940183
Epoch Step: 540 / 819 Loss: 19.6544189453125 Tokens per Sec: 27497.8115353962
Epoch Step: 545 / 819 Loss: 20.331327438354492 Tokens per Sec: 27967.886500150624
Epoch Step: 550 / 819 Loss: 157.97291564941406 Tokens per Sec: 25676.4591774217
Epoch Step: 555 / 819 Loss: 21.624086380004883 Tokens per Sec: 22683.241996255925
Epoch Step: 560 / 819 Loss: 21.44367218017578 Tokens per Sec: 25806.79298328593
Epoch Step: 565 / 819 Loss: 20.33477210998535 Tokens per Sec: 26100.076207904713
Epoch Step: 570 / 819 Loss: 13.361435890197754 Tokens per Sec: 26490.876289139866
Epoch Step: 575 / 819 Loss: 26.386747360229492 Tokens per Sec: 23148.41286769602
Epoch Step: 580 / 819 Loss: 23.61339569091797 Tokens per Sec: 24678.48776843777
Epoch Step: 585 / 819 Loss: 24.27101707458496 Tokens per Sec: 26190.24291796322
Epoch Step: 590 / 819 Loss: 21.52994155883789 Tokens per Sec: 27362.697585734575
Epoch Step: 595 / 819 Loss: 19.63726234436035 Tokens per Sec: 25867.06351831796
Epoch Step: 600 / 819 Loss: 17.543336868286133 Tokens per Sec: 24700.3223589047
Epoch Step: 605 / 819 Loss: 196.75442504882812 Tokens per Sec: 26064.44991767969
Epoch Step: 610 / 819 Loss: 20.76351547241211 Tokens per Sec: 26230.178757613165
Epoch Step: 615 / 819 Loss: 21.686370849609375 Tokens per Sec: 26300.366886068867
Epoch Step: 620 / 819 Loss: 157.8758544921875 Tokens per Sec: 28165.91594403215
Epoch Step: 625 / 819 Loss: 22.2130184173584 Tokens per Sec: 23313.958569634542
Epoch Step: 630 / 819 Loss: 20.399169921875 Tokens per Sec: 24038.661427112685
Epoch Step: 635 / 819 Loss: 13.880021095275879 Tokens per Sec: 26981.191787677428
Epoch Step: 640 / 819 Loss: 22.000587463378906 Tokens per Sec: 26353.33515510656
Epoch Step: 645 / 819 Loss: 23.967599868774414 Tokens per Sec: 25381.432337931332
Epoch Step: 650 / 819 Loss: 18.546070098876953 Tokens per Sec: 26313.22561660748
Epoch Step: 655 / 819 Loss: 134.79922485351562 Tokens per Sec: 24402.616998951755
Epoch Step: 660 / 819 Loss: 22.242321014404297 Tokens per Sec: 24995.498366852975
Epoch Step: 665 / 819 Loss: 14.936742782592773 Tokens per Sec: 25076.61037686971
Epoch Step: 670 / 819 Loss: 23.050212860107422 Tokens per Sec: 26387.058377264602
Epoch Step: 675 / 819 Loss: 13.687641143798828 Tokens per Sec: 26644.91789335725
Epoch Step: 680 / 819 Loss: 110.9513931274414 Tokens per Sec: 25326.615616150884
Epoch Step: 685 / 819 Loss: 245.06536865234375 Tokens per Sec: 26543.496246661078
Epoch Step: 690 / 819 Loss: 21.096235275268555 Tokens per Sec: 24216.417724152278
Epoch Step: 695 / 819 Loss: 22.036231994628906 Tokens per Sec: 25722.308587604995
Epoch Step: 700 / 819 Loss: 17.46651268005371 Tokens per Sec: 23403.27050597027
Epoch Step: 705 / 819 Loss: 16.290061950683594 Tokens per Sec: 25166.85881244406
Epoch Step: 710 / 819 Loss: 20.422508239746094 Tokens per Sec: 26578.59757023094
Epoch Step: 715 / 819 Loss: 23.684812545776367 Tokens per Sec: 24085.654081460372
Epoch Step: 720 / 819 Loss: 20.96101188659668 Tokens per Sec: 26027.420570137958
Epoch Step: 725 / 819 Loss: 21.724987030029297 Tokens per Sec: 23986.669773212096
Epoch Step: 730 / 819 Loss: 23.926616668701172 Tokens per Sec: 24762.757632947643
Epoch Step: 735 / 819 Loss: 19.258039474487305 Tokens per Sec: 25310.617420963827
Epoch Step: 740 / 819 Loss: 201.52188110351562 Tokens per Sec: 23256.70620051859
Epoch Step: 745 / 819 Loss: 23.131725311279297 Tokens per Sec: 25329.438689750725
Epoch Step: 750 / 819 Loss: 15.856236457824707 Tokens per Sec: 23778.765299471783
Epoch Step: 755 / 819 Loss: 13.606863021850586 Tokens per Sec: 25761.331294678952
Epoch Step: 760 / 819 Loss: 24.486881256103516 Tokens per Sec: 25505.39989776004
Epoch Step: 765 / 819 Loss: 16.585769653320312 Tokens per Sec: 26600.108774225395
Epoch Step: 770 / 819 Loss: 14.874921798706055 Tokens per Sec: 26322.31870974239
Epoch Step: 775 / 819 Loss: 21.229230880737305 Tokens per Sec: 28226.418295671003
Epoch Step: 780 / 819 Loss: 22.952470779418945 Tokens per Sec: 25753.076630699772
Epoch Step: 785 / 819 Loss: 19.41644859313965 Tokens per Sec: 25464.76001056944
Epoch Step: 790 / 819 Loss: 21.169879913330078 Tokens per Sec: 26677.586613227704
Epoch Step: 795 / 819 Loss: 25.589954376220703 Tokens per Sec: 26129.67317246634
Epoch Step: 800 / 819 Loss: 22.255874633789062 Tokens per Sec: 26500.98513993997
Epoch Step: 805 / 819 Loss: 19.83139419555664 Tokens per Sec: 21207.480871784617
Epoch Step: 810 / 819 Loss: 19.30592155456543 Tokens per Sec: 23061.249102622358
Epoch Step: 815 / 819 Loss: 20.076194763183594 Tokens per Sec: 24186.6672549108
Epoch ended with duration 0:02:31.882208
Train perplexity: 1.6633652655678697
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.311559
Validation perplexity: 1.781581632974478
Epoch 23 / 1000
Epoch Step: 5 / 819 Loss: 19.607210159301758 Tokens per Sec: 24940.354641124253
Epoch Step: 10 / 819 Loss: 19.520689010620117 Tokens per Sec: 25771.864077168077
Epoch Step: 15 / 819 Loss: 22.758710861206055 Tokens per Sec: 23761.679766457768
Epoch Step: 20 / 819 Loss: 17.15859603881836 Tokens per Sec: 25287.65226325929
Epoch Step: 25 / 819 Loss: 23.399423599243164 Tokens per Sec: 24532.994270952586
Epoch Step: 30 / 819 Loss: 21.451492309570312 Tokens per Sec: 25379.07142265757
Epoch Step: 35 / 819 Loss: 17.471532821655273 Tokens per Sec: 26351.40203025984
Epoch Step: 40 / 819 Loss: 17.492206573486328 Tokens per Sec: 26924.739626287148
Epoch Step: 45 / 819 Loss: 17.655752182006836 Tokens per Sec: 27206.010713474967
Epoch Step: 50 / 819 Loss: 16.972185134887695 Tokens per Sec: 25621.894383723964
Epoch Step: 55 / 819 Loss: 24.738677978515625 Tokens per Sec: 24521.761737896268
Epoch Step: 60 / 819 Loss: 19.31728172302246 Tokens per Sec: 23519.791043379544
Epoch Step: 65 / 819 Loss: 13.511682510375977 Tokens per Sec: 28256.589224515683
Epoch Step: 70 / 819 Loss: 23.692949295043945 Tokens per Sec: 26245.713613993183
Epoch Step: 75 / 819 Loss: 18.448604583740234 Tokens per Sec: 27472.872821215773
Epoch Step: 80 / 819 Loss: 14.455049514770508 Tokens per Sec: 25779.348629554737
Epoch Step: 85 / 819 Loss: 23.10144805908203 Tokens per Sec: 26338.332733498024
Epoch Step: 90 / 819 Loss: 15.82203483581543 Tokens per Sec: 25717.33803766082
Epoch Step: 95 / 819 Loss: 15.160621643066406 Tokens per Sec: 26999.019197340156
Epoch Step: 100 / 819 Loss: 20.634689331054688 Tokens per Sec: 28058.009132735493
Epoch Step: 105 / 819 Loss: 19.492794036865234 Tokens per Sec: 23298.32857031588
Epoch Step: 110 / 819 Loss: 13.853899002075195 Tokens per Sec: 24269.2931844393
Epoch Step: 115 / 819 Loss: 23.782846450805664 Tokens per Sec: 23774.395521116134
Epoch Step: 120 / 819 Loss: 21.220781326293945 Tokens per Sec: 24812.61821622593
Epoch Step: 125 / 819 Loss: 19.43937873840332 Tokens per Sec: 27109.519884074365
Epoch Step: 130 / 819 Loss: 24.954755783081055 Tokens per Sec: 24852.716926510013
Epoch Step: 135 / 819 Loss: 22.996274948120117 Tokens per Sec: 25553.458117826474
Epoch Step: 140 / 819 Loss: 15.908306121826172 Tokens per Sec: 26322.33602328958
Epoch Step: 145 / 819 Loss: 17.593372344970703 Tokens per Sec: 26181.39698255783
Epoch Step: 150 / 819 Loss: 24.39337730407715 Tokens per Sec: 25860.791181976485
Epoch Step: 155 / 819 Loss: 18.753620147705078 Tokens per Sec: 25131.441695724603
Epoch Step: 160 / 819 Loss: 16.260787963867188 Tokens per Sec: 27740.708493339247
Epoch Step: 165 / 819 Loss: 21.974794387817383 Tokens per Sec: 25860.607760720814
Epoch Step: 170 / 819 Loss: 22.149314880371094 Tokens per Sec: 26671.173652351095
Epoch Step: 175 / 819 Loss: 15.91974925994873 Tokens per Sec: 27428.991271353516
Epoch Step: 180 / 819 Loss: 199.821533203125 Tokens per Sec: 26744.248697184827
Epoch Step: 185 / 819 Loss: 20.692279815673828 Tokens per Sec: 24100.782581277716
Epoch Step: 190 / 819 Loss: 27.614971160888672 Tokens per Sec: 26894.300158590817
Epoch Step: 195 / 819 Loss: 18.676374435424805 Tokens per Sec: 27547.092279599823
Epoch Step: 200 / 819 Loss: 25.765769958496094 Tokens per Sec: 24691.192765375195
Epoch Step: 205 / 819 Loss: 22.078752517700195 Tokens per Sec: 26638.418540012826
Epoch Step: 210 / 819 Loss: 23.121854782104492 Tokens per Sec: 25842.73664249474
Epoch Step: 215 / 819 Loss: 14.686125755310059 Tokens per Sec: 25792.415845215273
Epoch Step: 220 / 819 Loss: 24.375246047973633 Tokens per Sec: 24668.87765343404
Epoch Step: 225 / 819 Loss: 14.464725494384766 Tokens per Sec: 27893.03231844841
Epoch Step: 230 / 819 Loss: 25.093868255615234 Tokens per Sec: 23797.83845138631
Epoch Step: 235 / 819 Loss: 17.76984214782715 Tokens per Sec: 25009.26912582795
Epoch Step: 240 / 819 Loss: 16.267772674560547 Tokens per Sec: 26264.767001783315
Epoch Step: 245 / 819 Loss: 22.605051040649414 Tokens per Sec: 25933.951945248762
Epoch Step: 250 / 819 Loss: 15.687867164611816 Tokens per Sec: 26922.935470017976
Epoch Step: 255 / 819 Loss: 22.135793685913086 Tokens per Sec: 27805.533106676943
Epoch Step: 260 / 819 Loss: 16.810548782348633 Tokens per Sec: 22318.364032818667
Epoch Step: 265 / 819 Loss: 22.93232536315918 Tokens per Sec: 27058.33201415026
Epoch Step: 270 / 819 Loss: 21.780942916870117 Tokens per Sec: 26953.59006253668
Epoch Step: 275 / 819 Loss: 20.163110733032227 Tokens per Sec: 27581.548917037926
Epoch Step: 280 / 819 Loss: 19.544113159179688 Tokens per Sec: 21598.919907878837
Epoch Step: 285 / 819 Loss: 21.691940307617188 Tokens per Sec: 25335.741263242908
Epoch Step: 290 / 819 Loss: 17.603261947631836 Tokens per Sec: 24572.411923275227
Epoch Step: 295 / 819 Loss: 20.382234573364258 Tokens per Sec: 28078.387317624914
Epoch Step: 300 / 819 Loss: 23.313175201416016 Tokens per Sec: 24734.043045586386
Epoch Step: 305 / 819 Loss: 20.6976375579834 Tokens per Sec: 25357.186555730146
Epoch Step: 310 / 819 Loss: 18.506423950195312 Tokens per Sec: 27911.53278566094
Epoch Step: 315 / 819 Loss: 23.243040084838867 Tokens per Sec: 27102.001499526577
Epoch Step: 320 / 819 Loss: 251.07838439941406 Tokens per Sec: 24563.897796259083
Epoch Step: 325 / 819 Loss: 20.66626739501953 Tokens per Sec: 25248.002950171758
Epoch Step: 330 / 819 Loss: 247.75588989257812 Tokens per Sec: 26893.475331155885
Epoch Step: 335 / 819 Loss: 17.59832191467285 Tokens per Sec: 24304.850661025408
Epoch Step: 340 / 819 Loss: 16.399442672729492 Tokens per Sec: 27840.20273318355
Epoch Step: 345 / 819 Loss: 13.928586959838867 Tokens per Sec: 25226.279304946616
Epoch Step: 350 / 819 Loss: 16.785053253173828 Tokens per Sec: 27296.924562921795
Epoch Step: 355 / 819 Loss: 19.79371452331543 Tokens per Sec: 26109.710891462604
Epoch Step: 360 / 819 Loss: 20.279294967651367 Tokens per Sec: 26545.603848458748
Epoch Step: 365 / 819 Loss: 22.814443588256836 Tokens per Sec: 26502.176087202322
Epoch Step: 370 / 819 Loss: 245.6817169189453 Tokens per Sec: 25176.2805017024
Epoch Step: 375 / 819 Loss: 184.2991485595703 Tokens per Sec: 25251.65559949144
Epoch Step: 380 / 819 Loss: 23.973838806152344 Tokens per Sec: 26284.802626700566
Epoch Step: 385 / 819 Loss: 23.857303619384766 Tokens per Sec: 28021.40000858493
Epoch Step: 390 / 819 Loss: 20.008859634399414 Tokens per Sec: 24862.18204943576
Epoch Step: 395 / 819 Loss: 22.11781883239746 Tokens per Sec: 24630.955701134135
Epoch Step: 400 / 819 Loss: 23.444110870361328 Tokens per Sec: 24780.1701932345
Epoch Step: 405 / 819 Loss: 24.093135833740234 Tokens per Sec: 25229.532498450808
Epoch Step: 410 / 819 Loss: 16.800575256347656 Tokens per Sec: 23844.123861539076
Epoch Step: 415 / 819 Loss: 23.06058120727539 Tokens per Sec: 24803.321819021898
Epoch Step: 420 / 819 Loss: 21.589740753173828 Tokens per Sec: 24883.641266271003
Epoch Step: 425 / 819 Loss: 14.064476013183594 Tokens per Sec: 26292.019070413076
Epoch Step: 430 / 819 Loss: 13.846539497375488 Tokens per Sec: 26140.812340950233
Epoch Step: 435 / 819 Loss: 23.941736221313477 Tokens per Sec: 25971.952470503355
Epoch Step: 440 / 819 Loss: 19.762731552124023 Tokens per Sec: 22822.885738892885
Epoch Step: 445 / 819 Loss: 14.893885612487793 Tokens per Sec: 25278.00728200506
Epoch Step: 450 / 819 Loss: 20.846805572509766 Tokens per Sec: 23404.559385514
Epoch Step: 455 / 819 Loss: 20.899372100830078 Tokens per Sec: 24004.41761619482
Epoch Step: 460 / 819 Loss: 17.17416000366211 Tokens per Sec: 24526.444255923652
Epoch Step: 465 / 819 Loss: 18.656049728393555 Tokens per Sec: 26783.88072430903
Epoch Step: 470 / 819 Loss: 20.067487716674805 Tokens per Sec: 27031.494083346137
Epoch Step: 475 / 819 Loss: 18.242345809936523 Tokens per Sec: 26372.72717753271
Epoch Step: 480 / 819 Loss: 205.33428955078125 Tokens per Sec: 25738.810708339766
Epoch Step: 485 / 819 Loss: 18.617799758911133 Tokens per Sec: 26433.082963912577
Epoch Step: 490 / 819 Loss: 24.234983444213867 Tokens per Sec: 26207.040954476266
Epoch Step: 495 / 819 Loss: 16.682392120361328 Tokens per Sec: 24987.65341915484
Epoch Step: 500 / 819 Loss: 20.46327018737793 Tokens per Sec: 27057.63296345883
Epoch Step: 505 / 819 Loss: 181.11312866210938 Tokens per Sec: 25362.41555126438
Epoch Step: 510 / 819 Loss: 26.80439567565918 Tokens per Sec: 25218.418994231622
Epoch Step: 515 / 819 Loss: 19.101947784423828 Tokens per Sec: 25494.166547737386
Epoch Step: 520 / 819 Loss: 15.066207885742188 Tokens per Sec: 26257.909010242216
Epoch Step: 525 / 819 Loss: 17.351537704467773 Tokens per Sec: 26673.41364205721
Epoch Step: 530 / 819 Loss: 17.218786239624023 Tokens per Sec: 26398.96333434095
Epoch Step: 535 / 819 Loss: 20.249082565307617 Tokens per Sec: 26564.686465177972
Epoch Step: 540 / 819 Loss: 18.7590389251709 Tokens per Sec: 23515.205562511743
Epoch Step: 545 / 819 Loss: 22.79172134399414 Tokens per Sec: 27480.60154253942
Epoch Step: 550 / 819 Loss: 12.847530364990234 Tokens per Sec: 24116.207558214253
Epoch Step: 555 / 819 Loss: 20.87454605102539 Tokens per Sec: 25796.85144468362
Epoch Step: 560 / 819 Loss: 19.960050582885742 Tokens per Sec: 25608.812712947758
Epoch Step: 565 / 819 Loss: 18.945405960083008 Tokens per Sec: 24874.06732691291
Epoch Step: 570 / 819 Loss: 18.226423263549805 Tokens per Sec: 27783.5438504848
Epoch Step: 575 / 819 Loss: 20.108360290527344 Tokens per Sec: 27116.6664172203
Epoch Step: 580 / 819 Loss: 23.495471954345703 Tokens per Sec: 25156.91193310098
Epoch Step: 585 / 819 Loss: 23.236560821533203 Tokens per Sec: 26809.774737539465
Epoch Step: 590 / 819 Loss: 15.126229286193848 Tokens per Sec: 24577.704663686836
Epoch Step: 595 / 819 Loss: 20.788599014282227 Tokens per Sec: 25897.515900488303
Epoch Step: 600 / 819 Loss: 20.407182693481445 Tokens per Sec: 24027.263699256742
Epoch Step: 605 / 819 Loss: 21.791580200195312 Tokens per Sec: 26312.230648909863
Epoch Step: 610 / 819 Loss: 173.78237915039062 Tokens per Sec: 27150.729149107086
Epoch Step: 615 / 819 Loss: 19.000810623168945 Tokens per Sec: 23519.612488443418
Epoch Step: 620 / 819 Loss: 19.049240112304688 Tokens per Sec: 26541.28677690288
Epoch Step: 625 / 819 Loss: 86.15190124511719 Tokens per Sec: 26677.066161267725
Epoch Step: 630 / 819 Loss: 20.28129005432129 Tokens per Sec: 25609.152555002605
Epoch Step: 635 / 819 Loss: 19.0236759185791 Tokens per Sec: 27222.166829287835
Epoch Step: 640 / 819 Loss: 18.160457611083984 Tokens per Sec: 26720.184893982452
Epoch Step: 645 / 819 Loss: 23.625743865966797 Tokens per Sec: 24158.3257729925
Epoch Step: 650 / 819 Loss: 14.571613311767578 Tokens per Sec: 26548.314696897
Epoch Step: 655 / 819 Loss: 22.404523849487305 Tokens per Sec: 26301.759575642915
Epoch Step: 660 / 819 Loss: 13.745573043823242 Tokens per Sec: 28035.516518750024
Epoch Step: 665 / 819 Loss: 18.137128829956055 Tokens per Sec: 26456.330240212745
Epoch Step: 670 / 819 Loss: 110.0477066040039 Tokens per Sec: 25286.552632282273
Epoch Step: 675 / 819 Loss: 17.32482147216797 Tokens per Sec: 27144.19997439588
Epoch Step: 680 / 819 Loss: 24.14311981201172 Tokens per Sec: 26140.550058289034
Epoch Step: 685 / 819 Loss: 17.58172035217285 Tokens per Sec: 24731.530208250748
Epoch Step: 690 / 819 Loss: 22.990713119506836 Tokens per Sec: 26928.89277797142
Epoch Step: 695 / 819 Loss: 23.247943878173828 Tokens per Sec: 23070.01026322747
Epoch Step: 700 / 819 Loss: 20.775775909423828 Tokens per Sec: 25294.92172176023
Epoch Step: 705 / 819 Loss: 123.4021224975586 Tokens per Sec: 25936.02107147949
Epoch Step: 710 / 819 Loss: 132.01821899414062 Tokens per Sec: 26714.55488970231
Epoch Step: 715 / 819 Loss: 23.476211547851562 Tokens per Sec: 25748.310368387694
Epoch Step: 720 / 819 Loss: 14.503823280334473 Tokens per Sec: 28360.814723469834
Epoch Step: 725 / 819 Loss: 17.704601287841797 Tokens per Sec: 24917.26131853181
Epoch Step: 730 / 819 Loss: 20.235668182373047 Tokens per Sec: 25051.82431951498
Epoch Step: 735 / 819 Loss: 19.1982364654541 Tokens per Sec: 25619.39529837862
Epoch Step: 740 / 819 Loss: 13.181198120117188 Tokens per Sec: 26981.179042425887
Epoch Step: 745 / 819 Loss: 18.827219009399414 Tokens per Sec: 24171.63340673836
Epoch Step: 750 / 819 Loss: 21.527008056640625 Tokens per Sec: 25331.28602705805
Epoch Step: 755 / 819 Loss: 14.314114570617676 Tokens per Sec: 25753.023482179877
Epoch Step: 760 / 819 Loss: 16.827564239501953 Tokens per Sec: 25936.882879445042
Epoch Step: 765 / 819 Loss: 20.002649307250977 Tokens per Sec: 25386.760360568172
Epoch Step: 770 / 819 Loss: 16.010988235473633 Tokens per Sec: 26756.426166406094
Epoch Step: 775 / 819 Loss: 15.398200988769531 Tokens per Sec: 26506.149984036085
Epoch Step: 780 / 819 Loss: 20.83759880065918 Tokens per Sec: 25061.420859584952
Epoch Step: 785 / 819 Loss: 20.392162322998047 Tokens per Sec: 27401.719931741234
Epoch Step: 790 / 819 Loss: 20.753437042236328 Tokens per Sec: 25329.98321892747
Epoch Step: 795 / 819 Loss: 17.322755813598633 Tokens per Sec: 27348.36099783607
Epoch Step: 800 / 819 Loss: 18.98185157775879 Tokens per Sec: 24616.217268506323
Epoch Step: 805 / 819 Loss: 20.308738708496094 Tokens per Sec: 24122.323289136
Epoch Step: 810 / 819 Loss: 17.899959564208984 Tokens per Sec: 22421.500403133698
Epoch Step: 815 / 819 Loss: 17.09299087524414 Tokens per Sec: 20900.724213268488
Epoch ended with duration 0:02:31.182147
Train perplexity: 1.667509609478533
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.323863
Validation perplexity: 1.5324496638114486
Epoch 24 / 1000
Epoch Step: 5 / 819 Loss: 22.785629272460938 Tokens per Sec: 26518.77121194984
Epoch Step: 10 / 819 Loss: 19.032470703125 Tokens per Sec: 25820.67935482085
Epoch Step: 15 / 819 Loss: 22.10749053955078 Tokens per Sec: 26105.611900927932
Epoch Step: 20 / 819 Loss: 22.697359085083008 Tokens per Sec: 25820.06160384175
Epoch Step: 25 / 819 Loss: 15.9789400100708 Tokens per Sec: 27051.66034802698
Epoch Step: 30 / 819 Loss: 20.350635528564453 Tokens per Sec: 25401.723270701874
Epoch Step: 35 / 819 Loss: 16.024755477905273 Tokens per Sec: 23937.54077895856
Epoch Step: 40 / 819 Loss: 17.64267349243164 Tokens per Sec: 26758.890470355407
Epoch Step: 45 / 819 Loss: 14.312092781066895 Tokens per Sec: 27999.857096564778
Epoch Step: 50 / 819 Loss: 20.082618713378906 Tokens per Sec: 21600.679257177457
Epoch Step: 55 / 819 Loss: 17.511920928955078 Tokens per Sec: 26503.569760866845
Epoch Step: 60 / 819 Loss: 214.54183959960938 Tokens per Sec: 25817.223074674446
Epoch Step: 65 / 819 Loss: 22.794097900390625 Tokens per Sec: 23470.659745741013
Epoch Step: 70 / 819 Loss: 18.886930465698242 Tokens per Sec: 28129.38445587318
Epoch Step: 75 / 819 Loss: 14.628843307495117 Tokens per Sec: 26584.514936324824
Epoch Step: 80 / 819 Loss: 162.1197052001953 Tokens per Sec: 24590.65450119667
Epoch Step: 85 / 819 Loss: 16.12881851196289 Tokens per Sec: 26600.730736117803
Epoch Step: 90 / 819 Loss: 17.34328269958496 Tokens per Sec: 26845.69520272013
Epoch Step: 95 / 819 Loss: 21.7799072265625 Tokens per Sec: 24440.677685689938
Epoch Step: 100 / 819 Loss: 17.40618133544922 Tokens per Sec: 24341.293185123766
Epoch Step: 105 / 819 Loss: 25.69569206237793 Tokens per Sec: 25652.970298298285
Epoch Step: 110 / 819 Loss: 20.830656051635742 Tokens per Sec: 27013.064538653794
Epoch Step: 115 / 819 Loss: 20.226961135864258 Tokens per Sec: 24566.76477130263
Epoch Step: 120 / 819 Loss: 175.72018432617188 Tokens per Sec: 26802.380817319983
Epoch Step: 125 / 819 Loss: 14.261051177978516 Tokens per Sec: 24584.564882752264
Epoch Step: 130 / 819 Loss: 23.818674087524414 Tokens per Sec: 25387.085644771963
Epoch Step: 135 / 819 Loss: 25.390766143798828 Tokens per Sec: 25893.891764001168
Epoch Step: 140 / 819 Loss: 171.4801025390625 Tokens per Sec: 26410.83451842802
Epoch Step: 145 / 819 Loss: 17.873096466064453 Tokens per Sec: 25828.1072530556
Epoch Step: 150 / 819 Loss: 194.99197387695312 Tokens per Sec: 23993.800592294356
Epoch Step: 155 / 819 Loss: 21.057987213134766 Tokens per Sec: 23939.639572929038
Epoch Step: 160 / 819 Loss: 20.93168830871582 Tokens per Sec: 26033.344992532704
Epoch Step: 165 / 819 Loss: 23.246484756469727 Tokens per Sec: 24998.828617222818
Epoch Step: 170 / 819 Loss: 15.336114883422852 Tokens per Sec: 25078.682046883903
Epoch Step: 175 / 819 Loss: 22.923303604125977 Tokens per Sec: 25676.32668928267
Epoch Step: 180 / 819 Loss: 212.7230987548828 Tokens per Sec: 24952.039282340822
Epoch Step: 185 / 819 Loss: 18.26160430908203 Tokens per Sec: 24464.08850514436
Epoch Step: 190 / 819 Loss: 20.53663444519043 Tokens per Sec: 25900.254939548286
Epoch Step: 195 / 819 Loss: 20.931381225585938 Tokens per Sec: 26960.943819488155
Epoch Step: 200 / 819 Loss: 28.575748443603516 Tokens per Sec: 24379.287885633352
Epoch Step: 205 / 819 Loss: 23.223018646240234 Tokens per Sec: 25959.926660748693
Epoch Step: 210 / 819 Loss: 238.05735778808594 Tokens per Sec: 24118.602991086296
Epoch Step: 215 / 819 Loss: 17.26865577697754 Tokens per Sec: 24343.951753176454
Epoch Step: 220 / 819 Loss: 17.061416625976562 Tokens per Sec: 23452.306644025895
Epoch Step: 225 / 819 Loss: 146.83168029785156 Tokens per Sec: 25161.495251689405
Epoch Step: 230 / 819 Loss: 23.836610794067383 Tokens per Sec: 25812.771334402256
Epoch Step: 235 / 819 Loss: 19.18924331665039 Tokens per Sec: 25258.756551433904
Epoch Step: 240 / 819 Loss: 190.85205078125 Tokens per Sec: 25400.68849010764
Epoch Step: 245 / 819 Loss: 22.322120666503906 Tokens per Sec: 28268.60304046766
Epoch Step: 250 / 819 Loss: 24.381418228149414 Tokens per Sec: 25285.675488482044
Epoch Step: 255 / 819 Loss: 24.950260162353516 Tokens per Sec: 24168.725264048684
Epoch Step: 260 / 819 Loss: 15.862957000732422 Tokens per Sec: 27738.276901867743
Epoch Step: 265 / 819 Loss: 20.781845092773438 Tokens per Sec: 26761.97614520529
Epoch Step: 270 / 819 Loss: 18.209943771362305 Tokens per Sec: 24935.258492759098
Epoch Step: 275 / 819 Loss: 26.357601165771484 Tokens per Sec: 24461.442459295646
Epoch Step: 280 / 819 Loss: 15.385725021362305 Tokens per Sec: 25885.380865995157
Epoch Step: 285 / 819 Loss: 22.294374465942383 Tokens per Sec: 27183.537742696582
Epoch Step: 290 / 819 Loss: 19.89284896850586 Tokens per Sec: 27196.584791872483
Epoch Step: 295 / 819 Loss: 20.01205062866211 Tokens per Sec: 25628.089291315828
Epoch Step: 300 / 819 Loss: 14.996500015258789 Tokens per Sec: 26038.158604675256
Epoch Step: 305 / 819 Loss: 23.77655029296875 Tokens per Sec: 26434.725501949386
Epoch Step: 310 / 819 Loss: 17.013822555541992 Tokens per Sec: 27128.361458426334
Epoch Step: 315 / 819 Loss: 12.493715286254883 Tokens per Sec: 24210.47527758318
Epoch Step: 320 / 819 Loss: 22.16073989868164 Tokens per Sec: 26618.607056131586
Epoch Step: 325 / 819 Loss: 19.99690055847168 Tokens per Sec: 25811.28944193294
Epoch Step: 330 / 819 Loss: 140.08546447753906 Tokens per Sec: 27185.480905676344
Epoch Step: 335 / 819 Loss: 23.51048469543457 Tokens per Sec: 25326.670650397406
Epoch Step: 340 / 819 Loss: 22.469480514526367 Tokens per Sec: 25651.570512598842
Epoch Step: 345 / 819 Loss: 132.660400390625 Tokens per Sec: 24721.96913092052
Epoch Step: 350 / 819 Loss: 21.225772857666016 Tokens per Sec: 25983.693021139276
Epoch Step: 355 / 819 Loss: 14.176642417907715 Tokens per Sec: 27083.1511771615
Epoch Step: 360 / 819 Loss: 14.911949157714844 Tokens per Sec: 25427.688602578408
Epoch Step: 365 / 819 Loss: 14.07147216796875 Tokens per Sec: 26615.12620407749
Epoch Step: 370 / 819 Loss: 17.058263778686523 Tokens per Sec: 27207.598593035807
Epoch Step: 375 / 819 Loss: 17.725440979003906 Tokens per Sec: 24328.723547750007
Epoch Step: 380 / 819 Loss: 18.957231521606445 Tokens per Sec: 25969.288575628412
Epoch Step: 385 / 819 Loss: 28.400110244750977 Tokens per Sec: 24409.94307931147
Epoch Step: 390 / 819 Loss: 23.061613082885742 Tokens per Sec: 27636.803344751756
Epoch Step: 395 / 819 Loss: 22.205677032470703 Tokens per Sec: 26253.378224505406
Epoch Step: 400 / 819 Loss: 24.12890625 Tokens per Sec: 23063.96504791487
Epoch Step: 405 / 819 Loss: 18.448617935180664 Tokens per Sec: 27247.538888245817
Epoch Step: 410 / 819 Loss: 20.85968589782715 Tokens per Sec: 26724.642987683103
Epoch Step: 415 / 819 Loss: 13.323878288269043 Tokens per Sec: 27532.267094111623
Epoch Step: 420 / 819 Loss: 180.1685791015625 Tokens per Sec: 27910.256273020375
Epoch Step: 425 / 819 Loss: 191.41661071777344 Tokens per Sec: 24150.961764463023
Epoch Step: 430 / 819 Loss: 149.03057861328125 Tokens per Sec: 24611.047593462747
Epoch Step: 435 / 819 Loss: 21.160585403442383 Tokens per Sec: 27741.65247367069
Epoch Step: 440 / 819 Loss: 19.11768341064453 Tokens per Sec: 25562.14484804437
Epoch Step: 445 / 819 Loss: 23.57494354248047 Tokens per Sec: 26672.329664520646
Epoch Step: 450 / 819 Loss: 17.815845489501953 Tokens per Sec: 24057.117827214664
Epoch Step: 455 / 819 Loss: 21.71795082092285 Tokens per Sec: 23492.701166700175
Epoch Step: 460 / 819 Loss: 17.967836380004883 Tokens per Sec: 26088.544620423985
Epoch Step: 465 / 819 Loss: 16.721607208251953 Tokens per Sec: 27522.97390962877
Epoch Step: 470 / 819 Loss: 16.336889266967773 Tokens per Sec: 25770.7031495713
Epoch Step: 475 / 819 Loss: 15.601081848144531 Tokens per Sec: 25865.891307573675
Epoch Step: 480 / 819 Loss: 21.968902587890625 Tokens per Sec: 26031.44183618733
Epoch Step: 485 / 819 Loss: 20.418081283569336 Tokens per Sec: 26049.448807272278
Epoch Step: 490 / 819 Loss: 18.829437255859375 Tokens per Sec: 26965.39155169728
Epoch Step: 495 / 819 Loss: 17.98337745666504 Tokens per Sec: 25274.625626603243
Epoch Step: 500 / 819 Loss: 21.059947967529297 Tokens per Sec: 24575.601770992234
Epoch Step: 505 / 819 Loss: 15.379026412963867 Tokens per Sec: 27241.84892414174
Epoch Step: 510 / 819 Loss: 18.69994354248047 Tokens per Sec: 26559.568898458016
Epoch Step: 515 / 819 Loss: 235.96664428710938 Tokens per Sec: 25794.30070266654
Epoch Step: 520 / 819 Loss: 148.33633422851562 Tokens per Sec: 26952.536590569955
Epoch Step: 525 / 819 Loss: 19.1384220123291 Tokens per Sec: 25693.54211828484
Epoch Step: 530 / 819 Loss: 15.383796691894531 Tokens per Sec: 23739.84801939209
Epoch Step: 535 / 819 Loss: 18.114627838134766 Tokens per Sec: 25323.689796304207
Epoch Step: 540 / 819 Loss: 22.17848014831543 Tokens per Sec: 24810.486293841495
Epoch Step: 545 / 819 Loss: 19.903032302856445 Tokens per Sec: 25715.926273300123
Epoch Step: 550 / 819 Loss: 13.358582496643066 Tokens per Sec: 25370.823687902037
Epoch Step: 555 / 819 Loss: 261.737060546875 Tokens per Sec: 25430.00044303742
Epoch Step: 560 / 819 Loss: 19.961944580078125 Tokens per Sec: 25996.073600619795
Epoch Step: 565 / 819 Loss: 22.413049697875977 Tokens per Sec: 26926.93317526973
Epoch Step: 570 / 819 Loss: 15.451621055603027 Tokens per Sec: 25859.19044833282
Epoch Step: 575 / 819 Loss: 20.309024810791016 Tokens per Sec: 27216.573729005977
Epoch Step: 580 / 819 Loss: 20.177452087402344 Tokens per Sec: 26500.57344401373
Epoch Step: 585 / 819 Loss: 25.844097137451172 Tokens per Sec: 26612.40955795956
Epoch Step: 590 / 819 Loss: 19.820117950439453 Tokens per Sec: 23228.834679665117
Epoch Step: 595 / 819 Loss: 14.92912769317627 Tokens per Sec: 25496.937391554427
Epoch Step: 600 / 819 Loss: 15.116775512695312 Tokens per Sec: 27089.994525588878
Epoch Step: 605 / 819 Loss: 16.046714782714844 Tokens per Sec: 27265.831236578546
Epoch Step: 610 / 819 Loss: 22.072566986083984 Tokens per Sec: 27492.742294230455
Epoch Step: 615 / 819 Loss: 19.79364776611328 Tokens per Sec: 26608.902101768937
Epoch Step: 620 / 819 Loss: 21.13182258605957 Tokens per Sec: 26287.855303553737
Epoch Step: 625 / 819 Loss: 16.298168182373047 Tokens per Sec: 26019.406526258917
Epoch Step: 630 / 819 Loss: 16.989694595336914 Tokens per Sec: 24028.366880208785
Epoch Step: 635 / 819 Loss: 15.306757926940918 Tokens per Sec: 23832.910347638375
Epoch Step: 640 / 819 Loss: 19.091829299926758 Tokens per Sec: 27779.537436761606
Epoch Step: 645 / 819 Loss: 18.82276725769043 Tokens per Sec: 27067.66552607399
Epoch Step: 650 / 819 Loss: 17.52773666381836 Tokens per Sec: 24262.46825803285
Epoch Step: 655 / 819 Loss: 21.606502532958984 Tokens per Sec: 26471.840102819293
Epoch Step: 660 / 819 Loss: 18.373632431030273 Tokens per Sec: 24091.25882533128
Epoch Step: 665 / 819 Loss: 15.58711051940918 Tokens per Sec: 23634.18527317328
Epoch Step: 670 / 819 Loss: 235.49009704589844 Tokens per Sec: 25216.203494299298
Epoch Step: 675 / 819 Loss: 19.14606475830078 Tokens per Sec: 25633.042733319668
Epoch Step: 680 / 819 Loss: 11.831674575805664 Tokens per Sec: 25772.038148897343
Epoch Step: 685 / 819 Loss: 19.47296905517578 Tokens per Sec: 26767.314721357954
Epoch Step: 690 / 819 Loss: 15.801477432250977 Tokens per Sec: 26365.827617873725
Epoch Step: 695 / 819 Loss: 13.481423377990723 Tokens per Sec: 25265.027932084915
Epoch Step: 700 / 819 Loss: 21.975629806518555 Tokens per Sec: 26974.927980883298
Epoch Step: 705 / 819 Loss: 15.169150352478027 Tokens per Sec: 24397.261933524453
Epoch Step: 710 / 819 Loss: 15.207147598266602 Tokens per Sec: 26005.483578296018
Epoch Step: 715 / 819 Loss: 21.02538299560547 Tokens per Sec: 25977.773105251392
Epoch Step: 720 / 819 Loss: 18.682058334350586 Tokens per Sec: 25839.26120630829
Epoch Step: 725 / 819 Loss: 17.061641693115234 Tokens per Sec: 27449.62091671158
Epoch Step: 730 / 819 Loss: 15.852831840515137 Tokens per Sec: 26676.645661941326
Epoch Step: 735 / 819 Loss: 23.429853439331055 Tokens per Sec: 26555.043991382023
Epoch Step: 740 / 819 Loss: 23.750059127807617 Tokens per Sec: 23378.41914645331
Epoch Step: 745 / 819 Loss: 21.71115493774414 Tokens per Sec: 25068.947012891134
Epoch Step: 750 / 819 Loss: 17.952669143676758 Tokens per Sec: 25018.333910559722
Epoch Step: 755 / 819 Loss: 16.554311752319336 Tokens per Sec: 27181.187649698153
Epoch Step: 760 / 819 Loss: 19.021133422851562 Tokens per Sec: 28488.49108440107
Epoch Step: 765 / 819 Loss: 17.08489990234375 Tokens per Sec: 27569.94001156474
Epoch Step: 770 / 819 Loss: 112.91561126708984 Tokens per Sec: 26730.40034400395
Epoch Step: 775 / 819 Loss: 21.472349166870117 Tokens per Sec: 23737.083356379313
Epoch Step: 780 / 819 Loss: 18.056814193725586 Tokens per Sec: 24843.931794081942
Epoch Step: 785 / 819 Loss: 161.1707305908203 Tokens per Sec: 23323.458361836987
Epoch Step: 790 / 819 Loss: 17.621238708496094 Tokens per Sec: 27787.82039651011
Epoch Step: 795 / 819 Loss: 22.894542694091797 Tokens per Sec: 25210.328975198856
Epoch Step: 800 / 819 Loss: 16.50360107421875 Tokens per Sec: 24206.148521300427
Epoch Step: 805 / 819 Loss: 17.363691329956055 Tokens per Sec: 18655.62137952885
Epoch Step: 810 / 819 Loss: 18.013450622558594 Tokens per Sec: 24381.679917446516
Epoch Step: 815 / 819 Loss: 19.738632202148438 Tokens per Sec: 23322.31622900359
Epoch ended with duration 0:02:31.375703
Train perplexity: 1.6342548530571692
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.350907
Validation perplexity: 1.7459160492359158
Epoch 25 / 1000
Epoch Step: 5 / 819 Loss: 13.91480541229248 Tokens per Sec: 27152.07613025529
Epoch Step: 10 / 819 Loss: 19.004497528076172 Tokens per Sec: 27521.459099399442
Epoch Step: 15 / 819 Loss: 21.14598274230957 Tokens per Sec: 23556.73534834354
Epoch Step: 20 / 819 Loss: 13.74988079071045 Tokens per Sec: 27340.00624875631
Epoch Step: 25 / 819 Loss: 19.671476364135742 Tokens per Sec: 25154.62118179393
Epoch Step: 30 / 819 Loss: 13.745162963867188 Tokens per Sec: 26596.133811513773
Epoch Step: 35 / 819 Loss: 20.005640029907227 Tokens per Sec: 27510.143493342905
Epoch Step: 40 / 819 Loss: 17.824844360351562 Tokens per Sec: 28140.61105210587
Epoch Step: 45 / 819 Loss: 22.915023803710938 Tokens per Sec: 24637.107938470577
Epoch Step: 50 / 819 Loss: 18.238332748413086 Tokens per Sec: 26218.505551704835
Epoch Step: 55 / 819 Loss: 14.606945991516113 Tokens per Sec: 24619.543587592372
Epoch Step: 60 / 819 Loss: 19.71491241455078 Tokens per Sec: 24962.057388149417
Epoch Step: 65 / 819 Loss: 22.04652976989746 Tokens per Sec: 27027.215601248736
Epoch Step: 70 / 819 Loss: 14.698933601379395 Tokens per Sec: 26077.462513215225
Epoch Step: 75 / 819 Loss: 136.11666870117188 Tokens per Sec: 25195.358346311765
Epoch Step: 80 / 819 Loss: 19.17087745666504 Tokens per Sec: 24267.361980718662
Epoch Step: 85 / 819 Loss: 19.10240364074707 Tokens per Sec: 25911.611764189198
Epoch Step: 90 / 819 Loss: 17.54171371459961 Tokens per Sec: 24637.5846547493
Epoch Step: 95 / 819 Loss: 15.029382705688477 Tokens per Sec: 25328.356659183
Epoch Step: 100 / 819 Loss: 16.212356567382812 Tokens per Sec: 25399.61185939139
Epoch Step: 105 / 819 Loss: 218.8765869140625 Tokens per Sec: 26730.38392884173
Epoch Step: 110 / 819 Loss: 17.629606246948242 Tokens per Sec: 25870.973676995287
Epoch Step: 115 / 819 Loss: 16.338035583496094 Tokens per Sec: 24916.74758206092
Epoch Step: 120 / 819 Loss: 131.4593963623047 Tokens per Sec: 26474.85760272985
Epoch Step: 125 / 819 Loss: 20.41683006286621 Tokens per Sec: 26704.8016497955
Epoch Step: 130 / 819 Loss: 20.171567916870117 Tokens per Sec: 24685.957572626277
Epoch Step: 135 / 819 Loss: 19.228723526000977 Tokens per Sec: 25065.340092711685
Epoch Step: 140 / 819 Loss: 19.391277313232422 Tokens per Sec: 26350.14381449437
Epoch Step: 145 / 819 Loss: 18.11618995666504 Tokens per Sec: 24239.192671838835
Epoch Step: 150 / 819 Loss: 18.228307723999023 Tokens per Sec: 25825.467726505834
Epoch Step: 155 / 819 Loss: 98.33914184570312 Tokens per Sec: 26057.91915589785
Epoch Step: 160 / 819 Loss: 23.750102996826172 Tokens per Sec: 27310.102211653662
Epoch Step: 165 / 819 Loss: 19.42052459716797 Tokens per Sec: 25325.073420061388
Epoch Step: 170 / 819 Loss: 174.77297973632812 Tokens per Sec: 24864.23609269058
Epoch Step: 175 / 819 Loss: 17.40338897705078 Tokens per Sec: 26684.232454515455
Epoch Step: 180 / 819 Loss: 23.802827835083008 Tokens per Sec: 26243.462535302744
Epoch Step: 185 / 819 Loss: 16.000324249267578 Tokens per Sec: 26032.26789170803
Epoch Step: 190 / 819 Loss: 17.659313201904297 Tokens per Sec: 25849.47879577527
Epoch Step: 195 / 819 Loss: 23.461713790893555 Tokens per Sec: 25060.989242575077
Epoch Step: 200 / 819 Loss: 13.367865562438965 Tokens per Sec: 23698.82857111339
Epoch Step: 205 / 819 Loss: 155.8813934326172 Tokens per Sec: 25652.76688300115
Epoch Step: 210 / 819 Loss: 20.853052139282227 Tokens per Sec: 27378.361379109127
Epoch Step: 215 / 819 Loss: 27.675065994262695 Tokens per Sec: 28200.25676025392
Epoch Step: 220 / 819 Loss: 27.77237892150879 Tokens per Sec: 26093.218327878214
Epoch Step: 225 / 819 Loss: 18.40583038330078 Tokens per Sec: 25843.93527430066
Epoch Step: 230 / 819 Loss: 266.6346435546875 Tokens per Sec: 25738.515466935954
Epoch Step: 235 / 819 Loss: 16.620141983032227 Tokens per Sec: 28016.957914147282
Epoch Step: 240 / 819 Loss: 25.40961456298828 Tokens per Sec: 25078.72641597934
Epoch Step: 245 / 819 Loss: 21.4128475189209 Tokens per Sec: 24314.2646904935
Epoch Step: 250 / 819 Loss: 113.03285217285156 Tokens per Sec: 28422.159471738414
Epoch Step: 255 / 819 Loss: 20.075027465820312 Tokens per Sec: 24480.880345149155
Epoch Step: 260 / 819 Loss: 22.392345428466797 Tokens per Sec: 24808.22073569465
Epoch Step: 265 / 819 Loss: 21.554468154907227 Tokens per Sec: 27595.739098494872
Epoch Step: 270 / 819 Loss: 14.371307373046875 Tokens per Sec: 24892.205461340604
Epoch Step: 275 / 819 Loss: 16.194198608398438 Tokens per Sec: 22543.04176226169
Epoch Step: 280 / 819 Loss: 20.86182403564453 Tokens per Sec: 25944.91185096355
Epoch Step: 285 / 819 Loss: 20.61655616760254 Tokens per Sec: 25263.346666495283
Epoch Step: 290 / 819 Loss: 20.851716995239258 Tokens per Sec: 26419.912597241953
Epoch Step: 295 / 819 Loss: 16.84511947631836 Tokens per Sec: 25922.854017306254
Epoch Step: 300 / 819 Loss: 246.2523193359375 Tokens per Sec: 24732.31615157713
Epoch Step: 305 / 819 Loss: 15.071760177612305 Tokens per Sec: 24589.66983044119
Epoch Step: 310 / 819 Loss: 15.806525230407715 Tokens per Sec: 24467.33178740234
Epoch Step: 315 / 819 Loss: 16.145179748535156 Tokens per Sec: 28078.940204181945
Epoch Step: 320 / 819 Loss: 19.507083892822266 Tokens per Sec: 25165.045272391708
Epoch Step: 325 / 819 Loss: 18.620121002197266 Tokens per Sec: 27831.866267988295
Epoch Step: 330 / 819 Loss: 19.22323989868164 Tokens per Sec: 26471.5332076346
Epoch Step: 335 / 819 Loss: 271.3280334472656 Tokens per Sec: 24642.07600094959
Epoch Step: 340 / 819 Loss: 17.9967098236084 Tokens per Sec: 26245.895983268478
Epoch Step: 345 / 819 Loss: 18.591453552246094 Tokens per Sec: 23695.490540867304
Epoch Step: 350 / 819 Loss: 16.165922164916992 Tokens per Sec: 26762.55401865219
Epoch Step: 355 / 819 Loss: 23.014829635620117 Tokens per Sec: 25797.5276568073
Epoch Step: 360 / 819 Loss: 21.596424102783203 Tokens per Sec: 23446.934541737915
Epoch Step: 365 / 819 Loss: 20.78831672668457 Tokens per Sec: 26075.986625375812
Epoch Step: 370 / 819 Loss: 17.214969635009766 Tokens per Sec: 26223.665096286873
Epoch Step: 375 / 819 Loss: 15.291049003601074 Tokens per Sec: 25659.834605535027
Epoch Step: 380 / 819 Loss: 16.91267967224121 Tokens per Sec: 25227.726925745348
Epoch Step: 385 / 819 Loss: 19.55608558654785 Tokens per Sec: 25051.147595557755
Epoch Step: 390 / 819 Loss: 19.077709197998047 Tokens per Sec: 25289.770098953803
Epoch Step: 395 / 819 Loss: 19.488536834716797 Tokens per Sec: 25693.69200560334
Epoch Step: 400 / 819 Loss: 243.587158203125 Tokens per Sec: 27502.796078068415
Epoch Step: 405 / 819 Loss: 13.990829467773438 Tokens per Sec: 24907.176867947393
Epoch Step: 410 / 819 Loss: 14.861462593078613 Tokens per Sec: 27114.929165446832
Epoch Step: 415 / 819 Loss: 15.498382568359375 Tokens per Sec: 25760.88272156015
Epoch Step: 420 / 819 Loss: 17.84317398071289 Tokens per Sec: 24951.9342909318
Epoch Step: 425 / 819 Loss: 14.419577598571777 Tokens per Sec: 25943.564436577966
Epoch Step: 430 / 819 Loss: 20.75316619873047 Tokens per Sec: 24441.457967832604
Epoch Step: 435 / 819 Loss: 18.493684768676758 Tokens per Sec: 26605.891936431493
Epoch Step: 440 / 819 Loss: 18.621212005615234 Tokens per Sec: 26369.337364803254
Epoch Step: 445 / 819 Loss: 20.90106201171875 Tokens per Sec: 26294.690773895614
Epoch Step: 450 / 819 Loss: 23.43630599975586 Tokens per Sec: 25344.645617861268
Epoch Step: 455 / 819 Loss: 210.01263427734375 Tokens per Sec: 27338.315601565737
Epoch Step: 460 / 819 Loss: 20.345739364624023 Tokens per Sec: 24244.721124679978
Epoch Step: 465 / 819 Loss: 14.109854698181152 Tokens per Sec: 26541.93381454403
Epoch Step: 470 / 819 Loss: 19.318897247314453 Tokens per Sec: 27024.895118934215
Epoch Step: 475 / 819 Loss: 19.44682502746582 Tokens per Sec: 26665.51617647416
Epoch Step: 480 / 819 Loss: 15.42597484588623 Tokens per Sec: 25180.238172712074
Epoch Step: 485 / 819 Loss: 17.776426315307617 Tokens per Sec: 26679.01348326376
Epoch Step: 490 / 819 Loss: 20.69470977783203 Tokens per Sec: 23891.21423757267
Epoch Step: 495 / 819 Loss: 20.60797882080078 Tokens per Sec: 26272.35033105819
Epoch Step: 500 / 819 Loss: 23.35588836669922 Tokens per Sec: 23579.15610079347
Epoch Step: 505 / 819 Loss: 21.3509578704834 Tokens per Sec: 25594.34079548454
Epoch Step: 510 / 819 Loss: 161.06585693359375 Tokens per Sec: 26786.20259347237
Epoch Step: 515 / 819 Loss: 19.66141128540039 Tokens per Sec: 26181.214309031122
Epoch Step: 520 / 819 Loss: 14.390695571899414 Tokens per Sec: 25045.311646887047
Epoch Step: 525 / 819 Loss: 17.866613388061523 Tokens per Sec: 26494.387087639814
Epoch Step: 530 / 819 Loss: 21.257137298583984 Tokens per Sec: 26352.90061233743
Epoch Step: 535 / 819 Loss: 16.328792572021484 Tokens per Sec: 25330.021466805883
Epoch Step: 540 / 819 Loss: 18.643768310546875 Tokens per Sec: 24777.058844091585
Epoch Step: 545 / 819 Loss: 13.72802734375 Tokens per Sec: 27343.916949678485
Epoch Step: 550 / 819 Loss: 21.952251434326172 Tokens per Sec: 26284.91527571355
Epoch Step: 555 / 819 Loss: 16.01161766052246 Tokens per Sec: 28243.340403818504
Epoch Step: 560 / 819 Loss: 14.040023803710938 Tokens per Sec: 26161.881698078407
Epoch Step: 565 / 819 Loss: 22.710521697998047 Tokens per Sec: 26189.3864262711
Epoch Step: 570 / 819 Loss: 22.595352172851562 Tokens per Sec: 24970.289034138386
Epoch Step: 575 / 819 Loss: 22.51974868774414 Tokens per Sec: 27310.065121386808
Epoch Step: 580 / 819 Loss: 22.10662078857422 Tokens per Sec: 26696.287270722903
Epoch Step: 585 / 819 Loss: 20.862323760986328 Tokens per Sec: 24694.312779735825
Epoch Step: 590 / 819 Loss: 16.694583892822266 Tokens per Sec: 23733.62746505568
Epoch Step: 595 / 819 Loss: 20.83277702331543 Tokens per Sec: 24591.328108474947
Epoch Step: 600 / 819 Loss: 19.78836441040039 Tokens per Sec: 24723.058781479944
Epoch Step: 605 / 819 Loss: 24.22219467163086 Tokens per Sec: 24698.50195878342
Epoch Step: 610 / 819 Loss: 16.149866104125977 Tokens per Sec: 25399.61806126732
Epoch Step: 615 / 819 Loss: 24.220613479614258 Tokens per Sec: 24926.57249827205
Epoch Step: 620 / 819 Loss: 21.678823471069336 Tokens per Sec: 25744.551975459366
Epoch Step: 625 / 819 Loss: 25.05843162536621 Tokens per Sec: 23760.91402595338
Epoch Step: 630 / 819 Loss: 19.666187286376953 Tokens per Sec: 24638.078935813715
Epoch Step: 635 / 819 Loss: 19.641597747802734 Tokens per Sec: 27691.53772460256
Epoch Step: 640 / 819 Loss: 16.896560668945312 Tokens per Sec: 25855.79055918111
Epoch Step: 645 / 819 Loss: 17.21463394165039 Tokens per Sec: 26955.772060340092
Epoch Step: 650 / 819 Loss: 128.2237091064453 Tokens per Sec: 26955.944363347306
Epoch Step: 655 / 819 Loss: 20.043689727783203 Tokens per Sec: 25603.384486192605
Epoch Step: 660 / 819 Loss: 178.86972045898438 Tokens per Sec: 25726.327054309142
Epoch Step: 665 / 819 Loss: 19.424726486206055 Tokens per Sec: 25149.191307619076
Epoch Step: 670 / 819 Loss: 15.747467041015625 Tokens per Sec: 25993.98683927141
Epoch Step: 675 / 819 Loss: 18.72995376586914 Tokens per Sec: 24961.200493912285
Epoch Step: 680 / 819 Loss: 20.205596923828125 Tokens per Sec: 26208.013579994655
Epoch Step: 685 / 819 Loss: 17.135414123535156 Tokens per Sec: 26712.33299561504
Epoch Step: 690 / 819 Loss: 17.539859771728516 Tokens per Sec: 23726.807090310045
Epoch Step: 695 / 819 Loss: 16.277679443359375 Tokens per Sec: 25964.859002868536
Epoch Step: 700 / 819 Loss: 138.0404052734375 Tokens per Sec: 25465.85105508697
Epoch Step: 705 / 819 Loss: 17.4697208404541 Tokens per Sec: 24388.20206385223
Epoch Step: 710 / 819 Loss: 13.298277854919434 Tokens per Sec: 27235.639549256968
Epoch Step: 715 / 819 Loss: 18.697288513183594 Tokens per Sec: 26087.958821810247
Epoch Step: 720 / 819 Loss: 15.402055740356445 Tokens per Sec: 27892.932678411587
Epoch Step: 725 / 819 Loss: 22.520437240600586 Tokens per Sec: 24837.740463122893
Epoch Step: 730 / 819 Loss: 12.633757591247559 Tokens per Sec: 25967.630869917597
Epoch Step: 735 / 819 Loss: 20.27608299255371 Tokens per Sec: 24128.000513120656
Epoch Step: 740 / 819 Loss: 23.970491409301758 Tokens per Sec: 25098.72591984711
Epoch Step: 745 / 819 Loss: 91.83171081542969 Tokens per Sec: 24421.59601286274
Epoch Step: 750 / 819 Loss: 17.930910110473633 Tokens per Sec: 26368.320635188422
Epoch Step: 755 / 819 Loss: 17.940168380737305 Tokens per Sec: 26876.116505012385
Epoch Step: 760 / 819 Loss: 19.12213134765625 Tokens per Sec: 24734.167701363524
Epoch Step: 765 / 819 Loss: 24.52414894104004 Tokens per Sec: 24466.169031151898
Epoch Step: 770 / 819 Loss: 18.900615692138672 Tokens per Sec: 25345.90580251334
Epoch Step: 775 / 819 Loss: 13.992700576782227 Tokens per Sec: 27931.132608879572
Epoch Step: 780 / 819 Loss: 14.866767883300781 Tokens per Sec: 25417.954625869315
Epoch Step: 785 / 819 Loss: 17.849733352661133 Tokens per Sec: 26805.14331395104
Epoch Step: 790 / 819 Loss: 21.3332576751709 Tokens per Sec: 26940.938453937633
Epoch Step: 795 / 819 Loss: 177.72747802734375 Tokens per Sec: 24025.65431593914
Epoch Step: 800 / 819 Loss: 16.492233276367188 Tokens per Sec: 25327.594495616984
Epoch Step: 805 / 819 Loss: 16.539628982543945 Tokens per Sec: 24763.28970637312
Epoch Step: 810 / 819 Loss: 125.43292999267578 Tokens per Sec: 23127.741038084314
Epoch Step: 815 / 819 Loss: 19.047693252563477 Tokens per Sec: 21749.757528211936
Epoch ended with duration 0:02:31.359554
Train perplexity: 1.5941237174168699
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.388210
Validation perplexity: 1.669668002528026
Model saved checkpoint!
Epoch 26 / 1000
Epoch Step: 5 / 819 Loss: 16.03123664855957 Tokens per Sec: 25134.508874189534
Epoch Step: 10 / 819 Loss: 139.22613525390625 Tokens per Sec: 24863.583692431443
Epoch Step: 15 / 819 Loss: 188.71270751953125 Tokens per Sec: 25681.63047098133
Epoch Step: 20 / 819 Loss: 22.329042434692383 Tokens per Sec: 25830.07059966639
Epoch Step: 25 / 819 Loss: 20.941871643066406 Tokens per Sec: 26209.140798158664
Epoch Step: 30 / 819 Loss: 18.83040428161621 Tokens per Sec: 23885.503765938967
Epoch Step: 35 / 819 Loss: 20.035106658935547 Tokens per Sec: 23844.45526913494
Epoch Step: 40 / 819 Loss: 14.814445495605469 Tokens per Sec: 25269.52205364859
Epoch Step: 45 / 819 Loss: 19.678647994995117 Tokens per Sec: 25237.56867501714
Epoch Step: 50 / 819 Loss: 19.238603591918945 Tokens per Sec: 25035.01876232271
Epoch Step: 55 / 819 Loss: 15.07492733001709 Tokens per Sec: 26615.470217966395
Epoch Step: 60 / 819 Loss: 14.628355026245117 Tokens per Sec: 28494.991613715505
Epoch Step: 65 / 819 Loss: 22.01217269897461 Tokens per Sec: 25495.556093271152
Epoch Step: 70 / 819 Loss: 16.390607833862305 Tokens per Sec: 27506.32289550382
Epoch Step: 75 / 819 Loss: 20.345142364501953 Tokens per Sec: 24217.025397611294
Epoch Step: 80 / 819 Loss: 14.989089965820312 Tokens per Sec: 29180.45835871334
Epoch Step: 85 / 819 Loss: 17.50068473815918 Tokens per Sec: 26620.842903723453
Epoch Step: 90 / 819 Loss: 19.0402889251709 Tokens per Sec: 23693.89188101567
Epoch Step: 95 / 819 Loss: 15.813672065734863 Tokens per Sec: 26495.98196305368
Epoch Step: 100 / 819 Loss: 19.348583221435547 Tokens per Sec: 24381.58159058061
Epoch Step: 105 / 819 Loss: 214.63037109375 Tokens per Sec: 23853.708188309916
Epoch Step: 110 / 819 Loss: 19.410615921020508 Tokens per Sec: 26276.260153461884
Epoch Step: 115 / 819 Loss: 14.691530227661133 Tokens per Sec: 26250.828256037872
Epoch Step: 120 / 819 Loss: 19.685415267944336 Tokens per Sec: 25583.556245434527
Epoch Step: 125 / 819 Loss: 24.24272918701172 Tokens per Sec: 24105.708548929557
Epoch Step: 130 / 819 Loss: 13.538942337036133 Tokens per Sec: 24136.487687174726
Epoch Step: 135 / 819 Loss: 22.57388687133789 Tokens per Sec: 27842.52038584649
Epoch Step: 140 / 819 Loss: 17.924396514892578 Tokens per Sec: 24409.958701279767
Epoch Step: 145 / 819 Loss: 15.494794845581055 Tokens per Sec: 24770.14662155655
Epoch Step: 150 / 819 Loss: 17.144161224365234 Tokens per Sec: 24862.619180788173
Epoch Step: 155 / 819 Loss: 20.248315811157227 Tokens per Sec: 27319.645805826953
Epoch Step: 160 / 819 Loss: 17.742366790771484 Tokens per Sec: 26358.20009308546
Epoch Step: 165 / 819 Loss: 183.97854614257812 Tokens per Sec: 26354.333894048897
Epoch Step: 170 / 819 Loss: 23.337873458862305 Tokens per Sec: 26001.28669616262
Epoch Step: 175 / 819 Loss: 20.88066864013672 Tokens per Sec: 25636.110583598933
Epoch Step: 180 / 819 Loss: 251.16551208496094 Tokens per Sec: 25857.139293614942
Epoch Step: 185 / 819 Loss: 16.88412857055664 Tokens per Sec: 26367.367830362182
Epoch Step: 190 / 819 Loss: 130.4891357421875 Tokens per Sec: 26048.916344308407
Epoch Step: 195 / 819 Loss: 19.294401168823242 Tokens per Sec: 26489.44126544835
Epoch Step: 200 / 819 Loss: 22.486459732055664 Tokens per Sec: 26887.579256208068
Epoch Step: 205 / 819 Loss: 21.81393814086914 Tokens per Sec: 26955.575116724012
Epoch Step: 210 / 819 Loss: 17.574203491210938 Tokens per Sec: 25812.00057224729
Epoch Step: 215 / 819 Loss: 16.15169334411621 Tokens per Sec: 25898.8199687016
Epoch Step: 220 / 819 Loss: 25.60072898864746 Tokens per Sec: 23583.271984154464
Epoch Step: 225 / 819 Loss: 14.12887191772461 Tokens per Sec: 24129.210276956204
Epoch Step: 230 / 819 Loss: 18.424894332885742 Tokens per Sec: 24991.61956126262
Epoch Step: 235 / 819 Loss: 15.982491493225098 Tokens per Sec: 24736.710179173973
Epoch Step: 240 / 819 Loss: 21.87096405029297 Tokens per Sec: 26442.319947226748
Epoch Step: 245 / 819 Loss: 19.414657592773438 Tokens per Sec: 23471.25655294805
Epoch Step: 250 / 819 Loss: 15.260390281677246 Tokens per Sec: 27351.41034189788
Epoch Step: 255 / 819 Loss: 11.0714111328125 Tokens per Sec: 26554.983020894706
Epoch Step: 260 / 819 Loss: 13.663727760314941 Tokens per Sec: 27418.456384319656
Epoch Step: 265 / 819 Loss: 18.511194229125977 Tokens per Sec: 23614.82152613609
Epoch Step: 270 / 819 Loss: 13.576148986816406 Tokens per Sec: 25535.901244431196
Epoch Step: 275 / 819 Loss: 20.089902877807617 Tokens per Sec: 26239.782960539207
Epoch Step: 280 / 819 Loss: 216.63986206054688 Tokens per Sec: 27969.27680322348
Epoch Step: 285 / 819 Loss: 199.4269561767578 Tokens per Sec: 25779.92956303347
Epoch Step: 290 / 819 Loss: 22.411312103271484 Tokens per Sec: 26247.369498366996
Epoch Step: 295 / 819 Loss: 24.799524307250977 Tokens per Sec: 26527.363546659533
Epoch Step: 300 / 819 Loss: 19.347976684570312 Tokens per Sec: 26206.087901884417
Epoch Step: 305 / 819 Loss: 21.5797176361084 Tokens per Sec: 28077.78874971497
Epoch Step: 310 / 819 Loss: 16.29368019104004 Tokens per Sec: 26446.87493842767
Epoch Step: 315 / 819 Loss: 19.859600067138672 Tokens per Sec: 24889.76040903556
Epoch Step: 320 / 819 Loss: 15.135787010192871 Tokens per Sec: 25231.65692808838
Epoch Step: 325 / 819 Loss: 18.92815399169922 Tokens per Sec: 24143.241942460503
Epoch Step: 330 / 819 Loss: 20.006465911865234 Tokens per Sec: 25299.013723092216
Epoch Step: 335 / 819 Loss: 24.316181182861328 Tokens per Sec: 25430.220022786285
Epoch Step: 340 / 819 Loss: 14.400008201599121 Tokens per Sec: 24857.78853870218
Epoch Step: 345 / 819 Loss: 23.639755249023438 Tokens per Sec: 24515.876156531223
Epoch Step: 350 / 819 Loss: 17.502187728881836 Tokens per Sec: 27160.002998489297
Epoch Step: 355 / 819 Loss: 17.971920013427734 Tokens per Sec: 27805.1961580366
Epoch Step: 360 / 819 Loss: 13.827920913696289 Tokens per Sec: 24905.240459435096
Epoch Step: 365 / 819 Loss: 19.315174102783203 Tokens per Sec: 26146.93337936037
Epoch Step: 370 / 819 Loss: 14.398505210876465 Tokens per Sec: 23594.95297037809
Epoch Step: 375 / 819 Loss: 17.272192001342773 Tokens per Sec: 26069.249973601916
Epoch Step: 380 / 819 Loss: 17.070262908935547 Tokens per Sec: 27303.414770428994
Epoch Step: 385 / 819 Loss: 238.28411865234375 Tokens per Sec: 24616.23669160239
Epoch Step: 390 / 819 Loss: 20.070539474487305 Tokens per Sec: 25914.40827211659
Epoch Step: 395 / 819 Loss: 27.928142547607422 Tokens per Sec: 24981.8431451321
Epoch Step: 400 / 819 Loss: 23.629825592041016 Tokens per Sec: 27267.705463961374
Epoch Step: 405 / 819 Loss: 203.59535217285156 Tokens per Sec: 25527.737156408657
Epoch Step: 410 / 819 Loss: 22.888378143310547 Tokens per Sec: 24511.087804970983
Epoch Step: 415 / 819 Loss: 18.55267333984375 Tokens per Sec: 27367.763650730732
Epoch Step: 420 / 819 Loss: 18.052959442138672 Tokens per Sec: 27035.47282574532
Epoch Step: 425 / 819 Loss: 17.827978134155273 Tokens per Sec: 25142.129717858617
Epoch Step: 430 / 819 Loss: 14.273926734924316 Tokens per Sec: 25970.224650071195
Epoch Step: 435 / 819 Loss: 13.678730010986328 Tokens per Sec: 24758.235138974916
Epoch Step: 440 / 819 Loss: 14.79592514038086 Tokens per Sec: 25930.63876382554
Epoch Step: 445 / 819 Loss: 188.09304809570312 Tokens per Sec: 24813.010779233213
Epoch Step: 450 / 819 Loss: 230.3065643310547 Tokens per Sec: 23569.98849182677
Epoch Step: 455 / 819 Loss: 20.20368003845215 Tokens per Sec: 26403.890523907376
Epoch Step: 460 / 819 Loss: 250.65928649902344 Tokens per Sec: 26240.79479127691
Epoch Step: 465 / 819 Loss: 15.203346252441406 Tokens per Sec: 26942.511562206728
Epoch Step: 470 / 819 Loss: 14.396228790283203 Tokens per Sec: 27655.658119357617
Epoch Step: 475 / 819 Loss: 148.24981689453125 Tokens per Sec: 27146.64957018791
Epoch Step: 480 / 819 Loss: 12.76659870147705 Tokens per Sec: 27690.520725293318
Epoch Step: 485 / 819 Loss: 21.298131942749023 Tokens per Sec: 23706.382491530236
Epoch Step: 490 / 819 Loss: 173.33236694335938 Tokens per Sec: 23778.78303142401
Epoch Step: 495 / 819 Loss: 21.161766052246094 Tokens per Sec: 24490.89942667211
Epoch Step: 500 / 819 Loss: 17.64306640625 Tokens per Sec: 28056.42602922896
Epoch Step: 505 / 819 Loss: 15.756902694702148 Tokens per Sec: 24804.879624961926
Epoch Step: 510 / 819 Loss: 22.22101402282715 Tokens per Sec: 26691.083751821036
Epoch Step: 515 / 819 Loss: 23.878618240356445 Tokens per Sec: 24588.124609925286
Epoch Step: 520 / 819 Loss: 15.730583190917969 Tokens per Sec: 25683.956031560698
Epoch Step: 525 / 819 Loss: 16.90729331970215 Tokens per Sec: 25126.33929362399
Epoch Step: 530 / 819 Loss: 14.965198516845703 Tokens per Sec: 27458.916428909328
Epoch Step: 535 / 819 Loss: 18.93813133239746 Tokens per Sec: 24451.267524233102
Epoch Step: 540 / 819 Loss: 16.802907943725586 Tokens per Sec: 26995.95614946781
Epoch Step: 545 / 819 Loss: 22.546112060546875 Tokens per Sec: 24469.606954227565
Epoch Step: 550 / 819 Loss: 14.396458625793457 Tokens per Sec: 24898.959698714843
Epoch Step: 555 / 819 Loss: 12.42971420288086 Tokens per Sec: 26875.702524515687
Epoch Step: 560 / 819 Loss: 20.325836181640625 Tokens per Sec: 26437.435563344592
Epoch Step: 565 / 819 Loss: 27.512895584106445 Tokens per Sec: 24625.807891866516
Epoch Step: 570 / 819 Loss: 20.185556411743164 Tokens per Sec: 28031.371870249543
Epoch Step: 575 / 819 Loss: 21.968177795410156 Tokens per Sec: 27109.145402583574
Epoch Step: 580 / 819 Loss: 16.96538543701172 Tokens per Sec: 26721.98872952086
Epoch Step: 585 / 819 Loss: 14.202220916748047 Tokens per Sec: 25365.665514353266
Epoch Step: 590 / 819 Loss: 16.742258071899414 Tokens per Sec: 26237.23353085141
Epoch Step: 595 / 819 Loss: 22.359760284423828 Tokens per Sec: 24772.799574036773
Epoch Step: 600 / 819 Loss: 16.29575538635254 Tokens per Sec: 24550.465003933532
Epoch Step: 605 / 819 Loss: 19.84136390686035 Tokens per Sec: 25668.95934369595
Epoch Step: 610 / 819 Loss: 22.897220611572266 Tokens per Sec: 25604.19788794274
Epoch Step: 615 / 819 Loss: 228.15524291992188 Tokens per Sec: 23939.680064198754
Epoch Step: 620 / 819 Loss: 20.209251403808594 Tokens per Sec: 26825.021332863373
Epoch Step: 625 / 819 Loss: 24.775346755981445 Tokens per Sec: 26091.704830865005
Epoch Step: 630 / 819 Loss: 23.241029739379883 Tokens per Sec: 24788.425677701507
Epoch Step: 635 / 819 Loss: 25.073055267333984 Tokens per Sec: 25720.826550540707
Epoch Step: 640 / 819 Loss: 20.826181411743164 Tokens per Sec: 21865.21070562676
Epoch Step: 645 / 819 Loss: 21.757568359375 Tokens per Sec: 25193.41834250258
Epoch Step: 650 / 819 Loss: 18.271770477294922 Tokens per Sec: 26418.758178753065
Epoch Step: 655 / 819 Loss: 20.706300735473633 Tokens per Sec: 25291.808145345844
Epoch Step: 660 / 819 Loss: 21.36322021484375 Tokens per Sec: 23290.921159377536
Epoch Step: 665 / 819 Loss: 24.53607177734375 Tokens per Sec: 27698.22290369272
Epoch Step: 670 / 819 Loss: 182.55575561523438 Tokens per Sec: 27012.69939823205
Epoch Step: 675 / 819 Loss: 18.75408172607422 Tokens per Sec: 28544.592678118082
Epoch Step: 680 / 819 Loss: 185.94439697265625 Tokens per Sec: 26539.5724197238
Epoch Step: 685 / 819 Loss: 19.851741790771484 Tokens per Sec: 25389.309507442696
Epoch Step: 690 / 819 Loss: 23.114622116088867 Tokens per Sec: 23961.42382511688
Epoch Step: 695 / 819 Loss: 14.17535400390625 Tokens per Sec: 27689.047989291183
Epoch Step: 700 / 819 Loss: 200.84283447265625 Tokens per Sec: 24838.555525600634
Epoch Step: 705 / 819 Loss: 19.401674270629883 Tokens per Sec: 25094.05080836285
Epoch Step: 710 / 819 Loss: 127.66978454589844 Tokens per Sec: 23196.103023577452
Epoch Step: 715 / 819 Loss: 28.75726890563965 Tokens per Sec: 25369.889295863577
Epoch Step: 720 / 819 Loss: 109.1800537109375 Tokens per Sec: 24774.58932230185
Epoch Step: 725 / 819 Loss: 25.202375411987305 Tokens per Sec: 27052.07732186248
Epoch Step: 730 / 819 Loss: 25.433988571166992 Tokens per Sec: 26506.234365235472
Epoch Step: 735 / 819 Loss: 22.626575469970703 Tokens per Sec: 24533.219414475847
Epoch Step: 740 / 819 Loss: 22.423202514648438 Tokens per Sec: 24227.7662045587
Epoch Step: 745 / 819 Loss: 24.822860717773438 Tokens per Sec: 26705.967090098584
Epoch Step: 750 / 819 Loss: 21.94052505493164 Tokens per Sec: 25030.01783013561
Epoch Step: 755 / 819 Loss: 14.807844161987305 Tokens per Sec: 26810.199818093457
Epoch Step: 760 / 819 Loss: 18.429075241088867 Tokens per Sec: 26358.117336609113
Epoch Step: 765 / 819 Loss: 21.080781936645508 Tokens per Sec: 26511.65493147367
Epoch Step: 770 / 819 Loss: 24.2915096282959 Tokens per Sec: 25682.68993685168
Epoch Step: 775 / 819 Loss: 21.940279006958008 Tokens per Sec: 23722.831433491476
Epoch Step: 780 / 819 Loss: 17.081504821777344 Tokens per Sec: 24602.719584323906
Epoch Step: 785 / 819 Loss: 19.009567260742188 Tokens per Sec: 27358.81886133145
Epoch Step: 790 / 819 Loss: 19.81621551513672 Tokens per Sec: 24513.689485458613
Epoch Step: 795 / 819 Loss: 21.242023468017578 Tokens per Sec: 27658.023563508683
Epoch Step: 800 / 819 Loss: 18.781267166137695 Tokens per Sec: 24822.764673133843
Epoch Step: 805 / 819 Loss: 17.605445861816406 Tokens per Sec: 23657.855297850747
Epoch Step: 810 / 819 Loss: 19.03409767150879 Tokens per Sec: 24256.912761972184
Epoch Step: 815 / 819 Loss: 19.26096534729004 Tokens per Sec: 25272.89693166861
Epoch ended with duration 0:02:31.539152
Train perplexity: 1.6850631367241609
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.378649
Validation perplexity: 1.6770419314557015
Epoch 27 / 1000
Epoch Step: 5 / 819 Loss: 20.512834548950195 Tokens per Sec: 24538.144274580784
Epoch Step: 10 / 819 Loss: 15.858434677124023 Tokens per Sec: 26842.354261114626
Epoch Step: 15 / 819 Loss: 121.82723236083984 Tokens per Sec: 25347.06457089899
Epoch Step: 20 / 819 Loss: 25.798582077026367 Tokens per Sec: 26668.04745314759
Epoch Step: 25 / 819 Loss: 22.73850440979004 Tokens per Sec: 23281.516988951393
Epoch Step: 30 / 819 Loss: 20.09111785888672 Tokens per Sec: 26340.178753820546
Epoch Step: 35 / 819 Loss: 19.857437133789062 Tokens per Sec: 25182.00580003985
Epoch Step: 40 / 819 Loss: 13.191492080688477 Tokens per Sec: 26294.909201106715
Epoch Step: 45 / 819 Loss: 22.318965911865234 Tokens per Sec: 26493.86024722445
Epoch Step: 50 / 819 Loss: 21.537267684936523 Tokens per Sec: 26878.512180042042
Epoch Step: 55 / 819 Loss: 14.770054817199707 Tokens per Sec: 24153.50263172578
Epoch Step: 60 / 819 Loss: 14.449748992919922 Tokens per Sec: 27826.962442889042
Epoch Step: 65 / 819 Loss: 21.491195678710938 Tokens per Sec: 25356.338195890185
Epoch Step: 70 / 819 Loss: 17.743812561035156 Tokens per Sec: 26088.75161267258
Epoch Step: 75 / 819 Loss: 203.67330932617188 Tokens per Sec: 26297.490445813768
Epoch Step: 80 / 819 Loss: 223.1611328125 Tokens per Sec: 24455.29730511772
Epoch Step: 85 / 819 Loss: 19.98634910583496 Tokens per Sec: 25167.637072345497
Epoch Step: 90 / 819 Loss: 207.13999938964844 Tokens per Sec: 26924.596158988483
Epoch Step: 95 / 819 Loss: 15.702532768249512 Tokens per Sec: 27217.40090668394
Epoch Step: 100 / 819 Loss: 17.962684631347656 Tokens per Sec: 24872.24241677515
Epoch Step: 105 / 819 Loss: 236.49070739746094 Tokens per Sec: 24729.295768588294
Epoch Step: 110 / 819 Loss: 250.2886505126953 Tokens per Sec: 25838.74395334213
Epoch Step: 115 / 819 Loss: 24.081188201904297 Tokens per Sec: 24933.246987277045
Epoch Step: 120 / 819 Loss: 22.600839614868164 Tokens per Sec: 27262.924716228103
Epoch Step: 125 / 819 Loss: 20.068065643310547 Tokens per Sec: 25612.338539892564
Epoch Step: 130 / 819 Loss: 19.672794342041016 Tokens per Sec: 25430.445116821338
Epoch Step: 135 / 819 Loss: 146.90237426757812 Tokens per Sec: 25437.956980113457
Epoch Step: 140 / 819 Loss: 22.225624084472656 Tokens per Sec: 25396.734544956966
Epoch Step: 145 / 819 Loss: 17.30351448059082 Tokens per Sec: 26270.54433766778
Epoch Step: 150 / 819 Loss: 21.9849796295166 Tokens per Sec: 25391.50134545838
Epoch Step: 155 / 819 Loss: 19.739849090576172 Tokens per Sec: 24215.444310994175
Epoch Step: 160 / 819 Loss: 22.82876968383789 Tokens per Sec: 24543.952326115275
Epoch Step: 165 / 819 Loss: 18.08124542236328 Tokens per Sec: 23956.26221576376
Epoch Step: 170 / 819 Loss: 14.017542839050293 Tokens per Sec: 26356.91414001748
Epoch Step: 175 / 819 Loss: 20.53886604309082 Tokens per Sec: 26395.32766776606
Epoch Step: 180 / 819 Loss: 19.70317268371582 Tokens per Sec: 27378.53748364552
Epoch Step: 185 / 819 Loss: 13.334259033203125 Tokens per Sec: 26820.638261836444
Epoch Step: 190 / 819 Loss: 20.627025604248047 Tokens per Sec: 27636.702695707983
Epoch Step: 195 / 819 Loss: 18.294769287109375 Tokens per Sec: 26359.14787765691
Epoch Step: 200 / 819 Loss: 21.14006233215332 Tokens per Sec: 24460.19755303078
Epoch Step: 205 / 819 Loss: 15.364628791809082 Tokens per Sec: 26613.103161468454
Epoch Step: 210 / 819 Loss: 285.33197021484375 Tokens per Sec: 24800.171097363025
Epoch Step: 215 / 819 Loss: 21.467161178588867 Tokens per Sec: 27778.386878926874
Epoch Step: 220 / 819 Loss: 100.7951431274414 Tokens per Sec: 27388.26539938752
Epoch Step: 225 / 819 Loss: 16.100372314453125 Tokens per Sec: 25533.63775141144
Epoch Step: 230 / 819 Loss: 17.430957794189453 Tokens per Sec: 28310.99984352642
Epoch Step: 235 / 819 Loss: 23.342012405395508 Tokens per Sec: 25980.126336919624
Epoch Step: 240 / 819 Loss: 15.35709285736084 Tokens per Sec: 25761.65579765063
Epoch Step: 245 / 819 Loss: 258.0506591796875 Tokens per Sec: 25647.48331138633
Epoch Step: 250 / 819 Loss: 23.97154998779297 Tokens per Sec: 26643.746334047013
Epoch Step: 255 / 819 Loss: 22.3973445892334 Tokens per Sec: 25941.3959782654
Epoch Step: 260 / 819 Loss: 18.009742736816406 Tokens per Sec: 23622.94833354544
Epoch Step: 265 / 819 Loss: 15.486586570739746 Tokens per Sec: 26151.5337364724
Epoch Step: 270 / 819 Loss: 19.360492706298828 Tokens per Sec: 26289.176471596176
Epoch Step: 275 / 819 Loss: 14.081557273864746 Tokens per Sec: 27367.66780994904
Epoch Step: 280 / 819 Loss: 205.40023803710938 Tokens per Sec: 25245.685929512394
Epoch Step: 285 / 819 Loss: 14.20853042602539 Tokens per Sec: 24648.325470700474
Epoch Step: 290 / 819 Loss: 22.072330474853516 Tokens per Sec: 24827.58683405238
Epoch Step: 295 / 819 Loss: 20.488054275512695 Tokens per Sec: 23555.575595541188
Epoch Step: 300 / 819 Loss: 22.12858009338379 Tokens per Sec: 27013.23619023174
Epoch Step: 305 / 819 Loss: 22.52947235107422 Tokens per Sec: 25050.09102972427
Epoch Step: 310 / 819 Loss: 178.8299102783203 Tokens per Sec: 24837.749639440888
Epoch Step: 315 / 819 Loss: 222.0577392578125 Tokens per Sec: 25910.96585145172
Epoch Step: 320 / 819 Loss: 261.83880615234375 Tokens per Sec: 25377.485704807495
Epoch Step: 325 / 819 Loss: 19.497020721435547 Tokens per Sec: 25041.551064464744
Epoch Step: 330 / 819 Loss: 24.216318130493164 Tokens per Sec: 25179.348099902127
Epoch Step: 335 / 819 Loss: 23.419809341430664 Tokens per Sec: 27694.254405527132
Epoch Step: 340 / 819 Loss: 20.12264060974121 Tokens per Sec: 27151.71600037258
Epoch Step: 345 / 819 Loss: 171.04917907714844 Tokens per Sec: 22920.893945283147
Epoch Step: 350 / 819 Loss: 185.86502075195312 Tokens per Sec: 25160.414839111265
Epoch Step: 355 / 819 Loss: 21.324392318725586 Tokens per Sec: 28469.664259631
Epoch Step: 360 / 819 Loss: 19.180919647216797 Tokens per Sec: 24835.442277674338
Epoch Step: 365 / 819 Loss: 14.429856300354004 Tokens per Sec: 26064.671519512987
Epoch Step: 370 / 819 Loss: 18.20523452758789 Tokens per Sec: 26563.68567458097
Epoch Step: 375 / 819 Loss: 20.652359008789062 Tokens per Sec: 24435.440129293314
Epoch Step: 380 / 819 Loss: 21.432798385620117 Tokens per Sec: 24892.637228596323
Epoch Step: 385 / 819 Loss: 14.575383186340332 Tokens per Sec: 26999.21567658872
Epoch Step: 390 / 819 Loss: 23.350051879882812 Tokens per Sec: 26165.48202569467
Epoch Step: 395 / 819 Loss: 18.483320236206055 Tokens per Sec: 24831.467656392313
Epoch Step: 400 / 819 Loss: 20.75299835205078 Tokens per Sec: 25899.337984634418
Epoch Step: 405 / 819 Loss: 157.95782470703125 Tokens per Sec: 25944.158741140614
Epoch Step: 410 / 819 Loss: 20.320262908935547 Tokens per Sec: 25670.836739621413
Epoch Step: 415 / 819 Loss: 220.47711181640625 Tokens per Sec: 26385.814970212366
Epoch Step: 420 / 819 Loss: 18.020286560058594 Tokens per Sec: 27098.836285319838
Epoch Step: 425 / 819 Loss: 19.66500473022461 Tokens per Sec: 27405.40059645072
Epoch Step: 430 / 819 Loss: 17.06373405456543 Tokens per Sec: 25601.052142431323
Epoch Step: 435 / 819 Loss: 19.824371337890625 Tokens per Sec: 28052.233152532444
Epoch Step: 440 / 819 Loss: 16.917457580566406 Tokens per Sec: 25814.934412184153
Epoch Step: 445 / 819 Loss: 17.249710083007812 Tokens per Sec: 25927.31507782067
Epoch Step: 450 / 819 Loss: 17.255361557006836 Tokens per Sec: 23876.0882115567
Epoch Step: 455 / 819 Loss: 19.350154876708984 Tokens per Sec: 25390.19130935908
Epoch Step: 460 / 819 Loss: 12.879664421081543 Tokens per Sec: 28104.169520932082
Epoch Step: 465 / 819 Loss: 18.98101043701172 Tokens per Sec: 27144.476371020854
Epoch Step: 470 / 819 Loss: 11.923544883728027 Tokens per Sec: 25318.15584866073
Epoch Step: 475 / 819 Loss: 17.441734313964844 Tokens per Sec: 22836.590568269377
Epoch Step: 480 / 819 Loss: 18.255319595336914 Tokens per Sec: 24439.56679485196
Epoch Step: 485 / 819 Loss: 16.803539276123047 Tokens per Sec: 25400.970612811532
Epoch Step: 490 / 819 Loss: 17.614843368530273 Tokens per Sec: 28400.317609264726
Epoch Step: 495 / 819 Loss: 214.85140991210938 Tokens per Sec: 25589.885259138046
Epoch Step: 500 / 819 Loss: 16.630823135375977 Tokens per Sec: 24243.58122103175
Epoch Step: 505 / 819 Loss: 16.670970916748047 Tokens per Sec: 25286.901166460313
Epoch Step: 510 / 819 Loss: 16.193147659301758 Tokens per Sec: 24559.518628411613
Epoch Step: 515 / 819 Loss: 17.036239624023438 Tokens per Sec: 26608.317215735085
Epoch Step: 520 / 819 Loss: 15.851116180419922 Tokens per Sec: 26742.643734422203
Epoch Step: 525 / 819 Loss: 23.318653106689453 Tokens per Sec: 26132.73520249221
Epoch Step: 530 / 819 Loss: 24.801990509033203 Tokens per Sec: 25418.97328905879
Epoch Step: 535 / 819 Loss: 17.267845153808594 Tokens per Sec: 26206.177804815925
Epoch Step: 540 / 819 Loss: 16.327478408813477 Tokens per Sec: 25997.948978731885
Epoch Step: 545 / 819 Loss: 21.219945907592773 Tokens per Sec: 23010.582689940147
Epoch Step: 550 / 819 Loss: 18.29700469970703 Tokens per Sec: 24761.06634093867
Epoch Step: 555 / 819 Loss: 19.32402992248535 Tokens per Sec: 24819.10582894625
Epoch Step: 560 / 819 Loss: 18.836772918701172 Tokens per Sec: 24089.33773994682
Epoch Step: 565 / 819 Loss: 21.766517639160156 Tokens per Sec: 25872.52922423225
Epoch Step: 570 / 819 Loss: 23.344970703125 Tokens per Sec: 25314.834638355416
Epoch Step: 575 / 819 Loss: 21.53207015991211 Tokens per Sec: 26966.249687315438
Epoch Step: 580 / 819 Loss: 21.28714370727539 Tokens per Sec: 25599.42342356378
Epoch Step: 585 / 819 Loss: 17.155941009521484 Tokens per Sec: 24959.167887704232
Epoch Step: 590 / 819 Loss: 16.258480072021484 Tokens per Sec: 27414.85500640777
Epoch Step: 595 / 819 Loss: 16.62693977355957 Tokens per Sec: 24558.495827408864
Epoch Step: 600 / 819 Loss: 16.775476455688477 Tokens per Sec: 28065.59092505523
Epoch Step: 605 / 819 Loss: 22.434215545654297 Tokens per Sec: 26761.983351045754
Epoch Step: 610 / 819 Loss: 22.628171920776367 Tokens per Sec: 25505.963830807803
Epoch Step: 615 / 819 Loss: 16.666236877441406 Tokens per Sec: 25585.5128250445
Epoch Step: 620 / 819 Loss: 26.025390625 Tokens per Sec: 25966.100717731377
Epoch Step: 625 / 819 Loss: 17.02244758605957 Tokens per Sec: 26399.28317778568
Epoch Step: 630 / 819 Loss: 192.56263732910156 Tokens per Sec: 24857.53722466144
Epoch Step: 635 / 819 Loss: 18.308456420898438 Tokens per Sec: 24304.603229185694
Epoch Step: 640 / 819 Loss: 16.022905349731445 Tokens per Sec: 27614.287569363358
Epoch Step: 645 / 819 Loss: 24.379568099975586 Tokens per Sec: 27522.227637897282
Epoch Step: 650 / 819 Loss: 25.266773223876953 Tokens per Sec: 24901.308182092318
Epoch Step: 655 / 819 Loss: 21.533687591552734 Tokens per Sec: 25632.624099424254
Epoch Step: 660 / 819 Loss: 15.655978202819824 Tokens per Sec: 27807.829117986104
Epoch Step: 665 / 819 Loss: 21.458465576171875 Tokens per Sec: 25314.972366821497
Epoch Step: 670 / 819 Loss: 14.440265655517578 Tokens per Sec: 23421.72727786521
Epoch Step: 675 / 819 Loss: 18.43513298034668 Tokens per Sec: 27115.93269462319
Epoch Step: 680 / 819 Loss: 14.904410362243652 Tokens per Sec: 25424.838277800693
Epoch Step: 685 / 819 Loss: 19.206459045410156 Tokens per Sec: 26731.7885252663
Epoch Step: 690 / 819 Loss: 17.167491912841797 Tokens per Sec: 24945.250593060722
Epoch Step: 695 / 819 Loss: 16.931989669799805 Tokens per Sec: 24423.3876858267
Epoch Step: 700 / 819 Loss: 19.169038772583008 Tokens per Sec: 25445.634958110553
Epoch Step: 705 / 819 Loss: 15.616771697998047 Tokens per Sec: 26675.194613383723
Epoch Step: 710 / 819 Loss: 11.896685600280762 Tokens per Sec: 27069.733491397506
Epoch Step: 715 / 819 Loss: 18.508127212524414 Tokens per Sec: 26711.733958138368
Epoch Step: 720 / 819 Loss: 16.262794494628906 Tokens per Sec: 27022.604492744355
Epoch Step: 725 / 819 Loss: 249.68402099609375 Tokens per Sec: 23444.793021678463
Epoch Step: 730 / 819 Loss: 14.996095657348633 Tokens per Sec: 26870.6490136096
Epoch Step: 735 / 819 Loss: 19.531658172607422 Tokens per Sec: 24290.88046597832
Epoch Step: 740 / 819 Loss: 26.952808380126953 Tokens per Sec: 24538.822564328697
Epoch Step: 745 / 819 Loss: 17.319351196289062 Tokens per Sec: 24967.695663012742
Epoch Step: 750 / 819 Loss: 18.789487838745117 Tokens per Sec: 27092.06793313674
Epoch Step: 755 / 819 Loss: 19.26997184753418 Tokens per Sec: 24384.406022917847
Epoch Step: 760 / 819 Loss: 14.823700904846191 Tokens per Sec: 27630.06797080405
Epoch Step: 765 / 819 Loss: 260.39227294921875 Tokens per Sec: 22740.20696012681
Epoch Step: 770 / 819 Loss: 16.597431182861328 Tokens per Sec: 27793.39463813664
Epoch Step: 775 / 819 Loss: 22.53631019592285 Tokens per Sec: 26228.15010489284
Epoch Step: 780 / 819 Loss: 20.548015594482422 Tokens per Sec: 26517.69121361476
Epoch Step: 785 / 819 Loss: 16.88202667236328 Tokens per Sec: 25277.784721026354
Epoch Step: 790 / 819 Loss: 22.271011352539062 Tokens per Sec: 26767.514542882825
Epoch Step: 795 / 819 Loss: 15.049675941467285 Tokens per Sec: 25061.742496059098
Epoch Step: 800 / 819 Loss: 17.328750610351562 Tokens per Sec: 26617.618761911137
Epoch Step: 805 / 819 Loss: 15.04990291595459 Tokens per Sec: 21133.159128587486
Epoch Step: 810 / 819 Loss: 141.55892944335938 Tokens per Sec: 24156.849726595403
Epoch Step: 815 / 819 Loss: 18.81204605102539 Tokens per Sec: 24313.02411340692
Epoch ended with duration 0:02:31.157322
Train perplexity: 1.670743965972513
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.332886
Validation perplexity: 1.5632696871821177
Epoch 28 / 1000
Epoch Step: 5 / 819 Loss: 16.886396408081055 Tokens per Sec: 25670.14157266634
Epoch Step: 10 / 819 Loss: 17.570905685424805 Tokens per Sec: 27591.561727225373
Epoch Step: 15 / 819 Loss: 18.319013595581055 Tokens per Sec: 22858.474091924058
Epoch Step: 20 / 819 Loss: 13.408474922180176 Tokens per Sec: 25800.470330599444
Epoch Step: 25 / 819 Loss: 16.886056900024414 Tokens per Sec: 26575.948253096543
Epoch Step: 30 / 819 Loss: 21.19516944885254 Tokens per Sec: 24442.079557041496
Epoch Step: 35 / 819 Loss: 20.30988121032715 Tokens per Sec: 24779.429662263286
Epoch Step: 40 / 819 Loss: 18.54750633239746 Tokens per Sec: 27701.433136751242
Epoch Step: 45 / 819 Loss: 15.843058586120605 Tokens per Sec: 27447.577626967042
Epoch Step: 50 / 819 Loss: 16.92384147644043 Tokens per Sec: 26714.04235416828
Epoch Step: 55 / 819 Loss: 20.11819839477539 Tokens per Sec: 24028.11056439431
Epoch Step: 60 / 819 Loss: 18.33953285217285 Tokens per Sec: 26591.42994924188
Epoch Step: 65 / 819 Loss: 18.595600128173828 Tokens per Sec: 24766.905403176293
Epoch Step: 70 / 819 Loss: 19.797853469848633 Tokens per Sec: 26263.78031750302
Epoch Step: 75 / 819 Loss: 180.3974609375 Tokens per Sec: 25524.93846747474
Epoch Step: 80 / 819 Loss: 12.12514877319336 Tokens per Sec: 26514.676072071168
Epoch Step: 85 / 819 Loss: 13.968021392822266 Tokens per Sec: 23883.56780450688
Epoch Step: 90 / 819 Loss: 15.86164665222168 Tokens per Sec: 25352.14146452006
Epoch Step: 95 / 819 Loss: 12.481748580932617 Tokens per Sec: 25235.38320701533
Epoch Step: 100 / 819 Loss: 15.947726249694824 Tokens per Sec: 27790.68252691565
Epoch Step: 105 / 819 Loss: 24.370283126831055 Tokens per Sec: 25505.982367863176
Epoch Step: 110 / 819 Loss: 16.91382598876953 Tokens per Sec: 27425.83600434166
Epoch Step: 115 / 819 Loss: 18.06946563720703 Tokens per Sec: 24897.98113224462
Epoch Step: 120 / 819 Loss: 19.3176326751709 Tokens per Sec: 24696.810051945853
Epoch Step: 125 / 819 Loss: 24.577434539794922 Tokens per Sec: 25740.130410032027
Epoch Step: 130 / 819 Loss: 18.686725616455078 Tokens per Sec: 24320.97010361944
Epoch Step: 135 / 819 Loss: 17.907489776611328 Tokens per Sec: 24714.250429682874
Epoch Step: 140 / 819 Loss: 14.476935386657715 Tokens per Sec: 28232.188028391218
Epoch Step: 145 / 819 Loss: 21.8985538482666 Tokens per Sec: 26759.59109346203
Epoch Step: 150 / 819 Loss: 16.66961097717285 Tokens per Sec: 23745.268844292703
Epoch Step: 155 / 819 Loss: 175.0091552734375 Tokens per Sec: 25562.353812772493
Epoch Step: 160 / 819 Loss: 25.624547958374023 Tokens per Sec: 26215.350219453532
Epoch Step: 165 / 819 Loss: 18.758068084716797 Tokens per Sec: 26892.194747766665
Epoch Step: 170 / 819 Loss: 22.829195022583008 Tokens per Sec: 25964.665129170466
Epoch Step: 175 / 819 Loss: 14.377647399902344 Tokens per Sec: 23592.712282303306
Epoch Step: 180 / 819 Loss: 21.786354064941406 Tokens per Sec: 25453.94613280859
Epoch Step: 185 / 819 Loss: 16.96944236755371 Tokens per Sec: 25003.0253502313
Epoch Step: 190 / 819 Loss: 15.74069881439209 Tokens per Sec: 25354.248065439442
Epoch Step: 195 / 819 Loss: 21.608434677124023 Tokens per Sec: 26469.97633256321
Epoch Step: 200 / 819 Loss: 15.95036792755127 Tokens per Sec: 27285.702732178313
Epoch Step: 205 / 819 Loss: 21.309795379638672 Tokens per Sec: 27824.247094973234
Epoch Step: 210 / 819 Loss: 13.737998008728027 Tokens per Sec: 26132.552703359375
Epoch Step: 215 / 819 Loss: 185.04263305664062 Tokens per Sec: 25641.62475192161
Epoch Step: 220 / 819 Loss: 17.597919464111328 Tokens per Sec: 25891.52310953308
Epoch Step: 225 / 819 Loss: 23.271167755126953 Tokens per Sec: 26644.08571048819
Epoch Step: 230 / 819 Loss: 18.29978370666504 Tokens per Sec: 25650.168329256176
Epoch Step: 235 / 819 Loss: 17.903076171875 Tokens per Sec: 26908.72389442382
Epoch Step: 240 / 819 Loss: 15.751663208007812 Tokens per Sec: 26543.885358757925
Epoch Step: 245 / 819 Loss: 16.1606388092041 Tokens per Sec: 25288.402490318764
Epoch Step: 250 / 819 Loss: 17.943326950073242 Tokens per Sec: 26482.849091095566
Epoch Step: 255 / 819 Loss: 20.966794967651367 Tokens per Sec: 24680.71578396696
Epoch Step: 260 / 819 Loss: 19.074270248413086 Tokens per Sec: 26403.02125839069
Epoch Step: 265 / 819 Loss: 23.721752166748047 Tokens per Sec: 24057.534919788857
Epoch Step: 270 / 819 Loss: 18.770801544189453 Tokens per Sec: 26951.42393991326
Epoch Step: 275 / 819 Loss: 239.946533203125 Tokens per Sec: 23757.79432732955
Epoch Step: 280 / 819 Loss: 18.927785873413086 Tokens per Sec: 26917.632429927227
Epoch Step: 285 / 819 Loss: 19.474611282348633 Tokens per Sec: 25609.862772672368
Epoch Step: 290 / 819 Loss: 18.674251556396484 Tokens per Sec: 25630.190823672685
Epoch Step: 295 / 819 Loss: 16.300546646118164 Tokens per Sec: 24887.10878380767
Epoch Step: 300 / 819 Loss: 154.0762939453125 Tokens per Sec: 24593.221071645465
Epoch Step: 305 / 819 Loss: 20.597442626953125 Tokens per Sec: 27472.093136893058
Epoch Step: 310 / 819 Loss: 24.740938186645508 Tokens per Sec: 25977.93509901544
Epoch Step: 315 / 819 Loss: 19.356340408325195 Tokens per Sec: 27726.716802212704
Epoch Step: 320 / 819 Loss: 18.71005630493164 Tokens per Sec: 25915.448956805492
Epoch Step: 325 / 819 Loss: 22.49336814880371 Tokens per Sec: 24362.474548870974
Epoch Step: 330 / 819 Loss: 17.446016311645508 Tokens per Sec: 23520.31553369054
Epoch Step: 335 / 819 Loss: 16.261829376220703 Tokens per Sec: 24768.917663007072
Epoch Step: 340 / 819 Loss: 17.02825927734375 Tokens per Sec: 26897.829409615817
Epoch Step: 345 / 819 Loss: 24.62515640258789 Tokens per Sec: 24416.6703922359
Epoch Step: 350 / 819 Loss: 18.294605255126953 Tokens per Sec: 24997.05881874964
Epoch Step: 355 / 819 Loss: 21.472885131835938 Tokens per Sec: 24112.985945806187
Epoch Step: 360 / 819 Loss: 16.176761627197266 Tokens per Sec: 24589.75510045695
Epoch Step: 365 / 819 Loss: 20.408246994018555 Tokens per Sec: 24822.597902461042
Epoch Step: 370 / 819 Loss: 18.288299560546875 Tokens per Sec: 27783.553775619846
Epoch Step: 375 / 819 Loss: 18.626962661743164 Tokens per Sec: 24319.446950832724
Epoch Step: 380 / 819 Loss: 20.065038681030273 Tokens per Sec: 24986.20084075806
Epoch Step: 385 / 819 Loss: 15.736127853393555 Tokens per Sec: 26416.592968242254
Epoch Step: 390 / 819 Loss: 16.516942977905273 Tokens per Sec: 26871.397305258448
Epoch Step: 395 / 819 Loss: 21.864065170288086 Tokens per Sec: 28293.704210859854
Epoch Step: 400 / 819 Loss: 20.162620544433594 Tokens per Sec: 26443.951006440857
Epoch Step: 405 / 819 Loss: 17.698719024658203 Tokens per Sec: 23592.984739953103
Epoch Step: 410 / 819 Loss: 18.39191436767578 Tokens per Sec: 25717.164604195943
Epoch Step: 415 / 819 Loss: 202.33535766601562 Tokens per Sec: 25200.349547094276
Epoch Step: 420 / 819 Loss: 17.068002700805664 Tokens per Sec: 26984.180643886575
Epoch Step: 425 / 819 Loss: 23.11577033996582 Tokens per Sec: 27245.634523294728
Epoch Step: 430 / 819 Loss: 19.059749603271484 Tokens per Sec: 24629.328928130766
Epoch Step: 435 / 819 Loss: 18.336740493774414 Tokens per Sec: 26345.601929404926
Epoch Step: 440 / 819 Loss: 13.823641777038574 Tokens per Sec: 24988.660384136012
Epoch Step: 445 / 819 Loss: 16.653932571411133 Tokens per Sec: 27711.95173967715
Epoch Step: 450 / 819 Loss: 174.08827209472656 Tokens per Sec: 22862.318605605215
Epoch Step: 455 / 819 Loss: 22.02530288696289 Tokens per Sec: 23216.215771941927
Epoch Step: 460 / 819 Loss: 22.597618103027344 Tokens per Sec: 25547.538408884946
Epoch Step: 465 / 819 Loss: 19.098203659057617 Tokens per Sec: 25099.59438822685
Epoch Step: 470 / 819 Loss: 18.209060668945312 Tokens per Sec: 27409.326376847835
Epoch Step: 475 / 819 Loss: 15.236723899841309 Tokens per Sec: 26579.225425918252
Epoch Step: 480 / 819 Loss: 20.094257354736328 Tokens per Sec: 24649.862482687604
Epoch Step: 485 / 819 Loss: 19.417020797729492 Tokens per Sec: 25059.286721592845
Epoch Step: 490 / 819 Loss: 13.45734977722168 Tokens per Sec: 27681.576600982455
Epoch Step: 495 / 819 Loss: 15.782957077026367 Tokens per Sec: 24945.49338246112
Epoch Step: 500 / 819 Loss: 24.95479965209961 Tokens per Sec: 27449.161988012325
Epoch Step: 505 / 819 Loss: 18.93606948852539 Tokens per Sec: 23423.17900064417
Epoch Step: 510 / 819 Loss: 20.949268341064453 Tokens per Sec: 26190.893910586157
Epoch Step: 515 / 819 Loss: 21.187114715576172 Tokens per Sec: 25566.2128966713
Epoch Step: 520 / 819 Loss: 17.71160316467285 Tokens per Sec: 25391.051697167208
Epoch Step: 525 / 819 Loss: 14.8805570602417 Tokens per Sec: 27556.091279937915
Epoch Step: 530 / 819 Loss: 21.16849136352539 Tokens per Sec: 25417.562426805405
Epoch Step: 535 / 819 Loss: 14.109033584594727 Tokens per Sec: 26504.620873538453
Epoch Step: 540 / 819 Loss: 19.537694931030273 Tokens per Sec: 26478.693652858106
Epoch Step: 545 / 819 Loss: 18.34109115600586 Tokens per Sec: 23967.481728801173
Epoch Step: 550 / 819 Loss: 13.378702163696289 Tokens per Sec: 23412.76823314481
Epoch Step: 555 / 819 Loss: 12.535073280334473 Tokens per Sec: 24875.315657791056
Epoch Step: 560 / 819 Loss: 14.98530387878418 Tokens per Sec: 28187.014931988087
Epoch Step: 565 / 819 Loss: 15.039284706115723 Tokens per Sec: 27356.423202392783
Epoch Step: 570 / 819 Loss: 16.79092025756836 Tokens per Sec: 26806.844512580337
Epoch Step: 575 / 819 Loss: 24.831764221191406 Tokens per Sec: 23005.209775398616
Epoch Step: 580 / 819 Loss: 20.48758316040039 Tokens per Sec: 24861.081651621847
Epoch Step: 585 / 819 Loss: 23.851255416870117 Tokens per Sec: 24764.488949574992
Epoch Step: 590 / 819 Loss: 18.066818237304688 Tokens per Sec: 26220.449007646283
Epoch Step: 595 / 819 Loss: 14.43787670135498 Tokens per Sec: 26538.405934276918
Epoch Step: 600 / 819 Loss: 18.366825103759766 Tokens per Sec: 25066.299883747313
Epoch Step: 605 / 819 Loss: 16.891191482543945 Tokens per Sec: 24206.90513819033
Epoch Step: 610 / 819 Loss: 293.5994873046875 Tokens per Sec: 25239.877554243776
Epoch Step: 615 / 819 Loss: 21.034652709960938 Tokens per Sec: 25596.488093929012
Epoch Step: 620 / 819 Loss: 22.156963348388672 Tokens per Sec: 24923.137130106985
Epoch Step: 625 / 819 Loss: 16.383298873901367 Tokens per Sec: 27156.328314183724
Epoch Step: 630 / 819 Loss: 18.410795211791992 Tokens per Sec: 23079.596145418498
Epoch Step: 635 / 819 Loss: 18.109161376953125 Tokens per Sec: 26638.7205746007
Epoch Step: 640 / 819 Loss: 14.35285758972168 Tokens per Sec: 24520.472202082972
Epoch Step: 645 / 819 Loss: 15.824556350708008 Tokens per Sec: 25607.44865162651
Epoch Step: 650 / 819 Loss: 16.140789031982422 Tokens per Sec: 26048.430830416874
Epoch Step: 655 / 819 Loss: 16.786319732666016 Tokens per Sec: 24490.84808363006
Epoch Step: 660 / 819 Loss: 16.030075073242188 Tokens per Sec: 27214.38173446877
Epoch Step: 665 / 819 Loss: 20.08466911315918 Tokens per Sec: 25337.761373382546
Epoch Step: 670 / 819 Loss: 19.8342227935791 Tokens per Sec: 26434.501983862727
Epoch Step: 675 / 819 Loss: 16.416515350341797 Tokens per Sec: 25625.65993223323
Epoch Step: 680 / 819 Loss: 18.163055419921875 Tokens per Sec: 27893.068646018863
Epoch Step: 685 / 819 Loss: 18.302093505859375 Tokens per Sec: 29263.32953618832
Epoch Step: 690 / 819 Loss: 13.071969032287598 Tokens per Sec: 24384.681602588975
Epoch Step: 695 / 819 Loss: 14.822792053222656 Tokens per Sec: 26069.085267979764
Epoch Step: 700 / 819 Loss: 13.762060165405273 Tokens per Sec: 27665.03094367463
Epoch Step: 705 / 819 Loss: 17.393932342529297 Tokens per Sec: 25121.328915227154
Epoch Step: 710 / 819 Loss: 19.440366744995117 Tokens per Sec: 24763.41689043504
Epoch Step: 715 / 819 Loss: 19.448959350585938 Tokens per Sec: 22054.7741004817
Epoch Step: 720 / 819 Loss: 16.41552734375 Tokens per Sec: 26279.571470858526
Epoch Step: 725 / 819 Loss: 16.852697372436523 Tokens per Sec: 28071.715612585023
Epoch Step: 730 / 819 Loss: 219.6172332763672 Tokens per Sec: 24233.664871822053
Epoch Step: 735 / 819 Loss: 19.88784408569336 Tokens per Sec: 26511.229347632176
Epoch Step: 740 / 819 Loss: 227.0211181640625 Tokens per Sec: 27814.174153321208
Epoch Step: 745 / 819 Loss: 13.66256332397461 Tokens per Sec: 27823.55925745879
Epoch Step: 750 / 819 Loss: 21.379581451416016 Tokens per Sec: 25765.415632416585
Epoch Step: 755 / 819 Loss: 17.77860450744629 Tokens per Sec: 26663.108870440905
Epoch Step: 760 / 819 Loss: 18.11397933959961 Tokens per Sec: 25486.590554350223
Epoch Step: 765 / 819 Loss: 12.786530494689941 Tokens per Sec: 25420.90742815107
Epoch Step: 770 / 819 Loss: 15.020873069763184 Tokens per Sec: 25527.322197320478
Epoch Step: 775 / 819 Loss: 16.4472713470459 Tokens per Sec: 23277.150144236028
Epoch Step: 780 / 819 Loss: 19.819345474243164 Tokens per Sec: 26773.307892628985
Epoch Step: 785 / 819 Loss: 17.213125228881836 Tokens per Sec: 28013.62984363855
Epoch Step: 790 / 819 Loss: 246.05841064453125 Tokens per Sec: 26974.221538710255
Epoch Step: 795 / 819 Loss: 14.373102188110352 Tokens per Sec: 24553.083226512284
Epoch Step: 800 / 819 Loss: 18.052812576293945 Tokens per Sec: 25375.539541712085
Epoch Step: 805 / 819 Loss: 16.168251037597656 Tokens per Sec: 24462.45939040594
Epoch Step: 810 / 819 Loss: 19.399860382080078 Tokens per Sec: 24189.62507025658
Epoch Step: 815 / 819 Loss: 17.424848556518555 Tokens per Sec: 24797.54335186437
Epoch ended with duration 0:02:31.371934
Train perplexity: 1.503222380838407
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.264781
Validation perplexity: 1.5647282662763726
Epoch 29 / 1000
Epoch Step: 5 / 819 Loss: 18.49399185180664 Tokens per Sec: 24889.074427328764
Epoch Step: 10 / 819 Loss: 24.90509605407715 Tokens per Sec: 23563.743859141257
Epoch Step: 15 / 819 Loss: 22.8398494720459 Tokens per Sec: 26035.594274205137
Epoch Step: 20 / 819 Loss: 16.78318214416504 Tokens per Sec: 26326.750175519486
Epoch Step: 25 / 819 Loss: 18.222219467163086 Tokens per Sec: 24020.22561883168
Epoch Step: 30 / 819 Loss: 15.979002952575684 Tokens per Sec: 24484.570663842384
Epoch Step: 35 / 819 Loss: 20.661937713623047 Tokens per Sec: 27107.542015397376
Epoch Step: 40 / 819 Loss: 20.515668869018555 Tokens per Sec: 25303.87857909846
Epoch Step: 45 / 819 Loss: 18.576358795166016 Tokens per Sec: 25333.088979321263
Epoch Step: 50 / 819 Loss: 13.787737846374512 Tokens per Sec: 26753.19253906263
Epoch Step: 55 / 819 Loss: 12.964139938354492 Tokens per Sec: 27691.28773456326
Epoch Step: 60 / 819 Loss: 247.34654235839844 Tokens per Sec: 25671.30757778972
Epoch Step: 65 / 819 Loss: 19.298274993896484 Tokens per Sec: 26806.299498326465
Epoch Step: 70 / 819 Loss: 15.10385513305664 Tokens per Sec: 25664.237766804003
Epoch Step: 75 / 819 Loss: 18.106611251831055 Tokens per Sec: 26583.171704180066
Epoch Step: 80 / 819 Loss: 16.789690017700195 Tokens per Sec: 24279.97714094827
Epoch Step: 85 / 819 Loss: 18.794649124145508 Tokens per Sec: 24021.337404052647
Epoch Step: 90 / 819 Loss: 18.111652374267578 Tokens per Sec: 28349.07715340445
Epoch Step: 95 / 819 Loss: 229.60838317871094 Tokens per Sec: 25969.121198660032
Epoch Step: 100 / 819 Loss: 16.38758659362793 Tokens per Sec: 26237.538689821133
Epoch Step: 105 / 819 Loss: 19.4091739654541 Tokens per Sec: 24540.64995446123
Epoch Step: 110 / 819 Loss: 15.43030071258545 Tokens per Sec: 23163.06415346066
Epoch Step: 115 / 819 Loss: 21.799911499023438 Tokens per Sec: 25408.452258846966
Epoch Step: 120 / 819 Loss: 20.709508895874023 Tokens per Sec: 24623.66921376626
Epoch Step: 125 / 819 Loss: 21.87190818786621 Tokens per Sec: 23115.083834049925
Epoch Step: 130 / 819 Loss: 18.42205810546875 Tokens per Sec: 25268.3115048561
Epoch Step: 135 / 819 Loss: 17.305307388305664 Tokens per Sec: 28035.57023068286
Epoch Step: 140 / 819 Loss: 126.7608413696289 Tokens per Sec: 26566.814013829295
Epoch Step: 145 / 819 Loss: 22.7125301361084 Tokens per Sec: 25802.552925274867
Epoch Step: 150 / 819 Loss: 22.72247314453125 Tokens per Sec: 24622.25789934401
Epoch Step: 155 / 819 Loss: 17.958396911621094 Tokens per Sec: 25038.77812872555
Epoch Step: 160 / 819 Loss: 18.131126403808594 Tokens per Sec: 28330.270113353385
Epoch Step: 165 / 819 Loss: 16.84074592590332 Tokens per Sec: 26662.37453669356
Epoch Step: 170 / 819 Loss: 15.604238510131836 Tokens per Sec: 27268.825635242836
Epoch Step: 175 / 819 Loss: 17.62055015563965 Tokens per Sec: 25092.015253583697
Epoch Step: 180 / 819 Loss: 16.183433532714844 Tokens per Sec: 26485.380359690793
Epoch Step: 185 / 819 Loss: 23.38797950744629 Tokens per Sec: 25700.33461330348
Epoch Step: 190 / 819 Loss: 136.0058135986328 Tokens per Sec: 26136.47945938113
Epoch Step: 195 / 819 Loss: 19.37151527404785 Tokens per Sec: 27017.221042952675
Epoch Step: 200 / 819 Loss: 25.46957015991211 Tokens per Sec: 25407.09227616558
Epoch Step: 205 / 819 Loss: 20.0386962890625 Tokens per Sec: 25287.29738063548
Epoch Step: 210 / 819 Loss: 20.8342342376709 Tokens per Sec: 24098.094653242537
Epoch Step: 215 / 819 Loss: 21.67050552368164 Tokens per Sec: 24058.73545425255
Epoch Step: 220 / 819 Loss: 18.42038917541504 Tokens per Sec: 28429.15485849697
Epoch Step: 225 / 819 Loss: 15.799135208129883 Tokens per Sec: 24521.384761289424
Epoch Step: 230 / 819 Loss: 18.5378475189209 Tokens per Sec: 26936.40810819862
Epoch Step: 235 / 819 Loss: 18.28415298461914 Tokens per Sec: 23663.75691052344
Epoch Step: 240 / 819 Loss: 18.603336334228516 Tokens per Sec: 25522.464221813912
Epoch Step: 245 / 819 Loss: 16.95297622680664 Tokens per Sec: 25023.005906336628
Epoch Step: 250 / 819 Loss: 14.998364448547363 Tokens per Sec: 25887.276951698135
Epoch Step: 255 / 819 Loss: 19.747453689575195 Tokens per Sec: 26187.95264129858
Epoch Step: 260 / 819 Loss: 19.712291717529297 Tokens per Sec: 24013.200814167736
Epoch Step: 265 / 819 Loss: 17.410436630249023 Tokens per Sec: 26971.45479267439
Epoch Step: 270 / 819 Loss: 20.617483139038086 Tokens per Sec: 25365.79632883249
Epoch Step: 275 / 819 Loss: 11.522653579711914 Tokens per Sec: 26705.06906616143
Epoch Step: 280 / 819 Loss: 17.31534194946289 Tokens per Sec: 24473.918142939565
Epoch Step: 285 / 819 Loss: 19.747283935546875 Tokens per Sec: 25776.636049653054
Epoch Step: 290 / 819 Loss: 19.777498245239258 Tokens per Sec: 26205.52662697494
Epoch Step: 295 / 819 Loss: 18.670576095581055 Tokens per Sec: 28667.322876013583
Epoch Step: 300 / 819 Loss: 21.00277328491211 Tokens per Sec: 23746.27693711461
Epoch Step: 305 / 819 Loss: 17.781524658203125 Tokens per Sec: 23817.17484825014
Epoch Step: 310 / 819 Loss: 17.902172088623047 Tokens per Sec: 22369.613451505207
Epoch Step: 315 / 819 Loss: 18.712173461914062 Tokens per Sec: 25270.396936086847
Epoch Step: 320 / 819 Loss: 18.237735748291016 Tokens per Sec: 26802.412527797118
Epoch Step: 325 / 819 Loss: 17.260211944580078 Tokens per Sec: 23616.609236566066
Epoch Step: 330 / 819 Loss: 14.823317527770996 Tokens per Sec: 28110.90016929614
Epoch Step: 335 / 819 Loss: 15.613259315490723 Tokens per Sec: 25378.139005848367
Epoch Step: 340 / 819 Loss: 18.329206466674805 Tokens per Sec: 27700.185986144068
Epoch Step: 345 / 819 Loss: 14.517664909362793 Tokens per Sec: 25740.476555196066
Epoch Step: 350 / 819 Loss: 18.66843032836914 Tokens per Sec: 25377.497749142778
Epoch Step: 355 / 819 Loss: 20.91373062133789 Tokens per Sec: 26565.684722014856
Epoch Step: 360 / 819 Loss: 255.59353637695312 Tokens per Sec: 25028.28731501693
Epoch Step: 365 / 819 Loss: 24.574817657470703 Tokens per Sec: 23900.1363252184
Epoch Step: 370 / 819 Loss: 14.54159164428711 Tokens per Sec: 24990.284648642722
Epoch Step: 375 / 819 Loss: 16.4480037689209 Tokens per Sec: 24335.423895647033
Epoch Step: 380 / 819 Loss: 159.12396240234375 Tokens per Sec: 24436.626466447804
Epoch Step: 385 / 819 Loss: 22.14702606201172 Tokens per Sec: 24971.472596040432
Epoch Step: 390 / 819 Loss: 16.685192108154297 Tokens per Sec: 26856.733746962487
Epoch Step: 395 / 819 Loss: 19.434104919433594 Tokens per Sec: 26513.749730382617
Epoch Step: 400 / 819 Loss: 15.065583229064941 Tokens per Sec: 28011.717828045814
Epoch Step: 405 / 819 Loss: 18.728538513183594 Tokens per Sec: 25978.88625206445
Epoch Step: 410 / 819 Loss: 226.1397247314453 Tokens per Sec: 25450.087148348626
Epoch Step: 415 / 819 Loss: 247.763916015625 Tokens per Sec: 24449.398809813967
Epoch Step: 420 / 819 Loss: 17.228015899658203 Tokens per Sec: 25624.908113116286
Epoch Step: 425 / 819 Loss: 14.807912826538086 Tokens per Sec: 27494.769215578017
Epoch Step: 430 / 819 Loss: 21.716594696044922 Tokens per Sec: 26853.308098616388
Epoch Step: 435 / 819 Loss: 14.090195655822754 Tokens per Sec: 25177.16403812319
Epoch Step: 440 / 819 Loss: 16.482738494873047 Tokens per Sec: 28225.92566365841
Epoch Step: 445 / 819 Loss: 18.37527847290039 Tokens per Sec: 26463.054068159214
Epoch Step: 450 / 819 Loss: 21.982282638549805 Tokens per Sec: 25358.947649755373
Epoch Step: 455 / 819 Loss: 16.834348678588867 Tokens per Sec: 26219.130917645984
Epoch Step: 460 / 819 Loss: 17.80144500732422 Tokens per Sec: 22491.978378125532
Epoch Step: 465 / 819 Loss: 20.560279846191406 Tokens per Sec: 25586.43631884196
Epoch Step: 470 / 819 Loss: 20.124032974243164 Tokens per Sec: 25873.407311858693
Epoch Step: 475 / 819 Loss: 17.45978546142578 Tokens per Sec: 22921.01635926927
Epoch Step: 480 / 819 Loss: 12.411418914794922 Tokens per Sec: 25496.727404003148
Epoch Step: 485 / 819 Loss: 16.655704498291016 Tokens per Sec: 27013.663197594145
Epoch Step: 490 / 819 Loss: 16.60287094116211 Tokens per Sec: 27284.97235340449
Epoch Step: 495 / 819 Loss: 13.483476638793945 Tokens per Sec: 28493.494597659574
Epoch Step: 500 / 819 Loss: 16.644845962524414 Tokens per Sec: 24505.755277680462
Epoch Step: 505 / 819 Loss: 16.533353805541992 Tokens per Sec: 25244.2686559095
Epoch Step: 510 / 819 Loss: 14.997089385986328 Tokens per Sec: 27059.883260518414
Epoch Step: 515 / 819 Loss: 17.510223388671875 Tokens per Sec: 25380.103156058256
Epoch Step: 520 / 819 Loss: 143.7623291015625 Tokens per Sec: 25072.785732012508
Epoch Step: 525 / 819 Loss: 23.379858016967773 Tokens per Sec: 25861.230493029787
Epoch Step: 530 / 819 Loss: 128.76710510253906 Tokens per Sec: 27377.321838830816
Epoch Step: 535 / 819 Loss: 17.09685707092285 Tokens per Sec: 26769.28607682355
Epoch Step: 540 / 819 Loss: 19.7386417388916 Tokens per Sec: 26581.198686240834
Epoch Step: 545 / 819 Loss: 20.20232582092285 Tokens per Sec: 23676.963296457117
Epoch Step: 550 / 819 Loss: 16.65353012084961 Tokens per Sec: 26496.749501047387
Epoch Step: 555 / 819 Loss: 16.919588088989258 Tokens per Sec: 26542.94678082282
Epoch Step: 560 / 819 Loss: 13.925071716308594 Tokens per Sec: 24338.190209126744
Epoch Step: 565 / 819 Loss: 18.601606369018555 Tokens per Sec: 25985.74366398572
Epoch Step: 570 / 819 Loss: 16.21110725402832 Tokens per Sec: 24221.206260935414
Epoch Step: 575 / 819 Loss: 227.69320678710938 Tokens per Sec: 25265.09241283841
Epoch Step: 580 / 819 Loss: 15.830641746520996 Tokens per Sec: 26816.594633831763
Epoch Step: 585 / 819 Loss: 14.02267837524414 Tokens per Sec: 25671.79704094675
Epoch Step: 590 / 819 Loss: 18.999670028686523 Tokens per Sec: 26681.539120690286
Epoch Step: 595 / 819 Loss: 19.28917694091797 Tokens per Sec: 24329.998012666907
Epoch Step: 600 / 819 Loss: 21.590274810791016 Tokens per Sec: 24781.69528865787
Epoch Step: 605 / 819 Loss: 15.259597778320312 Tokens per Sec: 26567.29009837484
Epoch Step: 610 / 819 Loss: 14.760725975036621 Tokens per Sec: 26393.0585877097
Epoch Step: 615 / 819 Loss: 14.084941864013672 Tokens per Sec: 26732.97027466974
Epoch Step: 620 / 819 Loss: 13.527823448181152 Tokens per Sec: 28327.471969532016
Epoch Step: 625 / 819 Loss: 19.84709358215332 Tokens per Sec: 26411.211907837893
Epoch Step: 630 / 819 Loss: 12.94608211517334 Tokens per Sec: 27270.509572574727
Epoch Step: 635 / 819 Loss: 16.701257705688477 Tokens per Sec: 25499.319116018996
Epoch Step: 640 / 819 Loss: 15.929638862609863 Tokens per Sec: 28492.248101677524
Epoch Step: 645 / 819 Loss: 21.58220863342285 Tokens per Sec: 24756.985339743078
Epoch Step: 650 / 819 Loss: 21.714235305786133 Tokens per Sec: 25675.446678562617
Epoch Step: 655 / 819 Loss: 85.07997131347656 Tokens per Sec: 24703.342567358446
Epoch Step: 660 / 819 Loss: 21.050275802612305 Tokens per Sec: 26021.48287851222
Epoch Step: 665 / 819 Loss: 151.6920166015625 Tokens per Sec: 24709.271962542654
Epoch Step: 670 / 819 Loss: 20.884471893310547 Tokens per Sec: 23978.735467504517
Epoch Step: 675 / 819 Loss: 14.459636688232422 Tokens per Sec: 26397.55746069884
Epoch Step: 680 / 819 Loss: 16.01695442199707 Tokens per Sec: 25959.833705690282
Epoch Step: 685 / 819 Loss: 17.56287384033203 Tokens per Sec: 23797.400505907626
Epoch Step: 690 / 819 Loss: 121.03958129882812 Tokens per Sec: 25193.8168588151
Epoch Step: 695 / 819 Loss: 186.26983642578125 Tokens per Sec: 23376.13484356442
Epoch Step: 700 / 819 Loss: 17.487594604492188 Tokens per Sec: 24838.319975259503
Epoch Step: 705 / 819 Loss: 21.536821365356445 Tokens per Sec: 24944.528183027607
Epoch Step: 710 / 819 Loss: 18.50099754333496 Tokens per Sec: 25923.772846837834
Epoch Step: 715 / 819 Loss: 20.64749526977539 Tokens per Sec: 28072.209682014713
Epoch Step: 720 / 819 Loss: 18.705354690551758 Tokens per Sec: 27634.32156213621
Epoch Step: 725 / 819 Loss: 19.386703491210938 Tokens per Sec: 27964.858054622837
Epoch Step: 730 / 819 Loss: 16.443767547607422 Tokens per Sec: 24842.47293370917
Epoch Step: 735 / 819 Loss: 12.837260246276855 Tokens per Sec: 24503.98633970246
Epoch Step: 740 / 819 Loss: 20.620559692382812 Tokens per Sec: 25500.448159050917
Epoch Step: 745 / 819 Loss: 21.149959564208984 Tokens per Sec: 25067.850425898956
Epoch Step: 750 / 819 Loss: 21.808269500732422 Tokens per Sec: 26700.76782728214
Epoch Step: 755 / 819 Loss: 18.915555953979492 Tokens per Sec: 24396.756334969352
Epoch Step: 760 / 819 Loss: 95.25565338134766 Tokens per Sec: 25596.55105845828
Epoch Step: 765 / 819 Loss: 21.852787017822266 Tokens per Sec: 23958.353842968554
Epoch Step: 770 / 819 Loss: 19.944711685180664 Tokens per Sec: 27568.055446552495
Epoch Step: 775 / 819 Loss: 22.584007263183594 Tokens per Sec: 27172.71602197292
Epoch Step: 780 / 819 Loss: 21.24553871154785 Tokens per Sec: 23793.475907973105
Epoch Step: 785 / 819 Loss: 21.011878967285156 Tokens per Sec: 24966.83912901901
Epoch Step: 790 / 819 Loss: 20.196847915649414 Tokens per Sec: 24855.343650738578
Epoch Step: 795 / 819 Loss: 24.844959259033203 Tokens per Sec: 25383.98231964202
Epoch Step: 800 / 819 Loss: 17.944440841674805 Tokens per Sec: 25667.749788431087
Epoch Step: 805 / 819 Loss: 18.572101593017578 Tokens per Sec: 20052.498239289802
Epoch Step: 810 / 819 Loss: 23.2241268157959 Tokens per Sec: 25134.551685035516
Epoch Step: 815 / 819 Loss: 21.195903778076172 Tokens per Sec: 24683.45529824505
Epoch ended with duration 0:02:31.674732
Train perplexity: 1.632557164823537
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.273253
Validation perplexity: 1.3181002128584833
Model saved best_on_validation!
Epoch 30 / 1000
Epoch Step: 5 / 819 Loss: 19.657737731933594 Tokens per Sec: 23921.868588669287
Epoch Step: 10 / 819 Loss: 20.581153869628906 Tokens per Sec: 25363.94547956967
Epoch Step: 15 / 819 Loss: 23.071300506591797 Tokens per Sec: 23509.31318126614
Epoch Step: 20 / 819 Loss: 20.650514602661133 Tokens per Sec: 25812.67422221001
Epoch Step: 25 / 819 Loss: 14.018322944641113 Tokens per Sec: 24890.39885813434
Epoch Step: 30 / 819 Loss: 18.65431022644043 Tokens per Sec: 25566.709921186546
Epoch Step: 35 / 819 Loss: 17.102619171142578 Tokens per Sec: 25934.480729011586
Epoch Step: 40 / 819 Loss: 17.195114135742188 Tokens per Sec: 27831.741706073364
Epoch Step: 45 / 819 Loss: 14.909008979797363 Tokens per Sec: 25141.28239369299
Epoch Step: 50 / 819 Loss: 19.621109008789062 Tokens per Sec: 25361.227237847397
Epoch Step: 55 / 819 Loss: 22.074783325195312 Tokens per Sec: 25666.676243699592
Epoch Step: 60 / 819 Loss: 15.320209503173828 Tokens per Sec: 27332.930189101444
Epoch Step: 65 / 819 Loss: 219.2554168701172 Tokens per Sec: 25293.88451220038
Epoch Step: 70 / 819 Loss: 190.42234802246094 Tokens per Sec: 23115.339384875093
Epoch Step: 75 / 819 Loss: 25.203075408935547 Tokens per Sec: 25910.488084252636
Epoch Step: 80 / 819 Loss: 21.060787200927734 Tokens per Sec: 26589.811705629658
Epoch Step: 85 / 819 Loss: 20.90738868713379 Tokens per Sec: 25612.65353021604
Epoch Step: 90 / 819 Loss: 17.699352264404297 Tokens per Sec: 24408.48784110761
Epoch Step: 95 / 819 Loss: 18.724401473999023 Tokens per Sec: 27533.40057187641
Epoch Step: 100 / 819 Loss: 15.408610343933105 Tokens per Sec: 24937.2011120476
Epoch Step: 105 / 819 Loss: 21.7564754486084 Tokens per Sec: 25373.15943871532
Epoch Step: 110 / 819 Loss: 18.355369567871094 Tokens per Sec: 24642.617633175985
Epoch Step: 115 / 819 Loss: 17.893444061279297 Tokens per Sec: 26959.04433751361
Epoch Step: 120 / 819 Loss: 13.838455200195312 Tokens per Sec: 24884.585919770867
Epoch Step: 125 / 819 Loss: 18.641809463500977 Tokens per Sec: 23052.829624114547
Epoch Step: 130 / 819 Loss: 14.080795288085938 Tokens per Sec: 27481.441792851132
Epoch Step: 135 / 819 Loss: 22.539020538330078 Tokens per Sec: 27209.719185583675
Epoch Step: 140 / 819 Loss: 12.440802574157715 Tokens per Sec: 27546.826367682886
Epoch Step: 145 / 819 Loss: 19.03115463256836 Tokens per Sec: 26090.147399108322
Epoch Step: 150 / 819 Loss: 180.97731018066406 Tokens per Sec: 26355.152181738435
Epoch Step: 155 / 819 Loss: 20.59910011291504 Tokens per Sec: 25534.871623226336
Epoch Step: 160 / 819 Loss: 21.852453231811523 Tokens per Sec: 26823.97158919268
Epoch Step: 165 / 819 Loss: 18.24158477783203 Tokens per Sec: 26738.090607798433
Epoch Step: 170 / 819 Loss: 15.800294876098633 Tokens per Sec: 26224.82248701341
Epoch Step: 175 / 819 Loss: 13.05005931854248 Tokens per Sec: 24569.26796417123
Epoch Step: 180 / 819 Loss: 17.95810890197754 Tokens per Sec: 27297.12760409319
Epoch Step: 185 / 819 Loss: 16.24917221069336 Tokens per Sec: 26175.784091485337
Epoch Step: 190 / 819 Loss: 208.75009155273438 Tokens per Sec: 24982.47750378685
Epoch Step: 195 / 819 Loss: 229.0677947998047 Tokens per Sec: 24405.00549816674
Epoch Step: 200 / 819 Loss: 16.74968910217285 Tokens per Sec: 24545.650699329424
Epoch Step: 205 / 819 Loss: 14.718192100524902 Tokens per Sec: 25216.678676277585
Epoch Step: 210 / 819 Loss: 14.489819526672363 Tokens per Sec: 27651.40686160049
Epoch Step: 215 / 819 Loss: 18.39080810546875 Tokens per Sec: 27745.43243451729
Epoch Step: 220 / 819 Loss: 20.19559097290039 Tokens per Sec: 26893.88239677557
Epoch Step: 225 / 819 Loss: 18.118040084838867 Tokens per Sec: 26885.901373703513
Epoch Step: 230 / 819 Loss: 12.74016284942627 Tokens per Sec: 26626.94519325265
Epoch Step: 235 / 819 Loss: 18.981775283813477 Tokens per Sec: 24970.42105579602
Epoch Step: 240 / 819 Loss: 17.180500030517578 Tokens per Sec: 26928.706814148525
Epoch Step: 245 / 819 Loss: 19.376001358032227 Tokens per Sec: 25991.354134669837
Epoch Step: 250 / 819 Loss: 13.2415132522583 Tokens per Sec: 23623.20394188945
Epoch Step: 255 / 819 Loss: 13.808465957641602 Tokens per Sec: 23921.091532839946
Epoch Step: 260 / 819 Loss: 20.141498565673828 Tokens per Sec: 25915.370436945657
Epoch Step: 265 / 819 Loss: 14.626957893371582 Tokens per Sec: 26647.756463349655
Epoch Step: 270 / 819 Loss: 17.90804100036621 Tokens per Sec: 28448.275572272465
Epoch Step: 275 / 819 Loss: 21.342384338378906 Tokens per Sec: 23972.97754919829
Epoch Step: 280 / 819 Loss: 21.656776428222656 Tokens per Sec: 25817.801563186877
Epoch Step: 285 / 819 Loss: 16.120088577270508 Tokens per Sec: 27372.005068402235
Epoch Step: 290 / 819 Loss: 231.1996307373047 Tokens per Sec: 28010.636905368
Epoch Step: 295 / 819 Loss: 18.950613021850586 Tokens per Sec: 25293.229279451833
Epoch Step: 300 / 819 Loss: 15.166836738586426 Tokens per Sec: 24396.12474400318
Epoch Step: 305 / 819 Loss: 21.45151138305664 Tokens per Sec: 23070.380658785187
Epoch Step: 310 / 819 Loss: 12.380534172058105 Tokens per Sec: 27982.524364196954
Epoch Step: 315 / 819 Loss: 18.57356071472168 Tokens per Sec: 24415.159324360022
Epoch Step: 320 / 819 Loss: 15.06711196899414 Tokens per Sec: 25697.228390788543
Epoch Step: 325 / 819 Loss: 18.01990509033203 Tokens per Sec: 24404.451319257965
Epoch Step: 330 / 819 Loss: 16.267122268676758 Tokens per Sec: 26354.51948594731
Epoch Step: 335 / 819 Loss: 19.975122451782227 Tokens per Sec: 24678.500049556325
Epoch Step: 340 / 819 Loss: 21.4605770111084 Tokens per Sec: 26119.4943269414
Epoch Step: 345 / 819 Loss: 16.715221405029297 Tokens per Sec: 25977.640578717634
Epoch Step: 350 / 819 Loss: 13.229202270507812 Tokens per Sec: 25347.374061603543
Epoch Step: 355 / 819 Loss: 16.19059944152832 Tokens per Sec: 27478.537209354563
Epoch Step: 360 / 819 Loss: 19.699087142944336 Tokens per Sec: 24429.314650437995
Epoch Step: 365 / 819 Loss: 16.434560775756836 Tokens per Sec: 27497.334504450402
Epoch Step: 370 / 819 Loss: 128.23056030273438 Tokens per Sec: 28132.614610231263
Epoch Step: 375 / 819 Loss: 20.313819885253906 Tokens per Sec: 25112.123756793066
Epoch Step: 380 / 819 Loss: 15.839534759521484 Tokens per Sec: 23877.745305060125
Epoch Step: 385 / 819 Loss: 18.11590576171875 Tokens per Sec: 26558.131343065194
Epoch Step: 390 / 819 Loss: 17.103002548217773 Tokens per Sec: 23860.26096469712
Epoch Step: 395 / 819 Loss: 19.295011520385742 Tokens per Sec: 27195.473713365805
Epoch Step: 400 / 819 Loss: 13.566790580749512 Tokens per Sec: 27268.70514067895
Epoch Step: 405 / 819 Loss: 14.933961868286133 Tokens per Sec: 25114.65917548272
Epoch Step: 410 / 819 Loss: 20.725040435791016 Tokens per Sec: 25725.142652943305
Epoch Step: 415 / 819 Loss: 18.44818687438965 Tokens per Sec: 25800.385166579214
Epoch Step: 420 / 819 Loss: 19.82166290283203 Tokens per Sec: 24590.219307992604
Epoch Step: 425 / 819 Loss: 17.920352935791016 Tokens per Sec: 25283.758218415565
Epoch Step: 430 / 819 Loss: 13.608050346374512 Tokens per Sec: 26214.73703698942
Epoch Step: 435 / 819 Loss: 231.33424377441406 Tokens per Sec: 26518.82863517531
Epoch Step: 440 / 819 Loss: 14.929380416870117 Tokens per Sec: 25243.454076047132
Epoch Step: 445 / 819 Loss: 19.186498641967773 Tokens per Sec: 25501.88083432897
Epoch Step: 450 / 819 Loss: 18.911338806152344 Tokens per Sec: 24349.181256756274
Epoch Step: 455 / 819 Loss: 14.492980003356934 Tokens per Sec: 21878.902022495175
Epoch Step: 460 / 819 Loss: 15.94868278503418 Tokens per Sec: 27504.643359381666
Epoch Step: 465 / 819 Loss: 17.707683563232422 Tokens per Sec: 25639.685222776432
Epoch Step: 470 / 819 Loss: 18.07569122314453 Tokens per Sec: 26487.817483742852
Epoch Step: 475 / 819 Loss: 17.920724868774414 Tokens per Sec: 25829.407967293868
Epoch Step: 480 / 819 Loss: 19.57646942138672 Tokens per Sec: 27926.226457634602
Epoch Step: 485 / 819 Loss: 17.09890365600586 Tokens per Sec: 26893.94220147963
Epoch Step: 490 / 819 Loss: 22.124483108520508 Tokens per Sec: 26147.36564329919
Epoch Step: 495 / 819 Loss: 17.36105728149414 Tokens per Sec: 26841.81612955242
Epoch Step: 500 / 819 Loss: 222.82766723632812 Tokens per Sec: 25357.171656700822
Epoch Step: 505 / 819 Loss: 15.089323997497559 Tokens per Sec: 25818.844481775912
Epoch Step: 510 / 819 Loss: 21.916889190673828 Tokens per Sec: 24375.087943365048
Epoch Step: 515 / 819 Loss: 22.10942268371582 Tokens per Sec: 25552.837534264632
Epoch Step: 520 / 819 Loss: 15.909319877624512 Tokens per Sec: 24071.690340819976
Epoch Step: 525 / 819 Loss: 13.655502319335938 Tokens per Sec: 26004.23164314831
Epoch Step: 530 / 819 Loss: 22.389497756958008 Tokens per Sec: 25204.214033101558
Epoch Step: 535 / 819 Loss: 116.15245056152344 Tokens per Sec: 25674.211725962214
Epoch Step: 540 / 819 Loss: 19.614057540893555 Tokens per Sec: 25992.245451770388
Epoch Step: 545 / 819 Loss: 173.62814331054688 Tokens per Sec: 27333.44705952598
Epoch Step: 550 / 819 Loss: 21.83393669128418 Tokens per Sec: 25669.331820520394
Epoch Step: 555 / 819 Loss: 19.906553268432617 Tokens per Sec: 24284.329551429226
Epoch Step: 560 / 819 Loss: 20.88109588623047 Tokens per Sec: 25184.6276851157
Epoch Step: 565 / 819 Loss: 15.124210357666016 Tokens per Sec: 25970.953414380416
Epoch Step: 570 / 819 Loss: 23.48365592956543 Tokens per Sec: 28131.021249303274
Epoch Step: 575 / 819 Loss: 15.664448738098145 Tokens per Sec: 26904.73445280606
Epoch Step: 580 / 819 Loss: 17.665904998779297 Tokens per Sec: 24813.43061872238
Epoch Step: 585 / 819 Loss: 19.53470802307129 Tokens per Sec: 27399.227143457123
Epoch Step: 590 / 819 Loss: 21.630069732666016 Tokens per Sec: 24254.001429833297
Epoch Step: 595 / 819 Loss: 20.234989166259766 Tokens per Sec: 24862.077721384743
Epoch Step: 600 / 819 Loss: 16.57581901550293 Tokens per Sec: 27008.495962498586
Epoch Step: 605 / 819 Loss: 17.72083854675293 Tokens per Sec: 25368.647608070027
Epoch Step: 610 / 819 Loss: 195.8199005126953 Tokens per Sec: 25575.010656629907
Epoch Step: 615 / 819 Loss: 17.840009689331055 Tokens per Sec: 25003.201041851702
Epoch Step: 620 / 819 Loss: 13.576772689819336 Tokens per Sec: 24480.842932070307
Epoch Step: 625 / 819 Loss: 13.500269889831543 Tokens per Sec: 26309.175902367966
Epoch Step: 630 / 819 Loss: 13.711010932922363 Tokens per Sec: 27426.512629145698
Epoch Step: 635 / 819 Loss: 13.683121681213379 Tokens per Sec: 22602.41231192537
Epoch Step: 640 / 819 Loss: 20.378902435302734 Tokens per Sec: 25424.606905353943
Epoch Step: 645 / 819 Loss: 16.708480834960938 Tokens per Sec: 26515.222238444243
Epoch Step: 650 / 819 Loss: 16.439281463623047 Tokens per Sec: 24889.599060824105
Epoch Step: 655 / 819 Loss: 17.210290908813477 Tokens per Sec: 25746.48587651522
Epoch Step: 660 / 819 Loss: 19.33406639099121 Tokens per Sec: 26516.88450101473
Epoch Step: 665 / 819 Loss: 15.15406608581543 Tokens per Sec: 25750.303709809632
Epoch Step: 670 / 819 Loss: 19.029830932617188 Tokens per Sec: 25472.697611718795
Epoch Step: 675 / 819 Loss: 14.816093444824219 Tokens per Sec: 24575.107156747596
Epoch Step: 680 / 819 Loss: 14.431524276733398 Tokens per Sec: 25697.11637730265
Epoch Step: 685 / 819 Loss: 15.072020530700684 Tokens per Sec: 25831.61174753267
Epoch Step: 690 / 819 Loss: 21.53272247314453 Tokens per Sec: 26647.185959783525
Epoch Step: 695 / 819 Loss: 21.505741119384766 Tokens per Sec: 26610.26047429172
Epoch Step: 700 / 819 Loss: 16.56330680847168 Tokens per Sec: 27604.49744262176
Epoch Step: 705 / 819 Loss: 12.596149444580078 Tokens per Sec: 25864.460938893986
Epoch Step: 710 / 819 Loss: 205.00830078125 Tokens per Sec: 26254.87771145913
Epoch Step: 715 / 819 Loss: 20.23739242553711 Tokens per Sec: 26814.15072567895
Epoch Step: 720 / 819 Loss: 21.6862735748291 Tokens per Sec: 26939.312559471877
Epoch Step: 725 / 819 Loss: 20.23026466369629 Tokens per Sec: 23870.682808012127
Epoch Step: 730 / 819 Loss: 24.557775497436523 Tokens per Sec: 23669.73855112673
Epoch Step: 735 / 819 Loss: 21.30588150024414 Tokens per Sec: 24683.507615968934
Epoch Step: 740 / 819 Loss: 21.896486282348633 Tokens per Sec: 25529.593727940988
Epoch Step: 745 / 819 Loss: 157.3548126220703 Tokens per Sec: 27942.49541628975
Epoch Step: 750 / 819 Loss: 16.616931915283203 Tokens per Sec: 26159.756830754704
Epoch Step: 755 / 819 Loss: 17.950725555419922 Tokens per Sec: 26500.566895631637
Epoch Step: 760 / 819 Loss: 131.58380126953125 Tokens per Sec: 24884.094245855835
Epoch Step: 765 / 819 Loss: 16.736587524414062 Tokens per Sec: 27792.254209817762
Epoch Step: 770 / 819 Loss: 16.97856903076172 Tokens per Sec: 26160.157545370996
Epoch Step: 775 / 819 Loss: 233.15992736816406 Tokens per Sec: 25036.35613998558
Epoch Step: 780 / 819 Loss: 16.370508193969727 Tokens per Sec: 26407.6594015881
Epoch Step: 785 / 819 Loss: 156.20578002929688 Tokens per Sec: 25170.380687344208
Epoch Step: 790 / 819 Loss: 23.4687442779541 Tokens per Sec: 24042.939799978165
Epoch Step: 795 / 819 Loss: 17.55226707458496 Tokens per Sec: 26703.087383376398
Epoch Step: 800 / 819 Loss: 14.630430221557617 Tokens per Sec: 28592.84730792881
Epoch Step: 805 / 819 Loss: 17.436376571655273 Tokens per Sec: 22961.446377764216
Epoch Step: 810 / 819 Loss: 15.616392135620117 Tokens per Sec: 23366.56764778154
Epoch Step: 815 / 819 Loss: 16.36540985107422 Tokens per Sec: 24107.103616903078
Epoch ended with duration 0:02:31.270397
Train perplexity: 1.5539699693276026
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.322610
Validation perplexity: 1.60451491433902
Model saved checkpoint!
Epoch 31 / 1000
Epoch Step: 5 / 819 Loss: 19.71437644958496 Tokens per Sec: 25369.688857651778
Epoch Step: 10 / 819 Loss: 13.282485961914062 Tokens per Sec: 25136.256683210806
Epoch Step: 15 / 819 Loss: 12.721077919006348 Tokens per Sec: 25263.335659314056
Epoch Step: 20 / 819 Loss: 15.520353317260742 Tokens per Sec: 26013.895116377967
Epoch Step: 25 / 819 Loss: 16.66313934326172 Tokens per Sec: 23723.0921151661
Epoch Step: 30 / 819 Loss: 13.468856811523438 Tokens per Sec: 23868.60366709066
Epoch Step: 35 / 819 Loss: 20.152952194213867 Tokens per Sec: 25217.558318953368
Epoch Step: 40 / 819 Loss: 20.515962600708008 Tokens per Sec: 25980.011793454727
Epoch Step: 45 / 819 Loss: 14.540362358093262 Tokens per Sec: 27348.927038193717
Epoch Step: 50 / 819 Loss: 20.186283111572266 Tokens per Sec: 27940.568345978118
Epoch Step: 55 / 819 Loss: 156.77098083496094 Tokens per Sec: 23229.136715100194
Epoch Step: 60 / 819 Loss: 19.599515914916992 Tokens per Sec: 24657.390543222657
Epoch Step: 65 / 819 Loss: 14.473450660705566 Tokens per Sec: 26732.799010011153
Epoch Step: 70 / 819 Loss: 15.018296241760254 Tokens per Sec: 27425.622306226112
Epoch Step: 75 / 819 Loss: 20.094079971313477 Tokens per Sec: 25397.304824820563
Epoch Step: 80 / 819 Loss: 18.396575927734375 Tokens per Sec: 26667.50172414741
Epoch Step: 85 / 819 Loss: 20.69159698486328 Tokens per Sec: 26019.785250420475
Epoch Step: 90 / 819 Loss: 13.58471965789795 Tokens per Sec: 25669.364685857177
Epoch Step: 95 / 819 Loss: 18.185226440429688 Tokens per Sec: 26926.308357635462
Epoch Step: 100 / 819 Loss: 12.500606536865234 Tokens per Sec: 28141.31725909057
Epoch Step: 105 / 819 Loss: 16.57102394104004 Tokens per Sec: 23983.82799787363
Epoch Step: 110 / 819 Loss: 18.994796752929688 Tokens per Sec: 26984.77287373592
Epoch Step: 115 / 819 Loss: 17.67449951171875 Tokens per Sec: 24184.229789140798
Epoch Step: 120 / 819 Loss: 176.90234375 Tokens per Sec: 24523.202269332156
Epoch Step: 125 / 819 Loss: 17.608627319335938 Tokens per Sec: 22960.084617105076
Epoch Step: 130 / 819 Loss: 16.192062377929688 Tokens per Sec: 28589.67622833443
Epoch Step: 135 / 819 Loss: 26.15868377685547 Tokens per Sec: 23373.645014275695
Epoch Step: 140 / 819 Loss: 13.52755355834961 Tokens per Sec: 25960.553098148015
Epoch Step: 145 / 819 Loss: 17.04924964904785 Tokens per Sec: 27137.512821555807
Epoch Step: 150 / 819 Loss: 20.33271598815918 Tokens per Sec: 24989.906955949602
Epoch Step: 155 / 819 Loss: 15.939164161682129 Tokens per Sec: 26059.25902820091
Epoch Step: 160 / 819 Loss: 16.0324649810791 Tokens per Sec: 25736.775838218164
Epoch Step: 165 / 819 Loss: 17.513694763183594 Tokens per Sec: 27585.263448305825
Epoch Step: 170 / 819 Loss: 18.222400665283203 Tokens per Sec: 27184.130643589375
Epoch Step: 175 / 819 Loss: 20.553882598876953 Tokens per Sec: 26016.158297499653
Epoch Step: 180 / 819 Loss: 15.578879356384277 Tokens per Sec: 25701.095987950157
Epoch Step: 185 / 819 Loss: 22.34731101989746 Tokens per Sec: 26340.05490549923
Epoch Step: 190 / 819 Loss: 12.531634330749512 Tokens per Sec: 28340.919440474976
Epoch Step: 195 / 819 Loss: 13.707588195800781 Tokens per Sec: 24013.572850398108
Epoch Step: 200 / 819 Loss: 14.252805709838867 Tokens per Sec: 23628.309019575994
Epoch Step: 205 / 819 Loss: 14.736397743225098 Tokens per Sec: 25702.475589857582
Epoch Step: 210 / 819 Loss: 21.677593231201172 Tokens per Sec: 26200.54738218612
Epoch Step: 215 / 819 Loss: 18.025291442871094 Tokens per Sec: 27460.57272986052
Epoch Step: 220 / 819 Loss: 12.362462043762207 Tokens per Sec: 28314.33735434684
Epoch Step: 225 / 819 Loss: 17.13224983215332 Tokens per Sec: 27829.987931572792
Epoch Step: 230 / 819 Loss: 22.357053756713867 Tokens per Sec: 25386.685275576612
Epoch Step: 235 / 819 Loss: 15.2271089553833 Tokens per Sec: 24449.185585559364
Epoch Step: 240 / 819 Loss: 13.164033889770508 Tokens per Sec: 26538.624723125853
Epoch Step: 245 / 819 Loss: 16.78081512451172 Tokens per Sec: 26081.12477718882
Epoch Step: 250 / 819 Loss: 14.753397941589355 Tokens per Sec: 26135.24578057005
Epoch Step: 255 / 819 Loss: 279.1274108886719 Tokens per Sec: 26239.906300431456
Epoch Step: 260 / 819 Loss: 15.450702667236328 Tokens per Sec: 24698.75221539987
Epoch Step: 265 / 819 Loss: 176.3979034423828 Tokens per Sec: 26151.89049030655
Epoch Step: 270 / 819 Loss: 22.147756576538086 Tokens per Sec: 23590.51491783961
Epoch Step: 275 / 819 Loss: 18.493209838867188 Tokens per Sec: 26273.514234416787
Epoch Step: 280 / 819 Loss: 18.175270080566406 Tokens per Sec: 23926.758451208163
Epoch Step: 285 / 819 Loss: 229.67991638183594 Tokens per Sec: 27895.83117547856
Epoch Step: 290 / 819 Loss: 20.792858123779297 Tokens per Sec: 25684.73375022217
Epoch Step: 295 / 819 Loss: 19.79340171813965 Tokens per Sec: 24655.38909109285
Epoch Step: 300 / 819 Loss: 23.64102554321289 Tokens per Sec: 23335.84070655785
Epoch Step: 305 / 819 Loss: 25.219751358032227 Tokens per Sec: 27356.42026905872
Epoch Step: 310 / 819 Loss: 149.0890350341797 Tokens per Sec: 26215.444570387193
Epoch Step: 315 / 819 Loss: 25.77961540222168 Tokens per Sec: 26821.76605827612
Epoch Step: 320 / 819 Loss: 23.18180274963379 Tokens per Sec: 27286.952761742206
Epoch Step: 325 / 819 Loss: 21.62276840209961 Tokens per Sec: 24385.080082440032
Epoch Step: 330 / 819 Loss: 18.772258758544922 Tokens per Sec: 26240.261164066946
Epoch Step: 335 / 819 Loss: 15.396573066711426 Tokens per Sec: 24305.0016546283
Epoch Step: 340 / 819 Loss: 25.050647735595703 Tokens per Sec: 25020.014460725208
Epoch Step: 345 / 819 Loss: 17.406156539916992 Tokens per Sec: 25183.113991015947
Epoch Step: 350 / 819 Loss: 18.190162658691406 Tokens per Sec: 26781.19104463301
Epoch Step: 355 / 819 Loss: 16.493122100830078 Tokens per Sec: 25393.113324895046
Epoch Step: 360 / 819 Loss: 19.612564086914062 Tokens per Sec: 26860.788522959418
Epoch Step: 365 / 819 Loss: 12.661293029785156 Tokens per Sec: 26915.125881573724
Epoch Step: 370 / 819 Loss: 16.38673973083496 Tokens per Sec: 25639.153972827036
Epoch Step: 375 / 819 Loss: 210.19505310058594 Tokens per Sec: 24555.096530265353
Epoch Step: 380 / 819 Loss: 22.40513038635254 Tokens per Sec: 27276.362755838873
Epoch Step: 385 / 819 Loss: 16.533252716064453 Tokens per Sec: 22531.388450627448
Epoch Step: 390 / 819 Loss: 19.5898380279541 Tokens per Sec: 26427.726155234483
Epoch Step: 395 / 819 Loss: 20.791366577148438 Tokens per Sec: 26671.276263097487
Epoch Step: 400 / 819 Loss: 20.771699905395508 Tokens per Sec: 20742.178218911376
Epoch Step: 405 / 819 Loss: 13.131784439086914 Tokens per Sec: 22485.04293195407
Epoch Step: 410 / 819 Loss: 15.395426750183105 Tokens per Sec: 26825.96724079448
Epoch Step: 415 / 819 Loss: 19.68937873840332 Tokens per Sec: 25805.085034533015
Epoch Step: 420 / 819 Loss: 16.297855377197266 Tokens per Sec: 26764.565537199633
Epoch Step: 425 / 819 Loss: 15.507512092590332 Tokens per Sec: 27140.657429169903
Epoch Step: 430 / 819 Loss: 17.544893264770508 Tokens per Sec: 25684.366359827673
Epoch Step: 435 / 819 Loss: 224.80628967285156 Tokens per Sec: 24874.581130644623
Epoch Step: 440 / 819 Loss: 21.979143142700195 Tokens per Sec: 24654.026534872002
Epoch Step: 445 / 819 Loss: 13.11732006072998 Tokens per Sec: 25616.279982359054
Epoch Step: 450 / 819 Loss: 13.012860298156738 Tokens per Sec: 22534.734803743486
Epoch Step: 455 / 819 Loss: 11.23440170288086 Tokens per Sec: 23875.851726817986
Epoch Step: 460 / 819 Loss: 239.2406768798828 Tokens per Sec: 27499.121835933034
Epoch Step: 465 / 819 Loss: 22.08795738220215 Tokens per Sec: 27570.899332282697
Epoch Step: 470 / 819 Loss: 21.368614196777344 Tokens per Sec: 25884.943256966373
Epoch Step: 475 / 819 Loss: 24.216190338134766 Tokens per Sec: 24885.748930855414
Epoch Step: 480 / 819 Loss: 21.30985450744629 Tokens per Sec: 25508.68450500825
Epoch Step: 485 / 819 Loss: 24.5224552154541 Tokens per Sec: 25788.31392352954
Epoch Step: 490 / 819 Loss: 22.43471908569336 Tokens per Sec: 24977.04881995097
Epoch Step: 495 / 819 Loss: 25.259628295898438 Tokens per Sec: 24872.721419808
Epoch Step: 500 / 819 Loss: 12.596686363220215 Tokens per Sec: 27779.990491400295
Epoch Step: 505 / 819 Loss: 20.99227523803711 Tokens per Sec: 23536.216011252483
Epoch Step: 510 / 819 Loss: 16.88701629638672 Tokens per Sec: 23971.752668605233
Epoch Step: 515 / 819 Loss: 21.276599884033203 Tokens per Sec: 25820.50098410689
Epoch Step: 520 / 819 Loss: 17.238304138183594 Tokens per Sec: 23042.47985417649
Epoch Step: 525 / 819 Loss: 17.217262268066406 Tokens per Sec: 26859.76949335269
Epoch Step: 530 / 819 Loss: 17.358325958251953 Tokens per Sec: 27601.89770416641
Epoch Step: 535 / 819 Loss: 18.894351959228516 Tokens per Sec: 24964.86750941976
Epoch Step: 540 / 819 Loss: 13.414280891418457 Tokens per Sec: 25332.463703755715
Epoch Step: 545 / 819 Loss: 19.207826614379883 Tokens per Sec: 26597.570965294613
Epoch Step: 550 / 819 Loss: 17.66893768310547 Tokens per Sec: 26382.789533294046
Epoch Step: 555 / 819 Loss: 200.92486572265625 Tokens per Sec: 24466.869305055123
Epoch Step: 560 / 819 Loss: 15.729341506958008 Tokens per Sec: 25193.707500232533
Epoch Step: 565 / 819 Loss: 14.970982551574707 Tokens per Sec: 25855.668167380743
Epoch Step: 570 / 819 Loss: 19.783946990966797 Tokens per Sec: 25749.712247498865
Epoch Step: 575 / 819 Loss: 20.366653442382812 Tokens per Sec: 24194.868876536944
Epoch Step: 580 / 819 Loss: 14.472084999084473 Tokens per Sec: 28361.277438754198
Epoch Step: 585 / 819 Loss: 13.394160270690918 Tokens per Sec: 28045.757051291042
Epoch Step: 590 / 819 Loss: 20.713054656982422 Tokens per Sec: 26644.58284637058
Epoch Step: 595 / 819 Loss: 16.744718551635742 Tokens per Sec: 22666.664987630713
Epoch Step: 600 / 819 Loss: 12.986345291137695 Tokens per Sec: 25760.272782438016
Epoch Step: 605 / 819 Loss: 97.29741668701172 Tokens per Sec: 27817.223222004588
Epoch Step: 610 / 819 Loss: 20.514507293701172 Tokens per Sec: 26878.920047491385
Epoch Step: 615 / 819 Loss: 21.959312438964844 Tokens per Sec: 23525.844168452553
Epoch Step: 620 / 819 Loss: 16.65561866760254 Tokens per Sec: 24257.745888515838
Epoch Step: 625 / 819 Loss: 17.760074615478516 Tokens per Sec: 26292.936659909756
Epoch Step: 630 / 819 Loss: 19.74616241455078 Tokens per Sec: 28140.657028846817
Epoch Step: 635 / 819 Loss: 20.46201515197754 Tokens per Sec: 25510.336201497237
Epoch Step: 640 / 819 Loss: 14.678977012634277 Tokens per Sec: 26010.215338662907
Epoch Step: 645 / 819 Loss: 260.4994812011719 Tokens per Sec: 26452.888490608773
Epoch Step: 650 / 819 Loss: 17.57763671875 Tokens per Sec: 25274.375245980056
Epoch Step: 655 / 819 Loss: 16.657360076904297 Tokens per Sec: 27418.322626994344
Epoch Step: 660 / 819 Loss: 19.687910079956055 Tokens per Sec: 24150.270518378024
Epoch Step: 665 / 819 Loss: 18.467220306396484 Tokens per Sec: 24599.50340995858
Epoch Step: 670 / 819 Loss: 104.65838623046875 Tokens per Sec: 25799.479707556817
Epoch Step: 675 / 819 Loss: 17.566381454467773 Tokens per Sec: 26658.898110051752
Epoch Step: 680 / 819 Loss: 20.86517333984375 Tokens per Sec: 23909.70335497146
Epoch Step: 685 / 819 Loss: 19.77279281616211 Tokens per Sec: 28112.325327398346
Epoch Step: 690 / 819 Loss: 22.818037033081055 Tokens per Sec: 24283.553730593616
Epoch Step: 695 / 819 Loss: 15.730452537536621 Tokens per Sec: 24804.57289955195
Epoch Step: 700 / 819 Loss: 12.988389015197754 Tokens per Sec: 26399.7733307877
Epoch Step: 705 / 819 Loss: 20.6727352142334 Tokens per Sec: 25533.718499725725
Epoch Step: 710 / 819 Loss: 17.443944931030273 Tokens per Sec: 26682.33823479716
Epoch Step: 715 / 819 Loss: 13.504023551940918 Tokens per Sec: 25805.885403172633
Epoch Step: 720 / 819 Loss: 17.586994171142578 Tokens per Sec: 25041.324260800087
Epoch Step: 725 / 819 Loss: 17.239341735839844 Tokens per Sec: 27005.214155393674
Epoch Step: 730 / 819 Loss: 15.732586860656738 Tokens per Sec: 25005.194690401386
Epoch Step: 735 / 819 Loss: 17.641517639160156 Tokens per Sec: 25713.309375837187
Epoch Step: 740 / 819 Loss: 20.511308670043945 Tokens per Sec: 24611.28282226991
Epoch Step: 745 / 819 Loss: 19.2961368560791 Tokens per Sec: 25342.45023828186
Epoch Step: 750 / 819 Loss: 13.556593894958496 Tokens per Sec: 24203.902025772157
Epoch Step: 755 / 819 Loss: 15.987079620361328 Tokens per Sec: 25261.79843869843
Epoch Step: 760 / 819 Loss: 16.361309051513672 Tokens per Sec: 26591.529721025916
Epoch Step: 765 / 819 Loss: 20.75279426574707 Tokens per Sec: 25567.627037614853
Epoch Step: 770 / 819 Loss: 15.35842227935791 Tokens per Sec: 27625.624062600007
Epoch Step: 775 / 819 Loss: 17.30847930908203 Tokens per Sec: 26395.1013149778
Epoch Step: 780 / 819 Loss: 20.534421920776367 Tokens per Sec: 24237.805275627936
Epoch Step: 785 / 819 Loss: 14.950287818908691 Tokens per Sec: 28435.098332646336
Epoch Step: 790 / 819 Loss: 257.37847900390625 Tokens per Sec: 26700.946881571897
Epoch Step: 795 / 819 Loss: 23.74943733215332 Tokens per Sec: 25218.741231255874
Epoch Step: 800 / 819 Loss: 19.529987335205078 Tokens per Sec: 26726.377675323525
Epoch Step: 805 / 819 Loss: 17.536502838134766 Tokens per Sec: 23683.48436610949
Epoch Step: 810 / 819 Loss: 17.878381729125977 Tokens per Sec: 23248.727472349536
Epoch Step: 815 / 819 Loss: 13.781936645507812 Tokens per Sec: 23705.85080822796
Epoch ended with duration 0:02:31.700223
Train perplexity: 1.579448759618387
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.295666
Validation perplexity: 1.7163163264626018
Epoch 32 / 1000
Epoch Step: 5 / 819 Loss: 22.744976043701172 Tokens per Sec: 27878.62931495324
Epoch Step: 10 / 819 Loss: 19.472854614257812 Tokens per Sec: 25132.457474768024
Epoch Step: 15 / 819 Loss: 19.83799171447754 Tokens per Sec: 25792.331417820948
Epoch Step: 20 / 819 Loss: 15.113962173461914 Tokens per Sec: 26667.800791265236
Epoch Step: 25 / 819 Loss: 15.081219673156738 Tokens per Sec: 26213.90719199555
Epoch Step: 30 / 819 Loss: 117.94093322753906 Tokens per Sec: 24147.186289428973
Epoch Step: 35 / 819 Loss: 20.04300308227539 Tokens per Sec: 26575.59587605893
Epoch Step: 40 / 819 Loss: 14.761372566223145 Tokens per Sec: 26303.71064744604
Epoch Step: 45 / 819 Loss: 20.528533935546875 Tokens per Sec: 25997.915698394452
Epoch Step: 50 / 819 Loss: 17.09394073486328 Tokens per Sec: 23520.314808026098
Epoch Step: 55 / 819 Loss: 14.188852310180664 Tokens per Sec: 24410.266112684796
Epoch Step: 60 / 819 Loss: 23.068315505981445 Tokens per Sec: 25779.126117059575
Epoch Step: 65 / 819 Loss: 173.16708374023438 Tokens per Sec: 26523.93667447529
Epoch Step: 70 / 819 Loss: 19.77645492553711 Tokens per Sec: 27044.94715256567
Epoch Step: 75 / 819 Loss: 13.968914031982422 Tokens per Sec: 24291.90061503129
Epoch Step: 80 / 819 Loss: 12.847762107849121 Tokens per Sec: 26316.86330587002
Epoch Step: 85 / 819 Loss: 20.579505920410156 Tokens per Sec: 23959.40772420326
Epoch Step: 90 / 819 Loss: 18.086442947387695 Tokens per Sec: 25985.198102506318
Epoch Step: 95 / 819 Loss: 18.885835647583008 Tokens per Sec: 25131.25347365879
Epoch Step: 100 / 819 Loss: 15.864402770996094 Tokens per Sec: 24804.08565030584
Epoch Step: 105 / 819 Loss: 17.334810256958008 Tokens per Sec: 26543.159843726582
Epoch Step: 110 / 819 Loss: 18.873899459838867 Tokens per Sec: 27001.962385112434
Epoch Step: 115 / 819 Loss: 20.280467987060547 Tokens per Sec: 23353.045962093798
Epoch Step: 120 / 819 Loss: 21.67013931274414 Tokens per Sec: 25104.559402971827
Epoch Step: 125 / 819 Loss: 13.835721969604492 Tokens per Sec: 24075.220392339772
Epoch Step: 130 / 819 Loss: 16.755159378051758 Tokens per Sec: 26539.643842742986
Epoch Step: 135 / 819 Loss: 15.174163818359375 Tokens per Sec: 25491.793112608757
Epoch Step: 140 / 819 Loss: 20.333412170410156 Tokens per Sec: 26175.701639688094
Epoch Step: 145 / 819 Loss: 12.537677764892578 Tokens per Sec: 26989.498388643726
Epoch Step: 150 / 819 Loss: 16.962907791137695 Tokens per Sec: 27181.75094538218
Epoch Step: 155 / 819 Loss: 18.104021072387695 Tokens per Sec: 24291.50691673506
Epoch Step: 160 / 819 Loss: 20.985828399658203 Tokens per Sec: 23758.42173610337
Epoch Step: 165 / 819 Loss: 17.823562622070312 Tokens per Sec: 29145.10700223056
Epoch Step: 170 / 819 Loss: 18.947376251220703 Tokens per Sec: 25452.97068608336
Epoch Step: 175 / 819 Loss: 15.133342742919922 Tokens per Sec: 25478.087731960382
Epoch Step: 180 / 819 Loss: 15.706125259399414 Tokens per Sec: 25732.965684297247
Epoch Step: 185 / 819 Loss: 18.53927993774414 Tokens per Sec: 26082.88706892183
Epoch Step: 190 / 819 Loss: 17.120948791503906 Tokens per Sec: 28334.183090525312
Epoch Step: 195 / 819 Loss: 18.121082305908203 Tokens per Sec: 26115.46904154374
Epoch Step: 200 / 819 Loss: 13.708121299743652 Tokens per Sec: 24272.09904883298
Epoch Step: 205 / 819 Loss: 10.925457000732422 Tokens per Sec: 26150.413955770946
Epoch Step: 210 / 819 Loss: 323.2355041503906 Tokens per Sec: 26081.140631293845
Epoch Step: 215 / 819 Loss: 22.251401901245117 Tokens per Sec: 24626.11838874618
Epoch Step: 220 / 819 Loss: 224.49351501464844 Tokens per Sec: 23617.666705763506
Epoch Step: 225 / 819 Loss: 16.641693115234375 Tokens per Sec: 28154.01284917503
Epoch Step: 230 / 819 Loss: 22.66524314880371 Tokens per Sec: 26264.727809309014
Epoch Step: 235 / 819 Loss: 18.50173568725586 Tokens per Sec: 25262.200672251325
Epoch Step: 240 / 819 Loss: 19.78072166442871 Tokens per Sec: 26424.012992565018
Epoch Step: 245 / 819 Loss: 186.5130615234375 Tokens per Sec: 25201.884553689193
Epoch Step: 250 / 819 Loss: 16.59642219543457 Tokens per Sec: 25181.757026391253
Epoch Step: 255 / 819 Loss: 19.529930114746094 Tokens per Sec: 27362.213601094707
Epoch Step: 260 / 819 Loss: 18.40385627746582 Tokens per Sec: 25894.420198701166
Epoch Step: 265 / 819 Loss: 157.7928009033203 Tokens per Sec: 24180.63756807415
Epoch Step: 270 / 819 Loss: 22.209321975708008 Tokens per Sec: 26563.722508188457
Epoch Step: 275 / 819 Loss: 20.336576461791992 Tokens per Sec: 24707.84806213269
Epoch Step: 280 / 819 Loss: 16.540409088134766 Tokens per Sec: 26574.042968164355
Epoch Step: 285 / 819 Loss: 19.258251190185547 Tokens per Sec: 25071.10609104426
Epoch Step: 290 / 819 Loss: 15.79389762878418 Tokens per Sec: 23716.4103131492
Epoch Step: 295 / 819 Loss: 23.707454681396484 Tokens per Sec: 26276.83055452656
Epoch Step: 300 / 819 Loss: 260.4041748046875 Tokens per Sec: 23617.98903251157
Epoch Step: 305 / 819 Loss: 16.874889373779297 Tokens per Sec: 26858.58631360887
Epoch Step: 310 / 819 Loss: 22.5721378326416 Tokens per Sec: 26622.841461007523
Epoch Step: 315 / 819 Loss: 19.70570182800293 Tokens per Sec: 24673.80500211596
Epoch Step: 320 / 819 Loss: 21.933122634887695 Tokens per Sec: 26325.65981534798
Epoch Step: 325 / 819 Loss: 19.93929100036621 Tokens per Sec: 24494.662829437453
Epoch Step: 330 / 819 Loss: 18.181041717529297 Tokens per Sec: 23514.090266362924
Epoch Step: 335 / 819 Loss: 197.17672729492188 Tokens per Sec: 25558.14650090788
Epoch Step: 340 / 819 Loss: 14.980286598205566 Tokens per Sec: 25576.81734316989
Epoch Step: 345 / 819 Loss: 21.9564151763916 Tokens per Sec: 25151.874706497165
Epoch Step: 350 / 819 Loss: 150.61404418945312 Tokens per Sec: 25471.789988093016
Epoch Step: 355 / 819 Loss: 16.65201187133789 Tokens per Sec: 28028.176948095883
Epoch Step: 360 / 819 Loss: 14.551654815673828 Tokens per Sec: 26824.42694457199
Epoch Step: 365 / 819 Loss: 18.9217529296875 Tokens per Sec: 23922.520600094496
Epoch Step: 370 / 819 Loss: 15.516093254089355 Tokens per Sec: 27152.22267434998
Epoch Step: 375 / 819 Loss: 19.08693504333496 Tokens per Sec: 25552.54695695222
Epoch Step: 380 / 819 Loss: 10.937555313110352 Tokens per Sec: 26173.599870242364
Epoch Step: 385 / 819 Loss: 18.374454498291016 Tokens per Sec: 26393.31345891346
Epoch Step: 390 / 819 Loss: 17.98935890197754 Tokens per Sec: 24205.99236517378
Epoch Step: 395 / 819 Loss: 15.785820007324219 Tokens per Sec: 23987.422563390068
Epoch Step: 400 / 819 Loss: 12.42857837677002 Tokens per Sec: 25660.27431678202
Epoch Step: 405 / 819 Loss: 13.09134578704834 Tokens per Sec: 24374.500431289685
Epoch Step: 410 / 819 Loss: 20.76722526550293 Tokens per Sec: 25067.968695068757
Epoch Step: 415 / 819 Loss: 19.033830642700195 Tokens per Sec: 26396.568765494947
Epoch Step: 420 / 819 Loss: 110.83076477050781 Tokens per Sec: 24996.028719901136
Epoch Step: 425 / 819 Loss: 14.835004806518555 Tokens per Sec: 28377.508417208122
Epoch Step: 430 / 819 Loss: 21.84036636352539 Tokens per Sec: 26545.823540589852
Epoch Step: 435 / 819 Loss: 14.444995880126953 Tokens per Sec: 26251.27442272131
Epoch Step: 440 / 819 Loss: 16.85162925720215 Tokens per Sec: 25336.230210793317
Epoch Step: 445 / 819 Loss: 241.8645477294922 Tokens per Sec: 26119.36562702769
Epoch Step: 450 / 819 Loss: 17.768375396728516 Tokens per Sec: 25551.591816207823
Epoch Step: 455 / 819 Loss: 12.797643661499023 Tokens per Sec: 27366.553056248085
Epoch Step: 460 / 819 Loss: 14.05911636352539 Tokens per Sec: 25974.099814643105
Epoch Step: 465 / 819 Loss: 15.882600784301758 Tokens per Sec: 26093.165058808234
Epoch Step: 470 / 819 Loss: 15.613105773925781 Tokens per Sec: 24511.350611160164
Epoch Step: 475 / 819 Loss: 18.719079971313477 Tokens per Sec: 24978.76422837247
Epoch Step: 480 / 819 Loss: 20.996593475341797 Tokens per Sec: 26155.691703838496
Epoch Step: 485 / 819 Loss: 175.06263732910156 Tokens per Sec: 26555.63072409755
Epoch Step: 490 / 819 Loss: 136.21604919433594 Tokens per Sec: 25916.316471289243
Epoch Step: 495 / 819 Loss: 22.76744842529297 Tokens per Sec: 26811.760744209118
Epoch Step: 500 / 819 Loss: 18.88490867614746 Tokens per Sec: 25863.757617617444
Epoch Step: 505 / 819 Loss: 16.544902801513672 Tokens per Sec: 27507.028043122846
Epoch Step: 510 / 819 Loss: 20.213214874267578 Tokens per Sec: 26932.53123344036
Epoch Step: 515 / 819 Loss: 20.81271743774414 Tokens per Sec: 25953.3411953786
Epoch Step: 520 / 819 Loss: 23.608476638793945 Tokens per Sec: 24115.967133944327
Epoch Step: 525 / 819 Loss: 12.882356643676758 Tokens per Sec: 24998.19008376242
Epoch Step: 530 / 819 Loss: 18.24534034729004 Tokens per Sec: 24881.3630910433
Epoch Step: 535 / 819 Loss: 18.140836715698242 Tokens per Sec: 26106.98860569314
Epoch Step: 540 / 819 Loss: 15.407333374023438 Tokens per Sec: 24720.255753510806
Epoch Step: 545 / 819 Loss: 226.1686553955078 Tokens per Sec: 25799.1158374634
Epoch Step: 550 / 819 Loss: 19.273420333862305 Tokens per Sec: 25368.990559634887
Epoch Step: 555 / 819 Loss: 18.25677490234375 Tokens per Sec: 27162.941590011273
Epoch Step: 560 / 819 Loss: 18.378509521484375 Tokens per Sec: 27619.756241590436
Epoch Step: 565 / 819 Loss: 14.747796058654785 Tokens per Sec: 23442.764399352996
Epoch Step: 570 / 819 Loss: 17.133930206298828 Tokens per Sec: 26963.790365215027
Epoch Step: 575 / 819 Loss: 19.90026092529297 Tokens per Sec: 26435.905805901635
Epoch Step: 580 / 819 Loss: 202.25531005859375 Tokens per Sec: 23884.720466809227
Epoch Step: 585 / 819 Loss: 20.45197868347168 Tokens per Sec: 27093.341404577135
Epoch Step: 590 / 819 Loss: 19.991933822631836 Tokens per Sec: 25716.637133317097
Epoch Step: 595 / 819 Loss: 17.114356994628906 Tokens per Sec: 25788.367787938103
Epoch Step: 600 / 819 Loss: 18.99652862548828 Tokens per Sec: 26689.453598853645
Epoch Step: 605 / 819 Loss: 16.84337615966797 Tokens per Sec: 25333.53400509814
Epoch Step: 610 / 819 Loss: 14.681767463684082 Tokens per Sec: 24271.723495898143
Epoch Step: 615 / 819 Loss: 22.727941513061523 Tokens per Sec: 26901.156919149045
Epoch Step: 620 / 819 Loss: 13.480036735534668 Tokens per Sec: 24501.835709380008
Epoch Step: 625 / 819 Loss: 177.71670532226562 Tokens per Sec: 26510.598664086396
Epoch Step: 630 / 819 Loss: 22.93108367919922 Tokens per Sec: 26154.097520275907
Epoch Step: 635 / 819 Loss: 22.639129638671875 Tokens per Sec: 23199.926108881544
Epoch Step: 640 / 819 Loss: 18.07570457458496 Tokens per Sec: 28106.836709645835
Epoch Step: 645 / 819 Loss: 14.273061752319336 Tokens per Sec: 27297.217101330734
Epoch Step: 650 / 819 Loss: 21.304668426513672 Tokens per Sec: 26859.96832194646
Epoch Step: 655 / 819 Loss: 24.73679542541504 Tokens per Sec: 24363.43547891057
Epoch Step: 660 / 819 Loss: 196.9250946044922 Tokens per Sec: 26011.4921437296
Epoch Step: 665 / 819 Loss: 20.9007568359375 Tokens per Sec: 25512.885590042486
Epoch Step: 670 / 819 Loss: 17.81098747253418 Tokens per Sec: 24196.153084629364
Epoch Step: 675 / 819 Loss: 15.659687042236328 Tokens per Sec: 24680.458698523442
Epoch Step: 680 / 819 Loss: 19.899185180664062 Tokens per Sec: 23364.677549899443
Epoch Step: 685 / 819 Loss: 218.16188049316406 Tokens per Sec: 24453.246816896895
Epoch Step: 690 / 819 Loss: 20.07931137084961 Tokens per Sec: 28239.446511609345
Epoch Step: 695 / 819 Loss: 17.291887283325195 Tokens per Sec: 27320.455509620373
Epoch Step: 700 / 819 Loss: 26.082183837890625 Tokens per Sec: 24959.689196260966
Epoch Step: 705 / 819 Loss: 17.141822814941406 Tokens per Sec: 24420.800955387298
Epoch Step: 710 / 819 Loss: 13.23570728302002 Tokens per Sec: 25423.213215884887
Epoch Step: 715 / 819 Loss: 124.37604522705078 Tokens per Sec: 25327.56767284786
Epoch Step: 720 / 819 Loss: 19.816484451293945 Tokens per Sec: 25606.446703289723
Epoch Step: 725 / 819 Loss: 13.149090766906738 Tokens per Sec: 25866.618130267478
Epoch Step: 730 / 819 Loss: 202.4342803955078 Tokens per Sec: 24973.733379446116
Epoch Step: 735 / 819 Loss: 23.45101547241211 Tokens per Sec: 24869.205618514166
Epoch Step: 740 / 819 Loss: 17.87601661682129 Tokens per Sec: 24357.589767294532
Epoch Step: 745 / 819 Loss: 18.11809730529785 Tokens per Sec: 27093.51060221167
Epoch Step: 750 / 819 Loss: 24.996177673339844 Tokens per Sec: 25472.416609497846
Epoch Step: 755 / 819 Loss: 19.242244720458984 Tokens per Sec: 25769.88368103738
Epoch Step: 760 / 819 Loss: 14.865630149841309 Tokens per Sec: 24606.31235773774
Epoch Step: 765 / 819 Loss: 18.713489532470703 Tokens per Sec: 25113.988711935977
Epoch Step: 770 / 819 Loss: 14.804296493530273 Tokens per Sec: 27951.015627861718
Epoch Step: 775 / 819 Loss: 18.176252365112305 Tokens per Sec: 25568.008525552086
Epoch Step: 780 / 819 Loss: 18.91604995727539 Tokens per Sec: 26988.843366306402
Epoch Step: 785 / 819 Loss: 17.97521209716797 Tokens per Sec: 26498.758418561276
Epoch Step: 790 / 819 Loss: 22.238971710205078 Tokens per Sec: 26750.20862212414
Epoch Step: 795 / 819 Loss: 20.063106536865234 Tokens per Sec: 23984.831207568684
Epoch Step: 800 / 819 Loss: 19.10785484313965 Tokens per Sec: 26607.000192647385
Epoch Step: 805 / 819 Loss: 17.486366271972656 Tokens per Sec: 24099.58621348206
Epoch Step: 810 / 819 Loss: 17.7811336517334 Tokens per Sec: 24957.55121796213
Epoch Step: 815 / 819 Loss: 19.490602493286133 Tokens per Sec: 20015.90388150244
Epoch ended with duration 0:02:31.595774
Train perplexity: 1.6202838148335115
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.257468
Validation perplexity: 1.4839180885464216
Epoch 33 / 1000
Epoch Step: 5 / 819 Loss: 17.02232551574707 Tokens per Sec: 24710.57467969895
Epoch Step: 10 / 819 Loss: 16.552227020263672 Tokens per Sec: 22211.362907227605
Epoch Step: 15 / 819 Loss: 11.900482177734375 Tokens per Sec: 25983.047220930686
Epoch Step: 20 / 819 Loss: 13.595860481262207 Tokens per Sec: 25021.200147879514
Epoch Step: 25 / 819 Loss: 16.916902542114258 Tokens per Sec: 26200.636136310095
Epoch Step: 30 / 819 Loss: 146.87445068359375 Tokens per Sec: 25911.889857236416
Epoch Step: 35 / 819 Loss: 12.567242622375488 Tokens per Sec: 27018.08561309785
Epoch Step: 40 / 819 Loss: 16.948511123657227 Tokens per Sec: 26780.904414049386
Epoch Step: 45 / 819 Loss: 16.37603759765625 Tokens per Sec: 24654.13644175099
Epoch Step: 50 / 819 Loss: 13.248934745788574 Tokens per Sec: 25869.265917481258
Epoch Step: 55 / 819 Loss: 16.325212478637695 Tokens per Sec: 23867.483645441247
Epoch Step: 60 / 819 Loss: 19.067399978637695 Tokens per Sec: 23863.980626893976
Epoch Step: 65 / 819 Loss: 20.10338020324707 Tokens per Sec: 24969.04025605335
Epoch Step: 70 / 819 Loss: 105.40425109863281 Tokens per Sec: 27774.10390369836
Epoch Step: 75 / 819 Loss: 20.215282440185547 Tokens per Sec: 26335.84151409545
Epoch Step: 80 / 819 Loss: 23.128616333007812 Tokens per Sec: 26337.242866481847
Epoch Step: 85 / 819 Loss: 21.092844009399414 Tokens per Sec: 26841.288292959667
Epoch Step: 90 / 819 Loss: 18.853626251220703 Tokens per Sec: 26740.34960101119
Epoch Step: 95 / 819 Loss: 13.301803588867188 Tokens per Sec: 26783.1282787519
Epoch Step: 100 / 819 Loss: 190.1404571533203 Tokens per Sec: 25968.89854688604
Epoch Step: 105 / 819 Loss: 17.546770095825195 Tokens per Sec: 24534.223261005332
Epoch Step: 110 / 819 Loss: 16.09768295288086 Tokens per Sec: 26970.06529292301
Epoch Step: 115 / 819 Loss: 18.649677276611328 Tokens per Sec: 26306.611756589562
Epoch Step: 120 / 819 Loss: 173.15711975097656 Tokens per Sec: 25766.18005289869
Epoch Step: 125 / 819 Loss: 20.292640686035156 Tokens per Sec: 24853.253949272246
Epoch Step: 130 / 819 Loss: 20.848583221435547 Tokens per Sec: 27272.70808067588
Epoch Step: 135 / 819 Loss: 13.651435852050781 Tokens per Sec: 22853.9739564897
Epoch Step: 140 / 819 Loss: 13.65699577331543 Tokens per Sec: 27174.56023867492
Epoch Step: 145 / 819 Loss: 22.044281005859375 Tokens per Sec: 23708.295881222402
Epoch Step: 150 / 819 Loss: 16.566715240478516 Tokens per Sec: 25707.639888006936
Epoch Step: 155 / 819 Loss: 17.806346893310547 Tokens per Sec: 24168.814714473538
Epoch Step: 160 / 819 Loss: 18.942975997924805 Tokens per Sec: 25859.27529205151
Epoch Step: 165 / 819 Loss: 19.198251724243164 Tokens per Sec: 27456.814889999365
Epoch Step: 170 / 819 Loss: 14.708192825317383 Tokens per Sec: 25963.802082301736
Epoch Step: 175 / 819 Loss: 14.252903938293457 Tokens per Sec: 26628.593737601164
Epoch Step: 180 / 819 Loss: 19.170866012573242 Tokens per Sec: 25809.822739711995
Epoch Step: 185 / 819 Loss: 18.857749938964844 Tokens per Sec: 28062.21528885132
Epoch Step: 190 / 819 Loss: 20.06913948059082 Tokens per Sec: 25696.470262476512
Epoch Step: 195 / 819 Loss: 18.614614486694336 Tokens per Sec: 23836.262493156497
Epoch Step: 200 / 819 Loss: 18.871109008789062 Tokens per Sec: 23582.998456100613
Epoch Step: 205 / 819 Loss: 15.487835884094238 Tokens per Sec: 25475.042577180757
Epoch Step: 210 / 819 Loss: 17.09874153137207 Tokens per Sec: 26763.88753147774
Epoch Step: 215 / 819 Loss: 20.178674697875977 Tokens per Sec: 25287.732622286105
Epoch Step: 220 / 819 Loss: 17.01032257080078 Tokens per Sec: 26090.108953843577
Epoch Step: 225 / 819 Loss: 19.662647247314453 Tokens per Sec: 24558.409322148524
Epoch Step: 230 / 819 Loss: 18.470962524414062 Tokens per Sec: 27989.22235439105
Epoch Step: 235 / 819 Loss: 19.72816276550293 Tokens per Sec: 26619.380878102886
Epoch Step: 240 / 819 Loss: 20.006628036499023 Tokens per Sec: 24919.14197539085
Epoch Step: 245 / 819 Loss: 15.879687309265137 Tokens per Sec: 25861.573020946606
Epoch Step: 250 / 819 Loss: 249.07127380371094 Tokens per Sec: 26795.838508292723
Epoch Step: 255 / 819 Loss: 17.921733856201172 Tokens per Sec: 27261.418974291784
Epoch Step: 260 / 819 Loss: 20.609169006347656 Tokens per Sec: 26010.072434986087
Epoch Step: 265 / 819 Loss: 19.912935256958008 Tokens per Sec: 27513.132232615506
Epoch Step: 270 / 819 Loss: 158.29649353027344 Tokens per Sec: 24511.88306342742
Epoch Step: 275 / 819 Loss: 18.54060935974121 Tokens per Sec: 25843.844508966336
Epoch Step: 280 / 819 Loss: 21.8776912689209 Tokens per Sec: 25687.262387241517
Epoch Step: 285 / 819 Loss: 17.369483947753906 Tokens per Sec: 23966.036752978744
Epoch Step: 290 / 819 Loss: 16.204259872436523 Tokens per Sec: 25280.239140314767
Epoch Step: 295 / 819 Loss: 15.134937286376953 Tokens per Sec: 26177.579054863443
Epoch Step: 300 / 819 Loss: 18.83208656311035 Tokens per Sec: 24763.346813719298
Epoch Step: 305 / 819 Loss: 21.272869110107422 Tokens per Sec: 27147.56128080119
Epoch Step: 310 / 819 Loss: 16.34907341003418 Tokens per Sec: 28070.79473692441
Epoch Step: 315 / 819 Loss: 20.367443084716797 Tokens per Sec: 27211.177260005858
Epoch Step: 320 / 819 Loss: 22.011703491210938 Tokens per Sec: 25844.278462120517
Epoch Step: 325 / 819 Loss: 15.285735130310059 Tokens per Sec: 23801.27534060373
Epoch Step: 330 / 819 Loss: 18.738492965698242 Tokens per Sec: 25529.11479706685
Epoch Step: 335 / 819 Loss: 14.622930526733398 Tokens per Sec: 27301.111835663836
Epoch Step: 340 / 819 Loss: 16.29131317138672 Tokens per Sec: 22978.76122267309
Epoch Step: 345 / 819 Loss: 19.544355392456055 Tokens per Sec: 25798.229412672128
Epoch Step: 350 / 819 Loss: 20.225650787353516 Tokens per Sec: 24615.590892841657
Epoch Step: 355 / 819 Loss: 245.4337615966797 Tokens per Sec: 25007.141100840126
Epoch Step: 360 / 819 Loss: 19.20831871032715 Tokens per Sec: 24681.143080890797
Epoch Step: 365 / 819 Loss: 17.13096046447754 Tokens per Sec: 26802.99428813739
Epoch Step: 370 / 819 Loss: 16.92123794555664 Tokens per Sec: 26566.263056770866
Epoch Step: 375 / 819 Loss: 18.217058181762695 Tokens per Sec: 27649.72980235294
Epoch Step: 380 / 819 Loss: 13.572757720947266 Tokens per Sec: 26422.835366904976
Epoch Step: 385 / 819 Loss: 16.20924186706543 Tokens per Sec: 26450.709413599652
Epoch Step: 390 / 819 Loss: 14.96165943145752 Tokens per Sec: 26630.835307042278
Epoch Step: 395 / 819 Loss: 16.749971389770508 Tokens per Sec: 23181.55898938426
Epoch Step: 400 / 819 Loss: 17.886507034301758 Tokens per Sec: 27232.019616439815
Epoch Step: 405 / 819 Loss: 15.03195571899414 Tokens per Sec: 25984.723200133827
Epoch Step: 410 / 819 Loss: 23.05232810974121 Tokens per Sec: 23807.774674776472
Epoch Step: 415 / 819 Loss: 17.509355545043945 Tokens per Sec: 25739.534170081704
Epoch Step: 420 / 819 Loss: 18.04314613342285 Tokens per Sec: 24332.991993352705
Epoch Step: 425 / 819 Loss: 17.72870445251465 Tokens per Sec: 27342.406592503172
Epoch Step: 430 / 819 Loss: 13.429363250732422 Tokens per Sec: 24120.491483550424
Epoch Step: 435 / 819 Loss: 20.856231689453125 Tokens per Sec: 26621.797119908897
Epoch Step: 440 / 819 Loss: 20.563730239868164 Tokens per Sec: 23716.095278920257
Epoch Step: 445 / 819 Loss: 12.323474884033203 Tokens per Sec: 26437.531907629087
Epoch Step: 450 / 819 Loss: 21.403684616088867 Tokens per Sec: 26212.416294779112
Epoch Step: 455 / 819 Loss: 19.846736907958984 Tokens per Sec: 25641.270128788015
Epoch Step: 460 / 819 Loss: 21.093917846679688 Tokens per Sec: 26311.172538620503
Epoch Step: 465 / 819 Loss: 18.31331443786621 Tokens per Sec: 25963.796103179488
Epoch Step: 470 / 819 Loss: 16.943775177001953 Tokens per Sec: 25457.267114179595
Epoch Step: 475 / 819 Loss: 17.808765411376953 Tokens per Sec: 24745.04318258439
Epoch Step: 480 / 819 Loss: 17.385452270507812 Tokens per Sec: 25284.17668109637
Epoch Step: 485 / 819 Loss: 17.65135955810547 Tokens per Sec: 25750.482439176165
Epoch Step: 490 / 819 Loss: 15.931207656860352 Tokens per Sec: 26202.300679079934
Epoch Step: 495 / 819 Loss: 17.531299591064453 Tokens per Sec: 27910.12254581485
Epoch Step: 500 / 819 Loss: 18.896892547607422 Tokens per Sec: 26025.865427783407
Epoch Step: 505 / 819 Loss: 189.63101196289062 Tokens per Sec: 23874.199902267577
Epoch Step: 510 / 819 Loss: 21.791357040405273 Tokens per Sec: 23810.462110288827
Epoch Step: 515 / 819 Loss: 17.990312576293945 Tokens per Sec: 25840.051084774197
Epoch Step: 520 / 819 Loss: 213.92385864257812 Tokens per Sec: 28170.44533899096
Epoch Step: 525 / 819 Loss: 18.435564041137695 Tokens per Sec: 27722.692795942592
Epoch Step: 530 / 819 Loss: 21.768653869628906 Tokens per Sec: 25794.240942214157
Epoch Step: 535 / 819 Loss: 17.346595764160156 Tokens per Sec: 25702.097326772488
Epoch Step: 540 / 819 Loss: 211.7279052734375 Tokens per Sec: 24753.769147511903
Epoch Step: 545 / 819 Loss: 19.1307315826416 Tokens per Sec: 26172.263847012404
Epoch Step: 550 / 819 Loss: 19.320343017578125 Tokens per Sec: 27342.614757902797
Epoch Step: 555 / 819 Loss: 17.078723907470703 Tokens per Sec: 24765.310105939003
Epoch Step: 560 / 819 Loss: 20.479595184326172 Tokens per Sec: 24958.402546626945
Epoch Step: 565 / 819 Loss: 17.692630767822266 Tokens per Sec: 27281.693677015388
Epoch Step: 570 / 819 Loss: 19.932676315307617 Tokens per Sec: 25068.41475985827
Epoch Step: 575 / 819 Loss: 17.712491989135742 Tokens per Sec: 26846.004223955864
Epoch Step: 580 / 819 Loss: 18.154172897338867 Tokens per Sec: 25812.553314060864
Epoch Step: 585 / 819 Loss: 14.363155364990234 Tokens per Sec: 25763.00502080461
Epoch Step: 590 / 819 Loss: 18.592044830322266 Tokens per Sec: 24597.338582151166
Epoch Step: 595 / 819 Loss: 19.342884063720703 Tokens per Sec: 26665.84898275151
Epoch Step: 600 / 819 Loss: 14.752006530761719 Tokens per Sec: 25798.909015158973
Epoch Step: 605 / 819 Loss: 15.54965591430664 Tokens per Sec: 25345.57068311521
Epoch Step: 610 / 819 Loss: 16.217985153198242 Tokens per Sec: 25538.77285324098
Epoch Step: 615 / 819 Loss: 20.98928451538086 Tokens per Sec: 21367.36250766311
Epoch Step: 620 / 819 Loss: 19.59840202331543 Tokens per Sec: 27231.309790643674
Epoch Step: 625 / 819 Loss: 17.646162033081055 Tokens per Sec: 25671.96678010553
Epoch Step: 630 / 819 Loss: 17.19700050354004 Tokens per Sec: 26269.31996400947
Epoch Step: 635 / 819 Loss: 20.40928077697754 Tokens per Sec: 25199.14241006499
Epoch Step: 640 / 819 Loss: 13.188695907592773 Tokens per Sec: 26734.001399144967
Epoch Step: 645 / 819 Loss: 18.564062118530273 Tokens per Sec: 24526.26536152471
Epoch Step: 650 / 819 Loss: 14.779409408569336 Tokens per Sec: 25295.697774463886
Epoch Step: 655 / 819 Loss: 17.7374267578125 Tokens per Sec: 27452.830247221766
Epoch Step: 660 / 819 Loss: 20.436767578125 Tokens per Sec: 22870.10117866018
Epoch Step: 665 / 819 Loss: 18.619375228881836 Tokens per Sec: 26420.77915186071
Epoch Step: 670 / 819 Loss: 18.126211166381836 Tokens per Sec: 24298.234462973913
Epoch Step: 675 / 819 Loss: 19.538131713867188 Tokens per Sec: 25067.16502236401
Epoch Step: 680 / 819 Loss: 140.3782501220703 Tokens per Sec: 23944.01278777177
Epoch Step: 685 / 819 Loss: 16.620311737060547 Tokens per Sec: 24005.76135123292
Epoch Step: 690 / 819 Loss: 14.842036247253418 Tokens per Sec: 28408.389962789617
Epoch Step: 695 / 819 Loss: 16.7138671875 Tokens per Sec: 27097.63966926714
Epoch Step: 700 / 819 Loss: 17.05599021911621 Tokens per Sec: 26682.886116651516
Epoch Step: 705 / 819 Loss: 16.90302848815918 Tokens per Sec: 23858.74620923484
Epoch Step: 710 / 819 Loss: 15.438105583190918 Tokens per Sec: 27475.787471162945
Epoch Step: 715 / 819 Loss: 20.382930755615234 Tokens per Sec: 27013.03139545109
Epoch Step: 720 / 819 Loss: 14.458006858825684 Tokens per Sec: 27023.466517995872
Epoch Step: 725 / 819 Loss: 224.5414581298828 Tokens per Sec: 25974.555264471765
Epoch Step: 730 / 819 Loss: 15.94507884979248 Tokens per Sec: 27569.91142930495
Epoch Step: 735 / 819 Loss: 18.30246925354004 Tokens per Sec: 22838.50316846636
Epoch Step: 740 / 819 Loss: 227.60459899902344 Tokens per Sec: 26271.11282877388
Epoch Step: 745 / 819 Loss: 24.629098892211914 Tokens per Sec: 23097.193486388944
Epoch Step: 750 / 819 Loss: 18.143434524536133 Tokens per Sec: 25610.460641194713
Epoch Step: 755 / 819 Loss: 23.506282806396484 Tokens per Sec: 26146.627021253687
Epoch Step: 760 / 819 Loss: 14.984240531921387 Tokens per Sec: 26372.542459776494
Epoch Step: 765 / 819 Loss: 147.3898162841797 Tokens per Sec: 25861.44970211108
Epoch Step: 770 / 819 Loss: 15.250838279724121 Tokens per Sec: 27323.40029260682
Epoch Step: 775 / 819 Loss: 21.048721313476562 Tokens per Sec: 24016.851973436624
Epoch Step: 780 / 819 Loss: 13.048429489135742 Tokens per Sec: 25852.986818355686
Epoch Step: 785 / 819 Loss: 18.05918312072754 Tokens per Sec: 24686.464232496528
Epoch Step: 790 / 819 Loss: 99.84150695800781 Tokens per Sec: 26412.803650406124
Epoch Step: 795 / 819 Loss: 118.8230972290039 Tokens per Sec: 27758.80037916637
Epoch Step: 800 / 819 Loss: 20.118003845214844 Tokens per Sec: 26426.43524084744
Epoch Step: 805 / 819 Loss: 20.90957260131836 Tokens per Sec: 23760.47124377871
Epoch Step: 810 / 819 Loss: 17.496946334838867 Tokens per Sec: 24080.616878998528
Epoch Step: 815 / 819 Loss: 17.807405471801758 Tokens per Sec: 20839.94980995558
Epoch ended with duration 0:02:31.476220
Train perplexity: 1.5897207267490667
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.334225
Validation perplexity: 1.606686301249729
Epoch 34 / 1000
Epoch Step: 5 / 819 Loss: 20.79339599609375 Tokens per Sec: 26306.85712420668
Epoch Step: 10 / 819 Loss: 18.120668411254883 Tokens per Sec: 25102.069572285756
Epoch Step: 15 / 819 Loss: 19.904489517211914 Tokens per Sec: 24805.345738781238
Epoch Step: 20 / 819 Loss: 12.686247825622559 Tokens per Sec: 27169.405935212922
Epoch Step: 25 / 819 Loss: 13.798787117004395 Tokens per Sec: 26114.814347248896
Epoch Step: 30 / 819 Loss: 21.067604064941406 Tokens per Sec: 27462.11826824319
Epoch Step: 35 / 819 Loss: 16.347301483154297 Tokens per Sec: 25489.02948650683
Epoch Step: 40 / 819 Loss: 16.290863037109375 Tokens per Sec: 26586.401947784998
Epoch Step: 45 / 819 Loss: 10.787606239318848 Tokens per Sec: 26485.200485303918
Epoch Step: 50 / 819 Loss: 17.621335983276367 Tokens per Sec: 26929.17586080723
Epoch Step: 55 / 819 Loss: 26.24003028869629 Tokens per Sec: 24831.610716478164
Epoch Step: 60 / 819 Loss: 22.57300567626953 Tokens per Sec: 25529.82334386601
Epoch Step: 65 / 819 Loss: 19.019956588745117 Tokens per Sec: 26377.955923703514
Epoch Step: 70 / 819 Loss: 21.445405960083008 Tokens per Sec: 24711.986128211207
Epoch Step: 75 / 819 Loss: 19.719987869262695 Tokens per Sec: 24636.232366643293
Epoch Step: 80 / 819 Loss: 18.8121280670166 Tokens per Sec: 25696.930302915287
Epoch Step: 85 / 819 Loss: 18.99495506286621 Tokens per Sec: 26239.189457936
Epoch Step: 90 / 819 Loss: 16.429279327392578 Tokens per Sec: 26099.903436925226
Epoch Step: 95 / 819 Loss: 19.85162353515625 Tokens per Sec: 25637.618061822603
Epoch Step: 100 / 819 Loss: 12.423849105834961 Tokens per Sec: 26537.3393625439
Epoch Step: 105 / 819 Loss: 14.143417358398438 Tokens per Sec: 26800.695692068995
Epoch Step: 110 / 819 Loss: 22.762685775756836 Tokens per Sec: 25670.5193426893
Epoch Step: 115 / 819 Loss: 12.638941764831543 Tokens per Sec: 26613.471479223972
Epoch Step: 120 / 819 Loss: 17.596843719482422 Tokens per Sec: 24194.925300267696
Epoch Step: 125 / 819 Loss: 20.874252319335938 Tokens per Sec: 24643.517644601154
Epoch Step: 130 / 819 Loss: 22.623031616210938 Tokens per Sec: 26839.204421154252
Epoch Step: 135 / 819 Loss: 18.884653091430664 Tokens per Sec: 27582.611896591436
Epoch Step: 140 / 819 Loss: 24.018484115600586 Tokens per Sec: 25432.2176806702
Epoch Step: 145 / 819 Loss: 22.439302444458008 Tokens per Sec: 25215.272788606344
Epoch Step: 150 / 819 Loss: 17.22271728515625 Tokens per Sec: 25957.261165895157
Epoch Step: 155 / 819 Loss: 21.916147232055664 Tokens per Sec: 26608.53404674358
Epoch Step: 160 / 819 Loss: 215.09555053710938 Tokens per Sec: 24669.30642789669
Epoch Step: 165 / 819 Loss: 22.641510009765625 Tokens per Sec: 26292.92284847907
Epoch Step: 170 / 819 Loss: 22.599822998046875 Tokens per Sec: 25748.830165863594
Epoch Step: 175 / 819 Loss: 19.384183883666992 Tokens per Sec: 23830.155496423606
Epoch Step: 180 / 819 Loss: 18.90894889831543 Tokens per Sec: 25167.841486648205
Epoch Step: 185 / 819 Loss: 14.134746551513672 Tokens per Sec: 26293.006782482218
Epoch Step: 190 / 819 Loss: 20.167011260986328 Tokens per Sec: 27777.00454994682
Epoch Step: 195 / 819 Loss: 12.949573516845703 Tokens per Sec: 26516.984322083423
Epoch Step: 200 / 819 Loss: 14.040665626525879 Tokens per Sec: 24488.520302966936
Epoch Step: 205 / 819 Loss: 12.822531700134277 Tokens per Sec: 26734.75672104856
Epoch Step: 210 / 819 Loss: 17.569488525390625 Tokens per Sec: 25929.954372879845
Epoch Step: 215 / 819 Loss: 13.266347885131836 Tokens per Sec: 26010.19018723204
Epoch Step: 220 / 819 Loss: 17.390024185180664 Tokens per Sec: 25891.016744481578
Epoch Step: 225 / 819 Loss: 18.167192459106445 Tokens per Sec: 27817.114791421056
Epoch Step: 230 / 819 Loss: 21.405887603759766 Tokens per Sec: 23698.454915336446
Epoch Step: 235 / 819 Loss: 14.04183292388916 Tokens per Sec: 26759.391661115067
Epoch Step: 240 / 819 Loss: 20.036483764648438 Tokens per Sec: 24327.36135819741
Epoch Step: 245 / 819 Loss: 14.452030181884766 Tokens per Sec: 24331.72774990349
Epoch Step: 250 / 819 Loss: 17.45431900024414 Tokens per Sec: 26052.274148485696
Epoch Step: 255 / 819 Loss: 17.245019912719727 Tokens per Sec: 24907.031285895835
Epoch Step: 260 / 819 Loss: 11.838062286376953 Tokens per Sec: 25118.13239731048
Epoch Step: 265 / 819 Loss: 13.214734077453613 Tokens per Sec: 24158.567162537223
Epoch Step: 270 / 819 Loss: 22.021696090698242 Tokens per Sec: 24442.747567306164
Epoch Step: 275 / 819 Loss: 20.92573356628418 Tokens per Sec: 25194.482646268578
Epoch Step: 280 / 819 Loss: 18.551197052001953 Tokens per Sec: 26929.358947398996
Epoch Step: 285 / 819 Loss: 13.929384231567383 Tokens per Sec: 27518.70432265102
Epoch Step: 290 / 819 Loss: 18.190629959106445 Tokens per Sec: 25046.005540378363
Epoch Step: 295 / 819 Loss: 246.11590576171875 Tokens per Sec: 25765.204348463787
Epoch Step: 300 / 819 Loss: 17.303665161132812 Tokens per Sec: 26741.450233392123
Epoch Step: 305 / 819 Loss: 23.32597541809082 Tokens per Sec: 25673.456724485324
Epoch Step: 310 / 819 Loss: 20.533246994018555 Tokens per Sec: 25152.67558929136
Epoch Step: 315 / 819 Loss: 19.761646270751953 Tokens per Sec: 26073.97306300281
Epoch Step: 320 / 819 Loss: 13.502941131591797 Tokens per Sec: 28104.12342146697
Epoch Step: 325 / 819 Loss: 14.681625366210938 Tokens per Sec: 24022.577222544118
Epoch Step: 330 / 819 Loss: 20.772674560546875 Tokens per Sec: 26066.680756146867
Epoch Step: 335 / 819 Loss: 20.7791690826416 Tokens per Sec: 25705.451081652984
Epoch Step: 340 / 819 Loss: 19.827829360961914 Tokens per Sec: 23613.75166035361
Epoch Step: 345 / 819 Loss: 18.074424743652344 Tokens per Sec: 27015.146097719375
Epoch Step: 350 / 819 Loss: 19.151138305664062 Tokens per Sec: 24544.144530589572
Epoch Step: 355 / 819 Loss: 16.278440475463867 Tokens per Sec: 24604.15319781169
Epoch Step: 360 / 819 Loss: 20.199018478393555 Tokens per Sec: 26035.363169049404
Epoch Step: 365 / 819 Loss: 19.65530014038086 Tokens per Sec: 27733.975042240236
Epoch Step: 370 / 819 Loss: 17.02199935913086 Tokens per Sec: 24653.874661886657
Epoch Step: 375 / 819 Loss: 15.494745254516602 Tokens per Sec: 25907.37124477434
Epoch Step: 380 / 819 Loss: 14.764389038085938 Tokens per Sec: 27613.455968111022
Epoch Step: 385 / 819 Loss: 12.527350425720215 Tokens per Sec: 25881.14911768495
Epoch Step: 390 / 819 Loss: 17.84667205810547 Tokens per Sec: 25560.833294763594
Epoch Step: 395 / 819 Loss: 18.361143112182617 Tokens per Sec: 26026.461725441826
Epoch Step: 400 / 819 Loss: 18.202167510986328 Tokens per Sec: 27403.178207712328
Epoch Step: 405 / 819 Loss: 19.28449058532715 Tokens per Sec: 23815.87212316368
Epoch Step: 410 / 819 Loss: 20.06048011779785 Tokens per Sec: 24358.16611125907
Epoch Step: 415 / 819 Loss: 104.265869140625 Tokens per Sec: 26396.850723470685
Epoch Step: 420 / 819 Loss: 16.941682815551758 Tokens per Sec: 26032.35089589491
Epoch Step: 425 / 819 Loss: 15.427419662475586 Tokens per Sec: 24031.374715501628
Epoch Step: 430 / 819 Loss: 17.280193328857422 Tokens per Sec: 25562.20257513585
Epoch Step: 435 / 819 Loss: 13.770730018615723 Tokens per Sec: 24484.95637105954
Epoch Step: 440 / 819 Loss: 19.695457458496094 Tokens per Sec: 23418.51738146432
Epoch Step: 445 / 819 Loss: 19.371158599853516 Tokens per Sec: 24251.210791224676
Epoch Step: 450 / 819 Loss: 18.91986846923828 Tokens per Sec: 25965.234671019054
Epoch Step: 455 / 819 Loss: 16.852977752685547 Tokens per Sec: 24703.41651813096
Epoch Step: 460 / 819 Loss: 13.677005767822266 Tokens per Sec: 25601.460921325808
Epoch Step: 465 / 819 Loss: 14.420096397399902 Tokens per Sec: 25431.220830571354
Epoch Step: 470 / 819 Loss: 17.80084228515625 Tokens per Sec: 25111.32303758233
Epoch Step: 475 / 819 Loss: 16.723703384399414 Tokens per Sec: 27230.83728584125
Epoch Step: 480 / 819 Loss: 17.222864151000977 Tokens per Sec: 27674.517954231393
Epoch Step: 485 / 819 Loss: 262.44720458984375 Tokens per Sec: 22901.36737926135
Epoch Step: 490 / 819 Loss: 212.82272338867188 Tokens per Sec: 27016.846389202008
Epoch Step: 495 / 819 Loss: 21.223506927490234 Tokens per Sec: 24931.039459361586
Epoch Step: 500 / 819 Loss: 18.158815383911133 Tokens per Sec: 25584.47686294042
Epoch Step: 505 / 819 Loss: 197.46803283691406 Tokens per Sec: 24095.31294901994
Epoch Step: 510 / 819 Loss: 21.983964920043945 Tokens per Sec: 26011.167125197724
Epoch Step: 515 / 819 Loss: 23.14900016784668 Tokens per Sec: 26208.14251142834
Epoch Step: 520 / 819 Loss: 18.495948791503906 Tokens per Sec: 27843.96228482854
Epoch Step: 525 / 819 Loss: 22.592647552490234 Tokens per Sec: 26311.756192496585
Epoch Step: 530 / 819 Loss: 20.01380729675293 Tokens per Sec: 25883.56816295191
Epoch Step: 535 / 819 Loss: 17.44512176513672 Tokens per Sec: 25244.167474108875
Epoch Step: 540 / 819 Loss: 156.55490112304688 Tokens per Sec: 26899.62117445585
Epoch Step: 545 / 819 Loss: 15.659709930419922 Tokens per Sec: 24851.35679852077
Epoch Step: 550 / 819 Loss: 16.973976135253906 Tokens per Sec: 25530.99948178199
Epoch Step: 555 / 819 Loss: 17.807226181030273 Tokens per Sec: 27412.37381180417
Epoch Step: 560 / 819 Loss: 20.536195755004883 Tokens per Sec: 24677.772568977358
Epoch Step: 565 / 819 Loss: 16.641939163208008 Tokens per Sec: 26085.65366857869
Epoch Step: 570 / 819 Loss: 14.936139106750488 Tokens per Sec: 26645.00067340745
Epoch Step: 575 / 819 Loss: 177.81378173828125 Tokens per Sec: 25290.643732059205
Epoch Step: 580 / 819 Loss: 16.472776412963867 Tokens per Sec: 26730.70417479843
Epoch Step: 585 / 819 Loss: 16.98920249938965 Tokens per Sec: 27157.326792391217
Epoch Step: 590 / 819 Loss: 14.815685272216797 Tokens per Sec: 26389.831166381966
Epoch Step: 595 / 819 Loss: 13.217951774597168 Tokens per Sec: 26666.246062548038
Epoch Step: 600 / 819 Loss: 13.442094802856445 Tokens per Sec: 23067.231490068407
Epoch Step: 605 / 819 Loss: 192.5012969970703 Tokens per Sec: 28081.07452746451
Epoch Step: 610 / 819 Loss: 213.48866271972656 Tokens per Sec: 26346.34329592969
Epoch Step: 615 / 819 Loss: 22.126249313354492 Tokens per Sec: 26253.25597701359
Epoch Step: 620 / 819 Loss: 17.91231346130371 Tokens per Sec: 25044.81891680642
Epoch Step: 625 / 819 Loss: 14.710267066955566 Tokens per Sec: 25466.534287792972
Epoch Step: 630 / 819 Loss: 17.218408584594727 Tokens per Sec: 26167.366337960724
Epoch Step: 635 / 819 Loss: 20.078142166137695 Tokens per Sec: 26758.183194600828
Epoch Step: 640 / 819 Loss: 23.315078735351562 Tokens per Sec: 27104.9269810368
Epoch Step: 645 / 819 Loss: 20.264324188232422 Tokens per Sec: 27009.81438353903
Epoch Step: 650 / 819 Loss: 12.888766288757324 Tokens per Sec: 28812.767956899173
Epoch Step: 655 / 819 Loss: 13.577609062194824 Tokens per Sec: 26707.332577572997
Epoch Step: 660 / 819 Loss: 18.754907608032227 Tokens per Sec: 26224.81034752197
Epoch Step: 665 / 819 Loss: 19.469322204589844 Tokens per Sec: 23979.281397747818
Epoch Step: 670 / 819 Loss: 17.899978637695312 Tokens per Sec: 25663.864485031005
Epoch Step: 675 / 819 Loss: 21.124435424804688 Tokens per Sec: 23053.704185953553
Epoch Step: 680 / 819 Loss: 18.040061950683594 Tokens per Sec: 26765.320994093992
Epoch Step: 685 / 819 Loss: 167.2982635498047 Tokens per Sec: 25489.328015561143
Epoch Step: 690 / 819 Loss: 20.439035415649414 Tokens per Sec: 26637.538644646254
Epoch Step: 695 / 819 Loss: 20.352622985839844 Tokens per Sec: 25698.656177003402
Epoch Step: 700 / 819 Loss: 16.900365829467773 Tokens per Sec: 24263.689624928847
Epoch Step: 705 / 819 Loss: 18.464092254638672 Tokens per Sec: 25363.353185124568
Epoch Step: 710 / 819 Loss: 15.875840187072754 Tokens per Sec: 28198.58321596238
Epoch Step: 715 / 819 Loss: 16.310258865356445 Tokens per Sec: 26281.784829545937
Epoch Step: 720 / 819 Loss: 20.823467254638672 Tokens per Sec: 28175.878662881758
Epoch Step: 725 / 819 Loss: 21.635879516601562 Tokens per Sec: 25471.699520988037
Epoch Step: 730 / 819 Loss: 88.90809631347656 Tokens per Sec: 23670.384288159832
Epoch Step: 735 / 819 Loss: 16.419218063354492 Tokens per Sec: 24870.013906122873
Epoch Step: 740 / 819 Loss: 19.087446212768555 Tokens per Sec: 26660.880138618773
Epoch Step: 745 / 819 Loss: 19.2624568939209 Tokens per Sec: 22311.18454632715
Epoch Step: 750 / 819 Loss: 18.178098678588867 Tokens per Sec: 26767.22222929998
Epoch Step: 755 / 819 Loss: 19.37221908569336 Tokens per Sec: 27587.328124361695
Epoch Step: 760 / 819 Loss: 17.5902042388916 Tokens per Sec: 26475.916866913147
Epoch Step: 765 / 819 Loss: 19.37002182006836 Tokens per Sec: 27292.57344662913
Epoch Step: 770 / 819 Loss: 176.4541473388672 Tokens per Sec: 27260.021739050535
Epoch Step: 775 / 819 Loss: 111.39189147949219 Tokens per Sec: 26876.090551226836
Epoch Step: 780 / 819 Loss: 187.49143981933594 Tokens per Sec: 23887.360201794985
Epoch Step: 785 / 819 Loss: 21.952234268188477 Tokens per Sec: 27496.90313064755
Epoch Step: 790 / 819 Loss: 15.525333404541016 Tokens per Sec: 27938.207601589653
Epoch Step: 795 / 819 Loss: 19.928756713867188 Tokens per Sec: 25713.526249452563
Epoch Step: 800 / 819 Loss: 17.111801147460938 Tokens per Sec: 26270.00633524905
Epoch Step: 805 / 819 Loss: 15.162672996520996 Tokens per Sec: 25574.687727957727
Epoch Step: 810 / 819 Loss: 13.687028884887695 Tokens per Sec: 19493.020415083425
Epoch Step: 815 / 819 Loss: 19.522172927856445 Tokens per Sec: 25136.733710168155
Epoch ended with duration 0:02:30.836485
Train perplexity: 1.590809485042954
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.142845
Validation perplexity: 1.508892638731065
Epoch 35 / 1000
Epoch Step: 5 / 819 Loss: 19.209228515625 Tokens per Sec: 28233.665762921002
Epoch Step: 10 / 819 Loss: 19.837406158447266 Tokens per Sec: 23376.516913438903
Epoch Step: 15 / 819 Loss: 13.387920379638672 Tokens per Sec: 26078.78822229919
Epoch Step: 20 / 819 Loss: 17.868066787719727 Tokens per Sec: 25739.445938047924
Epoch Step: 25 / 819 Loss: 16.17736053466797 Tokens per Sec: 25953.6231705059
Epoch Step: 30 / 819 Loss: 18.134119033813477 Tokens per Sec: 26210.033023182863
Epoch Step: 35 / 819 Loss: 19.29890251159668 Tokens per Sec: 26062.99991686993
Epoch Step: 40 / 819 Loss: 16.341854095458984 Tokens per Sec: 26345.4913764012
Epoch Step: 45 / 819 Loss: 16.389156341552734 Tokens per Sec: 26273.180740608066
Epoch Step: 50 / 819 Loss: 14.454492568969727 Tokens per Sec: 25190.077624488895
Epoch Step: 55 / 819 Loss: 13.402884483337402 Tokens per Sec: 26235.277479259006
Epoch Step: 60 / 819 Loss: 15.221877098083496 Tokens per Sec: 27491.151153393188
Epoch Step: 65 / 819 Loss: 19.510698318481445 Tokens per Sec: 25520.416664914206
Epoch Step: 70 / 819 Loss: 19.518131256103516 Tokens per Sec: 27738.877935942968
Epoch Step: 75 / 819 Loss: 20.714202880859375 Tokens per Sec: 27623.834370840596
Epoch Step: 80 / 819 Loss: 16.209518432617188 Tokens per Sec: 26291.659375014147
Epoch Step: 85 / 819 Loss: 16.08627700805664 Tokens per Sec: 25013.202059137868
Epoch Step: 90 / 819 Loss: 22.539796829223633 Tokens per Sec: 27062.118580530496
Epoch Step: 95 / 819 Loss: 16.571048736572266 Tokens per Sec: 25316.175391974488
Epoch Step: 100 / 819 Loss: 238.1426544189453 Tokens per Sec: 26305.398670393322
Epoch Step: 105 / 819 Loss: 22.292695999145508 Tokens per Sec: 23893.150987192006
Epoch Step: 110 / 819 Loss: 18.28653335571289 Tokens per Sec: 25209.306756324666
Epoch Step: 115 / 819 Loss: 179.41441345214844 Tokens per Sec: 23691.501314578352
Epoch Step: 120 / 819 Loss: 20.70066261291504 Tokens per Sec: 27823.76978123805
Epoch Step: 125 / 819 Loss: 20.751129150390625 Tokens per Sec: 26516.773531496867
Epoch Step: 130 / 819 Loss: 12.484166145324707 Tokens per Sec: 28533.153410496452
Epoch Step: 135 / 819 Loss: 11.701245307922363 Tokens per Sec: 26769.61778491071
Epoch Step: 140 / 819 Loss: 14.467031478881836 Tokens per Sec: 26181.84103530348
Epoch Step: 145 / 819 Loss: 209.79318237304688 Tokens per Sec: 25358.017814030718
Epoch Step: 150 / 819 Loss: 14.907809257507324 Tokens per Sec: 25853.209088579766
Epoch Step: 155 / 819 Loss: 17.17730140686035 Tokens per Sec: 28387.02854670467
Epoch Step: 160 / 819 Loss: 18.31235694885254 Tokens per Sec: 24707.583494464776
Epoch Step: 165 / 819 Loss: 16.95104217529297 Tokens per Sec: 25546.331753423485
Epoch Step: 170 / 819 Loss: 18.621307373046875 Tokens per Sec: 28232.15122203957
Epoch Step: 175 / 819 Loss: 20.24644660949707 Tokens per Sec: 25732.40079212731
Epoch Step: 180 / 819 Loss: 23.98267364501953 Tokens per Sec: 27131.233864866197
Epoch Step: 185 / 819 Loss: 20.33344268798828 Tokens per Sec: 27991.460910884576
Epoch Step: 190 / 819 Loss: 20.457731246948242 Tokens per Sec: 26707.261739414735
Epoch Step: 195 / 819 Loss: 21.829147338867188 Tokens per Sec: 28740.771124994273
Epoch Step: 200 / 819 Loss: 22.68292808532715 Tokens per Sec: 26404.44010745903
Epoch Step: 205 / 819 Loss: 14.015162467956543 Tokens per Sec: 24990.18742712956
Epoch Step: 210 / 819 Loss: 18.263824462890625 Tokens per Sec: 27933.980375169107
Epoch Step: 215 / 819 Loss: 14.541666984558105 Tokens per Sec: 27317.894558118023
Epoch Step: 220 / 819 Loss: 226.1604461669922 Tokens per Sec: 25586.042559612146
Epoch Step: 225 / 819 Loss: 18.891212463378906 Tokens per Sec: 26300.294361249253
Epoch Step: 230 / 819 Loss: 20.167638778686523 Tokens per Sec: 23702.1560123105
Epoch Step: 235 / 819 Loss: 14.692129135131836 Tokens per Sec: 24788.591117481366
Epoch Step: 240 / 819 Loss: 16.768022537231445 Tokens per Sec: 27182.308618287287
Epoch Step: 245 / 819 Loss: 15.902771949768066 Tokens per Sec: 25225.779900495723
Epoch Step: 250 / 819 Loss: 14.532434463500977 Tokens per Sec: 26605.446162799046
Epoch Step: 255 / 819 Loss: 17.572734832763672 Tokens per Sec: 27201.197777369718
Epoch Step: 260 / 819 Loss: 20.04763412475586 Tokens per Sec: 25747.504986316515
Epoch Step: 265 / 819 Loss: 209.8347930908203 Tokens per Sec: 25676.52338018179
Epoch Step: 270 / 819 Loss: 20.116283416748047 Tokens per Sec: 26382.824697245072
Epoch Step: 275 / 819 Loss: 14.909256935119629 Tokens per Sec: 27315.650073143268
Epoch Step: 280 / 819 Loss: 17.60249900817871 Tokens per Sec: 27550.684963589123
Epoch Step: 285 / 819 Loss: 18.57843589782715 Tokens per Sec: 26516.690166038767
Epoch Step: 290 / 819 Loss: 13.612062454223633 Tokens per Sec: 26964.89479250996
Epoch Step: 295 / 819 Loss: 17.770090103149414 Tokens per Sec: 26957.781775200627
Epoch Step: 300 / 819 Loss: 16.455337524414062 Tokens per Sec: 27551.27473483674
Epoch Step: 305 / 819 Loss: 14.907288551330566 Tokens per Sec: 25631.598005915104
Epoch Step: 310 / 819 Loss: 13.40235710144043 Tokens per Sec: 27609.855290617423
Epoch Step: 315 / 819 Loss: 14.62413501739502 Tokens per Sec: 27894.721100723706
Epoch Step: 320 / 819 Loss: 13.698256492614746 Tokens per Sec: 26358.040922861153
Epoch Step: 325 / 819 Loss: 18.400775909423828 Tokens per Sec: 24161.355611238472
Epoch Step: 330 / 819 Loss: 15.64100456237793 Tokens per Sec: 25505.7681130282
Epoch Step: 335 / 819 Loss: 15.793806076049805 Tokens per Sec: 26427.904108433526
Epoch Step: 340 / 819 Loss: 18.845840454101562 Tokens per Sec: 24733.66519385705
Epoch Step: 345 / 819 Loss: 236.09951782226562 Tokens per Sec: 22612.297596127748
Epoch Step: 350 / 819 Loss: 20.88235855102539 Tokens per Sec: 26747.82127803943
Epoch Step: 355 / 819 Loss: 18.632469177246094 Tokens per Sec: 26462.081414927132
Epoch Step: 360 / 819 Loss: 16.692556381225586 Tokens per Sec: 28237.927258937918
Epoch Step: 365 / 819 Loss: 14.25571346282959 Tokens per Sec: 26843.26135401001
Epoch Step: 370 / 819 Loss: 12.066302299499512 Tokens per Sec: 28901.051662225902
Epoch Step: 375 / 819 Loss: 18.062585830688477 Tokens per Sec: 27293.91515387388
Epoch Step: 380 / 819 Loss: 15.59245491027832 Tokens per Sec: 29306.98306670285
Epoch Step: 385 / 819 Loss: 11.287306785583496 Tokens per Sec: 25623.710827799052
Epoch Step: 390 / 819 Loss: 14.521947860717773 Tokens per Sec: 25174.085049101002
Epoch Step: 395 / 819 Loss: 19.31867027282715 Tokens per Sec: 24766.6276574242
Epoch Step: 400 / 819 Loss: 13.611834526062012 Tokens per Sec: 26731.1687132017
Epoch Step: 405 / 819 Loss: 198.35887145996094 Tokens per Sec: 27001.441485984804
Epoch Step: 410 / 819 Loss: 13.57787036895752 Tokens per Sec: 24557.97059361444
Epoch Step: 415 / 819 Loss: 20.020437240600586 Tokens per Sec: 26162.404537486615
Epoch Step: 420 / 819 Loss: 19.344928741455078 Tokens per Sec: 28581.365171855054
Epoch Step: 425 / 819 Loss: 14.174712181091309 Tokens per Sec: 25554.332982833963
Epoch Step: 430 / 819 Loss: 18.076202392578125 Tokens per Sec: 25707.994850853785
Epoch Step: 435 / 819 Loss: 148.65928649902344 Tokens per Sec: 27333.1387031659
Epoch Step: 440 / 819 Loss: 17.82355499267578 Tokens per Sec: 27901.80225519766
Epoch Step: 445 / 819 Loss: 226.01914978027344 Tokens per Sec: 27858.978504560888
Epoch Step: 450 / 819 Loss: 218.80001831054688 Tokens per Sec: 24907.879584348524
Epoch Step: 455 / 819 Loss: 17.330793380737305 Tokens per Sec: 28245.020212354444
Epoch Step: 460 / 819 Loss: 20.14848518371582 Tokens per Sec: 24652.861952148145
Epoch Step: 465 / 819 Loss: 20.586536407470703 Tokens per Sec: 24405.640196774282
Epoch Step: 470 / 819 Loss: 17.101016998291016 Tokens per Sec: 25687.526018425408
Epoch Step: 475 / 819 Loss: 17.465864181518555 Tokens per Sec: 26108.778463424165
Epoch Step: 480 / 819 Loss: 165.20179748535156 Tokens per Sec: 24799.089854292975
Epoch Step: 485 / 819 Loss: 26.163440704345703 Tokens per Sec: 26050.028087615363
Epoch Step: 490 / 819 Loss: 19.309852600097656 Tokens per Sec: 24830.949690342106
Epoch Step: 495 / 819 Loss: 20.795000076293945 Tokens per Sec: 27013.02163434848
Epoch Step: 500 / 819 Loss: 19.46723175048828 Tokens per Sec: 27702.29766864115
Epoch Step: 505 / 819 Loss: 17.96575164794922 Tokens per Sec: 26733.287028426974
Epoch Step: 510 / 819 Loss: 16.629276275634766 Tokens per Sec: 24990.19952323193
Epoch Step: 515 / 819 Loss: 18.119678497314453 Tokens per Sec: 27972.67044805402
Epoch Step: 520 / 819 Loss: 13.971186637878418 Tokens per Sec: 25997.9344829466
Epoch Step: 525 / 819 Loss: 21.012863159179688 Tokens per Sec: 25989.264073176684
Epoch Step: 530 / 819 Loss: 17.626895904541016 Tokens per Sec: 24915.745171054976
Epoch Step: 535 / 819 Loss: 14.027674674987793 Tokens per Sec: 27721.031578019218
Epoch Step: 540 / 819 Loss: 17.89856719970703 Tokens per Sec: 25240.294817255788
Epoch Step: 545 / 819 Loss: 17.65269660949707 Tokens per Sec: 26200.32537308688
Epoch Step: 550 / 819 Loss: 19.819725036621094 Tokens per Sec: 27229.774211275562
Epoch Step: 555 / 819 Loss: 13.355144500732422 Tokens per Sec: 26352.930611120126
Epoch Step: 560 / 819 Loss: 19.349641799926758 Tokens per Sec: 25612.91347260909
Epoch Step: 565 / 819 Loss: 17.681339263916016 Tokens per Sec: 25158.4955305851
Epoch Step: 570 / 819 Loss: 19.36568832397461 Tokens per Sec: 25359.149646629692
Epoch Step: 575 / 819 Loss: 13.31102180480957 Tokens per Sec: 24126.504455917493
Epoch Step: 580 / 819 Loss: 20.526277542114258 Tokens per Sec: 26743.851871874576
Epoch Step: 585 / 819 Loss: 19.995418548583984 Tokens per Sec: 24464.14342573554
Epoch Step: 590 / 819 Loss: 17.675050735473633 Tokens per Sec: 27195.217159544318
Epoch Step: 595 / 819 Loss: 17.723751068115234 Tokens per Sec: 29321.698393667863
Epoch Step: 600 / 819 Loss: 11.139030456542969 Tokens per Sec: 28394.676825845407
Epoch Step: 605 / 819 Loss: 16.22398567199707 Tokens per Sec: 27628.98638291963
Epoch Step: 610 / 819 Loss: 19.993560791015625 Tokens per Sec: 26483.3498874561
Epoch Step: 615 / 819 Loss: 20.795774459838867 Tokens per Sec: 25574.89155850564
Epoch Step: 620 / 819 Loss: 17.704376220703125 Tokens per Sec: 25018.72727281602
Epoch Step: 625 / 819 Loss: 22.454757690429688 Tokens per Sec: 24011.38853949683
Epoch Step: 630 / 819 Loss: 15.675572395324707 Tokens per Sec: 27398.235483154025
Epoch Step: 635 / 819 Loss: 13.102924346923828 Tokens per Sec: 27256.427948093038
Epoch Step: 640 / 819 Loss: 18.084802627563477 Tokens per Sec: 26307.87227967072
Epoch Step: 645 / 819 Loss: 20.741008758544922 Tokens per Sec: 26460.88440736174
Epoch Step: 650 / 819 Loss: 14.549368858337402 Tokens per Sec: 23887.123730463445
Epoch Step: 655 / 819 Loss: 15.673317909240723 Tokens per Sec: 25882.878787503025
Epoch Step: 660 / 819 Loss: 123.16510009765625 Tokens per Sec: 28183.738141330603
Epoch Step: 665 / 819 Loss: 16.68516731262207 Tokens per Sec: 26365.11341285738
Epoch Step: 670 / 819 Loss: 18.8140869140625 Tokens per Sec: 28787.0404746608
Epoch Step: 675 / 819 Loss: 20.274436950683594 Tokens per Sec: 27209.704349543976
Epoch Step: 680 / 819 Loss: 17.567501068115234 Tokens per Sec: 27644.166985995016
Epoch Step: 685 / 819 Loss: 15.993306159973145 Tokens per Sec: 25546.4282496529
Epoch Step: 690 / 819 Loss: 11.98634147644043 Tokens per Sec: 25687.380384855853
Epoch Step: 695 / 819 Loss: 18.52284812927246 Tokens per Sec: 26202.46808014235
Epoch Step: 700 / 819 Loss: 20.129777908325195 Tokens per Sec: 23048.695397111136
Epoch Step: 705 / 819 Loss: 17.3233699798584 Tokens per Sec: 27731.956174243045
Epoch Step: 710 / 819 Loss: 17.023836135864258 Tokens per Sec: 25415.792266204455
Epoch Step: 715 / 819 Loss: 13.46200180053711 Tokens per Sec: 26707.419162374565
Epoch Step: 720 / 819 Loss: 14.574003219604492 Tokens per Sec: 23046.48938136527
Epoch Step: 725 / 819 Loss: 14.8546142578125 Tokens per Sec: 25979.116219005016
Epoch Step: 730 / 819 Loss: 20.41356658935547 Tokens per Sec: 26406.20782662267
Epoch Step: 735 / 819 Loss: 21.677947998046875 Tokens per Sec: 25432.774897257736
Epoch Step: 740 / 819 Loss: 18.657995223999023 Tokens per Sec: 25675.688767291205
Epoch Step: 745 / 819 Loss: 20.4932918548584 Tokens per Sec: 25576.681673088216
Epoch Step: 750 / 819 Loss: 18.135974884033203 Tokens per Sec: 27460.402581943163
Epoch Step: 755 / 819 Loss: 13.87353515625 Tokens per Sec: 26280.100250626565
Epoch Step: 760 / 819 Loss: 17.676538467407227 Tokens per Sec: 26866.407887111745
Epoch Step: 765 / 819 Loss: 15.081533432006836 Tokens per Sec: 27543.36918009365
Epoch Step: 770 / 819 Loss: 12.916548728942871 Tokens per Sec: 26547.110495530997
Epoch Step: 775 / 819 Loss: 19.905990600585938 Tokens per Sec: 26960.43488343289
Epoch Step: 780 / 819 Loss: 207.13619995117188 Tokens per Sec: 26919.177964360922
Epoch Step: 785 / 819 Loss: 17.79593849182129 Tokens per Sec: 26687.419877049637
Epoch Step: 790 / 819 Loss: 15.512964248657227 Tokens per Sec: 24629.770876418417
Epoch Step: 795 / 819 Loss: 16.875316619873047 Tokens per Sec: 26725.31548701389
Epoch Step: 800 / 819 Loss: 222.83494567871094 Tokens per Sec: 25258.83982853769
Epoch Step: 805 / 819 Loss: 14.225539207458496 Tokens per Sec: 25395.85797217537
Epoch Step: 810 / 819 Loss: 15.34086799621582 Tokens per Sec: 23817.44366141152
Epoch Step: 815 / 819 Loss: 142.3140106201172 Tokens per Sec: 22783.00538542301
Epoch ended with duration 0:02:28.411023
Train perplexity: 1.5840745101505689
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.160766
Validation perplexity: 1.58926437565816
Model saved checkpoint!
Epoch 36 / 1000
Epoch Step: 5 / 819 Loss: 17.564739227294922 Tokens per Sec: 25758.4397480657
Epoch Step: 10 / 819 Loss: 91.95411682128906 Tokens per Sec: 23662.146852822487
Epoch Step: 15 / 819 Loss: 20.783226013183594 Tokens per Sec: 26148.94909700565
Epoch Step: 20 / 819 Loss: 16.919727325439453 Tokens per Sec: 25925.37155852763
Epoch Step: 25 / 819 Loss: 14.750658988952637 Tokens per Sec: 28554.787042675238
Epoch Step: 30 / 819 Loss: 16.106380462646484 Tokens per Sec: 25739.414447484975
Epoch Step: 35 / 819 Loss: 19.19432258605957 Tokens per Sec: 26612.45926621521
Epoch Step: 40 / 819 Loss: 11.841314315795898 Tokens per Sec: 26994.199420315123
Epoch Step: 45 / 819 Loss: 15.759439468383789 Tokens per Sec: 28320.173490635054
Epoch Step: 50 / 819 Loss: 11.35378360748291 Tokens per Sec: 24965.131568174515
Epoch Step: 55 / 819 Loss: 16.72440528869629 Tokens per Sec: 26270.574586667855
Epoch Step: 60 / 819 Loss: 16.770923614501953 Tokens per Sec: 26331.27636228993
Epoch Step: 65 / 819 Loss: 14.838480949401855 Tokens per Sec: 25038.711808710843
Epoch Step: 70 / 819 Loss: 18.86954116821289 Tokens per Sec: 26009.67234334938
Epoch Step: 75 / 819 Loss: 15.216026306152344 Tokens per Sec: 23959.015513921546
Epoch Step: 80 / 819 Loss: 11.413487434387207 Tokens per Sec: 27897.90809424814
Epoch Step: 85 / 819 Loss: 179.32846069335938 Tokens per Sec: 25456.084766692427
Epoch Step: 90 / 819 Loss: 22.712797164916992 Tokens per Sec: 25149.436452140693
Epoch Step: 95 / 819 Loss: 15.747628211975098 Tokens per Sec: 25970.89371423741
Epoch Step: 100 / 819 Loss: 19.550180435180664 Tokens per Sec: 27068.682519287002
Epoch Step: 105 / 819 Loss: 15.346421241760254 Tokens per Sec: 26032.777897698677
Epoch Step: 110 / 819 Loss: 22.569318771362305 Tokens per Sec: 26137.171055054318
Epoch Step: 115 / 819 Loss: 21.295307159423828 Tokens per Sec: 25653.74409211337
Epoch Step: 120 / 819 Loss: 19.785171508789062 Tokens per Sec: 24779.3032355787
Epoch Step: 125 / 819 Loss: 16.676227569580078 Tokens per Sec: 24929.20655322962
Epoch Step: 130 / 819 Loss: 15.325019836425781 Tokens per Sec: 28037.446166015347
Epoch Step: 135 / 819 Loss: 16.675735473632812 Tokens per Sec: 27495.90013632171
Epoch Step: 140 / 819 Loss: 22.722440719604492 Tokens per Sec: 27791.117738493558
Epoch Step: 145 / 819 Loss: 15.279731750488281 Tokens per Sec: 24513.929986457144
Epoch Step: 150 / 819 Loss: 19.117769241333008 Tokens per Sec: 27161.14900273718
Epoch Step: 155 / 819 Loss: 17.185546875 Tokens per Sec: 25418.926486563294
Epoch Step: 160 / 819 Loss: 14.393704414367676 Tokens per Sec: 27222.9400701007
Epoch Step: 165 / 819 Loss: 16.838272094726562 Tokens per Sec: 27335.7710622455
Epoch Step: 170 / 819 Loss: 15.969330787658691 Tokens per Sec: 24725.90561324229
Epoch Step: 175 / 819 Loss: 17.10400390625 Tokens per Sec: 24168.81015600709
Epoch Step: 180 / 819 Loss: 14.525168418884277 Tokens per Sec: 27364.7722105557
Epoch Step: 185 / 819 Loss: 16.557353973388672 Tokens per Sec: 27393.25788640451
Epoch Step: 190 / 819 Loss: 16.432865142822266 Tokens per Sec: 27428.7776572716
Epoch Step: 195 / 819 Loss: 19.417224884033203 Tokens per Sec: 24657.164915507507
Epoch Step: 200 / 819 Loss: 21.11276626586914 Tokens per Sec: 24920.30656555651
Epoch Step: 205 / 819 Loss: 15.254522323608398 Tokens per Sec: 23105.16753520967
Epoch Step: 210 / 819 Loss: 12.570409774780273 Tokens per Sec: 27643.886534422
Epoch Step: 215 / 819 Loss: 14.931571960449219 Tokens per Sec: 27525.610707855816
Epoch Step: 220 / 819 Loss: 18.118797302246094 Tokens per Sec: 25516.048825654765
Epoch Step: 225 / 819 Loss: 11.117812156677246 Tokens per Sec: 26241.148948061193
Epoch Step: 230 / 819 Loss: 16.156423568725586 Tokens per Sec: 23637.898364377863
Epoch Step: 235 / 819 Loss: 24.16126823425293 Tokens per Sec: 26631.448603594803
Epoch Step: 240 / 819 Loss: 249.0289306640625 Tokens per Sec: 27175.458122889646
Epoch Step: 245 / 819 Loss: 128.62948608398438 Tokens per Sec: 25646.407204159306
Epoch Step: 250 / 819 Loss: 23.909990310668945 Tokens per Sec: 29078.277919171058
Epoch Step: 255 / 819 Loss: 19.710208892822266 Tokens per Sec: 26158.15000961692
Epoch Step: 260 / 819 Loss: 15.251424789428711 Tokens per Sec: 29543.635554813965
Epoch Step: 265 / 819 Loss: 18.80372428894043 Tokens per Sec: 27433.848814287838
Epoch Step: 270 / 819 Loss: 14.662930488586426 Tokens per Sec: 26837.500794900046
Epoch Step: 275 / 819 Loss: 181.95480346679688 Tokens per Sec: 26967.69301953655
Epoch Step: 280 / 819 Loss: 18.651039123535156 Tokens per Sec: 26511.623518589113
Epoch Step: 285 / 819 Loss: 17.037805557250977 Tokens per Sec: 25627.330147833283
Epoch Step: 290 / 819 Loss: 22.58222007751465 Tokens per Sec: 26652.38225949015
Epoch Step: 295 / 819 Loss: 20.61940574645996 Tokens per Sec: 25529.811108514223
Epoch Step: 300 / 819 Loss: 20.80681037902832 Tokens per Sec: 25630.105630117563
Epoch Step: 305 / 819 Loss: 16.0178279876709 Tokens per Sec: 26583.020307394436
Epoch Step: 310 / 819 Loss: 16.239416122436523 Tokens per Sec: 26042.840164211124
Epoch Step: 315 / 819 Loss: 17.001955032348633 Tokens per Sec: 25436.562636693125
Epoch Step: 320 / 819 Loss: 16.237077713012695 Tokens per Sec: 25243.174340012964
Epoch Step: 325 / 819 Loss: 18.428733825683594 Tokens per Sec: 26709.27114730314
Epoch Step: 330 / 819 Loss: 17.553186416625977 Tokens per Sec: 25998.306234384676
Epoch Step: 335 / 819 Loss: 16.71449851989746 Tokens per Sec: 28085.780339800243
Epoch Step: 340 / 819 Loss: 15.65929126739502 Tokens per Sec: 25539.227737600417
Epoch Step: 345 / 819 Loss: 15.240457534790039 Tokens per Sec: 25785.550497283108
Epoch Step: 350 / 819 Loss: 21.25792694091797 Tokens per Sec: 27738.805088240697
Epoch Step: 355 / 819 Loss: 22.121187210083008 Tokens per Sec: 28447.998533919475
Epoch Step: 360 / 819 Loss: 19.461179733276367 Tokens per Sec: 28809.06669176825
Epoch Step: 365 / 819 Loss: 14.063350677490234 Tokens per Sec: 26098.28186299785
Epoch Step: 370 / 819 Loss: 15.263566017150879 Tokens per Sec: 26481.883359164654
Epoch Step: 375 / 819 Loss: 21.574357986450195 Tokens per Sec: 25238.803481875104
Epoch Step: 380 / 819 Loss: 14.179264068603516 Tokens per Sec: 25458.049657138683
Epoch Step: 385 / 819 Loss: 16.50703239440918 Tokens per Sec: 27804.068132692828
Epoch Step: 390 / 819 Loss: 19.24904441833496 Tokens per Sec: 24587.172171641698
Epoch Step: 395 / 819 Loss: 15.68796443939209 Tokens per Sec: 25848.80492351339
Epoch Step: 400 / 819 Loss: 15.971875190734863 Tokens per Sec: 26046.557653233933
Epoch Step: 405 / 819 Loss: 21.309677124023438 Tokens per Sec: 26137.841732176297
Epoch Step: 410 / 819 Loss: 17.071807861328125 Tokens per Sec: 24569.13329989167
Epoch Step: 415 / 819 Loss: 18.027427673339844 Tokens per Sec: 28048.616351251687
Epoch Step: 420 / 819 Loss: 16.61723518371582 Tokens per Sec: 28635.337490424674
Epoch Step: 425 / 819 Loss: 13.330748558044434 Tokens per Sec: 28235.717075044304
Epoch Step: 430 / 819 Loss: 19.453472137451172 Tokens per Sec: 28304.55809897939
Epoch Step: 435 / 819 Loss: 15.439470291137695 Tokens per Sec: 26926.247483661766
Epoch Step: 440 / 819 Loss: 13.155834197998047 Tokens per Sec: 24021.32696013961
Epoch Step: 445 / 819 Loss: 15.872270584106445 Tokens per Sec: 26249.29224698569
Epoch Step: 450 / 819 Loss: 18.04935073852539 Tokens per Sec: 26533.85960187904
Epoch Step: 455 / 819 Loss: 220.40762329101562 Tokens per Sec: 26392.291898284926
Epoch Step: 460 / 819 Loss: 15.416550636291504 Tokens per Sec: 25209.64702204424
Epoch Step: 465 / 819 Loss: 16.477109909057617 Tokens per Sec: 25538.097029813965
Epoch Step: 470 / 819 Loss: 21.629056930541992 Tokens per Sec: 25654.16644523036
Epoch Step: 475 / 819 Loss: 18.437999725341797 Tokens per Sec: 23420.280635395844
Epoch Step: 480 / 819 Loss: 24.572223663330078 Tokens per Sec: 25023.91038834139
Epoch Step: 485 / 819 Loss: 16.62177276611328 Tokens per Sec: 27132.082424017044
Epoch Step: 490 / 819 Loss: 16.7491455078125 Tokens per Sec: 26779.07702943794
Epoch Step: 495 / 819 Loss: 21.85787010192871 Tokens per Sec: 27695.26487150801
Epoch Step: 500 / 819 Loss: 21.860990524291992 Tokens per Sec: 27408.94911954174
Epoch Step: 505 / 819 Loss: 15.916912078857422 Tokens per Sec: 27378.668821630617
Epoch Step: 510 / 819 Loss: 19.87457847595215 Tokens per Sec: 27698.765342915973
Epoch Step: 515 / 819 Loss: 19.359142303466797 Tokens per Sec: 26418.31860459632
Epoch Step: 520 / 819 Loss: 17.92766571044922 Tokens per Sec: 27005.251501735358
Epoch Step: 525 / 819 Loss: 25.99492645263672 Tokens per Sec: 24358.043453928756
Epoch Step: 530 / 819 Loss: 19.904376983642578 Tokens per Sec: 29030.67923618907
Epoch Step: 535 / 819 Loss: 18.741607666015625 Tokens per Sec: 26834.843940201252
Epoch Step: 540 / 819 Loss: 20.453824996948242 Tokens per Sec: 25402.01271022507
Epoch Step: 545 / 819 Loss: 17.14786148071289 Tokens per Sec: 27303.16720411529
Epoch Step: 550 / 819 Loss: 16.59394645690918 Tokens per Sec: 25618.733165340105
Epoch Step: 555 / 819 Loss: 18.007579803466797 Tokens per Sec: 25815.22561660639
Epoch Step: 560 / 819 Loss: 15.714289665222168 Tokens per Sec: 25336.29681275511
Epoch Step: 565 / 819 Loss: 15.63129997253418 Tokens per Sec: 24115.060562700084
Epoch Step: 570 / 819 Loss: 16.631799697875977 Tokens per Sec: 25003.838244813138
Epoch Step: 575 / 819 Loss: 259.9436340332031 Tokens per Sec: 26461.40633429583
Epoch Step: 580 / 819 Loss: 17.261754989624023 Tokens per Sec: 27715.80032393615
Epoch Step: 585 / 819 Loss: 15.001657485961914 Tokens per Sec: 25476.847429197533
Epoch Step: 590 / 819 Loss: 13.24353313446045 Tokens per Sec: 24575.751461550764
Epoch Step: 595 / 819 Loss: 12.332474708557129 Tokens per Sec: 29110.426524057046
Epoch Step: 600 / 819 Loss: 17.5339298248291 Tokens per Sec: 25677.608155070993
Epoch Step: 605 / 819 Loss: 19.413034439086914 Tokens per Sec: 26156.50360875726
Epoch Step: 610 / 819 Loss: 11.249807357788086 Tokens per Sec: 23719.877540734396
Epoch Step: 615 / 819 Loss: 14.365388870239258 Tokens per Sec: 26679.4438205128
Epoch Step: 620 / 819 Loss: 20.113595962524414 Tokens per Sec: 26408.052895079298
Epoch Step: 625 / 819 Loss: 16.306732177734375 Tokens per Sec: 25943.39723208513
Epoch Step: 630 / 819 Loss: 12.763389587402344 Tokens per Sec: 28930.22468621441
Epoch Step: 635 / 819 Loss: 18.7285099029541 Tokens per Sec: 28386.157294487173
Epoch Step: 640 / 819 Loss: 269.7489318847656 Tokens per Sec: 26414.779448093122
Epoch Step: 645 / 819 Loss: 15.171009063720703 Tokens per Sec: 26070.92514196219
Epoch Step: 650 / 819 Loss: 13.180183410644531 Tokens per Sec: 26230.11882668408
Epoch Step: 655 / 819 Loss: 10.957566261291504 Tokens per Sec: 28033.984177643506
Epoch Step: 660 / 819 Loss: 20.98092269897461 Tokens per Sec: 26249.817124706486
Epoch Step: 665 / 819 Loss: 16.0271053314209 Tokens per Sec: 23643.254398155994
Epoch Step: 670 / 819 Loss: 22.073204040527344 Tokens per Sec: 26973.53406343883
Epoch Step: 675 / 819 Loss: 16.0244083404541 Tokens per Sec: 26950.41672491062
Epoch Step: 680 / 819 Loss: 16.9622802734375 Tokens per Sec: 26197.20443972718
Epoch Step: 685 / 819 Loss: 20.571413040161133 Tokens per Sec: 26179.144936032277
Epoch Step: 690 / 819 Loss: 18.117509841918945 Tokens per Sec: 27266.63623040442
Epoch Step: 695 / 819 Loss: 18.7070369720459 Tokens per Sec: 27401.260100450785
Epoch Step: 700 / 819 Loss: 17.97320556640625 Tokens per Sec: 26221.63959733906
Epoch Step: 705 / 819 Loss: 17.822511672973633 Tokens per Sec: 26306.12457547263
Epoch Step: 710 / 819 Loss: 169.7562255859375 Tokens per Sec: 26157.050295785313
Epoch Step: 715 / 819 Loss: 15.537818908691406 Tokens per Sec: 26054.02334001624
Epoch Step: 720 / 819 Loss: 16.65224838256836 Tokens per Sec: 26801.110526652334
Epoch Step: 725 / 819 Loss: 14.90318775177002 Tokens per Sec: 24927.68482682572
Epoch Step: 730 / 819 Loss: 18.239585876464844 Tokens per Sec: 27394.073231040544
Epoch Step: 735 / 819 Loss: 18.58179473876953 Tokens per Sec: 26991.572593792243
Epoch Step: 740 / 819 Loss: 13.307262420654297 Tokens per Sec: 25679.887510054978
Epoch Step: 745 / 819 Loss: 14.729743003845215 Tokens per Sec: 25099.768438659823
Epoch Step: 750 / 819 Loss: 15.905078887939453 Tokens per Sec: 24850.984301744294
Epoch Step: 755 / 819 Loss: 18.40424156188965 Tokens per Sec: 24015.560291613947
Epoch Step: 760 / 819 Loss: 14.014362335205078 Tokens per Sec: 27040.036913761935
Epoch Step: 765 / 819 Loss: 15.834051132202148 Tokens per Sec: 27229.606500531903
Epoch Step: 770 / 819 Loss: 13.64735221862793 Tokens per Sec: 26782.794847358124
Epoch Step: 775 / 819 Loss: 13.926440238952637 Tokens per Sec: 26115.732892735086
Epoch Step: 780 / 819 Loss: 12.29161548614502 Tokens per Sec: 25324.650254737753
Epoch Step: 785 / 819 Loss: 13.331172943115234 Tokens per Sec: 26700.565095521226
Epoch Step: 790 / 819 Loss: 16.061906814575195 Tokens per Sec: 27246.206505206235
Epoch Step: 795 / 819 Loss: 11.55010986328125 Tokens per Sec: 26429.30287349978
Epoch Step: 800 / 819 Loss: 186.3721923828125 Tokens per Sec: 28998.106034495115
Epoch Step: 805 / 819 Loss: 15.91986083984375 Tokens per Sec: 24887.71973940794
Epoch Step: 810 / 819 Loss: 18.631427764892578 Tokens per Sec: 26016.615374543788
Epoch Step: 815 / 819 Loss: 16.01348304748535 Tokens per Sec: 25370.630029928547
Epoch ended with duration 0:02:28.033939
Train perplexity: 1.5809898056710137
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.211897
Validation perplexity: 1.6072326252588711
Epoch 37 / 1000
Epoch Step: 5 / 819 Loss: 13.979467391967773 Tokens per Sec: 25755.64688399339
Epoch Step: 10 / 819 Loss: 16.052001953125 Tokens per Sec: 25329.250498283607
Epoch Step: 15 / 819 Loss: 13.615521430969238 Tokens per Sec: 26400.093161741665
Epoch Step: 20 / 819 Loss: 18.058984756469727 Tokens per Sec: 25674.094011193927
Epoch Step: 25 / 819 Loss: 119.4622802734375 Tokens per Sec: 24997.163778952483
Epoch Step: 30 / 819 Loss: 14.392400741577148 Tokens per Sec: 23551.701484963443
Epoch Step: 35 / 819 Loss: 19.00321388244629 Tokens per Sec: 26511.844025023674
Epoch Step: 40 / 819 Loss: 19.00242805480957 Tokens per Sec: 25372.738419879446
Epoch Step: 45 / 819 Loss: 19.80336570739746 Tokens per Sec: 26518.160099538494
Epoch Step: 50 / 819 Loss: 12.172554969787598 Tokens per Sec: 27629.65522516935
Epoch Step: 55 / 819 Loss: 14.189634323120117 Tokens per Sec: 26475.999819596727
Epoch Step: 60 / 819 Loss: 15.922126770019531 Tokens per Sec: 27147.830080946907
Epoch Step: 65 / 819 Loss: 14.955045700073242 Tokens per Sec: 25392.479351886275
Epoch Step: 70 / 819 Loss: 223.16087341308594 Tokens per Sec: 25212.251615553974
Epoch Step: 75 / 819 Loss: 15.299041748046875 Tokens per Sec: 26491.0014746227
Epoch Step: 80 / 819 Loss: 18.880300521850586 Tokens per Sec: 24087.418723485578
Epoch Step: 85 / 819 Loss: 15.793078422546387 Tokens per Sec: 27682.057970034635
Epoch Step: 90 / 819 Loss: 20.607906341552734 Tokens per Sec: 27706.387995488312
Epoch Step: 95 / 819 Loss: 17.293567657470703 Tokens per Sec: 26892.380321447454
Epoch Step: 100 / 819 Loss: 208.38206481933594 Tokens per Sec: 26420.04809342399
Epoch Step: 105 / 819 Loss: 13.650261878967285 Tokens per Sec: 25736.30397021412
Epoch Step: 110 / 819 Loss: 17.339210510253906 Tokens per Sec: 25776.645669632446
Epoch Step: 115 / 819 Loss: 18.023193359375 Tokens per Sec: 25869.535430846896
Epoch Step: 120 / 819 Loss: 19.15304946899414 Tokens per Sec: 25953.319456623056
Epoch Step: 125 / 819 Loss: 19.06592559814453 Tokens per Sec: 25885.455626541843
Epoch Step: 130 / 819 Loss: 15.49656867980957 Tokens per Sec: 26901.254520208728
Epoch Step: 135 / 819 Loss: 14.708699226379395 Tokens per Sec: 25834.137669937772
Epoch Step: 140 / 819 Loss: 16.899141311645508 Tokens per Sec: 26592.808452631056
Epoch Step: 145 / 819 Loss: 19.521432876586914 Tokens per Sec: 26178.505140610898
Epoch Step: 150 / 819 Loss: 164.07960510253906 Tokens per Sec: 26222.80003263231
Epoch Step: 155 / 819 Loss: 135.95205688476562 Tokens per Sec: 24895.02016103788
Epoch Step: 160 / 819 Loss: 21.531755447387695 Tokens per Sec: 27171.176714358073
Epoch Step: 165 / 819 Loss: 20.177370071411133 Tokens per Sec: 23865.21431769143
Epoch Step: 170 / 819 Loss: 21.032865524291992 Tokens per Sec: 26658.61596472333
Epoch Step: 175 / 819 Loss: 15.493709564208984 Tokens per Sec: 28387.43577074079
Epoch Step: 180 / 819 Loss: 192.9746856689453 Tokens per Sec: 27736.53552886873
Epoch Step: 185 / 819 Loss: 23.135530471801758 Tokens per Sec: 27559.852494940562
Epoch Step: 190 / 819 Loss: 17.59429168701172 Tokens per Sec: 24810.58645572058
Epoch Step: 195 / 819 Loss: 23.04970359802246 Tokens per Sec: 27385.971193582056
Epoch Step: 200 / 819 Loss: 21.364139556884766 Tokens per Sec: 26289.30605964733
Epoch Step: 205 / 819 Loss: 18.16553497314453 Tokens per Sec: 25634.23111741423
Epoch Step: 210 / 819 Loss: 22.07027244567871 Tokens per Sec: 26742.24163967467
Epoch Step: 215 / 819 Loss: 16.835285186767578 Tokens per Sec: 25895.390454238284
Epoch Step: 220 / 819 Loss: 124.34676361083984 Tokens per Sec: 27771.78715189567
Epoch Step: 225 / 819 Loss: 19.88617515563965 Tokens per Sec: 27469.136690752635
Epoch Step: 230 / 819 Loss: 21.09803009033203 Tokens per Sec: 26648.516776020082
Epoch Step: 235 / 819 Loss: 18.674617767333984 Tokens per Sec: 27261.441911876704
Epoch Step: 240 / 819 Loss: 19.503704071044922 Tokens per Sec: 24766.662424052458
Epoch Step: 245 / 819 Loss: 20.547758102416992 Tokens per Sec: 26546.300758430098
Epoch Step: 250 / 819 Loss: 14.945068359375 Tokens per Sec: 26962.547578026268
Epoch Step: 255 / 819 Loss: 13.413504600524902 Tokens per Sec: 28071.320792401282
Epoch Step: 260 / 819 Loss: 15.520353317260742 Tokens per Sec: 27274.812885411364
Epoch Step: 265 / 819 Loss: 18.08378028869629 Tokens per Sec: 25003.605433960318
Epoch Step: 270 / 819 Loss: 23.144926071166992 Tokens per Sec: 24675.94280969378
Epoch Step: 275 / 819 Loss: 17.779624938964844 Tokens per Sec: 27353.29902222577
Epoch Step: 280 / 819 Loss: 11.899276733398438 Tokens per Sec: 27958.65860850299
Epoch Step: 285 / 819 Loss: 17.549306869506836 Tokens per Sec: 26737.552453721823
Epoch Step: 290 / 819 Loss: 18.772794723510742 Tokens per Sec: 23409.459711570362
Epoch Step: 295 / 819 Loss: 166.33290100097656 Tokens per Sec: 24831.982831276244
Epoch Step: 300 / 819 Loss: 15.486991882324219 Tokens per Sec: 24557.761924692382
Epoch Step: 305 / 819 Loss: 18.559289932250977 Tokens per Sec: 26097.15550783153
Epoch Step: 310 / 819 Loss: 15.793720245361328 Tokens per Sec: 24836.88431803674
Epoch Step: 315 / 819 Loss: 18.66079330444336 Tokens per Sec: 27522.919668074883
Epoch Step: 320 / 819 Loss: 17.40414047241211 Tokens per Sec: 27815.051389624892
Epoch Step: 325 / 819 Loss: 19.543365478515625 Tokens per Sec: 26769.902311659687
Epoch Step: 330 / 819 Loss: 265.23541259765625 Tokens per Sec: 26654.997903263917
Epoch Step: 335 / 819 Loss: 18.32219123840332 Tokens per Sec: 25366.18585662961
Epoch Step: 340 / 819 Loss: 12.490507125854492 Tokens per Sec: 28249.865165124393
Epoch Step: 345 / 819 Loss: 192.85076904296875 Tokens per Sec: 25468.77245874262
Epoch Step: 350 / 819 Loss: 14.598830223083496 Tokens per Sec: 27017.006455324376
Epoch Step: 355 / 819 Loss: 16.813867568969727 Tokens per Sec: 26697.510263629887
Epoch Step: 360 / 819 Loss: 10.229520797729492 Tokens per Sec: 27389.195139803207
Epoch Step: 365 / 819 Loss: 18.97003173828125 Tokens per Sec: 26547.864855171352
Epoch Step: 370 / 819 Loss: 19.975135803222656 Tokens per Sec: 24635.26482558242
Epoch Step: 375 / 819 Loss: 23.135334014892578 Tokens per Sec: 26612.854092151294
Epoch Step: 380 / 819 Loss: 18.54340171813965 Tokens per Sec: 24304.666272766124
Epoch Step: 385 / 819 Loss: 16.857866287231445 Tokens per Sec: 27596.911648911246
Epoch Step: 390 / 819 Loss: 17.726642608642578 Tokens per Sec: 26957.566128516137
Epoch Step: 395 / 819 Loss: 16.864316940307617 Tokens per Sec: 24755.65458420337
Epoch Step: 400 / 819 Loss: 19.217897415161133 Tokens per Sec: 26160.30360652205
Epoch Step: 405 / 819 Loss: 21.157106399536133 Tokens per Sec: 27087.66310619276
Epoch Step: 410 / 819 Loss: 16.4509334564209 Tokens per Sec: 24045.220478445124
Epoch Step: 415 / 819 Loss: 17.445781707763672 Tokens per Sec: 27838.120510780347
Epoch Step: 420 / 819 Loss: 19.583087921142578 Tokens per Sec: 25879.90473646858
Epoch Step: 425 / 819 Loss: 14.48012638092041 Tokens per Sec: 26409.914027440802
Epoch Step: 430 / 819 Loss: 15.46533203125 Tokens per Sec: 27952.13540114507
Epoch Step: 435 / 819 Loss: 14.073486328125 Tokens per Sec: 26298.644077248144
Epoch Step: 440 / 819 Loss: 13.973023414611816 Tokens per Sec: 25459.184217396367
Epoch Step: 445 / 819 Loss: 14.115450859069824 Tokens per Sec: 26420.201912151464
Epoch Step: 450 / 819 Loss: 226.4114990234375 Tokens per Sec: 26747.859982261376
Epoch Step: 455 / 819 Loss: 15.778181076049805 Tokens per Sec: 24587.81975800641
Epoch Step: 460 / 819 Loss: 19.56452178955078 Tokens per Sec: 24663.105371394973
Epoch Step: 465 / 819 Loss: 20.294462203979492 Tokens per Sec: 25185.312720238984
Epoch Step: 470 / 819 Loss: 17.29767608642578 Tokens per Sec: 26906.525899724933
Epoch Step: 475 / 819 Loss: 10.336233139038086 Tokens per Sec: 23661.0937902318
Epoch Step: 480 / 819 Loss: 23.35955047607422 Tokens per Sec: 27951.630792916105
Epoch Step: 485 / 819 Loss: 15.148027420043945 Tokens per Sec: 23515.962804685616
Epoch Step: 490 / 819 Loss: 20.297704696655273 Tokens per Sec: 25979.999871866497
Epoch Step: 495 / 819 Loss: 257.080322265625 Tokens per Sec: 27353.670150183538
Epoch Step: 500 / 819 Loss: 143.486083984375 Tokens per Sec: 26128.586459886275
Epoch Step: 505 / 819 Loss: 19.02521514892578 Tokens per Sec: 24983.247464893237
Epoch Step: 510 / 819 Loss: 14.802903175354004 Tokens per Sec: 26647.427641501316
Epoch Step: 515 / 819 Loss: 16.56614875793457 Tokens per Sec: 27391.052083923638
Epoch Step: 520 / 819 Loss: 18.426162719726562 Tokens per Sec: 25832.15350729386
Epoch Step: 525 / 819 Loss: 16.19414520263672 Tokens per Sec: 28310.057129715737
Epoch Step: 530 / 819 Loss: 157.19970703125 Tokens per Sec: 27102.23737413396
Epoch Step: 535 / 819 Loss: 21.476404190063477 Tokens per Sec: 25962.2928958567
Epoch Step: 540 / 819 Loss: 19.7667179107666 Tokens per Sec: 24941.174754893065
Epoch Step: 545 / 819 Loss: 18.721874237060547 Tokens per Sec: 26900.331275472763
Epoch Step: 550 / 819 Loss: 19.691450119018555 Tokens per Sec: 24494.392743599226
Epoch Step: 555 / 819 Loss: 14.116945266723633 Tokens per Sec: 26568.40674133551
Epoch Step: 560 / 819 Loss: 20.494966506958008 Tokens per Sec: 29304.812731512087
Epoch Step: 565 / 819 Loss: 20.33808708190918 Tokens per Sec: 25385.673943973365
Epoch Step: 570 / 819 Loss: 17.225027084350586 Tokens per Sec: 25345.290714837174
Epoch Step: 575 / 819 Loss: 16.187908172607422 Tokens per Sec: 25347.82713029266
Epoch Step: 580 / 819 Loss: 242.31451416015625 Tokens per Sec: 28390.394617724443
Epoch Step: 585 / 819 Loss: 12.53557300567627 Tokens per Sec: 26936.523264804517
Epoch Step: 590 / 819 Loss: 20.828094482421875 Tokens per Sec: 25733.145855572388
Epoch Step: 595 / 819 Loss: 16.835161209106445 Tokens per Sec: 26279.02316691488
Epoch Step: 600 / 819 Loss: 21.201812744140625 Tokens per Sec: 27563.088841854937
Epoch Step: 605 / 819 Loss: 165.11285400390625 Tokens per Sec: 27878.163653596377
Epoch Step: 610 / 819 Loss: 22.97299575805664 Tokens per Sec: 26126.680586198192
Epoch Step: 615 / 819 Loss: 12.489298820495605 Tokens per Sec: 27197.3394980064
Epoch Step: 620 / 819 Loss: 23.57538604736328 Tokens per Sec: 25484.938696268367
Epoch Step: 625 / 819 Loss: 190.96096801757812 Tokens per Sec: 25972.341634615823
Epoch Step: 630 / 819 Loss: 16.47063636779785 Tokens per Sec: 27887.203312541842
Epoch Step: 635 / 819 Loss: 15.284440994262695 Tokens per Sec: 25202.037190350384
Epoch Step: 640 / 819 Loss: 15.926633834838867 Tokens per Sec: 25521.76034232833
Epoch Step: 645 / 819 Loss: 16.106372833251953 Tokens per Sec: 27214.69515384087
Epoch Step: 650 / 819 Loss: 18.07970428466797 Tokens per Sec: 25454.141600010047
Epoch Step: 655 / 819 Loss: 168.15237426757812 Tokens per Sec: 26292.6081955344
Epoch Step: 660 / 819 Loss: 21.49901008605957 Tokens per Sec: 26511.183525839126
Epoch Step: 665 / 819 Loss: 12.530576705932617 Tokens per Sec: 29675.895824891108
Epoch Step: 670 / 819 Loss: 20.362577438354492 Tokens per Sec: 27113.5643614676
Epoch Step: 675 / 819 Loss: 17.117015838623047 Tokens per Sec: 24384.83479255262
Epoch Step: 680 / 819 Loss: 21.292495727539062 Tokens per Sec: 26970.58852996461
Epoch Step: 685 / 819 Loss: 15.823587417602539 Tokens per Sec: 24559.624719047177
Epoch Step: 690 / 819 Loss: 13.345224380493164 Tokens per Sec: 25151.027228497296
Epoch Step: 695 / 819 Loss: 16.46588134765625 Tokens per Sec: 26188.712153773773
Epoch Step: 700 / 819 Loss: 92.00818634033203 Tokens per Sec: 24957.770807315104
Epoch Step: 705 / 819 Loss: 16.97129249572754 Tokens per Sec: 22833.472806287245
Epoch Step: 710 / 819 Loss: 15.64746379852295 Tokens per Sec: 26505.118795609953
Epoch Step: 715 / 819 Loss: 19.048067092895508 Tokens per Sec: 27023.412711062425
Epoch Step: 720 / 819 Loss: 17.61338996887207 Tokens per Sec: 27096.18701505171
Epoch Step: 725 / 819 Loss: 14.978264808654785 Tokens per Sec: 26762.267964260587
Epoch Step: 730 / 819 Loss: 119.14614868164062 Tokens per Sec: 26728.493587622288
Epoch Step: 735 / 819 Loss: 17.672224044799805 Tokens per Sec: 27129.07511020788
Epoch Step: 740 / 819 Loss: 118.36988830566406 Tokens per Sec: 25366.185452166814
Epoch Step: 745 / 819 Loss: 16.230392456054688 Tokens per Sec: 23626.9334896375
Epoch Step: 750 / 819 Loss: 15.1990966796875 Tokens per Sec: 25155.508530243518
Epoch Step: 755 / 819 Loss: 21.208227157592773 Tokens per Sec: 22732.328670308285
Epoch Step: 760 / 819 Loss: 17.991361618041992 Tokens per Sec: 26911.7191200534
Epoch Step: 765 / 819 Loss: 19.84225845336914 Tokens per Sec: 25169.681013504796
Epoch Step: 770 / 819 Loss: 17.432065963745117 Tokens per Sec: 27481.403016670778
Epoch Step: 775 / 819 Loss: 21.647092819213867 Tokens per Sec: 26055.50863253433
Epoch Step: 780 / 819 Loss: 19.885807037353516 Tokens per Sec: 26685.50106560606
Epoch Step: 785 / 819 Loss: 19.409177780151367 Tokens per Sec: 25983.5068381029
Epoch Step: 790 / 819 Loss: 20.33541488647461 Tokens per Sec: 23833.254369081686
Epoch Step: 795 / 819 Loss: 17.578580856323242 Tokens per Sec: 26615.001270900866
Epoch Step: 800 / 819 Loss: 18.357303619384766 Tokens per Sec: 24998.213913234944
Epoch Step: 805 / 819 Loss: 17.969831466674805 Tokens per Sec: 25207.79031170069
Epoch Step: 810 / 819 Loss: 19.4455509185791 Tokens per Sec: 19352.77728061473
Epoch Step: 815 / 819 Loss: 17.505258560180664 Tokens per Sec: 24315.41348036902
Epoch ended with duration 0:02:28.978065
Train perplexity: 1.5698988856966296
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.292972
Validation perplexity: 1.5155317574295042
Epoch 38 / 1000
Epoch Step: 5 / 819 Loss: 23.841739654541016 Tokens per Sec: 23099.556365235658
Epoch Step: 10 / 819 Loss: 20.319454193115234 Tokens per Sec: 23868.89030062883
Epoch Step: 15 / 819 Loss: 14.953783988952637 Tokens per Sec: 24814.13798339669
Epoch Step: 20 / 819 Loss: 16.143333435058594 Tokens per Sec: 22122.61328261114
Epoch Step: 25 / 819 Loss: 12.085431098937988 Tokens per Sec: 25196.199411381876
Epoch Step: 30 / 819 Loss: 13.765939712524414 Tokens per Sec: 27319.615426125998
Epoch Step: 35 / 819 Loss: 197.14468383789062 Tokens per Sec: 27338.22624346877
Epoch Step: 40 / 819 Loss: 17.247224807739258 Tokens per Sec: 25325.050500363024
Epoch Step: 45 / 819 Loss: 146.9348907470703 Tokens per Sec: 27599.96506172812
Epoch Step: 50 / 819 Loss: 18.199758529663086 Tokens per Sec: 26825.60028942763
Epoch Step: 55 / 819 Loss: 20.289052963256836 Tokens per Sec: 25606.375952235474
Epoch Step: 60 / 819 Loss: 25.09872817993164 Tokens per Sec: 25586.571858860734
Epoch Step: 65 / 819 Loss: 20.780513763427734 Tokens per Sec: 24643.308492164946
Epoch Step: 70 / 819 Loss: 21.7048282623291 Tokens per Sec: 26529.01985333216
Epoch Step: 75 / 819 Loss: 14.822709083557129 Tokens per Sec: 25223.76136768736
Epoch Step: 80 / 819 Loss: 16.16944122314453 Tokens per Sec: 25489.609231910687
Epoch Step: 85 / 819 Loss: 17.27716064453125 Tokens per Sec: 27309.129027844137
Epoch Step: 90 / 819 Loss: 13.229963302612305 Tokens per Sec: 26266.551312189255
Epoch Step: 95 / 819 Loss: 13.856576919555664 Tokens per Sec: 25770.68554748998
Epoch Step: 100 / 819 Loss: 16.259220123291016 Tokens per Sec: 27231.07997535319
Epoch Step: 105 / 819 Loss: 16.004547119140625 Tokens per Sec: 25588.549767690743
Epoch Step: 110 / 819 Loss: 15.736184120178223 Tokens per Sec: 21318.72812620081
Epoch Step: 115 / 819 Loss: 13.553020477294922 Tokens per Sec: 24222.13735088103
Epoch Step: 120 / 819 Loss: 22.60788345336914 Tokens per Sec: 24298.240141573384
Epoch Step: 125 / 819 Loss: 19.662588119506836 Tokens per Sec: 26254.635497844847
Epoch Step: 130 / 819 Loss: 18.29572868347168 Tokens per Sec: 25313.32203789391
Epoch Step: 135 / 819 Loss: 12.442545890808105 Tokens per Sec: 28065.580309343397
Epoch Step: 140 / 819 Loss: 17.77937889099121 Tokens per Sec: 24236.200072117445
Epoch Step: 145 / 819 Loss: 14.227775573730469 Tokens per Sec: 27303.81617484007
Epoch Step: 150 / 819 Loss: 15.570235252380371 Tokens per Sec: 28006.623999089818
Epoch Step: 155 / 819 Loss: 199.36019897460938 Tokens per Sec: 28224.277193513848
Epoch Step: 160 / 819 Loss: 15.466081619262695 Tokens per Sec: 26218.212771869497
Epoch Step: 165 / 819 Loss: 19.90898323059082 Tokens per Sec: 25643.607664272604
Epoch Step: 170 / 819 Loss: 19.293745040893555 Tokens per Sec: 24533.21554920297
Epoch Step: 175 / 819 Loss: 12.683050155639648 Tokens per Sec: 26854.11429013241
Epoch Step: 180 / 819 Loss: 18.866134643554688 Tokens per Sec: 26537.345863081362
Epoch Step: 185 / 819 Loss: 19.621076583862305 Tokens per Sec: 28714.312525444635
Epoch Step: 190 / 819 Loss: 17.821353912353516 Tokens per Sec: 24004.914408669276
Epoch Step: 195 / 819 Loss: 21.006887435913086 Tokens per Sec: 23661.13788934743
Epoch Step: 200 / 819 Loss: 16.520416259765625 Tokens per Sec: 24423.228727917845
Epoch Step: 205 / 819 Loss: 16.85956573486328 Tokens per Sec: 24436.745010459334
Epoch Step: 210 / 819 Loss: 239.75469970703125 Tokens per Sec: 25782.542908744672
Epoch Step: 215 / 819 Loss: 14.548559188842773 Tokens per Sec: 26004.78118719133
Epoch Step: 220 / 819 Loss: 19.83953285217285 Tokens per Sec: 26515.306707898042
Epoch Step: 225 / 819 Loss: 19.496685028076172 Tokens per Sec: 24364.627974560735
Epoch Step: 230 / 819 Loss: 18.45509147644043 Tokens per Sec: 26069.096373775305
Epoch Step: 235 / 819 Loss: 17.83012580871582 Tokens per Sec: 26261.325748443414
Epoch Step: 240 / 819 Loss: 14.356029510498047 Tokens per Sec: 26188.98580651932
Epoch Step: 245 / 819 Loss: 21.563575744628906 Tokens per Sec: 25385.195208754336
Epoch Step: 250 / 819 Loss: 20.666574478149414 Tokens per Sec: 25864.839164545054
Epoch Step: 255 / 819 Loss: 14.738460540771484 Tokens per Sec: 27488.724003987863
Epoch Step: 260 / 819 Loss: 20.675222396850586 Tokens per Sec: 23909.327710470774
Epoch Step: 265 / 819 Loss: 16.735986709594727 Tokens per Sec: 24776.96217708598
Epoch Step: 270 / 819 Loss: 13.992510795593262 Tokens per Sec: 28652.25868740175
Epoch Step: 275 / 819 Loss: 17.15793800354004 Tokens per Sec: 26498.57848139465
Epoch Step: 280 / 819 Loss: 12.959794044494629 Tokens per Sec: 28016.625448548933
Epoch Step: 285 / 819 Loss: 20.316024780273438 Tokens per Sec: 27791.100808005038
Epoch Step: 290 / 819 Loss: 14.865238189697266 Tokens per Sec: 25715.432636447975
Epoch Step: 295 / 819 Loss: 197.0928955078125 Tokens per Sec: 26361.967501707324
Epoch Step: 300 / 819 Loss: 18.939809799194336 Tokens per Sec: 27251.540574920775
Epoch Step: 305 / 819 Loss: 18.316049575805664 Tokens per Sec: 25356.776573379084
Epoch Step: 310 / 819 Loss: 18.742990493774414 Tokens per Sec: 25553.78854386264
Epoch Step: 315 / 819 Loss: 15.511676788330078 Tokens per Sec: 26705.411868333693
Epoch Step: 320 / 819 Loss: 21.09189796447754 Tokens per Sec: 26942.370434756544
Epoch Step: 325 / 819 Loss: 21.149831771850586 Tokens per Sec: 23654.662877332394
Epoch Step: 330 / 819 Loss: 19.53530502319336 Tokens per Sec: 25618.741055032016
Epoch Step: 335 / 819 Loss: 17.320018768310547 Tokens per Sec: 25881.84690744381
Epoch Step: 340 / 819 Loss: 19.707496643066406 Tokens per Sec: 25698.605926800043
Epoch Step: 345 / 819 Loss: 19.644960403442383 Tokens per Sec: 24833.729666960306
Epoch Step: 350 / 819 Loss: 21.093002319335938 Tokens per Sec: 26143.355739539245
Epoch Step: 355 / 819 Loss: 16.007740020751953 Tokens per Sec: 26689.921407139424
Epoch Step: 360 / 819 Loss: 12.811246871948242 Tokens per Sec: 26430.827553469677
Epoch Step: 365 / 819 Loss: 14.41794204711914 Tokens per Sec: 27017.266690614793
Epoch Step: 370 / 819 Loss: 15.436691284179688 Tokens per Sec: 28638.70368768355
Epoch Step: 375 / 819 Loss: 18.22492027282715 Tokens per Sec: 28172.33161306698
Epoch Step: 380 / 819 Loss: 14.267073631286621 Tokens per Sec: 28433.323233468163
Epoch Step: 385 / 819 Loss: 14.500406265258789 Tokens per Sec: 26751.084311306877
Epoch Step: 390 / 819 Loss: 12.15133285522461 Tokens per Sec: 26133.86746432758
Epoch Step: 395 / 819 Loss: 18.443817138671875 Tokens per Sec: 24647.763979704152
Epoch Step: 400 / 819 Loss: 14.122862815856934 Tokens per Sec: 26237.807905207348
Epoch Step: 405 / 819 Loss: 12.009699821472168 Tokens per Sec: 26090.11486130548
Epoch Step: 410 / 819 Loss: 12.59811782836914 Tokens per Sec: 25986.234562273807
Epoch Step: 415 / 819 Loss: 12.064169883728027 Tokens per Sec: 27567.576159581095
Epoch Step: 420 / 819 Loss: 301.4635925292969 Tokens per Sec: 27298.483715236333
Epoch Step: 425 / 819 Loss: 13.320297241210938 Tokens per Sec: 25526.882154982588
Epoch Step: 430 / 819 Loss: 16.435075759887695 Tokens per Sec: 24056.362571774203
Epoch Step: 435 / 819 Loss: 15.512962341308594 Tokens per Sec: 26947.401307049375
Epoch Step: 440 / 819 Loss: 20.59307861328125 Tokens per Sec: 25879.583644584545
Epoch Step: 445 / 819 Loss: 13.80160140991211 Tokens per Sec: 25989.9241102763
Epoch Step: 450 / 819 Loss: 16.597496032714844 Tokens per Sec: 26484.224557835973
Epoch Step: 455 / 819 Loss: 22.597122192382812 Tokens per Sec: 25117.323926987294
Epoch Step: 460 / 819 Loss: 14.45149040222168 Tokens per Sec: 28082.468888332456
Epoch Step: 465 / 819 Loss: 17.504182815551758 Tokens per Sec: 25177.631643254423
Epoch Step: 470 / 819 Loss: 15.205660820007324 Tokens per Sec: 27157.92451387503
Epoch Step: 475 / 819 Loss: 21.337940216064453 Tokens per Sec: 28419.449993297218
Epoch Step: 480 / 819 Loss: 24.058324813842773 Tokens per Sec: 25761.21861896797
Epoch Step: 485 / 819 Loss: 18.144126892089844 Tokens per Sec: 26724.16557636368
Epoch Step: 490 / 819 Loss: 18.401756286621094 Tokens per Sec: 26688.60586597684
Epoch Step: 495 / 819 Loss: 23.058528900146484 Tokens per Sec: 27166.310430551046
Epoch Step: 500 / 819 Loss: 14.721052169799805 Tokens per Sec: 26287.311910628418
Epoch Step: 505 / 819 Loss: 16.302959442138672 Tokens per Sec: 27451.695980694116
Epoch Step: 510 / 819 Loss: 222.55201721191406 Tokens per Sec: 23426.394465179517
Epoch Step: 515 / 819 Loss: 20.15392303466797 Tokens per Sec: 27415.061356022816
Epoch Step: 520 / 819 Loss: 16.67510223388672 Tokens per Sec: 25309.945044781514
Epoch Step: 525 / 819 Loss: 200.5016326904297 Tokens per Sec: 26195.31316761235
Epoch Step: 530 / 819 Loss: 20.74921226501465 Tokens per Sec: 26831.823404908446
Epoch Step: 535 / 819 Loss: 21.651906967163086 Tokens per Sec: 24643.890184733147
Epoch Step: 540 / 819 Loss: 19.576881408691406 Tokens per Sec: 27275.140474575594
Epoch Step: 545 / 819 Loss: 22.794191360473633 Tokens per Sec: 25626.727924174098
Epoch Step: 550 / 819 Loss: 18.731517791748047 Tokens per Sec: 24893.0956785596
Epoch Step: 555 / 819 Loss: 22.536014556884766 Tokens per Sec: 26217.539780885618
Epoch Step: 560 / 819 Loss: 17.979887008666992 Tokens per Sec: 26232.736942853124
Epoch Step: 565 / 819 Loss: 18.527320861816406 Tokens per Sec: 25096.69670817954
Epoch Step: 570 / 819 Loss: 15.846625328063965 Tokens per Sec: 27830.519726909024
Epoch Step: 575 / 819 Loss: 18.09430503845215 Tokens per Sec: 26560.85862983499
Epoch Step: 580 / 819 Loss: 18.102210998535156 Tokens per Sec: 25672.706156416563
Epoch Step: 585 / 819 Loss: 11.03928279876709 Tokens per Sec: 26812.849343830207
Epoch Step: 590 / 819 Loss: 12.167638778686523 Tokens per Sec: 25401.31808356886
Epoch Step: 595 / 819 Loss: 18.7760009765625 Tokens per Sec: 27877.924314838852
Epoch Step: 600 / 819 Loss: 197.57888793945312 Tokens per Sec: 23615.071352184437
Epoch Step: 605 / 819 Loss: 16.511962890625 Tokens per Sec: 24438.280226692616
Epoch Step: 610 / 819 Loss: 17.117481231689453 Tokens per Sec: 25979.523745815884
Epoch Step: 615 / 819 Loss: 19.462366104125977 Tokens per Sec: 24968.513013905424
Epoch Step: 620 / 819 Loss: 19.43596076965332 Tokens per Sec: 25494.653087089082
Epoch Step: 625 / 819 Loss: 14.599419593811035 Tokens per Sec: 26679.650102245232
Epoch Step: 630 / 819 Loss: 13.68347454071045 Tokens per Sec: 27206.091685511357
Epoch Step: 635 / 819 Loss: 15.917625427246094 Tokens per Sec: 26440.893619467715
Epoch Step: 640 / 819 Loss: 18.58733558654785 Tokens per Sec: 27065.300416549304
Epoch Step: 645 / 819 Loss: 14.449029922485352 Tokens per Sec: 27845.999037832855
Epoch Step: 650 / 819 Loss: 20.969791412353516 Tokens per Sec: 24673.60299600643
Epoch Step: 655 / 819 Loss: 103.67911529541016 Tokens per Sec: 27884.95274801429
Epoch Step: 660 / 819 Loss: 15.602428436279297 Tokens per Sec: 27601.501500194125
Epoch Step: 665 / 819 Loss: 15.629701614379883 Tokens per Sec: 26700.85364781107
Epoch Step: 670 / 819 Loss: 20.977283477783203 Tokens per Sec: 26327.18055859505
Epoch Step: 675 / 819 Loss: 19.30357551574707 Tokens per Sec: 24897.992902956245
Epoch Step: 680 / 819 Loss: 174.91317749023438 Tokens per Sec: 24282.621274595935
Epoch Step: 685 / 819 Loss: 14.040587425231934 Tokens per Sec: 24359.3648667205
Epoch Step: 690 / 819 Loss: 20.925302505493164 Tokens per Sec: 25190.09447190011
Epoch Step: 695 / 819 Loss: 215.60165405273438 Tokens per Sec: 27650.791549889687
Epoch Step: 700 / 819 Loss: 95.29385375976562 Tokens per Sec: 27202.017790258542
Epoch Step: 705 / 819 Loss: 15.60296630859375 Tokens per Sec: 28560.384622641766
Epoch Step: 710 / 819 Loss: 19.07756996154785 Tokens per Sec: 27952.256312002843
Epoch Step: 715 / 819 Loss: 19.615798950195312 Tokens per Sec: 27169.285799318288
Epoch Step: 720 / 819 Loss: 21.438020706176758 Tokens per Sec: 23279.678712390465
Epoch Step: 725 / 819 Loss: 20.941192626953125 Tokens per Sec: 27725.41222443894
Epoch Step: 730 / 819 Loss: 18.591421127319336 Tokens per Sec: 26351.999461147276
Epoch Step: 735 / 819 Loss: 21.864519119262695 Tokens per Sec: 27248.039807966237
Epoch Step: 740 / 819 Loss: 19.201332092285156 Tokens per Sec: 27707.577099680326
Epoch Step: 745 / 819 Loss: 20.862388610839844 Tokens per Sec: 24923.527237220467
Epoch Step: 750 / 819 Loss: 16.380748748779297 Tokens per Sec: 26393.509173616152
Epoch Step: 755 / 819 Loss: 19.17388153076172 Tokens per Sec: 23034.45889166274
Epoch Step: 760 / 819 Loss: 17.378957748413086 Tokens per Sec: 28499.779867410405
Epoch Step: 765 / 819 Loss: 13.383654594421387 Tokens per Sec: 26929.43096886365
Epoch Step: 770 / 819 Loss: 14.79354476928711 Tokens per Sec: 27494.3994893189
Epoch Step: 775 / 819 Loss: 18.098691940307617 Tokens per Sec: 27658.29359474952
Epoch Step: 780 / 819 Loss: 17.836992263793945 Tokens per Sec: 24869.958168556022
Epoch Step: 785 / 819 Loss: 196.2194366455078 Tokens per Sec: 24761.283813664217
Epoch Step: 790 / 819 Loss: 133.4567413330078 Tokens per Sec: 26566.903569858914
Epoch Step: 795 / 819 Loss: 20.018125534057617 Tokens per Sec: 24665.793143156076
Epoch Step: 800 / 819 Loss: 15.787687301635742 Tokens per Sec: 26748.577031230023
Epoch Step: 805 / 819 Loss: 20.573650360107422 Tokens per Sec: 25523.031028016812
Epoch Step: 810 / 819 Loss: 19.92383575439453 Tokens per Sec: 23716.797955893177
Epoch Step: 815 / 819 Loss: 165.50897216796875 Tokens per Sec: 21498.02511890033
Epoch ended with duration 0:02:29.479365
Train perplexity: 1.6002739864621154
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.120291
Validation perplexity: 1.5747013177462885
Epoch 39 / 1000
Epoch Step: 5 / 819 Loss: 20.38216781616211 Tokens per Sec: 26006.79509184781
Epoch Step: 10 / 819 Loss: 17.78350257873535 Tokens per Sec: 23597.125415223578
Epoch Step: 15 / 819 Loss: 12.772006034851074 Tokens per Sec: 23623.823095197935
Epoch Step: 20 / 819 Loss: 14.904803276062012 Tokens per Sec: 29057.111821224476
Epoch Step: 25 / 819 Loss: 11.018970489501953 Tokens per Sec: 28135.457191802023
Epoch Step: 30 / 819 Loss: 16.16181755065918 Tokens per Sec: 25012.911785032902
Epoch Step: 35 / 819 Loss: 19.06574821472168 Tokens per Sec: 27138.67043444148
Epoch Step: 40 / 819 Loss: 12.75455379486084 Tokens per Sec: 24192.480855898088
Epoch Step: 45 / 819 Loss: 16.94673728942871 Tokens per Sec: 28838.12043554538
Epoch Step: 50 / 819 Loss: 17.05404281616211 Tokens per Sec: 27327.78403338671
Epoch Step: 55 / 819 Loss: 18.200973510742188 Tokens per Sec: 26837.49012846548
Epoch Step: 60 / 819 Loss: 12.913507461547852 Tokens per Sec: 26766.44223439256
Epoch Step: 65 / 819 Loss: 15.362313270568848 Tokens per Sec: 27427.314307017983
Epoch Step: 70 / 819 Loss: 16.414836883544922 Tokens per Sec: 27628.55608660092
Epoch Step: 75 / 819 Loss: 16.2567195892334 Tokens per Sec: 25195.55737373705
Epoch Step: 80 / 819 Loss: 13.814915657043457 Tokens per Sec: 24423.66349846019
Epoch Step: 85 / 819 Loss: 13.956530570983887 Tokens per Sec: 26914.06273564816
Epoch Step: 90 / 819 Loss: 12.401718139648438 Tokens per Sec: 25530.280596588604
Epoch Step: 95 / 819 Loss: 15.376232147216797 Tokens per Sec: 25864.987572043046
Epoch Step: 100 / 819 Loss: 16.117237091064453 Tokens per Sec: 26148.253960617003
Epoch Step: 105 / 819 Loss: 210.60577392578125 Tokens per Sec: 25173.343310339453
Epoch Step: 110 / 819 Loss: 207.12661743164062 Tokens per Sec: 27311.824349344006
Epoch Step: 115 / 819 Loss: 21.569316864013672 Tokens per Sec: 26415.26376747004
Epoch Step: 120 / 819 Loss: 19.73605728149414 Tokens per Sec: 22992.914988238936
Epoch Step: 125 / 819 Loss: 20.55293083190918 Tokens per Sec: 26492.328893412076
Epoch Step: 130 / 819 Loss: 12.886752128601074 Tokens per Sec: 28227.260501496105
Epoch Step: 135 / 819 Loss: 19.0266056060791 Tokens per Sec: 27706.937765770443
Epoch Step: 140 / 819 Loss: 18.79724884033203 Tokens per Sec: 25700.163475168953
Epoch Step: 145 / 819 Loss: 17.052682876586914 Tokens per Sec: 24882.47121994289
Epoch Step: 150 / 819 Loss: 160.58132934570312 Tokens per Sec: 25774.636409203264
Epoch Step: 155 / 819 Loss: 20.32625389099121 Tokens per Sec: 21949.4989992972
Epoch Step: 160 / 819 Loss: 18.449766159057617 Tokens per Sec: 25139.67107660628
Epoch Step: 165 / 819 Loss: 19.900541305541992 Tokens per Sec: 27955.928311986016
Epoch Step: 170 / 819 Loss: 19.867881774902344 Tokens per Sec: 26165.840592433895
Epoch Step: 175 / 819 Loss: 15.213264465332031 Tokens per Sec: 28709.871527613435
Epoch Step: 180 / 819 Loss: 21.458974838256836 Tokens per Sec: 27802.25424894236
Epoch Step: 185 / 819 Loss: 13.57268238067627 Tokens per Sec: 28447.06187327773
Epoch Step: 190 / 819 Loss: 16.564205169677734 Tokens per Sec: 25259.01833629373
Epoch Step: 195 / 819 Loss: 228.18292236328125 Tokens per Sec: 25842.456640893954
Epoch Step: 200 / 819 Loss: 19.785118103027344 Tokens per Sec: 27573.50644252891
Epoch Step: 205 / 819 Loss: 19.143325805664062 Tokens per Sec: 24660.40201917505
Epoch Step: 210 / 819 Loss: 167.0347137451172 Tokens per Sec: 25876.389307732337
Epoch Step: 215 / 819 Loss: 213.02264404296875 Tokens per Sec: 24964.66207057712
Epoch Step: 220 / 819 Loss: 16.25086784362793 Tokens per Sec: 26013.633508666262
Epoch Step: 225 / 819 Loss: 17.5655460357666 Tokens per Sec: 26280.290117378634
Epoch Step: 230 / 819 Loss: 20.455713272094727 Tokens per Sec: 27072.302871791086
Epoch Step: 235 / 819 Loss: 91.19203186035156 Tokens per Sec: 25993.2688662273
Epoch Step: 240 / 819 Loss: 107.94043731689453 Tokens per Sec: 27106.808877469954
Epoch Step: 245 / 819 Loss: 14.786778450012207 Tokens per Sec: 26831.13789516379
Epoch Step: 250 / 819 Loss: 14.667288780212402 Tokens per Sec: 25709.982935909993
Epoch Step: 255 / 819 Loss: 15.985322952270508 Tokens per Sec: 27773.068013467677
Epoch Step: 260 / 819 Loss: 170.9070587158203 Tokens per Sec: 26142.147175493094
Epoch Step: 265 / 819 Loss: 17.63519859313965 Tokens per Sec: 27326.74158158746
Epoch Step: 270 / 819 Loss: 17.987659454345703 Tokens per Sec: 24930.719368371552
Epoch Step: 275 / 819 Loss: 13.961931228637695 Tokens per Sec: 28004.088305686953
Epoch Step: 280 / 819 Loss: 19.167354583740234 Tokens per Sec: 27134.87351988412
Epoch Step: 285 / 819 Loss: 12.939507484436035 Tokens per Sec: 26902.79965797244
Epoch Step: 290 / 819 Loss: 16.368425369262695 Tokens per Sec: 25327.580297448214
Epoch Step: 295 / 819 Loss: 14.900142669677734 Tokens per Sec: 26054.7473550502
Epoch Step: 300 / 819 Loss: 14.987908363342285 Tokens per Sec: 27118.307706021198
Epoch Step: 305 / 819 Loss: 13.271515846252441 Tokens per Sec: 28465.091027181432
Epoch Step: 310 / 819 Loss: 257.3974609375 Tokens per Sec: 23963.447890084797
Epoch Step: 315 / 819 Loss: 14.688847541809082 Tokens per Sec: 28608.051194020314
Epoch Step: 320 / 819 Loss: 169.80516052246094 Tokens per Sec: 26621.521337041177
Epoch Step: 325 / 819 Loss: 17.908863067626953 Tokens per Sec: 23646.319282937024
Epoch Step: 330 / 819 Loss: 18.996192932128906 Tokens per Sec: 26472.557654644308
Epoch Step: 335 / 819 Loss: 16.536142349243164 Tokens per Sec: 24184.344433011167
Epoch Step: 340 / 819 Loss: 149.09202575683594 Tokens per Sec: 27883.981094168634
Epoch Step: 345 / 819 Loss: 19.190099716186523 Tokens per Sec: 26446.49297824868
Epoch Step: 350 / 819 Loss: 16.135387420654297 Tokens per Sec: 26948.163780385188
Epoch Step: 355 / 819 Loss: 170.73263549804688 Tokens per Sec: 26575.107666437216
Epoch Step: 360 / 819 Loss: 16.14104461669922 Tokens per Sec: 23956.75154899429
Epoch Step: 365 / 819 Loss: 16.515134811401367 Tokens per Sec: 27595.715035768553
Epoch Step: 370 / 819 Loss: 20.072898864746094 Tokens per Sec: 27799.968784648747
Epoch Step: 375 / 819 Loss: 102.65946197509766 Tokens per Sec: 27278.649941744425
Epoch Step: 380 / 819 Loss: 21.066293716430664 Tokens per Sec: 23777.631865035175
Epoch Step: 385 / 819 Loss: 20.84834861755371 Tokens per Sec: 25418.299636138483
Epoch Step: 390 / 819 Loss: 133.09368896484375 Tokens per Sec: 26457.33040083737
Epoch Step: 395 / 819 Loss: 21.173320770263672 Tokens per Sec: 26233.990142128216
Epoch Step: 400 / 819 Loss: 20.02057647705078 Tokens per Sec: 24742.91982236436
Epoch Step: 405 / 819 Loss: 185.2945098876953 Tokens per Sec: 26560.607973811813
Epoch Step: 410 / 819 Loss: 18.339406967163086 Tokens per Sec: 26541.364849252765
Epoch Step: 415 / 819 Loss: 19.70647621154785 Tokens per Sec: 26712.882427358505
Epoch Step: 420 / 819 Loss: 15.5176362991333 Tokens per Sec: 25886.91043232037
Epoch Step: 425 / 819 Loss: 17.579919815063477 Tokens per Sec: 25792.675560987675
Epoch Step: 430 / 819 Loss: 16.24913787841797 Tokens per Sec: 25809.679594800593
Epoch Step: 435 / 819 Loss: 11.848703384399414 Tokens per Sec: 26116.96020839006
Epoch Step: 440 / 819 Loss: 247.02224731445312 Tokens per Sec: 26386.225707278318
Epoch Step: 445 / 819 Loss: 18.693391799926758 Tokens per Sec: 25723.446470762374
Epoch Step: 450 / 819 Loss: 91.87556457519531 Tokens per Sec: 27007.4725901744
Epoch Step: 455 / 819 Loss: 17.552797317504883 Tokens per Sec: 27161.245417687132
Epoch Step: 460 / 819 Loss: 17.52082061767578 Tokens per Sec: 24952.202717698405
Epoch Step: 465 / 819 Loss: 19.38067626953125 Tokens per Sec: 26212.057975196454
Epoch Step: 470 / 819 Loss: 15.210467338562012 Tokens per Sec: 28158.501532026366
Epoch Step: 475 / 819 Loss: 16.5501766204834 Tokens per Sec: 26587.420155726355
Epoch Step: 480 / 819 Loss: 15.995121002197266 Tokens per Sec: 26777.56755747189
Epoch Step: 485 / 819 Loss: 124.0542221069336 Tokens per Sec: 27589.195002363103
Epoch Step: 490 / 819 Loss: 19.370641708374023 Tokens per Sec: 23855.522900327265
Epoch Step: 495 / 819 Loss: 217.2221221923828 Tokens per Sec: 25408.466523644303
Epoch Step: 500 / 819 Loss: 17.288972854614258 Tokens per Sec: 25760.966449167085
Epoch Step: 505 / 819 Loss: 18.868938446044922 Tokens per Sec: 23957.43340138981
Epoch Step: 510 / 819 Loss: 12.035877227783203 Tokens per Sec: 26906.82619739595
Epoch Step: 515 / 819 Loss: 20.294782638549805 Tokens per Sec: 24762.25735782907
Epoch Step: 520 / 819 Loss: 18.09932518005371 Tokens per Sec: 27189.55995832058
Epoch Step: 525 / 819 Loss: 14.771306037902832 Tokens per Sec: 27343.435974950553
Epoch Step: 530 / 819 Loss: 18.5617733001709 Tokens per Sec: 27567.7173213356
Epoch Step: 535 / 819 Loss: 17.094268798828125 Tokens per Sec: 27889.21028904083
Epoch Step: 540 / 819 Loss: 13.93532943725586 Tokens per Sec: 26893.587671618443
Epoch Step: 545 / 819 Loss: 21.773954391479492 Tokens per Sec: 24423.361389653513
Epoch Step: 550 / 819 Loss: 15.032752990722656 Tokens per Sec: 28038.92667653903
Epoch Step: 555 / 819 Loss: 17.553382873535156 Tokens per Sec: 26140.21391923554
Epoch Step: 560 / 819 Loss: 20.6822452545166 Tokens per Sec: 27381.63956087045
Epoch Step: 565 / 819 Loss: 14.568777084350586 Tokens per Sec: 28756.132010154626
Epoch Step: 570 / 819 Loss: 13.797813415527344 Tokens per Sec: 26856.917829430655
Epoch Step: 575 / 819 Loss: 10.997832298278809 Tokens per Sec: 26715.199551259135
Epoch Step: 580 / 819 Loss: 16.798948287963867 Tokens per Sec: 23560.971596387983
Epoch Step: 585 / 819 Loss: 11.959495544433594 Tokens per Sec: 27656.211728220045
Epoch Step: 590 / 819 Loss: 13.058029174804688 Tokens per Sec: 26165.244706479236
Epoch Step: 595 / 819 Loss: 18.259122848510742 Tokens per Sec: 26358.22300287222
Epoch Step: 600 / 819 Loss: 18.5201416015625 Tokens per Sec: 23682.857008436804
Epoch Step: 605 / 819 Loss: 16.204097747802734 Tokens per Sec: 27620.319914029285
Epoch Step: 610 / 819 Loss: 16.32871437072754 Tokens per Sec: 24687.572810200374
Epoch Step: 615 / 819 Loss: 20.507131576538086 Tokens per Sec: 27195.62185439822
Epoch Step: 620 / 819 Loss: 19.458293914794922 Tokens per Sec: 25725.730191160193
Epoch Step: 625 / 819 Loss: 19.272008895874023 Tokens per Sec: 27033.282378214502
Epoch Step: 630 / 819 Loss: 16.721263885498047 Tokens per Sec: 26368.44813754355
Epoch Step: 635 / 819 Loss: 15.536161422729492 Tokens per Sec: 25370.658339149246
Epoch Step: 640 / 819 Loss: 16.194509506225586 Tokens per Sec: 28114.707928565367
Epoch Step: 645 / 819 Loss: 12.973167419433594 Tokens per Sec: 29132.626463438322
Epoch Step: 650 / 819 Loss: 16.9781551361084 Tokens per Sec: 25673.13828627986
Epoch Step: 655 / 819 Loss: 16.143598556518555 Tokens per Sec: 27869.95203864695
Epoch Step: 660 / 819 Loss: 199.31300354003906 Tokens per Sec: 24335.40276582701
Epoch Step: 665 / 819 Loss: 18.18926429748535 Tokens per Sec: 25837.184201162265
Epoch Step: 670 / 819 Loss: 18.74326515197754 Tokens per Sec: 25717.50987163717
Epoch Step: 675 / 819 Loss: 15.599166870117188 Tokens per Sec: 24685.046425552584
Epoch Step: 680 / 819 Loss: 15.107002258300781 Tokens per Sec: 27117.575092168212
Epoch Step: 685 / 819 Loss: 14.697538375854492 Tokens per Sec: 26741.717957122113
Epoch Step: 690 / 819 Loss: 16.82003402709961 Tokens per Sec: 24060.425769224013
Epoch Step: 695 / 819 Loss: 16.773977279663086 Tokens per Sec: 25864.57662187796
Epoch Step: 700 / 819 Loss: 13.594904899597168 Tokens per Sec: 26311.348565656423
Epoch Step: 705 / 819 Loss: 16.658306121826172 Tokens per Sec: 28499.01286594982
Epoch Step: 710 / 819 Loss: 20.776777267456055 Tokens per Sec: 25005.906724179204
Epoch Step: 715 / 819 Loss: 15.130704879760742 Tokens per Sec: 26170.684147641987
Epoch Step: 720 / 819 Loss: 18.30605697631836 Tokens per Sec: 26626.59043143085
Epoch Step: 725 / 819 Loss: 13.112728118896484 Tokens per Sec: 26963.92381039694
Epoch Step: 730 / 819 Loss: 14.13465404510498 Tokens per Sec: 26292.695001822845
Epoch Step: 735 / 819 Loss: 20.207454681396484 Tokens per Sec: 25342.40905195396
Epoch Step: 740 / 819 Loss: 15.105462074279785 Tokens per Sec: 29041.557015009133
Epoch Step: 745 / 819 Loss: 14.334301948547363 Tokens per Sec: 25407.756836162032
Epoch Step: 750 / 819 Loss: 15.826384544372559 Tokens per Sec: 27346.145761749405
Epoch Step: 755 / 819 Loss: 16.454404830932617 Tokens per Sec: 27430.154096643153
Epoch Step: 760 / 819 Loss: 22.083024978637695 Tokens per Sec: 26730.084005555684
Epoch Step: 765 / 819 Loss: 14.629167556762695 Tokens per Sec: 24026.618350847817
Epoch Step: 770 / 819 Loss: 16.912704467773438 Tokens per Sec: 27491.520782396088
Epoch Step: 775 / 819 Loss: 17.72434425354004 Tokens per Sec: 24388.086562529952
Epoch Step: 780 / 819 Loss: 14.844195365905762 Tokens per Sec: 25846.779665055972
Epoch Step: 785 / 819 Loss: 17.372821807861328 Tokens per Sec: 25843.875930539147
Epoch Step: 790 / 819 Loss: 15.275550842285156 Tokens per Sec: 27658.99807232006
Epoch Step: 795 / 819 Loss: 17.239398956298828 Tokens per Sec: 25594.14486398346
Epoch Step: 800 / 819 Loss: 105.9835205078125 Tokens per Sec: 26560.364239182716
Epoch Step: 805 / 819 Loss: 16.10370635986328 Tokens per Sec: 25298.505017892447
Epoch Step: 810 / 819 Loss: 206.6125946044922 Tokens per Sec: 20498.179835135656
Epoch Step: 815 / 819 Loss: 15.55190658569336 Tokens per Sec: 23911.07037488528
Epoch ended with duration 0:02:28.229204
Train perplexity: 1.5303326398804185
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.206939
Validation perplexity: 1.6711164746874274
Epoch 40 / 1000
Epoch Step: 5 / 819 Loss: 13.319622039794922 Tokens per Sec: 28296.2211590039
Epoch Step: 10 / 819 Loss: 16.088897705078125 Tokens per Sec: 27734.673627310753
Epoch Step: 15 / 819 Loss: 17.774917602539062 Tokens per Sec: 25448.787100170142
Epoch Step: 20 / 819 Loss: 12.202101707458496 Tokens per Sec: 26267.820941963182
Epoch Step: 25 / 819 Loss: 16.21272087097168 Tokens per Sec: 26511.00121814139
Epoch Step: 30 / 819 Loss: 14.381596565246582 Tokens per Sec: 25192.793343577596
Epoch Step: 35 / 819 Loss: 19.29313087463379 Tokens per Sec: 26158.073696640145
Epoch Step: 40 / 819 Loss: 127.32911682128906 Tokens per Sec: 27306.32752201206
Epoch Step: 45 / 819 Loss: 19.672706604003906 Tokens per Sec: 25808.808011410827
Epoch Step: 50 / 819 Loss: 19.82469367980957 Tokens per Sec: 26996.800522213372
Epoch Step: 55 / 819 Loss: 17.821395874023438 Tokens per Sec: 27283.246391256787
Epoch Step: 60 / 819 Loss: 19.01068878173828 Tokens per Sec: 24243.406182499577
Epoch Step: 65 / 819 Loss: 221.1282958984375 Tokens per Sec: 24733.745179004098
Epoch Step: 70 / 819 Loss: 15.756601333618164 Tokens per Sec: 27993.917382811193
Epoch Step: 75 / 819 Loss: 18.11307144165039 Tokens per Sec: 26603.842284245944
Epoch Step: 80 / 819 Loss: 17.99233627319336 Tokens per Sec: 26834.42855997378
Epoch Step: 85 / 819 Loss: 16.931936264038086 Tokens per Sec: 26383.28339189967
Epoch Step: 90 / 819 Loss: 18.13104248046875 Tokens per Sec: 25446.08849839259
Epoch Step: 95 / 819 Loss: 21.76994514465332 Tokens per Sec: 25577.31353895345
Epoch Step: 100 / 819 Loss: 16.57586097717285 Tokens per Sec: 25977.213809638506
Epoch Step: 105 / 819 Loss: 18.13689613342285 Tokens per Sec: 26141.205295402902
Epoch Step: 110 / 819 Loss: 13.143850326538086 Tokens per Sec: 26900.580007783974
Epoch Step: 115 / 819 Loss: 20.546350479125977 Tokens per Sec: 26891.50007139415
Epoch Step: 120 / 819 Loss: 17.55202865600586 Tokens per Sec: 26855.300696861832
Epoch Step: 125 / 819 Loss: 14.667496681213379 Tokens per Sec: 24442.9709676214
Epoch Step: 130 / 819 Loss: 13.616774559020996 Tokens per Sec: 26501.140746351055
Epoch Step: 135 / 819 Loss: 12.844766616821289 Tokens per Sec: 25407.199214763346
Epoch Step: 140 / 819 Loss: 18.459556579589844 Tokens per Sec: 25650.385986679128
Epoch Step: 145 / 819 Loss: 22.00885009765625 Tokens per Sec: 25895.022554620187
Epoch Step: 150 / 819 Loss: 192.82810974121094 Tokens per Sec: 24612.627632879747
Epoch Step: 155 / 819 Loss: 17.052291870117188 Tokens per Sec: 25720.838354060612
Epoch Step: 160 / 819 Loss: 20.754297256469727 Tokens per Sec: 25470.951829090187
Epoch Step: 165 / 819 Loss: 17.98785972595215 Tokens per Sec: 26149.85679809536
Epoch Step: 170 / 819 Loss: 18.397401809692383 Tokens per Sec: 26130.031724579097
Epoch Step: 175 / 819 Loss: 17.10472869873047 Tokens per Sec: 27496.44665341975
Epoch Step: 180 / 819 Loss: 19.833871841430664 Tokens per Sec: 27618.034778493235
Epoch Step: 185 / 819 Loss: 18.308773040771484 Tokens per Sec: 24453.62977366809
Epoch Step: 190 / 819 Loss: 14.545265197753906 Tokens per Sec: 27048.2968357255
Epoch Step: 195 / 819 Loss: 15.342825889587402 Tokens per Sec: 27151.009033271734
Epoch Step: 200 / 819 Loss: 10.676787376403809 Tokens per Sec: 27542.847308243694
Epoch Step: 205 / 819 Loss: 17.727344512939453 Tokens per Sec: 25932.301450229887
Epoch Step: 210 / 819 Loss: 16.14293670654297 Tokens per Sec: 27830.359814128962
Epoch Step: 215 / 819 Loss: 16.38139533996582 Tokens per Sec: 24417.062896116895
Epoch Step: 220 / 819 Loss: 12.60134506225586 Tokens per Sec: 25223.818023866395
Epoch Step: 225 / 819 Loss: 13.90880298614502 Tokens per Sec: 25036.249134909263
Epoch Step: 230 / 819 Loss: 15.637496948242188 Tokens per Sec: 26765.754058891172
Epoch Step: 235 / 819 Loss: 14.586118698120117 Tokens per Sec: 30033.45539900458
Epoch Step: 240 / 819 Loss: 23.309391021728516 Tokens per Sec: 26327.810925698963
Epoch Step: 245 / 819 Loss: 152.7414093017578 Tokens per Sec: 27337.916035145667
Epoch Step: 250 / 819 Loss: 18.200515747070312 Tokens per Sec: 25147.77002185321
Epoch Step: 255 / 819 Loss: 12.060182571411133 Tokens per Sec: 26656.048866609675
Epoch Step: 260 / 819 Loss: 181.72189331054688 Tokens per Sec: 27423.931344118075
Epoch Step: 265 / 819 Loss: 178.5956573486328 Tokens per Sec: 27096.61609945402
Epoch Step: 270 / 819 Loss: 24.503049850463867 Tokens per Sec: 24862.616471016274
Epoch Step: 275 / 819 Loss: 19.287343978881836 Tokens per Sec: 25116.660525623854
Epoch Step: 280 / 819 Loss: 13.924556732177734 Tokens per Sec: 25326.513829698702
Epoch Step: 285 / 819 Loss: 14.865900039672852 Tokens per Sec: 26976.883359469255
Epoch Step: 290 / 819 Loss: 15.558648109436035 Tokens per Sec: 28496.211407905437
Epoch Step: 295 / 819 Loss: 18.387697219848633 Tokens per Sec: 28137.715168817733
Epoch Step: 300 / 819 Loss: 17.652124404907227 Tokens per Sec: 26358.42763361135
Epoch Step: 305 / 819 Loss: 17.67218017578125 Tokens per Sec: 24874.063558938153
Epoch Step: 310 / 819 Loss: 19.092182159423828 Tokens per Sec: 28025.316028486017
Epoch Step: 315 / 819 Loss: 14.837457656860352 Tokens per Sec: 27878.641505323583
Epoch Step: 320 / 819 Loss: 17.487838745117188 Tokens per Sec: 26586.836764114574
Epoch Step: 325 / 819 Loss: 16.88918113708496 Tokens per Sec: 26106.689369665895
Epoch Step: 330 / 819 Loss: 14.861888885498047 Tokens per Sec: 26577.326577636573
Epoch Step: 335 / 819 Loss: 13.492100715637207 Tokens per Sec: 25905.159158930463
Epoch Step: 340 / 819 Loss: 13.682676315307617 Tokens per Sec: 28076.931355096174
Epoch Step: 345 / 819 Loss: 17.45711898803711 Tokens per Sec: 24846.44624676207
Epoch Step: 350 / 819 Loss: 15.201274871826172 Tokens per Sec: 25477.56860215571
Epoch Step: 355 / 819 Loss: 13.025120735168457 Tokens per Sec: 27122.554536077743
Epoch Step: 360 / 819 Loss: 20.032682418823242 Tokens per Sec: 28426.38157250538
Epoch Step: 365 / 819 Loss: 19.852291107177734 Tokens per Sec: 26290.853584635264
Epoch Step: 370 / 819 Loss: 18.785385131835938 Tokens per Sec: 26067.495484290826
Epoch Step: 375 / 819 Loss: 14.248187065124512 Tokens per Sec: 25910.136384257275
Epoch Step: 380 / 819 Loss: 17.6899471282959 Tokens per Sec: 23549.816052810707
Epoch Step: 385 / 819 Loss: 132.13601684570312 Tokens per Sec: 25864.16445230004
Epoch Step: 390 / 819 Loss: 19.576173782348633 Tokens per Sec: 24449.50055184894
Epoch Step: 395 / 819 Loss: 18.178359985351562 Tokens per Sec: 24211.86322143587
Epoch Step: 400 / 819 Loss: 14.06439208984375 Tokens per Sec: 23623.30984919089
Epoch Step: 405 / 819 Loss: 15.563857078552246 Tokens per Sec: 23845.9593526855
Epoch Step: 410 / 819 Loss: 13.039481163024902 Tokens per Sec: 26086.321988382737
Epoch Step: 415 / 819 Loss: 13.635824203491211 Tokens per Sec: 25606.538312391083
Epoch Step: 420 / 819 Loss: 13.846561431884766 Tokens per Sec: 23197.82028472173
Epoch Step: 425 / 819 Loss: 13.350513458251953 Tokens per Sec: 26032.948448674557
Epoch Step: 430 / 819 Loss: 16.424781799316406 Tokens per Sec: 24241.379715170515
Epoch Step: 435 / 819 Loss: 13.376168251037598 Tokens per Sec: 24185.695491058774
Epoch Step: 440 / 819 Loss: 17.818443298339844 Tokens per Sec: 23485.072810267782
Epoch Step: 445 / 819 Loss: 21.071868896484375 Tokens per Sec: 26249.59931284458
Epoch Step: 450 / 819 Loss: 21.01999282836914 Tokens per Sec: 25973.781669431148
Epoch Step: 455 / 819 Loss: 18.632083892822266 Tokens per Sec: 24909.016856936953
Epoch Step: 460 / 819 Loss: 19.67344856262207 Tokens per Sec: 26382.34130494107
Epoch Step: 465 / 819 Loss: 19.476701736450195 Tokens per Sec: 25828.653526874386
Epoch Step: 470 / 819 Loss: 16.99830436706543 Tokens per Sec: 27094.840437670427
Epoch Step: 475 / 819 Loss: 14.131125450134277 Tokens per Sec: 26692.09452486466
Epoch Step: 480 / 819 Loss: 18.249971389770508 Tokens per Sec: 25983.96134357244
Epoch Step: 485 / 819 Loss: 21.091819763183594 Tokens per Sec: 26767.75525886667
Epoch Step: 490 / 819 Loss: 212.25592041015625 Tokens per Sec: 25007.842414056653
Epoch Step: 495 / 819 Loss: 26.60954475402832 Tokens per Sec: 26117.02491873771
Epoch Step: 500 / 819 Loss: 22.39583969116211 Tokens per Sec: 24657.740546320434
Epoch Step: 505 / 819 Loss: 16.645469665527344 Tokens per Sec: 25506.425288574443
Epoch Step: 510 / 819 Loss: 18.684080123901367 Tokens per Sec: 24146.753155735285
Epoch Step: 515 / 819 Loss: 20.16067123413086 Tokens per Sec: 27682.82210175801
Epoch Step: 520 / 819 Loss: 18.32051658630371 Tokens per Sec: 25533.38375340306
Epoch Step: 525 / 819 Loss: 20.483474731445312 Tokens per Sec: 25776.304348581645
Epoch Step: 530 / 819 Loss: 15.912556648254395 Tokens per Sec: 26181.391789900736
Epoch Step: 535 / 819 Loss: 13.763585090637207 Tokens per Sec: 27996.02079488094
Epoch Step: 540 / 819 Loss: 21.864770889282227 Tokens per Sec: 25684.849151901664
Epoch Step: 545 / 819 Loss: 17.176225662231445 Tokens per Sec: 24099.38712399134
Epoch Step: 550 / 819 Loss: 19.427499771118164 Tokens per Sec: 24496.805223312916
Epoch Step: 555 / 819 Loss: 18.845352172851562 Tokens per Sec: 25824.93083925043
Epoch Step: 560 / 819 Loss: 18.191139221191406 Tokens per Sec: 25718.75205317445
Epoch Step: 565 / 819 Loss: 12.661428451538086 Tokens per Sec: 27510.05252463041
Epoch Step: 570 / 819 Loss: 21.567790985107422 Tokens per Sec: 24482.886301602757
Epoch Step: 575 / 819 Loss: 18.5567626953125 Tokens per Sec: 24050.43357319575
Epoch Step: 580 / 819 Loss: 189.45484924316406 Tokens per Sec: 26000.93445126366
Epoch Step: 585 / 819 Loss: 147.9271697998047 Tokens per Sec: 25589.456627053394
Epoch Step: 590 / 819 Loss: 15.888614654541016 Tokens per Sec: 26271.96583305468
Epoch Step: 595 / 819 Loss: 19.850154876708984 Tokens per Sec: 27097.148997412838
Epoch Step: 600 / 819 Loss: 20.144912719726562 Tokens per Sec: 26430.43796111338
Epoch Step: 605 / 819 Loss: 19.94650650024414 Tokens per Sec: 26592.32496284364
Epoch Step: 610 / 819 Loss: 18.852664947509766 Tokens per Sec: 26843.98368632232
Epoch Step: 615 / 819 Loss: 21.53135108947754 Tokens per Sec: 25659.962288879196
Epoch Step: 620 / 819 Loss: 18.62469482421875 Tokens per Sec: 27046.35862060822
Epoch Step: 625 / 819 Loss: 145.4307098388672 Tokens per Sec: 26873.830768834247
Epoch Step: 630 / 819 Loss: 15.532873153686523 Tokens per Sec: 23830.896716371135
Epoch Step: 635 / 819 Loss: 19.757781982421875 Tokens per Sec: 27369.100790008342
Epoch Step: 640 / 819 Loss: 227.83380126953125 Tokens per Sec: 25801.05734667953
Epoch Step: 645 / 819 Loss: 21.196731567382812 Tokens per Sec: 24160.34301400868
Epoch Step: 650 / 819 Loss: 15.35150146484375 Tokens per Sec: 23932.917183663296
Epoch Step: 655 / 819 Loss: 15.355785369873047 Tokens per Sec: 25346.636181044276
Epoch Step: 660 / 819 Loss: 20.856843948364258 Tokens per Sec: 25108.710252429963
Epoch Step: 665 / 819 Loss: 11.779430389404297 Tokens per Sec: 25938.600288890026
Epoch Step: 670 / 819 Loss: 17.218849182128906 Tokens per Sec: 25317.084356671727
Epoch Step: 675 / 819 Loss: 13.034405708312988 Tokens per Sec: 25906.693156447716
Epoch Step: 680 / 819 Loss: 17.690235137939453 Tokens per Sec: 25562.207009667985
Epoch Step: 685 / 819 Loss: 218.70413208007812 Tokens per Sec: 24950.454135542455
Epoch Step: 690 / 819 Loss: 18.887807846069336 Tokens per Sec: 26081.883816472393
Epoch Step: 695 / 819 Loss: 17.51838493347168 Tokens per Sec: 22165.045234206387
Epoch Step: 700 / 819 Loss: 15.90146541595459 Tokens per Sec: 27381.615423380936
Epoch Step: 705 / 819 Loss: 19.170650482177734 Tokens per Sec: 27603.170178655066
Epoch Step: 710 / 819 Loss: 11.546470642089844 Tokens per Sec: 26088.213736781432
Epoch Step: 715 / 819 Loss: 15.130961418151855 Tokens per Sec: 22372.227662238405
Epoch Step: 720 / 819 Loss: 13.88715648651123 Tokens per Sec: 25777.07399596249
Epoch Step: 725 / 819 Loss: 17.152015686035156 Tokens per Sec: 26678.949151377004
Epoch Step: 730 / 819 Loss: 188.85597229003906 Tokens per Sec: 26391.29336664135
Epoch Step: 735 / 819 Loss: 18.83209991455078 Tokens per Sec: 26360.33058497969
Epoch Step: 740 / 819 Loss: 121.2492446899414 Tokens per Sec: 27060.28165604997
Epoch Step: 745 / 819 Loss: 22.676145553588867 Tokens per Sec: 25433.613651219595
Epoch Step: 750 / 819 Loss: 18.533597946166992 Tokens per Sec: 23428.884211376775
Epoch Step: 755 / 819 Loss: 22.811731338500977 Tokens per Sec: 26613.934200009004
Epoch Step: 760 / 819 Loss: 22.698261260986328 Tokens per Sec: 23822.547569876813
Epoch Step: 765 / 819 Loss: 197.96205139160156 Tokens per Sec: 26615.25752113837
Epoch Step: 770 / 819 Loss: 21.760526657104492 Tokens per Sec: 26603.30565210525
Epoch Step: 775 / 819 Loss: 19.543184280395508 Tokens per Sec: 26920.77912637226
Epoch Step: 780 / 819 Loss: 12.461509704589844 Tokens per Sec: 26858.36502279829
Epoch Step: 785 / 819 Loss: 104.02375793457031 Tokens per Sec: 25081.092473926372
Epoch Step: 790 / 819 Loss: 19.128456115722656 Tokens per Sec: 23803.370741508425
Epoch Step: 795 / 819 Loss: 21.871110916137695 Tokens per Sec: 25869.610218843445
Epoch Step: 800 / 819 Loss: 16.10464096069336 Tokens per Sec: 25024.258975717756
Epoch Step: 805 / 819 Loss: 15.235697746276855 Tokens per Sec: 22143.59303118201
Epoch Step: 810 / 819 Loss: 19.357084274291992 Tokens per Sec: 19674.161235507723
Epoch Step: 815 / 819 Loss: 136.46624755859375 Tokens per Sec: 22392.789995202882
Epoch ended with duration 0:02:30.489952
Train perplexity: 1.5839456619206629
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.115559
Validation perplexity: 1.6359811314443018
Model saved checkpoint!
Epoch 41 / 1000
Epoch Step: 5 / 819 Loss: 14.114359855651855 Tokens per Sec: 27438.254489556133
Epoch Step: 10 / 819 Loss: 17.815570831298828 Tokens per Sec: 24947.84575115513
Epoch Step: 15 / 819 Loss: 19.269386291503906 Tokens per Sec: 23932.607939529316
Epoch Step: 20 / 819 Loss: 22.52056884765625 Tokens per Sec: 25220.440450512036
Epoch Step: 25 / 819 Loss: 17.329132080078125 Tokens per Sec: 24944.827030501732
Epoch Step: 30 / 819 Loss: 19.51523780822754 Tokens per Sec: 25902.791529282553
Epoch Step: 35 / 819 Loss: 165.05010986328125 Tokens per Sec: 27668.332410967567
Epoch Step: 40 / 819 Loss: 22.329410552978516 Tokens per Sec: 27486.942314925443
Epoch Step: 45 / 819 Loss: 19.911762237548828 Tokens per Sec: 27645.101713298453
Epoch Step: 50 / 819 Loss: 15.205625534057617 Tokens per Sec: 26406.8983016555
Epoch Step: 55 / 819 Loss: 18.4182186126709 Tokens per Sec: 27336.245343071638
Epoch Step: 60 / 819 Loss: 21.166349411010742 Tokens per Sec: 26501.64604239251
Epoch Step: 65 / 819 Loss: 19.1115665435791 Tokens per Sec: 26047.461042266787
Epoch Step: 70 / 819 Loss: 12.495393753051758 Tokens per Sec: 25528.852410566094
Epoch Step: 75 / 819 Loss: 13.613972663879395 Tokens per Sec: 28417.059025253533
Epoch Step: 80 / 819 Loss: 14.23180103302002 Tokens per Sec: 26003.4636011371
Epoch Step: 85 / 819 Loss: 18.371917724609375 Tokens per Sec: 27798.161448613337
Epoch Step: 90 / 819 Loss: 289.9637451171875 Tokens per Sec: 26387.938758501667
Epoch Step: 95 / 819 Loss: 14.402179718017578 Tokens per Sec: 26854.35111744029
Epoch Step: 100 / 819 Loss: 14.53891658782959 Tokens per Sec: 24624.20701108017
Epoch Step: 105 / 819 Loss: 15.470096588134766 Tokens per Sec: 27371.03206976179
Epoch Step: 110 / 819 Loss: 193.38787841796875 Tokens per Sec: 24936.05954789972
Epoch Step: 115 / 819 Loss: 134.6500244140625 Tokens per Sec: 27310.17368616589
Epoch Step: 120 / 819 Loss: 22.092308044433594 Tokens per Sec: 26769.287621839645
Epoch Step: 125 / 819 Loss: 22.34462547302246 Tokens per Sec: 28221.063767698633
Epoch Step: 130 / 819 Loss: 23.17892837524414 Tokens per Sec: 28555.29906621827
Epoch Step: 135 / 819 Loss: 17.636343002319336 Tokens per Sec: 25873.635288407808
Epoch Step: 140 / 819 Loss: 20.096988677978516 Tokens per Sec: 25880.338777175144
Epoch Step: 145 / 819 Loss: 19.14410400390625 Tokens per Sec: 27821.004573516522
Epoch Step: 150 / 819 Loss: 17.249265670776367 Tokens per Sec: 27347.629743537724
Epoch Step: 155 / 819 Loss: 198.01303100585938 Tokens per Sec: 26597.412816082382
Epoch Step: 160 / 819 Loss: 20.13860511779785 Tokens per Sec: 24691.371798781514
Epoch Step: 165 / 819 Loss: 15.791865348815918 Tokens per Sec: 27706.038206885147
Epoch Step: 170 / 819 Loss: 15.476974487304688 Tokens per Sec: 24195.05318050543
Epoch Step: 175 / 819 Loss: 17.42188262939453 Tokens per Sec: 26255.63509724217
Epoch Step: 180 / 819 Loss: 14.843198776245117 Tokens per Sec: 23733.816505083298
Epoch Step: 185 / 819 Loss: 18.434268951416016 Tokens per Sec: 26079.157433330714
Epoch Step: 190 / 819 Loss: 19.238506317138672 Tokens per Sec: 25609.685456103394
Epoch Step: 195 / 819 Loss: 17.513893127441406 Tokens per Sec: 24447.562577951856
Epoch Step: 200 / 819 Loss: 19.674299240112305 Tokens per Sec: 27213.148812027266
Epoch Step: 205 / 819 Loss: 13.330235481262207 Tokens per Sec: 28045.08642133227
Epoch Step: 210 / 819 Loss: 16.134174346923828 Tokens per Sec: 26619.85807886522
Epoch Step: 215 / 819 Loss: 20.22189712524414 Tokens per Sec: 24527.99242699808
Epoch Step: 220 / 819 Loss: 20.32160758972168 Tokens per Sec: 25826.020287296968
Epoch Step: 225 / 819 Loss: 16.095972061157227 Tokens per Sec: 28041.082721904502
Epoch Step: 230 / 819 Loss: 18.199481964111328 Tokens per Sec: 27992.798348294535
Epoch Step: 235 / 819 Loss: 15.245981216430664 Tokens per Sec: 26002.659235662173
Epoch Step: 240 / 819 Loss: 19.55343246459961 Tokens per Sec: 25445.488340708984
Epoch Step: 245 / 819 Loss: 13.162495613098145 Tokens per Sec: 26421.206704023607
Epoch Step: 250 / 819 Loss: 205.5138702392578 Tokens per Sec: 25273.891091583402
Epoch Step: 255 / 819 Loss: 21.533361434936523 Tokens per Sec: 28056.414420404482
Epoch Step: 260 / 819 Loss: 15.815736770629883 Tokens per Sec: 25331.31299996813
Epoch Step: 265 / 819 Loss: 17.9007511138916 Tokens per Sec: 26357.893610142983
Epoch Step: 270 / 819 Loss: 14.843734741210938 Tokens per Sec: 26005.72359046029
Epoch Step: 275 / 819 Loss: 21.008695602416992 Tokens per Sec: 24947.77276787585
Epoch Step: 280 / 819 Loss: 12.451311111450195 Tokens per Sec: 28699.60708864417
Epoch Step: 285 / 819 Loss: 15.156864166259766 Tokens per Sec: 26921.382470181685
Epoch Step: 290 / 819 Loss: 16.405080795288086 Tokens per Sec: 26546.375423888992
Epoch Step: 295 / 819 Loss: 13.369729995727539 Tokens per Sec: 26306.08221110428
Epoch Step: 300 / 819 Loss: 17.73287582397461 Tokens per Sec: 25519.497222420403
Epoch Step: 305 / 819 Loss: 14.763110160827637 Tokens per Sec: 24484.056490995277
Epoch Step: 310 / 819 Loss: 17.024240493774414 Tokens per Sec: 25306.73763862255
Epoch Step: 315 / 819 Loss: 18.827871322631836 Tokens per Sec: 25156.44193147257
Epoch Step: 320 / 819 Loss: 15.485796928405762 Tokens per Sec: 27045.7287483218
Epoch Step: 325 / 819 Loss: 17.74692153930664 Tokens per Sec: 27739.221134997835
Epoch Step: 330 / 819 Loss: 18.740501403808594 Tokens per Sec: 26527.28467221907
Epoch Step: 335 / 819 Loss: 17.510547637939453 Tokens per Sec: 28174.886764471907
Epoch Step: 340 / 819 Loss: 17.24247932434082 Tokens per Sec: 27848.192704573103
Epoch Step: 345 / 819 Loss: 13.977147102355957 Tokens per Sec: 27777.77862290432
Epoch Step: 350 / 819 Loss: 18.098098754882812 Tokens per Sec: 26976.251356210065
Epoch Step: 355 / 819 Loss: 13.91331672668457 Tokens per Sec: 27320.074639792598
Epoch Step: 360 / 819 Loss: 17.52165985107422 Tokens per Sec: 26137.889189252815
Epoch Step: 365 / 819 Loss: 19.007465362548828 Tokens per Sec: 26628.62675343975
Epoch Step: 370 / 819 Loss: 14.43942928314209 Tokens per Sec: 24993.236457242114
Epoch Step: 375 / 819 Loss: 17.217241287231445 Tokens per Sec: 27765.449912515425
Epoch Step: 380 / 819 Loss: 20.950801849365234 Tokens per Sec: 23193.426034770742
Epoch Step: 385 / 819 Loss: 13.32594108581543 Tokens per Sec: 28800.42874831035
Epoch Step: 390 / 819 Loss: 68.38813781738281 Tokens per Sec: 26207.279071071003
Epoch Step: 395 / 819 Loss: 15.482368469238281 Tokens per Sec: 26781.964194342996
Epoch Step: 400 / 819 Loss: 207.38565063476562 Tokens per Sec: 27520.572560258643
Epoch Step: 405 / 819 Loss: 150.10079956054688 Tokens per Sec: 26073.680090417463
Epoch Step: 410 / 819 Loss: 18.52471351623535 Tokens per Sec: 25628.43070616736
Epoch Step: 415 / 819 Loss: 16.887298583984375 Tokens per Sec: 26524.551960235043
Epoch Step: 420 / 819 Loss: 24.840965270996094 Tokens per Sec: 24730.936106926274
Epoch Step: 425 / 819 Loss: 20.018917083740234 Tokens per Sec: 28412.73579067592
Epoch Step: 430 / 819 Loss: 17.5762882232666 Tokens per Sec: 26220.434229327635
Epoch Step: 435 / 819 Loss: 15.93136978149414 Tokens per Sec: 25484.491515760834
Epoch Step: 440 / 819 Loss: 200.52455139160156 Tokens per Sec: 26908.354070484285
Epoch Step: 445 / 819 Loss: 15.998351097106934 Tokens per Sec: 29468.322105055766
Epoch Step: 450 / 819 Loss: 19.680030822753906 Tokens per Sec: 25665.11764596116
Epoch Step: 455 / 819 Loss: 22.732891082763672 Tokens per Sec: 24342.25636705225
Epoch Step: 460 / 819 Loss: 14.382669448852539 Tokens per Sec: 26530.420535094563
Epoch Step: 465 / 819 Loss: 20.17719078063965 Tokens per Sec: 26071.480013925793
Epoch Step: 470 / 819 Loss: 19.32868003845215 Tokens per Sec: 27994.05715984821
Epoch Step: 475 / 819 Loss: 16.846193313598633 Tokens per Sec: 26869.273095042794
Epoch Step: 480 / 819 Loss: 16.058256149291992 Tokens per Sec: 27237.275273778963
Epoch Step: 485 / 819 Loss: 17.179149627685547 Tokens per Sec: 27807.179582634686
Epoch Step: 490 / 819 Loss: 18.13729476928711 Tokens per Sec: 27210.335601020888
Epoch Step: 495 / 819 Loss: 14.893074989318848 Tokens per Sec: 24940.660991576304
Epoch Step: 500 / 819 Loss: 17.15836524963379 Tokens per Sec: 25268.6302865574
Epoch Step: 505 / 819 Loss: 15.01878833770752 Tokens per Sec: 25525.493585679567
Epoch Step: 510 / 819 Loss: 16.999202728271484 Tokens per Sec: 27356.995892270133
Epoch Step: 515 / 819 Loss: 19.796361923217773 Tokens per Sec: 24794.738500177995
Epoch Step: 520 / 819 Loss: 16.868289947509766 Tokens per Sec: 26617.133359986117
Epoch Step: 525 / 819 Loss: 156.95037841796875 Tokens per Sec: 26880.648930053878
Epoch Step: 530 / 819 Loss: 15.394359588623047 Tokens per Sec: 25463.514024474713
Epoch Step: 535 / 819 Loss: 15.071122169494629 Tokens per Sec: 27348.52616929454
Epoch Step: 540 / 819 Loss: 20.716018676757812 Tokens per Sec: 26335.585625408585
Epoch Step: 545 / 819 Loss: 21.798831939697266 Tokens per Sec: 25585.427222110702
Epoch Step: 550 / 819 Loss: 15.558384895324707 Tokens per Sec: 27430.77561359023
Epoch Step: 555 / 819 Loss: 21.841489791870117 Tokens per Sec: 24650.16489448991
Epoch Step: 560 / 819 Loss: 14.053442001342773 Tokens per Sec: 29572.64692969486
Epoch Step: 565 / 819 Loss: 17.262258529663086 Tokens per Sec: 26275.83082392911
Epoch Step: 570 / 819 Loss: 19.23655128479004 Tokens per Sec: 28425.52009601663
Epoch Step: 575 / 819 Loss: 13.74980640411377 Tokens per Sec: 26186.79241670169
Epoch Step: 580 / 819 Loss: 17.38071060180664 Tokens per Sec: 28248.470843124527
Epoch Step: 585 / 819 Loss: 16.177282333374023 Tokens per Sec: 26987.3538058527
Epoch Step: 590 / 819 Loss: 18.747821807861328 Tokens per Sec: 27930.290087805577
Epoch Step: 595 / 819 Loss: 20.67253303527832 Tokens per Sec: 26058.881654078265
Epoch Step: 600 / 819 Loss: 17.13453483581543 Tokens per Sec: 27030.229372601592
Epoch Step: 605 / 819 Loss: 14.616801261901855 Tokens per Sec: 26940.713470367795
Epoch Step: 610 / 819 Loss: 19.803953170776367 Tokens per Sec: 25799.34167392307
Epoch Step: 615 / 819 Loss: 18.196264266967773 Tokens per Sec: 22195.70363775532
Epoch Step: 620 / 819 Loss: 13.534639358520508 Tokens per Sec: 28269.68560276688
Epoch Step: 625 / 819 Loss: 17.203933715820312 Tokens per Sec: 25568.23919930844
Epoch Step: 630 / 819 Loss: 12.95041561126709 Tokens per Sec: 29153.01826977355
Epoch Step: 635 / 819 Loss: 13.88325023651123 Tokens per Sec: 28503.330985983943
Epoch Step: 640 / 819 Loss: 16.4847469329834 Tokens per Sec: 26651.515479793958
Epoch Step: 645 / 819 Loss: 14.645064353942871 Tokens per Sec: 28667.899843435436
Epoch Step: 650 / 819 Loss: 20.670785903930664 Tokens per Sec: 26601.87061555404
Epoch Step: 655 / 819 Loss: 13.793139457702637 Tokens per Sec: 26701.46192858685
Epoch Step: 660 / 819 Loss: 17.000537872314453 Tokens per Sec: 25515.956612349928
Epoch Step: 665 / 819 Loss: 161.9906005859375 Tokens per Sec: 25140.02649467707
Epoch Step: 670 / 819 Loss: 21.83519744873047 Tokens per Sec: 27773.797936530045
Epoch Step: 675 / 819 Loss: 201.52053833007812 Tokens per Sec: 25023.94452366523
Epoch Step: 680 / 819 Loss: 18.803646087646484 Tokens per Sec: 24880.15239779855
Epoch Step: 685 / 819 Loss: 25.55661964416504 Tokens per Sec: 27477.027066548286
Epoch Step: 690 / 819 Loss: 19.407806396484375 Tokens per Sec: 27015.503163957408
Epoch Step: 695 / 819 Loss: 20.472835540771484 Tokens per Sec: 26771.008627188206
Epoch Step: 700 / 819 Loss: 14.908370018005371 Tokens per Sec: 25019.41901127129
Epoch Step: 705 / 819 Loss: 20.104373931884766 Tokens per Sec: 26299.534299410785
Epoch Step: 710 / 819 Loss: 19.56682014465332 Tokens per Sec: 26609.91004771728
Epoch Step: 715 / 819 Loss: 19.86100959777832 Tokens per Sec: 26435.619974270543
Epoch Step: 720 / 819 Loss: 17.564258575439453 Tokens per Sec: 27027.982896277575
Epoch Step: 725 / 819 Loss: 16.227951049804688 Tokens per Sec: 26869.556341727483
Epoch Step: 730 / 819 Loss: 19.76932144165039 Tokens per Sec: 26984.65247611278
Epoch Step: 735 / 819 Loss: 14.852999687194824 Tokens per Sec: 24355.79674919895
Epoch Step: 740 / 819 Loss: 14.269268989562988 Tokens per Sec: 28707.565302137275
Epoch Step: 745 / 819 Loss: 16.2390193939209 Tokens per Sec: 26915.64664827038
Epoch Step: 750 / 819 Loss: 20.00438690185547 Tokens per Sec: 27568.237332602203
Epoch Step: 755 / 819 Loss: 15.389126777648926 Tokens per Sec: 25023.511220360328
Epoch Step: 760 / 819 Loss: 18.862661361694336 Tokens per Sec: 28081.212735928235
Epoch Step: 765 / 819 Loss: 18.26662826538086 Tokens per Sec: 26226.142431104992
Epoch Step: 770 / 819 Loss: 163.78517150878906 Tokens per Sec: 27562.18652482117
Epoch Step: 775 / 819 Loss: 22.802614212036133 Tokens per Sec: 26307.93905693388
Epoch Step: 780 / 819 Loss: 18.006614685058594 Tokens per Sec: 26173.31306456153
Epoch Step: 785 / 819 Loss: 18.631824493408203 Tokens per Sec: 26515.576281592035
Epoch Step: 790 / 819 Loss: 21.57103729248047 Tokens per Sec: 26279.894236791864
Epoch Step: 795 / 819 Loss: 14.462486267089844 Tokens per Sec: 25051.46443258092
Epoch Step: 800 / 819 Loss: 15.592597007751465 Tokens per Sec: 25965.909523967133
Epoch Step: 805 / 819 Loss: 16.991031646728516 Tokens per Sec: 26161.180811269012
Epoch Step: 810 / 819 Loss: 17.187395095825195 Tokens per Sec: 24748.18837747466
Epoch Step: 815 / 819 Loss: 13.70720386505127 Tokens per Sec: 25197.589797861758
Epoch ended with duration 0:02:27.121874
Train perplexity: 1.6129115120998
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.109641
Validation perplexity: 1.4833601276154595
Epoch 42 / 1000
Epoch Step: 5 / 819 Loss: 21.727487564086914 Tokens per Sec: 25965.384260344286
Epoch Step: 10 / 819 Loss: 18.219348907470703 Tokens per Sec: 26186.632710277267
Epoch Step: 15 / 819 Loss: 14.908251762390137 Tokens per Sec: 23789.677593404565
Epoch Step: 20 / 819 Loss: 193.22305297851562 Tokens per Sec: 25779.85635924085
Epoch Step: 25 / 819 Loss: 17.757543563842773 Tokens per Sec: 27551.910750181833
Epoch Step: 30 / 819 Loss: 18.407577514648438 Tokens per Sec: 26139.334669425003
Epoch Step: 35 / 819 Loss: 19.2863712310791 Tokens per Sec: 26544.50189652303
Epoch Step: 40 / 819 Loss: 22.215850830078125 Tokens per Sec: 24933.90372334394
Epoch Step: 45 / 819 Loss: 16.753421783447266 Tokens per Sec: 25072.034767994308
Epoch Step: 50 / 819 Loss: 20.087251663208008 Tokens per Sec: 26319.65180513111
Epoch Step: 55 / 819 Loss: 179.8015594482422 Tokens per Sec: 23662.96288348738
Epoch Step: 60 / 819 Loss: 17.52369499206543 Tokens per Sec: 27907.419596982683
Epoch Step: 65 / 819 Loss: 20.122058868408203 Tokens per Sec: 24438.346187625782
Epoch Step: 70 / 819 Loss: 18.966154098510742 Tokens per Sec: 24232.79854435706
Epoch Step: 75 / 819 Loss: 17.32916259765625 Tokens per Sec: 25351.562936722024
Epoch Step: 80 / 819 Loss: 18.339012145996094 Tokens per Sec: 26523.193900374492
Epoch Step: 85 / 819 Loss: 17.768020629882812 Tokens per Sec: 27338.754429106077
Epoch Step: 90 / 819 Loss: 12.627406120300293 Tokens per Sec: 26622.257205588932
Epoch Step: 95 / 819 Loss: 17.83877182006836 Tokens per Sec: 27201.712964887032
Epoch Step: 100 / 819 Loss: 17.91168212890625 Tokens per Sec: 25837.373818961878
Epoch Step: 105 / 819 Loss: 18.888004302978516 Tokens per Sec: 25835.097237187092
Epoch Step: 110 / 819 Loss: 21.330461502075195 Tokens per Sec: 24191.656165352797
Epoch Step: 115 / 819 Loss: 14.303053855895996 Tokens per Sec: 26501.878589516236
Epoch Step: 120 / 819 Loss: 14.788851737976074 Tokens per Sec: 24590.855714690613
Epoch Step: 125 / 819 Loss: 17.143003463745117 Tokens per Sec: 26383.137364639984
Epoch Step: 130 / 819 Loss: 19.744508743286133 Tokens per Sec: 24204.993344324605
Epoch Step: 135 / 819 Loss: 17.098468780517578 Tokens per Sec: 27505.149048818523
Epoch Step: 140 / 819 Loss: 15.860902786254883 Tokens per Sec: 27139.98223931037
Epoch Step: 145 / 819 Loss: 18.697877883911133 Tokens per Sec: 24290.407637196047
Epoch Step: 150 / 819 Loss: 21.631202697753906 Tokens per Sec: 27090.474063533733
Epoch Step: 155 / 819 Loss: 21.004138946533203 Tokens per Sec: 26035.489730734625
Epoch Step: 160 / 819 Loss: 16.508546829223633 Tokens per Sec: 26953.88446001651
Epoch Step: 165 / 819 Loss: 13.622193336486816 Tokens per Sec: 25175.863564268875
Epoch Step: 170 / 819 Loss: 11.787177085876465 Tokens per Sec: 28047.792840850114
Epoch Step: 175 / 819 Loss: 16.53839111328125 Tokens per Sec: 27216.39295960852
Epoch Step: 180 / 819 Loss: 148.13832092285156 Tokens per Sec: 26129.40682621105
Epoch Step: 185 / 819 Loss: 16.917909622192383 Tokens per Sec: 25335.389186627446
Epoch Step: 190 / 819 Loss: 17.115734100341797 Tokens per Sec: 27362.876437990042
Epoch Step: 195 / 819 Loss: 26.708654403686523 Tokens per Sec: 25493.263579705694
Epoch Step: 200 / 819 Loss: 19.113492965698242 Tokens per Sec: 25189.7860485773
Epoch Step: 205 / 819 Loss: 16.664918899536133 Tokens per Sec: 25945.77372800676
Epoch Step: 210 / 819 Loss: 16.98891258239746 Tokens per Sec: 25492.760991634095
Epoch Step: 215 / 819 Loss: 14.940330505371094 Tokens per Sec: 25982.04203773361
Epoch Step: 220 / 819 Loss: 13.106907844543457 Tokens per Sec: 25426.033692290537
Epoch Step: 225 / 819 Loss: 12.468240737915039 Tokens per Sec: 26214.864635340982
Epoch Step: 230 / 819 Loss: 16.783994674682617 Tokens per Sec: 26206.594159545788
Epoch Step: 235 / 819 Loss: 19.20115089416504 Tokens per Sec: 27530.946673305356
Epoch Step: 240 / 819 Loss: 18.938541412353516 Tokens per Sec: 23680.775861397393
Epoch Step: 245 / 819 Loss: 19.073884963989258 Tokens per Sec: 25472.73389313182
Epoch Step: 250 / 819 Loss: 113.52986907958984 Tokens per Sec: 26357.5312671449
Epoch Step: 255 / 819 Loss: 19.210521697998047 Tokens per Sec: 27464.372908947338
Epoch Step: 260 / 819 Loss: 14.373004913330078 Tokens per Sec: 27207.41910144259
Epoch Step: 265 / 819 Loss: 15.566803932189941 Tokens per Sec: 27874.136492681107
Epoch Step: 270 / 819 Loss: 17.41933822631836 Tokens per Sec: 25877.671519480085
Epoch Step: 275 / 819 Loss: 16.23959732055664 Tokens per Sec: 26249.44547444505
Epoch Step: 280 / 819 Loss: 16.8658504486084 Tokens per Sec: 26478.479104150665
Epoch Step: 285 / 819 Loss: 13.830124855041504 Tokens per Sec: 24818.53522760614
Epoch Step: 290 / 819 Loss: 19.36264419555664 Tokens per Sec: 25272.169372558565
Epoch Step: 295 / 819 Loss: 16.751144409179688 Tokens per Sec: 26583.268951121463
Epoch Step: 300 / 819 Loss: 13.969221115112305 Tokens per Sec: 24431.785710706423
Epoch Step: 305 / 819 Loss: 11.487846374511719 Tokens per Sec: 23232.768541663943
Epoch Step: 310 / 819 Loss: 17.90361976623535 Tokens per Sec: 25894.35059053066
Epoch Step: 315 / 819 Loss: 15.702882766723633 Tokens per Sec: 23822.500860770055
Epoch Step: 320 / 819 Loss: 21.39348030090332 Tokens per Sec: 26702.930003101752
Epoch Step: 325 / 819 Loss: 20.070375442504883 Tokens per Sec: 26171.077533764754
Epoch Step: 330 / 819 Loss: 12.570052146911621 Tokens per Sec: 27655.428939382433
Epoch Step: 335 / 819 Loss: 14.639737129211426 Tokens per Sec: 26910.542736155257
Epoch Step: 340 / 819 Loss: 113.20999908447266 Tokens per Sec: 26144.721221111122
Epoch Step: 345 / 819 Loss: 17.336326599121094 Tokens per Sec: 26131.607828658798
Epoch Step: 350 / 819 Loss: 17.941415786743164 Tokens per Sec: 26639.008847991703
Epoch Step: 355 / 819 Loss: 15.36629581451416 Tokens per Sec: 26158.817005418605
Epoch Step: 360 / 819 Loss: 14.741522789001465 Tokens per Sec: 28480.039506446847
Epoch Step: 365 / 819 Loss: 22.13636016845703 Tokens per Sec: 26309.818249278436
Epoch Step: 370 / 819 Loss: 12.037178993225098 Tokens per Sec: 28614.945844663842
Epoch Step: 375 / 819 Loss: 13.06836986541748 Tokens per Sec: 24843.161558219617
Epoch Step: 380 / 819 Loss: 19.9411678314209 Tokens per Sec: 26877.420104071633
Epoch Step: 385 / 819 Loss: 15.572161674499512 Tokens per Sec: 27348.870435127556
Epoch Step: 390 / 819 Loss: 12.395136833190918 Tokens per Sec: 26368.690398402792
Epoch Step: 395 / 819 Loss: 13.43037223815918 Tokens per Sec: 26680.89026091672
Epoch Step: 400 / 819 Loss: 14.063553810119629 Tokens per Sec: 23501.514411635664
Epoch Step: 405 / 819 Loss: 14.451904296875 Tokens per Sec: 24409.557021928813
Epoch Step: 410 / 819 Loss: 17.228404998779297 Tokens per Sec: 22946.79108508426
Epoch Step: 415 / 819 Loss: 13.388205528259277 Tokens per Sec: 24223.51992788838
Epoch Step: 420 / 819 Loss: 11.65693187713623 Tokens per Sec: 26676.688480369383
Epoch Step: 425 / 819 Loss: 16.05095863342285 Tokens per Sec: 28532.758985635624
Epoch Step: 430 / 819 Loss: 15.582491874694824 Tokens per Sec: 26612.062322932245
Epoch Step: 435 / 819 Loss: 12.257255554199219 Tokens per Sec: 26701.987756722843
Epoch Step: 440 / 819 Loss: 11.990001678466797 Tokens per Sec: 25952.933233243682
Epoch Step: 445 / 819 Loss: 17.0919132232666 Tokens per Sec: 28035.671264755605
Epoch Step: 450 / 819 Loss: 16.647281646728516 Tokens per Sec: 26210.00849928581
Epoch Step: 455 / 819 Loss: 16.436796188354492 Tokens per Sec: 24151.826943833425
Epoch Step: 460 / 819 Loss: 21.833110809326172 Tokens per Sec: 27135.482051053757
Epoch Step: 465 / 819 Loss: 19.927501678466797 Tokens per Sec: 25347.40420370319
Epoch Step: 470 / 819 Loss: 14.79143238067627 Tokens per Sec: 26941.220848156303
Epoch Step: 475 / 819 Loss: 15.1715087890625 Tokens per Sec: 24093.66509578437
Epoch Step: 480 / 819 Loss: 12.38798999786377 Tokens per Sec: 27621.64635162484
Epoch Step: 485 / 819 Loss: 14.054215431213379 Tokens per Sec: 28125.387092945923
Epoch Step: 490 / 819 Loss: 19.56061363220215 Tokens per Sec: 27611.137270782645
Epoch Step: 495 / 819 Loss: 20.718673706054688 Tokens per Sec: 27578.128544435625
Epoch Step: 500 / 819 Loss: 180.97828674316406 Tokens per Sec: 25151.744502128688
Epoch Step: 505 / 819 Loss: 17.947982788085938 Tokens per Sec: 26706.991154217634
Epoch Step: 510 / 819 Loss: 15.354935646057129 Tokens per Sec: 27771.334255991933
Epoch Step: 515 / 819 Loss: 15.504867553710938 Tokens per Sec: 26842.95618467664
Epoch Step: 520 / 819 Loss: 11.335249900817871 Tokens per Sec: 28388.20243937104
Epoch Step: 525 / 819 Loss: 18.39568519592285 Tokens per Sec: 27771.46995016393
Epoch Step: 530 / 819 Loss: 17.049102783203125 Tokens per Sec: 28677.86570718117
Epoch Step: 535 / 819 Loss: 15.361157417297363 Tokens per Sec: 25655.837599497045
Epoch Step: 540 / 819 Loss: 12.33386516571045 Tokens per Sec: 26163.193140740368
Epoch Step: 545 / 819 Loss: 14.990287780761719 Tokens per Sec: 24453.67668796052
Epoch Step: 550 / 819 Loss: 16.455265045166016 Tokens per Sec: 25311.765200869926
Epoch Step: 555 / 819 Loss: 18.90645408630371 Tokens per Sec: 27930.1706898826
Epoch Step: 560 / 819 Loss: 108.36994934082031 Tokens per Sec: 24347.837795805008
Epoch Step: 565 / 819 Loss: 18.152212142944336 Tokens per Sec: 25804.4239881161
Epoch Step: 570 / 819 Loss: 20.01527976989746 Tokens per Sec: 24800.256008727752
Epoch Step: 575 / 819 Loss: 20.67854881286621 Tokens per Sec: 26833.102728886464
Epoch Step: 580 / 819 Loss: 20.94214630126953 Tokens per Sec: 26517.4778938253
Epoch Step: 585 / 819 Loss: 18.045387268066406 Tokens per Sec: 25672.920158587607
Epoch Step: 590 / 819 Loss: 20.945085525512695 Tokens per Sec: 26935.162681526246
Epoch Step: 595 / 819 Loss: 234.4748077392578 Tokens per Sec: 26001.78092743025
Epoch Step: 600 / 819 Loss: 18.77625846862793 Tokens per Sec: 27950.710084275277
Epoch Step: 605 / 819 Loss: 17.28921127319336 Tokens per Sec: 26447.704490534994
Epoch Step: 610 / 819 Loss: 17.064369201660156 Tokens per Sec: 28532.88283226471
Epoch Step: 615 / 819 Loss: 17.59547996520996 Tokens per Sec: 26354.946736064077
Epoch Step: 620 / 819 Loss: 19.3753604888916 Tokens per Sec: 27274.336170502316
Epoch Step: 625 / 819 Loss: 15.476252555847168 Tokens per Sec: 26872.922013048108
Epoch Step: 630 / 819 Loss: 12.485958099365234 Tokens per Sec: 27253.103673579597
Epoch Step: 635 / 819 Loss: 13.848657608032227 Tokens per Sec: 27172.997330609705
Epoch Step: 640 / 819 Loss: 13.819253921508789 Tokens per Sec: 25033.58956276409
Epoch Step: 645 / 819 Loss: 13.56905460357666 Tokens per Sec: 26270.072319585594
Epoch Step: 650 / 819 Loss: 116.79146575927734 Tokens per Sec: 26853.712722513505
Epoch Step: 655 / 819 Loss: 16.49065589904785 Tokens per Sec: 27912.86179955797
Epoch Step: 660 / 819 Loss: 20.02212142944336 Tokens per Sec: 25687.528122846463
Epoch Step: 665 / 819 Loss: 166.8645782470703 Tokens per Sec: 26917.206248577328
Epoch Step: 670 / 819 Loss: 19.232059478759766 Tokens per Sec: 28392.77752317066
Epoch Step: 675 / 819 Loss: 11.723443031311035 Tokens per Sec: 28300.49459519457
Epoch Step: 680 / 819 Loss: 195.39720153808594 Tokens per Sec: 24651.053855259666
Epoch Step: 685 / 819 Loss: 21.478933334350586 Tokens per Sec: 26451.498837210496
Epoch Step: 690 / 819 Loss: 19.57604217529297 Tokens per Sec: 25887.260212819103
Epoch Step: 695 / 819 Loss: 17.28412437438965 Tokens per Sec: 25685.048008278216
Epoch Step: 700 / 819 Loss: 200.73719787597656 Tokens per Sec: 26365.80180261977
Epoch Step: 705 / 819 Loss: 18.764944076538086 Tokens per Sec: 28352.217380816128
Epoch Step: 710 / 819 Loss: 14.493680000305176 Tokens per Sec: 27040.225059442313
Epoch Step: 715 / 819 Loss: 18.178218841552734 Tokens per Sec: 27700.817836149512
Epoch Step: 720 / 819 Loss: 15.719529151916504 Tokens per Sec: 28495.235624080582
Epoch Step: 725 / 819 Loss: 18.86557388305664 Tokens per Sec: 24559.745747118384
Epoch Step: 730 / 819 Loss: 19.844295501708984 Tokens per Sec: 25077.17116433553
Epoch Step: 735 / 819 Loss: 15.374539375305176 Tokens per Sec: 27083.76419452418
Epoch Step: 740 / 819 Loss: 14.624685287475586 Tokens per Sec: 26260.244057243835
Epoch Step: 745 / 819 Loss: 14.29172134399414 Tokens per Sec: 24362.884052219808
Epoch Step: 750 / 819 Loss: 14.693896293640137 Tokens per Sec: 28373.070805067182
Epoch Step: 755 / 819 Loss: 20.51613426208496 Tokens per Sec: 26384.532018347007
Epoch Step: 760 / 819 Loss: 16.25120735168457 Tokens per Sec: 27234.893208304482
Epoch Step: 765 / 819 Loss: 19.04852294921875 Tokens per Sec: 26772.10559288753
Epoch Step: 770 / 819 Loss: 16.731952667236328 Tokens per Sec: 25880.0649882525
Epoch Step: 775 / 819 Loss: 19.022674560546875 Tokens per Sec: 26105.832414922104
Epoch Step: 780 / 819 Loss: 22.863304138183594 Tokens per Sec: 25722.40261410152
Epoch Step: 785 / 819 Loss: 15.898246765136719 Tokens per Sec: 27406.64261893165
Epoch Step: 790 / 819 Loss: 16.195222854614258 Tokens per Sec: 27541.723196528073
Epoch Step: 795 / 819 Loss: 15.381203651428223 Tokens per Sec: 27385.257228586786
Epoch Step: 800 / 819 Loss: 12.912261962890625 Tokens per Sec: 26858.381826984838
Epoch Step: 805 / 819 Loss: 16.119199752807617 Tokens per Sec: 25249.649435499672
Epoch Step: 810 / 819 Loss: 17.346864700317383 Tokens per Sec: 19329.05307479311
Epoch Step: 815 / 819 Loss: 17.1846866607666 Tokens per Sec: 24502.299077347383
Epoch ended with duration 0:02:28.303536
Train perplexity: 1.5673590675091695
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.018914
Validation perplexity: 1.4531462107810096
Epoch 43 / 1000
Epoch Step: 5 / 819 Loss: 14.478043556213379 Tokens per Sec: 26323.509370386622
Epoch Step: 10 / 819 Loss: 19.947826385498047 Tokens per Sec: 26303.379996142598
Epoch Step: 15 / 819 Loss: 11.713667869567871 Tokens per Sec: 27388.87389308934
Epoch Step: 20 / 819 Loss: 16.817867279052734 Tokens per Sec: 28257.402848299233
Epoch Step: 25 / 819 Loss: 210.04290771484375 Tokens per Sec: 25115.90121071718
Epoch Step: 30 / 819 Loss: 14.21580696105957 Tokens per Sec: 28427.39551803976
Epoch Step: 35 / 819 Loss: 22.73952293395996 Tokens per Sec: 24495.581340840014
Epoch Step: 40 / 819 Loss: 15.855365753173828 Tokens per Sec: 27214.286618626964
Epoch Step: 45 / 819 Loss: 18.34535026550293 Tokens per Sec: 25359.541305590323
Epoch Step: 50 / 819 Loss: 17.219594955444336 Tokens per Sec: 25994.22177379477
Epoch Step: 55 / 819 Loss: 19.18060302734375 Tokens per Sec: 28132.509159812114
Epoch Step: 60 / 819 Loss: 13.812634468078613 Tokens per Sec: 26303.76754822395
Epoch Step: 65 / 819 Loss: 13.385726928710938 Tokens per Sec: 26586.004502648535
Epoch Step: 70 / 819 Loss: 15.980445861816406 Tokens per Sec: 25280.445139547464
Epoch Step: 75 / 819 Loss: 18.069244384765625 Tokens per Sec: 25860.448349059527
Epoch Step: 80 / 819 Loss: 16.647245407104492 Tokens per Sec: 26521.095219702704
Epoch Step: 85 / 819 Loss: 15.093697547912598 Tokens per Sec: 27304.457421239214
Epoch Step: 90 / 819 Loss: 21.24020767211914 Tokens per Sec: 27258.60604302927
Epoch Step: 95 / 819 Loss: 14.340781211853027 Tokens per Sec: 25277.32149982851
Epoch Step: 100 / 819 Loss: 158.39060974121094 Tokens per Sec: 27916.8338524831
Epoch Step: 105 / 819 Loss: 18.186588287353516 Tokens per Sec: 27043.94628898993
Epoch Step: 110 / 819 Loss: 14.430953979492188 Tokens per Sec: 27161.75941024581
Epoch Step: 115 / 819 Loss: 16.31043815612793 Tokens per Sec: 25935.197221594928
Epoch Step: 120 / 819 Loss: 18.749664306640625 Tokens per Sec: 24856.930024393958
Epoch Step: 125 / 819 Loss: 22.676259994506836 Tokens per Sec: 27356.39464318298
Epoch Step: 130 / 819 Loss: 18.01676368713379 Tokens per Sec: 27336.085839757638
Epoch Step: 135 / 819 Loss: 21.100622177124023 Tokens per Sec: 23580.467648122667
Epoch Step: 140 / 819 Loss: 18.77987289428711 Tokens per Sec: 26464.835812903006
Epoch Step: 145 / 819 Loss: 17.220863342285156 Tokens per Sec: 28332.08802880814
Epoch Step: 150 / 819 Loss: 18.45793342590332 Tokens per Sec: 24765.49304042358
Epoch Step: 155 / 819 Loss: 17.800607681274414 Tokens per Sec: 28501.784247025025
Epoch Step: 160 / 819 Loss: 18.891660690307617 Tokens per Sec: 26976.37736464339
Epoch Step: 165 / 819 Loss: 19.194835662841797 Tokens per Sec: 27728.84888015439
Epoch Step: 170 / 819 Loss: 15.265676498413086 Tokens per Sec: 27393.84742754618
Epoch Step: 175 / 819 Loss: 15.414193153381348 Tokens per Sec: 27939.470634017456
Epoch Step: 180 / 819 Loss: 17.063922882080078 Tokens per Sec: 23772.330167452605
Epoch Step: 185 / 819 Loss: 12.018754005432129 Tokens per Sec: 27130.338558028987
Epoch Step: 190 / 819 Loss: 104.14299011230469 Tokens per Sec: 27172.56406828662
Epoch Step: 195 / 819 Loss: 19.376482009887695 Tokens per Sec: 26016.834416752532
Epoch Step: 200 / 819 Loss: 15.433323860168457 Tokens per Sec: 27779.638858054426
Epoch Step: 205 / 819 Loss: 18.09819984436035 Tokens per Sec: 26115.60409216918
Epoch Step: 210 / 819 Loss: 18.44041633605957 Tokens per Sec: 26930.636241436627
Epoch Step: 215 / 819 Loss: 169.41941833496094 Tokens per Sec: 24685.448379985013
Epoch Step: 220 / 819 Loss: 14.377243041992188 Tokens per Sec: 26665.156795909294
Epoch Step: 225 / 819 Loss: 19.931699752807617 Tokens per Sec: 28250.144893254143
Epoch Step: 230 / 819 Loss: 20.223804473876953 Tokens per Sec: 27360.154688660496
Epoch Step: 235 / 819 Loss: 17.998598098754883 Tokens per Sec: 24721.937419616115
Epoch Step: 240 / 819 Loss: 16.24127769470215 Tokens per Sec: 25905.1609989938
Epoch Step: 245 / 819 Loss: 15.174152374267578 Tokens per Sec: 24888.171648823252
Epoch Step: 250 / 819 Loss: 230.28538513183594 Tokens per Sec: 26221.081236708786
Epoch Step: 255 / 819 Loss: 17.443483352661133 Tokens per Sec: 26216.22374214613
Epoch Step: 260 / 819 Loss: 20.442062377929688 Tokens per Sec: 27611.771078017187
Epoch Step: 265 / 819 Loss: 142.5552520751953 Tokens per Sec: 26965.307326498547
Epoch Step: 270 / 819 Loss: 20.904399871826172 Tokens per Sec: 27096.467463620364
Epoch Step: 275 / 819 Loss: 18.21729278564453 Tokens per Sec: 25746.938684826433
Epoch Step: 280 / 819 Loss: 19.27420425415039 Tokens per Sec: 27485.674745088643
Epoch Step: 285 / 819 Loss: 15.585447311401367 Tokens per Sec: 27778.21226320534
Epoch Step: 290 / 819 Loss: 17.19999885559082 Tokens per Sec: 26728.51067171879
Epoch Step: 295 / 819 Loss: 20.738374710083008 Tokens per Sec: 27023.573431029927
Epoch Step: 300 / 819 Loss: 264.51483154296875 Tokens per Sec: 26641.61885861874
Epoch Step: 305 / 819 Loss: 16.708965301513672 Tokens per Sec: 27320.627990593184
Epoch Step: 310 / 819 Loss: 16.586536407470703 Tokens per Sec: 23953.307430174442
Epoch Step: 315 / 819 Loss: 18.365821838378906 Tokens per Sec: 28642.306406957632
Epoch Step: 320 / 819 Loss: 17.977399826049805 Tokens per Sec: 27977.39127263017
Epoch Step: 325 / 819 Loss: 161.47183227539062 Tokens per Sec: 23899.53391766077
Epoch Step: 330 / 819 Loss: 17.986494064331055 Tokens per Sec: 27715.873395893654
Epoch Step: 335 / 819 Loss: 20.44400978088379 Tokens per Sec: 26160.690240906624
Epoch Step: 340 / 819 Loss: 20.20691680908203 Tokens per Sec: 28041.789888800566
Epoch Step: 345 / 819 Loss: 255.5372314453125 Tokens per Sec: 26375.848538775368
Epoch Step: 350 / 819 Loss: 22.904306411743164 Tokens per Sec: 25997.113121195252
Epoch Step: 355 / 819 Loss: 15.239923477172852 Tokens per Sec: 26817.252443795478
Epoch Step: 360 / 819 Loss: 19.31972312927246 Tokens per Sec: 27591.029654218106
Epoch Step: 365 / 819 Loss: 222.98094177246094 Tokens per Sec: 26520.96560624253
Epoch Step: 370 / 819 Loss: 17.02811622619629 Tokens per Sec: 25578.063004815118
Epoch Step: 375 / 819 Loss: 112.01795959472656 Tokens per Sec: 28107.583949365537
Epoch Step: 380 / 819 Loss: 19.056367874145508 Tokens per Sec: 26760.12909564899
Epoch Step: 385 / 819 Loss: 19.221960067749023 Tokens per Sec: 24982.466740150696
Epoch Step: 390 / 819 Loss: 18.506738662719727 Tokens per Sec: 24593.920155807285
Epoch Step: 395 / 819 Loss: 19.834327697753906 Tokens per Sec: 26481.326198723877
Epoch Step: 400 / 819 Loss: 18.058786392211914 Tokens per Sec: 26474.387306339733
Epoch Step: 405 / 819 Loss: 15.969322204589844 Tokens per Sec: 25792.132398570968
Epoch Step: 410 / 819 Loss: 20.907758712768555 Tokens per Sec: 24821.409831105433
Epoch Step: 415 / 819 Loss: 21.122886657714844 Tokens per Sec: 25682.91149137612
Epoch Step: 420 / 819 Loss: 18.568431854248047 Tokens per Sec: 28964.783258886837
Epoch Step: 425 / 819 Loss: 20.737092971801758 Tokens per Sec: 25887.123917531087
Epoch Step: 430 / 819 Loss: 21.596084594726562 Tokens per Sec: 24979.24663673468
Epoch Step: 435 / 819 Loss: 20.739564895629883 Tokens per Sec: 28205.291145750834
Epoch Step: 440 / 819 Loss: 21.629898071289062 Tokens per Sec: 26289.11681897177
Epoch Step: 445 / 819 Loss: 23.177446365356445 Tokens per Sec: 25467.828829426817
Epoch Step: 450 / 819 Loss: 20.09372901916504 Tokens per Sec: 26237.377498662237
Epoch Step: 455 / 819 Loss: 14.821678161621094 Tokens per Sec: 24492.651844202945
Epoch Step: 460 / 819 Loss: 15.700814247131348 Tokens per Sec: 26002.505178242413
Epoch Step: 465 / 819 Loss: 221.89297485351562 Tokens per Sec: 27290.30224958256
Epoch Step: 470 / 819 Loss: 17.94514274597168 Tokens per Sec: 26646.565959354928
Epoch Step: 475 / 819 Loss: 15.682112693786621 Tokens per Sec: 26648.357183178796
Epoch Step: 480 / 819 Loss: 106.02870178222656 Tokens per Sec: 27356.393661194776
Epoch Step: 485 / 819 Loss: 14.98328685760498 Tokens per Sec: 27234.895960572918
Epoch Step: 490 / 819 Loss: 257.9227294921875 Tokens per Sec: 29035.555887559556
Epoch Step: 495 / 819 Loss: 17.413532257080078 Tokens per Sec: 25388.24349132374
Epoch Step: 500 / 819 Loss: 15.067180633544922 Tokens per Sec: 26542.27170386654
Epoch Step: 505 / 819 Loss: 20.51885986328125 Tokens per Sec: 28481.846286941254
Epoch Step: 510 / 819 Loss: 17.448368072509766 Tokens per Sec: 25744.23983420036
Epoch Step: 515 / 819 Loss: 187.27464294433594 Tokens per Sec: 26662.058367134778
Epoch Step: 520 / 819 Loss: 175.82814025878906 Tokens per Sec: 24355.57908129073
Epoch Step: 525 / 819 Loss: 17.834121704101562 Tokens per Sec: 24693.126997476873
Epoch Step: 530 / 819 Loss: 18.709800720214844 Tokens per Sec: 26534.50014335777
Epoch Step: 535 / 819 Loss: 18.233407974243164 Tokens per Sec: 24640.35022855302
Epoch Step: 540 / 819 Loss: 19.84111785888672 Tokens per Sec: 26572.667067469374
Epoch Step: 545 / 819 Loss: 21.285818099975586 Tokens per Sec: 27453.02784773737
Epoch Step: 550 / 819 Loss: 101.80136108398438 Tokens per Sec: 27676.337965312654
Epoch Step: 555 / 819 Loss: 209.80523681640625 Tokens per Sec: 27918.773161029934
Epoch Step: 560 / 819 Loss: 13.245835304260254 Tokens per Sec: 27789.06246612294
Epoch Step: 565 / 819 Loss: 21.14630889892578 Tokens per Sec: 22711.206567210393
Epoch Step: 570 / 819 Loss: 18.29771614074707 Tokens per Sec: 27474.0925470686
Epoch Step: 575 / 819 Loss: 16.033430099487305 Tokens per Sec: 27148.75443321689
Epoch Step: 580 / 819 Loss: 16.859825134277344 Tokens per Sec: 24860.250271160963
Epoch Step: 585 / 819 Loss: 17.22209930419922 Tokens per Sec: 27575.516656103715
Epoch Step: 590 / 819 Loss: 15.829237937927246 Tokens per Sec: 27875.94403463852
Epoch Step: 595 / 819 Loss: 221.82142639160156 Tokens per Sec: 25018.938618433713
Epoch Step: 600 / 819 Loss: 15.619865417480469 Tokens per Sec: 27298.282320542494
Epoch Step: 605 / 819 Loss: 15.904417991638184 Tokens per Sec: 26650.64156302948
Epoch Step: 610 / 819 Loss: 17.689050674438477 Tokens per Sec: 25638.540340444375
Epoch Step: 615 / 819 Loss: 17.784446716308594 Tokens per Sec: 27516.20959486476
Epoch Step: 620 / 819 Loss: 17.699966430664062 Tokens per Sec: 25005.429675017105
Epoch Step: 625 / 819 Loss: 18.148113250732422 Tokens per Sec: 25169.6991821884
Epoch Step: 630 / 819 Loss: 14.720413208007812 Tokens per Sec: 26629.318502631853
Epoch Step: 635 / 819 Loss: 179.5619354248047 Tokens per Sec: 23865.888988019342
Epoch Step: 640 / 819 Loss: 18.23230743408203 Tokens per Sec: 22316.649037056224
Epoch Step: 645 / 819 Loss: 14.064101219177246 Tokens per Sec: 27508.540100547285
Epoch Step: 650 / 819 Loss: 20.944265365600586 Tokens per Sec: 27425.0800592664
Epoch Step: 655 / 819 Loss: 15.517257690429688 Tokens per Sec: 28029.59943589298
Epoch Step: 660 / 819 Loss: 20.649656295776367 Tokens per Sec: 27391.715315060163
Epoch Step: 665 / 819 Loss: 16.281208038330078 Tokens per Sec: 28360.49568384323
Epoch Step: 670 / 819 Loss: 24.23124122619629 Tokens per Sec: 25491.17273732332
Epoch Step: 675 / 819 Loss: 16.346506118774414 Tokens per Sec: 25685.513154743247
Epoch Step: 680 / 819 Loss: 17.87374496459961 Tokens per Sec: 29538.672318245015
Epoch Step: 685 / 819 Loss: 16.368497848510742 Tokens per Sec: 28884.690598015197
Epoch Step: 690 / 819 Loss: 16.270830154418945 Tokens per Sec: 27301.7752240273
Epoch Step: 695 / 819 Loss: 13.89233684539795 Tokens per Sec: 26349.624249172324
Epoch Step: 700 / 819 Loss: 19.135305404663086 Tokens per Sec: 25219.346939141535
Epoch Step: 705 / 819 Loss: 18.469100952148438 Tokens per Sec: 26776.014598641974
Epoch Step: 710 / 819 Loss: 16.37521743774414 Tokens per Sec: 25057.652032512815
Epoch Step: 715 / 819 Loss: 18.73320960998535 Tokens per Sec: 27169.773547649318
Epoch Step: 720 / 819 Loss: 16.14012908935547 Tokens per Sec: 26311.973325680017
Epoch Step: 725 / 819 Loss: 14.856304168701172 Tokens per Sec: 29572.178747528556
Epoch Step: 730 / 819 Loss: 18.62949562072754 Tokens per Sec: 29471.86142089183
Epoch Step: 735 / 819 Loss: 14.120774269104004 Tokens per Sec: 27155.18163334942
Epoch Step: 740 / 819 Loss: 16.244260787963867 Tokens per Sec: 25707.08911043194
Epoch Step: 745 / 819 Loss: 15.876195907592773 Tokens per Sec: 26604.83991500881
Epoch Step: 750 / 819 Loss: 16.84650993347168 Tokens per Sec: 27226.36591583681
Epoch Step: 755 / 819 Loss: 20.28172492980957 Tokens per Sec: 27646.80521397161
Epoch Step: 760 / 819 Loss: 19.755643844604492 Tokens per Sec: 25283.440127461625
Epoch Step: 765 / 819 Loss: 15.387829780578613 Tokens per Sec: 25830.62653931034
Epoch Step: 770 / 819 Loss: 20.525949478149414 Tokens per Sec: 26129.595295472525
Epoch Step: 775 / 819 Loss: 17.27446174621582 Tokens per Sec: 26660.968009599
Epoch Step: 780 / 819 Loss: 13.777888298034668 Tokens per Sec: 25536.31123110416
Epoch Step: 785 / 819 Loss: 13.601173400878906 Tokens per Sec: 24555.322105910247
Epoch Step: 790 / 819 Loss: 17.796077728271484 Tokens per Sec: 28063.52903410683
Epoch Step: 795 / 819 Loss: 19.119831085205078 Tokens per Sec: 24647.984976808577
Epoch Step: 800 / 819 Loss: 17.513259887695312 Tokens per Sec: 25731.144964750798
Epoch Step: 805 / 819 Loss: 14.54727554321289 Tokens per Sec: 24514.006135846797
Epoch Step: 810 / 819 Loss: 16.377368927001953 Tokens per Sec: 25480.326062868284
Epoch Step: 815 / 819 Loss: 14.207330703735352 Tokens per Sec: 24492.53293003906
Epoch ended with duration 0:02:26.983625
Train perplexity: 1.62857296306464
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.109959
Validation perplexity: 1.5199685693360168
Epoch 44 / 1000
Epoch Step: 5 / 819 Loss: 23.572994232177734 Tokens per Sec: 26848.87542715463
Epoch Step: 10 / 819 Loss: 16.507169723510742 Tokens per Sec: 25592.375312192835
Epoch Step: 15 / 819 Loss: 19.68680191040039 Tokens per Sec: 27550.513227081465
Epoch Step: 20 / 819 Loss: 18.728334426879883 Tokens per Sec: 28590.678585679292
Epoch Step: 25 / 819 Loss: 20.222902297973633 Tokens per Sec: 25892.888643183585
Epoch Step: 30 / 819 Loss: 12.794084548950195 Tokens per Sec: 28975.926921216833
Epoch Step: 35 / 819 Loss: 19.762781143188477 Tokens per Sec: 26977.40324999435
Epoch Step: 40 / 819 Loss: 19.56856346130371 Tokens per Sec: 28190.97889677502
Epoch Step: 45 / 819 Loss: 102.12776947021484 Tokens per Sec: 26553.05292459315
Epoch Step: 50 / 819 Loss: 20.73709487915039 Tokens per Sec: 26662.3910008511
Epoch Step: 55 / 819 Loss: 15.437983512878418 Tokens per Sec: 23470.99078054498
Epoch Step: 60 / 819 Loss: 121.99817657470703 Tokens per Sec: 28371.596754644564
Epoch Step: 65 / 819 Loss: 18.50311851501465 Tokens per Sec: 26633.431100115267
Epoch Step: 70 / 819 Loss: 18.00463104248047 Tokens per Sec: 27215.06904744389
Epoch Step: 75 / 819 Loss: 14.108671188354492 Tokens per Sec: 26362.554554074424
Epoch Step: 80 / 819 Loss: 18.042015075683594 Tokens per Sec: 27990.689788678257
Epoch Step: 85 / 819 Loss: 15.502677917480469 Tokens per Sec: 25203.133714496056
Epoch Step: 90 / 819 Loss: 18.744230270385742 Tokens per Sec: 25447.95234277272
Epoch Step: 95 / 819 Loss: 11.13853645324707 Tokens per Sec: 27036.532781040692
Epoch Step: 100 / 819 Loss: 138.60678100585938 Tokens per Sec: 25468.161024922072
Epoch Step: 105 / 819 Loss: 17.18031883239746 Tokens per Sec: 26455.30596512612
Epoch Step: 110 / 819 Loss: 18.63188362121582 Tokens per Sec: 27942.123673618735
Epoch Step: 115 / 819 Loss: 16.82976531982422 Tokens per Sec: 23371.51217946439
Epoch Step: 120 / 819 Loss: 21.387182235717773 Tokens per Sec: 27243.82096089473
Epoch Step: 125 / 819 Loss: 21.096532821655273 Tokens per Sec: 26066.149463326274
Epoch Step: 130 / 819 Loss: 16.32181167602539 Tokens per Sec: 28731.14974115449
Epoch Step: 135 / 819 Loss: 14.401132583618164 Tokens per Sec: 28960.020645310175
Epoch Step: 140 / 819 Loss: 16.823139190673828 Tokens per Sec: 27700.333474474035
Epoch Step: 145 / 819 Loss: 16.77157974243164 Tokens per Sec: 27819.706952179225
Epoch Step: 150 / 819 Loss: 16.667211532592773 Tokens per Sec: 26263.21745058535
Epoch Step: 155 / 819 Loss: 16.703105926513672 Tokens per Sec: 25562.61842765604
Epoch Step: 160 / 819 Loss: 14.722051620483398 Tokens per Sec: 28714.9706634705
Epoch Step: 165 / 819 Loss: 15.79002857208252 Tokens per Sec: 25960.34880935351
Epoch Step: 170 / 819 Loss: 14.982823371887207 Tokens per Sec: 24271.778157799272
Epoch Step: 175 / 819 Loss: 15.336273193359375 Tokens per Sec: 27060.054020421743
Epoch Step: 180 / 819 Loss: 11.604493141174316 Tokens per Sec: 25739.721407802142
Epoch Step: 185 / 819 Loss: 18.500932693481445 Tokens per Sec: 26376.300328780537
Epoch Step: 190 / 819 Loss: 249.85147094726562 Tokens per Sec: 27911.638764193292
Epoch Step: 195 / 819 Loss: 14.757024765014648 Tokens per Sec: 26731.161099812412
Epoch Step: 200 / 819 Loss: 13.234407424926758 Tokens per Sec: 27515.827314717164
Epoch Step: 205 / 819 Loss: 10.966224670410156 Tokens per Sec: 27133.48692026433
Epoch Step: 210 / 819 Loss: 84.15261840820312 Tokens per Sec: 26615.53579649687
Epoch Step: 215 / 819 Loss: 23.705839157104492 Tokens per Sec: 27242.319357264725
Epoch Step: 220 / 819 Loss: 21.324689865112305 Tokens per Sec: 27353.97001430629
Epoch Step: 225 / 819 Loss: 15.729036331176758 Tokens per Sec: 26961.48426760432
Epoch Step: 230 / 819 Loss: 20.34055519104004 Tokens per Sec: 24238.486491206706
Epoch Step: 235 / 819 Loss: 20.25725746154785 Tokens per Sec: 25589.709396039932
Epoch Step: 240 / 819 Loss: 23.763269424438477 Tokens per Sec: 26017.705876504122
Epoch Step: 245 / 819 Loss: 14.635398864746094 Tokens per Sec: 25759.422218352
Epoch Step: 250 / 819 Loss: 18.97832679748535 Tokens per Sec: 27271.537171956632
Epoch Step: 255 / 819 Loss: 129.91204833984375 Tokens per Sec: 27107.793719798297
Epoch Step: 260 / 819 Loss: 22.09589385986328 Tokens per Sec: 26260.780750176928
Epoch Step: 265 / 819 Loss: 19.430938720703125 Tokens per Sec: 26016.547418855902
Epoch Step: 270 / 819 Loss: 17.652862548828125 Tokens per Sec: 27834.336492554983
Epoch Step: 275 / 819 Loss: 18.986478805541992 Tokens per Sec: 25596.361963608208
Epoch Step: 280 / 819 Loss: 16.68589973449707 Tokens per Sec: 28919.147497458205
Epoch Step: 285 / 819 Loss: 17.256855010986328 Tokens per Sec: 25986.269136210078
Epoch Step: 290 / 819 Loss: 13.161373138427734 Tokens per Sec: 24199.53637135828
Epoch Step: 295 / 819 Loss: 12.185397148132324 Tokens per Sec: 24582.741553335272
Epoch Step: 300 / 819 Loss: 18.118738174438477 Tokens per Sec: 25801.128661161692
Epoch Step: 305 / 819 Loss: 15.944254875183105 Tokens per Sec: 27796.729489022528
Epoch Step: 310 / 819 Loss: 16.138731002807617 Tokens per Sec: 26087.264575544716
Epoch Step: 315 / 819 Loss: 21.84058380126953 Tokens per Sec: 28462.771591423145
Epoch Step: 320 / 819 Loss: 22.4497013092041 Tokens per Sec: 26589.77918869115
Epoch Step: 325 / 819 Loss: 21.414892196655273 Tokens per Sec: 27688.928588964805
Epoch Step: 330 / 819 Loss: 20.348377227783203 Tokens per Sec: 26728.12063810768
Epoch Step: 335 / 819 Loss: 18.164587020874023 Tokens per Sec: 25142.861406456963
Epoch Step: 340 / 819 Loss: 24.76889419555664 Tokens per Sec: 25101.93937076294
Epoch Step: 345 / 819 Loss: 24.02240562438965 Tokens per Sec: 24133.83651291636
Epoch Step: 350 / 819 Loss: 178.7779998779297 Tokens per Sec: 26477.140540934623
Epoch Step: 355 / 819 Loss: 17.241979598999023 Tokens per Sec: 27065.997825232364
Epoch Step: 360 / 819 Loss: 19.058155059814453 Tokens per Sec: 28304.518118593533
Epoch Step: 365 / 819 Loss: 13.191789627075195 Tokens per Sec: 26531.25071702038
Epoch Step: 370 / 819 Loss: 17.35110092163086 Tokens per Sec: 25884.21370882127
Epoch Step: 375 / 819 Loss: 11.7543306350708 Tokens per Sec: 25730.116689556147
Epoch Step: 380 / 819 Loss: 12.422897338867188 Tokens per Sec: 26532.505977945744
Epoch Step: 385 / 819 Loss: 13.445356369018555 Tokens per Sec: 27663.173382005312
Epoch Step: 390 / 819 Loss: 19.03851318359375 Tokens per Sec: 24505.499780060785
Epoch Step: 395 / 819 Loss: 20.621877670288086 Tokens per Sec: 26353.074878121934
Epoch Step: 400 / 819 Loss: 21.811784744262695 Tokens per Sec: 26007.15697543944
Epoch Step: 405 / 819 Loss: 19.522979736328125 Tokens per Sec: 25879.23475662167
Epoch Step: 410 / 819 Loss: 22.84149742126465 Tokens per Sec: 28269.805821147318
Epoch Step: 415 / 819 Loss: 15.005749702453613 Tokens per Sec: 25521.319421565462
Epoch Step: 420 / 819 Loss: 18.744380950927734 Tokens per Sec: 24808.002900951353
Epoch Step: 425 / 819 Loss: 13.957700729370117 Tokens per Sec: 28692.98502640754
Epoch Step: 430 / 819 Loss: 18.488567352294922 Tokens per Sec: 27893.611342344437
Epoch Step: 435 / 819 Loss: 13.321041107177734 Tokens per Sec: 28578.63874614867
Epoch Step: 440 / 819 Loss: 18.876657485961914 Tokens per Sec: 25677.588886016587
Epoch Step: 445 / 819 Loss: 19.611343383789062 Tokens per Sec: 25828.277468804925
Epoch Step: 450 / 819 Loss: 12.774356842041016 Tokens per Sec: 26365.444470015
Epoch Step: 455 / 819 Loss: 13.723575592041016 Tokens per Sec: 28724.789273909835
Epoch Step: 460 / 819 Loss: 16.616762161254883 Tokens per Sec: 28154.89456071891
Epoch Step: 465 / 819 Loss: 13.238858222961426 Tokens per Sec: 26999.252834387462
Epoch Step: 470 / 819 Loss: 13.180843353271484 Tokens per Sec: 25370.16335994835
Epoch Step: 475 / 819 Loss: 20.096525192260742 Tokens per Sec: 27406.011390658958
Epoch Step: 480 / 819 Loss: 17.996971130371094 Tokens per Sec: 26655.097033265825
Epoch Step: 485 / 819 Loss: 16.237030029296875 Tokens per Sec: 25448.15645353251
Epoch Step: 490 / 819 Loss: 15.077085494995117 Tokens per Sec: 27872.55259281153
Epoch Step: 495 / 819 Loss: 18.775585174560547 Tokens per Sec: 27471.060838996927
Epoch Step: 500 / 819 Loss: 15.458436965942383 Tokens per Sec: 27974.28044074384
Epoch Step: 505 / 819 Loss: 12.452226638793945 Tokens per Sec: 26063.837118066767
Epoch Step: 510 / 819 Loss: 22.9648494720459 Tokens per Sec: 27473.86292426739
Epoch Step: 515 / 819 Loss: 16.67983055114746 Tokens per Sec: 27422.64006221288
Epoch Step: 520 / 819 Loss: 18.97981834411621 Tokens per Sec: 26181.345064311416
Epoch Step: 525 / 819 Loss: 165.83079528808594 Tokens per Sec: 23981.77662803398
Epoch Step: 530 / 819 Loss: 213.05531311035156 Tokens per Sec: 28615.34648875024
Epoch Step: 535 / 819 Loss: 109.5576400756836 Tokens per Sec: 22777.896655649238
Epoch Step: 540 / 819 Loss: 20.482637405395508 Tokens per Sec: 26277.12732255606
Epoch Step: 545 / 819 Loss: 14.284157752990723 Tokens per Sec: 27687.825720774752
Epoch Step: 550 / 819 Loss: 22.95145034790039 Tokens per Sec: 28625.540160147197
Epoch Step: 555 / 819 Loss: 13.415899276733398 Tokens per Sec: 27161.870655739105
Epoch Step: 560 / 819 Loss: 23.563661575317383 Tokens per Sec: 25043.511691883763
Epoch Step: 565 / 819 Loss: 20.83597755432129 Tokens per Sec: 27202.734264801547
Epoch Step: 570 / 819 Loss: 19.067764282226562 Tokens per Sec: 25790.287240435915
Epoch Step: 575 / 819 Loss: 17.728851318359375 Tokens per Sec: 26255.896011277593
Epoch Step: 580 / 819 Loss: 16.381210327148438 Tokens per Sec: 27955.090479516006
Epoch Step: 585 / 819 Loss: 20.40105438232422 Tokens per Sec: 26622.569295727306
Epoch Step: 590 / 819 Loss: 181.12002563476562 Tokens per Sec: 27247.830952427532
Epoch Step: 595 / 819 Loss: 18.636219024658203 Tokens per Sec: 28332.63967437922
Epoch Step: 600 / 819 Loss: 18.800016403198242 Tokens per Sec: 25025.02828581896
Epoch Step: 605 / 819 Loss: 13.022154808044434 Tokens per Sec: 26543.01816393456
Epoch Step: 610 / 819 Loss: 17.12602996826172 Tokens per Sec: 25382.75454197632
Epoch Step: 615 / 819 Loss: 13.407906532287598 Tokens per Sec: 26999.00216916632
Epoch Step: 620 / 819 Loss: 16.972759246826172 Tokens per Sec: 29371.84853962127
Epoch Step: 625 / 819 Loss: 21.144346237182617 Tokens per Sec: 26469.366900222005
Epoch Step: 630 / 819 Loss: 16.775562286376953 Tokens per Sec: 25662.405512443725
Epoch Step: 635 / 819 Loss: 15.415864944458008 Tokens per Sec: 23432.134842202908
Epoch Step: 640 / 819 Loss: 15.649301528930664 Tokens per Sec: 29255.8529229206
Epoch Step: 645 / 819 Loss: 12.343104362487793 Tokens per Sec: 23430.333548100127
Epoch Step: 650 / 819 Loss: 18.389345169067383 Tokens per Sec: 26228.192447490994
Epoch Step: 655 / 819 Loss: 14.106528282165527 Tokens per Sec: 29414.60206908678
Epoch Step: 660 / 819 Loss: 16.1373233795166 Tokens per Sec: 25336.324371301096
Epoch Step: 665 / 819 Loss: 16.943618774414062 Tokens per Sec: 27412.223560466027
Epoch Step: 670 / 819 Loss: 16.931795120239258 Tokens per Sec: 26991.99520083032
Epoch Step: 675 / 819 Loss: 17.869840621948242 Tokens per Sec: 27293.02511313463
Epoch Step: 680 / 819 Loss: 15.272955894470215 Tokens per Sec: 27984.149997660665
Epoch Step: 685 / 819 Loss: 19.36591911315918 Tokens per Sec: 28533.13318721965
Epoch Step: 690 / 819 Loss: 14.390570640563965 Tokens per Sec: 23490.838929384474
Epoch Step: 695 / 819 Loss: 16.977495193481445 Tokens per Sec: 26222.612067398306
Epoch Step: 700 / 819 Loss: 11.507902145385742 Tokens per Sec: 27117.1944213803
Epoch Step: 705 / 819 Loss: 16.587539672851562 Tokens per Sec: 25630.535047715468
Epoch Step: 710 / 819 Loss: 13.376275062561035 Tokens per Sec: 25061.787290190005
Epoch Step: 715 / 819 Loss: 18.692060470581055 Tokens per Sec: 25745.921599730445
Epoch Step: 720 / 819 Loss: 14.655705451965332 Tokens per Sec: 25342.31270559293
Epoch Step: 725 / 819 Loss: 15.660913467407227 Tokens per Sec: 29237.739118188656
Epoch Step: 730 / 819 Loss: 17.209047317504883 Tokens per Sec: 26705.565537755043
Epoch Step: 735 / 819 Loss: 160.7312774658203 Tokens per Sec: 28119.405898052773
Epoch Step: 740 / 819 Loss: 20.863327026367188 Tokens per Sec: 27825.649525424593
Epoch Step: 745 / 819 Loss: 12.525054931640625 Tokens per Sec: 26278.237229101127
Epoch Step: 750 / 819 Loss: 18.92133331298828 Tokens per Sec: 27327.721395976707
Epoch Step: 755 / 819 Loss: 18.29774284362793 Tokens per Sec: 25156.734432569203
Epoch Step: 760 / 819 Loss: 17.568723678588867 Tokens per Sec: 26274.12894741552
Epoch Step: 765 / 819 Loss: 14.709787368774414 Tokens per Sec: 28689.247290872045
Epoch Step: 770 / 819 Loss: 17.852497100830078 Tokens per Sec: 26910.130036906812
Epoch Step: 775 / 819 Loss: 16.147872924804688 Tokens per Sec: 27966.203844238622
Epoch Step: 780 / 819 Loss: 18.423891067504883 Tokens per Sec: 26206.927874854522
Epoch Step: 785 / 819 Loss: 19.064958572387695 Tokens per Sec: 23725.758209119023
Epoch Step: 790 / 819 Loss: 17.92597007751465 Tokens per Sec: 27661.24992221964
Epoch Step: 795 / 819 Loss: 16.376148223876953 Tokens per Sec: 24631.450067290723
Epoch Step: 800 / 819 Loss: 19.11574935913086 Tokens per Sec: 27323.74372457859
Epoch Step: 805 / 819 Loss: 17.765239715576172 Tokens per Sec: 21030.680289147043
Epoch Step: 810 / 819 Loss: 15.974817276000977 Tokens per Sec: 24273.46988834898
Epoch Step: 815 / 819 Loss: 16.213333129882812 Tokens per Sec: 24208.956913808266
Epoch ended with duration 0:02:26.492962
Train perplexity: 1.5866675609784349
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.028002
Validation perplexity: 1.5214920824524327
Epoch 45 / 1000
Epoch Step: 5 / 819 Loss: 257.5914306640625 Tokens per Sec: 26899.544705233737
Epoch Step: 10 / 819 Loss: 16.229629516601562 Tokens per Sec: 27077.9787035105
Epoch Step: 15 / 819 Loss: 125.91108703613281 Tokens per Sec: 25933.14894138203
Epoch Step: 20 / 819 Loss: 209.70355224609375 Tokens per Sec: 26776.334671219804
Epoch Step: 25 / 819 Loss: 20.879146575927734 Tokens per Sec: 26110.164611877433
Epoch Step: 30 / 819 Loss: 23.58001708984375 Tokens per Sec: 26784.093056628302
Epoch Step: 35 / 819 Loss: 23.851211547851562 Tokens per Sec: 26023.65216656634
Epoch Step: 40 / 819 Loss: 166.6412353515625 Tokens per Sec: 25119.41584803553
Epoch Step: 45 / 819 Loss: 19.918704986572266 Tokens per Sec: 26341.436636065588
Epoch Step: 50 / 819 Loss: 19.84897804260254 Tokens per Sec: 25036.20041008155
Epoch Step: 55 / 819 Loss: 14.015560150146484 Tokens per Sec: 26542.057282662903
Epoch Step: 60 / 819 Loss: 18.731557846069336 Tokens per Sec: 26630.956135132477
Epoch Step: 65 / 819 Loss: 12.834293365478516 Tokens per Sec: 28295.03702200415
Epoch Step: 70 / 819 Loss: 13.504353523254395 Tokens per Sec: 23161.10978400547
Epoch Step: 75 / 819 Loss: 14.904523849487305 Tokens per Sec: 29096.176454867218
Epoch Step: 80 / 819 Loss: 17.30936050415039 Tokens per Sec: 25542.572874828275
Epoch Step: 85 / 819 Loss: 13.494719505310059 Tokens per Sec: 29148.913170855587
Epoch Step: 90 / 819 Loss: 15.52825927734375 Tokens per Sec: 26980.54321610111
Epoch Step: 95 / 819 Loss: 14.484710693359375 Tokens per Sec: 26249.04776360588
Epoch Step: 100 / 819 Loss: 22.888378143310547 Tokens per Sec: 22767.141290238615
Epoch Step: 105 / 819 Loss: 19.546287536621094 Tokens per Sec: 25746.527013426756
Epoch Step: 110 / 819 Loss: 18.928213119506836 Tokens per Sec: 26504.926756145593
Epoch Step: 115 / 819 Loss: 15.988883972167969 Tokens per Sec: 28635.33442233054
Epoch Step: 120 / 819 Loss: 14.641414642333984 Tokens per Sec: 27421.973673886514
Epoch Step: 125 / 819 Loss: 20.224201202392578 Tokens per Sec: 24997.91765064485
Epoch Step: 130 / 819 Loss: 22.58127212524414 Tokens per Sec: 27153.165588070096
Epoch Step: 135 / 819 Loss: 113.18435668945312 Tokens per Sec: 26146.074324301946
Epoch Step: 140 / 819 Loss: 16.30805015563965 Tokens per Sec: 26777.299551175343
Epoch Step: 145 / 819 Loss: 16.499897003173828 Tokens per Sec: 26402.95058229257
Epoch Step: 150 / 819 Loss: 18.97587776184082 Tokens per Sec: 27745.335989370586
Epoch Step: 155 / 819 Loss: 14.184822082519531 Tokens per Sec: 29058.69435230165
Epoch Step: 160 / 819 Loss: 13.164509773254395 Tokens per Sec: 29065.697856853072
Epoch Step: 165 / 819 Loss: 15.13205623626709 Tokens per Sec: 25270.824694812065
Epoch Step: 170 / 819 Loss: 17.514698028564453 Tokens per Sec: 27249.624086235388
Epoch Step: 175 / 819 Loss: 15.660308837890625 Tokens per Sec: 23649.262611965034
Epoch Step: 180 / 819 Loss: 15.278757095336914 Tokens per Sec: 27553.962917707275
Epoch Step: 185 / 819 Loss: 11.292484283447266 Tokens per Sec: 25890.180619376377
Epoch Step: 190 / 819 Loss: 17.540000915527344 Tokens per Sec: 29012.514592116957
Epoch Step: 195 / 819 Loss: 15.605114936828613 Tokens per Sec: 26067.170753317496
Epoch Step: 200 / 819 Loss: 13.158987998962402 Tokens per Sec: 27038.81894470784
Epoch Step: 205 / 819 Loss: 12.730486869812012 Tokens per Sec: 29427.12880829116
Epoch Step: 210 / 819 Loss: 20.739028930664062 Tokens per Sec: 26147.46378998086
Epoch Step: 215 / 819 Loss: 14.543749809265137 Tokens per Sec: 27095.20250608234
Epoch Step: 220 / 819 Loss: 14.84252643585205 Tokens per Sec: 24887.956805190955
Epoch Step: 225 / 819 Loss: 14.66703987121582 Tokens per Sec: 24174.78097224032
Epoch Step: 230 / 819 Loss: 19.44394302368164 Tokens per Sec: 26501.146651576135
Epoch Step: 235 / 819 Loss: 15.041169166564941 Tokens per Sec: 26863.54219427743
Epoch Step: 240 / 819 Loss: 14.936749458312988 Tokens per Sec: 28971.543680003215
Epoch Step: 245 / 819 Loss: 18.41972541809082 Tokens per Sec: 25229.714213609608
Epoch Step: 250 / 819 Loss: 21.81410026550293 Tokens per Sec: 25901.352960493667
Epoch Step: 255 / 819 Loss: 15.50698471069336 Tokens per Sec: 24402.89560062462
Epoch Step: 260 / 819 Loss: 18.494831085205078 Tokens per Sec: 27489.756098222377
Epoch Step: 265 / 819 Loss: 20.524166107177734 Tokens per Sec: 27002.311301559424
Epoch Step: 270 / 819 Loss: 16.265281677246094 Tokens per Sec: 26485.69973137838
Epoch Step: 275 / 819 Loss: 18.409526824951172 Tokens per Sec: 28428.976542418284
Epoch Step: 280 / 819 Loss: 18.73866844177246 Tokens per Sec: 27482.45064124176
Epoch Step: 285 / 819 Loss: 19.709400177001953 Tokens per Sec: 28701.101476247084
Epoch Step: 290 / 819 Loss: 16.062206268310547 Tokens per Sec: 25497.00183759779
Epoch Step: 295 / 819 Loss: 18.742210388183594 Tokens per Sec: 25889.812188500335
Epoch Step: 300 / 819 Loss: 15.150455474853516 Tokens per Sec: 27597.787786126664
Epoch Step: 305 / 819 Loss: 13.907642364501953 Tokens per Sec: 28542.826089655555
Epoch Step: 310 / 819 Loss: 17.498096466064453 Tokens per Sec: 26828.23095975402
Epoch Step: 315 / 819 Loss: 16.430145263671875 Tokens per Sec: 22680.67708836949
Epoch Step: 320 / 819 Loss: 19.792470932006836 Tokens per Sec: 27270.545735243668
Epoch Step: 325 / 819 Loss: 14.757994651794434 Tokens per Sec: 27110.533489474146
Epoch Step: 330 / 819 Loss: 14.724137306213379 Tokens per Sec: 26046.662457155362
Epoch Step: 335 / 819 Loss: 17.353158950805664 Tokens per Sec: 28047.405895124375
Epoch Step: 340 / 819 Loss: 16.040571212768555 Tokens per Sec: 26919.2108534642
Epoch Step: 345 / 819 Loss: 123.60791778564453 Tokens per Sec: 22798.08559224231
Epoch Step: 350 / 819 Loss: 18.108753204345703 Tokens per Sec: 23585.44262301984
Epoch Step: 355 / 819 Loss: 15.181143760681152 Tokens per Sec: 26786.509209986507
Epoch Step: 360 / 819 Loss: 13.610755920410156 Tokens per Sec: 27415.946546099814
Epoch Step: 365 / 819 Loss: 16.003223419189453 Tokens per Sec: 28077.91075784948
Epoch Step: 370 / 819 Loss: 18.97722625732422 Tokens per Sec: 27077.839604737583
Epoch Step: 375 / 819 Loss: 19.024105072021484 Tokens per Sec: 25761.037452350323
Epoch Step: 380 / 819 Loss: 16.960079193115234 Tokens per Sec: 28624.880623985715
Epoch Step: 385 / 819 Loss: 14.616494178771973 Tokens per Sec: 28754.121933204595
Epoch Step: 390 / 819 Loss: 15.959915161132812 Tokens per Sec: 28022.999082478542
Epoch Step: 395 / 819 Loss: 17.10967254638672 Tokens per Sec: 27790.738228032384
Epoch Step: 400 / 819 Loss: 186.54962158203125 Tokens per Sec: 23022.160432155226
Epoch Step: 405 / 819 Loss: 164.82046508789062 Tokens per Sec: 23415.68572906952
Epoch Step: 410 / 819 Loss: 21.926822662353516 Tokens per Sec: 25999.357597616465
Epoch Step: 415 / 819 Loss: 203.682373046875 Tokens per Sec: 26280.256456266867
Epoch Step: 420 / 819 Loss: 13.554424285888672 Tokens per Sec: 27156.095797739625
Epoch Step: 425 / 819 Loss: 16.682979583740234 Tokens per Sec: 26757.8468828936
Epoch Step: 430 / 819 Loss: 18.197107315063477 Tokens per Sec: 25838.42382636773
Epoch Step: 435 / 819 Loss: 132.06402587890625 Tokens per Sec: 25292.033164911656
Epoch Step: 440 / 819 Loss: 20.462614059448242 Tokens per Sec: 25662.51502026105
Epoch Step: 445 / 819 Loss: 17.654865264892578 Tokens per Sec: 24837.873876629164
Epoch Step: 450 / 819 Loss: 18.781545639038086 Tokens per Sec: 27379.833146303696
Epoch Step: 455 / 819 Loss: 16.581348419189453 Tokens per Sec: 28119.085022330277
Epoch Step: 460 / 819 Loss: 16.503623962402344 Tokens per Sec: 27748.567733794287
Epoch Step: 465 / 819 Loss: 177.83937072753906 Tokens per Sec: 27798.64687069299
Epoch Step: 470 / 819 Loss: 22.05232810974121 Tokens per Sec: 27025.642425833554
Epoch Step: 475 / 819 Loss: 143.9639892578125 Tokens per Sec: 26226.714602790144
Epoch Step: 480 / 819 Loss: 16.592546463012695 Tokens per Sec: 26669.780411536016
Epoch Step: 485 / 819 Loss: 136.3315887451172 Tokens per Sec: 27432.26001256698
Epoch Step: 490 / 819 Loss: 15.06206226348877 Tokens per Sec: 27309.101532373992
Epoch Step: 495 / 819 Loss: 19.037744522094727 Tokens per Sec: 26483.658150188043
Epoch Step: 500 / 819 Loss: 169.60157775878906 Tokens per Sec: 27537.225745144067
Epoch Step: 505 / 819 Loss: 21.392709732055664 Tokens per Sec: 28430.392345310232
Epoch Step: 510 / 819 Loss: 19.524078369140625 Tokens per Sec: 24326.81808259967
Epoch Step: 515 / 819 Loss: 19.474504470825195 Tokens per Sec: 26794.476152928866
Epoch Step: 520 / 819 Loss: 19.342132568359375 Tokens per Sec: 24655.311460850524
Epoch Step: 525 / 819 Loss: 18.016319274902344 Tokens per Sec: 27975.180879898424
Epoch Step: 530 / 819 Loss: 18.587249755859375 Tokens per Sec: 26314.00736033506
Epoch Step: 535 / 819 Loss: 15.519441604614258 Tokens per Sec: 27771.264047114644
Epoch Step: 540 / 819 Loss: 12.522743225097656 Tokens per Sec: 25707.83449351228
Epoch Step: 545 / 819 Loss: 13.06879711151123 Tokens per Sec: 27058.608243797415
Epoch Step: 550 / 819 Loss: 18.21819305419922 Tokens per Sec: 26357.274324858743
Epoch Step: 555 / 819 Loss: 18.697614669799805 Tokens per Sec: 26571.445709596694
Epoch Step: 560 / 819 Loss: 13.583090782165527 Tokens per Sec: 26430.711839446296
Epoch Step: 565 / 819 Loss: 18.737457275390625 Tokens per Sec: 26930.41075071897
Epoch Step: 570 / 819 Loss: 15.453176498413086 Tokens per Sec: 28604.856033809185
Epoch Step: 575 / 819 Loss: 14.804158210754395 Tokens per Sec: 27521.044229010426
Epoch Step: 580 / 819 Loss: 13.509857177734375 Tokens per Sec: 25668.331932966234
Epoch Step: 585 / 819 Loss: 14.612531661987305 Tokens per Sec: 25326.901577832374
Epoch Step: 590 / 819 Loss: 21.30905532836914 Tokens per Sec: 25507.80345151504
Epoch Step: 595 / 819 Loss: 95.15863037109375 Tokens per Sec: 28717.899480991986
Epoch Step: 600 / 819 Loss: 22.21306610107422 Tokens per Sec: 26182.804339792037
Epoch Step: 605 / 819 Loss: 20.52264404296875 Tokens per Sec: 26497.906615624153
Epoch Step: 610 / 819 Loss: 17.541671752929688 Tokens per Sec: 25248.9744361516
Epoch Step: 615 / 819 Loss: 22.295312881469727 Tokens per Sec: 25905.52629678597
Epoch Step: 620 / 819 Loss: 165.38931274414062 Tokens per Sec: 26908.93944930702
Epoch Step: 625 / 819 Loss: 18.35487174987793 Tokens per Sec: 24453.192360124245
Epoch Step: 630 / 819 Loss: 19.50128173828125 Tokens per Sec: 26044.51484232602
Epoch Step: 635 / 819 Loss: 15.261738777160645 Tokens per Sec: 26623.782815389503
Epoch Step: 640 / 819 Loss: 17.382186889648438 Tokens per Sec: 26653.851852465672
Epoch Step: 645 / 819 Loss: 19.53122329711914 Tokens per Sec: 27556.28136394092
Epoch Step: 650 / 819 Loss: 14.705450057983398 Tokens per Sec: 25190.18571917264
Epoch Step: 655 / 819 Loss: 12.63071060180664 Tokens per Sec: 28199.641703683494
Epoch Step: 660 / 819 Loss: 11.088119506835938 Tokens per Sec: 26943.776545643712
Epoch Step: 665 / 819 Loss: 19.605331420898438 Tokens per Sec: 24728.108365482734
Epoch Step: 670 / 819 Loss: 13.87752914428711 Tokens per Sec: 28063.082996624336
Epoch Step: 675 / 819 Loss: 17.71402931213379 Tokens per Sec: 26102.320180512987
Epoch Step: 680 / 819 Loss: 14.904398918151855 Tokens per Sec: 27942.874035384302
Epoch Step: 685 / 819 Loss: 209.42044067382812 Tokens per Sec: 26062.15253581641
Epoch Step: 690 / 819 Loss: 19.000682830810547 Tokens per Sec: 27206.286826846073
Epoch Step: 695 / 819 Loss: 14.527506828308105 Tokens per Sec: 27085.42523512805
Epoch Step: 700 / 819 Loss: 14.726868629455566 Tokens per Sec: 25898.92485199837
Epoch Step: 705 / 819 Loss: 16.191265106201172 Tokens per Sec: 25759.162368165533
Epoch Step: 710 / 819 Loss: 12.510008811950684 Tokens per Sec: 25974.63080271217
Epoch Step: 715 / 819 Loss: 17.620962142944336 Tokens per Sec: 27301.00387904352
Epoch Step: 720 / 819 Loss: 135.9709014892578 Tokens per Sec: 27936.101643555914
Epoch Step: 725 / 819 Loss: 16.302371978759766 Tokens per Sec: 25977.435791475746
Epoch Step: 730 / 819 Loss: 15.389045715332031 Tokens per Sec: 25481.2412564116
Epoch Step: 735 / 819 Loss: 11.344078063964844 Tokens per Sec: 27665.027129303315
Epoch Step: 740 / 819 Loss: 17.180376052856445 Tokens per Sec: 25084.798303976313
Epoch Step: 745 / 819 Loss: 15.123383522033691 Tokens per Sec: 27026.42689728693
Epoch Step: 750 / 819 Loss: 12.799579620361328 Tokens per Sec: 26201.120102337754
Epoch Step: 755 / 819 Loss: 16.197179794311523 Tokens per Sec: 26245.473209231084
Epoch Step: 760 / 819 Loss: 16.828777313232422 Tokens per Sec: 26769.407322262537
Epoch Step: 765 / 819 Loss: 16.47808837890625 Tokens per Sec: 24815.268890489726
Epoch Step: 770 / 819 Loss: 16.51007652282715 Tokens per Sec: 29716.70235429784
Epoch Step: 775 / 819 Loss: 15.350172996520996 Tokens per Sec: 28670.393372047412
Epoch Step: 780 / 819 Loss: 21.136354446411133 Tokens per Sec: 26439.65796578077
Epoch Step: 785 / 819 Loss: 19.311559677124023 Tokens per Sec: 28700.974581609793
Epoch Step: 790 / 819 Loss: 141.3308868408203 Tokens per Sec: 24421.63505486654
Epoch Step: 795 / 819 Loss: 21.021589279174805 Tokens per Sec: 25808.275408400095
Epoch Step: 800 / 819 Loss: 19.16398048400879 Tokens per Sec: 26870.10993627914
Epoch Step: 805 / 819 Loss: 18.853185653686523 Tokens per Sec: 26803.38996779732
Epoch Step: 810 / 819 Loss: 18.06216049194336 Tokens per Sec: 18981.832366892966
Epoch Step: 815 / 819 Loss: 17.486007690429688 Tokens per Sec: 24815.18821084075
Epoch ended with duration 0:02:26.641740
Train perplexity: 1.5836277277483997
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.055073
Validation perplexity: 1.455477012376799
Model saved checkpoint!
Epoch 46 / 1000
Epoch Step: 5 / 819 Loss: 22.909208297729492 Tokens per Sec: 28050.019012423265
Epoch Step: 10 / 819 Loss: 17.605318069458008 Tokens per Sec: 24127.525382544896
Epoch Step: 15 / 819 Loss: 17.551481246948242 Tokens per Sec: 25701.519259013574
Epoch Step: 20 / 819 Loss: 16.246429443359375 Tokens per Sec: 27088.19633867686
Epoch Step: 25 / 819 Loss: 21.36585807800293 Tokens per Sec: 27260.529635348514
Epoch Step: 30 / 819 Loss: 14.539963722229004 Tokens per Sec: 26961.984854515194
Epoch Step: 35 / 819 Loss: 15.383973121643066 Tokens per Sec: 27374.684450685214
Epoch Step: 40 / 819 Loss: 16.384187698364258 Tokens per Sec: 25679.6566224725
Epoch Step: 45 / 819 Loss: 10.968512535095215 Tokens per Sec: 27468.541598281365
Epoch Step: 50 / 819 Loss: 18.112735748291016 Tokens per Sec: 25315.44261327848
Epoch Step: 55 / 819 Loss: 16.45020866394043 Tokens per Sec: 26602.567780017427
Epoch Step: 60 / 819 Loss: 14.777420043945312 Tokens per Sec: 23514.181473076762
Epoch Step: 65 / 819 Loss: 15.292074203491211 Tokens per Sec: 28586.069345747932
Epoch Step: 70 / 819 Loss: 16.986696243286133 Tokens per Sec: 25407.719524338434
Epoch Step: 75 / 819 Loss: 228.73684692382812 Tokens per Sec: 26640.83764122137
Epoch Step: 80 / 819 Loss: 20.740554809570312 Tokens per Sec: 26937.869392685185
Epoch Step: 85 / 819 Loss: 19.636672973632812 Tokens per Sec: 27996.5668566766
Epoch Step: 90 / 819 Loss: 15.83665943145752 Tokens per Sec: 27750.13707043016
Epoch Step: 95 / 819 Loss: 12.952376365661621 Tokens per Sec: 27395.473842249263
Epoch Step: 100 / 819 Loss: 18.653594970703125 Tokens per Sec: 28480.983076342116
Epoch Step: 105 / 819 Loss: 15.900897026062012 Tokens per Sec: 26143.340629186583
Epoch Step: 110 / 819 Loss: 14.883922576904297 Tokens per Sec: 24638.98978246806
Epoch Step: 115 / 819 Loss: 262.199951171875 Tokens per Sec: 25947.331597878107
Epoch Step: 120 / 819 Loss: 20.377912521362305 Tokens per Sec: 28905.677364684696
Epoch Step: 125 / 819 Loss: 17.135265350341797 Tokens per Sec: 26953.732042899148
Epoch Step: 130 / 819 Loss: 21.173959732055664 Tokens per Sec: 27216.26057125313
Epoch Step: 135 / 819 Loss: 20.350650787353516 Tokens per Sec: 25307.641645319905
Epoch Step: 140 / 819 Loss: 17.138113021850586 Tokens per Sec: 27453.31938249092
Epoch Step: 145 / 819 Loss: 14.712159156799316 Tokens per Sec: 25063.44680786256
Epoch Step: 150 / 819 Loss: 11.991661071777344 Tokens per Sec: 25539.65805030586
Epoch Step: 155 / 819 Loss: 19.638315200805664 Tokens per Sec: 27587.686066428152
Epoch Step: 160 / 819 Loss: 19.923917770385742 Tokens per Sec: 28927.7932146947
Epoch Step: 165 / 819 Loss: 17.176271438598633 Tokens per Sec: 27942.45966821671
Epoch Step: 170 / 819 Loss: 19.271039962768555 Tokens per Sec: 27639.487716987052
Epoch Step: 175 / 819 Loss: 13.845704078674316 Tokens per Sec: 25714.541084431283
Epoch Step: 180 / 819 Loss: 15.01137638092041 Tokens per Sec: 26686.34073862382
Epoch Step: 185 / 819 Loss: 15.319912910461426 Tokens per Sec: 26128.911363551277
Epoch Step: 190 / 819 Loss: 13.31698226928711 Tokens per Sec: 25843.739232869393
Epoch Step: 195 / 819 Loss: 14.207120895385742 Tokens per Sec: 27236.563099058592
Epoch Step: 200 / 819 Loss: 21.05518341064453 Tokens per Sec: 26752.448713659018
Epoch Step: 205 / 819 Loss: 18.551273345947266 Tokens per Sec: 26110.294597714284
Epoch Step: 210 / 819 Loss: 14.32474136352539 Tokens per Sec: 26858.982959824665
Epoch Step: 215 / 819 Loss: 15.973268508911133 Tokens per Sec: 26092.41510445112
Epoch Step: 220 / 819 Loss: 20.570423126220703 Tokens per Sec: 27533.894131599904
Epoch Step: 225 / 819 Loss: 16.63195037841797 Tokens per Sec: 24297.85238044998
Epoch Step: 230 / 819 Loss: 14.40921688079834 Tokens per Sec: 28962.79356792208
Epoch Step: 235 / 819 Loss: 15.981407165527344 Tokens per Sec: 25100.335773608887
Epoch Step: 240 / 819 Loss: 11.861845016479492 Tokens per Sec: 26618.100493805592
Epoch Step: 245 / 819 Loss: 17.231901168823242 Tokens per Sec: 22537.546180054054
Epoch Step: 250 / 819 Loss: 20.053321838378906 Tokens per Sec: 28788.433071894586
Epoch Step: 255 / 819 Loss: 21.167083740234375 Tokens per Sec: 26127.66689248443
Epoch Step: 260 / 819 Loss: 14.376235961914062 Tokens per Sec: 25202.127302992958
Epoch Step: 265 / 819 Loss: 11.92099666595459 Tokens per Sec: 29241.75825867292
Epoch Step: 270 / 819 Loss: 16.015243530273438 Tokens per Sec: 26913.82414804669
Epoch Step: 275 / 819 Loss: 12.989980697631836 Tokens per Sec: 27952.778077921237
Epoch Step: 280 / 819 Loss: 12.383371353149414 Tokens per Sec: 26909.774319179327
Epoch Step: 285 / 819 Loss: 18.25428009033203 Tokens per Sec: 27516.6242422652
Epoch Step: 290 / 819 Loss: 15.906518936157227 Tokens per Sec: 25457.630752718724
Epoch Step: 295 / 819 Loss: 174.4079132080078 Tokens per Sec: 26973.713842245637
Epoch Step: 300 / 819 Loss: 155.71820068359375 Tokens per Sec: 27787.841594657293
Epoch Step: 305 / 819 Loss: 18.51630210876465 Tokens per Sec: 26317.22331685539
Epoch Step: 310 / 819 Loss: 15.521503448486328 Tokens per Sec: 27299.39587586166
Epoch Step: 315 / 819 Loss: 18.111141204833984 Tokens per Sec: 26804.21250629388
Epoch Step: 320 / 819 Loss: 15.826624870300293 Tokens per Sec: 27383.02356194441
Epoch Step: 325 / 819 Loss: 16.1960506439209 Tokens per Sec: 25188.436014523995
Epoch Step: 330 / 819 Loss: 12.052640914916992 Tokens per Sec: 26224.3925497718
Epoch Step: 335 / 819 Loss: 19.615259170532227 Tokens per Sec: 25677.763425083802
Epoch Step: 340 / 819 Loss: 15.147441864013672 Tokens per Sec: 27945.553949617977
Epoch Step: 345 / 819 Loss: 17.681297302246094 Tokens per Sec: 27162.243665028243
Epoch Step: 350 / 819 Loss: 13.112563133239746 Tokens per Sec: 26315.45175319698
Epoch Step: 355 / 819 Loss: 16.780298233032227 Tokens per Sec: 28411.33253644986
Epoch Step: 360 / 819 Loss: 13.5729398727417 Tokens per Sec: 28494.85147767978
Epoch Step: 365 / 819 Loss: 16.13396644592285 Tokens per Sec: 24782.40770724845
Epoch Step: 370 / 819 Loss: 16.03173828125 Tokens per Sec: 26008.681120925416
Epoch Step: 375 / 819 Loss: 15.6265869140625 Tokens per Sec: 24660.822080652557
Epoch Step: 380 / 819 Loss: 14.207235336303711 Tokens per Sec: 26426.037901636566
Epoch Step: 385 / 819 Loss: 18.21641731262207 Tokens per Sec: 26026.316248742896
Epoch Step: 390 / 819 Loss: 15.811857223510742 Tokens per Sec: 26584.868684987312
Epoch Step: 395 / 819 Loss: 13.136064529418945 Tokens per Sec: 24448.764418792685
Epoch Step: 400 / 819 Loss: 15.048439979553223 Tokens per Sec: 26799.80896046015
Epoch Step: 405 / 819 Loss: 14.90838623046875 Tokens per Sec: 25018.267073018254
Epoch Step: 410 / 819 Loss: 15.717000007629395 Tokens per Sec: 27170.16210133877
Epoch Step: 415 / 819 Loss: 149.49476623535156 Tokens per Sec: 28923.920837882684
Epoch Step: 420 / 819 Loss: 20.97402572631836 Tokens per Sec: 22887.18977221409
Epoch Step: 425 / 819 Loss: 17.174692153930664 Tokens per Sec: 23882.48718051412
Epoch Step: 430 / 819 Loss: 19.87557029724121 Tokens per Sec: 27592.64142892691
Epoch Step: 435 / 819 Loss: 20.035402297973633 Tokens per Sec: 26720.50980286133
Epoch Step: 440 / 819 Loss: 107.24484252929688 Tokens per Sec: 24711.038513673633
Epoch Step: 445 / 819 Loss: 20.675437927246094 Tokens per Sec: 27082.269089876318
Epoch Step: 450 / 819 Loss: 16.658750534057617 Tokens per Sec: 26456.743995303743
Epoch Step: 455 / 819 Loss: 16.546581268310547 Tokens per Sec: 26146.98181193998
Epoch Step: 460 / 819 Loss: 20.678165435791016 Tokens per Sec: 28605.88158147154
Epoch Step: 465 / 819 Loss: 12.1107177734375 Tokens per Sec: 28098.758428574623
Epoch Step: 470 / 819 Loss: 20.274389266967773 Tokens per Sec: 25632.1192370591
Epoch Step: 475 / 819 Loss: 244.61758422851562 Tokens per Sec: 25149.426415680035
Epoch Step: 480 / 819 Loss: 15.181894302368164 Tokens per Sec: 26173.870762330316
Epoch Step: 485 / 819 Loss: 18.661476135253906 Tokens per Sec: 25567.111205086017
Epoch Step: 490 / 819 Loss: 13.46118450164795 Tokens per Sec: 25711.068934911404
Epoch Step: 495 / 819 Loss: 16.363370895385742 Tokens per Sec: 26294.1212046027
Epoch Step: 500 / 819 Loss: 18.168176651000977 Tokens per Sec: 25848.64364988681
Epoch Step: 505 / 819 Loss: 18.25940704345703 Tokens per Sec: 25704.94858713369
Epoch Step: 510 / 819 Loss: 16.464956283569336 Tokens per Sec: 27551.753357003498
Epoch Step: 515 / 819 Loss: 16.29892349243164 Tokens per Sec: 29409.16367153199
Epoch Step: 520 / 819 Loss: 17.335371017456055 Tokens per Sec: 26934.542147618777
Epoch Step: 525 / 819 Loss: 17.50039291381836 Tokens per Sec: 26645.199159823733
Epoch Step: 530 / 819 Loss: 17.716522216796875 Tokens per Sec: 27946.423829318388
Epoch Step: 535 / 819 Loss: 15.184041023254395 Tokens per Sec: 27045.44646187175
Epoch Step: 540 / 819 Loss: 17.113969802856445 Tokens per Sec: 26471.199318851763
Epoch Step: 545 / 819 Loss: 15.426702499389648 Tokens per Sec: 27152.03149760536
Epoch Step: 550 / 819 Loss: 16.014684677124023 Tokens per Sec: 25563.349476698233
Epoch Step: 555 / 819 Loss: 15.911453247070312 Tokens per Sec: 26311.14361904762
Epoch Step: 560 / 819 Loss: 15.148763656616211 Tokens per Sec: 24145.09613242607
Epoch Step: 565 / 819 Loss: 19.17708396911621 Tokens per Sec: 25091.163651789313
Epoch Step: 570 / 819 Loss: 14.059134483337402 Tokens per Sec: 27556.81631432892
Epoch Step: 575 / 819 Loss: 19.72951316833496 Tokens per Sec: 24929.525336278974
Epoch Step: 580 / 819 Loss: 183.58502197265625 Tokens per Sec: 25650.01558718456
Epoch Step: 585 / 819 Loss: 16.58738136291504 Tokens per Sec: 27446.748231572386
Epoch Step: 590 / 819 Loss: 17.463987350463867 Tokens per Sec: 25346.841439225347
Epoch Step: 595 / 819 Loss: 135.03326416015625 Tokens per Sec: 29255.069265122926
Epoch Step: 600 / 819 Loss: 16.707300186157227 Tokens per Sec: 27602.339118963188
Epoch Step: 605 / 819 Loss: 11.82631778717041 Tokens per Sec: 24079.237679816073
Epoch Step: 610 / 819 Loss: 11.355659484863281 Tokens per Sec: 28916.726057980315
Epoch Step: 615 / 819 Loss: 13.950712203979492 Tokens per Sec: 28033.769231506943
Epoch Step: 620 / 819 Loss: 19.9340763092041 Tokens per Sec: 25234.944946702908
Epoch Step: 625 / 819 Loss: 17.854862213134766 Tokens per Sec: 26377.53478905951
Epoch Step: 630 / 819 Loss: 13.427083015441895 Tokens per Sec: 26688.284153638822
Epoch Step: 635 / 819 Loss: 72.8353271484375 Tokens per Sec: 26802.373419988802
Epoch Step: 640 / 819 Loss: 20.5693416595459 Tokens per Sec: 27601.652908927535
Epoch Step: 645 / 819 Loss: 16.439855575561523 Tokens per Sec: 25949.072813947565
Epoch Step: 650 / 819 Loss: 134.0772247314453 Tokens per Sec: 27483.908508197826
Epoch Step: 655 / 819 Loss: 15.875910758972168 Tokens per Sec: 23765.06517935417
Epoch Step: 660 / 819 Loss: 14.436158180236816 Tokens per Sec: 27167.944180062223
Epoch Step: 665 / 819 Loss: 14.960770606994629 Tokens per Sec: 27138.00831088047
Epoch Step: 670 / 819 Loss: 16.512142181396484 Tokens per Sec: 28363.171951508517
Epoch Step: 675 / 819 Loss: 17.74811553955078 Tokens per Sec: 25983.234945067983
Epoch Step: 680 / 819 Loss: 15.501181602478027 Tokens per Sec: 28321.332779495424
Epoch Step: 685 / 819 Loss: 14.45146369934082 Tokens per Sec: 25380.698970542482
Epoch Step: 690 / 819 Loss: 13.912519454956055 Tokens per Sec: 28260.164959469934
Epoch Step: 695 / 819 Loss: 16.159217834472656 Tokens per Sec: 26946.422102284614
Epoch Step: 700 / 819 Loss: 14.347513198852539 Tokens per Sec: 27867.94518601104
Epoch Step: 705 / 819 Loss: 17.197389602661133 Tokens per Sec: 26598.9483816853
Epoch Step: 710 / 819 Loss: 14.575294494628906 Tokens per Sec: 27892.856117712483
Epoch Step: 715 / 819 Loss: 16.67953872680664 Tokens per Sec: 26446.497281906217
Epoch Step: 720 / 819 Loss: 15.460294723510742 Tokens per Sec: 26841.93651287653
Epoch Step: 725 / 819 Loss: 18.503982543945312 Tokens per Sec: 26811.334469023852
Epoch Step: 730 / 819 Loss: 11.857049942016602 Tokens per Sec: 29249.863002752187
Epoch Step: 735 / 819 Loss: 12.882851600646973 Tokens per Sec: 25808.842814064144
Epoch Step: 740 / 819 Loss: 13.920418739318848 Tokens per Sec: 26782.31775441771
Epoch Step: 745 / 819 Loss: 17.839282989501953 Tokens per Sec: 24792.49686123272
Epoch Step: 750 / 819 Loss: 15.12275505065918 Tokens per Sec: 27165.932688421803
Epoch Step: 755 / 819 Loss: 14.872222900390625 Tokens per Sec: 27016.96516888212
Epoch Step: 760 / 819 Loss: 13.947514533996582 Tokens per Sec: 27490.189322389164
Epoch Step: 765 / 819 Loss: 12.057116508483887 Tokens per Sec: 26779.015452384207
Epoch Step: 770 / 819 Loss: 215.54458618164062 Tokens per Sec: 27085.67676783835
Epoch Step: 775 / 819 Loss: 15.246883392333984 Tokens per Sec: 25177.45347059059
Epoch Step: 780 / 819 Loss: 16.248533248901367 Tokens per Sec: 27851.081768482018
Epoch Step: 785 / 819 Loss: 20.673757553100586 Tokens per Sec: 28813.425153806795
Epoch Step: 790 / 819 Loss: 15.95767593383789 Tokens per Sec: 26247.993022891333
Epoch Step: 795 / 819 Loss: 17.10479736328125 Tokens per Sec: 24677.158231659254
Epoch Step: 800 / 819 Loss: 18.932090759277344 Tokens per Sec: 26048.626901478914
Epoch Step: 805 / 819 Loss: 15.104434967041016 Tokens per Sec: 25013.146183134275
Epoch Step: 810 / 819 Loss: 17.532846450805664 Tokens per Sec: 21568.88997040153
Epoch Step: 815 / 819 Loss: 17.503684997558594 Tokens per Sec: 25633.14414420469
Epoch ended with duration 0:02:26.438335
Train perplexity: 1.5158611189394968
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.082157
Validation perplexity: 1.5717506488240638
Epoch 47 / 1000
Epoch Step: 5 / 819 Loss: 18.44077491760254 Tokens per Sec: 26026.990671230215
Epoch Step: 10 / 819 Loss: 13.306897163391113 Tokens per Sec: 29716.753355409004
Epoch Step: 15 / 819 Loss: 16.006526947021484 Tokens per Sec: 25746.343025513244
Epoch Step: 20 / 819 Loss: 17.116756439208984 Tokens per Sec: 24492.67185101466
Epoch Step: 25 / 819 Loss: 14.420289993286133 Tokens per Sec: 25015.870675900434
Epoch Step: 30 / 819 Loss: 18.35228157043457 Tokens per Sec: 26778.44021669556
Epoch Step: 35 / 819 Loss: 12.928427696228027 Tokens per Sec: 26227.32620315688
Epoch Step: 40 / 819 Loss: 14.203600883483887 Tokens per Sec: 28517.98169020389
Epoch Step: 45 / 819 Loss: 13.969738006591797 Tokens per Sec: 25674.087192089253
Epoch Step: 50 / 819 Loss: 19.58728790283203 Tokens per Sec: 28375.52930198372
Epoch Step: 55 / 819 Loss: 17.446741104125977 Tokens per Sec: 26456.620374220864
Epoch Step: 60 / 819 Loss: 18.102060317993164 Tokens per Sec: 27149.626947013185
Epoch Step: 65 / 819 Loss: 14.230022430419922 Tokens per Sec: 25905.019046811438
Epoch Step: 70 / 819 Loss: 11.827051162719727 Tokens per Sec: 25738.463981597288
Epoch Step: 75 / 819 Loss: 249.63380432128906 Tokens per Sec: 26201.97630367981
Epoch Step: 80 / 819 Loss: 12.701512336730957 Tokens per Sec: 24930.67955144228
Epoch Step: 85 / 819 Loss: 21.184919357299805 Tokens per Sec: 28419.469105717526
Epoch Step: 90 / 819 Loss: 12.349132537841797 Tokens per Sec: 24420.763835766236
Epoch Step: 95 / 819 Loss: 218.94700622558594 Tokens per Sec: 28822.142711716595
Epoch Step: 100 / 819 Loss: 146.43716430664062 Tokens per Sec: 26726.88813740332
Epoch Step: 105 / 819 Loss: 19.305431365966797 Tokens per Sec: 25695.93439849406
Epoch Step: 110 / 819 Loss: 17.734012603759766 Tokens per Sec: 27311.056823284536
Epoch Step: 115 / 819 Loss: 20.20499610900879 Tokens per Sec: 28692.36455827727
Epoch Step: 120 / 819 Loss: 13.725131034851074 Tokens per Sec: 25464.15331617291
Epoch Step: 125 / 819 Loss: 14.328234672546387 Tokens per Sec: 29221.48433656054
Epoch Step: 130 / 819 Loss: 15.212496757507324 Tokens per Sec: 24726.0056059887
Epoch Step: 135 / 819 Loss: 14.613240242004395 Tokens per Sec: 28292.465188371258
Epoch Step: 140 / 819 Loss: 17.034839630126953 Tokens per Sec: 25061.967634589186
Epoch Step: 145 / 819 Loss: 14.996362686157227 Tokens per Sec: 25974.383309834473
Epoch Step: 150 / 819 Loss: 17.086898803710938 Tokens per Sec: 27909.977034429383
Epoch Step: 155 / 819 Loss: 166.2622833251953 Tokens per Sec: 25753.282129496387
Epoch Step: 160 / 819 Loss: 17.98689079284668 Tokens per Sec: 28611.80298768728
Epoch Step: 165 / 819 Loss: 11.637659072875977 Tokens per Sec: 26790.05877998007
Epoch Step: 170 / 819 Loss: 12.791478157043457 Tokens per Sec: 27518.975037551998
Epoch Step: 175 / 819 Loss: 16.8634033203125 Tokens per Sec: 25616.24312550554
Epoch Step: 180 / 819 Loss: 14.300195693969727 Tokens per Sec: 26776.45290291496
Epoch Step: 185 / 819 Loss: 16.1713809967041 Tokens per Sec: 26861.170595217052
Epoch Step: 190 / 819 Loss: 157.81103515625 Tokens per Sec: 28763.842231566705
Epoch Step: 195 / 819 Loss: 12.104287147521973 Tokens per Sec: 23935.23811905283
Epoch Step: 200 / 819 Loss: 17.282835006713867 Tokens per Sec: 27260.262539209067
Epoch Step: 205 / 819 Loss: 16.332733154296875 Tokens per Sec: 26527.7871041323
Epoch Step: 210 / 819 Loss: 194.33590698242188 Tokens per Sec: 28290.204099489623
Epoch Step: 215 / 819 Loss: 16.93172264099121 Tokens per Sec: 28215.545656004302
Epoch Step: 220 / 819 Loss: 20.55657196044922 Tokens per Sec: 26521.711130929994
Epoch Step: 225 / 819 Loss: 16.11321449279785 Tokens per Sec: 26661.176940939455
Epoch Step: 230 / 819 Loss: 20.97935676574707 Tokens per Sec: 25294.04057556313
Epoch Step: 235 / 819 Loss: 14.489008903503418 Tokens per Sec: 29554.962859957686
Epoch Step: 240 / 819 Loss: 21.421072006225586 Tokens per Sec: 26120.942013065192
Epoch Step: 245 / 819 Loss: 19.51514434814453 Tokens per Sec: 25157.13768360671
Epoch Step: 250 / 819 Loss: 23.057239532470703 Tokens per Sec: 26234.728739060196
Epoch Step: 255 / 819 Loss: 14.839863777160645 Tokens per Sec: 25079.690967474206
Epoch Step: 260 / 819 Loss: 16.12105941772461 Tokens per Sec: 26117.87519200775
Epoch Step: 265 / 819 Loss: 19.985925674438477 Tokens per Sec: 26075.996883317646
Epoch Step: 270 / 819 Loss: 10.659658432006836 Tokens per Sec: 26761.45891131754
Epoch Step: 275 / 819 Loss: 18.147693634033203 Tokens per Sec: 26416.63308021042
Epoch Step: 280 / 819 Loss: 13.39040756225586 Tokens per Sec: 24755.17318917285
Epoch Step: 285 / 819 Loss: 13.697202682495117 Tokens per Sec: 26235.935085198453
Epoch Step: 290 / 819 Loss: 15.6663236618042 Tokens per Sec: 26223.072085055668
Epoch Step: 295 / 819 Loss: 15.025838851928711 Tokens per Sec: 25931.733120959037
Epoch Step: 300 / 819 Loss: 132.59437561035156 Tokens per Sec: 25249.92957744121
Epoch Step: 305 / 819 Loss: 16.411148071289062 Tokens per Sec: 25401.3833152407
Epoch Step: 310 / 819 Loss: 18.235145568847656 Tokens per Sec: 27292.478645583116
Epoch Step: 315 / 819 Loss: 15.734109878540039 Tokens per Sec: 26035.25421321992
Epoch Step: 320 / 819 Loss: 19.511940002441406 Tokens per Sec: 26100.736254753527
Epoch Step: 325 / 819 Loss: 13.713475227355957 Tokens per Sec: 27974.98501547247
Epoch Step: 330 / 819 Loss: 167.87893676757812 Tokens per Sec: 24698.127306155777
Epoch Step: 335 / 819 Loss: 17.31138038635254 Tokens per Sec: 25799.052889233666
Epoch Step: 340 / 819 Loss: 12.937005996704102 Tokens per Sec: 26902.191289174116
Epoch Step: 345 / 819 Loss: 14.065169334411621 Tokens per Sec: 27246.678502699175
Epoch Step: 350 / 819 Loss: 15.832831382751465 Tokens per Sec: 26470.87095132981
Epoch Step: 355 / 819 Loss: 153.6599578857422 Tokens per Sec: 25417.96814931005
Epoch Step: 360 / 819 Loss: 16.916141510009766 Tokens per Sec: 27963.748776926146
Epoch Step: 365 / 819 Loss: 13.04085922241211 Tokens per Sec: 27672.163447501767
Epoch Step: 370 / 819 Loss: 20.626022338867188 Tokens per Sec: 26063.9279544415
Epoch Step: 375 / 819 Loss: 18.728788375854492 Tokens per Sec: 28932.423137982227
Epoch Step: 380 / 819 Loss: 12.348950386047363 Tokens per Sec: 27625.10909070734
Epoch Step: 385 / 819 Loss: 13.9949951171875 Tokens per Sec: 26160.699687825556
Epoch Step: 390 / 819 Loss: 20.369813919067383 Tokens per Sec: 27365.442423479555
Epoch Step: 395 / 819 Loss: 19.628925323486328 Tokens per Sec: 28135.338194496304
Epoch Step: 400 / 819 Loss: 12.358365058898926 Tokens per Sec: 28024.60466293254
Epoch Step: 405 / 819 Loss: 15.07676887512207 Tokens per Sec: 27874.43178480038
Epoch Step: 410 / 819 Loss: 14.333373069763184 Tokens per Sec: 27712.35085538193
Epoch Step: 415 / 819 Loss: 15.690683364868164 Tokens per Sec: 29304.186310998986
Epoch Step: 420 / 819 Loss: 15.202879905700684 Tokens per Sec: 27737.186351328168
Epoch Step: 425 / 819 Loss: 187.25357055664062 Tokens per Sec: 26768.205987454457
Epoch Step: 430 / 819 Loss: 12.799123764038086 Tokens per Sec: 26726.682162847996
Epoch Step: 435 / 819 Loss: 16.470396041870117 Tokens per Sec: 25849.091582387526
Epoch Step: 440 / 819 Loss: 19.384601593017578 Tokens per Sec: 24452.632800854677
Epoch Step: 445 / 819 Loss: 12.413568496704102 Tokens per Sec: 28622.47347002747
Epoch Step: 450 / 819 Loss: 17.105613708496094 Tokens per Sec: 22189.038976643016
Epoch Step: 455 / 819 Loss: 15.121562957763672 Tokens per Sec: 26384.447591261367
Epoch Step: 460 / 819 Loss: 12.765181541442871 Tokens per Sec: 28389.283491873848
Epoch Step: 465 / 819 Loss: 17.906166076660156 Tokens per Sec: 23396.469010103847
Epoch Step: 470 / 819 Loss: 13.791563987731934 Tokens per Sec: 25997.827661625695
Epoch Step: 475 / 819 Loss: 16.910655975341797 Tokens per Sec: 27835.07718928071
Epoch Step: 480 / 819 Loss: 15.631317138671875 Tokens per Sec: 28744.21988956132
Epoch Step: 485 / 819 Loss: 16.11728858947754 Tokens per Sec: 25196.570147312057
Epoch Step: 490 / 819 Loss: 14.327980041503906 Tokens per Sec: 23296.77338300011
Epoch Step: 495 / 819 Loss: 18.548938751220703 Tokens per Sec: 28451.115605511735
Epoch Step: 500 / 819 Loss: 11.303888320922852 Tokens per Sec: 29009.812153849634
Epoch Step: 505 / 819 Loss: 17.798912048339844 Tokens per Sec: 25025.891830342716
Epoch Step: 510 / 819 Loss: 14.624698638916016 Tokens per Sec: 25421.85088470293
Epoch Step: 515 / 819 Loss: 13.784384727478027 Tokens per Sec: 27760.055301687535
Epoch Step: 520 / 819 Loss: 12.589391708374023 Tokens per Sec: 26852.83708305889
Epoch Step: 525 / 819 Loss: 17.610700607299805 Tokens per Sec: 27580.934769405605
Epoch Step: 530 / 819 Loss: 13.423773765563965 Tokens per Sec: 26855.57393630222
Epoch Step: 535 / 819 Loss: 12.208147048950195 Tokens per Sec: 27123.125785512137
Epoch Step: 540 / 819 Loss: 15.926941871643066 Tokens per Sec: 26486.875407363634
Epoch Step: 545 / 819 Loss: 16.862476348876953 Tokens per Sec: 26940.186664953653
Epoch Step: 550 / 819 Loss: 21.137920379638672 Tokens per Sec: 26176.43693538377
Epoch Step: 555 / 819 Loss: 228.41696166992188 Tokens per Sec: 26486.220531626026
Epoch Step: 560 / 819 Loss: 17.42557144165039 Tokens per Sec: 26233.241269309914
Epoch Step: 565 / 819 Loss: 21.29994773864746 Tokens per Sec: 25598.86991726918
Epoch Step: 570 / 819 Loss: 13.692041397094727 Tokens per Sec: 28817.77262146709
Epoch Step: 575 / 819 Loss: 16.513479232788086 Tokens per Sec: 27392.22131724203
Epoch Step: 580 / 819 Loss: 15.355705261230469 Tokens per Sec: 27143.098910438734
Epoch Step: 585 / 819 Loss: 18.209354400634766 Tokens per Sec: 27203.136323781288
Epoch Step: 590 / 819 Loss: 17.88882064819336 Tokens per Sec: 25742.357963398452
Epoch Step: 595 / 819 Loss: 13.721534729003906 Tokens per Sec: 27289.812832818996
Epoch Step: 600 / 819 Loss: 17.080907821655273 Tokens per Sec: 27621.00451132487
Epoch Step: 605 / 819 Loss: 147.67137145996094 Tokens per Sec: 26002.319926679975
Epoch Step: 610 / 819 Loss: 15.557263374328613 Tokens per Sec: 27521.573209280712
Epoch Step: 615 / 819 Loss: 12.029879570007324 Tokens per Sec: 25408.032982299963
Epoch Step: 620 / 819 Loss: 20.920724868774414 Tokens per Sec: 24354.55515251291
Epoch Step: 625 / 819 Loss: 14.922694206237793 Tokens per Sec: 25876.795848051777
Epoch Step: 630 / 819 Loss: 14.061746597290039 Tokens per Sec: 28450.188117113277
Epoch Step: 635 / 819 Loss: 15.540184020996094 Tokens per Sec: 28964.056467932456
Epoch Step: 640 / 819 Loss: 20.039409637451172 Tokens per Sec: 28058.267743424934
Epoch Step: 645 / 819 Loss: 18.021303176879883 Tokens per Sec: 24996.912802724582
Epoch Step: 650 / 819 Loss: 14.492778778076172 Tokens per Sec: 28570.985974058538
Epoch Step: 655 / 819 Loss: 19.25909996032715 Tokens per Sec: 24799.738267014887
Epoch Step: 660 / 819 Loss: 12.772868156433105 Tokens per Sec: 25926.182460408443
Epoch Step: 665 / 819 Loss: 14.079968452453613 Tokens per Sec: 27778.065524973834
Epoch Step: 670 / 819 Loss: 18.464855194091797 Tokens per Sec: 27997.312360848195
Epoch Step: 675 / 819 Loss: 17.854459762573242 Tokens per Sec: 27546.547116886515
Epoch Step: 680 / 819 Loss: 18.587051391601562 Tokens per Sec: 24991.90118308634
Epoch Step: 685 / 819 Loss: 15.060925483703613 Tokens per Sec: 26691.1382826116
Epoch Step: 690 / 819 Loss: 17.123149871826172 Tokens per Sec: 27173.227060182864
Epoch Step: 695 / 819 Loss: 15.135022163391113 Tokens per Sec: 29233.912718818425
Epoch Step: 700 / 819 Loss: 17.674001693725586 Tokens per Sec: 24547.7513906493
Epoch Step: 705 / 819 Loss: 19.968908309936523 Tokens per Sec: 25044.88105296304
Epoch Step: 710 / 819 Loss: 18.231531143188477 Tokens per Sec: 28477.444151491418
Epoch Step: 715 / 819 Loss: 17.374771118164062 Tokens per Sec: 28063.23834594713
Epoch Step: 720 / 819 Loss: 18.249509811401367 Tokens per Sec: 23935.927188650156
Epoch Step: 725 / 819 Loss: 15.560117721557617 Tokens per Sec: 24039.641729242365
Epoch Step: 730 / 819 Loss: 14.179036140441895 Tokens per Sec: 23275.01180100177
Epoch Step: 735 / 819 Loss: 16.415058135986328 Tokens per Sec: 26054.299014284145
Epoch Step: 740 / 819 Loss: 196.08627319335938 Tokens per Sec: 24094.08295670059
Epoch Step: 745 / 819 Loss: 15.637527465820312 Tokens per Sec: 26487.874094145613
Epoch Step: 750 / 819 Loss: 78.54138946533203 Tokens per Sec: 27583.73448693362
Epoch Step: 755 / 819 Loss: 14.704276084899902 Tokens per Sec: 27513.49331189807
Epoch Step: 760 / 819 Loss: 16.73625946044922 Tokens per Sec: 25409.76149912342
Epoch Step: 765 / 819 Loss: 13.983343124389648 Tokens per Sec: 24959.18245595478
Epoch Step: 770 / 819 Loss: 18.260385513305664 Tokens per Sec: 26762.780008752736
Epoch Step: 775 / 819 Loss: 13.913039207458496 Tokens per Sec: 28521.684241936306
Epoch Step: 780 / 819 Loss: 15.496109008789062 Tokens per Sec: 24383.718644562425
Epoch Step: 785 / 819 Loss: 16.87700080871582 Tokens per Sec: 27110.373605196615
Epoch Step: 790 / 819 Loss: 132.9832000732422 Tokens per Sec: 25442.597066442475
Epoch Step: 795 / 819 Loss: 16.2734375 Tokens per Sec: 26110.222106906407
Epoch Step: 800 / 819 Loss: 16.810077667236328 Tokens per Sec: 27101.04118782616
Epoch Step: 805 / 819 Loss: 18.543684005737305 Tokens per Sec: 23626.28188567492
Epoch Step: 810 / 819 Loss: 98.5284652709961 Tokens per Sec: 23362.741191904093
Epoch Step: 815 / 819 Loss: 19.948041915893555 Tokens per Sec: 25496.61833478214
Epoch ended with duration 0:02:26.722429
Train perplexity: 1.5360024378785984
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.225278
Validation perplexity: 1.5321142148351412
Epoch 48 / 1000
Epoch Step: 5 / 819 Loss: 17.864774703979492 Tokens per Sec: 25941.50319706927
Epoch Step: 10 / 819 Loss: 15.641729354858398 Tokens per Sec: 26269.97728091747
Epoch Step: 15 / 819 Loss: 17.087011337280273 Tokens per Sec: 26081.480639937774
Epoch Step: 20 / 819 Loss: 17.90346908569336 Tokens per Sec: 24433.84574764204
Epoch Step: 25 / 819 Loss: 15.812600135803223 Tokens per Sec: 24967.460420306837
Epoch Step: 30 / 819 Loss: 18.069625854492188 Tokens per Sec: 25298.97489985133
Epoch Step: 35 / 819 Loss: 17.622652053833008 Tokens per Sec: 23010.064732197185
Epoch Step: 40 / 819 Loss: 12.527399063110352 Tokens per Sec: 27275.046899287023
Epoch Step: 45 / 819 Loss: 13.964627265930176 Tokens per Sec: 26264.49434558328
Epoch Step: 50 / 819 Loss: 14.545326232910156 Tokens per Sec: 26168.1765962344
Epoch Step: 55 / 819 Loss: 12.89498233795166 Tokens per Sec: 27573.12929944716
Epoch Step: 60 / 819 Loss: 14.125036239624023 Tokens per Sec: 26819.649400052807
Epoch Step: 65 / 819 Loss: 16.622116088867188 Tokens per Sec: 24888.53287572497
Epoch Step: 70 / 819 Loss: 12.142924308776855 Tokens per Sec: 25279.930806199984
Epoch Step: 75 / 819 Loss: 10.130380630493164 Tokens per Sec: 29113.749336515433
Epoch Step: 80 / 819 Loss: 126.92544555664062 Tokens per Sec: 26251.01106967576
Epoch Step: 85 / 819 Loss: 17.634708404541016 Tokens per Sec: 25246.775457329
Epoch Step: 90 / 819 Loss: 17.325973510742188 Tokens per Sec: 26382.164680707734
Epoch Step: 95 / 819 Loss: 19.169315338134766 Tokens per Sec: 25059.87762146682
Epoch Step: 100 / 819 Loss: 18.65799331665039 Tokens per Sec: 25237.55637752808
Epoch Step: 105 / 819 Loss: 13.488706588745117 Tokens per Sec: 27775.874338803016
Epoch Step: 110 / 819 Loss: 20.21774673461914 Tokens per Sec: 27318.280905446885
Epoch Step: 115 / 819 Loss: 20.069562911987305 Tokens per Sec: 25944.223699860442
Epoch Step: 120 / 819 Loss: 18.215221405029297 Tokens per Sec: 27569.991469275454
Epoch Step: 125 / 819 Loss: 12.323769569396973 Tokens per Sec: 25380.08505209345
Epoch Step: 130 / 819 Loss: 20.419754028320312 Tokens per Sec: 27084.979526389623
Epoch Step: 135 / 819 Loss: 13.089609146118164 Tokens per Sec: 25946.090472943863
Epoch Step: 140 / 819 Loss: 17.58415412902832 Tokens per Sec: 24968.916906292412
Epoch Step: 145 / 819 Loss: 208.2076873779297 Tokens per Sec: 24985.447371046874
Epoch Step: 150 / 819 Loss: 12.399869918823242 Tokens per Sec: 25563.71383998217
Epoch Step: 155 / 819 Loss: 217.31919860839844 Tokens per Sec: 23852.674466711207
Epoch Step: 160 / 819 Loss: 16.450082778930664 Tokens per Sec: 27113.293322230216
Epoch Step: 165 / 819 Loss: 23.223526000976562 Tokens per Sec: 25386.246368455544
Epoch Step: 170 / 819 Loss: 17.4920654296875 Tokens per Sec: 24680.85344786394
Epoch Step: 175 / 819 Loss: 17.55143165588379 Tokens per Sec: 26691.920635418574
Epoch Step: 180 / 819 Loss: 18.0737247467041 Tokens per Sec: 26630.674461126015
Epoch Step: 185 / 819 Loss: 19.622516632080078 Tokens per Sec: 27176.094864830986
Epoch Step: 190 / 819 Loss: 15.953987121582031 Tokens per Sec: 28215.634106492875
Epoch Step: 195 / 819 Loss: 17.179107666015625 Tokens per Sec: 24404.164106294855
Epoch Step: 200 / 819 Loss: 201.82083129882812 Tokens per Sec: 25458.966455252987
Epoch Step: 205 / 819 Loss: 14.680681228637695 Tokens per Sec: 23549.14841561005
Epoch Step: 210 / 819 Loss: 16.519145965576172 Tokens per Sec: 23780.080081715456
Epoch Step: 215 / 819 Loss: 19.05893325805664 Tokens per Sec: 24866.62084524027
Epoch Step: 220 / 819 Loss: 14.21202278137207 Tokens per Sec: 27286.371526800045
Epoch Step: 225 / 819 Loss: 13.792500495910645 Tokens per Sec: 25647.892161131054
Epoch Step: 230 / 819 Loss: 17.709619522094727 Tokens per Sec: 23594.605263611997
Epoch Step: 235 / 819 Loss: 21.69037628173828 Tokens per Sec: 25719.604103561247
Epoch Step: 240 / 819 Loss: 19.79587173461914 Tokens per Sec: 26750.472447780747
Epoch Step: 245 / 819 Loss: 18.250410079956055 Tokens per Sec: 27196.631018594264
Epoch Step: 250 / 819 Loss: 15.696513175964355 Tokens per Sec: 26488.42055598402
Epoch Step: 255 / 819 Loss: 13.182805061340332 Tokens per Sec: 27278.328295876665
Epoch Step: 260 / 819 Loss: 13.741787910461426 Tokens per Sec: 28728.876048448332
Epoch Step: 265 / 819 Loss: 12.26601791381836 Tokens per Sec: 27128.89973347022
Epoch Step: 270 / 819 Loss: 12.208205223083496 Tokens per Sec: 28054.650421229413
Epoch Step: 275 / 819 Loss: 16.22899627685547 Tokens per Sec: 25159.17551274399
Epoch Step: 280 / 819 Loss: 20.0334415435791 Tokens per Sec: 26175.610654112945
Epoch Step: 285 / 819 Loss: 18.002790451049805 Tokens per Sec: 27032.279566071975
Epoch Step: 290 / 819 Loss: 14.170321464538574 Tokens per Sec: 26223.73574552344
Epoch Step: 295 / 819 Loss: 20.184738159179688 Tokens per Sec: 28082.21003164449
Epoch Step: 300 / 819 Loss: 14.514211654663086 Tokens per Sec: 27048.920470081175
Epoch Step: 305 / 819 Loss: 18.388046264648438 Tokens per Sec: 24334.467489655555
Epoch Step: 310 / 819 Loss: 16.403160095214844 Tokens per Sec: 26568.746461157094
Epoch Step: 315 / 819 Loss: 165.60757446289062 Tokens per Sec: 26251.844016299245
Epoch Step: 320 / 819 Loss: 19.471708297729492 Tokens per Sec: 26868.5388527975
Epoch Step: 325 / 819 Loss: 20.49978256225586 Tokens per Sec: 27093.635552884043
Epoch Step: 330 / 819 Loss: 164.97930908203125 Tokens per Sec: 27886.900604115835
Epoch Step: 335 / 819 Loss: 15.045827865600586 Tokens per Sec: 26368.64485118537
Epoch Step: 340 / 819 Loss: 16.760047912597656 Tokens per Sec: 25625.2699188919
Epoch Step: 345 / 819 Loss: 16.993791580200195 Tokens per Sec: 24634.668141137467
Epoch Step: 350 / 819 Loss: 15.401391983032227 Tokens per Sec: 25746.42159870368
Epoch Step: 355 / 819 Loss: 14.10326862335205 Tokens per Sec: 24867.320421232092
Epoch Step: 360 / 819 Loss: 17.263492584228516 Tokens per Sec: 25154.64255223689
Epoch Step: 365 / 819 Loss: 17.599084854125977 Tokens per Sec: 26035.301826274597
Epoch Step: 370 / 819 Loss: 16.403018951416016 Tokens per Sec: 29387.137846374742
Epoch Step: 375 / 819 Loss: 11.400606155395508 Tokens per Sec: 27614.287128670712
Epoch Step: 380 / 819 Loss: 18.847675323486328 Tokens per Sec: 25950.65672986932
Epoch Step: 385 / 819 Loss: 15.251822471618652 Tokens per Sec: 24092.450893755104
Epoch Step: 390 / 819 Loss: 13.171957969665527 Tokens per Sec: 27572.613406761928
Epoch Step: 395 / 819 Loss: 16.074472427368164 Tokens per Sec: 30017.328394493205
Epoch Step: 400 / 819 Loss: 9.453933715820312 Tokens per Sec: 27938.19569172148
Epoch Step: 405 / 819 Loss: 12.088164329528809 Tokens per Sec: 28030.307357377726
Epoch Step: 410 / 819 Loss: 19.930084228515625 Tokens per Sec: 27340.406135821297
Epoch Step: 415 / 819 Loss: 13.014324188232422 Tokens per Sec: 26856.363811527553
Epoch Step: 420 / 819 Loss: 18.63559913635254 Tokens per Sec: 26318.085687016173
Epoch Step: 425 / 819 Loss: 12.380664825439453 Tokens per Sec: 26036.302558869542
Epoch Step: 430 / 819 Loss: 18.438518524169922 Tokens per Sec: 27378.69351956488
Epoch Step: 435 / 819 Loss: 17.613388061523438 Tokens per Sec: 28914.437755769282
Epoch Step: 440 / 819 Loss: 17.8299503326416 Tokens per Sec: 25786.45530902944
Epoch Step: 445 / 819 Loss: 15.669123649597168 Tokens per Sec: 26972.977404012217
Epoch Step: 450 / 819 Loss: 19.33175277709961 Tokens per Sec: 27863.851528036063
Epoch Step: 455 / 819 Loss: 14.470237731933594 Tokens per Sec: 25496.245432479154
Epoch Step: 460 / 819 Loss: 16.799556732177734 Tokens per Sec: 27783.229854803012
Epoch Step: 465 / 819 Loss: 13.408205032348633 Tokens per Sec: 26022.63199688828
Epoch Step: 470 / 819 Loss: 13.080490112304688 Tokens per Sec: 25884.9425125763
Epoch Step: 475 / 819 Loss: 18.078184127807617 Tokens per Sec: 27366.905634525585
Epoch Step: 480 / 819 Loss: 234.54563903808594 Tokens per Sec: 24880.35918799715
Epoch Step: 485 / 819 Loss: 17.21295738220215 Tokens per Sec: 24489.91967092283
Epoch Step: 490 / 819 Loss: 17.816070556640625 Tokens per Sec: 25792.99451648004
Epoch Step: 495 / 819 Loss: 197.47198486328125 Tokens per Sec: 26455.72912025793
Epoch Step: 500 / 819 Loss: 162.27545166015625 Tokens per Sec: 27026.355111560475
Epoch Step: 505 / 819 Loss: 15.064520835876465 Tokens per Sec: 27143.494636035346
Epoch Step: 510 / 819 Loss: 20.27682876586914 Tokens per Sec: 25424.044945151043
Epoch Step: 515 / 819 Loss: 114.81180572509766 Tokens per Sec: 25337.21534153806
Epoch Step: 520 / 819 Loss: 20.87123680114746 Tokens per Sec: 27904.37858435624
Epoch Step: 525 / 819 Loss: 18.016202926635742 Tokens per Sec: 25655.428583471883
Epoch Step: 530 / 819 Loss: 15.699820518493652 Tokens per Sec: 27539.062818703253
Epoch Step: 535 / 819 Loss: 16.96042823791504 Tokens per Sec: 25045.488247256322
Epoch Step: 540 / 819 Loss: 17.191909790039062 Tokens per Sec: 26396.893207337318
Epoch Step: 545 / 819 Loss: 15.15031909942627 Tokens per Sec: 27129.538845062238
Epoch Step: 550 / 819 Loss: 18.586952209472656 Tokens per Sec: 26551.66276453009
Epoch Step: 555 / 819 Loss: 17.85489845275879 Tokens per Sec: 27951.30463503554
Epoch Step: 560 / 819 Loss: 197.52415466308594 Tokens per Sec: 26733.02935769798
Epoch Step: 565 / 819 Loss: 15.19649887084961 Tokens per Sec: 27939.419593269817
Epoch Step: 570 / 819 Loss: 23.926755905151367 Tokens per Sec: 27596.812328877077
Epoch Step: 575 / 819 Loss: 19.060867309570312 Tokens per Sec: 25744.85550507339
Epoch Step: 580 / 819 Loss: 17.75516700744629 Tokens per Sec: 26922.43866026505
Epoch Step: 585 / 819 Loss: 84.54450225830078 Tokens per Sec: 24958.758204341393
Epoch Step: 590 / 819 Loss: 15.272674560546875 Tokens per Sec: 28512.58915053558
Epoch Step: 595 / 819 Loss: 17.77103614807129 Tokens per Sec: 25555.772238187914
Epoch Step: 600 / 819 Loss: 15.709491729736328 Tokens per Sec: 27242.658151602016
Epoch Step: 605 / 819 Loss: 19.521377563476562 Tokens per Sec: 24749.15563025946
Epoch Step: 610 / 819 Loss: 14.466238975524902 Tokens per Sec: 25931.63407443131
Epoch Step: 615 / 819 Loss: 15.271980285644531 Tokens per Sec: 25644.875606391284
Epoch Step: 620 / 819 Loss: 15.378681182861328 Tokens per Sec: 26425.365170198813
Epoch Step: 625 / 819 Loss: 126.93876647949219 Tokens per Sec: 26189.22822887501
Epoch Step: 630 / 819 Loss: 13.697141647338867 Tokens per Sec: 27082.392618675047
Epoch Step: 635 / 819 Loss: 19.619335174560547 Tokens per Sec: 26959.203067580806
Epoch Step: 640 / 819 Loss: 17.27695083618164 Tokens per Sec: 27720.145600326978
Epoch Step: 645 / 819 Loss: 14.244959831237793 Tokens per Sec: 27454.83889176827
Epoch Step: 650 / 819 Loss: 15.801288604736328 Tokens per Sec: 24992.487287061565
Epoch Step: 655 / 819 Loss: 13.973678588867188 Tokens per Sec: 28318.018740163672
Epoch Step: 660 / 819 Loss: 18.58829116821289 Tokens per Sec: 26836.911623466152
Epoch Step: 665 / 819 Loss: 20.88417625427246 Tokens per Sec: 26611.57572605163
Epoch Step: 670 / 819 Loss: 15.046478271484375 Tokens per Sec: 24861.375941377864
Epoch Step: 675 / 819 Loss: 14.237724304199219 Tokens per Sec: 29397.56564400938
Epoch Step: 680 / 819 Loss: 18.60931396484375 Tokens per Sec: 25040.889891739687
Epoch Step: 685 / 819 Loss: 14.408431053161621 Tokens per Sec: 27795.09583327419
Epoch Step: 690 / 819 Loss: 17.106399536132812 Tokens per Sec: 27753.717228025955
Epoch Step: 695 / 819 Loss: 15.370301246643066 Tokens per Sec: 26916.6664795515
Epoch Step: 700 / 819 Loss: 11.9833345413208 Tokens per Sec: 26247.525170686884
Epoch Step: 705 / 819 Loss: 15.100521087646484 Tokens per Sec: 24093.113920562904
Epoch Step: 710 / 819 Loss: 13.183392524719238 Tokens per Sec: 27710.470621310094
Epoch Step: 715 / 819 Loss: 21.147077560424805 Tokens per Sec: 23395.201532599247
Epoch Step: 720 / 819 Loss: 19.587255477905273 Tokens per Sec: 26886.133693669388
Epoch Step: 725 / 819 Loss: 17.728971481323242 Tokens per Sec: 27930.491817271108
Epoch Step: 730 / 819 Loss: 14.914621353149414 Tokens per Sec: 25447.04271994559
Epoch Step: 735 / 819 Loss: 19.63468360900879 Tokens per Sec: 27627.063615736206
Epoch Step: 740 / 819 Loss: 19.0864315032959 Tokens per Sec: 28309.14164681449
Epoch Step: 745 / 819 Loss: 185.1283416748047 Tokens per Sec: 26552.73405324327
Epoch Step: 750 / 819 Loss: 16.673978805541992 Tokens per Sec: 25747.18028970506
Epoch Step: 755 / 819 Loss: 20.55060577392578 Tokens per Sec: 26655.11832910992
Epoch Step: 760 / 819 Loss: 14.189325332641602 Tokens per Sec: 26369.017916046196
Epoch Step: 765 / 819 Loss: 17.578584671020508 Tokens per Sec: 27084.09555914953
Epoch Step: 770 / 819 Loss: 20.011730194091797 Tokens per Sec: 27520.732986824107
Epoch Step: 775 / 819 Loss: 15.895681381225586 Tokens per Sec: 25759.15717477354
Epoch Step: 780 / 819 Loss: 15.788057327270508 Tokens per Sec: 23973.458515755792
Epoch Step: 785 / 819 Loss: 17.27273178100586 Tokens per Sec: 28746.74648622102
Epoch Step: 790 / 819 Loss: 14.005059242248535 Tokens per Sec: 24796.510548496237
Epoch Step: 795 / 819 Loss: 19.244863510131836 Tokens per Sec: 28764.70936254167
Epoch Step: 800 / 819 Loss: 11.68864631652832 Tokens per Sec: 26048.92711860004
Epoch Step: 805 / 819 Loss: 16.118446350097656 Tokens per Sec: 25111.962982480698
Epoch Step: 810 / 819 Loss: 15.522443771362305 Tokens per Sec: 23524.927583261186
Epoch Step: 815 / 819 Loss: 15.844399452209473 Tokens per Sec: 21094.504044398825
Epoch ended with duration 0:02:27.738768
Train perplexity: 1.5568529932335398
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.073431
Validation perplexity: 1.5644146768378155
Epoch 49 / 1000
Epoch Step: 5 / 819 Loss: 19.15518569946289 Tokens per Sec: 26941.180517216882
Epoch Step: 10 / 819 Loss: 18.415916442871094 Tokens per Sec: 26089.92800965963
Epoch Step: 15 / 819 Loss: 18.921707153320312 Tokens per Sec: 24985.326680078328
Epoch Step: 20 / 819 Loss: 12.982864379882812 Tokens per Sec: 27466.4813539904
Epoch Step: 25 / 819 Loss: 16.594507217407227 Tokens per Sec: 27414.015722283366
Epoch Step: 30 / 819 Loss: 13.747149467468262 Tokens per Sec: 25410.763679017495
Epoch Step: 35 / 819 Loss: 15.68338394165039 Tokens per Sec: 24624.009233287357
Epoch Step: 40 / 819 Loss: 13.294276237487793 Tokens per Sec: 26869.129655749835
Epoch Step: 45 / 819 Loss: 206.3949432373047 Tokens per Sec: 25159.474723201518
Epoch Step: 50 / 819 Loss: 18.30934715270996 Tokens per Sec: 28906.97160368241
Epoch Step: 55 / 819 Loss: 13.655543327331543 Tokens per Sec: 29052.19842723531
Epoch Step: 60 / 819 Loss: 18.771347045898438 Tokens per Sec: 27224.936040532353
Epoch Step: 65 / 819 Loss: 16.608400344848633 Tokens per Sec: 23250.125923277883
Epoch Step: 70 / 819 Loss: 16.450929641723633 Tokens per Sec: 25051.73323760437
Epoch Step: 75 / 819 Loss: 16.916011810302734 Tokens per Sec: 27285.808040894623
Epoch Step: 80 / 819 Loss: 12.579627990722656 Tokens per Sec: 27526.448225280903
Epoch Step: 85 / 819 Loss: 14.611481666564941 Tokens per Sec: 27467.01562965291
Epoch Step: 90 / 819 Loss: 18.462268829345703 Tokens per Sec: 26347.99586211415
Epoch Step: 95 / 819 Loss: 16.612342834472656 Tokens per Sec: 28178.21215946682
Epoch Step: 100 / 819 Loss: 14.934195518493652 Tokens per Sec: 26626.558411465943
Epoch Step: 105 / 819 Loss: 13.540448188781738 Tokens per Sec: 25474.154625043735
Epoch Step: 110 / 819 Loss: 14.730816841125488 Tokens per Sec: 23480.45890464001
Epoch Step: 115 / 819 Loss: 17.948810577392578 Tokens per Sec: 28460.692469094058
Epoch Step: 120 / 819 Loss: 13.930327415466309 Tokens per Sec: 25372.032967917417
Epoch Step: 125 / 819 Loss: 242.7972869873047 Tokens per Sec: 27326.967318643987
Epoch Step: 130 / 819 Loss: 22.864974975585938 Tokens per Sec: 26587.57553772328
Epoch Step: 135 / 819 Loss: 24.969837188720703 Tokens per Sec: 27511.994724312754
Epoch Step: 140 / 819 Loss: 21.1312313079834 Tokens per Sec: 25847.862082495823
Epoch Step: 145 / 819 Loss: 20.837732315063477 Tokens per Sec: 27952.541795714238
Epoch Step: 150 / 819 Loss: 15.62448501586914 Tokens per Sec: 28424.759864678443
Epoch Step: 155 / 819 Loss: 20.735721588134766 Tokens per Sec: 26792.997996918963
Epoch Step: 160 / 819 Loss: 18.823759078979492 Tokens per Sec: 27805.796503886006
Epoch Step: 165 / 819 Loss: 14.002190589904785 Tokens per Sec: 26885.23066591326
Epoch Step: 170 / 819 Loss: 14.810508728027344 Tokens per Sec: 28415.709762420673
Epoch Step: 175 / 819 Loss: 13.328689575195312 Tokens per Sec: 26234.832112236945
Epoch Step: 180 / 819 Loss: 18.320650100708008 Tokens per Sec: 24051.23074863704
Epoch Step: 185 / 819 Loss: 14.666311264038086 Tokens per Sec: 26339.55475384064
Epoch Step: 190 / 819 Loss: 12.702101707458496 Tokens per Sec: 26398.995925854157
Epoch Step: 195 / 819 Loss: 12.348367691040039 Tokens per Sec: 25171.486671166953
Epoch Step: 200 / 819 Loss: 15.03139591217041 Tokens per Sec: 25737.667049786825
Epoch Step: 205 / 819 Loss: 15.453155517578125 Tokens per Sec: 27605.803806201056
Epoch Step: 210 / 819 Loss: 16.62627410888672 Tokens per Sec: 27014.618457752324
Epoch Step: 215 / 819 Loss: 19.212984085083008 Tokens per Sec: 25165.085313362684
Epoch Step: 220 / 819 Loss: 14.355356216430664 Tokens per Sec: 27649.779660001197
Epoch Step: 225 / 819 Loss: 13.989521026611328 Tokens per Sec: 28282.14399917161
Epoch Step: 230 / 819 Loss: 16.696428298950195 Tokens per Sec: 28043.596888342985
Epoch Step: 235 / 819 Loss: 17.26110076904297 Tokens per Sec: 29431.263574209934
Epoch Step: 240 / 819 Loss: 21.30048179626465 Tokens per Sec: 28112.188598451874
Epoch Step: 245 / 819 Loss: 15.09933853149414 Tokens per Sec: 26385.02186986621
Epoch Step: 250 / 819 Loss: 15.365143775939941 Tokens per Sec: 27570.822139019267
Epoch Step: 255 / 819 Loss: 21.95523452758789 Tokens per Sec: 25595.256458373806
Epoch Step: 260 / 819 Loss: 17.140649795532227 Tokens per Sec: 25161.726136216854
Epoch Step: 265 / 819 Loss: 21.044204711914062 Tokens per Sec: 25645.363181466215
Epoch Step: 270 / 819 Loss: 20.3597354888916 Tokens per Sec: 25044.390420650787
Epoch Step: 275 / 819 Loss: 20.791589736938477 Tokens per Sec: 28905.762879758622
Epoch Step: 280 / 819 Loss: 14.776445388793945 Tokens per Sec: 26463.932273386956
Epoch Step: 285 / 819 Loss: 16.7646484375 Tokens per Sec: 27339.34039004615
Epoch Step: 290 / 819 Loss: 18.232072830200195 Tokens per Sec: 27176.287048085534
Epoch Step: 295 / 819 Loss: 16.94956398010254 Tokens per Sec: 25397.64718008052
Epoch Step: 300 / 819 Loss: 16.06682586669922 Tokens per Sec: 26430.97390789158
Epoch Step: 305 / 819 Loss: 15.464056015014648 Tokens per Sec: 26303.671766096813
Epoch Step: 310 / 819 Loss: 20.001243591308594 Tokens per Sec: 25165.721337426257
Epoch Step: 315 / 819 Loss: 15.271174430847168 Tokens per Sec: 26801.46797494463
Epoch Step: 320 / 819 Loss: 21.41143798828125 Tokens per Sec: 26351.05381805648
Epoch Step: 325 / 819 Loss: 16.3673152923584 Tokens per Sec: 27163.4024905891
Epoch Step: 330 / 819 Loss: 12.289312362670898 Tokens per Sec: 27265.337683886
Epoch Step: 335 / 819 Loss: 19.938133239746094 Tokens per Sec: 26397.401871776034
Epoch Step: 340 / 819 Loss: 18.27511215209961 Tokens per Sec: 26286.511699799736
Epoch Step: 345 / 819 Loss: 13.896650314331055 Tokens per Sec: 27637.709552482364
Epoch Step: 350 / 819 Loss: 13.36899471282959 Tokens per Sec: 26472.711534745926
Epoch Step: 355 / 819 Loss: 17.996505737304688 Tokens per Sec: 26808.432012819067
Epoch Step: 360 / 819 Loss: 18.42040252685547 Tokens per Sec: 27079.421152289182
Epoch Step: 365 / 819 Loss: 17.89115333557129 Tokens per Sec: 27014.557967477074
Epoch Step: 370 / 819 Loss: 13.906011581420898 Tokens per Sec: 28548.0361750751
Epoch Step: 375 / 819 Loss: 15.521462440490723 Tokens per Sec: 25830.351623029244
Epoch Step: 380 / 819 Loss: 15.242916107177734 Tokens per Sec: 26837.77104108412
Epoch Step: 385 / 819 Loss: 270.8556213378906 Tokens per Sec: 25397.358428633353
Epoch Step: 390 / 819 Loss: 12.32396125793457 Tokens per Sec: 28403.612187223192
Epoch Step: 395 / 819 Loss: 15.381016731262207 Tokens per Sec: 25849.329115357476
Epoch Step: 400 / 819 Loss: 12.073356628417969 Tokens per Sec: 25181.21727736315
Epoch Step: 405 / 819 Loss: 17.719310760498047 Tokens per Sec: 25945.183138969707
Epoch Step: 410 / 819 Loss: 16.919361114501953 Tokens per Sec: 25288.358443881352
Epoch Step: 415 / 819 Loss: 18.99021339416504 Tokens per Sec: 26543.709420936928
Epoch Step: 420 / 819 Loss: 21.01031494140625 Tokens per Sec: 28033.92159512563
Epoch Step: 425 / 819 Loss: 21.176898956298828 Tokens per Sec: 27726.629822243176
Epoch Step: 430 / 819 Loss: 16.810245513916016 Tokens per Sec: 26586.27438820549
Epoch Step: 435 / 819 Loss: 18.542327880859375 Tokens per Sec: 28624.692856269383
Epoch Step: 440 / 819 Loss: 15.606536865234375 Tokens per Sec: 28586.039781609932
Epoch Step: 445 / 819 Loss: 9.172237396240234 Tokens per Sec: 26717.20110318211
Epoch Step: 450 / 819 Loss: 15.609480857849121 Tokens per Sec: 26177.794607757023
Epoch Step: 455 / 819 Loss: 15.341445922851562 Tokens per Sec: 26086.591105680567
Epoch Step: 460 / 819 Loss: 160.90699768066406 Tokens per Sec: 27223.026529162642
Epoch Step: 465 / 819 Loss: 15.189580917358398 Tokens per Sec: 24710.75671021641
Epoch Step: 470 / 819 Loss: 101.9523696899414 Tokens per Sec: 25953.936178213236
Epoch Step: 475 / 819 Loss: 18.752471923828125 Tokens per Sec: 24263.758748783177
Epoch Step: 480 / 819 Loss: 16.183929443359375 Tokens per Sec: 25467.266111020846
Epoch Step: 485 / 819 Loss: 17.7005615234375 Tokens per Sec: 27794.764308920854
Epoch Step: 490 / 819 Loss: 16.08397674560547 Tokens per Sec: 27960.982692732585
Epoch Step: 495 / 819 Loss: 20.15771484375 Tokens per Sec: 26388.282922354083
Epoch Step: 500 / 819 Loss: 22.65086555480957 Tokens per Sec: 26160.732952544324
Epoch Step: 505 / 819 Loss: 12.196603775024414 Tokens per Sec: 24304.569655341067
Epoch Step: 510 / 819 Loss: 17.079816818237305 Tokens per Sec: 24594.46123458032
Epoch Step: 515 / 819 Loss: 17.751428604125977 Tokens per Sec: 28103.275515060563
Epoch Step: 520 / 819 Loss: 18.27833366394043 Tokens per Sec: 24823.545635026832
Epoch Step: 525 / 819 Loss: 14.906227111816406 Tokens per Sec: 26170.500854725593
Epoch Step: 530 / 819 Loss: 13.663628578186035 Tokens per Sec: 26607.743987219073
Epoch Step: 535 / 819 Loss: 16.529050827026367 Tokens per Sec: 27172.8664265507
Epoch Step: 540 / 819 Loss: 15.692911148071289 Tokens per Sec: 24946.920372815093
Epoch Step: 545 / 819 Loss: 16.53838539123535 Tokens per Sec: 25679.32465053552
Epoch Step: 550 / 819 Loss: 15.852273941040039 Tokens per Sec: 25458.280327252607
Epoch Step: 555 / 819 Loss: 14.109813690185547 Tokens per Sec: 27413.635883465326
Epoch Step: 560 / 819 Loss: 18.072805404663086 Tokens per Sec: 27474.95118648682
Epoch Step: 565 / 819 Loss: 15.02916145324707 Tokens per Sec: 27458.62874739777
Epoch Step: 570 / 819 Loss: 16.393836975097656 Tokens per Sec: 27497.950075583445
Epoch Step: 575 / 819 Loss: 17.52529525756836 Tokens per Sec: 27881.062820651452
Epoch Step: 580 / 819 Loss: 13.057872772216797 Tokens per Sec: 26612.269406248684
Epoch Step: 585 / 819 Loss: 17.164443969726562 Tokens per Sec: 26764.007502239856
Epoch Step: 590 / 819 Loss: 11.311075210571289 Tokens per Sec: 27094.706487700787
Epoch Step: 595 / 819 Loss: 14.301612854003906 Tokens per Sec: 28440.16408785943
Epoch Step: 600 / 819 Loss: 16.101486206054688 Tokens per Sec: 26646.43249276122
Epoch Step: 605 / 819 Loss: 11.921448707580566 Tokens per Sec: 27169.504712822363
Epoch Step: 610 / 819 Loss: 13.12704849243164 Tokens per Sec: 25943.967023966703
Epoch Step: 615 / 819 Loss: 17.30328941345215 Tokens per Sec: 25886.353021376053
Epoch Step: 620 / 819 Loss: 19.065826416015625 Tokens per Sec: 25313.670577108784
Epoch Step: 625 / 819 Loss: 14.340203285217285 Tokens per Sec: 28453.47576975915
Epoch Step: 630 / 819 Loss: 12.479208946228027 Tokens per Sec: 27684.661025434507
Epoch Step: 635 / 819 Loss: 18.342641830444336 Tokens per Sec: 27489.130440444074
Epoch Step: 640 / 819 Loss: 113.9041748046875 Tokens per Sec: 27445.304191265142
Epoch Step: 645 / 819 Loss: 19.036975860595703 Tokens per Sec: 28443.445835856277
Epoch Step: 650 / 819 Loss: 17.212093353271484 Tokens per Sec: 26515.971817317797
Epoch Step: 655 / 819 Loss: 16.119537353515625 Tokens per Sec: 25300.746226298023
Epoch Step: 660 / 819 Loss: 17.06833267211914 Tokens per Sec: 25993.41556200622
Epoch Step: 665 / 819 Loss: 10.920256614685059 Tokens per Sec: 28147.69479856589
Epoch Step: 670 / 819 Loss: 17.799394607543945 Tokens per Sec: 29150.908353900428
Epoch Step: 675 / 819 Loss: 17.736812591552734 Tokens per Sec: 26141.790339084717
Epoch Step: 680 / 819 Loss: 16.25750732421875 Tokens per Sec: 26007.414411053258
Epoch Step: 685 / 819 Loss: 147.52835083007812 Tokens per Sec: 25809.101334726383
Epoch Step: 690 / 819 Loss: 19.991474151611328 Tokens per Sec: 27724.14486809771
Epoch Step: 695 / 819 Loss: 192.47042846679688 Tokens per Sec: 23744.820371607657
Epoch Step: 700 / 819 Loss: 24.772615432739258 Tokens per Sec: 27601.674063959017
Epoch Step: 705 / 819 Loss: 25.02560043334961 Tokens per Sec: 26821.865807287464
Epoch Step: 710 / 819 Loss: 20.976964950561523 Tokens per Sec: 23160.205585599135
Epoch Step: 715 / 819 Loss: 159.0487518310547 Tokens per Sec: 27692.927683407073
Epoch Step: 720 / 819 Loss: 16.583480834960938 Tokens per Sec: 26749.71457319142
Epoch Step: 725 / 819 Loss: 14.089473724365234 Tokens per Sec: 27733.499856738494
Epoch Step: 730 / 819 Loss: 13.05994701385498 Tokens per Sec: 26705.017966503627
Epoch Step: 735 / 819 Loss: 128.9364013671875 Tokens per Sec: 27478.737182253433
Epoch Step: 740 / 819 Loss: 13.969831466674805 Tokens per Sec: 29459.713364631094
Epoch Step: 745 / 819 Loss: 12.255672454833984 Tokens per Sec: 27207.555044774705
Epoch Step: 750 / 819 Loss: 19.527435302734375 Tokens per Sec: 26294.743644851744
Epoch Step: 755 / 819 Loss: 20.033367156982422 Tokens per Sec: 26887.41707167288
Epoch Step: 760 / 819 Loss: 17.692712783813477 Tokens per Sec: 25809.247070047928
Epoch Step: 765 / 819 Loss: 15.296838760375977 Tokens per Sec: 25948.94436573245
Epoch Step: 770 / 819 Loss: 17.52223777770996 Tokens per Sec: 25020.01070608696
Epoch Step: 775 / 819 Loss: 17.432029724121094 Tokens per Sec: 28333.23996560928
Epoch Step: 780 / 819 Loss: 17.84724235534668 Tokens per Sec: 27000.66230310005
Epoch Step: 785 / 819 Loss: 15.952157974243164 Tokens per Sec: 26182.07183729465
Epoch Step: 790 / 819 Loss: 13.422324180603027 Tokens per Sec: 26823.776706124416
Epoch Step: 795 / 819 Loss: 13.60467529296875 Tokens per Sec: 25626.29803235007
Epoch Step: 800 / 819 Loss: 18.885189056396484 Tokens per Sec: 26088.49796833683
Epoch Step: 805 / 819 Loss: 19.332406997680664 Tokens per Sec: 24730.8780164612
Epoch Step: 810 / 819 Loss: 15.917943954467773 Tokens per Sec: 20514.65972011573
Epoch Step: 815 / 819 Loss: 14.709087371826172 Tokens per Sec: 24815.75041972428
Epoch ended with duration 0:02:26.215196
Train perplexity: 1.5236852300027406
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.074985
Validation perplexity: 1.5449173849784275
Epoch 50 / 1000
Epoch Step: 5 / 819 Loss: 15.131551742553711 Tokens per Sec: 27143.60582438594
Epoch Step: 10 / 819 Loss: 13.095821380615234 Tokens per Sec: 28477.18999163207
Epoch Step: 15 / 819 Loss: 15.660724639892578 Tokens per Sec: 26559.836643126953
Epoch Step: 20 / 819 Loss: 144.4694366455078 Tokens per Sec: 25883.90350707247
Epoch Step: 25 / 819 Loss: 12.780254364013672 Tokens per Sec: 28785.841210207836
Epoch Step: 30 / 819 Loss: 11.269979476928711 Tokens per Sec: 26165.17343009007
Epoch Step: 35 / 819 Loss: 9.588345527648926 Tokens per Sec: 27194.711595450965
Epoch Step: 40 / 819 Loss: 19.84856414794922 Tokens per Sec: 26387.526100584615
Epoch Step: 45 / 819 Loss: 10.99875545501709 Tokens per Sec: 25126.056471013046
Epoch Step: 50 / 819 Loss: 184.99362182617188 Tokens per Sec: 25754.614735551833
Epoch Step: 55 / 819 Loss: 20.147756576538086 Tokens per Sec: 27575.492799663876
Epoch Step: 60 / 819 Loss: 14.915788650512695 Tokens per Sec: 27994.711258286545
Epoch Step: 65 / 819 Loss: 13.623068809509277 Tokens per Sec: 26248.21146400868
Epoch Step: 70 / 819 Loss: 20.111583709716797 Tokens per Sec: 25421.499791265058
Epoch Step: 75 / 819 Loss: 12.30876636505127 Tokens per Sec: 25361.468369108257
Epoch Step: 80 / 819 Loss: 15.555460929870605 Tokens per Sec: 28590.24332093637
Epoch Step: 85 / 819 Loss: 16.27617073059082 Tokens per Sec: 26431.417101593266
Epoch Step: 90 / 819 Loss: 15.205824851989746 Tokens per Sec: 26249.597807924118
Epoch Step: 95 / 819 Loss: 18.533740997314453 Tokens per Sec: 27070.252065511704
Epoch Step: 100 / 819 Loss: 15.202191352844238 Tokens per Sec: 26165.864671388164
Epoch Step: 105 / 819 Loss: 183.4371337890625 Tokens per Sec: 25874.127989895507
Epoch Step: 110 / 819 Loss: 13.745528221130371 Tokens per Sec: 27430.492353571604
Epoch Step: 115 / 819 Loss: 17.193613052368164 Tokens per Sec: 27015.497609422106
Epoch Step: 120 / 819 Loss: 18.24982452392578 Tokens per Sec: 27337.160231540693
Epoch Step: 125 / 819 Loss: 17.396055221557617 Tokens per Sec: 26049.96284554065
Epoch Step: 130 / 819 Loss: 17.916133880615234 Tokens per Sec: 24470.073990024524
Epoch Step: 135 / 819 Loss: 12.25513744354248 Tokens per Sec: 26073.267668576267
Epoch Step: 140 / 819 Loss: 16.98217010498047 Tokens per Sec: 25927.261832334585
Epoch Step: 145 / 819 Loss: 14.475701332092285 Tokens per Sec: 26497.58832324039
Epoch Step: 150 / 819 Loss: 13.0175199508667 Tokens per Sec: 28506.652235290218
Epoch Step: 155 / 819 Loss: 15.343178749084473 Tokens per Sec: 29462.56134132299
Epoch Step: 160 / 819 Loss: 225.12379455566406 Tokens per Sec: 27271.288020621065
Epoch Step: 165 / 819 Loss: 16.98523712158203 Tokens per Sec: 24967.875597787573
Epoch Step: 170 / 819 Loss: 16.73765754699707 Tokens per Sec: 26640.821768014186
Epoch Step: 175 / 819 Loss: 17.088075637817383 Tokens per Sec: 28116.480155040656
Epoch Step: 180 / 819 Loss: 18.39619255065918 Tokens per Sec: 24210.431141812445
Epoch Step: 185 / 819 Loss: 13.326741218566895 Tokens per Sec: 26935.441498143537
Epoch Step: 190 / 819 Loss: 15.818778991699219 Tokens per Sec: 26288.33770553641
Epoch Step: 195 / 819 Loss: 138.07383728027344 Tokens per Sec: 26631.994728725822
Epoch Step: 200 / 819 Loss: 17.356460571289062 Tokens per Sec: 26087.353005008285
Epoch Step: 205 / 819 Loss: 182.20266723632812 Tokens per Sec: 28222.901514708694
Epoch Step: 210 / 819 Loss: 14.226110458374023 Tokens per Sec: 28346.299870945724
Epoch Step: 215 / 819 Loss: 17.47308921813965 Tokens per Sec: 27516.546438281188
Epoch Step: 220 / 819 Loss: 17.52733612060547 Tokens per Sec: 25841.174295387817
Epoch Step: 225 / 819 Loss: 16.496461868286133 Tokens per Sec: 24862.07653822607
Epoch Step: 230 / 819 Loss: 17.393436431884766 Tokens per Sec: 27476.63833530208
Epoch Step: 235 / 819 Loss: 15.493911743164062 Tokens per Sec: 27971.69213449515
Epoch Step: 240 / 819 Loss: 20.092870712280273 Tokens per Sec: 25091.884049872668
Epoch Step: 245 / 819 Loss: 18.101524353027344 Tokens per Sec: 25443.772245243475
Epoch Step: 250 / 819 Loss: 13.624676704406738 Tokens per Sec: 26770.17539234146
Epoch Step: 255 / 819 Loss: 13.083808898925781 Tokens per Sec: 28529.673100188178
Epoch Step: 260 / 819 Loss: 18.359556198120117 Tokens per Sec: 26278.187412906944
Epoch Step: 265 / 819 Loss: 17.52037811279297 Tokens per Sec: 27329.371326700573
Epoch Step: 270 / 819 Loss: 15.651593208312988 Tokens per Sec: 26884.404424603803
Epoch Step: 275 / 819 Loss: 15.600778579711914 Tokens per Sec: 27486.11485938347
Epoch Step: 280 / 819 Loss: 13.465780258178711 Tokens per Sec: 26736.770333455337
Epoch Step: 285 / 819 Loss: 15.51230525970459 Tokens per Sec: 25661.83069969779
Epoch Step: 290 / 819 Loss: 17.29248809814453 Tokens per Sec: 25526.40038324009
Epoch Step: 295 / 819 Loss: 13.639451026916504 Tokens per Sec: 27282.998626216344
Epoch Step: 300 / 819 Loss: 195.0095977783203 Tokens per Sec: 25830.644316010206
Epoch Step: 305 / 819 Loss: 14.846755981445312 Tokens per Sec: 24641.262406226953
Epoch Step: 310 / 819 Loss: 13.038877487182617 Tokens per Sec: 28449.31956847237
Epoch Step: 315 / 819 Loss: 216.48678588867188 Tokens per Sec: 25389.4043122176
Epoch Step: 320 / 819 Loss: 18.110973358154297 Tokens per Sec: 28035.443669177523
Epoch Step: 325 / 819 Loss: 13.716962814331055 Tokens per Sec: 29071.233479312847
Epoch Step: 330 / 819 Loss: 15.233613014221191 Tokens per Sec: 26402.67945963805
Epoch Step: 335 / 819 Loss: 16.85042953491211 Tokens per Sec: 28667.797565436882
Epoch Step: 340 / 819 Loss: 13.974067687988281 Tokens per Sec: 25241.672146547677
Epoch Step: 345 / 819 Loss: 123.11335754394531 Tokens per Sec: 26326.53191671855
Epoch Step: 350 / 819 Loss: 16.601974487304688 Tokens per Sec: 28861.056264423605
Epoch Step: 355 / 819 Loss: 19.744688034057617 Tokens per Sec: 27518.946291641685
Epoch Step: 360 / 819 Loss: 17.584062576293945 Tokens per Sec: 24701.804435432798
Epoch Step: 365 / 819 Loss: 19.26458740234375 Tokens per Sec: 25098.513902372415
Epoch Step: 370 / 819 Loss: 15.713798522949219 Tokens per Sec: 27135.60027433176
Epoch Step: 375 / 819 Loss: 13.953234672546387 Tokens per Sec: 27090.786708482436
Epoch Step: 380 / 819 Loss: 17.18630027770996 Tokens per Sec: 25440.314887989876
Epoch Step: 385 / 819 Loss: 12.702821731567383 Tokens per Sec: 25134.819492321243
Epoch Step: 390 / 819 Loss: 15.560861587524414 Tokens per Sec: 27358.242985584573
Epoch Step: 395 / 819 Loss: 18.183353424072266 Tokens per Sec: 26528.050720587493
Epoch Step: 400 / 819 Loss: 15.080082893371582 Tokens per Sec: 28818.3339580769
Epoch Step: 405 / 819 Loss: 17.773605346679688 Tokens per Sec: 27313.773129056208
Epoch Step: 410 / 819 Loss: 16.254770278930664 Tokens per Sec: 26663.67850407833
Epoch Step: 415 / 819 Loss: 15.34093189239502 Tokens per Sec: 25911.15870609391
Epoch Step: 420 / 819 Loss: 16.223491668701172 Tokens per Sec: 25524.996082029014
Epoch Step: 425 / 819 Loss: 13.257688522338867 Tokens per Sec: 26121.475900534933
Epoch Step: 430 / 819 Loss: 13.973831176757812 Tokens per Sec: 26222.349156689495
Epoch Step: 435 / 819 Loss: 18.226961135864258 Tokens per Sec: 26870.81216013258
Epoch Step: 440 / 819 Loss: 221.430419921875 Tokens per Sec: 25778.275414724332
Epoch Step: 445 / 819 Loss: 16.685287475585938 Tokens per Sec: 26856.471154329
Epoch Step: 450 / 819 Loss: 14.742042541503906 Tokens per Sec: 26721.1528119056
Epoch Step: 455 / 819 Loss: 18.046321868896484 Tokens per Sec: 28314.265638960318
Epoch Step: 460 / 819 Loss: 167.32118225097656 Tokens per Sec: 24786.45257053781
Epoch Step: 465 / 819 Loss: 17.589563369750977 Tokens per Sec: 27505.142156783197
Epoch Step: 470 / 819 Loss: 18.68182373046875 Tokens per Sec: 26507.35930610931
Epoch Step: 475 / 819 Loss: 16.641551971435547 Tokens per Sec: 28412.813519655083
Epoch Step: 480 / 819 Loss: 10.606158256530762 Tokens per Sec: 26618.513769382185
Epoch Step: 485 / 819 Loss: 15.777395248413086 Tokens per Sec: 26899.22501269639
Epoch Step: 490 / 819 Loss: 20.88141441345215 Tokens per Sec: 26305.984084183616
Epoch Step: 495 / 819 Loss: 17.50347137451172 Tokens per Sec: 25981.476585393062
Epoch Step: 500 / 819 Loss: 19.017745971679688 Tokens per Sec: 24472.489908291518
Epoch Step: 505 / 819 Loss: 19.470163345336914 Tokens per Sec: 25311.08692905706
Epoch Step: 510 / 819 Loss: 19.64950180053711 Tokens per Sec: 25816.958893629297
Epoch Step: 515 / 819 Loss: 19.640573501586914 Tokens per Sec: 28416.0288930862
Epoch Step: 520 / 819 Loss: 157.4455108642578 Tokens per Sec: 26653.275940097687
Epoch Step: 525 / 819 Loss: 12.710142135620117 Tokens per Sec: 27677.71133012544
Epoch Step: 530 / 819 Loss: 18.723783493041992 Tokens per Sec: 25031.356842149304
Epoch Step: 535 / 819 Loss: 15.41164493560791 Tokens per Sec: 24170.524803915512
Epoch Step: 540 / 819 Loss: 11.536272048950195 Tokens per Sec: 29074.010848210335
Epoch Step: 545 / 819 Loss: 17.54201316833496 Tokens per Sec: 24894.357524854506
Epoch Step: 550 / 819 Loss: 13.998469352722168 Tokens per Sec: 25664.985453933878
Epoch Step: 555 / 819 Loss: 14.497537612915039 Tokens per Sec: 26109.360325830246
Epoch Step: 560 / 819 Loss: 13.418225288391113 Tokens per Sec: 24980.616404514323
Epoch Step: 565 / 819 Loss: 15.634820938110352 Tokens per Sec: 26919.351590730355
Epoch Step: 570 / 819 Loss: 16.28188133239746 Tokens per Sec: 26588.31743032694
Epoch Step: 575 / 819 Loss: 214.5294647216797 Tokens per Sec: 27397.673632449256
Epoch Step: 580 / 819 Loss: 25.936891555786133 Tokens per Sec: 28257.129195467187
Epoch Step: 585 / 819 Loss: 20.685317993164062 Tokens per Sec: 28546.121871384126
Epoch Step: 590 / 819 Loss: 19.171581268310547 Tokens per Sec: 25862.215887194485
Epoch Step: 595 / 819 Loss: 11.039590835571289 Tokens per Sec: 28381.225630479435
Epoch Step: 600 / 819 Loss: 14.185758590698242 Tokens per Sec: 28071.544287020428
Epoch Step: 605 / 819 Loss: 18.528112411499023 Tokens per Sec: 25409.745473103045
Epoch Step: 610 / 819 Loss: 20.264686584472656 Tokens per Sec: 28767.387112664186
Epoch Step: 615 / 819 Loss: 18.574321746826172 Tokens per Sec: 26954.040570224566
Epoch Step: 620 / 819 Loss: 18.123741149902344 Tokens per Sec: 27805.343415404604
Epoch Step: 625 / 819 Loss: 15.40991497039795 Tokens per Sec: 25638.679385229807
Epoch Step: 630 / 819 Loss: 18.165922164916992 Tokens per Sec: 25247.720019245895
Epoch Step: 635 / 819 Loss: 17.127553939819336 Tokens per Sec: 25947.2019069009
Epoch Step: 640 / 819 Loss: 14.897514343261719 Tokens per Sec: 27516.426675132683
Epoch Step: 645 / 819 Loss: 19.15078353881836 Tokens per Sec: 25919.046903145838
Epoch Step: 650 / 819 Loss: 17.497285842895508 Tokens per Sec: 26755.12845169708
Epoch Step: 655 / 819 Loss: 16.303752899169922 Tokens per Sec: 25467.694997432187
Epoch Step: 660 / 819 Loss: 18.059490203857422 Tokens per Sec: 26059.64924236363
Epoch Step: 665 / 819 Loss: 16.1018009185791 Tokens per Sec: 24482.250280771397
Epoch Step: 670 / 819 Loss: 14.59399700164795 Tokens per Sec: 27986.77174567524
Epoch Step: 675 / 819 Loss: 14.597803115844727 Tokens per Sec: 27054.239241362662
Epoch Step: 680 / 819 Loss: 12.627345085144043 Tokens per Sec: 26739.85595179412
Epoch Step: 685 / 819 Loss: 17.45499038696289 Tokens per Sec: 26749.787577318388
Epoch Step: 690 / 819 Loss: 19.278047561645508 Tokens per Sec: 25837.04311799855
Epoch Step: 695 / 819 Loss: 19.90833854675293 Tokens per Sec: 24546.814498754637
Epoch Step: 700 / 819 Loss: 19.377870559692383 Tokens per Sec: 27308.034494046424
Epoch Step: 705 / 819 Loss: 18.679353713989258 Tokens per Sec: 26640.32387977832
Epoch Step: 710 / 819 Loss: 17.645540237426758 Tokens per Sec: 24873.55450463893
Epoch Step: 715 / 819 Loss: 14.058456420898438 Tokens per Sec: 26427.248467871916
Epoch Step: 720 / 819 Loss: 226.32815551757812 Tokens per Sec: 27149.75758143548
Epoch Step: 725 / 819 Loss: 16.587894439697266 Tokens per Sec: 26907.255802419273
Epoch Step: 730 / 819 Loss: 16.057697296142578 Tokens per Sec: 25405.562186236373
Epoch Step: 735 / 819 Loss: 15.781599998474121 Tokens per Sec: 27926.195738822484
Epoch Step: 740 / 819 Loss: 17.011472702026367 Tokens per Sec: 25840.35574016136
Epoch Step: 745 / 819 Loss: 18.656105041503906 Tokens per Sec: 27009.420460467303
Epoch Step: 750 / 819 Loss: 20.464269638061523 Tokens per Sec: 28203.317169771566
Epoch Step: 755 / 819 Loss: 14.46795654296875 Tokens per Sec: 27246.3455131387
Epoch Step: 760 / 819 Loss: 15.712199211120605 Tokens per Sec: 28098.518846877818
Epoch Step: 765 / 819 Loss: 18.35074234008789 Tokens per Sec: 27842.518426767158
Epoch Step: 770 / 819 Loss: 16.488235473632812 Tokens per Sec: 25421.61626931664
Epoch Step: 775 / 819 Loss: 11.140036582946777 Tokens per Sec: 27382.3535947645
Epoch Step: 780 / 819 Loss: 15.03726863861084 Tokens per Sec: 25162.0966493276
Epoch Step: 785 / 819 Loss: 14.209798812866211 Tokens per Sec: 25692.239019581553
Epoch Step: 790 / 819 Loss: 19.115018844604492 Tokens per Sec: 25687.129010441447
Epoch Step: 795 / 819 Loss: 16.896543502807617 Tokens per Sec: 28268.2409759164
Epoch Step: 800 / 819 Loss: 13.718221664428711 Tokens per Sec: 27641.789353207827
Epoch Step: 805 / 819 Loss: 16.615577697753906 Tokens per Sec: 21982.397838255776
Epoch Step: 810 / 819 Loss: 19.144210815429688 Tokens per Sec: 24699.682438335367
Epoch Step: 815 / 819 Loss: 15.937196731567383 Tokens per Sec: 25409.880762404777
Epoch ended with duration 0:02:26.304125
Train perplexity: 1.5148141505149233
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.082152
Validation perplexity: 1.7792489006487944
Model saved checkpoint!
Epoch 51 / 1000
Epoch Step: 5 / 819 Loss: 15.776150703430176 Tokens per Sec: 23844.90866572684
Epoch Step: 10 / 819 Loss: 16.466617584228516 Tokens per Sec: 25834.416806360943
Epoch Step: 15 / 819 Loss: 16.951812744140625 Tokens per Sec: 28436.806096269578
Epoch Step: 20 / 819 Loss: 14.665361404418945 Tokens per Sec: 26457.863633852707
Epoch Step: 25 / 819 Loss: 13.660432815551758 Tokens per Sec: 27289.416632939032
Epoch Step: 30 / 819 Loss: 15.126115798950195 Tokens per Sec: 24679.863879647077
Epoch Step: 35 / 819 Loss: 17.2313175201416 Tokens per Sec: 27179.99890570266
Epoch Step: 40 / 819 Loss: 222.4818572998047 Tokens per Sec: 26961.783031420335
Epoch Step: 45 / 819 Loss: 17.42237663269043 Tokens per Sec: 27724.061714732114
Epoch Step: 50 / 819 Loss: 18.04905128479004 Tokens per Sec: 26343.407025127653
Epoch Step: 55 / 819 Loss: 19.867385864257812 Tokens per Sec: 27410.647601052126
Epoch Step: 60 / 819 Loss: 14.545088768005371 Tokens per Sec: 24436.813644968286
Epoch Step: 65 / 819 Loss: 14.341520309448242 Tokens per Sec: 27049.248450457846
Epoch Step: 70 / 819 Loss: 106.49138641357422 Tokens per Sec: 27354.84502551158
Epoch Step: 75 / 819 Loss: 14.121162414550781 Tokens per Sec: 25496.851410156214
Epoch Step: 80 / 819 Loss: 17.159748077392578 Tokens per Sec: 27356.090497737558
Epoch Step: 85 / 819 Loss: 18.51573371887207 Tokens per Sec: 28242.380172860463
Epoch Step: 90 / 819 Loss: 20.287668228149414 Tokens per Sec: 26725.919428607795
Epoch Step: 95 / 819 Loss: 12.523347854614258 Tokens per Sec: 26013.28791144741
Epoch Step: 100 / 819 Loss: 12.152081489562988 Tokens per Sec: 28570.540913965855
Epoch Step: 105 / 819 Loss: 18.54108428955078 Tokens per Sec: 27702.449788393766
Epoch Step: 110 / 819 Loss: 15.21817684173584 Tokens per Sec: 25868.94277437696
Epoch Step: 115 / 819 Loss: 16.17668342590332 Tokens per Sec: 27439.858697834246
Epoch Step: 120 / 819 Loss: 16.195619583129883 Tokens per Sec: 29290.84598222126
Epoch Step: 125 / 819 Loss: 16.91573715209961 Tokens per Sec: 25722.39007486268
Epoch Step: 130 / 819 Loss: 18.549488067626953 Tokens per Sec: 28004.219817850844
Epoch Step: 135 / 819 Loss: 15.755293846130371 Tokens per Sec: 28500.758327718046
Epoch Step: 140 / 819 Loss: 18.912567138671875 Tokens per Sec: 24567.66328484257
Epoch Step: 145 / 819 Loss: 17.874982833862305 Tokens per Sec: 24334.814472205715
Epoch Step: 150 / 819 Loss: 18.20367431640625 Tokens per Sec: 28249.3058613783
Epoch Step: 155 / 819 Loss: 16.862773895263672 Tokens per Sec: 25676.358379853096
Epoch Step: 160 / 819 Loss: 216.705810546875 Tokens per Sec: 26296.264932195354
Epoch Step: 165 / 819 Loss: 16.182865142822266 Tokens per Sec: 25437.682806911056
Epoch Step: 170 / 819 Loss: 16.032846450805664 Tokens per Sec: 27467.84399297637
Epoch Step: 175 / 819 Loss: 19.67552947998047 Tokens per Sec: 25730.039534475163
Epoch Step: 180 / 819 Loss: 18.643474578857422 Tokens per Sec: 27249.122388211905
Epoch Step: 185 / 819 Loss: 15.707559585571289 Tokens per Sec: 25098.319401215576
Epoch Step: 190 / 819 Loss: 14.552078247070312 Tokens per Sec: 26650.809253968597
Epoch Step: 195 / 819 Loss: 16.39560890197754 Tokens per Sec: 27296.02861235769
Epoch Step: 200 / 819 Loss: 10.091963768005371 Tokens per Sec: 26138.775944966343
Epoch Step: 205 / 819 Loss: 13.624013900756836 Tokens per Sec: 26366.484181727385
Epoch Step: 210 / 819 Loss: 12.450906753540039 Tokens per Sec: 28865.29283163272
Epoch Step: 215 / 819 Loss: 14.754194259643555 Tokens per Sec: 23922.15323436851
Epoch Step: 220 / 819 Loss: 16.539392471313477 Tokens per Sec: 29462.441262356708
Epoch Step: 225 / 819 Loss: 17.180862426757812 Tokens per Sec: 25481.50241890871
Epoch Step: 230 / 819 Loss: 16.833118438720703 Tokens per Sec: 24947.97547457305
Epoch Step: 235 / 819 Loss: 18.970294952392578 Tokens per Sec: 25938.208752508246
Epoch Step: 240 / 819 Loss: 14.147469520568848 Tokens per Sec: 26682.955141372346
Epoch Step: 245 / 819 Loss: 15.765231132507324 Tokens per Sec: 26562.74367893199
Epoch Step: 250 / 819 Loss: 17.224409103393555 Tokens per Sec: 27287.77655152162
Epoch Step: 255 / 819 Loss: 16.165067672729492 Tokens per Sec: 26160.6019436054
Epoch Step: 260 / 819 Loss: 14.445966720581055 Tokens per Sec: 25097.64781640921
Epoch Step: 265 / 819 Loss: 14.659846305847168 Tokens per Sec: 25178.44649035077
Epoch Step: 270 / 819 Loss: 14.287997245788574 Tokens per Sec: 27534.49153224506
Epoch Step: 275 / 819 Loss: 16.609434127807617 Tokens per Sec: 28080.675004963694
Epoch Step: 280 / 819 Loss: 18.046262741088867 Tokens per Sec: 28575.873220512785
Epoch Step: 285 / 819 Loss: 18.0825252532959 Tokens per Sec: 25845.43750890028
Epoch Step: 290 / 819 Loss: 18.041610717773438 Tokens per Sec: 27790.246607097146
Epoch Step: 295 / 819 Loss: 11.997907638549805 Tokens per Sec: 27761.64938761725
Epoch Step: 300 / 819 Loss: 9.907978057861328 Tokens per Sec: 25610.676971798523
Epoch Step: 305 / 819 Loss: 16.68791961669922 Tokens per Sec: 27396.60640803225
Epoch Step: 310 / 819 Loss: 18.546878814697266 Tokens per Sec: 25051.887784484672
Epoch Step: 315 / 819 Loss: 15.872617721557617 Tokens per Sec: 27551.037328444916
Epoch Step: 320 / 819 Loss: 14.77115535736084 Tokens per Sec: 27983.878608450137
Epoch Step: 325 / 819 Loss: 17.184247970581055 Tokens per Sec: 26720.85938859698
Epoch Step: 330 / 819 Loss: 12.637853622436523 Tokens per Sec: 27545.39776963475
Epoch Step: 335 / 819 Loss: 19.922306060791016 Tokens per Sec: 25089.042650745523
Epoch Step: 340 / 819 Loss: 121.45242309570312 Tokens per Sec: 26141.437671364227
Epoch Step: 345 / 819 Loss: 14.40825366973877 Tokens per Sec: 27781.180384249572
Epoch Step: 350 / 819 Loss: 16.349605560302734 Tokens per Sec: 26856.594379982544
Epoch Step: 355 / 819 Loss: 14.231680870056152 Tokens per Sec: 27298.93358383931
Epoch Step: 360 / 819 Loss: 17.622323989868164 Tokens per Sec: 26486.268639741167
Epoch Step: 365 / 819 Loss: 12.794455528259277 Tokens per Sec: 27605.327434801853
Epoch Step: 370 / 819 Loss: 15.90559196472168 Tokens per Sec: 25120.186648002975
Epoch Step: 375 / 819 Loss: 13.528921127319336 Tokens per Sec: 25862.134238907223
Epoch Step: 380 / 819 Loss: 13.042259216308594 Tokens per Sec: 25673.33841189602
Epoch Step: 385 / 819 Loss: 13.348714828491211 Tokens per Sec: 26501.81636924392
Epoch Step: 390 / 819 Loss: 232.97503662109375 Tokens per Sec: 26052.29135162228
Epoch Step: 395 / 819 Loss: 193.84410095214844 Tokens per Sec: 26074.040379563947
Epoch Step: 400 / 819 Loss: 14.564964294433594 Tokens per Sec: 26402.804495006392
Epoch Step: 405 / 819 Loss: 206.48452758789062 Tokens per Sec: 28435.51522269947
Epoch Step: 410 / 819 Loss: 18.90876579284668 Tokens per Sec: 26380.027642094963
Epoch Step: 415 / 819 Loss: 15.843998908996582 Tokens per Sec: 27289.56922114718
Epoch Step: 420 / 819 Loss: 14.28780460357666 Tokens per Sec: 26573.572053253723
Epoch Step: 425 / 819 Loss: 16.367979049682617 Tokens per Sec: 26886.030321005204
Epoch Step: 430 / 819 Loss: 13.743311882019043 Tokens per Sec: 25694.073852473794
Epoch Step: 435 / 819 Loss: 20.450969696044922 Tokens per Sec: 24045.953171981157
Epoch Step: 440 / 819 Loss: 15.256919860839844 Tokens per Sec: 26631.028191500798
Epoch Step: 445 / 819 Loss: 13.423033714294434 Tokens per Sec: 27562.652118788792
Epoch Step: 450 / 819 Loss: 14.004193305969238 Tokens per Sec: 26160.720430812282
Epoch Step: 455 / 819 Loss: 14.984353065490723 Tokens per Sec: 26335.430143451133
Epoch Step: 460 / 819 Loss: 20.503576278686523 Tokens per Sec: 25957.408337745444
Epoch Step: 465 / 819 Loss: 17.612211227416992 Tokens per Sec: 25558.167213133984
Epoch Step: 470 / 819 Loss: 22.27410316467285 Tokens per Sec: 27581.510373287783
Epoch Step: 475 / 819 Loss: 19.00372886657715 Tokens per Sec: 26141.902893368082
Epoch Step: 480 / 819 Loss: 18.065654754638672 Tokens per Sec: 25826.722891171376
Epoch Step: 485 / 819 Loss: 17.428150177001953 Tokens per Sec: 25539.546557397607
Epoch Step: 490 / 819 Loss: 21.391319274902344 Tokens per Sec: 26653.1314074086
Epoch Step: 495 / 819 Loss: 17.793256759643555 Tokens per Sec: 26453.661236223328
Epoch Step: 500 / 819 Loss: 12.941584587097168 Tokens per Sec: 25998.331738958666
Epoch Step: 505 / 819 Loss: 14.946178436279297 Tokens per Sec: 26717.68426172743
Epoch Step: 510 / 819 Loss: 17.180137634277344 Tokens per Sec: 27253.088289989733
Epoch Step: 515 / 819 Loss: 12.489670753479004 Tokens per Sec: 26191.153543415472
Epoch Step: 520 / 819 Loss: 16.1707820892334 Tokens per Sec: 26074.280781476766
Epoch Step: 525 / 819 Loss: 13.096095085144043 Tokens per Sec: 25580.74453403678
Epoch Step: 530 / 819 Loss: 19.878568649291992 Tokens per Sec: 26890.204529652903
Epoch Step: 535 / 819 Loss: 14.648448944091797 Tokens per Sec: 26271.845669187875
Epoch Step: 540 / 819 Loss: 17.497194290161133 Tokens per Sec: 28163.375687418345
Epoch Step: 545 / 819 Loss: 18.206310272216797 Tokens per Sec: 26201.265131861906
Epoch Step: 550 / 819 Loss: 14.35189437866211 Tokens per Sec: 26913.930820236023
Epoch Step: 555 / 819 Loss: 12.028615951538086 Tokens per Sec: 26096.58647553706
Epoch Step: 560 / 819 Loss: 11.813891410827637 Tokens per Sec: 27713.95048071569
Epoch Step: 565 / 819 Loss: 12.33104133605957 Tokens per Sec: 26177.330585966396
Epoch Step: 570 / 819 Loss: 13.289386749267578 Tokens per Sec: 25523.587100493543
Epoch Step: 575 / 819 Loss: 15.65147590637207 Tokens per Sec: 27499.657149609822
Epoch Step: 580 / 819 Loss: 15.142486572265625 Tokens per Sec: 27431.873694118935
Epoch Step: 585 / 819 Loss: 13.022168159484863 Tokens per Sec: 28070.833791942605
Epoch Step: 590 / 819 Loss: 16.944183349609375 Tokens per Sec: 26141.326671680927
Epoch Step: 595 / 819 Loss: 18.764793395996094 Tokens per Sec: 26958.96144784196
Epoch Step: 600 / 819 Loss: 22.016529083251953 Tokens per Sec: 24716.079785275906
Epoch Step: 605 / 819 Loss: 18.09197235107422 Tokens per Sec: 26116.022473443867
Epoch Step: 610 / 819 Loss: 19.057767868041992 Tokens per Sec: 27895.509861586554
Epoch Step: 615 / 819 Loss: 17.137453079223633 Tokens per Sec: 25564.115438027504
Epoch Step: 620 / 819 Loss: 16.962751388549805 Tokens per Sec: 26097.187220144395
Epoch Step: 625 / 819 Loss: 157.04310607910156 Tokens per Sec: 26410.42067849597
Epoch Step: 630 / 819 Loss: 19.995162963867188 Tokens per Sec: 27569.215322671225
Epoch Step: 635 / 819 Loss: 15.866515159606934 Tokens per Sec: 25567.904291538925
Epoch Step: 640 / 819 Loss: 20.57203483581543 Tokens per Sec: 25230.567781613063
Epoch Step: 645 / 819 Loss: 20.597505569458008 Tokens per Sec: 28508.379216174675
Epoch Step: 650 / 819 Loss: 17.252288818359375 Tokens per Sec: 25425.91829602064
Epoch Step: 655 / 819 Loss: 14.658377647399902 Tokens per Sec: 26655.763788670483
Epoch Step: 660 / 819 Loss: 18.660381317138672 Tokens per Sec: 28160.615049481083
Epoch Step: 665 / 819 Loss: 18.45132827758789 Tokens per Sec: 24938.79379899277
Epoch Step: 670 / 819 Loss: 18.294883728027344 Tokens per Sec: 23111.642992101457
Epoch Step: 675 / 819 Loss: 123.91751861572266 Tokens per Sec: 25138.285479135247
Epoch Step: 680 / 819 Loss: 17.998573303222656 Tokens per Sec: 28412.522231832798
Epoch Step: 685 / 819 Loss: 202.69334411621094 Tokens per Sec: 27801.40274416301
Epoch Step: 690 / 819 Loss: 16.45429039001465 Tokens per Sec: 26812.70906647384
Epoch Step: 695 / 819 Loss: 16.18020248413086 Tokens per Sec: 27969.622089534387
Epoch Step: 700 / 819 Loss: 19.703920364379883 Tokens per Sec: 26190.3141443198
Epoch Step: 705 / 819 Loss: 20.28984832763672 Tokens per Sec: 26178.714376265732
Epoch Step: 710 / 819 Loss: 18.049222946166992 Tokens per Sec: 25803.285148866278
Epoch Step: 715 / 819 Loss: 13.062524795532227 Tokens per Sec: 26581.571418815536
Epoch Step: 720 / 819 Loss: 225.01593017578125 Tokens per Sec: 25864.87941406469
Epoch Step: 725 / 819 Loss: 198.6347198486328 Tokens per Sec: 24920.866671778294
Epoch Step: 730 / 819 Loss: 16.548948287963867 Tokens per Sec: 27259.925730689563
Epoch Step: 735 / 819 Loss: 17.70473289489746 Tokens per Sec: 28288.941412336426
Epoch Step: 740 / 819 Loss: 19.602216720581055 Tokens per Sec: 26500.96534174019
Epoch Step: 745 / 819 Loss: 21.825122833251953 Tokens per Sec: 26886.894854621158
Epoch Step: 750 / 819 Loss: 17.133249282836914 Tokens per Sec: 27541.48966273498
Epoch Step: 755 / 819 Loss: 23.198495864868164 Tokens per Sec: 27370.202648459686
Epoch Step: 760 / 819 Loss: 19.19578742980957 Tokens per Sec: 26478.715184524273
Epoch Step: 765 / 819 Loss: 183.92062377929688 Tokens per Sec: 26955.398516944155
Epoch Step: 770 / 819 Loss: 20.82902717590332 Tokens per Sec: 25392.157423566066
Epoch Step: 775 / 819 Loss: 18.561649322509766 Tokens per Sec: 26578.674910307735
Epoch Step: 780 / 819 Loss: 15.49071216583252 Tokens per Sec: 24964.479745058
Epoch Step: 785 / 819 Loss: 17.32301139831543 Tokens per Sec: 27800.447176134614
Epoch Step: 790 / 819 Loss: 16.963088989257812 Tokens per Sec: 26514.8348836471
Epoch Step: 795 / 819 Loss: 16.631174087524414 Tokens per Sec: 25443.919611561538
Epoch Step: 800 / 819 Loss: 13.4144287109375 Tokens per Sec: 28427.32197060467
Epoch Step: 805 / 819 Loss: 17.83970069885254 Tokens per Sec: 20704.0743139804
Epoch Step: 810 / 819 Loss: 20.107301712036133 Tokens per Sec: 25747.008335906143
Epoch Step: 815 / 819 Loss: 14.802074432373047 Tokens per Sec: 25478.185687413425
Epoch ended with duration 0:02:26.716891
Train perplexity: 1.5555827501081696
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.119400
Validation perplexity: 1.512203545218204
Epoch 52 / 1000
Epoch Step: 5 / 819 Loss: 14.344042778015137 Tokens per Sec: 27228.05946504331
Epoch Step: 10 / 819 Loss: 16.81757164001465 Tokens per Sec: 26105.98748796141
Epoch Step: 15 / 819 Loss: 18.12051010131836 Tokens per Sec: 26157.0810312669
Epoch Step: 20 / 819 Loss: 12.67973804473877 Tokens per Sec: 27432.609697812353
Epoch Step: 25 / 819 Loss: 16.028892517089844 Tokens per Sec: 27150.017924632848
Epoch Step: 30 / 819 Loss: 12.20223331451416 Tokens per Sec: 28990.1949893861
Epoch Step: 35 / 819 Loss: 10.854796409606934 Tokens per Sec: 27338.915596726296
Epoch Step: 40 / 819 Loss: 12.335602760314941 Tokens per Sec: 25979.196888982595
Epoch Step: 45 / 819 Loss: 14.326666831970215 Tokens per Sec: 27936.642468439823
Epoch Step: 50 / 819 Loss: 17.74782371520996 Tokens per Sec: 25643.032605067507
Epoch Step: 55 / 819 Loss: 18.496402740478516 Tokens per Sec: 29038.85433474295
Epoch Step: 60 / 819 Loss: 14.835970878601074 Tokens per Sec: 25471.992643763508
Epoch Step: 65 / 819 Loss: 19.393037796020508 Tokens per Sec: 27090.49625496031
Epoch Step: 70 / 819 Loss: 18.299240112304688 Tokens per Sec: 25824.75502721189
Epoch Step: 75 / 819 Loss: 18.93994140625 Tokens per Sec: 24814.087097244883
Epoch Step: 80 / 819 Loss: 19.966014862060547 Tokens per Sec: 24827.411773171803
Epoch Step: 85 / 819 Loss: 20.27976417541504 Tokens per Sec: 26692.474570054237
Epoch Step: 90 / 819 Loss: 21.274953842163086 Tokens per Sec: 26377.227124811623
Epoch Step: 95 / 819 Loss: 16.95358657836914 Tokens per Sec: 26845.342452175424
Epoch Step: 100 / 819 Loss: 171.58245849609375 Tokens per Sec: 26126.132755427425
Epoch Step: 105 / 819 Loss: 22.063217163085938 Tokens per Sec: 25568.452130409012
Epoch Step: 110 / 819 Loss: 17.964256286621094 Tokens per Sec: 26883.991103541026
Epoch Step: 115 / 819 Loss: 16.44906234741211 Tokens per Sec: 25646.501230027185
Epoch Step: 120 / 819 Loss: 19.467666625976562 Tokens per Sec: 26539.460293654898
Epoch Step: 125 / 819 Loss: 19.554141998291016 Tokens per Sec: 27189.01456608135
Epoch Step: 130 / 819 Loss: 16.127960205078125 Tokens per Sec: 27635.446962049904
Epoch Step: 135 / 819 Loss: 18.947534561157227 Tokens per Sec: 28809.959373919577
Epoch Step: 140 / 819 Loss: 131.16622924804688 Tokens per Sec: 25752.352531644112
Epoch Step: 145 / 819 Loss: 16.174386978149414 Tokens per Sec: 26093.983331370287
Epoch Step: 150 / 819 Loss: 14.210110664367676 Tokens per Sec: 24759.930439462485
Epoch Step: 155 / 819 Loss: 13.437175750732422 Tokens per Sec: 28001.019871927605
Epoch Step: 160 / 819 Loss: 14.970532417297363 Tokens per Sec: 27553.554896307654
Epoch Step: 165 / 819 Loss: 15.39027214050293 Tokens per Sec: 25467.152498419422
Epoch Step: 170 / 819 Loss: 13.31266975402832 Tokens per Sec: 26219.401416407618
Epoch Step: 175 / 819 Loss: 16.601762771606445 Tokens per Sec: 25112.83789195999
Epoch Step: 180 / 819 Loss: 18.08146095275879 Tokens per Sec: 28110.854069340312
Epoch Step: 185 / 819 Loss: 188.27760314941406 Tokens per Sec: 25964.564957837167
Epoch Step: 190 / 819 Loss: 19.53908348083496 Tokens per Sec: 28667.609795375527
Epoch Step: 195 / 819 Loss: 20.514307022094727 Tokens per Sec: 25739.526991698593
Epoch Step: 200 / 819 Loss: 17.8024959564209 Tokens per Sec: 26755.29200440799
Epoch Step: 205 / 819 Loss: 19.359493255615234 Tokens per Sec: 26785.0402755122
Epoch Step: 210 / 819 Loss: 12.361796379089355 Tokens per Sec: 28355.858758060353
Epoch Step: 215 / 819 Loss: 19.200258255004883 Tokens per Sec: 27381.790858474942
Epoch Step: 220 / 819 Loss: 14.989696502685547 Tokens per Sec: 28722.27782634462
Epoch Step: 225 / 819 Loss: 15.007071495056152 Tokens per Sec: 26712.84082545554
Epoch Step: 230 / 819 Loss: 15.336702346801758 Tokens per Sec: 24314.715334358087
Epoch Step: 235 / 819 Loss: 14.716519355773926 Tokens per Sec: 27257.526840879025
Epoch Step: 240 / 819 Loss: 15.580523490905762 Tokens per Sec: 28136.829259174647
Epoch Step: 245 / 819 Loss: 20.27986717224121 Tokens per Sec: 25579.431588962798
Epoch Step: 250 / 819 Loss: 13.35075855255127 Tokens per Sec: 24185.114207298062
Epoch Step: 255 / 819 Loss: 16.76109504699707 Tokens per Sec: 25498.023049654676
Epoch Step: 260 / 819 Loss: 17.944196701049805 Tokens per Sec: 23325.795804581096
Epoch Step: 265 / 819 Loss: 15.612577438354492 Tokens per Sec: 27699.00047233041
Epoch Step: 270 / 819 Loss: 156.32986450195312 Tokens per Sec: 26676.85360707857
Epoch Step: 275 / 819 Loss: 16.95169448852539 Tokens per Sec: 29618.930065000783
Epoch Step: 280 / 819 Loss: 12.31778335571289 Tokens per Sec: 27103.528946458042
Epoch Step: 285 / 819 Loss: 16.732707977294922 Tokens per Sec: 27232.20162854464
Epoch Step: 290 / 819 Loss: 15.739269256591797 Tokens per Sec: 25979.996063393224
Epoch Step: 295 / 819 Loss: 18.541229248046875 Tokens per Sec: 27031.44320892055
Epoch Step: 300 / 819 Loss: 17.377243041992188 Tokens per Sec: 25315.948562594465
Epoch Step: 305 / 819 Loss: 11.599560737609863 Tokens per Sec: 27087.23083378633
Epoch Step: 310 / 819 Loss: 14.023056030273438 Tokens per Sec: 26806.476530391934
Epoch Step: 315 / 819 Loss: 114.20926666259766 Tokens per Sec: 28441.540610534597
Epoch Step: 320 / 819 Loss: 13.429306030273438 Tokens per Sec: 27366.36375235673
Epoch Step: 325 / 819 Loss: 14.435378074645996 Tokens per Sec: 24605.853480469465
Epoch Step: 330 / 819 Loss: 13.787797927856445 Tokens per Sec: 26593.872789790683
Epoch Step: 335 / 819 Loss: 13.718713760375977 Tokens per Sec: 29110.27394449837
Epoch Step: 340 / 819 Loss: 16.887622833251953 Tokens per Sec: 24640.65551584348
Epoch Step: 345 / 819 Loss: 16.936382293701172 Tokens per Sec: 26867.00708584266
Epoch Step: 350 / 819 Loss: 19.502498626708984 Tokens per Sec: 26173.2099013861
Epoch Step: 355 / 819 Loss: 12.04761028289795 Tokens per Sec: 24395.771172842684
Epoch Step: 360 / 819 Loss: 17.558923721313477 Tokens per Sec: 26083.544279495407
Epoch Step: 365 / 819 Loss: 189.39422607421875 Tokens per Sec: 26215.65265924404
Epoch Step: 370 / 819 Loss: 17.754756927490234 Tokens per Sec: 26954.11954919082
Epoch Step: 375 / 819 Loss: 20.162620544433594 Tokens per Sec: 24941.833845627527
Epoch Step: 380 / 819 Loss: 14.042354583740234 Tokens per Sec: 26290.35045519252
Epoch Step: 385 / 819 Loss: 13.448795318603516 Tokens per Sec: 29147.777466233543
Epoch Step: 390 / 819 Loss: 17.94254493713379 Tokens per Sec: 25879.943267073573
Epoch Step: 395 / 819 Loss: 13.943103790283203 Tokens per Sec: 28440.190319948786
Epoch Step: 400 / 819 Loss: 19.358469009399414 Tokens per Sec: 27424.380925981466
Epoch Step: 405 / 819 Loss: 15.109762191772461 Tokens per Sec: 29289.341716961182
Epoch Step: 410 / 819 Loss: 19.847698211669922 Tokens per Sec: 26810.93072013948
Epoch Step: 415 / 819 Loss: 12.491026878356934 Tokens per Sec: 25938.759535260513
Epoch Step: 420 / 819 Loss: 17.53428077697754 Tokens per Sec: 26936.845498759547
Epoch Step: 425 / 819 Loss: 18.22065544128418 Tokens per Sec: 26902.53161394442
Epoch Step: 430 / 819 Loss: 15.72491455078125 Tokens per Sec: 27354.815888959754
Epoch Step: 435 / 819 Loss: 11.6542387008667 Tokens per Sec: 27916.556927712834
Epoch Step: 440 / 819 Loss: 17.453025817871094 Tokens per Sec: 25884.17150438425
Epoch Step: 445 / 819 Loss: 16.1883602142334 Tokens per Sec: 26175.92494377451
Epoch Step: 450 / 819 Loss: 18.638324737548828 Tokens per Sec: 25667.415294156035
Epoch Step: 455 / 819 Loss: 16.6169376373291 Tokens per Sec: 26087.083140978793
Epoch Step: 460 / 819 Loss: 13.123480796813965 Tokens per Sec: 27148.55450433448
Epoch Step: 465 / 819 Loss: 17.331867218017578 Tokens per Sec: 26793.540770119253
Epoch Step: 470 / 819 Loss: 10.823358535766602 Tokens per Sec: 25329.540608201816
Epoch Step: 475 / 819 Loss: 18.37727165222168 Tokens per Sec: 26739.42759184984
Epoch Step: 480 / 819 Loss: 12.889471054077148 Tokens per Sec: 26672.90624266771
Epoch Step: 485 / 819 Loss: 18.249317169189453 Tokens per Sec: 26952.517938253968
Epoch Step: 490 / 819 Loss: 14.45643138885498 Tokens per Sec: 26097.164863672406
Epoch Step: 495 / 819 Loss: 12.674945831298828 Tokens per Sec: 27259.875681929905
Epoch Step: 500 / 819 Loss: 14.557900428771973 Tokens per Sec: 26360.154650395718
Epoch Step: 505 / 819 Loss: 15.4415283203125 Tokens per Sec: 25880.651292291408
Epoch Step: 510 / 819 Loss: 12.950922966003418 Tokens per Sec: 25697.247772743787
Epoch Step: 515 / 819 Loss: 11.443878173828125 Tokens per Sec: 27174.307486983387
Epoch Step: 520 / 819 Loss: 16.648605346679688 Tokens per Sec: 24532.138536718234
Epoch Step: 525 / 819 Loss: 17.63629722595215 Tokens per Sec: 26482.55359211617
Epoch Step: 530 / 819 Loss: 16.33968734741211 Tokens per Sec: 27676.119441639894
Epoch Step: 535 / 819 Loss: 18.27126693725586 Tokens per Sec: 26859.19408499328
Epoch Step: 540 / 819 Loss: 17.677692413330078 Tokens per Sec: 27148.683728451764
Epoch Step: 545 / 819 Loss: 21.56968879699707 Tokens per Sec: 25936.646448127864
Epoch Step: 550 / 819 Loss: 184.10211181640625 Tokens per Sec: 25674.878334799672
Epoch Step: 555 / 819 Loss: 11.72433090209961 Tokens per Sec: 26763.351789051452
Epoch Step: 560 / 819 Loss: 12.383856773376465 Tokens per Sec: 27864.99323457069
Epoch Step: 565 / 819 Loss: 16.08258819580078 Tokens per Sec: 26674.285354698037
Epoch Step: 570 / 819 Loss: 13.19965934753418 Tokens per Sec: 28123.100714635293
Epoch Step: 575 / 819 Loss: 12.904825210571289 Tokens per Sec: 26195.699963287858
Epoch Step: 580 / 819 Loss: 13.552746772766113 Tokens per Sec: 27895.91949346351
Epoch Step: 585 / 819 Loss: 15.315139770507812 Tokens per Sec: 27147.306503636253
Epoch Step: 590 / 819 Loss: 11.732128143310547 Tokens per Sec: 27177.45895809052
Epoch Step: 595 / 819 Loss: 12.752691268920898 Tokens per Sec: 25633.285609745642
Epoch Step: 600 / 819 Loss: 17.52443504333496 Tokens per Sec: 27785.643654351807
Epoch Step: 605 / 819 Loss: 11.6506929397583 Tokens per Sec: 27648.958257412432
Epoch Step: 610 / 819 Loss: 174.2505645751953 Tokens per Sec: 28214.276492770732
Epoch Step: 615 / 819 Loss: 20.11559295654297 Tokens per Sec: 26394.020113529146
Epoch Step: 620 / 819 Loss: 16.169246673583984 Tokens per Sec: 26172.620234239585
Epoch Step: 625 / 819 Loss: 12.65300464630127 Tokens per Sec: 26211.650038685948
Epoch Step: 630 / 819 Loss: 11.683772087097168 Tokens per Sec: 27340.106030158655
Epoch Step: 635 / 819 Loss: 15.33523941040039 Tokens per Sec: 29136.773089000177
Epoch Step: 640 / 819 Loss: 207.56509399414062 Tokens per Sec: 28026.565486019383
Epoch Step: 645 / 819 Loss: 19.84084701538086 Tokens per Sec: 24988.03617852479
Epoch Step: 650 / 819 Loss: 18.78706169128418 Tokens per Sec: 25908.17346904498
Epoch Step: 655 / 819 Loss: 16.03599739074707 Tokens per Sec: 27700.604782405528
Epoch Step: 660 / 819 Loss: 19.13494110107422 Tokens per Sec: 25969.671329266817
Epoch Step: 665 / 819 Loss: 11.895895957946777 Tokens per Sec: 28177.871220659363
Epoch Step: 670 / 819 Loss: 20.313228607177734 Tokens per Sec: 24684.991266293036
Epoch Step: 675 / 819 Loss: 14.965840339660645 Tokens per Sec: 26968.454223904737
Epoch Step: 680 / 819 Loss: 14.996908187866211 Tokens per Sec: 26275.414371339186
Epoch Step: 685 / 819 Loss: 11.694883346557617 Tokens per Sec: 25462.247989507807
Epoch Step: 690 / 819 Loss: 291.5721740722656 Tokens per Sec: 24687.408071644884
Epoch Step: 695 / 819 Loss: 17.89815902709961 Tokens per Sec: 27675.330974736942
Epoch Step: 700 / 819 Loss: 230.06834411621094 Tokens per Sec: 25832.864549252925
Epoch Step: 705 / 819 Loss: 200.5638885498047 Tokens per Sec: 26686.373457494698
Epoch Step: 710 / 819 Loss: 20.54134178161621 Tokens per Sec: 25823.2082440374
Epoch Step: 715 / 819 Loss: 19.11502456665039 Tokens per Sec: 27604.52102320584
Epoch Step: 720 / 819 Loss: 17.13665199279785 Tokens per Sec: 27607.36426458178
Epoch Step: 725 / 819 Loss: 20.319093704223633 Tokens per Sec: 25742.532292752603
Epoch Step: 730 / 819 Loss: 14.802075386047363 Tokens per Sec: 26447.244383073576
Epoch Step: 735 / 819 Loss: 14.821612358093262 Tokens per Sec: 28014.920996079723
Epoch Step: 740 / 819 Loss: 18.50664520263672 Tokens per Sec: 29110.27957171426
Epoch Step: 745 / 819 Loss: 13.441277503967285 Tokens per Sec: 25775.846829628423
Epoch Step: 750 / 819 Loss: 16.472492218017578 Tokens per Sec: 29190.909355805572
Epoch Step: 755 / 819 Loss: 17.230501174926758 Tokens per Sec: 26074.83789233486
Epoch Step: 760 / 819 Loss: 17.03781509399414 Tokens per Sec: 26205.749809091547
Epoch Step: 765 / 819 Loss: 189.88119506835938 Tokens per Sec: 24286.413551458103
Epoch Step: 770 / 819 Loss: 14.905959129333496 Tokens per Sec: 24364.16343058533
Epoch Step: 775 / 819 Loss: 17.96837615966797 Tokens per Sec: 28385.491993096155
Epoch Step: 780 / 819 Loss: 19.236005783081055 Tokens per Sec: 26459.40008673572
Epoch Step: 785 / 819 Loss: 13.3018798828125 Tokens per Sec: 27644.99152044762
Epoch Step: 790 / 819 Loss: 119.4234848022461 Tokens per Sec: 26517.16736211371
Epoch Step: 795 / 819 Loss: 15.971203804016113 Tokens per Sec: 26145.401589549972
Epoch Step: 800 / 819 Loss: 17.019546508789062 Tokens per Sec: 26044.257310035337
Epoch Step: 805 / 819 Loss: 16.100601196289062 Tokens per Sec: 25996.900232504493
Epoch Step: 810 / 819 Loss: 16.204727172851562 Tokens per Sec: 20157.38640781691
Epoch Step: 815 / 819 Loss: 11.939803123474121 Tokens per Sec: 24499.825713531478
Epoch ended with duration 0:02:26.231940
Train perplexity: 1.4729095732353736
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.091184
Validation perplexity: 1.547805336098902
Epoch 53 / 1000
Epoch Step: 5 / 819 Loss: 16.80384635925293 Tokens per Sec: 26473.38506602174
Epoch Step: 10 / 819 Loss: 18.998931884765625 Tokens per Sec: 26904.254032462773
Epoch Step: 15 / 819 Loss: 15.491565704345703 Tokens per Sec: 26903.49437400653
Epoch Step: 20 / 819 Loss: 16.147762298583984 Tokens per Sec: 25746.882066359216
Epoch Step: 25 / 819 Loss: 19.708070755004883 Tokens per Sec: 26867.32045500579
Epoch Step: 30 / 819 Loss: 16.37711524963379 Tokens per Sec: 26317.604871128842
Epoch Step: 35 / 819 Loss: 191.6920166015625 Tokens per Sec: 26086.613499180898
Epoch Step: 40 / 819 Loss: 14.260297775268555 Tokens per Sec: 26884.89527267265
Epoch Step: 45 / 819 Loss: 163.65711975097656 Tokens per Sec: 24983.098537776434
Epoch Step: 50 / 819 Loss: 15.527301788330078 Tokens per Sec: 29236.147904187026
Epoch Step: 55 / 819 Loss: 16.095659255981445 Tokens per Sec: 26609.219209806368
Epoch Step: 60 / 819 Loss: 12.804868698120117 Tokens per Sec: 26914.645200409144
Epoch Step: 65 / 819 Loss: 13.937478065490723 Tokens per Sec: 26662.362965496217
Epoch Step: 70 / 819 Loss: 17.818828582763672 Tokens per Sec: 26311.053201286515
Epoch Step: 75 / 819 Loss: 16.381858825683594 Tokens per Sec: 26525.796265809895
Epoch Step: 80 / 819 Loss: 15.343595504760742 Tokens per Sec: 25460.640892300824
Epoch Step: 85 / 819 Loss: 14.449907302856445 Tokens per Sec: 23486.77669953054
Epoch Step: 90 / 819 Loss: 15.451824188232422 Tokens per Sec: 28521.663035761234
Epoch Step: 95 / 819 Loss: 15.646160125732422 Tokens per Sec: 27220.89936088306
Epoch Step: 100 / 819 Loss: 15.096575736999512 Tokens per Sec: 27589.21214113332
Epoch Step: 105 / 819 Loss: 17.879854202270508 Tokens per Sec: 26006.43855147088
Epoch Step: 110 / 819 Loss: 11.25648307800293 Tokens per Sec: 29264.522786117068
Epoch Step: 115 / 819 Loss: 13.425679206848145 Tokens per Sec: 25448.158235452345
Epoch Step: 120 / 819 Loss: 16.73970603942871 Tokens per Sec: 26570.513977323513
Epoch Step: 125 / 819 Loss: 16.3044490814209 Tokens per Sec: 27709.51974397107
Epoch Step: 130 / 819 Loss: 14.349315643310547 Tokens per Sec: 24720.125644631495
Epoch Step: 135 / 819 Loss: 11.065496444702148 Tokens per Sec: 26951.874847494495
Epoch Step: 140 / 819 Loss: 15.127092361450195 Tokens per Sec: 26636.501770130555
Epoch Step: 145 / 819 Loss: 18.76153564453125 Tokens per Sec: 24638.35578526514
Epoch Step: 150 / 819 Loss: 15.482940673828125 Tokens per Sec: 25446.35655292586
Epoch Step: 155 / 819 Loss: 16.233217239379883 Tokens per Sec: 26294.87318103895
Epoch Step: 160 / 819 Loss: 15.576301574707031 Tokens per Sec: 28012.24314435923
Epoch Step: 165 / 819 Loss: 15.93637466430664 Tokens per Sec: 25737.909449430867
Epoch Step: 170 / 819 Loss: 15.55099868774414 Tokens per Sec: 28244.684404353757
Epoch Step: 175 / 819 Loss: 11.976613998413086 Tokens per Sec: 26658.567763384555
Epoch Step: 180 / 819 Loss: 16.042823791503906 Tokens per Sec: 27844.50744913566
Epoch Step: 185 / 819 Loss: 20.40591049194336 Tokens per Sec: 26170.438406152934
Epoch Step: 190 / 819 Loss: 160.63348388671875 Tokens per Sec: 25943.2165015112
Epoch Step: 195 / 819 Loss: 18.37040901184082 Tokens per Sec: 24864.013250825734
Epoch Step: 200 / 819 Loss: 13.562267303466797 Tokens per Sec: 27264.321204947973
Epoch Step: 205 / 819 Loss: 19.663185119628906 Tokens per Sec: 26108.34903371992
Epoch Step: 210 / 819 Loss: 18.983640670776367 Tokens per Sec: 27217.475964414985
Epoch Step: 215 / 819 Loss: 14.030135154724121 Tokens per Sec: 23408.891469546303
Epoch Step: 220 / 819 Loss: 16.616153717041016 Tokens per Sec: 25611.255918683284
Epoch Step: 225 / 819 Loss: 14.317697525024414 Tokens per Sec: 26191.579508697654
Epoch Step: 230 / 819 Loss: 16.946916580200195 Tokens per Sec: 27724.03085043158
Epoch Step: 235 / 819 Loss: 258.5443115234375 Tokens per Sec: 26346.660952680162
Epoch Step: 240 / 819 Loss: 213.4158172607422 Tokens per Sec: 27376.65186893602
Epoch Step: 245 / 819 Loss: 15.512674331665039 Tokens per Sec: 25630.341131553298
Epoch Step: 250 / 819 Loss: 13.623716354370117 Tokens per Sec: 27850.455772825597
Epoch Step: 255 / 819 Loss: 19.287160873413086 Tokens per Sec: 26526.471311129386
Epoch Step: 260 / 819 Loss: 15.212119102478027 Tokens per Sec: 27236.176723906887
Epoch Step: 265 / 819 Loss: 16.200117111206055 Tokens per Sec: 28885.266934792897
Epoch Step: 270 / 819 Loss: 13.354546546936035 Tokens per Sec: 26725.950128067863
Epoch Step: 275 / 819 Loss: 16.774585723876953 Tokens per Sec: 25548.82331554212
Epoch Step: 280 / 819 Loss: 14.071626663208008 Tokens per Sec: 27147.291373164633
Epoch Step: 285 / 819 Loss: 17.93140983581543 Tokens per Sec: 23793.431014547874
Epoch Step: 290 / 819 Loss: 15.995636940002441 Tokens per Sec: 28132.310161415517
Epoch Step: 295 / 819 Loss: 15.441777229309082 Tokens per Sec: 25629.344532808856
Epoch Step: 300 / 819 Loss: 16.201801300048828 Tokens per Sec: 27713.638689647134
Epoch Step: 305 / 819 Loss: 13.010354042053223 Tokens per Sec: 24317.92791689024
Epoch Step: 310 / 819 Loss: 15.881658554077148 Tokens per Sec: 26731.586494691706
Epoch Step: 315 / 819 Loss: 16.260913848876953 Tokens per Sec: 27050.476231850014
Epoch Step: 320 / 819 Loss: 203.37254333496094 Tokens per Sec: 22897.502904259407
Epoch Step: 325 / 819 Loss: 15.31026840209961 Tokens per Sec: 26316.1029536512
Epoch Step: 330 / 819 Loss: 18.20357322692871 Tokens per Sec: 27725.70012419786
Epoch Step: 335 / 819 Loss: 18.474590301513672 Tokens per Sec: 26359.77559007832
Epoch Step: 340 / 819 Loss: 13.58670711517334 Tokens per Sec: 27901.172407470338
Epoch Step: 345 / 819 Loss: 15.805291175842285 Tokens per Sec: 28156.33558106134
Epoch Step: 350 / 819 Loss: 15.344132423400879 Tokens per Sec: 28714.64967529422
Epoch Step: 355 / 819 Loss: 13.893710136413574 Tokens per Sec: 26673.759107224083
Epoch Step: 360 / 819 Loss: 21.948484420776367 Tokens per Sec: 28502.96264689915
Epoch Step: 365 / 819 Loss: 111.9411849975586 Tokens per Sec: 26328.751440511904
Epoch Step: 370 / 819 Loss: 171.6233673095703 Tokens per Sec: 27248.878321397082
Epoch Step: 375 / 819 Loss: 14.604595184326172 Tokens per Sec: 24979.355246668496
Epoch Step: 380 / 819 Loss: 13.778483390808105 Tokens per Sec: 28073.491652187244
Epoch Step: 385 / 819 Loss: 210.28536987304688 Tokens per Sec: 28084.545565113265
Epoch Step: 390 / 819 Loss: 16.625938415527344 Tokens per Sec: 25463.55465992745
Epoch Step: 395 / 819 Loss: 14.203189849853516 Tokens per Sec: 28185.95805118374
Epoch Step: 400 / 819 Loss: 14.493115425109863 Tokens per Sec: 24393.385250061692
Epoch Step: 405 / 819 Loss: 16.017635345458984 Tokens per Sec: 25917.870670220083
Epoch Step: 410 / 819 Loss: 14.958674430847168 Tokens per Sec: 24347.95629718303
Epoch Step: 415 / 819 Loss: 18.323572158813477 Tokens per Sec: 28565.52596579644
Epoch Step: 420 / 819 Loss: 20.316059112548828 Tokens per Sec: 24925.200469477513
Epoch Step: 425 / 819 Loss: 18.135326385498047 Tokens per Sec: 25262.783296396454
Epoch Step: 430 / 819 Loss: 14.943537712097168 Tokens per Sec: 27128.00009590618
Epoch Step: 435 / 819 Loss: 14.843360900878906 Tokens per Sec: 28700.00368892758
Epoch Step: 440 / 819 Loss: 17.086652755737305 Tokens per Sec: 27775.906906435834
Epoch Step: 445 / 819 Loss: 16.844017028808594 Tokens per Sec: 26423.85801611664
Epoch Step: 450 / 819 Loss: 14.601237297058105 Tokens per Sec: 28152.547152029845
Epoch Step: 455 / 819 Loss: 15.383565902709961 Tokens per Sec: 27023.612782000433
Epoch Step: 460 / 819 Loss: 13.771635055541992 Tokens per Sec: 26876.223803313766
Epoch Step: 465 / 819 Loss: 16.024951934814453 Tokens per Sec: 24581.064869582235
Epoch Step: 470 / 819 Loss: 15.037925720214844 Tokens per Sec: 26413.45303203081
Epoch Step: 475 / 819 Loss: 16.26112937927246 Tokens per Sec: 26525.680665612923
Epoch Step: 480 / 819 Loss: 13.869519233703613 Tokens per Sec: 26115.82280170215
Epoch Step: 485 / 819 Loss: 18.360353469848633 Tokens per Sec: 28820.364839215883
Epoch Step: 490 / 819 Loss: 14.041973114013672 Tokens per Sec: 25471.109056999067
Epoch Step: 495 / 819 Loss: 13.873824119567871 Tokens per Sec: 26252.25900285859
Epoch Step: 500 / 819 Loss: 20.004600524902344 Tokens per Sec: 27330.182796633013
Epoch Step: 505 / 819 Loss: 15.517739295959473 Tokens per Sec: 26776.277803994755
Epoch Step: 510 / 819 Loss: 188.65855407714844 Tokens per Sec: 28333.199471007276
Epoch Step: 515 / 819 Loss: 15.767952919006348 Tokens per Sec: 26338.32305801521
Epoch Step: 520 / 819 Loss: 16.880647659301758 Tokens per Sec: 26349.461767114793
Epoch Step: 525 / 819 Loss: 22.15223503112793 Tokens per Sec: 24927.40039874608
Epoch Step: 530 / 819 Loss: 14.643049240112305 Tokens per Sec: 25893.107347910776
Epoch Step: 535 / 819 Loss: 16.092565536499023 Tokens per Sec: 24868.51925971694
Epoch Step: 540 / 819 Loss: 15.671499252319336 Tokens per Sec: 28587.79787387307
Epoch Step: 545 / 819 Loss: 16.504581451416016 Tokens per Sec: 27517.156326944238
Epoch Step: 550 / 819 Loss: 15.533403396606445 Tokens per Sec: 28124.836455024626
Epoch Step: 555 / 819 Loss: 18.574731826782227 Tokens per Sec: 24230.666697180208
Epoch Step: 560 / 819 Loss: 99.4216079711914 Tokens per Sec: 27302.853492460505
Epoch Step: 565 / 819 Loss: 16.27618408203125 Tokens per Sec: 24740.194273031644
Epoch Step: 570 / 819 Loss: 19.897186279296875 Tokens per Sec: 25450.31508427153
Epoch Step: 575 / 819 Loss: 18.441497802734375 Tokens per Sec: 28031.691093510217
Epoch Step: 580 / 819 Loss: 14.563692092895508 Tokens per Sec: 27761.812551028863
Epoch Step: 585 / 819 Loss: 15.440637588500977 Tokens per Sec: 26378.70752715767
Epoch Step: 590 / 819 Loss: 14.2178955078125 Tokens per Sec: 26418.938576072753
Epoch Step: 595 / 819 Loss: 88.27658081054688 Tokens per Sec: 26707.7410188358
Epoch Step: 600 / 819 Loss: 12.512757301330566 Tokens per Sec: 27361.29628273484
Epoch Step: 605 / 819 Loss: 11.998297691345215 Tokens per Sec: 24620.6072431903
Epoch Step: 610 / 819 Loss: 17.4691219329834 Tokens per Sec: 27087.284782643874
Epoch Step: 615 / 819 Loss: 15.386833190917969 Tokens per Sec: 23971.364416471264
Epoch Step: 620 / 819 Loss: 18.013534545898438 Tokens per Sec: 26841.92954710118
Epoch Step: 625 / 819 Loss: 17.132381439208984 Tokens per Sec: 27539.92696037544
Epoch Step: 630 / 819 Loss: 231.73793029785156 Tokens per Sec: 27484.904827234997
Epoch Step: 635 / 819 Loss: 22.312219619750977 Tokens per Sec: 24444.163512900883
Epoch Step: 640 / 819 Loss: 16.603065490722656 Tokens per Sec: 25789.485716038416
Epoch Step: 645 / 819 Loss: 19.125106811523438 Tokens per Sec: 26261.49328280074
Epoch Step: 650 / 819 Loss: 19.29059600830078 Tokens per Sec: 27000.428323962613
Epoch Step: 655 / 819 Loss: 21.7832088470459 Tokens per Sec: 26358.86205217257
Epoch Step: 660 / 819 Loss: 19.646745681762695 Tokens per Sec: 28139.209907373137
Epoch Step: 665 / 819 Loss: 20.610668182373047 Tokens per Sec: 27986.994308674053
Epoch Step: 670 / 819 Loss: 12.886690139770508 Tokens per Sec: 29099.497188147605
Epoch Step: 675 / 819 Loss: 87.76762390136719 Tokens per Sec: 26657.32136782166
Epoch Step: 680 / 819 Loss: 19.813980102539062 Tokens per Sec: 26382.959192092858
Epoch Step: 685 / 819 Loss: 16.827701568603516 Tokens per Sec: 27699.098345311966
Epoch Step: 690 / 819 Loss: 20.712665557861328 Tokens per Sec: 27480.23028926781
Epoch Step: 695 / 819 Loss: 19.032527923583984 Tokens per Sec: 26095.60816592819
Epoch Step: 700 / 819 Loss: 13.266922950744629 Tokens per Sec: 24775.479748568603
Epoch Step: 705 / 819 Loss: 14.793827056884766 Tokens per Sec: 25288.418258920097
Epoch Step: 710 / 819 Loss: 15.073469161987305 Tokens per Sec: 26061.112257257188
Epoch Step: 715 / 819 Loss: 13.865052223205566 Tokens per Sec: 26575.990096803933
Epoch Step: 720 / 819 Loss: 15.276296615600586 Tokens per Sec: 26650.14648460887
Epoch Step: 725 / 819 Loss: 178.8134307861328 Tokens per Sec: 23409.667264737138
Epoch Step: 730 / 819 Loss: 16.444534301757812 Tokens per Sec: 27705.76691416851
Epoch Step: 735 / 819 Loss: 20.242528915405273 Tokens per Sec: 28388.121190287184
Epoch Step: 740 / 819 Loss: 18.225330352783203 Tokens per Sec: 28384.369522699493
Epoch Step: 745 / 819 Loss: 19.6588191986084 Tokens per Sec: 26971.693246417115
Epoch Step: 750 / 819 Loss: 22.147035598754883 Tokens per Sec: 27463.10044100378
Epoch Step: 755 / 819 Loss: 21.242267608642578 Tokens per Sec: 27929.263506192183
Epoch Step: 760 / 819 Loss: 106.36035919189453 Tokens per Sec: 27571.45747917693
Epoch Step: 765 / 819 Loss: 13.292400360107422 Tokens per Sec: 26392.302801837955
Epoch Step: 770 / 819 Loss: 14.314560890197754 Tokens per Sec: 25755.243500634457
Epoch Step: 775 / 819 Loss: 15.733377456665039 Tokens per Sec: 27305.561946208963
Epoch Step: 780 / 819 Loss: 19.334613800048828 Tokens per Sec: 25458.12068710744
Epoch Step: 785 / 819 Loss: 199.23965454101562 Tokens per Sec: 26813.119718971593
Epoch Step: 790 / 819 Loss: 15.926257133483887 Tokens per Sec: 26507.10570380538
Epoch Step: 795 / 819 Loss: 18.14325714111328 Tokens per Sec: 24615.12493642803
Epoch Step: 800 / 819 Loss: 140.01370239257812 Tokens per Sec: 27569.678035980687
Epoch Step: 805 / 819 Loss: 14.04227352142334 Tokens per Sec: 20924.546971429994
Epoch Step: 810 / 819 Loss: 16.216405868530273 Tokens per Sec: 26127.49209552066
Epoch Step: 815 / 819 Loss: 14.519719123840332 Tokens per Sec: 24502.689045269446
Epoch ended with duration 0:02:26.601694
Train perplexity: 1.5639256453752397
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.124111
Validation perplexity: 1.6324745024372316
Epoch 54 / 1000
Epoch Step: 5 / 819 Loss: 12.747916221618652 Tokens per Sec: 25270.754801432337
Epoch Step: 10 / 819 Loss: 14.291231155395508 Tokens per Sec: 27961.10770183984
Epoch Step: 15 / 819 Loss: 15.661925315856934 Tokens per Sec: 25682.446254636
Epoch Step: 20 / 819 Loss: 14.000204086303711 Tokens per Sec: 23751.531550837408
Epoch Step: 25 / 819 Loss: 11.392867088317871 Tokens per Sec: 27410.99020559353
Epoch Step: 30 / 819 Loss: 14.084369659423828 Tokens per Sec: 27622.808485920552
Epoch Step: 35 / 819 Loss: 19.146141052246094 Tokens per Sec: 26948.46735890925
Epoch Step: 40 / 819 Loss: 107.66492462158203 Tokens per Sec: 27826.51080828296
Epoch Step: 45 / 819 Loss: 19.76779556274414 Tokens per Sec: 27050.365923411555
Epoch Step: 50 / 819 Loss: 14.54854965209961 Tokens per Sec: 24973.739405396864
Epoch Step: 55 / 819 Loss: 20.497835159301758 Tokens per Sec: 27532.67238786052
Epoch Step: 60 / 819 Loss: 16.16600227355957 Tokens per Sec: 29145.88322225007
Epoch Step: 65 / 819 Loss: 15.548052787780762 Tokens per Sec: 24295.569104733968
Epoch Step: 70 / 819 Loss: 15.995628356933594 Tokens per Sec: 26627.68433076459
Epoch Step: 75 / 819 Loss: 12.409581184387207 Tokens per Sec: 25658.60548514695
Epoch Step: 80 / 819 Loss: 13.500910758972168 Tokens per Sec: 28426.73451727025
Epoch Step: 85 / 819 Loss: 19.752172470092773 Tokens per Sec: 26387.29711460149
Epoch Step: 90 / 819 Loss: 15.976312637329102 Tokens per Sec: 25481.682317464463
Epoch Step: 95 / 819 Loss: 18.018844604492188 Tokens per Sec: 27572.265440280415
Epoch Step: 100 / 819 Loss: 10.825202941894531 Tokens per Sec: 27201.86044565158
Epoch Step: 105 / 819 Loss: 15.95828914642334 Tokens per Sec: 27155.22619005131
Epoch Step: 110 / 819 Loss: 18.02928352355957 Tokens per Sec: 26295.328119105754
Epoch Step: 115 / 819 Loss: 19.03889274597168 Tokens per Sec: 27346.302405144117
Epoch Step: 120 / 819 Loss: 96.90609741210938 Tokens per Sec: 27308.273085465586
Epoch Step: 125 / 819 Loss: 18.355911254882812 Tokens per Sec: 25965.08578204441
Epoch Step: 130 / 819 Loss: 13.095516204833984 Tokens per Sec: 26537.91942600454
Epoch Step: 135 / 819 Loss: 15.4541654586792 Tokens per Sec: 26171.90976980682
Epoch Step: 140 / 819 Loss: 13.074774742126465 Tokens per Sec: 28690.814264471603
Epoch Step: 145 / 819 Loss: 15.659740447998047 Tokens per Sec: 26221.338166718746
Epoch Step: 150 / 819 Loss: 13.437891960144043 Tokens per Sec: 27766.684598366177
Epoch Step: 155 / 819 Loss: 151.99807739257812 Tokens per Sec: 25603.93856309261
Epoch Step: 160 / 819 Loss: 12.83541202545166 Tokens per Sec: 26528.797541003656
Epoch Step: 165 / 819 Loss: 17.189775466918945 Tokens per Sec: 26097.088700333992
Epoch Step: 170 / 819 Loss: 11.270795822143555 Tokens per Sec: 25949.252893595305
Epoch Step: 175 / 819 Loss: 11.433788299560547 Tokens per Sec: 24809.23024818703
Epoch Step: 180 / 819 Loss: 14.011948585510254 Tokens per Sec: 26901.64194810815
Epoch Step: 185 / 819 Loss: 15.945218086242676 Tokens per Sec: 28120.016675322273
Epoch Step: 190 / 819 Loss: 14.49588680267334 Tokens per Sec: 27928.476826269216
Epoch Step: 195 / 819 Loss: 16.198772430419922 Tokens per Sec: 28665.137608582507
Epoch Step: 200 / 819 Loss: 12.854242324829102 Tokens per Sec: 26440.58083382434
Epoch Step: 205 / 819 Loss: 14.772966384887695 Tokens per Sec: 27935.619750464448
Epoch Step: 210 / 819 Loss: 18.708871841430664 Tokens per Sec: 27390.581833443055
Epoch Step: 215 / 819 Loss: 16.660764694213867 Tokens per Sec: 27851.51787698774
Epoch Step: 220 / 819 Loss: 15.274069786071777 Tokens per Sec: 25674.971630578508
Epoch Step: 225 / 819 Loss: 20.144512176513672 Tokens per Sec: 28865.788578955595
Epoch Step: 230 / 819 Loss: 16.348337173461914 Tokens per Sec: 26536.22692530176
Epoch Step: 235 / 819 Loss: 15.197733879089355 Tokens per Sec: 25128.138721905758
Epoch Step: 240 / 819 Loss: 13.099742889404297 Tokens per Sec: 26820.02318811136
Epoch Step: 245 / 819 Loss: 16.788949966430664 Tokens per Sec: 27703.418719118425
Epoch Step: 250 / 819 Loss: 16.965229034423828 Tokens per Sec: 25084.790926559224
Epoch Step: 255 / 819 Loss: 19.229507446289062 Tokens per Sec: 25069.39837424515
Epoch Step: 260 / 819 Loss: 12.615159034729004 Tokens per Sec: 28618.971791535256
Epoch Step: 265 / 819 Loss: 16.1396484375 Tokens per Sec: 26648.47696376208
Epoch Step: 270 / 819 Loss: 18.677595138549805 Tokens per Sec: 24685.324710818342
Epoch Step: 275 / 819 Loss: 16.43873405456543 Tokens per Sec: 24263.677080110694
Epoch Step: 280 / 819 Loss: 14.076560020446777 Tokens per Sec: 23787.520581331344
Epoch Step: 285 / 819 Loss: 18.585901260375977 Tokens per Sec: 23965.845708532663
Epoch Step: 290 / 819 Loss: 15.899332046508789 Tokens per Sec: 26320.533626121352
Epoch Step: 295 / 819 Loss: 18.865198135375977 Tokens per Sec: 25056.445045892797
Epoch Step: 300 / 819 Loss: 20.947298049926758 Tokens per Sec: 24998.49770538
Epoch Step: 305 / 819 Loss: 14.160415649414062 Tokens per Sec: 28094.08183062618
Epoch Step: 310 / 819 Loss: 14.239557266235352 Tokens per Sec: 26072.0931214452
Epoch Step: 315 / 819 Loss: 14.832483291625977 Tokens per Sec: 27129.28373027138
Epoch Step: 320 / 819 Loss: 14.405329704284668 Tokens per Sec: 26883.951722479294
Epoch Step: 325 / 819 Loss: 14.746660232543945 Tokens per Sec: 25747.214988959026
Epoch Step: 330 / 819 Loss: 12.69430160522461 Tokens per Sec: 26744.918465736882
Epoch Step: 335 / 819 Loss: 156.4867401123047 Tokens per Sec: 21806.451193801033
Epoch Step: 340 / 819 Loss: 15.986302375793457 Tokens per Sec: 21643.712706234754
Epoch Step: 345 / 819 Loss: 17.069040298461914 Tokens per Sec: 26967.272000183628
Epoch Step: 350 / 819 Loss: 18.126930236816406 Tokens per Sec: 27014.935563359475
Epoch Step: 355 / 819 Loss: 15.252957344055176 Tokens per Sec: 26548.79580007136
Epoch Step: 360 / 819 Loss: 16.31800651550293 Tokens per Sec: 27657.695859711126
Epoch Step: 365 / 819 Loss: 19.595014572143555 Tokens per Sec: 25331.87818679062
Epoch Step: 370 / 819 Loss: 209.76788330078125 Tokens per Sec: 26073.233583383502
Epoch Step: 375 / 819 Loss: 19.725948333740234 Tokens per Sec: 25486.670223215868
Epoch Step: 380 / 819 Loss: 14.310422897338867 Tokens per Sec: 23654.859691667785
Epoch Step: 385 / 819 Loss: 15.431689262390137 Tokens per Sec: 27284.840010869637
Epoch Step: 390 / 819 Loss: 12.866827011108398 Tokens per Sec: 25803.60821348408
Epoch Step: 395 / 819 Loss: 18.92636489868164 Tokens per Sec: 25427.354195110118
Epoch Step: 400 / 819 Loss: 16.074359893798828 Tokens per Sec: 24296.63695232544
Epoch Step: 405 / 819 Loss: 18.816661834716797 Tokens per Sec: 27465.604677535248
Epoch Step: 410 / 819 Loss: 12.517128944396973 Tokens per Sec: 25708.5572858881
Epoch Step: 415 / 819 Loss: 14.352839469909668 Tokens per Sec: 27491.633144045078
Epoch Step: 420 / 819 Loss: 14.009782791137695 Tokens per Sec: 26380.473869787733
Epoch Step: 425 / 819 Loss: 16.571990966796875 Tokens per Sec: 24317.240941703
Epoch Step: 430 / 819 Loss: 20.353046417236328 Tokens per Sec: 26861.75275921893
Epoch Step: 435 / 819 Loss: 12.65151596069336 Tokens per Sec: 24946.179058140726
Epoch Step: 440 / 819 Loss: 16.80982780456543 Tokens per Sec: 26252.74704824523
Epoch Step: 445 / 819 Loss: 20.42264175415039 Tokens per Sec: 23336.99476501417
Epoch Step: 450 / 819 Loss: 13.70108413696289 Tokens per Sec: 27172.524216366808
Epoch Step: 455 / 819 Loss: 12.73832893371582 Tokens per Sec: 25906.18567219635
Epoch Step: 460 / 819 Loss: 15.52983283996582 Tokens per Sec: 25352.372485797714
Epoch Step: 465 / 819 Loss: 19.177658081054688 Tokens per Sec: 25377.582449964222
Epoch Step: 470 / 819 Loss: 12.19405746459961 Tokens per Sec: 27642.21522033133
Epoch Step: 475 / 819 Loss: 199.25341796875 Tokens per Sec: 27253.63873423386
Epoch Step: 480 / 819 Loss: 16.970783233642578 Tokens per Sec: 28503.413253895724
Epoch Step: 485 / 819 Loss: 18.081642150878906 Tokens per Sec: 25889.521505281176
Epoch Step: 490 / 819 Loss: 14.921213150024414 Tokens per Sec: 25260.303226854005
Epoch Step: 495 / 819 Loss: 19.233095169067383 Tokens per Sec: 24943.743685069632
Epoch Step: 500 / 819 Loss: 201.50050354003906 Tokens per Sec: 26490.41722533323
Epoch Step: 505 / 819 Loss: 18.667848587036133 Tokens per Sec: 24399.633827342233
Epoch Step: 510 / 819 Loss: 14.71534252166748 Tokens per Sec: 22518.117183961585
Epoch Step: 515 / 819 Loss: 19.82674789428711 Tokens per Sec: 25683.20243447288
Epoch Step: 520 / 819 Loss: 15.607779502868652 Tokens per Sec: 25524.689528040573
Epoch Step: 525 / 819 Loss: 17.251094818115234 Tokens per Sec: 26903.652708028112
Epoch Step: 530 / 819 Loss: 12.169005393981934 Tokens per Sec: 28345.89243805741
Epoch Step: 535 / 819 Loss: 18.081724166870117 Tokens per Sec: 25066.701735415685
Epoch Step: 540 / 819 Loss: 12.550393104553223 Tokens per Sec: 26735.357464600478
Epoch Step: 545 / 819 Loss: 16.11328887939453 Tokens per Sec: 26507.353873835877
Epoch Step: 550 / 819 Loss: 117.25057220458984 Tokens per Sec: 28057.850191474357
Epoch Step: 555 / 819 Loss: 13.83420181274414 Tokens per Sec: 24182.47828325589
Epoch Step: 560 / 819 Loss: 15.987778663635254 Tokens per Sec: 28883.079361479227
Epoch Step: 565 / 819 Loss: 19.75872230529785 Tokens per Sec: 22856.96050634003
Epoch Step: 570 / 819 Loss: 18.873558044433594 Tokens per Sec: 25427.332265206445
Epoch Step: 575 / 819 Loss: 19.79515266418457 Tokens per Sec: 24656.06408008777
Epoch Step: 580 / 819 Loss: 14.209672927856445 Tokens per Sec: 24456.13600490234
Epoch Step: 585 / 819 Loss: 19.563827514648438 Tokens per Sec: 27554.86088552811
Epoch Step: 590 / 819 Loss: 15.221491813659668 Tokens per Sec: 25817.235027351682
Epoch Step: 595 / 819 Loss: 18.274503707885742 Tokens per Sec: 27998.24538036564
Epoch Step: 600 / 819 Loss: 18.452159881591797 Tokens per Sec: 25944.277075388287
Epoch Step: 605 / 819 Loss: 20.453815460205078 Tokens per Sec: 25567.291663573717
Epoch Step: 610 / 819 Loss: 16.778337478637695 Tokens per Sec: 22478.165114192732
Epoch Step: 615 / 819 Loss: 16.69017219543457 Tokens per Sec: 24571.15663164653
Epoch Step: 620 / 819 Loss: 19.205018997192383 Tokens per Sec: 26731.919999910035
Epoch Step: 625 / 819 Loss: 140.4313507080078 Tokens per Sec: 22526.0741436574
Epoch Step: 630 / 819 Loss: 19.397815704345703 Tokens per Sec: 26101.06030811241
Epoch Step: 635 / 819 Loss: 15.659732818603516 Tokens per Sec: 25936.33018322083
Epoch Step: 640 / 819 Loss: 17.151254653930664 Tokens per Sec: 21864.522585600636
Epoch Step: 645 / 819 Loss: 15.276230812072754 Tokens per Sec: 26359.702007188982
Epoch Step: 650 / 819 Loss: 16.589405059814453 Tokens per Sec: 24217.22602630273
Epoch Step: 655 / 819 Loss: 12.150388717651367 Tokens per Sec: 27331.813802131994
Epoch Step: 660 / 819 Loss: 15.241087913513184 Tokens per Sec: 24987.223148289828
Epoch Step: 665 / 819 Loss: 17.727495193481445 Tokens per Sec: 26056.400093597644
Epoch Step: 670 / 819 Loss: 16.00057029724121 Tokens per Sec: 26057.610250714035
Epoch Step: 675 / 819 Loss: 21.098432540893555 Tokens per Sec: 22901.87318796723
Epoch Step: 680 / 819 Loss: 14.753573417663574 Tokens per Sec: 27248.183063870907
Epoch Step: 685 / 819 Loss: 15.777910232543945 Tokens per Sec: 24508.419859348665
Epoch Step: 690 / 819 Loss: 11.471831321716309 Tokens per Sec: 26001.657506680338
Epoch Step: 695 / 819 Loss: 65.74793243408203 Tokens per Sec: 25034.8708464096
Epoch Step: 700 / 819 Loss: 209.53466796875 Tokens per Sec: 25549.31970537502
Epoch Step: 705 / 819 Loss: 12.037985801696777 Tokens per Sec: 26235.1484584562
Epoch Step: 710 / 819 Loss: 17.749462127685547 Tokens per Sec: 26075.501337395322
Epoch Step: 715 / 819 Loss: 17.00655174255371 Tokens per Sec: 24415.42040287608
Epoch Step: 720 / 819 Loss: 17.653352737426758 Tokens per Sec: 25959.834498133398
Epoch Step: 725 / 819 Loss: 15.059699058532715 Tokens per Sec: 25807.66431355192
Epoch Step: 730 / 819 Loss: 20.500877380371094 Tokens per Sec: 24412.87249988155
Epoch Step: 735 / 819 Loss: 19.290061950683594 Tokens per Sec: 24823.871969007792
Epoch Step: 740 / 819 Loss: 12.530272483825684 Tokens per Sec: 25268.66871658935
Epoch Step: 745 / 819 Loss: 15.872323036193848 Tokens per Sec: 24280.29347672054
Epoch Step: 750 / 819 Loss: 20.651308059692383 Tokens per Sec: 26507.586588174974
Epoch Step: 755 / 819 Loss: 14.166468620300293 Tokens per Sec: 26987.14412304633
Epoch Step: 760 / 819 Loss: 15.757630348205566 Tokens per Sec: 28641.358155191945
Epoch Step: 765 / 819 Loss: 13.431981086730957 Tokens per Sec: 26432.4878245699
Epoch Step: 770 / 819 Loss: 14.297816276550293 Tokens per Sec: 28641.582574762102
Epoch Step: 775 / 819 Loss: 195.1493377685547 Tokens per Sec: 26135.107118234067
Epoch Step: 780 / 819 Loss: 16.858659744262695 Tokens per Sec: 27307.9459001426
Epoch Step: 785 / 819 Loss: 13.229811668395996 Tokens per Sec: 26317.549838107705
Epoch Step: 790 / 819 Loss: 17.193134307861328 Tokens per Sec: 23557.91457134772
Epoch Step: 795 / 819 Loss: 18.380712509155273 Tokens per Sec: 26389.495024947442
Epoch Step: 800 / 819 Loss: 14.415077209472656 Tokens per Sec: 24606.52853693016
Epoch Step: 805 / 819 Loss: 16.232707977294922 Tokens per Sec: 23025.243225554128
Epoch Step: 810 / 819 Loss: 13.7600736618042 Tokens per Sec: 20896.453480635973
Epoch Step: 815 / 819 Loss: 16.187042236328125 Tokens per Sec: 23710.14743814311
Epoch ended with duration 0:02:29.879213
Train perplexity: 1.5315531268201756
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:06.292735
Validation perplexity: 1.6173560227192114
Training was early stopped on epoch 55 with early stopping rounds 25
[17.466567470867375, 7.7676892507457485, 5.204281533756126, 3.667921703053455, 2.7194412064188374, 2.3768575105435517, 2.1484457968595003, 1.9698324499968172, 2.0269898768205907, 1.9055390965081287, 1.8003782217478277, 1.8405274523973616, 1.6828435624614897, 1.742822772640886, 1.6709663496784362, 1.7259185932821732, 1.6222659647949338, 1.6425185527162003, 1.728106476650166, 1.6325636840798146, 1.6467910588584498, 1.6498578486105078, 1.6633652655678697, 1.667509609478533, 1.6342548530571692, 1.5941237174168699, 1.6850631367241609, 1.670743965972513, 1.503222380838407, 1.632557164823537, 1.5539699693276026, 1.579448759618387, 1.6202838148335115, 1.5897207267490667, 1.590809485042954, 1.5840745101505689, 1.5809898056710137, 1.5698988856966296, 1.6002739864621154, 1.5303326398804185, 1.5839456619206629, 1.6129115120998, 1.5673590675091695, 1.62857296306464, 1.5866675609784349, 1.5836277277483997, 1.5158611189394968, 1.5360024378785984, 1.5568529932335398, 1.5236852300027406, 1.5148141505149233, 1.5555827501081696, 1.4729095732353736, 1.5639256453752397, 1.5315531268201756]
[9.408230207595267, 5.634907309788867, 3.9454831446014516, 2.6868931292131326, 2.513601193951455, 2.3586061797502786, 2.0611857488690855, 2.0377155435252705, 1.8214209468035951, 1.7801486125638928, 1.765255746925148, 1.6927722258817322, 1.525982443040332, 1.6183047718039019, 1.8550258615163264, 1.4977156176954416, 1.7675602456940642, 1.5698969781957954, 2.047613330821763, 1.6765034435393007, 1.610340043605342, 1.6233762923553317, 1.781581632974478, 1.5324496638114486, 1.7459160492359158, 1.669668002528026, 1.6770419314557015, 1.5632696871821177, 1.5647282662763726, 1.3181002128584833, 1.60451491433902, 1.7163163264626018, 1.4839180885464216, 1.606686301249729, 1.508892638731065, 1.58926437565816, 1.6072326252588711, 1.5155317574295042, 1.5747013177462885, 1.6711164746874274, 1.6359811314443018, 1.4833601276154595, 1.4531462107810096, 1.5199685693360168, 1.5214920824524327, 1.455477012376799, 1.5717506488240638, 1.5321142148351412, 1.5644146768378155, 1.5449173849784275, 1.7792489006487944, 1.512203545218204, 1.547805336098902, 1.6324745024372316, 1.6173560227192114]
Model saved checkpoint!

====STARTING EVALUATION====
Data set sizes (number of sentence pairs):
train 52364
valid 6546
test 6545 

First training example:
src: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
trg: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = null ; if ( date != null ) { VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; } VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
diff_alignment: добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг
diff_updated: null ; if ( date != null ) { VAR_2 = } 

Most common words:
         (    1161894
         )    1161834
         ;     560486
         .     507926
   паддинг     402443
     VAR_1     294376
         }     265934
         {     265752
         ,     245004
  удаление     239732 

First 10 words:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 .
08 паддинг
09 VAR_1 

Special words frequency and ids: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 58185 33
удаление 239732 13
добавление 162711 17
равенство 0 0
паддинг 402443 8
Number of words (types): 497
Start conducting accuracy calculation experiment for Tufano Labeled 0 50 Code Changes...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 388 = 0.0
Top-3 accuracy: 15 / 388 = 0.03865979381443299
Top-5 accuracy: 22 / 388 = 0.05670103092783505
Top-10 accuracy: 30 / 388 = 0.07731958762886598
Top-50 accuracy: 45 / 388 = 0.11597938144329897
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 0 / 388 = 0.0
Top-3 accuracy: 15 / 388 = 0.03865979381443299
Top-5 accuracy: 22 / 388 = 0.05670103092783505
Top-10 accuracy: 30 / 388 = 0.07731958762886598
Top-50 accuracy: 45 / 388 = 0.11597938144329897
Duration: 0:04:06.410711

Start conducting accuracy calculation experiment for Tufano Labeled 50 100 Code Changes...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 244 = 0.004098360655737705
Top-3 accuracy: 10 / 244 = 0.040983606557377046
Top-5 accuracy: 11 / 244 = 0.045081967213114756
Top-10 accuracy: 12 / 244 = 0.04918032786885246
Top-50 accuracy: 13 / 244 = 0.05327868852459016
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 244 = 0.004098360655737705
Top-3 accuracy: 10 / 244 = 0.040983606557377046
Top-5 accuracy: 11 / 244 = 0.045081967213114756
Top-10 accuracy: 12 / 244 = 0.04918032786885246
Top-50 accuracy: 13 / 244 = 0.05327868852459016
Duration: 0:02:31.910794

Start conducting accuracy calculation experiment for Defects4J...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 20 = 0.0
Top-3 accuracy: 0 / 20 = 0.0
Top-5 accuracy: 1 / 20 = 0.05
Top-10 accuracy: 1 / 20 = 0.05
Top-50 accuracy: 1 / 20 = 0.05
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 0 / 20 = 0.0
Top-3 accuracy: 0 / 20 = 0.0
Top-5 accuracy: 1 / 20 = 0.05
Top-10 accuracy: 1 / 20 = 0.05
Top-50 accuracy: 1 / 20 = 0.05
Duration: 0:00:21.545577

Start conducting accuracy calculation experiment for Test dataset 300...
BUG FIXING ACCURACY
Top-1 accuracy: 7 / 300 = 0.023333333333333334
Top-3 accuracy: 22 / 300 = 0.07333333333333333
Top-5 accuracy: 29 / 300 = 0.09666666666666666
Top-10 accuracy: 39 / 300 = 0.13
Top-50 accuracy: 63 / 300 = 0.21
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 7 / 300 = 0.023333333333333334
Top-3 accuracy: 22 / 300 = 0.07333333333333333
Top-5 accuracy: 29 / 300 = 0.09666666666666666
Top-10 accuracy: 39 / 300 = 0.13
Top-50 accuracy: 63 / 300 = 0.21
Duration: 0:03:03.027978

Start conducting accuracy calculation experiment for Validation dataset 300...
BUG FIXING ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 21 / 300 = 0.07
Top-5 accuracy: 28 / 300 = 0.09333333333333334
Top-10 accuracy: 41 / 300 = 0.13666666666666666
Top-50 accuracy: 59 / 300 = 0.19666666666666666
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 21 / 300 = 0.07
Top-5 accuracy: 28 / 300 = 0.09333333333333334
Top-10 accuracy: 41 / 300 = 0.13666666666666666
Top-50 accuracy: 59 / 300 = 0.19666666666666666
Duration: 0:03:02.892540

Start conducting accuracy calculation experiment for Train dataset 300...
BUG FIXING ACCURACY
Top-1 accuracy: 4 / 300 = 0.013333333333333334
Top-3 accuracy: 30 / 300 = 0.1
Top-5 accuracy: 39 / 300 = 0.13
Top-10 accuracy: 53 / 300 = 0.17666666666666667
Top-50 accuracy: 74 / 300 = 0.24666666666666667
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 4 / 300 = 0.013333333333333334
Top-3 accuracy: 30 / 300 = 0.1
Top-5 accuracy: 39 / 300 = 0.13
Top-10 accuracy: 53 / 300 = 0.17666666666666667
Top-50 accuracy: 74 / 300 = 0.24666666666666667
Duration: 0:03:02.400878

Start conducting one shot learning experiment for Tufano Labeled 0 50 Code Changes...
Top-1 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 0 / 64 = 0.0
Top-3 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 2 / 64 = 0.03125
Top-5 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 4 / 64 = 0.0625
Top-10 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 4 / 64 = 0.0625
Top-50 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 5 / 64 = 0.078125

Top-1 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 0 / 324 = 0.0
Top-3 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 13 / 324 = 0.040123456790123455
Top-5 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 18 / 324 = 0.05555555555555555
Top-10 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 26 / 324 = 0.08024691358024691
Top-50 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 40 / 324 = 0.12345679012345678
================
Correct Examples
================
================
Incorrect Examples
Class: Abstract an existing method using the abstract keyword
Golden example (False):
[31mExample #1[0m
Src : void METHOD_1 ( int index , short value ) { throw new TYPE_1 ( ) ; }[0m
Trg : <unk> void METHOD_1 ( int index , short value ) ;[0m
Pred: void METHOD_1 ( int index , short value ) { throw new TYPE_1 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public java.lang.String METHOD_1 ( ) { throw new TYPE_1 ( ) ; }[0m
Trg : public <unk> java.lang.String METHOD_1 ( ) ;[0m
Pred: public java.lang.String METHOD_1 ( ) { throw new TYPE_1 ( ) ; }[0m
[31mExample #2[0m
Src : public synchronized boolean METHOD_1 ( ) { throw new TYPE_1 ( ) ; }[0m
Trg : public <unk> boolean METHOD_1 ( ) ;[0m
Pred: public synchronized boolean METHOD_1 ( ) { throw new TYPE_1 ( ) ; throw new TYPE_1 ( ) ; }[0m
[31mExample #3[0m
Src : public java.lang.String METHOD_1 ( java.lang.String url ) { throw new TYPE_1 ( ) ; }[0m
Trg : public <unk> java.lang.String METHOD_1 ( java.lang.String url ) ;[0m
Pred: public java.lang.String METHOD_1 ( java.lang.String url ) { throw new TYPE_1 ( ) ; throw new TYPE_1 ( ) ; }[0m
[31mExample #4[0m
Src : float METHOD_1 ( int index ) { throw new TYPE_1 ( ) ; }[0m
Trg : <unk> float METHOD_1 ( int index ) ;[0m
Pred: float METHOD_1 ( int index ) { throw new TYPE_1 ( ) ; throw new TYPE_1 ( ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) { throw new TYPE_3 ( ) ; }[0m
Trg : public <unk> void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) ;[0m
Pred: public void METHOD_1 ( TYPE_1 < TYPE_2 > TYPE_2 ) { throw new TYPE_3 ( ) ; }[0m
---------------
Class: Add invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; } catch ( <unk> <unk> ) { } }[0m
Trg : public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; fail ( ) ; } catch ( <unk> <unk> ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; } catch ( java.lang.Math.random ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public <unk> . <unk> METHOD_1 ( ) { return new <unk> ( <unk> . <unk> ) ; }[0m
Trg : public <unk> . <unk> METHOD_1 ( ) { return new <unk> ( <unk> . get ( ) . <unk> ) ; }[0m
Pred: public java.lang.Long METHOD_1 ( ) { return new java.lang.Math.random ( java.lang.Math.random ( ) ) ; }[0m
[31mExample #2[0m
Src : final void METHOD_1 ( int offset , int value ) { VAR_1 . METHOD_2 ( ( offset + ( <unk> ) ) , value ) ; }[0m
Trg : final void METHOD_1 ( int offset , int value ) { VAR_1 . METHOD_1 ( ( offset + ( <unk> ) ) , value ) ; }[0m
Pred: final void METHOD_1 ( int offset , int value ) { VAR_1 . METHOD_2 ( ( offset + ( java.lang.Math.random ) ) , value ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . name = STRING_1 ; VAR_1 = STRING_2 ; METHOD_2 ( <unk> , VAR_2 class ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . name = name ( STRING_1 ) ; VAR_1 = STRING_2 ; METHOD_2 ( <unk> , VAR_2 class ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 TYPE_1 = new TYPE_1 ( ) ; TYPE_2 . name = STRING_1 ; VAR_1 = STRING_2 ; METHOD_2 ( VAR_2 , VAR_2 class ) ; }[0m
[31mExample #4[0m
Src : static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 <unk> ) { TYPE_1 <unk> = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) ; return <unk> ; }[0m
Trg : static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 <unk> ) { TYPE_1 <unk> = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ; return <unk> ; }[0m
Pred: static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 TYPE_1 ) { TYPE_1 TYPE_1 = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) ; return VAR_2 ; }[0m
[31mExample #5[0m
Src : private TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . <unk> ( ( ( java.lang.String ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) ; } catch ( java.lang.Exception <unk> ) { return VAR_2 ; } }[0m
Trg : private TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . <unk> ( ( ( java.lang.String ) ( TYPE_2 . <unk> ( ) . METHOD_2 ( VAR_1 ) ) ) ) ; } catch ( java.lang.Exception <unk> ) { return VAR_2 ; } }[0m
Pred: private TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . TYPE_1 ( ( ( java.lang.String ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) ; } catch ( java.lang.Exception ( ) ) { return VAR_2 ; } }[0m
---------------
Class: Add null check
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( final java.lang.String name ) { if ( ( name != null ) && ( ! ( name . isEmpty ( ) ) ) ) { this . name = name ; } }[0m
Trg : public void METHOD_1 ( final java.lang.String name ) { this . name = name ; }[0m
Pred: public void METHOD_1 ( final java.lang.String name ) { if ( ( name != null ) && ( ! ( name . isEmpty ( ) ) ) ) { this . name = name ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( ) { VAR_1 . METHOD_1 ( this , status ) ; }[0m
Trg : public void <unk> ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( this , status ) ; } }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( this , status ) ; }[0m
[31mExample #2[0m
Src : void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) { VAR_1 . METHOD_2 ( <unk> . getValue ( ) ) ; view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; }[0m
Trg : void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) { VAR_1 . METHOD_2 ( <unk> . getValue ( ) ) ; if ( ( view ) != null ) { view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; } }[0m
Pred: void METHOD_1 ( TYPE_1 < TYPE_2 > ) { VAR_1 . METHOD_2 ( java.lang.Math.random ( ) ) ; view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; }[0m
[31mExample #3[0m
Src : void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; }[0m
Trg : void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } }[0m
Pred: void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; }[0m
[31mExample #4[0m
Src : public int [ ] METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public int [ ] METHOD_1 ( ) { return ( VAR_1 ) == null ? null : VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public int [ ] METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { VAR_1 . <unk> ( ) ; }[0m
Trg : public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . <unk> ( ) ; } }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . intValue ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_1 ( ) ; } VAR_2 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( ) ; this . VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; }[0m
---------------
Class: Add parameter in the method/constructor invocation
Golden example (False):
[31mExample #1[0m
Src : public void <unk> ( TYPE_1 result ) { TYPE_2 . <unk> ( TYPE_3 . METHOD_1 ( VAR_1 . <unk> ( ) ) ) ; }[0m
Trg : public void <unk> ( TYPE_1 result ) { TYPE_2 . <unk> ( TYPE_3 . METHOD_1 ( <unk> , VAR_1 . <unk> ( ) ) ) ; }[0m
Pred: public void delete ( TYPE_1 result ) { TYPE_2 . assertTrue ( TYPE_3 . METHOD_1 ( VAR_1 . intValue ( ) ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , <unk> <unk> ) { TYPE_1 params = new TYPE_1 ( VAR_1 , <unk> ) ; params . METHOD_2 ( TYPE_2 . <unk> ( ) . METHOD_3 ( ) ) ; return params ; }[0m
Trg : private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , <unk> <unk> ) { TYPE_1 params = new TYPE_1 ( VAR_1 , <unk> , true ) ; params . METHOD_2 ( TYPE_2 . <unk> ( ) . METHOD_3 ( ) ) ; return params ; }[0m
Pred: private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.Long ) { TYPE_1 params = new TYPE_1 ( VAR_1 , 0L ) ; params . METHOD_2 ( TYPE_2 . trim ( ) . METHOD_3 ( ) ) ; return params ; }[0m
[31mExample #2[0m
Src : public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) ) ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . <unk> ) ) ; }[0m
Trg : public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_2 . <unk> ) ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . <unk> ) ) ; }[0m
Pred: public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) ) ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . intValue ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , null ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , null ) , null ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , null ) ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( 1.0F ) ; }[0m
[31mExample #4[0m
Src : private <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , VAR_1 , true , null , false , null ) ; }[0m
Trg : private <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , null , VAR_1 , true , null , false , null ) ; }[0m
Pred: private static METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( VAR_2 . METHOD_3 ( ) , name , true , null , null , VAR_1 , true , null , false , null ) ; }[0m
[31mExample #5[0m
Src : private <unk> METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , VAR_1 , false , null , null , VAR_2 , true ) ; }[0m
Trg : private <unk> METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , VAR_1 , false , null , null , VAR_2 , true , null ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_1 , false , null , null , VAR_2 , true ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( boolean VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; } } catch ( <unk> VAR_5 ) { } }[0m
Trg : public void METHOD_1 ( boolean VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , null ) ; } } catch ( <unk> VAR_5 ) { } }[0m
Pred: public void METHOD_1 ( boolean VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; } } catch ( TYPE_2 VAR_5 ) { } }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_1 . METHOD_6 ( VAR_2 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_1 . METHOD_6 ( VAR_2 , false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_1 . METHOD_6 ( VAR_2 ) ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , null ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 <unk> ) { } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , null , true ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 <unk> ) { } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , null ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 ) { } }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { java.util.List < <unk> . <unk> > result = <unk> . METHOD_2 ( null , null , false ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < <unk> . <unk> > result = <unk> . METHOD_2 ( null , null , null , false ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 . VAR_2 . METHOD_2 ( null , null , false ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
[31mExample #10[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , int VAR_3 , <unk> VAR_4 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , int VAR_3 , <unk> VAR_4 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , VAR_3 , VAR_4 , null ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , int VAR_3 , java.util.Date VAR_4 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , 1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , 1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false ) ; VAR_1 . METHOD_5 ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( java.lang.Math.random ) ; TYPE_3 . METHOD_4 ( 1.0F ) ; }[0m
[31mExample #13[0m
Src : private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 . METHOD_4 ( ) ) ) + STRING_2 ) + msg ) , args ) ; } }[0m
Trg : private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( VAR_2 . METHOD_4 ( ) ) + msg ) , args ) ; } }[0m
Pred: private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 . METHOD_4 ( ) ) ) + STRING_2 ) + msg ) , args ) ; } }[0m
[31mExample #14[0m
Src : public void METHOD_1 ( int VAR_1 , <unk> <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; }[0m
Trg : public void METHOD_1 ( int VAR_1 , <unk> <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( true ) ; }[0m
Pred: public void METHOD_1 ( int VAR_1 , java.util.Date startTime , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( true , null ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 <unk> ) { } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( true , null , true ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 <unk> ) { } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( true , null ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 TYPE_2 ) { } }[0m
[31mExample #16[0m
Src : private TYPE_1 . <unk> METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true ) ; }[0m
Trg : private TYPE_1 . <unk> METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true , true ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true ) ; }[0m
[31mExample #17[0m
Src : public void METHOD_1 ( TYPE_1 state ) { try { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , state ) ; } } catch ( <unk> VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( TYPE_1 state ) { try { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , state , null ) ; } } catch ( <unk> VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( TYPE_1 state ) { try { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , state ) ; } } catch ( TYPE_2 VAR_4 ) { } }[0m
[31mExample #18[0m
Src : public static void METHOD_1 ( short [ ] a ) { TYPE_1 . METHOD_1 ( a ) ; }[0m
Trg : public static void METHOD_1 ( short [ ] a ) { TYPE_1 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) , null , 0 , 0 ) ; }[0m
Pred: public static void METHOD_1 ( short [ ] a ) { TYPE_1 . METHOD_1 ( a ) ; TYPE_1 . METHOD_1 ( a ) ; }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , true , true , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , true , true , true , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , true , true , true , true ) ; }[0m
[31mExample #20[0m
Src : protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( <unk> ) ; }[0m
Trg : protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; }[0m
[31mExample #21[0m
Src : private java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 , TYPE_2 VAR_2 ) { return <unk> ( VAR_3 . <unk> class , VAR_4 , new TYPE_3 ( VAR_1 , VAR_2 , false , null ) , STRING_1 , true ) ; }[0m
Trg : private java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 , TYPE_2 VAR_2 ) { return <unk> ( VAR_3 . <unk> class , VAR_4 , new TYPE_3 ( VAR_1 , VAR_2 , false , null , false ) , STRING_1 , true ) ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { return ( VAR_3 . getBoolean class , VAR_4 , new TYPE_3 ( VAR_1 , VAR_2 , false , null ) , STRING_1 , true ) ; }[0m
---------------
Class: Add statement,Remove thrown exception
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String <unk> ) throws TYPE_2 { try { return TYPE_1 . METHOD_2 ( <unk> ) ; } catch ( TYPE_3 <unk> ) { throw new TYPE_2 ( <unk> ( ) ) ; } }[0m
Trg : public java.lang.String METHOD_1 ( java.lang.String <unk> ) { return <unk> ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String filePath ) throws TYPE_2 { try { return TYPE_1 . METHOD_2 ( TYPE_2 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.String VAR_1 ) throws <unk> { }[0m
Trg : public void METHOD_1 ( java.lang.String VAR_1 ) { this . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { java.lang.System.out.println ( VAR_1 ) ; }[0m
---------------
Class: Add/Remove parameter
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( int VAR_1 , int type , int arg , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( <unk> , type , arg ) ; }[0m
Trg : protected void METHOD_1 ( int type , int arg , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( <unk> , type , arg ) ; }[0m
Pred: protected void METHOD_1 ( int VAR_1 , int type , int arg , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( type , type , arg ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( java.lang.Object VAR_1 , java.lang.Object <unk> ) { this . <unk> ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> ) { this . <unk> ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ; }[0m
Pred: public void ( ( java.lang.Object VAR_1 , java.lang.Object startTime ) ) { this . delete ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . intValue ) ) java.lang.Math.random ( ) ) ) ) ; }[0m
[31mExample #2[0m
Src : TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 ;[0m
Trg : TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 , int <unk> ) throws TYPE_2 ;[0m
Pred: TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2[0m
[31mExample #3[0m
Src : public void METHOD_1 ( <unk> <unk> , TYPE_1 event , <unk> <unk> ) { }[0m
Trg : public void METHOD_1 ( TYPE_1 event , <unk> <unk> ) { }[0m
Pred: public void METHOD_1 ( TYPE_1 main , TYPE_1 event , TYPE_2 ) { super . METHOD_1 ( string ) ; }[0m
[31mExample #4[0m
Src : public static native void METHOD_1 ( long <unk> , int VAR_1 , boolean VAR_2 , long VAR_3 , long VAR_4 , long VAR_5 ) ;[0m
Trg : public static native void METHOD_1 ( long <unk> , int VAR_1 , boolean VAR_2 , long VAR_3 , long VAR_4 ) ;[0m
Pred: public static synchronized void METHOD_1 ( long long , int VAR_1 , boolean VAR_2 , long VAR_3 , long VAR_4 , long VAR_5 ) { if ( VAR_1 == null ) { return ; } else { long VAR_3 = VAR_3 ; long VAR_4 = VAR_3 ; long VAR_5 = VAR_3 ; long VAR_5 = 0L ; }[0m
[31mExample #5[0m
Src : public TYPE_1 METHOD_1 ( int VAR_1 ) throws <unk> { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) throws <unk> { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 <unk> , java.lang.String VAR_2 , java.lang.Object data ) { throw new TYPE_4 ( STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 <unk> , java.lang.String VAR_2 ) { throw new TYPE_4 ( STRING_1 ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_2 , java.lang.Object data ) { throw new TYPE_4 ( STRING_1 ) ; }[0m
[31mExample #7[0m
Src : void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) ;[0m
Trg : void METHOD_1 ( int type , int VAR_2 ) ;[0m
Pred: void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) { super . METHOD_1 ( VAR_1 , int type , int VAR_2 ) ; }[0m
[31mExample #8[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 listener ) { return null ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return null ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 listener ) { return null ; }[0m
[31mExample #9[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object VAR_1 ) { <unk> ( ( ( TYPE_1 < <unk> > ) ( ( ( TYPE_2 . <unk> ) ( VAR_1 ) ) . <unk> ( ) ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object VAR_1 ) { <unk> ( ( ( TYPE_1 < <unk> > ) ( ( ( TYPE_2 . <unk> ) ( VAR_1 ) ) . <unk> ( ) ) ) ) ; }[0m
Pred: public void delete ( java.lang.Object step , java.lang.Object VAR_1 ) { return ( ( ( TYPE_1 < TYPE_1 > ) ( ( ( TYPE_2 . TYPE_2 ) ( VAR_1 ) ) . trim ( ) ) ) ) ; }[0m
[31mExample #10[0m
Src : void METHOD_1 ( TYPE_1 . <unk> <unk> , java.util.List < TYPE_2 > VAR_1 , java.util.List < TYPE_3 > VAR_2 ) ;[0m
Trg : void METHOD_1 ( TYPE_1 . <unk> <unk> , java.util.List < TYPE_2 > VAR_1 ) ;[0m
Pred: [0m
[31mExample #11[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 . <unk> ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 . <unk> ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; TYPE_2 . METHOD_6 ( java.lang.Math.random ( ) ) ; }[0m
[31mExample #12[0m
Src : void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) ;[0m
Trg : void METHOD_1 ( TYPE_1 VAR_1 ) ;[0m
Pred: void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.lang.System.out.println ( VAR_1 ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( int type , int VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; }[0m
Pred: public void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; throw new TYPE_1 ( STRING_1 ) ; }[0m
[31mExample #14[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) ; }[0m
[31mExample #15[0m
Src : native boolean METHOD_1 ( int VAR_1 , int VAR_2 , byte [ ] <unk> , byte [ ] output , float [ ] VAR_3 , int VAR_4 ) ;[0m
Trg : native boolean METHOD_1 ( java.lang.String path , int VAR_1 , int VAR_2 , byte [ ] <unk> , byte [ ] output , float [ ] VAR_3 , int VAR_4 ) ;[0m
Pred: public boolean METHOD_1 ( int VAR_1 , int VAR_2 , byte [ ] array , byte [ ] output , float [ ] VAR_3 , int VAR_4 ) { byte [ ] output , byte [ ] output , float [ ] VAR_3 , int VAR_4 ; }[0m
[31mExample #16[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { return TYPE_4 . METHOD_2 ( null ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return TYPE_4 . METHOD_2 ( null ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { return TYPE_4 . METHOD_2 ( null ) ; }[0m
[31mExample #17[0m
Src : private TYPE_1 METHOD_1 ( TYPE_2 <unk> , java.lang.String VAR_1 , java.lang.String path ) { if ( TYPE_3 . METHOD_2 ( path ) ) { return null ; } return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( path ) ; }[0m
Trg : private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String path ) { if ( TYPE_3 . METHOD_2 ( path ) ) { return null ; } return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( path ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( TYPE_2 VAR_2 , java.lang.String path ) { if ( TYPE_3 . METHOD_2 ( path ) ) { return null ; } return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( path ) ; }[0m
[31mExample #18[0m
Src : void METHOD_1 ( boolean VAR_1 ) ;[0m
Trg : void METHOD_1 ( ) ;[0m
Pred: void METHOD_1 ( boolean VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; }[0m
[31mExample #19[0m
Src : protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
Pred: protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
---------------
Class: Add/Remove parameter,Add parameter in the method/constructor invocation
Golden example (False):
[31mExample #1[0m
Src : public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 <unk> = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . <unk> ( id ) . view ( STRING_1 ) . METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String <unk> , int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 <unk> = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . <unk> ( <unk> , id ) . view ( STRING_1 ) . METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Pred: public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 TYPE_2 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( id ) . view ( STRING_1 ) . METHOD_3 ( 0L , VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , <unk> <unk> , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , <unk> , VAR_2 , null , 0 ) ; }[0m
Trg : public static java.lang.String METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 , <unk> <unk> , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( STRING_1 , <unk> , VAR_1 , <unk> , VAR_2 , null , 0 ) ; }[0m
Pred: public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.Long , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 , VAR_2 , null , 0 ) ; }[0m
[31mExample #2[0m
Src : private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , <unk> , STRING_1 , true , VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( <unk> , STRING_1 , VAR_1 , true , VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , STRING_1 , true , true ) ; }[0m
[31mExample #3[0m
Src : public static TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 ) { return TYPE_2 . <unk> ( id ) . view ( STRING_1 ) . id ( VAR_1 ) ; }[0m
Trg : public static TYPE_1 METHOD_1 ( java.lang.String <unk> , int id , java.lang.String VAR_1 ) { return TYPE_2 . <unk> ( <unk> , id ) . view ( STRING_1 ) . id ( VAR_1 ) ; }[0m
Pred: public static TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 ) { return TYPE_2 . id ( id ) . view ( STRING_1 ) . id ( VAR_1 ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( <unk> id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . <unk> ( id , STRING_1 ) . id ( VAR_1 ) . delete ( VAR_2 ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String <unk> , <unk> id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . <unk> ( <unk> , id , STRING_1 ) . id ( VAR_1 ) . delete ( VAR_2 ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Long id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . assertEquals ( id , STRING_1 ) . id ( VAR_1 ) . delete ( VAR_2 ) ; }[0m
---------------
Class: Add/Remove parameter,Remove type casting in method body
Golden example (False):
[31mExample #1[0m
Src : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_1 ( ) ; METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Integer <unk> ) { VAR_1 = <unk> ; METHOD_1 ( ) ; METHOD_2 ( ) ; }[0m
Pred: public void delete ( java.lang.Object target , java.lang.Object startTime ) { VAR_1 = ( ( java.lang.Integer ) ( java.lang.Math.random ) ) ; METHOD_1 ( ) ; METHOD_2 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { METHOD_1 ( ( ( java.lang.Boolean ) ( <unk> ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Boolean <unk> ) { METHOD_1 ( <unk> ) ; }[0m
Pred: public void delete ( java.lang.Object startTime , java.lang.Object args ) { METHOD_1 ( ( ( java.lang.Boolean ) ( java.lang.Math.random ) ) ) ; }[0m
---------------
Class: Add/Remove this qualifier
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.Boolean value ) { this . VAR_1 = value ; }[0m
Trg : public void METHOD_1 ( java.lang.Boolean value ) { VAR_1 = value ; }[0m
Pred: public void METHOD_1 ( java.lang.Boolean value ) { this . VAR_1 = value ; this . VAR_1 = value ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; }[0m
Trg : public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; }[0m
Pred: public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; }[0m
[31mExample #2[0m
Src : public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return this . VAR_1 ; }[0m
Trg : public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return this . VAR_1 ; }[0m
---------------
Class: Broad method visibility
Golden example (False):
[31mExample #1[0m
Src : <unk> TYPE_1 id ( java.lang.String VAR_1 ) ;[0m
Trg : public <unk> TYPE_1 id ( java.lang.String VAR_1 ) ;[0m
Pred: TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private TYPE_1 METHOD_1 ( ) { return VAR_1 ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: private TYPE_1 METHOD_1 ( ) { return VAR_1 ; }[0m
[31mExample #2[0m
Src : private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; }[0m
Trg : protected void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; }[0m
Pred: private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; }[0m
[31mExample #3[0m
Src : protected java.lang.String METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Pred: protected java.lang.String METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
[31mExample #4[0m
Src : protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ; }[0m
Pred: protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ; }[0m
[31mExample #5[0m
Src : private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( METHOD_2 ( TYPE_2 . <unk> ( ) ) ) && ( <unk> ( VAR_1 . METHOD_3 ( ) ) ) ; }[0m
Trg : protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( METHOD_2 ( TYPE_2 . <unk> ( ) ) ) && ( <unk> ( VAR_1 . METHOD_3 ( ) ) ) ; }[0m
Pred: private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( METHOD_2 ( TYPE_2 . intValue ( ) ) ) && ( java.lang.Math.random ( VAR_1 . METHOD_3 ( ) ) ) ; }[0m
[31mExample #6[0m
Src : private boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { return <unk> ( METHOD_2 ( <unk> ) . METHOD_3 ( TYPE_2 . <unk> ( ) . METHOD_4 ( ) ) ) ; }[0m
Trg : protected boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { return <unk> ( METHOD_2 ( <unk> ) . METHOD_3 ( TYPE_2 . <unk> ( ) . METHOD_4 ( ) ) ) ; }[0m
Pred: private boolean METHOD_1 ( TYPE_1 . trim ( ) ) { return java.lang.Math.random ( METHOD_2 ( java.lang.Math.random ) ) . METHOD_3 ( TYPE_2 . intValue ( ) . METHOD_4 ( ) ) ; }[0m
[31mExample #7[0m
Src : protected TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
[31mExample #8[0m
Src : protected <unk> <unk> ( ) { if ( ( TYPE_1 . METHOD_1 ( ) ) != null ) { METHOD_2 ( TYPE_1 . METHOD_1 ( ) . METHOD_3 ( ) ) ; } return super . <unk> ( ) ; }[0m
Trg : public <unk> <unk> ( ) { if ( ( TYPE_1 . METHOD_1 ( ) ) != null ) { METHOD_2 ( TYPE_1 . METHOD_1 ( ) . METHOD_3 ( ) ) ; } return super . <unk> ( ) ; }[0m
Pred: protected TYPE_1 delete ( ) { if ( ( TYPE_1 . METHOD_1 ( ) ) != null ) { METHOD_2 ( TYPE_1 . METHOD_1 ( ) . METHOD_3 ( ) ) ; } return super . trim ( ) ; }[0m
[31mExample #9[0m
Src : private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }[0m
Trg : public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }[0m
Pred: private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }[0m
[31mExample #10[0m
Src : private boolean METHOD_1 ( java.util.List < <unk> > VAR_1 ) { for ( <unk> <unk> : VAR_1 ) { if ( ( <unk> . <unk> ( ) ) != ( VAR_2 ) ) { return true ; } } return false ; }[0m
Trg : protected boolean METHOD_1 ( java.util.List < <unk> > VAR_1 ) { for ( <unk> <unk> : VAR_1 ) { if ( ( <unk> . <unk> ( ) ) != ( VAR_2 ) ) { return true ; } } return false ; }[0m
Pred: private boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( TYPE_2 f : VAR_1 ) { if ( ( java.lang.Math.random ( ) ) != ( VAR_2 ) ) { return true ; } } return false ; }[0m
[31mExample #11[0m
Src : private static TYPE_1 <unk> ( java.io.File VAR_1 , TYPE_2 VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; }[0m
Trg : public static TYPE_1 <unk> ( java.io.File VAR_1 , TYPE_2 VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; }[0m
Pred: private static TYPE_1 METHOD_1 ( java.io.File VAR_1 , TYPE_2 VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; }[0m
[31mExample #12[0m
Src : protected TYPE_1 . <unk> METHOD_1 ( ) { return <unk> ( ) ; }[0m
Trg : public TYPE_1 . <unk> METHOD_1 ( ) { return <unk> ( ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return java.lang.Math.random ( ) ; }[0m
[31mExample #13[0m
Src : protected void METHOD_1 ( final <unk> value ) { <unk> = value ; }[0m
Trg : public void METHOD_1 ( final <unk> value ) { <unk> = value ; }[0m
Pred: protected void METHOD_1 ( final java.lang.Long value ) { TYPE_2 = value ; }[0m
[31mExample #14[0m
Src : private static native void METHOD_1 ( java.lang.Object VAR_1 , long VAR_2 ) ;[0m
Trg : public static native void METHOD_1 ( java.lang.Object VAR_1 , long VAR_2 ) ;[0m
Pred: private static synchronized void METHOD_1 ( java.lang.Object VAR_1 , long VAR_2 ) { java.lang.System.out.println ( VAR_1 ) ; }[0m
[31mExample #15[0m
Src : protected java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
Pred: protected java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
---------------
Class: Change method invocation as result of a move method
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( ) { TYPE_1 . <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 . assertEquals ( VAR_1 . METHOD_2 ( ) ) . intValue ( VAR_2 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true , false , null , true ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( true , false , null , true ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true , false , null , true ) ; }[0m
[31mExample #2[0m
Src : protected void METHOD_1 ( ) { <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { java.lang.System.out.println ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_4 , STRING_5 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( null , STRING_1 ) ; METHOD_2 ( STRING_2 , STRING_3 ) ; METHOD_2 ( STRING_4 , STRING_5 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_4 , STRING_5 ) ; }[0m
[31mExample #4[0m
Src : protected boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . getId ( ) ) ) != null ; }[0m
Trg : protected boolean METHOD_1 ( ) { return ( TYPE_1 . METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . getId ( ) ) ) != null ; }[0m
Pred: protected boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . getId ( ) ) ) != null ; }[0m
[31mExample #5[0m
Src : public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . get ( key . METHOD_2 ( ) , <unk> ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . get ( key . METHOD_2 ( ) , <unk> ) ; return METHOD_3 ( VAR_1 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . get ( key . METHOD_2 ( ) , 0L ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; }[0m
[31mExample #6[0m
Src : private void METHOD_1 ( <unk> <unk> ) { TYPE_1 . <unk> ( VAR_1 . get ( VAR_2 . <unk> < <unk> > <unk> ( VAR_3 . <unk> class ) ) ) . <unk> ( <unk> ) ; }[0m
Trg : private void METHOD_1 ( <unk> <unk> ) { <unk> ( VAR_1 . get ( VAR_2 . <unk> < <unk> > <unk> ( VAR_3 . <unk> class ) ) ) . <unk> ( <unk> ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 . assertEquals ( VAR_1 . get ( VAR_2 . intValue ( VAR_2 . trim ( ) ) ) ) ; }[0m
---------------
Class: Change method return value
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( ) { return false ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return true ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return false ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public final TYPE_1 METHOD_1 ( ) { return this . <unk> ; }[0m
Trg : public final TYPE_1 METHOD_1 ( ) { return null ; }[0m
Pred: public final TYPE_1 METHOD_1 ( ) { return this . intValue ; }[0m
[31mExample #2[0m
Src : public boolean METHOD_1 ( ) { return false ; }[0m
Trg : public boolean METHOD_1 ( ) { return true ; }[0m
Pred: public boolean METHOD_1 ( ) { return false ; }[0m
[31mExample #3[0m
Src : protected java.lang.String <unk> ( ) { return STRING_1 ; }[0m
Trg : protected java.lang.String <unk> ( ) { return <unk> ; }[0m
Pred: protected java.lang.String toString ( ) { return STRING_1 ; }[0m
---------------
Class: Change method return value,Change return type
Golden example (False):
[31mExample #1[0m
Src : public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , java.lang.Integer . toString ( VAR_3 . METHOD_4 ( ) ) ) ; return null ; }[0m
Trg : public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , java.lang.Integer . toString ( VAR_3 . METHOD_4 ( ) ) ) ; return true ; }[0m
Pred: public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , java.lang.Integer . toString ( VAR_3 . METHOD_4 ( ) ) ) ; return null ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; return null ; }[0m
Trg : public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; return true ; }[0m
Pred: public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; return null ; }[0m
---------------
Class: Change parameter type
Golden example (False):
[31mExample #1[0m
Src : synchronized long METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
Trg : synchronized long METHOD_1 ( long [ ] VAR_1 , long [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
Pred: synchronized long METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int count , float [ ] <unk> , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , count , <unk> , VAR_3 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int count , float [ ] <unk> , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , count , <unk> , VAR_3 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int count , float [ ] VAR_2 , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( var , id , VAR_1 , VAR_2 , count , ) ; }[0m
[31mExample #2[0m
Src : public boolean METHOD_1 ( <unk> . <unk> <unk> ) { return <unk> . getId ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> <unk> ) { return <unk> . getId ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.Math.random ( ) ) { return java.lang.Math.random ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ; }[0m
[31mExample #3[0m
Src : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.Math.random ( ) ) { return TYPE_1 . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
[31mExample #4[0m
Src : private TYPE_1 METHOD_1 ( final TYPE_2 . <unk> VAR_1 ) { if ( VAR_1 != null ) { return VAR_2 . <unk> ( VAR_1 . <unk> ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; } return VAR_3 ; }[0m
Trg : private TYPE_1 METHOD_1 ( final <unk> . <unk> VAR_1 ) { if ( VAR_1 != null ) { return VAR_2 . <unk> ( VAR_1 . <unk> ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; } return VAR_3 ; }[0m
Pred: private TYPE_1 METHOD_1 ( final TYPE_2 . VAR_1 ) { if ( VAR_1 != null ) { return VAR_2 . trim ( VAR_1 . getId ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; } return VAR_3 ; }[0m
[31mExample #5[0m
Src : static int METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 . METHOD_3 ( ) ; }[0m
Trg : static int METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 . METHOD_3 ( ) ; }[0m
Pred: static int METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 . METHOD_3 ( ) ; }[0m
[31mExample #6[0m
Src : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getName ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getName ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getName ( ) ) ; }[0m
[31mExample #7[0m
Src : private static TYPE_1 METHOD_1 ( ) { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . <unk> ( <unk> . METHOD_2 ( ) ) ; <unk> . METHOD_3 ( STRING_1 ) ; return <unk> ; }[0m
Trg : private static <unk> METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . <unk> ( <unk> . METHOD_2 ( ) ) ; <unk> . METHOD_3 ( STRING_1 ) ; return <unk> ; }[0m
Pred: private static TYPE_1 METHOD_1 ( ) { TYPE_1 TYPE_1 = new TYPE_1 ( ) ; java.lang.Math.random ( java.lang.Math.random ( ) ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; return ; }[0m
[31mExample #8[0m
Src : synchronized TYPE_1 METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Trg : synchronized TYPE_1 METHOD_1 ( long VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Pred: synchronized TYPE_1 METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 , VAR_1 ) ; }[0m
[31mExample #9[0m
Src : static java.lang.String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return STRING_1 ; } return VAR_4 . toString ( ) ; }[0m
Trg : static java.lang.String METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return STRING_1 ; } return VAR_4 . toString ( ) ; }[0m
Pred: static java.lang.String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return STRING_1 ; } return VAR_4 . toString ( ) ; }[0m
[31mExample #10[0m
Src : static boolean METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; }[0m
Trg : static boolean METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; }[0m
Pred: static boolean METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; }[0m
[31mExample #11[0m
Src : private static void METHOD_1 ( final TYPE_1 <unk> , final TYPE_2 . <unk> <unk> ) { TYPE_3 . METHOD_2 ( <unk> , STRING_1 , <unk> . get ( ) ) ; }[0m
Trg : private static void METHOD_1 ( final java.lang.StringBuilder <unk> , final TYPE_2 . <unk> <unk> ) { TYPE_3 . METHOD_2 ( <unk> , STRING_1 , <unk> . get ( ) ) ; }[0m
Pred: private static void METHOD_1 ( final TYPE_1 TYPE_1 , final TYPE_2 TYPE_2 ) { TYPE_3 . METHOD_2 ( TYPE_2 , STRING_1 , TYPE_2 . get ( ) ) ; }[0m
[31mExample #12[0m
Src : public java.lang.String getValue ( <unk> . <unk> <unk> ) { return <unk> . METHOD_1 ( ) ; }[0m
Trg : public java.lang.String getValue ( <unk> . <unk> <unk> ) { return <unk> . METHOD_1 ( ) ; }[0m
Pred: public java.lang.String getValue ( ) . trim ( ) ; return TYPE_1 . METHOD_1 ( ) ; }[0m
[31mExample #13[0m
Src : public java.lang.String getValue ( <unk> <unk> ) { return <unk> ( <unk> . METHOD_1 ( ) . size ( ) ) ; }[0m
Trg : public java.lang.String getValue ( java.lang.Object <unk> ) { return <unk> ( ( ( <unk> ) ( <unk> ) ) . METHOD_1 ( ) . size ( ) ) ; }[0m
Pred: public java.lang.String getValue ( java.lang.Math.random ( ) ) { return java.lang.Math.random ( java.lang.Math.random ( ) . size ( ) ) ; }[0m
[31mExample #14[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_2 , id , VAR_1 , VAR_2 ) ; }[0m
[31mExample #15[0m
Src : public static native byte [ ] METHOD_1 ( int VAR_1 ) ;[0m
Trg : public static native byte [ ] METHOD_1 ( long VAR_1 ) ;[0m
Pred: public static byte [ ] METHOD_1 ( int VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; }[0m
[31mExample #16[0m
Src : public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > <unk> , TYPE_2 . <unk> VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , <unk> . METHOD_3 ( ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , <unk> , VAR_2 ) ; }[0m
Trg : public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > <unk> , TYPE_2 . <unk> VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , <unk> . METHOD_3 ( ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , <unk> , VAR_2 ) ; }[0m
Pred: public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > startTime , TYPE_2 . VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , METHOD_3 ( ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , VAR_2 , VAR_2 ) ; }[0m
[31mExample #17[0m
Src : public java.lang.String getValue ( <unk> <unk> ) { return ( <unk> ( <unk> . METHOD_1 ( ) ) ) + STRING_1 ; }[0m
Trg : public java.lang.String getValue ( java.lang.Object <unk> ) { return ( <unk> ( ( ( <unk> ) ( <unk> ) ) . METHOD_1 ( ) ) ) + STRING_1 ; }[0m
Pred: public java.lang.String getValue ( java.lang.Math.random ( ) ) { return ( java.lang.Math.random ( ) . METHOD_1 ( ) ) ; }[0m
[31mExample #18[0m
Src : native void METHOD_1 ( int VAR_1 , int VAR_2 ) ;[0m
Trg : native void METHOD_1 ( long VAR_1 , long VAR_2 ) ;[0m
Pred: public void METHOD_1 ( int VAR_1 , int VAR_2 ) { java.lang.System.out.println ( VAR_1 ) ; }[0m
[31mExample #19[0m
Src : synchronized int METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Trg : synchronized long METHOD_1 ( long VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Pred: synchronized int METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
[31mExample #20[0m
Src : final void METHOD_1 ( int VAR_1 ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } }[0m
Trg : final void METHOD_1 ( long VAR_1 ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } }[0m
Pred: final void METHOD_1 ( int VAR_1 ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } }[0m
[31mExample #21[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , float VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , float VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , float VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_2 , id , VAR_1 , VAR_2 ) ; }[0m
[31mExample #22[0m
Src : public boolean METHOD_1 ( TYPE_1 <unk> ) { return ( <unk> . METHOD_2 ( ) ) == ( VAR_1 ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> <unk> ) { return ( <unk> . METHOD_2 ( ) ) == ( VAR_1 ) ; }[0m
Pred: public boolean METHOD_1 ( TYPE_1 TYPE_1 ) { return ( VAR_2 . METHOD_2 ( ) ) == ( VAR_1 ) ; }[0m
[31mExample #23[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , byte [ ] VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , byte [ ] VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , byte [ ] VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_2 , id , VAR_1 , VAR_2 ) ; }[0m
[31mExample #24[0m
Src : public static native void METHOD_1 ( int VAR_1 ) throws TYPE_1 ;[0m
Trg : public static native void METHOD_1 ( long VAR_1 ) throws TYPE_1 ;[0m
Pred: public static void METHOD_1 ( int VAR_1 ) throws TYPE_1 { super . METHOD_1 ( VAR_1 ) ; }[0m
[31mExample #25[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> . <unk> <unk> ) { return VAR_1 . METHOD_2 ( <unk> , <unk> , VAR_2 , VAR_3 ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> <unk> ) { return VAR_1 . METHOD_2 ( <unk> , <unk> , VAR_2 , VAR_3 ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_1 f , java.util.Date ) { return VAR_1 . METHOD_2 ( java.lang.Math.random ( ) , java.lang.Math.random ( ) , VAR_2 , VAR_3 ) ; }[0m
[31mExample #26[0m
Src : synchronized void METHOD_1 ( int VAR_1 , int VAR_2 , int <unk> ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , VAR_1 , VAR_2 , <unk> ) ; }[0m
Trg : synchronized void METHOD_1 ( long VAR_1 , int VAR_2 , long <unk> ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , VAR_1 , VAR_2 , <unk> ) ; }[0m
Pred: synchronized void METHOD_1 ( int VAR_1 , int VAR_2 , int start ) { METHOD_2 ( ) ; METHOD_3 ( VAR_2 , VAR_1 , VAR_2 , VAR_2 ) ; }[0m
[31mExample #27[0m
Src : public static native void METHOD_1 ( int VAR_1 , int VAR_2 ) throws TYPE_1 ;[0m
Trg : public static native void METHOD_1 ( long VAR_1 , long VAR_2 ) throws TYPE_1 ;[0m
Pred: public static synchronized void METHOD_1 ( int VAR_1 , int VAR_2 ) throws TYPE_1 { super . METHOD_1 ( VAR_1 , VAR_2 ) ; }[0m
[31mExample #28[0m
Src : native void METHOD_1 ( int VAR_1 , int id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , TYPE_1 b ) ;[0m
Trg : native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , TYPE_1 b ) ;[0m
Pred: protected void METHOD_1 ( int VAR_1 , int id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , TYPE_1 b ) { java.lang.System.out.println ( VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , TYPE_1 b ) ; }[0m
[31mExample #29[0m
Src : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.Math.random ( ) ) { return VAR_1 . METHOD_2 ( ) . equals ( METHOD_3 ( ) . METHOD_4 ( ) ) ; }[0m
---------------
Class: Change parameter value of invoked method
Golden example (False):
[31mExample #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_4 ( ) , VAR_1 ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_4 . <unk> , VAR_1 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_4 ( ) , VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 ) ) ; }[0m
Trg : protected java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new <unk> ( VAR_2 ) ) ; }[0m
Pred: protected java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 ) ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( <unk> id ) { return <unk> ( VAR_1 class , VAR_2 , new TYPE_2 ( id ) , id . toString ( ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( <unk> id ) { return <unk> ( VAR_1 class , VAR_2 , new <unk> ( id ) , id . toString ( ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.Long id ) { return java.lang.Math.random ( VAR_1 class , VAR_2 , new TYPE_2 ( id ) , id . toString ( ) ) ; }[0m
[31mExample #3[0m
Src : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , VAR_1 , true ) ; <unk> = TYPE_3 . METHOD_3 ( args . <unk> , t ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , VAR_1 , true ) ; <unk> = TYPE_3 . METHOD_3 ( args . <unk> , t ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , VAR_1 , true ) ; TYPE_2 = TYPE_3 . METHOD_3 ( args . args , t ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , INT_1 , false ) ; <unk> = TYPE_3 . METHOD_3 ( VAR_1 , t ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , INT_1 , false ) ; <unk> = TYPE_3 . METHOD_3 ( args . <unk> , t ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 1.0F , INT_1 , false ) ; TYPE_2 = TYPE_3 . METHOD_3 ( VAR_1 , t ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , null ) ; assertEquals ( STRING_2 , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , null ) ; assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , null ) ; assertEquals ( STRING_2 , VAR_2 ) ; }[0m
[31mExample #6[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_2 ( ) , METHOD_4 ( ) . <unk> ( STRING_2 , VAR_1 ) ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_2 . <unk> , METHOD_4 ( ) . <unk> ( STRING_2 , VAR_1 ) ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_2 ( ) , METHOD_4 ( ) . trim ( STRING_2 , VAR_1 ) ) ; }[0m
---------------
Class: Change parameters order in method invocation
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = <unk> . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = <unk> . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( <unk> , VAR_1 . size ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , 0L ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { long VAR_1 = INT_1 ; long VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_2 , INT_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { long VAR_1 = INT_1 ; long VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( INT_2 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { long VAR_1 = INT_1 ; long VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_2 , INT_2 ) ; }[0m
---------------
Class: Change return type
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; }[0m
Trg : public boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected <unk> . <unk> METHOD_1 ( java.lang.String name ) { for ( <unk> . <unk> <unk> : METHOD_2 ( ) ) { if ( <unk> . getName ( ) . equals ( name ) ) { return <unk> ; } } return null ; }[0m
Trg : protected <unk> METHOD_1 ( java.lang.String name ) { for ( <unk> <unk> : METHOD_2 ( ) ) { if ( <unk> . getName ( ) . equals ( name ) ) { return <unk> ; } } return null ; }[0m
Pred: protected java.lang.Long METHOD_1 ( java.lang.String name ) { if ( name == null ) { return null ; } for ( java.lang.Math.random ( ) . METHOD_2 ( ) ) ; }[0m
---------------
Class: Class is not static anymore. Add object instance to invoke its methods
Golden example (False):
[31mExample #1[0m
Src : public static boolean METHOD_1 ( <unk> <unk> ) { return ! ( TYPE_1 . METHOD_2 ( <unk> ) . isEmpty ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> <unk> ) { return ! ( METHOD_2 ( <unk> ) . isEmpty ( ) ) ; }[0m
Pred: public static boolean METHOD_1 ( TYPE_1 var ) { return ! ( TYPE_1 . METHOD_2 ( string ) . isEmpty ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { final java.util.List < TYPE_1 > result = METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 ) + STRING_1 ) ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { final java.util.List < TYPE_1 > result = <unk> . METHOD_3 ( ( ( VAR_1 ) + STRING_1 ) ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { final java.util.List < TYPE_1 > result = METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 ) + STRING_1 ) ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; }[0m
[31mExample #2[0m
Src : public static TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 , boolean VAR_4 ) { return TYPE_2 . METHOD_1 ( <unk> , VAR_1 , VAR_2 , VAR_3 , STRING_1 , VAR_4 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 , boolean VAR_4 ) { return METHOD_1 ( <unk> , VAR_1 , VAR_2 , VAR_3 , STRING_1 , VAR_4 ) ; }[0m
Pred: public static TYPE_1 METHOD_1 ( TYPE_1 var , TYPE_2 VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 , boolean VAR_4 ) { return TYPE_2 . METHOD_1 ( TYPE_2 , VAR_1 , VAR_2 , VAR_3 , STRING_1 , VAR_4 ) ; }[0m
[31mExample #3[0m
Src : public static TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_1 ( <unk> , VAR_1 , true , false , VAR_2 , false ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( <unk> , VAR_1 , true , false , VAR_2 , false ) ; }[0m
Pred: public static TYPE_1 METHOD_1 ( TYPE_1 var , TYPE_2 VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_1 ( VAR_2 , VAR_1 , true , false , VAR_2 , false ) ; }[0m
[31mExample #4[0m
Src : public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) + STRING_1 ) + ( METHOD_4 ( VAR_1 ) ) ; }[0m
Trg : public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_4 ( ) ) ; }[0m
Pred: public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) + STRING_1 ) + ( METHOD_4 ( VAR_1 ) ) ; }[0m
---------------
Class: Forbid overriding: add final to method
Golden example (False):
[31mExample #1[0m
Src : public long METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; }[0m
Trg : public final long METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; }[0m
Pred: public long METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public double METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; }[0m
Trg : public final double METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; }[0m
Pred: public double METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; }[0m
---------------
Class: Merge variable definition & initialization
Golden example (False):
[31mExample #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) ; java.util.List < TYPE_1 > VAR_3 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_4 , VAR_2 ) ; return VAR_3 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_4 , VAR_2 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_2 = METHOD_2 ( ) . get ( STRING_1 , VAR_1 ) ; java.util.List < TYPE_1 > VAR_3 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_4 , VAR_2 ) ; return VAR_3 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( <unk> <unk> ) { TYPE_2 VAR_1 = METHOD_2 ( ) . <unk> ( STRING_1 , <unk> ) ; java.util.List < TYPE_1 > VAR_2 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 , VAR_1 ) ; return VAR_2 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( <unk> <unk> ) { TYPE_2 VAR_1 = METHOD_2 ( ) . <unk> ( STRING_1 , <unk> ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 , VAR_1 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = METHOD_2 ( ) . trim ( STRING_1 ) ; java.util.List < TYPE_1 > VAR_2 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 , VAR_1 ) ; return VAR_2 ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 ; VAR_3 = super . METHOD_1 ( VAR_4 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; return VAR_3 == null ? null : METHOD_3 ( VAR_3 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 = super . METHOD_1 ( VAR_4 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; return VAR_3 == null ? null : METHOD_3 ( VAR_3 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 ; VAR_3 = super . METHOD_1 ( VAR_4 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; return VAR_3 == null ? null : METHOD_3 ( VAR_3 ) ; }[0m
[31mExample #3[0m
Src : private TYPE_1 METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) . <unk> ( STRING_2 , VAR_2 ) ; return VAR_3 ; }[0m
Trg : private TYPE_1 METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { return METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) . <unk> ( STRING_2 , VAR_2 ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.util.Date VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( ) . trim ( STRING_1 , VAR_1 ) . trim ( STRING_2 , VAR_2 ) ; return VAR_3 ; }[0m
[31mExample #4[0m
Src : public static java.io.File METHOD_1 ( java.lang.String name ) throws TYPE_1 { java.lang.String VAR_1 ; VAR_1 = TYPE_2 . METHOD_2 ( ) ; return new java.io.File ( VAR_1 , ( name + ( VAR_2 ) ) ) ; }[0m
Trg : public static java.io.File METHOD_1 ( java.lang.String name ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( ) ; return new java.io.File ( VAR_1 , ( name + ( VAR_2 ) ) ) ; }[0m
Pred: public static java.io.File METHOD_1 ( java.lang.String name ) throws TYPE_1 { java.lang.String VAR_1 ; VAR_1 = TYPE_2 . METHOD_2 ( ) ; return new java.io.File ( VAR_1 , ( name + ( VAR_2 ) ) ) ; }[0m
---------------
Class: Move existing statements out of try block
Golden example (False):
[31mExample #1[0m
Src : public static long METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; return TYPE_1 . METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } }[0m
Trg : public static long METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { return TYPE_1 . METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } }[0m
Pred: public static long METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; return TYPE_1 . METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( <unk> ) ; c . METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( <unk> ) ; try { c . METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( ) ; c . METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( <unk> ) ; c . get ( null ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( <unk> ) ; try { c . get ( null ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( ) ; c . get ( null ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
---------------
Class: Narrow method visibility
Golden example (False):
[31mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { return null ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return null ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return null ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; return VAR_1 ; }[0m
Trg : private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; return VAR_1 ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; return VAR_1 ; }[0m
[31mExample #2[0m
Src : protected TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( id ) ) ; return VAR_1 ; }[0m
Trg : private TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( id ) ) ; return VAR_1 ; }[0m
Pred: protected TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( id ) ) ; return VAR_1 ; }[0m
[31mExample #3[0m
Src : protected synchronized void METHOD_1 ( ) { }[0m
Trg : public synchronized void METHOD_1 ( ) { }[0m
Pred: public synchronized void METHOD_1 ( ) { super . METHOD_1 ( ) ; }[0m
[31mExample #4[0m
Src : public TYPE_1 METHOD_1 ( ) { return <unk> ; }[0m
Trg : private TYPE_1 METHOD_1 ( ) { return <unk> ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return TYPE_1 ; }[0m
[31mExample #5[0m
Src : protected static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) ; }[0m
Trg : private static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) ; }[0m
Pred: protected static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) ; }[0m
---------------
Class: Remove condition
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_4 ( new TYPE_2 ( STRING_1 ) ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_4 ( new TYPE_2 ( STRING_1 ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 value ) { if ( ( this . VAR_1 . METHOD_2 ( ) ) != value ) { this . VAR_1 . METHOD_1 ( value ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { if ( ( this . VAR_1 . METHOD_2 ( ) ) != value ) { this . VAR_1 . METHOD_1 ( value ) ; } }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( java.lang.String line ) { if ( line != null ) { METHOD_2 ( line ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String line ) { METHOD_2 ( line ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String line ) { if ( line != null ) { METHOD_2 ( line ) ; } if ( line != null ) { METHOD_2 ( line ) ; } }[0m
[31mExample #3[0m
Src : public static TYPE_1 <unk> ( ) { if ( ( VAR_1 ) == null ) { synchronized ( VAR_2 class ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } } } return VAR_1 ; }[0m
Trg : public static TYPE_1 <unk> ( ) { return VAR_1 ; }[0m
Pred: public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { synchronized ( VAR_2 class ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } } } return VAR_1 ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; } }[0m
---------------
Class: Remove invoked method
Golden example (False):
[31mExample #1[0m
Src : void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( a , a . length , this . VAR_1 ) ) ; }[0m
Trg : void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( a , a . length , this . VAR_1 ) ; }[0m
Pred: void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( a , a . length , this . VAR_1 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static void METHOD_1 ( TYPE_1 args ) { VAR_1 = <unk> ; VAR_2 = <unk> ; <unk> = ( ( float ) ( TYPE_2 . METHOD_2 ( FLOAT_1 , args . <unk> ) ) ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args ) { VAR_1 = <unk> ; VAR_2 = <unk> ; <unk> = ( ( float ) ( TYPE_2 . METHOD_2 ( FLOAT_1 , args . <unk> ) ) ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args ) { VAR_1 = 0L ; VAR_2 = 1.0F ; java.lang.Math.random ( ( float ) ( TYPE_2 . METHOD_2 ( FLOAT_1 , args . trim ) ) ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 1 ] ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 1 ] ) ; }[0m
[31mExample #3[0m
Src : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = <unk> . METHOD_2 ( FLOAT_1 ) ; b = <unk> . METHOD_2 ( FLOAT_2 ) ; c = a % b ; return c ; }[0m
Trg : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a % b ; return c ; }[0m
Pred: public static float METHOD_1 ( ) { float a ; float b ; float c = a . METHOD_2 ( FLOAT_1 ) ; b = 0L . METHOD_2 ( FLOAT_2 ) ; c = a % b ; return c ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = <unk> . get ( VAR_3 ) ; VAR_4 = <unk> . get ( VAR_5 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = VAR_1 . METHOD_3 ( ) ; VAR_2 = <unk> . get ( VAR_3 ) ; VAR_4 = <unk> . get ( VAR_5 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; java.util.Date = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = 0L . get ( VAR_3 ) ; VAR_4 = TYPE_2 . get ( VAR_5 ) ; }[0m
[31mExample #5[0m
Src : public static synchronized boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { TYPE_2 type = TYPE_2 . METHOD_2 ( <unk> . METHOD_3 ( ) ) ; return ( type != null ) && ( type == ( VAR_1 ) ) ; }[0m
Trg : public static synchronized boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { TYPE_2 type = <unk> . METHOD_3 ( ) ; return ( type != null ) && ( type == ( VAR_1 ) ) ; }[0m
Pred: public static synchronized boolean METHOD_1 ( TYPE_1 TYPE_1 ) { TYPE_2 type = TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) ; return ( type != null ) && ( type == ( VAR_1 ) ) ; }[0m
[31mExample #6[0m
Src : public long METHOD_1 ( TYPE_1 element , TYPE_2 VAR_1 ) { return element . METHOD_1 ( VAR_1 ) ; }[0m
Trg : public long METHOD_1 ( TYPE_1 element , TYPE_2 VAR_1 ) { return element . METHOD_1 ( VAR_1 ) . METHOD_1 ( ) ; }[0m
Pred: public long METHOD_1 ( TYPE_1 element , TYPE_2 VAR_1 ) { return element . METHOD_1 ( VAR_1 ) ; }[0m
[31mExample #7[0m
Src : public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return INT_1 ; } return ( ( java.lang.Integer ) ( source ) ) . METHOD_1 ( ) ; }[0m
Trg : public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return INT_1 ; } return source ; }[0m
Pred: public java.lang.Object step ( java.lang.Object source , java.util.Date startTime ) { if ( source == null ) { return INT_1 ; } return ( ( java.lang.Integer ) ( source ) ) . METHOD_1 ( ) ; }[0m
[31mExample #8[0m
Src : public TYPE_1 get ( ) { TYPE_1 <unk> = METHOD_1 ( METHOD_2 ( ) : : get ) ; TYPE_2 . METHOD_3 ( <unk> , <unk> ) ; TYPE_2 . METHOD_4 ( <unk> , TYPE_3 . METHOD_5 ( <unk> ) ) ; return <unk> ; }[0m
Trg : public TYPE_1 get ( ) { TYPE_1 <unk> = METHOD_1 ( METHOD_2 ( ) : : get ) ; TYPE_2 . METHOD_3 ( <unk> , <unk> ) ; TYPE_2 . METHOD_4 ( <unk> , <unk> ) ; return <unk> ; }[0m
Pred: public TYPE_1 get ( ) { TYPE_1 . METHOD_1 ( METHOD_2 ( ) ) ; TYPE_2 . METHOD_3 ( java.lang.Math.random ( ) ) ; TYPE_2 . METHOD_4 ( 1.0F , TYPE_3 . METHOD_5 ( f ) ) ; }[0m
[31mExample #9[0m
Src : protected TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_3 ( ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; }[0m
[31mExample #10[0m
Src : private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; }[0m
[31mExample #11[0m
Src : public java.lang.Object METHOD_1 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 1 ; }[0m
Trg : public java.lang.Object METHOD_1 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : 1 ; }[0m
Pred: public java.lang.Object METHOD_1 ( java.lang.Object source , java.util.Date startTime ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 1 ; }[0m
[31mExample #12[0m
Src : protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . <unk> ( ) . METHOD_3 ( ) , TYPE_4 . <unk> ( ) . METHOD_4 ( ) ) ; }[0m
Trg : protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) , TYPE_4 . METHOD_4 ( ) ) ; }[0m
Pred: protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( TYPE_1 value ) { status = value . getValue ( ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { status = value ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { status = value . getValue ( ) ; }[0m
[31mExample #14[0m
Src : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = <unk> . METHOD_2 ( FLOAT_1 ) ; b = <unk> . METHOD_2 ( FLOAT_2 ) ; c = a - b ; return c ; }[0m
Trg : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a - b ; return c ; }[0m
Pred: public static float METHOD_1 ( ) { float a ; float b ; float c = a . METHOD_2 ( FLOAT_1 ) ; b = 0L . METHOD_2 ( FLOAT_2 ) ; c = a - b ; return c ; }[0m
[31mExample #15[0m
Src : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_6 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; }[0m
[31mExample #16[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = <unk> . get ( STRING_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = VAR_1 . METHOD_3 ( ) ; VAR_2 = <unk> . get ( STRING_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; java.util.Date = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = 0.0F . get ( STRING_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; }[0m
---------------
Class: Remove parameter from the method invocation
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private <unk> . <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , VAR_1 ) ; }[0m
Trg : private <unk> . <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , VAR_1 , true ) ; }[0m
Pred: private java.lang.Long METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( VAR_2 . METHOD_3 ( ) , name , true , null , null ) ; }[0m
[31mExample #2[0m
Src : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) , TYPE_1 . <unk> ( VAR_3 class ) ) ; <unk> . METHOD_3 ( VAR_4 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) , TYPE_1 . <unk> ( ) ) ; <unk> . METHOD_3 ( VAR_4 ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( ( VAR_2 ) == null ) return ; return ( VAR_1 ) . intValue ( java.lang.Math.random ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( int VAR_1 , TYPE_1 <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; }[0m
Trg : public void METHOD_1 ( int VAR_1 , TYPE_1 <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( true ) ; }[0m
Pred: public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , false , false ) ; METHOD_3 ( 0 , false , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( 0 , false , true ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , false , false ) ; METHOD_3 ( 0 , false , true ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( <unk> , VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( <unk> ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( <unk> ) ; VAR_1 . METHOD_2 ( <unk> ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( 0L ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }[0m
[31mExample #6[0m
Src : public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_1 ( null ) ; }[0m
Trg : public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_1 ( null , null ) ; }[0m
Pred: public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_1 ( null ) ; TYPE_2 . METHOD_1 ( null ) ; }[0m
[31mExample #7[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > <unk> , java.lang.String <unk> ) throws java.lang.Exception { return METHOD_2 ( <unk> , null , null , <unk> , null , null ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > <unk> , java.lang.String <unk> ) throws java.lang.Exception { return METHOD_2 ( <unk> , null , <unk> , null , null ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > TYPE_1 , java.lang.String VAR_2 ) throws java.lang.Exception { return METHOD_2 ( VAR_2 , null , null , null , null , null , null ) ; }[0m
[31mExample #8[0m
Src : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( true ) ; add ( VAR_1 ) ; }[0m
Trg : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; add ( VAR_1 ) ; }[0m
Pred: protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( true ) ; VAR_1 = new TYPE_1 ( true ) ; }[0m
[31mExample #9[0m
Src : public TYPE_1 <unk> ( ) { return new TYPE_1 ( this , null ) ; }[0m
Trg : public TYPE_1 <unk> ( ) { return new TYPE_1 ( this ) ; }[0m
Pred: public TYPE_1 TYPE_1 ( ) { return new TYPE_1 ( this , null ) ; }[0m
[31mExample #10[0m
Src : public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class < ? > [ ] VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; }[0m
Trg : public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class < ? > [ ] VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; }[0m
Pred: public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class < ? > [ ] VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_3 , STRING_4 , result ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_4 , result ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_3 , STRING_4 , result ) ; }[0m
[31mExample #12[0m
Src : public TYPE_1 <unk> ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Trg : public TYPE_1 <unk> ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 ) ; }[0m
Pred: public TYPE_1 TYPE_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( false ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( false ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 , true ) ; METHOD_5 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( false ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; }[0m
[31mExample #14[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new <unk> ( ) , null , new java.util.ArrayList < <unk> . <unk> > ( ) ) , false , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new <unk> ( ) , null , new java.util.ArrayList < <unk> . <unk> > ( ) , null ) , false , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new java.util.Date ( ) , null , new java.util.ArrayList < 1.0F ) ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_2 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( <unk> ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_2 , 0 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( <unk> ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_2 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; }[0m
[31mExample #16[0m
Src : protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , <unk> ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_2 ) ; }[0m
[31mExample #17[0m
Src : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 ) ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
[31mExample #18[0m
Src : public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) throws <unk> { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_5 , VAR_6 , VAR_1 , VAR_2 ) ; } }[0m
Trg : public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) throws <unk> { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_1 , VAR_2 ) ; } }[0m
Pred: public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_5 , VAR_6 , VAR_1 , VAR_2 ) ; } }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , true , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , true , true , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , true , true , true ) ; }[0m
[31mExample #20[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 1 , 0 ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 1 , 0 , 0 ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 1 , 0 ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
[31mExample #21[0m
Src : public void METHOD_1 ( ) { <unk> ( null ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( VAR_1 . <unk> class ) ) ; TYPE_2 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( null ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) ) ; TYPE_2 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { if ( ( VAR_2 ) == null ) return ; return ( null ) . getInt ( java.lang.Math.random ( ) . class ) ; }[0m
[31mExample #22[0m
Src : protected TYPE_1 < TYPE_2 > <unk> ( ) { return new TYPE_3 ( METHOD_1 ( ) , METHOD_1 ( ) . getId ( ) ) ; }[0m
Trg : protected TYPE_1 < TYPE_2 > <unk> ( ) { return new TYPE_3 ( METHOD_1 ( ) ) ; }[0m
Pred: protected TYPE_1 < TYPE_2 > TYPE_1 ( ) { return new TYPE_3 ( METHOD_1 ( ) , METHOD_1 ( ) . METHOD_1 ( ) ) ; }[0m
[31mExample #23[0m
Src : public final void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . <unk> { METHOD_2 ( VAR_1 , null ) ; }[0m
Trg : public final void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . <unk> { METHOD_2 ( VAR_1 ) ; }[0m
Pred: public final void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 { TYPE_1 . METHOD_2 ( VAR_1 , null ) ; }[0m
[31mExample #24[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( new java.util.HashMap < > ( ) , true , true ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( new java.util.HashMap < > ( ) , true , true , true ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( new java.util.HashMap < > ( ) , true , true ) ; }[0m
[31mExample #25[0m
Src : public boolean METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( VAR_1 ) ; }[0m
Trg : public boolean METHOD_1 ( int VAR_1 ) { return VAR_2 . METHOD_3 ( VAR_1 ) ; }[0m
Pred: public boolean METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( VAR_1 ) ; }[0m
[31mExample #26[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . <unk> ( 1 , 0 ) , VAR_1 . METHOD_3 ( INT_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . <unk> ( 1 ) , VAR_1 . METHOD_3 ( INT_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . get ( 1 , 0 ) , VAR_1 . METHOD_3 ( INT_1 ) ) ; }[0m
[31mExample #27[0m
Src : private java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true , null ) ; }[0m
Trg : private java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true ) ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true , null ) ; }[0m
[31mExample #28[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) ) ) . <unk> ( null ) ; TYPE_2 . METHOD_2 ( <unk> , VAR_3 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( null ) ; TYPE_2 . METHOD_2 ( <unk> , VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) { assertTrue ( VAR_1 . get ( TYPE_1 . get ( VAR_2 . class class ) ) ) . intValue ( null ) ; TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ; }[0m
[31mExample #29[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , new java.io.File ( VAR_2 , STRING_1 ) , false ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , new java.io.File ( VAR_2 , STRING_1 ) , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , new java.io.File ( VAR_2 , STRING_1 ) , false ) ; }[0m
[31mExample #30[0m
Src : public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 <unk> = METHOD_2 ( VAR_1 , false , false ) ; return new TYPE_1 ( <unk> . METHOD_3 ( ) ) ; }[0m
Trg : public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 <unk> = METHOD_2 ( VAR_1 , false , false , false ) ; return new TYPE_1 ( <unk> . METHOD_3 ( ) ) ; }[0m
Pred: public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = METHOD_2 ( VAR_1 , false , false ) ; return new TYPE_1 ( METHOD_3 ( ) ) ; }[0m
---------------
Class: Remove redundant initialization
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { int [ ] a = null ; TYPE_1 VAR_1 = new TYPE_1 ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Trg : public void METHOD_1 ( ) { try { int [ ] a = null ; new TYPE_1 ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { int [ ] a = null ; TYPE_1 VAR_1 = new TYPE_1 ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 [ ] VAR_1 = new TYPE_1 [ VAR_2 ] ; TYPE_2 VAR_3 = new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( ) { try { TYPE_1 [ ] VAR_1 = new TYPE_1 [ VAR_2 ] ; new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 [ ] VAR_1 = new TYPE_1 [ VAR_2 ] ; TYPE_2 VAR_3 = new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
---------------
Class: Remove statement
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( VAR_2 ) ; return METHOD_2 ( VAR_1 ) ; }[0m
Trg : private java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( VAR_2 ) ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( VAR_2 ) ; return METHOD_2 ( VAR_1 ) ; }[0m
[31mExample #2[0m
Src : public void info ( java.lang.String msg ) { if ( ( TYPE_1 . METHOD_1 ( ) ) < ( VAR_1 ) ) { return ; } <unk> ( TYPE_1 , msg ) ; }[0m
Trg : public void info ( java.lang.String msg ) { <unk> ( TYPE_1 , msg ) ; }[0m
Pred: public void info ( java.lang.String msg ) { if ( ( TYPE_1 . METHOD_1 ( ) ) < ( VAR_1 ) ) { return ; } java.lang.Math.random ( TYPE_1 , msg ) ; }[0m
[31mExample #3[0m
Src : public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg > > 0 ; }[0m
Trg : public static long METHOD_1 ( long arg ) { return arg > > 0 ; }[0m
Pred: public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg > > 0 ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , 0 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; METHOD_6 ( <unk> . get ( ) , 0 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; <unk> ( VAR_1 ) . <unk> ( VAR_2 ) . METHOD_6 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( <unk> , VAR_2 , VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_2 ( <unk> , <unk> ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 0 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_2 VAR_4 = new TYPE_2 ( <unk> , <unk> ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 0 ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_2 , VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 0 ) ; }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
[31mExample #8[0m
Src : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { assert ( VAR_1 . METHOD_2 ( VAR_2 class ) ) == null ; return METHOD_3 ( METHOD_4 ( VAR_1 ) , VAR_1 , null ) ; }[0m
Trg : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_3 ( METHOD_4 ( VAR_1 ) , VAR_1 , null ) ; }[0m
Pred: TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { assert ( VAR_1 . METHOD_2 ( VAR_2 class ) ) == null ; return METHOD_3 ( METHOD_4 ( VAR_1 ) , VAR_1 , null ) ; }[0m
[31mExample #9[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; }[0m
[31mExample #10[0m
Src : public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x + y ; return VAR_2 - y ; }[0m
Trg : public static int METHOD_1 ( int x , int y ) { int VAR_2 = x + y ; return VAR_2 - y ; }[0m
Pred: public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x + y ; return VAR_2 - y ; }[0m
[31mExample #11[0m
Src : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) ) ; <unk> ( VAR_1 . METHOD_3 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( ( VAR_2 ) == null ) return ; return ( VAR_1 ) . intValue ( java.lang.Math.random ) ; }[0m
[31mExample #12[0m
Src : public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return INT_1 - ( INT_2 - arg ) ; }[0m
Trg : public static long METHOD_1 ( long arg ) { return INT_1 - ( INT_2 - arg ) ; }[0m
Pred: public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return INT_1 - ( INT_2 - arg ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; <unk> VAR_2 = <unk> . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; <unk> VAR_2 = <unk> . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }[0m
[31mExample #14[0m
Src : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( INT_1 , INT_1 ) ; }[0m
Trg : private void METHOD_1 ( ) { METHOD_3 ( INT_1 , INT_1 ) ; }[0m
Pred: private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_2 ( ) ; METHOD_3 ( INT_1 , INT_1 ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( <unk> ( 1 ) ) ) ; VAR_1 . METHOD_6 ( ) ; METHOD_7 ( <unk> . get ( ) , 1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( <unk> ( 1 ) ) ) ; METHOD_7 ( <unk> . get ( ) , 1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; }[0m
[31mExample #16[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; c . METHOD_3 ( null , VAR_1 , STRING_1 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; try { c . METHOD_3 ( null , VAR_1 , STRING_1 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; c . METHOD_3 ( null , VAR_1 , STRING_1 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
[31mExample #17[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> <unk> ) { VAR_1 . METHOD_2 ( <unk> , <unk> ) ; VAR_1 . METHOD_3 ( <unk> ) ; return <unk> ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> <unk> ) { VAR_1 . METHOD_2 ( <unk> , <unk> ) ; return <unk> ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_1 , , TYPE_2 ) { VAR_1 . METHOD_2 ( java.lang.Math.random ( ) , 0L ) ; VAR_1 . METHOD_3 ( 0L ) ; }[0m
[31mExample #18[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( true ) ; METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( <unk> . METHOD_5 ( new TYPE_2 ( VAR_3 ) ) , TYPE_3 . METHOD_6 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( true ) ; TYPE_1 . METHOD_4 ( <unk> . METHOD_5 ( new TYPE_2 ( VAR_3 ) ) , TYPE_3 . METHOD_6 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( new TYPE_2 ( VAR_3 ) ) , TYPE_3 . METHOD_6 ( ) ) ; }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) { protected TYPE_3 METHOD_2 ( ) { return null ; } protected TYPE_4 METHOD_3 ( ) { return null ; } } ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) { protected TYPE_3 METHOD_2 ( ) { return null ; } protected TYPE_4 METHOD_3 ( ) { return null ; } }[0m
[31mExample #20[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . assertEquals ( ( STRING_2 + ( value ) ) , value . METHOD_3 ( ) , value . getValue ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . assertEquals ( ( STRING_2 + ( value ) ) , value . METHOD_3 ( ) , value . getValue ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . assertEquals ( ( STRING_2 + ( value ) ) , value . METHOD_3 ( ) , value . getValue ( ) ) ; }[0m
[31mExample #21[0m
Src : public boolean METHOD_1 ( int id , java.lang.String response ) { if ( VAR_1 ) { return VAR_2 . METHOD_2 ( response ) ; } else { return METHOD_3 ( ( ( ( STRING_1 + id ) + STRING_2 ) + response ) ) ; } }[0m
Trg : public boolean METHOD_1 ( int id , java.lang.String response ) { return VAR_2 . METHOD_2 ( response ) ; }[0m
Pred: public boolean METHOD_1 ( int id , java.lang.String response ) { if ( VAR_1 ) { return VAR_2 . METHOD_2 ( response ) ; } else { return METHOD_3 ( ( ( ( STRING_1 + id ) + STRING_2 ) + response ) ) ; } }[0m
[31mExample #22[0m
Src : public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x - y ; return y + VAR_2 ; }[0m
Trg : public static int METHOD_1 ( int x , int y ) { int VAR_2 = x - y ; return y + VAR_2 ; }[0m
Pred: public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x - y ; return y + VAR_2 ; }[0m
[31mExample #23[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; <unk> . METHOD_7 ( new TYPE_1 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; <unk> . METHOD_7 ( new TYPE_1 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; }[0m
[31mExample #24[0m
Src : protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; }[0m
Trg : protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
Pred: protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; }[0m
[31mExample #25[0m
Src : void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; }[0m
Trg : void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; }[0m
Pred: void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; }[0m
[31mExample #26[0m
Src : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) ; <unk> VAR_2 = VAR_3 ; java.util.List < TYPE_1 > VAR_4 = <unk> . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> VAR_2 = VAR_3 ; java.util.List < TYPE_1 > VAR_4 = <unk> . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) ; VAR_2 = VAR_3 ; java.util.List < TYPE_1 > VAR_4 = METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; }[0m
[31mExample #27[0m
Src : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; return VAR_2 ; }[0m
Trg : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; return VAR_2 ; }[0m
Pred: TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; return VAR_2 ; }[0m
[31mExample #28[0m
Src : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true ) ; METHOD_4 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { METHOD_3 ( true ) ; METHOD_4 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_2 ( ) ; METHOD_3 ( true ) ; METHOD_4 ( ) ; METHOD_3 ( true ) ; METHOD_4 ( ) ; }[0m
[31mExample #29[0m
Src : public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 class ) ; TYPE_2 . METHOD_3 ( new TYPE_3 ( ) ) ; }[0m
Trg : public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 class ) ; }[0m
Pred: public static void METHOD_1 ( ) { TYPE_2 . METHOD_3 ( new TYPE_3 ( ) ) ; TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 class ) ; TYPE_2 . METHOD_3 ( new TYPE_3 ( ) ) ; }[0m
[31mExample #30[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , INT_1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_6 ( <unk> . get ( ) , INT_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; }[0m
[31mExample #31[0m
Src : public void METHOD_1 ( int VAR_1 ) { <unk> ( VAR_2 . <unk> , ( STRING_1 + VAR_1 ) ) ; }[0m
Trg : public void METHOD_1 ( int VAR_1 ) { }[0m
Pred: public void METHOD_1 ( int VAR_1 ) { if ( ( ( VAR_2 ) != null ) || ( VAR_2 . isEmpty ( ) ) ) { return ( ( VAR_2 ) + 1 ) ; } }[0m
[31mExample #32[0m
Src : public void METHOD_1 ( ) { if ( ( <unk> ( ) ) != null ) { super . METHOD_1 ( ) ; } else { <unk> ( null ) ; } }[0m
Trg : public void METHOD_1 ( ) { if ( ( <unk> ( ) ) != null ) { super . METHOD_1 ( ) ; } }[0m
Pred: public void METHOD_1 ( ) { if ( ( java.lang.Math.random ( ) ) != null ) { super . METHOD_1 ( ) ; } }[0m
[31mExample #33[0m
Src : public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; <unk> . METHOD_3 ( ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { <unk> . METHOD_3 ( ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; }[0m
[31mExample #34[0m
Src : public static int METHOD_1 ( int <unk> , int VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } return ( - <unk> ) - VAR_1 ; }[0m
Trg : public static int METHOD_1 ( int <unk> , int VAR_1 ) { return ( - <unk> ) - VAR_1 ; }[0m
Pred: public static int METHOD_1 ( int n , int VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } return ( - ( ) ) - 1 ; }[0m
[31mExample #35[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; <unk> . METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; TYPE_1 VAR_2 = <unk> . get ( ) ; assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; <unk> . METHOD_4 ( METHOD_5 ( ) ) ; TYPE_1 VAR_2 = <unk> . get ( ) ; assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; }[0m
[31mExample #36[0m
Src : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { METHOD_3 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; }[0m
[31mExample #37[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; parameters . <unk> ( VAR_1 ) ; parameters . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { parameters . <unk> ( VAR_1 ) ; parameters . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; parameters . METHOD_3 ( VAR_2 ) ; parameters . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_2 ) ; }[0m
[31mExample #38[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( null ) ; <unk> . METHOD_4 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_3 ( null ) ; <unk> . METHOD_4 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( null ) ; }[0m
[31mExample #39[0m
Src : private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; }[0m
Trg : private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; }[0m
Pred: private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; }[0m
[31mExample #40[0m
Src : public void METHOD_1 ( ) { <unk> ( STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( ) { }[0m
Pred: public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; }[0m
[31mExample #41[0m
Src : public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) == ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Trg : public static int METHOD_1 ( int i ) { return ( i > INT_1 ) == ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Pred: public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) == ( java.lang.Math.random . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
[31mExample #42[0m
Src : public static byte METHOD_1 ( short value ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( ( byte ) ( ( char ) ( value ) ) ) ; }[0m
Trg : public static byte METHOD_1 ( short value ) { return ( ( byte ) ( ( char ) ( value ) ) ) ; }[0m
Pred: public static byte METHOD_1 ( short value ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( ( byte ) ( ( char ) ( value ) ) ) ; }[0m
[31mExample #43[0m
Src : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( <unk> ( ) ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } METHOD_7 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( <unk> ( ) ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; } METHOD_7 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( java.lang.Math.random ( ) ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } METHOD_7 ( ) ; }[0m
[31mExample #44[0m
Src : public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
[31mExample #45[0m
Src : public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; }[0m
[31mExample #46[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> <unk> = new <unk> ( ) ; <unk> ( VAR_1 . METHOD_2 ( <unk> , VAR_2 ) ) . <unk> ( true ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( <unk> ) , VAR_3 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_1 . METHOD_2 ( <unk> , VAR_2 ) ) . <unk> ( true ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( <unk> ) , VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.lang.Math.random ( VAR_1 . METHOD_2 ( 1.0F , VAR_2 ) ) . intValue ( true ) ; TYPE_1 . METHOD_3 ( 0L . METHOD_4 ( 1.0F ) , VAR_3 ) ; }[0m
[31mExample #47[0m
Src : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_2 ( STRING_1 ) ) ; METHOD_2 ( new TYPE_2 ( STRING_2 ) ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_2 ( STRING_1 ) ) ; METHOD_2 ( new TYPE_2 ( STRING_1 ) ) ; METHOD_2 ( new TYPE_2 ( STRING_2 ) ) ; }[0m
[31mExample #48[0m
Src : public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg - 0 ; }[0m
Trg : public static long METHOD_1 ( long arg ) { return arg - 0 ; }[0m
Pred: public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg - 1 ; }[0m
[31mExample #49[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; }[0m
[31mExample #50[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , true ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) ; METHOD_7 ( <unk> . get ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , true ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; METHOD_7 ( <unk> . get ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , true ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) ; METHOD_7 ( ) . get ( ) ; }[0m
[31mExample #51[0m
Src : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; }[0m
Trg : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; }[0m
[31mExample #52[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; }[0m
[31mExample #53[0m
Src : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( <unk> , VAR_2 , VAR_3 ) ; METHOD_2 ( INT_1 , <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( INT_1 , <unk> ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_2 , VAR_3 ) ; METHOD_2 ( INT_1 , 0L ) ; }[0m
[31mExample #54[0m
Src : public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; METHOD_3 ( ( ! VAR_1 ) ) ; }[0m
Trg : public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; }[0m
Pred: public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; METHOD_3 ( ( ! VAR_1 ) ) ; }[0m
[31mExample #55[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; return METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_3 , new TYPE_3 ( ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_3 , new TYPE_3 ( ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; return METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_3 , new TYPE_3 ( ) ) ; }[0m
[31mExample #56[0m
Src : public static float METHOD_1 ( float arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg / FLOAT_1 ; }[0m
Trg : public static float METHOD_1 ( float arg ) { return arg / FLOAT_1 ; }[0m
Pred: public static float METHOD_1 ( float arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg / FLOAT_1 ; }[0m
[31mExample #57[0m
Src : public static long METHOD_1 ( long <unk> , long VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } long VAR_3 = - VAR_1 ; return ( <unk> + VAR_3 ) | ( <unk> + VAR_3 ) ; }[0m
Trg : public static long METHOD_1 ( long <unk> , long VAR_1 ) { long VAR_3 = - VAR_1 ; return ( <unk> + VAR_3 ) | ( <unk> + VAR_3 ) ; }[0m
Pred: public static long METHOD_1 ( long f , long VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } long VAR_3 = - VAR_1 ; return ( f + VAR_3 ) | ( VAR_2 + VAR_3 ) ; }[0m
[31mExample #58[0m
Src : public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) != ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Trg : public static int METHOD_1 ( int i ) { return ( i > INT_1 ) != ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Pred: public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) != ( java.lang.Math.random . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
[31mExample #59[0m
Src : public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { file = VAR_1 ; } }[0m
Trg : public void METHOD_1 ( final java.lang.String VAR_1 ) { file = VAR_1 ; }[0m
Pred: public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { file = VAR_1 ; } }[0m
[31mExample #60[0m
Src : public static void METHOD_1 ( java.lang.String [ ] args ) { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; <unk> . METHOD_3 ( new TYPE_2 ( ) ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String [ ] args ) { <unk> . METHOD_3 ( new TYPE_2 ( ) ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.String [ ] args ) { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; }[0m
[31mExample #61[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) ; super . METHOD_1 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) ; super . METHOD_1 ( ) ; }[0m
[31mExample #62[0m
Src : protected void METHOD_1 ( <unk> VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this ) ; }[0m
Trg : protected void METHOD_1 ( <unk> VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this ) ; }[0m
[31mExample #63[0m
Src : public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . <unk> ( ) . equals ( VAR_2 ) ) ; }[0m
Trg : private static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . <unk> ( ) . equals ( VAR_2 ) ) ; }[0m
Pred: public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . equals ( ) . equals ( VAR_2 ) ) ; }[0m
[31mExample #64[0m
Src : public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; }[0m
Trg : public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; }[0m
---------------
Class: Rename method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { TYPE_1 TYPE_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( java.lang.Math.random ) ) ; METHOD_2 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object result ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( result ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_2 ( ) . <unk> ( VAR_1 ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object result ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( result ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_2 ( ) . <unk> ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object args , java.lang.Object result ) { java.util.List < java.lang.Long > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( result ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_2 ( ) . intValue ( VAR_1 ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object args , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( ( ( TYPE_1 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ; VAR_2 = VAR_1 ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( ( ( TYPE_1 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ; VAR_2 = VAR_1 ; }[0m
Pred: public void METHOD_1 ( java.lang.Object startTime , java.lang.Object startTime ) { java.util.List < java.lang.Long > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_1 . intValue ) ( java.lang.Math.random ( ) ) ) ) ) ; VAR_2 = VAR_1 ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 . METHOD_2 ( target ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 . METHOD_2 ( target ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object TYPE_1 ) { TYPE_1 . METHOD_2 ( target ) ; TYPE_1 . METHOD_2 ( target ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( java.lang.Math.random ) ) ) ; VAR_1 . METHOD_3 ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 ) ( <unk> ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 ) ( <unk> ) ) ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object VAR_2 ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 ) ( java.lang.Math.random ) ) ) ; }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ( ( TYPE_2 . METHOD_3 ( ) . size ( ) ) == 0 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . assertEquals ( 0 , TYPE_2 . METHOD_3 ( ) . size ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ( ( TYPE_2 . METHOD_3 ( ) . size ( ) ) == 0 ) ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < java.lang.Long > INT_4 = ( ( java.util.ArrayList < TYPE_1 > ) ( java.lang.Math.random ( ) ) ) ; VAR_1 . METHOD_2 ( delete ) ; }[0m
[31mExample #9[0m
Src : boolean METHOD_1 ( ) ;[0m
Trg : boolean <unk> ( ) ;[0m
Pred: boolean METHOD_1 ( )[0m
[31mExample #10[0m
Src : public void METHOD_1 ( ) { <unk> . <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( TYPE_1 ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( TYPE_1 ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { VAR_1 = ( ( TYPE_1 ) ( java.lang.Math.random ) ) ; METHOD_2 ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_2 = ( ( java.lang.Math.random ) ( java.lang.Math.random ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; }[0m
---------------
Class: Rename parameter
Golden example (False):
[31mExample #1[0m
Src : public native float METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , <unk> ;[0m
Trg : public native float METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , <unk> ;[0m
Pred: public boolean METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , TYPE_1 . update ( ) ; return VAR_1 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public native boolean METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , <unk> ;[0m
Trg : public native boolean METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , <unk> ;[0m
Pred: public boolean METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , TYPE_1 . update ( ) ; return true ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( <unk> type ) { }[0m
Trg : public void METHOD_1 ( <unk> method ) { }[0m
Pred: public void METHOD_1 ( TYPE_2 type ) { }[0m
[31mExample #3[0m
Src : TYPE_1 id ( java.lang.String VAR_1 ) throws TYPE_2 ;[0m
Trg : TYPE_1 id ( java.lang.String id ) throws TYPE_2 ;[0m
Pred: TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2[0m
[31mExample #4[0m
Src : public int METHOD_1 ( int VAR_1 , <unk> . <unk> <unk> ) ;[0m
Trg : public int METHOD_1 ( int VAR_1 , <unk> . <unk> <unk> ) ;[0m
Pred: public int METHOD_1 ( int VAR_1 , java.util.Date ) { java.lang.System.out.println ( VAR_1 . intValue ( ) ) ; }[0m
---------------
Class: Rename variable
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_2 = VAR_1 ; }[0m
Trg : public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_1 = VAR_1 ; }[0m
Pred: public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_2 = VAR_1 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( this ) ; }[0m
Trg : private native java.lang.String METHOD_1 ( ) ;[0m
Pred: private java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( this ) ; }[0m
---------------
Class: Replace fully qualified name with import or vice versa
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_3 ) ; METHOD_3 ( STRING_4 ) ; } catch ( TYPE_2 VAR_1 ) { } }[0m
Trg : public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_3 ) ; <unk> . METHOD_3 ( STRING_4 ) ; } catch ( TYPE_2 VAR_1 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_3 ) ; METHOD_3 ( STRING_4 ) ; } catch ( TYPE_2 VAR_1 ) { } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) ) ; assertEquals ( VAR_2 , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) ) ; <unk> ( VAR_2 , true ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; assertEquals ( VAR_2 ) ; assertEquals ( VAR_2 , true ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_4 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_4 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_4 ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { TYPE_1 key = new TYPE_1 ( ) ; assertEquals ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 key = new TYPE_1 ( ) ; <unk> ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 key = new TYPE_1 ( ) ; assertEquals ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( long VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 <unk> ) { VAR_2 . <unk> ( STRING_1 ) ; } }[0m
Trg : public static void METHOD_1 ( long VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 <unk> ) { java.lang.System.out.println ( STRING_1 ) ; } }[0m
Pred: public static void METHOD_1 ( long VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 TYPE_2 ) { VAR_2 . append ( STRING_1 ) ; } }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( TYPE_1 <unk> ) throws java.lang.Exception { TYPE_2 <unk> = new TYPE_2 ( ) ; <unk> . METHOD_2 ( <unk> , <unk> ) ; assertEquals ( VAR_1 , <unk> . <unk> ( ) ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 <unk> ) throws java.lang.Exception { TYPE_2 <unk> = new TYPE_2 ( ) ; <unk> . METHOD_2 ( <unk> , <unk> ) ; <unk> ( VAR_1 , <unk> . <unk> ( ) ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 TYPE_1 ) throws java.lang.Exception { TYPE_2 TYPE_2 = new TYPE_2 ( ) ; assertEquals ( VAR_1 , java.lang.Math.random ( ) ) ; assertEquals ( VAR_1 , java.lang.Math.random ( ) ) ; }[0m
[31mExample #6[0m
Src : private static < TYPE_1 > void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { int length = VAR_1 . length ; assertEquals ( ( STRING_1 + length ) , 0 , length ) ; }[0m
Trg : private static < TYPE_1 > void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { int length = VAR_1 . length ; <unk> ( ( STRING_1 + length ) , 0 , length ) ; }[0m
Pred: private static < TYPE_1 > void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { int length = VAR_1 . length ; assertEquals ( ( STRING_1 + length ) , 0 , length ) ; }[0m
---------------
Class: Replace generic specification with diamond operator
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 < TYPE_2 > get ( ) { return new TYPE_1 < TYPE_2 > ( key , TYPE_3 . METHOD_1 ( VAR_1 , type ) , STRING_1 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > get ( ) { return new TYPE_1 ( key , TYPE_3 . METHOD_1 ( VAR_1 , type ) , STRING_1 ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > get ( ) { return new TYPE_1 < TYPE_2 > ( key , TYPE_3 . METHOD_1 ( VAR_1 , type ) , STRING_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { return <unk> ( new TYPE_2 < <unk> > ( VAR_1 , VAR_2 . <unk> class ) , false ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return <unk> ( new TYPE_2 ( VAR_1 , VAR_2 . <unk> class ) , false ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return ( new TYPE_2 < TYPE_2 > ( VAR_1 , VAR_2 . class class ) , false ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = METHOD_2 ( VAR_2 class , VAR_3 , new <unk> ( VAR_4 ) ) ; return new TYPE_1 < TYPE_2 > ( VAR_1 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = METHOD_2 ( VAR_2 class , VAR_3 , new <unk> ( VAR_4 ) ) ; return new TYPE_1 ( VAR_1 ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = METHOD_2 ( VAR_2 class , VAR_3 , new java.lang.Integer ( VAR_4 ) ) ; return new TYPE_1 < TYPE_2 > ( VAR_1 ) ; }[0m
[31mExample #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 < <unk> > ( VAR_3 , VAR_4 . <unk> class ) ; return METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , new TYPE_3 ( ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 , VAR_4 . <unk> class ) ; return METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , new TYPE_3 ( ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 < TYPE_2 > ( VAR_3 , VAR_4 . class class ) ; return METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , new TYPE_3 ( ) ) ; }[0m
[31mExample #4[0m
Src : public TYPE_1 < java.lang.String > METHOD_1 ( <unk> id ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_3 < java.lang.String > ( ) , METHOD_4 ( id ) ) ) ; }[0m
Trg : public TYPE_1 < java.lang.String > METHOD_1 ( <unk> id ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_3 ( ) , METHOD_4 ( id ) ) ) ; }[0m
Pred: public TYPE_1 < java.lang.String > METHOD_1 ( java.lang.Long id ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_3 < java.lang.String > ( ) , METHOD_4 ( id ) ) ) ; }[0m
[31mExample #5[0m
Src : protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( TYPE_2 . <unk> ( ) . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; }[0m
Trg : protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList ( TYPE_2 . <unk> ( ) . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; }[0m
Pred: protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( TYPE_2 . trim ( ) . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; }[0m
[31mExample #6[0m
Src : public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 value , <unk> . <unk> <unk> , TYPE_1 <unk> ) { return new TYPE_2 < TYPE_1 > ( value , <unk> . toString ( ) , <unk> ) ; }[0m
Trg : public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 value , <unk> . <unk> <unk> , TYPE_1 <unk> ) { return new TYPE_2 ( value , <unk> . toString ( ) , <unk> ) ; }[0m
Pred: public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 value ) { return new TYPE_2 < TYPE_1 > ( value , string ) ; }[0m
[31mExample #7[0m
Src : protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > value = new TYPE_1 < java.lang.String > ( ) ; value . <unk> ( VAR_1 ) ; value . <unk> ( STRING_1 ) ; return value ; }[0m
Trg : protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > value = new TYPE_1 ( ) ; value . <unk> ( VAR_1 ) ; value . <unk> ( STRING_1 ) ; return value ; }[0m
Pred: protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > value = new TYPE_1 < java.lang.String > ( ) ; value . trim ( VAR_1 ) ; value . trim ( STRING_1 ) ; return value ; }[0m
---------------
Class: Replace invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . get ( STRING_1 ) ; <unk> ( VAR_2 , <unk> . METHOD_2 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . get ( STRING_1 ) ; <unk> ( <unk> . METHOD_2 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . = VAR_1 . get ( STRING_1 ) ; TYPE_1 . METHOD_2 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . METHOD_2 ( STRING_1 ) ; <unk> ( VAR_2 , <unk> . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . METHOD_2 ( STRING_1 ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_1 ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_1 , VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) . <unk> ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , false ) ; METHOD_4 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 . getName ( ) , VAR_2 , false ) ; METHOD_4 ( result ) ; }[0m
Pred: public void METHOD_1 ( ) { result = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , false ) ; METHOD_4 ( result ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; VAR_1 = STRING_1 ; TYPE_2 <unk> = VAR_2 . put ( STRING_2 , <unk> ) ; <unk> ( VAR_3 , <unk> . METHOD_2 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; VAR_1 = STRING_1 ; TYPE_2 <unk> = VAR_2 . put ( STRING_2 , <unk> ) ; <unk> ( <unk> . METHOD_2 ( ) ) . <unk> ( VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 TYPE_1 = new TYPE_1 ( ) ; VAR_1 = STRING_1 ; TYPE_2 . = VAR_2 . put ( STRING_2 , 0L ) ; assertTrue ( VAR_3 , VAR_2 . METHOD_2 ( ) ) ; }[0m
[31mExample #5[0m
Src : final byte METHOD_1 ( int offset ) { return VAR_1 . METHOD_2 ( ( offset + ( <unk> ) ) ) ; }[0m
Trg : final byte METHOD_1 ( int offset ) { return VAR_1 . METHOD_1 ( ( offset + ( <unk> ) ) ) ; }[0m
Pred: final byte METHOD_1 ( int offset ) { return VAR_1 . METHOD_2 ( ( offset + ( java.lang.Math.random ) ) ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 <unk> = METHOD_3 ( STRING_1 ) ; <unk> ( STRING_2 , <unk> . METHOD_4 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 <unk> = METHOD_3 ( STRING_1 ) ; <unk> ( <unk> . METHOD_4 ( ) ) . <unk> ( STRING_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 . METHOD_3 METHOD_3 ( STRING_1 ) ; assertEquals ( STRING_2 , VAR_2 . METHOD_4 ( ) ) ; }[0m
[31mExample #7[0m
Src : public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 < java.lang.String > METHOD_5 ( VAR_2 ) ) ; }[0m
Trg : public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 < java.lang.String > getValue ( VAR_2 ) ) ; }[0m
Pred: public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 < java.lang.String > METHOD_5 ( VAR_2 ) ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . delete ( METHOD_2 ( ) ) ; <unk> ( VAR_2 , <unk> . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . delete ( METHOD_2 ( ) ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 ( VAR_1 . delete ( METHOD_2 ( ) ) ) ; TYPE_1 . METHOD_2 ( ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { <unk> ( STRING_1 , VAR_1 . METHOD_2 ( STRING_2 , null , STRING_3 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( STRING_2 , null , STRING_3 ) ) . <unk> ( STRING_1 ) ; }[0m
Pred: public void METHOD_1 ( ) { assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( STRING_2 , null , STRING_3 ) ) ; }[0m
[31mExample #10[0m
Src : public boolean METHOD_1 ( java.lang.String VAR_1 , <unk> . <unk> VAR_2 ) { final TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } return false ; }[0m
Trg : public boolean METHOD_1 ( java.lang.String VAR_1 , <unk> . <unk> VAR_2 ) { final TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; } return false ; }[0m
Pred: public boolean METHOD_1 ( java.lang.String VAR_1 , java.util.Date VAR_2 ) { final TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } return false ; }[0m
[31mExample #11[0m
Src : protected void METHOD_1 ( ) { VAR_1 . add ( STRING_1 , TYPE_1 . <unk> ( ) . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . add ( STRING_2 , METHOD_3 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { VAR_1 . put ( STRING_1 , TYPE_1 . <unk> ( ) . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . put ( STRING_2 , METHOD_3 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { VAR_1 . add ( STRING_1 , TYPE_1 . toString ( ) . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . add ( STRING_2 , METHOD_3 ( ) ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . METHOD_4 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . getName ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { result = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . METHOD_4 ( ) ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . METHOD_4 ( ) ) ; }[0m
Trg : public void METHOD_1 ( <unk> item , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . METHOD_4 ( ) ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . METHOD_4 ( ) ) ; }[0m
[31mExample #14[0m
Src : public TYPE_1 . <unk> METHOD_1 ( ) { if ( ( TYPE_2 . METHOD_2 ( <unk> . METHOD_3 ( ) ) ) && ( VAR_1 < java.lang.Boolean > METHOD_4 ( VAR_2 ) ) ) { return new TYPE_1 . <unk> ( VAR_3 ) ; } return VAR_4 ; }[0m
Trg : public TYPE_1 . <unk> METHOD_1 ( ) { if ( ( TYPE_2 . METHOD_2 ( <unk> . METHOD_3 ( ) ) ) && ( VAR_1 < java.lang.Boolean > getValue ( VAR_2 ) ) ) { return new TYPE_1 . <unk> ( VAR_3 ) ; } return VAR_4 ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { if ( ( TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ) && ( VAR_1 < java.lang.Boolean > METHOD_4 ( VAR_2 ) ) ) { return new TYPE_1 ( VAR_2 ) ; } return VAR_4 ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_2 ( value ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_2 ( value ) ; this . VAR_1 . METHOD_2 ( value ) ; }[0m
[31mExample #16[0m
Src : public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . getName ( ) ; } return VAR_1 ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
[31mExample #17[0m
Src : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? VAR_1 . METHOD_3 ( ) : null ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? VAR_1 . METHOD_1 ( ) : null ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? VAR_1 . METHOD_3 ( ) : null ; }[0m
[31mExample #18[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < <unk> > <unk> = ( ( TYPE_2 < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < <unk> > <unk> = ( ( TYPE_2 < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < java.lang.Long > INT_4 = ( ( TYPE_2 < TYPE_2 > ) ( java.lang.Math.random ) ) ; VAR_1 . METHOD_2 ( delete ) ; }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 . <unk> ( ) , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( result ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( result ) ; }[0m
[31mExample #20[0m
Src : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } super . METHOD_1 ( VAR_1 , new <unk> ( METHOD_2 ( ) . getId ( ) ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } super . METHOD_1 ( VAR_1 , new <unk> ( <unk> ( ) . getId ( ) ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { if ( ( java.lang.Math.random ( ) ) == null ) { return ; } super . METHOD_1 ( VAR_1 , new TYPE_2 ( METHOD_2 ( ) . getId ( ) ) ) ; }[0m
[31mExample #21[0m
Src : private TYPE_1 METHOD_1 ( TYPE_2 <unk> ) { TYPE_3 params = new TYPE_3 ( true ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( <unk> ( ) . METHOD_4 ( ) ) ; return METHOD_5 ( VAR_2 , params , <unk> ) ; }[0m
Trg : private TYPE_1 METHOD_1 ( TYPE_2 <unk> ) { TYPE_3 params = new TYPE_3 ( true ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( <unk> ( ) . <unk> ( ) ) ; return METHOD_5 ( VAR_2 , params , <unk> ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( TYPE_2 TYPE_2 ) { TYPE_3 params = new TYPE_3 ( true ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( METHOD_3 ( ) . METHOD_4 ( ) ) ; return METHOD_5 ( VAR_2 , params , 0L ) ; }[0m
[31mExample #22[0m
Src : public int METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; }[0m
Trg : public int METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { return VAR_1 . getName ( ) . METHOD_3 ( VAR_2 . getName ( ) ) ; }[0m
Pred: public int METHOD_1 ( TYPE_2 VAR_1 , java.util.Date VAR_2 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; }[0m
[31mExample #23[0m
Src : protected int METHOD_1 ( ) { return VAR_1 < java.lang.Integer > METHOD_2 ( VAR_2 ) ; }[0m
Trg : protected int METHOD_1 ( ) { return VAR_1 < java.lang.Integer > getValue ( VAR_2 ) ; }[0m
Pred: protected int METHOD_1 ( ) { return VAR_1 < java.lang.Integer > METHOD_2 ( VAR_2 ) ; }[0m
[31mExample #24[0m
Src : protected TYPE_1 < ? > METHOD_1 ( TYPE_2 . <unk> VAR_1 , TYPE_3 parameters ) { return TYPE_4 . METHOD_2 ( VAR_1 , parameters ) ; }[0m
Trg : protected TYPE_1 < ? > METHOD_1 ( TYPE_2 . <unk> VAR_1 , TYPE_3 parameters ) { return TYPE_4 . METHOD_1 ( VAR_1 , parameters ) ; }[0m
Pred: protected TYPE_1 < ? > METHOD_1 ( TYPE_2 . TYPE_2 VAR_1 , TYPE_3 parameters ) { return TYPE_4 . METHOD_2 ( VAR_1 , parameters ) ; }[0m
[31mExample #25[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; <unk> ( VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; <unk> ( VAR_1 . getValue ( VAR_2 , VAR_3 ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; assertEquals ( VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ) . trim ( VAR_4 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
[31mExample #26[0m
Src : public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #27[0m
Src : protected java.lang.String METHOD_1 ( <unk> <unk> ) { return <unk> . METHOD_2 ( ) ; }[0m
Trg : protected java.lang.String METHOD_1 ( <unk> <unk> ) { return <unk> . getName ( ) ; }[0m
Pred: protected java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) ; }[0m
[31mExample #28[0m
Src : public java.lang.Boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public java.lang.Boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public java.lang.Boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #29[0m
Src : public void METHOD_1 ( java.lang.String <unk> ) { METHOD_2 ( ) . METHOD_3 ( <unk> ) ; }[0m
Trg : public void METHOD_1 ( java.lang.String <unk> ) { METHOD_2 ( ) . METHOD_1 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String str ) { METHOD_2 ( ) . METHOD_3 ( java.lang.Math.random ) ; }[0m
[31mExample #30[0m
Src : public boolean METHOD_1 ( <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . getName ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
[31mExample #31[0m
Src : public void METHOD_1 ( ) { <unk> . METHOD_2 ( VAR_1 ) ; <unk> result = <unk> . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_5 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> . METHOD_2 ( VAR_1 ) ; <unk> result = <unk> . METHOD_3 ( VAR_1 . getName ( ) ) ; TYPE_1 . METHOD_5 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; ( result . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; }[0m
---------------
Class: Replace statement
Golden example (False):
[31mExample #1[0m
Src : public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( java.lang.Integer . METHOD_2 ( VAR_1 ) ) ; }[0m
Trg : public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( VAR_1 ) ; }[0m
Pred: public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( java.lang.Integer . METHOD_2 ( VAR_1 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; new TYPE_2 ( VAR_1 . <unk> ( ) ) . METHOD_3 ( ) ; }[0m
Trg : public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; super . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; METHOD_2 ( true ) ; new TYPE_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_3 ( ) ; }[0m
[31mExample #2[0m
Src : public static long METHOD_1 ( ) { long VAR_1 = <unk> . METHOD_2 ( INT_1 ) ; int VAR_2 = <unk> . METHOD_3 ( <unk> ) ; return VAR_1 & VAR_2 ; }[0m
Trg : public static long METHOD_1 ( ) { long VAR_1 = <unk> ; int VAR_2 = <unk> ; return VAR_1 & VAR_2 ; }[0m
Pred: public static long METHOD_1 ( ) { long VAR_1 = java.lang.Math.random ( INT_1 ) ; long VAR_2 = 0L . METHOD_3 ( 0L ) ; return VAR_1 & VAR_2 ; }[0m
[31mExample #3[0m
Src : public boolean METHOD_1 ( ) { return ( ! ( METHOD_2 ( ) ) ) && ( ! ( TYPE_1 . equals ( METHOD_3 ( ) ) ) ) ; }[0m
Trg : public boolean METHOD_1 ( ) { return ! ( METHOD_2 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( ) { return ( ! ( METHOD_2 ( ) ) ) && ( ! ( TYPE_1 . equals ( METHOD_3 ( ) ) ) ) ; }[0m
---------------
Class: unclear
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { <unk> = METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 , STRING_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 , STRING_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_2 = METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 , STRING_1 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected byte METHOD_1 ( ) throws java.io.IOException { return ( ( byte ) ( METHOD_2 ( ) ) ) ; }[0m
Trg : protected native byte METHOD_1 ( ) throws java.io.IOException ;[0m
Pred: protected byte METHOD_1 ( ) throws java.io.IOException { return ( ( byte ) ( METHOD_2 ( ) ) ) ; }[0m
[31mExample #2[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_2 ( VAR_2 ) . METHOD_2 ( VAR_1 , VAR_3 . <unk> ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 . <unk> ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_2 ( VAR_2 ) . METHOD_2 ( VAR_1 , VAR_3 . trim ) ; }[0m
[31mExample #3[0m
Src : public TYPE_1 < java.lang.String > METHOD_1 ( ) { METHOD_2 ( ) ; }[0m
Trg : public TYPE_1 < java.lang.String > METHOD_1 ( ) { return METHOD_2 ( ) ; }[0m
Pred: public TYPE_1 < java.lang.String > METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_2 ( ) ; }[0m
---------------
================
Duration: 0:02:50.075539

Start conducting one shot learning experiment for Tufano Labeled 50 100 Code Changes...
Top-1 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 0 / 56 = 0.0
Top-3 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 3 / 56 = 0.05357142857142857
Top-5 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 3 / 56 = 0.05357142857142857
Top-10 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 3 / 56 = 0.05357142857142857
Top-50 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 3 / 56 = 0.05357142857142857

Top-1 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 1 / 188 = 0.005319148936170213
Top-3 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 7 / 188 = 0.03723404255319149
Top-5 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 8 / 188 = 0.0425531914893617
Top-10 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 9 / 188 = 0.047872340425531915
Top-50 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 10 / 188 = 0.05319148936170213
================
Correct Examples
Class: Replace fully qualified name with import or vice versa
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws <unk> { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } } ; TYPE_2 . <unk> ( VAR_4 . METHOD_4 ( <unk> . METHOD_5 ( VAR_5 class ) ) ) . <unk> ( VAR_1 ) ; assertEquals ( <unk> , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws <unk> { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } } ; TYPE_2 . <unk> ( VAR_4 . METHOD_4 ( <unk> . METHOD_5 ( VAR_5 class ) ) ) . <unk> ( VAR_1 ) ; <unk> ( <unk> , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.io.IOException { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } }[0m
+++++++++++++++
[32mExample #1[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , true ) ; VAR_1 . METHOD_2 ( null , new TYPE_2 ( ) ) ; <unk> ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( null , new TYPE_3 ( ) , new TYPE_2 ( ) ) ; <unk> ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , true ) ; VAR_1 . METHOD_2 ( null , new TYPE_2 ( ) ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( null , new TYPE_3 ( ) , new TYPE_2 ( ) ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , true ) ; VAR_1 . METHOD_2 ( null , new TYPE_2 ( ) ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( null , new TYPE_3 ( ) , new TYPE_2 ( ) ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; }[0m
---------------
================
================
Incorrect Examples
Class: Add braces to if statement
Golden example (False):
[31mExample #1[0m
Src : public int METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return VAR_2 ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) return VAR_2 ; return <unk> . METHOD_1 ( ) ; }[0m
Trg : public int METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return VAR_2 ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) { return VAR_2 ; } return <unk> . METHOD_1 ( ) ; }[0m
Pred: public int METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { TYPE_2 . METHOD_3 ( ) ; return TYPE_2 . METHOD_1 ( ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return false ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) return false ; return <unk> . METHOD_1 ( VAR_1 , VAR_2 ) ; }[0m
Trg : public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return false ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) { return false ; } return <unk> . METHOD_1 ( VAR_1 , VAR_2 ) ; }[0m
Pred: public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( ) ; return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 ) ; } }[0m
[31mExample #2[0m
Src : private synchronized void METHOD_1 ( byte [ ] <unk> , boolean VAR_1 ) { if ( VAR_2 ) <unk> ( VAR_3 . <unk> , ( STRING_1 + VAR_1 ) ) ; <unk> msg = VAR_4 . METHOD_2 ( VAR_5 ) ; <unk> = <unk> ; <unk> = ( VAR_1 ) ? 1 : 0 ; VAR_4 . METHOD_3 ( msg ) ; }[0m
Trg : private synchronized void METHOD_1 ( byte [ ] <unk> , boolean VAR_1 ) { if ( VAR_2 ) { <unk> ( VAR_3 . <unk> , ( STRING_1 + VAR_1 ) ) ; } <unk> msg = VAR_4 . METHOD_2 ( VAR_5 ) ; <unk> = <unk> ; <unk> = ( VAR_1 ) ? 1 : 0 ; VAR_4 . METHOD_3 ( msg ) ; }[0m
Pred: private synchronized void METHOD_1 ( byte [ ] args , boolean VAR_1 ) { if ( VAR_2 ) VAR_2 . append ( STRING_1 + VAR_1 ) ; return msg ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( TYPE_1 <unk> , java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( <unk> ) ) ; TYPE_4 <unk> = METHOD_2 ( ) ; if ( <unk> == null ) return ; <unk> . METHOD_1 ( <unk> , VAR_1 , args ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 <unk> , java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( <unk> ) ) ; TYPE_4 <unk> = METHOD_2 ( ) ; if ( <unk> == null ) { return ; } <unk> . METHOD_1 ( <unk> , VAR_1 , args ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 f , java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( ) ) ; TYPE_4 . METHOD_2 ( ) ; if ( delete == null ) return ; TYPE_1 . METHOD_1 ( args , VAR_1 , args ) ; }[0m
---------------
Class: Add parameter in the method/constructor invocation
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( <unk> ) ; <unk> ( VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , TYPE_3 . <unk> ( VAR_4 class ) ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( <unk> ) ; <unk> ( VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , TYPE_3 . <unk> ( ) ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( 1.0F ) ; assertTrue ( VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , TYPE_3 . class ( VAR_4 class ) ) ) . trim ( VAR_2 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( java.lang.String name ) { TYPE_3 < TYPE_1 < TYPE_2 > . VAR_1 > i = VAR_2 . METHOD_2 ( ) ; while ( i . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 > . VAR_1 <unk> = i . METHOD_4 ( ) ; if ( VAR_3 . equals ( name ) ) return <unk> ; } <unk> ( TYPE_1 . <unk> , ( STRING_1 + name ) ) ; return null ; }[0m
Trg : TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( java.lang.String name ) { synchronized ( VAR_2 ) { TYPE_3 < TYPE_1 < TYPE_2 > . VAR_1 > i = VAR_2 . METHOD_2 ( ) ; while ( i . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 > . VAR_1 <unk> = i . METHOD_4 ( ) ; if ( VAR_3 . equals ( name ) ) return <unk> ; } } <unk> ( TYPE_1 . <unk> , ( STRING_1 + name ) ) ; return null ; }[0m
Pred: TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( java.lang.String name ) { TYPE_3 < TYPE_1 < TYPE_2 > . VAR_1 > i = VAR_2 . METHOD_2 ( ) ; while ( i . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 > . VAR_1 = VAR_1 . METHOD_4 ( ) ; if ( VAR_3 . equals ( name ) ) return delete ; } }[0m
[31mExample #2[0m
Src : public java.lang.String METHOD_1 ( int <unk> , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } final TYPE_2 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } else { return null ; } }[0m
Trg : public java.lang.String METHOD_1 ( int <unk> , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , <unk> , VAR_1 , STRING_1 ) ) ) { return null ; } final TYPE_2 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } else { return null ; } }[0m
Pred: public java.lang.String METHOD_1 ( int VAR_2 , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } final TYPE_2 VAR_3 = METHOD_3 ( ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } else { return null ; } }[0m
[31mExample #3[0m
Src : private void METHOD_1 ( <unk> VAR_1 ) { <unk> ( VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_2 . METHOD_4 ( TYPE_1 . <unk> ( VAR_4 . <unk> class ) ) ) . <unk> ( TYPE_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Trg : private void METHOD_1 ( <unk> VAR_1 ) { <unk> ( VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_2 . METHOD_4 ( TYPE_1 . <unk> ( ) ) ) . <unk> ( TYPE_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Pred: private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; }[0m
[31mExample #4[0m
Src : protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . <unk> ( ) . <unk> ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_3 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . METHOD_5 ( ) . get ( METHOD_2 ( ) . <unk> ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_8 ( ) , null ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . <unk> ( ) . <unk> ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_3 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . METHOD_5 ( ) . get ( METHOD_2 ( ) . <unk> ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_8 ( ) ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . intValue ( ) . trim ( ) . METHOD_2 ( ) . get ( ) . METHOD_3 ( ) , METHOD_2 ( ) . toString ( ) . METHOD_4 ( ) , java.lang.Math.random ( ) . get ( METHOD_2 ( ) . get ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) , METHOD_2 ( ) . toString ( ) . METHOD_8 ( ) , null ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_5 ( VAR_2 , <unk> . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . <unk> ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( <unk> . METHOD_8 ( ) , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_5 ( VAR_2 , <unk> . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . <unk> ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( <unk> . METHOD_8 ( ) , VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; TYPE_1 . METHOD_1 ( ) ; assertEquals ( VAR_2 . getColor ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( assertEquals ( ) , VAR_4 ) ; }[0m
[31mExample #6[0m
Src : public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { synchronized ( VAR_4 ) { long VAR_5 = TYPE_2 . METHOD_2 ( ) ; try { return VAR_6 . METHOD_3 ( METHOD_4 ( this , VAR_1 ) , VAR_2 , VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( VAR_5 ) ; } } }[0m
Trg : public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { synchronized ( VAR_4 ) { long VAR_5 = TYPE_2 . METHOD_2 ( ) ; try { return VAR_6 . METHOD_3 ( METHOD_4 ( this , VAR_1 , true ) , VAR_2 , VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( VAR_5 ) ; } } }[0m
Pred: public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { synchronized ( VAR_4 ) { long VAR_5 = TYPE_2 . METHOD_2 ( ) ; try { return VAR_6 . METHOD_3 ( METHOD_4 ( this , VAR_1 ) , VAR_2 , VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( VAR_5 ) ; } } }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( 1.0F . trim ( ) ) ; TYPE_3 . METHOD_5 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ; }[0m
[31mExample #8[0m
Src : private void METHOD_1 ( TYPE_1 <unk> , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = TYPE_5 . METHOD_2 ( <unk> , VAR_2 , VAR_3 , VAR_1 ) . METHOD_3 ( ) ; TYPE_6 <unk> = new TYPE_6 ( <unk> , VAR_4 ) ; VAR_5 . METHOD_4 ( <unk> . METHOD_5 ( ) , <unk> ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 <unk> , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = TYPE_5 . METHOD_2 ( <unk> , VAR_2 , VAR_3 , VAR_1 ) . METHOD_3 ( ) ; TYPE_6 <unk> = new TYPE_6 ( <unk> , VAR_4 , 0 ) ; VAR_5 . METHOD_4 ( <unk> . METHOD_5 ( ) , <unk> ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 TYPE_2 , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 f = TYPE_5 . METHOD_2 ( VAR_2 , VAR_2 , VAR_3 , VAR_1 ) . METHOD_3 ( ) ; TYPE_6 = new TYPE_6 ( "name" , VAR_4 ) ; VAR_5 . METHOD_4 ( ) ; }[0m
[31mExample #9[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int <unk> ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } TYPE_3 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( ) ; } return null ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int <unk> ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 , <unk> , VAR_1 , STRING_1 ) ) ) { return null ; } TYPE_3 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( ) ; } return null ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int startTime ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } TYPE_3 VAR_3 = METHOD_3 ( ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( ) ; } return null ; }[0m
---------------
Class: Add statement
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) . <unk> ( new <unk> ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = <unk> . METHOD_3 ( STRING_2 ) ; if ( node != null ) { if ( TYPE_3 . equals ( <unk> ( VAR_2 ) ) ) { TYPE_3 = <unk> ( VAR_3 ) ; } VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 . METHOD_5 ( TYPE_3 ) ) ; } }[0m
Trg : protected void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) . <unk> ( new <unk> ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = <unk> . METHOD_3 ( STRING_2 ) ; if ( node != null ) { VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 . METHOD_5 ( TYPE_3 ) ) ; } }[0m
Pred: protected void METHOD_1 ( TYPE_1 f ) { VAR_1 . METHOD_2 ( ) . getInt ( new TYPE_2 ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = METHOD_3 ( STRING_2 ) ; if ( node != null ) { if ( TYPE_3 . equals ( VAR_2 ) ) { TYPE_3 = ( ( VAR_3 ) != null ) ; } VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 . METHOD_5 ( TYPE_3 ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , <unk> ) ; <unk> . METHOD_4 ( VAR_4 , VAR_5 ) ; <unk> . METHOD_5 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_6 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_7 ( VAR_5 ) ; VAR_1 . METHOD_8 ( ) ; METHOD_9 ( ) ; VAR_1 . METHOD_10 ( ) ; }[0m
Trg : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , <unk> ) ; <unk> . METHOD_4 ( VAR_4 , VAR_5 ) ; <unk> . METHOD_5 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_6 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_7 ( VAR_5 ) ; VAR_1 . METHOD_8 ( ) ; METHOD_9 ( ) ; <unk> . METHOD_10 ( ) ; VAR_1 . METHOD_10 ( ) ; }[0m
Pred: public void start ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 TYPE_2 = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , INT_2 ) ; assertEquals ( VAR_4 , VAR_5 ) ; assertEquals ( VAR_5 , VAR_5 ) ; assertEquals ( VAR_5 ) ; VAR_1 . METHOD_8 ( ) ; METHOD_9 ( ) ; VAR_1 . METHOD_10 ( ) ; }[0m
---------------
Class: Add/Remove parameter
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = METHOD_2 ( key ) ; int VAR_3 = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; java.lang.String VAR_4 = key . METHOD_4 ( 0 , VAR_3 ) ; VAR_5 = TYPE_4 . METHOD_5 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) { return null ; } return VAR_6 ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = METHOD_2 ( key ) ; int VAR_3 = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; java.lang.String VAR_4 = key . METHOD_4 ( 0 , VAR_3 ) ; VAR_5 = TYPE_4 . METHOD_5 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) { return null ; } return VAR_6 ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = METHOD_2 ( key ) ; int VAR_3 = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; java.lang.String VAR_4 = key . METHOD_4 ( 0 , VAR_3 ) ; VAR_5 = TYPE_4 . METHOD_5 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) { return null ; } return VAR_6 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( <unk> ) ; <unk> . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; }[0m
Trg : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( <unk> ) ; <unk> . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; }[0m
Pred: public void start ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 . = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( ) ; assertNotNull ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; }[0m
[31mExample #2[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . <unk> ( VAR_1 ) ; METHOD_1 ( ) . <unk> ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . <unk> ( VAR_1 ) ; METHOD_1 ( ) . <unk> ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; }[0m
Pred: public void delete ( java.lang.Object startTime , java.lang.Object startTime ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( java.lang.Math.random ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . intValue ( VAR_1 ) ; METHOD_1 ( ) . intValue ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; }[0m
---------------
Class: Broad method visibility
Golden example (False):
[31mExample #1[0m
Src : private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . <unk> > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 . <unk> <unk> : VAR_1 ) { if ( ( <unk> . METHOD_2 ( ) ) == ( VAR_4 ) ) { if ( ( ! VAR_2 ) || ( <unk> . METHOD_3 ( ) ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( <unk> ) ) ) ; } } } return VAR_3 ; }[0m
Trg : public static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . <unk> > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 . <unk> <unk> : VAR_1 ) { if ( ( <unk> . METHOD_2 ( ) ) == ( VAR_4 ) ) { if ( ( ! VAR_2 ) || ( <unk> . METHOD_3 ( ) ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( <unk> ) ) ) ; } } } return VAR_3 ; }[0m
Pred: private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . TYPE_1 > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 . rows : VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == ( VAR_4 ) ) { if ( ( ! VAR_2 ) || ( METHOD_3 ( ) ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( java.lang.Math.random ) ) ) ; } } } return VAR_3 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }[0m
Trg : protected java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( java.lang.Math.random ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }[0m
[31mExample #2[0m
Src : private static boolean METHOD_1 ( TYPE_1 node , TYPE_2 <unk> ) throws java.io.IOException { if ( ! ( TYPE_3 . METHOD_2 ( node , <unk> ) ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ! ( TYPE_3 . METHOD_1 ( VAR_1 . get ( i ) , <unk> ) ) ) { return false ; } } return true ; }[0m
Trg : public static boolean METHOD_1 ( TYPE_1 node , TYPE_2 <unk> ) throws java.io.IOException { if ( ! ( TYPE_3 . METHOD_2 ( node , <unk> ) ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ! ( TYPE_3 . METHOD_1 ( VAR_1 . get ( i ) , <unk> ) ) ) { return false ; } } return true ; }[0m
Pred: private static boolean METHOD_1 ( TYPE_1 node , TYPE_2 TYPE_2 ) throws java.io.IOException { if ( ! ( TYPE_3 . METHOD_2 ( node , ( ) ) ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ! ( TYPE_3 . METHOD_1 ( VAR_1 . get ( i ) , ) ) ) { return false ; } } return true ; }[0m
[31mExample #3[0m
Src : private boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( <unk> ( ) . METHOD_4 ( ) ) ) . <unk> ( ) ) ) ; if ( VAR_1 ) { <unk> ( VAR_3 ) ; } return ! VAR_1 ; }[0m
Trg : protected boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( <unk> ( ) . METHOD_4 ( ) ) ) . <unk> ( ) ) ) ; if ( VAR_1 ) { <unk> ( VAR_3 ) ; } return ! VAR_1 ; }[0m
Pred: private boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( java.lang.Math.random ( ) . METHOD_4 ( ) ) ) . trim ( ) ) ) ; if ( VAR_1 ) { return ( VAR_3 ) ; } return ! VAR_1 ; }[0m
[31mExample #4[0m
Src : private static boolean METHOD_1 ( java.lang.String VAR_1 , char [ ] VAR_2 ) { int length = VAR_1 . length ( ) ; if ( ( VAR_2 . length ) != length ) { return false ; } for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) ) ) { return false ; } } return true ; }[0m
Trg : public static boolean METHOD_1 ( java.lang.String VAR_1 , char [ ] VAR_2 ) { int length = VAR_1 . length ( ) ; if ( ( VAR_2 . length ) != length ) { return false ; } for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) ) ) { return false ; } } return true ; }[0m
Pred: private static boolean METHOD_1 ( java.lang.String VAR_1 , char [ ] VAR_2 ) { int length = VAR_1 . length ( ) ; if ( ( VAR_2 . length ) != length ) { return false ; } for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) ) ) { return false ; } } return true ; }[0m
---------------
Class: Change comparison operator (e.g. >) in condition
Golden example (False):
[31mExample #1[0m
Src : private static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; for ( int i = 0 ; i <= ( ( VAR_3 ) - 1 ) ; i ++ ) { VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + ( i + 1 ) ) + STRING_1 ) ) ; } return VAR_2 ; }[0m
Trg : private static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; for ( int i = 0 ; i < ( VAR_3 ) ; i ++ ) { VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + ( i + 1 ) ) + STRING_1 ) ) ; } return VAR_2 ; }[0m
Pred: private static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; for ( int i = 0 ; i <= ( ( VAR_3 ) - 1 ) ; i ++ ) { VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + ( i + 1 ) ) + STRING_1 ) ) ; } return VAR_2 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private static long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 { long VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 >= VAR_2 ) { throw new TYPE_2 ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_2 ) ) ; } long VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 + VAR_4 ) != VAR_2 ) { throw new TYPE_2 ( ( STRING_3 + STRING_4 ) ) ; } return VAR_3 ; }[0m
Trg : private static long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 { long VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 > VAR_2 ) { throw new TYPE_2 ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_2 ) ) ; } long VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 + VAR_4 ) != VAR_2 ) { throw new TYPE_2 ( ( STRING_3 + STRING_4 ) ) ; } return VAR_3 ; }[0m
Pred: private static long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 { long VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 >= VAR_2 ) { throw new TYPE_2 ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_2 ) ) ; } long VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 + VAR_4 ) != VAR_2 ) { throw new TYPE_2 ( ( STRING_3 + STRING_4 ) ) ; } return VAR_3 ; }[0m
---------------
Class: Change exception type in catch clause
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { TYPE_3 info = METHOD_2 ( x ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_3 ) ; TYPE_4 VAR_4 = METHOD_3 ( VAR_5 ) ; TYPE_4 VAR_6 = METHOD_3 ( VAR_7 ) ; METHOD_4 ( new TYPE_5 ( info , VAR_6 , VAR_4 , VAR_2 ) ) ; } catch ( java.lang.Throwable <unk> ) { throw METHOD_5 ( x , <unk> ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { TYPE_3 info = METHOD_2 ( x ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_3 ) ; TYPE_4 VAR_4 = METHOD_3 ( VAR_5 ) ; TYPE_4 VAR_6 = METHOD_3 ( VAR_7 ) ; METHOD_4 ( new TYPE_5 ( info , VAR_6 , VAR_4 , VAR_2 ) ) ; } catch ( <unk> <unk> ) { throw METHOD_5 ( x , <unk> ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { TYPE_3 info = METHOD_2 ( x ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_3 ) ; TYPE_4 VAR_4 = METHOD_3 ( VAR_5 ) ; TYPE_4 VAR_6 = METHOD_3 ( VAR_7 ) ; METHOD_4 ( new TYPE_5 ( info , VAR_6 , VAR_4 , VAR_2 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { assert METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( VAR_3 . type ) ; METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) ; } catch ( java.lang.Throwable <unk> ) { throw METHOD_7 ( x , <unk> ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { assert METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( VAR_3 . type ) ; METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) ; } catch ( <unk> <unk> ) { throw METHOD_7 ( x , <unk> ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { assert METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( VAR_3 . type ) ; METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) ; } }[0m
---------------
Class: Change parameter type
Golden example (False):
[31mExample #1[0m
Src : static boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
Trg : static boolean METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
Pred: static boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 . append ( new TYPE_3 . <unk> ( VAR_7 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false ) ; }[0m
Trg : static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 . append ( new TYPE_3 . <unk> ( VAR_7 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false ) ; }[0m
Pred: static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 . append ( new TYPE_3 ( VAR_2 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false ) ; }[0m
[31mExample #2[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int [ ] <unk> , int VAR_5 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , <unk> , VAR_5 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int [ ] <unk> , int VAR_5 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , <unk> , VAR_5 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int startTime , int INT_7 , int [ ] INT_7 , int VAR_5 ) { METHOD_2 ( ) ; METHOD_3 ( var , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , INT_7 , INT_7 , INT_4 , VAR_5 ) ; }[0m
[31mExample #3[0m
Src : static boolean METHOD_1 ( int VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 <unk> = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( <unk> == null ) { return false ; } <unk> . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return true ; }[0m
Trg : static boolean METHOD_1 ( long VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 <unk> = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( <unk> == null ) { return false ; } <unk> . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return true ; }[0m
Pred: static boolean METHOD_1 ( int VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return true ; }[0m
[31mExample #4[0m
Src : public final TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 ) throws java.io.IOException { synchronized ( this ) { if ( ! ( VAR_4 ) ) { throw new <unk> ( STRING_1 ) ; } int VAR_5 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_5 != 0 ) { TYPE_2 <unk> = new TYPE_2 ( VAR_5 ) ; METHOD_3 ( <unk> . METHOD_4 ( ) ) ; return <unk> ; } } throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; }[0m
Trg : public final TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 ) throws java.io.IOException { synchronized ( this ) { if ( ! ( VAR_4 ) ) { throw new <unk> ( STRING_1 ) ; } long VAR_5 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_5 != 0 ) { TYPE_2 <unk> = new TYPE_2 ( VAR_5 ) ; METHOD_3 ( <unk> . METHOD_4 ( ) ) ; return <unk> ; } } throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; }[0m
Pred: public final TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 ) throws java.io.IOException { synchronized ( this ) { if ( ! ( VAR_4 ) ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } int VAR_5 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_5 != 0 ) { TYPE_2 TYPE_2 = new TYPE_2 ( VAR_5 ) ; METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; return ; } } throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; }[0m
[31mExample #5[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } }[0m
Trg : public TYPE_1 METHOD_1 ( java.util.Map VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } }[0m
[31mExample #6[0m
Src : private <unk> METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 != null ) { for ( TYPE_2 <unk> : VAR_2 ) { if ( METHOD_4 ( <unk> . METHOD_5 ( ) ) ) { return <unk> . METHOD_5 ( ) ; } } } return VAR_4 ; }[0m
Trg : private <unk> METHOD_1 ( <unk> VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 != null ) { for ( TYPE_2 <unk> : VAR_2 ) { if ( METHOD_4 ( <unk> . METHOD_5 ( ) ) ) { return <unk> . METHOD_5 ( ) ; } } } return VAR_4 ; }[0m
Pred: private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 != null ) { for ( TYPE_2 TYPE_2 : VAR_2 ) { if ( METHOD_4 ( ) . METHOD_5 ( ) ) { return ; } } } return VAR_4 ; }[0m
[31mExample #7[0m
Src : static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; }[0m
Trg : static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; }[0m
Pred: static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; }[0m
[31mExample #8[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int VAR_5 , int [ ] <unk> , int VAR_6 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , VAR_5 , <unk> , VAR_6 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int VAR_5 , byte [ ] <unk> , int VAR_6 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , VAR_5 , <unk> , VAR_6 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int startTime , int startTime , int VAR_5 , int [ ] INT_7 , int VAR_6 ) { METHOD_2 ( ) ; METHOD_3 ( var , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , INT_7 , , , , , VAR_5 , INT_7 , VAR_6 ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( int <unk> , int VAR_1 , int c , TYPE_1 VAR_2 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { byte [ ] VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) ) ; super . METHOD_1 ( <unk> , VAR_1 , c , VAR_2 , <unk> , <unk> ) ; }[0m
Trg : public void METHOD_1 ( long <unk> , long VAR_1 , long c , TYPE_1 VAR_2 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { byte [ ] VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) ) ; super . METHOD_1 ( <unk> , VAR_1 , c , VAR_2 , <unk> , <unk> ) ; }[0m
Pred: public void METHOD_1 ( int startTime , int VAR_1 , int c , TYPE_1 VAR_2 , TYPE_2 startTime , TYPE_3 VAR_2 ) throws java.lang.Exception { byte [ ] VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) ) ; super . METHOD_1 ( ) ; }[0m
[31mExample #10[0m
Src : static int METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return 0 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }[0m
Trg : static long METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return 0 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }[0m
Pred: static int METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return 0 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }[0m
---------------
Class: Change parameter value of invoked method
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( TYPE_1 . <unk> <unk> , int VAR_1 ) { METHOD_2 ( <unk> . METHOD_3 ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ <unk> ] . toString ( ) , <unk> . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( <unk> , VAR_1 ) ; }[0m
Trg : protected void METHOD_1 ( TYPE_1 . <unk> <unk> , int VAR_1 ) { METHOD_2 ( <unk> . METHOD_3 ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ 1 ] . toString ( ) , <unk> . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( <unk> , VAR_1 ) ; }[0m
Pred: protected void METHOD_1 ( TYPE_1 . start , int VAR_1 ) { METHOD_2 ( java.lang.Math.random ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ VAR_2 ] . toString ( ) , 0L . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , false , true ) ; } return VAR_1 ; }[0m
Trg : private java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( java.lang.Math.random ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , false , true ) ; } return VAR_1 ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new <unk> ( ) , true ) ; <unk> ( VAR_1 . METHOD_3 ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ) . <unk> ( false ) ; TYPE_2 . METHOD_5 ( <unk> . <unk> ( ) ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_3 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new <unk> ( ) , true ) ; <unk> ( VAR_1 . METHOD_3 ( TYPE_1 . <unk> ( ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ) . <unk> ( false ) ; TYPE_2 . METHOD_5 ( <unk> . <unk> ( ) ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_3 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new TYPE_1 ( ) , true ) ; assertTrue ( VAR_1 . METHOD_3 ( TYPE_1 . VAR_2 . class class ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { VAR_1 = <unk> . METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; <unk> ( VAR_3 ) . <unk> ( VAR_1 ) . METHOD_3 ( ) ; <unk> ( VAR_4 ) . <unk> ( VAR_1 ) . METHOD_4 ( ) ; <unk> ( VAR_5 ) . <unk> ( VAR_1 ) . METHOD_5 ( ) ; <unk> . METHOD_6 ( ) . <unk> ( VAR_1 ) . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; VAR_6 . METHOD_9 ( VAR_7 class , VAR_8 ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 = <unk> . METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; <unk> ( VAR_3 ) . <unk> ( VAR_1 ) . METHOD_3 ( ) ; <unk> ( VAR_4 ) . <unk> ( VAR_1 ) . METHOD_4 ( ) ; <unk> ( VAR_5 ) . <unk> ( VAR_1 ) . METHOD_5 ( ) ; <unk> . METHOD_6 ( ) . <unk> ( VAR_1 ) . METHOD_7 ( TYPE_2 . <unk> ( ) ) ; VAR_6 . METHOD_9 ( VAR_7 class , VAR_8 ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = 0L . METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; java.lang.Math.random ( VAR_3 ) . get ( VAR_1 ) . METHOD_3 ( ) ; assertEquals ( VAR_1 ) . METHOD_4 ( ) ; assertTrue ( VAR_5 ) . get ( VAR_1 ) . METHOD_5 ( ) ; assertEquals ( ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { java.util.ArrayList < <unk> > list = VAR_2 . <unk> < <unk> > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_3 , new TYPE_2 ( VAR_1 ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { java.util.ArrayList < <unk> > list = VAR_2 . <unk> < <unk> > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_3 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 var , java.util.Date VAR_1 ) { java.util.Iterator = new java.lang.StringBuilder ( ) ; public java.lang.Object step ( java.lang.Object source , java.util.Date ) { if ( source != null ) { java.util.ArrayList < TYPE_1 > list = VAR_2 . delete < java.lang.Long > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < TYPE_1 > ( ) ; } }[0m
[31mExample #5[0m
Src : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , <unk> , false ) ; TYPE_3 <unk> = t . METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_2 = t . METHOD_3 ( ( ( float ) ( FLOAT_1 / ( VAR_3 ) ) ) ) ; <unk> = t . METHOD_4 ( <unk> , VAR_2 ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , <unk> , false ) ; TYPE_3 <unk> = t . METHOD_3 ( args . <unk> ) ; TYPE_3 VAR_2 = t . METHOD_3 ( ( ( float ) ( FLOAT_1 / ( VAR_3 ) ) ) ) ; <unk> = t . METHOD_4 ( <unk> , VAR_2 ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( INT_4 , 1.0F , false ) ; TYPE_3 . = t . METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_2 = t . METHOD_3 ( ( ( float ) ( FLOAT_1 / ( VAR_3 ) ) ) ) ; startTime = t . METHOD_4 ( VAR_2 , VAR_2 ) ; }[0m
[31mExample #6[0m
Src : private void METHOD_1 ( TYPE_1 . <unk> VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , null , VAR_2 ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , <unk> . METHOD_4 ( ) ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 . <unk> VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , <unk> , VAR_2 ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , <unk> . METHOD_4 ( ) ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 . TYPE_1 VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , null , VAR_2 ) ; assertTrue ( java.lang.Math.random ( ) ) . intValue ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , f . METHOD_4 ( ) ) ; }[0m
[31mExample #7[0m
Src : protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( ( ( VAR_2 . length ) * <unk> ) , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } }[0m
Trg : protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( VAR_2 . length , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } }[0m
Pred: protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( ( ( VAR_2 . length ) * java.lang.Math.random ) , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } }[0m
---------------
Class: Change parameters order in method invocation
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( VAR_2 , result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = java.lang.Math.random ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) , VAR_2 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , java.lang.String value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , java.lang.String value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_1 , VAR_2 ) ; }[0m
Pred: static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 TYPE_2 , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( delete == null ) { TYPE_2 . METHOD_2 ( value ) ; } else { main . METHOD_2 ( ) ; } } catch ( TYPE_3 VAR_2 ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
[31mExample #2[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final long VAR_3 = ( <unk> == null ) ? ( ( long ) ( <unk> . METHOD_2 ( ) ) ) : ( ( long ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final long VAR_3 = ( <unk> == null ) ? ( ( long ) ( <unk> . METHOD_2 ( ) ) ) : ( ( long ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_1 , VAR_2 ) ; }[0m
Pred: static void METHOD_1 ( TYPE_1 f , TYPE_2 TYPE_2 , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final long VAR_3 = ( 1L == null ) ? ( ( long ) ( java.lang.Math.random ( ) ) ) : ( ( long ) ( java.lang.Math.random ( ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( false ) ; java.util.List < java.lang.String > VAR_2 = new TYPE_1 < > ( ) ; boolean result = <unk> . METHOD_2 ( new <unk> ( ) , VAR_2 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_2 . size ( ) , 1 ) ; TYPE_2 . assertEquals ( VAR_2 . get ( 0 ) , STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( false ) ; java.util.List < java.lang.String > VAR_2 = new TYPE_1 < > ( ) ; boolean result = <unk> . METHOD_2 ( new <unk> ( ) , VAR_2 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( 1 , VAR_2 . size ( ) ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_2 . get ( 0 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_2 . size ( ) , 1 ) ; assertEquals ( VAR_2 . get ( 0 ) , STRING_1 ) ; }[0m
[31mExample #4[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_1 , VAR_2 ) ; }[0m
Pred: static void METHOD_1 ( TYPE_1 startTime , TYPE_2 type , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( delete == null ) { TYPE_2 . METHOD_2 ( value ) ; } else { METHOD_2 ( ) ; } } catch ( TYPE_3 VAR_2 ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
---------------
Class: Change qualified name in response to a move class refactoring
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_8 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_8 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_8 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public java.lang.String toString ( ) { TYPE_1 <unk> = new TYPE_1 ( ( ( ( size ) * <unk> ) + <unk> ) ) ; <unk> ( CHAR_1 ) ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( i != 0 ) { <unk> ( STRING_1 ) ; } <unk> ( values [ i ] ) ; } <unk> ( CHAR_2 ) ; return <unk> . toString ( ) ; }[0m
Trg : public java.lang.String toString ( ) { java.lang.StringBuilder <unk> = new java.lang.StringBuilder ( ( ( ( size ) * <unk> ) + <unk> ) ) ; <unk> ( CHAR_1 ) ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( i != 0 ) { <unk> ( STRING_1 ) ; } <unk> ( values [ i ] ) ; } <unk> ( CHAR_2 ) ; return <unk> . toString ( ) ; }[0m
Pred: public java.lang.String toString ( ) { TYPE_1 . = new TYPE_1 ( ( ( ( size ) * ( ) + 1 ) + java.lang.Math.random ) ) ; return ( CHAR_1 ) ; }[0m
---------------
Class: Change type of a variable
Golden example (False):
[31mExample #1[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> . <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> . <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_2 , new TYPE_1 ( VAR_1 ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> . <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> . <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_2 , new TYPE_1 ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 f , java.util.Date VAR_1 ) { java.lang.StringBuffer = new TYPE_2 ( ) ; public java.lang.Object step ( java.lang.Object source , INT_7 ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 . delete ( ) ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( TYPE_1 . <unk> ( ) , TYPE_2 . METHOD_3 ( ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( VAR_2 class ) ) ) ; <unk> ( VAR_3 . METHOD_6 ( ) ) . <unk> ( VAR_1 ) ; <unk> = new TYPE_4 ( VAR_3 , <unk> , VAR_4 ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) , TYPE_6 . METHOD_9 ( VAR_5 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( TYPE_2 . <unk> ( ) , TYPE_2 . METHOD_3 ( ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( VAR_2 class ) ) ) ; <unk> ( VAR_3 . METHOD_6 ( ) ) . <unk> ( VAR_1 ) ; <unk> = new TYPE_4 ( VAR_3 , <unk> , VAR_4 ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) , TYPE_6 . METHOD_9 ( VAR_5 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { assertTrue ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_2 . METHOD_3 ( ) ) ) . ( ( TYPE_3 . METHOD_4 ( 1.0F . METHOD_5 ( VAR_2 class ) ) ) ) ; assertEquals ( VAR_3 ) ; }[0m
[31mExample #2[0m
Src : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> . <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> . <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Trg : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Pred: protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( TYPE_2 id : VAR_1 ) { java.util.List < TYPE_2 . delete ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( TYPE_1 . VAR_2 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
[31mExample #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 <unk> ) { METHOD_2 ( <unk> , VAR_1 ) ; <unk> . <unk> <unk> = METHOD_3 ( <unk> ) ; if ( <unk> != null ) { <unk> . METHOD_4 ( ) . METHOD_5 ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_4 ( ) . <unk> ( null ) ; } return METHOD_7 ( <unk> , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 <unk> ) { METHOD_2 ( <unk> , VAR_1 ) ; <unk> . <unk> <unk> = METHOD_3 ( <unk> ) ; if ( <unk> != null ) { <unk> . METHOD_4 ( ) . METHOD_5 ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_4 ( ) . <unk> ( null ) ; } return METHOD_7 ( <unk> , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_2 ) { METHOD_2 ( INT_4 , VAR_1 ) ; assertEquals ( VAR_2 , VAR_1 ) ; assertEquals ( ) ; if ( delete != null ) { TYPE_2 . METHOD_4 ( ) . METHOD_5 ( f . METHOD_6 ( ) ) ; assertEquals ( ) ; } return METHOD_7 ( VAR_2 , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
[31mExample #4[0m
Src : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> . <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> . <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Trg : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> . <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> . <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Pred: protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( TYPE_2 id : VAR_1 ) { java.util.List < TYPE_2 . delete ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( TYPE_1 . VAR_2 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . <unk> ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; <unk> ( VAR_4 . get ( VAR_2 ) ) . <unk> ( VAR_1 ) ; <unk> ( VAR_4 ) . <unk> ( VAR_5 ) . METHOD_3 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_1 . <unk> ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; <unk> ( VAR_4 . get ( VAR_2 ) ) . <unk> ( VAR_1 ) ; <unk> ( VAR_4 ) . <unk> ( VAR_5 ) . METHOD_3 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . ( ( VAR_2 ) ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; ( ( VAR_4 . get ( VAR_2 ) ) . get ( VAR_1 ) ) . trim ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { <unk> . <unk> VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < <unk> . <unk> > VAR_3 = METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < <unk> > VAR_3 = METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_3 . METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; }[0m
---------------
Class: Class becomes static. Delete object instance to invoke its methods
Golden example (False):
[31mExample #1[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( <unk> ) ( source ) ) : null ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( <unk> ) ( source ) ) : null ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 f , java.util.Date VAR_1 ) { java.lang.StringBuffer = new TYPE_2 ( ) ; public java.lang.Object step ( java.lang.Object source , INT_7 ) { return source != null ? ( ( java.lang.Math.random ) ( source ) ) : null ; } } ; assertEquals ( ) . delete ( VAR_2 , new TYPE_1 ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_2 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( VAR_1 , <unk> . METHOD_5 ( ) , VAR_2 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Trg : public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_2 ) ; return ; } try { TYPE_2 . METHOD_4 ( ) . METHOD_1 ( VAR_1 , <unk> . METHOD_5 ( ) , VAR_2 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Pred: public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_2 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( VAR_1 , TYPE_2 . METHOD_5 ( ) , VAR_2 ) ; } }[0m
[31mExample #2[0m
Src : public static void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . <unk> ) ; VAR_1 . METHOD_2 ( INT_1 ) ; <unk> ( ) . <unk> ( VAR_3 , VAR_1 , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . <unk> ) ; VAR_1 . METHOD_2 ( INT_1 ) ; <unk> ( ) . <unk> ( VAR_3 , VAR_1 , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Math.random ( ) ) { java.lang.StringBuffer = new TYPE_1 ( ) ; public java.lang.Object step ( java.lang.Object source , java.lang.Math.random ( ) ) { return source ; } }[0m
[31mExample #3[0m
Src : public static java.lang.String METHOD_1 ( TYPE_1 . <unk> <unk> ) throws TYPE_2 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , <unk> . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( <unk> . METHOD_3 ( ) ) != null ? <unk> . METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; }[0m
Trg : public java.lang.String METHOD_1 ( TYPE_1 . <unk> <unk> ) throws TYPE_2 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , <unk> . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( <unk> . METHOD_3 ( ) ) != null ? <unk> . METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; }[0m
Pred: public static java.lang.String METHOD_1 ( TYPE_1 . ) throws TYPE_2 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , VAR_2 . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( METHOD_3 ( ) ) != null ? 1.0F . METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_2 , new TYPE_3 ( VAR_1 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_2 , new TYPE_3 ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 f , TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( <unk> . METHOD_5 ( ) , VAR_1 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; return ; } try { TYPE_2 . METHOD_4 ( ) . METHOD_1 ( <unk> . METHOD_5 ( ) , VAR_1 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( TYPE_2 . METHOD_5 ( ) , VAR_1 ) ; } }[0m
---------------
Class: Class is not static anymore. Add object instance to invoke its methods
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( <unk> id ) { TYPE_1 . METHOD_2 ( new <unk> ( <unk> ( ) , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ) . METHOD_3 ( ) . <unk> ( ( ( java.lang.Boolean ) ( <unk> ) ) ) ; } } ) , id ) ; }[0m
Trg : protected void METHOD_1 ( <unk> id ) { TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( <unk> ( ) , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ) . METHOD_3 ( ) . <unk> ( ( ( java.lang.Boolean ) ( <unk> ) ) ) ; } } ) , id ) ; }[0m
Pred: protected void METHOD_1 ( java.lang.Long id ) { TYPE_1 . METHOD_2 ( new java.util.HashMap ( java.lang.Math.random ( ) , new java.util.HashMap ( ) ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_2 ( id ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_2 ( id ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 var , long id ) { java.lang.StringBuffer = new java.util.Date ( ) ; public java.lang.Object step ( java.lang.Object source , java.util.Date ) ; return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; }[0m
[31mExample #2[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> <unk> , boolean VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> params = new <unk> ( <unk> ) ; params . METHOD_2 ( VAR_1 ) ; <unk> . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> <unk> , boolean VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> params = new <unk> ( <unk> ) ; params . METHOD_2 ( VAR_1 ) ; <unk> ( ) . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Long startTime , double step , boolean VAR_1 ) { java.lang.StringBuffer = new TYPE_1 ( ) ; public java.lang.Object step ( java.lang.Object source , java.util.Date ) ; if ( source != null ) { return source ; } return new java.util.ArrayList < TYPE_1 > ( ) ; } }[0m
[31mExample #3[0m
Src : public static void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; <unk> ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; <unk> ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , METHOD_3 ( ) ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Math.random ( ) ) { java.lang.StringBuffer = new TYPE_1 ( ) ; public java.lang.Object step ( java.lang.Object source , ) ; return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; }[0m
[31mExample #4[0m
Src : private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , <unk> . METHOD_4 ( ) ) ) ; } else { METHOD_3 ( ) ; } }[0m
Trg : private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , <unk> . METHOD_4 ( ) ) ) ; } else { METHOD_3 ( ) ; } }[0m
Pred: private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( new java.io.FileWriter ( this , new TYPE_2 ( ) ) public void ( ( java.lang.Object target , java.lang.Object ) ) { VAR_1 = ( ( java.lang.Integer ) ( java.lang.Math.random ) ) ; METHOD_3 ( ) ; } } , ) . METHOD_3 ( ) ; }[0m
[31mExample #5[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 f , java.util.Date VAR_1 ) { java.lang.StringBuffer = new TYPE_2 ( ) ; public java.lang.Object step ( java.lang.Object source , TYPE_1 ) ; return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; }[0m
[31mExample #6[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> . <unk> ( VAR_1 , new <unk> ( id ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_1 , new <unk> ( id ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 var , long id ) { java.lang.StringBuffer = new java.util.Date ( ) ; public java.lang.Object step ( java.lang.Object source , java.util.Date ) ; if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return source ; } }[0m
[31mExample #7[0m
Src : private void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ) ; } } ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ) ; } } ; TYPE_2 . <unk> ( ) . METHOD_4 ( VAR_1 ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new ( ( java.util.List < TYPE_1 > ) ( java.lang.Math.random ) ) ; }[0m
[31mExample #8[0m
Src : public static void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return STRING_1 ; } } ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; <unk> . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return STRING_1 ; } } ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; <unk> ( ) . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 f , TYPE_1 VAR_1 ) { java.util.Iterator = new java.lang.Object ( ) ; public java.lang.Object step ( java.lang.Object source , INT_7 ) { if ( source != null ) { return source ; } return STRING_1 ; } }[0m
[31mExample #9[0m
Src : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } TYPE_1 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ( ( java.util.List < TYPE_2 > ) ( <unk> ) ) ) ; METHOD_3 ( ) ; } } ) , <unk> ( ) . getId ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ( ( java.util.List < TYPE_2 > ) ( <unk> ) ) ) ; METHOD_3 ( ) ; } } ) , <unk> ( ) . getId ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { if ( ( ( ( ) ) == null ) || ( ( java.lang.Math.random ( ) ) == null ) ) { return ; } TYPE_1 . METHOD_2 ( new java.io.FileWriter ( this , new TYPE_2 ( ) ) public void ( ( ( java.util.List < TYPE_2 > ) ( java.lang.Math.random ) ) ) ) METHOD_3 ( ) ; }[0m
[31mExample #10[0m
Src : private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( <unk> ) ) ) ; } } ) ) ; }[0m
Trg : private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( <unk> ) ) ) ; } } ) ) ; }[0m
Pred: private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new TYPE_2 ( this , new TYPE_2 ( ) ) public void ( ( java.lang.Object target , java.lang.Object ) ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( java.lang.Math.random ) ) ) ; } } ) ) ; }[0m
[31mExample #11[0m
Src : public static void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { VAR_3 = ( ( java.util.Map < TYPE_1 < java.lang.Integer , <unk> . <unk> > , java.lang.Boolean > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ; } } ; <unk> . <unk> ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; }[0m
Trg : public static void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { VAR_3 = ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ; } } ; <unk> ( ) . <unk> ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; }[0m
Pred: public static void METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; public void delete ( java.lang.Object startTime , java.lang.Object ) { VAR_3 = ( ( java.util.Map < TYPE_1 < java.lang.Integer , java.lang.Math.random ( "name" ) ) ) ; } }[0m
[31mExample #12[0m
Src : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ; <unk> . <unk> ( VAR_1 , new TYPE_1 ( name ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_1 ( name ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 f , java.lang.String name ) { java.lang.StringBuffer = new java.util.Date ( ) ; public java.lang.Object step ( java.lang.Object source , TYPE_1 ) ; return source != null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; }[0m
[31mExample #13[0m
Src : private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ) ; }[0m
Trg : private void METHOD_1 ( ) { TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new java.io.FileWriter ( this , new TYPE_2 ( ) ) { public void delete ( java.lang.Object target , java.lang.Object ) { VAR_1 = ( ( java.util.ArrayList < TYPE_2 > ) ( java.lang.Math.random ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ; }[0m
[31mExample #14[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 , boolean VAR_2 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> VAR_1 , boolean VAR_2 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 var , double VAR_1 , boolean VAR_2 ) { java.lang.StringBuffer = new TYPE_1 ( ) ; public java.lang.Object step ( java.lang.Object source , java.util.Date ) ; if ( source != null ) { return source ; } return new java.util.ArrayList < TYPE_1 > ( ) ; } }[0m
[31mExample #15[0m
Src : public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( <unk> . <unk> VAR_3 : VAR_4 < TYPE_1 < <unk> . <unk> > > getValue ( VAR_5 ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( <unk> . <unk> VAR_3 : VAR_4 < TYPE_1 < <unk> . <unk> > > getValue ( VAR_5 ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
Pred: public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_1 . : VAR_3 : VAR_4 < TYPE_1 < java.lang.Long ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
[31mExample #16[0m
Src : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> . <unk> ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 . <unk> ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 . <unk> ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 f , java.lang.String name ) { java.lang.StringBuffer = new java.util.Date ( ) ; public java.lang.Object step ( java.lang.Object source , java.util.Date ) ; if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return source ; } }[0m
---------------
Class: Merge variable definition & initialization
Golden example (False):
[31mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { TYPE_1 <unk> = METHOD_2 ( obj . getId ( ) ) . <unk> ( STRING_1 , obj . getName ( ) ) . <unk> ( STRING_2 , obj . METHOD_3 ( ) ) . <unk> ( STRING_3 , obj . METHOD_4 ( ) ) ; return <unk> ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { return METHOD_2 ( obj . getId ( ) ) . <unk> ( STRING_1 , obj . getName ( ) ) . <unk> ( STRING_2 , obj . METHOD_3 ( ) ) . <unk> ( STRING_3 , obj . METHOD_4 ( ) ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { TYPE_1 . METHOD_2 ( obj . getId ( ) ) . append ( STRING_1 , obj . getName ( ) ) . append ( STRING_2 , obj . METHOD_3 ( ) ) . append ( STRING_3 , obj . METHOD_4 ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public boolean METHOD_1 ( TYPE_1 VAR_1 , long time , TYPE_2 VAR_2 ) throws TYPE_3 { if ( ( VAR_3 ) != ( this ) ) { throw new TYPE_4 ( ) ; } final TYPE_5 VAR_4 = this . VAR_4 ; if ( ! ( VAR_4 . METHOD_2 ( time , VAR_2 ) ) ) { return false ; } boolean VAR_5 = false ; try { VAR_5 = VAR_1 . METHOD_3 ( ) ; } finally { if ( ! VAR_5 ) { VAR_4 . METHOD_4 ( ) ; } } return VAR_5 ; }[0m
Trg : public boolean METHOD_1 ( TYPE_1 VAR_1 , long time , TYPE_2 VAR_2 ) throws TYPE_3 { if ( ( VAR_3 ) != ( this ) ) { throw new TYPE_4 ( ) ; } final TYPE_5 VAR_4 = this . VAR_4 ; if ( ! ( VAR_4 . METHOD_2 ( time , VAR_2 ) ) ) { return false ; } boolean VAR_5 = false ; try { return VAR_5 = VAR_1 . METHOD_3 ( ) ; } finally { if ( ! VAR_5 ) { VAR_4 . METHOD_4 ( ) ; } } }[0m
Pred: public boolean METHOD_1 ( TYPE_1 VAR_1 , long time , TYPE_2 VAR_2 ) throws TYPE_3 { if ( ( VAR_3 ) != ( this ) ) { throw new TYPE_4 ( ) ; } final TYPE_5 VAR_4 = this . VAR_4 ; if ( ! ( VAR_4 . METHOD_2 ( time , VAR_2 ) ) ) { return false ; } boolean VAR_5 = false ; try { VAR_5 = VAR_1 . METHOD_3 ( ) ; } finally { if ( ! VAR_5 ) { VAR_4 . METHOD_4 ( ) ; } } return VAR_5 ; }[0m
---------------
Class: Move existing statements out of try block
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_3 ] ; VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; METHOD_5 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_3 ] ; try { VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; METHOD_5 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_3 ] ; VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; METHOD_5 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static void METHOD_1 ( int id , int <unk> , final boolean VAR_1 ) { try { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 ) { TYPE_1 . METHOD_3 ( id ) ; } TYPE_1 . METHOD_4 ( id , VAR_3 , <unk> ) ; } catch ( java.lang.Throwable <unk> ) { throw TYPE_2 . METHOD_5 ( <unk> ) ; } finally { VAR_2 . METHOD_6 ( ) ; } }[0m
Trg : public static void METHOD_1 ( int id , int <unk> , final boolean VAR_1 ) { VAR_2 . METHOD_2 ( ) ; try { if ( VAR_1 ) { TYPE_1 . METHOD_3 ( id ) ; } TYPE_1 . METHOD_4 ( id , VAR_3 , <unk> ) ; } catch ( java.lang.Throwable <unk> ) { throw TYPE_2 . METHOD_5 ( <unk> ) ; } finally { VAR_2 . METHOD_6 ( ) ; } }[0m
Pred: public static void METHOD_1 ( int id , int VAR_2 , final boolean VAR_1 ) { try { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 ) { TYPE_1 . METHOD_3 ( id ) ; } TYPE_1 . METHOD_4 ( id , VAR_3 , ; } ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; java.lang.Integer [ ] VAR_3 = new java.lang.Integer [ VAR_2 ] ; for ( int i = 0 ; i < ( ( VAR_2 ) - 1 ) ; ++ i ) VAR_3 [ i ] = new java.lang.Integer ( i ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; java.lang.Integer [ ] VAR_3 = new java.lang.Integer [ VAR_2 ] ; for ( int i = 0 ; i < ( ( VAR_2 ) - 1 ) ; ++ i ) VAR_3 [ i ] = new java.lang.Integer ( i ) ; try { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; java.lang.Integer [ ] VAR_3 = new java.lang.Integer [ VAR_2 ] ; for ( int i = 0 ; i < ( ( VAR_2 ) - 1 ) ; ++ i ) VAR_3 [ i ] = new java.lang.Integer ( i ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
---------------
Class: Remove invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = <unk> . get ( new <unk> ( STRING_1 ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; <unk> = new <unk> ( STRING_2 ) ; VAR_4 = new <unk> ( STRING_3 ) ; <unk> = new <unk> ( STRING_4 ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_5 ( STRING_5 ) ; VAR_5 . METHOD_6 ( new <unk> . <unk> ( STRING_6 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = VAR_1 . METHOD_3 ( ) ; VAR_2 = <unk> . get ( new <unk> ( STRING_1 ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; <unk> = new <unk> ( STRING_2 ) ; VAR_4 = new <unk> ( STRING_3 ) ; <unk> = new <unk> ( STRING_4 ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_5 ( STRING_5 ) ; VAR_5 . METHOD_6 ( new <unk> . <unk> ( STRING_6 ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; java.util.Date = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = 1.0F . get ( new TYPE_2 ( STRING_1 ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; assertEquals ( STRING_3 , STRING_2 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_3 ( TYPE_4 . <unk> ( ) . METHOD_4 ( ) . getValue ( ) , TYPE_4 . <unk> ( ) . METHOD_5 ( ) ) ) ; METHOD_6 ( VAR_1 . <unk> ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_3 ( TYPE_4 . <unk> ( ) . METHOD_4 ( ) , TYPE_4 . <unk> ( ) . METHOD_5 ( ) ) ) ; METHOD_6 ( VAR_1 . <unk> ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_3 ( TYPE_4 . assertEquals ( ) . METHOD_4 ( ) . getValue ( ) , TYPE_4 . getName ( ) ) ) ; METHOD_6 ( VAR_1 . getId ( ) ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : 1 ; } } ; METHOD_4 ( new TYPE_1 ( VAR_1 , METHOD_5 ( ) ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : 1 ; } } ; METHOD_4 ( new TYPE_1 ( VAR_1 , METHOD_5 ( ) ) , <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Math.random ( ) ) { TYPE_2 = new java.util.Date ( ) ; public java.lang.Object METHOD_2 ( java.lang.Object source , INT_7 ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : 1 ; } }[0m
---------------
Class: Remove parameter from the method invocation
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( <unk> ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { METHOD_4 ( result . <unk> ( ) ) ; } } ; <unk> ( ) . METHOD_5 ( null ) ; <unk> ( ) . METHOD_6 ( VAR_3 , parameters , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( <unk> ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { METHOD_4 ( result . <unk> ( ) ) ; } } ; <unk> ( ) . METHOD_5 ( ) ; <unk> ( ) . METHOD_6 ( VAR_3 , parameters , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( java.lang.Math.random ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { METHOD_4 ( result . delete ( ) ) ; } } ; delete ( ) . METHOD_6 ( VAR_3 , parameters , VAR_2 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static TYPE_1 <unk> ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 <unk> ) { TYPE_3 VAR_2 = <unk> . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_3 ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; } TYPE_4 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( VAR_3 == null ) { VAR_3 = new TYPE_4 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( type . value ( ) ) ; return <unk> ; }[0m
Trg : public static TYPE_1 <unk> ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 <unk> ) { TYPE_3 VAR_2 = <unk> . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_3 ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; } TYPE_4 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( VAR_3 == null ) { VAR_3 = new TYPE_4 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( type ) ; return <unk> ; }[0m
Pred: public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 VAR_2 ) { TYPE_3 VAR_2 = VAR_2 . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( type . value ( ) ) ; return f ; }[0m
[31mExample #2[0m
Src : protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( response , VAR_3 , VAR_2 ) ; } }[0m
Trg : protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( VAR_1 , response , VAR_3 , VAR_2 ) ; } }[0m
Pred: protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( response , VAR_3 , VAR_2 ) ; } }[0m
[31mExample #3[0m
Src : public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , METHOD_4 ( ) . <unk> ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( METHOD_4 ( ) . getId ( ) , METHOD_4 ( ) . <unk> ( ) ) ; METHOD_2 ( ) . METHOD_8 ( ) ; return null ; }[0m
Trg : public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( METHOD_4 ( ) . getId ( ) , METHOD_4 ( ) . <unk> ( ) ) ; METHOD_2 ( ) . METHOD_8 ( ) ; return null ; }[0m
Pred: public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , METHOD_4 ( ) . trim ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( METHOD_4 ( ) . getId ( ) , METHOD_4 ( ) . trim ( ) ) ; METHOD_2 ( ) . METHOD_8 ( ) ; return null ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , false , STRING_1 , VAR_1 , false ) ) ; METHOD_5 ( false ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_2 response = VAR_3 . add ( METHOD_7 ( ) ) ; assertEquals ( INT_1 , response . <unk> ( ) ) ; METHOD_8 ( ( ( response . <unk> ( ) ) instanceof TYPE_3 ) ) ; METHOD_9 ( ( ( TYPE_3 ) ( response . <unk> ( ) ) ) , 1 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , false , STRING_1 , VAR_1 ) ) ; METHOD_5 ( false ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_2 response = VAR_3 . add ( METHOD_7 ( ) ) ; assertEquals ( INT_1 , response . <unk> ( ) ) ; METHOD_8 ( ( ( response . <unk> ( ) ) instanceof TYPE_3 ) ) ; METHOD_9 ( ( ( TYPE_3 ) ( response . <unk> ( ) ) ) , 1 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , false , STRING_1 , VAR_1 , false ) ) ; METHOD_5 ( false ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_2 response = VAR_3 . add ( METHOD_7 ( ) ) ; assertEquals ( INT_1 , response . ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) , null ) ) ; METHOD_5 ( <unk> , VAR_3 ) ; TYPE_4 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) , null ) ) ; METHOD_5 ( VAR_3 ) ; TYPE_4 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) , null ) ) ; METHOD_5 ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; <unk> VAR_4 = new <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; <unk> ( VAR_6 . get ( TYPE_1 . <unk> ( VAR_7 . <unk> class ) ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_5 ( <unk> . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; <unk> VAR_4 = new <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; <unk> ( VAR_6 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_5 ( <unk> . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; return VAR_4 ; }[0m
[31mExample #7[0m
Src : private void METHOD_1 ( boolean VAR_1 ) { <unk> <unk> = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_1 ) ; <unk> ( VAR_4 . METHOD_3 ( TYPE_2 . <unk> ( VAR_5 . <unk> class ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> ) ) ; <unk> ( VAR_6 . METHOD_5 ( <unk> . getId ( ) ) ) . <unk> ( <unk> . METHOD_6 ( ) ) ; }[0m
Trg : private void METHOD_1 ( boolean VAR_1 ) { <unk> <unk> = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_1 ) ; <unk> ( VAR_4 . METHOD_3 ( TYPE_2 . <unk> ( ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> ) ) ; <unk> ( VAR_6 . METHOD_5 ( <unk> . getId ( ) ) ) . <unk> ( <unk> . METHOD_6 ( ) ) ; }[0m
Pred: private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 f = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_1 ) ; assertTrue ( VAR_4 . METHOD_3 ( TYPE_2 . trim ( VAR_5 . class class ) ) ) . ( ( TYPE_3 . METHOD_4 ( 1.0F ) ) ) . trim ( ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = <unk> . METHOD_2 ( ) . METHOD_3 ( ) ; <unk> ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . <unk> ( <unk> ) . METHOD_4 ( TYPE_3 . <unk> ( VAR_2 class ) ) ; TYPE_4 . METHOD_5 ( <unk> ) ; <unk> . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . <unk> ( ) . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = <unk> . METHOD_2 ( ) . METHOD_3 ( ) ; <unk> ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . <unk> ( <unk> ) . METHOD_4 ( TYPE_3 . <unk> ( ) ) ; TYPE_4 . METHOD_5 ( <unk> ) ; <unk> . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . <unk> ( ) . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = java.lang.Math.random ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; assertEquals ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . trim ( ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , null ) ) ; METHOD_4 ( <unk> , VAR_3 ) ; TYPE_4 . METHOD_5 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , null ) ) ; METHOD_4 ( VAR_3 ) ; TYPE_4 . METHOD_5 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , null ) ) ; METHOD_4 ( ) ; }[0m
[31mExample #10[0m
Src : protected <unk> METHOD_1 ( boolean VAR_1 ) { <unk> VAR_2 = null ; java.util.List < <unk> > VAR_3 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 = new <unk> ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_3 = TYPE_1 . METHOD_5 ( VAR_2 ) ; } <unk> ( METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_4 ) . METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_5 ) , TYPE_3 . <unk> ( VAR_6 class ) ) ; return VAR_2 ; }[0m
Trg : protected <unk> METHOD_1 ( boolean VAR_1 ) { <unk> VAR_2 = null ; java.util.List < <unk> > VAR_3 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 = new <unk> ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_3 = TYPE_1 . METHOD_5 ( VAR_2 ) ; } <unk> ( METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_4 ) . METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_5 ) , TYPE_3 . <unk> ( ) ) ; return VAR_2 ; }[0m
Pred: protected TYPE_1 METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = null ; java.util.List < TYPE_1 > VAR_3 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_3 = TYPE_1 . METHOD_5 ( VAR_2 ) ; } ) ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) , true ) ; METHOD_6 ( ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> . METHOD_8 ( ) ; TYPE_2 . METHOD_9 ( <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> . METHOD_8 ( ) ; TYPE_2 . METHOD_9 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) , true ) ; METHOD_6 ( ) ; assertTrue ( true ) . assertEquals ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = METHOD_2 ( ) ; TYPE_2 p = new TYPE_3 ( null , <unk> , ( - 1 ) , null , null , null , VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; p . METHOD_3 ( VAR_4 ) ; assertEquals ( <unk> , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = METHOD_2 ( ) ; TYPE_2 p = new TYPE_3 ( null , <unk> , ( - 1 ) , null , null , null , VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; p . METHOD_3 ( VAR_4 ) ; assertEquals ( <unk> , VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; TYPE_2 p = new TYPE_3 ( null , INT_4 , ( - 1 ) , null , null , null , VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; p . METHOD_3 ( VAR_4 ) ; assertEquals ( INT_4 , VAR_4 ) ; }[0m
[31mExample #13[0m
Src : public boolean METHOD_1 ( TYPE_1 node ) { java.lang.String VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 . equals ( STRING_1 ) ) { TYPE_2 <unk> = <unk> . METHOD_3 ( node ) ; <unk> . METHOD_4 ( VAR_2 , node , <unk> , ( STRING_2 + STRING_3 ) , null ) ; } return false ; }[0m
Trg : public boolean METHOD_1 ( TYPE_1 node ) { java.lang.String VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 . equals ( STRING_1 ) ) { TYPE_2 <unk> = <unk> . METHOD_3 ( node ) ; <unk> . METHOD_4 ( VAR_2 , node , <unk> , ( STRING_2 + STRING_3 ) ) ; } return false ; }[0m
Pred: public boolean METHOD_1 ( TYPE_1 node ) { java.lang.String VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 . equals ( STRING_1 ) ) { TYPE_2 . METHOD_3 ( node ) ; f . METHOD_4 ( VAR_2 , node , "type" , ( STRING_2 + STRING_3 ) , null ) ; } return false ; }[0m
[31mExample #14[0m
Src : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , byte [ ] VAR_3 ) throws <unk> { TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_5 , 0 , 0 , true ) ; int VAR_6 = METHOD_3 ( ) ; TYPE_2 VAR_7 = TYPE_3 . METHOD_4 ( VAR_8 class ) ; VAR_9 . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; <unk> ( VAR_10 ) . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; }[0m
Trg : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , byte [ ] VAR_3 ) throws <unk> { TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_5 , 0 , true ) ; int VAR_6 = METHOD_3 ( ) ; TYPE_2 VAR_7 = TYPE_3 . METHOD_4 ( VAR_8 class ) ; VAR_9 . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; <unk> ( VAR_10 ) . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; }[0m
Pred: private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , byte [ ] VAR_3 ) throws TYPE_1 { TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_5 , 0 , 0 , true ) ; int VAR_6 = METHOD_3 ( ) ; TYPE_2 VAR_7 = TYPE_3 . METHOD_4 ( VAR_8 class ) ; VAR_9 . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; VAR_10 ( VAR_10 ) . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 node ) { if ( ( ( node . METHOD_2 ( ) . size ( ) ) == 1 ) && ( ! ( node . METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) . equals ( STRING_1 ) ) ) ) { context . METHOD_4 ( VAR_2 , node , context . METHOD_5 ( node ) , ( STRING_2 + STRING_3 ) , null ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 node ) { if ( ( ( node . METHOD_2 ( ) . size ( ) ) == 1 ) && ( ! ( node . METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) . equals ( STRING_1 ) ) ) ) { context . METHOD_4 ( VAR_2 , node , context . METHOD_5 ( node ) , ( STRING_2 + STRING_3 ) ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 node ) { if ( ( ( node . METHOD_2 ( ) . size ( ) ) == 1 ) && ( ! ( node . METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) . equals ( STRING_1 ) ) ) ) { context . METHOD_4 ( VAR_2 , node , context . METHOD_5 ( node ) , ( STRING_2 + STRING_3 ) , null ) ; } }[0m
[31mExample #16[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { this . METHOD_1 ( ( <unk> == null ? new java.util.ArrayList < TYPE_1 > ( ) : ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> ) { this . METHOD_1 ( ( <unk> == null ? new java.util.ArrayList < TYPE_1 > ( ) : ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ) ; }[0m
Pred: public void delete ( java.lang.Object [ ] java.lang.Object ) { this . METHOD_1 ( ( 1L == null ? new java.util.ArrayList < TYPE_1 > ( ) : ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . TYPE_2 ) ( java.lang.Math.random ) ) ) ) ) ; }[0m
[31mExample #17[0m
Src : protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_2 . <unk> ( VAR_4 class ) ) ; }[0m
Trg : protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_2 . <unk> ( ) ) ; }[0m
Pred: protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; }[0m
[31mExample #18[0m
Src : private static void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { if ( ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) ) ) { context . METHOD_4 ( VAR_1 , element , context . METHOD_5 ( element ) , STRING_1 , null ) ; } }[0m
Trg : private static void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { if ( ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) ) ) { context . METHOD_4 ( VAR_1 , element , context . METHOD_5 ( element ) , STRING_1 ) ; } }[0m
Pred: private static void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { if ( ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) ) ) { context . METHOD_4 ( VAR_1 , element , context . METHOD_5 ( element ) , STRING_1 , null ) ; } }[0m
[31mExample #19[0m
Src : private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 , STRING_3 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } protected void METHOD_3 ( ) { } } ; VAR_2 . METHOD_4 ( VAR_6 , new TYPE_2 ( STRING_4 ) ) ; return VAR_2 ; }[0m
Trg : private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } protected void METHOD_3 ( ) { } } ; VAR_2 . METHOD_4 ( VAR_6 , new TYPE_2 ( STRING_4 ) ) ; return VAR_2 ; }[0m
Pred: private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 , STRING_3 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } protected void METHOD_3 ( ) { } } ; VAR_2 . METHOD_4 ( VAR_6 , new TYPE_2 ( STRING_4 ) ) ; return VAR_2 ; }[0m
[31mExample #20[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_3 ) + STRING_5 ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = TYPE_3 . METHOD_3 ( VAR_2 , true ) ; assertEquals ( ( STRING_1 + ( STRING_2 + STRING_6 ) ) , VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_3 ) + STRING_5 ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = TYPE_3 . METHOD_3 ( VAR_2 ) ; assertEquals ( ( STRING_1 + ( STRING_2 + STRING_6 ) ) , VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_3 ) + STRING_5 ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = TYPE_3 . METHOD_3 ( VAR_2 , true ) ; assertEquals ( ( STRING_1 + ( STRING_2 + STRING_6 ) ) , VAR_1 ) ; }[0m
[31mExample #21[0m
Src : private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int index = METHOD_2 ( VAR_1 , true ) ; if ( index >= 0 ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( VAR_2 . get ( index ) ) ) ; if ( <unk> != null ) { return VAR_3 ; } } return null ; }[0m
Trg : private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int index = METHOD_2 ( VAR_1 ) ; if ( index >= 0 ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( VAR_2 . get ( index ) ) ) ; if ( <unk> != null ) { return VAR_3 ; } } return null ; }[0m
Pred: private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int index = METHOD_2 ( VAR_1 , true ) ; if ( index >= 0 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_2 . get ( index ) ) ) ; if ( delete != null ) { return VAR_3 ; } } return null ; }[0m
[31mExample #22[0m
Src : public void METHOD_1 ( ) { <unk> . <unk> ( ) . <unk> ( ) . METHOD_2 ( <unk> . getId ( ) ) ; <unk> . METHOD_3 ( ) ; <unk> ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , TYPE_1 . <unk> ( VAR_2 . <unk> class ) ) ) . <unk> ( new java.util.ArrayList < > ( TYPE_2 . METHOD_6 ( STRING_1 ) ) ) ; TYPE_3 . METHOD_7 ( STRING_2 , <unk> . METHOD_8 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> . <unk> ( ) . <unk> ( ) . METHOD_2 ( <unk> . getId ( ) ) ; <unk> . METHOD_3 ( ) ; <unk> ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , TYPE_1 . <unk> ( ) ) ) . <unk> ( new java.util.ArrayList < > ( TYPE_2 . METHOD_6 ( STRING_1 ) ) ) ; TYPE_3 . METHOD_7 ( STRING_2 , <unk> . METHOD_8 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { assertEquals ( ) . delete ( ) . trim ( ) . METHOD_2 ( INT_4 . getId ( ) ) ; assertNotNull ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , TYPE_1 . METHOD_3 ( VAR_2 . VAR_2 class ) ) ) . getInt ( new java.util.ArrayList < > ( TYPE_2 . METHOD_6 ( STRING_1 ) ) ) ; }[0m
[31mExample #23[0m
Src : private static void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = VAR_2 . METHOD_2 ( ) ; java.lang.Object VAR_4 = VAR_2 . METHOD_3 ( ) ; if ( VAR_4 instanceof TYPE_5 ) { if ( context . METHOD_4 ( ) . METHOD_5 ( null , VAR_1 , ( ( TYPE_5 ) ( VAR_4 ) ) ) ) { return ; } } context . METHOD_1 ( VAR_1 , <unk> , VAR_3 , null ) ; }[0m
Trg : private static void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = VAR_2 . METHOD_2 ( ) ; java.lang.Object VAR_4 = VAR_2 . METHOD_3 ( ) ; if ( VAR_4 instanceof TYPE_5 ) { if ( context . METHOD_4 ( ) . METHOD_5 ( null , VAR_1 , ( ( TYPE_5 ) ( VAR_4 ) ) ) ) { return ; } } context . METHOD_1 ( VAR_1 , <unk> , VAR_3 ) ; }[0m
Pred: private static void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 VAR_2 = VAR_2 . METHOD_2 ( ) ; java.lang.Object VAR_4 = VAR_2 . METHOD_3 ( ) ; if ( VAR_4 instanceof TYPE_5 ) { if ( context . METHOD_4 ( ) . METHOD_5 ( null , VAR_1 , ( ( TYPE_5 ) ( VAR_4 ) ) ) ) { return ; } } }[0m
[31mExample #24[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_4 ( VAR_1 , <unk> . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) ) ; TYPE_2 . assertEquals ( VAR_3 , <unk> . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_4 ( VAR_1 , <unk> . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . <unk> ( ) ) ; TYPE_2 . assertEquals ( VAR_3 , <unk> . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; TYPE_1 . METHOD_1 ( ) ; assertEquals ( ) ; assertEquals ( VAR_3 , TYPE_2 . METHOD_7 ( ) ) ; }[0m
[31mExample #25[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { assert TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { new TYPE_4 ( VAR_2 , VAR_5 , VAR_1 , VAR_3 , VAR_6 ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { assert TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { new TYPE_4 ( VAR_2 , VAR_5 , VAR_1 , VAR_3 , VAR_6 , <unk> ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { assert TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { new TYPE_4 ( VAR_2 , VAR_5 , VAR_1 , VAR_3 , VAR_6 ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; }[0m
[31mExample #26[0m
Src : void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) ; for ( final TYPE_2 VAR_2 : ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> . METHOD_3 ( ) ) ) ) { TYPE_3 VAR_3 = new TYPE_3 ( <unk> ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; } }[0m
Trg : void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) ; for ( final TYPE_2 VAR_2 : ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> . METHOD_3 ( ) ) ) ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; } }[0m
Pred: void METHOD_1 ( TYPE_1 VAR_2 ) { VAR_1 . METHOD_2 ( ) ; for ( final TYPE_2 VAR_2 : ( ( java.util.ArrayList < TYPE_2 > ) ( TYPE_2 . METHOD_3 ( ) ) ) ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; } }[0m
---------------
Class: Remove redundant initialization,Replace statement
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > <unk> ) { TYPE_3 <unk> = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { java.util.ArrayList < TYPE_4 > <unk> = null ; if ( ( VAR_1 . error ) == ( VAR_3 ) ) { <unk> = TYPE_5 . METHOD_3 ( <unk> , VAR_2 ) ; TYPE_6 . METHOD_4 ( VAR_4 , <unk> ) ; } VAR_2 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > <unk> ) { TYPE_3 <unk> = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { java.util.ArrayList < TYPE_4 > <unk> = TYPE_5 . METHOD_3 ( <unk> , VAR_2 ) ; if ( ( VAR_1 . error ) == ( VAR_3 ) ) { TYPE_6 . METHOD_4 ( VAR_4 , <unk> ) ; } VAR_2 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > TYPE_2 ) { TYPE_3 VAR_2 = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( delete != null ) { java.util.ArrayList < TYPE_4 > INT_4 = null ; if ( ( VAR_1 . error ) == ( VAR_3 ) ) { return ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 <unk> = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { TYPE_4 <unk> = null ; if ( ( VAR_1 . error ) == ( VAR_4 ) ) { <unk> = TYPE_5 . METHOD_3 ( VAR_2 , VAR_3 ) ; TYPE_6 . METHOD_4 ( VAR_5 , <unk> ) ; } VAR_3 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 <unk> = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { TYPE_4 <unk> = TYPE_5 . METHOD_3 ( VAR_2 , VAR_3 ) ; if ( ( VAR_1 . error ) == ( VAR_4 ) ) { TYPE_6 . METHOD_4 ( VAR_5 , <unk> ) ; } VAR_3 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 != null ) && ( ( VAR_1 . error ) == ( VAR_4 ) ) ) { TYPE_2 = TYPE_5 . METHOD_3 ( VAR_2 , VAR_3 ) ; TYPE_6 . METHOD_4 ( VAR_5 , VAR_2 ) ; } VAR_3 . METHOD_5 ( ) ; }[0m
---------------
Class: Remove statement
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String path , int <unk> ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( <unk> ) ) ) ) { throw new <unk> ( STRING_2 ) ; } else if ( ( VAR_1 ) == ( METHOD_3 ( ) ) ) { throw new TYPE_3 ( STRING_3 ) ; } return METHOD_4 ( VAR_2 , path , <unk> ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( java.lang.String path , int <unk> ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( <unk> ) ) ) ) { throw new <unk> ( STRING_2 ) ; } return METHOD_4 ( VAR_2 , path , <unk> ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String path , int startTime ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( ) ) ) ) { throw new TYPE_2 ( STRING_2 ) ; } else if ( ( VAR_1 ) == ( METHOD_3 ( ) ) ) { throw new TYPE_3 ( STRING_3 ) ; } return METHOD_4 ( VAR_2 , path , 0L ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 <unk> ) { <unk> . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) ) ; <unk> . METHOD_2 ( STRING_3 , ( ( VAR_1 ) + STRING_4 ) ) ; <unk> . METHOD_2 ( STRING_5 , ( ( VAR_1 ) + STRING_6 ) ) ; <unk> . METHOD_2 ( STRING_7 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_9 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_10 , STRING_8 ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 <unk> ) { <unk> . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) ) ; <unk> . METHOD_2 ( STRING_5 , ( ( VAR_1 ) + STRING_6 ) ) ; <unk> . METHOD_2 ( STRING_7 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_9 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_10 , STRING_8 ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 update ) { TYPE_2 . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) ) ; assertEquals ( STRING_3 , ( ( VAR_1 ) + STRING_4 ) ) ; assertEquals ( STRING_5 , ( ( VAR_1 ) + STRING_6 ) ) ; STRING_8 . METHOD_2 ( STRING_7 , STRING_8 ) ; assertEquals ( STRING_9 , STRING_8 ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_1 < ? > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( true ) ; } } if ( ( VAR_4 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_5 : VAR_4 ) { VAR_5 . METHOD_4 ( ) ; } } VAR_1 . METHOD_2 ( STRING_2 ) ; TYPE_3 . METHOD_5 ( 0 ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_1 < ? > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( true ) ; } } if ( ( VAR_4 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_5 : VAR_4 ) { VAR_5 . METHOD_4 ( ) ; } } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_1 < ? > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( true ) ; } } if ( ( VAR_4 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_5 : VAR_4 ) { VAR_5 . METHOD_4 ( ) ; } } VAR_1 . METHOD_2 ( STRING_2 ) ; TYPE_3 . METHOD_5 ( 0 ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; try { <unk> . METHOD_5 ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . <unk> ( ) ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; try { <unk> . METHOD_5 ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . <unk> ( ) ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; try { TYPE_2 . METHOD_5 ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . intValue ( ) ) ; } }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_1 VAR_4 = METHOD_4 ( VAR_2 ) ; TYPE_2 . assertNotNull ( VAR_4 ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_5 ( ) ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_1 VAR_4 = METHOD_4 ( VAR_2 ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_5 ( ) ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_1 VAR_4 = METHOD_4 ( VAR_2 ) ; TYPE_2 . assertNotNull ( VAR_4 ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_5 ( ) ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) ; }[0m
[31mExample #5[0m
Src : public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 <unk> = <unk> ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = <unk> . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; if ( VAR_2 != null ) { <unk> . METHOD_5 ( VAR_2 ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . <unk> ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_7 ( VAR_2 ) ; } return VAR_2 ; }[0m
Trg : public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 <unk> = <unk> ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = <unk> . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; if ( VAR_2 != null ) { <unk> . METHOD_5 ( VAR_2 ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; <unk> . METHOD_7 ( VAR_2 ) ; } return VAR_2 ; }[0m
Pred: public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = java.lang.Math.random ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; if ( VAR_2 != null ) { TYPE_2 . METHOD_5 ( VAR_2 ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . delete ( ) ; }[0m
[31mExample #6[0m
Src : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . <unk> class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; }[0m
Trg : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . <unk> class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; }[0m
Pred: protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . String class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_2 <unk> = <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; TYPE_2 <unk> = <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_2 . replaceAll ( STRING_1 ) ; assertEquals ( STRING_1 ) ; TYPE_1 . METHOD_7 ( STRING_1 ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final <unk> <unk> = null ; final <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( <unk> ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( <unk> ) ; final <unk> VAR_4 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { final <unk> <unk> = null ; final <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( <unk> ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( <unk> ) ; final <unk> VAR_4 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( f ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( ) ; final TYPE_1 VAR_4 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_4 ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , <unk> ( 1 ) ) ; VAR_4 . METHOD_5 ( ) ; TYPE_1 . <unk> <unk> = <unk> . get ( ) ; TYPE_2 . METHOD_6 ( <unk> , 1 ) ; METHOD_7 ( <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , <unk> ( 1 ) ) ; TYPE_1 . <unk> <unk> = <unk> . get ( ) ; TYPE_2 . METHOD_6 ( <unk> , 1 ) ; METHOD_7 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . VAR_2 class ) ; }[0m
[31mExample #10[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( <unk> ( ) ) ; VAR_2 . METHOD_6 ( ) ; TYPE_2 VAR_3 = <unk> . get ( ) ; METHOD_7 ( VAR_3 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( <unk> ( ) ) ; TYPE_2 VAR_3 = <unk> . get ( ) ; METHOD_7 ( VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; }[0m
[31mExample #11[0m
Src : private void METHOD_1 ( ) { <unk> <unk> = ( ( <unk> ) ( METHOD_2 ( ) . <unk> ( ) ) ) ; if ( <unk> == null ) { <unk> = new <unk> ( ) ; } METHOD_3 ( <unk> , null , false , null ) ; getName ( ) . <unk> ( false ) ; METHOD_4 ( ) . <unk> ( false ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> <unk> = ( ( <unk> ) ( METHOD_2 ( ) . <unk> ( ) ) ) ; if ( <unk> == null ) { <unk> = new <unk> ( ) ; } METHOD_3 ( <unk> , null , false , null ) ; }[0m
Pred: private void METHOD_1 ( ) { f = ( ( java.lang.Math.random ) ( METHOD_2 ( ) . intValue ( ) ) ) ; if ( delete == null ) { return ; } METHOD_3 ( delete , null , false , null ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( false ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_1 . <unk> ( ) , TYPE_1 . <unk> ( ) ) ; VAR_1 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( false ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_1 . <unk> ( ) ) ; VAR_1 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( TYPE_1 . replaceAll ( ) , TYPE_1 . get ( ) ) ; VAR_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , java.lang.Math.random ( ) ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; assertTrue ( VAR_1 . get ( TYPE_1 . get ( ) ) ) . intValue ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 ) ; }[0m
[31mExample #14[0m
Src : public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 . <unk> class . METHOD_2 ( ) . METHOD_3 ( true ) ; TYPE_3 <unk> = new TYPE_3 ( ) ; TYPE_4 VAR_2 = new TYPE_4 ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_2 ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) ) ; }[0m
Trg : public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { TYPE_3 <unk> = new TYPE_3 ( ) ; TYPE_4 VAR_2 = new TYPE_4 ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_2 ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) ) ; }[0m
Pred: public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 . class class . METHOD_2 ( ) . METHOD_3 ( true ) ; TYPE_3 . = new TYPE_3 ( ) ; TYPE_4 VAR_2 = new TYPE_4 ( ) ; assertEquals ( VAR_2 ) ; }[0m
[31mExample #15[0m
Src : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , new java.lang.Object [ ] { TYPE_2 . toString ( ) } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; }[0m
Trg : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , new java.lang.Object [ ] { TYPE_2 . toString ( ) } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; }[0m
Pred: protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , new java.lang.Object [ ] { TYPE_2 . toString ( ) } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; }[0m
[31mExample #16[0m
Src : public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , <unk> VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == ( <unk> ( ) . METHOD_2 ( ) ) ) { return VAR_3 . get ( ) ; } else if ( VAR_1 == ( <unk> ( ) . METHOD_3 ( ) ) ) { return VAR_4 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } }[0m
Trg : public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , <unk> VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == ( <unk> ( ) . METHOD_2 ( ) ) ) { return VAR_3 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } }[0m
Pred: public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == ( java.lang.Math.random ( ) . METHOD_3 ( ) ) ) { return VAR_4 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } }[0m
[31mExample #17[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( null ) ; METHOD_3 ( false ) ; <unk> . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , <unk> , VAR_2 ) ; <unk> . METHOD_6 ( VAR_3 , <unk> . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_2 . METHOD_9 ( VAR_4 ) , TYPE_2 . <unk> ( VAR_5 class ) ) ; <unk> . METHOD_6 ( <unk> , <unk> . METHOD_7 ( 0 ) ) . METHOD_10 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_3 ( false ) ; <unk> . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , <unk> , VAR_2 ) ; <unk> . METHOD_6 ( VAR_3 , <unk> . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_2 . METHOD_9 ( VAR_4 ) , TYPE_2 . <unk> ( VAR_5 class ) ) ; <unk> . METHOD_6 ( <unk> , <unk> . METHOD_7 ( 0 ) ) . METHOD_10 ( ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { assertEquals ( VAR_1 . METHOD_2 ( ) ) . intValue ( null ) ; METHOD_3 ( false ) ; VAR_2 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , "name" , VAR_2 ) ; assertEquals ( ) ; assertEquals ( ) ; }[0m
[31mExample #18[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( ) ; } catch ( java.lang.NullPointerException <unk> ) { } int c = TYPE_1 . METHOD_3 ( ) ; int <unk> = TYPE_1 . METHOD_4 ( c ) ; METHOD_5 ( TYPE_1 . METHOD_2 ( <unk> ) ) ; TYPE_1 . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( c ) ; TYPE_2 . METHOD_8 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( ) ; } catch ( java.lang.NullPointerException <unk> ) { } int c = TYPE_1 . METHOD_3 ( ) ; int <unk> = TYPE_1 . METHOD_4 ( c ) ; METHOD_5 ( TYPE_1 . METHOD_2 ( <unk> ) ) ; TYPE_1 . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( c ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( ) ; } }[0m
[31mExample #19[0m
Src : protected void METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 ) ; <unk> . METHOD_3 ( VAR_2 ) ; <unk> . METHOD_4 ( true ) ; <unk> . METHOD_5 ( <unk> ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_3 . get ( VAR_1 ) ) . <unk> ( <unk> ) ; METHOD_7 ( false ) ; }[0m
Trg : protected void METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 ) ; <unk> . METHOD_3 ( VAR_2 ) ; <unk> . METHOD_4 ( true ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_3 . get ( VAR_1 ) ) . <unk> ( <unk> ) ; METHOD_7 ( false ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; assertNotNull ( VAR_2 ) ; assertEquals ( false ) ; assertEquals ( false ) ; }[0m
[31mExample #20[0m
Src : public boolean METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) ) ) { throw new <unk> ( STRING_2 ) ; } else if ( ( VAR_2 ) == ( METHOD_2 ( ) ) ) { throw new TYPE_1 ( STRING_3 ) ; } return METHOD_3 ( VAR_3 , path , VAR_1 ) ; }[0m
Trg : public boolean METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) ) ) { throw new <unk> ( STRING_2 ) ; } return METHOD_3 ( VAR_3 , path , VAR_1 ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) ) ) { throw new TYPE_2 ( STRING_2 ) ; } else if ( ( VAR_2 ) == ( METHOD_2 ( ) ) ) { throw new TYPE_1 ( STRING_3 ) ; } return METHOD_3 ( VAR_3 , path , VAR_1 ) ; }[0m
[31mExample #21[0m
Src : protected TYPE_1 METHOD_1 ( int index ) { for ( TYPE_1 <unk> = this ; <unk> != null ; <unk> = <unk> . METHOD_2 ( ) ) { TYPE_1 obj = <unk> . METHOD_3 ( index , null , this ) ; if ( obj != null ) { ( ( TYPE_2 ) ( obj ) ) . METHOD_4 ( METHOD_5 ( ) ) ; return obj ; } } return null ; }[0m
Trg : protected TYPE_1 METHOD_1 ( int index ) { for ( TYPE_1 <unk> = this ; <unk> != null ; <unk> = <unk> . METHOD_2 ( ) ) { TYPE_1 obj = <unk> . METHOD_3 ( index , null , this ) ; if ( obj != null ) { return obj ; } } return null ; }[0m
Pred: protected TYPE_1 METHOD_1 ( int index ) { for ( TYPE_1 TYPE_1 = this ; rows != null ; TYPE_1 = TYPE_1 . METHOD_2 ( ) ) { TYPE_1 obj = METHOD_3 ( index , null , this ) ; if ( obj != null ) { ( ( TYPE_2 ) ( obj ) ) . METHOD_4 ( METHOD_5 ( ) ) ; return obj ; } } return null ; }[0m
[31mExample #22[0m
Src : private static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } if ( ( VAR_5 ) != null ) { VAR_2 . METHOD_2 ( STRING_4 ) ; VAR_2 . METHOD_2 ( VAR_5 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } return VAR_2 ; }[0m
Trg : private static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } return VAR_2 ; }[0m
Pred: private static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_2 . METHOD_2 ( STRING_1 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } if ( ( VAR_5 ) != null ) { VAR_2 . METHOD_2 ( STRING_4 ) ; VAR_2 . METHOD_2 ( VAR_5 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } return VAR_2 ; }[0m
[31mExample #23[0m
Src : public void METHOD_1 ( ) { TYPE_1 . <unk> <unk> = new TYPE_1 . <unk> ( ) ; <unk> . METHOD_2 ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_3 ) ; <unk> ( METHOD_6 ( false ) ) . <unk> ( VAR_4 ) . METHOD_7 ( VAR_3 ) ; TYPE_3 . assertEquals ( false , VAR_5 . METHOD_8 ( <unk> , <unk> ) . METHOD_9 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_3 ) ; <unk> ( METHOD_6 ( false ) ) . <unk> ( VAR_4 ) . METHOD_7 ( VAR_3 ) ; TYPE_3 . assertEquals ( false , VAR_5 . METHOD_8 ( <unk> , VAR_1 ) . METHOD_9 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . delete ( ) ; assertEquals ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; TYPE_2 . METHOD_2 ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; assertEquals ( VAR_2 ) ; }[0m
[31mExample #24[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . <unk> <unk> = new TYPE_1 . <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( <unk> ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . <unk> <unk> = new TYPE_1 . <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; try { VAR_3 . add ( <unk> ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
[31mExample #25[0m
Src : public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ( METHOD_2 ( ) ) == false ) { <unk> ( <unk> . <unk> , STRING_1 ) ; throw new java.io.IOException ( ) ; } return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , this , VAR_1 , null ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ! ( METHOD_2 ( ) ) ) { <unk> ( <unk> . <unk> , STRING_1 ) ; throw new java.io.IOException ( ) ; } return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , this , VAR_1 , null ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ( METHOD_2 ( ) ) == false ) { return ( java.lang.Math.random ( ) ) ; } return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , this , VAR_1 , null ) ; }[0m
[31mExample #26[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 <unk> = TYPE_2 . <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; TYPE_1 <unk> = TYPE_2 . <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 . METHOD_3 ( 1 ) ; assertEquals ( STRING_1 ) ; }[0m
---------------
Class: Remove statement,Add try block
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ; final int VAR_2 = <unk> ; VAR_1 . METHOD_4 ( VAR_2 ) ; int VAR_3 = VAR_1 . METHOD_5 ( ) ; assertTrue ( STRING_1 , ( ( TYPE_4 . METHOD_6 ( ( VAR_2 - VAR_3 ) ) ) <= <unk> ) ) ; VAR_1 . METHOD_7 ( ) ; <unk> . METHOD_7 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { try ( TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ) { final int VAR_2 = <unk> ; VAR_1 . METHOD_4 ( VAR_2 ) ; int VAR_3 = VAR_1 . METHOD_5 ( ) ; assertTrue ( STRING_1 , ( ( TYPE_4 . METHOD_6 ( ( VAR_2 - VAR_3 ) ) ) <= <unk> ) ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_2 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , 0L . METHOD_3 ( ) ) ; final int VAR_2 = INT_4 ; VAR_1 . METHOD_4 ( VAR_2 ) ; int VAR_3 = VAR_1 . METHOD_5 ( ) ; assertTrue ( STRING_1 , ( ( TYPE_4 . METHOD_6 ( ( VAR_2 - VAR_3 ) ) ) <= INT_4 ) ) ; VAR_1 . METHOD_7 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( INT_1 ) ; assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_5 ( ) ) >= INT_1 ) ) ; VAR_1 . METHOD_6 ( ) ; <unk> . METHOD_6 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { try ( TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ) { VAR_1 . METHOD_4 ( INT_1 ) ; assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_5 ( ) ) >= INT_1 ) ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_2 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( INT_1 ) ; assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_5 ( ) ) >= INT_1 ) ) ; VAR_1 . METHOD_6 ( ) ; }[0m
---------------
Class: Remove statement,Move existing statements in try block
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; try { VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < <unk> > ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < <unk> > ( ) ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . VAR_2 class ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 > ( ) , null ) ; VAR_4 . METHOD_5 ( ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 > ( ) , null ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . VAR_2 class ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; VAR_4 . METHOD_5 ( ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . VAR_2 class ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; VAR_1 . METHOD_5 ( ) ; try { <unk> . METHOD_6 ( <unk> ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; try { <unk> . METHOD_6 ( <unk> ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; VAR_1 . METHOD_5 ( ) ; try { assertEquals ( STRING_1 ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } }[0m
---------------
Class: Remove type casting in method body
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> , TYPE_2 args ) { if ( ( METHOD_2 ( ) . <unk> ( ) ) == null ) { METHOD_3 ( ) . <unk> ( false ) ; } else { METHOD_3 ( ) . <unk> ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . <unk> ( ) ) ) ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> , TYPE_2 args ) { if ( ( METHOD_2 ( ) . <unk> ( ) ) == null ) { METHOD_3 ( ) . <unk> ( false ) ; } else { METHOD_3 ( ) . <unk> ( METHOD_2 ( ) . <unk> ( ) ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object startTime , TYPE_2 args ) { if ( ( METHOD_2 ( ) . intValue ( ) ) == null ) { METHOD_3 ( ) . intValue ( false ) ; } else { METHOD_3 ( ) . ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . intValue ( ) ) ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( final float value ) { int VAR_1 = TYPE_1 . METHOD_2 ( value ) ; if ( ( ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 ) ) || ( VAR_1 == INT_3 ) ) { VAR_2 . METHOD_3 ( ( ( VAR_3 ) + ( ( int ) ( value ) ) ) ) ; } else { VAR_2 . METHOD_4 ( new TYPE_2 . <unk> ( value ) ) ; } }[0m
Trg : public void METHOD_1 ( final float value ) { int VAR_1 = TYPE_1 . METHOD_2 ( value ) ; if ( ( ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 ) ) || ( VAR_1 == INT_3 ) ) { VAR_2 . METHOD_3 ( ( ( VAR_3 ) + ( ( int ) ( value ) ) ) ) ; } else { VAR_2 . METHOD_4 ( value ) ; } }[0m
Pred: public void METHOD_1 ( final float value ) { int VAR_1 = TYPE_1 . METHOD_2 ( value ) ; if ( ( ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 ) ) || ( VAR_1 == INT_3 ) ) { VAR_2 . METHOD_3 ( ( ( VAR_3 ) + ( ( int ) ( value ) ) ) ) ; } else { VAR_2 . METHOD_4 ( ) ; } }[0m
---------------
Class: Rename method
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 . <unk> METHOD_1 ( java.lang.Object value ) { TYPE_1 . <unk> result = super . METHOD_1 ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ( ( java.lang.String ) ( value ) ) ) ) ; } return result ; }[0m
Trg : public TYPE_1 . <unk> <unk> ( java.lang.Object value ) { TYPE_1 . <unk> result = super . <unk> ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ( ( java.lang.String ) ( value ) ) ) ) ; } return result ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.Object value ) { TYPE_1 . delete ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ( ( java.lang.String ) ( value ) ) ) ) ; } return result ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public boolean METHOD_1 ( ) { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . METHOD_2 ( 1 ) ; <unk> . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) , <unk> } ) ; return METHOD_4 ( ) . METHOD_6 ( ) ; }[0m
Trg : public boolean <unk> ( ) { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . METHOD_2 ( 1 ) ; <unk> . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) , <unk> } ) ; return METHOD_4 ( ) . METHOD_6 ( ) ; }[0m
Pred: public boolean METHOD_1 ( ) { TYPE_1 . METHOD_2 ( 1 ) ; METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) , ) ; return METHOD_4 ( ) . METHOD_6 ( ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_1 ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_2 > ) ( java.lang.Math.random ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_1 ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( <unk> != null ) { <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; } else { VAR_4 = true ; } VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( <unk> != null ) { <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; } else { VAR_4 = true ; } VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( delete != null ) { VAR_2 = ( ( java.lang.Math.random ) ( java.lang.Math.random ) ) ; VAR_3 = VAR_2 ; } else { VAR_4 = true ; } VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #4[0m
Src : protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( METHOD_3 ( ) ) ; return ( ( <unk> ( VAR_1 . METHOD_4 ( ) ) ) && ( ( METHOD_5 ( ) ) || ( <unk> ( VAR_2 . METHOD_6 ( ) ) ) ) ) && ( <unk> ( METHOD_7 ( METHOD_2 ( ) , METHOD_3 ( ) ) ) ) ; }[0m
Trg : protected boolean <unk> ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( METHOD_3 ( ) ) ; return ( ( <unk> ( VAR_1 . METHOD_4 ( ) ) ) && ( ( METHOD_5 ( ) ) || ( <unk> ( VAR_2 . METHOD_6 ( ) ) ) ) ) && ( <unk> ( METHOD_7 ( METHOD_2 ( ) , METHOD_3 ( ) ) ) ) ; }[0m
Pred: protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; return VAR_2 ; }[0m
[31mExample #5[0m
Src : public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; if ( ( ( java.lang.Boolean ) ( METHOD_6 ( ) . <unk> ( ) ) ) ) { METHOD_4 ( ) . METHOD_7 ( new TYPE_2 [ ] { VAR_1 , new TYPE_3 ( ) } ) ; } return METHOD_4 ( ) . METHOD_8 ( ) ; }[0m
Trg : public boolean <unk> ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; if ( ( ( java.lang.Boolean ) ( METHOD_6 ( ) . <unk> ( ) ) ) ) { METHOD_4 ( ) . METHOD_7 ( new TYPE_2 [ ] { VAR_1 , new TYPE_3 ( ) } ) ; } return METHOD_4 ( ) . METHOD_8 ( ) ; }[0m
Pred: public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; if METHOD_4 ( ) . METHOD_4 ( ) . METHOD_7 ( new TYPE_2 [ ] { VAR_1 , new TYPE_3 ( ) } ) ; }[0m
[31mExample #6[0m
Src : protected boolean METHOD_1 ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( TYPE_1 . <unk> ( ) . METHOD_5 ( ) , TYPE_1 . <unk> ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; }[0m
Trg : protected boolean <unk> ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( TYPE_1 . <unk> ( ) . METHOD_5 ( ) , TYPE_1 . <unk> ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; }[0m
Pred: protected boolean METHOD_1 ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( TYPE_1 . get ( ) . METHOD_5 ( ) , TYPE_1 . get ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; }[0m
[31mExample #7[0m
Src : public TYPE_1 . <unk> METHOD_1 ( java.lang.Object value ) { int VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( ( ( VAR_3 . length ( ) ) + VAR_1 ) + 1 ) <= ( METHOD_3 ( ) ) ; TYPE_1 . <unk> VAR_4 = new TYPE_1 . <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; if ( ! VAR_2 ) { VAR_4 . METHOD_5 ( TYPE_2 . METHOD_6 ( METHOD_7 ( ) ) ) ; } return VAR_4 ; }[0m
Trg : public TYPE_1 . <unk> <unk> ( java.lang.Object value ) { int VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( ( ( VAR_3 . length ( ) ) + VAR_1 ) + 1 ) <= ( METHOD_3 ( ) ) ; TYPE_1 . <unk> VAR_4 = new TYPE_1 . <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; if ( ! VAR_2 ) { VAR_4 . METHOD_5 ( TYPE_2 . METHOD_6 ( METHOD_7 ( ) ) ) ; } return VAR_4 ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.Object value ) { int VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( ( ( VAR_3 . length ( ) ) + VAR_1 ) + 1 ) <= ( METHOD_3 ( ) ) ; TYPE_1 . TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; if ( ! VAR_2 ) { VAR_4 . METHOD_5 ( TYPE_2 . METHOD_6 ( METHOD_7 ( ) ) ) ; } return VAR_4 ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . <unk> ( false ) ; if ( ! VAR_4 ) { VAR_3 . METHOD_3 ( ) . <unk> ( false ) ; } } }[0m
Trg : public void <unk> ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . <unk> ( false ) ; if ( ! VAR_4 ) { VAR_3 . METHOD_3 ( ) . <unk> ( false ) ; } } }[0m
Pred: public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . intValue ( false ) ; if ( ! VAR_4 ) { VAR_3 . METHOD_3 ( ) . intValue ( false ) ; } } }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ; <unk> . METHOD_2 ( ( result != null ? ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ; <unk> . METHOD_2 ( ( result != null ? ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { TYPE_1 . = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . trim ) ( java.lang.Math.random ) ) . trim ( ) ; f . METHOD_2 ( ( result != null ? ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ) ) ; }[0m
[31mExample #10[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } else { VAR_1 . METHOD_6 ( ) ; } }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } else { VAR_1 . METHOD_6 ( ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( java.lang.Math.random ) ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } else { VAR_1 . METHOD_6 ( ) ; } }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . <unk> = <unk> ; VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . <unk> = <unk> ; VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < java.lang.Long > INT_4 = ( ( java.util.ArrayList < TYPE_1 > ) ( INT_4 ) ) ; VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( <unk> ) ) ; TYPE_1 <unk> = VAR_1 . get ( 0 ) ; if ( <unk> != null ) { TYPE_2 . METHOD_2 ( ( ( <unk> ) ( <unk> ) ) , <unk> . getId ( ) ) ; } }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( <unk> ) ) ; TYPE_1 <unk> = VAR_1 . get ( 0 ) ; if ( <unk> != null ) { TYPE_2 . METHOD_2 ( ( ( <unk> ) ( <unk> ) ) , <unk> . getId ( ) ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.Object startTime , java.lang.Object startTime ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( java.lang.Math.random ) ) ; TYPE_1 . = VAR_1 . get ( 0 ) ; if ( delete != null ) { TYPE_2 . METHOD_2 ( ( ( java.lang.Math.random ) ( java.lang.Math.random ) ) ) ; } }[0m
---------------
Class: Rename variable
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( <unk> ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . <unk> ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_7 ( VAR_4 ) ; <unk> . <unk> result = <unk> . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_4 , result ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( <unk> ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . <unk> ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_7 ( VAR_4 ) ; <unk> . <unk> result = <unk> . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_4 , result ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . append ( INT_4 . METHOD_6 ( ) ) ; assertEquals ( VAR_4 ) ; assertEquals ( VAR_4 ) ; assertEquals ( VAR_4 , result ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < <unk> . <unk> > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( <unk> . <unk> VAR_3 : VAR_1 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( VAR_3 . getName ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; }[0m
Trg : public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < <unk> . <unk> > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( <unk> . <unk> VAR_3 : VAR_1 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( VAR_3 . getName ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; }[0m
Pred: public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < java.util.List < TYPE_1 > > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( double . rows VAR_3 : VAR_1 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( VAR_3 . getName ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; }[0m
[31mExample #2[0m
Src : byte [ ] METHOD_1 ( java.lang.Object VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 . METHOD_5 ( ) ; } catch ( java.lang.Throwable t ) { METHOD_6 ( t ) ; return new byte [ 0 ] ; } }[0m
Trg : byte [ ] METHOD_1 ( java.lang.Object VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 . METHOD_5 ( ) ; } catch ( java.lang.Throwable fail ) { METHOD_6 ( fail ) ; return new byte [ 0 ] ; } }[0m
Pred: byte [ ] METHOD_1 ( java.lang.Object VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 . METHOD_5 ( ) ; } catch ( java.lang.Throwable t ) { METHOD_6 ( t ) ; return new byte [ 0 ] ; } }[0m
---------------
Class: Replace fully qualified name with import or vice versa
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws <unk> { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } } ; TYPE_2 . <unk> ( VAR_4 . METHOD_4 ( <unk> . METHOD_5 ( VAR_5 class ) ) ) . <unk> ( VAR_1 ) ; assertEquals ( <unk> , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws <unk> { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } } ; TYPE_2 . <unk> ( VAR_4 . METHOD_4 ( <unk> . METHOD_5 ( VAR_5 class ) ) ) . <unk> ( VAR_1 ) ; <unk> ( <unk> , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.io.IOException { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static int METHOD_1 ( int a , int b , int c ) { int [ ] values = new int [ ] { a , b , c } ; VAR_1 . <unk> ( ( ( STRING_1 + ( TYPE_1 . toString ( values ) ) ) + STRING_2 ) ) ; return a > b ? a : b ; }[0m
Trg : public static int METHOD_1 ( int a , int b , int c ) { int [ ] values = new int [ ] { a , b , c } ; java.lang.System.out.println ( ( ( STRING_1 + ( TYPE_1 . toString ( values ) ) ) + STRING_2 ) ) ; return a > b ? a : b ; }[0m
Pred: public static int METHOD_1 ( int a , int b , int c ) { int [ ] values = new int [ ] { a , b , c } ; }[0m
[31mExample #2[0m
Src : private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( <unk> . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; }[0m
Trg : private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( <unk> . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; <unk> ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; }[0m
Pred: private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) , <unk> . METHOD_5 ( int . class ) ) ; assertEquals ( VAR_2 , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) , <unk> . METHOD_5 ( int . class ) ) ; <unk> ( VAR_2 , true ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; assertTrue ( VAR_5 ) . METHOD_4 ( VAR_2 ) ; assertEquals ( VAR_2 , true ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) ) ; <unk> . METHOD_4 ( ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( <unk> . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) ) ; TYPE_3 <unk> = ( ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) ) ; assertEquals ( STRING_1 , METHOD_8 ( <unk> , VAR_2 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { <unk> . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) ) ; <unk> . METHOD_4 ( ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( <unk> . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) ) ; TYPE_3 <unk> = ( ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) ) ; <unk> ( STRING_1 , METHOD_8 ( <unk> , VAR_2 ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) ) ; TYPE_2 . METHOD_4 ( ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( TYPE_2 . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) ) ; TYPE_3 ( = ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) ) ; assertEquals ( STRING_1 , METHOD_8 ( ) , VAR_2 ) ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , java.lang.String VAR_3 , byte [ ] VAR_4 ) throws java.lang.Exception { TYPE_1 VAR_5 = new TYPE_2 ( VAR_6 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) . build ( ) ; TYPE_3 VAR_7 = TYPE_3 . METHOD_4 ( VAR_5 , VAR_8 ) ; assertEquals ( VAR_1 , VAR_9 ) ; assertEquals ( VAR_3 , VAR_10 ) ; }[0m
Trg : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , java.lang.String VAR_3 , byte [ ] VAR_4 ) throws java.lang.Exception { TYPE_1 VAR_5 = new TYPE_2 ( VAR_6 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) . build ( ) ; TYPE_3 VAR_7 = TYPE_3 . METHOD_4 ( VAR_5 , VAR_8 ) ; <unk> ( VAR_1 , VAR_9 ) ; <unk> ( VAR_3 , VAR_10 ) ; }[0m
Pred: private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , java.lang.String VAR_3 , byte [ ] VAR_4 ) throws java.lang.Exception { TYPE_1 VAR_5 = new TYPE_2 ( VAR_6 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) . build ( ) ; TYPE_3 VAR_7 = TYPE_3 . METHOD_4 ( VAR_5 , VAR_8 ) ; assertEquals ( VAR_1 , VAR_9 ) ; assertEquals ( VAR_3 , VAR_10 ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( long <unk> , long <unk> , long c , TYPE_1 VAR_1 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { assertEquals ( VAR_2 , TYPE_4 . METHOD_2 ( <unk> ) ) ; super . METHOD_1 ( <unk> , <unk> , c , VAR_1 , <unk> , <unk> ) ; }[0m
Trg : public void METHOD_1 ( long <unk> , long <unk> , long c , TYPE_1 VAR_1 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { <unk> ( VAR_2 , TYPE_4 . METHOD_2 ( <unk> ) ) ; super . METHOD_1 ( <unk> , <unk> , c , VAR_1 , <unk> , <unk> ) ; }[0m
Pred: public void METHOD_1 ( long f , long startTime , long c , TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 , TYPE_3 ) throws java.lang.Exception { assertEquals ( VAR_2 , TYPE_4 . METHOD_2 ( java.lang.Math.random ( ) ) ) ; super . METHOD_1 ( string , string , c , VAR_1 , INT_7 , 0L ) ; }[0m
---------------
Class: Replace generic specification with diamond operator
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( <unk> . METHOD_3 ( ) ) ; params . METHOD_4 ( <unk> . METHOD_3 ( ) ) ; <unk> = <unk> . METHOD_5 ( new TYPE_2 < TYPE_1 > ( params ) ) ; <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_8 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( <unk> . METHOD_3 ( ) ) ; params . METHOD_4 ( <unk> . METHOD_3 ( ) ) ; <unk> = <unk> . METHOD_5 ( new TYPE_2 ( params ) ) ; <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_8 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( 0L . METHOD_3 ( ) ) ; params . METHOD_4 ( 1.0F . METHOD_3 ( ) ) ; assertEquals ( ) ; assertEquals ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( ) { TYPE_2 < <unk> > VAR_1 = new TYPE_2 < <unk> > ( ) { public TYPE_3 METHOD_2 ( <unk> VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return <unk> ( new TYPE_6 < TYPE_7 , TYPE_3 > ( VAR_5 , VAR_2 , VAR_4 ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { TYPE_2 < <unk> > VAR_1 = new TYPE_2 < <unk> > ( ) { public TYPE_3 METHOD_2 ( <unk> VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return <unk> ( new TYPE_6 ( VAR_5 , VAR_2 , VAR_4 ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { TYPE_2 < TYPE_2 > VAR_1 = new TYPE_2 < TYPE_2 > ( ) { public TYPE_3 METHOD_2 ( VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 < <unk> > ( VAR_2 , VAR_3 . <unk> class ) , VAR_4 , new TYPE_3 < TYPE_1 , TYPE_1 > ( ) { public TYPE_4 . <unk> <unk> ( TYPE_1 VAR_5 , TYPE_1 <unk> ) { return new TYPE_5 ( METHOD_3 ( VAR_6 , VAR_7 class ) . <unk> ( VAR_5 , <unk> ) ) ; } } ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 ( VAR_2 , VAR_3 . <unk> class ) , VAR_4 , new TYPE_3 < TYPE_1 , TYPE_1 > ( ) { public TYPE_4 . <unk> <unk> ( TYPE_1 VAR_5 , TYPE_1 <unk> ) { return new TYPE_5 ( METHOD_3 ( VAR_6 , VAR_7 class ) . <unk> ( VAR_5 , <unk> ) ) ; } } ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 < TYPE_2 > ( VAR_2 , VAR_3 . METHOD_3 class ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , null ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , null ) ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( assertEquals ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( <unk> . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( <unk> . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ; }[0m
---------------
Class: Replace if statement with assert statement
Golden example (False):
[31mExample #1[0m
Src : public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 <unk> = VAR_2 . get ( VAR_1 ) ; if ( <unk> == null ) { throw new <unk> ( STRING_2 ) ; } return <unk> . METHOD_3 ( ) ; }[0m
Trg : public int METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; METHOD_2 ( ) ; TYPE_2 <unk> = VAR_2 . get ( VAR_1 ) ; if ( <unk> == null ) { throw new <unk> ( STRING_2 ) ; } return <unk> . METHOD_3 ( ) ; }[0m
Pred: public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 . = VAR_2 . get ( VAR_1 ) ; if ( str == null ) { throw new TYPE_1 ( STRING_2 ) ; } return METHOD_3 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 value = VAR_1 . METHOD_3 ( ) ; TYPE_1 VAR_2 = VAR_3 . get ( value ) ; if ( VAR_2 != null ) { return VAR_2 ; } VAR_3 . METHOD_4 ( value , VAR_1 ) ; return VAR_1 ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; METHOD_2 ( ) ; TYPE_2 value = VAR_1 . METHOD_3 ( ) ; TYPE_1 VAR_2 = VAR_3 . get ( value ) ; if ( VAR_2 != null ) { return VAR_2 ; } VAR_3 . METHOD_4 ( value , VAR_1 ) ; return VAR_1 ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 value = VAR_1 . METHOD_3 ( ) ; TYPE_1 VAR_2 = VAR_3 . get ( value ) ; if ( VAR_2 != null ) { return VAR_2 ; } VAR_3 . METHOD_4 ( value , VAR_1 ) ; return VAR_1 ; }[0m
---------------
Class: Replace invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( <unk> ) . METHOD_2 ( 1 , <unk> ) . METHOD_2 ( <unk> , <unk> ) . METHOD_2 ( <unk> , 1 ) . METHOD_3 ( 1 ) . METHOD_4 ( ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( 1 ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( <unk> ) . METHOD_2 ( 1 , <unk> ) . METHOD_2 ( <unk> , <unk> ) . METHOD_2 ( <unk> , 1 ) . METHOD_3 ( 1 ) . build ( ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( 1 ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; METHOD_2 ( 1 , 1.0F ) . METHOD_2 ( "name" , 1.0F ) . METHOD_3 ( 1 ) . METHOD_4 ( ) ; assertEquals ( INT_4 , VAR_1 . METHOD_5 ( 1 ) . METHOD_6 ( ) ) ; assertEquals ( INT_4 , VAR_1 . METHOD_5 ( INT_4 ) . METHOD_6 ( ) ) ; assertEquals ( INT_4 , VAR_1 . METHOD_5 ( ) ) . METHOD_6 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , double value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final double VAR_3 = ( <unk> == null ) ? ( ( double ) ( <unk> . METHOD_2 ( ) ) ) : ( ( double ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , double value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final double VAR_3 = ( <unk> == null ) ? ( ( double ) ( <unk> . METHOD_2 ( ) ) ) : ( ( double ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Pred: static void METHOD_1 ( TYPE_1 startTime , TYPE_2 startTime , double VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final double VAR_3 = ( 1L == null ) ? ( ( double ) ( java.lang.Math.random ( ) ) ) : ( ( double ) ( java.lang.Math.random ( ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } }[0m
[31mExample #2[0m
Src : void METHOD_1 ( ) { if ( VAR_1 ) <unk> ( VAR_2 . <unk> , ( ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) ) ; VAR_5 . METHOD_2 ( ) ; }[0m
Trg : void METHOD_1 ( ) { if ( VAR_1 ) <unk> ( VAR_2 . <unk> , ( ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) ) ; VAR_5 . METHOD_2 ( ) ; }[0m
Pred: void METHOD_1 ( ) { if ( VAR_1 ) ( ( ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) ) ; VAR_5 . METHOD_2 ( ) ; }[0m
[31mExample #3[0m
Src : public void <unk> ( ) { TYPE_1 <unk> = new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( <unk> ) ; try { while ( true ) { java.lang.String line = VAR_2 . METHOD_2 ( ) ; if ( line != null ) { VAR_3 . METHOD_3 ( STRING_1 , VAR_4 , line ) ; } else { break ; } } } catch ( java.io.IOException <unk> ) { } }[0m
Trg : public void <unk> ( ) { TYPE_1 <unk> = new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( <unk> ) ; try { while ( true ) { java.lang.String line = VAR_2 . METHOD_2 ( ) ; if ( line != null ) { VAR_3 . <unk> ( STRING_1 , VAR_4 , line ) ; } else { break ; } } } catch ( java.io.IOException <unk> ) { } }[0m
Pred: public void start ( ) { TYPE_1 VAR_2 = new TYPE_2 ( ) ; try { while ( true ) { java.lang.String line = VAR_2 . METHOD_2 ( ) ; if ( line != null ) { VAR_3 . METHOD_3 ( STRING_1 , VAR_4 , line ) ; } else { break ; } } } catch ( java.io.IOException ( ) ) { } }[0m
[31mExample #4[0m
Src : boolean METHOD_1 ( ) { if ( VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) <unk> ( VAR_4 . <unk> , ( STRING_1 + ( VAR_5 ) ) ) ; VAR_6 = true ; VAR_1 = false ; return true ; } return false ; }[0m
Trg : boolean METHOD_1 ( ) { if ( VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) <unk> ( VAR_4 . <unk> , ( STRING_1 + ( VAR_5 ) ) ) ; VAR_6 = true ; VAR_1 = false ; return true ; } return false ; }[0m
Pred: boolean METHOD_1 ( ) { if ( VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) ( ( VAR_4 + ( VAR_5 ) ) ) ; VAR_6 = true ; VAR_1 = false ; return true ; } return false ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String <unk> , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , <unk> ) ; java.lang.Object value = VAR_4 < java.lang.Object > METHOD_2 ( TYPE_3 . <unk> ( VAR_1 . toString ( ) ) , <unk> ) ; VAR_2 . put ( VAR_3 , value ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String <unk> , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , <unk> ) ; java.lang.Object value = VAR_4 < java.lang.Object > getValue ( TYPE_3 . <unk> ( VAR_1 . toString ( ) ) , <unk> ) ; VAR_2 . put ( VAR_3 , value ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , VAR_2 ) ; java.lang.Object value = VAR_4 . METHOD_3 ( VAR_1 . toString ( ) ) ; VAR_2 . put ( VAR_3 , value ) ; }[0m
[31mExample #6[0m
Src : protected boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . info ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( VAR_1 , 0 , VAR_6 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( STRING_2 ) ; VAR_4 . info ( STRING_3 ) ; return true ; }[0m
Trg : protected boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . info ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( VAR_1 , 0 , VAR_6 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( STRING_2 ) ; VAR_4 . METHOD_5 ( STRING_3 ) ; return true ; }[0m
Pred: protected boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . info ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( VAR_1 , 0 , VAR_6 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( STRING_2 ) ; VAR_4 . info ( STRING_3 ) ; return true ; }[0m
[31mExample #7[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , false ) ; int VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 >= 0 ) { if ( VAR_4 ) <unk> ( TYPE_2 . <unk> , ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_1 ) ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; } }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , false ) ; int VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 >= 0 ) { if ( VAR_4 ) <unk> ( TYPE_2 . <unk> , ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_1 ) ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; } }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , false ) ; int VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 >= 0 ) { if ( VAR_4 ) VAR_2 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; } }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_4 ( <unk> . getName ( ) , STRING_1 ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_4 ( <unk> . getName ( ) , STRING_2 ) ) { METHOD_6 ( ) ; } }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( STRING_1 . equals ( <unk> . getName ( ) ) ) { METHOD_5 ( ) ; } else if ( STRING_2 . equals ( <unk> . getName ( ) ) ) { METHOD_6 ( ) ; } }[0m
Pred: public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( delete == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_4 ( ) . getName ( ) , STRING_1 ) ; METHOD_5 ( ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . <unk> ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . <unk> ( ) ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . <unk> ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . assertEquals ( VAR_5 , VAR_4 . METHOD_5 ( ) . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . trim ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . trim ( ) ) ) ) ; }[0m
[31mExample #10[0m
Src : public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . put ( VAR_2 . METHOD_5 ( ) , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . add ( VAR_2 ) ; return null ; }[0m
Trg : public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . put ( VAR_2 . getId ( ) , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . add ( VAR_2 ) ; return null ; }[0m
Pred: public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . put ( VAR_2 . METHOD_5 ( ) , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . add ( VAR_2 ) ; return null ; }[0m
[31mExample #11[0m
Src : protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . <unk> ( ) . <unk> ( ) , TYPE_1 . METHOD_6 ( ) , TYPE_1 . <unk> ( ) . METHOD_7 ( ) ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . <unk> ( ) . getId ( ) , TYPE_1 . METHOD_6 ( ) , TYPE_1 . <unk> ( ) . METHOD_7 ( ) ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . get ( ) . get ( ) , TYPE_1 . METHOD_6 ( ) ) ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { <unk> ( VAR_1 ) . <unk> ( VAR_2 ) . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 . <unk> class ) ) ; <unk> ( VAR_4 ) . <unk> ( VAR_2 ) . METHOD_4 ( TYPE_3 . <unk> ( ) ) ; VAR_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_1 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_8 , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { <unk> ( VAR_1 ) . <unk> ( VAR_2 ) . METHOD_2 ( TYPE_3 . <unk> ( ) ) ; <unk> ( VAR_4 ) . <unk> ( VAR_2 ) . METHOD_4 ( TYPE_3 . <unk> ( ) ) ; VAR_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_1 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_8 , VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; TYPE_1 . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_1 ) ; TYPE_1 . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_8 , VAR_4 ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) , new java.lang.Object ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) , new java.lang.Object ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . <unk> ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 . METHOD_2 ( VAR_1 class ) ; assertEquals ( ) ; TYPE_2 . METHOD_4 ( INT_4 , id , new TYPE_3 ( ) , new java.lang.Object ( ) ) ; assertEquals ( ) ; METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
[31mExample #14[0m
Src : protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_4 ( ) ; } } , VAR_2 . METHOD_5 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_6 ( ) ; } } , VAR_2 . METHOD_7 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { VAR_1 . <unk> ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_4 ( ) ; } } , VAR_2 . METHOD_5 ( ) ) ; VAR_1 . <unk> ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_6 ( ) ; } } , VAR_2 . METHOD_7 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 TYPE_2 ) { return delete . METHOD_4 ( ) ; } } , VAR_2 . METHOD_5 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 ) ) return ; } }[0m
[31mExample #15[0m
Src : public boolean METHOD_1 ( ) { try { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( <unk> . getId ( ) ) ) ; TYPE_2 <unk> = VAR_1 . get ( VAR_3 < java.lang.Integer > METHOD_4 ( VAR_4 ) , VAR_5 ) ; if ( <unk> . <unk> ( ) ) { return true ; } } catch ( java.lang.Exception <unk> ) { } return false ; }[0m
Trg : public boolean METHOD_1 ( ) { try { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( <unk> . getId ( ) ) ) ; TYPE_2 <unk> = VAR_1 . get ( VAR_3 < java.lang.Integer > getValue ( VAR_4 ) , VAR_5 ) ; if ( <unk> . <unk> ( ) ) { return true ; } } catch ( java.lang.Exception <unk> ) { } return false ; }[0m
Pred: public boolean METHOD_1 ( ) { try { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . ( ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( java.lang.Math.random ( ) ) ) ) ; TYPE_2 . = VAR_1 . get ( VAR_3 < java.lang.Integer > METHOD_4 ( VAR_4 ) , VAR_5 ) ; if ( java.lang.Math.random ( ) ) { return true ; } } catch ( java.lang.Exception ( ) ) { } return false ; }[0m
[31mExample #16[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( METHOD_3 ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . <unk> ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( getName ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . <unk> ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( METHOD_3 ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . intValue ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; }[0m
[31mExample #17[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( <unk> . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( VAR_1 , null ) ; TYPE_2 . METHOD_8 ( <unk> , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . <unk> ( <unk> . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( VAR_1 , null ) ; TYPE_2 . METHOD_8 ( <unk> , VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( "name" . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; }[0m
[31mExample #18[0m
Src : public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . METHOD_5 ( ) ) ; METHOD_6 ( <unk> ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . <unk> ( ) ) ; METHOD_6 ( <unk> ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( java.lang.Math.random ( ) . METHOD_4 ( ) , java.lang.Math.random ( ) ) ; METHOD_6 ( java.lang.Math.random ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; }[0m
[31mExample #19[0m
Src : private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { <unk> ( VAR_1 ) ; TYPE_1 . <unk> ( ) . METHOD_3 ( ) . add ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 < java.lang.Integer > METHOD_5 ( VAR_3 ) ) ) ; return false ; } return true ; }[0m
Trg : private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { <unk> ( VAR_1 ) ; TYPE_1 . <unk> ( ) . METHOD_3 ( ) . add ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 < java.lang.Integer > getValue ( VAR_3 ) ) ) ; return false ; } return true ; }[0m
Pred: private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) . METHOD_3 ( ) . add ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 < java.lang.Integer > METHOD_5 ( VAR_3 ) ) ) ; return false ; } return true ; }[0m
[31mExample #20[0m
Src : private void METHOD_1 ( ) { <unk> ( METHOD_2 ( ) . METHOD_3 ( ) ) . <unk> ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < <unk> > ( ) ; <unk> ( METHOD_4 ( ) . METHOD_5 ( ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_1 . METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( METHOD_2 ( ) . METHOD_3 ( ) ) . <unk> ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < <unk> > ( ) ; <unk> ( METHOD_4 ( ) . getId ( ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_1 . METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( METHOD_2 ( ) . METHOD_3 ( ) ) . append ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; assertEquals ( METHOD_4 ( ) . METHOD_5 ( ) ) . ( ( VAR_3 ) ) . intValue ( VAR_2 ) ; }[0m
[31mExample #21[0m
Src : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : VAR_3 . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . <unk> ( ) . METHOD_5 ( ) ) ) ; return ; case VAR_4 : METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( false ) ; return ; } super . METHOD_1 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : <unk> . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . <unk> ( ) . METHOD_5 ( ) ) ) ; return ; case VAR_4 : METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( false ) ; return ; } super . METHOD_1 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : VAR_3 . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . toString ( ) . METHOD_5 ( ) ) ) ; return ; case VAR_4 : METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( false ) ; return ; } super . METHOD_1 ( ) ; }[0m
[31mExample #22[0m
Src : protected void METHOD_1 ( ) { if ( ( TYPE_1 . <unk> ( ) . METHOD_2 ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . <unk> ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { if ( ( TYPE_1 . <unk> ( ) . <unk> ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . <unk> ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; }[0m
[31mExample #23[0m
Src : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( <unk> == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_6 ( <unk> . getName ( ) , STRING_1 ) ) { METHOD_7 ( ) ; } else if ( TYPE_1 . METHOD_6 ( <unk> . getName ( ) , STRING_2 ) ) { METHOD_8 ( ) ; } }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( <unk> == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( STRING_1 . equals ( <unk> . getName ( ) ) ) { METHOD_7 ( ) ; } else if ( STRING_2 . equals ( <unk> . getName ( ) ) ) { METHOD_8 ( ) ; } }[0m
Pred: public void METHOD_1 ( ) { super . METHOD_1 ( delete ) ; if ( delete == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_6 ( ) . getName ( ) , STRING_1 ) ) METHOD_7 ( ) ; }[0m
[31mExample #24[0m
Src : private void METHOD_1 ( <unk> <unk> ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } VAR_1 . put ( <unk> . METHOD_2 ( ) . toString ( ) , TYPE_1 . name ( ) ) ; }[0m
Trg : private void METHOD_1 ( <unk> <unk> ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } VAR_1 . put ( <unk> . <unk> ( ) . toString ( ) , TYPE_1 . name ( ) ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } VAR_1 . put ( var . METHOD_2 ( ) . toString ( ) , TYPE_1 . name ( ) ) ; }[0m
[31mExample #25[0m
Src : protected boolean METHOD_1 ( ) { boolean <unk> = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { <unk> ( VAR_1 ) ; <unk> = false ; } else if ( ( METHOD_3 ( ) ) && ( ( TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ) != ( VAR_2 ) ) ) { <unk> ( VAR_3 ) ; <unk> = false ; } return <unk> ; }[0m
Trg : protected boolean METHOD_1 ( ) { boolean <unk> = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { <unk> ( VAR_1 ) ; <unk> = false ; } else if ( ( METHOD_3 ( ) ) && ( ( TYPE_1 . METHOD_2 ( ) . <unk> ( ) ) != ( VAR_2 ) ) ) { <unk> ( VAR_3 ) ; <unk> = false ; } return <unk> ; }[0m
Pred: protected boolean METHOD_1 ( ) { boolean result = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { return ( VAR_1 ) ; } else if ( ( METHOD_3 ( ) ) && ( ( TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ) != ( VAR_2 ) ) ) { return ( VAR_3 ) ; }[0m
[31mExample #26[0m
Src : protected void METHOD_1 ( ) { <unk> <unk> = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . <unk> ( ) . METHOD_4 ( ) ) ; if ( <unk> != null ) { <unk> . METHOD_5 ( TYPE_2 . METHOD_6 ( <unk> . METHOD_7 ( ) , <unk> . METHOD_8 ( ) ) ) ; } TYPE_1 . METHOD_9 ( ) . METHOD_10 ( <unk> ) ; }[0m
Trg : protected void METHOD_1 ( ) { <unk> <unk> = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . <unk> ( ) . getId ( ) ) ; if ( <unk> != null ) { <unk> . METHOD_5 ( TYPE_2 . METHOD_6 ( <unk> . METHOD_7 ( ) , <unk> . METHOD_8 ( ) ) ) ; } TYPE_1 . METHOD_9 ( ) . METHOD_10 ( <unk> ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . get ( ) . METHOD_4 ( ) ) ; if ( delete != null ) { TYPE_2 . METHOD_5 ( TYPE_2 . METHOD_6 ( java.lang.Math.random ( ) ) ) ; } TYPE_1 . METHOD_9 ( ) . METHOD_10 ( delete ) ; }[0m
[31mExample #27[0m
Src : protected TYPE_1 . <unk> METHOD_1 ( <unk> VAR_1 , <unk> id , java.lang.String name , java.util.List < TYPE_1 . <unk> > VAR_2 ) { for ( TYPE_1 . <unk> <unk> : VAR_2 ) { if ( ( ( id != null ) && ( id . equals ( <unk> . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( <unk> . METHOD_2 ( ) ) ) ) ) { return <unk> ; } } return null ; }[0m
Trg : protected TYPE_1 . <unk> METHOD_1 ( <unk> VAR_1 , <unk> id , java.lang.String name , java.util.List < TYPE_1 . <unk> > VAR_2 ) { for ( TYPE_1 . <unk> <unk> : VAR_2 ) { if ( ( ( id != null ) && ( id . equals ( <unk> . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( <unk> . getName ( ) ) ) ) ) { return <unk> ; } } return null ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 id , java.lang.String name , java.util.List < TYPE_1 , TYPE_1 > VAR_2 ) { for ( TYPE_1 . TYPE_1 ) ; if ( ( ( id != null ) && ( id . equals ( f . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( var . METHOD_2 ( ) ) ) ) ) { return INT_7 ; } } return null ; }[0m
[31mExample #28[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . <unk> ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 . METHOD_2 ( VAR_1 class ) ; TYPE_2 . METHOD_4 ( INT_4 , id , new TYPE_3 ( ) ) ; assertEquals ( ) ; METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
---------------
================
Duration: 0:01:39.651576

Start conducting one shot learning experiment for Defects4J...
Top-1 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-3 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-5 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-10 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-50 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0

Top-1 accuracy on Defects4J for other edit representations: 0 / 12 = 0.0
Top-3 accuracy on Defects4J for other edit representations: 0 / 12 = 0.0
Top-5 accuracy on Defects4J for other edit representations: 1 / 12 = 0.08333333333333333
Top-10 accuracy on Defects4J for other edit representations: 1 / 12 = 0.08333333333333333
Top-50 accuracy on Defects4J for other edit representations: 1 / 12 = 0.08333333333333333
================
Correct Examples
================
================
Incorrect Examples
Class: ['condBlockExcAdd']
Golden example (False):
[31mExample #1[0m
Src : public static long METHOD_1 ( long VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case - 1 : return - VAR_1 ; case 0 : return 0L ; case 1 : return VAR_1 ; } long VAR_3 = VAR_1 * VAR_2 ; if ( VAR_3 / VAR_2 != VAR_1 ) { throw new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_2 ) ; } return VAR_3 ; }[0m
Trg : public static long METHOD_1 ( long VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case - 1 : if ( VAR_1 == VAR_4 ) { throw new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_2 ) ; } return - VAR_1 ; case 0 : return 0L ; case 1 : return VAR_1 ; } long VAR_3 = VAR_1 * VAR_2 ; if ( VAR_3 / VAR_2 != VAR_1 ) { throw new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_2 ) ; } return VAR_3 ; }[0m
Pred: public static long METHOD_1 ( long VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case - 1 : return - VAR_1 ; case 0 : return 0L ; case 1 : return VAR_1 ; } long VAR_3 = VAR_1 * VAR_2 ; if ( VAR_3 / VAR_2 != VAR_1 ) { throw new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_2 ) ; } return VAR_3 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public VAR_1 ( int VAR_2 , int VAR_3 ) { super ( VAR_2 , VAR_3 ) ; this . rows = VAR_2 ; this . VAR_4 = VAR_3 ; this . VAR_5 = new TYPE_1 ( 0.0 ) ; }[0m
Trg : public VAR_1 ( int VAR_2 , int VAR_3 ) { super ( VAR_2 , VAR_3 ) ; long VAR_6 = ( long ) VAR_2 ; long VAR_7 = ( long ) VAR_3 ; if ( VAR_6 * VAR_7 >= ( long ) VAR_8 ) { throw new TYPE_2 ( VAR_6 * VAR_7 , VAR_8 , false ) ; } this . rows = VAR_2 ; this . VAR_4 = VAR_3 ; this . VAR_5 = new TYPE_1 ( 0.0 ) ; }[0m
Pred: public VAR_1 ( int VAR_2 , int VAR_3 ) { super ( VAR_2 , VAR_3 ) ; this . rows = VAR_2 ; this . VAR_4 = VAR_3 ; this . VAR_5 = new TYPE_1 ( 0.0 ) ; }[0m
---------------
Class: ['condBlockOthersAdd']
Golden example (False):
[31mExample #1[0m
Src : void add ( String VAR_1 ) { METHOD_1 ( ) ; if ( VAR_1 . length ( ) == 0 ) { return ; } char c = VAR_1 . METHOD_2 ( 0 ) ; if ( ( METHOD_3 ( c ) || c == CHAR_1 ) && METHOD_3 ( METHOD_4 ( ) ) ) { append ( STRING_1 ) ; } append ( VAR_1 ) ; }[0m
Trg : void add ( String VAR_1 ) { METHOD_1 ( ) ; if ( VAR_1 . length ( ) == 0 ) { return ; } char c = VAR_1 . METHOD_2 ( 0 ) ; if ( ( METHOD_3 ( c ) || c == CHAR_1 ) && METHOD_3 ( METHOD_4 ( ) ) ) { append ( STRING_1 ) ; } else if ( c == CHAR_2 && METHOD_4 ( ) == CHAR_2 ) { append ( STRING_1 ) ; } append ( VAR_1 ) ; }[0m
Pred: void add ( java.lang.Boolean VAR_1 ) { METHOD_1 ( ) ; if ( VAR_1 . length ( ) == 0 ) { return ; } char c = VAR_1 . METHOD_2 ( 0 ) ; if ( ( METHOD_3 ( c ) || c == CHAR_1 ) && METHOD_3 ( METHOD_4 ( ) ) ) { append ( STRING_1 ) ; } append ( VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( ) throws TYPE_2 { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( this . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) { new TYPE_3 ( ) . METHOD_6 ( ) ; } return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) throws TYPE_2 { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }[0m
---------------
Class: ['condBlockRetAdd']
Golden example (False):
[31mExample #1[0m
Src : public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == null || VAR_2 == null ) { return VAR_1 == null && VAR_2 == null ; } else if ( METHOD_2 ( VAR_1 ) ) { return METHOD_2 ( VAR_2 ) && METHOD_3 ( VAR_1 , VAR_2 ) ; } else { return VAR_1 . equals ( VAR_2 ) ; } }[0m
Trg : public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } else if ( VAR_1 == null || VAR_2 == null ) { return VAR_1 == null && VAR_2 == null ; } else if ( METHOD_2 ( VAR_1 ) ) { return METHOD_2 ( VAR_2 ) && METHOD_3 ( VAR_1 , VAR_2 ) ; } else { return VAR_1 . equals ( VAR_2 ) ; } }[0m
Pred: public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == null ) { return VAR_1 . equals ( VAR_2 ) ; } else { return VAR_1 . equals ( VAR_2 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 answer ( TYPE_2 VAR_1 ) throws TYPE_3 { return VAR_1 . METHOD_1 ( ) ; }[0m
Trg : public TYPE_1 answer ( TYPE_2 VAR_1 ) throws TYPE_3 { if ( TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { return new TYPE_5 ( ) . answer ( VAR_1 ) ; } return VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public TYPE_1 answer ( TYPE_2 VAR_1 ) throws TYPE_3 { return VAR_1 . METHOD_1 ( ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 add ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_1 ( VAR_1 ) ; return METHOD_2 ( VAR_2 + VAR_1 . METHOD_3 ( ) , VAR_3 + VAR_1 . METHOD_4 ( ) ) ; }[0m
Trg : public TYPE_1 add ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_1 ( VAR_1 ) ; if ( VAR_4 || VAR_5 ) { return VAR_6 ; } return METHOD_2 ( VAR_2 + VAR_1 . METHOD_3 ( ) , VAR_3 + VAR_1 . METHOD_4 ( ) ) ; }[0m
Pred: public TYPE_1 add ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_1 ( VAR_1 ) ; return METHOD_2 ( VAR_2 + VAR_1 . METHOD_3 ( ) , VAR_3 + VAR_1 . METHOD_4 ( ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { for ( String VAR_2 : VAR_1 . METHOD_3 ( ) ) { TYPE_2 VAR_3 = VAR_1 . METHOD_4 ( VAR_2 ) ; if ( ! METHOD_5 ( VAR_2 ) ) { TYPE_2 VAR_4 = VAR_3 ; if ( ! METHOD_6 ( VAR_2 ) ) { VAR_4 = METHOD_7 ( VAR_5 ) . METHOD_8 ( VAR_3 ) ; } METHOD_9 ( VAR_2 , VAR_4 , null ) ; } } } }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( METHOD_10 ( ) ) { return ; } if ( VAR_1 . METHOD_2 ( ) ) { for ( String VAR_2 : VAR_1 . METHOD_3 ( ) ) { TYPE_2 VAR_3 = VAR_1 . METHOD_4 ( VAR_2 ) ; if ( ! METHOD_5 ( VAR_2 ) ) { TYPE_2 VAR_4 = VAR_3 ; if ( ! METHOD_6 ( VAR_2 ) ) { VAR_4 = METHOD_7 ( VAR_5 ) . METHOD_8 ( VAR_3 ) ; } METHOD_9 ( VAR_2 , VAR_4 , null ) ; } } } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { for ( case VAR_2 : VAR_1 . METHOD_3 ( ) ) { TYPE_2 VAR_3 = VAR_1 . METHOD_4 ( VAR_2 ) ; if ( ! METHOD_5 ( VAR_2 ) ) { TYPE_2 VAR_4 = VAR_3 ; if ( ! METHOD_6 ( VAR_2 ) ) { VAR_4 = METHOD_7 ( VAR_5 ) . METHOD_8 ( VAR_3 ) ; } METHOD_9 ( VAR_2 , VAR_4 , null ) ; } } } }[0m
[31mExample #4[0m
Src : boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) { return false ; } for ( TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 != null ; VAR_2 = VAR_2 . METHOD_4 ( ) ) { if ( VAR_3 ) { break ; } else if ( VAR_4 ) { return false ; } } return true ; }[0m
Trg : boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) { return false ; } for ( TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 != null ; VAR_2 = VAR_2 . METHOD_4 ( ) ) { if ( VAR_3 ) { if ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) != VAR_5 ) { return false ; } break ; } else if ( VAR_4 ) { return false ; } } return true ; }[0m
Pred: boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) { return false ; } for ( TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 != null ; VAR_2 = VAR_2 . METHOD_4 ( ) ) { if ( VAR_3 ) { break ; } else if ( VAR_4 ) { return false ; } } return true ; }[0m
---------------
Class: ['notClassified']
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 [ ] METHOD_1 ( int VAR_1 ) throws TYPE_2 { if ( VAR_1 <= 0 ) { throw new TYPE_2 ( VAR_2 , VAR_1 ) ; } final TYPE_1 [ ] out = ( TYPE_1 [ ] ) TYPE_3 . METHOD_2 ( VAR_3 . get ( 0 ) . getClass ( ) , VAR_1 ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { out [ i ] = METHOD_1 ( ) ; } return out ; }[0m
Trg : public TYPE_4 [ ] METHOD_1 ( int VAR_1 ) throws TYPE_2 { if ( VAR_1 <= 0 ) { throw new TYPE_2 ( VAR_2 , VAR_1 ) ; } final TYPE_4 [ ] out = new TYPE_4 [ VAR_1 ] ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { out [ i ] = METHOD_1 ( ) ; } return out ; }[0m
Pred: public TYPE_1 [ ] METHOD_1 ( int VAR_1 ) throws TYPE_2 { if ( VAR_1 <= 0 ) { throw new TYPE_2 ( VAR_2 , VAR_1 ) ; } final TYPE_1 [ ] out = ( TYPE_1 [ ] ) TYPE_3 . METHOD_2 ( VAR_3 . get ( 0 ) . getClass ( ) , VAR_1 ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { out [ i ] = METHOD_1 ( ) ; } return out ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static double METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 ) { int sum = 0 ; for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { final int VAR_3 = VAR_1 [ i ] - VAR_2 [ i ] ; sum += VAR_3 * VAR_3 ; } return TYPE_1 . METHOD_2 ( sum ) ; }[0m
Trg : public static double METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 ) { double sum = 0 ; for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { final double VAR_3 = VAR_1 [ i ] - VAR_2 [ i ] ; sum += VAR_3 * VAR_3 ; } return TYPE_1 . METHOD_2 ( sum ) ; }[0m
Pred: public static double METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 ) { int sum = 0 ; for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { final int VAR_3 = VAR_1 [ i ] - VAR_2 [ i ] ; sum += VAR_3 * VAR_3 ; } return TYPE_1 . METHOD_2 ( sum ) ; }[0m
---------------
Class: ['singleLine']
Golden example (False):
[31mExample #1[0m
Src : static float METHOD_1 ( String VAR_1 ) { return METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 ) ) ; }[0m
Trg : static int METHOD_1 ( String VAR_1 ) { return METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 ) ) ; }[0m
Pred: static float METHOD_1 ( float VAR_1 ) { return METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 data ) { TYPE_2 error = null ; VAR_1 . start ( ) ; while ( VAR_1 . METHOD_2 ( ) ) { try { VAR_2 . METHOD_1 ( data ) ; if ( VAR_3 ) { return ; } else { error = null ; } } catch ( TYPE_3 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } catch ( TYPE_4 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } } if ( error != null ) { throw error ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 data ) { TYPE_2 error = null ; VAR_1 . start ( ) ; while ( VAR_1 . METHOD_2 ( ) ) { try { VAR_2 . METHOD_1 ( data ) ; if ( VAR_3 ) { return ; } else { error = null ; } } catch ( TYPE_3 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } catch ( TYPE_2 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } } if ( error != null ) { throw error ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 data ) { TYPE_2 error = null ; VAR_1 . start ( ) ; while ( VAR_1 . METHOD_2 ( ) ) { try { VAR_2 . METHOD_1 ( data ) ; if ( VAR_3 ) { return ; } else { error = null ; } } catch ( TYPE_3 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } catch ( TYPE_4 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } } if ( error != null ) { throw error ; } }[0m
[31mExample #2[0m
Src : private double METHOD_1 ( final double VAR_1 , final int VAR_2 , final int VAR_3 ) throws TYPE_1 , TYPE_2 { final int VAR_4 = VAR_2 * VAR_3 ; final double VAR_5 = VAR_4 / FLOAT_1 ; final double VAR_6 = VAR_4 * ( VAR_2 + VAR_3 + 1 ) / FLOAT_2 ; final double VAR_7 = ( VAR_1 - VAR_5 ) / TYPE_3 . METHOD_2 ( VAR_6 ) ; final TYPE_4 VAR_8 = new TYPE_4 ( 0 , 1 ) ; return INT_1 * VAR_8 . METHOD_3 ( VAR_7 ) ; }[0m
Trg : private double METHOD_1 ( final double VAR_1 , final int VAR_2 , final int VAR_3 ) throws TYPE_1 , TYPE_2 { final double VAR_4 = VAR_2 * VAR_3 ; final double VAR_5 = VAR_4 / FLOAT_1 ; final double VAR_6 = VAR_4 * ( VAR_2 + VAR_3 + 1 ) / FLOAT_2 ; final double VAR_7 = ( VAR_1 - VAR_5 ) / TYPE_3 . METHOD_2 ( VAR_6 ) ; final TYPE_4 VAR_8 = new TYPE_4 ( 0 , 1 ) ; return INT_1 * VAR_8 . METHOD_3 ( VAR_7 ) ; }[0m
Pred: private double METHOD_1 ( final double VAR_1 , final int VAR_2 , final int VAR_3 ) throws TYPE_1 , TYPE_2 { final int VAR_4 = VAR_2 * VAR_3 ; final double VAR_6 = VAR_4 * ( VAR_2 + VAR_3 + 1 ) / FLOAT_2 ; final double VAR_7 = ( VAR_1 - VAR_5 ) / TYPE_3 . METHOD_2 ( VAR_6 ) ; final TYPE_4 VAR_8 = new TYPE_4 ( 0 , 1 ) ; return INT_1 * VAR_8 . METHOD_3 ( VAR_7 ) ; }[0m
---------------
Class: ['wrapsIf']
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { if ( this . VAR_1 != VAR_2 && this . VAR_1 != VAR_3 ) { throw new TYPE_1 ( STRING_1 ) ; } VAR_4 = TYPE_2 . METHOD_2 ( ) ; this . VAR_1 = VAR_5 ; }[0m
Trg : public void METHOD_1 ( ) { if ( this . VAR_1 != VAR_2 && this . VAR_1 != VAR_3 ) { throw new TYPE_1 ( STRING_1 ) ; } if ( this . VAR_1 == VAR_2 ) { VAR_4 = TYPE_2 . METHOD_2 ( ) ; } this . VAR_1 = VAR_5 ; }[0m
Pred: public void METHOD_1 ( ) { if ( this . VAR_1 != VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; } VAR_4 = TYPE_2 . METHOD_2 ( ) ; this . VAR_1 = VAR_5 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static boolean equals ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } if ( VAR_1 == null || VAR_2 == null ) { return false ; } return VAR_1 . equals ( VAR_2 ) ; }[0m
Trg : public static boolean equals ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } if ( VAR_1 == null || VAR_2 == null ) { return false ; } if ( VAR_1 instanceof String && VAR_2 instanceof String ) { return VAR_1 . equals ( VAR_2 ) ; } return TYPE_2 . METHOD_1 ( VAR_1 , false , 0 , VAR_2 , 0 , TYPE_3 . METHOD_2 ( VAR_1 . length ( ) , VAR_2 . length ( ) ) ) ; }[0m
Pred: public static boolean equals ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } if ( VAR_1 == null ) { return false ; } return VAR_1 . equals ( VAR_2 ) ; }[0m
---------------
Class: ['wrapsIfElse']
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_1 ( ( TYPE_2 < ? > ) VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 < ? > ) { METHOD_1 ( ( TYPE_2 < ? > ) VAR_1 ) ; } else { throw new TYPE_3 ( STRING_1 ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_1 ( ( TYPE_2 < ? > ) VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 field ) { TYPE_3 VAR_1 = field . METHOD_1 ( ) ; if ( VAR_1 != null && VAR_1 instanceof TYPE_4 ) { TYPE_3 VAR_2 = ( ( TYPE_4 ) VAR_1 ) . METHOD_2 ( ) [ 0 ] ; return ( TYPE_1 ) VAR_2 ; } return VAR_3 class ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 field ) { TYPE_3 VAR_1 = field . METHOD_1 ( ) ; if ( VAR_1 != null && VAR_1 instanceof TYPE_4 ) { TYPE_3 VAR_2 = ( ( TYPE_4 ) VAR_1 ) . METHOD_2 ( ) [ 0 ] ; if ( VAR_2 instanceof TYPE_1 ) { return ( TYPE_1 ) VAR_2 ; } else if ( VAR_2 instanceof TYPE_4 ) { return ( TYPE_1 ) ( ( TYPE_4 ) VAR_2 ) . METHOD_3 ( ) ; } } return VAR_3 class ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 field ) { TYPE_3 VAR_1 = field . METHOD_1 ( ) ; if ( VAR_1 != null ) { TYPE_3 VAR_2 = ( ( TYPE_4 ) VAR_1 ) . METHOD_2 ( ) [ 0 ] ; return ( TYPE_1 ) VAR_2 ; } return VAR_3 class ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( final int x ) { return METHOD_2 ( x ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( final int x ) { if ( x >= 0 && x < VAR_1 ) { return METHOD_2 ( x ) ; } else { return METHOD_1 ( METHOD_3 ( x ) ) ; } }[0m
Pred: public TYPE_1 METHOD_1 ( final int x ) { return METHOD_2 ( x ) ; }[0m
---------------
================
Duration: 0:00:08.598702

Starting long experiments
Start conducting accuracy calculation experiment for Test dataset all...
BUG FIXING ACCURACY
Top-1 accuracy: 91 / 6545 = 0.013903743315508022
Top-3 accuracy: 516 / 6545 = 0.07883880825057296
Top-5 accuracy: 711 / 6545 = 0.10863254392666158
Top-10 accuracy: 984 / 6545 = 0.15034377387318565
Top-50 accuracy: 1497 / 6545 = 0.2287242169595111
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 91 / 6545 = 0.013903743315508022
Top-3 accuracy: 516 / 6545 = 0.07883880825057296
Top-5 accuracy: 711 / 6545 = 0.10863254392666158
Top-10 accuracy: 984 / 6545 = 0.15034377387318565
Top-50 accuracy: 1497 / 6545 = 0.2287242169595111
Duration: 1:03:28.663489

Starting all Tufano variations experiments
Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 300 = 0.0
Top-3 accuracy: 25 / 300 = 0.08333333333333333
Top-5 accuracy: 37 / 300 = 0.12333333333333334
Top-10 accuracy: 48 / 300 = 0.16
Top-50 accuracy: 76 / 300 = 0.25333333333333335
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 0 / 300 = 0.0
Top-3 accuracy: 25 / 300 = 0.08333333333333333
Top-5 accuracy: 37 / 300 = 0.12333333333333334
Top-10 accuracy: 48 / 300 = 0.16
Top-50 accuracy: 76 / 300 = 0.25333333333333335
Duration: 0:03:10.460950

Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 17 / 300 = 0.056666666666666664
Top-5 accuracy: 29 / 300 = 0.09666666666666666
Top-10 accuracy: 43 / 300 = 0.14333333333333334
Top-50 accuracy: 56 / 300 = 0.18666666666666668
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 17 / 300 = 0.056666666666666664
Top-5 accuracy: 29 / 300 = 0.09666666666666666
Top-10 accuracy: 43 / 300 = 0.14333333333333334
Top-50 accuracy: 56 / 300 = 0.18666666666666668
Duration: 0:03:09.652432

Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 25 / 300 = 0.08333333333333333
Top-5 accuracy: 35 / 300 = 0.11666666666666667
Top-10 accuracy: 55 / 300 = 0.18333333333333332
Top-50 accuracy: 71 / 300 = 0.23666666666666666
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 25 / 300 = 0.08333333333333333
Top-5 accuracy: 35 / 300 = 0.11666666666666667
Top-10 accuracy: 55 / 300 = 0.18333333333333332
Top-50 accuracy: 71 / 300 = 0.23666666666666666
Duration: 0:03:11.691238

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 4 / 300 = 0.013333333333333334
Top-3 accuracy: 30 / 300 = 0.1
Top-5 accuracy: 39 / 300 = 0.13
Top-10 accuracy: 53 / 300 = 0.17666666666666667
Top-50 accuracy: 74 / 300 = 0.24666666666666667
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 4 / 300 = 0.013333333333333334
Top-3 accuracy: 30 / 300 = 0.1
Top-5 accuracy: 39 / 300 = 0.13
Top-10 accuracy: 53 / 300 = 0.17666666666666667
Top-50 accuracy: 74 / 300 = 0.24666666666666667
Duration: 0:03:02.280444

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 21 / 300 = 0.07
Top-5 accuracy: 28 / 300 = 0.09333333333333334
Top-10 accuracy: 41 / 300 = 0.13666666666666666
Top-50 accuracy: 59 / 300 = 0.19666666666666666
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 21 / 300 = 0.07
Top-5 accuracy: 28 / 300 = 0.09333333333333334
Top-10 accuracy: 41 / 300 = 0.13666666666666666
Top-50 accuracy: 59 / 300 = 0.19666666666666666
Duration: 0:03:02.668268

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 7 / 300 = 0.023333333333333334
Top-3 accuracy: 22 / 300 = 0.07333333333333333
Top-5 accuracy: 29 / 300 = 0.09666666666666666
Top-10 accuracy: 39 / 300 = 0.13
Top-50 accuracy: 63 / 300 = 0.21
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 7 / 300 = 0.023333333333333334
Top-3 accuracy: 22 / 300 = 0.07333333333333333
Top-5 accuracy: 29 / 300 = 0.09666666666666666
Top-10 accuracy: 39 / 300 = 0.13
Top-50 accuracy: 63 / 300 = 0.21
Duration: 0:03:03.356722

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 7 / 300 = 0.023333333333333334
Top-5 accuracy: 13 / 300 = 0.043333333333333335
Top-10 accuracy: 23 / 300 = 0.07666666666666666
Top-50 accuracy: 32 / 300 = 0.10666666666666667
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 7 / 300 = 0.023333333333333334
Top-5 accuracy: 13 / 300 = 0.043333333333333335
Top-10 accuracy: 23 / 300 = 0.07666666666666666
Top-50 accuracy: 32 / 300 = 0.10666666666666667
Duration: 0:03:11.433501

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 300 = 0.0
Top-3 accuracy: 6 / 300 = 0.02
Top-5 accuracy: 12 / 300 = 0.04
Top-10 accuracy: 22 / 300 = 0.07333333333333333
Top-50 accuracy: 31 / 300 = 0.10333333333333333
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 0 / 300 = 0.0
Top-3 accuracy: 6 / 300 = 0.02
Top-5 accuracy: 12 / 300 = 0.04
Top-10 accuracy: 22 / 300 = 0.07333333333333333
Top-50 accuracy: 31 / 300 = 0.10333333333333333
Duration: 0:03:12.826789

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 300 = 0.0
Top-3 accuracy: 4 / 300 = 0.013333333333333334
Top-5 accuracy: 8 / 300 = 0.02666666666666667
Top-10 accuracy: 14 / 300 = 0.04666666666666667
Top-50 accuracy: 28 / 300 = 0.09333333333333334
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 0 / 300 = 0.0
Top-3 accuracy: 4 / 300 = 0.013333333333333334
Top-5 accuracy: 8 / 300 = 0.02666666666666667
Top-10 accuracy: 14 / 300 = 0.04666666666666667
Top-50 accuracy: 28 / 300 = 0.09333333333333334
Duration: 0:03:11.208587

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 8 / 300 = 0.02666666666666667
Top-5 accuracy: 14 / 300 = 0.04666666666666667
Top-10 accuracy: 18 / 300 = 0.06
Top-50 accuracy: 33 / 300 = 0.11
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 8 / 300 = 0.02666666666666667
Top-5 accuracy: 14 / 300 = 0.04666666666666667
Top-10 accuracy: 18 / 300 = 0.06
Top-50 accuracy: 33 / 300 = 0.11
Duration: 0:03:04.197268

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 6 / 300 = 0.02
Top-5 accuracy: 11 / 300 = 0.03666666666666667
Top-10 accuracy: 15 / 300 = 0.05
Top-50 accuracy: 26 / 300 = 0.08666666666666667
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 6 / 300 = 0.02
Top-5 accuracy: 11 / 300 = 0.03666666666666667
Top-10 accuracy: 15 / 300 = 0.05
Top-50 accuracy: 26 / 300 = 0.08666666666666667
Duration: 0:03:03.381090

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 11 / 300 = 0.03666666666666667
Top-5 accuracy: 15 / 300 = 0.05
Top-10 accuracy: 16 / 300 = 0.05333333333333334
Top-50 accuracy: 21 / 300 = 0.07
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 11 / 300 = 0.03666666666666667
Top-5 accuracy: 15 / 300 = 0.05
Top-10 accuracy: 16 / 300 = 0.05333333333333334
Top-50 accuracy: 21 / 300 = 0.07
Duration: 0:03:05.584310

Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 28 / 5835 = 0.004798628963153384
Top-3 accuracy: 381 / 5835 = 0.06529562982005141
Top-5 accuracy: 563 / 5835 = 0.09648671808054841
Top-10 accuracy: 834 / 5835 = 0.1429305912596401
Top-50 accuracy: 1230 / 5835 = 0.21079691516709512
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 28 / 5835 = 0.004798628963153384
Top-3 accuracy: 381 / 5835 = 0.06529562982005141
Top-5 accuracy: 563 / 5835 = 0.09648671808054841
Top-10 accuracy: 834 / 5835 = 0.1429305912596401
Top-50 accuracy: 1230 / 5835 = 0.21079691516709512
Duration: 0:59:17.523828

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 91 / 6545 = 0.013903743315508022
Top-3 accuracy: 516 / 6545 = 0.07883880825057296
Top-5 accuracy: 711 / 6545 = 0.10863254392666158
Top-10 accuracy: 984 / 6545 = 0.15034377387318565
Top-50 accuracy: 1497 / 6545 = 0.2287242169595111
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 91 / 6545 = 0.013903743315508022
Top-3 accuracy: 516 / 6545 = 0.07883880825057296
Top-5 accuracy: 711 / 6545 = 0.10863254392666158
Top-10 accuracy: 984 / 6545 = 0.15034377387318565
Top-50 accuracy: 1497 / 6545 = 0.2287242169595111
Duration: 1:08:34.678004

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 1077 = 0.0009285051067780873
Top-3 accuracy: 19 / 1077 = 0.017641597028783658
Top-5 accuracy: 39 / 1077 = 0.036211699164345405
Top-10 accuracy: 54 / 1077 = 0.05013927576601671
Top-50 accuracy: 83 / 1077 = 0.07706592386258125
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 1077 = 0.0009285051067780873
Top-3 accuracy: 19 / 1077 = 0.017641597028783658
Top-5 accuracy: 39 / 1077 = 0.036211699164345405
Top-10 accuracy: 54 / 1077 = 0.05013927576601671
Top-50 accuracy: 83 / 1077 = 0.07706592386258125
Duration: 0:10:55.956891

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 1098 = 0.0009107468123861566
Top-3 accuracy: 21 / 1098 = 0.01912568306010929
Top-5 accuracy: 28 / 1098 = 0.025500910746812388
Top-10 accuracy: 30 / 1098 = 0.0273224043715847
Top-50 accuracy: 44 / 1098 = 0.04007285974499089
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 1098 = 0.0009107468123861566
Top-3 accuracy: 21 / 1098 = 0.01912568306010929
Top-5 accuracy: 28 / 1098 = 0.025500910746812388
Top-10 accuracy: 30 / 1098 = 0.0273224043715847
Top-50 accuracy: 44 / 1098 = 0.04007285974499089
Duration: 0:10:39.018113

