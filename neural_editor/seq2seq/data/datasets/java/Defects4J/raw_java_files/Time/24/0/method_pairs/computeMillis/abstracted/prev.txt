public long METHOD_1 ( boolean VAR_1 , String text ) { TYPE_1 [ ] VAR_2 = VAR_3 ; int count = VAR_4 ; if ( VAR_5 ) { VAR_3 = VAR_2 = ( TYPE_1 [ ] ) VAR_3 . METHOD_2 ( ) ; VAR_5 = false ; } METHOD_3 ( VAR_2 , count ) ; if ( count > 0 ) { TYPE_2 VAR_6 = TYPE_3 . METHOD_4 ( ) . METHOD_5 ( VAR_7 ) ; TYPE_2 VAR_8 = TYPE_3 . METHOD_6 ( ) . METHOD_5 ( VAR_7 ) ; TYPE_2 first = VAR_2 [ 0 ] . VAR_9 . METHOD_7 ( ) ; if ( METHOD_8 ( first , VAR_6 ) >= 0 && METHOD_8 ( first , VAR_8 ) <= 0 ) { METHOD_9 ( TYPE_4 . METHOD_10 ( ) , VAR_10 ) ; return METHOD_1 ( VAR_1 , text ) ; } } long VAR_11 = VAR_12 ; try { for ( int i = 0 ; i < count ; i ++ ) { VAR_11 = VAR_2 [ i ] . set ( VAR_11 , VAR_1 ) ; } } catch ( TYPE_5 VAR_13 ) { if ( text != null ) { VAR_13 . METHOD_11 ( STRING_1 + text + CHAR_1 ) ; } throw VAR_13 ; } if ( VAR_14 == null ) { VAR_11 -= VAR_15 ; } else { int offset = VAR_14 . METHOD_12 ( VAR_11 ) ; VAR_11 -= offset ; if ( offset != VAR_14 . METHOD_13 ( VAR_11 ) ) { String message = STRING_2 + VAR_14 + CHAR_2 ; if ( text != null ) { message = STRING_1 + text + STRING_3 + message ; } throw new TYPE_6 ( message ) ; } } return VAR_11 ; }