public static TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) throws TYPE_2 { if ( VAR_1 == 0 && VAR_2 == 0 ) { return VAR_3 ; } if ( VAR_1 < - INT_1 || VAR_1 > INT_1 ) { throw new TYPE_2 ( STRING_1 + VAR_1 ) ; } if ( VAR_2 < - INT_2 || VAR_2 > INT_2 ) { throw new TYPE_2 ( STRING_2 + VAR_2 ) ; } if ( VAR_1 > 0 && VAR_2 < 0 ) { throw new TYPE_2 ( STRING_4 + VAR_2 ) ; } int offset = 0 ; try { int VAR_4 = VAR_1 * INT_3 ; if ( VAR_4 < 0 ) { VAR_2 = VAR_4 - TYPE_5 . METHOD_4 ( VAR_2 ) ; } else { VAR_2 = VAR_4 + VAR_2 ; } offset = TYPE_3 . METHOD_2 ( VAR_2 , VAR_5 ) ; } catch ( TYPE_4 VAR_6 ) { throw new TYPE_2 ( STRING_3 ) ; } return METHOD_3 ( offset ) ; }