private static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 node , TYPE_2 VAR_2 ) { TYPE_1 VAR_3 = node . METHOD_2 ( ) ; if ( VAR_3 == null || VAR_3 . METHOD_3 ( ) || ( VAR_2 != null && node == VAR_4 ) ) { return null ; } switch ( VAR_3 . getType ( ) ) { case VAR_5 : return METHOD_1 ( VAR_1 , VAR_3 , VAR_2 ) ; case VAR_6 : case VAR_7 : if ( VAR_3 . METHOD_4 ( ) != null ) { if ( VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) ) { return VAR_3 . METHOD_4 ( ) . METHOD_6 ( ) . METHOD_4 ( ) ; } else if ( VAR_3 . METHOD_4 ( ) . METHOD_7 ( ) ) { return VAR_3 . METHOD_4 ( ) . METHOD_6 ( ) ; } else { TYPE_3 . METHOD_8 ( false , STRING_1 ) ; } } else { return METHOD_1 ( VAR_1 , VAR_3 , VAR_2 ) ; } break ; case VAR_8 : if ( TYPE_4 . METHOD_9 ( VAR_3 ) ) { return VAR_3 ; } else { return VAR_3 . METHOD_6 ( ) . METHOD_4 ( ) . METHOD_4 ( ) ; } case VAR_9 : case VAR_10 : return VAR_3 ; case VAR_11 : if ( VAR_3 . METHOD_6 ( ) == node ) { if ( TYPE_4 . METHOD_10 ( VAR_3 ) ) { return METHOD_11 ( VAR_3 . METHOD_12 ( ) ) ; } else { return METHOD_1 ( VAR_1 , VAR_3 , VAR_2 ) ; } } else if ( TYPE_4 . METHOD_13 ( VAR_3 ) == node ) { if ( TYPE_4 . METHOD_10 ( VAR_3 ) ) { return METHOD_11 ( node . METHOD_4 ( ) ) ; } else { return METHOD_1 ( VAR_1 , VAR_3 , VAR_2 ) ; } } else if ( VAR_3 . METHOD_12 ( ) == node ) { if ( VAR_2 != null ) { for ( TYPE_1 VAR_12 : VAR_13 . get ( VAR_3 ) ) { VAR_2 . METHOD_14 ( VAR_1 , VAR_14 , VAR_12 ) ; } } return METHOD_1 ( VAR_1 , VAR_3 , VAR_2 ) ; } } TYPE_1 VAR_15 = node . METHOD_4 ( ) ; while ( VAR_15 != null && VAR_15 . METHOD_3 ( ) ) { VAR_15 = VAR_15 . METHOD_4 ( ) ; } if ( VAR_15 != null ) { return METHOD_11 ( VAR_15 ) ; } else { return METHOD_1 ( VAR_1 , VAR_3 , VAR_2 ) ; } }