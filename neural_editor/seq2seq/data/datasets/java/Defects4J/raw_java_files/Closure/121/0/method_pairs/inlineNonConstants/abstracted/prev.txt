private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , boolean VAR_3 ) { int VAR_4 = VAR_5 . size ( ) ; TYPE_3 VAR_6 = VAR_5 . get ( 0 ) ; TYPE_3 init = VAR_2 . METHOD_2 ( ) ; int VAR_7 = ( VAR_6 == init ) ? INT_1 : INT_2 ; if ( VAR_4 > 1 && METHOD_3 ( VAR_1 , VAR_2 ) ) { TYPE_4 value ; if ( init != null ) { value = init . METHOD_4 ( ) ; } else { TYPE_4 VAR_8 = VAR_6 . METHOD_5 ( ) ; value = TYPE_5 . METHOD_6 ( VAR_8 ) ; } TYPE_6 . METHOD_7 ( value ) ; METHOD_8 ( VAR_1 , value , VAR_5 ) ; VAR_9 . add ( VAR_1 ) ; } else if ( VAR_4 == VAR_7 ) { TYPE_3 VAR_10 = VAR_5 . get ( VAR_7 - 1 ) ; if ( METHOD_9 ( VAR_6 , init , VAR_10 ) ) { METHOD_10 ( VAR_1 , VAR_6 , init , VAR_10 ) ; VAR_9 . add ( VAR_1 ) ; } } else if ( VAR_6 != init && VAR_4 == INT_1 ) { if ( METHOD_11 ( VAR_6 ) && METHOD_12 ( init ) ) { TYPE_4 value = init . METHOD_4 ( ) ; TYPE_6 . METHOD_7 ( value ) ; METHOD_8 ( VAR_1 , value , VAR_5 ) ; VAR_9 . add ( VAR_1 ) ; } } if ( ! VAR_3 && ! VAR_9 . contains ( VAR_1 ) && VAR_2 . METHOD_13 ( ) && VAR_2 . METHOD_14 ( ) ) { TYPE_7 < TYPE_3 > VAR_11 = VAR_5 ; for ( int i = 1 ; i < VAR_11 . size ( ) ; i ++ ) { TYPE_4 VAR_12 = VAR_11 . get ( i ) . METHOD_5 ( ) ; if ( VAR_13 . METHOD_15 ( VAR_12 ) ) { TYPE_8 VAR_14 = VAR_13 . get ( VAR_12 ) ; if ( ! VAR_9 . contains ( VAR_15 ) && ! METHOD_16 ( VAR_15 ) ) { TYPE_3 VAR_16 ; VAR_16 = VAR_17 . METHOD_2 ( ) ; TYPE_4 value = VAR_16 . METHOD_4 ( ) ; TYPE_6 . METHOD_7 ( value ) ; METHOD_8 ( VAR_15 , value , VAR_18 ) ; VAR_9 . add ( VAR_15 ) ; } } } } }