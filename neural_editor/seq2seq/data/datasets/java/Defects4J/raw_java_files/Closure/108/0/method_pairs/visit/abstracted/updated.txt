public void METHOD_1 ( TYPE_1 t , TYPE_2 n , TYPE_2 VAR_1 ) { if ( METHOD_2 ( n ) ) { METHOD_3 ( t , n , n . METHOD_4 ( ) ) ; } if ( t . METHOD_5 ( ) < INT_1 ) { return ; } int type = n . getType ( ) ; TYPE_3 VAR_2 = null ; if ( type == VAR_3 ) { String name = n . getString ( ) ; TYPE_3 VAR_4 = t . METHOD_6 ( ) . METHOD_7 ( n . getString ( ) ) ; if ( VAR_4 != null && VAR_4 == VAR_5 . get ( name ) ) { VAR_2 = VAR_4 ; } } if ( t . METHOD_5 ( ) == INT_1 ) { if ( VAR_2 != null && TYPE_4 . METHOD_8 ( n ) ) { if ( VAR_2 . METHOD_9 ( ) == n ) { VAR_6 . add ( n ) ; return ; } else { METHOD_10 ( t , n , VAR_7 , n . getString ( ) ) ; } } if ( type == VAR_8 ) { METHOD_10 ( t , n , VAR_9 ) ; } else if ( type == VAR_10 ) { METHOD_10 ( t , n , VAR_11 ) ; } else if ( type == VAR_12 ) { METHOD_10 ( t , n , VAR_13 ) ; } } if ( t . METHOD_5 ( ) >= INT_1 ) { if ( VAR_2 != null ) { VAR_14 . add ( new TYPE_5 ( VAR_2 , n ) ) ; } TYPE_6 info = n . METHOD_11 ( ) ; if ( info != null && ! VAR_15 . contains ( n ) ) { for ( TYPE_2 node : info . METHOD_12 ( ) ) { METHOD_13 ( node ) ; } } } }