private TYPE_1 METHOD_1 ( TYPE_2 n , String VAR_1 ) { if ( TYPE_5 . METHOD_10 ( n ) ) { return VAR_10 ; } if ( TYPE_3 . METHOD_2 ( n ) && VAR_1 . equals ( n . getString ( ) ) ) { if ( TYPE_3 . METHOD_3 ( n , n . METHOD_4 ( ) ) ) { TYPE_4 . METHOD_5 ( n . METHOD_4 ( ) . getType ( ) == VAR_2 ) ; TYPE_2 VAR_3 = n . METHOD_6 ( ) ; TYPE_1 state = METHOD_1 ( VAR_3 , VAR_1 ) ; if ( state == VAR_4 ) { return state ; } return VAR_5 ; } else { return VAR_4 ; } } switch ( n . getType ( ) ) { case VAR_6 : case VAR_7 : TYPE_1 VAR_11 = METHOD_1 ( n . METHOD_8 ( ) , VAR_1 ) ; TYPE_1 VAR_12 = METHOD_1 ( n . METHOD_9 ( ) , VAR_1 ) ; if ( VAR_11 != VAR_10 ) { return VAR_11 ; } else if ( VAR_12 == VAR_4 ) { return VAR_4 ; } else { return VAR_10 ; } case VAR_8 : TYPE_1 first = METHOD_1 ( n . METHOD_8 ( ) , VAR_1 ) ; if ( first != VAR_10 ) { return first ; } return METHOD_7 ( n . METHOD_8 ( ) . METHOD_6 ( ) , n . METHOD_9 ( ) , VAR_1 ) ; default : for ( TYPE_2 VAR_9 = n . METHOD_8 ( ) ; VAR_9 != null ; VAR_9 = VAR_9 . METHOD_6 ( ) ) { TYPE_1 state = METHOD_1 ( VAR_9 , VAR_1 ) ; if ( state != VAR_10 ) { return state ; } } } return VAR_10 ; }