private TYPE_1 METHOD_1 ( TYPE_1 n , TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( ! TYPE_2 . METHOD_2 ( VAR_1 , false ) || ! TYPE_2 . METHOD_2 ( VAR_2 , false ) ) { if ( n . getType ( ) != VAR_3 && n . getType ( ) != VAR_4 ) { return n ; } } int op = n . getType ( ) ; boolean result ; boolean VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 , false ) ; boolean VAR_6 = ( ( VAR_7 == VAR_2 . getType ( ) && VAR_2 . getString ( ) . equals ( STRING_1 ) ) || ( VAR_8 == VAR_2 . getType ( ) && TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , false ) ) ) ; int VAR_9 = VAR_1 . getType ( ) ; int VAR_10 = VAR_2 . getType ( ) ; switch ( VAR_9 ) { case VAR_8 : if ( ! TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , false ) ) { return n ; } else if ( ! VAR_5 ) { return n ; } else { result = METHOD_4 ( VAR_2 , op ) ; } break ; case VAR_11 . NULL : case VAR_12 : case VAR_13 : if ( VAR_6 ) { result = METHOD_4 ( VAR_1 , op ) ; break ; } if ( VAR_10 != VAR_12 && VAR_10 != VAR_13 && VAR_10 != VAR_11 . NULL ) { return n ; } switch ( op ) { case VAR_14 : case VAR_15 : result = VAR_9 == VAR_10 ; break ; case VAR_16 : case VAR_17 : result = VAR_9 != VAR_10 ; break ; case VAR_18 : case VAR_19 : case VAR_3 : case VAR_4 : TYPE_3 VAR_20 = METHOD_5 ( op , VAR_1 , VAR_2 ) ; if ( VAR_20 != null ) { result = VAR_20 ; } else { return n ; } break ; default : return n ; } break ; case VAR_21 : if ( VAR_2 . getType ( ) != VAR_21 ) { return n ; } switch ( op ) { case VAR_14 : case VAR_15 : result = true ; break ; case VAR_16 : case VAR_17 : result = false ; break ; default : return n ; } break ; case VAR_22 : if ( VAR_6 ) { result = METHOD_4 ( VAR_1 , op ) ; break ; } if ( VAR_22 != VAR_2 . getType ( ) ) { return n ; } switch ( op ) { case VAR_14 : case VAR_15 : result = VAR_1 . getString ( ) . equals ( VAR_2 . getString ( ) ) ; break ; case VAR_16 : case VAR_17 : result = ! VAR_1 . getString ( ) . equals ( VAR_2 . getString ( ) ) ; break ; default : return n ; } break ; case VAR_23 : if ( VAR_6 ) { result = METHOD_4 ( VAR_1 , op ) ; break ; } if ( VAR_23 != VAR_2 . getType ( ) ) { return n ; } TYPE_3 VAR_20 = METHOD_5 ( op , VAR_1 , VAR_2 ) ; if ( VAR_20 != null ) { result = VAR_20 ; } else { return null ; } break ; case VAR_7 : if ( VAR_6 ) { result = METHOD_4 ( VAR_1 , op ) ; break ; } if ( VAR_5 ) { boolean VAR_24 = ( VAR_1 . getString ( ) . equals ( STRING_1 ) ) ; if ( VAR_24 ) { result = METHOD_4 ( VAR_2 , op ) ; break ; } } if ( VAR_7 != VAR_2 . getType ( ) ) { return n ; } String VAR_25 = VAR_1 . getString ( ) ; String VAR_26 = VAR_2 . getString ( ) ; if ( ! VAR_25 . equals ( VAR_26 ) ) { return n ; } switch ( op ) { case VAR_4 : case VAR_3 : result = false ; break ; default : return n ; } break ; default : return n ; } TYPE_1 VAR_27 = new TYPE_1 ( result ? VAR_12 : VAR_13 ) ; n . METHOD_6 ( ) . METHOD_7 ( n , VAR_27 ) ; METHOD_8 ( ) ; return VAR_27 ; }