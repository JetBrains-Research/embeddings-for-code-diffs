static TYPE_1 METHOD_1 ( TYPE_2 n ) { switch ( n . getType ( ) ) { case VAR_1 : case VAR_2 : return METHOD_1 ( n . METHOD_2 ( ) ) ; case VAR_3 : TYPE_1 value = METHOD_1 ( n . METHOD_2 ( ) ) ; return value . not ( ) ; case VAR_4 : { TYPE_1 VAR_5 = METHOD_1 ( n . METHOD_3 ( ) ) ; TYPE_1 VAR_6 = METHOD_1 ( n . METHOD_2 ( ) ) ; return VAR_5 . METHOD_4 ( VAR_6 ) ; } case VAR_7 : { TYPE_1 VAR_5 = METHOD_1 ( n . METHOD_3 ( ) ) ; TYPE_1 VAR_6 = METHOD_1 ( n . METHOD_2 ( ) ) ; return VAR_5 . METHOD_5 ( VAR_6 ) ; } case VAR_8 : { TYPE_1 VAR_9 = METHOD_1 ( n . METHOD_3 ( ) . METHOD_6 ( ) ) ; TYPE_1 VAR_10 = METHOD_1 ( n . METHOD_2 ( ) ) ; if ( VAR_9 . equals ( VAR_10 ) ) { return VAR_9 ; } else { return VAR_11 ; } } case VAR_12 : case VAR_13 : return VAR_14 ; default : return METHOD_7 ( n ) ; } }