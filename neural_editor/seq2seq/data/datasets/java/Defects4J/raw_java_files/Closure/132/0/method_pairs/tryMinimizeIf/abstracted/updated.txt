private TYPE_1 METHOD_1 ( TYPE_1 n ) { TYPE_1 VAR_1 = n . METHOD_2 ( ) ; TYPE_1 VAR_2 = n . METHOD_3 ( ) ; if ( TYPE_2 . METHOD_4 ( VAR_2 , true ) ) { return n ; } TYPE_1 VAR_3 = VAR_2 . METHOD_5 ( ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_5 ( ) ; if ( VAR_4 == null ) { if ( METHOD_6 ( VAR_3 ) ) { TYPE_1 expr = METHOD_7 ( VAR_3 ) ; if ( ! VAR_5 && METHOD_8 ( expr ) ) { return n ; } if ( VAR_2 . METHOD_9 ( ) ) { if ( METHOD_10 ( VAR_2 , VAR_6 ) && METHOD_10 ( expr . METHOD_3 ( ) , VAR_6 ) ) { return n ; } TYPE_1 VAR_7 = TYPE_3 . METHOD_11 ( VAR_2 . METHOD_12 ( ) , expr . METHOD_12 ( ) ) . METHOD_13 ( n ) ; TYPE_1 VAR_8 = TYPE_2 . METHOD_14 ( VAR_7 ) ; VAR_1 . METHOD_15 ( n , VAR_8 ) ; METHOD_16 ( ) ; return VAR_8 ; } if ( METHOD_10 ( VAR_2 , VAR_9 ) && METHOD_10 ( expr . METHOD_3 ( ) , VAR_9 ) ) { return n ; } n . METHOD_17 ( VAR_2 ) ; TYPE_1 VAR_10 = TYPE_3 . METHOD_18 ( VAR_2 , expr . METHOD_12 ( ) ) . METHOD_13 ( n ) ; TYPE_1 VAR_8 = TYPE_2 . METHOD_14 ( VAR_10 ) ; VAR_1 . METHOD_15 ( n , VAR_8 ) ; METHOD_16 ( ) ; return VAR_8 ; } else { if ( TYPE_2 . METHOD_19 ( VAR_3 ) && VAR_3 . METHOD_20 ( ) ) { TYPE_1 VAR_11 = VAR_3 . METHOD_3 ( ) ; if ( VAR_11 . METHOD_21 ( ) ) { TYPE_1 VAR_12 = VAR_11 . METHOD_3 ( ) ; TYPE_1 VAR_13 = VAR_12 . METHOD_5 ( ) ; TYPE_1 VAR_14 = VAR_13 . METHOD_5 ( ) ; if ( VAR_14 == null && ! ( METHOD_10 ( VAR_2 , VAR_9 ) && METHOD_10 ( VAR_12 , VAR_9 ) ) ) { n . METHOD_22 ( ) ; n . METHOD_23 ( TYPE_3 . METHOD_18 ( VAR_2 , VAR_12 . METHOD_24 ( ) ) . METHOD_13 ( VAR_2 ) ) ; n . METHOD_25 ( VAR_13 . METHOD_24 ( ) ) ; METHOD_16 ( ) ; return n ; } } } } return n ; } METHOD_26 ( n ) ; if ( VAR_2 . METHOD_9 ( ) && ! METHOD_27 ( VAR_4 ) ) { n . METHOD_15 ( VAR_2 , VAR_2 . METHOD_12 ( ) ) ; n . METHOD_17 ( VAR_3 ) ; n . METHOD_23 ( VAR_3 ) ; METHOD_16 ( ) ; return n ; } if ( METHOD_28 ( VAR_3 ) && METHOD_28 ( VAR_4 ) ) { TYPE_1 VAR_15 = METHOD_29 ( VAR_3 ) ; TYPE_1 VAR_16 = METHOD_29 ( VAR_4 ) ; n . METHOD_17 ( VAR_2 ) ; VAR_15 . METHOD_24 ( ) ; VAR_16 . METHOD_24 ( ) ; TYPE_1 VAR_17 = TYPE_3 . METHOD_30 ( TYPE_3 . METHOD_31 ( VAR_2 , VAR_15 , VAR_16 ) . METHOD_13 ( n ) ) ; VAR_1 . METHOD_15 ( n , VAR_17 ) ; METHOD_16 ( ) ; return VAR_17 ; } boolean VAR_18 = METHOD_6 ( VAR_3 ) ; boolean VAR_19 = METHOD_6 ( VAR_4 ) ; if ( VAR_18 && VAR_19 ) { TYPE_1 VAR_20 = METHOD_7 ( VAR_3 ) . METHOD_3 ( ) ; TYPE_1 VAR_21 = METHOD_7 ( VAR_4 ) . METHOD_3 ( ) ; if ( VAR_20 . getType ( ) == VAR_21 . getType ( ) ) { if ( TYPE_2 . METHOD_32 ( VAR_20 ) ) { TYPE_1 VAR_22 = VAR_20 . METHOD_3 ( ) ; if ( METHOD_33 ( VAR_22 , VAR_21 . METHOD_3 ( ) ) && ! METHOD_34 ( VAR_22 ) && ( ! METHOD_43 ( VAR_2 ) || ( VAR_20 . METHOD_38 ( ) && VAR_20 . METHOD_3 ( ) . METHOD_41 ( ) ) ) ) { n . METHOD_17 ( VAR_2 ) ; TYPE_1 VAR_23 = VAR_20 . METHOD_12 ( ) ; TYPE_1 VAR_15 = VAR_20 . METHOD_12 ( ) ; TYPE_1 VAR_16 = VAR_21 . METHOD_35 ( ) ; VAR_21 . METHOD_17 ( VAR_16 ) ; TYPE_1 VAR_24 = TYPE_3 . METHOD_31 ( VAR_2 , VAR_15 , VAR_16 ) . METHOD_13 ( n ) ; TYPE_1 VAR_25 = new TYPE_1 ( VAR_20 . getType ( ) , VAR_23 , VAR_24 ) . METHOD_13 ( VAR_20 ) ; TYPE_1 expr = TYPE_2 . METHOD_14 ( VAR_25 ) ; VAR_1 . METHOD_15 ( n , expr ) ; METHOD_16 ( ) ; return expr ; } } } n . METHOD_17 ( VAR_2 ) ; VAR_20 . METHOD_24 ( ) ; VAR_21 . METHOD_24 ( ) ; TYPE_1 expr = TYPE_3 . METHOD_36 ( TYPE_3 . METHOD_31 ( VAR_2 , VAR_20 , VAR_21 ) . METHOD_13 ( n ) ) ; VAR_1 . METHOD_15 ( n , expr ) ; METHOD_16 ( ) ; return expr ; } boolean VAR_26 = METHOD_37 ( VAR_3 ) ; boolean VAR_27 = METHOD_37 ( VAR_4 ) ; if ( VAR_26 && VAR_19 && METHOD_7 ( VAR_4 ) . METHOD_3 ( ) . METHOD_38 ( ) ) { TYPE_1 var = METHOD_39 ( VAR_3 ) ; TYPE_1 VAR_28 = METHOD_7 ( VAR_4 ) . METHOD_3 ( ) ; TYPE_1 VAR_29 = var . METHOD_3 ( ) ; TYPE_1 VAR_30 = VAR_28 . METHOD_3 ( ) ; if ( VAR_29 . METHOD_40 ( ) && VAR_30 . METHOD_41 ( ) && VAR_29 . getString ( ) . equals ( VAR_30 . getString ( ) ) ) { TYPE_1 VAR_15 = VAR_29 . METHOD_42 ( ) ; TYPE_1 VAR_16 = VAR_28 . METHOD_35 ( ) . METHOD_24 ( ) ; VAR_2 . METHOD_24 ( ) ; TYPE_1 VAR_24 = TYPE_3 . METHOD_31 ( VAR_2 , VAR_15 , VAR_16 ) . METHOD_13 ( n ) ; var . METHOD_24 ( ) ; VAR_29 . METHOD_25 ( VAR_24 ) ; VAR_1 . METHOD_15 ( n , var ) ; METHOD_16 ( ) ; return var ; } } else if ( VAR_27 && VAR_18 && METHOD_7 ( VAR_3 ) . METHOD_3 ( ) . METHOD_38 ( ) ) { TYPE_1 var = METHOD_39 ( VAR_4 ) ; TYPE_1 VAR_31 = METHOD_7 ( VAR_3 ) . METHOD_3 ( ) ; TYPE_1 VAR_32 = VAR_31 . METHOD_3 ( ) ; TYPE_1 VAR_33 = var . METHOD_3 ( ) ; if ( VAR_33 . METHOD_40 ( ) && VAR_32 . METHOD_41 ( ) && VAR_32 . getString ( ) . equals ( VAR_33 . getString ( ) ) ) { TYPE_1 VAR_15 = VAR_31 . METHOD_35 ( ) . METHOD_24 ( ) ; TYPE_1 VAR_16 = VAR_33 . METHOD_42 ( ) ; VAR_2 . METHOD_24 ( ) ; TYPE_1 VAR_24 = TYPE_3 . METHOD_31 ( VAR_2 , VAR_15 , VAR_16 ) . METHOD_13 ( n ) ; var . METHOD_24 ( ) ; VAR_33 . METHOD_25 ( VAR_24 ) ; VAR_1 . METHOD_15 ( n , var ) ; METHOD_16 ( ) ; return var ; } } return n ; }