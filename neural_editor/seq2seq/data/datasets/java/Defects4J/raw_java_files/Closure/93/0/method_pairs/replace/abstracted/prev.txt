void replace ( ) { if ( VAR_1 == null ) { VAR_2 = VAR_3 ; return ; } if ( VAR_3 != null && VAR_4 != null ) { VAR_4 . METHOD_1 ( ) ; VAR_5 . METHOD_2 ( ) ; VAR_2 = VAR_3 ; if ( TYPE_1 . METHOD_3 ( VAR_3 ) ) { VAR_3 . METHOD_4 ( VAR_6 , true ) ; TYPE_2 VAR_7 = VAR_3 . METHOD_5 ( ) ; TYPE_2 VAR_8 = VAR_7 . METHOD_5 ( ) ; if ( VAR_8 . getType ( ) == VAR_9 ) { TYPE_2 VAR_10 = VAR_8 . METHOD_6 ( ) ; VAR_7 . METHOD_7 ( VAR_8 ) ; VAR_7 . METHOD_7 ( VAR_10 ) ; VAR_8 . METHOD_8 ( VAR_10 ) ; TYPE_2 VAR_11 = new TYPE_2 ( VAR_12 , VAR_8 ) ; VAR_11 . METHOD_9 ( VAR_3 ) ; VAR_3 . METHOD_10 ( ) . METHOD_11 ( VAR_3 , VAR_11 ) ; VAR_8 . METHOD_12 ( VAR_7 . METHOD_13 ( ) ) ; VAR_5 . METHOD_2 ( ) ; VAR_2 = VAR_11 ; } } } else { VAR_2 = METHOD_14 ( ) ; if ( VAR_13 == VAR_14 ) { VAR_1 . METHOD_10 ( ) . METHOD_15 ( VAR_2 , VAR_1 ) ; } else { int VAR_15 = VAR_16 . METHOD_16 ( CHAR_1 ) ; if ( VAR_15 == - 1 ) { VAR_5 . METHOD_17 ( VAR_14 ) . METHOD_18 ( VAR_2 ) ; } else { TYPE_3 VAR_17 = VAR_18 . get ( VAR_16 . substring ( 0 , VAR_15 ) ) ; TYPE_4 . METHOD_19 ( VAR_17 ) ; TYPE_4 . METHOD_19 ( VAR_19 ) ; VAR_19 . METHOD_10 ( ) . METHOD_20 ( VAR_2 , VAR_19 ) ; } } if ( VAR_4 != null ) { VAR_4 . METHOD_1 ( ) ; } VAR_5 . METHOD_2 ( ) ; } }