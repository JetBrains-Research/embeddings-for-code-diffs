protected TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; final TYPE_2 VAR_1 = new TYPE_2 ( ) { public double value ( double [ ] VAR_2 ) { return METHOD_3 ( VAR_2 ) ; } } ; final boolean VAR_3 = METHOD_4 ( ) == VAR_4 ; final TYPE_3 < TYPE_1 > VAR_5 = new TYPE_3 < TYPE_1 > ( ) { public int METHOD_5 ( final TYPE_1 VAR_6 , final TYPE_1 VAR_7 ) { final double VAR_8 = VAR_6 . getValue ( ) ; final double VAR_9 = VAR_7 . getValue ( ) ; return VAR_3 ? TYPE_4 . METHOD_5 ( VAR_8 , VAR_9 ) : TYPE_4 . METHOD_5 ( VAR_9 , VAR_8 ) ; } } ; VAR_10 . build ( METHOD_6 ( ) ) ; VAR_10 . METHOD_7 ( VAR_1 , VAR_5 ) ; TYPE_1 [ ] VAR_11 = null ; int VAR_12 = 0 ; final TYPE_5 < TYPE_1 > VAR_13 = METHOD_8 ( ) ; while ( true ) { if ( VAR_12 > 0 ) { boolean VAR_14 = true ; for ( int i = 0 ; i < VAR_10 . METHOD_9 ( ) ; i ++ ) { TYPE_1 VAR_15 = VAR_11 [ i ] ; VAR_14 = VAR_14 && VAR_13 . METHOD_10 ( VAR_12 , VAR_15 , VAR_10 . METHOD_11 ( i ) ) ; } if ( VAR_14 ) { return VAR_10 . METHOD_11 ( 0 ) ; } } VAR_11 = VAR_10 . METHOD_12 ( ) ; VAR_10 . METHOD_13 ( VAR_1 , VAR_5 ) ; ++ VAR_12 ; } }