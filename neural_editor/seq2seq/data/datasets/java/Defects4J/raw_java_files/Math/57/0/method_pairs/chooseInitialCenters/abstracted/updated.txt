private static < TYPE_1 extends TYPE_2 < TYPE_1 > > TYPE_3 < TYPE_4 < TYPE_1 > > METHOD_1 ( final TYPE_5 < TYPE_1 > VAR_1 , final int k , final TYPE_6 VAR_2 ) { final TYPE_3 < TYPE_1 > VAR_3 = new TYPE_7 < TYPE_1 > ( VAR_1 ) ; final TYPE_3 < TYPE_4 < TYPE_1 > > VAR_4 = new TYPE_7 < TYPE_4 < TYPE_1 > > ( ) ; final TYPE_1 VAR_5 = VAR_3 . remove ( VAR_2 . METHOD_2 ( VAR_3 . size ( ) ) ) ; VAR_4 . add ( new TYPE_4 < TYPE_1 > ( VAR_5 ) ) ; final double [ ] VAR_6 = new double [ VAR_3 . size ( ) ] ; while ( VAR_4 . size ( ) < k ) { double sum = 0 ; for ( int i = 0 ; i < VAR_3 . size ( ) ; i ++ ) { final TYPE_1 p = VAR_3 . get ( i ) ; final TYPE_4 < TYPE_1 > VAR_7 = METHOD_3 ( VAR_4 , p ) ; final double VAR_8 = p . METHOD_4 ( VAR_7 . METHOD_5 ( ) ) ; sum += VAR_8 * VAR_8 ; VAR_6 [ i ] = sum ; } final double VAR_9 = VAR_2 . METHOD_6 ( ) * sum ; for ( int i = 0 ; i < VAR_6 . length ; i ++ ) { if ( VAR_6 [ i ] >= VAR_9 ) { final TYPE_1 p = VAR_3 . remove ( i ) ; VAR_4 . add ( new TYPE_4 < TYPE_1 > ( p ) ) ; break ; } } } return VAR_4 ; }