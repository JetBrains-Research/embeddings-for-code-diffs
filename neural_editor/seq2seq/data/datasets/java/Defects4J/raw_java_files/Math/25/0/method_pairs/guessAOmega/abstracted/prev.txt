private void METHOD_1 ( ) { double VAR_1 = 0 ; double VAR_2 = 0 ; double VAR_3 = 0 ; double VAR_4 = 0 ; double VAR_5 = 0 ; double VAR_6 = VAR_7 [ 0 ] . METHOD_2 ( ) ; double VAR_8 = VAR_7 [ 0 ] . METHOD_3 ( ) ; double VAR_9 = 0 ; double VAR_10 = 0 ; final double VAR_11 = VAR_6 ; for ( int i = 1 ; i < VAR_7 . length ; ++ i ) { final double VAR_12 = VAR_6 ; final double VAR_13 = VAR_8 ; VAR_6 = VAR_7 [ i ] . METHOD_2 ( ) ; VAR_8 = VAR_7 [ i ] . METHOD_3 ( ) ; final double VAR_14 = VAR_6 - VAR_12 ; final double VAR_15 = VAR_8 - VAR_13 ; final double VAR_16 = VAR_14 * ( VAR_13 * VAR_13 + VAR_13 * VAR_8 + VAR_8 * VAR_8 ) / INT_1 ; final double VAR_17 = VAR_15 * VAR_15 / VAR_14 ; final double x = VAR_6 - VAR_11 ; VAR_9 += VAR_16 ; VAR_10 += VAR_17 ; VAR_1 += x * x ; VAR_2 += VAR_9 * VAR_9 ; VAR_3 += x * VAR_9 ; VAR_4 += x * VAR_10 ; VAR_5 += VAR_9 * VAR_10 ; } double VAR_18 = VAR_2 * VAR_4 - VAR_3 * VAR_5 ; double VAR_19 = VAR_3 * VAR_4 - VAR_1 * VAR_5 ; double VAR_20 = VAR_1 * VAR_2 - VAR_3 * VAR_3 ; if ( ( VAR_18 / VAR_19 < 0 ) || ( VAR_19 / VAR_20 < 0 ) ) { final int VAR_21 = VAR_7 . length - 1 ; final double VAR_22 = VAR_7 [ VAR_21 ] . METHOD_2 ( ) - VAR_7 [ 0 ] . METHOD_2 ( ) ; if ( VAR_22 == 0 ) { throw new TYPE_1 ( ) ; } VAR_23 = INT_2 * VAR_24 / VAR_22 ; double VAR_25 = VAR_26 ; double VAR_27 = VAR_28 ; for ( int i = 1 ; i < VAR_7 . length ; ++ i ) { final double y = VAR_7 [ i ] . METHOD_3 ( ) ; if ( y < VAR_25 ) { VAR_25 = y ; } if ( y > VAR_27 ) { VAR_27 = y ; } } a = FLOAT_1 * ( VAR_27 - VAR_25 ) ; } else { a = TYPE_2 . METHOD_4 ( VAR_18 / VAR_19 ) ; VAR_23 = TYPE_2 . METHOD_4 ( VAR_19 / VAR_20 ) ; } }