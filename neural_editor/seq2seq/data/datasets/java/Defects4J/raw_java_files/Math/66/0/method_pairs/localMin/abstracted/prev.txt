private double METHOD_1 ( boolean VAR_1 , TYPE_1 f , TYPE_2 VAR_2 , double VAR_3 , double VAR_4 , double VAR_5 , double VAR_6 , double t ) throws TYPE_3 , TYPE_4 { if ( VAR_6 <= 0 ) { throw new TYPE_5 ( VAR_6 ) ; } if ( t <= 0 ) { throw new TYPE_5 ( t ) ; } double a , b ; if ( VAR_3 < VAR_5 ) { a = VAR_3 ; b = VAR_5 ; } else { a = VAR_5 ; b = VAR_3 ; } double x = VAR_4 ; double VAR_7 = x ; double VAR_8 = x ; double VAR_9 = 0 ; double VAR_10 = 0 ; double VAR_11 = METHOD_2 ( f , x ) ; if ( VAR_2 == VAR_12 ) { VAR_11 = - VAR_11 ; } double VAR_13 = VAR_11 ; double VAR_14 = VAR_11 ; int count = 0 ; while ( count < VAR_15 ) { double VAR_16 = FLOAT_1 * ( a + b ) ; final double VAR_17 = VAR_6 * TYPE_6 . METHOD_3 ( x ) + t ; final double VAR_18 = INT_1 * VAR_17 ; if ( TYPE_6 . METHOD_3 ( x - VAR_16 ) > VAR_18 - FLOAT_1 * ( b - a ) ) { double p = 0 ; double VAR_19 = 0 ; double VAR_20 = 0 ; double VAR_21 = 0 ; if ( TYPE_6 . METHOD_3 ( VAR_10 ) > VAR_17 ) { VAR_20 = ( x - VAR_8 ) * ( VAR_11 - VAR_13 ) ; VAR_19 = ( x - VAR_7 ) * ( VAR_11 - VAR_14 ) ; p = ( x - VAR_7 ) * VAR_19 - ( x - VAR_8 ) * VAR_20 ; VAR_19 = INT_1 * ( VAR_19 - VAR_20 ) ; if ( VAR_19 > 0 ) { p = - p ; } else { VAR_19 = - VAR_19 ; } VAR_20 = VAR_10 ; VAR_10 = VAR_9 ; if ( p > VAR_19 * ( a - x ) && p < VAR_19 * ( b - x ) && TYPE_6 . METHOD_3 ( p ) < TYPE_6 . METHOD_3 ( FLOAT_1 * VAR_19 * VAR_20 ) ) { VAR_9 = p / VAR_19 ; VAR_21 = x + VAR_9 ; if ( VAR_21 - a < VAR_18 || b - VAR_21 < VAR_18 ) { if ( x <= VAR_16 ) { VAR_9 = VAR_17 ; } else { VAR_9 = - VAR_17 ; } } } else { if ( x < VAR_16 ) { VAR_10 = b - x ; } else { VAR_10 = a - x ; } VAR_9 = VAR_22 * VAR_10 ; } } else { if ( x < VAR_16 ) { VAR_10 = b - x ; } else { VAR_10 = a - x ; } VAR_9 = VAR_22 * VAR_10 ; } if ( TYPE_6 . METHOD_3 ( VAR_9 ) < VAR_17 ) { if ( VAR_9 >= 0 ) { VAR_21 = x + VAR_17 ; } else { VAR_21 = x - VAR_17 ; } } else { VAR_21 = x + VAR_9 ; } double VAR_23 = METHOD_2 ( f , VAR_21 ) ; if ( VAR_2 == VAR_12 ) { VAR_23 = - VAR_23 ; } if ( VAR_23 <= VAR_11 ) { if ( VAR_21 < x ) { b = x ; } else { a = x ; } VAR_7 = VAR_8 ; VAR_13 = VAR_14 ; VAR_8 = x ; VAR_14 = VAR_11 ; x = VAR_21 ; VAR_11 = VAR_23 ; } else { if ( VAR_21 < x ) { a = VAR_21 ; } else { b = VAR_21 ; } if ( VAR_23 <= VAR_14 || VAR_8 == x ) { VAR_7 = VAR_8 ; VAR_13 = VAR_14 ; VAR_8 = VAR_21 ; VAR_14 = VAR_23 ; } else if ( VAR_23 <= VAR_13 || VAR_7 == x || VAR_7 == VAR_8 ) { VAR_7 = VAR_21 ; VAR_13 = VAR_23 ; } } } else { METHOD_4 ( x , ( VAR_2 == VAR_12 ) ? - VAR_11 : VAR_11 , count ) ; return x ; } ++ count ; } throw new TYPE_3 ( VAR_15 ) ; }