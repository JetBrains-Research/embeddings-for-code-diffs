public static int METHOD_1 ( final int p , final int VAR_1 ) { int VAR_2 = p ; int VAR_3 = VAR_1 ; if ( ( VAR_2 == 0 ) || ( VAR_3 == 0 ) ) { return ( TYPE_1 . METHOD_2 ( VAR_2 ) + TYPE_1 . METHOD_2 ( VAR_3 ) ) ; } if ( VAR_2 > 0 ) { VAR_2 = - VAR_2 ; } if ( VAR_3 > 0 ) { VAR_3 = - VAR_3 ; } int k = 0 ; while ( ( VAR_2 & 1 ) == 0 && ( VAR_3 & 1 ) == 0 && k < INT_1 ) { VAR_2 /= INT_2 ; VAR_3 /= INT_2 ; k ++ ; } if ( k == INT_1 ) { throw TYPE_2 . METHOD_3 ( STRING_1 , new TYPE_3 [ ] { p , VAR_1 } ) ; } int t = ( ( VAR_2 & 1 ) == 1 ) ? VAR_3 : - ( VAR_2 / INT_2 ) ; do { while ( ( t & 1 ) == 0 ) { t /= INT_2 ; } if ( t > 0 ) { VAR_2 = - t ; } else { VAR_3 = t ; } t = ( VAR_3 - VAR_2 ) / INT_2 ; } while ( t != 0 ) ; return - VAR_2 * ( 1 < < k ) ; }