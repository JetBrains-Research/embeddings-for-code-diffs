public static double METHOD_1 ( double x , double y ) { final double VAR_1 [ ] = new double [ INT_1 ] ; if ( y == 0.0 ) { return 1.0 ; } if ( x != x ) { return x ; } if ( x == 0 ) { long VAR_2 = TYPE_1 . METHOD_2 ( x ) ; if ( ( VAR_2 & INT_2 ) != 0 ) { long VAR_3 = ( long ) y ; if ( y < 0 && y == VAR_3 && ( VAR_3 & 1 ) == 1 ) { return VAR_4 ; } if ( y > 0 && y == VAR_3 && ( VAR_3 & 1 ) == 1 ) { return - 0.0 ; } } if ( y < 0 ) { return VAR_5 ; } if ( y > 0 ) { return 0.0 ; } return VAR_6 ; } if ( x == VAR_5 ) { if ( y != y ) { return y ; } if ( y < 0.0 ) { return 0.0 ; } else { return VAR_5 ; } } if ( y == VAR_5 ) { if ( x * x == 1.0 ) { return VAR_6 ; } if ( x * x > 1.0 ) { return VAR_5 ; } else { return 0.0 ; } } if ( x == VAR_4 ) { if ( y != y ) { return y ; } if ( y < 0 ) { long VAR_3 = ( long ) y ; if ( y == VAR_3 && ( VAR_3 & 1 ) == 1 ) { return - 0.0 ; } return 0.0 ; } if ( y > 0 ) { long VAR_3 = ( long ) y ; if ( y == VAR_3 && ( VAR_3 & 1 ) == 1 ) { return VAR_4 ; } return VAR_5 ; } } if ( y == VAR_4 ) { if ( x * x == 1.0 ) { return VAR_6 ; } if ( x * x < 1.0 ) { return VAR_5 ; } else { return 0.0 ; } } if ( x < 0 ) { if ( y >= VAR_7 || y <= - VAR_7 ) { return METHOD_1 ( - x , y ) ; } if ( y == ( long ) y ) { return ( ( long ) y & 1 ) == 0 ? METHOD_1 ( - x , y ) : - METHOD_1 ( - x , y ) ; } else { return VAR_6 ; } } double VAR_8 ; double VAR_9 ; if ( y < FLOAT_1 && y > - FLOAT_1 ) { double VAR_10 = y * VAR_11 ; VAR_8 = y + VAR_10 - VAR_10 ; VAR_9 = y - VAR_8 ; } else { double VAR_10 = y * FLOAT_2 ; double VAR_12 = VAR_10 * FLOAT_2 ; VAR_8 = ( VAR_10 + VAR_12 - VAR_10 ) * VAR_11 * VAR_11 ; VAR_9 = y - VAR_8 ; } final double VAR_13 = METHOD_3 ( x , VAR_1 ) ; if ( TYPE_1 . METHOD_4 ( VAR_13 ) ) { return VAR_13 ; } double VAR_14 = VAR_1 [ 0 ] ; double VAR_15 = VAR_1 [ 1 ] ; double VAR_10 = VAR_14 * VAR_11 ; double VAR_12 = VAR_14 + VAR_10 - VAR_10 ; VAR_15 += VAR_14 - VAR_12 ; VAR_14 = VAR_12 ; final double VAR_16 = VAR_14 * VAR_8 ; final double VAR_17 = VAR_14 * VAR_9 + VAR_15 * VAR_8 + VAR_15 * VAR_9 ; VAR_14 = VAR_16 + VAR_17 ; VAR_15 = - ( VAR_14 - VAR_16 - VAR_17 ) ; double VAR_18 = 1.0 / FLOAT_3 ; VAR_18 = VAR_18 * VAR_15 + ( 1.0 / FLOAT_4 ) ; VAR_18 = VAR_18 * VAR_15 + ( 1.0 / FLOAT_5 ) ; VAR_18 = VAR_18 * VAR_15 + FLOAT_6 ; VAR_18 = VAR_18 * VAR_15 + 1.0 ; VAR_18 = VAR_18 * VAR_15 ; final double result = METHOD_5 ( VAR_14 , VAR_18 , null ) ; return result ; }