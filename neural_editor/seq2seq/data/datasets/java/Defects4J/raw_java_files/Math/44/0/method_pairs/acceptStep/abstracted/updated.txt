protected double METHOD_1 ( final TYPE_1 VAR_1 , final double [ ] y , final double [ ] VAR_2 , final double VAR_3 ) throws TYPE_2 { double VAR_4 = VAR_1 . METHOD_2 ( ) ; final double VAR_5 = VAR_1 . METHOD_3 ( ) ; if ( ! VAR_7 ) { for ( TYPE_3 state : VAR_8 ) { state . METHOD_4 ( VAR_1 ) ; } VAR_7 = true ; } final int VAR_9 = VAR_1 . METHOD_5 ( ) ? + 1 : - 1 ; TYPE_4 < TYPE_3 > VAR_10 = new TYPE_5 < TYPE_3 > ( new TYPE_6 < TYPE_3 > ( ) { public int METHOD_6 ( TYPE_3 VAR_11 , TYPE_3 VAR_12 ) { return VAR_9 * TYPE_7 . METHOD_6 ( VAR_11 . METHOD_7 ( ) , VAR_12 . METHOD_7 ( ) ) ; } } ) ; for ( final TYPE_3 state : VAR_8 ) { if ( state . METHOD_8 ( VAR_1 ) ) { VAR_10 . add ( state ) ; } } while ( ! VAR_10 . isEmpty ( ) ) { final TYPE_8 < TYPE_3 > iterator = VAR_10 . iterator ( ) ; final TYPE_3 VAR_13 = iterator . METHOD_9 ( ) ; iterator . remove ( ) ; final double VAR_14 = VAR_13 . METHOD_7 ( ) ; VAR_1 . METHOD_10 ( VAR_4 ) ; VAR_1 . METHOD_11 ( VAR_14 ) ; VAR_1 . METHOD_12 ( VAR_14 ) ; final double [ ] VAR_15 = VAR_1 . METHOD_13 ( ) ; VAR_13 . METHOD_14 ( VAR_14 , VAR_15 ) ; VAR_16 = VAR_13 . METHOD_15 ( ) ; for ( final TYPE_9 VAR_17 : VAR_18 ) { VAR_17 . METHOD_16 ( VAR_1 , VAR_16 ) ; } if ( VAR_16 ) { TYPE_10 . METHOD_17 ( VAR_15 , 0 , y , 0 , y . length ) ; for ( final TYPE_3 VAR_20 : VAR_10 ) { VAR_20 . METHOD_14 ( VAR_14 , VAR_15 ) ; } return VAR_14 ; } if ( VAR_13 . METHOD_18 ( VAR_14 , VAR_15 ) ) { TYPE_10 . METHOD_17 ( VAR_15 , 0 , y , 0 , y . length ) ; METHOD_19 ( VAR_14 , y , VAR_2 ) ; VAR_6 = true ; for ( final TYPE_3 VAR_20 : VAR_10 ) { VAR_20 . METHOD_14 ( VAR_14 , VAR_15 ) ; } return VAR_14 ; } VAR_4 = VAR_14 ; VAR_1 . METHOD_10 ( VAR_14 ) ; VAR_1 . METHOD_11 ( VAR_5 ) ; if ( VAR_13 . METHOD_8 ( VAR_1 ) ) { VAR_10 . add ( VAR_13 ) ; } } VAR_1 . METHOD_12 ( VAR_5 ) ; final double [ ] VAR_19 = VAR_1 . METHOD_13 ( ) ; for ( final TYPE_3 state : VAR_8 ) { state . METHOD_14 ( VAR_5 , VAR_19 ) ; VAR_16 = VAR_16 || state . METHOD_15 ( ) ; } VAR_16 = VAR_16 || TYPE_11 . equals ( VAR_5 , VAR_3 , 1 ) ; for ( TYPE_9 VAR_17 : VAR_18 ) { VAR_17 . METHOD_16 ( VAR_1 , VAR_16 ) ; } return VAR_5 ; }