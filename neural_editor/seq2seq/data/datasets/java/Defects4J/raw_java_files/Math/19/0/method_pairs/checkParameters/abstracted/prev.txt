private void METHOD_1 ( ) { final double [ ] init = METHOD_2 ( ) ; final double [ ] VAR_1 = METHOD_3 ( ) ; final double [ ] VAR_2 = METHOD_4 ( ) ; boolean VAR_3 = false ; for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { if ( ! TYPE_1 . METHOD_5 ( VAR_1 [ i ] ) || ! TYPE_1 . METHOD_5 ( VAR_2 [ i ] ) ) { VAR_3 = true ; break ; } } boolean VAR_4 = false ; if ( VAR_3 ) { for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { if ( TYPE_1 . METHOD_5 ( VAR_1 [ i ] ) || TYPE_1 . METHOD_5 ( VAR_2 [ i ] ) ) { VAR_4 = true ; break ; } } if ( VAR_4 ) { throw new TYPE_2 ( ) ; } else { VAR_5 = new double [ INT_1 ] [ ] ; VAR_5 [ 0 ] = VAR_1 ; VAR_5 [ 1 ] = VAR_2 ; } } else { VAR_5 = null ; } if ( VAR_6 != null ) { if ( VAR_6 . length != init . length ) { throw new TYPE_3 ( VAR_6 . length , init . length ) ; } for ( int i = 0 ; i < init . length ; i ++ ) { if ( VAR_6 [ i ] < 0 ) { throw new TYPE_4 ( VAR_6 [ i ] ) ; } if ( VAR_5 != null ) { if ( VAR_6 [ i ] > VAR_5 [ 1 ] [ i ] - VAR_5 [ 0 ] [ i ] ) { throw new TYPE_5 ( VAR_6 [ i ] , 0 , VAR_5 [ 1 ] [ i ] - VAR_5 [ 0 ] [ i ] ) ; } } } } }