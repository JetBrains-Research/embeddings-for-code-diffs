public double METHOD_1 ( double x , double VAR_1 , int VAR_2 ) { final double VAR_3 = FLOAT_1 ; double VAR_4 = METHOD_2 ( 0 , x ) ; if ( TYPE_1 . equals ( VAR_4 , 0.0 , VAR_3 ) ) { VAR_4 = VAR_3 ; } int n = 1 ; double VAR_5 = 0.0 ; double VAR_8 = VAR_4 ; double VAR_9 = VAR_4 ; while ( n < VAR_2 ) { final double a = METHOD_2 ( n , x ) ; final double b = METHOD_3 ( n , x ) ; double VAR_20 = a + b * VAR_5 ; if ( TYPE_1 . equals ( VAR_20 , 0.0 , VAR_3 ) ) { VAR_20 = VAR_3 ; } double VAR_10 = a + b / VAR_8 ; if ( TYPE_1 . equals ( VAR_10 , 0.0 , VAR_3 ) ) { VAR_10 = VAR_3 ; } VAR_20 = 1 / VAR_20 ; final double VAR_17 = VAR_10 * VAR_20 ; VAR_9 = VAR_4 * VAR_17 ; if ( TYPE_2 . METHOD_4 ( VAR_9 ) ) { throw new TYPE_4 ( VAR_16 , x ) ; } if ( TYPE_2 . METHOD_6 ( VAR_9 ) ) { throw new TYPE_4 ( VAR_18 , x ) ; } if ( TYPE_3 . METHOD_7 ( VAR_17 - 1.0 ) < VAR_1 ) { break ; } VAR_5 = VAR_20 ; VAR_8 = VAR_10 ; VAR_4 = VAR_9 ; n ++ ; } if ( n >= VAR_2 ) { throw new TYPE_5 ( VAR_19 , VAR_2 , x ) ; } return VAR_9 ; }