protected TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; final int VAR_1 = METHOD_3 ( ) . length ; final double [ ] VAR_2 = METHOD_4 ( ) ; final int VAR_3 = VAR_2 . length ; VAR_4 = TYPE_2 . min ( VAR_1 , VAR_3 ) ; VAR_5 = new double [ VAR_3 ] ; VAR_6 = new double [ VAR_3 ] ; VAR_7 = new double [ VAR_3 ] ; VAR_8 = new int [ VAR_3 ] ; VAR_9 = new double [ VAR_3 ] ; double VAR_10 = 0 ; double VAR_11 = 0 ; double [ ] VAR_12 = new double [ VAR_3 ] ; double [ ] VAR_13 = new double [ VAR_3 ] ; double [ ] VAR_14 = new double [ VAR_1 ] ; double [ ] VAR_15 = new double [ VAR_1 ] ; double [ ] VAR_16 = new double [ VAR_1 ] ; double [ ] VAR_17 = new double [ VAR_3 ] ; double [ ] VAR_18 = new double [ VAR_3 ] ; double [ ] VAR_19 = new double [ VAR_3 ] ; final TYPE_3 VAR_20 = METHOD_5 ( ) ; double [ ] VAR_21 = METHOD_6 ( VAR_2 ) ; double [ ] VAR_22 = METHOD_7 ( VAR_21 ) ; TYPE_1 VAR_23 = new TYPE_1 ( VAR_2 , VAR_21 ) ; double VAR_24 = METHOD_8 ( VAR_22 ) ; VAR_25 = 0 ; boolean VAR_26 = true ; int VAR_27 = 0 ; final TYPE_4 < TYPE_1 > VAR_28 = METHOD_9 ( ) ; while ( true ) { ++ VAR_27 ; final TYPE_1 VAR_29 = VAR_23 ; METHOD_10 ( METHOD_11 ( VAR_2 ) ) ; VAR_30 = VAR_20 . METHOD_12 ( VAR_22 ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { VAR_16 [ i ] = VAR_30 [ i ] ; } METHOD_13 ( VAR_16 ) ; for ( int k = 0 ; k < VAR_4 ; ++ k ) { int VAR_31 = VAR_8 [ k ] ; VAR_32 [ k ] [ VAR_31 ] = VAR_5 [ VAR_31 ] ; } if ( VAR_26 ) { VAR_11 = 0 ; for ( int k = 0 ; k < VAR_3 ; ++ k ) { double VAR_33 = VAR_6 [ k ] ; if ( VAR_33 == 0 ) { VAR_33 = 1.0 ; } double VAR_34 = VAR_33 * VAR_2 [ k ] ; VAR_11 += VAR_34 * VAR_34 ; VAR_12 [ k ] = VAR_33 ; } VAR_11 = TYPE_2 . METHOD_14 ( VAR_11 ) ; VAR_10 = ( VAR_11 == 0 ) ? VAR_35 : ( VAR_35 * VAR_11 ) ; } double VAR_36 = 0 ; if ( VAR_24 != 0 ) { for ( int j = 0 ; j < VAR_4 ; ++ j ) { int VAR_37 = VAR_8 [ j ] ; double VAR_38 = VAR_6 [ VAR_37 ] ; if ( VAR_38 != 0 ) { double sum = 0 ; for ( int i = 0 ; i <= j ; ++ i ) { sum += VAR_32 [ i ] [ VAR_37 ] * VAR_16 [ i ] ; } VAR_36 = TYPE_2 . METHOD_15 ( VAR_36 , TYPE_2 . METHOD_16 ( sum ) / ( VAR_38 * VAR_24 ) ) ; } } } if ( VAR_36 <= VAR_39 ) { METHOD_17 ( VAR_24 ) ; return VAR_23 ; } for ( int j = 0 ; j < VAR_3 ; ++ j ) { VAR_12 [ j ] = TYPE_2 . METHOD_15 ( VAR_12 [ j ] , VAR_6 [ j ] ) ; } for ( double VAR_40 = 0 ; VAR_40 < FLOAT_1 ; ) { for ( int j = 0 ; j < VAR_4 ; ++ j ) { int VAR_37 = VAR_8 [ j ] ; VAR_13 [ VAR_37 ] = VAR_2 [ VAR_37 ] ; } final double VAR_41 = VAR_24 ; double [ ] VAR_42 = VAR_30 ; VAR_30 = VAR_14 ; VAR_14 = VAR_42 ; VAR_42 = VAR_21 ; VAR_21 = VAR_15 ; VAR_15 = VAR_42 ; METHOD_18 ( VAR_16 , VAR_10 , VAR_12 , VAR_17 , VAR_18 , VAR_19 ) ; double VAR_43 = 0 ; for ( int j = 0 ; j < VAR_4 ; ++ j ) { int VAR_37 = VAR_8 [ j ] ; VAR_9 [ VAR_37 ] = - VAR_9 [ VAR_37 ] ; VAR_2 [ VAR_37 ] = VAR_13 [ VAR_37 ] + VAR_9 [ VAR_37 ] ; double VAR_38 = VAR_12 [ VAR_37 ] * VAR_9 [ VAR_37 ] ; VAR_43 += VAR_38 * VAR_38 ; } VAR_43 = TYPE_2 . METHOD_14 ( VAR_43 ) ; if ( VAR_26 ) { VAR_10 = TYPE_2 . min ( VAR_10 , VAR_43 ) ; } VAR_21 = METHOD_6 ( VAR_2 ) ; VAR_22 = METHOD_7 ( VAR_21 ) ; VAR_23 = new TYPE_1 ( VAR_2 , VAR_21 ) ; VAR_24 = METHOD_8 ( VAR_22 ) ; double VAR_44 = - 1.0 ; if ( FLOAT_2 * VAR_24 < VAR_41 ) { double VAR_45 = VAR_24 / VAR_41 ; VAR_44 = 1.0 - VAR_45 * VAR_45 ; } for ( int j = 0 ; j < VAR_4 ; ++ j ) { int VAR_37 = VAR_8 [ j ] ; double VAR_46 = VAR_9 [ VAR_37 ] ; VAR_17 [ j ] = 0 ; for ( int i = 0 ; i <= j ; ++ i ) { VAR_17 [ i ] += VAR_32 [ i ] [ VAR_37 ] * VAR_46 ; } } double VAR_47 = 0 ; for ( int j = 0 ; j < VAR_4 ; ++ j ) { VAR_47 += VAR_17 [ j ] * VAR_17 [ j ] ; } double VAR_48 = VAR_41 * VAR_41 ; VAR_47 = VAR_47 / VAR_48 ; double VAR_49 = VAR_25 * VAR_43 * VAR_43 / VAR_48 ; double VAR_50 = VAR_47 + INT_1 * VAR_49 ; double VAR_51 = - ( VAR_47 + VAR_49 ) ; VAR_40 = ( VAR_50 == 0 ) ? 0 : ( VAR_44 / VAR_50 ) ; if ( VAR_40 <= FLOAT_3 ) { double tmp = ( VAR_44 < 0 ) ? ( FLOAT_4 * VAR_51 / ( VAR_51 + FLOAT_4 * VAR_44 ) ) : FLOAT_4 ; if ( ( FLOAT_2 * VAR_24 >= VAR_41 ) || ( tmp < FLOAT_2 ) ) { tmp = FLOAT_2 ; } VAR_10 = tmp * TYPE_2 . min ( VAR_10 , FLOAT_5 * VAR_43 ) ; VAR_25 /= tmp ; } else if ( ( VAR_25 == 0 ) || ( VAR_40 >= FLOAT_6 ) ) { VAR_10 = INT_1 * VAR_43 ; VAR_25 *= FLOAT_4 ; } if ( VAR_40 >= FLOAT_1 ) { VAR_26 = false ; VAR_11 = 0 ; for ( int k = 0 ; k < VAR_3 ; ++ k ) { double VAR_52 = VAR_12 [ k ] * VAR_2 [ k ] ; VAR_11 += VAR_52 * VAR_52 ; } VAR_11 = TYPE_2 . METHOD_14 ( VAR_11 ) ; if ( VAR_28 != null ) { if ( VAR_28 . METHOD_19 ( VAR_27 , VAR_29 , VAR_23 ) ) { METHOD_17 ( VAR_24 ) ; return VAR_23 ; } } } else { VAR_24 = VAR_41 ; for ( int j = 0 ; j < VAR_4 ; ++ j ) { int VAR_37 = VAR_8 [ j ] ; VAR_2 [ VAR_37 ] = VAR_13 [ VAR_37 ] ; } VAR_42 = VAR_30 ; VAR_30 = VAR_14 ; VAR_14 = VAR_42 ; VAR_42 = VAR_21 ; VAR_21 = VAR_15 ; VAR_15 = VAR_42 ; VAR_23 = new TYPE_1 ( VAR_2 , VAR_21 ) ; } if ( ( TYPE_2 . METHOD_16 ( VAR_44 ) <= VAR_53 && VAR_50 <= VAR_53 && VAR_40 <= FLOAT_7 ) || VAR_10 <= VAR_54 * VAR_11 ) { METHOD_17 ( VAR_24 ) ; return VAR_23 ; } if ( ( TYPE_2 . METHOD_16 ( VAR_44 ) <= FLOAT_8 ) && ( VAR_50 <= FLOAT_8 ) && ( VAR_40 <= FLOAT_7 ) ) { throw new TYPE_5 ( VAR_55 , VAR_53 ) ; } else if ( VAR_10 <= FLOAT_8 * VAR_11 ) { throw new TYPE_5 ( VAR_56 , VAR_54 ) ; } else if ( VAR_36 <= FLOAT_8 ) { throw new TYPE_5 ( VAR_57 , VAR_39 ) ; } } } }