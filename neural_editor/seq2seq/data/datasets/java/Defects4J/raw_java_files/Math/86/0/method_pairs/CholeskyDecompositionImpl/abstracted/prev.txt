public VAR_1 ( final TYPE_1 VAR_2 , final double VAR_3 , final double VAR_4 ) throws TYPE_2 , TYPE_3 , TYPE_4 { if ( ! VAR_2 . METHOD_1 ( ) ) { throw new TYPE_2 ( VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; } final int VAR_5 = VAR_2 . METHOD_2 ( ) ; VAR_6 = VAR_2 . getData ( ) ; VAR_7 = null ; VAR_8 = null ; for ( int i = 0 ; i < VAR_5 ; ++ i ) { final double [ ] VAR_9 = VAR_6 [ i ] ; if ( VAR_6 [ i ] [ i ] < VAR_4 ) { throw new TYPE_4 ( ) ; } for ( int j = i + 1 ; j < VAR_5 ; ++ j ) { final double [ ] VAR_10 = VAR_6 [ j ] ; final double VAR_11 = VAR_9 [ j ] ; final double VAR_12 = VAR_10 [ i ] ; final double VAR_13 = VAR_3 * TYPE_5 . METHOD_4 ( TYPE_5 . METHOD_5 ( VAR_11 ) , TYPE_5 . METHOD_5 ( VAR_12 ) ) ; if ( TYPE_5 . METHOD_5 ( VAR_11 - VAR_12 ) > VAR_13 ) { throw new TYPE_3 ( ) ; } VAR_10 [ i ] = 0 ; } } for ( int i = 0 ; i < VAR_5 ; ++ i ) { final double [ ] VAR_14 = VAR_6 [ i ] ; VAR_14 [ i ] = TYPE_5 . METHOD_6 ( VAR_14 [ i ] ) ; final double VAR_15 = 1.0 / VAR_14 [ i ] ; for ( int VAR_16 = VAR_5 - 1 ; VAR_16 > i ; -- VAR_16 ) { VAR_14 [ VAR_16 ] *= VAR_15 ; final double [ ] VAR_17 = VAR_6 [ VAR_16 ] ; for ( int p = VAR_16 ; p < VAR_5 ; ++ p ) { VAR_17 [ p ] -= VAR_14 [ VAR_16 ] * VAR_14 [ p ] ; } } } }