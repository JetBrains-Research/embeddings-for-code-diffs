public boolean METHOD_1 ( final TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 , TYPE_4 { try { VAR_2 = VAR_1 . METHOD_2 ( ) ; final double VAR_3 = VAR_1 . METHOD_3 ( ) ; final int n = TYPE_5 . METHOD_4 ( 1 , ( int ) TYPE_5 . METHOD_5 ( TYPE_5 . METHOD_6 ( VAR_3 - VAR_4 ) / VAR_5 ) ) ; final double VAR_6 = ( VAR_3 - VAR_4 ) / n ; double VAR_7 = VAR_4 ; double VAR_8 = VAR_9 ; double VAR_10 = VAR_4 + ( VAR_1 . METHOD_2 ( ) ? VAR_11 : - VAR_11 ) ; for ( int i = 0 ; i < n ; ++ i ) { VAR_10 += VAR_6 ; VAR_1 . METHOD_7 ( VAR_10 ) ; final double VAR_12 = VAR_13 . METHOD_8 ( VAR_10 , VAR_1 . METHOD_9 ( ) ) ; if ( VAR_14 ^ ( VAR_12 >= 0 ) ) { if ( VAR_8 * VAR_12 > 0 ) { final double VAR_25 = ( VAR_2 ? FLOAT_1 : - FLOAT_1 ) * VAR_11 ; for ( int k = 0 ; ( k < INT_1 ) && ( VAR_8 * VAR_12 > 0 ) ; ++ k ) { VAR_7 += VAR_25 ; VAR_1 . METHOD_7 ( VAR_7 ) ; VAR_8 = VAR_13 . METHOD_8 ( VAR_7 , VAR_1 . METHOD_9 ( ) ) ; } if ( VAR_8 * VAR_12 > 0 ) { throw TYPE_11 . METHOD_15 ( null ) ; } } VAR_15 = VAR_12 >= VAR_8 ; final TYPE_6 f = new TYPE_6 ( ) { public double value ( final double t ) throws TYPE_7 { try { VAR_1 . METHOD_7 ( t ) ; return VAR_13 . METHOD_8 ( t , VAR_1 . METHOD_9 ( ) ) ; } catch ( TYPE_2 VAR_16 ) { throw new TYPE_7 ( VAR_16 , t ) ; } catch ( TYPE_3 VAR_16 ) { throw new TYPE_7 ( VAR_16 , t ) ; } } } ; final TYPE_8 VAR_17 = new TYPE_8 ( ) ; VAR_17 . METHOD_10 ( VAR_11 ) ; VAR_17 . METHOD_11 ( VAR_18 ) ; final double VAR_19 = ( VAR_7 <= VAR_10 ) ? VAR_17 . METHOD_12 ( f , VAR_7 , VAR_10 ) : VAR_17 . METHOD_12 ( f , VAR_10 , VAR_7 ) ; if ( ( TYPE_5 . METHOD_6 ( VAR_19 - VAR_7 ) <= VAR_11 ) && ( TYPE_5 . METHOD_6 ( VAR_19 - VAR_20 ) <= VAR_11 ) ) { VAR_7 = VAR_10 ; VAR_8 = VAR_12 ; } else if ( TYPE_9 . METHOD_13 ( VAR_20 ) || ( TYPE_5 . METHOD_6 ( VAR_20 - VAR_19 ) > VAR_11 ) ) { VAR_21 = VAR_19 ; if ( VAR_22 && ( TYPE_5 . METHOD_6 ( VAR_3 - VAR_21 ) <= VAR_11 ) ) { return false ; } VAR_22 = true ; return true ; } } else { VAR_7 = VAR_10 ; VAR_8 = VAR_12 ; } } VAR_22 = false ; VAR_21 = VAR_23 ; return false ; } catch ( TYPE_7 VAR_16 ) { final TYPE_10 VAR_24 = VAR_16 . METHOD_14 ( ) ; if ( ( VAR_24 != null ) && ( VAR_24 instanceof TYPE_2 ) ) { throw ( TYPE_2 ) VAR_24 ; } else if ( ( VAR_24 != null ) && ( VAR_24 instanceof TYPE_3 ) ) { throw ( TYPE_3 ) VAR_24 ; } throw new TYPE_3 ( VAR_16 ) ; } }