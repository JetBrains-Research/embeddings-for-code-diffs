public static double METHOD_1 ( final int n , final int k ) { if ( n < k ) { throw new TYPE_1 ( STRING_1 ) ; } if ( n < 0 ) { throw new TYPE_1 ( STRING_2 ) ; } if ( ( n == k ) || ( k == 0 ) ) { return 0 ; } if ( ( k == 1 ) || ( k == n - 1 ) ) { return TYPE_2 . METHOD_2 ( ( double ) n ) ; } if ( n < INT_2 ) { return TYPE_2 . METHOD_2 ( METHOD_3 ( n , k ) ) ; } if ( n < INT_3 ) { return TYPE_2 . METHOD_2 ( METHOD_4 ( n , k ) ) ; } double VAR_1 = 0 ; for ( int i = k + 1 ; i <= n ; i ++ ) { VAR_1 += TYPE_2 . METHOD_2 ( ( double ) i ) ; } for ( int i = INT_1 ; i <= n - k ; i ++ ) { VAR_1 -= TYPE_2 . METHOD_2 ( ( double ) i ) ; } return VAR_1 ; }