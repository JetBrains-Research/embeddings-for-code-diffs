public static double [ ] METHOD_1 ( TYPE_1 function , double VAR_1 , double VAR_2 , double VAR_3 , int VAR_4 ) throws TYPE_2 , TYPE_3 { if ( function == null ) { throw TYPE_4 . METHOD_2 ( STRING_1 ) ; } if ( VAR_4 <= 0 ) { throw TYPE_4 . METHOD_2 ( STRING_2 , VAR_4 ) ; } if ( VAR_1 < VAR_2 || VAR_1 > VAR_3 || VAR_2 >= VAR_3 ) { throw TYPE_4 . METHOD_2 ( STRING_3 , VAR_2 , VAR_1 , VAR_3 ) ; } double a = VAR_1 ; double b = VAR_1 ; double VAR_5 ; double VAR_6 ; int VAR_7 = 0 ; do { a = TYPE_5 . METHOD_3 ( a - 1.0 , VAR_2 ) ; b = TYPE_5 . min ( b + 1.0 , VAR_3 ) ; VAR_5 = function . value ( a ) ; VAR_6 = function . value ( b ) ; VAR_7 ++ ; } while ( ( VAR_5 * VAR_6 > 0.0 ) && ( VAR_7 < VAR_4 ) && ( ( a > VAR_2 ) || ( b < VAR_3 ) ) ) ; if ( VAR_5 * VAR_6 > 0.0 ) { throw new TYPE_2 ( STRING_4 + STRING_5 + STRING_6 , VAR_7 , VAR_4 , VAR_1 , VAR_2 , VAR_3 , a , b , VAR_5 , VAR_6 ) ; } return new double [ ] { a , b } ; }