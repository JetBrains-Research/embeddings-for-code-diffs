public static TYPE_1 METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_1 VAR_2 ) { final double VAR_5 = VAR_1 . METHOD_2 ( ) ; final double VAR_6 = VAR_2 . METHOD_2 ( ) ; if ( ( VAR_5 * VAR_6 ) < VAR_7 ) { return VAR_8 ; } final int VAR_9 = ( TYPE_2 . METHOD_3 ( VAR_5 ) - TYPE_2 . METHOD_3 ( VAR_6 ) ) / INT_1 ; final double VAR_10 = TYPE_2 . METHOD_4 ( VAR_1 . x , - VAR_9 ) ; final double VAR_11 = TYPE_2 . METHOD_4 ( VAR_1 . y , - VAR_9 ) ; final double VAR_12 = TYPE_2 . METHOD_4 ( VAR_4 , - VAR_9 ) ; final double VAR_13 = TYPE_2 . METHOD_4 ( VAR_2 . x , VAR_9 ) ; final double VAR_14 = TYPE_2 . METHOD_4 ( VAR_2 . y , VAR_9 ) ; final double VAR_15 = TYPE_2 . METHOD_4 ( VAR_3 , VAR_9 ) ; final double VAR_16 = ( VAR_10 * VAR_13 + VAR_11 * VAR_14 + VAR_12 * VAR_15 ) / TYPE_2 . METHOD_4 ( VAR_6 , INT_2 * VAR_9 ) ; final double VAR_17 = TYPE_2 . METHOD_5 ( INT_3 * VAR_16 ) / INT_3 ; final double VAR_18 = VAR_10 - VAR_17 * VAR_13 ; final double VAR_19 = VAR_11 - VAR_17 * VAR_14 ; final double VAR_20 = VAR_12 - VAR_17 * VAR_15 ; return new TYPE_1 ( VAR_19 * VAR_15 - VAR_20 * VAR_14 , VAR_20 * VAR_13 - VAR_18 * VAR_15 , VAR_18 * VAR_14 - VAR_19 * VAR_13 ) ; }