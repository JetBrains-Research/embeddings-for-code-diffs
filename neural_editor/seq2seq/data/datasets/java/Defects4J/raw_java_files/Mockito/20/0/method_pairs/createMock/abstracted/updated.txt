public < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 , TYPE_3 VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) == VAR_3 ) { throw new TYPE_4 ( STRING_1 ) ; } TYPE_5 < ? extends TYPE_1 > VAR_4 = VAR_5 . get ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; TYPE_10 VAR_11 = new TYPE_11 ( ) . METHOD_13 ( VAR_1 ) ; TYPE_1 VAR_6 = null ; try { VAR_6 = VAR_11 . METHOD_14 ( VAR_4 ) ; TYPE_6 VAR_8 = ( TYPE_6 ) VAR_6 ; VAR_8 . METHOD_6 ( new TYPE_7 ( METHOD_7 ( VAR_2 ) , VAR_1 ) ) ; return METHOD_8 ( VAR_1 , VAR_6 ) ; } catch ( TYPE_8 VAR_9 ) { throw new TYPE_4 ( METHOD_9 ( STRING_2 , STRING_3 + METHOD_10 ( VAR_4 ) , STRING_4 + METHOD_10 ( VAR_1 . METHOD_3 ( ) ) , STRING_5 + METHOD_10 ( VAR_6 ) , STRING_6 + VAR_11 . getClass ( ) . METHOD_11 ( ) , STRING_7 , STRING_8 , STRING_7 ) , VAR_9 ) ; } catch ( TYPE_9 VAR_10 ) { throw new TYPE_4 ( STRING_9 + VAR_4 . METHOD_12 ( ) . METHOD_11 ( ) + STRING_10 , VAR_10 ) ; } }