public int METHOD_1 ( TYPE_1 VAR_1 , int index , TYPE_2 out ) throws TYPE_3 { if ( VAR_1 . METHOD_2 ( index ) == CHAR_1 && VAR_1 . METHOD_2 ( index + 1 ) == CHAR_2 ) { int start = index + INT_1 ; boolean VAR_2 = false ; char VAR_3 = VAR_1 . METHOD_2 ( start ) ; if ( VAR_3 == CHAR_3 || VAR_3 == CHAR_4 ) { start ++ ; VAR_2 = true ; } int end = start ; while ( VAR_1 . METHOD_2 ( end ) != CHAR_5 ) { end ++ ; } int VAR_4 ; try { if ( VAR_2 ) { VAR_4 = TYPE_4 . METHOD_3 ( VAR_1 . METHOD_4 ( start , end ) . toString ( ) , INT_2 ) ; } else { VAR_4 = TYPE_4 . METHOD_3 ( VAR_1 . METHOD_4 ( start , end ) . toString ( ) , INT_3 ) ; } } catch ( TYPE_5 VAR_5 ) { return 0 ; } if ( VAR_4 > INT_4 ) { char [ ] VAR_6 = TYPE_6 . METHOD_5 ( VAR_4 ) ; out.write ( VAR_6 [ 0 ] ) ; out.write ( VAR_6 [ 1 ] ) ; } else { out.write ( VAR_4 ) ; } return INT_1 + ( end - start ) + ( VAR_2 ? 1 : 0 ) + 1 ; } return 0 ; }