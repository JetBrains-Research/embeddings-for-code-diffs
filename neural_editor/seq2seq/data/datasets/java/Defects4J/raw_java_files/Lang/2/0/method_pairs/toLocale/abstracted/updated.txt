public static TYPE_1 METHOD_1 ( final String str ) { if ( str == null ) { return null ; } if ( str . contains ( STRING_3 ) ) { throw new TYPE_2 ( STRING_1 + str ) ; } final int VAR_1 = str . length ( ) ; if ( VAR_1 < INT_1 ) { throw new TYPE_2 ( STRING_1 + str ) ; } final char VAR_2 = str . METHOD_2 ( 0 ) ; if ( VAR_2 == CHAR_1 ) { if ( VAR_1 < INT_2 ) { throw new TYPE_2 ( STRING_1 + str ) ; } final char VAR_3 = str . METHOD_2 ( 1 ) ; final char VAR_4 = str . METHOD_2 ( INT_1 ) ; if ( ! TYPE_3 . METHOD_3 ( VAR_3 ) || ! TYPE_3 . METHOD_3 ( VAR_4 ) ) { throw new TYPE_2 ( STRING_1 + str ) ; } if ( VAR_1 == INT_2 ) { return new TYPE_1 ( STRING_2 , str . substring ( 1 , INT_2 ) ) ; } if ( VAR_1 < INT_3 ) { throw new TYPE_2 ( STRING_1 + str ) ; } if ( str . METHOD_2 ( INT_2 ) != CHAR_1 ) { throw new TYPE_2 ( STRING_1 + str ) ; } return new TYPE_1 ( STRING_2 , str . substring ( 1 , INT_2 ) , str . substring ( INT_4 ) ) ; } else { final char VAR_3 = str . METHOD_2 ( 1 ) ; if ( ! TYPE_3 . METHOD_4 ( VAR_2 ) || ! TYPE_3 . METHOD_4 ( VAR_3 ) ) { throw new TYPE_2 ( STRING_1 + str ) ; } if ( VAR_1 == INT_1 ) { return new TYPE_1 ( str ) ; } if ( VAR_1 < INT_3 ) { throw new TYPE_2 ( STRING_1 + str ) ; } if ( str . METHOD_2 ( INT_1 ) != CHAR_1 ) { throw new TYPE_2 ( STRING_1 + str ) ; } final char VAR_5 = str . METHOD_2 ( INT_2 ) ; if ( VAR_5 == CHAR_1 ) { return new TYPE_1 ( str . substring ( 0 , INT_1 ) , STRING_2 , str . substring ( INT_4 ) ) ; } final char VAR_6 = str . METHOD_2 ( INT_4 ) ; if ( ! TYPE_3 . METHOD_3 ( VAR_5 ) || ! TYPE_3 . METHOD_3 ( VAR_6 ) ) { throw new TYPE_2 ( STRING_1 + str ) ; } if ( VAR_1 == INT_3 ) { return new TYPE_1 ( str . substring ( 0 , INT_1 ) , str . substring ( INT_2 , INT_3 ) ) ; } if ( VAR_1 < INT_5 ) { throw new TYPE_2 ( STRING_1 + str ) ; } if ( str . METHOD_2 ( INT_3 ) != CHAR_1 ) { throw new TYPE_2 ( STRING_1 + str ) ; } return new TYPE_1 ( str . substring ( 0 , INT_1 ) , str . substring ( INT_2 , INT_3 ) , str . substring ( INT_6 ) ) ; } }