private static void METHOD_1 ( TYPE_1 VAR_1 , int field , boolean VAR_2 ) { if ( VAR_1 . get ( VAR_3 ) > INT_1 ) { throw new TYPE_2 ( STRING_1 ) ; } if ( field == VAR_4 ) { return ; } TYPE_3 date = VAR_1 . getTime ( ) ; long time = date . getTime ( ) ; boolean VAR_5 = false ; int VAR_6 = VAR_1 . get ( VAR_4 ) ; if ( ! VAR_2 || VAR_6 < INT_2 ) { time = time - VAR_6 ; } if ( field == VAR_7 ) { VAR_5 = true ; } int VAR_8 = VAR_1 . get ( VAR_7 ) ; if ( ! VAR_5 && ( ! VAR_2 || VAR_8 < INT_3 ) ) { time = time - ( VAR_8 * INT_4 ) ; } if ( field == VAR_9 ) { VAR_5 = true ; } int VAR_10 = VAR_1 . get ( VAR_9 ) ; if ( ! VAR_5 && ( ! VAR_2 || VAR_10 < INT_3 ) ) { time = time - ( VAR_10 * INT_5 ) ; } if ( date . getTime ( ) != time ) { date . METHOD_2 ( time ) ; VAR_1 . METHOD_2 ( date ) ; } boolean VAR_11 = false ; for ( int i = 0 ; i < VAR_12 . length ; i ++ ) { for ( int j = 0 ; j < VAR_12 [ i ] . length ; j ++ ) { if ( VAR_12 [ i ] [ j ] == field ) { if ( VAR_2 && VAR_11 ) { if ( field == VAR_13 ) { if ( VAR_1 . get ( VAR_14 ) == 1 ) { VAR_1 . add ( VAR_14 , INT_6 ) ; } else { VAR_1 . add ( VAR_14 , - INT_6 ) ; VAR_1 . add ( VAR_15 , 1 ) ; } } else { VAR_1 . add ( VAR_12 [ i ] [ 0 ] , 1 ) ; } } return ; } } int offset = 0 ; boolean VAR_16 = false ; switch ( field ) { case VAR_13 : if ( VAR_12 [ i ] [ 0 ] == VAR_14 ) { offset = VAR_1 . get ( VAR_14 ) - 1 ; if ( offset >= INT_6 ) { offset -= INT_6 ; } VAR_11 = offset > INT_7 ; VAR_16 = true ; } break ; case VAR_17 : if ( VAR_12 [ i ] [ 0 ] == VAR_18 ) { offset = VAR_1 . get ( VAR_18 ) ; if ( offset >= INT_8 ) { offset -= INT_8 ; } VAR_11 = offset > INT_9 ; VAR_16 = true ; } break ; } if ( ! VAR_16 ) { int min = VAR_1 . METHOD_3 ( VAR_12 [ i ] [ 0 ] ) ; int VAR_19 = VAR_1 . METHOD_4 ( VAR_12 [ i ] [ 0 ] ) ; offset = VAR_1 . get ( VAR_12 [ i ] [ 0 ] ) - min ; VAR_11 = offset > ( ( VAR_19 - min ) / INT_10 ) ; } if ( offset != 0 ) { VAR_1 . set ( VAR_12 [ i ] [ 0 ] , VAR_1 . get ( VAR_12 [ i ] [ 0 ] ) - offset ) ; } } throw new TYPE_4 ( STRING_2 + field + STRING_3 ) ; }