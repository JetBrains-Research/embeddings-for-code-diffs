private static void METHOD_1 ( TYPE_1 VAR_1 , int field , boolean VAR_2 ) { if ( VAR_1 . get ( VAR_3 ) > INT_1 ) { throw new TYPE_2 ( STRING_1 ) ; } boolean VAR_4 = false ; for ( int i = 0 ; i < VAR_5 . length ; i ++ ) { for ( int j = 0 ; j < VAR_5 [ i ] . length ; j ++ ) { if ( VAR_5 [ i ] [ j ] == field ) { if ( VAR_2 && VAR_4 ) { if ( field == VAR_6 ) { if ( VAR_1 . get ( VAR_7 ) == 1 ) { VAR_1 . add ( VAR_7 , INT_2 ) ; } else { VAR_1 . add ( VAR_7 , - INT_2 ) ; VAR_1 . add ( VAR_8 , 1 ) ; } } else { VAR_1 . add ( VAR_5 [ i ] [ 0 ] , 1 ) ; } } return ; } } int offset = 0 ; boolean VAR_9 = false ; switch ( field ) { case VAR_6 : if ( VAR_5 [ i ] [ 0 ] == VAR_7 ) { offset = VAR_1 . get ( VAR_7 ) - 1 ; if ( offset >= INT_2 ) { offset -= INT_2 ; } VAR_4 = offset > INT_3 ; VAR_9 = true ; } break ; case VAR_10 : if ( VAR_5 [ i ] [ 0 ] == VAR_11 ) { offset = VAR_1 . get ( VAR_11 ) ; if ( offset >= INT_4 ) { offset -= INT_4 ; } VAR_4 = offset > INT_5 ; VAR_9 = true ; } break ; } if ( ! VAR_9 ) { int min = VAR_1 . METHOD_2 ( VAR_5 [ i ] [ 0 ] ) ; int VAR_12 = VAR_1 . METHOD_3 ( VAR_5 [ i ] [ 0 ] ) ; offset = VAR_1 . get ( VAR_5 [ i ] [ 0 ] ) - min ; VAR_4 = offset > ( ( VAR_12 - min ) / INT_6 ) ; } VAR_1 . set ( VAR_5 [ i ] [ 0 ] , VAR_1 . get ( VAR_5 [ i ] [ 0 ] ) - offset ) ; } throw new TYPE_3 ( STRING_2 + field + STRING_3 ) ; }