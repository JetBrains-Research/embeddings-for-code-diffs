public static < TYPE_1 > TYPE_1 [ ] METHOD_1 ( TYPE_1 [ ] VAR_1 , TYPE_1 ... VAR_2 ) { if ( VAR_1 == null ) { return METHOD_2 ( VAR_2 ) ; } else if ( VAR_2 == null ) { return METHOD_2 ( VAR_1 ) ; } final TYPE_2 < ? > VAR_3 = VAR_1 . getClass ( ) . METHOD_3 ( ) ; TYPE_1 [ ] VAR_4 = ( TYPE_1 [ ] ) TYPE_3 . METHOD_4 ( VAR_3 , VAR_1 . length + VAR_2 . length ) ; TYPE_4 . METHOD_5 ( VAR_1 , 0 , VAR_4 , 0 , VAR_1 . length ) ; try { TYPE_4 . METHOD_5 ( VAR_2 , 0 , VAR_4 , VAR_1 . length , VAR_2 . length ) ; } catch ( TYPE_5 VAR_5 ) { final TYPE_2 < ? > VAR_6 = VAR_2 . getClass ( ) . METHOD_3 ( ) ; if ( ! VAR_3 . METHOD_6 ( VAR_6 ) ) { throw new TYPE_6 ( STRING_1 + VAR_6 . getName ( ) + STRING_2 + VAR_3 . getName ( ) ) ; } throw VAR_5 ; } return VAR_4 ; }