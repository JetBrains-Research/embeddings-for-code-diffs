public static TYPE_1 METHOD_1 ( String VAR_1 ) throws TYPE_2 { if ( VAR_1 == null ) { return null ; } if ( VAR_1 . length ( ) == 0 ) { throw new TYPE_2 ( STRING_1 ) ; } if ( VAR_1 . startsWith ( STRING_2 ) ) { return null ; } if ( VAR_1 . startsWith ( STRING_3 ) || VAR_1 . startsWith ( STRING_4 ) ) { return METHOD_2 ( VAR_1 ) ; } char VAR_2 = VAR_1 . METHOD_3 ( VAR_1 . length ( ) - 1 ) ; String VAR_3 ; String VAR_4 ; String VAR_5 ; int VAR_6 = VAR_1 . METHOD_4 ( CHAR_1 ) ; int VAR_7 = VAR_1 . METHOD_4 ( CHAR_2 ) + VAR_1 . METHOD_4 ( CHAR_3 ) + 1 ; if ( VAR_6 > - 1 ) { if ( VAR_7 > - 1 ) { if ( VAR_7 < VAR_6 ) { throw new TYPE_2 ( VAR_1 + STRING_5 ) ; } VAR_4 = VAR_1 . substring ( VAR_6 + 1 , VAR_7 ) ; } else { VAR_4 = VAR_1 . substring ( VAR_6 + 1 ) ; } VAR_3 = VAR_1 . substring ( 0 , VAR_6 ) ; } else { if ( VAR_7 > - 1 ) { VAR_3 = VAR_1 . substring ( 0 , VAR_7 ) ; } else { VAR_3 = VAR_1 ; } VAR_4 = null ; } if ( ! TYPE_3 . METHOD_5 ( VAR_2 ) ) { if ( VAR_7 > - 1 && VAR_7 < VAR_1 . length ( ) - 1 ) { VAR_5 = VAR_1 . substring ( VAR_7 + 1 , VAR_1 . length ( ) - 1 ) ; } else { VAR_5 = null ; } String VAR_8 = VAR_1 . substring ( 0 , VAR_1 . length ( ) - 1 ) ; boolean VAR_9 = METHOD_6 ( VAR_3 ) && METHOD_6 ( VAR_5 ) ; switch ( VAR_2 ) { case CHAR_4 : case CHAR_5 : if ( VAR_4 == null && VAR_5 == null && ( VAR_8 . METHOD_3 ( 0 ) == CHAR_6 && METHOD_7 ( VAR_8 . substring ( 1 ) ) || METHOD_7 ( VAR_8 ) ) ) { try { return METHOD_8 ( VAR_8 ) ; } catch ( TYPE_2 VAR_10 ) { } return METHOD_9 ( VAR_8 ) ; } throw new TYPE_2 ( VAR_1 + STRING_5 ) ; case CHAR_7 : case CHAR_8 : try { TYPE_4 f = TYPE_5 . METHOD_10 ( VAR_8 ) ; if ( ! ( f . METHOD_11 ( ) || ( f . METHOD_12 ( ) == 0.0F && ! VAR_9 ) ) ) { return f ; } } catch ( TYPE_2 VAR_11 ) { } case CHAR_9 : case CHAR_10 : try { TYPE_6 VAR_12 = TYPE_5 . METHOD_13 ( VAR_8 ) ; if ( ! ( VAR_12 . METHOD_11 ( ) || ( VAR_12 . METHOD_12 ( ) == FLOAT_1 && ! VAR_9 ) ) ) { return VAR_12 ; } } catch ( TYPE_2 VAR_10 ) { } try { return METHOD_14 ( VAR_8 ) ; } catch ( TYPE_2 VAR_11 ) { } default : throw new TYPE_2 ( VAR_1 + STRING_5 ) ; } } else { if ( VAR_7 > - 1 && VAR_7 < VAR_1 . length ( ) - 1 ) { VAR_5 = VAR_1 . substring ( VAR_7 + 1 , VAR_1 . length ( ) ) ; } else { VAR_5 = null ; } if ( VAR_4 == null && VAR_5 == null ) { try { return METHOD_2 ( VAR_1 ) ; } catch ( TYPE_2 VAR_10 ) { } try { return METHOD_8 ( VAR_1 ) ; } catch ( TYPE_2 VAR_10 ) { } return METHOD_9 ( VAR_1 ) ; } else { boolean VAR_9 = METHOD_6 ( VAR_3 ) && METHOD_6 ( VAR_5 ) ; try { TYPE_4 f = METHOD_10 ( VAR_1 ) ; if ( ! ( f . METHOD_11 ( ) || ( f . METHOD_12 ( ) == 0.0F && ! VAR_9 ) ) ) { return f ; } } catch ( TYPE_2 VAR_10 ) { } try { TYPE_6 VAR_12 = METHOD_13 ( VAR_1 ) ; if ( ! ( VAR_12 . METHOD_11 ( ) || ( VAR_12 . METHOD_15 ( ) == FLOAT_1 && ! VAR_9 ) ) ) { return VAR_12 ; } } catch ( TYPE_2 VAR_10 ) { } return METHOD_14 ( VAR_1 ) ; } } }