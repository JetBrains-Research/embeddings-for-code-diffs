private static void METHOD_1 ( TYPE_1 out , String str , boolean VAR_1 , boolean VAR_4 ) throws TYPE_2 { if ( out == null ) { throw new TYPE_3 ( STRING_1 ) ; } if ( str == null ) { return ; } int VAR_2 ; VAR_2 = str . length ( ) ; for ( int i = 0 ; i < VAR_2 ; i ++ ) { char VAR_3 = str . METHOD_2 ( i ) ; if ( VAR_3 > INT_1 ) { out.write ( STRING_2 + METHOD_3 ( VAR_3 ) ) ; } else if ( VAR_3 > INT_2 ) { out.write ( STRING_3 + METHOD_3 ( VAR_3 ) ) ; } else if ( VAR_3 > INT_3 ) { out.write ( STRING_4 + METHOD_3 ( VAR_3 ) ) ; } else if ( VAR_3 < INT_4 ) { switch ( VAR_3 ) { case CHAR_1 : out.write ( CHAR_2 ) ; out.write ( CHAR_3 ) ; break ; case CHAR_4 : out.write ( CHAR_2 ) ; out.write ( CHAR_5 ) ; break ; case CHAR_6 : out.write ( CHAR_2 ) ; out.write ( CHAR_7 ) ; break ; case CHAR_8 : out.write ( CHAR_2 ) ; out.write ( CHAR_9 ) ; break ; case CHAR_10 : out.write ( CHAR_2 ) ; out.write ( CHAR_11 ) ; break ; default : if ( VAR_3 > INT_5 ) { out.write ( STRING_4 + METHOD_3 ( VAR_3 ) ) ; } else { out.write ( STRING_5 + METHOD_3 ( VAR_3 ) ) ; } break ; } } else { switch ( VAR_3 ) { case CHAR_12 : if ( VAR_1 ) { out.write ( CHAR_2 ) ; } out.write ( CHAR_12 ) ; break ; case CHAR_13 : out.write ( CHAR_2 ) ; out.write ( CHAR_13 ) ; break ; case CHAR_2 : out.write ( CHAR_2 ) ; out.write ( CHAR_2 ) ; break ; case CHAR_14 : if ( VAR_4 ) { out.write ( CHAR_2 ) ; } out.write ( CHAR_14 ) ; break ; default : out.write ( VAR_3 ) ; break ; } } } }