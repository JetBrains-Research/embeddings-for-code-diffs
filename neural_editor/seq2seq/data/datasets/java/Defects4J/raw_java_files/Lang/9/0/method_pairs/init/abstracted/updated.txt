private void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 , VAR_3 ) . get ( VAR_4 ) ; VAR_5 = new TYPE_2 < TYPE_3 , TYPE_4 [ ] > ( ) ; TYPE_5 VAR_6 = new TYPE_5 ( ) ; TYPE_6 < TYPE_7 > VAR_7 = new TYPE_8 < TYPE_7 > ( ) ; TYPE_9 VAR_8 = VAR_9 . METHOD_2 ( pattern ) ; if ( ! VAR_8 . METHOD_3 ( ) ) { throw new TYPE_10 ( STRING_1 ) ; } VAR_10 = VAR_8 . METHOD_4 ( ) ; TYPE_7 VAR_11 = METHOD_5 ( VAR_10 ) ; for ( ; ; ) { VAR_8 . METHOD_6 ( VAR_8 . end ( ) , VAR_8 . METHOD_7 ( ) ) ; if ( ! VAR_8 . METHOD_3 ( ) ) { VAR_12 = null ; break ; } String VAR_13 = VAR_8 . METHOD_4 ( ) ; VAR_12 = METHOD_5 ( VAR_13 ) ; if ( VAR_11 . METHOD_8 ( this , VAR_6 ) ) { VAR_7 . add ( VAR_11 ) ; } VAR_10 = VAR_13 ; VAR_11 = VAR_12 ; } if ( VAR_8 . METHOD_11 ( ) != VAR_8 . METHOD_7 ( ) ) { throw new TYPE_10 ( STRING_2 + pattern + STRING_3 + VAR_8 . METHOD_11 ( ) ) ; } if ( VAR_11 . METHOD_8 ( this , VAR_6 ) ) { VAR_7 . add ( VAR_11 ) ; } VAR_10 = null ; VAR_14 = VAR_7 . METHOD_9 ( new TYPE_7 [ VAR_7 . size ( ) ] ) ; VAR_15 = TYPE_11 . METHOD_10 ( VAR_6 . toString ( ) ) ; }