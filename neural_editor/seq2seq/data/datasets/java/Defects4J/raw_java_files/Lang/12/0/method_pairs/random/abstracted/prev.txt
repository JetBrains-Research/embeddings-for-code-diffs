public static String METHOD_1 ( int count , int start , int end , boolean VAR_1 , boolean VAR_2 , char [ ] VAR_3 , TYPE_1 VAR_4 ) { if ( count == 0 ) { return STRING_1 ; } else if ( count < 0 ) { throw new TYPE_2 ( STRING_2 + count + STRING_3 ) ; } if ( start == 0 && end == 0 ) { if ( ! VAR_1 && ! VAR_2 ) { end = VAR_5 ; } else { end = CHAR_1 + 1 ; start = CHAR_2 ; } } char [ ] buffer = new char [ count ] ; int VAR_6 = end - start ; while ( count -- != 0 ) { char VAR_7 ; if ( VAR_3 == null ) { VAR_7 = ( char ) ( VAR_4 . METHOD_2 ( VAR_6 ) + start ) ; } else { VAR_7 = VAR_3 [ VAR_4 . METHOD_2 ( VAR_6 ) + start ] ; } if ( VAR_1 && TYPE_3 . METHOD_3 ( VAR_7 ) || VAR_2 && TYPE_3 . METHOD_4 ( VAR_7 ) || ! VAR_1 && ! VAR_2 ) { if ( VAR_7 >= INT_1 && VAR_7 <= INT_2 ) { if ( count == 0 ) { count ++ ; } else { buffer [ count ] = VAR_7 ; count -- ; buffer [ count ] = ( char ) ( INT_3 + VAR_4 . METHOD_2 ( INT_4 ) ) ; } } else if ( VAR_7 >= INT_3 && VAR_7 <= INT_5 ) { if ( count == 0 ) { count ++ ; } else { buffer [ count ] = ( char ) ( INT_1 + VAR_4 . METHOD_2 ( INT_4 ) ) ; count -- ; buffer [ count ] = VAR_7 ; } } else if ( VAR_7 >= INT_6 && VAR_7 <= INT_7 ) { count ++ ; } else { buffer [ count ] = VAR_7 ; } } else { count ++ ; } } return new String ( buffer ) ; }