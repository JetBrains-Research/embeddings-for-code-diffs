private void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( ( VAR_2 ? VAR_3 : 0 ) ) ; } 
public java.lang.String METHOD_1 ( java.lang.String input ) { return input ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 ) ; } 
public boolean METHOD_1 ( TYPE_1 config ) { if ( VAR_1 ) { android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ; } TYPE_2 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( ) ; } 
public static void METHOD_1 ( byte [ ] x , byte [ ] y , int VAR_1 , int VAR_2 ) { while ( ( -- VAR_2 ) >= 0 ) { x [ VAR_2 ] ^= y [ ( VAR_1 + VAR_2 ) ] ; } } 
public final byte get ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return get ( METHOD_1 ( METHOD_2 ( i ) ) ) ; } 
public TYPE_1 call ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_1 ( name , VAR_2 ) ; return VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_3 ; } 
public boolean METHOD_1 ( com.android.jack.ir.ast.JMethod method ) { return METHOD_3 ( method ) ; } 
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 > 0 ) && ( ( VAR_2 ) > 0 ) ) { METHOD_2 ( ( VAR_1 * ( VAR_2 ) ) ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = TYPE_3 . METHOD_2 ( key . toString ( ) ) ; VAR_3 [ VAR_2 ] = new TYPE_3 ( ) ; return VAR_4 ; } 
synchronized int METHOD_1 ( long VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String name ) throws java.io.IOException { if ( ( name . equals ( STRING_1 ) ) || ( name . METHOD_2 ( STRING_2 ) ) ) { return context . out ; } return new TYPE_2 ( name ) ; } 
final void METHOD_1 ( int pos , int [ ] src , int VAR_1 , int length ) { TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_2 < ? super java.lang.String > VAR_1 ) { return new TYPE_3 < TYPE_1 > ( VAR_1 ) ; } 
public static int METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { return ( TYPE_1 . length ( ) ) / ( VAR_2 ) ; } finally { VAR_1 . METHOD_3 ( ) ; } } 
private void METHOD_1 ( boolean VAR_1 , boolean VAR_2 , boolean VAR_3 ) { VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
public abstract int [ ] METHOD_1 ( int [ ] src , int [ ] VAR_1 , int [ ] result ) ; 
private void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_1 ) ; } 
public boolean METHOD_1 ( ) { return METHOD_1 ( METHOD_2 ( ) , METHOD_3 ( ) ) ; } 
public abstract void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) ; 
public static long METHOD_1 ( ) { long VAR_1 = 10 ; int VAR_2 = 3 ; return VAR_1 | VAR_2 ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 = VAR_1 ; } } 
final void METHOD_1 ( int offset , short value ) { VAR_1 . METHOD_1 ( ( offset + ( address ) ) , value ) ; } 
public void METHOD_1 ( TYPE_1 context , android.content.Intent VAR_1 ) { java.lang.String action = VAR_1 . METHOD_2 ( ) ; if ( action . equals ( VAR_2 ) ) { METHOD_3 ( VAR_3 ) ; METHOD_5 ( VAR_1 ) ; } } 
private java.lang.String METHOD_1 ( java.io.File VAR_1 ) { try { return TYPE_1 . METHOD_2 ( this , VAR_1 ) ; } catch ( java.io.IOException e ) { return STRING_1 ; } } 
public byte [ ] METHOD_1 ( ) { return null ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) . METHOD_2 ( ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_5 ( ) ; TYPE_4 . METHOD_6 ( VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; } 
private native boolean METHOD_1 ( byte [ ] address , java.lang.String number ) ; 
public int METHOD_1 ( ) { return VAR_1 ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int w , int h , long [ ] d , int VAR_6 ) ; 
public void METHOD_1 ( java.lang.String id , int state , java.lang.String VAR_1 ) { if ( ( type ) == ( VAR_2 ) ) { VAR_3 = id ; VAR_4 = VAR_1 ; this . state = state ; } } 
public synchronized void METHOD_1 ( int index ) { if ( ( 0 <= index ) && ( index < ( VAR_1 . length ) ) ) { VAR_2 = index ; } else { VAR_2 = - 1 ; } } 
private void METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 VAR_3 ) { VAR_4 . METHOD_3 ( VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_1 ) ; VAR_6 . METHOD_3 ( VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String source ) { return VAR_1 . METHOD_1 ( source ) ; } 
synchronized void METHOD_1 ( long id , int VAR_1 , byte [ ] VAR_2 , long e , int [ ] VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , e , VAR_3 ) ; } 
private void METHOD_1 ( final int VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } 
public java.util.List < TYPE_2 > METHOD_1 ( ) { TYPE_3 < TYPE_2 > VAR_1 = TYPE_4 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ; METHOD_3 ( VAR_1 , VAR_4 , VAR_5 ) ; return VAR_1 . build ( ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_5 = VAR_1 ; return VAR_4 ; } 
public TYPE_1 METHOD_1 ( ) { return METHOD_1 ( false , true ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < java.lang.String > VAR_4 ) { } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 config , int [ ] VAR_2 ) { long VAR_3 = METHOD_2 ( VAR_1 , config , VAR_2 ) ; if ( VAR_3 == 0 ) { return VAR_4 ; } return new TYPE_4 ( VAR_3 ) ; } 
public static float METHOD_1 ( ) { double VAR_1 = FLOAT_1 ; return ( ( float ) ( VAR_1 ) ) ; } 
static TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 r = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 , VAR_1 , false , 0 , 0 , 0 ) ; return r ; } 
public int METHOD_1 ( int VAR_1 , TYPE_1 listener ) throws android.os.RemoteException { return 0 ; } 
public int METHOD_1 ( int action , int VAR_1 , java.lang.String number , int VAR_2 , int VAR_3 ) { return 0 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; try { int VAR_1 = TYPE_1 . METHOD_3 ( STRING_1 ) ; fail ( STRING_2 ) ; } catch ( java.lang.RuntimeException e ) { } } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , VAR_1 , true ) ; args.out = TYPE_3 . METHOD_3 ( args . inV , t ) ; } 
public void error ( int VAR_1 , java.lang.String VAR_2 ) throws android.os.RemoteException { } 
public java.util.Set < java.lang.String > METHOD_3 ( ) { return VAR_1 . METHOD_3 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { } 
public java.lang.String METHOD_1 ( ) { return ( ( ( name ) + STRING_1 ) + ( count ( ) ) ) + STRING_2 ; } 
public static float METHOD_1 ( float x , float y ) { float VAR_2 = x - y ; return VAR_2 + y ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 method , TYPE_3 VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 , method , VAR_2 ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return TYPE_4 . METHOD_2 ( false ) ; } 
synchronized void METHOD_1 ( long id , int [ ] VAR_1 , int [ ] VAR_2 , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 ) ; } 
public static int METHOD_1 ( ) { return 16 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , null , VAR_4 , 0 ) ; fail ( STRING_1 ) ; } catch ( java.lang.IllegalArgumentException VAR_5 ) { } } 
private void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { METHOD_1 ( VAR_1 , 1 , STRING_1 , 12 ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( ) ; VAR_3 . METHOD_4 ( METHOD_5 ( VAR_4 ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 key ) { if ( ( VAR_2 = TYPE_3 . METHOD_2 ( key ) ) != null ) { return VAR_3 ; } return null ; } 
private void METHOD_1 ( byte [ ] address , int state ) { TYPE_1 event = new TYPE_1 ( VAR_1 ) ; event . device = METHOD_2 ( address ) ; VAR_2 = state ; METHOD_3 ( VAR_3 , event ) ; } 
public void METHOD_1 ( TYPE_1 output ) throws java.io.IOException { } 
public void info ( java.lang.String VAR_1 , java.lang.Object ... args ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , java.lang.String.format ( VAR_1 , args ) ) ; } 
public java.io.File [ ] METHOD_1 ( ) { return VAR_1 ; } 
void METHOD_1 ( ) { boolean VAR_1 = VAR_2 . METHOD_2 ( false ) ; assert VAR_1 ; } 
private boolean METHOD_1 ( final java.lang.String VAR_1 ) throws java.lang.Exception { if ( ( VAR_2 ) == null ) { VAR_2 = METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; } return VAR_2 . METHOD_4 ( VAR_1 ) ; } 
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { if ( VAR_2 ) android.util.Log.d ( VAR_3 . TAG , STRING_1 ) ; return false ; } return VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( this ) ; } 
public void METHOD_1 ( java.lang.String id ) throws java.lang.Exception { for ( TYPE_1 a : VAR_1 ) { a . METHOD_2 ( id , METHOD_3 ( VAR_2 . get ( id ) ) , null ) ; } } 
public TYPE_1 METHOD_2 ( ) { if ( ( VAR_1 ) == null ) { return null ; } return VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 res ) { VAR_1 = new TYPE_2 ( mRS ) ; } 
public void METHOD_1 ( ) { if ( VAR_2 ) { TYPE_1 . i ( this , STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_3 , VAR_6 ) ; VAR_2 = false ; } } 
static void METHOD_1 ( long VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return ; } VAR_5 = VAR_6 [ VAR_2 ] ; } 
final TYPE_1 METHOD_1 ( int i ) { TYPE_1 x = ( ( TYPE_1 ) ( VAR_1 [ i ] ) ) ; return x ; } 
native long METHOD_1 ( long VAR_1 , long VAR_2 , int VAR_3 ) ; 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException { TYPE_1 VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return null ; } return TYPE_4 . METHOD_3 ( VAR_2 ) ; } 
public boolean METHOD_1 ( ) { if ( ! ( VAR_2 ) ) { return false ; } return super . METHOD_1 ( ) ; } 
public long METHOD_1 ( TYPE_1 VAR_1 ) { int index = VAR_1 . METHOD_2 ( ) ; return ( 0 <= index ) && ( index < ( VAR_2 . length ) ) ? VAR_2 [ VAR_1 . METHOD_2 ( ) ] : 0 ; } 
public void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_1 ( null ) ; } 
final int METHOD_1 ( int offset ) { return VAR_1 . METHOD_1 ( ( offset + ( address ) ) ) ; } 
public void METHOD_1 ( ) { try { TYPE_1 e = TYPE_2 . METHOD_2 ( ) ; new TYPE_3 ( e , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } } 
public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { } 
private static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return ; } VAR_5 . METHOD_1 ( VAR_2 ) ; } 
public static boolean METHOD_1 ( ) { try { return null instanceof TYPE_1 ; } catch ( TYPE_3 e ) { } return false ; } 
private static boolean METHOD_1 ( int VAR_1 , int format ) { switch ( VAR_1 ) { case - 1 : case CHAR_1 : case CHAR_2 : return true ; case CHAR_3 : return format != ( VAR_2 ) ; default : return false ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_3 ( true , null ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 e ) { } } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { METHOD_1 ( VAR_1 , VAR_2 , null ) ; } 
public void METHOD_1 ( TYPE_1 call ) { TYPE_2 . d ( this , STRING_2 , call ) ; METHOD_3 ( call ) ; } 
protected void loge ( java.lang.String s ) { android.util.Log.e ( getName ( ) , s ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( INT_1 ) ) ; assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( INT_2 ) ) ; assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( INT_3 ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ( TYPE_1 VAR_1 ) - > { VAR_2 = VAR_3 ; VAR_4 = VAR_3 ; VAR_1 . x = 100 ; VAR_1 . y = 100 ; } ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , null ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_3 ( VAR_5 , VAR_4 ) ; } 
protected void METHOD_1 ( ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_2 . METHOD_3 ( VAR_2 ) ; TYPE_3 . assertTrue ( STRING_1 , TYPE_2 . METHOD_4 ( VAR_2 ) ) ; } 
protected void METHOD_1 ( ) { TYPE_2 d = new TYPE_2 ( METHOD_2 ( ) , VAR_1 ) ; if ( d . METHOD_3 ( ) ) { METHOD_4 ( ) ; } } 
synchronized java.lang.String METHOD_1 ( long obj ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , obj ) ; } 
public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = TYPE_2 . METHOD_2 ( ) ; if ( VAR_1 instanceof TYPE_1 ) { return new TYPE_1 ( ( ( TYPE_1 ) ( VAR_1 ) ) ) ; } return null ; } 
public void METHOD_1 ( java.lang.Integer VAR_1 , byte [ ] VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { assertTrue ( VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) ; assertTrue ( VAR_1 . METHOD_2 ( STRING_3 , STRING_4 ) ) ; } 
public static TYPE_1 METHOD_2 ( TYPE_2 context ) { return new TYPE_1 ( context , TYPE_3 . METHOD_2 ( context ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 method , TYPE_3 VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_1 , method , VAR_2 ) ; } } 
public void METHOD_1 ( TYPE_1 call , int VAR_1 , int VAR_2 ) { METHOD_3 ( call ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = new java.io.File ( VAR_1 ) ; } 
public int METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } 
public static java.lang.String METHOD_1 ( char [ ] data , int offset , int count ) { return new java.lang.String ( data , offset , count ) ; } 
public static int METHOD_1 ( int arg ) { return INT_1 - ( arg + INT_2 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , METHOD_1 ( VAR_1 . METHOD_4 ( ) ) ) ; } 
public void run ( com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws java.lang.Exception { type . METHOD_1 ( VAR_1 class ) ; } 
public void METHOD_1 ( ) throws android.os.RemoteException { METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ; } 
void METHOD_1 ( ) { METHOD_2 ( ) ; } 
public void METHOD_1 ( com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws TYPE_1 { try { METHOD_3 ( VAR_3 , type ) ; } catch ( TYPE_3 e ) { throw new TYPE_1 ( new TYPE_4 ( e ) ) ; } } 
public static long METHOD_1 ( ) { long VAR_1 = 9 ; int VAR_2 = 2 ; return VAR_1 > > VAR_2 ; } 
public java.lang.String METHOD_1 ( int subId ) { return METHOD_3 ( METHOD_2 ( subId ) ) ; } 
public TYPE_1 get ( long key ) { return get ( key , null ) ; } 
public native java.lang.Object invoke ( java.lang.Object VAR_1 , java.lang.Object ... args ) throws TYPE_1 , java.lang.IllegalArgumentException , TYPE_2 ; 
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; } 
synchronized boolean METHOD_1 ( android.bluetooth.BluetoothDevice device ) { if ( VAR_1 ) { android.util.Log.d ( VAR_2 . TAG , ( STRING_1 + device ) ) ; } if ( ! ( METHOD_2 ( device ) ) ) { return false ; } return METHOD_3 ( ) ; } 
protected TYPE_1 < ? extends TYPE_2 > METHOD_1 ( ) { return TYPE_3 . of ( new TYPE_4 ( VAR_1 ) , new TYPE_6 ( VAR_1 ) ) ; } 
java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ) ; return VAR_2 . get ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_2 ) { return new TYPE_3 ( mContext , this , VAR_3 , VAR_1 , VAR_4 , new TYPE_4 ( this ) ) ; } else { return new TYPE_1 ( VAR_1 ) ; } } 
public int start ( ) { return data [ ( ( pos ) + 1 ) ] ; } 
public native TYPE_1 METHOD_1 ( java.lang.Object ... args ) throws TYPE_2 , java.lang.IllegalArgumentException , TYPE_3 , TYPE_4 ; 
public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) throws android.os.RemoteException { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
protected void METHOD_1 ( boolean VAR_1 ) throws java.io.IOException { TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; } 
public int METHOD_1 ( ) { return ( VAR_2 ) == ( - 1 ) ? super . METHOD_1 ( ) : VAR_2 ; } 
private TYPE_1 verify ( java.lang.String VAR_1 ) throws TYPE_2 , java.io.IOException , TYPE_3 { return verify ( VAR_1 , null , null ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { throw new TYPE_2 ( STRING_1 ) ; } 
void METHOD_1 ( long [ ] VAR_2 , java.lang.String VAR_3 ) throws TYPE_1 ; 
private static TYPE_1 METHOD_1 ( ) { TYPE_1 p = new TYPE_2 ( VAR_1 ) ; p . METHOD_2 ( STRING_2 , STRING_3 ) ; return p ; } 
public static int METHOD_1 ( int arg1 , int VAR_1 ) { return ( - arg1 ) + ( - VAR_1 ) ; } 
public boolean METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public boolean METHOD_1 ( ) { return VAR_1 ; } 
public TYPE_1 < byte [ ] , byte [ ] > METHOD_1 ( ) { return null ; } 
public void METHOD_1 ( android.bluetooth.BluetoothDevice VAR_1 , boolean VAR_2 ) { android.util.Log.d ( VAR_3 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( android.bluetooth.BluetoothDevice device ) { TYPE_2 service = METHOD_2 ( ) ; if ( service == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return service . METHOD_1 ( device ) ; } 
public void METHOD_1 ( TYPE_1 e ) { METHOD_2 ( d ) ; METHOD_3 ( true ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws TYPE_2 { return METHOD_2 ( VAR_1 , VAR_2 , null , null ) ; } 
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_2 . METHOD_2 ( VAR_3 , 0 ) ; VAR_2 . METHOD_3 ( VAR_4 , VAR_5 , VAR_6 , STRING_1 , false ) ; VAR_1 = true ; } } 
public static native long METHOD_1 ( long VAR_1 ) ; 
public static void METHOD_1 ( TYPE_1 args ) { int x = VAR_3 ; args.out = ( ( byte ) ( ( java.lang.Integer . METHOD_2 ( ( x & INT_1 ) ) ) - INT_2 ) ) ; } 
public static void METHOD_1 ( TYPE_1 args ) { args.out = ( ( short ) ( TYPE_2 . METHOD_2 ( args . inV ) ) ) ; } 
private void METHOD_1 ( int state ) { if ( ( VAR_1 ) == ( VAR_2 ) ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } VAR_4 . METHOD_1 ( ) ; VAR_1 = state ; } } 
protected void METHOD_1 ( ) throws java.lang.Throwable { try { synchronized ( this ) { TYPE_1 . METHOD_2 ( address ) ; } } finally { super . METHOD_1 ( ) ; } } 
public static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 , TYPE_2 . METHOD_3 ( ) , true , true , null , null , VAR_6 ) ; return VAR_1 ; } 
public java.lang.String toString ( ) { return ( ( ( VAR_1 ) + STRING_1 ) + ( f ) ) + STRING_2 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try ( TYPE_1 VAR_1 = new TYPE_1 ( ) ) { VAR_1 . METHOD_2 ( 1 , 1 , 1 ) ; } } 
public void METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 { VAR_2 = ( ( java.io.File ) ( VAR_1 ) ) ; super . METHOD_1 ( VAR_1 ) ; } 
static void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { VAR_1 . METHOD_2 ( ) ; if ( VAR_1 != null ) { throw new TYPE_2 ( STRING_1 ) ; } } 
public final TYPE_1 getName ( ) { return method . getName ( ) ; } 
public abstract TYPE_1 METHOD_1 ( int index ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 ) ) ; VAR_4 . METHOD_4 ( VAR_5 , VAR_1 ) ; } 
public void info ( java.lang.String VAR_1 , java.lang.Object ... arg ) { log ( VAR_1 , arg ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; super . METHOD_1 ( ) ; } 
public void METHOD_1 ( int status ) { METHOD_2 ( ) ; if ( VAR_1 . METHOD_3 ( ) ) { METHOD_5 ( false ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 . i ( STRING_1 , STRING_2 ) ; VAR_2 = false ; super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_3 ( ) ; } 
private static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = ( VAR_1 == null ) ? null : VAR_1 . METHOD_2 ( ) ; return ( VAR_3 != null ) && ( VAR_2 . equals ( VAR_3 . METHOD_3 ( ) ) ) ; } 
static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String name = VAR_1 . METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( ) ? STRING_1 + name : name ; } 
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_1 ( false ) ; } } 
public long METHOD_1 ( TYPE_1 VAR_1 ) { int index = VAR_1 . METHOD_2 ( ) ; return ( index >= 0 ) && ( index < ( VAR_2 . length ) ) ? VAR_2 [ index ] : 0 ; } 
void METHOD_1 ( TYPE_1 t ) throws java.io.IOException ; 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_4 ( ) ; } super . METHOD_1 ( ) ; } 
public static int METHOD_1 ( boolean x , boolean y ) { return x ? 1 : y ? 2 : 3 ; } 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 . METHOD_3 ( ( STRING_1 + STRING_2 ) ) ; METHOD_4 ( VAR_2 , VAR_1 ) ; } 
public abstract java.lang.String getName ( ) ; 
public boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = VAR_2 ; return true ; } 
public static void METHOD_1 ( byte [ ] [ ] expected , byte [ ] [ ] VAR_1 ) { org.junit.Assert.assertEquals ( TYPE_1 . METHOD_2 ( expected ) , TYPE_1 . METHOD_2 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( ) ; VAR_2 = false ; VAR_1 . METHOD_3 ( ) ; } } } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String ... VAR_2 ) { METHOD_1 ( VAR_3 < java.lang.String > METHOD_2 ( ) , VAR_1 , false , VAR_2 ) ; } 
public TYPE_1 call ( ) throws java.lang.Exception { try { server . METHOD_2 ( ) ; fail ( ) ; } catch ( TYPE_2 expected ) { } return null ; } 
public java.lang.String toString ( ) { java.lang.StringBuilder sb = new java.lang.StringBuilder ( 100 ) ; sb.append ( METHOD_1 ( ) . getName ( ) ) ; sb.append ( VAR_1 ) ; return sb . toString ( ) ; } 
public static int METHOD_1 ( int arg ) { return ( arg > > > INT_1 ) & 7 ; } 
public boolean METHOD_1 ( ) { return VAR_1 ; } 
protected java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( STRING_1 ) ; } 
public static void METHOD_1 ( TYPE_1 element ) { new TYPE_2 ( element ) . METHOD_2 ( element ) ; } 
public void run ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( this , VAR_2 , status ) ; } } 
protected int METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) ; if ( ( VAR_2 ) == ( VAR_3 ) ) { VAR_1 -- ; VAR_1 -= 10 ; } return VAR_1 ; } 
public void METHOD_1 ( boolean VAR_1 ) { this . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 , final int flags , final java.lang.String VAR_3 ) { METHOD_2 ( VAR_1 , VAR_2 , flags , VAR_3 , null , null , null ) ; } 
public boolean METHOD_1 ( int VAR_2 , int VAR_3 ) throws android.os.RemoteException { synchronized ( VAR_4 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_5 ) . METHOD_1 ( VAR_6 , VAR_7 , VAR_2 , VAR_3 ) ; } } 
private void METHOD_1 ( ) { synchronized ( this ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } } } 
public boolean METHOD_1 ( ) { return tree . METHOD_1 ( ) ; } 
public java.io.File METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 . METHOD_1 ( VAR_1 ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public void METHOD_1 ( TYPE_1 test , java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { VAR_2 . METHOD_1 ( test , VAR_1 ) ; } 
abstract void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < java.lang.String > VAR_4 ) throws TYPE_3 ; 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , STRING_2 , 5 , 6 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_2 , METHOD_3 ( ) , INT_1 ) ; } 
public static long METHOD_1 ( long arg ) { return ~ ( ~ arg ) ; } 
public TYPE_1 METHOD_1 ( int netId ) { if ( ( netId >= 0 ) && ( netId < ( VAR_1 . length ) ) ) { return new TYPE_1 ( VAR_1 [ netId ] ) ; } else { return null ; } } 
public void info ( java.lang.String VAR_1 , java.lang.Object ... arg ) { VAR_2 . info ( VAR_1 , arg ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 ) throws android.os.RemoteException { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Throwable { METHOD_2 ( STRING_1 , true , false ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; if ( VAR_1 instanceof TYPE_2 ) { VAR_2 . METHOD_2 ( ( ( TYPE_2 ) ( VAR_1 ) ) ) ; } } 
static void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { if ( VAR_1 != null ) { Main . METHOD_2 ( null ) ; Main . METHOD_2 ( VAR_1 ) ; } } 
private void METHOD_1 ( TYPE_1 in ) throws java.io.IOException { java.lang.String line = METHOD_2 ( in ) ; if ( ( line . length ( ) ) != 0 ) { throw new TYPE_2 ( ( STRING_1 + line ) ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_2 VAR_3 , TYPE_3 VAR_4 , TYPE_2 VAR_5 , TYPE_4 callback , TYPE_5 VAR_6 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , 0 , callback , VAR_6 ) ; } 
public java.io.File get ( ) { return VAR_1 ; } 
public java.io.File METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } 
public void run ( com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws java.lang.Exception { if ( METHOD_2 ( type ) ) { type . METHOD_3 ( VAR_1 ) ; } } 
public void run ( com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws java.lang.Exception { type . METHOD_2 ( VAR_1 class ) ; type . METHOD_2 ( VAR_2 class ) ; } 
public int METHOD_1 ( TYPE_1 VAR_2 ) throws android.os.RemoteException { return 0 ; } 
public static native boolean METHOD_1 ( long r , long a , long p , long m ) ; 
synchronized void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , VAR_1 , VAR_2 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 c = METHOD_2 ( VAR_1 ) ; if ( c == null ) { return null ; } return c . METHOD_1 ( ) ; } 
native void METHOD_1 ( long VAR_1 , long id , byte [ ] d ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; } 
public java.io.File METHOD_1 ( ) ; 
private void METHOD_1 ( int expected , byte [ ] VAR_1 , byte [ ] VAR_2 , int VAR_3 ) { TYPE_1 . METHOD_2 ( expected , TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 , null , VAR_3 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { assertEquals ( ( STRING_1 + ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) ) , METHOD_2 ( STRING_9 ) ) ; } 
public static boolean METHOD_1 ( ) { synchronized ( VAR_1 ) { return VAR_1 . METHOD_1 ( ) ; } } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_1 ) ; } 
static void METHOD_1 ( long VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return ; } VAR_5 = VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { byte [ ] output = null ; try { TYPE_1 . METHOD_2 ( output ) ; fail ( STRING_1 ) ; } catch ( java.lang.RuntimeException expected ) { } } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 5 , INT_1 , false ) ; args.out = TYPE_3 . METHOD_3 ( args . inV , t ) ; } 
private final native int METHOD_1 ( long VAR_1 , byte [ ] b , int VAR_2 , int VAR_3 ) ; 
public void run ( com.android.jack.ir.ast.JDefinedClassOrInterface t ) throws java.lang.Exception { if ( METHOD_1 ( t ) ) { long VAR_1 = TYPE_1 . METHOD_2 ( t ) ; t . METHOD_3 ( new TYPE_2 ( VAR_1 ) ) ; } } 
public java.lang.String METHOD_1 ( TYPE_1 number ) { return VAR_2 . METHOD_1 ( number ) ; } 
public void METHOD_1 ( TYPE_1 e ) { METHOD_4 ( ) ; } 
public boolean METHOD_1 ( TYPE_1 project ) { TYPE_2 state = TYPE_3 . METHOD_2 ( project ) ; if ( state != null ) { return ( state . METHOD_3 ( ) ) == false ; } return false ; } 
public boolean METHOD_1 ( ) { synchronized ( VAR_1 ) { return ( VAR_1 . size ( ) ) > 0 ; } } 
protected native void METHOD_1 ( int VAR_1 , java.lang.Object VAR_2 ) throws TYPE_1 ; 
native void METHOD_1 ( long VAR_1 , long id , int [ ] d ) ; 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; } 
public final int METHOD_1 ( ) { return ( ( ( VAR_1 . METHOD_1 ( ) ) * INT_1 ) + ( ( name . METHOD_1 ( ) ) * INT_1 ) ) + ( VAR_2 . METHOD_1 ( ) ) ; } 
public void METHOD_2 ( int state , int VAR_1 ) { this . METHOD_2 ( state , VAR_1 ) ; } 
private static int METHOD_1 ( int length ) { return ( 1 < < length ) - 1 ; } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; return VAR_1 . METHOD_3 ( VAR_2 ) ; } 
public native void METHOD_1 ( java.lang.Object obj , char c ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
protected boolean METHOD_1 ( TYPE_1 node ) { synchronized ( node ) { return node . METHOD_2 ( VAR_1 ) ; } } 
public static void run ( ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( VAR_1 ) . METHOD_6 ( ) ; } 
public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { try { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( java.lang.Class < TYPE_1 > type ) { return new TYPE_3 < TYPE_1 > ( ) ; } 
protected TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( STRING_1 ) ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; return this ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , false , false , false ) ; } 
public boolean METHOD_1 ( ) { return ! ( VAR_1 ) ; } 
public abstract void log ( java.lang.String log ) ; 
void METHOD_1 ( java.lang.String ... VAR_1 ) { for ( java.lang.String packageName : VAR_1 ) { VAR_2 . METHOD_2 ( METHOD_3 ( packageName ) ) ; } } 
private native int METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) ; 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_2 ) != null ) { try { VAR_3 = java.lang.Integer.parseInt ( VAR_2 ) ; } catch ( TYPE_1 e ) { VAR_3 = 0 ; } } } 
synchronized boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) == ( VAR_1 ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 node , boolean VAR_1 ) { java.lang.StringBuilder sb = new java.lang.StringBuilder ( INT_1 ) ; TYPE_2 . append ( sb , node , 0 ) ; return sb . toString ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_1 ( STRING_1 ) ; org.mockito.Mockito.verify ( VAR_2 ) . METHOD_1 ( STRING_2 , STRING_1 ) ; } 
private void METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) <= 0 ) { VAR_2 = null ; return ; } VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( ( VAR_2 ) == null ) ) { return null ; } return java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 ) ; } 
final double METHOD_1 ( int offset ) { return VAR_1 . METHOD_1 ( ( offset + ( address ) ) ) ; } 
public java.lang.String METHOD_1 ( ) { TYPE_1 app = new TYPE_2 ( mContext ) . METHOD_2 ( ) ; if ( app == null ) { return null ; } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 p = new TYPE_3 ( null , VAR_1 , ( - 1 ) , null , null , null , VAR_4 ) ; METHOD_3 ( p ) ; } 
void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ( ( VAR_1 ) | ( VAR_2 ) ) , VAR_3 , true , true ) ; METHOD_3 ( VAR_4 , VAR_3 , true , false ) ; status = VAR_5 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 [ ] VAR_2 = METHOD_2 ( ) ; try { VAR_1 . METHOD_3 ( VAR_2 , STRING_1 ) ; fail ( STRING_2 ) ; } catch ( TYPE_3 expected ) { } } 
private boolean verify ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { return TYPE_2 . METHOD_1 ( VAR_1 ) ? METHOD_2 ( VAR_1 , VAR_2 ) : METHOD_3 ( VAR_1 , VAR_2 ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > in ( TYPE_1 [ ] VAR_1 ) { return new TYPE_3 < TYPE_1 > ( VAR_1 ) ; } 
private void METHOD_1 ( java.lang.String msg , java.lang.Object ... VAR_1 ) { TYPE_1 . d ( this , ( ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) + STRING_2 ) + msg ) , VAR_1 ) ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( null , null ) ; super . METHOD_1 ( ) ; } 
public static TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( ) . METHOD_2 ( 0 ) . METHOD_3 ( false ) . METHOD_4 ( false ) . METHOD_5 ( false ) . METHOD_6 ( false ) . METHOD_8 ( false ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { long VAR_2 = 0 ; if ( VAR_1 != null ) VAR_2 = VAR_3 ; TYPE_2 . METHOD_2 ( VAR_4 , VAR_2 ) ; VAR_5 = VAR_1 ; return VAR_1 ; } 
private boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( ( VAR_1 == null ) || ( ( VAR_1 . length ( ) ) < 5 ) ) || ( VAR_1 . METHOD_2 ( VAR_2 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , true , false , false ) ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { Main . METHOD_3 ( ) ; } 
public java.lang.String METHOD_3 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
private boolean METHOD_1 ( TYPE_1 event ) { return METHOD_1 ( event . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( java.io.File [ ] in , java.io.File out , boolean VAR_1 ) throws java.lang.Exception { } 
void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < java.lang.String > VAR_4 ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 3 ) ; } 
static void METHOD_1 ( java.lang.String [ ] VAR_1 ) { VAR_2 = VAR_1 ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { METHOD_2 ( VAR_1 ) ; } } 
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return ; if ( VAR_2 ) android.util.Log.d ( VAR_3 . TAG , STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_4 ) ; } 
public static char METHOD_1 ( int value ) { return ( ( char ) ( value & INT_1 ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { for ( java.util.List < TYPE_2 > VAR_2 : VAR_3 . values ( ) ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } } 
private java.lang.String METHOD_1 ( final java.lang.String path ) { final java.lang.String VAR_2 = VAR_3 . METHOD_2 ( path ) ; TYPE_1 . METHOD_4 ( ( STRING_1 + ( VAR_4 ) ) , VAR_4 , VAR_2 ) ; return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( STRING_1 , INT_1 ) ; VAR_2 = new TYPE_1 ( STRING_2 , INT_2 ) ; TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public static char [ ] METHOD_1 ( char [ ] VAR_1 , int VAR_2 ) { if ( VAR_2 < 0 ) { throw new TYPE_1 ( java.lang.Integer . toString ( VAR_2 ) ) ; } return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; } 
final void METHOD_1 ( int pos , double [ ] VAR_1 , int VAR_2 , int length ) { TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) ; } 
TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 class ) ; } 
public static boolean METHOD_1 ( int from , int to ) { boolean VAR_1 = TYPE_1 . METHOD_2 ( from ) ; boolean VAR_2 = TYPE_1 . METHOD_2 ( to ) ; return VAR_1 && ( ! VAR_2 ) ; } 
public static int METHOD_1 ( int arg ) { return arg < < 0 ; } 
java.lang.String METHOD_1 ( java.lang.String uri , java.lang.String VAR_1 ) ; 
private java.lang.String METHOD_1 ( TYPE_1 element ) { if ( ( VAR_1 ) == null ) { VAR_1 = element . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; } return VAR_1 ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 e ) { long id = VAR_1 . METHOD_2 ( 7 , e . METHOD_3 ( VAR_1 ) ) ; return new TYPE_1 ( id , VAR_1 ) ; } 
public final java.lang.String METHOD_1 ( ) { return STRING_1 ; } 
public void METHOD_1 ( java.lang.String pkg ) { METHOD_2 ( pkg ) ; METHOD_3 ( pkg , 0 , VAR_1 , true ) ; } 
private void METHOD_5 ( ) { METHOD_5 ( false ) ; } 
synchronized long METHOD_1 ( int VAR_1 , boolean VAR_2 , long VAR_3 , long VAR_4 , float VAR_5 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } 
public java.util.List < android.bluetooth.BluetoothDevice > METHOD_1 ( ) { while ( ! ( VAR_1 ) ) { continue ; } return VAR_2 . METHOD_2 ( new int [ ] { VAR_3 , VAR_4 , VAR_5 } ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String name , TYPE_2 ... VAR_1 ) { return new TYPE_1 ( null , name , VAR_1 ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( 5 , VAR_1 ) ; org.junit.Assert.assertEquals ( 10 , VAR_2 ) ; } 
protected final void METHOD_1 ( ) { try { METHOD_2 ( ) ; } catch ( java.lang.Throwable fail ) { METHOD_3 ( fail ) ; } } 
static java.lang.String [ ] METHOD_1 ( TYPE_1 context ) { return TYPE_3 . get ( TYPE_4 . METHOD_3 ( context ) . METHOD_4 ( ) ) ; } 
java.util.List < java.lang.String > METHOD_1 ( ) ; 
public boolean METHOD_1 ( com.android.jack.ir.ast.JMethod method ) { return METHOD_1 ( ( ( TYPE_1 ) ( method ) ) ) ; } 
protected final void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; if ( ! ( METHOD_2 ( ) ) ) return ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( false ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( CHAR_1 ) ) + 1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { } 
public void METHOD_1 ( int state ) { METHOD_2 ( METHOD_3 ( ) , state ) ; } 
public void METHOD_1 ( android.renderscript.Allocation VAR_1 ) { METHOD_1 ( 0 , ( ( android.renderscript.Allocation ) ( null ) ) , VAR_1 , null ) ; } 
public void METHOD_1 ( ) { VAR_1 = null ; } 
public boolean METHOD_1 ( ) throws android.os.RemoteException { synchronized ( VAR_2 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_4 , VAR_5 ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 context ) { this . mContext = context ; return this ; } 
public boolean METHOD_1 ( ) { if ( ( mContext ) == null ) return true ; return mContext . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( METHOD_2 ( VAR_1 , VAR_2 ) ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
public void METHOD_1 ( android.os.Message msg ) { int VAR_1 = msg.arg1 ; if ( ( VAR_2 ) != null ) { org.junit.Assert.assertEquals ( ( ( int ) ( VAR_2 ) ) , VAR_1 ) ; } METHOD_2 ( VAR_1 , VAR_3 ) ; } 
public synchronized void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( TYPE_1 . METHOD_4 ( STRING_3 ) , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( final TYPE_1 type , final TYPE_2 method ) { METHOD_2 ( VAR_1 , type , method , false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , 9 , STRING_2 , 8 ) ; } 
public void METHOD_1 ( java.lang.String format , java.lang.Object ... VAR_1 ) { java.lang.String s = java.lang.String.format ( format , VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 , s ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { if ( ! VAR_3 ) { return ; } if ( ( VAR_4 ) == null ) { return ; } VAR_4 . METHOD_2 ( VAR_2 ) ; } 
private void METHOD_1 ( boolean on ) { TYPE_1 . i ( this , STRING_1 , on ) ; VAR_1 . METHOD_1 ( on ) ; VAR_2 . METHOD_3 ( on ) ; } 
public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( STRING_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; if ( VAR_2 != null ) result . METHOD_3 ( VAR_2 ) ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = METHOD_3 ( ) ; if ( ! ( METHOD_2 ( ) ) ) { return ; } VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; } 
static java.lang.String [ ] METHOD_1 ( ) { return VAR_4 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) throws java.io.IOException { if ( ( VAR_3 ) == null ) { METHOD_2 ( ) ; } else { METHOD_3 ( VAR_2 ) ; } } 
public boolean METHOD_1 ( ) { return ( this ) == ( VAR_1 ) ; } 
public void METHOD_1 ( long VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_4 , VAR_1 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 c = METHOD_2 ( VAR_1 ) ; if ( c == null ) { return null ; } return c . METHOD_1 ( ) ; } 
public short get ( int index ) { return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( java.lang.Class < ? extends TYPE_2 > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return METHOD_4 ( VAR_2 , new TYPE_4 ( ) ) ; } 
abstract int METHOD_1 ( int index ) ; 
private void METHOD_1 ( int VAR_1 , int arg1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) ; if ( VAR_2 != null ) { METHOD_3 ( VAR_1 , arg1 , 0 , VAR_2 ) ; } else { METHOD_3 ( VAR_1 , arg1 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( ) ; } 
final float METHOD_1 ( int i ) { return METHOD_2 ( METHOD_3 ( i ) ) ; } 
public static boolean METHOD_1 ( TYPE_1 context , int subId , java.lang.String VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( context , subId , TYPE_3 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) , VAR_1 , VAR_2 ) ; } 
public boolean METHOD_1 ( java.lang.String name , long VAR_1 , byte [ ] VAR_2 ) { return this . METHOD_1 ( name , VAR_1 , VAR_2 ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , false ) ; } 
public void METHOD_1 ( java.util.Set < java.lang.String > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public synchronized TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { this . VAR_1 = METHOD_2 ( ) ; } return this . VAR_1 ; } 
protected native void METHOD_1 ( TYPE_1 address , int VAR_1 ) throws TYPE_2 ; 
private final native void METHOD_1 ( long [ ] VAR_1 ) ; 
public TYPE_1 < java.lang.String > METHOD_1 ( ) { return VAR_1 ; } 
public static TYPE_1 METHOD_1 ( TYPE_1 value ) { return value == null ? null : value . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( ) { return ( ( VAR_2 ) != null ) & ( VAR_2 . equals ( VAR_1 ) ) ; } 
public static TYPE_1 < TYPE_2 , TYPE_2 > METHOD_1 ( TYPE_3 context ) { return TYPE_5 . get ( TYPE_6 . METHOD_3 ( context ) . METHOD_4 ( ) ) ; } 
public int METHOD_1 ( int VAR_1 ) { int result = i ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . METHOD_2 ( i ) ; } return result ; } 
private void METHOD_1 ( int VAR_1 , int VAR_2 , int result ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 , result ) ; } 
abstract void METHOD_1 ( int pos , char [ ] VAR_1 , int VAR_2 , int length ) ; 
public static final TYPE_2 METHOD_1 ( ) { return TYPE_3 . METHOD_2 ( STRING_1 ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( this ) ; } 
public void METHOD_1 ( int VAR_1 ) { try { VAR_2 . METHOD_1 ( VAR_1 , null ) ; } catch ( android.os.RemoteException e ) { } } 
public boolean METHOD_1 ( ) { return VAR_2 . METHOD_2 ( ) ; } 
public java.lang.String toString ( ) { return java.lang.String.format ( STRING_1 , VAR_2 ) ; } 
synchronized long METHOD_1 ( long type , TYPE_1 VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , type , VAR_1 ) ; } 
protected void METHOD_1 ( ) { VAR_2 = METHOD_2 ( ) ; int VAR_3 = VAR_2 . METHOD_3 ( ) ; VAR_4 = STRING_1 + VAR_3 ; super . METHOD_1 ( ) ; } 
public static boolean METHOD_1 ( ) { return true ; } 
static void METHOD_1 ( long VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , 0 ) ; } 
public static TYPE_1 METHOD_1 ( long value ) { return new TYPE_1 ( value , VAR_1 , null ) ; } 
public void METHOD_1 ( int VAR_1 , boolean VAR_2 , android.os.Message result ) { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 , result ) ; } 
public void METHOD_1 ( ) { METHOD_1 ( 0 ) ; } 
public int METHOD_1 ( ) { return java.lang.Integer.parseInt ( args . METHOD_2 ( STRING_1 ) ) ; } 
public static < TYPE_2 , TYPE_3 > TYPE_4 < TYPE_2 , TYPE_3 > METHOD_1 ( TYPE_5 < ? super TYPE_2 > VAR_1 ) { return new TYPE_4 < TYPE_2 , TYPE_3 > ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( ) { return METHOD_1 ( null ) ; } 
public void METHOD_1 ( ) { TYPE_2 in = new TYPE_2 ( mRS , INPUTSIZE ) ; VAR_4 = in . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 4 ) ; } 
public TYPE_3 get ( int index ) { return METHOD_3 ( index ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( true ) ; throw new java.lang.RuntimeException ( STRING_1 ) ; } 
public void run ( TYPE_1 session ) { for ( TYPE_2 info : session . METHOD_1 ( ) . METHOD_2 ( ) ) { info . METHOD_3 ( STRING_1 ) ; } } 
public static TYPE_1 METHOD_1 ( TYPE_2 context , TYPE_3 callback ) throws TYPE_4 { return TYPE_1 . METHOD_1 ( context , callback , TYPE_5 . METHOD_2 ( ) ) ; } 
private static boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 p = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( STRING_1 , STRING_2 ) , VAR_3 ) ; return p . METHOD_4 ( VAR_1 ) . METHOD_5 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ; } 
private boolean METHOD_1 ( java.lang.String number ) { return ( ( number . length ( ) ) <= 20 ) && ( ( number . length ( ) ) > 0 ) ; } 
public java.lang.Object expected ( ) { return false ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { METHOD_3 ( TYPE_2 . METHOD_1 ( VAR_1 ) , STRING_1 ) ; } 
public boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( java.lang.String ... VAR_1 ) { METHOD_1 ( VAR_2 < java.lang.String > METHOD_2 ( ) , false , VAR_1 ) ; } 
public static native void METHOD_1 ( long VAR_1 , byte [ ] in ) ; 
protected synchronized int METHOD_1 ( ) { return VAR_1 ; } 
public boolean METHOD_1 ( TYPE_1 node ) { if ( ( node . METHOD_2 ( VAR_1 class ) ) != null ) { return false ; } METHOD_3 ( node ) ; return super . METHOD_1 ( node ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , VAR_1 class . getName ( ) ) ; } 
private final native void METHOD_1 ( boolean [ ] VAR_1 ) ; 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 == null ) { return null ; } return VAR_1 . METHOD_3 ( ) . METHOD_1 ( ) ; } 
private java.io.File METHOD_1 ( ) throws java.io.IOException , java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_2 VAR_2 = TYPE_1 . METHOD_3 ( VAR_3 class ) ; VAR_2 . METHOD_4 ( VAR_1 , true ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { java.lang.String result = TYPE_1 . METHOD_3 ( new TYPE_2 ( STRING_3 ) , VAR_1 ) . format ( INT_1 ) ; METHOD_4 ( STRING_2 , STRING_4 , result ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; long VAR_1 = TYPE_1 . METHOD_3 ( STRING_1 ) ; if ( VAR_1 != 0 ) { TYPE_1 . METHOD_4 ( VAR_1 ) ; fail ( STRING_2 ) ; } } 
private static TYPE_1 [ ] METHOD_1 ( java.util.List < java.io.File > VAR_1 , java.io.File VAR_2 , java.util.List < java.io.IOException > VAR_3 ) { return TYPE_2 . METHOD_2 ( VAR_1 , null , VAR_3 , true , null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; } 
public final int METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException { byte [ ] response = VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return new TYPE_1 ( response ) ; } 
private boolean METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { return METHOD_2 ( true ) ; } else { VAR_2 . METHOD_3 ( ) . METHOD_4 ( 1 , true ) ; return true ; } } 
protected void METHOD_1 ( ) throws java.lang.Throwable { try { if ( ( VAR_1 ) != 0 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_1 = 0 ; } } finally { super . METHOD_1 ( ) ; } } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return ( VAR_2 ) == null ? new TYPE_1 ( VAR_1 ) : VAR_2 ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; Main . METHOD_2 ( ) ; Main . METHOD_3 ( ) ; Main . METHOD_4 ( ) ; java.lang.System.out.println ( STRING_2 ) ; } 
public void METHOD_1 ( TYPE_1 context ) { TYPE_2 . METHOD_2 ( context ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { final java.lang.String VAR_1 = STRING_1 ; TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , false ) ; } 
public static synchronized void METHOD_1 ( ) { VAR_2 = true ; } 
public static native long METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 , TYPE_1 VAR_4 , boolean VAR_5 , byte [ ] VAR_7 ) throws TYPE_2 , TYPE_3 , TYPE_4 ; 
public TYPE_1 [ ] METHOD_1 ( ) { return ( VAR_1 ) == null ? null : VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( TYPE_1 v ) { final TYPE_2 VAR_1 = METHOD_2 ( ) ; if ( ( VAR_1 . METHOD_4 ( ) ) > 0 ) { VAR_1 . METHOD_3 ( ( ( VAR_1 . METHOD_4 ( ) ) - 1 ) ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) , false ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) throws java.io.IOException { if ( ( VAR_1 != null ) && ( VAR_2 != ( VAR_3 ) ) ) { VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; } else { VAR_4 . METHOD_2 ( ) ; } } 
private void METHOD_1 ( java.lang.String log ) { if ( ( VAR_1 ) != null ) { VAR_1 . log ( log ) ; } } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; METHOD_3 ( STRING_1 , VAR_1 ) ; VAR_1 . start ( ) ; } 
public TYPE_1 < TYPE_2 > values ( ) { TYPE_1 < TYPE_2 > VAR_1 = values ; if ( VAR_1 == null ) { VAR_1 = new TYPE_3 ( ) ; values = VAR_1 ; } return VAR_1 ; } 
void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 & ( ( VAR_2 ) | ( VAR_5 ) ) ; } 
public static int METHOD_1 ( int VAR_1 , TYPE_1 a ) { int result = TYPE_2 . METHOD_1 ( a , VAR_1 ) ; return result > 0 ? - 1 : result < 0 ? 1 : 0 ; } 
public static void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; } 
public static void assertEquals ( long expected , long result ) { if ( expected != result ) { throw new TYPE_1 ( ( ( ( STRING_1 + expected ) + STRING_2 ) + result ) ) ; } } 
public void METHOD_1 ( java.lang.String name ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = METHOD_3 ( name ) ; VAR_1 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( name ) ; } 
public TYPE_1 < TYPE_2 > values ( ) { TYPE_1 < TYPE_2 > VAR_1 = values ; return VAR_1 != null ? VAR_1 : ( values = new TYPE_3 ( this ) ) ; } 
public static TYPE_1 METHOD_1 ( ) { TYPE_2 scheduler = TYPE_2 . METHOD_2 ( ) ; TYPE_1 request = scheduler . METHOD_3 ( ) ; request . METHOD_4 ( scheduler . METHOD_5 ( ) ) ; return request ; } 
public void METHOD_2 ( int VAR_1 ) throws android.os.RemoteException { listener . METHOD_2 ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.Class < ? > VAR_1 ) { return new TYPE_1 ( VAR_1 , VAR_1 . getName ( ) , VAR_1 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 ; if ( ! ( METHOD_2 ( VAR_3 , VAR_4 , null ) ) ) { return ; } METHOD_3 ( VAR_5 , null ) ; } 
public boolean METHOD_1 ( ) { if ( ( VAR_3 ) == null ) { return false ; } else { return VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; } } 
public static void assertEquals ( boolean expected , boolean VAR_1 ) { if ( VAR_1 != expected ) { throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; } } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return false ; } 
protected void METHOD_1 ( ) throws java.lang.Throwable { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_1 = 0 ; } 
public java.lang.Object METHOD_1 ( int x ) { if ( VAR_1 ) { return VAR_2 . METHOD_1 ( ( x - ( VAR_3 ) ) ) ; } return super . METHOD_1 ( x ) ; } 
synchronized void METHOD_1 ( long VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , VAR_1 ) ; } 
synchronized boolean METHOD_1 ( android.bluetooth.BluetoothDevice device ) { if ( VAR_1 ) { android.util.Log.d ( VAR_2 . TAG , ( STRING_1 + device ) ) ; } return METHOD_2 ( TYPE_1 . METHOD_3 ( device ) ) ; } 
public int METHOD_1 ( ) { return data [ ( ( pos ) + 2 ) ] ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { try { if ( ! ( VAR_2 . METHOD_1 ( VAR_1 ) ) ) { throw new java.lang.IllegalArgumentException ( ) ; } } catch ( android.os.RemoteException e ) { throw e . METHOD_2 ( ) ; } } 
public void METHOD_1 ( ) { if ( ! ( ( parent ) instanceof com.android.jack.ir.ast.JMethod ) ) { throw new TYPE_2 ( this , STRING_1 ) ; } } 
public int METHOD_1 ( int VAR_1 ) { return VAR_1 / 3 ; } 
private static native long [ ] METHOD_1 ( int index ) ; 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return ( ( TYPE_3 ) ( VAR_2 ) ) . METHOD_1 ( ( ( TYPE_4 ) ( VAR_1 . METHOD_2 ( ) ) ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_1 . METHOD_1 ( METHOD_3 ( ) ) ; } 
public TYPE_1 call ( ) throws java.lang.Exception { try { server . METHOD_1 ( ) ; fail ( ) ; } catch ( TYPE_2 expected ) { } return null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int flags ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_4 ) ; } 
public static void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { VAR_1 . METHOD_2 ( ) ; } 
private static TYPE_1 METHOD_1 ( java.util.List < ? extends TYPE_1 > VAR_1 , int VAR_2 , java.lang.String ... VAR_3 ) { return TYPE_2 . METHOD_1 ( VAR_1 , null , VAR_2 , TYPE_3 . METHOD_3 ( VAR_3 ) ) ; } 
public void METHOD_1 ( TYPE_2 VAR_1 , boolean VAR_2 , byte [ ] value ) { VAR_3 . METHOD_1 ( new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) , VAR_2 , value ) ; } 
private static void METHOD_1 ( java.lang.String VAR_2 , java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { if ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) { METHOD_4 ( ) ; } } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( this ) ; } } 
public TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( VAR_1 [ ( ( ( VAR_2 ) - 1 ) & ( ( VAR_1 . length ) - 1 ) ) ] ) ) ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { return VAR_1 . METHOD_1 ( VAR_2 ) ; } 
public int METHOD_1 ( ) { if ( VAR_1 ) { android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) ; } TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return VAR_2 ; } return METHOD_2 ( ) . METHOD_1 ( ) ; } 
public long METHOD_1 ( int VAR_1 ) { long result = VAR_3 ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . METHOD_2 ( VAR_3 , VAR_3 ) ; } return result ; } 
public native void METHOD_1 ( java.lang.Object obj , float f ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public java.util.Set < TYPE_1 > METHOD_1 ( ) { java.util.Set < TYPE_1 > VAR_1 = VAR_2 ; if ( VAR_1 == null ) { VAR_1 = new TYPE_2 ( ) ; VAR_2 = VAR_1 ; } return VAR_1 ; } 
java.lang.Object METHOD_1 ( java.lang.String name , java.lang.Class [ ] VAR_1 , java.lang.Object [ ] VAR_2 ) throws java.lang.Exception ; 
protected void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 location , java.lang.String VAR_3 ) { assertNotNull ( VAR_3 , TYPE_5 . METHOD_2 ( VAR_3 , VAR_4 ) ) ; } 
protected TYPE_3 METHOD_1 ( TYPE_2 project ) { return new TYPE_3 ( ) ; } 
public void METHOD_1 ( char VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_1 ( VAR_4 , VAR_1 , null ) ; } } catch ( android.os.RemoteException VAR_5 ) { } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( ) ; org.mockito.Mockito.verify ( VAR_4 ) . METHOD_4 ( org.mockito.Matchers.eq ( VAR_1 ) ) ; org.junit.Assert.assertEquals ( VAR_2 , true ) ; } 
synchronized long METHOD_1 ( long type , int VAR_1 , int VAR_2 , long VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( java.io.IOException error ) { VAR_2 = error ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return true ; } 
public int METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return VAR_1 ; } try { return METHOD_3 ( ) . METHOD_1 ( ) ; } catch ( android.os.RemoteException e ) { throw e . METHOD_4 ( ) ; } } 
public void info ( java.lang.String format , java.lang.Object ... args ) { TYPE_1 . log ( VAR_1 , format , args ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { try { VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , null ) ; } catch ( android.os.RemoteException e ) { } } } 
public final void run ( ) { try { METHOD_1 ( ) ; METHOD_2 ( STRING_1 ) ; } catch ( TYPE_1 VAR_1 ) { METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; } catch ( java.lang.Throwable fail ) { METHOD_5 ( fail ) ; } } 
public static int METHOD_1 ( int arg1 , int VAR_1 ) { int VAR_3 = - arg1 ; int VAR_4 = - VAR_1 ; return ( VAR_3 + VAR_4 ) | ( VAR_3 + VAR_4 ) ; } 
synchronized void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = VAR_2 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; long VAR_3 = mContext ; mContext = 0 ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { assertNotNull ( VAR_1 ) ; assertEquals ( 1 , VAR_1 . size ( ) ) ; assertNotNull ( VAR_1 . get ( 0 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , null , 0 ) ; fail ( STRING_1 ) ; } catch ( java.lang.IllegalArgumentException VAR_5 ) { } } 
public java.lang.String METHOD_1 ( ) { return java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 . METHOD_1 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 , VAR_4 , ( - 1 ) ) ; METHOD_4 ( ) ; } 
public boolean METHOD_1 ( int s ) { METHOD_3 ( s , VAR_1 ) ; return true ; } 
public void METHOD_1 ( TYPE_3 VAR_1 , boolean VAR_2 , TYPE_2 value ) { VAR_3 . METHOD_1 ( new TYPE_3 ( VAR_1 . METHOD_2 ( ) ) , VAR_2 , value ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } } 
public static void fail ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { try ( TYPE_2 VAR_1 = new TYPE_2 ( ) ) { assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_2 ( ) ) != 0 ) ) ; } } 
protected void METHOD_1 ( ) { VAR_1 = null ; if ( ! ( VAR_2 ) ) { android.util.Log . i ( VAR_3 . TAG , STRING_1 ) ; METHOD_2 ( ) ; VAR_4 = null ; VAR_5 = null ; super . METHOD_1 ( ) ; } } 
public void METHOD_1 ( TYPE_1 test ) { VAR_1 . METHOD_1 ( test ) ; } 
public java.lang.Object METHOD_1 ( java.io.File VAR_1 ) { return null ; } 
public synchronized void METHOD_1 ( ) { METHOD_1 ( VAR_1 ) ; } 
final long METHOD_1 ( int i ) { return METHOD_2 ( METHOD_3 ( i ) ) ; } 
TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 ( ) ; } 
public boolean METHOD_1 ( java.lang.String type ) { return VAR_2 . METHOD_2 ( type ) ; } 
synchronized long METHOD_1 ( long id , int VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , id , VAR_1 ) ; } 
public void run ( final TYPE_1 device , final TYPE_2 test ) throws TYPE_4 , TYPE_5 { VAR_2 = false ; VAR_3 = test ; VAR_3 . run ( device ) ; } 
public abstract void METHOD_1 ( TYPE_1 callback ) ; 
static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , long VAR_3 ) { TYPE_2 . METHOD_1 ( VAR_1 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { java.io.File VAR_1 = new java.io.File ( STRING_1 ) ; try ( TYPE_1 input = new TYPE_1 ( VAR_1 ) ) { assertTrue ( ( ( input . METHOD_2 ( ) ) == 0 ) ) ; } } 
public TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 ) throws android.os.RemoteException { synchronized ( VAR_3 ) { return this . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; } 
void METHOD_1 ( java.io.File VAR_1 ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 method , TYPE_3 VAR_2 ) { if ( ( VAR_3 ) > 0 ) { VAR_4 . METHOD_1 ( VAR_1 , method , VAR_2 ) ; } } 
public void METHOD_1 ( float x , float y ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( x , y ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , INT_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) android.util.Slog.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ; VAR_4 . METHOD_2 ( this , VAR_1 , false , VAR_5 ) ; } 
private void METHOD_1 ( ) { if ( ( VAR_1 ) == ( - 1 ) ) { throw new TYPE_1 ( ) ; } } 
final native int METHOD_1 ( ) ; 
public void run ( com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws java.lang.Exception { type . METHOD_2 ( VAR_1 class ) ; } 
public java.lang.String METHOD_1 ( ) { return this . METHOD_1 ( ) ; } 
public java.lang.Object METHOD_1 ( ) { try { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ; return VAR_1 ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( e ) ; } } 
public synchronized void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( 3 ) ; } else { VAR_2 . METHOD_2 ( 0 ) ; VAR_2 . METHOD_3 ( 0 ) ; } METHOD_4 ( ) ; } 
public static void METHOD_1 ( java.lang.String version , java.lang.String [ ] VAR_1 ) { org.junit.Assert.assertEquals ( ( ( STRING_1 + version ) + STRING_2 ) , TYPE_1 . toString ( TYPE_2 . get ( version ) ) , TYPE_1 . toString ( VAR_1 ) ) ; } 
private static TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_2 ( new TYPE_3 ( null , null ) , VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 context , TYPE_3 VAR_1 , java.util.List < TYPE_4 > VAR_2 ) { TYPE_1 VAR_4 = new TYPE_1 ( context , VAR_1 , VAR_2 ) ; VAR_4 . METHOD_1 ( ) ; return VAR_4 ; } 
void METHOD_1 ( int subId , boolean VAR_1 ) { METHOD_1 ( subId , VAR_1 , false ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = TYPE_2 . METHOD_2 ( VAR_1 class ) ; org.junit.Assert.assertEquals ( 0 , result . METHOD_3 ( ) ) ; org.junit.Assert.assertEquals ( 2 , result . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( int VAR_1 ) { this . METHOD_1 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) { return id ; } 
public void METHOD_1 ( ) { VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 class ) ; } 
final void METHOD_1 ( ) { for ( TYPE_1 < ? > t ; ( t = METHOD_2 ( ) ) != null ; ) t . METHOD_3 ( ) ; } 
public long METHOD_1 ( TYPE_1 element , TYPE_2 VAR_1 ) { return element . METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; } 
public static java.lang.Object METHOD_1 ( TYPE_1 t ) { if ( t == null ) throw new java.lang.NullPointerException ( ) ; return VAR_1 . METHOD_2 ( t , VAR_2 ) ; } 
public boolean METHOD_1 ( java.lang.Object a , java.lang.Object b ) { return a . equals ( b ) ; } 
TYPE_1 METHOD_1 ( ) { return VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) ; } 
public static < TYPE_1 extends TYPE_2 > double METHOD_1 ( TYPE_3 < TYPE_1 > VAR_1 ) { return TYPE_5 . METHOD_4 ( TYPE_4 . METHOD_3 ( VAR_1 ) ) ; } 
protected void loge ( java.lang.String s ) { if ( VAR_1 ) android.util.Log.e ( VAR_2 , ( STRING_1 + s ) ) ; } 
public synchronized void METHOD_1 ( boolean VAR_1 ) { return ; } 
public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = key . toString ( ) ; return VAR_3 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , null , STRING_2 , STRING_2 , STRING_2 ) ; } 
protected abstract boolean METHOD_1 ( java.io.File VAR_1 ) throws java.io.IOException ; 
public boolean METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; synchronized ( this ) { TYPE_1 r = METHOD_3 ( ) . METHOD_4 ( ) ; return r != null ? VAR_1 : false ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 ; METHOD_2 ( VAR_3 , VAR_4 , null ) ; METHOD_3 ( VAR_5 , null ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; } if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } } 
void METHOD_1 ( java.lang.String name ) { VAR_2 . METHOD_2 ( name ) ; } 
final void METHOD_1 ( TYPE_1 app , boolean VAR_1 , boolean VAR_2 ) { ( VAR_3 ) ++ ; METHOD_2 ( app , VAR_1 , VAR_2 , 0 ) ; } 
protected void METHOD_1 ( java.lang.String response ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( response ) ; } } 
public void METHOD_1 ( ) { if ( ( VAR_2 . size ( ) ) == 1 ) { VAR_1 . METHOD_1 ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; } } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) throws TYPE_1 ; 
public void METHOD_1 ( ) throws java.lang.Exception { run ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( METHOD_2 ( ) , VAR_1 , ( - 1 ) ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int count , short [ ] d , int VAR_4 ) ; 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; try { VAR_1 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; } catch ( java.lang.IllegalArgumentException VAR_3 ) { } } 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { return new TYPE_2 ( this ) ; } 
public void METHOD_1 ( int VAR_1 , int count , float [ ] d ) { METHOD_3 ( ) ; METHOD_4 ( VAR_1 , count , d , Element.DataType.FLOAT_32 , d . length ) ; } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 2 , 2 , false ) ; args.out = TYPE_3 . METHOD_3 ( args . inV , t ) ; } 
public int METHOD_1 ( ) { return METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; } 
public TYPE_1 [ ] METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 . METHOD_4 ( ) ; } 
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device ) { if ( ( VAR_1 ) == null ) return false ; return VAR_1 . METHOD_1 ( device ) ; } 
abstract java.lang.Object METHOD_1 ( int VAR_1 ) throws TYPE_1 ; 
private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_2 ) android.util.Log.d ( VAR_3 . TAG , STRING_1 ) ; METHOD_3 ( ) ; } 
boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( true ) ; } 
public final void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . getName ( ) ) ) ) ; VAR_1 . METHOD_1 ( ) ; } } 
public static int METHOD_1 ( int value ) { return ( ( int ) ( ( double ) ( value ) ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object ... args ) { VAR_2 = false ; super . METHOD_1 ( VAR_1 , args ) ; } 
private static java.util.Map < java.lang.String , java.util.List < java.lang.String > > METHOD_1 ( java.lang.String ... VAR_1 ) { return TYPE_1 . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( VAR_1 ) ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , int flags ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , flags , null ) ; } 
void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( ) ; } TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_2 ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { return VAR_1 . METHOD_2 ( ) ; } else { return STRING_1 ; } } 
private synchronized void METHOD_1 ( final java.lang.String key ) { if ( key != null ) { VAR_1 . METHOD_2 ( key ) ; } VAR_1 . METHOD_3 ( true ) ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_2 VAR_4 ) throws java.io.IOException { TYPE_3 . METHOD_2 ( VAR_1 , VAR_5 , VAR_2 , VAR_3 , null , VAR_4 ) ; } 
void METHOD_1 ( java.io.File [ ] in , java.io.File out , boolean VAR_1 ) throws java.lang.Exception ; 
public double METHOD_1 ( int VAR_1 ) { double result = d ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . METHOD_2 ( ) ; } return result ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ! ( METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ) ) { return ; } METHOD_3 ( VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_6 , VAR_5 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , 1 ) ; assertEquals ( VAR_3 , VAR_4 . METHOD_3 ( VAR_1 ) ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; } 
private java.lang.String format ( long number , TYPE_1 VAR_1 ) { TYPE_2 result = new TYPE_2 ( ) ; VAR_1 . format ( number , result , 0 , 0 ) ; METHOD_1 ( result , VAR_1 ) ; return result . toString ( ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { assert VAR_1 != null ; if ( VAR_1 . equals ( STRING_1 ) ) { return VAR_2 ; } return TYPE_1 . METHOD_2 ( VAR_1 ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws TYPE_4 { return new TYPE_1 ( TYPE_5 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) ) , true ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; call . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( VAR_1 ) ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; } 
private void METHOD_1 ( int expected , short VAR_1 ) { org.junit.Assert.assertEquals ( java.lang.Integer . METHOD_2 ( expected ) , java.lang.Integer . METHOD_2 ( ( VAR_1 & INT_1 ) ) ) ; } 
public java.io.File METHOD_1 ( ) { return ( VAR_1 ) != null ? VAR_1 . get ( ) : null ; } 
public TYPE_1 METHOD_1 ( ) { return type ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; } 
public final short METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; assert VAR_1 != null ; return VAR_1 ; } 
boolean METHOD_1 ( ) { return VAR_2 ; } 
static void METHOD_1 ( java.lang.Object VAR_1 ) { } 
public void METHOD_1 ( TYPE_1 from , java.lang.Throwable VAR_1 ) { } 
void METHOD_1 ( TYPE_1 from ) { this . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( this . VAR_1 , VAR_2 ) ; } 
protected void METHOD_1 ( ) { METHOD_3 ( STRING_1 ) ; super . METHOD_1 ( ) ; } 
public final long METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; } 
private native boolean METHOD_1 ( byte [ ] address , int location ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 os , java.lang.String VAR_1 ) throws java.io.IOException { METHOD_1 ( os , VAR_1 , STRING_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( STRING_1 , TYPE_3 . format ( VAR_1 ) ) ; this . VAR_1 = VAR_1 ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_1 result , TYPE_3 VAR_1 ) { return new TYPE_2 ( result , VAR_1 ) ; } 
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > from ) { this . from = from ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { assert VAR_2 ; return ( ( VAR_3 ) != null ) && ( VAR_3 . METHOD_2 ( VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; if ( METHOD_3 ( ) ) { return null ; } return VAR_3 . METHOD_1 ( VAR_1 ) ; } 
public static < TYPE_1 > void METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 , java.util.List < TYPE_1 > VAR_2 , TYPE_3 < TYPE_1 > VAR_3 ) { TYPE_4 . METHOD_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 ) ; } 
public static TYPE_1 METHOD_1 ( java.util.List < java.lang.Class < ? extends TYPE_3 > > VAR_1 ) throws TYPE_4 { return TYPE_5 . METHOD_2 ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 e ) { long id = VAR_1 . METHOD_2 ( 4 , e . METHOD_3 ( VAR_1 ) ) ; return new TYPE_1 ( id , VAR_1 ) ; } 
final void METHOD_1 ( int i , double x ) { METHOD_2 ( METHOD_3 ( i ) , x ) ; } 
public void METHOD_1 ( TYPE_1 c ) throws android.os.RemoteException { METHOD_2 ( c , null ) ; } 
protected boolean METHOD_1 ( ) { return ( ( flags ) & ( VAR_1 ) ) != 0 ; } 
private native boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , java.lang.String number , int type , byte [ ] address ) ; 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_1 ) ; } 
private static boolean METHOD_1 ( TYPE_1 call ) { return TYPE_3 . METHOD_3 ( call . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { try { new TYPE_1 ( ) . METHOD_2 ( null ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } new TYPE_2 ( STRING_2 ) . METHOD_3 ( ) ; } 
public static long METHOD_1 ( ) { int VAR_1 = INT_1 ; return ( ( long ) ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 s = METHOD_2 ( ) ; TYPE_1 VAR_1 = METHOD_3 ( s ) ; org.junit.Assert.assertEquals ( s , VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( java.io.File [ ] VAR_1 ) throws java.io.IOException { return TYPE_2 . METHOD_1 ( null , VAR_1 ) ; } 
void METHOD_1 ( TYPE_1 out ) { int count = VAR_1 . get ( ) ; out . METHOD_2 ( count ) ; out . METHOD_2 ( ( count - ( VAR_2 ) ) ) ; } 
void METHOD_1 ( java.io.File out , boolean VAR_2 , java.io.File ... VAR_3 ) throws java.lang.Exception ; 
public void METHOD_1 ( TYPE_1 provider ) { provider . METHOD_2 ( STRING_5 , STRING_6 ) ; provider . METHOD_2 ( STRING_7 , STRING_4 ) ; } 
private void METHOD_1 ( java.lang.String msg , java.lang.Object ... VAR_1 ) { TYPE_1 . METHOD_2 ( ( ( VAR_2 ) == null ? STRING_1 : ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) + STRING_2 ) , java.lang.String.format ( msg , VAR_1 ) ) ; } 
public void METHOD_1 ( TYPE_1 ... VAR_1 ) { METHOD_2 ( ) ; for ( TYPE_1 type : VAR_1 ) { VAR_2 . METHOD_4 ( type ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ! ( VAR_1 ) ) { return ; } TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_2 , VAR_4 , VAR_4 , VAR_5 , VAR_3 ) ; } 
public void METHOD_1 ( ) { android.util.Log . i ( VAR_1 . TAG , STRING_1 ) ; org.junit.Assert.assertEquals ( VAR_2 , VAR_3 . METHOD_3 ( ) ) ; } 
public static float METHOD_1 ( float arg ) { return arg / ( - FLOAT_1 ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . METHOD_2 ( VAR_5 , VAR_1 ) ; } 
synchronized long METHOD_1 ( int id , long VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , id , VAR_1 ) ; } 
abstract void METHOD_1 ( int pos , long [ ] VAR_1 , int VAR_2 , int length ) ; 
public int METHOD_1 ( ) { return 8 ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { return VAR_1 ; } 
public void run ( ) { for ( int i = 0 ; i < 5 ; ++ i ) { Main . METHOD_1 ( INT_1 ) ; Main . METHOD_2 ( ) ; } VAR_1 = false ; } 
public TYPE_1 < com.android.jack.ir.ast.JDefinedClassOrInterface > METHOD_1 ( TYPE_2 < com.android.jack.ir.ast.JDefinedClassOrInterface > VAR_1 ) { return VAR_1 . METHOD_2 ( ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; return new TYPE_1 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , false ) ; } 
public int size ( ) { return set . size ( ) ; } 
private void METHOD_1 ( ) { if ( VAR_1 ) android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return null ; } 
public void METHOD_1 ( java.io.File [ ] in , java.io.File out , boolean VAR_1 ) throws java.lang.Exception { METHOD_2 ( in ) ; METHOD_3 ( out , VAR_1 ) ; run ( ) ; } 
public int METHOD_1 ( ) { return VAR_1 ; } 
static native TYPE_1 METHOD_1 ( java.lang.Class < ? > c , java.lang.String name ) ; 
synchronized void METHOD_1 ( long id , int VAR_1 , long VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) ; } 
private boolean METHOD_1 ( ) { return ! ( METHOD_2 ( ) ) ; } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 2 , 16 , false ) ; args.out = TYPE_3 . METHOD_3 ( args . inV , t ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = TYPE_3 . METHOD_2 ( type , key . toString ( ) ) ; VAR_3 = null ; return VAR_4 ; } 
public void METHOD_1 ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( STRING_1 ) ; java.lang.String VAR_2 = STRING_2 ; assertEquals ( STRING_3 , VAR_2 , TYPE_1 . METHOD_2 ( VAR_1 ) . toString ( ) ) ; } 
public boolean METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { try { TYPE_2 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 , null ) ; } catch ( android.os.RemoteException e ) { } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) android.util.Log.v ( VAR_3 . TAG , STRING_1 ) ; METHOD_2 ( ) ; } 
public static float METHOD_1 ( ) { int VAR_1 = INT_1 ; return ( ( float ) ( VAR_1 ) ) ; } 
public long METHOD_1 ( long c ) throws TYPE_1 { long s = super . METHOD_1 ( c ) ; TYPE_2 . METHOD_2 ( s , VAR_1 ) ; return s ; } 
protected void METHOD_1 ( byte [ ] input , int offset , int VAR_1 ) { TYPE_1 . METHOD_3 ( VAR_2 , input , offset , VAR_1 ) ; } 
public void run ( long VAR_1 ) throws java.lang.Exception { try { TYPE_1 . METHOD_1 ( VAR_1 , null , VAR_3 ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public void METHOD_1 ( ) { assertEquals ( 2 , VAR_1 . METHOD_2 ( ) , 0 ) ; assertEquals ( 3 , VAR_1 . METHOD_3 ( ) , 0 ) ; } 
public static final native TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws android.os.RemoteException , TYPE_2 ; 
public void METHOD_1 ( boolean value ) { super . METHOD_1 ( value ) ; VAR_1 . METHOD_1 ( value ) ; } 
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) { android.util.Log.d ( STRING_1 , STRING_2 ) ; } synchronized ( this ) { VAR_2 = null ; } METHOD_2 ( ) ; } 
public void METHOD_1 ( java.lang.String format , java.lang.Object ... args ) { VAR_2 += ( java.lang.String.format ( format , args ) ) + STRING_1 ; } 
java.io.File METHOD_1 ( ) ; 
private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 , true ) ; } 
private void METHOD_1 ( byte [ ] VAR_1 , byte b , int VAR_2 ) { VAR_1 [ 0 ] = b ; TYPE_1 msg = METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , VAR_2 , msg . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 entry , boolean VAR_1 ) { if ( VAR_1 ) { VAR_3 = entry ; METHOD_2 ( ) ; } else { VAR_4 = entry ; METHOD_3 ( ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ; TYPE_2 . METHOD_4 ( VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_6 ( VAR_5 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } return super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) ; METHOD_4 ( VAR_1 ) ; } else { METHOD_3 ( ) ; } } 
private synchronized void METHOD_1 ( java.io.File VAR_1 ) throws java.io.IOException { if ( ( ! ( VAR_1 . METHOD_2 ( ) ) ) && ( ! ( VAR_1 . METHOD_3 ( ) ) ) ) { throw new java.io.IOException ( ( STRING_1 + VAR_1 ) ) ; } } 
public static boolean METHOD_1 ( TYPE_1 context , int subId ) { return ( TYPE_2 . METHOD_2 ( context , subId ) ) != null ; } 
public java.lang.String METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return null ; } return VAR_1 . METHOD_3 ( ) . name ( ) ; } 
public static TYPE_1 from ( java.lang.Exception e ) throws TYPE_1 { throw new TYPE_1 ( e.toString ( ) ) ; } 
public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( null , new java.lang.String [ ] { STRING_1 } ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public void METHOD_1 ( java.lang.String id , java.lang.String VAR_1 ) throws java.lang.Exception { for ( TYPE_1 a : VAR_2 ) { a . METHOD_2 ( id , VAR_1 , null ) ; } } 
void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; METHOD_4 ( VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { METHOD_2 ( VAR_1 , VAR_2 , null , true ) ; } 
public static int METHOD_1 ( ) { int VAR_2 = ( ( ( 8 * ( VAR_3 ) ) + ( VAR_4 ) ) + ( VAR_5 ) ) + ( 20 * ( VAR_4 ) ) ; return VAR_2 ; } 
synchronized void METHOD_1 ( long id , long [ ] VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) ; } 
public java.util.Set < java.lang.String > METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( VAR_3 , 0 , 0 , VAR_1 ) . METHOD_4 ( ) ; } 
private static native void METHOD_1 ( java.lang.String VAR_1 , int fd ) throws java.io.IOException ; 
private static boolean METHOD_1 ( int expected , int VAR_1 ) { final int VAR_2 = 7 ; return ( TYPE_1 . METHOD_2 ( ( expected - VAR_1 ) ) ) <= VAR_2 ; } 
public int METHOD_1 ( ) { return VAR_1 . size ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) , null , null , false , false , null ) ; TYPE_3 . METHOD_4 ( result ) ; METHOD_5 ( VAR_3 ) ; } 
public void METHOD_1 ( long s ) { super . METHOD_1 ( s ) ; TYPE_1 . METHOD_2 ( s , TYPE_2 . METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( s , TYPE_2 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public native java.lang.Object invoke ( java.lang.Object obj , java.lang.Object ... args ) throws TYPE_1 , java.lang.IllegalArgumentException , TYPE_2 ; 
public static void METHOD_1 ( java.lang.String [ ] args ) { Main . METHOD_2 ( ) ; new Main ( ) . METHOD_3 ( ) ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int VAR_6 , byte [ ] d , int VAR_7 ) ; 
public boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) || ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 = super . METHOD_1 ( VAR_5 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; return VAR_3 == null ? VAR_3 : new TYPE_2 ( VAR_3 , VAR_5 ) ; } 
public static short [ ] METHOD_1 ( short [ ] VAR_1 , int VAR_2 ) { if ( VAR_2 < 0 ) { throw new TYPE_1 ( java.lang.Integer . toString ( VAR_2 ) ) ; } return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; } 
public static final TYPE_2 METHOD_1 ( ) { TYPE_2 result = TYPE_3 . METHOD_2 ( STRING_1 ) ; return result ; } 
public void METHOD_1 ( ) { assertFalse ( TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ) ; } 
public static < TYPE_1 extends TYPE_2 < TYPE_1 > > void METHOD_1 ( TYPE_3 < TYPE_1 > VAR_1 , java.util.List < TYPE_1 > VAR_2 ) { TYPE_4 . METHOD_1 ( VAR_1 , VAR_2 , TYPE_1 : : METHOD_2 ) ; } 
public char METHOD_1 ( ) { return VAR_2 ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( null ) ; } return true ; } 
public void METHOD_2 ( int state , int VAR_1 ) throws android.os.RemoteException { listener . METHOD_2 ( state , VAR_1 ) ; } 
public int METHOD_1 ( ) { return ( VAR_1 ) != null ? VAR_1 . METHOD_1 ( ) : - 1 ; } 
public final void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_3 ( ( VAR_3 ) - > VAR_3 . METHOD_4 ( this , VAR_1 ) ) ; } 
public static java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ ] { VAR_2 , VAR_3 , VAR_4 } ; } 
public TYPE_1 METHOD_1 ( TYPE_2 project ) { return this . METHOD_1 ( this , project ) ; } 
public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; METHOD_3 ( ) ; } 
public static void METHOD_1 ( TYPE_1 args ) { args.out = TYPE_2 . METHOD_2 ( args . inV ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( this , this . address , this . size , ( ( TYPE_3 . METHOD_2 ( ) ) != ( VAR_1 ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return type ; } 
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_4 ( false ) ; } } 
public void METHOD_1 ( ) { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; try { c . METHOD_3 ( null , STRING_1 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public void METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { METHOD_2 ( VAR_1 , VAR_2 , null , null , true ) ; } 
public static long METHOD_1 ( long arg ) { return arg > > > 0 ; } 
public void error ( java.lang.String VAR_1 ) { log . error ( null , VAR_1 , null ) ; } 
public static boolean [ ] METHOD_1 ( boolean [ ] VAR_1 , int VAR_2 ) { if ( VAR_2 < 0 ) { throw new TYPE_1 ( java.lang.Integer . toString ( VAR_2 ) ) ; } return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; org.junit.Assert.assertEquals ( VAR_1 , VAR_2 ) ; } 
public TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 , int netId ) throws TYPE_2 { return VAR_2 . METHOD_1 ( VAR_1 , netId ) ; } 
static void METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return ; } VAR_4 . METHOD_3 ( ) ; } 
native boolean METHOD_1 ( java.lang.String path , int VAR_1 , int VAR_2 , int VAR_3 , byte [ ] input , byte [ ] VAR_4 , byte [ ] output ) ; 
public static void test ( ) { int i ; assertTrue ( ( ( i = 2 ) == 2 ) ) ; assertTrue ( ( i == 2 ) ) ; } 
private static native java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , java.lang.String VAR_4 ) ; 
private TYPE_1 METHOD_1 ( java.lang.String name , TYPE_2 VAR_1 , int userId ) { return METHOD_2 ( null , name , VAR_1 , true , userId ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 t = new TYPE_1 ( STRING_1 ) ; t . METHOD_2 ( null ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public static final TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( STRING_1 ) ; } 
abstract void METHOD_1 ( int VAR_1 , java.lang.Object value ) throws TYPE_1 ; 
void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_3 ( VAR_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_4 ( ) ; } } 
final void METHOD_1 ( int offset , float value ) { VAR_1 . METHOD_1 ( ( offset + ( address ) ) , value ) ; } 
public static long METHOD_1 ( ) { long a ; long b ; long c ; a = INT_1 ; b = INT_2 ; c = a - b ; return c ; } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( ) ; c . METHOD_2 ( STRING_1 , STRING_2 ) ; try { c . METHOD_3 ( null , STRING_3 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public void METHOD_1 ( java.lang.String options ) { VAR_1 = options ; } 
final void METHOD_1 ( int i , long x ) { METHOD_2 ( METHOD_3 ( i ) , x ) ; } 
public void METHOD_1 ( long session , long s , long c , TYPE_1 VAR_1 , TYPE_2 fd , TYPE_3 callback ) throws java.lang.Exception { super . METHOD_1 ( VAR_2 , s , VAR_2 , VAR_1 , fd , callback ) ; VAR_3 [ 0 ] = session ; } 
static void METHOD_1 ( long VAR_1 , float [ ] values ) { TYPE_1 d = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( d == null ) { return ; } TYPE_2 . METHOD_3 ( VAR_3 , 0 , VAR_3 , 0 , VAR_4 ) ; } 
public void METHOD_1 ( int VAR_1 , android.os.Message VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . METHOD_2 ( VAR_3 , 0 ) ; TYPE_1 . fail ( STRING_1 ) ; } catch ( java.lang.IllegalArgumentException e ) { } } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return METHOD_2 ( VAR_1 , false , true , VAR_2 ) ; } 
public boolean METHOD_1 ( java.lang.String value ) { return VAR_2 . METHOD_2 ( value ) ; } 
public static int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( TYPE_2 . METHOD_2 ( VAR_2 ) ) - ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { assertEquals ( VAR_2 class , VAR_1 class ) ; } 
public int METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 . METHOD_2 ( ) ; } return VAR_2 ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { try { TYPE_1 . METHOD_1 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { java.lang.System.out.println ( STRING_2 ) ; } } 
public static java.lang.String METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 < 0 ) || ( ( VAR_2 . length ) <= VAR_1 ) ) { return STRING_1 ; } return VAR_2 [ VAR_1 ] ; } 
private void METHOD_1 ( ) { if ( ( ( VAR_1 ) == false ) && ( ( VAR_2 ) != null ) ) { int index = VAR_2 . METHOD_2 ( ) ; if ( index >= 0 ) { METHOD_3 ( index ) ; } } } 
static void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 ) { TYPE_1 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 = TYPE_2 . METHOD_2 ( VAR_3 ) ; } 
public static boolean METHOD_1 ( java.lang.String version ) { return ( VAR_1 ) >= ( TYPE_1 . METHOD_2 ( version ) ) ; } 
public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String [ ] VAR_3 ) throws java.lang.Exception { VAR_5 . invoke ( null , VAR_1 , VAR_3 ) ; } 
public void error ( java.lang.Throwable t ) { log . error ( null , STRING_1 , t , null ) ; } 
public void METHOD_1 ( java.lang.String id , java.lang.String event , android.os.Bundle VAR_1 ) throws java.lang.Exception { for ( TYPE_1 a : VAR_2 ) { a . METHOD_2 ( id , event , VAR_1 , null ) ; } } 
public static double METHOD_1 ( ) { int VAR_1 = INT_1 ; return ( ( double ) ( VAR_1 ) ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( VAR_1 , ( ( length ( ) ) - ( VAR_1 . length ( ) ) ) ) ; } 
public static void METHOD_1 ( final TYPE_1 project , final TYPE_2 < TYPE_3 > VAR_1 ) { TYPE_4 . METHOD_1 ( project , VAR_1 , true , null ) ; } 
public static void fail ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { throw new TYPE_1 ( ) ; } throw new TYPE_1 ( VAR_1 ) ; } 
public boolean METHOD_1 ( TYPE_1 x ) { print ( STRING_1 ) ; METHOD_2 ( x , null ) ; return false ; } 
private void METHOD_1 ( ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.HashMap < java.lang.Class < ? extends TYPE_2 > , TYPE_2 > ( ) ; } } 
protected abstract void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 , TYPE_3 project , TYPE_4 VAR_3 , java.util.List < TYPE_5 > VAR_5 , java.util.List < TYPE_1 > VAR_6 , java.util.List < java.io.File > VAR_7 , TYPE_6 VAR_8 ) throws TYPE_7 ; 
public java.util.Set < java.lang.Class > METHOD_1 ( ) { return VAR_2 < java.lang.Class > METHOD_2 ( VAR_3 class ) ; } 
private static void METHOD_1 ( ) { long [ ] VAR_1 = Main . METHOD_2 ( 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; java.lang.System.out.println ( TYPE_1 . toString ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_2 ( new java.io.File ( VAR_2 , STRING_1 ) ) ; VAR_1 . METHOD_2 ( new TYPE_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_3 ( ) ) ) ; } 
public final native void METHOD_1 ( java.lang.String VAR_2 ) throws android.os.RemoteException ; 
public boolean METHOD_1 ( boolean on , TYPE_1 callback ) { return false ; } 
private static java.lang.String METHOD_1 ( boolean VAR_1 ) { java.lang.String VAR_2 = null ; if ( VAR_1 ) VAR_2 = VAR_4 ; else { VAR_2 = TYPE_1 . get ( VAR_3 , VAR_5 ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; } 
public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { long r = TYPE_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_3 , VAR_1 ) ; return r != 0 ? new TYPE_1 ( r ) : null ; } 
public void METHOD_1 ( java.lang.Object VAR_1 ) { try { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_1 ( VAR_1 , METHOD_3 ( VAR_1 , false ) , TYPE_2 . METHOD_4 ( VAR_1 ) ) ; } finally { TYPE_1 . METHOD_5 ( VAR_2 ) ; } } 
public final java.lang.String METHOD_3 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( android.bluetooth.BluetoothDevice VAR_1 , boolean VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
protected void METHOD_1 ( ) throws java.lang.Throwable { try { super . METHOD_1 ( ) ; } finally { TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_1 = 0 ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; } 
public com.android.jack.ir.ast.JDefinedClassOrInterface METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( boolean VAR_1 ) { } 
void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , true ) ; METHOD_2 ( VAR_4 , VAR_5 , VAR_6 , false ) ; status = VAR_7 ; } 
protected java.io.File METHOD_1 ( TYPE_1 VAR_1 , java.lang.String arg1 ) throws TYPE_3 { VAR_3 = arg1 ; return super . METHOD_1 ( VAR_1 , arg1 ) ; } 
public static boolean METHOD_1 ( boolean arg ) { return ( arg ? Main . METHOD_2 ( 0 ) : Main . METHOD_2 ( 1 ) ) != 2 ; } 
private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { return new TYPE_2 ( new TYPE_3 ( null , VAR_1 ) , VAR_2 ) ; } 
public void METHOD_1 ( java.io.File VAR_1 ) throws java.io.IOException { try ( TYPE_1 out = new TYPE_2 ( VAR_1 ) ) { METHOD_1 ( out ) ; } } 
public static void METHOD_1 ( TYPE_1 args ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , args.out , 1 , 4 ) ; } 
public void METHOD_1 ( int type , int VAR_1 , int VAR_2 ) { if ( ! ( METHOD_2 ( type , VAR_1 , VAR_3 ) ) ) { android.util.Log.e ( VAR_4 . TAG , STRING_1 ) ; } } 
public void METHOD_1 ( ) { try ( TYPE_1 VAR_1 = new TYPE_1 ( ) ) { int VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_3 ) ; } catch ( java.lang.Exception e ) { METHOD_4 ( e , VAR_3 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.Map < java.lang.String , TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( METHOD_3 ( ) , VAR_3 < java.lang.String > METHOD_4 ( ) , false , VAR_4 ) ; org.junit.Assert.assertEquals ( 9 , VAR_1 . size ( ) ) ; } 
synchronized void METHOD_1 ( long id , byte [ ] d ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , d ) ; } 
public static int METHOD_1 ( int arg1 , int VAR_1 ) { int VAR_3 = arg1 - VAR_1 ; return ( - VAR_3 ) | ( - VAR_3 ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , 1 ) ) ; METHOD_5 ( ) ; VAR_1 . METHOD_6 ( VAR_2 ) ; } 
synchronized void METHOD_1 ( long id , long [ ] VAR_1 , int [ ] VAR_2 , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 ) ; } 
public TYPE_1 set ( TYPE_1 r ) { set ( r . x , r . y , r . w , r . h ) ; return this ; } 
private native void METHOD_1 ( int VAR_1 , boolean VAR_2 , byte [ ] data ) ; 
private static boolean METHOD_1 ( ) { return VAR_2 ; } 
void METHOD_1 ( android.bluetooth.BluetoothDevice device ) { VAR_1 = device ; } 
protected synchronized void METHOD_1 ( ) { VAR_2 = true ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } } 
private void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { synchronized ( VAR_1 ) { METHOD_3 ( true ) ; } } } 
private java.lang.Object METHOD_1 ( ) { TYPE_1 < TYPE_2 > result = TYPE_1 . METHOD_2 ( VAR_1 ) ; for ( TYPE_3 < ? > e : VAR_2 ) result . METHOD_3 ( ( ( TYPE_2 ) ( e ) ) ) ; return result ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; } 
public static void METHOD_1 ( int [ ] x ) { int m = ( TYPE_1 . METHOD_2 ( x ) ) > > 8 ; x [ 0 ] ^= m & ( VAR_1 ) ; } 
protected void METHOD_1 ( ) throws java.lang.Throwable { try { METHOD_2 ( ) ; } finally { super . METHOD_1 ( ) ; } } 
public void METHOD_1 ( java.lang.String path ) { VAR_1 . METHOD_3 ( path ) ; } 
public static native void METHOD_1 ( long VAR_1 ) ; 
final void METHOD_1 ( int pos , int [ ] VAR_1 , int VAR_2 , int length ) { TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) ; } 
public void METHOD_1 ( android.os.Message VAR_1 , java.lang.Throwable e ) { TYPE_1 . d ( VAR_2 , STRING_1 ) ; if ( VAR_1 != null ) { android.os.AsyncResult . METHOD_2 ( VAR_1 , null , METHOD_3 ( e ) ) ; VAR_1 . METHOD_4 ( ) ; } } 
public static void METHOD_1 ( TYPE_1 fd , TYPE_2 VAR_1 , int VAR_2 ) throws TYPE_3 { try { TYPE_4 . METHOD_1 ( fd , VAR_1 , VAR_2 , 0 ) ; } catch ( TYPE_5 ex ) { throw new TYPE_6 ( ex ) ; } } 
public long METHOD_1 ( int VAR_1 ) { long result = VAR_3 ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . METHOD_2 ( VAR_3 ) ; } return result ; } 
void METHOD_1 ( int response ) { METHOD_2 ( ( STRING_1 + ( TYPE_1 . METHOD_3 ( response ) ) ) ) ; } 
public boolean METHOD_1 ( char c ) { return METHOD_1 ( TYPE_1 . METHOD_3 ( new char [ ] { c } ) ) ; } 
private java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
private boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( STRING_1 . equals ( VAR_1 ) ) || ( STRING_3 . equals ( VAR_1 ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) ; 
public static int METHOD_1 ( int arg ) { return arg & ( - 1 ) ; } 
public boolean METHOD_1 ( ) { return VAR_2 . METHOD_2 ( new TYPE_2 ( ) ) ; } 
public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( TYPE_2 key , TYPE_3 value ) { super . METHOD_1 ( key , value ) ; return this ; } 
public TYPE_1 < java.lang.String > METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , TYPE_1 b ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , b ) ; } 
static void METHOD_1 ( long VAR_1 , float VAR_2 ) { TYPE_1 d = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( d == null ) { return ; } TYPE_1 . METHOD_3 ( VAR_4 , VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 name = new TYPE_1 ( STRING_1 ) ; org.junit.Assert.assertEquals ( ( - INT_1 ) , TYPE_2 . METHOD_2 ( name ) ) ; org.junit.Assert.assertEquals ( ( - INT_2 ) , TYPE_2 . METHOD_3 ( name ) ) ; } 
public TYPE_1 get ( int index ) { return ( ( TYPE_1 ) ( VAR_1 [ index ] ) ) ; } 
public void METHOD_1 ( android.bluetooth.BluetoothDevice device , TYPE_1 VAR_1 ) { TYPE_2 service = METHOD_2 ( ) ; if ( service == null ) { return ; } service . METHOD_1 ( device , VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_4 ( ) ; } 
public static long METHOD_1 ( long value ) { return ( ( long ) ( ( int ) ( value ) ) ) ; } 
public static int METHOD_1 ( long value ) { return ( ( int ) ( value ^ ( value > > > INT_1 ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , 2 , STRING_2 , STRING_3 , STRING_4 ) ; } 
static void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { if ( VAR_1 != null ) { throw new TYPE_2 ( STRING_1 ) ; } } 
void METHOD_1 ( TYPE_1 listener ) throws android.os.RemoteException ; 
public static boolean METHOD_1 ( boolean arg ) { return ! ( Main . METHOD_2 ( arg ) ) ; } 
abstract void METHOD_1 ( int pos , double [ ] VAR_1 , int VAR_2 , int length ) ; 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; METHOD_3 ( ) ; VAR_2 . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_2 ) android.util.Slog.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ; return VAR_4 . METHOD_2 ( this , VAR_1 , false , VAR_5 ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( ) ; if ( ! ( METHOD_2 ( false ) ) ) { android.util.Log.e ( VAR_4 . TAG , STRING_1 ) ; } return VAR_2 ; } 
public void METHOD_1 ( int VAR_1 , int VAR_2 ) throws TYPE_1 { os . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { if ( ( VAR_2 ) == null ) { return false ; } android.bluetooth.BluetoothDevice device = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_1 ) ; return VAR_2 . METHOD_4 ( device ) ; } 
public java.io.File METHOD_1 ( ) { return VAR_1 ; } 
public void run ( ) { VAR_1 = METHOD_1 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_2 in = new TYPE_2 ( mRS , INPUTSIZE ) ; VAR_4 = in . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 0 ) ; } 
public void METHOD_1 ( int slotId , int VAR_1 ) throws android.os.RemoteException { } 
public void METHOD_2 ( java.util.List < TYPE_1 > VAR_1 ) throws android.os.RemoteException { listener . METHOD_2 ( VAR_1 ) ; } 
synchronized void METHOD_1 ( long id , int [ ] d ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , d ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_3 ( VAR_1 ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( char c , android.os.Message result ) { this . METHOD_1 ( c , result ) ; } 
public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; if ( VAR_1 != null ) { return VAR_1 . METHOD_1 ( ) ; } return false ; } 
public TYPE_1 [ ] [ ] METHOD_1 ( ) { return super . METHOD_1 ( ) ; } 
public void METHOD_1 ( int state ) { } 
public void METHOD_1 ( boolean status ) { this . METHOD_1 ( status ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; mRS . METHOD_3 ( ) ; METHOD_5 ( ) ; METHOD_4 ( ) ; } 
public double METHOD_1 ( int VAR_1 ) { double result = d ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . METHOD_2 ( d ) ; } return result ; } 
void METHOD_1 ( ) ; 
public boolean METHOD_1 ( int VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public java.lang.String toString ( ) { return STRING_1 + ( name . toString ( ) ) ; } 
public TYPE_1 METHOD_1 ( long VAR_1 ) { return METHOD_4 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 location , java.lang.String VAR_3 , TYPE_5 format ) { java.lang.System.out.println ( ( ( location + STRING_1 ) + VAR_3 ) ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { try { VAR_2 . METHOD_1 ( VAR_1 ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , null ) ; TYPE_1 . METHOD_3 ( null , 0 , null ) ; } 
static void METHOD_1 ( long VAR_1 , float [ ] values ) { TYPE_1 d = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( d == null ) { return ; } TYPE_2 . METHOD_3 ( values , 0 , VAR_3 , 0 , VAR_4 ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { assertTrue ( TYPE_1 . METHOD_2 ( ) ) ; } 
public TYPE_1 METHOD_1 ( int start , int VAR_1 ) { METHOD_2 ( start , VAR_1 ) ; return new TYPE_1 ( VAR_3 , ( start + ( this . start ) ) , ( VAR_1 + ( this . start ) ) ) ; } 
public void METHOD_1 ( int VAR_1 ) { if ( VAR_2 ) { TYPE_1 . log ( ( STRING_1 + VAR_1 ) ) ; } if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( VAR_1 ) ; } } 
private static native java.lang.Class METHOD_1 ( java.lang.String name , TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 , TYPE_3 ; 
public void run ( ) { METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 class ) ; TYPE_1 . METHOD_3 ( VAR_1 class , VAR_2 ) ; } 
public void METHOD_1 ( ) { try { VAR_2 . METHOD_1 ( ) ; } catch ( java.lang.Exception e ) { VAR_3 . println ( STRING_1 ) ; e . METHOD_2 ( ) ; } } 
public void METHOD_1 ( ) { android.os.Bundle VAR_2 = new android.os.Bundle ( ) ; VAR_2 . METHOD_2 ( STRING_1 , VAR_3 ) ; VAR_4 . METHOD_3 ( STRING_3 , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( ) { assert ( type ) != null ; return type ; } 
public static void is ( java.lang.Class < ? > type ) { } 
public int METHOD_1 ( java.lang.String name , byte [ ] data , int uid ) throws android.os.RemoteException ; 
protected void METHOD_1 ( ) throws java.lang.Throwable { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } super . METHOD_1 ( ) ; } 
TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 . METHOD_2 ( ) , VAR_9 , true , VAR_10 , null , null ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 r = METHOD_2 ( VAR_1 , true , false , false ) ; return new TYPE_1 ( r . METHOD_3 ( ) , r . METHOD_4 ( ) , r . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , VAR_1 , new TYPE_1 ( STRING_2 . METHOD_3 ( ) ) ) ; METHOD_4 ( STRING_3 , STRING_4 ) ; } 
public void METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( this , VAR_1 ) ; } } 
public static float METHOD_1 ( float x , float y ) { float VAR_2 = x + y ; return VAR_2 - y ; } 
public void METHOD_1 ( ) { METHOD_3 ( VAR_1 ) ; } 
public static int p ( float arg ) { return arg > FLOAT_1 ? 0 : - 1 ; } 
public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public synchronized int METHOD_1 ( ) throws TYPE_1 { return VAR_1 ; } 
public abstract java.lang.String METHOD_1 ( ) ; 
private boolean METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { try { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; } catch ( TYPE_2 e ) { } return false ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; METHOD_3 ( VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_6 , VAR_5 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 pm ) throws TYPE_3 , TYPE_4 { TYPE_5 VAR_1 = new TYPE_5 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; return VAR_1 . METHOD_3 ( ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } 
public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 service = null ; if ( ( VAR_1 ) != null ) { service = VAR_1 . METHOD_1 ( VAR_2 ) ; if ( service == null ) { METHOD_2 ( STRING_1 ) ; } } return service ; } 
public static synchronized void METHOD_1 ( int VAR_1 ) { TYPE_1 p = VAR_2 . METHOD_2 ( ( VAR_1 - 1 ) ) ; VAR_3 . METHOD_2 ( p . getName ( ) ) ; TYPE_2 . METHOD_3 ( ) ; } 
public void METHOD_1 ( int type , int VAR_1 , int VAR_2 ) ; 
public void METHOD_1 ( TYPE_1 request , TYPE_2 VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 ) throws android.os.RemoteException { } 
private static java.lang.String METHOD_1 ( java.lang.String value ) { return value != null ? TYPE_1 . METHOD_2 ( ) . get ( value ) : null ; } 
void METHOD_1 ( TYPE_1 in ) { VAR_2 = in . METHOD_2 ( ) ; VAR_1 . set ( VAR_2 ) ; VAR_3 = in . METHOD_2 ( ) ; VAR_4 = VAR_5 = VAR_2 ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 ; } 
protected final void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; if ( ! ( METHOD_2 ( ) ) ) return ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( false ) ; METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( 5 ) ; try { c . METHOD_2 ( null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public TYPE_1 METHOD_1 ( android.bluetooth.BluetoothDevice device ) { TYPE_2 service = METHOD_2 ( ) ; if ( service == null ) { return null ; } return service . METHOD_1 ( device ) ; } 
public native TYPE_1 [ ] METHOD_1 ( ) ; 
abstract int METHOD_1 ( int status , int uid ) ; 
protected abstract TYPE_1 METHOD_1 ( ) ; 
private void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { try { VAR_2 . METHOD_2 ( VAR_1 ) ; } catch ( TYPE_2 e ) { android.util.Log.w ( VAR_4 . TAG , STRING_1 ) ; } } 
public static void METHOD_1 ( TYPE_1 device , int VAR_1 ) { try { device . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; } catch ( java.lang.Exception e ) { } } 
public static long METHOD_1 ( ) { int VAR_1 = 10 ; long VAR_2 = 3 ; return VAR_1 | VAR_2 ; } 
public TYPE_1 METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 = METHOD_3 ( ) ; return VAR_1 ; } return null ; } 
public void METHOD_1 ( java.lang.StringBuilder sb ) { sb.append ( STRING_1 ) ; sb.append ( VAR_1 ) ; sb.append ( STRING_2 ) ; } 
private void METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( VAR_1 != ( VAR_3 ) ) { METHOD_2 ( VAR_1 ) ; } } 
protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } TYPE_1 . METHOD_2 ( ) ; } 
void METHOD_1 ( long VAR_1 , TYPE_1 ... VAR_2 ) { try { TYPE_2 . METHOD_2 ( VAR_1 ) ; for ( TYPE_1 VAR_3 : VAR_2 ) assertTrue ( VAR_3 . METHOD_3 ( ) ) ; } catch ( TYPE_3 fail ) { fail ( STRING_1 ) ; } } 
public int length ( ) { return count ; } 
public void METHOD_1 ( ) { TYPE_2 in = new TYPE_2 ( mRS , INPUTSIZE ) ; VAR_4 = in . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 16 ) ; } 
public void run ( ) { synchronized ( this ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } } 
public java.lang.String getMessage ( ) { return ( ( STRING_1 + ( VAR_1 . toString ( ) ) ) + STRING_2 ) + ( METHOD_1 ( ) . getMessage ( ) ) ; } 
static void METHOD_1 ( long VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( android.os.Message msg ) { switch ( VAR_1 ) { case 1 : VAR_2 . METHOD_2 ( VAR_3 , this ) ; break ; } } 
TYPE_1 get ( int key ) { TYPE_1 VAR_1 = VAR_2 . get ( key ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_1 ( ) ; } return VAR_1 ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ; VAR_1 . METHOD_4 ( VAR_3 , 0 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) { TYPE_3 . d ( STRING_1 , STRING_2 , VAR_1 , VAR_2 ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; call . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( call . METHOD_5 ( ) . METHOD_6 ( ) ) ) ; VAR_2 . METHOD_8 ( VAR_3 ) ; } 
protected byte [ ] METHOD_1 ( int VAR_1 ) { byte [ ] output = new byte [ VAR_1 ] ; TYPE_1 . METHOD_3 ( output ) ; return output ; } 
public TYPE_1 < TYPE_2 < TYPE_3 , TYPE_4 > > METHOD_1 ( TYPE_2 < TYPE_3 , TYPE_4 > VAR_1 ) { return TYPE_5 . METHOD_2 ( ) . METHOD_3 ( ( ) - > METHOD_4 ( VAR_1 ) ) ; } 
final void METHOD_1 ( int offset , char value ) { VAR_1 . METHOD_1 ( ( offset + ( address ) ) , value ) ; } 
public static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 . METHOD_1 ( VAR_1 , TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) , TYPE_2 . METHOD_2 ( VAR_2 . METHOD_4 ( ) ) , VAR_2 . METHOD_5 ( ) ) ; } 
public java.util.Set < TYPE_1 < TYPE_2 , TYPE_3 > > METHOD_1 ( ) { java.util.Set < TYPE_1 < TYPE_2 , TYPE_3 > > VAR_1 = VAR_2 ; return VAR_1 != null ? VAR_1 : ( VAR_2 = new TYPE_4 ( this ) ) ; } 
long METHOD_1 ( long VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
public int METHOD_1 ( ) throws android.os.RemoteException { synchronized ( VAR_1 ) { try { return this . METHOD_1 ( ) ; } catch ( java.lang.Exception e ) { throw new android.os.RemoteException ( e.getMessage ( ) ) ; } } } 
public TYPE_1 METHOD_1 ( boolean value ) { this . VAR_1 = value ; return this ; } 
void METHOD_1 ( byte [ ] address , int VAR_1 , int VAR_2 , int VAR_3 ) ; 
public void run ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( this , VAR_2 , VAR_3 , status ) ; } } 
public native long METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 , VAR_14 ) ; } 
final void METHOD_1 ( int i , int x ) { METHOD_2 ( METHOD_3 ( i ) , x ) ; } 
public static synchronized TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( TYPE_1 . TAG , VAR_1 ) ; } 
public final float METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , long VAR_3 ) ; 
public static int METHOD_1 ( java.lang.String number , int VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_1 ( number , VAR_1 , TYPE_2 . METHOD_2 ( VAR_2 ) ) ; } 
public int METHOD_1 ( long VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; } 
public java.lang.String getName ( ) { return name ; } 
public native void set ( java.lang.Object obj , java.lang.Object value ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public boolean METHOD_1 ( ) { return false ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( address , ( ( int ) ( size ) ) , ( ( TYPE_3 . METHOD_2 ( ) ) != ( VAR_1 ) ) ) ; } 
public static void METHOD_1 ( short [ ] a ) { TYPE_2 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) , null , 0 , 0 ) ; } 
public void METHOD_1 ( ) { log ( ( STRING_1 + ( VAR_3 ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } 
public void METHOD_1 ( android.os.Message msg ) { super . METHOD_1 ( msg ) ; if ( ( VAR_1 ) == 0 ) { VAR_2 . METHOD_2 ( VAR_2 . METHOD_3 ( 1 ) ) ; } } 
public void run ( TYPE_1 session ) throws java.lang.Exception { TYPE_2 VAR_1 = new TYPE_3 ( VAR_3 ) ; VAR_1 . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { return METHOD_1 ( false ) ; } 
public void METHOD_1 ( TYPE_1 location ) { if ( ! ( VAR_2 ) ) { synchronized ( VAR_1 ) { VAR_2 = true ; VAR_1 . METHOD_2 ( ) ; } } } 
public TYPE_1 METHOD_1 ( byte [ ] VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
TYPE_1 < java.io.File > METHOD_1 ( ) ; 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; if ( VAR_1 != null ) { METHOD_2 ( ) ; } return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( VAR_1 ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( TYPE_1 e ) { VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( true ) ; if ( ( VAR_1 ) != null ) { super . METHOD_1 ( e ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_1 != null ) { VAR_3 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 ) ) ; METHOD_4 ( ) ; } } 
TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { return METHOD_1 ( VAR_1 , VAR_2 , null ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; this . METHOD_4 ( false ) ; } 
public java.lang.String toString ( ) { return METHOD_1 ( null ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( this ) ; } return VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { for ( TYPE_2 VAR_3 : VAR_2 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( METHOD_4 ( VAR_3 ) ) ; } return VAR_1 ; } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( ) ) ; METHOD_4 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
private void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { assert VAR_1 != null ; VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return null ; } try { return METHOD_3 ( ) . METHOD_1 ( ) ; } catch ( android.os.RemoteException e ) { throw e . METHOD_4 ( ) ; } } 
protected boolean METHOD_1 ( com.android.jack.ir.ast.JMethod method ) { synchronized ( method ) { TYPE_1 VAR_1 = method . METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { return VAR_1 . METHOD_3 ( ) ; } } return false ; } 
private void METHOD_1 ( java.lang.Integer VAR_1 ) { VAR_2 = VAR_1 ; } 
public void METHOD_1 ( TYPE_1 e ) { super . METHOD_1 ( e ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 method ) { METHOD_2 ( VAR_2 , VAR_1 , method , false ) ; } 
private int METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = 0 ; if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { VAR_2 |= VAR_3 ; } if ( VAR_1 . METHOD_3 ( ) ) { VAR_2 |= VAR_4 ; } return VAR_2 ; } 
boolean METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; } 
public abstract int METHOD_1 ( ) ; 
private void METHOD_1 ( int expected , byte [ ] VAR_1 , byte [ ] VAR_2 ) { TYPE_1 . METHOD_2 ( expected , TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 , null , 0 ) ) ; } 
public void METHOD_1 ( int state , int VAR_1 ) { try { callback . METHOD_1 ( state , VAR_1 ) ; } catch ( android.os.RemoteException e ) { METHOD_3 ( uid , VAR_2 ) ; } } 
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device , byte VAR_1 , byte VAR_2 , int VAR_3 ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( device , VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_4 ) != null ) { java.lang.Object [ ] VAR_3 = VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; } } 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; } assert ( VAR_1 ) != null ; return VAR_1 ; } 
private static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; return VAR_1 ; } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; if ( ( TYPE_1 . METHOD_4 ( ) ) != null ) { TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) ; } } 
protected int METHOD_1 ( ) { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } return TYPE_2 . METHOD_2 ( this . key . METHOD_3 ( ) ) ; } 
protected abstract TYPE_1 METHOD_1 ( java.io.File VAR_1 ) throws java.io.IOException ; 
public static long METHOD_1 ( long arg ) { return ( ( 10 * arg ) * 11 ) * 12 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int id , TYPE_3 VAR_3 , int flags ) { synchronized ( this ) { VAR_5 . METHOD_2 ( VAR_1 , VAR_2 , id , VAR_3 , flags ) ; } } 
public synchronized java.lang.String METHOD_1 ( TYPE_1 uri ) { return METHOD_1 ( uri . toString ( ) ) ; } 
private boolean METHOD_1 ( int VAR_1 ) { if ( VAR_1 <= 0 ) { return METHOD_1 ( ) ; } return METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; } 
public void METHOD_1 ( float VAR_1 , float VAR_2 , float VAR_3 , float VAR_4 , int VAR_5 , int VAR_6 ) { if ( ( VAR_7 ) != null ) VAR_7 . METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , VAR_6 ) ; } 
private void METHOD_1 ( TYPE_1 node ) { mContext . METHOD_2 ( VAR_1 , node , mContext . METHOD_3 ( node ) , ( STRING_1 + STRING_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 request , TYPE_2 VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 ) throws android.os.RemoteException { callback . METHOD_1 ( request , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } 
public static native void METHOD_1 ( long VAR_1 , long VAR_2 , byte [ ] n , byte [ ] h ) ; 
public boolean METHOD_1 ( ) { VAR_1 . METHOD_2 ( false , true ) ; return true ; } 
public TYPE_1 METHOD_1 ( TYPE_2 ... VAR_1 ) throws java.io.IOException { return METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) , false ) ; } 
public void METHOD_1 ( int VAR_1 ) { try { VAR_2 . METHOD_1 ( VAR_1 ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public static void METHOD_1 ( TYPE_1 listener ) { synchronized ( VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( listener ) ) ) { VAR_2 . METHOD_3 ( listener ) ; } } } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 4 , INT_1 , false ) ; args.out = TYPE_3 . METHOD_3 ( args . inV , t ) ; } 
public void METHOD_1 ( ) { VAR_1 = true ; TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( ) ; TYPE_2 w = METHOD_3 ( ) ; if ( w != null ) { w . METHOD_1 ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; } } 
public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 } ) ; fail ( ) ; } catch ( TYPE_2 expected ) { } } 
private static TYPE_1 METHOD_1 ( java.lang.String id , TYPE_2 locale ) { java.lang.String VAR_1 = TYPE_3 . METHOD_2 ( id ) ; return new TYPE_1 ( TYPE_4 . METHOD_3 ( locale ) , VAR_1 ) ; } 
native void METHOD_1 ( long VAR_1 , long id , short [ ] d ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; VAR_2 = new TYPE_1 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( int netId ) { return null ; } 
boolean METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { return true ; } long VAR_2 = TYPE_1 . METHOD_2 ( ) ; return ( VAR_2 - ( VAR_1 ) ) > ( VAR_3 ) ; } 
public static boolean METHOD_1 ( int VAR_1 ) { return ( VAR_1 >= 0 ) && ( VAR_1 <= ( VAR_3 ) ) ; } 
private java.lang.String METHOD_1 ( ) { return ( ( getName ( ) ) + STRING_1 ) + ( METHOD_2 ( ) ) ; } 
private void METHOD_1 ( ) { if ( ( VAR_2 ) == null ) { return ; } if ( ( VAR_1 ) == 0 ) { METHOD_2 ( VAR_2 ) ; VAR_2 = null ; } } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int w , int h , int VAR_6 , float [ ] d , int VAR_7 ) ; 
public static void METHOD_1 ( ) { VAR_1 class . METHOD_2 ( ) . METHOD_3 ( true ) ; } 
java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( null ) ; } 
public void METHOD_2 ( ) { } 
public TYPE_1 METHOD_1 ( ) throws android.os.RemoteException { synchronized ( VAR_1 ) { return this . METHOD_1 ( ) ; } } 
protected abstract boolean METHOD_1 ( TYPE_1 item ) ; 
private static TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 ) ; return new TYPE_3 ( new TYPE_4 ( VAR_4 . METHOD_3 ( ) , VAR_2 ) , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_3 ( false , null ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 e ) { } } 
private static TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_2 VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) ; return new TYPE_3 ( new TYPE_4 ( VAR_3 . METHOD_3 ( ) , null ) , VAR_2 ) ; } 
public java.lang.String METHOD_1 ( ) { return getName ( ) ; } 
public void METHOD_1 ( int VAR_1 ) { } 
public static void METHOD_1 ( TYPE_1 args ) { VAR_1 = 4 ; VAR_2 = 16 ; args.out = ( ( float ) ( TYPE_2 . METHOD_2 ( args . in ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; } 
private void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; TYPE_3 . METHOD_4 ( METHOD_5 ( ) , VAR_2 ) ; METHOD_6 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( mRS ) ; VAR_1 . METHOD_2 ( 11 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
void METHOD_1 ( ) { TYPE_1 . d ( STRING_1 , STRING_2 ) ; METHOD_2 ( true ) ; METHOD_4 ( ) ; } 
private static < TYPE_1 extends TYPE_2 < TYPE_1 > > TYPE_1 [ ] METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 ) { return VAR_1 . METHOD_2 ( ) ; } 
public void run ( ) { METHOD_1 ( VAR_1 , VAR_2 , true ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; VAR_2 = false ; if ( ( VAR_3 ) != null ) VAR_3 . METHOD_3 ( ) ; } 
public boolean METHOD_1 ( ) { synchronized ( this ) { return TYPE_1 . METHOD_2 ( address ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_3 ( VAR_3 , null , false ) ; org.junit.Assert.assertEquals ( 2 , VAR_1 . size ( ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < java.lang.String > VAR_4 ) throws TYPE_3 { } 
public void METHOD_1 ( ) { address = 0 ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { return TYPE_2 . METHOD_1 ( null , VAR_1 , VAR_2 ) ; } 
protected void METHOD_3 ( byte b ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( b ) ; } 
public void METHOD_1 ( int VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } 
synchronized double METHOD_1 ( long id , int VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , id , VAR_1 ) ; } 
public java.lang.String METHOD_1 ( java.lang.String input ) { return input ; } 
synchronized float METHOD_1 ( long id , int VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , id , VAR_1 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { log . METHOD_1 ( null , VAR_1 , null ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int userId , java.lang.String VAR_2 , android.os.Bundle VAR_3 , long VAR_4 ) { METHOD_2 ( VAR_1 , userId , VAR_2 , VAR_3 , VAR_4 , true ) ; } 
private TYPE_1 METHOD_1 ( long a , byte x ) { TYPE_2 . METHOD_2 ( a , x ) ; return this ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , new TYPE_1 ( ) ) ; } 
public int METHOD_1 ( ) { return id ; } 
public void METHOD_1 ( ) { METHOD_2 ( INT_1 , 3 ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; VAR_2 = TYPE_1 . METHOD_2 ( context , VAR_1 , VAR_3 ) ; } 
public static void assertEquals ( long expected , long result ) { if ( expected != result ) { throw new TYPE_1 ( ( ( ( STRING_1 + expected ) + STRING_2 ) + result ) ) ; } } 
public synchronized void METHOD_1 ( ) { if ( METHOD_2 ( VAR_1 ) ) { METHOD_4 ( ) ; } } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( ) ; try { c . METHOD_2 ( null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; assertEquals ( VAR_2 , VAR_1 . METHOD_4 ( ) ) ; } 
public void log ( java.lang.String log ) { if ( METHOD_1 ( log ) ) { VAR_1 . info ( STRING_1 , log ) ; } } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( true , STRING_1 , true ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 e ) { } } 
private int METHOD_1 ( int VAR_1 , int VAR_2 ) { return ( METHOD_2 ( ( VAR_1 + VAR_2 ) ) ) - ( METHOD_2 ( VAR_1 ) ) ; } 
private native boolean METHOD_1 ( byte [ ] address , byte VAR_1 ) ; 
private static java.lang.IllegalArgumentException METHOD_1 ( java.lang.String s ) { return new java.lang.IllegalArgumentException ( ( ( ( STRING_1 + STRING_2 ) + s ) + STRING_3 ) ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 ) throws android.os.RemoteException { METHOD_2 ( ) ; return METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_1 , VAR_2 , null ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , VAR_1 class . getName ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( METHOD_4 ( VAR_2 ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_1 != null ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( ) ; } } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; } 
public abstract void METHOD_1 ( TYPE_1 VAR_1 ) ; 
public static long METHOD_1 ( ) { int VAR_1 = 10 ; long VAR_2 = 3 ; return VAR_1 ^ VAR_2 ; } 
public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 ; do { VAR_1 = new TYPE_2 ( ) ; } while ( ! ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ) ; VAR_1 . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 test = new TYPE_1 ( null , mContext ) ; test . run ( ) ; TYPE_2 . assertTrue ( ( ( test . METHOD_2 ( ) ) == ( VAR_2 ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . getName ( ) , new TYPE_2 ( VAR_3 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException { METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; } 
public java.io.File call ( ) { return VAR_2 . METHOD_2 ( ) ; } 
private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.Throwable e ) { TYPE_2 . log ( e , VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) ; return new TYPE_3 ( VAR_3 , VAR_4 , VAR_1 , e ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
private synchronized void METHOD_1 ( java.lang.String packageName ) { TYPE_1 info = new TYPE_1 ( null , VAR_1 , VAR_2 , METHOD_2 ( null ) , METHOD_3 ( packageName ) , packageName , METHOD_4 ( packageName ) ) ; METHOD_6 ( info ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( METHOD_2 ( ) , TYPE_3 . get ( VAR_2 ) . booleanValue ( ) , VAR_1 ) ; } 
private void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) { METHOD_4 ( ) ; } } } 
protected void METHOD_1 ( TYPE_1 response ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( response ) ; } } 
public static TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( VAR_1 , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = new TYPE_3 ( true , false , VAR_4 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_4 ( this ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , 0 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 = false ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int userId , java.lang.String VAR_2 ) { synchronized ( VAR_3 ) { return METHOD_2 ( VAR_1 , userId , VAR_2 , ( - 1 ) , true ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( STRING_1 ) . METHOD_2 ( null , null ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public void METHOD_1 ( ) { log ( ( STRING_1 + ( VAR_3 ) ) ) ; METHOD_2 ( ) ; } 
public static void METHOD_1 ( long [ ] a ) { TYPE_1 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) , null , 0 , 0 ) ; } 
public boolean METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; return true ; } 
protected native java.lang.Object METHOD_1 ( int VAR_1 ) throws TYPE_1 ; 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 msg = new TYPE_1 ( ) ; assertNotNull ( msg ) ; } 
public void run ( ) { try { METHOD_2 ( ) ; } catch ( java.lang.Exception e ) { throw new TYPE_1 ( e.getMessage ( ) ) ; } } 
public java.lang.String METHOD_1 ( ) { return VAR_1 class . METHOD_1 ( ) ; } 
private static native boolean METHOD_1 ( long VAR_1 , int [ ] VAR_2 ) ; 
static final TYPE_1 METHOD_1 ( TYPE_2 locale ) { return TYPE_1 . METHOD_3 ( locale ) ; } 
boolean METHOD_1 ( ) { return ( size ) != ( VAR_1 . length ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_3 ) ; if ( VAR_2 != null ) { METHOD_1 ( VAR_2 , VAR_1 ) ; } } 
native void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 , long VAR_4 ) ; 
public void METHOD_1 ( int VAR_1 , int VAR_2 , int value , int status ) { VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) , VAR_1 , VAR_2 , value ) ; } 
public final byte get ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return get ( METHOD_1 ( METHOD_2 ( ) ) ) ; } 
public int METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } 
public static byte [ ] METHOD_1 ( byte [ ] VAR_1 , int VAR_2 ) { if ( VAR_2 < 0 ) { throw new TYPE_1 ( java.lang.Integer . toString ( VAR_2 ) ) ; } return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = TYPE_2 . METHOD_2 ( VAR_1 class ) ; org.junit.Assert.assertEquals ( 0 , result . METHOD_3 ( ) ) ; org.junit.Assert.assertEquals ( 5 , result . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { android.util.Log.d ( VAR_1 . TAG , STRING_1 ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_4 ( ) ; METHOD_5 ( false ) ; } } 
public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( ) ; } 
protected boolean METHOD_1 ( ) { return false ; } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( 5 ) ; c . METHOD_2 ( STRING_1 , STRING_2 ) ; try { c . METHOD_3 ( null , STRING_3 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public int METHOD_1 ( java.lang.String VAR_1 , int uid , boolean VAR_2 , java.lang.String VAR_3 ) { return METHOD_1 ( VAR_1 , uid , VAR_2 , STRING_1 , VAR_3 , false , false , null ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String project ) { TYPE_2 app = new TYPE_3 ( ) ; name = project ; java.io.File VAR_1 = new java.io.File ( VAR_2 , project ) ; TYPE_4 . METHOD_2 ( app , VAR_1 ) ; return METHOD_3 ( app ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 node , java.lang.String VAR_1 ) { java.lang.String VAR_2 = ( TYPE_2 . equals ( VAR_1 ) ) ? VAR_3 : VAR_4 ; return TYPE_3 . METHOD_1 ( node , VAR_1 , VAR_2 , true ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 element ) { return element . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
final int METHOD_1 ( int i ) { return METHOD_2 ( METHOD_3 ( i ) ) ; } 
private native void METHOD_1 ( long VAR_1 , long VAR_3 ) ; 
private final TYPE_1 METHOD_1 ( TYPE_1 r , int VAR_1 ) { final int index = METHOD_2 ( r ) ; if ( index < 0 ) { return null ; } return METHOD_1 ( r , index , VAR_1 ) ; } 
public long METHOD_1 ( TYPE_1 [ ] VAR_1 ) throws java.io.IOException { return VAR_2 . METHOD_1 ( VAR_1 ) ; } 
abstract long METHOD_1 ( int index ) ; 
public long METHOD_1 ( long VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; return VAR_1 ; } 
public void METHOD_1 ( java.lang.String id ) throws java.lang.Exception { for ( TYPE_1 a : VAR_1 ) { a . METHOD_2 ( id , null ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( INT_1 , INT_2 , INT_3 , VAR_1 , true , false ) ; METHOD_3 ( false ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 . getName ( ) ) ; } 
abstract java.util.Set < TYPE_1 < TYPE_2 , TYPE_3 > > METHOD_1 ( ) ; 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { synchronized ( VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; } } } return VAR_2 ; } 
public void METHOD_1 ( java.util.List < java.lang.String > args ) throws TYPE_1 { METHOD_1 ( VAR_1 , null , args ) ; } 
public double get ( int index ) { return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; } 
private void METHOD_1 ( int VAR_1 , int VAR_2 ) { int VAR_3 = VAR_1 | ( VAR_2 & INT_1 ) ; VAR_4 . log ( VAR_5 , new TYPE_1 ( VAR_3 ) ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 . equals ( VAR_2 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 , STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_1 . METHOD_4 ( VAR_5 , STRING_1 , STRING_2 , STRING_3 , true ) ; METHOD_5 ( ) ; } 
public static int METHOD_1 ( TYPE_1 VAR_1 , int offset ) { return ( VAR_1 . METHOD_2 ( offset ) ) & INT_1 ; } 
public static long METHOD_1 ( long arg ) { return 0 - ( - arg ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
final void METHOD_1 ( int pos , float [ ] VAR_1 , int VAR_2 , int length ) { TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) ; } 
public java.lang.String toString ( ) { return ( super . toString ( ) ) + ( name . toString ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = 8 ; VAR_9 = VAR_10 ; return true ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( true ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 , true ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int flags ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; } 
public native double METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public void METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_2 ) == null ) return ; if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } else { VAR_2 . METHOD_3 ( VAR_3 ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 location , java.lang.String VAR_2 , java.lang.Object data ) { if ( VAR_3 . METHOD_2 ( this , VAR_1 , VAR_4 ) ) { return ; } super . METHOD_1 ( VAR_1 , location , VAR_2 , data ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 , ( ( TYPE_1 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) , VAR_2 , 1 ) ) != 0 ) ) ; } 
public final void METHOD_1 ( boolean value ) { VAR_1 = value ; } 
public void METHOD_1 ( int type ) ; 
protected final void METHOD_1 ( int n , java.lang.Object obj ) { METHOD_2 ( ) ; VAR_1 [ n ] = obj ; } 
final native java.lang.String METHOD_1 ( ) ; 
private void METHOD_1 ( int VAR_1 ) { TYPE_1 listener = VAR_2 . get ( VAR_1 ) ; if ( listener != null ) { listener . METHOD_2 ( VAR_1 , METHOD_3 ( VAR_1 ) ) ; } } 
static boolean METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return true ; } return VAR_4 ; } 
static void METHOD_1 ( long VAR_1 ) { TYPE_1 d = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( d == null ) { return ; } TYPE_1 . METHOD_3 ( VAR_3 ) ; } 
void METHOD_1 ( boolean VAR_1 ) { synchronized ( VAR_2 ) { this . VAR_1 = VAR_1 ; } } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { if ( ( VAR_1 ) == null ) { return ; } METHOD_2 ( context , element , element ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null , false ) ; } 
public void METHOD_2 ( ) { super . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; } 
public int METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { return VAR_1 ; } return VAR_2 . METHOD_2 ( ) . METHOD_1 ( ) ; } 
protected byte [ ] METHOD_1 ( ) throws TYPE_1 { return new byte [ 10 ] ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { if ( ( VAR_2 ) == null ) { return false ; } if ( VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_3 ) ; } else { return VAR_2 . METHOD_2 ( null ) ; } } 
private static int METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : return VAR_3 ; case VAR_4 : return VAR_5 ; case VAR_6 : return VAR_7 ; default : throw new TYPE_1 ( ( STRING_1 + VAR_1 ) ) ; } } 
public void METHOD_1 ( TYPE_1 event ) { boolean VAR_1 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; } 
public static void METHOD_1 ( TYPE_1 context ) { TYPE_2 . METHOD_2 ( context ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; try { VAR_1 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } catch ( java.lang.IllegalArgumentException VAR_2 ) { } } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String [ ] args , int VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_1 , args , VAR_2 , null ) ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int w , int h , int [ ] d , int VAR_6 ) ; 
protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; assertNotNull ( VAR_1 ) ; assertNotNull ( VAR_2 ) ; METHOD_4 ( VAR_3 , false ) ; METHOD_5 ( VAR_4 ) ; } 
public void run ( ) { VAR_1 . METHOD_4 ( ) ; } 
public int METHOD_1 ( ) { final TYPE_1 VAR_1 = mContext . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 , STRING_1 ) , null , null , null ) ; VAR_1 . METHOD_5 ( ) ; return VAR_1 . METHOD_6 ( 0 ) ; } 
public static int METHOD_1 ( ) { long VAR_1 = INT_1 ; return ( ( int ) ( VAR_1 ) ) ; } 
public java.lang.Object METHOD_1 ( ) { try { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ; METHOD_2 ( this , VAR_1 ) ; return VAR_1 ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( e ) ; } } 
private boolean METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) . length ( ) ) == 8 ) { VAR_2 = VAR_1 . METHOD_2 ( ) . toString ( ) ; return true ; } return false ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 d = TYPE_3 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ; TYPE_4 r = new TYPE_4 ( d , VAR_2 , 0 ) ; VAR_3 . METHOD_4 ( d . METHOD_5 ( ) , r ) ; } 
private TYPE_1 METHOD_1 ( ) { return new TYPE_3 ( ) { public void METHOD_2 ( TYPE_4 VAR_1 ) { TYPE_5 i = VAR_1 . METHOD_3 ( ) ; i . METHOD_4 ( ) ; } } ; } 
public void METHOD_1 ( ) { assertTrue ( VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) ; } 
public int METHOD_1 ( boolean VAR_1 ) throws android.os.RemoteException { return this . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { VAR_1 = true ; super . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 location , java.lang.String VAR_2 ) { return false ; } 
private java.util.List < java.lang.Class < ? extends TYPE_1 > > METHOD_1 ( java.lang.String packageName ) { TYPE_2 source = TYPE_2 . METHOD_2 ( VAR_1 ) ; return METHOD_4 ( source . METHOD_5 ( packageName ) ) ; } 
static boolean METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return true ; } return VAR_2 . METHOD_3 ( ) ; } 
public void METHOD_3 ( int VAR_1 , int count , float [ ] d ) { METHOD_3 ( VAR_1 , count , ( ( java.lang.Object ) ( d ) ) , Element.DataType.FLOAT_32 , d . length ) ; } 
public void METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { METHOD_2 ( VAR_1 , VAR_2 , null , null , false ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_2 ( TYPE_1 [ ] VAR_1 ) { return TYPE_3 . in ( VAR_1 ) ; } 
static void METHOD_1 ( long VAR_1 , float x , float y ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return ; } VAR_2 . METHOD_3 ( x , y ) ; } 
native long METHOD_1 ( long VAR_1 , long VAR_2 , int VAR_3 , int VAR_4 ) ; 
public void METHOD_1 ( java.lang.String packageName ) { VAR_1 . METHOD_1 ( packageName ) ; } 
void METHOD_1 ( int state ) { TYPE_1 . METHOD_2 ( ( STRING_1 + ( TYPE_2 . METHOD_3 ( state ) ) ) ) ; VAR_1 = state ; } 
synchronized long METHOD_1 ( long type , int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; } 
private static < TYPE_1 > void METHOD_1 ( int expected , TYPE_1 [ ] VAR_1 ) { int length = VAR_1 . length ; org.junit.Assert.assertEquals ( java.lang.String.format ( STRING_1 , expected , length , TYPE_2 . toString ( VAR_1 ) ) , expected , length ) ; } 
public boolean METHOD_1 ( TYPE_1 x ) { TYPE_1 VAR_1 = new TYPE_1 ( x . METHOD_2 ( ) , x . METHOD_3 ( ) ) ; VAR_2 = VAR_1 ; return false ; } 
private boolean METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( VAR_1 ) ; } 
public com.android.jack.ir.ast.JMethod METHOD_1 ( ) { assert ( VAR_1 ) != null ; return VAR_1 ; } 
public static void METHOD_1 ( TYPE_2 VAR_2 ) throws java.lang.Exception { synchronized ( VAR_3 ) { if ( ( VAR_4 ) != null ) { throw new java.lang.Exception ( STRING_1 ) ; } VAR_4 = VAR_2 ; } } 
public void METHOD_1 ( android.os.Bundle VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = new TYPE_1 ( this ) ; VAR_2 . METHOD_1 ( METHOD_2 ( ) , VAR_1 ) ; } 
public abstract TYPE_1 [ ] [ ] METHOD_1 ( ) ; 
public static native int METHOD_1 ( long VAR_1 , byte [ ] VAR_2 , int offset , int length , long key ) ; 
public void METHOD_1 ( int VAR_1 ) throws android.os.RemoteException { synchronized ( VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_1 ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_2 [ VAR_1 . METHOD_2 ( ) ] ; } 
public int METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { return java.lang.String . METHOD_1 ( value , 0 , count , VAR_1 , VAR_2 ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , boolean append ) throws TYPE_3 { return VAR_2 . METHOD_1 ( VAR_1 , append ) ; } 
void METHOD_1 ( TYPE_1 t ) throws java.io.IOException , TYPE_2 ; 
public static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { TYPE_4 < TYPE_2 > result = new TYPE_4 < TYPE_2 > ( ) ; for ( TYPE_5 VAR_2 : VAR_3 ) { result . METHOD_2 ( VAR_4 ) ; } return result ; } 
void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 obj ) { if ( obj != null ) { METHOD_2 ( ( ( int ) ( obj . METHOD_3 ( null ) ) ) ) ; } else { METHOD_2 ( 0 ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { METHOD_2 ( null ) ; return ; } METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( this ) ; } 
public int METHOD_1 ( ) { return this . METHOD_1 ( ) ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int count , long [ ] d , int VAR_4 ) ; 
private int METHOD_1 ( ) { if ( android.util.Log . METHOD_2 ( VAR_1 , VAR_2 ) ) { android.util.Log.v ( VAR_3 . TAG , STRING_1 ) ; } return TYPE_1 . METHOD_3 ( VAR_5 . METHOD_4 ( ) , VAR_6 ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) . METHOD_3 ( this ) ; METHOD_2 ( VAR_3 ) . METHOD_3 ( this ) ; } 
public abstract void METHOD_1 ( int state ) ; 
boolean METHOD_1 ( TYPE_1 VAR_1 ) { return false ; } 
private static boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( VAR_1 . METHOD_2 ( STRING_1 ) ) || ( VAR_1 . METHOD_2 ( STRING_2 ) ) ; } 
public void METHOD_1 ( ) { synchronized ( this ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) { try { VAR_2 . METHOD_2 ( ) ; } catch ( java.io.IOException e ) { } VAR_2 = null ; } } } 
public void METHOD_1 ( java.lang.String uid ) { this . uid = uid ; } 
public void METHOD_1 ( ) { } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
public static void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( STRING_1 , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( VAR_2 ) ; return new TYPE_1 ( VAR_3 , VAR_1 , VAR_4 ) ; } 
static void METHOD_1 ( long VAR_1 , int src , float VAR_2 , float VAR_3 ) { TYPE_1 . METHOD_2 ( VAR_1 , src , TYPE_2 . METHOD_3 ( VAR_2 , VAR_3 ) ) ; } 
protected boolean METHOD_1 ( ) { return ( ( VAR_1 ) >= 0 ) && ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; } 
public static native java.lang.String [ ] METHOD_1 ( int VAR_1 , java.lang.Class < ? > VAR_2 , java.lang.Object VAR_3 , int VAR_4 , int VAR_5 , java.lang.Object VAR_6 ) ; 
public void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; } 
private void METHOD_1 ( ) { android.content.Intent VAR_1 = METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 = VAR_1 . METHOD_3 ( VAR_5 ) ; if ( TYPE_1 . METHOD_4 ( VAR_4 ) ) { METHOD_5 ( ) ; } } 
java.io.File [ ] METHOD_1 ( ) ; 
public void METHOD_1 ( TYPE_1 context , android.content.Intent VAR_1 ) { METHOD_2 ( ) ; } 
private native void METHOD_1 ( boolean start ) ; 
public TYPE_1 METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_3 . METHOD_2 ( mContext . METHOD_3 ( ) , VAR_2 ) ; return METHOD_4 ( VAR_1 ) ; } 
public final void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) throw new TYPE_1 ( ) ; this . METHOD_1 ( VAR_1 . key ) ; VAR_1 = null ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 key ) { return new TYPE_1 ( VAR_1 . get ( ) , VAR_2 . get ( ) , VAR_3 . get ( ) , VAR_4 . get ( ) ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( METHOD_2 ( ) , TYPE_3 . get ( VAR_2 ) . booleanValue ( ) ) ; } 
public abstract void METHOD_1 ( boolean VAR_1 ) ; 
protected TYPE_1 METHOD_1 ( TYPE_2 node ) { return new TYPE_1 ( ) ; } 
public void METHOD_1 ( ) { try { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } } catch ( java.io.IOException e ) { android.util.Log.e ( VAR_2 . TAG , STRING_1 , e ) ; } } 
public boolean METHOD_1 ( TYPE_1 project ) { TYPE_2 state = TYPE_3 . METHOD_2 ( project ) ; if ( state != null ) { return state . METHOD_3 ( ) ; } return false ; } 
protected native void METHOD_1 ( int VAR_1 ) throws java.io.IOException ; 
public native byte METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) == ( - 1 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 context , TYPE_3 callback ) throws TYPE_5 { return TYPE_1 . METHOD_1 ( context , callback , TYPE_6 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) { assertFalse ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_1 ) ) ; assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_2 ) ) ; } 
public void run ( final TYPE_1 config , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws TYPE_4 { TYPE_5 VAR_3 = new TYPE_5 ( config , VAR_4 ) ; VAR_1 . METHOD_1 ( VAR_3 ) ; VAR_3 . run ( ) ; } 
public static java.lang.String METHOD_1 ( ) { assert ( VAR_2 ) != null : STRING_1 ; return TYPE_2 . METHOD_2 ( VAR_3 ) ; } 
public void METHOD_1 ( char VAR_1 ) { try { VAR_2 . METHOD_1 ( VAR_3 , VAR_1 , null ) ; } catch ( android.os.RemoteException e ) { } } 
private boolean METHOD_1 ( ) { TYPE_1 b = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; return ( b != null ) && ( b . METHOD_5 ( VAR_2 ) ) ; } 
public static final void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( STRING_1 , null ) ; try { c . METHOD_2 ( ( ( TYPE_2 ) ( null ) ) ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Throwable { TYPE_1 . METHOD_2 ( false ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; TYPE_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( VAR_1 , 1 ) ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { Main . METHOD_2 ( ) ; Main . METHOD_5 ( ) ; Main . METHOD_3 ( ) ; Main . METHOD_4 ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_3 , VAR_4 , VAR_5 , null ) ; if ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_6 ) ) { METHOD_4 ( false ) ; } } 
public void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { METHOD_2 ( false ) ; append ( STRING_1 ) ; append ( VAR_1 ) ; append ( STRING_2 ) ; } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 2 , INT_1 , false ) ; args.out = TYPE_3 . METHOD_3 ( args . inV , t ) ; } 
public float get ( int index ) { return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( METHOD_4 ( ) . getName ( ) ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return VAR_1 . METHOD_1 ( VAR_2 ) ; } 
public java.lang.String [ ] METHOD_1 ( java.lang.String VAR_1 , int uid ) { try { return VAR_2 . METHOD_1 ( VAR_1 , uid ) ; } catch ( android.os.RemoteException e ) { android.util.Log.w ( VAR_3 . TAG , STRING_1 , e ) ; return null ; } } 
public final short METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.Object in , TYPE_3 VAR_2 ) { return VAR_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 , in ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , long value ) { METHOD_1 ( VAR_1 , new TYPE_2 ( value ) ) ; } 
public boolean METHOD_1 ( TYPE_1 session ) { return METHOD_1 ( ( ( TYPE_2 ) ( session ) ) ) ; } 
public boolean METHOD_1 ( java.lang.String packageName ) { mContext . METHOD_2 ( VAR_1 , VAR_2 . TAG ) ; return false ; } 
public void METHOD_1 ( ) { } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , getName ( ) , METHOD_3 ( ) ) ; } return VAR_1 ; } 
public final void METHOD_1 ( TYPE_1 c ) { super . METHOD_1 ( c ) ; } 
private int METHOD_1 ( java.io.File VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 . METHOD_4 ( ) ) == null ) { VAR_2 . METHOD_3 ( ) ; } return VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 , context ) ; return true ; } 
public boolean METHOD_1 ( ) { synchronized ( this ) { VAR_1 = TYPE_1 . METHOD_2 ( address , VAR_2 ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( VAR_2 ) ; assertTrue ( ( ! ( VAR_1 . METHOD_3 ( VAR_2 ) ) ) ) ; assertEquals ( 1 , VAR_1 . size ( ) ) ; } 
public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 , null } ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
protected TYPE_1 [ ] METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_4 ) { return new TYPE_1 [ ] { new TYPE_1 ( this , VAR_1 , VAR_4 ) } ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { Main . METHOD_3 ( new TYPE_2 ( ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; return VAR_3 ; } 
public void METHOD_1 ( java.lang.String ... VAR_1 ) { METHOD_1 ( VAR_2 < java.lang.String > METHOD_2 ( ) , false , false , VAR_1 ) ; } 
public void METHOD_1 ( ) throws android.os.RemoteException { METHOD_2 ( VAR_1 , VAR_2 ) ; org.junit.Assert.assertEquals ( VAR_1 , VAR_3 . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ) ; org.junit.Assert.assertEquals ( VAR_2 , VAR_3 . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String s ) { return VAR_1 . METHOD_1 ( s ) ; } 
public abstract TYPE_1 METHOD_1 ( boolean VAR_1 ) ; 
public void METHOD_1 ( ) { android.util.Log.d ( VAR_1 . TAG , STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_3 , null ) ; } 
public java.lang.String toString ( ) { return java.lang.String.format ( ( ( STRING_1 + ( ( VAR_1 ) * 2 ) ) + STRING_2 ) , new TYPE_1 ( VAR_2 ) ) ; } 
public boolean METHOD_1 ( ) { return false ; } 
public abstract void METHOD_1 ( int status ) ; 
public void METHOD_1 ( int VAR_1 ) { TYPE_1 . i ( this , STRING_1 , VAR_1 ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_2 . METHOD_3 ( this , VAR_1 ) ; } } 
static void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { if ( VAR_1 != null ) { VAR_1 . METHOD_2 ( ) ; throw new TYPE_2 ( STRING_1 ) ; } } 
abstract void METHOD_1 ( int index , float value ) ; 
public static TYPE_1 METHOD_1 ( TYPE_1 parent , java.lang.String name , int VAR_2 ) { return new TYPE_1 ( parent , name , VAR_2 ) ; } 
public static short METHOD_1 ( short value ) { return ( ( short ) ( ( char ) ( value ) ) ) ; } 
void METHOD_1 ( int response , java.lang.Object ret ) { METHOD_2 ( ( ( ( STRING_1 + ( TYPE_1 . METHOD_3 ( response ) ) ) + STRING_2 ) + ( TYPE_1 . METHOD_4 ( response , ret ) ) ) ) ; } 
private void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { if ( VAR_2 == null ) { VAR_2 = VAR_3 ; } VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public boolean METHOD_1 ( ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } service . METHOD_3 ( ) ; return service . METHOD_1 ( ) ; } 
public static TYPE_1 get ( ) { return new TYPE_1 ( ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String name ) { synchronized ( VAR_1 ) { TYPE_1 type = VAR_1 . get ( name ) ; if ( type != null ) { return type ; } else { return VAR_2 ; } } } 
java.lang.String getName ( ) { return VAR_2 ; } 
public long METHOD_1 ( ) { return ( ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_5 ( ) ) * INT_1 ) * INT_1 ; } 
public boolean METHOD_1 ( ) { synchronized ( this ) { VAR_1 = TYPE_1 . METHOD_2 ( address , input , VAR_2 ) ; } return VAR_1 ; } 
public synchronized boolean METHOD_1 ( ) { return false ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , android.bluetooth.BluetoothDevice device ) { android.os.Bundle VAR_2 = VAR_1 . METHOD_2 ( device ) ; return ( VAR_2 != null ) && ( VAR_2 . METHOD_3 ( VAR_3 , false ) ) ; } 
public static long METHOD_1 ( long arg ) { return ( arg > > > INT_1 ) & 7 ; } 
void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { synchronized ( VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_1 . d ( VAR_2 , STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; } } } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . get ( VAR_1 ) . METHOD_2 ( ) ; TYPE_2 . METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_1 . c ( STRING_2 ) . c ( STRING_3 ) . METHOD_3 ( ) ; org.junit.Assert.assertEquals ( STRING_2 , VAR_1 . toString ( ) ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } super . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return null ; } try { return METHOD_3 ( ) . METHOD_1 ( ) ; } catch ( android.os.RemoteException e ) { throw e . METHOD_4 ( ) ; } } 
public TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 , int netId ) throws TYPE_2 ; 
public TYPE_1 METHOD_1 ( ) { java.util.ArrayList < TYPE_2 > VAR_1 = ( ( java.util.ArrayList < TYPE_2 > ) ( VAR_2 . METHOD_1 ( ) ) ) ; return new TYPE_1 ( VAR_1 ) ; } 
private java.lang.Object get ( final int VAR_1 ) { VAR_2 = TYPE_1 . METHOD_1 ( VAR_2 , ( VAR_1 + 1 ) ) ; return VAR_1 < ( VAR_3 . size ( ) ) ? VAR_3 . get ( VAR_1 ) : VAR_4 ; } 
public void METHOD_1 ( ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , true , VAR_5 ) ; } 
public static TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 , boolean VAR_2 ) { return new TYPE_2 ( id , VAR_1 , VAR_2 ) ; } 
protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { return true ; } 
public static TYPE_3 METHOD_1 ( TYPE_2 field ) { java.lang.String VAR_1 = VAR_2 . getName ( field . METHOD_2 ( ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 ) ; return VAR_3 ; } 
public abstract void METHOD_1 ( java.lang.String VAR_1 ) ; 
public void METHOD_1 ( java.lang.String id , char VAR_1 ) throws java.lang.Exception { for ( TYPE_1 a : VAR_2 ) { a . METHOD_2 ( id , VAR_1 , null ) ; } } 
public static void METHOD_1 ( TYPE_1 [ ] VAR_1 , boolean VAR_2 ) { for ( TYPE_1 VAR_4 : VAR_1 ) { VAR_5 = VAR_2 ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( STRING_2 ) ) ; org.junit.Assert.assertEquals ( STRING_3 , TYPE_1 . METHOD_2 ( STRING_4 ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( this ) { if ( VAR_2 ) android.util.Slog.v ( TYPE_2 . TAG , ( STRING_1 + VAR_1 ) ) ; VAR_3 = true ; } } 
private void METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( VAR_2 ) ) { android.util.Log . i ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; } } 
public static TYPE_1 [ ] METHOD_1 ( ) { synchronized ( VAR_1 ) { return VAR_1 . METHOD_2 ( new TYPE_1 [ VAR_1 . size ( ) ] ) ; } } 
synchronized long METHOD_1 ( java.lang.String name , float size , int VAR_1 , long VAR_2 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , name , size , VAR_1 , VAR_2 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) { throw new TYPE_1 ( STRING_1 ) ; } VAR_1 = true ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_1 instanceof TYPE_2 ) ) { METHOD_2 ( ) ; } } 
protected boolean METHOD_1 ( com.android.jack.ir.ast.JMethod method ) { TYPE_1 VAR_1 = method . METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { return VAR_1 . METHOD_3 ( ) ; } return false ; } 
private static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 , STRING_6 ) ; VAR_1 . METHOD_2 ( STRING_5 , STRING_8 ) ; } 
public final boolean METHOD_1 ( ) { return ( VAR_1 ) != null ; } 
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; VAR_3 = TYPE_1 . METHOD_4 ( ) ; VAR_4 = TYPE_1 . METHOD_5 ( ) ; VAR_5 = TYPE_1 . METHOD_6 ( ) ; } 
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device ) { if ( ( VAR_1 ) == null ) return false ; return VAR_1 . METHOD_1 ( device ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; } 
TYPE_2 output ( TYPE_1 key , TYPE_2 value ) { return value ; } 
public static short METHOD_1 ( char value ) { return ( ( short ) ( ( double ) ( value ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; } } 
public double METHOD_1 ( int VAR_1 ) { double result = d ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . METHOD_2 ( d , d ) ; } return result ; } 
public long get ( int index ) { return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; } 
public boolean METHOD_1 ( ) { return ( ( VAR_1 ) & ( VAR_2 ) ) != 0 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_3 ( 5 , VAR_1 ) ; } 
private static native boolean METHOD_1 ( long VAR_1 , java.lang.String s , int [ ] VAR_2 ) ; 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object from ) throws TYPE_1 { VAR_1 = ( VAR_1 + STRING_1 ) + ( toString ( ) ) ; if ( from != null ) VAR_1 += STRING_2 + from ; throw new TYPE_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; assertNotNull ( VAR_1 . METHOD_2 ( ) ) ; } 
void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( event ) ) ; for ( TYPE_3 listener : new java.util.ArrayList < > ( VAR_2 ) ) { listener . METHOD_1 ( this , event ) ; } } 
public void METHOD_1 ( TYPE_1 pkg ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( ) ; } VAR_1 . METHOD_2 ( pkg ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 ) { return null ; } 
protected static TYPE_1 METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_1 ) { if ( VAR_2 . equals ( VAR_3 . type ) ) { return VAR_3 ; } } return null ; } 
static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , TYPE_4 VAR_2 , TYPE_6 VAR_4 , TYPE_7 VAR_5 ) { return TYPE_1 . of ( VAR_1 , VAR_2 , VAR_4 , VAR_5 ) ; } 
synchronized android.bluetooth.BluetoothDevice METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 value ) { VAR_1 = value ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null , true ) ; } 
private TYPE_1 METHOD_1 ( ) { log = super . METHOD_2 ( ) ; java.io.File VAR_1 = METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; return TYPE_1 . METHOD_6 ( VAR_1 , log ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_1 ) ; } 
public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( this , VAR_1 , VAR_2 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( null ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
private static TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( STRING_1 ) ) ; } 
public synchronized void METHOD_1 ( long VAR_1 ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_3 ) ; } 
private static void METHOD_1 ( TYPE_1 log , java.lang.String VAR_1 , java.lang.String VAR_2 ) { log . METHOD_3 ( STRING_1 , VAR_1 , VAR_2 , VAR_5 ) ; } 
private static void METHOD_1 ( int a ) { a = - a ; Main . assertEquals ( ( - 1 ) , a ) ; } 
private int METHOD_1 ( ) { assert TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_1 ) { return VAR_2 ; } return VAR_3 ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) { try { VAR_3 . METHOD_1 ( VAR_1 ) ; } catch ( android.os.RemoteException VAR_4 ) { } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 c = TYPE_1 . METHOD_2 ( VAR_1 ) ; org.junit.Assert.assertEquals ( STRING_2 , c . METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public abstract void METHOD_1 ( TYPE_1 callback ) ; 
private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( server . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; } 
public int METHOD_1 ( java.lang.String name , byte [ ] item , int uid , int flags ) throws android.os.RemoteException ; 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) throws android.os.RemoteException { synchronized ( VAR_4 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_5 ) . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 . METHOD_1 ( null , VAR_1 ) ; return true ; } catch ( android.os.RemoteException e ) { return false ; } } 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 , final TYPE_3 callback ) { METHOD_1 ( VAR_1 , VAR_2 , null , callback , null ) ; } 
public abstract int METHOD_1 ( int c ) ; 
public java.util.Map < java.lang.String , TYPE_2 > METHOD_1 ( ) { return VAR_1 ; } 
protected void METHOD_1 ( int data ) throws java.io.IOException { if ( ( ( fd ) == null ) || ( ! ( fd . valid ( ) ) ) ) { throw new java.io.IOException ( STRING_1 ) ; } METHOD_2 ( data ) ; } 
public final void METHOD_1 ( int VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) throws java.lang.Throwable { try { VAR_1 . METHOD_2 ( ) ; } finally { super . METHOD_1 ( ) ; } } 
public static long METHOD_1 ( long value , int VAR_1 ) { return value > > ( VAR_1 & INT_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( VAR_1 , r , METHOD_2 ( x ) ) ; } 
public java.lang.String METHOD_1 ( ) { return STRING_1 ; } 
private static native boolean METHOD_1 ( long VAR_1 , java.lang.String s , int VAR_2 , int [ ] VAR_3 ) ; 
public void METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( this , VAR_1 , VAR_2 ) ; } } 
public boolean METHOD_1 ( java.lang.Object obj ) { if ( obj == null ) { return false ; } return METHOD_2 ( obj . METHOD_3 ( ) ) ; } 
private void METHOD_1 ( int expected , TYPE_1 VAR_1 , byte [ ] VAR_2 , int VAR_3 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( expected , TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_2 , null , VAR_3 ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 locale ) { return TYPE_2 . METHOD_2 ( locale , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 v ) { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { listener . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; } else { listener . METHOD_3 ( VAR_1 ) ; } } 
private static void METHOD_1 ( ) { try { Main . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } catch ( java.lang.NullPointerException ex ) { java.lang.System.out.println ( STRING_2 ) ; } } 
public void METHOD_1 ( ) { VAR_1 . set ( true ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; mContext = null ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , boolean append ) throws TYPE_3 { return new TYPE_4 ( VAR_2 . METHOD_1 ( VAR_1 , append ) , new TYPE_5 ( ) ) ; } 
public java.io.File METHOD_1 ( ) { java.io.File VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 . METHOD_3 ( ) ) { return VAR_1 ; } return null ; } 
public static java.lang.String METHOD_1 ( char [ ] data ) { return new java.lang.String ( data ) ; } 
public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = new TYPE_2 ( VAR_4 , ( VAR_2 != null ? VAR_2 : new TYPE_1 ( ) ) , VAR_1 , VAR_5 ) ; VAR_6 . METHOD_2 ( VAR_3 ) ; } 
public static long METHOD_1 ( ) { long a ; long b ; long c ; a = INT_1 ; b = INT_2 ; c = a / b ; return c ; } 
public TYPE_1 getName ( ) { return field . getName ( ) ; } 
private void METHOD_2 ( ) { METHOD_2 ( false ) ; } 
public void METHOD_1 ( java.lang.String url , TYPE_1 VAR_1 ) { VAR_2 = url ; VAR_3 = VAR_1 ; METHOD_2 ( false ) ; } 
public static void test ( ) { java.lang.Object [ ] VAR_1 = VAR_2 ; java.lang.Object VAR_3 = VAR_1 [ 0 ] ; VAR_3 . METHOD_1 ( ) ; VAR_1 [ 1 ] = VAR_3 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , java.io.IOException , TYPE_3 { for ( java.io.File VAR_2 : VAR_3 ) { METHOD_2 ( VAR_2 , VAR_2 , VAR_1 ) ; } if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_3 ( true ) ; } } 
public void run ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( this , VAR_2 ) ; } } 
public abstract TYPE_1 METHOD_1 ( ) ; 
public void run ( ) { assertFalse ( VAR_1 . METHOD_1 ( ) ) ; } 
void METHOD_1 ( int VAR_1 , int VAR_2 ) throws TYPE_1 , TYPE_2 , java.io.IOException ; 
public TYPE_1 METHOD_1 ( ) { return this . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; fail ( ) ; } catch ( TYPE_2 expected ) { } } 
public static TYPE_1 METHOD_1 ( TYPE_2 node ) { if ( node instanceof TYPE_1 ) { return ( ( TYPE_1 ) ( node ) ) ; } return null ; } 
public native byte [ ] METHOD_1 ( java.lang.String path , java.lang.String name ) throws TYPE_1 ; 
private void METHOD_1 ( TYPE_1 config ) throws java.lang.Exception { config . METHOD_2 ( VAR_3 ) ; config . METHOD_3 ( VAR_4 ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 [ ] > METHOD_1 ( TYPE_2 < ? super TYPE_1 > VAR_1 ) { return new TYPE_3 < TYPE_1 > ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { } 
void METHOD_1 ( ) { METHOD_1 ( false ) ; } 
private TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 VAR_2 ) { if ( METHOD_2 ( VAR_1 . name ) ) { return METHOD_3 ( VAR_1 , VAR_2 ) ; } else { return METHOD_4 ( VAR_1 , VAR_2 ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; assertEquals ( STRING_2 , STRING_3 , VAR_1 . METHOD_4 ( ) ) ; } 
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device ) { if ( VAR_1 ) { android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) ; } TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( device ) ; } 
abstract void METHOD_1 ( int index , int value ) ; 
public synchronized TYPE_1 METHOD_1 ( int VAR_1 ) { long value = METHOD_2 ( VAR_1 ) ; if ( value == 0 ) { return VAR_2 ; } if ( ( VAR_3 ) != value ) VAR_4 = new TYPE_2 ( value ) ; return VAR_4 ; } 
public static int METHOD_1 ( ) { float VAR_1 = FLOAT_1 ; return ( ( int ) ( VAR_1 ) ) ; } 
boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( ) { if ( ! ( VAR_2 . METHOD_1 ( ) ) ) { loge ( STRING_2 ) ; return false ; } return true ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( VAR_1 , mContext ) ; } 
public void run ( ) { TYPE_1 n = new TYPE_1 ( ) ; n . flags |= VAR_1 ; VAR_2 = - INT_1 ; VAR_3 = 1 ; VAR_4 = 0 ; VAR_5 . METHOD_1 ( 1 , n ) ; } 
public int METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , int uid ) { if ( VAR_1 == null ) { return VAR_3 ; } return METHOD_2 ( VAR_1 , VAR_2 , uid , ( - 1 ) , true ) ; } 
public static synchronized TYPE_1 [ ] METHOD_1 ( ) { return VAR_1 . METHOD_2 ( new TYPE_1 [ VAR_1 . size ( ) ] ) ; } 
int METHOD_1 ( ) ; 
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; } 
public boolean METHOD_1 ( ) { return true ; } 
public void METHOD_1 ( ) { TYPE_2 in = new TYPE_2 ( mRS , INPUTSIZE ) ; VAR_4 = in . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 6 ) ; } 
static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; } 
public void info ( java.lang.String VAR_1 , java.lang.Object ... args ) { VAR_2 . METHOD_2 ( java.lang.String.format ( VAR_1 , args ) ) ; } 
public static void METHOD_1 ( double [ ] a ) { TYPE_2 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) , null , 0 , 0 ) ; } 
public java.lang.String getName ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public java.lang.Object METHOD_1 ( ) throws TYPE_1 { TYPE_2 result = ( ( TYPE_2 ) ( super . METHOD_1 ( ) ) ) ; result . data = data . METHOD_1 ( ) ; return result ; } 
public boolean METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; } 
synchronized void METHOD_1 ( long id , short [ ] d ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , d ) ; } 
private final native void METHOD_1 ( double [ ] VAR_1 ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( this , new TYPE_3 ( VAR_1 ) , VAR_2 ) ; } } 
public static long METHOD_1 ( long VAR_1 , long VAR_2 ) { return VAR_1 > VAR_2 ? VAR_1 : VAR_2 ; } 
protected void METHOD_1 ( ) throws java.lang.Throwable { try { METHOD_2 ( ) ; } finally { super . METHOD_1 ( ) ; } } 
static TYPE_1 METHOD_1 ( com.android.jack.ir.ast.JDefinedClassOrInterface type ) { return new TYPE_1 ( ( ( TYPE_2 . METHOD_2 ( ) . getName ( type ) ) + ( VAR_1 ) ) , CHAR_1 ) ; } 
static void METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return ; } VAR_2 . METHOD_3 ( ) ; } 
static long METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 ; } 
public void METHOD_2 ( int VAR_1 ) { for ( int i = 0 ; i < VAR_1 ; ++ i ) { TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 call , boolean VAR_1 , TYPE_3 VAR_2 ) { return TYPE_4 . METHOD_1 ( call , VAR_1 , VAR_2 , false , false ) ; } 
private static void METHOD_1 ( java.lang.String msg ) { if ( VAR_1 ) { android.util.Log . i ( VAR_2 . TAG , msg ) ; } } 
public void test ( ) throws java.lang.Exception { assertEquals ( ( STRING_5 + ( ( ( STRING_1 + STRING_2 ) + STRING_3 ) + STRING_4 ) ) , METHOD_1 ( STRING_6 ) ) ; } 
private void METHOD_1 ( java.lang.String format , java.lang.Object ... args ) { VAR_1 . log ( format , args ) ; } 
public void METHOD_1 ( ) { TYPE_1 service = new TYPE_1 ( ) ; long VAR_1 = service . METHOD_2 ( new byte [ ] { - INT_1 , 7 } ) ; org.junit.Assert.assertEquals ( INT_2 , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 e ) { VAR_1 . METHOD_2 ( this ) ; } 
public void METHOD_1 ( ) { assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_1 ) ) ; assertTrue ( STRING_2 , TYPE_1 . METHOD_2 ( CHAR_2 ) ) ; assertFalse ( STRING_3 , TYPE_1 . METHOD_2 ( CHAR_3 ) ) ; } 
public void METHOD_1 ( ) throws android.os.RemoteException { this . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return false ; } 
public void METHOD_1 ( boolean on ) { if ( on != ( VAR_2 ) ) { if ( on ) { TYPE_1 . METHOD_2 ( ) ; } else { TYPE_1 . METHOD_3 ( ) ; } VAR_2 = on ; } } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { int result = VAR_1 . METHOD_2 ( VAR_2 ) ; return result > 0 ? - 1 : result < 0 ? 1 : 0 ; } 
public static void METHOD_1 ( java.lang.Object [ ] VAR_1 ) { org.junit.Assert.assertEquals ( 3 , VAR_1 . length ) ; } 
private TYPE_1 METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : return new TYPE_2 ( mContext , VAR_2 ) ; case VAR_3 : return new TYPE_2 ( mContext , VAR_3 ) ; } throw new java.lang.IllegalArgumentException ( ( STRING_1 + VAR_1 ) ) ; } 
public int METHOD_1 ( ) { METHOD_2 ( VAR_1 , STRING_1 ) ; return VAR_2 . METHOD_1 ( ) ; } 
public final TYPE_1 set ( int index , TYPE_1 element ) { throw new TYPE_2 ( ) ; } 
protected void METHOD_1 ( ) { VAR_2 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_4 , false , false ) ; status = VAR_5 ; } 
public void METHOD_1 ( ) { METHOD_1 ( VAR_1 . METHOD_3 ( ) ) ; } 
private boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ; } 
public java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( new TYPE_2 ( ) , false , null , null ) ; } 
public boolean METHOD_1 ( ) { return ( ( VAR_1 ) && ( ( VAR_3 ) != null ) ) && ( VAR_3 . METHOD_1 ( ) ) ; } 
static void METHOD_1 ( TYPE_1 s , long VAR_1 ) throws TYPE_2 { } 
public void METHOD_1 ( TYPE_1 action , TYPE_2 VAR_1 ) { VAR_2 = VAR_1 ; } 
public void METHOD_1 ( java.util.List < java.io.File > VAR_1 ) { VAR_2 = new java.util.ArrayList < java.io.File > ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 type ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( VAR_2 ) ; return new TYPE_1 ( VAR_3 , VAR_1 , type ) ; } 
public boolean METHOD_1 ( int netId , java.lang.String VAR_1 ) { return false ; } 
public int METHOD_1 ( ) { switch ( VAR_1 ) { case VAR_3 : case VAR_4 : { return 2 ; } } return 1 ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( STRING_1 , null ) ; try { c . METHOD_2 ( ( ( java.lang.String ) ( null ) ) ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 = new TYPE_3 ( VAR_1 ) ; return this ; } 
public void METHOD_1 ( ) throws java.lang.Throwable { METHOD_2 ( STRING_1 , false , false ) ; } 
TYPE_1 METHOD_1 ( ) { return location ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.lang.Exception { synchronized ( VAR_3 ) { if ( ( VAR_4 ) != null ) { throw new java.lang.Exception ( STRING_1 ) ; } VAR_4 = VAR_2 ; } } 
public java.lang.String METHOD_1 ( java.lang.String key ) { try { return VAR_1 . METHOD_2 ( key ) ; } catch ( java.io.IOException e ) { TYPE_1 . log ( VAR_2 , ( STRING_1 + key ) , e ) ; return null ; } } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 4 , INT_1 , false ) ; args.out = TYPE_3 . METHOD_3 ( args . inV , t ) ; } 
protected void METHOD_1 ( ) throws TYPE_2 { VAR_2 . METHOD_2 ( this ) ; } 
public void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; } 
public native short METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public synchronized void METHOD_1 ( TYPE_1 context , android.content.Intent VAR_1 ) { super . METHOD_1 ( context , VAR_1 ) ; try { METHOD_2 ( ) ; } catch ( TYPE_2 e ) { throw new java.lang.RuntimeException ( STRING_1 , e ) ; } } 
protected void METHOD_1 ( int index ) { METHOD_2 ( new TYPE_1 ( VAR_1 . METHOD_3 ( ) . get ( index ) ) ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( STRING_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { VAR_2 . METHOD_2 ( VAR_3 ) ; } else { VAR_2 . METHOD_2 ( VAR_1 ) ; } VAR_4 . METHOD_2 ( VAR_5 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) ; java.lang.String VAR_2 = VAR_3 . METHOD_3 ( ) ; org.junit.Assert.assertEquals ( VAR_2 , STRING_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 t = new TYPE_1 ( STRING_2 ) ; assertEquals ( STRING_1 , t . METHOD_2 ( STRING_3 ) ) ; assertEquals ( STRING_4 , t . METHOD_2 ( STRING_5 ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ; } 
static void METHOD_1 ( TYPE_1 pw , java.lang.String format , java.lang.Object ... VAR_1 ) { pw.println ( java.lang.String.format ( format , VAR_1 ) ) ; } 
public abstract int METHOD_1 ( ) ; 
public static int METHOD_1 ( TYPE_1 context ) { try { return new TYPE_2 ( context ) . METHOD_2 ( ) ; } catch ( java.lang.Exception e ) { return 0 ; } } 
public void METHOD_1 ( TYPE_1 . Allocation VAR_1 ) { METHOD_1 ( 0 , ( ( TYPE_1 . Allocation ) ( null ) ) , VAR_1 , null ) ; } 
private static void METHOD_1 ( int status ) { if ( VAR_1 ) android.util.Log.v ( TYPE_1 . TAG , ( STRING_1 + status ) ) ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( status ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( VAR_1 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_3 class ) . METHOD_4 ( ) ; } 
public static double METHOD_1 ( double arg ) { return arg / FLOAT_1 ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; final TYPE_1 parent = ( ( TYPE_1 ) ( METHOD_3 ( ) ) ) ; if ( parent != null ) { parent . METHOD_4 ( this ) ; } } 
public static int METHOD_1 ( ) { int a ; int b ; int c ; a = 8 ; b = 3 ; c = a % b ; return c ; } 
public java.lang.String toString ( ) { return ( ( address . METHOD_1 ( ) ) + STRING_2 ) + ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 s ) { METHOD_2 ( ) ; METHOD_3 ( ( ( int ) ( METHOD_4 ( s ) ) ) ) ; } 
public void METHOD_1 ( TYPE_1 t , java.lang.Throwable e ) { if ( e instanceof TYPE_2 ) { VAR_1 [ 0 ] = true ; } super . METHOD_1 ( t , e ) ; } 
public void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public void METHOD_1 ( java.lang.String VAR_1 , android.os.Message VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_1 , null , null , null , null , null ) ; } 
public static boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return VAR_1 . equals ( VAR_2 ) ; } 
public int METHOD_1 ( TYPE_1 VAR_2 , TYPE_2 listener ) throws android.os.RemoteException { return 0 ; } 
protected boolean METHOD_1 ( TYPE_1 a , TYPE_1 b ) { assert ! ( VAR_1 ) ; VAR_2 = b ; METHOD_2 ( a ) ; return ! ( VAR_1 ) ; } 
public static void METHOD_1 ( int [ ] x ) { int m = ( TYPE_1 . METHOD_2 ( x ) ) > > 8 ; x [ 0 ] ^= m & ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 project ) { METHOD_2 ( project ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { try { assertTrue ( VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) ; } catch ( java.lang.Throwable fail ) { METHOD_2 ( fail ) ; } } 
public static void METHOD_1 ( java.lang.String key , java.lang.String VAR_1 ) { VAR_2 . METHOD_3 ( key , VAR_1 ) ; TYPE_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( key ) ; } 
public void METHOD_1 ( ) { TYPE_1 key = new TYPE_1 ( ) ; assertEquals ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) ; } 
private static boolean METHOD_1 ( int subId ) { int VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( subId ) ; return ( VAR_2 ) == VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , STRING_2 , 1 , 16 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_1 ) ; } 
public static final void logln ( java.lang.String VAR_1 ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; } 
public void out ( java.lang.String line ) { if ( line != null ) { VAR_1 . info ( line ) ; } } 
static void METHOD_1 ( TYPE_1 flags , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { assert VAR_1 != null ; VAR_1 . METHOD_2 ( VAR_2 ) ; flags . METHOD_1 ( VAR_1 ) ; } 
void METHOD_1 ( int VAR_1 ) { METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; this . VAR_1 = VAR_1 ; } 
public boolean METHOD_1 ( TYPE_1 type ) { java.util.Map < java.lang.String , TYPE_2 > VAR_1 = VAR_2 . get ( type ) ; return ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ; } 
public static long METHOD_1 ( long arg1 , long VAR_1 ) { return ( - arg1 ) + VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { for ( java.lang.String id : TYPE_1 . METHOD_2 ( ) ) { VAR_1 . println ( id ) ; TYPE_1 t = new TYPE_1 ( id ) ; t . METHOD_3 ( STRING_1 ) ; } } 
public void METHOD_1 ( ) { METHOD_3 ( ) ; } 
public TYPE_1 METHOD_2 ( ) throws java.io.IOException { return url . METHOD_2 ( ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; return ( VAR_2 != null ) && ( VAR_2 . METHOD_3 ( ) ) ; } return false ; } 
public void METHOD_1 ( TYPE_1 e ) { VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; if ( ( VAR_1 ) != null ) { super . METHOD_1 ( e ) ; } } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( VAR_2 . METHOD_2 ( ) ) - ( VAR_1 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; } } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 , java.io.IOException { return new TYPE_1 ( VAR_1 , 0 ) ; } 
public java.lang.String getName ( ) { assert ( name ) != null ; return name ; } 
public java.lang.String getName ( ) { return METHOD_1 ( ) . METHOD_2 ( ) ; } 
public native java.lang.Class < ? > [ ] METHOD_1 ( ) ; 
private void METHOD_1 ( ) throws TYPE_1 { TYPE_3 . METHOD_3 ( VAR_1 , STRING_1 ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_2 ) < ( VAR_3 ) ) { return ; } VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , true , VAR_5 ) ; } 
private native boolean METHOD_1 ( int x , int y , int VAR_1 ) ; 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String [ ] VAR_2 , java.lang.String [ ] VAR_3 ) throws java.io.IOException { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) ; 
public java.lang.String toString ( ) { return METHOD_1 ( ) ; } 
public void METHOD_1 ( int b ) throws java.io.IOException { out . METHOD_1 ( b ) ; if ( on ) { VAR_1 . METHOD_2 ( ( ( byte ) ( b ) ) ) ; } } 
public void METHOD_1 ( ) { } 
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device ) { if ( VAR_1 ) { android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) ; } TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return false ; } 
public void METHOD_1 ( int state ) { VAR_2 . METHOD_2 ( state , null ) ; } 
public boolean METHOD_1 ( int subId ) { try { return METHOD_2 ( ) . METHOD_1 ( subId ) ; } catch ( android.os.RemoteException | java.lang.NullPointerException ex ) { return false ; } } 
private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { for ( TYPE_2 r : VAR_2 . METHOD_2 ( ) ) { org.junit.Assert.assertEquals ( VAR_1 , r . METHOD_3 ( ) ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null ) ; } 
private boolean METHOD_1 ( java.lang.Class < ? > VAR_1 ) { return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) || ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; } 
void METHOD_1 ( java.lang.String VAR_1 ) ; 
public native boolean METHOD_1 ( ) ; 
public void error ( int VAR_1 , java.lang.String VAR_2 ) throws android.os.RemoteException { listener . error ( VAR_1 , VAR_2 ) ; } 
public boolean METHOD_1 ( java.io.File VAR_1 ) { return ! ( VAR_1 . getName ( ) . equals ( VAR_3 ) ) ; } 
public java.lang.Class < ? > METHOD_1 ( ) { return java.lang.Class . METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( ( ! VAR_1 ) ) ; } 
public static TYPE_1 METHOD_1 ( long address , long VAR_1 ) { return new TYPE_2 ( address , VAR_1 ) ; } 
public void METHOD_1 ( long VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; } 
synchronized void METHOD_1 ( long id , float [ ] d ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , d ) ; } 
public synchronized TYPE_1 METHOD_1 ( ) { long value = METHOD_2 ( ) ; if ( value == 0 ) { return VAR_1 ; } if ( ( VAR_2 ) != value ) VAR_3 = new TYPE_2 ( value ) ; return VAR_3 ; } 
private java.lang.String METHOD_1 ( int s ) { switch ( s ) { case VAR_1 : return STRING_1 ; case VAR_2 : return STRING_2 ; case VAR_3 : return STRING_3 ; case VAR_4 : return STRING_4 ; default : return STRING_5 ; } } 
public int METHOD_1 ( ) { final int VAR_1 = INT_1 ; int result = super . METHOD_1 ( ) ; result = ( VAR_1 * result ) + ( ( VAR_2 ) == null ? 0 : VAR_2 . METHOD_1 ( ) ) ; return result ; } 
synchronized long METHOD_1 ( long type , int VAR_1 , boolean VAR_2 , int VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( int status ) { try { VAR_1 . METHOD_1 ( status ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( VAR_2 , null ) ; } catch ( android.os.RemoteException e ) { } } 
public void METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( this , VAR_1 ) ; } } 
public static TYPE_1 METHOD_1 ( int ... VAR_1 ) { java.lang.System.out.println ( STRING_1 ) ; return new TYPE_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( ) . toString ( ) ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) { android.util.Log.v ( VAR_2 . TAG , STRING_1 ) ; } VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; } 
final void METHOD_1 ( int pos , double [ ] src , int VAR_1 , int length ) { TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) ; } 
TYPE_1 METHOD_1 ( ) ; 
public void METHOD_1 ( long VAR_1 , long VAR_2 ) { VAR_3 = VAR_5 ; VAR_4 . set ( VAR_5 ) ; } 
public static void METHOD_1 ( long VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; } 
void METHOD_1 ( int key ) throws TYPE_1 ; 
public void METHOD_1 ( java.lang.Runnable r , TYPE_1 ... VAR_1 ) { r . run ( ) ; } 
public void run ( ) { synchronized ( this ) { METHOD_2 ( ) ; } } 
public void METHOD_1 ( android.bluetooth.BluetoothDevice device ) { if ( VAR_1 ) { android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) ; } TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return ; } service . METHOD_1 ( device ) ; } 
private static native java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) ; 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) ; } 
public static void METHOD_1 ( TYPE_1 args ) { args.out = ( ( short ) ( ( java.lang.Integer . METHOD_2 ( ( ( VAR_3 ) & INT_1 ) ) ) - 16 ) ) ; } 
public android.bluetooth.BluetoothDevice [ ] METHOD_1 ( ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return new android.bluetooth.BluetoothDevice [ 0 ] ; } return service . METHOD_1 ( ) ; } 
synchronized int METHOD_1 ( long VAR_1 , int index ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , index ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > in ( TYPE_3 < TYPE_1 > VAR_1 ) { return new TYPE_4 < TYPE_1 > ( VAR_1 ) ; } 
private boolean METHOD_1 ( java.lang.Object key ) { return ( key != null ) && ( VAR_1 . METHOD_2 ( key ) ) ; } 
public final void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 ) ; try { METHOD_4 ( VAR_3 ) ; } finally { VAR_1 . METHOD_2 ( VAR_2 ) ; } } 
synchronized long METHOD_1 ( long VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 f ) throws java.lang.Exception { TYPE_2 c = METHOD_2 ( f , VAR_1 ) ; TYPE_3 < java.util.List < ? > > VAR_2 = c . METHOD_1 ( ) ; METHOD_3 ( f , VAR_2 ) ; } 
public void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; return ; } java.lang.String VAR_1 = STRING_1 ; VAR_2 = TYPE_1 . METHOD_1 ( context , VAR_1 , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { byte [ ] output = null ; try { TYPE_1 . METHOD_2 ( output ) ; fail ( STRING_1 ) ; } catch ( java.lang.RuntimeException expected ) { } } 
private void METHOD_1 ( TYPE_1 config , java.lang.String VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( config , VAR_1 , VAR_2 ) ; VAR_4 . METHOD_3 ( ( - 1 ) , VAR_5 ) ; } 
public static float METHOD_1 ( ) { long VAR_1 = INT_1 ; return ( ( float ) ( VAR_1 ) ) ; } 
public TYPE_1 call ( ) throws java.lang.Exception { try { server . METHOD_1 ( ) ; fail ( ) ; } catch ( TYPE_2 expected ) { } return null ; } 
static native TYPE_1 METHOD_1 ( java.lang.Class c , java.lang.String name , java.lang.Class [ ] args ) ; 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( VAR_1 ) ; } } 
public final void METHOD_1 ( int state ) { synchronized ( VAR_1 ) { if ( ( VAR_2 ) != state ) { VAR_2 = state ; METHOD_2 ( state ) ; } } } 
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( null ) ; fail ( ) ; } catch ( java.lang.IllegalArgumentException expected ) { } } 
public java.lang.Integer METHOD_1 ( TYPE_1 type , java.lang.String name ) { if ( ( VAR_1 ) != null ) { return VAR_1 . METHOD_1 ( type , name ) ; } return null ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String name , java.lang.String VAR_3 ) { return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , name , VAR_3 , false ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { if ( VAR_2 ) android.util.Slog.v ( VAR_3 . TAG , ( STRING_1 + ( this ) ) ) ; VAR_1 = VAR_4 ; } } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; return this ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; try { VAR_1 . METHOD_2 ( null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } } 
public static long METHOD_1 ( long arg ) { return arg * 1 ; } 
private static boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { TYPE_2 . i ( STRING_1 , STRING_2 ) ; return true ; } return ( TYPE_3 . METHOD_2 ( VAR_1 ) ) || ( VAR_1 . METHOD_3 ( ) ) ; } 
boolean METHOD_1 ( ) { return VAR_1 ; } 
public boolean METHOD_1 ( ) { return ( VAR_1 ) != null ; } 
public java.lang.String getName ( ) { return VAR_1 . METHOD_1 ( VAR_2 . getName ( ) ) ; } 
void METHOD_1 ( int state , android.os.Message result ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null , null ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public int METHOD_1 ( int offset ) { return ( start ) + offset ; } 
public void run ( ) { METHOD_1 ( ) . METHOD_2 ( false ) ; } 
public void METHOD_1 ( ) { assert ( VAR_1 ) != 0 : STRING_1 ; METHOD_2 ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) <= INT_1 ) { return VAR_1 ; } return new TYPE_3 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { final java.lang.String VAR_1 = STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) ; final java.lang.String expected = STRING_6 + STRING_7 ; org.junit.Assert.assertEquals ( expected , METHOD_2 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; } 
public static native long METHOD_1 ( long VAR_1 , long options ) ; 
void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 ) ; 
private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( STRING_1 , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 listener ) { synchronized ( VAR_1 ) { if ( ! ( VAR_1 . METHOD_2 ( listener ) ) ) { VAR_1 . METHOD_3 ( listener ) ; } } } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
public static boolean METHOD_1 ( java.io.File VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) && ( new java.io.File ( VAR_1 , ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ; } 
public static long METHOD_1 ( ) { double VAR_1 = - ( VAR_2 ) ; return ( ( long ) ( VAR_1 ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 error ) { TYPE_2 request = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( request != null ) { request . METHOD_3 ( error ) ; METHOD_4 ( VAR_1 , request ) ; } } 
boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { boolean status = ! ( VAR_2 ) ; VAR_2 = true ; METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( VAR_3 , VAR_1 ) ; return status ; } 
public void METHOD_1 ( ) { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; try { c . get ( null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; } 
public boolean METHOD_1 ( java.lang.Object a , java.lang.Object b ) { return a == b ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; VAR_1 = METHOD_2 ( false , STRING_1 , false ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_2 ) ; METHOD_3 ( VAR_1 , VAR_3 , STRING_3 ) ; METHOD_3 ( VAR_1 , VAR_4 , STRING_4 ) ; } 
public TYPE_1 METHOD_1 ( ) { return key ; } 
public boolean METHOD_1 ( ) { return ( length ( ) ) == 0 ; } 
public TYPE_1 METHOD_1 ( android.bluetooth.BluetoothDevice device ) ; 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { final java.lang.String VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 != null ) { return VAR_4 . get ( VAR_2 ) ; } return null ; } 
public int METHOD_1 ( android.bluetooth.BluetoothDevice device ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return VAR_1 ; } return service . METHOD_1 ( device ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_1 ( VAR_1 , 0 , ( ( byte [ ] ) ( null ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; METHOD_2 ( ) ; for ( TYPE_2 a : VAR_2 . values ( ) ) { METHOD_3 ( a ) ; } } 
public java.lang.Object METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = ( ( VAR_2 ) != null ) ? ( ( TYPE_2 ) ( VAR_2 . METHOD_1 ( ) ) ) : null ; return new TYPE_3 ( METHOD_2 ( ) , METHOD_3 ( ) , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 project ) { METHOD_2 ( project ) ; } 
public static void assertEquals ( boolean VAR_1 , boolean expected ) throws TYPE_1 { if ( VAR_1 != expected ) { throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; } } 
synchronized long METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , float VAR_6 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String name , java.lang.String value ) { return TYPE_2 . METHOD_2 ( VAR_1 , name , value , null , false , TYPE_3 . METHOD_3 ( ) ) ; } 
public static synchronized java.util.List < TYPE_1 > METHOD_1 ( ) { return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { java.lang.String VAR_2 = ( ( ( VAR_1 + STRING_1 ) + VAR_1 ) + STRING_1 ) + VAR_1 ; java.lang.String VAR_3 = METHOD_2 ( VAR_4 ) ; assertEquals ( VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , new TYPE_1 ( VAR_1 , VAR_2 ) . getName ( ) ) ; } 
synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int count , short [ ] d , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 ) ; } 
private void METHOD_1 ( android.bluetooth.BluetoothDevice device , int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 ) ; VAR_3 . device = device ; VAR_5 = VAR_1 ; VAR_6 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_7 , device ) ; } 
public static byte METHOD_1 ( long value ) { return ( ( byte ) ( value & INT_1 ) ) ; } 
public void METHOD_1 ( int VAR_1 , int VAR_2 ) { try { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public boolean METHOD_1 ( boolean VAR_1 ) { if ( ! ( VAR_2 . METHOD_1 ( VAR_1 ) ) ) { return false ; } VAR_3 . METHOD_2 ( ) ; if ( VAR_1 ) { METHOD_3 ( ) ; } return true ; } 
final byte METHOD_1 ( int i ) { return get ( i ) ; } 
void METHOD_1 ( int [ ] a , boolean VAR_1 ) { this . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( a , a . length , VAR_1 , this . VAR_2 ) ; } 
public java.lang.String METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( java.lang.String.format ( STRING_1 , VAR_1 ) ) ; TYPE_1 . assertTrue ( STRING_2 , VAR_2 . METHOD_4 ( null ) ) ; VAR_3 = true ; VAR_4 = VAR_2 . METHOD_5 ( ) ; return STRING_3 ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { Main . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( 10 , 0 ) ; } 
protected void METHOD_1 ( ) { VAR_3 = new TYPE_2 ( this ) ; } 
public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { synchronized ( this ) { VAR_1 = true ; VAR_2 . METHOD_2 ( false ) ; if ( ( VAR_3 ) != null ) { METHOD_3 ( ) ; } else { android.util.Slog.w ( com.android.server.am.ActivityManagerService.TAG , STRING_1 ) ; } } } 
public void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 out ) throws java.io.IOException { out . METHOD_2 ( name ) ; out . METHOD_3 ( type ) ; out . METHOD_2 ( VAR_1 ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String [ ] args ) throws java.lang.Exception { METHOD_1 ( VAR_1 , args , null , null ) ; } 
public static int METHOD_1 ( int i ) { return INT_1 != ( TYPE_2 . METHOD_2 ( i ) ) ? INT_2 : INT_3 ; } 
public static boolean METHOD_1 ( ) { return true ; } 
public void METHOD_1 ( ) { byte [ ] VAR_1 = METHOD_2 ( VAR_2 ) ; if ( VAR_1 == null ) { return ; } assertTrue ( STRING_1 , TYPE_1 . METHOD_3 ( VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) == 0 ) return null ; return ( ( TYPE_1 ) ( VAR_1 . get ( 0 ) ) ) ; } 
public static int [ ] METHOD_1 ( int [ ] VAR_1 , int VAR_2 ) { if ( VAR_2 < 0 ) { throw new TYPE_1 ( java.lang.Integer . toString ( VAR_2 ) ) ; } return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , float VAR_3 ) ; 
public java.io.File METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_3 ) { return new java.io.File ( VAR_1 , VAR_4 ) ; } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( 5 ) ; c . METHOD_2 ( STRING_1 , STRING_2 ) ; try { c . METHOD_3 ( null ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public abstract TYPE_1 METHOD_1 ( ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( VAR_1 ) . METHOD_3 ( ) ; } 
public final void run ( ) { try { METHOD_1 ( ) ; } catch ( java.lang.Throwable fail ) { METHOD_2 ( fail ) ; } } 
public void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; Main VAR_1 = new Main ( ) ; VAR_1 . run ( ) ; java.lang.System.out.println ( STRING_2 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_3 ( VAR_2 ) ; } } 
protected TYPE_1 METHOD_1 ( TYPE_1 ... VAR_1 ) { METHOD_2 ( ) ; return null ; } 
public void METHOD_1 ( int type ) { if ( ! ( METHOD_2 ( type , VAR_2 ) ) ) { android.util.Log.e ( VAR_3 . TAG , STRING_1 ) ; } } 
void METHOD_1 ( java.lang.String number , java.lang.String name , boolean VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 , boolean VAR_6 ) ; 
public void run ( TYPE_1 session ) { for ( TYPE_2 info : session . METHOD_1 ( ) . METHOD_2 ( ) ) { info . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; } } 
public java.lang.String METHOD_1 ( java.lang.String name ) { return this . METHOD_1 ( name ) ; } 
public abstract void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_2 listener ) ; 
private void METHOD_1 ( ) { if ( VAR_1 ) android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_4 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( new TYPE_2 < > ( ) , false , false , true ) ; } 
public void METHOD_1 ( ) { TYPE_2 . e ( VAR_1 , STRING_1 ) ; } 
static void METHOD_1 ( long VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; } 
public boolean METHOD_1 ( TYPE_1 x ) { print ( TYPE_2 . METHOD_4 ( x . METHOD_5 ( ) ) ) ; METHOD_6 ( x ) ; METHOD_7 ( ) ; METHOD_8 ( x ) ; return false ; } 
public static boolean METHOD_1 ( TYPE_1 type ) { TYPE_2 [ ] VAR_1 = TYPE_3 . METHOD_2 ( type ) ; for ( TYPE_2 VAR_2 : VAR_1 ) { if ( VAR_2 == ( VAR_3 ) ) { return true ; } } return false ; } 
public native void METHOD_1 ( java.lang.Object obj , byte b ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public static native boolean METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 ) ; 
int METHOD_1 ( ) ; 
public TYPE_1 METHOD_1 ( java.lang.String ... VAR_1 ) { return METHOD_1 ( false , VAR_1 ) ; } 
public boolean METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) && ( VAR_1 ) ) && ( VAR_2 ) ; } 
private static void METHOD_1 ( TYPE_1 device ) throws TYPE_2 , TYPE_3 { TYPE_4 < java.lang.String > VAR_1 = device . METHOD_2 ( STRING_1 ) ; VAR_1 . get ( ) ; } 
public static boolean METHOD_1 ( int from , int to ) { boolean VAR_1 = TYPE_1 . METHOD_2 ( from ) ; boolean VAR_2 = TYPE_1 . METHOD_2 ( to ) ; return ( ! VAR_1 ) && VAR_2 ; } 
public void METHOD_1 ( ) { assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( ) . toString ( ) ) ; assertEquals ( STRING_1 , VAR_2 . METHOD_2 ( ) . toString ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Throwable { TYPE_1 . METHOD_2 ( true ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_2 ( false ) ; METHOD_4 ( VAR_1 , 1 ) ; } 
public boolean METHOD_1 ( TYPE_1 x ) { VAR_1 . METHOD_2 ( TYPE_2 . FALSE ) ; return super . METHOD_1 ( x ) ; } 
private void METHOD_1 ( long VAR_1 , boolean VAR_2 ) { final long VAR_3 = VAR_4 ; VAR_4 = VAR_1 ; VAR_5 = VAR_1 ; if ( VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 ) ; } TYPE_1 . METHOD_3 ( VAR_3 ) ; } 
public void METHOD_1 ( int VAR_1 , int arg ) { METHOD_1 ( VAR_1 , arg , null ) ; } 
public int METHOD_1 ( ) { synchronized ( this ) { return TYPE_1 . METHOD_2 ( address ) ; } } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_1 . METHOD_2 ( STRING_3 , STRING_2 ) ; TYPE_1 . METHOD_2 ( STRING_5 , STRING_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.verify ( VAR_3 ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } 
public abstract java.lang.String METHOD_1 ( ) ; 
private int METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_5 . get ( VAR_1 ) . METHOD_2 ( ) ; } 
public static void assertEquals ( int expected , int VAR_1 ) { if ( VAR_1 != expected ) { throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; } } 
final native java.lang.Class < ? > METHOD_1 ( ) ; 
public static long METHOD_1 ( long value , int VAR_1 ) { return value < < ( VAR_1 & 3 ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ( TYPE_1 VAR_1 ) - > { VAR_2 = VAR_3 ; VAR_4 = VAR_3 ; } ) ; } 
protected boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_2 ( ) ; return true ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 url ) throws java.io.IOException { return new TYPE_3 ( url ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return true ; } 
public static TYPE_1 METHOD_1 ( int id , TYPE_2 ... VAR_1 ) { return new TYPE_1 ( id , false , ( - 1 ) , VAR_1 ) ; } 
public native char METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public boolean METHOD_1 ( com.android.jack.ir.ast.JDefinedClassOrInterface type ) { return METHOD_3 ( type ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 key , TYPE_1 value ) { return METHOD_1 ( key , value , false ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try { assertTrue ( TYPE_1 . METHOD_2 ( ) ) ; } finally { VAR_1 . METHOD_3 ( ) ; } } 
public java.util.Set < TYPE_1 > METHOD_1 ( ) { java.util.Set < TYPE_1 > VAR_1 = VAR_2 ; if ( VAR_1 == null ) { VAR_1 = new TYPE_2 ( ) ; VAR_2 = VAR_1 ; } return VAR_1 ; } 
private static native boolean METHOD_1 ( int address , java.lang.String text , int offset ) ; 
public void METHOD_1 ( int VAR_1 ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 2 ) ; } 
private void METHOD_1 ( TYPE_1 call ) { VAR_1 . METHOD_2 ( call ) ; if ( call . equals ( VAR_2 ) ) { METHOD_3 ( ) ; } } 
protected boolean METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return VAR_2 ; } 
public double METHOD_1 ( int VAR_1 ) { double result = d ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . METHOD_2 ( 3 , 4 ) ; } return result ; } 
public java.lang.Object METHOD_1 ( ) { try { return super . METHOD_1 ( ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( e ) ; } } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 . size ( ) ) == 0 ) { METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; } METHOD_5 ( VAR_5 class , VAR_6 ) ; } 
public static TYPE_1 METHOD_1 ( int index ) { TYPE_1 [ ] values = TYPE_1 . values ( ) ; if ( ( index >= 0 ) && ( index < ( values . length ) ) ) { return values [ index ] ; } return null ; } 
public void METHOD_1 ( TYPE_1 config ) { VAR_1 . set ( config , true ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_4 . METHOD_2 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return this ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { METHOD_1 ( VAR_1 , TYPE_2 . METHOD_2 ( ) , TYPE_2 . METHOD_3 ( ) ) ; } 
private synchronized void METHOD_1 ( ) { if ( VAR_1 ) { android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ; } android.os.Message msg = VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( msg ) ; } 
public TYPE_1 [ ] [ ] METHOD_1 ( ) { return super . METHOD_1 ( ) ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { Main . METHOD_3 ( new TYPE_2 ( STRING_1 , STRING_2 ) , new TYPE_2 ( STRING_3 , STRING_4 ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
private static boolean METHOD_1 ( TYPE_1 call ) { return ( call != null ) && ( TYPE_3 . METHOD_3 ( call . METHOD_4 ( ) ) ) ; } 
public abstract java.lang.String name ( ) ; 
public void METHOD_1 ( TYPE_1 VAR_2 ) { VAR_3 . METHOD_1 ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try ( TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , STRING_1 ) ) { try { VAR_1 . METHOD_2 ( VAR_3 ) ; fail ( ) ; } catch ( java.io.IOException expected ) { } } } 
protected void METHOD_1 ( int type , int arg , int size ) { METHOD_2 ( TYPE_1 . METHOD_3 ( in , type , arg ) ) ; } 
public void METHOD_1 ( char c , android.os.Message result ) { this . METHOD_1 ( c , result ) ; } 
private static TYPE_1 METHOD_1 ( int version ) throws TYPE_2 , TYPE_3 { TYPE_4 VAR_1 = TYPE_5 . METHOD_2 ( version ) ; if ( VAR_1 != null ) { VAR_2 . METHOD_3 ( VAR_1 ) ; } return VAR_2 . METHOD_4 ( ) ; } 
static void METHOD_1 ( android.os.Message msg , java.lang.Object ret ) { if ( msg != null ) { android.os.AsyncResult . METHOD_2 ( msg , ret , null ) ; msg . METHOD_3 ( ) ; } } 
public java.lang.Object METHOD_1 ( ) { return this ; } 
public int METHOD_1 ( android.os.Bundle VAR_1 ) throws android.os.RemoteException { return this . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) ; TYPE_1 . METHOD_3 ( INT_2 , VAR_1 ) ; VAR_2 . METHOD_4 ( true ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { return new TYPE_3 ( VAR_2 class ) . METHOD_2 ( new TYPE_4 ( ) , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { return METHOD_3 ( ) ; } 
public static long METHOD_1 ( long arg ) { return arg * INT_1 ; } 
public int METHOD_1 ( ) throws TYPE_1 { return VAR_1 . METHOD_3 ( ) ; } 
public boolean METHOD_1 ( long VAR_1 ) { if ( ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) { return VAR_2 . METHOD_1 ( VAR_3 , VAR_1 ) ; } return false ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 event ) { if ( ! ( VAR_2 ) ) { return ; } if ( ! ( VAR_3 . METHOD_1 ( event ) ) ) { super . METHOD_1 ( VAR_1 , event ) ; } } 
private void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_1 . METHOD_1 ( ) ; METHOD_2 ( ) ; } } 
public java.util.Set < TYPE_1 < TYPE_2 > > METHOD_1 ( ) { java.util.Set < TYPE_1 < TYPE_2 > > result = VAR_1 ; if ( result == null ) { VAR_1 = result = METHOD_2 ( ) ; } return result ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { assertTrue ( ( ( VAR_1 . size ( ) ) > 0 ) ) ; assertTrue ( ( ( VAR_1 . size ( ) ) < 10 ) ) ; } 
public java.lang.String getName ( ) { assert ( name ) != null ; return name ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( false , STRING_1 , true ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 e ) { } } 
public static int METHOD_1 ( boolean x ) { return x != false ? INT_1 : INT_2 ; } 
public void METHOD_1 ( final TYPE_1 < ? super TYPE_2 > VAR_1 ) throws java.lang.Exception { VAR_1 . METHOD_2 ( this ) ; for ( TYPE_3 VAR_2 : METHOD_3 ( false ) ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } } 
public static native long METHOD_1 ( long VAR_1 , TYPE_1 fd , TYPE_2 VAR_2 , int VAR_3 ) throws TYPE_3 , TYPE_4 , TYPE_5 ; 
public void METHOD_1 ( java.lang.String format , java.lang.Object ... args ) { } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_2 , true ) ; } 
public void METHOD_1 ( TYPE_1 t , java.lang.Throwable e ) { throw new TYPE_3 ( ) ; } 
public static < TYPE_2 > TYPE_3 < java.util.Map < ? , ? extends TYPE_2 > > METHOD_1 ( TYPE_3 < ? super TYPE_2 > VAR_1 ) { return new TYPE_4 < java.lang.Object , TYPE_2 > ( TYPE_4 . METHOD_3 ( ) , VAR_1 ) ; } 
void METHOD_1 ( java.lang.String uri , java.lang.String VAR_1 , java.lang.String VAR_2 , int VAR_3 , int VAR_4 ) throws TYPE_1 { if ( ( ( VAR_5 ) ++ ) > 0 ) { super . METHOD_1 ( uri , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } } 
public static boolean METHOD_1 ( ) { return true ; } 
static void METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , 0 ) ; } 
public static native boolean METHOD_1 ( long r , long a , long b ) ; 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , int flags ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , flags , null , null ) ; } 
private int METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; return ( VAR_1 . y ) + 5 ; } 
public boolean METHOD_1 ( ) { assert VAR_1 ; return VAR_2 ; } 
public static boolean METHOD_1 ( java.lang.String s ) { return s . equals ( STRING_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , true ) ; super . METHOD_1 ( ) ; } 
public void METHOD_1 ( java.lang.String id ) throws java.lang.Exception { for ( TYPE_1 a : VAR_1 ) { a . METHOD_2 ( id , VAR_2 . get ( id ) . VAR_3 , VAR_2 . get ( id ) . VAR_4 , null ) ; } } 
public java.lang.String METHOD_1 ( java.io.File VAR_1 ) { try { return TYPE_1 . METHOD_2 ( this , VAR_1 ) ; } catch ( java.io.IOException e ) { return STRING_1 ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
private float METHOD_1 ( long VAR_1 , long VAR_2 ) { return ( METHOD_2 ( VAR_2 ) ) - ( METHOD_2 ( VAR_1 ) ) ; } 
public char get ( int index ) { return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; } 
public static int METHOD_1 ( int value , int VAR_1 ) { int VAR_3 = VAR_1 & INT_1 ; return ( value > > VAR_3 ) + VAR_3 ; } 
public void METHOD_1 ( TYPE_1 listener ) throws android.os.RemoteException { } 
public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 , VAR_4 ) ) ; } 
public native void METHOD_1 ( java.lang.Object obj , double d ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public static int METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { return VAR_1 . METHOD_2 ( VAR_2 ) ; } 
public synchronized void METHOD_1 ( int VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , false , true , false ) ; } 
final void METHOD_1 ( int pos , long [ ] VAR_1 , int VAR_2 , int length ) { TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) ; } 
public void METHOD_1 ( java.lang.String id ) throws java.lang.Exception { for ( TYPE_1 a : VAR_1 ) { a . METHOD_2 ( id , VAR_2 . get ( id ) . request , METHOD_3 ( VAR_2 . get ( id ) ) , null ) ; } } 
public native void METHOD_1 ( java.lang.Object obj , short s ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_2 . start ( ) ; METHOD_4 ( true ) ; VAR_3 = false ; } 
public boolean METHOD_1 ( java.lang.String type ) { return VAR_2 . METHOD_2 ( type ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( VAR_2 , VAR_1 . METHOD_2 ( ) ) ; } 
public boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { } 
private void METHOD_1 ( ) { if ( VAR_1 ) android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ; android.content.Intent VAR_3 = new android.content.Intent ( VAR_4 ) ; METHOD_2 ( VAR_3 ) ; } 
TYPE_1 < TYPE_2 > METHOD_1 ( ) ; 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return new java.util.ArrayList ( VAR_1 ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_5 . METHOD_2 ( VAR_1 ) ; } 
void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 ) ; 
public TYPE_1 METHOD_1 ( ) { assert ! ( METHOD_2 ( ) ) ; return this ; } 
long length ( java.io.File VAR_1 ) ; 
public TYPE_1 METHOD_1 ( ) { return key ; } 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 format = new TYPE_2 ( STRING_1 , VAR_2 ) ; format . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return format . format ( new TYPE_3 ( VAR_1 . METHOD_4 ( ) ) ) ; } 
final void METHOD_1 ( int i , byte b ) { METHOD_2 ( i , b ) ; } 
public java.lang.Class < ? > METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( this ) ) { return null ; } return TYPE_1 . METHOD_3 ( this ) ; } 
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( this , VAR_1 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_4 ( VAR_2 , false ) ; } 
private void METHOD_1 ( TYPE_1 call ) { if ( VAR_1 . METHOD_2 ( call ) ) { VAR_1 . METHOD_3 ( call ) ; } call . METHOD_4 ( VAR_2 ) ; METHOD_5 ( call ) ; METHOD_6 ( ) ; } 
public static void METHOD_1 ( boolean VAR_1 , java.lang.String VAR_2 , boolean VAR_3 ) { if ( VAR_1 ) { TYPE_1 . assertTrue ( VAR_2 , VAR_3 ) ; } else { if ( ! VAR_3 ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 ) ; } } } 
public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) ; } 
int METHOD_1 ( ) { int VAR_1 = 0 ; for ( TYPE_1 VAR_3 : VAR_2 ) { if ( ! ( VAR_3 . METHOD_2 ( ) ) ) { VAR_1 ++ ; } } return VAR_1 ; } 
public void METHOD_1 ( ) { try { METHOD_2 ( ) ; } catch ( java.io.IOException e ) { android.util.Log . METHOD_3 ( VAR_1 . TAG , STRING_1 , e ) ; } } 
protected boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 . METHOD_2 ( ) ; return true ; } 
final long METHOD_1 ( int offset ) { return VAR_1 . METHOD_1 ( ( offset + ( address ) ) ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { long VAR_3 = TYPE_2 . METHOD_2 ( VAR_4 , VAR_1 , VAR_2 ) ; VAR_5 = new TYPE_3 ( this , VAR_3 ) ; return VAR_5 ; } 
public void METHOD_1 ( ) { android.util.Log.d ( VAR_1 . TAG , STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_3 , null ) ; METHOD_3 ( new TYPE_1 ( VAR_4 ) ) ; } 
public static double METHOD_1 ( ) { double a ; double b ; double c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a - b ; return c ; } 
public synchronized TYPE_1 METHOD_1 ( ) { long value = METHOD_2 ( ) ; if ( value == 0 ) { return VAR_1 ; } if ( ( VAR_2 ) != value ) mContext = new TYPE_2 ( value ) ; return mContext ; } 
native long METHOD_1 ( long VAR_1 , long [ ] VAR_2 , long [ ] src , long [ ] VAR_3 , long [ ] VAR_4 , long [ ] VAR_5 ) ; 
public static TYPE_1 METHOD_1 ( TYPE_2 context , TYPE_3 callback , int VAR_1 ) throws TYPE_5 { TYPE_1 VAR_3 = new TYPE_1 ( context , callback , VAR_1 ) ; VAR_3 . METHOD_2 ( ) ; return VAR_3 ; } 
public void METHOD_1 ( TYPE_1 method ) { assert method != null ; VAR_1 . METHOD_2 ( method ) ; } 
public static int METHOD_1 ( int arg ) { return arg / ( - 1 ) ; } 
public static int METHOD_1 ( int arg ) { int VAR_2 = ~ arg ; return VAR_2 + ( ~ VAR_2 ) ; } 
private static void METHOD_1 ( java.lang.String s , java.lang.Object ... args ) { if ( VAR_1 ) android.util.Log.d ( VAR_2 . TAG , java.lang.String.format ( s , args ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; throw new java.lang.RuntimeException ( STRING_1 ) ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_2 ) { } } } 
private static void METHOD_1 ( int [ ] expected , int [ ] VAR_1 ) { TYPE_1 . METHOD_2 ( expected , expected . length , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 element ) throws TYPE_2 { } 
static boolean METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , TYPE_1 src ) { TYPE_2 d = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( d == null ) { return false ; } return d . METHOD_3 ( VAR_2 , src ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 error ) { TYPE_2 request = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( request != null ) { request . METHOD_3 ( error ) ; METHOD_4 ( VAR_1 , request ) ; } } 
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { synchronized ( VAR_1 ) { log ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; } } } 
long METHOD_1 ( long VAR_1 ) { return METHOD_2 ( VAR_1 ) ; } 
void METHOD_1 ( int n ) { TYPE_2 . METHOD_3 ( this . VAR_1 , this . VAR_1 , n ) ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int count , float [ ] d , int VAR_4 ) ; 
public TYPE_1 METHOD_1 ( TYPE_2 key ) { if ( key . METHOD_2 ( STRING_1 ) ) { return VAR_2 ; } else if ( key . METHOD_2 ( STRING_2 ) ) { return VAR_3 ; } return null ; } 
public java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) . METHOD_1 ( ) ) == null ) { METHOD_2 ( ) . VAR_2 = TYPE_1 . METHOD_3 ( this ) ; } return METHOD_2 ( ) . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( device ) ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { Main . METHOD_3 ( new TYPE_2 ( ) ) ; Main . METHOD_3 ( new TYPE_3 ( ) ) ; Main . METHOD_3 ( new TYPE_4 ( ) ) ; } 
final float METHOD_1 ( int offset ) { return VAR_1 . METHOD_1 ( ( offset + ( address ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_3 ( VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { METHOD_3 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String name , int VAR_1 ) { return new TYPE_1 ( null , name , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . get ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 context , android.content.Intent VAR_1 ) { boolean VAR_2 = VAR_3 ; VAR_3 = ( VAR_1 . METHOD_2 ( VAR_4 , 0 ) ) != 0 ; if ( ( VAR_3 ) != VAR_2 ) { METHOD_3 ( false ) ; } } 
public int METHOD_1 ( java.lang.String VAR_1 , int subId , java.lang.String VAR_2 , TYPE_2 listener ) throws android.os.RemoteException { return 0 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( METHOD_2 ( ) , null , VAR_1 , VAR_2 , VAR_3 , VAR_4 , 0 ) ; fail ( STRING_1 ) ; } catch ( java.lang.IllegalArgumentException VAR_5 ) { } } 
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 e = new TYPE_2 ( ) ; try { e . METHOD_2 ( ( ( java.lang.Runnable ) ( null ) ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public abstract boolean METHOD_1 ( boolean VAR_1 ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( METHOD_2 ( ) , VAR_1 , null , VAR_2 , VAR_3 , VAR_4 , 0 ) ; fail ( STRING_1 ) ; } catch ( java.lang.IllegalArgumentException VAR_5 ) { } } 
void METHOD_1 ( ) throws java.io.IOException { if ( ( ( fd ) != null ) && ( fd . valid ( ) ) ) { METHOD_2 ( ) ; } super . METHOD_1 ( ) ; } 
private static void METHOD_1 ( TYPE_1 log , java.lang.String VAR_1 , java.lang.String VAR_2 ) { log . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 , VAR_3 ) ; } 
public TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( VAR_1 [ VAR_2 ] ) ) ; } 
abstract short METHOD_1 ( int index ) ; 
private synchronized void METHOD_1 ( ) { VAR_1 = 0 ; } 
protected TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 , null , null , VAR_4 , VAR_5 , VAR_6 ) ; } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_3 ) ; } 
public byte [ ] METHOD_1 ( java.lang.String path , java.lang.String name ) throws TYPE_1 { return os . METHOD_1 ( path , name ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } METHOD_3 ( ) ; VAR_2 = true ; } 
public static void METHOD_1 ( java.lang.String VAR_1 ) { } 
void METHOD_1 ( boolean VAR_1 , java.lang.String name , boolean VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , boolean VAR_6 ) ; 
native boolean METHOD_1 ( java.lang.String path , int VAR_1 , int VAR_2 , byte [ ] input , byte [ ] output , int VAR_3 ) ; 
protected void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , null ) ; } 
public java.lang.String METHOD_1 ( ) { return java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 ) ; } 
public synchronized void METHOD_1 ( TYPE_1 state ) { if ( VAR_1 ) android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + ( state . toString ( ) ) ) ) ; METHOD_2 ( false ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < java.lang.String > VAR_4 ) { throw new TYPE_3 ( ( STRING_1 + STRING_2 ) ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( ) ; } 
public java.util.Set < java.lang.String > METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 != null ) { return VAR_2 . METHOD_2 ( ) ; } return null ; } 
public static long METHOD_1 ( long arg ) { return ( arg > > INT_1 ) & INT_2 ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) , VAR_1 . METHOD_4 ( VAR_3 ) , ( ( VAR_1 . METHOD_3 ( VAR_4 ) ) != 0 ) ) ; } 
public java.io.File METHOD_1 ( ) { return VAR_1 ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { TYPE_1 VAR_2 = new TYPE_1 ( ) ; METHOD_1 ( 3 , STRING_1 , VAR_1 , VAR_2 , new TYPE_2 ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; return ( VAR_2 ) < ( VAR_3 ) ; } 
static boolean METHOD_1 ( long VAR_1 ) { TYPE_1 d = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( d == null ) { return false ; } return d . METHOD_3 ( ) ; } 
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.lang.String ... VAR_2 ) { METHOD_1 ( VAR_1 , false , false , VAR_2 ) ; } 
final long METHOD_1 ( ) { synchronized ( this ) { if ( ! ( VAR_1 ) ) { throw new java.lang.RuntimeException ( STRING_1 ) ; } long res = METHOD_2 ( ) ; METHOD_3 ( res ) ; return res ; } } 
public abstract java.util.List < java.lang.String > METHOD_1 ( ) ; 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 method ) { TYPE_3 m = METHOD_2 ( method ) ; if ( m == null ) { return null ; } return m . METHOD_1 ( ) ; } 
public static native byte [ ] [ ] METHOD_1 ( long VAR_1 ) ; 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) != null ) { for ( TYPE_1 f : VAR_2 ) { if ( f . METHOD_1 ( ) . equals ( VAR_1 ) ) { return f ; } } } return null ; } 
abstract void METHOD_1 ( int pos , float [ ] VAR_1 , int VAR_2 , int length ) ; 
public TYPE_1 METHOD_1 ( ) { return address ; } 
protected void METHOD_1 ( ) { VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) android.util.Log.v ( VAR_3 . TAG , STRING_1 ) ; METHOD_2 ( false ) ; } 
public void METHOD_1 ( ) { } 
public void METHOD_1 ( ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return ; } service . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( int c , int VAR_1 ) { return ( ( VAR_1 >= 0 ) && ( VAR_1 < ( VAR_2 . length ( ) ) ) ) && ( VAR_2 . get ( VAR_1 ) . METHOD_2 ( c ) ) ; } 
public void METHOD_1 ( java.lang.String expected , int VAR_1 ) throws java.lang.Exception { int VAR_2 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( expected ) . METHOD_4 ( ) ) ; org.junit.Assert.assertEquals ( VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( ) { try { java.lang.Integer [ ] VAR_1 = new java.lang.Integer [ VAR_2 ] ; new TYPE_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } } 
synchronized long METHOD_1 ( long [ ] VAR_1 , java.lang.String [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; } 
public static < TYPE_1 , TYPE_2 > TYPE_3 < TYPE_1 , TYPE_2 > METHOD_1 ( ) { return TYPE_3 . METHOD_1 ( 16 ) ; } 
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device , byte VAR_1 , java.lang.String VAR_2 ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( device , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 res ) { VAR_1 = new TYPE_2 ( mRS ) ; VAR_3 = new TYPE_3 ( mRS ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public static java.lang.String input ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { return ( ( java.lang.String ) ( TYPE_1 . METHOD_1 ( null , VAR_1 , VAR_3 , VAR_4 , null , null , VAR_2 ) ) ) ; } 
public boolean METHOD_1 ( java.lang.String name ) { return VAR_2 . METHOD_2 ( name ) ; } 
synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int count , short [ ] d , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 ) ; } 
public void METHOD_1 ( final int count ) throws TYPE_1 { METHOD_2 ( ) ; org.junit.Assert.assertEquals ( count , METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( null ) ; } 
public void METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String name , final java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , name , VAR_2 , true ) ; } 
private synchronized void METHOD_1 ( byte VAR_1 ) { if ( VAR_2 ) { android.util.Log.d ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ; } android.os.Message msg = VAR_4 . METHOD_2 ( VAR_5 ) ; msg.arg1 = VAR_1 ; VAR_4 . METHOD_3 ( msg ) ; } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 3 , 16 , false ) ; args.out = TYPE_3 . METHOD_3 ( args . inV , t ) ; } 
public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > args ) { METHOD_2 ( ) . METHOD_3 ( args ) ; } 
public static int METHOD_1 ( ) { double VAR_1 = VAR_2 ; return ( ( int ) ( VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; return new TYPE_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
public static int METHOD_1 ( int value , int VAR_1 ) { return value < < ( VAR_1 & INT_1 ) ; } 
public static java.lang.String METHOD_1 ( java.lang.Throwable error ) { return TYPE_1 . toString ( error . METHOD_2 ( ) ) . METHOD_3 ( STRING_1 , STRING_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . assertFalse ( VAR_1 . METHOD_2 ( null ) ) ; } 
public void run ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( this , VAR_2 , VAR_3 ) ; } } 
protected void METHOD_1 ( TYPE_1 < TYPE_2 > [ ] VAR_1 ) { this . VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , VAR_1 . length ) ; if ( VAR_3 ) { METHOD_4 ( ) ; } } 
public void METHOD_1 ( TYPE_1 listener ) { } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . log ( STRING_1 ) ; VAR_3 = null ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( ) ; } } 
public static boolean METHOD_1 ( java.lang.String s ) { return STRING_1 . equals ( s ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public static int METHOD_1 ( ) { int a ; int b ; int c ; a = 8 ; b = 3 ; c = a / b ; return c ; } 
protected void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( false ) ; } 
public void run ( ) { try { TYPE_2 . METHOD_2 ( ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_3 ) ; final int VAR_4 = 2 ; VAR_5 = METHOD_4 ( VAR_1 , VAR_2 , VAR_4 ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return VAR_1 ; } 
private static native java.lang.Class < ? > METHOD_1 ( java.lang.String name , java.lang.Class < ? > [ ] VAR_1 , TYPE_1 VAR_2 , TYPE_2 [ ] VAR_3 , java.lang.Class < ? > [ ] [ ] VAR_4 ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , STRING_1 , true ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 e ) { } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , null ) ; METHOD_3 ( VAR_3 , null ) ; } 
public boolean METHOD_1 ( int VAR_1 , int index ) { return ( ( index == ( this . index ) ) && ( VAR_1 >= ( VAR_2 ) ) ) && ( VAR_1 < ( ( VAR_2 ) + ( length ) ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String name ) { return VAR_1 . METHOD_2 ( VAR_2 class , name , VAR_3 , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; assertEquals ( INT_1 , VAR_1 . size ( ) ) ; } 
public int METHOD_1 ( java.lang.String name , byte [ ] data , int uid , int flags ) throws android.os.RemoteException ; 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == ( VAR_3 ) ) { return false ; } TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_6 , VAR_1 ) ; return true ; } 
native void METHOD_1 ( long VAR_1 , long VAR_2 , int src ) ; 
public void METHOD_1 ( ) { byte [ ] VAR_1 = new byte [ 4 ] ; TYPE_1 msg = METHOD_2 ( VAR_1 ) ; METHOD_3 ( STRING_1 , msg ) ; } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 , 0 , false ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , float ... VAR_2 ) throws java.lang.Throwable { METHOD_2 ( java.lang.String.format ( STRING_1 , VAR_1 ) ) ; METHOD_2 ( STRING_2 ) ; METHOD_3 ( ) ; METHOD_1 ( VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 config ) throws java.io.IOException , TYPE_2 , TYPE_3 { TYPE_4 VAR_1 = METHOD_2 ( config ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( new TYPE_2 ( ) , null , null , VAR_3 , false , true , FLOAT_1 , VAR_4 , ( ( TYPE_3 [ ] ) ( null ) ) ) ; } 
public int METHOD_1 ( java.lang.String VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; return METHOD_1 ( ) ; } 
public java.lang.String METHOD_1 ( java.lang.String name , java.lang.String value ) { return ( ( java.lang.String ) ( VAR_2 . METHOD_2 ( new TYPE_1 ( name ) , value ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; super . METHOD_1 ( ) ; } 
public void run ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( this , status , VAR_2 ) ; } } 
public boolean METHOD_1 ( TYPE_1 config ) { if ( VAR_1 ) { android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ; } TYPE_2 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( config ) ; } 
private final native void METHOD_1 ( int [ ] VAR_1 ) ; 
public static native long METHOD_1 ( java.lang.Object VAR_1 ) ; 
void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) ; 
private static native long METHOD_1 ( TYPE_1 VAR_1 ) ; 
public static void METHOD_1 ( java.lang.String name , java.lang.String arg ) { if ( VAR_1 ) TYPE_2 . METHOD_2 ( name , arg ) ; } 
protected abstract void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String text , TYPE_1 VAR_3 , TYPE_1 VAR_4 , TYPE_2 VAR_5 , java.lang.String VAR_6 , boolean VAR_7 ) ; 
protected void METHOD_1 ( ) { if ( VAR_1 ) { android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ; } if ( VAR_3 ) { VAR_4 . METHOD_1 ( ) ; VAR_3 = false ; } } 
public static void METHOD_1 ( java.lang.String [ ] args ) { Main . METHOD_3 ( new TYPE_2 ( ) , new TYPE_3 ( ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 callback , int VAR_2 , int action , int VAR_3 ) { return METHOD_1 ( VAR_1 , callback , VAR_2 , action , VAR_3 , METHOD_2 ( ) ) ; } 
public int METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , TYPE_1 callback ) throws android.os.RemoteException { return 0 ; } 
public TYPE_1 METHOD_1 ( java.lang.Object VAR_1 , TYPE_2 VAR_2 , int index , TYPE_3 listener ) { return TYPE_4 . METHOD_2 ( ) ; } 
boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( VAR_1 ) { assertTrue ( METHOD_2 ( VAR_2 ) ) ; } } 
static boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( ( VAR_1 . METHOD_2 ( STRING_1 ) ) || ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) && ( ! ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { TYPE_1 . i ( VAR_1 . TAG , STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; } } 
public boolean METHOD_1 ( double a ) { return METHOD_1 ( a , FLOAT_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_1 ( VAR_1 , new TYPE_1 ( INT_1 , 0 ) ) ; } 
public void METHOD_1 ( ) { } 
public void METHOD_1 ( ) { if ( ( ( uid ) != ( TYPE_1 . METHOD_2 ( ) ) ) && ( ( VAR_1 ) != ( TYPE_1 . METHOD_2 ( ) ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return VAR_1 == null ; } 
public boolean METHOD_1 ( TYPE_1 pkg ) { if ( ( VAR_1 . METHOD_2 ( pkg ) ) == ( VAR_2 ) ) { return VAR_1 . METHOD_3 ( ) . equals ( pkg . METHOD_3 ( ) ) ; } return false ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_2 , data ) ) ; VAR_2 . METHOD_4 ( ) ; } 
private void METHOD_1 ( TYPE_1 uri ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( uri , null ) ; } 
protected void METHOD_1 ( java.lang.Object [ ] VAR_1 , java.lang.Object VAR_2 , boolean VAR_3 , java.lang.String VAR_4 , java.lang.String expected ) throws java.lang.Exception { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , expected , null ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_1 ( VAR_1 , 0 , 0 , 0 ) ; } 
public boolean verify ( int [ ] VAR_1 , int offset , int VAR_2 , int VAR_3 , int VAR_4 ) { return true ; } 
public boolean METHOD_1 ( TYPE_1 type ) { return true ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > error ( TYPE_3 error ) { return new TYPE_2 ( error ) ; } 
public void METHOD_1 ( TYPE_1 context , android.content.Intent VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) { android.util.Log.v ( VAR_2 . TAG , STRING_1 ) ; } this . METHOD_2 ( ) ; VAR_3 = VAR_4 ; } 
public TYPE_1 METHOD_1 ( TYPE_2 path ) { return new TYPE_3 ( VAR_1 , new TYPE_4 ( path . METHOD_2 ( METHOD_3 ( ) ) ) , VAR_2 , this ) ; } 
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { final int VAR_3 = VAR_4 ; VAR_4 = VAR_5 . METHOD_2 ( ) ; if ( ( VAR_4 ) != VAR_3 ) { METHOD_3 ( false ) ; } } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_1 . c ( STRING_2 ) . c ( STRING_3 ) . METHOD_3 ( ) ; org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . toString ( ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; } 
public java.io.File METHOD_1 ( ) { return null ; } 
public java.lang.String METHOD_1 ( ) { return STRING_1 ; } 
public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { java.lang.Object value = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; if ( ! ( value instanceof TYPE_1 ) ) { return null ; } return ( ( TYPE_1 ) ( value ) ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 locale , java.lang.String VAR_1 , TYPE_2 VAR_2 ) { return TYPE_3 . METHOD_1 ( locale , VAR_1 , VAR_2 , 0 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; } 
public static void test ( ) { int i = 0 ; assertTrue ( ( ( i = 2 ) == 2 ) ) ; assertTrue ( ( i == 2 ) ) ; } 
public int METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { } 
public static TYPE_1 METHOD_1 ( int id , int VAR_1 , TYPE_2 ... VAR_2 ) { return new TYPE_1 ( id , false , VAR_1 , VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( this ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public void error ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_3 = METHOD_1 ( VAR_2 ) ; TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) ; METHOD_2 ( VAR_1 , VAR_3 ) ; } 
public void run ( ) { TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_3 , int VAR_4 ) { TYPE_2 VAR_5 = VAR_1 . METHOD_2 ( ) ; METHOD_4 ( VAR_1 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_3 ( VAR_5 ) ; } 
public void METHOD_1 ( TYPE_1 context , android.content.Intent VAR_1 ) { android.util.Log . i ( VAR_2 , STRING_1 ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( ( ( java.lang.String ) ( null ) ) ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
TYPE_1 METHOD_1 ( ) { return location ; } 
public java.lang.String METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; } 
private void METHOD_1 ( ) { org.junit.Assert.assertEquals ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; org.junit.Assert.assertEquals ( VAR_3 . METHOD_2 ( ) , VAR_2 . METHOD_4 ( ) ) ; } 
public static long METHOD_1 ( ) { long a ; long b ; long c ; a = INT_1 ; b = INT_2 ; c = a % b ; return c ; } 
public TYPE_1 METHOD_1 ( TYPE_1 ... args ) { TYPE_2 VAR_1 ; try { VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; } catch ( TYPE_3 e ) { VAR_1 = null ; } VAR_3 = VAR_1 ; return null ; } 
protected static int [ ] METHOD_1 ( int VAR_1 , int count ) throws TYPE_1 { int [ ] VAR_2 = new int [ count ] ; if ( count > 0 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , 0 ) ; } return VAR_2 ; } 
public final byte [ ] METHOD_1 ( ) { return TYPE_1 . METHOD_3 ( key . METHOD_4 ( ) ) ; } 
public void run ( ) { VAR_1 . METHOD_1 ( 1 , METHOD_2 ( 1 ) ) ; VAR_1 . METHOD_1 ( 1 , METHOD_2 ( 1 ) ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.IllegalArgumentException ( STRING_1 ) ; } return new TYPE_1 ( VAR_1 , TYPE_3 . METHOD_2 ( ) ) ; } 
void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_1 ( TYPE_1 e ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , null , null ) ; } 
public abstract void METHOD_1 ( java.lang.String url ) ; 
private void METHOD_1 ( int n ) { while ( n > 0 ) { device . METHOD_2 ( ) ; n -- ; } } 
public static int METHOD_1 ( double d ) { return ( d > FLOAT_1 ) != false ? INT_1 : INT_2 ; } 
public java.lang.Object expected ( ) { return true ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; return VAR_1 [ VAR_2 ] ; } 
public void METHOD_1 ( TYPE_1 event ) { if ( event . METHOD_2 ( ) . equals ( VAR_1 ) ) { VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , METHOD_5 ( ) ) ; } super . METHOD_1 ( event ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = true ; return null ; } 
public boolean METHOD_1 ( ) { switch ( VAR_1 ) { case VAR_3 : case VAR_4 : { return false ; } } return true ; } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( 5 ) ; try { c . METHOD_2 ( null , VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } } 
public static TYPE_2 < java.lang.Object > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_3 < java.lang.Object > ( VAR_1 ) ; } 
public java.io.File METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_3 ) { return new java.io.File ( VAR_1 , METHOD_2 ( ) ) ; } 
public double METHOD_1 ( ) { return METHOD_1 ( 1 ) ; } 
public static int METHOD_1 ( int arg1 , int VAR_1 ) { return - ( arg1 - VAR_1 ) ; } 
public void METHOD_1 ( ) { if ( VAR_2 . METHOD_2 ( call ) ) { TYPE_1 . i ( this , STRING_1 , call ) ; call . METHOD_3 ( ) ; } } 
protected void METHOD_1 ( ) { } 
public void METHOD_1 ( TYPE_1 e ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , null , null , null ) ; } 
public static void METHOD_1 ( java.lang.String key , java.lang.String value ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( key , value ) ; } 
void METHOD_1 ( int VAR_1 ) { if ( VAR_2 ) { android.util.Log.d ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ; } METHOD_2 ( VAR_1 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 { return METHOD_2 ( VAR_1 , null , VAR_2 , VAR_3 , false ) ; } 
public void config ( java.lang.String msg ) { log ( TYPE_1 , msg ) ; } 
public void run ( ) { if ( VAR_1 . METHOD_1 ( ) ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( true ) ; } } 
synchronized long METHOD_1 ( long [ ] VAR_1 , java.lang.String [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; } 
java.lang.String METHOD_1 ( java.lang.String VAR_1 ) ; 
static TYPE_1 METHOD_1 ( TYPE_1 a , int n ) { TYPE_1 r = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , n ) ; return r ; } 
public final java.lang.String getName ( ) { return name ; } 
public void run ( ) { TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) ; } 
final void METHOD_1 ( int i , float x ) { METHOD_2 ( METHOD_3 ( i ) , x ) ; } 
public void METHOD_1 ( com.android.jack.ir.ast.JMethod method , TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_1 ( ( ( TYPE_2 ) ( method ) ) , VAR_1 ) ; } 
abstract void METHOD_1 ( int index , char value ) ; 
public final native void set ( java.lang.Object ... args ) ; 
public void METHOD_1 ( ) throws TYPE_1 { try { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 ) ; VAR_1 . METHOD_1 ( ) ; } catch ( java.io.IOException e ) { throw new TYPE_1 ( e.getMessage ( ) , e ) ; } } 
public void METHOD_1 ( java.io.File out , boolean VAR_1 , java.io.File ... VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_2 ) ; METHOD_3 ( out , VAR_1 ) ; run ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 s , java.lang.String VAR_1 , int VAR_2 , boolean VAR_3 ) throws java.io.IOException { VAR_4 . set ( VAR_1 ) ; return ( ( TYPE_1 ) ( VAR_5 . METHOD_1 ( s , VAR_1 , VAR_2 , VAR_3 ) ) ) ; } 
public boolean METHOD_1 ( java.lang.Object VAR_1 ) { try { return ( VAR_1 != null ) && ( ( METHOD_2 ( VAR_1 ) ) >= 0 ) ; } catch ( TYPE_1 e ) { return false ; } } 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return new java.io.File ( VAR_1 ) . getName ( ) ; } 
public java.io.File METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 . METHOD_1 ( ) ; } return ( VAR_2 ) == null ? null : VAR_2 . METHOD_1 ( ) ; } 
public final void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( this ) ; TYPE_2 VAR_2 = METHOD_3 ( ) ; if ( VAR_2 != null ) { VAR_1 . METHOD_4 ( null , VAR_2 ) ; } } 
private static int METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; return ( ( VAR_1 . size ( ) ) * ( VAR_2 ) ) + 4 ; } 
public int METHOD_1 ( ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return 0 ; } return service . METHOD_1 ( ) ; } 
public void METHOD_1 ( java.lang.String ... args ) throws TYPE_1 { METHOD_1 ( VAR_1 , null , TYPE_2 . METHOD_2 ( args ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , true , false , STRING_1 , ( STRING_2 + ( STRING_3 + STRING_4 ) ) , false ) ; } 
private static native void METHOD_1 ( java.lang.String field , java.lang.String VAR_2 , java.lang.Object VAR_3 ) ; 
public void METHOD_1 ( int VAR_2 , android.os.Message VAR_3 ) { } 
public boolean METHOD_1 ( int version ) { return version >= 2 ; } 
public java.lang.String toString ( ) { return ( STRING_1 + STRING_2 ) + ( value . toString ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return null ; } return VAR_1 . METHOD_2 ( ) . name ( ) ; } 
public void METHOD_1 ( int VAR_1 ) { if ( VAR_2 ) { TYPE_1 . log ( ( STRING_1 + VAR_1 ) ) ; } if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( VAR_1 ) ; } } 
public static void METHOD_1 ( TYPE_1 out , java.lang.String s ) throws java.io.IOException { out . METHOD_2 ( s ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.io.File VAR_2 , java.io.File VAR_3 ) throws java.io.IOException { METHOD_2 ( VAR_1 , VAR_2 , METHOD_3 ( VAR_3 ) ) ; } 
public static TYPE_1 METHOD_1 ( int VAR_1 , long VAR_2 ) { return new TYPE_2 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 t , java.lang.Throwable e ) { if ( e instanceof TYPE_2 ) { VAR_1 [ 0 ] = true ; } super . METHOD_1 ( t , e ) ; } 
public static long METHOD_1 ( int id ) { VAR_1 . METHOD_2 ( ) ; try { return TYPE_1 . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( id , VAR_2 ) ) ; } finally { VAR_1 . METHOD_6 ( ) ; } } 
public void METHOD_1 ( long VAR_1 , long VAR_2 ) { VAR_3 = VAR_4 . get ( ) ; } 
public synchronized boolean METHOD_1 ( android.bluetooth.BluetoothDevice device , TYPE_1 VAR_1 ) { boolean VAR_2 = VAR_3 . METHOD_1 ( device , this ) ; if ( VAR_2 ) { VAR_4 = device ; VAR_5 = VAR_1 ; } return VAR_2 ; } 
public long METHOD_1 ( TYPE_1 VAR_1 ) { int index = VAR_1 . METHOD_2 ( ) ; return ( 0 <= index ) && ( index < ( VAR_2 . length ) ) ? VAR_2 [ VAR_1 . METHOD_2 ( ) ] : 0 ; } 
public java.lang.String METHOD_1 ( java.lang.String key ) { return device . METHOD_2 ( key ) ; } 
public static void METHOD_1 ( boolean VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 = VAR_1 ; if ( ! VAR_1 ) { TYPE_1 . METHOD_3 ( ) ; } } } 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws android.os.RemoteException { } 
public java.util.List < android.bluetooth.BluetoothDevice > METHOD_1 ( ) { METHOD_2 ( VAR_1 , STRING_1 ) ; int [ ] VAR_2 = new int [ ] { VAR_3 } ; return METHOD_3 ( VAR_2 ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_4 ( ) ; } } 
public boolean METHOD_1 ( java.lang.String [ ] VAR_1 ) { TYPE_1 config = TYPE_1 . METHOD_3 ( VAR_1 ) ; if ( config == null ) { return false ; } METHOD_1 ( config ) ; return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_3 ( true , STRING_3 ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 e ) { } } 
int METHOD_1 ( android.bluetooth.BluetoothDevice device ) { return VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 listener ) throws android.os.RemoteException { METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 , VAR_4 , listener ) ; } 
public synchronized boolean METHOD_1 ( ) { return ( ( VAR_1 . METHOD_2 ( ) ) > 0 ) || ( ( VAR_1 . METHOD_3 ( ) ) > 0 ) ; } 
public void run ( ) { VAR_1 . METHOD_1 ( ) ; try { METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; } catch ( TYPE_1 VAR_3 ) { } catch ( java.lang.Throwable t ) { METHOD_4 ( t ) ; } throw new java.lang.RuntimeException ( ) ; } 
public void run ( ) { VAR_1 . METHOD_1 ( 1 , METHOD_2 ( 1 ) ) ; } 
static void METHOD_1 ( long VAR_1 , int src ) { TYPE_1 . METHOD_2 ( VAR_1 , src , null ) ; } 
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( false ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; try { VAR_1 . METHOD_3 ( null ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_3 ) { } } 
public void run ( ) { while ( VAR_1 . METHOD_1 ( ) ) { java.lang.String line = VAR_1 . METHOD_3 ( ) ; result . METHOD_2 ( line ) ; } } 
public boolean METHOD_1 ( int VAR_1 ) { if ( ! ( VAR_2 ) ) { throw new java.lang.RuntimeException ( ( ( VAR_3 . TAG ) + STRING_1 ) ) ; } return METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 t = new TYPE_1 ( null ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public static native int METHOD_1 ( long VAR_1 ) ; 
public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 > 0 ) { VAR_2 -= VAR_1 ; if ( ( VAR_2 ) < 0 ) { VAR_2 = 0 ; } } } 
synchronized void METHOD_1 ( long id , java.lang.Object d , TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , d , VAR_2 ) ; } 
public boolean METHOD_1 ( ) { return super . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 < ? super TYPE_2 > VAR_1 ) throws java.lang.Exception { VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } } 
public TYPE_1 METHOD_1 ( ) { assert ( VAR_1 ) != null ; return VAR_1 ; } 
protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } } 
final void METHOD_1 ( int pos , float [ ] src , int VAR_1 , int length ) { TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) ; } 
public double METHOD_1 ( int VAR_1 ) { double result = d ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . log ( d ) ; } return result ; } 
public TYPE_1 < java.lang.Integer , java.lang.Integer > METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
native long METHOD_1 ( long VAR_1 , long id ) ; 
public int METHOD_1 ( ) throws android.os.RemoteException { return this . METHOD_1 ( ) ; } 
public void METHOD_1 ( android.os.Bundle VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; mRS = TYPE_1 . METHOD_2 ( this ) ; TYPE_2 = new TYPE_3 ( this ) ; TYPE_2 . METHOD_3 ( mRS ) ; } 
static void METHOD_1 ( java.lang.String VAR_1 ) { } 
public void run ( com.android.jack.ir.ast.JDefinedClassOrInterface t ) throws java.lang.Exception { if ( METHOD_1 ( t ) ) { t . METHOD_3 ( new TYPE_2 ( ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( this ) ; VAR_1 = TYPE_2 . METHOD_3 ( VAR_2 class ) ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Throwable { Main . METHOD_2 ( ) ; Main . METHOD_3 ( ) ; } 
public static float METHOD_1 ( ) { float a ; float b ; float c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a + b ; return c ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = true ; assertEquals ( STRING_1 , METHOD_2 ( STRING_3 , STRING_4 ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; } 
public synchronized boolean METHOD_1 ( ) { return VAR_1 ; } 
public static int METHOD_1 ( int arg ) { return ( 5 - arg ) + 6 ; } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , getName ( ) , METHOD_2 ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , false , false , STRING_1 , ( STRING_2 + ( STRING_3 + STRING_4 ) ) , false ) ; } 
public abstract void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 location , java.lang.String VAR_2 ) ; 
public static short METHOD_1 ( int value ) { return ( ( short ) ( value & INT_1 ) ) ; } 
public static void METHOD_1 ( float [ ] a ) { TYPE_1 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) , null , 0 , 0 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.lang.Exception { } 
public static native long METHOD_1 ( ) ; 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 &= ~ ( VAR_3 ) ; java.util.List < TYPE_2 > VAR_4 = VAR_5 ; for ( TYPE_2 VAR_6 : VAR_4 ) { VAR_7 &= ~ ( VAR_3 ) ; METHOD_2 ( VAR_6 , VAR_1 ) ; } } 
private int METHOD_1 ( ) { return VAR_1 . get ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; assertEquals ( STRING_1 , METHOD_3 ( STRING_3 , STRING_4 ) ) ; } 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 < TYPE_4 > VAR_1 ) ; 
public static native long METHOD_1 ( int VAR_1 , byte [ ] VAR_2 , byte [ ] VAR_3 , byte [ ] p , byte [ ] VAR_4 ) ; 
public void METHOD_1 ( java.lang.String name ) { } 
abstract void METHOD_1 ( int pos , int [ ] VAR_1 , int VAR_2 , int length ) ; 
public static int METHOD_1 ( boolean x , boolean y ) { if ( x ) { return 1 ; } else if ( y ) { return 2 ; } else { return 3 ; } } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } return true ; } 
public void METHOD_1 ( TYPE_1 field ) { assert field != null ; VAR_1 . METHOD_2 ( field ) ; } 
public int METHOD_1 ( int VAR_1 , int action , java.lang.String [ ] VAR_2 , int VAR_3 ) throws android.os.RemoteException { return this . METHOD_1 ( VAR_1 , action , VAR_2 , VAR_3 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 context , int VAR_1 , int VAR_2 ) throws java.io.IOException { return new TYPE_1 ( context , METHOD_2 ( ) , METHOD_2 ( ) , METHOD_3 ( VAR_2 ) , METHOD_3 ( VAR_2 ) , VAR_1 , false ) ; } 
protected void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 location , java.lang.String VAR_3 ) { } 
public static void METHOD_1 ( ) throws java.lang.Exception { java.lang.Class < ? > c = VAR_1 class ; TYPE_1 VAR_2 = c . METHOD_2 ( ) ; java.lang.Object obj = VAR_2 . METHOD_3 ( ) ; } 
public final void METHOD_1 ( ) { VAR_1 . METHOD_3 ( ( VAR_2 ) - > VAR_2 . METHOD_4 ( this ) ) ; } 
public byte [ ] METHOD_1 ( ) { return TYPE_1 . METHOD_3 ( key . METHOD_4 ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { java.io.File VAR_1 = VAR_2 . METHOD_2 ( ) ; return VAR_3 . METHOD_3 ( VAR_1 ) ; } 
public void type ( java.lang.String VAR_1 ) { try { VAR_2 . type ( VAR_1 ) ; } catch ( java.io.IOException e ) { TYPE_1 . log ( VAR_3 , ( STRING_1 + VAR_1 ) , e ) ; } } 
private int METHOD_1 ( ) { return ( VAR_1 ) >= 10 ? VAR_2 : VAR_3 ; } 
int METHOD_1 ( ) { return VAR_2 ; } 
public void METHOD_1 ( int VAR_1 ) { } 
public boolean METHOD_1 ( long VAR_1 ) throws TYPE_1 { return VAR_2 . METHOD_2 ( 1 , VAR_1 ) ; } 
public static void METHOD_1 ( java.lang.String [ ] VAR_1 ) { org.junit.Assert.assertEquals ( VAR_2 , TYPE_1 . METHOD_2 ( VAR_1 ) ) ; } 
private native boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , byte [ ] address ) ; 
private java.lang.String format ( long number , TYPE_1 VAR_1 ) { TYPE_2 result = new TYPE_2 ( ) ; VAR_1 . format ( number , result , 0 , 0 ) ; METHOD_1 ( result , VAR_1 ) ; return result . toString ( ) ; } 
public static void METHOD_1 ( TYPE_1 context ) { TYPE_2 . METHOD_2 ( VAR_1 . TAG ) ; TYPE_2 . METHOD_3 ( context ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_6 ( METHOD_7 ( ) ) ; METHOD_8 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 s = new TYPE_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 , s ) ; s . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; s . METHOD_6 ( ) ; } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 , java.io.IOException { return new TYPE_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } super . METHOD_1 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; } 
public static void METHOD_1 ( double [ ] a ) { TYPE_1 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) , null , 0 , 0 ) ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int w , int h , int VAR_6 , int [ ] d , int VAR_7 ) ; 
public int METHOD_1 ( int VAR_1 , int action , java.lang.String [ ] VAR_2 ) throws android.os.RemoteException { return this . METHOD_1 ( VAR_1 , action , VAR_2 ) ; } 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_4 VAR_2 ) ; 
public void METHOD_1 ( ) { METHOD_2 ( INT_1 , 0 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_2 != null ) && ( VAR_2 . METHOD_3 ( ) ) ) { return VAR_2 ; } return null ; } 
static boolean METHOD_1 ( int VAR_1 , int field ) { return ( VAR_1 & ( 1 < < field ) ) != 0 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; if ( VAR_2 . METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( VAR_2 ) ; } } 
protected static TYPE_1 METHOD_1 ( java.lang.String VAR_2 , TYPE_3 VAR_3 ) { synchronized ( VAR_4 ) { VAR_4 . METHOD_2 ( VAR_2 , VAR_3 ) ; return TYPE_4 . get ( VAR_4 ) ; } } 
public int get ( int index ) { return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 service = METHOD_2 ( ) ; if ( service == null ) { return ; } service . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_1 ( ) ; } } 
public void METHOD_1 ( TYPE_1 e ) { METHOD_2 ( ) ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_1 . METHOD_1 ( VAR_2 ) ; } 
public int METHOD_1 ( ) { return VAR_1 ; } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return VAR_2 ; } synchronized ( VAR_1 ) { return VAR_2 ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { METHOD_1 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) ; } 
public static double METHOD_1 ( ) { long VAR_1 = INT_1 ; return ( ( double ) ( VAR_1 ) ) ; } 
public static synchronized TYPE_1 METHOD_1 ( java.lang.String name ) { if ( name == null ) { return null ; } return VAR_2 . get ( name ) ; } 
public int METHOD_1 ( ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return VAR_1 ; } return service . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_3 ( STRING_1 , VAR_1 ) ; METHOD_3 ( STRING_2 , VAR_1 ) ; } 
public static void METHOD_1 ( TYPE_1 context ) { TYPE_2 . METHOD_2 ( ) ; context . METHOD_3 ( ) . METHOD_4 ( TYPE_3 . METHOD_5 ( context . METHOD_6 ( ) ) , null , null ) ; } 
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return ; } int VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; org.junit.Assert.assertEquals ( VAR_2 , VAR_3 . METHOD_2 ( ) ) ; } 
protected abstract TYPE_1 METHOD_1 ( ) ; 
public static void METHOD_1 ( ) throws java.lang.Exception { } 
public java.util.List < TYPE_1 > METHOD_1 ( android.content.Intent VAR_1 , java.lang.String VAR_2 , boolean VAR_3 , int userId ) { VAR_4 = ( VAR_3 ) ? VAR_5 : 0 ; return super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , userId ) ; } 
public void METHOD_1 ( int size ) { this . size = size ; } 
public synchronized void METHOD_1 ( TYPE_1 test , java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( test ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) ) ; } 
public TYPE_1 [ ] METHOD_1 ( ) { try { return VAR_1 . METHOD_1 ( ) ; } catch ( java.lang.Throwable t ) { return new TYPE_1 [ 0 ] ; } } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 , true ) ; return this ; } 
private final native void METHOD_1 ( byte [ ] VAR_1 ) ; 
public void METHOD_1 ( TYPE_1 e ) { int VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_2 ) ; } 
public java.lang.Object METHOD_1 ( ) throws TYPE_1 { return super . METHOD_1 ( ) ; } 
public java.util.List < android.bluetooth.BluetoothDevice > METHOD_1 ( ) { if ( VAR_1 ) { android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ; } return METHOD_2 ( new int [ ] { VAR_3 } ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String name ) { TYPE_1 VAR_1 = super . METHOD_1 ( name ) ; if ( VAR_1 == null ) { return VAR_1 ; } return new TYPE_2 ( VAR_1 , this ) ; } 
private void METHOD_1 ( ) { METHOD_1 ( false , false ) ; } 
public java.lang.Object METHOD_1 ( ) { long VAR_1 = TYPE_1 . METHOD_2 ( this . address ) ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , this . type ) ; VAR_3 = this . VAR_4 ; VAR_5 = this . VAR_6 ; return VAR_2 ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
protected void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 location , java.lang.String VAR_3 ) { if ( VAR_1 == ( VAR_4 ) ) { assertNotNull ( VAR_3 , TYPE_5 . METHOD_2 ( VAR_3 , VAR_5 ) ) ; } } 
public TYPE_1 METHOD_1 ( java.lang.String type , TYPE_2 VAR_1 ) { if ( ! ( TYPE_3 . equals ( type ) ) ) { throw new java.lang.IllegalArgumentException ( STRING_1 ) ; } return new TYPE_4 ( true ) ; } 
public boolean METHOD_1 ( ) { try { VAR_2 . METHOD_1 ( null , null ) ; return true ; } catch ( android.os.RemoteException e ) { return false ; } } 
public java.lang.String getMessage ( ) { return ( ( METHOD_1 ( ) . getMessage ( ) ) + STRING_1 ) + ( VAR_1 ) ; } 
public long METHOD_1 ( long c ) throws TYPE_1 { long s = super . METHOD_1 ( c ) ; TYPE_2 . METHOD_2 ( s , TYPE_3 . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( s , VAR_1 ) ; return s ; } 
static native TYPE_1 [ ] METHOD_1 ( java.lang.Class < ? > c , boolean VAR_2 ) ; 
native boolean METHOD_1 ( java.lang.String path , int VAR_1 , int VAR_2 , byte [ ] input , byte [ ] output , boolean VAR_3 ) ; 
public void METHOD_1 ( int VAR_1 , java.lang.String address ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) return ; service . METHOD_1 ( VAR_1 , address ) ; } 
private boolean METHOD_1 ( ) { return ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) && ( ! ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) ; } 
private void METHOD_1 ( java.lang.StringBuilder sb , int x ) { if ( x < 10 ) { sb.append ( CHAR_1 ) ; } sb.append ( x ) ; } 
public static TYPE_1 METHOD_1 ( final long value ) { return VAR_1 . get ( value ) ; } 
public int METHOD_1 ( int index , int VAR_1 ) { if ( ( index < 0 ) || ( index > ( length ( ) ) ) ) { throw new TYPE_1 ( ) ; } return TYPE_2 . METHOD_1 ( this , index , VAR_1 ) ; } 
public static int METHOD_1 ( int arg ) { return arg | 0 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; assertEquals ( STRING_2 , METHOD_2 ( VAR_1 , STRING_3 ) ) ; assertEquals ( STRING_4 , METHOD_2 ( VAR_1 , STRING_5 ) ) ; } 
private boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , TYPE_1 . METHOD_3 ( STRING_1 ) , false ) ; } 
public synchronized TYPE_1 METHOD_1 ( java.lang.Object key , TYPE_1 VAR_1 ) { TYPE_1 result = get ( key ) ; return null == result ? VAR_1 : result ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , STRING_2 , 1 , 12 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; } 
public int size ( ) { return size ; } 
public TYPE_1 METHOD_1 ( int index ) { return null ; } 
public void METHOD_1 ( long VAR_1 , int VAR_2 ) { VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) throws android.os.RemoteException { synchronized ( VAR_3 ) { try { return this . METHOD_1 ( VAR_1 , VAR_2 ) ; } catch ( java.lang.Exception e ) { throw new android.os.RemoteException ( e.getMessage ( ) ) ; } } } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { android.util.Log.d ( VAR_3 . TAG , STRING_1 ) ; } 
private java.lang.String METHOD_1 ( int length ) throws java.io.IOException { byte [ ] b = new byte [ length ] ; VAR_1 . METHOD_2 ( b ) ; return new java.lang.String ( b , STRING_1 ) ; } 
void METHOD_1 ( ) { for ( TYPE_1 call : VAR_1 ) { call . METHOD_2 ( ) ; } VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; } 
abstract void METHOD_1 ( int index , double value ) ; 
public int METHOD_1 ( android.bluetooth.BluetoothDevice device ) { METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( device ) ; if ( VAR_2 == null ) { return VAR_4 ; } return VAR_2 . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_2 ) throws android.os.RemoteException { return null ; } 
void METHOD_1 ( long VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( 5 ) ; try { c . METHOD_2 ( STRING_1 , null , STRING_2 ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public boolean METHOD_1 ( java.lang.Throwable t ) { return VAR_1 . METHOD_1 ( t ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_2 ) ) { METHOD_4 ( ) ; METHOD_5 ( ) ; } } 
public void METHOD_1 ( ) throws TYPE_2 { synchronized ( VAR_1 ) { if ( VAR_2 ) { return ; } METHOD_4 ( TYPE_3 . METHOD_3 ( ) ) ; METHOD_5 ( ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws android.os.RemoteException { synchronized ( VAR_2 ) { TYPE_4 s = this . METHOD_1 ( VAR_1 ) ; return s != null ? s . METHOD_2 ( ) : null ; } } 
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) && ( VAR_2 ) ) { return true ; } if ( METHOD_2 ( ) ) { if ( STRING_1 . equals ( METHOD_3 ( ) ) ) { return true ; } } return false ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , VAR_3 , METHOD_3 ( ) ) ; return TYPE_3 . METHOD_2 ( METHOD_3 ( ) , VAR_2 ) ; } 
final void METHOD_1 ( int pos , long [ ] src , int VAR_1 , int length ) { TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { Main . METHOD_3 ( ) ; Main . METHOD_4 ( ) ; } 
public static TYPE_1 METHOD_1 ( long VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; } 
protected void METHOD_1 ( byte b ) throws TYPE_1 { } 
public void METHOD_1 ( ) throws java.io.IOException { synchronized ( VAR_1 ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_1 ( ) ; } } } 
public void METHOD_1 ( TYPE_1 callback ) { callback . METHOD_2 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 b ) { VAR_1 = b . METHOD_2 ( s . METHOD_3 ( ) , FLOAT_1 ) ; return VAR_1 ; } 
public TYPE_1 < TYPE_2 < TYPE_3 , TYPE_4 , TYPE_5 > > METHOD_1 ( ) { return ( ( TYPE_1 < TYPE_2 < TYPE_3 , TYPE_4 , TYPE_5 > > ) ( super . METHOD_1 ( ) ) ) ; } 
private java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( VAR_2 ) ; } 
protected void loge ( java.lang.String s , java.lang.Exception e ) { if ( VAR_1 ) TYPE_1 . e ( VAR_2 , s , e ) ; } 
public TYPE_1 < ? > . TYPE_2 < TYPE_3 > METHOD_1 ( TYPE_4 context ) { return new TYPE_2 < TYPE_3 > ( context , this . VAR_1 . METHOD_2 ( context , value ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 == null ) { return null ; } return new TYPE_3 ( VAR_1 ) ; } 
static int METHOD_1 ( TYPE_1 a , int w ) { return TYPE_2 . METHOD_2 ( VAR_2 , w ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( STRING_1 , TYPE_2 . METHOD_4 ( ) ) ; VAR_3 = VAR_1 . METHOD_3 ( STRING_2 , TYPE_2 . METHOD_4 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_3 ( METHOD_2 ( VAR_1 ) ) ; } 
public void METHOD_1 ( TYPE_1 call , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { METHOD_3 ( call ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , boolean VAR_3 ) { TYPE_1 VAR_4 = super . METHOD_1 ( VAR_1 , VAR_6 . METHOD_2 ( VAR_2 ) , VAR_3 ) ; return VAR_4 == null ? VAR_4 : new TYPE_2 ( VAR_4 , VAR_6 ) ; } 
public int size ( ) { return size ; } 
private static boolean METHOD_1 ( java.lang.String VAR_1 ) { try { java.io.File VAR_2 = new java.io.File ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 , new TYPE_2 ( VAR_1 ) , VAR_3 ) ; } catch ( TYPE_3 e ) { return false ; } return true ; } 
public TYPE_1 METHOD_1 ( TYPE_2 context , TYPE_3 node ) { return null ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_2 options = new TYPE_2 ( VAR_4 , VAR_2 ) ; return new TYPE_1 ( options ) ; } 
public synchronized double METHOD_1 ( ) { METHOD_2 ( ) ; return VAR_1 [ ( ( count ) - 1 ) ] ; } 
public static void METHOD_1 ( ) { while ( ( TYPE_1 . METHOD_2 ( ) ) != null ) { boolean VAR_1 = Main . field ; while ( VAR_1 ) { } } } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 result = VAR_1 . METHOD_1 ( ) ; VAR_2 = false ; return result ; } 
public int METHOD_1 ( ) { return 5 ; } 
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; fail ( ) ; } catch ( java.lang.IllegalArgumentException expected ) { } } 
public void METHOD_1 ( TYPE_1 e ) { METHOD_3 ( true ) ; } 
TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 class ) ; return VAR_1 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , false ) ; } 
void METHOD_1 ( TYPE_2 value ) ; 
public static int METHOD_1 ( float value ) { return ( ( int ) ( ( double ) ( value ) ) ) ; } 
public void METHOD_1 ( int flags ) { if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_1 ( flags , VAR_2 ) ; } catch ( android.os.RemoteException e ) { throw e . METHOD_2 ( ) ; } } } 
private void METHOD_2 ( float VAR_1 ) { final TYPE_1 VAR_3 = VAR_4 ; if ( VAR_3 != null ) { METHOD_2 ( METHOD_3 ( ) , VAR_3 , VAR_1 , VAR_5 ) ; METHOD_4 ( ) ; } } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = 0 ; VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , TYPE_1 . METHOD_4 ( VAR_4 , ( ( ( VAR_3 ) + ( VAR_5 ) ) - 1 ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , false , true , false ) ; } 
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public static void assertEquals ( int expected , int result ) { if ( expected != result ) { throw new TYPE_1 ( ( ( ( STRING_1 + expected ) + STRING_2 ) + result ) ) ; } } 
public void METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_2 VAR_3 ) { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( this , VAR_1 , VAR_2 , VAR_3 ) ; } } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = VAR_2 ; VAR_5 . METHOD_2 ( ) ; VAR_6 . METHOD_3 ( ) ; VAR_5 . METHOD_4 ( ) ; return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( false ) ; TYPE_1 . when ( VAR_1 . METHOD_4 ( ) ) . thenReturn ( false ) ; assertFalse ( VAR_2 . METHOD_5 ( new TYPE_2 ( ) ) ) ; } 
synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int count , int [ ] d , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 ) ; } 
public static long METHOD_1 ( long arg ) { return arg > > INT_1 ; } 
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { if ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { METHOD_4 ( ) ; } } } 
public void METHOD_1 ( long value ) { size = value ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 service = METHOD_2 ( ) ; if ( service == null ) { return null ; } return service . METHOD_1 ( ) ; } 
private java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; if ( VAR_1 != null ) { return VAR_1 ; } return METHOD_3 ( ) ; } 
public static java.util.ArrayList < TYPE_1 > METHOD_1 ( byte [ ] VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 b : VAR_1 ) { VAR_2 . METHOD_2 ( b ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) android.util.Log.d ( VAR_2 . TAG , ( ( getName ( ) ) + STRING_1 ) ) ; if ( VAR_3 ) { VAR_3 = false ; } } 
public int METHOD_1 ( int VAR_1 , int VAR_2 ) throws android.os.RemoteException { return this . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public float METHOD_1 ( int VAR_1 ) { float result = f ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . METHOD_2 ( f ) ; } return result ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; TYPE_2 . get ( VAR_2 ) . METHOD_4 ( ) . METHOD_5 ( VAR_2 . METHOD_6 ( ) , VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( 20 ) ; } 
private static native java.lang.String METHOD_1 ( long address , long VAR_4 , long VAR_5 ) ; 
public static long METHOD_1 ( long arg ) { return - ( - arg ) ; } 
public boolean METHOD_1 ( ) { return super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( 0 , TYPE_1 . METHOD_2 ( ) ) ; } 
public TYPE_1 build ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , true ) ; } 
public static native void METHOD_1 ( long VAR_1 , TYPE_1 fd , TYPE_2 VAR_2 ) throws java.io.IOException ; 
public static TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; return new TYPE_3 ( VAR_1 , VAR_2 ) ; } 
public static int METHOD_1 ( ) { int a ; int b ; int c ; a = 1 ; b = 2 ; c = a + b ; return c ; } 
private void log ( java.lang.String s ) { TYPE_1 . d ( VAR_1 , s ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 { return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 listener ) throws android.os.RemoteException { synchronized ( VAR_2 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_1 , listener ) ; } } 
public static native void METHOD_1 ( long VAR_1 , byte [ ] VAR_2 , int offset , int length ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 = VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { assertEquals ( 1 , METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . length ) ; assertEquals ( 1 , METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( ) . length ) ; } 
public java.lang.String METHOD_1 ( ) { try { return TYPE_1 . METHOD_2 ( ) . METHOD_1 ( ) ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( e ) ; } } 
boolean METHOD_1 ( ) { return ( TYPE_2 . METHOD_3 ( mContext . METHOD_4 ( ) , VAR_1 , 0 ) ) != 0 ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; log ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_5 ) ; } 
void METHOD_1 ( ) { try { java.lang.System.out.println ( ( STRING_1 + ( this . f ) ) ) ; java.lang.System.out.println ( STRING_2 ) ; } catch ( TYPE_1 VAR_2 ) { java.lang.System.out.println ( STRING_3 ) ; } } 
public void METHOD_1 ( ) { if ( VAR_1 ) { } else { synchronized ( VAR_2 ) { METHOD_2 ( ( ( VAR_3 ) + STRING_1 ) ) ; TYPE_1 . METHOD_3 ( ) ; } } } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_3 = VAR_1 ; VAR_2 = true ; } 
protected void METHOD_1 ( android.os.Bundle VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; } 
public static native long METHOD_1 ( long VAR_1 , TYPE_1 fd , TYPE_2 VAR_2 , int VAR_3 , boolean VAR_4 , byte [ ] VAR_6 ) throws TYPE_3 , TYPE_4 , TYPE_5 ; 
private void METHOD_1 ( ) { if ( VAR_1 ) android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ; VAR_3 . METHOD_1 ( VAR_4 ) ; } 
public static int METHOD_1 ( int value , int VAR_1 ) { return value > > > ( VAR_1 & INT_1 ) ; } 
public final TYPE_1 METHOD_1 ( ) { return this ; } 
void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; } METHOD_4 ( ) ; } 
public long METHOD_1 ( long c ) throws TYPE_1 { long s = TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( s , VAR_2 [ 0 ] ) ; return s ; } 
public static void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 method = VAR_1 class . METHOD_2 ( STRING_1 , VAR_1 class ) ; method . METHOD_3 ( true ) ; method . invoke ( null , VAR_2 ) ; VAR_2 = null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( 0 , false , false ) ; } 
public static int METHOD_1 ( int id ) { VAR_1 . METHOD_2 ( ) ; try { return TYPE_1 . METHOD_3 ( id , VAR_2 ) ; } finally { VAR_1 . METHOD_4 ( ) ; } } 
public static int METHOD_1 ( int arg1 , int VAR_1 ) { int VAR_3 = - arg1 ; return ( VAR_3 - VAR_1 ) | ( VAR_3 - VAR_1 ) ; } 
public void test ( ) { TYPE_1 . assertNotNull ( STRING_1 , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( new TYPE_1 ( STRING_1 , STRING_2 , STRING_3 ) , STRING_4 , 0 , 1 , 1 , 2 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_3 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; return this ; } 
boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ! ( ( METHOD_2 ( VAR_1 ) ) && ( 0 != ( METHOD_3 ( VAR_2 ) ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 5 , STRING_1 ) ; METHOD_2 ( STRING_2 , STRING_3 ) ; METHOD_2 ( STRING_4 , STRING_5 ) ; METHOD_2 ( ( - 4 ) , STRING_6 ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 , mContext ) ; } 
boolean METHOD_1 ( ) { return TYPE_2 . METHOD_4 ( METHOD_2 ( ) ) ; } 
void METHOD_1 ( TYPE_1 s ) { if ( VAR_1 ) android.util.Slog.v ( TYPE_2 . TAG , ( STRING_1 + ( VAR_2 ) ) ) ; if ( ( VAR_2 ) != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_2 = null ; } } 
static void METHOD_1 ( int VAR_1 ) { if ( VAR_1 < 0 ) { throw new TYPE_1 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_1 ( METHOD_4 ( ) ) ; } 
public boolean equals ( java.lang.Object VAR_1 ) { if ( ( VAR_1 instanceof TYPE_1 ) == false ) return false ; return ( VAR_1 == ( this ) ) || ( toString ( ) . equals ( VAR_1 . toString ( ) ) ) ; } 
public static void METHOD_1 ( TYPE_1 context ) { if ( android.util.Log . METHOD_2 ( VAR_1 , VAR_2 ) ) { android.util.Log.v ( VAR_3 . TAG , STRING_1 ) ; } context . METHOD_3 ( new android.content.Intent ( context , VAR_4 class ) ) ; } 
private static java.lang.String METHOD_1 ( TYPE_1 < ? > VAR_1 ) { return ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) + STRING_1 ) + ( VAR_1 . name ( ) ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , boolean append ) throws TYPE_3 { return VAR_1 . METHOD_3 ( ) . METHOD_4 ( append ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } 
public boolean METHOD_1 ( ) { return ( VAR_1 ) || ( VAR_2 ) ; } 
public void error ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.Throwable VAR_3 , java.lang.Object data ) { } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { } 
public void METHOD_1 ( java.lang.String VAR_1 , java.io.File VAR_2 ) { VAR_3 . METHOD_2 ( ( ( VAR_4 ) + VAR_1 ) , VAR_2 . METHOD_3 ( ) ) ; } 
public void run ( ) { VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) ; } 
static void METHOD_1 ( TYPE_1 VAR_1 , long [ ] VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_2 . length ) ; } 
public boolean METHOD_1 ( TYPE_1 listener ) { return VAR_1 . METHOD_2 ( listener ) ; } 
public boolean METHOD_1 ( java.lang.String id ) { return VAR_2 . METHOD_2 ( id ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_1 ( null , null ) ; } 
public void METHOD_1 ( int VAR_1 , int count , float [ ] d ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , count , d , Element.DataType.FLOAT_32 , d . length ) ; } 
public static void assertEquals ( char expected , char VAR_1 ) { if ( VAR_1 != expected ) { throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; } } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 3 , 16 , false ) ; args.out = TYPE_3 . METHOD_3 ( args . inV , t ) ; } 
public static void METHOD_1 ( float [ ] a ) { TYPE_2 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) , null , 0 , 0 ) ; } 
private static boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) != null ; } return VAR_1 ; } 
public boolean METHOD_1 ( ) { return VAR_1 . get ( ) ; } 
boolean METHOD_1 ( ) { return ( this ) == ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return TYPE_2 . METHOD_1 ( VAR_1 ) ; } return STRING_1 ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , int VAR_4 , boolean VAR_5 ) { METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , VAR_4 ) , VAR_5 ) ; } 
public TYPE_1 [ ] METHOD_1 ( ) { return super . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
private final native void METHOD_1 ( java.lang.String [ ] VAR_1 ) ; 
public void run ( ) { if ( ( VAR_1 ) != 0 ) { TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) ; TYPE_1 . METHOD_2 ( size ) ; } } 
public static TYPE_1 METHOD_1 ( TYPE_2 locale ) { return new TYPE_3 ( TYPE_4 . METHOD_1 ( locale ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 , TYPE_4 , TYPE_5 , TYPE_6 { try { TYPE_7 . METHOD_2 ( mContext , VAR_1 . METHOD_3 ( ) ) ; } catch ( java.lang.RuntimeException e ) { throw new TYPE_6 ( e ) ; } } 
public boolean METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { VAR_2 . METHOD_2 ( METHOD_3 ( x ) ) ; return true ; } catch ( java.lang.RuntimeException e ) { throw METHOD_4 ( x , e ) ; } } 
public static TYPE_1 METHOD_1 ( java.io.File [ ] VAR_2 , java.io.File VAR_3 ) throws java.io.IOException { return TYPE_2 . METHOD_1 ( VAR_2 , new java.io.File [ ] { VAR_3 } ) ; } 
private void METHOD_1 ( int VAR_1 ) { TYPE_1 [ ] VAR_2 = METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_4 , 0 , VAR_2 , 0 , VAR_3 ) ; VAR_4 = VAR_2 ; } 
public static double METHOD_1 ( ) { double a ; double b ; double c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a + b ; return c ; } 
public void METHOD_1 ( ) throws java.io.IOException { this . VAR_2 . METHOD_3 ( null ) ; this . VAR_2 . METHOD_4 ( false ) ; METHOD_5 ( this . VAR_2 . METHOD_6 ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) != null ) && ( ( VAR_3 ) != null ) ) { return TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 , true ) ; } return ( VAR_2 ) == ( VAR_3 ) ; } 
public void METHOD_1 ( TYPE_1 e ) { super . METHOD_1 ( e ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_5 ( ) ; } 
public static void METHOD_1 ( ) { VAR_2 = TYPE_1 . METHOD_4 ( STRING_1 ) ; } 
public void run ( ) { METHOD_2 ( VAR_2 , VAR_3 ) ; } 
public static int METHOD_1 ( int arg ) { return arg * ( - 1 ) ; } 
public java.lang.String METHOD_1 ( char VAR_1 ) { java.lang.StringBuilder VAR_2 = new java.lang.StringBuilder ( ) ; for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_2 . append ( VAR_3 . METHOD_2 ( VAR_1 ) ) ; } return VAR_2 . toString ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 field , TYPE_3 VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_1 , field , VAR_2 ) ; } } 
final void METHOD_1 ( int offset , long value ) { VAR_1 . METHOD_1 ( ( offset + ( address ) ) , value ) ; } 
public void METHOD_1 ( int VAR_1 ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_2 = VAR_1 ; VAR_3 = new TYPE_1 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public void run ( ) { TYPE_2 . METHOD_3 ( VAR_1 , false ) ; } 
public boolean METHOD_1 ( com.android.jack.ir.ast.JMethod method ) { return METHOD_2 ( method ) ; } 
public void METHOD_1 ( TYPE_1 h , int VAR_1 , java.lang.Object obj ) { VAR_2 . METHOD_2 ( h , VAR_1 , obj ) ; METHOD_3 ( METHOD_4 ( ) , VAR_3 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 ) ; } 
private static native int METHOD_1 ( int address , java.lang.String text , int n ) ; 
public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { Main . METHOD_3 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } 
protected java.lang.String METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) + CHAR_1 ) + ( METHOD_3 ( ) ) ; } 
public final java.util.List < TYPE_2 > METHOD_1 ( ) { return new java.util.ArrayList < > ( VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 h ) { synchronized ( VAR_1 ) { VAR_2 . METHOD_2 ( h ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 d = new TYPE_1 ( INT_1 ) ; java.lang.String VAR_1 = STRING_1 ; TYPE_2 . METHOD_2 ( d , VAR_1 , STRING_2 ) ; } 
public boolean METHOD_1 ( ) { return false ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . i ( VAR_2 . TAG , STRING_1 ) ; } synchronized ( VAR_3 ) { VAR_5 = false ; VAR_6 = false ; } } 
public java.util.Set < java.lang.String > METHOD_1 ( ) { return VAR_1 ; } 
protected void METHOD_1 ( ) { if ( VAR_1 ) { android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ; } } 
TYPE_3 METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( VAR_4 , VAR_2 ) ; TYPE_3 VAR_5 = ( ( TYPE_3 ) ( VAR_3 . arg ) ) ; TYPE_4 . assertTrue ( VAR_5 . METHOD_3 ( VAR_1 ) ) ; return VAR_5 ; } 
public java.lang.Class METHOD_1 ( java.lang.String name , TYPE_1 VAR_1 ) { java.lang.String VAR_2 = name . METHOD_2 ( CHAR_1 , CHAR_2 ) ; return METHOD_3 ( VAR_2 , VAR_1 , null ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws java.io.IOException , TYPE_2 { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ) ) ; return METHOD_2 ( VAR_3 ) ; } 
public static int METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return VAR_1 . METHOD_2 ( VAR_2 ) ; } 
public static double METHOD_1 ( long value ) { return ( ( double ) ( ( int ) ( value ) ) ) ; } 
public void run ( ) { throw new java.lang.RuntimeException ( ) ; } 
public static double METHOD_1 ( short value ) { short VAR_2 = ( ( short ) ( value & INT_1 ) ) ; return ( ( double ) ( VAR_2 ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 . METHOD_1 ( ) ; } 
public void METHOD_1 ( java.lang.Object VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } VAR_3 = VAR_1 ; } 
private static TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
private native void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_4 , byte [ ] value ) ; 
public static java.util.List < TYPE_1 > METHOD_1 ( long VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return null ; } return VAR_2 . METHOD_1 ( ) ; } 
private static void log ( java.lang.Exception e ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( 0 , VAR_1 . METHOD_2 ( null , null , false ) . size ( ) ) ; } 
public void METHOD_1 ( android.bluetooth.BluetoothDevice device , byte type , byte id , int VAR_1 ) { VAR_2 . METHOD_1 ( device , type , id , VAR_1 ) ; } 
private static TYPE_1 [ ] METHOD_1 ( java.util.List < java.io.File > VAR_1 , java.io.File VAR_2 , java.util.List < java.io.IOException > VAR_3 ) { return TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , false , null ) ; } 
public int METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = this . METHOD_2 ( ) ; java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) ; int r = VAR_2 . METHOD_1 ( VAR_3 ) ; return r ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_3 , type ) ; } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String id , int VAR_2 , android.content.Intent VAR_3 ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , id , VAR_3 . METHOD_3 ( VAR_4 , id ) ) ; } 
public static void METHOD_1 ( TYPE_1 args ) { args.out = new TYPE_2 ( TYPE_3 . METHOD_2 ( FLOAT_1 , ( ( VAR_1 ) - ( VAR_2 ) ) ) , 0 , 1 ) ; } 
protected void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { assert VAR_1 != null ; VAR_2 = VAR_1 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { synchronized ( VAR_1 ) { return new java.util.ArrayList ( VAR_1 ) ; } } 
public void run ( ) { METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 v ) { if ( ( VAR_1 ) == null ) { return ; } if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; } else { start ( ) ; } METHOD_4 ( ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { return METHOD_2 ( ) ; } 
public static void METHOD_1 ( ) { assert TYPE_1 . METHOD_2 ( ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_2 , VAR_4 , ( VAR_1 ? 1 : 0 ) ) ; VAR_5 . METHOD_4 ( ) ; METHOD_5 ( ) ; } 
public abstract java.io.File METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_3 ) ; 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 . TAG ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( VAR_1 , VAR_3 , VAR_2 ) ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { ( VAR_1 ) -- ; if ( ( VAR_1 ) == 0 ) { VAR_2 . METHOD_2 ( ) ; } super . METHOD_1 ( ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) throws java.io.IOException { TYPE_2 options = new TYPE_2 ( ) ; VAR_3 = VAR_2 ; TYPE_3 VAR_4 = new TYPE_3 ( ) ; METHOD_1 ( 3 , STRING_1 , VAR_1 , VAR_4 , options ) ; } 
public synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; } return VAR_1 ; } 
private static void METHOD_1 ( int VAR_1 , android.os.Message VAR_2 ) { org.junit.Assert.assertEquals ( STRING_1 , VAR_3 , VAR_4 ) ; org.junit.Assert.assertEquals ( STRING_2 , VAR_1 , VAR_5 ) ; } 
public static java.io.File METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws java.io.IOException { java.io.File VAR_3 = java.io.File . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_2 ( ) ; return VAR_3 ; } 
public android.content.Intent METHOD_1 ( TYPE_1 context ) { return new TYPE_2 ( number , VAR_1 ) . METHOD_2 ( true ) . build ( ) ; } 
public static float METHOD_1 ( float [ ] a ) { return ( a [ 0 ] ) + ( a [ 1 ] ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_5 ( ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return false ; } 
public void run ( ) { if ( VAR_1 ) { android.util.Log.v ( VAR_2 . TAG , STRING_1 ) ; } try { VAR_3 . METHOD_1 ( true ) ; VAR_4 . METHOD_2 ( ) ; } catch ( java.lang.Exception ex ) { } } 
protected TYPE_1 METHOD_1 ( TYPE_2 level ) { VAR_1 . METHOD_1 ( level ) ; return this ; } 
protected void METHOD_1 ( ) { VAR_2 = new TYPE_2 ( this ) ; VAR_2 . start ( ) ; } 
public void METHOD_1 ( TYPE_1 v ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_1 . METHOD_7 ( true ) ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int w , int h , int [ ] d , int VAR_6 ) ; 
public static native void METHOD_1 ( long VAR_1 , byte [ ] VAR_2 ) ; 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.Object data ) { java.lang.String VAR_3 = METHOD_2 ( VAR_2 ) ; TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) ; METHOD_3 ( VAR_1 , VAR_3 ) ; } 
static TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 r = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 , false , 0 , 0 ) ; return r ; } 
public void METHOD_1 ( ) { TYPE_1 options = new TYPE_1 ( ) ; java.util.Set < java.lang.String > values = options . METHOD_2 ( ) ; org.junit.Assert.assertEquals ( 0 , values . size ( ) ) ; } 
public void METHOD_1 ( TYPE_1 field ) { VAR_1 . METHOD_2 ( ) ; for ( TYPE_2 config : VAR_2 ) { config . METHOD_1 ( field ) ; } } 
public boolean METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.Object data ) { TYPE_1 . log ( VAR_3 , VAR_2 ) ; } 
public static int METHOD_1 ( float f ) { return ( f > FLOAT_1 ) == true ? INT_1 : INT_2 ; } 
private boolean METHOD_1 ( ) { return ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ; } 
public void test ( ) throws java.lang.Exception { assertEquals ( ( STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ) , METHOD_1 ( STRING_6 , STRING_7 ) ) ; } 
synchronized void METHOD_1 ( long id , int VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 ) ; } 
synchronized void METHOD_1 ( long id , int [ ] VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 < TYPE_4 > VAR_1 ) { return TYPE_5 . METHOD_2 ( ) . METHOD_3 ( ( ) - > METHOD_4 ( VAR_1 ) ) ; } 
protected abstract void METHOD_1 ( ) ; 
public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 . METHOD_2 ( null , true ) ; TYPE_1 . METHOD_2 ( null , false ) ; } 
public static int METHOD_1 ( TYPE_1 VAR_1 ) { final TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ; return VAR_2 != null ? VAR_2 . METHOD_3 ( ) : VAR_4 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } 
public static char [ ] METHOD_1 ( TYPE_1 context ) { return TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( ) ) ; } 
synchronized void METHOD_1 ( long VAR_1 , int src ) { METHOD_2 ( ) ; METHOD_3 ( mContext , VAR_1 , src ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = VAR_1 . METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) , null , null , false , false , null ) ; TYPE_3 . METHOD_3 ( result ) ; METHOD_4 ( VAR_2 , VAR_3 ) ; } 
public abstract void METHOD_1 ( java.lang.String url , java.lang.String value ) ; 
private native void METHOD_1 ( int VAR_1 , java.lang.String address ) ; 
boolean METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; return ( ( VAR_1 == ( VAR_3 ) ) || ( VAR_1 == ( VAR_4 ) ) ) || ( VAR_1 == ( VAR_5 ) ) ; } 
public int METHOD_1 ( boolean VAR_1 , int VAR_2 ) throws android.os.RemoteException { return this . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( java.lang.String [ ] VAR_1 ) { this . METHOD_1 ( VAR_1 ) ; } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) ) ) ; } 
public int METHOD_1 ( java.lang.String name , int uid , int flags ) throws android.os.RemoteException ; 
public synchronized void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( new TYPE_1 [ VAR_1 . size ( ) ] ) ; } 
public static long METHOD_1 ( ) { int VAR_1 = 10 ; long VAR_2 = 3 ; return VAR_1 & VAR_2 ; } 
void METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_2 . METHOD_3 ( VAR_1 ) ) { return ; } METHOD_4 ( VAR_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_5 ( ) ; } } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 5 , INT_1 , false ) ; args.out = TYPE_3 . METHOD_3 ( args . inV , t ) ; } 
public static void METHOD_1 ( boolean VAR_1 ) { while ( true ) { java.lang.System.out.println ( STRING_2 ) ; while ( VAR_1 ) { } } } 
public void METHOD_1 ( java.lang.String msg ) ; 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { try { callback . METHOD_1 ( VAR_1 ) ; } catch ( android.os.RemoteException e ) { METHOD_3 ( uid , VAR_2 ) ; } } 
public static void METHOD_1 ( int i , TYPE_1 output ) throws java.io.IOException { output . METHOD_2 ( ( i > > > 8 ) ) ; output . METHOD_2 ( i ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; } 
public java.lang.Object METHOD_1 ( ) { try { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ; VAR_2 = VAR_3 ; return VAR_1 ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( e ) ; } } 
public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = TYPE_2 . METHOD_2 ( ) ; if ( VAR_1 instanceof TYPE_1 ) { return ( ( TYPE_1 ) ( VAR_1 ) ) ; } return null ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { final TYPE_2 listener = VAR_2 . get ( ) ; return ( listener != null ) && ( listener . METHOD_2 ( VAR_1 ) ) ; } 
public static TYPE_1 METHOD_1 ( java.io.File VAR_1 , java.io.File VAR_2 ) throws java.io.IOException { TYPE_1 options = TYPE_2 . METHOD_1 ( null , new java.io.File [ ] { VAR_1 } ) ; VAR_3 = VAR_2 ; return options ; } 
public void METHOD_1 ( java.lang.Integer VAR_1 , java.lang.Integer VAR_2 ) throws java.lang.Exception { if ( ! ( VAR_3 ) ) { throw new TYPE_1 ( STRING_1 ) ; } METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 , VAR_2 ) ; METHOD_5 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_1 ) ; VAR_5 = null ; } 
boolean METHOD_1 ( final java.lang.String name ) { return ( VAR_1 . METHOD_1 ( name ) ) && ( ! ( VAR_2 . METHOD_1 ( name ) ) ) ; } 
void METHOD_1 ( java.io.File in , java.io.File out , boolean VAR_1 ) throws java.lang.Exception ; 
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device , byte VAR_1 ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( device , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 field , TYPE_3 VAR_2 ) { if ( ( VAR_3 ) > 0 ) { VAR_4 . METHOD_1 ( VAR_1 , field , VAR_2 ) ; } } 
public static long METHOD_1 ( long arg ) { return arg / 1 ; } 
private void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) { return ; } if ( ! ( TYPE_1 . METHOD_3 ( ) ) ) { METHOD_4 ( ) ; } } 
public void run ( ) { VAR_1 . METHOD_1 ( 1 , METHOD_2 ( 1 ) ) ; } 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) return null ; TYPE_1 service = VAR_1 . METHOD_1 ( VAR_2 ) ; if ( service == null ) { METHOD_2 ( STRING_1 ) ; return null ; } return service ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_3 ) > 0 ) { VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
protected void METHOD_1 ( java.lang.String format , java.lang.Object ... args ) { java.lang.String output = java.lang.String.format ( format , args ) ; output = TYPE_1 . METHOD_2 ( output ) ; VAR_1 . info ( STRING_1 , output ) ; } 
native void METHOD_1 ( long VAR_1 , long id , float [ ] d ) ; 
public synchronized void METHOD_1 ( TYPE_1 state ) { if ( VAR_1 ) android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + ( state . toString ( ) ) ) ) ; METHOD_2 ( ) ; } 
public TYPE_1 or ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( VAR_1 ) ; return this ; } 
public int METHOD_1 ( ) throws java.io.IOException { VAR_2 = new TYPE_1 ( 0 ) ; VAR_2 . METHOD_2 ( INT_1 ) ; VAR_2 . METHOD_3 ( true ) ; return VAR_2 . METHOD_4 ( ) ; } 
static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return ; } VAR_3 . METHOD_3 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; } 
synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int VAR_3 , byte [ ] d , int VAR_4 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , d , VAR_4 ) ; } 
private static java.lang.Object invoke ( TYPE_1 VAR_1 , TYPE_4 method , java.lang.Object [ ] args ) throws java.lang.Throwable { TYPE_3 h = VAR_1 . h ; return h . invoke ( VAR_1 , method , args ) ; } 
public TYPE_1 [ ] [ ] METHOD_1 ( ) { return super . METHOD_1 ( ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; } 
public void METHOD_1 ( android.bluetooth.BluetoothDevice device , int state ) { android.util.Log.d ( VAR_1 . TAG , ( ( ( STRING_1 + device ) + STRING_2 ) + state ) ) ; } 
public void METHOD_1 ( TYPE_1 listener ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( 2 ) ; } VAR_1 . METHOD_2 ( listener ) ; } 
void METHOD_1 ( float x , float y , float VAR_1 ) { if ( ( ( VAR_2 ) == null ) || ( ( mRS ) == null ) ) { return ; } VAR_2 . METHOD_1 ( x , ( - y ) ) ; } 
public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 } ) ; fail ( ) ; } catch ( TYPE_2 expected ) { } } 
public void METHOD_1 ( TYPE_1 listener ) throws android.os.RemoteException { synchronized ( VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_4 , VAR_5 , listener ) ; } } 
public static void METHOD_1 ( ) { VAR_2 = TYPE_1 . METHOD_4 ( STRING_1 ) ; } 
public static void METHOD_1 ( ) throws java.io.IOException , java.lang.Exception { VAR_2 = TYPE_1 . METHOD_4 ( ) ; VAR_3 = TYPE_1 . METHOD_5 ( ) ; VAR_4 = TYPE_1 . METHOD_6 ( VAR_3 ) ; } 
private void METHOD_1 ( TYPE_1 call ) { METHOD_1 ( call , false , false ) ; } 
public boolean equals ( java.lang.Object VAR_1 ) { if ( VAR_1 instanceof TYPE_1 ) return id . equals ( ( ( java.lang.Object ) ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_1 ( ) ) ) ) ; else return false ; } 
public void offset ( float VAR_1 , float VAR_2 , TYPE_1 VAR_3 ) { long VAR_4 = 0 ; if ( VAR_3 != null ) { VAR_4 = VAR_5 ; VAR_6 = false ; } TYPE_1 . METHOD_1 ( VAR_7 , VAR_1 , VAR_2 , VAR_4 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( INT_1 , 5 ) ; } 
public abstract void METHOD_1 ( int size ) ; 
protected native int METHOD_1 ( ) throws java.io.IOException ; 
protected synchronized native void METHOD_1 ( TYPE_1 p ) throws java.io.IOException ; 
public final TYPE_1 < TYPE_2 > METHOD_1 ( ) { return TYPE_3 . METHOD_2 ( VAR_1 class ) ; } 
private void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , METHOD_2 ( ) . getName ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( INT_1 ) ; org.junit.Assert.assertEquals ( STRING_2 , METHOD_2 ( ) . getName ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { METHOD_2 ( x , VAR_1 ) ; return true ; } catch ( java.lang.RuntimeException e ) { throw METHOD_3 ( x , e ) ; } } 
public static void METHOD_1 ( long [ ] a ) { TYPE_2 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) , null , 0 , 0 ) ; } 
public java.lang.Object METHOD_1 ( java.io.File VAR_1 ) { return null ; } 
public boolean equals ( java.lang.Object r ) { return ( ( r != null ) && ( r instanceof TYPE_1 ) ) && ( ( METHOD_1 ( ( ( TYPE_1 ) ( r ) ) ) ) == 0 ) ; } 
public static native boolean METHOD_1 ( long ret , long a , long n ) ; 
public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String s ) { return ( ( VAR_1 . length ) == ( s . length ( ) ) ) && ( msg . METHOD_2 ( VAR_1 . index , s , 0 , VAR_1 . length ) ) ; } 
public java.util.Set < TYPE_1 < TYPE_2 , TYPE_3 > > METHOD_1 ( ) { java.util.Set < TYPE_1 < TYPE_2 , TYPE_3 > > result = VAR_1 ; return result == null ? VAR_1 = METHOD_2 ( ) : result ; } 
private static boolean METHOD_1 ( java.lang.String VAR_1 ) { try { java.lang.Integer.parseInt ( VAR_1 ) ; } catch ( TYPE_1 | java.lang.NullPointerException e ) { return false ; } return true ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; } 
public static int METHOD_1 ( int i ) { return INT_1 > i ? INT_2 : INT_3 ; } 
protected java.io.File METHOD_1 ( java.io.File VAR_1 ) { return new java.io.File ( VAR_1 , VAR_2 ) ; } 
public java.lang.String METHOD_1 ( java.lang.String name ) { return METHOD_1 ( new TYPE_1 ( name ) ) ; } 
public boolean METHOD_1 ( ) { switch ( VAR_1 ) { case VAR_3 : case VAR_4 : { return true ; } } return false ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( this ) ; TYPE_2 . METHOD_3 ( STRING_1 ) ; } 
int METHOD_1 ( int status , int uid ) { if ( status != ( VAR_1 ) ) { METHOD_2 ( ) ; } return status ; } 
public void METHOD_1 ( TYPE_1 element ) { element . target = null ; } 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ) ; } 
boolean run ( ) ; 
static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 p ) { TYPE_1 r = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ; return r ; } 
void METHOD_1 ( TYPE_1 VAR_1 , java.io.File VAR_2 ) ; 
public boolean METHOD_1 ( ) { return ( count ) == 0 ; } 
native boolean METHOD_1 ( java.lang.String path ) ; 
private void METHOD_1 ( TYPE_1 parent ) { VAR_1 = new TYPE_1 ( parent , VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; } 
public TYPE_1 METHOD_1 ( ) { return false ; } 
public void METHOD_1 ( java.io.File VAR_1 ) { METHOD_1 ( METHOD_2 ( VAR_1 ) , 0 , ( ( byte [ ] ) ( null ) ) ) ; } 
public static int METHOD_1 ( int arg ) { return arg ^ 0 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 p = new TYPE_2 ( null , VAR_1 , ( - 1 ) , null , null , null , VAR_4 ) ; METHOD_3 ( p ) ; } 
public void METHOD_1 ( ) { int VAR_1 = ( VAR_2 ) | ( VAR_3 ) ; int expected = ( VAR_5 ) | ( VAR_6 ) ; assertEquals ( expected , VAR_7 . METHOD_2 ( VAR_1 ) ) ; } 
public void METHOD_1 ( java.lang.String ... VAR_1 ) { METHOD_1 ( VAR_2 < java.lang.String > METHOD_2 ( ) , null , false , VAR_1 ) ; } 
public java.lang.String toString ( ) { return METHOD_1 ( TYPE_2 . METHOD_2 ( ) , false , METHOD_3 ( ) , METHOD_4 ( ) ) ; } 
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( new android.os.AsyncResult ( null , VAR_1 , null ) ) ; } } 
void METHOD_1 ( ) { METHOD_1 ( null ) ; } 
protected final void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , true , false , true , false ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; for ( TYPE_1 size : VAR_3 ) { VAR_1 = VAR_1 . METHOD_2 ( size ) ; } return VAR_1 ; } 
public < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { synchronized ( VAR_1 ) { if ( ( in ) == null ) return ; try { in . METHOD_1 ( ) ; } finally { in = null ; VAR_2 = null ; } } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_3 . METHOD_4 ( VAR_1 , STRING_1 ) ; } 
public void METHOD_1 ( java.lang.String id ) throws java.lang.Exception { for ( TYPE_1 a : VAR_1 ) { a . METHOD_2 ( id , VAR_2 . get ( id ) . VAR_3 , null ) ; } } 
public void METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int w , int h , int VAR_6 , long [ ] d , int VAR_7 ) ; 
public void METHOD_1 ( ) { METHOD_2 ( true ) ; METHOD_2 ( false ) ; } 
public static double METHOD_1 ( ) { float VAR_1 = FLOAT_1 ; return ( ( double ) ( VAR_1 ) ) ; } 
public int METHOD_1 ( ) { VAR_1 = 0 ; return 0 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , ( STRING_2 + ( ( STRING_3 + STRING_4 ) + STRING_5 ) ) , ( STRING_2 + ( ( ( ( STRING_6 + STRING_7 ) + STRING_8 ) + STRING_6 ) + STRING_5 ) ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , double value ) { METHOD_1 ( VAR_1 , new TYPE_2 ( value ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( STRING_1 , null ) ; try { c . METHOD_2 ( STRING_2 ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public TYPE_1 append ( java.lang.String text ) { VAR_1 . append ( TYPE_2 . METHOD_1 ( ) . METHOD_2 ( text ) ) ; return this ; } 
public static TYPE_2 < java.lang.Object > METHOD_1 ( ) { return new TYPE_3 < java.lang.Object > ( ) ; } 
public native java.lang.Object METHOD_1 ( ) ; 
private void METHOD_1 ( TYPE_1 listener ) { METHOD_2 ( ) . METHOD_3 ( listener ) ; } 
public boolean METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( java.lang.String line ) { if ( line != null ) { VAR_1 . info ( STRING_1 , line ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) throws java.io.IOException { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ) ) ; return METHOD_2 ( VAR_3 ) ; } 
public final float METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; } 
public abstract void METHOD_1 ( java.lang.String path ) ; 
public synchronized void run ( com.android.jack.ir.ast.JDefinedClassOrInterface VAR_1 ) throws java.lang.Exception { TYPE_1 v = new TYPE_1 ( VAR_1 ) ; v . METHOD_2 ( VAR_1 ) ; } 
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device , java.lang.String VAR_1 ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( device , VAR_1 ) ; } 
synchronized void METHOD_1 ( long id , int VAR_1 , double VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) ; } 
void METHOD_1 ( java.lang.String uri , java.lang.String VAR_1 , java.lang.String VAR_2 , long VAR_3 , int VAR_4 ) throws TYPE_1 { if ( ( ( VAR_5 ) ++ ) > 0 ) { super . METHOD_1 ( uri , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } } 
public void METHOD_1 ( com.android.jack.ir.ast.JMethod method ) { VAR_1 . METHOD_2 ( ) ; for ( TYPE_1 config : VAR_2 ) { config . METHOD_1 ( method ) ; } } 
public abstract void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 location , java.lang.String VAR_3 , TYPE_5 format ) ; 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . start ( ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) ; } 
public TYPE_1 METHOD_1 ( java.io.File f ) throws java.lang.Exception { VAR_1 = f . getName ( ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_1 ( new TYPE_3 ( f ) , false ) ; return VAR_2 ; } 
public static byte [ ] METHOD_1 ( java.lang.String path , java.lang.String name ) throws TYPE_1 { return VAR_2 . METHOD_1 ( path , name ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 context , boolean VAR_1 , TYPE_3 callback , int VAR_2 ) { return METHOD_1 ( context , VAR_1 , callback , VAR_2 , VAR_4 ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; return VAR_1 == null ? VAR_1 : new TYPE_2 ( VAR_1 , VAR_3 ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 response ) { VAR_2 . METHOD_2 ( VAR_1 , response ) ; TYPE_2 request = VAR_3 . METHOD_3 ( VAR_1 ) ; if ( request != null ) { VAR_4 = response ; METHOD_4 ( VAR_1 , request ) ; } } 
public void METHOD_1 ( java.lang.String line ) { if ( line != null ) { VAR_1 . error ( null , line ) ; } } 
private static java.lang.String METHOD_1 ( java.lang.StringBuilder s ) { return s . toString ( ) . METHOD_2 ( ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_3 , java.lang.Class < ? > VAR_4 , TYPE_3 < java.lang.String > VAR_5 , TYPE_4 VAR_6 , int VAR_7 , boolean VAR_8 ) ; 
public java.io.File METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_2 , METHOD_3 ( VAR_1 ) , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { synchronized ( this ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( fd , path , true , false , this ) ; } return VAR_1 ; } } 
public void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_2 = null ; VAR_3 = null ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_4 = null ; } } 
public java.util.List < android.bluetooth.BluetoothDevice > METHOD_1 ( int [ ] VAR_1 ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( 0 ) ; } return service . METHOD_1 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) { return null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 [ ] VAR_3 = new TYPE_2 [ ] { new TYPE_3 ( ) , new TYPE_4 ( false ) , new TYPE_5 ( ) } ; METHOD_2 ( VAR_3 ) ; } 
protected void METHOD_1 ( int VAR_1 ) { if ( VAR_2 ) log ( ( STRING_1 + VAR_1 ) ) ; METHOD_2 ( VAR_1 ) ; } 
private static java.util.List < TYPE_1 > METHOD_1 ( java.util.List < ? extends TYPE_2 > VAR_1 , int VAR_2 , java.lang.String ... VAR_3 ) { return TYPE_3 . METHOD_1 ( VAR_1 , null , VAR_2 , null , null , TYPE_4 . METHOD_2 ( VAR_3 ) ) ; } 
public void METHOD_1 ( ) { TYPE_2 VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( VAR_2 ) ; } 
void METHOD_1 ( final android.os.Bundle VAR_1 ) { if ( VAR_1 == null ) { return ; } if ( ( VAR_2 ) == null ) { VAR_2 = new android.os.Bundle ( ) ; } VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( int slotId , int VAR_1 , TYPE_1 listener ) throws android.os.RemoteException { } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_1 != null ? new TYPE_1 ( ) : null ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { return VAR_3 ; } else { return false ; } } 
boolean METHOD_1 ( ) { return METHOD_2 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( 10 , 5 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , false , true , true , false ) ; } 
public java.lang.String METHOD_1 ( int netId ) { return VAR_2 . METHOD_2 ( ) ; } 
private void METHOD_1 ( byte [ ] content , java.io.File VAR_1 ) throws java.io.IOException { TYPE_1 . i ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; TYPE_2 VAR_3 = new TYPE_2 ( content ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; } 
public boolean METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; } 
private void METHOD_1 ( ) { if ( ( this . VAR_1 ) == 0 ) { this . VAR_1 = TYPE_1 . METHOD_2 ( ) ; } } 
public void METHOD_1 ( ) { if ( VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; VAR_6 . METHOD_3 ( VAR_3 , VAR_5 ) ; VAR_2 = false ; } } 
static void METHOD_1 ( long VAR_1 , java.lang.String text , int start , int VAR_2 , int VAR_3 , TYPE_1 VAR_4 ) { TYPE_2 . METHOD_2 ( VAR_1 , text . METHOD_3 ( ) , start , ( VAR_2 - start ) , VAR_3 , VAR_4 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { java.lang.String VAR_2 = ( ( ( VAR_1 + STRING_1 ) + VAR_1 ) + STRING_1 ) + VAR_1 ; java.lang.String VAR_3 = METHOD_2 ( VAR_4 ) ; org.junit.Assert.assertEquals ( VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; } 
TYPE_1 METHOD_1 ( ) { try { METHOD_2 ( ) ; } catch ( java.io.IOException e ) { throw new TYPE_2 ( e ) ; } return index ; } 
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( device ) ; } 
private java.lang.String METHOD_1 ( long VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_1 ) . toString ( ) ; } 
protected boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 type , java.lang.String name ) { java.util.Map < java.lang.String , TYPE_1 > VAR_1 = VAR_2 . get ( type ) ; if ( VAR_1 != null ) { return VAR_1 . get ( name ) ; } return null ; } 
void METHOD_1 ( TYPE_1 response , byte [ ] content , int VAR_1 ) { response . METHOD_1 ( content ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; } 
public static void METHOD_1 ( int VAR_1 ) { synchronized ( VAR_2 ) { TYPE_1 p = VAR_2 . METHOD_2 ( ( VAR_1 - 1 ) ) ; VAR_3 . METHOD_2 ( p . getName ( ) ) ; TYPE_2 . METHOD_3 ( ) ; } } 
public TYPE_1 METHOD_1 ( ) { VAR_1 = ( VAR_1 ) & ( ~ 16 ) ; VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) ; return this ; } 
public long METHOD_1 ( java.lang.Integer uid ) { return TYPE_1 . METHOD_1 ( uid ) ; } 
public abstract void METHOD_1 ( boolean VAR_1 ) ; 
public void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) != null ) { METHOD_3 ( VAR_1 ) ; } else { METHOD_4 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { android.content.Intent VAR_1 = new android.content.Intent ( VAR_2 ) ; VAR_1 . METHOD_2 ( STRING_1 , METHOD_3 ( VAR_3 ) ) ; mContext . METHOD_5 ( VAR_1 , STRING_2 ) ; } 
private static void METHOD_1 ( long a ) { a = - a ; Main . assertEquals ( ( - INT_1 ) , a ) ; } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; } 
private native void METHOD_1 ( boolean VAR_2 , byte [ ] data ) ; 
public void METHOD_1 ( TYPE_1 e ) { VAR_1 . METHOD_2 ( this ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_5 . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . toString ( ) ) ; org.junit.Assert.assertEquals ( STRING_2 , TYPE_2 . toString ( ) ) ; org.junit.Assert.assertEquals ( STRING_3 , TYPE_3 . toString ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 node ) { return ( VAR_1 ) || ( super . METHOD_1 ( node ) ) ; } 
protected int METHOD_1 ( java.lang.Object VAR_1 ) { return VAR_1 . METHOD_2 ( ) ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { Main . METHOD_3 ( INT_1 ) ; } 
public native int METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; } 
synchronized long METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , byte [ ] VAR_3 , int length ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , length ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { println ( ( ( ( ( METHOD_2 ( VAR_2 ) ) + STRING_1 ) + ( VAR_2 . METHOD_3 ( VAR_1 ) ) ) + STRING_2 ) ) ; } 
public abstract void METHOD_1 ( int VAR_1 ) ; 
private static long METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; TYPE_2 VAR_3 = VAR_2 . METHOD_2 ( VAR_1 ) ; return VAR_3 . METHOD_3 ( ) ; } 
protected int METHOD_1 ( ) throws TYPE_1 { final java.lang.String VAR_1 = METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; if ( STRING_2 . equals ( VAR_1 ) ) { return - 1 ; } return java.lang.Integer.parseInt ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( ) throws TYPE_2 { TYPE_1 result = VAR_1 ; if ( result == null ) { VAR_1 = result = TYPE_3 . METHOD_2 ( ) ; } return result ; } 
public TYPE_1 METHOD_1 ( ) { return this . METHOD_1 ( ) ; } 
private synchronized void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; TYPE_1 . METHOD_2 ( mContext ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 , VAR_1 ) . METHOD_5 ( ) ; } 
public void METHOD_1 ( java.io.File [ ] in , java.io.File out , boolean VAR_1 ) throws java.lang.Exception { METHOD_2 ( in ) ; METHOD_3 ( out ) ; run ( ) ; } 
public TYPE_1 METHOD_1 ( ) { assert ( VAR_1 ) != null ; return VAR_1 ; } 
static boolean METHOD_1 ( long VAR_1 ) { TYPE_1 d = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( d == null ) { return true ; } return ( ( d . METHOD_3 ( ) ) & ( VAR_3 ) ) != 0 ; } 
protected void METHOD_1 ( int index ) { assert ( VAR_1 ) != null ; VAR_2 = VAR_1 . METHOD_2 ( index ) ; } 
private synchronized int METHOD_1 ( ) { return VAR_1 ; } 
public void run ( ) { VAR_1 . set ( METHOD_1 ( VAR_2 , ( VAR_3 * INT_1 ) , VAR_4 , VAR_5 , VAR_6 , state ) ) ; } 
static void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 key ) { return null ; } 
public static void METHOD_1 ( TYPE_1 device , int i ) throws TYPE_2 , TYPE_3 , java.io.IOException { device . METHOD_2 ( i , VAR_1 , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String value ) { if ( value == null ) { throw new java.lang.NullPointerException ( ) ; } VAR_1 |= 16 ; VAR_2 = value ; METHOD_2 ( ) ; return this ; } 
public void info ( java.lang.String format , java.lang.Object ... args ) { METHOD_2 ( STRING_1 , format , args ) ; } 
public TYPE_1 field ( ) { return VAR_1 [ data [ pos ] ] ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_4 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; } } 
public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . info ( STRING_1 , VAR_2 , VAR_4 ) ; } super . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_2 ( int VAR_1 ) { for ( int i = 0 ; i < VAR_1 ; ++ i ) { TYPE_1 . METHOD_2 ( VAR_2 ) ; } } 
public void METHOD_1 ( TYPE_1 request , TYPE_2 VAR_1 , int VAR_2 , int VAR_3 , TYPE_3 VAR_4 ) { TYPE_4 VAR_5 = new TYPE_4 ( VAR_4 ) ; TYPE_5 VAR_6 = VAR_7 ; METHOD_2 ( VAR_6 , VAR_1 , VAR_2 , VAR_8 , VAR_3 , VAR_5 ) ; } 
private void METHOD_1 ( double VAR_1 ) { if ( VAR_1 != VAR_1 ) { return ; } double VAR_2 = TYPE_1 . METHOD_2 ( ( VAR_1 - ( VAR_3 ) ) ) ; if ( VAR_2 > ( VAR_4 ) ) { VAR_4 = VAR_2 ; } } 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) ; } 
abstract char METHOD_1 ( int index ) ; 
public static native long METHOD_1 ( long VAR_1 , TYPE_1 fd , TYPE_2 VAR_2 , int VAR_3 , boolean VAR_4 ) throws TYPE_3 , TYPE_4 , TYPE_5 ; 
native long METHOD_1 ( long VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int VAR_6 , float VAR_7 ) ; 
public boolean start ( ) { if ( VAR_1 ) android.util.Log.v ( VAR_2 . TAG , STRING_1 ) ; METHOD_2 ( ) ; return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , STRING_2 , 5 , 8 ) ; } 
void METHOD_1 ( ) { synchronized ( VAR_2 ) { VAR_3 = null ; } if ( ( VAR_1 ) == null ) return ; VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ? TYPE_2 . TRUE : TYPE_2 . FALSE ) ) ; return super . METHOD_1 ( VAR_1 ) ; } 
private native void METHOD_1 ( int VAR_1 , java.lang.String address , int VAR_3 , int VAR_4 , int VAR_5 ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; VAR_2 . METHOD_1 ( ) ; } 
public final void METHOD_1 ( java.io.File in , java.io.File out , boolean VAR_1 ) throws java.lang.Exception { METHOD_1 ( new java.io.File [ ] { in } , out , VAR_1 ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , java.lang.Class < ? > VAR_3 , TYPE_3 < java.lang.String > VAR_4 , TYPE_4 VAR_5 , int VAR_6 , java.lang.String [ ] args ) ; 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( 0 ) ; org.junit.Assert.assertEquals ( 0 , VAR_1 . METHOD_2 ( ) ) ; org.junit.Assert.assertEquals ( 0 , VAR_1 . METHOD_3 ( ) ) ; org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . toString ( ) ) ; } 
public boolean METHOD_1 ( ) { return ( ( ( VAR_1 ) && ( ( VAR_2 ) != null ) ) && ( VAR_2 . METHOD_2 ( ) ) ) && ( ( METHOD_3 ( ) ) != ( VAR_3 ) ) ; } 
public static float [ ] METHOD_1 ( float [ ] VAR_1 , int VAR_2 ) { if ( VAR_2 < 0 ) { throw new TYPE_1 ( java.lang.Integer . toString ( VAR_2 ) ) ; } return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return true ; } 
void METHOD_1 ( int w ) { TYPE_2 . METHOD_3 ( this . VAR_1 , w ) ; } 
public void METHOD_1 ( java.lang.Integer id ) { if ( ( id != null ) && ( id != ( VAR_1 ) ) ) { call . METHOD_2 ( true ) ; } } 
public java.lang.Class < ? > METHOD_1 ( ) { return VAR_1 ; } 
int METHOD_1 ( ) { return VAR_1 . METHOD_3 ( ) ; } 
public static void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; if ( VAR_1 != null ) VAR_2 = VAR_1 + STRING_2 ; TYPE_1 . fail ( ( VAR_2 + STRING_3 ) ) ; } 
private final void METHOD_1 ( ) { if ( VAR_1 ) android.util.Slog.v ( com.android.server.am.ActivityManagerService.TAG , ( STRING_1 + ( VAR_2 ) ) ) ; if ( VAR_2 ) { return ; } VAR_3 . METHOD_2 ( VAR_4 ) ; VAR_2 = true ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.Class < ? extends TYPE_1 > VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( java.lang.String format , java.lang.Object ... args ) { final java.lang.String text = java.lang.String.format ( format , args ) ; VAR_2 . METHOD_1 ( text ) ; } 
protected static long METHOD_1 ( long x , int n ) { return ( x < < n ) | ( x > > > ( - n ) ) ; } 
static boolean METHOD_1 ( TYPE_1 item , TYPE_1 VAR_1 ) { return item == null ? false : ( item . METHOD_2 ( VAR_2 ) ) == VAR_1 ; } 
public boolean METHOD_1 ( ) { return false ; } 
public static int METHOD_1 ( ) { int a ; int b ; int c ; a = 6 ; b = 2 ; c = a - b ; return c ; } 
public boolean METHOD_1 ( int subId , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , subId , VAR_1 , STRING_1 ) ) ) { return false ; } return METHOD_1 ( subId ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 field , TYPE_3 VAR_2 ) { if ( METHOD_2 ( VAR_1 , VAR_2 ) ) { VAR_3 . METHOD_1 ( VAR_1 , field , VAR_2 ) ; } } 
public void METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; } 
static boolean METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } 
public int METHOD_1 ( int index ) { if ( ( index < 0 ) || ( index >= ( length ( ) ) ) ) { throw new TYPE_1 ( index ) ; } return TYPE_2 . METHOD_1 ( this , index ) ; } 
public void run ( ) { METHOD_1 ( ) . METHOD_2 ( true ) ; } 
public final TYPE_1 METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { throw new TYPE_2 ( ) ; } state = VAR_1 ; TYPE_1 result = VAR_2 ; VAR_2 = null ; return result ; } 
private void METHOD_1 ( ) { org.junit.Assert.assertEquals ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; org.junit.Assert.assertEquals ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_4 ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } METHOD_3 ( VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; } 
native void METHOD_1 ( long VAR_1 , long VAR_2 , TYPE_1 VAR_3 ) ; 
public static synchronized boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
synchronized void METHOD_1 ( long obj , byte [ ] name ) { METHOD_2 ( ) ; METHOD_3 ( mContext , obj , name ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 field ) { TYPE_3 f = METHOD_2 ( field ) ; if ( f == null ) { return null ; } return f . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 method , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( VAR_1 , method , VAR_2 , VAR_3 ) ; } } 
private static native int METHOD_1 ( int address , java.lang.String text ) ; 
public void METHOD_1 ( ) { if ( VAR_1 ) METHOD_2 ( getName ( ) ) ; METHOD_4 ( ) ; } 
public boolean METHOD_1 ( TYPE_1 field ) { return METHOD_2 ( field ) ; } 
public void run ( ) { METHOD_4 ( ) ; } 
private static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_2 . METHOD_2 ( ) ; } return VAR_1 ; } 
void METHOD_1 ( int VAR_1 , java.io.File path ) { if ( ( VAR_2 ) != null ) { VAR_3 . METHOD_1 ( this , VAR_2 , VAR_1 , path ) ; } } 
public void METHOD_1 ( TYPE_1 config ) { try { if ( ! ( VAR_1 . METHOD_1 ( config ) ) ) { throw new java.lang.IllegalArgumentException ( ) ; } } catch ( android.os.RemoteException e ) { throw e . METHOD_2 ( ) ; } } 
public void METHOD_1 ( ) { assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( ) . toString ( ) ) ; } 
synchronized long METHOD_1 ( int VAR_1 , boolean VAR_2 , long VAR_3 , int VAR_4 , float VAR_5 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 == null ) { return null ; } else { return VAR_1 . METHOD_3 ( ) . METHOD_1 ( ) ; } } 
static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { try { return TYPE_1 . get ( VAR_1 ) . getName ( ) ; } catch ( TYPE_2 e ) { return VAR_1 ; } } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , android.content.Intent VAR_3 ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object expected , java.lang.Object VAR_2 ) { TYPE_1 . fail ( TYPE_1 . format ( VAR_1 , expected , VAR_2 ) ) ; } 
public void run ( TYPE_1 session ) throws java.lang.Exception { TYPE_4 VAR_3 = TYPE_3 . get ( VAR_2 ) . METHOD_1 ( ) ; try { METHOD_2 ( session , VAR_3 ) ; } finally { VAR_3 . METHOD_3 ( ) ; } } 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 field ) { } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == 0 ) { if ( VAR_3 ) android.util.Log.d ( VAR_4 . TAG , STRING_1 ) ; VAR_2 . METHOD_3 ( VAR_5 ) ; } } 
public void METHOD_1 ( int VAR_1 ) throws android.os.RemoteException { METHOD_3 ( VAR_1 ) ; } 
public static native java.lang.String METHOD_1 ( long VAR_1 ) ; 
private final native long METHOD_1 ( long VAR_1 , long offset , int VAR_2 ) ; 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { context . METHOD_2 ( VAR_1 , element , context . METHOD_3 ( element ) , java.lang.String.format ( STRING_1 , element . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.Throwable VAR_3 , java.lang.Object data ) { } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } 
private static boolean METHOD_1 ( android.bluetooth.BluetoothDevice device ) { return ( device != null ) && ( TYPE_1 . METHOD_2 ( device . METHOD_3 ( ) ) ) ; } 
public int count ( ) { int VAR_1 = 1 ; for ( TYPE_1 VAR_2 : METHOD_2 ( ) ) { VAR_1 *= VAR_2 . METHOD_3 ( ) . size ( ) ; } return VAR_1 ; } 
static void METHOD_1 ( long VAR_1 , int src , long VAR_2 ) { TYPE_1 VAR_3 = TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( VAR_3 == null ) { return ; } TYPE_2 . METHOD_3 ( VAR_1 , src , VAR_3 . METHOD_4 ( ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) throws java.io.IOException { for ( TYPE_3 VAR_3 : VAR_1 ) { METHOD_2 ( VAR_3 ) ; } return this ; } 
public boolean METHOD_1 ( int userId ) { try { return ( VAR_1 . METHOD_1 ( userId ) ) == ( VAR_2 ) ; } catch ( android.os.RemoteException e ) { android.util.Log.w ( VAR_3 . TAG , STRING_1 , e ) ; return false ; } } 
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 . METHOD_2 ( ) ; } return VAR_2 . METHOD_3 ( VAR_3 ) ; } 
protected native void METHOD_1 ( byte VAR_1 ) throws java.io.IOException ; 
public void run ( ) { while ( true ) { try { if ( ! ( METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ) ) { break ; } } catch ( TYPE_1 e ) { } } } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . status = VAR_2 ; } METHOD_3 ( ) ; } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 instanceof TYPE_3 ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( VAR_1 ) ) ; return new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; } return null ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 > action ) { action . METHOD_2 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_1 ( VAR_1 , VAR_3 ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( ( VAR_4 ) == VAR_1 ) { return VAR_2 ; } } return null ; } 
protected void METHOD_1 ( long VAR_1 , long VAR_2 ) { VAR_3 . METHOD_2 ( 1 , VAR_2 ) ; VAR_3 . METHOD_2 ( 2 , VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return ( ( METHOD_4 ( VAR_2 ) ) + STRING_1 ) + ( VAR_1 . METHOD_5 ( ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 b ) { return new TYPE_2 ( VAR_1 , r , METHOD_2 ( x , METHOD_4 ( b . METHOD_3 ( ) ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( ) ; c . METHOD_2 ( STRING_1 , STRING_2 ) ; try { c . METHOD_3 ( null ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public void METHOD_1 ( TYPE_1 listener ) { VAR_1 . METHOD_2 ( listener ) ; } 
public java.util.List < java.lang.String > METHOD_1 ( ) { return TYPE_1 . of ( STRING_1 , STRING_2 ) ; } 
public java.io.File [ ] METHOD_1 ( java.io.File VAR_1 ) { java.io.File [ ] r = VAR_1 . METHOD_1 ( ) ; if ( r == null ) { return new java.io.File [ 0 ] ; } else { return r ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , false , true , true , false ) ; } 
synchronized void METHOD_1 ( long VAR_1 , byte [ ] VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 ) { VAR_3 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) , VAR_2 ) ; } 
public final void METHOD_1 ( ) { try { METHOD_2 ( ) ; } catch ( java.lang.Exception e ) { android.util.Log.e ( VAR_1 . TAG , ( STRING_1 + e ) ) ; } } 
public final TYPE_1 METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) ; return VAR_2 ; } 
public final void METHOD_1 ( int VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_2 ( this , VAR_1 , null ) ; } } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( null , new TYPE_3 ( VAR_3 , 10 , VAR_3 , 10 ) ) ; } 
public int METHOD_1 ( android.bluetooth.BluetoothDevice device ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return 0 ; } return service . METHOD_1 ( device ) ; } 
public java.lang.String getName ( ) { return name ; } 
public boolean METHOD_1 ( int VAR_1 ) { return VAR_3 . METHOD_2 ( ( ( byte ) ( VAR_1 ) ) ) ; } 
void METHOD_1 ( TYPE_1 < java.lang.Object > VAR_1 ) ; 
void METHOD_1 ( long VAR_1 ) { this . METHOD_2 ( ) ; TYPE_2 . METHOD_1 ( this . VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_3 = METHOD_2 ( VAR_2 ) ; TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) ; METHOD_3 ( VAR_1 , VAR_3 ) ; } 
final char METHOD_1 ( int offset ) { return VAR_1 . METHOD_1 ( ( offset + ( address ) ) ) ; } 
private final native void METHOD_1 ( float [ ] VAR_1 ) ; 
public void METHOD_1 ( ) { VAR_1 = true ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; } } 
TYPE_1 < TYPE_2 > METHOD_1 ( int index ) { return TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . get ( index ) , VAR_2 [ ( ( offset ) + index ) ] ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 context , java.lang.String VAR_1 , java.lang.String VAR_2 ) { final java.lang.String value = TYPE_2 . METHOD_2 ( context . METHOD_3 ( ) , VAR_1 ) ; return value != null ? value : VAR_2 ; } 
public boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( VAR_2 ) ; } 
public TYPE_1 < TYPE_2 , java.lang.String > METHOD_1 ( int id ) { if ( ( VAR_1 ) != null ) { return VAR_1 . METHOD_1 ( id ) ; } return null ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; return VAR_1 . values [ VAR_2 ] ; } 
public void run ( ) { if ( VAR_1 || ( ( VAR_2 . METHOD_1 ( ) ) != ( VAR_3 . METHOD_2 ( ) ) ) ) { METHOD_4 ( ) ; } } 
byte [ ] METHOD_1 ( ) { return VAR_2 ; } 
public java.lang.String toString ( ) { return name ; } 
public boolean METHOD_1 ( java.lang.String name ) { return VAR_2 . METHOD_2 ( name ) ; } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 3 , 16 , false ) ; args.out = TYPE_3 . log ( args . inV , t ) ; } 
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { synchronized ( VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { log ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; } } } } 
public TYPE_1 get ( int index ) { java.lang.String field = ( STRING_1 + ( java.lang.Integer . toString ( index ) ) ) + STRING_2 ; return new TYPE_1 ( this , field , VAR_1 . get ( index ) , true ) ; } 
private void METHOD_1 ( java.lang.String config ) { if ( VAR_1 ) TYPE_1 . d ( VAR_2 . TAG , ( ( STRING_1 + config ) + STRING_2 ) ) ; TYPE_2 . set ( VAR_3 , config ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , TYPE_1 . METHOD_3 ( STRING_1 ) , false , new TYPE_2 ( TYPE_1 . METHOD_4 ( STRING_1 ) , STRING_2 ) , null ) ; } 
public static void METHOD_1 ( TYPE_1 args ) { args.out = ( ( byte ) ( TYPE_2 . METHOD_2 ( args . inV ) ) ) ; } 
public void METHOD_1 ( TYPE_1 info ) { } 
synchronized void METHOD_1 ( long id , int [ ] VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 ) ; } 
public static int METHOD_1 ( int arg ) { return ( ( ( arg + 1 ) + 2 ) - 3 ) + 4 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int flags ) { VAR_2 . METHOD_1 ( VAR_1 , flags ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_4 ) ; VAR_1 . METHOD_4 ( type . name ( ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } } 
private void METHOD_1 ( TYPE_2 pw ) { pw.print ( METHOD_2 ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 type ) { return false ; } 
public void METHOD_1 ( ) { METHOD_2 ( INT_1 , 2 ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 location , java.lang.String VAR_2 ) { fail ( STRING_1 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 , true , false ) ; } 
private int METHOD_1 ( ) throws java.io.IOException { TYPE_1 type = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; int size = type . METHOD_4 ( ) ; METHOD_5 ( size ) ; return size + 1 ; } 
static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { if ( VAR_1 == null ) { return VAR_3 ; } return VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; } 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) != null ; } 
public TYPE_1 METHOD_1 ( java.lang.String name ) { return VAR_1 . METHOD_2 ( VAR_2 class , name ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 context ) { return context . METHOD_2 ( VAR_1 , ( ( VAR_2 ) < 11 ? VAR_4 : ( VAR_4 ) | 4 ) ) ; } 
protected int METHOD_1 ( TYPE_1 context ) { if ( ( VAR_1 ) == ( - 1 ) ) { VAR_1 = context . METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; } 
protected final TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) ; } return VAR_1 ; } 
public static void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( VAR_1 , 0 , 0 , false , 0 ) ; } 
public void error ( int VAR_1 , java.lang.String VAR_2 ) throws android.os.RemoteException { } 
public java.lang.Object [ ] METHOD_1 ( ) { return new java.lang.Object [ 0 ] ; } 
public void out ( java.lang.String line ) { METHOD_1 ( line ) ; } 
public void METHOD_1 ( int [ ] VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_5 = VAR_1 [ VAR_4 ] ; } } 
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } return VAR_2 . METHOD_2 ( ) . METHOD_1 ( ) ; } 
private void METHOD_1 ( TYPE_1 f ) throws java.lang.Exception { TYPE_2 c = METHOD_2 ( f , VAR_1 ) ; TYPE_3 < java.util.List < ? > > VAR_2 = c . METHOD_1 ( ) ; METHOD_4 ( VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 < ? super TYPE_2 > VAR_1 ) throws java.lang.Exception { VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; for ( TYPE_3 VAR_3 : VAR_4 . values ( ) ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 , STRING_1 ) ; VAR_1 . METHOD_4 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 , false ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { METHOD_2 ( VAR_1 , VAR_2 , null , true ) ; } 
public void METHOD_1 ( ) { try { new TYPE_1 ( null ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } } 
public java.lang.String METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return STRING_1 ; } return VAR_2 ? STRING_2 : STRING_3 ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 node = VAR_1 . METHOD_2 ( VAR_2 ) ; return node != null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 , java.lang.Object VAR_3 ) { } 
public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 , int status ) { if ( VAR_2 ) { android.util.Log.e ( VAR_3 . TAG , ( STRING_1 + STRING_2 ) ) ; return ; } METHOD_2 ( callback ) ; } 
public synchronized void METHOD_1 ( ) throws java.io.IOException { if ( ! ( VAR_1 ) ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } VAR_1 = true ; } } 
public boolean METHOD_1 ( ) { return VAR_1 ; } 
private boolean METHOD_1 ( ) { return ( device . METHOD_3 ( TYPE_2 . METHOD_4 ( STRING_1 ) ) ) || ( device . METHOD_3 ( TYPE_2 . text ( STRING_2 ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_3 ( 0 ) ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { try { mContext . METHOD_2 ( VAR_1 ) ; } catch ( java.lang.IllegalArgumentException e ) { } VAR_1 = null ; } super . METHOD_1 ( ) ; } 
native boolean METHOD_1 ( java.lang.String path , int VAR_1 , int VAR_2 , byte [ ] input , byte [ ] output ) ; 
protected boolean METHOD_1 ( com.android.jack.ir.ast.JDefinedClassOrInterface type ) { return ( ! ( type . METHOD_2 ( ) ) ) && ( ! ( ( ( TYPE_2 ) ( type ) ) . METHOD_3 ( VAR_1 class ) ) ) ; } 
void METHOD_1 ( int VAR_2 , android.os.Message VAR_3 ) throws android.os.RemoteException ; 
private void log ( java.lang.String msg ) { TYPE_1 . d ( VAR_1 , msg ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false ) ; METHOD_2 ( false , true ) ; } 
public int METHOD_1 ( ) { return ( ( VAR_1 ) * INT_1 ) + ( VAR_2 . METHOD_1 ( ) ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 = null ; if ( ( VAR_3 ) && ( ( VAR_4 ) != null ) ) { METHOD_3 ( VAR_5 ) ; METHOD_4 ( ) ; } METHOD_5 ( ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 . METHOD_3 ( STRING_1 , STRING_2 ) . METHOD_3 ( STRING_3 , STRING_4 ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) + STRING_1 ) + ( VAR_1 . METHOD_4 ( ) ) ; } 
public void run ( int i ) { try ( TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( VAR_3 , null , null , null , null ) ) { while ( VAR_1 . METHOD_2 ( ) ) { } } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , VAR_2 , false , VAR_3 , ( ( TYPE_2 [ ] ) ( null ) ) ) ; } 
public void METHOD_1 ( int VAR_2 , android.os.Message VAR_3 ) throws android.os.RemoteException { synchronized ( VAR_4 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_5 ) . METHOD_1 ( VAR_6 , VAR_7 , VAR_2 , VAR_3 ) ; } } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( new TYPE_2 ( VAR_2 . METHOD_5 ( ) ) ) ; } 
public static java.lang.String METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_3 = VAR_1 . METHOD_3 ( ) ; return TYPE_4 . METHOD_4 ( VAR_3 ) ; } 
private synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_2 ) < ( VAR_1 . size ( ) ) ) { return VAR_1 . get ( VAR_2 ) ; } else { return null ; } } 
static void METHOD_1 ( int [ ] VAR_1 ) { VAR_1 [ 5 ] = 11 ; VAR_1 [ 4 ] = 11 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 method , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) { if ( METHOD_2 ( VAR_1 , VAR_3 ) ) { VAR_4 . METHOD_1 ( VAR_1 , method , VAR_2 , VAR_3 ) ; } } 
public boolean METHOD_1 ( ) throws TYPE_1 { return VAR_1 . METHOD_2 ( ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( new TYPE_3 ( new TYPE_4 ( VAR_1 ) , false ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( VAR_1 , new TYPE_3 ( ) , 100 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } 
public boolean METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 e ) { long id = VAR_1 . METHOD_2 ( 6 , e . METHOD_3 ( VAR_1 ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( id , VAR_1 ) ; return VAR_2 ; } 
private boolean METHOD_1 ( ) { return ( ( TYPE_1 . METHOD_2 ( ) ) >= ( VAR_1 ) ) && ( ! ( METHOD_4 ( ) ) ) ; } 
public synchronized TYPE_1 < ? extends TYPE_2 > METHOD_1 ( ) { return TYPE_3 . METHOD_3 ( VAR_2 . values ( ) ) ; } 
public int METHOD_1 ( ) { return ( address . METHOD_1 ( ) ) + ( 11 * ( VAR_1 ) ) ; } 
public static void METHOD_1 ( int VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; } } 
public TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 ) throws android.os.RemoteException { synchronized ( VAR_3 ) { return this . METHOD_1 ( VAR_1 , VAR_2 , null ) ; } } 
public int METHOD_1 ( int VAR_1 ) { return METHOD_1 ( VAR_1 , ( ( length ( ) ) - 1 ) ) ; } 
public java.lang.Object METHOD_1 ( ) { try { return ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( e ) ; } } 
public void METHOD_1 ( ) { try { if ( VAR_1 ) { VAR_2 . METHOD_1 ( VAR_3 , null ) ; } } catch ( android.os.RemoteException VAR_4 ) { } } 
public void METHOD_1 ( ) throws java.lang.Throwable { METHOD_2 ( INT_1 , INT_2 , INT_3 , VAR_1 , true , false ) ; TYPE_1 . METHOD_3 ( this ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 pm ) throws TYPE_3 , TYPE_4 { if ( ( VAR_1 . METHOD_2 ( VAR_2 , true , VAR_3 ) ) == ( VAR_4 ) ) { return TYPE_1 . METHOD_3 ( STRING_1 ) ; } return new TYPE_1 ( ) ; } 
public void METHOD_1 ( long s ) { super . METHOD_1 ( s ) ; throw new java.lang.RuntimeException ( STRING_1 ) ; } 
static void METHOD_1 ( long VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 d = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( d == null ) { return ; } TYPE_1 . METHOD_3 ( VAR_5 , VAR_2 , VAR_3 ) ; } 
public TYPE_2 METHOD_2 ( ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 != null ) return VAR_1 ; if ( ( VAR_3 ) != null ) return VAR_3 ; return super . METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( METHOD_2 ( VAR_2 ) ) { METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; } VAR_2 . METHOD_5 ( VAR_1 , VAR_4 , this ) ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( ) { try { return ( ( TYPE_1 < TYPE_2 > ) ( super . METHOD_2 ( ) ) ) ; } catch ( TYPE_3 e ) { throw new TYPE_4 ( e ) ; } } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { long id = VAR_1 . METHOD_2 ( 2 , 0 ) ; return new TYPE_1 ( id , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 0 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { if ( action != null ) { VAR_1 . METHOD_2 ( action ) ; } return this ; } 
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { synchronized ( VAR_1 ) { while ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; } } } } 
public java.util.List < android.bluetooth.BluetoothDevice > METHOD_1 ( ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return new java.util.ArrayList < > ( ) ; } return service . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { assertEquals ( STRING_1 , METHOD_2 ( STRING_2 , STRING_3 , STRING_5 , STRING_6 ) ) ; } 
public static long METHOD_1 ( ) { long a ; long b ; long c ; a = INT_1 ; b = INT_2 ; c = a * b ; return c ; } 
native void METHOD_1 ( long VAR_1 , long id ) ; 
public static synchronized java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; VAR_1 . METHOD_2 ( VAR_6 ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 obj = VAR_1 . METHOD_4 ( STRING_1 ) ; org.junit.Assert.assertEquals ( STRING_2 , obj . toString ( ) ) ; } 
TYPE_1 < TYPE_2 < TYPE_3 , TYPE_4 > > METHOD_1 ( TYPE_2 < TYPE_3 , TYPE_4 > VAR_1 ) ; 
public void METHOD_1 ( ) { assertTrue ( VAR_1 . METHOD_2 ( STRING_2 ) ) ; assertFalse ( VAR_1 . METHOD_2 ( STRING_3 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; } 
public static java.io.File METHOD_1 ( TYPE_2 VAR_1 ) { return new java.io.File ( VAR_1 . METHOD_2 ( ) , STRING_1 ) ; } 
public boolean METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; try { return VAR_2 . METHOD_1 ( ) ; } catch ( android.os.RemoteException e ) { throw new TYPE_1 ( STRING_1 , e , VAR_3 ) ; } } 
public long METHOD_1 ( ) { long count = 0 ; for ( TYPE_1 VAR_1 : VAR_2 ) { count += VAR_1 . METHOD_2 ( ) ; } return ( count * INT_1 ) * INT_1 ; } 
public synchronized void run ( com.android.jack.ir.ast.JDefinedClassOrInterface VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; } 
private boolean METHOD_1 ( TYPE_1 node ) { synchronized ( node ) { return node . METHOD_2 ( VAR_1 class ) ; } } 
protected void METHOD_1 ( ) throws java.io.IOException { if ( ( ( fd ) != null ) && ( fd . valid ( ) ) ) { METHOD_2 ( VAR_1 ) ; VAR_2 = true ; } } 
public TYPE_1 METHOD_1 ( byte [ ] VAR_1 ) { try { VAR_2 . METHOD_2 ( VAR_1 ) ; } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } return this ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int w , int h , short [ ] d , int VAR_6 ) ; 
public static int METHOD_1 ( int x , int y ) { int VAR_2 = x - y ; return VAR_2 + y ; } 
public boolean METHOD_1 ( TYPE_1 uri , TYPE_2 VAR_1 ) { if ( ( uri == null ) || ( VAR_1 == null ) ) return false ; return TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , uri . METHOD_4 ( ) ) ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int w , int h , int VAR_6 , long [ ] d , int VAR_7 ) ; 
public void METHOD_1 ( char c ) { this . METHOD_1 ( c ) ; } 
public boolean METHOD_1 ( ) { synchronized ( VAR_1 ) { TYPE_1 VAR_2 = ( ( VAR_3 ) != null ) ? VAR_3 . METHOD_1 ( ) : false ; return VAR_2 ; } } 
public int METHOD_1 ( ) { return 2 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 { TYPE_3 config = VAR_4 . METHOD_2 ( VAR_3 ) ; return config . METHOD_3 ( ) . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , 0 ) ; fail ( STRING_1 ) ; } catch ( java.lang.IllegalArgumentException VAR_6 ) { } } 
private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) throws java.io.IOException { TYPE_2 options = new TYPE_2 ( ) ; VAR_3 = VAR_2 ; TYPE_3 VAR_4 = new TYPE_3 ( ) ; METHOD_1 ( 4 , STRING_1 , VAR_1 , VAR_4 , options ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; VAR_2 = null ; } 
private static native java.lang.Class < ? > [ ] METHOD_1 ( java.lang.Class < ? > c , boolean VAR_2 ) ; 
public void METHOD_1 ( TYPE_1 listener ) { } 
private TYPE_1 METHOD_1 ( TYPE_2 node ) { return TYPE_3 . METHOD_1 ( node ) ; } 
public final java.lang.String METHOD_1 ( java.lang.String s , TYPE_1 VAR_1 ) { java.lang.StringBuilder VAR_2 = new java.lang.StringBuilder ( s . length ( ) ) ; METHOD_2 ( VAR_2 , s , VAR_1 , false ) ; return VAR_2 . toString ( ) ; } 
public abstract void METHOD_1 ( int VAR_1 ) ; 
public static TYPE_1 [ ] METHOD_1 ( ) { return new TYPE_1 [ ] { TYPE_2 . METHOD_2 ( VAR_2 ) , TYPE_2 . METHOD_2 ( VAR_3 ) } ; } 
public TYPE_1 METHOD_1 ( TYPE_1 path ) { VAR_1 . METHOD_2 ( 0 , new TYPE_2 ( java.lang.String . METHOD_3 ( VAR_2 ) , VAR_2 ) ) ; VAR_1 . METHOD_4 ( 0 , path . METHOD_5 ( ) ) ; return this ; } 
public static int METHOD_1 ( int x , int y ) { int VAR_2 = x + y ; return VAR_2 - x ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( 0 , true , false ) ; } 
private static native long METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , int flags ) ; 
private void METHOD_1 ( TYPE_1 < java.lang.String > VAR_2 , java.util.Set < TYPE_2 > VAR_3 ) { for ( java.lang.String VAR_4 : VAR_2 ) { METHOD_2 ( VAR_4 , VAR_3 ) ; } } 
public int METHOD_1 ( int VAR_1 ) { int result = i ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . METHOD_2 ( i , i ) ; } return result ; } 
public java.lang.String METHOD_1 ( ) { return path ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { if ( ! ( VAR_1 . equals ( VAR_2 ) ) ) { METHOD_2 ( VAR_1 ) ; } } 
public static int METHOD_1 ( byte value ) { return ( ( int ) ( ( double ) ( value ) ) ) ; } 
public boolean METHOD_1 ( int netId ) { return VAR_2 . METHOD_2 ( netId , true ) ; } 
public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String name ) { if ( VAR_1 == null ) { java.lang.String msg = STRING_1 + name ; android.util.Slog.w ( com.android.server.am.ActivityManagerService.TAG , msg ) ; throw new TYPE_3 ( msg ) ; } return METHOD_2 ( VAR_1 , name ) ; } 
static long METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return VAR_2 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( false ) ; assertEquals ( INT_1 , VAR_1 . size ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ! ( METHOD_2 ( VAR_1 , VAR_2 , null ) ) ) { return ; } METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_3 ( VAR_5 , VAR_4 ) ; } 
private long METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; } return VAR_1 ; } 
private void METHOD_1 ( TYPE_2 VAR_3 , java.io.File VAR_1 ) throws java.io.IOException { TYPE_1 . i ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; } 
final void METHOD_1 ( int offset , double value ) { VAR_1 . METHOD_1 ( ( offset + ( address ) ) , value ) ; } 
public void METHOD_1 ( TYPE_1 context , android.content.Intent VAR_1 ) { java.lang.String action = VAR_1 . METHOD_2 ( ) ; if ( TYPE_2 . equals ( action ) ) { METHOD_3 ( context , new TYPE_3 ( METHOD_4 ( ) ) ) ; } } 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 callback ) { METHOD_2 ( VAR_1 ) ; } 
public static boolean METHOD_1 ( byte [ ] VAR_1 ) { int VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; return VAR_2 > 0 ; } 
synchronized void METHOD_1 ( long id ) { if ( ( mContext ) != 0 ) { METHOD_2 ( mContext , id ) ; } } 
void METHOD_1 ( ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public void run ( ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 number , java.lang.String VAR_1 ) { return METHOD_2 ( number , ( ( number . METHOD_4 ( ) . length ( ) ) > 0 ? number . METHOD_4 ( ) : VAR_1 ) ) ; } 
public void info ( java.lang.String VAR_1 , java.lang.Object ... arg ) { VAR_2 . METHOD_2 ( java.lang.String.format ( VAR_1 , arg ) ) ; } 
public int METHOD_1 ( TYPE_1 callback , int VAR_1 ) throws android.os.RemoteException { return 0 ; } 
public synchronized void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( event , true ) ; VAR_1 . METHOD_3 ( VAR_2 , event . METHOD_4 ( ) , event . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 p ) { METHOD_2 ( ) ; METHOD_3 ( ( ( int ) ( METHOD_4 ( p ) ) ) ) ; } 
public abstract boolean METHOD_1 ( TYPE_1 VAR_1 ) ; 
public void METHOD_2 ( ) { VAR_2 . METHOD_2 ( ) ; } 
public boolean METHOD_1 ( boolean VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { synchronized ( VAR_1 ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_1 b ) { if ( b . METHOD_2 ( ) ) { return this ; } return this . METHOD_3 ( b . METHOD_4 ( ) ) ; } 
private boolean METHOD_1 ( TYPE_1 c , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return ( METHOD_2 ( c , VAR_1 , VAR_2 ) ) && ( METHOD_3 ( c , VAR_1 , VAR_2 ) ) ; } 
public static double [ ] METHOD_1 ( double [ ] VAR_1 , int VAR_2 ) { if ( VAR_2 < 0 ) { throw new TYPE_1 ( java.lang.Integer . toString ( VAR_2 ) ) ; } return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; } 
boolean METHOD_1 ( int VAR_2 , int VAR_3 ) throws android.os.RemoteException ; 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 { return METHOD_2 ( VAR_1 , null , VAR_2 , VAR_3 , true ) ; } 
public static long METHOD_1 ( long VAR_1 ) { return VAR_1 >= 0 ? VAR_1 : - VAR_1 ; } 
public java.lang.Class < ? > METHOD_1 ( ) { if ( METHOD_2 ( ) ) { return null ; } return TYPE_1 . METHOD_3 ( this ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { for ( java.lang.String provider : VAR_1 ) { METHOD_1 ( provider ) ; } } 
public abstract java.util.List < ? extends TYPE_1 > METHOD_1 ( ) ; 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( STRING_1 , null ) ; try { c . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_2 . METHOD_4 ( ) ) ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ) ; for ( TYPE_1 VAR_5 : VAR_1 . METHOD_3 ( ) ) { METHOD_1 ( VAR_5 ) ; } } } 
void METHOD_1 ( int key , java.io.File from , java.io.File to ) throws TYPE_1 ; 
public static java.lang.String METHOD_1 ( TYPE_1 locale , java.lang.String VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 , locale ) ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , byte [ ] d , int VAR_5 ) ; 
public static < TYPE_1 > TYPE_2 < TYPE_3 < ? extends TYPE_1 > > METHOD_1 ( TYPE_2 < ? super TYPE_1 > ... VAR_1 ) { return TYPE_4 . METHOD_1 ( ( ( java.util.List ) ( TYPE_5 . METHOD_2 ( VAR_1 ) ) ) ) ; } 
public void METHOD_1 ( java.lang.String url ) { if ( url == null ) { return ; } METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , url ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( int size ) { this . size = size ; } 
private void METHOD_1 ( int VAR_1 , java.lang.Object obj ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , 0 , obj ) ; } 
public void run ( ) { TYPE_1 . METHOD_1 ( ) ; android.util.Log.d ( VAR_1 . TAG , STRING_1 ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , android.os.Message VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_1 . METHOD_1 ( VAR_2 ) ; } 
TYPE_1 [ ] METHOD_1 ( ) { synchronized ( VAR_1 ) { return VAR_1 . METHOD_2 ( new TYPE_1 [ VAR_1 . size ( ) ] ) ; } } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( ( ( VAR_2 ) + STRING_1 ) + name ) + VAR_3 ) ) ; VAR_1 . METHOD_3 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 , false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; } 
public long METHOD_1 ( TYPE_1 [ ] VAR_1 , int offset , int length ) throws java.io.IOException { return VAR_2 . METHOD_1 ( VAR_1 , offset , length ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_4 ) == null ) { VAR_4 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , 3 ) ; } return VAR_4 ; } 
public static boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) != null ; } return VAR_1 ; } 
public boolean METHOD_1 ( java.lang.String packageName , int userId ) { java.lang.String VAR_1 = METHOD_2 ( userId ) ; return ( TYPE_2 . equals ( packageName , VAR_1 ) ) || ( TYPE_2 . equals ( packageName , VAR_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 e ) { super . METHOD_1 ( e ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( com.android.jack.ir.ast.JMethod method ) { METHOD_1 ( ( ( TYPE_1 ) ( method ) ) ) ; } 
protected void METHOD_1 ( TYPE_1 h , int VAR_1 , java.lang.Object obj ) { synchronized ( VAR_2 ) { TYPE_2 r = new TYPE_2 ( h , VAR_1 , obj ) ; VAR_3 . METHOD_2 ( r ) ; METHOD_3 ( r ) ; } } 
public static TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , false ) . build ( ) ; } 
protected boolean METHOD_1 ( boolean VAR_1 ) { if ( ! VAR_1 ) { VAR_2 = true ; } return VAR_1 ; } 
synchronized void METHOD_1 ( long VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , VAR_1 ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 context ) { return TYPE_3 . METHOD_2 ( context ) ? VAR_3 : VAR_4 ; } 
public TYPE_1 METHOD_1 ( TYPE_2 context ) { return null ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , double VAR_3 ) ; 
public void METHOD_1 ( ) { s = new TYPE_1 ( STRING_1 ) ; try { s . METHOD_2 ( ( ( java.lang.String ) ( null ) ) ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public static final boolean METHOD_1 ( TYPE_1 VAR_1 , int type ) { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return false ; } return ( VAR_2 . type ) == type ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 t = new TYPE_1 ( mRS , VAR_1 , VAR_2 ) ; assertTrue ( METHOD_2 ( t ) ) ; t . METHOD_3 ( ) ; METHOD_4 ( ) ; assertEquals ( VAR_3 , result ) ; } 
protected java.lang.String METHOD_1 ( TYPE_1 type ) { TYPE_2 VAR_1 = type . METHOD_2 ( ) ; assert VAR_1 != null ; return getName ( VAR_1 , type . getName ( ) ) ; } 
public int METHOD_1 ( android.bluetooth.BluetoothDevice device ) { METHOD_2 ( VAR_1 , STRING_1 ) ; return TYPE_1 . METHOD_3 ( METHOD_4 ( ) , TYPE_1 . METHOD_5 ( device . METHOD_6 ( ) ) , VAR_3 ) ; } 
private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { return TYPE_1 . METHOD_2 ( VAR_1 ) ; } 
public static native long METHOD_1 ( java.lang.String name ) ; 
public void error ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.Object data ) { java.lang.String VAR_3 = METHOD_1 ( VAR_2 ) ; TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) ; METHOD_2 ( VAR_1 , VAR_3 ) ; } 
public void METHOD_1 ( ) { if ( ( METHOD_2 ( METHOD_3 ( ) ) ) || ( METHOD_4 ( ) ) ) { } else { throw new TYPE_1 ( STRING_1 ) ; } } 
private void METHOD_1 ( int expected , int VAR_1 ) { org.junit.Assert.assertEquals ( java.lang.Integer . METHOD_2 ( expected ) , java.lang.Integer . METHOD_2 ( VAR_1 ) ) ; } 
private static void METHOD_1 ( java.lang.String msg ) { android.util.Log.e ( VAR_1 . TAG , msg ) ; } 
final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_1 ( VAR_1 , INT_1 , VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( ) { synchronized ( VAR_1 ) { return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( VAR_1 ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( android.bluetooth.BluetoothDevice device , byte type , byte id , byte [ ] data ) { VAR_1 . METHOD_1 ( device , type , id , data ) ; } 
void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; status = VAR_1 ; } 
static boolean METHOD_1 ( long VAR_1 , float VAR_2 ) { TYPE_1 d = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( d == null ) { return false ; } d . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) ) ; return true ; } 
public TYPE_1 METHOD_1 ( ) { return ( size ) == 0 ? null : ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; } 
public void METHOD_1 ( TYPE_1 h ) { return ; } 
public void METHOD_1 ( TYPE_1 call ) { METHOD_2 ( call , true , false ) ; } 
public void run ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; } 
public static void METHOD_1 ( char [ ] a ) { TYPE_2 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) , null , 0 , 0 ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; } } 
native void METHOD_1 ( long VAR_1 ) ; 
private static TYPE_1 METHOD_1 ( java.lang.Object VAR_1 ) { return ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_1 ( ) ; } 
public void METHOD_1 ( int VAR_1 ) { try { callback . METHOD_1 ( VAR_1 ) ; } catch ( android.os.RemoteException e ) { METHOD_3 ( uid , VAR_2 ) ; } } 
private static void METHOD_1 ( java.lang.String msg ) { if ( VAR_1 ) android.util.Log.d ( VAR_2 . TAG , msg ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( null ) ; } } 
private void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws java.io.IOException { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( boolean value ) { synchronized ( this ) { VAR_1 = value ; TYPE_1 . METHOD_2 ( address , value ) ; } return this ; } 
TYPE_1 METHOD_1 ( com.android.jack.ir.ast.JDefinedClassOrInterface type ) { return new TYPE_1 ( type , this ) ; } 
public synchronized TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 . METHOD_1 ( VAR_3 , VAR_1 , VAR_2 ) ; return this ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_1 ) == null ) { errln ( STRING_1 ) ; } } 
public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { return TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( false ) ) . METHOD_4 ( ) ; } 
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( ) ; } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) == ( METHOD_2 ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } return METHOD_3 ( VAR_3 , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 location ) { VAR_2 = location ; } 
protected boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , int offset , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_2 node , java.lang.String VAR_4 , boolean VAR_5 , int VAR_6 ) { return false ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( CHAR_1 , STRING_1 ) ; METHOD_2 ( CHAR_2 , STRING_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { long VAR_2 = 0 ; if ( VAR_1 != null ) { VAR_2 = VAR_3 ; } VAR_4 = VAR_1 ; TYPE_2 . METHOD_2 ( VAR_5 , VAR_2 ) ; } 
public long METHOD_1 ( long c ) throws TYPE_1 { long s = super . METHOD_1 ( c ) ; TYPE_2 . METHOD_2 ( s , false ) ; return s ; } 
public int METHOD_1 ( int VAR_1 , java.lang.String number ) throws android.os.RemoteException { return this . METHOD_1 ( VAR_1 , number ) ; } 
boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 , true ) ; if ( ! ( METHOD_5 ( ) ) ) { return false ; } METHOD_6 ( VAR_1 , VAR_2 , false ) ; return true ; } 
public void run ( ) { try { METHOD_1 ( app , VAR_1 , id ) ; } catch ( java.io.IOException e ) { e . METHOD_2 ( ) ; } } 
public void METHOD_1 ( android.bluetooth.BluetoothDevice device , int VAR_2 , int VAR_3 , int VAR_4 , int status ) { } 
public void run ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 , java.io.IOException { VAR_2 . METHOD_1 ( VAR_4 , VAR_3 , VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { assert VAR_1 != ( VAR_2 ) ; if ( ( VAR_3 ) == VAR_1 ) { VAR_3 = null ; } else { super . METHOD_1 ( VAR_1 ) ; } } 
public static synchronized TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( VAR_1 ) ; } else if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } return VAR_2 ; } 
public static void METHOD_1 ( TYPE_1 args ) { args.out = ( ( int ) ( java.lang.Integer . METHOD_2 ( VAR_3 ) ) ) ; } 
public static long METHOD_1 ( long arg ) { return arg | arg ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; if ( VAR_2 == null ) return ; VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 . METHOD_1 ( VAR_2 ) ; } 
public int METHOD_1 ( int VAR_1 ) { return 3 * VAR_1 ; } 
public static final void log ( java.lang.String VAR_1 ) { } 
final short METHOD_1 ( int offset ) { return VAR_1 . METHOD_1 ( ( offset + ( address ) ) ) ; } 
private native long METHOD_1 ( java.lang.String path , java.lang.String VAR_1 , TYPE_1 VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 , int VAR_6 , TYPE_2 VAR_7 , byte [ ] VAR_8 , TYPE_3 VAR_9 , java.lang.String VAR_10 ) ; 
public void METHOD_1 ( ) { VAR_2 = false ; METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; } 
static void METHOD_1 ( long VAR_1 , long VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; } 
public static void METHOD_1 ( byte [ ] expected , byte [ ] VAR_1 ) { org.junit.Assert.assertEquals ( TYPE_1 . toString ( expected ) , TYPE_1 . toString ( VAR_1 ) ) ; } 
final double METHOD_1 ( int i ) { return METHOD_2 ( METHOD_3 ( i ) ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_2 ) != 0 ) { VAR_1 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; VAR_2 = 0 ; } } 
public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { switch ( INT_1 ) { case INT_1 : java.lang.System.out.println ( STRING_1 ) ; break ; default : throw new TYPE_1 ( ) ; } } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
private static boolean METHOD_1 ( int VAR_1 ) { return ( TYPE_2 . METHOD_3 ( VAR_1 ) ) || ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 . get ( mContext ) . METHOD_3 ( VAR_1 , VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) . METHOD_7 ( mContext ) ; } 
void METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { throw new java.lang.IllegalArgumentException ( STRING_1 ) ; } VAR_2 = VAR_1 ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
public static native double log ( double a ) ; 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_1 target ) { return new TYPE_3 < TYPE_1 > ( target ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_1 . METHOD_1 ( ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { for ( java.util.ArrayList < TYPE_2 > VAR_2 : VAR_3 . values ( ) ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } } 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { assert VAR_1 != null ; VAR_3 . METHOD_2 ( new TYPE_3 ( VAR_1 , VAR_2 ) ) ; } 
public void METHOD_1 ( ) { try { new TYPE_1 ( ( ( TYPE_2 ) ( null ) ) ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } } 
protected void METHOD_1 ( byte [ ] b , int VAR_1 , int VAR_2 ) throws TYPE_1 { } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) { VAR_2 . METHOD_3 ( VAR_1 ) ; } return this ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int x , int y , int VAR_2 , int VAR_3 ) { VAR_4 . METHOD_1 ( VAR_5 , VAR_1 , x , y , VAR_2 , VAR_3 , 0 , 0 ) ; } 
public void METHOD_1 ( java.lang.String msg ) { log ( TYPE_1 , msg ) ; } 
public static int METHOD_1 ( int arg ) { return arg ^ ( - 1 ) ; } 
void METHOD_1 ( byte [ ] a , boolean VAR_1 ) { this . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( a , a . length , VAR_1 , this . VAR_2 ) ; } 
public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 > 0 ) && ( ( VAR_2 ) > 0 ) ) { METHOD_2 ( ( VAR_1 * ( VAR_2 ) ) ) ; } } 
public boolean METHOD_1 ( int VAR_2 , int VAR_3 ) { return false ; } 
public static int METHOD_1 ( int arg ) { return ( arg > > > INT_1 ) & INT_2 ; } 
public boolean METHOD_1 ( ) { return false ; } 
public void METHOD_1 ( char VAR_1 ) { } 
public static native int METHOD_1 ( int VAR_1 ) ; 
private void METHOD_1 ( TYPE_1 rr , java.lang.String VAR_1 , java.lang.Exception e ) { METHOD_2 ( VAR_1 , e ) ; rr . METHOD_3 ( VAR_2 , null ) ; METHOD_4 ( rr ) ; rr . METHOD_5 ( ) ; METHOD_6 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 address , int VAR_2 ) throws java.io.IOException { return new TYPE_3 ( address , VAR_2 , ( ( TYPE_4 ) ( VAR_3 . METHOD_2 ( ) ) ) ) ; } 
private TYPE_1 METHOD_3 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; if ( VAR_2 instanceof TYPE_3 ) { return ( ( TYPE_3 ) ( VAR_2 ) ) . METHOD_3 ( VAR_1 ) ; } return null ; } 
static void METHOD_1 ( long VAR_1 , java.lang.String locale ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return ; } VAR_2 . METHOD_3 ( locale ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( this ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 scheduler ) { TYPE_1 request = scheduler . METHOD_3 ( ) ; request . METHOD_4 ( scheduler . METHOD_5 ( ) ) ; return request ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } } } 
public boolean METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; try { return VAR_1 . METHOD_1 ( ) ; } catch ( android.os.RemoteException e ) { throw e . METHOD_3 ( ) ; } } 
public synchronized void METHOD_1 ( ) throws java.io.IOException { out . METHOD_1 ( ) ; VAR_1 = true ; } 
void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_4 ( ) ; METHOD_5 ( VAR_3 ) ; } 
public void run ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) . METHOD_1 ( VAR_3 class ) ; assert VAR_2 != null ; METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 node ) { java.lang.StringBuilder sb = new java.lang.StringBuilder ( INT_1 ) ; TYPE_2 . append ( sb , node , 0 ) ; return sb . toString ( ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( this ) ; } } } 
public int length ( ) { final boolean VAR_1 = false ; if ( VAR_1 ) { return ( count ) > > > 1 ; } else { return count ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_3 ( ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException ; 
synchronized long METHOD_1 ( long type , int VAR_1 , int VAR_2 , long VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) { } 
public boolean METHOD_1 ( byte [ ] version ) { return ( version [ 0 ] ) == 5 ; } 
public int METHOD_1 ( ) { return java.lang.Integer . METHOD_1 ( value ) ; } 
static void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { if ( VAR_1 != null ) { TYPE_2 . METHOD_2 ( null ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; } } 
public static int METHOD_1 ( java.lang.Object x ) { if ( x == null ) { return 0 ; } return java.lang.Object . METHOD_1 ( x ) ; } 
public final native java.lang.Object get ( java.lang.Object ... args ) ; 
public synchronized TYPE_1 METHOD_1 ( java.lang.Object VAR_1 ) { long value = METHOD_2 ( VAR_1 ) ; if ( value == 0 ) { return VAR_2 ; } if ( ( VAR_3 ) != value ) VAR_4 = new TYPE_2 ( value ) ; return VAR_4 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , null , VAR_3 , VAR_4 , 0 ) ; fail ( STRING_1 ) ; } catch ( java.lang.IllegalArgumentException VAR_5 ) { } } 
public java.util.Set < TYPE_1 > METHOD_1 ( ) { java.util.Set < TYPE_1 > VAR_1 = VAR_2 ; return VAR_1 != null ? VAR_1 : ( VAR_2 = new TYPE_2 ( this ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ! ( METHOD_2 ( VAR_1 , VAR_2 , null ) ) ) { return ; } METHOD_3 ( VAR_3 , null ) ; } 
public void METHOD_1 ( TYPE_1 parent ) throws TYPE_2 { this . parent = parent ; } 
static void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { if ( VAR_1 != null ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; } } 
public boolean METHOD_1 ( ) { return VAR_2 . METHOD_2 ( ) ; } 
synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_4 = null ; } 
public void run ( ) { METHOD_1 ( true ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , VAR_1 , false ) ; } 
public void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public static long METHOD_1 ( ) { long VAR_1 = 3 ; int VAR_2 = 2 ; return VAR_1 < < VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( VAR_1 ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_1 = null ; } } 
static long METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 != null ) { VAR_2 . set ( VAR_3 ) ; } return VAR_4 . METHOD_3 ( VAR_2 ) ; } 
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } return true ; } 
public static void METHOD_1 ( java.lang.Object test , java.lang.Object VAR_1 ) throws java.lang.Exception { TYPE_2 . METHOD_1 ( test , VAR_1 , TYPE_2 . METHOD_2 ( test , VAR_1 ) ) ; } 
protected static void METHOD_1 ( long VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 e ) { TYPE_3 . e ( VAR_2 . TAG , STRING_1 , e ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } } 
private void METHOD_1 ( ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; if ( VAR_2 != null ) VAR_3 . METHOD_1 ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; } 
void METHOD_1 ( TYPE_1 a ) { TYPE_2 . METHOD_3 ( this . VAR_1 , this . VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { try { callback . METHOD_1 ( VAR_1 , VAR_2 ) ; } catch ( android.os.RemoteException e ) { METHOD_2 ( uid , VAR_3 ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_4 . METHOD_4 ( VAR_3 ) ; } 
public java.lang.String METHOD_1 ( ) { TYPE_1 r = VAR_1 . get ( ) ; return r != null ? r . METHOD_2 ( ) : null ; } 
public java.util.List < android.content.Intent > METHOD_1 ( ) { java.util.List < android.content.Intent > VAR_1 = VAR_2 ; VAR_2 = new java.util.ArrayList < > ( ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_3 = TYPE_1 . METHOD_4 ( ) ; ( VAR_4 ) ++ ; VAR_5 = false ; VAR_1 . METHOD_5 ( ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 context , TYPE_3 callback , int VAR_1 ) throws TYPE_4 { TYPE_1 VAR_2 = new TYPE_1 ( context , callback , VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; return VAR_2 ; } 
private native boolean METHOD_1 ( byte [ ] address , TYPE_1 [ ] VAR_1 ) ; 
public synchronized void METHOD_1 ( TYPE_2 test , java.lang.String VAR_1 ) { } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , byte [ ] VAR_3 , long e , int [ ] VAR_4 ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; } 
public void METHOD_1 ( byte input ) { VAR_1 . METHOD_1 ( input ) ; VAR_2 . METHOD_1 ( input ) ; } 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; return TYPE_1 . METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; } 
public static TYPE_1 METHOD_1 ( ) throws TYPE_2 { return new TYPE_1 ( ) ; } 
public java.lang.Object METHOD_1 ( ) { try { return super . METHOD_1 ( ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( e.toString ( ) , e ) ; } } 
private void METHOD_1 ( java.lang.String VAR_1 ) { assertTrue ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; assertFalse ( METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ) ; } 
public static int METHOD_1 ( short value ) { return ( ( int ) ( ( long ) ( value ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { throw new TYPE_2 ( ( STRING_1 + ( this . toString ( ) ) ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { METHOD_3 ( TYPE_1 , VAR_1 , VAR_2 , STRING_1 ) ; } 
static boolean METHOD_1 ( ) { return true ; } 
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; new TYPE_1 ( ) . METHOD_2 ( ) ; } } 
private final synchronized void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ( ( VAR_3 ) > 0 ) ) ; VAR_1 = false ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { for ( TYPE_1 data : VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; org.junit.Assert.assertEquals ( VAR_7 , TYPE_4 . METHOD_1 ( VAR_8 , VAR_2 , VAR_6 , VAR_9 ) ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 method , TYPE_3 VAR_2 ) { if ( METHOD_2 ( VAR_1 , VAR_2 ) ) { VAR_3 . METHOD_1 ( VAR_1 , method , VAR_2 ) ; } } 
private TYPE_1 METHOD_1 ( ) { TYPE_2 options = new TYPE_2 ( ) ; VAR_1 = VAR_2 ; return new TYPE_1 ( options ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) log ( ( STRING_1 + ( this ) ) ) ; VAR_3 . METHOD_3 ( this ) ; METHOD_4 ( ) ; super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { for ( TYPE_1 item : METHOD_2 ( ) ) { item . METHOD_3 ( false ) ; } } 
public boolean METHOD_1 ( int VAR_1 , int VAR_2 , java.lang.String packageName ) { TYPE_1 VAR_3 = TYPE_2 . METHOD_2 ( VAR_2 ) ; if ( VAR_3 == null ) { return false ; } return METHOD_3 ( VAR_1 , VAR_3 . METHOD_4 ( ) , packageName ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) , true ) ; } 
public void METHOD_1 ( TYPE_1 e ) { METHOD_2 ( true ) ; } 
public void METHOD_1 ( long VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 3 , 3 , false ) ; args.out = TYPE_3 . METHOD_3 ( args . inV , t ) ; } 
java.lang.Integer METHOD_1 ( ) ; 
public void METHOD_1 ( ) throws java.lang.Throwable { try { TYPE_1 VAR_1 = VAR_2 ; if ( VAR_1 != null ) { VAR_3 . METHOD_2 ( VAR_1 ) ; } } finally { super . METHOD_1 ( ) ; } } 
public void METHOD_1 ( TYPE_1 h , int VAR_1 , java.lang.Object obj ) { return ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 [ ] > METHOD_1 ( TYPE_2 < ? super TYPE_1 > ... VAR_1 ) { return TYPE_3 . METHOD_1 ( ( ( java.util.List ) ( TYPE_4 . METHOD_2 ( VAR_1 ) ) ) ) ; } 
protected byte [ ] METHOD_1 ( TYPE_1 r ) { return VAR_1 . METHOD_2 ( r , VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ) ; } 
private static TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; VAR_1 . METHOD_3 ( null ) ; return VAR_1 ; } 
public java.lang.String toString ( ) { return getMessage ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) ; assertEquals ( 20 , VAR_1 . size ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_3 ( ) ; } 
protected int METHOD_1 ( int field , int VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { return 1 ; } else if ( VAR_1 == ( VAR_3 ) ) { return 7 ; } return - 1 ; } 
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; fail ( ) ; } catch ( java.lang.IllegalArgumentException expected ) { } } 
public boolean METHOD_1 ( ) { return this . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 callback ) { TYPE_2 service = METHOD_2 ( ) ; if ( service == null ) return ; service . METHOD_1 ( callback ) ; } 
private boolean METHOD_1 ( ) { for ( java.io.File target : VAR_1 ) { if ( ! ( target . METHOD_2 ( ) ) ) { return true ; } } return false ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , android.os.Message VAR_3 ) { VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , true , false ) ; status = VAR_2 ; } 
private boolean METHOD_1 ( int VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public static float METHOD_1 ( ) { float a ; float b ; float c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a / b ; return c ; } 
public boolean METHOD_1 ( ) { METHOD_2 ( ) ; return ( ( VAR_1 ) != null ) && ( ! ( VAR_1 . METHOD_3 ( ) ) ) ; } 
public void METHOD_3 ( ) { super . METHOD_3 ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_3 ( ) ; } 
public void METHOD_1 ( int type , int VAR_2 ) { if ( VAR_3 ) { java.lang.System.out.println ( ( ( STRING_1 + ( TYPE_1 . toString ( VAR_4 , 16 ) ) ) + STRING_2 ) ) ; } this . VAR_5 = true ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.io.File VAR_2 ) { TYPE_2 context = TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; return context . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( ) { return VAR_3 . METHOD_1 ( ) ; } 
public void log ( java.lang.String format , java.lang.Object ... args ) { java.lang.String text = java.lang.String.format ( format , args ) ; VAR_2 . log ( text ) ; } 
public java.lang.String METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String a , java.lang.String b ) { return ( ( a . toString ( ) ) + STRING_1 ) + ( b . toString ( ) ) ; } 
public void METHOD_1 ( java.util.ArrayList < TYPE_1 > to ) { this . to = to ; } 
private java.io.File METHOD_1 ( TYPE_1 info ) throws TYPE_2 , java.io.IOException { return METHOD_1 ( info . getName ( ) , new java.io.File ( info . METHOD_2 ( ) ) , info . METHOD_3 ( ) , false ) ; } 
public int METHOD_2 ( ) throws android.os.RemoteException { synchronized ( VAR_1 ) { return this . METHOD_2 ( ) ; } } 
public void METHOD_1 ( ) throws java.io.IOException { synchronized ( VAR_1 ) { super . METHOD_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_1 ( ) ; } } } 
public int METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( VAR_1 , length ( ) ) ; } 
public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , new java.lang.String [ 0 ] ) ; fail ( ) ; } catch ( TYPE_2 expected ) { } } 
public TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) throws java.io.IOException { for ( TYPE_3 VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 , VAR_3 , false ) ; } return this ; } 
native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 ) ; 
public void METHOD_1 ( ) { try { new TYPE_1 ( ( ( java.util.List ) ( null ) ) ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public static float METHOD_1 ( ) { float a ; float b ; float c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a * b ; return c ; } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { return VAR_2 ; } return VAR_4 ; } 
private void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; if ( ( VAR_1 ) == ( VAR_2 ) ) { METHOD_2 ( STRING_2 ) ; METHOD_3 ( ) ; METHOD_4 ( true ) ; } } 
public int size ( ) { return size ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { long VAR_2 = 0 ; if ( VAR_1 != null ) { VAR_2 = VAR_3 ; } TYPE_2 . METHOD_2 ( VAR_4 , VAR_2 ) ; VAR_5 = VAR_1 ; return VAR_1 ; } 
public void METHOD_1 ( ) { try { long [ ] a = null ; new TYPE_1 ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } } 
public static final void logln ( java.lang.String VAR_1 ) { } 
public void METHOD_1 ( long [ ] VAR_2 , java.lang.String VAR_3 ) throws TYPE_1 { throw new TYPE_2 ( STRING_1 ) ; } 
public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 service = METHOD_2 ( ) ; if ( service == null ) return ; service . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_2 VAR_2 , TYPE_1 VAR_1 ) { METHOD_1 ( VAR_1 , null , VAR_2 , null ) ; } 
public static int METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , int VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , new TYPE_1 ( ) . getName ( ) ) ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { long VAR_1 = INT_1 ; Main . assertEquals ( INT_2 , Main . METHOD_2 ( VAR_1 ) ) ; } 
public static < TYPE_1 > TYPE_4 < TYPE_1 > METHOD_1 ( TYPE_3 < TYPE_2 < ? extends TYPE_1 > > VAR_1 ) { return TYPE_4 . METHOD_1 ( VAR_1 ) ; } 
public boolean METHOD_1 ( ) { return ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; assertNotNull ( VAR_1 ) ; try { VAR_1 . METHOD_3 ( null , null , null ) ; fail ( ) ; } catch ( TYPE_2 expected ) { } } 
private void METHOD_1 ( java.lang.String url ) { this . VAR_1 = url ; } 
public void METHOD_1 ( ) { try { java.lang.Integer [ ] a = null ; new TYPE_1 < java.lang.Integer > ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; super . METHOD_1 ( ) ; } 
private static native < TYPE_1 > TYPE_2 < TYPE_1 > [ ] METHOD_1 ( java.lang.Class < TYPE_1 > c , boolean VAR_2 ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) ; assertEquals ( VAR_2 , VAR_1 ) ; TYPE_1 VAR_3 = TYPE_1 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_3 ) ; } 
public java.lang.String METHOD_1 ( ) { return ( ( TYPE_1 ) ( location ) ) . METHOD_1 ( ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 type ) { if ( ( VAR_1 == null ) || ( ( VAR_1 . length ( ) ) == 0 ) ) { return null ; } return METHOD_2 ( VAR_1 ) . getName ( type ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_3 , ( - 2 ) , 0 ) ; } VAR_4 = null ; } 
public void METHOD_1 ( android.os.Bundle VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } } 
protected void log ( java.lang.String s ) { if ( VAR_1 ) android.util.Log.d ( VAR_2 , ( STRING_1 + s ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { call . METHOD_2 ( true , VAR_1 ) ; METHOD_4 ( ) ; } 
private java.lang.String METHOD_1 ( ) { switch ( VAR_1 ) { case VAR_2 : return STRING_1 ; case VAR_3 : return STRING_2 ; case VAR_4 : return STRING_3 ; case VAR_5 : return STRING_4 ; default : return java.lang.String . METHOD_2 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; TYPE_2 target = VAR_1 . METHOD_3 ( ) ; if ( target == null ) return ; for ( TYPE_1 < TYPE_2 > listener : VAR_2 ) { listener . METHOD_2 ( target ) ; } } 
private byte [ ] METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ! ( VAR_2 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return ( VAR_3 ) != null ? VAR_3 . METHOD_1 ( ) : new byte [ 0 ] ; } } 
public void METHOD_1 ( java.lang.String source ) { this . VAR_1 . METHOD_1 ( source ) ; } 
public void METHOD_1 ( TYPE_1 provider ) { VAR_1 . METHOD_2 ( provider ) ; VAR_3 . METHOD_2 ( 0 ) ; METHOD_4 ( ) ; } 
synchronized void METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( STRING_1 , TYPE_3 . METHOD_3 ( null , TYPE_3 . METHOD_5 ( null , new TYPE_5 ( ) ) ) ) ; } 
public boolean METHOD_1 ( java.lang.String action ) { return ( VAR_1 . METHOD_2 ( action ) ) || ( VAR_2 . METHOD_2 ( action ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String ... VAR_1 ) { return METHOD_2 ( VAR_2 < java.lang.String > METHOD_3 ( ) , true , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( VAR_1 ) . METHOD_3 ( ) ; } 
public final boolean METHOD_1 ( java.lang.String action ) { return ( TYPE_1 . equals ( action ) ) || ( TYPE_2 . equals ( action ) ) ; } 
public static TYPE_1 METHOD_1 ( java.io.File VAR_1 , java.lang.String VAR_2 , int line ) { return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , line , null , null , null ) ; } 
protected void METHOD_1 ( final int VAR_1 ) { VAR_2 . METHOD_2 ( ( ( ( ( VAR_3 ) + STRING_1 ) + name ) + VAR_4 ) ) ; VAR_2 . METHOD_3 ( VAR_5 , STRING_2 , STRING_3 , STRING_4 , false ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 [ ] VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; } 
public void METHOD_1 ( TYPE_1 address ) throws java.io.IOException { try { VAR_1 . METHOD_2 ( VAR_2 , address ) ; } catch ( android.os.RemoteException e ) { throw e . METHOD_3 ( ) ; } } 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 session = VAR_1 . METHOD_2 ( VAR_2 ) ; session . start ( ) ; } 
public float METHOD_1 ( int VAR_1 ) { float result = f ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . METHOD_2 ( f , f ) ; } return result ; } 
public void METHOD_1 ( boolean VAR_1 ) { } 
TYPE_1 [ ] METHOD_1 ( ) { return VAR_2 ; } 
void METHOD_1 ( ) { if ( ( ( VAR_1 ) != 0 ) && ( ( VAR_2 ) != null ) ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } VAR_2 = null ; } 
public static float METHOD_1 ( float x , float y ) { float VAR_2 = x + y ; return VAR_2 - x ; } 
public int METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
private static void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . assertEquals ( CHAR_1 , VAR_1 . METHOD_2 ( ( - 1 ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( 0 , false ) ; METHOD_3 ( 0 , false ) ; } 
public static native void METHOD_1 ( long VAR_1 , long VAR_2 , byte [ ] x , byte [ ] y ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { VAR_3 = VAR_1 ; METHOD_2 ( VAR_3 ) ; } } 
public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = METHOD_2 ( VAR_2 class ) ; TYPE_1 method = VAR_2 class . METHOD_3 ( STRING_1 , VAR_2 class ) ; method . METHOD_4 ( true ) ; method . invoke ( null , VAR_1 ) ; } 
public static int METHOD_1 ( ) { int a ; int b ; int c ; a = 7 ; b = 3 ; c = a * b ; return c ; } 
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return false ; } return true ; } 
public static void METHOD_1 ( byte [ ] a ) { TYPE_1 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 key ) { if ( key . METHOD_2 ( VAR_2 ) ) { return VAR_3 ; } return null ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 , true , VAR_3 ) ; } 
public void METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; } 
public static void METHOD_1 ( boolean VAR_1 ) { Main m = new Main ( ) ; VAR_2 = INT_1 ; VAR_2 = INT_2 ; if ( VAR_1 ) { throw new TYPE_1 ( m . METHOD_2 ( ) ) ; } } 
public void METHOD_1 ( TYPE_1 msg ) { VAR_1 = msg ; } 
private static void log ( java.lang.String msg ) { if ( VAR_2 ) { android.util.Log.d ( TYPE_3 . TAG , msg ) ; } } 
public java.util.Set < java.lang.String > METHOD_1 ( ) { return VAR_2 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { synchronized ( this ) { VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_2 = null ; VAR_3 = false ; } METHOD_3 ( ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( ) ; } 
public static void test ( ) { java.lang.Object [ ] VAR_1 = new java.lang.Object [ 2 ] ; java.lang.Object VAR_2 = VAR_1 [ 0 ] ; VAR_2 . METHOD_1 ( ) ; VAR_1 [ 1 ] = VAR_2 ; } 
private static boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 . METHOD_2 ( STRING_1 ) ; } 
public java.lang.String METHOD_1 ( ) { TYPE_1 r = VAR_1 . get ( ) ; return r != null ? VAR_2 : null ; } 
public boolean METHOD_1 ( ) { return VAR_2 . METHOD_1 ( ) ; } 
public static TYPE_1 METHOD_1 ( ) { return TYPE_1 . of ( TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ) ; } 
public void log ( java.lang.String format , java.lang.Object ... args ) { VAR_2 . log ( format , args ) ; } 
protected java.lang.Object METHOD_1 ( java.lang.String key ) { if ( key == null ) { throw new java.lang.NullPointerException ( ) ; } METHOD_2 ( ) ; return VAR_1 . get ( key ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { ( ( TYPE_2 ) ( VAR_2 . get ( VAR_3 ) ) ) . METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( VAR_1 , VAR_4 , VAR_5 , VAR_7 ) ; } 
boolean get ( long index ) { return ( ( data [ ( ( int ) ( index > > > 6 ) ) ] ) & ( INT_1 < < index ) ) != 0 ; } 
public void run ( ) { synchronized ( this ) { METHOD_2 ( ) ; VAR_1 = VAR_2 . METHOD_3 ( ) ; } } 
public void METHOD_1 ( int VAR_1 , TYPE_1 data ) { TYPE_2 service = METHOD_2 ( ) ; if ( service == null ) return ; service . METHOD_1 ( VAR_1 , data ) ; } 
public boolean METHOD_1 ( int VAR_1 , TYPE_1 event ) { switch ( VAR_1 ) { case VAR_2 : if ( VAR_3 . METHOD_2 ( ) ) { METHOD_3 ( VAR_4 ) ; return true ; } break ; } return false ; } 
public TYPE_1 METHOD_1 ( TYPE_2 context , TYPE_3 VAR_1 , TYPE_4 VAR_2 ) { return new TYPE_1 ( context , VAR_1 , this , VAR_2 ) ; } 
final boolean METHOD_1 ( TYPE_1 r ) { final boolean VAR_1 = VAR_2 . METHOD_2 ( r ) ; VAR_2 . METHOD_3 ( r ) ; return VAR_1 ; } 
public static int METHOD_1 ( int arg ) { return 0 - arg ; } 
public void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( VAR_2 , null ) ; } catch ( android.os.RemoteException e ) { } } 
public void METHOD_1 ( java.io.File out , boolean VAR_2 , java.io.File ... VAR_3 ) throws java.lang.Exception { } 
public TYPE_1 METHOD_1 ( TYPE_2 context , boolean VAR_1 , TYPE_3 callback , int VAR_2 , int VAR_3 ) { return METHOD_1 ( context , VAR_1 , callback , VAR_2 , VAR_3 , null ) ; } 
public void METHOD_1 ( ) { TYPE_1 source = new TYPE_1 ( STRING_1 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_2 , source ) ; TYPE_2 . METHOD_4 ( source ) ; } 
private native int METHOD_1 ( java.lang.String VAR_1 ) ; 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , new TYPE_1 ( VAR_1 ) . getName ( ) ) ; } 
public void METHOD_1 ( long key ) { METHOD_2 ( key ) ; } 
public void METHOD_1 ( TYPE_2 VAR_2 , TYPE_3 VAR_3 , TYPE_1 VAR_1 ) { METHOD_1 ( VAR_1 , null , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { byte [ ] VAR_1 = TYPE_1 . METHOD_2 ( new byte [ 0 ] ) ; assertEquals ( 0 , VAR_1 . length ) ; } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( STRING_1 , null ) ; try { c . METHOD_2 ( null ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
private static byte METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException { int VAR_3 = VAR_1 . METHOD_2 ( VAR_4 , 0 , 1 ) ; if ( VAR_3 != 1 ) { return VAR_5 ; } return VAR_4 [ 0 ] ; } 
public static long METHOD_1 ( long arg ) { return 0 + arg ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( true ) ; } 
private static boolean METHOD_1 ( java.io.File VAR_1 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; try { VAR_3 . METHOD_3 ( VAR_1 , VAR_4 ) ; fail ( ) ; } catch ( java.io.IOException expected ) { } } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( 5 ) ; try { c . METHOD_2 ( null , STRING_1 ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public java.lang.String [ ] METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( ) { return ( count ) == 0 ; } 
private boolean METHOD_1 ( ) { return ( VAR_2 ) != null ? VAR_2 : VAR_3 ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) throws TYPE_2 , java.io.IOException { return new TYPE_1 ( VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 key ) throws java.lang.IllegalArgumentException { if ( ! ( key instanceof TYPE_2 ) ) { throw new java.lang.IllegalArgumentException ( STRING_1 ) ; } this . key = ( ( TYPE_2 ) ( key ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return TYPE_3 . METHOD_2 ( ( ) - > new TYPE_4 ( this ) , VAR_2 , false ) ; } 
public static TYPE_1 METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : return new TYPE_2 ( ) ; default : return TYPE_3 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ; } } 
final void METHOD_1 ( int offset , byte value ) { VAR_1 . METHOD_1 ( ( offset + ( address ) ) , value ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 path ) throws TYPE_3 { TYPE_1 VAR_1 = this ; for ( java.lang.String name : path . METHOD_2 ( ) ) { VAR_1 = VAR_1 . METHOD_1 ( name ) ; } return VAR_1 ; } 
public void METHOD_1 ( android.renderscript.Allocation VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( 0 , ( ( android.renderscript.Allocation ) ( null ) ) , VAR_1 , null , VAR_2 ) ; } 
protected abstract boolean METHOD_1 ( ) ; 
void start ( ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { VAR_2 [ i ] . start ( ) ; } VAR_3 . set ( VAR_4 . TRUE ) ; } 
java.util.Set < TYPE_1 < TYPE_2 , TYPE_3 > > METHOD_1 ( ) { return new TYPE_4 ( ) ; } 
public static int METHOD_1 ( ) { return ( VAR_2 ) != ( Main . METHOD_2 ( ) ) ? INT_1 : INT_2 ; } 
public int get ( int n ) { return values [ n ] ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true ) ; try { key . METHOD_3 ( VAR_1 ) ; fail ( ) ; } catch ( TYPE_1 expected ) { } } 
public final native void METHOD_1 ( int VAR_1 , TYPE_1 request , TYPE_1 VAR_2 , int flags ) throws android.os.RemoteException ; 
public void start ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_3 ) { android.util.Log.d ( TYPE_2 . TAG , STRING_1 ) ; } VAR_4 = VAR_1 ; VAR_5 = new TYPE_3 ( mContext , VAR_6 , VAR_2 ) ; VAR_5 . start ( ) ; } 
public boolean METHOD_1 ( int netId ) { return VAR_2 . METHOD_2 ( netId ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 , VAR_3 , VAR_4 , VAR_5 ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 key ) { int VAR_2 = TYPE_3 . METHOD_2 ( key . toString ( ) ) ; if ( VAR_2 > ( VAR_3 ) ) { VAR_3 = VAR_2 ; } return null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) ; } return VAR_1 ; } 
static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 . METHOD_2 ( VAR_2 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 service ) { android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( service ) ; VAR_2 . start ( ) ; return VAR_2 ; } 
public final boolean equals ( TYPE_1 id ) { return VAR_1 . equals ( ( ( java.lang.Object ) ( id ) ) ) ; } 
public void METHOD_1 ( com.android.jack.ir.ast.JMethod method ) { synchronized ( method ) { TYPE_1 VAR_1 = method . METHOD_2 ( VAR_2 ) ; assert VAR_1 != null ; VAR_1 . METHOD_1 ( true ) ; } } 
public TYPE_1 METHOD_1 ( ) { return METHOD_1 ( null ) ; } 
private boolean METHOD_1 ( ) { return ( TYPE_2 . METHOD_3 ( mContext . METHOD_4 ( ) , VAR_1 , 0 ) ) != 0 ; } 
public void METHOD_1 ( java.io.File out , boolean VAR_1 , java.io.File ... VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_2 ) ; METHOD_3 ( out ) ; run ( ) ; } 
public java.lang.String METHOD_1 ( ) { TYPE_1 app = new TYPE_2 ( mContext ) . METHOD_2 ( ) ; if ( app == null ) { return null ; } return app . packageName ; } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { return METHOD_1 ( false ) ; } 
public java.io.File METHOD_1 ( ) { return VAR_1 ; } 
private TYPE_1 verify ( java.lang.String VAR_1 ) throws TYPE_2 , java.io.IOException , TYPE_3 { return verify ( VAR_1 , null , null ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 field , TYPE_3 VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 , field , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 < TYPE_1 , TYPE_3 > result = new TYPE_2 < TYPE_1 , TYPE_3 > ( VAR_1 , TYPE_3 . TRUE ) ; VAR_2 . METHOD_2 ( new android.os.AsyncResult ( null , result , null ) ) ; } 
public final TYPE_1 METHOD_1 ( ) { return this . location ; } 
public void METHOD_1 ( ) { METHOD_1 ( null , true ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( VAR_1 , null , null , VAR_2 , true ) ; } 
public boolean METHOD_1 ( ) { return false ; } 
public boolean METHOD_1 ( int VAR_1 , int index ) { return ( index == ( this . index ) ) && ( VAR_1 < ( ( VAR_2 ) + ( length ) ) ) ; } 
void METHOD_1 ( ) throws android.os.RemoteException ; 
public TYPE_1 [ ] METHOD_1 ( android.bluetooth.BluetoothDevice device ) { METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_2 VAR_2 = VAR_3 . METHOD_3 ( device ) ; if ( VAR_2 == null ) { return null ; } return VAR_2 . METHOD_4 ( ) ; } 
private void METHOD_1 ( ) { android.content.Intent VAR_2 = new android.content.Intent ( VAR_3 ) ; METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.Object value ) { return METHOD_2 ( value ) ; } 
static int METHOD_1 ( long VAR_1 , int x , int y ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 . METHOD_3 ( x , y ) ; } 
public void METHOD_1 ( TYPE_1 event ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( false ) ; } METHOD_4 ( ) ; } 
TYPE_3 METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( VAR_4 , VAR_2 ) ; TYPE_3 VAR_5 = ( ( TYPE_3 ) ( VAR_3 . arg ) ) ; TYPE_4 . assertFalse ( VAR_5 . METHOD_3 ( VAR_1 ) ) ; return VAR_5 ; } 
public void METHOD_1 ( ) { TYPE_1 e = new TYPE_2 ( ) ; try { e . METHOD_2 ( ( ( TYPE_3 ) ( null ) ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public static TYPE_1 METHOD_1 ( java.lang.String key ) { synchronized ( VAR_1 ) { return VAR_1 . get ( key ) ; } } 
public boolean METHOD_1 ( ) { if ( VAR_1 ) { return false ; } TYPE_1 parent = METHOD_2 ( ) ; return parent instanceof TYPE_2 ; } 
public void METHOD_2 ( TYPE_1 VAR_1 ) throws android.os.RemoteException { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , final java.lang.String action ) throws TYPE_3 { VAR_1 . METHOD_2 ( new android.content.Intent ( action ) , null ) ; synchronized ( VAR_3 ) { VAR_3 . METHOD_3 ( VAR_4 ) ; } } 
public void METHOD_1 ( ) { synchronized ( this ) { if ( VAR_1 ) { return ; } try { VAR_2 . METHOD_1 ( ) ; VAR_1 = true ; } catch ( android.os.RemoteException e ) { } } } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { return TYPE_1 . METHOD_2 ( VAR_1 , true , true , false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 t = new TYPE_1 ( STRING_1 ) ; fail ( ) ; } catch ( java.lang.RuntimeException expected ) { } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; assertNotNull ( VAR_1 ) ; assertEquals ( VAR_2 , VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . getName ( ) ) ; } 
static void METHOD_1 ( long VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return ; } VAR_5 = VAR_2 ; } 
int METHOD_1 ( ) { int VAR_1 = 0 ; if ( ( VAR_3 ) != null ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( ! ( VAR_2 . METHOD_2 ( ) ) ) { VAR_1 ++ ; } } } return VAR_1 ; } 
public boolean METHOD_1 ( ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( ) ; } 
void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; status = VAR_1 ; state = VAR_2 ; } 
public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { try { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; return true ; } catch ( TYPE_2 e ) { return false ; } } 
public boolean METHOD_1 ( TYPE_1 type ) { java.util.Map < java.lang.String , TYPE_2 > VAR_1 = VAR_2 . get ( type ) ; return ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ; } 
protected void METHOD_1 ( java.io.File VAR_1 , java.lang.String ... VAR_2 ) throws java.io.IOException { METHOD_2 ( VAR_3 , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_1 ( ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_2 options = new TYPE_2 ( ) ; VAR_1 = VAR_2 ; return new TYPE_1 ( options ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , java.lang.String VAR_3 , android.os.Bundle VAR_4 , boolean VAR_5 , int flags ) throws android.os.RemoteException ; 
private void METHOD_1 ( TYPE_1 config ) { VAR_1 = STRING_1 ; VAR_2 = STRING_1 ; TYPE_2 VAR_3 = METHOD_2 ( VAR_4 class ) ; when ( VAR_3 . METHOD_3 ( ) ) . thenReturn ( VAR_5 ) ; } 
protected abstract long METHOD_1 ( TYPE_1 item ) ; 
public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_2 ) ; } 
java.util.Set < java.lang.String > METHOD_1 ( ) ; 
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device , int VAR_1 ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( device , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 event ) { if ( ( event . METHOD_2 ( ) . size ( ) ) > 0 ) { synchronized ( VAR_1 ) { VAR_1 . METHOD_3 ( event ) ; } VAR_2 . METHOD_4 ( ) ; } } 
private void METHOD_1 ( ) { android.util.Log.v ( VAR_1 . TAG , STRING_1 ) ; if ( ( VAR_2 ) != null ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; } VAR_3 = VAR_4 ; VAR_5 = null ; } 
private static native long METHOD_1 ( java.lang.String name , int fd ) throws java.io.IOException ; 
private static void METHOD_1 ( java.lang.String msg ) { if ( VAR_1 ) android.util.Log . i ( VAR_2 . TAG , msg ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { android.content.Intent VAR_3 = new android.content.Intent ( VAR_4 , VAR_1 ) ; int result = METHOD_2 ( VAR_3 , true ) ; org.junit.Assert.assertEquals ( VAR_2 , result ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public static long METHOD_1 ( long arg ) { return ( arg > > > INT_1 ) & INT_2 ; } 
private void METHOD_1 ( ) { int VAR_1 = ( VAR_2 . length ( ) ) - ( VAR_3 . length ( ) ) ; if ( VAR_1 >= 0 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } 
private void METHOD_1 ( ) { android.content.Intent VAR_1 = METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 = VAR_1 . METHOD_3 ( VAR_5 ) ; VAR_6 = TYPE_1 . METHOD_4 ( VAR_4 ) ; } 
abstract void METHOD_1 ( int pos , short [ ] VAR_1 , int VAR_2 , int length ) ; 
protected java.lang.String METHOD_1 ( java.lang.String data ) { data = super . METHOD_1 ( data ) ; if ( ( METHOD_2 ( ) ) != null ) { data = data . METHOD_3 ( METHOD_2 ( ) . getName ( ) , STRING_1 ) ; } return data ; } 
public java.lang.String toString ( ) { return METHOD_2 ( ) ; } 
public void METHOD_1 ( java.lang.String name ) throws java.io.IOException { METHOD_2 ( false ) ; append ( CHAR_1 ) ; append ( name ) ; append ( CHAR_2 ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.util.List < java.lang.String > VAR_3 , java.util.List < TYPE_1 > VAR_4 , java.util.List < TYPE_1 > VAR_5 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , false ) ; } 
public final TYPE_1 METHOD_1 ( ) { return null ; } 
private java.lang.StringBuilder METHOD_1 ( ) { java.lang.StringBuilder output = METHOD_2 ( ) ; METHOD_5 ( output ) ; return output ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 == null ) { return null ; } return VAR_2 . get ( VAR_1 . METHOD_2 ( ) ) ; } 
public final void METHOD_1 ( java.util.List < java.io.File > in , java.io.File out , boolean VAR_1 ) throws java.lang.Exception { METHOD_1 ( in . METHOD_2 ( new java.io.File [ in . size ( ) ] ) , out , VAR_1 ) ; } 
public TYPE_1 < TYPE_2 > values ( ) { TYPE_1 < TYPE_2 > VAR_1 = values ; if ( VAR_1 == null ) { VAR_1 = new TYPE_3 ( ) ; values = VAR_1 ; } return VAR_1 ; } 
private static native java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , java.lang.String VAR_3 ) ; 
public void METHOD_1 ( ) throws java.io.IOException { try { METHOD_3 ( VAR_1 , this ) ; } finally { VAR_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; } } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_3 = METHOD_3 ( ) ; return VAR_2 ; } 
public final double METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } return TYPE_1 . METHOD_1 ( VAR_1 , false ) ; } 
public void METHOD_1 ( ) { java.util.Set VAR_1 = TYPE_2 . METHOD_2 ( 3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; assertEquals ( 3 , VAR_1 . size ( ) ) ; } 
static void METHOD_1 ( long VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 = VAR_2 ; VAR_7 = VAR_3 ; } 
public void METHOD_1 ( int status ) { throw new TYPE_1 ( status ) ; } 
public static TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_4 ( ) , TYPE_3 . METHOD_4 ( VAR_2 ) ) ; } 
public int [ ] METHOD_1 ( ) { return ( VAR_1 ) == null ? new int [ 0 ] : VAR_1 ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) ; 
public void METHOD_1 ( com.android.jack.ir.ast.JMethod method ) { TYPE_1 VAR_1 = method . METHOD_2 ( VAR_2 ) ; assert VAR_1 != null ; VAR_1 . METHOD_1 ( true ) ; } 
public native java.lang.Class < ? > [ ] METHOD_1 ( ) ; 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException , TYPE_2 , TYPE_3 { VAR_1 = TYPE_4 . METHOD_2 ( VAR_1 ) ; return TYPE_5 . METHOD_1 ( VAR_1 , new TYPE_6 ( new TYPE_7 ( VAR_1 ) ) , true , true ) ; } 
public static boolean METHOD_1 ( boolean arg ) { return ( arg ? Main . METHOD_2 ( 0 ) : Main . METHOD_2 ( 1 ) ) == 2 ; } 
synchronized long METHOD_1 ( long VAR_1 , int VAR_2 , int VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; } 
public java.lang.Object METHOD_1 ( int VAR_1 ) { if ( VAR_1 == 0 ) { return VAR_2 ; } try { return METHOD_2 ( VAR_1 ) ; } catch ( TYPE_2 e ) { } return null ; } 
public float METHOD_1 ( int VAR_1 ) { float result = f ; for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { result = TYPE_1 . METHOD_2 ( f , 5 ) ; } return result ; } 
public void run ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( this , VAR_2 , VAR_3 , VAR_4 , status ) ; } } 
public boolean METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > VAR_1 , TYPE_2 < java.util.Map < java.lang.String , java.lang.String > > VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; return true ; } 
public void run ( ) { synchronized ( this ) { tree = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } } 
public java.lang.Class METHOD_1 ( java.lang.String name , TYPE_1 VAR_1 , java.util.List < java.lang.Throwable > VAR_2 ) { return TYPE_2 . METHOD_2 ( name , VAR_1 , VAR_3 , this , VAR_2 ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { try { TYPE_2 . METHOD_2 ( VAR_2 ) ; assertTrue ( VAR_1 . METHOD_3 ( ) ) ; } catch ( TYPE_3 fail ) { fail ( STRING_1 ) ; } } 
public void METHOD_1 ( TYPE_1 session , TYPE_2 VAR_1 ) { synchronized ( VAR_2 ) { TYPE_3 VAR_3 = METHOD_2 ( session , VAR_1 , false ) ; if ( VAR_3 == null ) { return ; } METHOD_3 ( session , VAR_3 ) ; } } 
public static double METHOD_1 ( ) { double a ; double b ; double c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a / b ; return c ; } 
public void METHOD_1 ( TYPE_1 out ) { out . METHOD_2 ( VAR_1 . get ( ) ) ; out . METHOD_2 ( VAR_2 ) ; out . METHOD_2 ( VAR_3 ) ; out . METHOD_2 ( VAR_4 ) ; } 
public void run ( ) { synchronized ( this ) { if ( VAR_1 ) { TYPE_1 . METHOD_1 ( mContext , VAR_3 , VAR_2 ) ; } else { TYPE_1 . METHOD_2 ( mContext , VAR_3 , VAR_2 ) ; } } } 
protected abstract void METHOD_1 ( boolean VAR_1 ) ; 
public TYPE_1 [ ] [ ] METHOD_1 ( ) { return java.lang.Class . METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; } 
public void METHOD_1 ( android.content.Intent VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { METHOD_2 ( VAR_1 , VAR_2 , null , false ) ; } 
static long METHOD_1 ( TYPE_1 b ) { long address = VAR_1 ; if ( address == INT_1 ) { return INT_1 ; } return address + ( ( VAR_2 ) < < ( VAR_3 ) ) ; } 
public long size ( ) { try { return VAR_1 . size ( ) ; } catch ( java.io.IOException e ) { return - 1 ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { run ( VAR_1 ) ; } 
public void METHOD_1 ( android.bluetooth.BluetoothDevice device , int VAR_1 , int state , int VAR_2 ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return ; } service . METHOD_1 ( device , VAR_1 , state , VAR_2 ) ; } 
public boolean METHOD_1 ( TYPE_1 p ) { return ( p != null ) && ( METHOD_1 ( p . x , p . y ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 t = new TYPE_1 ( STRING_2 ) ; assertEquals ( STRING_1 , t . METHOD_2 ( STRING_3 ) ) ; } 
public void METHOD_1 ( ) { android.content.Intent VAR_1 = new android.content.Intent ( VAR_2 , null ) ; int result = METHOD_2 ( VAR_1 , true ) ; org.junit.Assert.assertEquals ( VAR_3 , result ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( TYPE_1 context ) { if ( ( ( VAR_1 ) != null ) && ( ! ( VAR_2 ) ) ) { for ( TYPE_2 location : VAR_1 ) { context . METHOD_2 ( VAR_3 , location , STRING_1 ) ; } } } 
public void METHOD_1 ( TYPE_1 state ) { try { VAR_1 . METHOD_2 ( VAR_2 , state , null ) ; } catch ( android.os.RemoteException e ) { } } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 pkg ) { TYPE_3 c = METHOD_2 ( pkg ) ; if ( c == null ) { return null ; } return c . METHOD_1 ( ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { } 
public void log ( java.lang.String format , java.lang.Object ... args ) { VAR_1 . info ( format , args ) ; } 
private void METHOD_1 ( ) { new TYPE_1 ( ) { public void run ( ) { synchronized ( VAR_1 this ) { TYPE_2 . get ( VAR_2 ) ; } } } . start ( ) ; } 
public static TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_1 ( null , null , null ) ; } 
public void run ( ) { METHOD_1 ( this ) ; METHOD_2 ( false ) ; } 
public abstract void METHOD_1 ( android.os.Message VAR_1 , int state ) ; 
public TYPE_1 METHOD_1 ( ) { return true ; } 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { int index = VAR_1 . METHOD_2 ( CHAR_1 ) ; if ( index != ( - 1 ) ) { return VAR_1 . METHOD_3 ( 0 , index ) ; } return null ; } 
private static boolean METHOD_1 ( java.io.File output ) { return TYPE_2 . equals ( output . METHOD_2 ( ) ) ; } 
private void METHOD_1 ( ) { org.junit.Assert.assertEquals ( 0 , VAR_1 . METHOD_2 ( ) . size ( ) ) ; } 
protected final TYPE_1 METHOD_1 ( ) { return x ; } 
public boolean METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 location , java.lang.String VAR_2 ) { return VAR_1 != ( VAR_3 ) ; } 
public void run ( ) { this . METHOD_1 ( VAR_3 , VAR_4 , VAR_5 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { final java.lang.String s = STRING_1 + STRING_2 ; assertFalse ( VAR_1 ) ; try { TYPE_1 . METHOD_2 ( s ) ; fail ( ) ; } catch ( TYPE_2 expected ) { } assertTrue ( VAR_1 ) ; } 
void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) throws java.lang.Exception ; 
public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { Main . test ( STRING_1 ) ; Main . test ( STRING_2 ) ; Main . test ( STRING_3 ) ; Main . test ( STRING_4 ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { return METHOD_3 ( VAR_3 , VAR_1 ) ; } 
public static void METHOD_1 ( java.io.File [ ] VAR_2 , java.io.File VAR_3 , boolean VAR_4 ) throws java.lang.Exception { TYPE_1 . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 , null , null ) ; } 
public void run ( ) { if ( ( METHOD_1 ( ) ) != null ) { METHOD_1 ( ) . METHOD_2 ( ) ; } } 
public void run ( ) { TYPE_1 . METHOD_1 ( ) ; VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( ) ; } 
public abstract void METHOD_1 ( java.lang.String url , TYPE_1 listener ) ; 
private int METHOD_1 ( java.lang.String target ) { if ( target . METHOD_2 ( STRING_1 ) ) { return java.lang.Integer.parseInt ( target . METHOD_3 ( STRING_1 . length ( ) ) ) ; } return - 1 ; } 
public void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public final boolean equals ( java.lang.Object obj ) { return ( obj == ( this ) ) || ( obj instanceof TYPE_1 ) ; } 
public static float METHOD_1 ( float x , float y ) { float VAR_2 = x - y ; return y + VAR_2 ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { Main . METHOD_2 ( ) ; } 
public abstract void METHOD_1 ( java.lang.String url , java.lang.String value , TYPE_1 < TYPE_2 > callback ) ; 
public java.lang.Object [ ] METHOD_1 ( java.lang.Object VAR_1 ) { return ( ( java.util.List < ? > ) ( VAR_1 ) ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( call ) ; } 
public void METHOD_1 ( ) { assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_1 ) ) ; assertFalse ( STRING_2 , TYPE_1 . METHOD_2 ( CHAR_2 ) ) ; } 
public static long METHOD_1 ( ) { long VAR_1 = 10 ; int VAR_2 = 3 ; return VAR_1 ^ VAR_2 ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , java.lang.Class < ? > VAR_3 , TYPE_3 < java.lang.String > VAR_4 , TYPE_4 VAR_5 , int VAR_6 , boolean VAR_7 , java.lang.String [ ] args ) ; 
public boolean METHOD_1 ( int slotId , int VAR_1 , int VAR_3 , int VAR_4 ) throws android.os.RemoteException { return false ; } 
public static int METHOD_1 ( ) { return ( VAR_2 ) == ( Main . METHOD_2 ( ) ) ? INT_1 : INT_2 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 user = METHOD_2 ( STRING_1 ) ; METHOD_3 ( STRING_2 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_3 , user ) ; } 
protected void run ( ) throws java.lang.Exception { VAR_1 . query ( TYPE_1 . METHOD_4 ( query , STRING_1 ) ) ; } 
private void METHOD_1 ( final com.google.gerrit.reviewdb.client . PatchSetApproval VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_1 ( VAR_3 . create ( VAR_1 . getAccountId ( ) ) . METHOD_2 ( ) ) ; } } 
public void onSuccess ( final TYPE_1 result ) { METHOD_1 ( VAR_1 , VAR_2 , line , file ) ; } 
protected TYPE_1 . Result METHOD_1 ( ) throws java.io.IOException , TYPE_2 { TYPE_3 VAR_1 = VAR_2 . create ( db , admin . METHOD_2 ( ) , git ) ; return VAR_1 . to ( STRING_1 ) ; } 
public java.util.List < TYPE_1 . ChangeInfo > METHOD_1 ( ) throws TYPE_4 { throw new TYPE_5 ( ) ; } 
TYPE_1 create ( java.lang.String VAR_1 , java.lang.String VAR_2 ) ; 
private static void METHOD_1 ( final java.lang.StringBuilder r , final TYPE_2 . PatchSet ps ) { TYPE_3 . METHOD_2 ( r , STRING_1 , ps . getRevision ( ) ) ; } 
private static int METHOD_3 ( final TYPE_1 VAR_1 , final TYPE_2 cfg , final java.lang.String name , final int VAR_2 ) { return cfg . METHOD_3 ( STRING_1 , VAR_1 . getName ( ) , name , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , cfg ) ; VAR_2 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ; } 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change c , com.google.gerrit.reviewdb.client.PatchSet ps ) { TYPE_1 d = METHOD_2 ( c , ps ) ; VAR_1 = ps . getId ( ) . equals ( c . currentPatchSetId ( ) ) ; return d ; } 
public java.lang.String format ( java.lang.String projectName , TYPE_1 cfg , java.lang.String VAR_1 ) { return ( STRING_1 + ( TYPE_2 . METHOD_1 ( VAR_1 ) ) ) + STRING_2 ; } 
private org.eclipse.jgit.lib.ObjectId METHOD_1 ( TYPE_1 < ? > repo , java.lang.String branch ) throws java.lang.Exception { return METHOD_1 ( repo , branch , STRING_1 ) ; } 
public abstract TYPE_1 . Result METHOD_1 ( TYPE_2 index ) ; 
public org.eclipse.jgit.lib.ObjectId apply ( TYPE_1 ref ) { if ( ( ref . METHOD_1 ( ) ) != null ) { return ref . METHOD_1 ( ) ; } return ref . METHOD_2 ( ) ; } 
public TYPE_1 . Id getId ( ) { return key ; } 
void METHOD_1 ( ) { int VAR_2 = METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; VAR_5 . METHOD_5 ( VAR_4 ) ; } 
public static TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_4 ( false ) . METHOD_5 ( false ) . METHOD_6 ( null ) ; } 
public void METHOD_1 ( final org.eclipse.jgit.lib.ObjectId id ) { VAR_1 . add ( id ) ; } 
public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_1 ( ) ; TYPE_3 . METHOD_1 ( ) ; TYPE_4 . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 . ReceiveCommand cmd ) throws java.io.IOException { METHOD_2 ( ) ; commands . add ( cmd ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( project , STRING_1 , VAR_1 , false ) ; METHOD_3 ( VAR_2 ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_1 ( VAR_1 . getName ( ) ) ; } 
void METHOD_1 ( ) { VAR_1 . append ( log ( ( STRING_1 + ( VAR_2 . get ( ) . METHOD_2 ( ) ) ) ) ) ; METHOD_3 ( VAR_3 . get ( ) , STRING_2 , STRING_3 ) ; } 
private static java.lang.StringBuilder METHOD_1 ( java.lang.StringBuilder VAR_1 , TYPE_1 VAR_2 ) { return VAR_1 . append ( VAR_2 . getName ( ) ) . append ( STRING_1 ) ; } 
protected void run ( ) { for ( TYPE_1 d : config . METHOD_1 ( VAR_1 ) ) { if ( METHOD_2 ( d . METHOD_3 ( ) . getName ( ) ) ) { METHOD_4 ( d ) ; } } } 
public void run ( ) { for ( ; ; ) { try { if ( VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) { return ; } } catch ( TYPE_1 e ) { } VAR_4 . METHOD_2 ( false ) ; } } 
public abstract boolean METHOD_1 ( ) ; 
private java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.lang.String path ) throws java.lang.Exception { return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , TYPE_1 > > ( ) { } ) ; } 
void METHOD_1 ( java.lang.String name ) { this . VAR_2 = TYPE_1 . METHOD_2 ( name ) ; } 
public void METHOD_1 ( ) { if ( ( ++ ( VAR_1 ) ) == 1 ) { if ( ( VAR_2 ) == 0 ) { VAR_3 . METHOD_2 ( true ) ; } } } 
com.google.gerrit.server.query.change.ChangeData create ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id id ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . METHOD_2 ( STRING_1 , new TYPE_2 ( VAR_2 , TYPE_3 . METHOD_3 ( STRING_2 ) ) ) ; com.google.common.truth.Truth.assertThat ( r . METHOD_4 ( ) ) . isEqualTo ( VAR_3 ) ; } 
private static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < java.lang.String > p , java.util.List < ? extends TYPE_1 < java.lang.String > > VAR_2 ) { org.junit.Assert.assertEquals ( ( VAR_1 + STRING_1 ) , VAR_2 , p . METHOD_2 ( ) ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , org.eclipse.jgit.lib.ObjectId VAR_2 ) throws java.lang.Exception { org.eclipse.jgit.revwalk.RevCommit commit = parseCommit ( VAR_2 ) ; com.google.common.truth.Truth.assertThat ( commit . METHOD_2 ( ) ) . isEqualTo ( VAR_1 ) ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { try ( TYPE_1 server = METHOD_2 ( null ) ) { org.junit.Assert . METHOD_3 ( STRING_1 ) ; } catch ( TYPE_1 e ) { } } 
public static void METHOD_1 ( ) { new TYPE_2 ( ) . METHOD_2 ( ) ; } 
public int METHOD_1 ( ) { return 2 ; } 
private Project . NameKey METHOD_1 ( TYPE_1 in ) throws TYPE_2 { VAR_1 . projects ( ) . create ( in ) ; return new com.google.gerrit.reviewdb.client.Project.NameKey ( in . name ) ; } 
public static native TYPE_1 create ( TYPE_3 p , TYPE_4 cfg ) ; 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 , com.google.gerrit.reviewdb.client.Change . Id changeId ) { java.lang.StringBuilder r = TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 . get ( ) ) ; r . append ( changeId . get ( ) ) ; return r . toString ( ) ; } 
public void onSuccess ( TYPE_1 result ) { if ( VAR_1 . METHOD_1 ( ) ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( VAR_1 . getProject ( ) , psId ) ) ; } } 
TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_1 ( ) ) ) ; } 
private boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . contains ( VAR_2 ) ; } 
public final void insert ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . OrmException { METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 . Factory VAR_1 , com.google.gerrit.reviewdb.client.Project.NameKey project , TYPE_2 user , TYPE_3 < com.google.gerrit.server.query.change.ChangeData > changes ) throws TYPE_5 , TYPE_6 { METHOD_1 ( VAR_1 , project , user , changes , STRING_1 , VAR_3 , TYPE_7 . of ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = true ; apply ( ) ; } 
private org.eclipse.jgit.revwalk.RevWalk METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return VAR_1 ; } 
public java.lang.String apply ( TYPE_1 . ChangeInfo input ) { return input . changeId ; } 
private void METHOD_1 ( final java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
void METHOD_1 ( TYPE_1 e ) { e . METHOD_2 ( ) ; TYPE_2 . display ( TYPE_3 . METHOD_3 ( project , changeId ) ) ; } 
protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return METHOD_2 ( ( ) - > super . METHOD_1 ( ) ) ; } 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , java.lang.String VAR_1 ) { boolean VAR_2 = true ; for ( TYPE_1 VAR_3 : METHOD_2 ( project , VAR_4 ) ) { VAR_2 &= METHOD_1 ( VAR_3 , VAR_1 ) ; } return VAR_2 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.PatchSet patchSet ) { return METHOD_2 ( db , patchSet , null , false , true , false ) ; } 
public TYPE_3 < ? > create ( TYPE_4 VAR_1 , TYPE_5 VAR_2 ) throws TYPE_6 . OrmException { return new TYPE_7 ( VAR_1 , VAR_2 , VAR_3 ) . create ( ) ; } 
public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( true ) ; } 
protected java.lang.String getRefName ( ) { return ref ; } 
boolean METHOD_1 ( boolean VAR_1 ) { if ( TYPE_1 . equals ( VAR_2 ) ) { return VAR_3 . METHOD_2 ( ) ; } return METHOD_3 ( VAR_4 , VAR_1 ) ; } 
java.lang.String METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_1 event ) throws com.google.gwtorm.server.OrmException { METHOD_2 ( change , event ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . Status VAR_2 ) throws java.lang.Exception { return METHOD_2 ( VAR_1 , null , false , false , VAR_2 ) ; } 
public java.lang.String getName ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } if ( ( VAR_2 ) != null ) { return VAR_2 ; } return com.google.gerrit.reviewdb.client.Account . getName ( VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) ; VAR_3 . projects ( ) . name ( project . get ( ) ) . branch ( STRING_2 ) . create ( new TYPE_1 ( ) ) ; } 
private void METHOD_1 ( org.eclipse.jgit.revwalk.RevCommit commit ) throws java.lang.Exception { METHOD_2 ( commit ) . METHOD_3 ( ) ; } 
public void onSuccess ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . display ( VAR_1 ) ; display ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 res = METHOD_2 ( STRING_1 ) ; com.google.common.truth.Truth.assertThat ( new java.lang.String ( res . METHOD_3 ( ) , VAR_1 ) ) . isEqualTo ( STRING_2 ) ; } 
void METHOD_1 ( boolean VAR_1 ) { sshd = false ; } 
private static void METHOD_1 ( java.lang.String token ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( token ) ) ; } } 
public void METHOD_3 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_2 ) . METHOD_6 ( ) , TYPE_2 . METHOD_7 ( STRING_1 ) ) ; } 
protected void METHOD_1 ( TYPE_2 . HttpServletResponse res ) { TYPE_3 . METHOD_2 ( res ) ; } 
private static TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . METHOD_2 ( STRING_1 ) ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( STRING_2 , e ) ; } } 
public final TYPE_1 < TYPE_2 , TYPE_3 , TYPE_4 > METHOD_1 ( ) { return VAR_1 ; } 
public TYPE_1 create ( final TYPE_2 . Id id ) { return create ( VAR_1 , null , id ) ; } 
protected void METHOD_1 ( TYPE_1 result ) { METHOD_2 ( VAR_1 ) ; VAR_1 = null ; } 
public int METHOD_1 ( TYPE_1 a , TYPE_1 b ) { return METHOD_1 ( a . getName ( ) , b . getName ( ) ) ; } 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( java.lang.String topic ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . METHOD_2 ( new TYPE_2 ( topic ) , TYPE_4 . METHOD_3 ( ) ) ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; assert ( VAR_2 ) != null ; VAR_2 . METHOD_2 ( ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( 2 ) ; VAR_1 . METHOD_4 ( INT_1 ) ; VAR_1 . METHOD_5 ( INT_2 ) ; return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_2 ( VAR_1 ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 ) ) ; } 
boolean METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( VAR_1 , false , false ) ; } 
public void METHOD_1 ( int n ) { if ( n < 0 ) { VAR_1 = INT_1 ; } else if ( n == 0 ) { VAR_1 = VAR_2 ; } else { VAR_1 = TYPE_1 . METHOD_2 ( n , VAR_2 ) ; } } 
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( ) ; } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change . Id changeId ) throws com.google.gwtorm.server.OrmException , java.io.IOException { return VAR_1 . METHOD_1 ( db , changeId ) ; } 
private static java.lang.String format ( final java.lang.String name , final java.lang.String email ) { return new TYPE_1 ( name , email ) . METHOD_1 ( ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 . HttpServletResponse res ) throws java.io.IOException { return TYPE_3 . METHOD_1 ( res . METHOD_2 ( ) , res ) ; } 
public TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_4 ( METHOD_4 ( ) ) . METHOD_5 ( METHOD_5 ( ) ) . METHOD_6 ( METHOD_6 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int row , int VAR_2 ) { if ( ( VAR_2 != 1 ) && ( ( METHOD_2 ( row ) ) != null ) ) { METHOD_3 ( row ) ; } } 
public boolean apply ( TYPE_1 input ) { return ( input . change ) != null ; } 
private TYPE_1 METHOD_1 ( ) { final java.util.List < TYPE_2 > modules = new java.util.ArrayList < TYPE_2 > ( ) ; modules.add ( new TYPE_3 ( new TYPE_4 ( VAR_1 ) ) ) ; return VAR_1 . METHOD_2 ( modules ) ; } 
private boolean METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.io.IOException { try ( org.eclipse.jgit.revwalk.RevWalk rw = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) { org.eclipse.jgit.revwalk.RevCommit commit = rw . parseCommit ( VAR_1 ) ; return VAR_2 . METHOD_2 ( db , repo , commit ) ; } } 
protected void add ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { if ( ( VAR_2 != null ) && ( ( VAR_2 . METHOD_1 ( ) ) != null ) ) { add ( VAR_1 , VAR_2 . METHOD_1 ( ) ) ; } } 
public void METHOD_1 ( final java.lang.StringBuilder VAR_1 , final TYPE_2 VAR_2 ) { VAR_1 . append ( CHAR_1 ) ; VAR_1 . append ( VAR_2 . name ( ) ) ; VAR_1 . append ( CHAR_1 ) ; } 
private void METHOD_1 ( ) { METHOD_7 ( new TYPE_4 ( VAR_3 ) ) ; } 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( METHOD_2 ( db ) ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public void set ( final TYPE_1 value ) { try { VAR_1 = TYPE_2 . get ( ) ; super . set ( value ) ; } finally { VAR_1 = null ; } } 
public static java.util.List < com.google.gerrit.reviewdb.client.Account.Id > METHOD_1 ( TYPE_2 ... VAR_1 ) { return TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } 
public void delete ( com.google.gerrit.reviewdb.client.Change . Id id ) { throw new TYPE_1 ( ) ; } 
void METHOD_1 ( TYPE_1 . NameKey branch ) ; 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return ( VAR_1 == null ) || ( VAR_1 . isEmpty ( ) ) ? null : VAR_1 ; } 
Account . Id getAccountId ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) . getAccountId ( ) ; } 
public static TYPE_1 base ( ) { return new TYPE_1 ( false ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } } 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_1 ) { return TYPE_1 . METHOD_1 ( project , revision , VAR_1 , 0 ) ; } 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( ( ! ( e . getValue ( ) ) ) ) ; view . METHOD_3 ( ( ! ( e . getValue ( ) ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { } 
public TYPE_1 METHOD_1 ( final com.google.gerrit.reviewdb.client . AccountGroup group ) { return new TYPE_1 ( user . get ( ) , group ) ; } 
protected com.google.gerrit.reviewdb.client.PatchSet METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id psId ) throws com.google.gwtorm.server.OrmException { return VAR_1 . create ( db , project , psId . getParentKey ( ) ) . patchSet ( psId ) ; } 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id id ) ; 
public void onSuccess ( TYPE_1 . ChangeInfo result ) { VAR_1 = true ; METHOD_1 ( ) ; TYPE_2 . display ( TYPE_3 . METHOD_2 ( project , result . METHOD_3 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = METHOD_2 ( STRING_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = STRING_1 ; com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . name ( name ) . create ( ) . get ( ) . name ) ; } 
public abstract void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 ; 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account account , com.google.gerrit.reviewdb.client.PatchSet patchSet , java.lang.String VAR_1 , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ; 
private TYPE_1 METHOD_1 ( ) { return METHOD_1 ( null , null , null , null ) ; } 
public void METHOD_1 ( TYPE_1 value ) { this . value = value ; METHOD_2 ( ) . METHOD_1 ( value ) ; } 
private final native void METHOD_1 ( int line ) ; 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.client.Project project ) { if ( ( VAR_1 ) != null ) { return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( project . METHOD_2 ( ) ) ; } else { return true ; } } 
protected java.lang.String METHOD_1 ( final java.lang.String VAR_1 ) { return VAR_1 ; } 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > METHOD_1 ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 ) { return new TYPE_3 ( view ( VAR_1 , VAR_2 , STRING_1 ) ) ; } 
private java.lang.String METHOD_1 ( int VAR_1 ) { if ( VAR_1 == 0 ) { return STRING_1 ; } return java.lang.String.format ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) , STRING_4 ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { for ( TYPE_2 id : VAR_1 ) { if ( id . METHOD_2 ( VAR_2 ) ) { return id . METHOD_3 ( ) ; } } return null ; } 
public static TYPE_1 METHOD_1 ( TYPE_1 . Key key , com.google.gerrit.reviewdb.client.Account.Id VAR_1 , java.lang.String email ) { return TYPE_1 . create ( key , VAR_1 , TYPE_3 . METHOD_2 ( email ) , null ) ; } 
public void onSuccess ( TYPE_1 result ) { projects . display ( result ) ; } 
protected TYPE_1 METHOD_1 ( final TYPE_2 req , final TYPE_3 . HttpServletResponse VAR_1 ) { return new TYPE_1 ( server , schema , req , VAR_1 ) ; } 
static void reject ( final TYPE_1 . ReceiveCommand cmd , final java.lang.String VAR_1 ) { cmd . METHOD_1 ( VAR_2 , VAR_1 ) ; } 
public java.lang.String METHOD_1 ( final com.google.gerrit.reviewdb.client.Project.NameKey name ) throws java.io.IOException , TYPE_1 { try ( org.eclipse.jgit.lib.Repository e = METHOD_2 ( name ) ) { return METHOD_1 ( e ) ; } } 
public static final void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_1 ( STRING_1 , VAR_1 , null ) ; } 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , java.lang.String VAR_1 ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . METHOD_2 ( TYPE_2 . project ( project ) , TYPE_2 . commit ( VAR_1 ) ) ) ; } 
public static void METHOD_1 ( TYPE_1 < com.google.gerrit.server.query.change.ChangeData > changes ) throws com.google.gwtorm.server.OrmException { for ( com.google.gerrit.server.query.change.ChangeData cd : changes ) { cd . patchSets ( ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , STRING_1 ) ; assertEquals ( STRING_1 , VAR_2 ) ; } 
TYPE_1 METHOD_1 ( byte [ ] VAR_1 ) { if ( ( VAR_1 != null ) && ( ( VAR_1 . length ) > 0 ) ) { METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ; } return this ; } 
private PatchSet . Id METHOD_1 ( org.eclipse.jgit.lib.ObjectId c ) throws com.google.gwtorm.server.OrmException { return getChange ( c ) . change ( ) . currentPatchSetId ( ) ; } 
public void onSuccess ( final TYPE_1 result ) { if ( submit ) { submit ( ) ; } else { VAR_1 = false ; METHOD_1 ( ) ; } } 
private static void METHOD_1 ( java.lang.String token ) { TYPE_2 . METHOD_4 ( STRING_1 , token ) ; } 
private void METHOD_1 ( final TYPE_1 VAR_1 , final int VAR_2 , final int VAR_3 ) { METHOD_1 ( VAR_1 , java.lang.String . METHOD_2 ( VAR_2 ) , java.lang.String . METHOD_2 ( VAR_3 ) ) ; } 
protected void submit ( java.lang.String changeId ) throws java.lang.Exception { submit ( changeId , new TYPE_1 ( ) , null , null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 VAR_1 = METHOD_2 ( ) ; org.junit.Assert . METHOD_3 ( VAR_1 ) ; final TYPE_1 VAR_2 = METHOD_2 ( ) ; org.junit.Assert . METHOD_3 ( VAR_2 ) ; org.junit.Assert . METHOD_4 ( VAR_1 , VAR_2 ) ; } 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , TYPE_1 < TYPE_2 < TYPE_3 > > VAR_1 ) { TYPE_3 . base ( project ) . METHOD_2 ( STRING_1 ) . get ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 < java.lang.String > event ) { TYPE_2 . display ( event . getValue ( ) ) ; } 
public void METHOD_1 ( final java.lang.String name ) { if ( ( name != null ) && ( ! ( name . METHOD_2 ( ) . isEmpty ( ) ) ) ) { VAR_1 = name . METHOD_2 ( ) ; } else { VAR_1 = null ; } } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_2 refs ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( args , change , false , refs ) . METHOD_2 ( ) ; } 
private org.eclipse.jgit.lib.Repository METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey name ) { try { return VAR_1 . METHOD_1 ( name ) ; } catch ( java.io.IOException err ) { VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err ) ; return null ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = STRING_1 ; com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( ( name + STRING_2 ) ) . get ( ) . name ) ; } 
public boolean METHOD_1 ( int b ) { return ( b == 0 ) || ( ( METHOD_2 ( ( b - 1 ) ) ) == CHAR_1 ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_1 ( VAR_1 , METHOD_3 ( ) ) ; } 
private static final native void METHOD_1 ( java.lang.String d , java.lang.String t , java.lang.String r , java.lang.String VAR_1 ) ; 
public java.lang.String id ( ) { return TYPE_1 . toString ( change.getId ( ) . get ( ) ) ; } 
public void run ( ) { try { TYPE_1 . METHOD_1 ( VAR_1 , new TYPE_2 ( ) ) ; } catch ( java.io.IOException e ) { VAR_2 . METHOD_3 ( STRING_1 , e ) ; } } 
private void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_3 ( STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( STRING_4 , STRING_5 ) ; } 
int METHOD_1 ( TYPE_1 edit ) { return edit . METHOD_2 ( ) ; } 
private TYPE_1 . ProjectConfig METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { return METHOD_1 ( VAR_1 , true , true ) ; } 
protected void METHOD_1 ( ) { install ( new TYPE_1 ( ) ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . format ( INT_1 ) ) ; org.junit.Assert.assertEquals ( STRING_2 , TYPE_1 . format ( - INT_2 ) ) ; org.junit.Assert.assertEquals ( STRING_3 , TYPE_1 . format ( - INT_3 ) ) ; } 
public static java.lang.String METHOD_1 ( final com.google.gerrit.reviewdb.client.PatchSet.Id ps ) { return ( ( STRING_1 + ( ps . getParentKey ( ) ) ) + STRING_2 ) + ( ps . getId ( ) ) ; } 
public void METHOD_1 ( TYPE_1 ctx ) throws java.io.IOException { ctx . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
TYPE_1 METHOD_1 ( ) ; 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 = null ; } } 
public final boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { return true ; } METHOD_3 ( new java.lang.Exception ( VAR_1 ) ) ; return false ; } 
private static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 ctl ) throws com.google.gwtorm.server.OrmException { return ctl . METHOD_2 ( VAR_1 . data ( ) . notes ( ) ) . METHOD_3 ( VAR_1 . patchSet ( ) , VAR_1 . data ( ) ) ; } 
private boolean METHOD_1 ( ) { return ( METHOD_2 ( VAR_1 ) ) || ( METHOD_3 ( ) ) ; } 
public < TYPE_1 , TYPE_2 > TYPE_3 < TYPE_1 , TYPE_2 > METHOD_1 ( TYPE_4 < TYPE_1 , TYPE_2 > VAR_1 , TYPE_5 < TYPE_1 , TYPE_2 > VAR_2 ) { return create ( VAR_1 , false ) . METHOD_1 ( VAR_2 ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { java.util.List < TYPE_1 < TYPE_2 > > VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( VAR_3 ) ; if ( VAR_1 ) { VAR_2 . add ( VAR_4 ) ; } METHOD_3 ( VAR_2 ) ; } 
public void delete ( ) throws TYPE_1 { try { VAR_1 . apply ( revision , null ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new TYPE_1 ( STRING_1 , e ) ; } } 
private void METHOD_1 ( ) throws java.lang.Exception { server . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { repo = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( project ) ) ; METHOD_4 ( STRING_1 ) ; } 
void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_2 = true ; } else if ( ! ( VAR_1 . isEmpty ( ) ) ) { METHOD_4 ( true ) ; } } 
public TYPE_1 < ? > index ( com.google.gerrit.reviewdb.client.Change change ) { return index ( new com.google.gerrit.server.query.change.ChangeData ( change ) ) ; } 
public static boolean METHOD_1 ( TYPE_1 b ) { if ( b == null ) { return false ; } return b . METHOD_2 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 , java.io.IOException { return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 . get ( ) . get ( VAR_1 , id ) ) ; } 
abstract int METHOD_1 ( TYPE_1 edit ) ; 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.client . AccountGroup VAR_1 , TYPE_1 VAR_2 ) throws com.google.gwtorm.server.OrmException { return VAR_3 . METHOD_2 ( VAR_4 . get ( ) , VAR_1 . METHOD_3 ( ) , VAR_2 . METHOD_3 ( ) ) ; } 
public TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > get ( ) { try { return new TYPE_1 ( VAR_1 , VAR_2 . ReviewDb class ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public void METHOD_1 ( java.lang.String query ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < > ( ) ; } VAR_1 . add ( query ) ; } 
public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String project , int id , int VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( project , id , VAR_1 ) . view ( STRING_1 ) . id ( VAR_2 ) ; } 
boolean METHOD_1 ( ) { return ( user ) != null ; } 
public static void METHOD_1 ( TYPE_1 . Factory VAR_1 , com.google.gerrit.reviewdb.client.Change change ) { VAR_1 . create ( change . METHOD_2 ( ) ) . METHOD_3 ( change ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) { return new TYPE_3 ( cd , false ) ; } 
public java.lang.String getName ( ) { return null ; } 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 . Key patch , TYPE_4 . Id VAR_1 ) throws TYPE_5 . OrmException ; 
public void METHOD_1 ( ) { METHOD_2 ( refs ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 { return VAR_3 . METHOD_2 ( VAR_4 , args . repo , VAR_1 , args . rw , VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String ... VAR_2 ) throws java.lang.Exception { return TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_1 , null , null , VAR_2 ) ; } 
protected final TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = super . METHOD_1 ( ) ; for ( TYPE_2 c : VAR_2 ) { VAR_1 . METHOD_2 ( c , c ) ; } return VAR_1 ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account account , java.lang.String VAR_1 , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ; 
public void close ( ) throws java.io.IOException { rw . close ( ) ; repo . close ( ) ; } 
public java.lang.String METHOD_1 ( int size ) throws TYPE_1 { VAR_2 . METHOD_2 ( size ) ; return VAR_2 . apply ( account ) . METHOD_3 ( ) ; } 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change ) { return VAR_1 . create ( db , change ) ; } 
public java.lang.String METHOD_1 ( int size ) throws TYPE_1 { throw new TYPE_2 ( ) ; } 
Project . NameKey METHOD_1 ( ) { return project . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 schema = METHOD_2 ( ) ; final int a = schema . METHOD_3 ( ) ; final int b = schema . METHOD_3 ( ) ; org.junit.Assert . METHOD_4 ( ( a != b ) ) ; } 
TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { return METHOD_3 ( VAR_1 , VAR_2 ) ; } return null ; } 
private boolean METHOD_1 ( TYPE_1 config , java.lang.String ref ) { return METHOD_2 ( config , STRING_1 , ref , true , true ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_1 VAR_2 : METHOD_2 ( VAR_1 ) ) { if ( VAR_2 . getName ( ) . METHOD_3 ( VAR_3 ) ) { return VAR_2 ; } } return null ; } 
public TYPE_1 METHOD_1 ( ) { return user ; } 
public java.lang.String METHOD_1 ( ) throws com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( VAR_2 ) == null ) { METHOD_2 ( ) ; } return VAR_2 ; } 
public void run ( ) { c . close ( ) ; db = null ; } 
public final native void METHOD_1 ( int line ) ; 
void METHOD_1 ( TYPE_1 cm ) { if ( METHOD_2 ( ) ) { cm . METHOD_3 ( VAR_2 ) ; } } 
private java.lang.String url ( TYPE_1 r ) { return TYPE_2 . METHOD_1 ( project , changeId , r . id ( ) ) ; } 
public void METHOD_1 ( ) { db . close ( ) ; } 
public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { for ( final java.lang.String name : METHOD_2 ( ) ) { p . METHOD_3 ( name ) ; p . METHOD_3 ( CHAR_1 ) ; } p . METHOD_4 ( ) ; } 
public static void delete ( java.lang.String project , int id , java.lang.String path , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . METHOD_1 ( project , id , path ) . delete ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; factory ( VAR_3 . Factory class ) ; factory ( VAR_4 . Factory class ) ; } 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return ( ( ( VAR_1 ) != null ) && ( cd . METHOD_2 ( VAR_1 ) ) ) || ( VAR_2 . METHOD_1 ( cd ) ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String branch ) { if ( branch . METHOD_2 ( VAR_1 ) ) { return branch ; } return ( VAR_2 ) + branch ; } 
public static void METHOD_1 ( java.lang.String project , int id , TYPE_1 < TYPE_2 . ChangeInfo > VAR_1 ) { TYPE_3 . METHOD_1 ( project , id ) . get ( VAR_1 ) ; } 
public void METHOD_1 ( final boolean VAR_1 ) { TYPE_1 . METHOD_2 ( this , VAR_1 ) ; super . METHOD_1 ( VAR_1 ) ; } 
private boolean METHOD_1 ( java.lang.String name ) { return ( METHOD_2 ( name , STRING_1 ) ) || ( METHOD_2 ( name , STRING_2 ) ) ; } 
public void METHOD_1 ( java.lang.String label , short value ) { approvals . put ( label , value ) ; } 
public static boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( ( STRING_1 . METHOD_2 ( VAR_1 ) ) || ( STRING_2 . METHOD_2 ( VAR_1 ) ) ) || ( STRING_3 . METHOD_2 ( VAR_1 ) ) ; } 
public boolean equals ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { final TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; return key . equals ( VAR_2 . key ) ; } return false ; } 
public java.util.List < TYPE_1 > run ( TYPE_2 . ReviewDb db ) throws TYPE_3 . OrmException { return db . METHOD_1 ( ) . METHOD_2 ( getAccountId ( ) ) . METHOD_3 ( ) ; } 
public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( TYPE_2 . METHOD_2 ( null ) , INT_1 , STRING_1 , VAR_1 ) ; } 
private void METHOD_1 ( final int row , final int VAR_1 , final java.lang.String name ) { table . METHOD_2 ( ) . METHOD_1 ( row , VAR_1 , name ) ; } 
private void METHOD_1 ( TYPE_1 t ) { VAR_1 . error ( ( STRING_1 + ( changeId ) ) , t ) ; VAR_2 . set ( false ) ; VAR_3 . update ( 1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; org.junit.Assert.assertEquals ( query ( METHOD_2 ( STRING_2 ) ) , VAR_1 . METHOD_3 ( in , 0 ) ) ; } 
public boolean isEmpty ( ) { return ( VAR_1 . isEmpty ( ) ) && ( VAR_2 . isEmpty ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.lang.Exception { return new TYPE_1 ( METHOD_2 ( ) . getId ( ) , VAR_1 , walk , VAR_3 , VAR_4 ) ; } 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return ( VAR_1 ) != null ? submit ( new TYPE_2 ( change , false ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } 
private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { return VAR_1 . METHOD_2 ( ) ; } 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( org.eclipse.jgit.lib.ObjectId id ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . commit ( id . name ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 , final int VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; VAR_4 . add ( VAR_3 ) ; return VAR_3 ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) throws TYPE_3 { return new TYPE_4 ( TYPE_5 . METHOD_2 ( VAR_1 ) ) ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id psId ) { TYPE_1 . METHOD_2 ( ( ( psId == null ) || ( psId . getParentKey ( ) . equals ( getChange ( ) . getId ( ) ) ) ) ) ; this . psId = psId ; } 
public static TYPE_1 < TYPE_2 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } return VAR_1 ; } 
public int METHOD_1 ( ) { return 1 + ( ( group ) == null ? 0 : 1 ) ; } 
void METHOD_1 ( ) { final TYPE_1 d = new TYPE_1 ( VAR_1 ) ; d . METHOD_3 ( ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , java.lang.String VAR_3 ) throws java.io.IOException { if ( log . METHOD_2 ( ) ) { log . METHOD_3 ( STRING_1 , VAR_1 , VAR_2 , VAR_3 ) ; } } 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . ChangeInfo c = event . getChange ( ) ; METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( c . project ) , VAR_1 , event . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( final TYPE_1 cm ) { VAR_2 = cm ; ( VAR_3 ) ++ ; } 
public static long METHOD_1 ( java.lang.String VAR_1 ) { if ( STRING_1 . equals ( VAR_1 ) ) { return VAR_2 ; } return TYPE_1 . METHOD_2 ( VAR_1 , INT_2 ) ; } 
protected static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( TYPE_2 . METHOD_1 ( VAR_1 ) ) || ( ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ) ; } 
public TYPE_1 file ( java.lang.String path ) { return VAR_1 . create ( VAR_2 . METHOD_1 ( revision , TYPE_3 . METHOD_2 ( path ) ) ) ; } 
protected TYPE_1 METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return VAR_1 ; } 
public void delete ( com.google.gerrit.reviewdb.client.Change . Id id ) throws java.io.IOException ; 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { return TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) , TYPE_3 . METHOD_4 ( VAR_1 ) ) ; } 
private java.util.Map < java.lang.String , java.util.List < TYPE_1 > > METHOD_1 ( java.lang.String path ) throws java.lang.Exception { return METHOD_2 ( new TYPE_2 < java.util.Map < java.lang.String , java.util.List < TYPE_1 > > > ( ) { } , path ) ; } 
boolean METHOD_1 ( ) { return ( ( user ) instanceof TYPE_1 ) && ( ( ( TYPE_1 ) ( user ) ) . METHOD_3 ( ) ) ; } 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 ) { return TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 , null , 0 ) ; } 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_1 , int line ) { return TYPE_1 . METHOD_2 ( STRING_1 , project , TYPE_2 . base ( ) , revision , VAR_1 , null , line ) ; } 
public TYPE_1 get ( ) { return METHOD_2 ( METHOD_3 ( VAR_2 . METHOD_1 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 event ) { if ( event instanceof TYPE_3 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( ( ( TYPE_3 ) ( event ) ) ) ) ; } } 
private void display ( final TYPE_1 result ) { projects . display ( result ) ; projects . METHOD_2 ( ) ; } 
public void METHOD_1 ( final java.lang.String name ) { this . name = name ; } 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
protected boolean METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 VAR_2 , byte [ ] VAR_3 ) { return ( VAR_1 . METHOD_2 ( VAR_2 ) ) && ( TYPE_3 . equals ( VAR_3 , METHOD_3 ( VAR_1 , VAR_2 ) ) ) ; } 
public synchronized void METHOD_1 ( ) { VAR_1 . info ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) ; METHOD_3 ( false ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; } } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; } 
public void onSuccess ( java.lang.String result ) { TYPE_1 edit = new TYPE_1 ( id , result , path , VAR_2 , VAR_3 , VAR_4 ) ; edit . METHOD_1 ( ) ; } 
private void METHOD_1 ( TYPE_1 . ProjectConfig cfg ) throws java.lang.Exception { try ( TYPE_2 VAR_1 = VAR_2 . create ( project ) ) { cfg . commit ( VAR_1 ) ; } } 
private static java.lang.String METHOD_1 ( java.lang.String project ) { return project . METHOD_3 ( ( ( project . METHOD_2 ( CHAR_1 ) ) + 1 ) ) ; } 
void submit ( com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) ; 
TYPE_1 . Branch get ( TYPE_2 . NameKey name ) throws TYPE_3 . OrmException ; 
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( VAR_2 . getValue ( ) ) ; } 
public TYPE_1 create ( final TYPE_2 group , final java.lang.String id ) { return new TYPE_1 ( put , TYPE_4 . METHOD_1 ( id ) ) ; } 
public TYPE_1 create ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 { return VAR_2 . create ( id . get ( ) ) ; } 
public final native boolean value ( ) ; 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; display ( ) ; METHOD_2 ( false ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) { return new TYPE_3 ( cd , false ) ; } 
protected java.lang.String METHOD_1 ( final java.lang.String query ) { return query ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( null ) ; org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( STRING_1 ) ) ; } 
public com.google.gerrit.reviewdb.client.Change change ( ) throws com.google.gwtorm.server.OrmException { if ( ( change ) == null ) { change = db . changes ( ) . get ( VAR_1 ) ; } return change ; } 
static boolean METHOD_1 ( java.lang.String s ) { return ( s != null ) && ( ( ( s . equals ( STRING_1 ) ) || ( s . METHOD_2 ( STRING_2 ) ) ) || ( TYPE_1 . METHOD_1 ( s ) ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( true ) ; } } 
static TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id ) { return TYPE_2 . METHOD_2 ( TYPE_3 . getName ( ) , id . get ( ) ) ; } 
public void METHOD_1 ( ) { m . METHOD_1 ( name . value ( ) , VAR_1 ) ; } 
public Project . NameKey METHOD_1 ( ) { return name ; } 
public TYPE_1 change ( com.google.gerrit.server.query.change.ChangeData cd ) { try { return cd . METHOD_1 ( ) . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( cd , db ) ; } catch ( com.google.gwtorm.server.OrmException e ) { return TYPE_2 . change ( STRING_1 , e ) ; } } 
public TYPE_1 METHOD_1 ( org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.revwalk.RevWalk rw , com.google.gerrit.server.query.change.ChangeData cd , com.google.gerrit.reviewdb.client.PatchSet patch ) { return TYPE_2 . METHOD_2 ( this , repo , rw , cd , patch ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) { return new TYPE_3 ( cd , true ) ; } 
public boolean METHOD_1 ( ) { return METHOD_2 ( ) ; } 
private java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . getName ( ) ; } 
public java.lang.String toString ( ) { return format ( ) ; } 
public void METHOD_1 ( TYPE_1 ctx ) throws java.lang.Exception { ctx . METHOD_2 ( VAR_1 . getId ( ) , VAR_2 . getId ( ) , STRING_1 ) ; } 
public void onSuccess ( TYPE_1 < TYPE_2 < TYPE_3 > > result ) { r . add ( result ) ; } 
public Change . Key METHOD_1 ( ) { return new com.google.gerrit.reviewdb.client.Change . Key ( change . get ( ) . id ) ; } 
private < TYPE_1 extends TYPE_2 < ? > > TYPE_3 < TYPE_1 > METHOD_1 ( ) { if ( VAR_1 ) { return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; } return TYPE_3 . METHOD_2 ( ) . METHOD_4 ( ) ; } 
void METHOD_1 ( ) { TYPE_1 . display ( TYPE_2 . METHOD_2 ( project , changeId ) ) ; } 
private static TYPE_1 METHOD_1 ( java.lang.String id , TYPE_2 ctl ) throws TYPE_3 { if ( ctl . METHOD_2 ( ) ) { return new TYPE_1 ( ctl ) ; } throw new TYPE_3 ( id ) ; } 
public static void METHOD_1 ( TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > db , TYPE_2 < com.google.gerrit.server.query.change.ChangeData > changes ) throws com.google.gwtorm.server.OrmException { for ( com.google.gerrit.server.query.change.ChangeData cd : changes ) { cd . METHOD_2 ( ) ; } } 
static TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) , 0 , 0 , 0 , 0 ) ; } 
public TYPE_1 get ( final java.lang.String VAR_1 ) { final int index = METHOD_1 ( VAR_1 ) ; return 0 <= index ? VAR_2 . get ( index ) : TYPE_1 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { query = VAR_1 . METHOD_2 ( TYPE_1 . of ( VAR_2 , STRING_1 , VAR_3 , STRING_2 ) ) ; com.google.common.truth.Truth.assertThat ( query ) . METHOD_3 ( VAR_4 ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > create ( TYPE_3 < TYPE_1 > VAR_1 ) { return new TYPE_2 < TYPE_1 > ( VAR_1 ) ; } 
public void close ( ) ; 
public void METHOD_1 ( TYPE_1 err ) { if ( TYPE_2 . METHOD_2 ( err ) ) { new TYPE_2 ( err . getMessage ( ) ) . METHOD_3 ( ) ; } else { super . METHOD_1 ( err ) ; } METHOD_4 ( ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } 
private static TYPE_1 < TYPE_2 < ? > > METHOD_1 ( TYPE_1 < ? > e ) { return ( ( TYPE_1 < TYPE_2 < ? > > ) ( e ) ) ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( VAR_2 . ui ) ; bind ( VAR_3 class ) . METHOD_2 ( VAR_4 ) ; bind ( VAR_5 class ) . to ( VAR_6 class ) ; } 
protected TYPE_1 . Result METHOD_1 ( TYPE_2 git ) throws java.io.IOException , TYPE_3 { TYPE_4 VAR_1 = VAR_2 . create ( db , admin . METHOD_2 ( ) , git ) ; return VAR_1 . to ( STRING_1 ) ; } 
void METHOD_1 ( TYPE_1 e ) { METHOD_1 ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 ) ; VAR_1 . get ( ( ( STRING_2 + ( project . get ( ) ) ) + STRING_3 ) ) . METHOD_3 ( ) ; } 
public static TYPE_1 . Key < TYPE_2 > key ( final java.lang.String name ) { return TYPE_4 . key ( TYPE_4 . METHOD_1 ( name ) ) ; } 
public java.util.List < com.google.gerrit.reviewdb.client . PatchSetApproval > approvals ( ) throws com.google.gwtorm.server.OrmException { return TYPE_2 . METHOD_1 ( METHOD_2 ( ) . values ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , true ) ; super . METHOD_1 ( ) ; } 
public final native int to ( ) ; 
private TYPE_1 . Result METHOD_1 ( ) throws java.io.IOException , TYPE_2 { TYPE_3 VAR_1 = VAR_2 . create ( db , admin . METHOD_2 ( ) , git ) ; return VAR_1 . to ( STRING_1 ) ; } 
private int METHOD_1 ( ) { final int VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( 0 <= VAR_1 ) { return TYPE_1 . METHOD_3 ( VAR_2 . getValue ( VAR_1 ) ) ; } return getValue ( ) . VAR_2 ; } 
public static TYPE_1 METHOD_1 ( java.lang.String query ) { return TYPE_1 . METHOD_1 ( query , 0 ) ; } 
public void METHOD_1 ( int id ) { METHOD_2 ( id , false ) ; } 
private TYPE_1 METHOD_1 ( ) { final int VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( 0 <= VAR_1 ) { return TYPE_1 . METHOD_3 ( VAR_2 . getValue ( VAR_1 ) ) ; } return value . METHOD_1 ( ) ; } 
private static boolean METHOD_1 ( TYPE_1 cfg ) { return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , false ) ; } 
public TYPE_1 create ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , change ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException , TYPE_3 { TYPE_4 config = new TYPE_4 ( TYPE_5 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; config . METHOD_3 ( ) ; return config ; } 
public static TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey name ) { return new TYPE_2 ( name ) ; } 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { return TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( VAR_1 , STRING_1 ) ) ; } return TYPE_2 . METHOD_4 ( ) ; } 
TYPE_1 . Project get ( TYPE_2 . NameKey name ) throws TYPE_3 . OrmException ; 
public void onSuccess ( final java.util.List < TYPE_1 > result ) { VAR_1 . display ( result ) ; } 
private final native int get ( java.lang.String n , int d ) ; 
private void METHOD_1 ( TYPE_1 . Change c , TYPE_2 msg ) { METHOD_2 ( c , msg , true ) ; } 
public void METHOD_1 ( ) { final TYPE_1 p = new TYPE_1 ( null ) ; org.junit.Assert.assertEquals ( 0 , p . METHOD_2 ( ) ) ; } 
public TYPE_1 value ( ) { return value ; } 
private void METHOD_1 ( ) { approvals = TYPE_1 . of ( ) ; reviewers = TYPE_2 . of ( ) ; VAR_1 = TYPE_3 . of ( ) ; VAR_2 = TYPE_1 . of ( ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . ProjectConfig cfg = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( cfg , VAR_3 , VAR_4 , STRING_1 ) ; METHOD_5 ( project , cfg ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 cm , int line ) { return METHOD_2 ( TYPE_3 . create ( path , METHOD_4 ( cm ) , ( line + 1 ) , null , null ) ) ; } 
public java.util.Set < TYPE_1 . Id > METHOD_1 ( final java.lang.String key ) { return java.util.Collections . METHOD_2 ( ) ; } 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id id ) { return ( VAR_1 ) != null ? submit ( new TYPE_2 ( project , id ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } 
java.lang.String METHOD_1 ( ) { return METHOD_1 ( STRING_1 , STRING_2 , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 res = METHOD_3 ( STRING_1 ) ; com.google.common.truth.Truth.assertThat ( res . METHOD_4 ( ) ) . isEqualTo ( ( ( id ( STRING_2 ) ) + STRING_3 ) ) ; } 
public static void METHOD_1 ( java.lang.String project , int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . edit ( project , id ) . delete ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Result patchSet = METHOD_2 ( ) ; METHOD_5 ( patchSet ) ; METHOD_6 ( patchSet , 1 ) ; } 
public void delete ( com.google.gerrit.reviewdb.client.Change change ) throws java.io.IOException { delete ( new com.google.gerrit.server.query.change.ChangeData ( change ) ) ; } 
private void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( STRING_4 , STRING_5 ) ; } 
void METHOD_1 ( int id ) ; 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . String class , VAR_3 class ) . METHOD_3 ( VAR_4 class ) ; } 
public java.lang.String METHOD_1 ( ) { java.lang.String s = VAR_1 . METHOD_1 ( ) ; return s == null ? STRING_1 : s ; } 
public void METHOD_1 ( TYPE_1 event ) { topic . METHOD_3 ( ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException { return TYPE_3 . METHOD_2 ( TYPE_4 . create ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) ) , VAR_2 . Collections < java.lang.String , java.lang.String > METHOD_4 ( ) ) ; } 
public void run ( ) { try { synchronized ( VAR_1 ) { VAR_1 . add ( cmd ) ; } METHOD_1 ( ) ; } finally { synchronized ( VAR_1 ) { VAR_1 . METHOD_2 ( cmd ) ; } } } 
private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( VAR_2 ) + msg ) , args ) ; } } 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Change . Id id ) ; 
public boolean METHOD_1 ( ) { return ! ( METHOD_2 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( args , c . getProject ( ) , c ) . METHOD_2 ( ) ; } 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { return this . METHOD_1 ( ) ; } 
public void METHOD_1 ( final java.util.List < com.google.gerrit.reviewdb.client . AccountGroup > result ) { VAR_1 . display ( result ) ; } 
void METHOD_1 ( ) { if ( ! ( VAR_1 . isEmpty ( ) ) ) { for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_2 . METHOD_2 ( ) ; } VAR_3 = null ; } } 
public static TYPE_1 METHOD_1 ( ) { return TYPE_1 . create ( 0 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 revision ) { switch ( type ) { case VAR_1 : case VAR_2 : this . VAR_3 = revision ; return this ; default : throw new TYPE_4 ( java.lang.String.format ( STRING_1 , type ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; com.google.common.truth.Truth.assertThat ( METHOD_3 ( in ) ) . isEqualTo ( query ( in ) ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 cm ) { return ( ) - > { TYPE_3 group = METHOD_2 ( cm ) ; if ( group != null ) { group . METHOD_1 ( ) ; } } ; } 
public java.util.List < TYPE_1 > get ( ) throws TYPE_2 { return METHOD_1 ( this ) ; } 
public void METHOD_1 ( final boolean VAR_1 ) { TYPE_1 . METHOD_2 ( this , false ) ; super . METHOD_1 ( VAR_1 ) ; } 
public boolean METHOD_1 ( ) { return VAR_1 . isEmpty ( ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . NameKey class , new TYPE_1 < java.util.List < com.google.gerrit.reviewdb.client.Change > > ( ) { } ) . METHOD_3 ( 0 ) . METHOD_4 ( VAR_3 class ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( project , STRING_1 , VAR_1 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) throws TYPE_2 { try { return VAR_1 . apply ( account ) ; } catch ( java.io.IOException | com.google.gwtorm.server.OrmException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public final void update ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . OrmException { METHOD_1 ( VAR_1 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) throws com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( VAR_2 ) == null ) { METHOD_2 ( ) ; } return VAR_2 ; } 
public static org.eclipse.jgit.revwalk.RevCommit METHOD_1 ( org.eclipse.jgit.revwalk.RevWalk rw , TYPE_1 [ ] VAR_1 , TYPE_2 < org.eclipse.jgit.lib.Repository > repo ) throws java.lang.Exception { return TYPE_3 . METHOD_1 ( rw , VAR_1 , repo , ( ( org.eclipse.jgit.revwalk.RevCommit [ ] ) ( null ) ) ) ; } 
public void METHOD_1 ( java.lang.String label , short value ) { METHOD_2 ( getAccountId ( ) , label , value ) ; } 
private static TYPE_1 METHOD_1 ( final boolean VAR_1 ) { if ( VAR_1 ) { return ( ( TYPE_1 ) ( TYPE_1 . METHOD_2 ( ) ) ) ; } return ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 . NameKey VAR_1 , TYPE_2 VAR_2 , com.google.gerrit.reviewdb.client.Account account ) { METHOD_1 ( VAR_1 , VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) , account ) ; } 
public final native java.lang.String project ( ) ; 
public void run ( ) { } 
TYPE_3 < ? > create ( TYPE_4 VAR_1 , TYPE_5 VAR_2 ) throws TYPE_6 . OrmException ; 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 ) ; assertThat ( VAR_5 ) . METHOD_4 ( ) ; } 
public java.lang.String getName ( ) { return METHOD_1 ( ) . getName ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 ctx ) throws java.lang.Exception { ctx . METHOD_2 ( edit . METHOD_3 ( ) . METHOD_4 ( ) , org.eclipse.jgit.lib.ObjectId . METHOD_5 ( ) , edit . getRefName ( ) ) ; } 
public void METHOD_1 ( TYPE_1 key , java.util.List < java.lang.String > VAR_2 ) { } 
private java.lang.String METHOD_1 ( TYPE_1 git , TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_3 VAR_2 = VAR_3 . create ( db , VAR_1 , git , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) ) ; return VAR_2 . to ( STRING_1 ) . getChangeId ( ) ; } 
private void METHOD_1 ( java.lang.String name , short value ) { VAR_1 . add ( TYPE_1 . create ( name , value ) . format ( ) ) ; } 
void METHOD_1 ( TYPE_1 e ) { TYPE_2 . METHOD_2 ( VAR_1 , changeId , project , revision , VAR_2 ) ; } 
protected void METHOD_1 ( ) { if ( VAR_1 ) { install ( new TYPE_1 ( ) ) ; } } 
private boolean METHOD_1 ( final com.google.gerrit.reviewdb.client.Change change ) { if ( ( VAR_1 ) == null ) { return true ; } return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( change . getProject ( ) ) ; } 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id , TYPE_3 VAR_1 , TYPE_2 < TYPE_3 > VAR_2 ) { TYPE_4 . revision ( id , STRING_1 ) . put ( VAR_1 , VAR_2 ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 . Id id ) { return ( VAR_1 ) + ( id . toString ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { admin = VAR_1 . create ( STRING_1 , STRING_2 ) ; VAR_2 = new TYPE_1 ( server , admin ) ; db = VAR_3 . METHOD_2 ( ) ; } 
void METHOD_1 ( TYPE_1 e ) { TYPE_2 . METHOD_2 ( getProject ( ) , changeId , VAR_1 , VAR_2 , VAR_3 ) ; } 
static void METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id id , TYPE_1 ... VAR_1 ) { TYPE_2 . METHOD_1 ( project . get ( ) , id . get ( ) , TYPE_3 . METHOD_2 ( project , id , VAR_1 ) ) ; } 
static TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) , 0 , 0 ) ; } 
public static void METHOD_1 ( final java.lang.String token ) { TYPE_1 . METHOD_2 ( token , false ) ; TYPE_2 . METHOD_3 ( token ) ; } 
public void METHOD_1 ( TYPE_1 < com.google.gerrit.reviewdb.client.Change . Id > VAR_1 ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( VAR_1 ) , new java.util.ArrayList < java.lang.String > ( ) ) ; } 
public void onSuccess ( TYPE_1 info ) { VAR_1 = info ; } 
protected boolean METHOD_1 ( ) { return false ; } 
public org.eclipse.jgit.lib.Repository METHOD_1 ( ) throws java.io.IOException { return this . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_2 ( VAR_1 ) ) . isEmpty ( ) ; } 
public void run ( ) { VAR_1 . close ( ) ; } 
public com.google.gerrit.reviewdb.client.PatchSet update ( com.google.gerrit.reviewdb.client.PatchSet VAR_1 ) { VAR_1 . METHOD_2 ( false ) ; return VAR_1 ; } 
protected void METHOD_1 ( java.lang.String changeId , java.lang.String VAR_1 ) throws java.lang.Exception { submit ( changeId , new TYPE_1 ( ) , VAR_2 class , VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_2 . HttpServletResponse res , java.lang.String VAR_1 , java.lang.String VAR_2 ) { res . METHOD_2 ( VAR_2 ) ; res . METHOD_3 ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; METHOD_4 ( res ) ; } 
public void onSuccess ( ) { TYPE_1 . display ( token , new TYPE_2 ( TYPE_3 . METHOD_1 ( token ) ) ) ; } 
public void display ( final java.lang.String VAR_1 ) { display ( null , null , false , VAR_1 ) ; } 
public abstract TYPE_1 METHOD_1 ( ) ; 
private TYPE_2 METHOD_1 ( com.google.gerrit.reviewdb.client.Change c , TYPE_1 user ) throws com.google.gwtorm.server.OrmException , java.io.IOException { return VAR_2 . METHOD_2 ( VAR_3 . get ( ) , c , user ) ; } 
public void run ( ) throws java.lang.Exception { this . METHOD_2 ( ) ; } 
public final native void path ( java.lang.String p ) ; 
static void delete ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id id , TYPE_1 ... VAR_1 ) { TYPE_2 . METHOD_1 ( project . get ( ) , id . get ( ) , TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 . ChangeInfo > VAR_1 ) { TYPE_3 . METHOD_1 ( id ) . get ( VAR_1 ) ; } 
protected void METHOD_1 ( final int row ) { if ( row > 0 ) { METHOD_2 ( row ) ; } TYPE_1 . METHOD_3 ( METHOD_5 ( row ) . url ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String changeId = METHOD_2 ( ) . getChangeId ( ) ; java.util.List < TYPE_1 > reviewers = METHOD_3 ( changeId , name ( STRING_1 ) , INT_1 ) ; com.google.common.truth.Truth.assertThat ( reviewers ) . isEmpty ( ) ; } 
void METHOD_1 ( final java.lang.String token ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( token ) ; TYPE_2 . METHOD_3 ( VAR_1 . label ( ) ) ; VAR_2 . put ( VAR_1 . label ( ) , VAR_1 . value ( ) ) ; } 
public java.lang.String METHOD_1 ( ) throws java.lang.Exception { log . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) ; client ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; log . METHOD_2 ( STRING_2 , VAR_1 , VAR_2 ) ; return VAR_2 ; } 
private static final native void METHOD_1 ( java.lang.String d , java.lang.String e , java.lang.String t , java.lang.String r , java.lang.String VAR_1 ) ; 
public TYPE_1 notes ( ) throws com.google.gwtorm.server.OrmException { if ( ( notes ) == null ) { notes = VAR_1 . create ( db , project ( ) , VAR_2 ) ; } return notes ; } 
public TYPE_1 < com.google.gerrit.reviewdb.client.Change . Id , java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( final com.google.gerrit.reviewdb.client.Change change ) throws TYPE_3 , com.google.gwtorm.server.OrmException { return TYPE_5 . METHOD_2 ( METHOD_3 ( change ) , db . get ( ) ) ; } 
private java.lang.String METHOD_1 ( short value ) { if ( value > 0 ) { return STRING_1 + value ; } else { return TYPE_1 . toString ( value ) ; } } 
public org.eclipse.jgit.lib.ObjectId getRevision ( ) { return ( revision ) != null ? revision . METHOD_1 ( ) : null ; } 
protected abstract TYPE_1 METHOD_1 ( TYPE_3 . ProjectConfig config , TYPE_4 VAR_2 , boolean VAR_3 ) throws TYPE_5 , TYPE_6 , TYPE_7 , com.google.gwtorm.server.OrmException , java.io.IOException , TYPE_8 ; 
protected TYPE_1 . Result METHOD_1 ( java.lang.String ref ) throws java.io.IOException , TYPE_2 { TYPE_3 VAR_1 = VAR_2 . create ( db , admin . METHOD_2 ( ) , git ) ; return VAR_1 . to ( ref ) ; } 
public static TYPE_1 < TYPE_2 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_3 ( ) ; } return VAR_1 ; } 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { if ( ( ( change . getStatus ( ) ) == ( VAR_1 ) ) && ( ! ( METHOD_2 ( db , null ) ) ) ) { return false ; } return METHOD_3 ( ) ; } 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { change . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; return change ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 p ) throws java.io.IOException { return TYPE_3 . METHOD_1 ( p ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( METHOD_3 ( STRING_1 ) ) ; } 
public static java.lang.String METHOD_1 ( final TYPE_1 req ) { java.lang.String token = req . METHOD_2 ( ) ; if ( TYPE_2 . METHOD_3 ( token ) ) { return VAR_1 ; } return TYPE_3 . is ( CHAR_1 ) . METHOD_4 ( token ) ; } 
public void METHOD_1 ( final TYPE_1 . Id VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { return VAR_1 . METHOD_1 ( ) ; } 
TYPE_1 create ( java.util.Map < java.lang.String , TYPE_2 < TYPE_3 > > VAR_2 ) ; 
private java.lang.String group ( java.lang.String name ) throws java.io.IOException { name = name ( name ) ; TYPE_1 in = new TYPE_1 ( ) ; VAR_1 . put ( ( STRING_1 + name ) , in ) . METHOD_1 ( ) ; return name ; } 
public boolean apply ( TYPE_1 input ) { return ( input . METHOD_1 ( ) ) == null ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 type ) { return new TYPE_1 ( VAR_1 , type , null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . METHOD_2 ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( char key ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( key ) ; } } 
public void run ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( VAR_3 ) ) ; } 
public final TYPE_1 < TYPE_2 , TYPE_3 , TYPE_4 > METHOD_1 ( ) { return VAR_1 . get ( ) ; } 
public void onSuccess ( final java.util.List < TYPE_1 > result ) { VAR_1 . display ( result ) ; if ( result . isEmpty ( ) ) { METHOD_2 ( true ) ; } } 
public TYPE_1 < ? > apply ( TYPE_2 rsrc , TYPE_3 input ) throws java.io.IOException { VAR_1 . index ( db . get ( ) , rsrc . getChange ( ) ) ; return TYPE_1 . METHOD_1 ( ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String name ) { return VAR_1 + name ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { return METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 ) ) ; } return null ; } 
private boolean METHOD_1 ( ) { VAR_1 . METHOD_3 ( STRING_1 ) ; try { VAR_2 . METHOD_2 ( ) ; return true ; } catch ( TYPE_1 e ) { VAR_1 . error ( STRING_2 , e ) ; return false ; } } 
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } 
private void METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id ) { synchronized ( VAR_1 ) { if ( ( VAR_1 . get ( id ) . get ( ) ) == 0 ) { VAR_1 . METHOD_2 ( id ) ; } } } 
TYPE_1 . Project get ( TYPE_2 . Id id ) throws TYPE_3 . OrmException ; 
protected Project . NameKey METHOD_1 ( ) { return getChange ( ) . getProject ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 < TYPE_3 > ( this ) { protected void METHOD_3 ( final TYPE_3 result ) { display ( result ) ; } } ) ; } 
public static boolean METHOD_1 ( final TYPE_1 . Id VAR_1 , final TYPE_2 . NameKey VAR_2 ) { return TYPE_5 . METHOD_1 ( VAR_1 , TYPE_4 . METHOD_2 ( ) . get ( VAR_2 ) ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 VAR_1 , int line , java.lang.String message ) { TYPE_1 d = new TYPE_1 ( ) ; return TYPE_3 . METHOD_2 ( d , path , VAR_1 , null , line , message ) ; } 
protected void METHOD_1 ( ) throws java.io.IOException , TYPE_1 { TYPE_2 cfg = METHOD_2 ( VAR_1 ) ; VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 , cfg , this ) ; } 
public void METHOD_1 ( TYPE_1 . ChangeInfo info ) throws java.lang.Exception { VAR_3 . apply ( METHOD_2 ( info . project , VAR_2 ) , new TYPE_2 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String ... VAR_3 ) { TYPE_3 result = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; org.junit.Assert.assertEquals ( TYPE_4 . METHOD_4 ( VAR_3 ) , result . METHOD_5 ( ) ) ; } 
public static boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) || ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) || ( VAR_1 . METHOD_2 ( VAR_4 ) ) ; } 
public TYPE_1 create ( ) throws TYPE_2 { TYPE_3 . METHOD_1 ( ( ( VAR_1 ) != null ) , STRING_1 ) ; return ! ( commands . isEmpty ( ) ) ? this : null ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; super . METHOD_1 ( VAR_1 ) ; } 
private void METHOD_1 ( ) { TYPE_1 . display ( TYPE_2 . METHOD_2 ( changeId ) ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String name ) { if ( STRING_1 . equals ( VAR_1 ) ) { return name ; } return ( VAR_1 + STRING_2 ) + name ; } 
private void METHOD_1 ( ) { try { METHOD_2 ( VAR_1 ) ; } catch ( java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new TYPE_2 ( STRING_1 ) ; } this . VAR_1 = VAR_1 ; } 
private void METHOD_1 ( ) throws TYPE_2 { if ( ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { throw new TYPE_2 ( ) ; } } 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . ChangeInfo c = event . getChange ( ) ; METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( c . project ) , VAR_1 ) ; } 
private TYPE_1 query ( ) { java.util.Set < java.lang.String > VAR_1 = TYPE_2 . of ( TYPE_3 . getName ( ) , TYPE_4 . getName ( ) ) ; return VAR_2 . get ( ) . METHOD_1 ( VAR_1 ) ; } 
private boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( VAR_2 ) ; } return VAR_1 ; } 
void METHOD_1 ( TYPE_1 e ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( VAR_2 , project . get ( ) , branch , topic , key ) ; } VAR_1 . METHOD_2 ( ) ; } 
public boolean METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_4 ( ) ) ) || ( METHOD_3 ( ) . METHOD_1 ( ) ) ; } 
private boolean METHOD_1 ( ) { return TYPE_1 . info ( ) . auth ( ) . METHOD_3 ( VAR_1 ) ; } 
public static TYPE_1 change ( int id ) { return new TYPE_1 ( STRING_1 ) . id ( java.lang.String . METHOD_1 ( id ) ) ; } 
public void run ( ) throws java.lang.Exception { METHOD_4 ( ) ; METHOD_5 ( ) ; } 
protected void METHOD_1 ( final TYPE_1 result ) { VAR_1 . METHOD_2 ( true ) ; this . METHOD_1 ( result , this ) ; } 
public TYPE_1 . Result METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change . Id changeId ) throws com.google.gwtorm.server.OrmException , java.io.IOException { return METHOD_1 ( db , changeId , true ) ; } 
public void METHOD_1 ( final TYPE_1 event ) { if ( TYPE_2 . METHOD_2 ( ) ) { TYPE_2 . display ( VAR_1 ) ; } else { TYPE_2 . display ( VAR_2 ) ; } } 
com.google.gerrit.server.query.change.ChangeData METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet t ) { return factory . create ( db . get ( ) , t . getId ( ) . getParentKey ( ) ) ; } 
public void METHOD_1 ( ) { org.junit.Assert . METHOD_2 ( STRING_1 , new TYPE_1 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 req , TYPE_3 . HttpServletResponse res ) throws java.io.IOException { METHOD_2 ( res , VAR_1 ) ; return res . METHOD_3 ( ) ; } 
protected TYPE_1 METHOD_1 ( ) { return VAR_1 . set ( VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 . get ( ) ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_1 = ( VAR_2 == null ) ? VAR_1 : new TYPE_3 ( VAR_1 , VAR_3 , VAR_2 . user ) ; return VAR_1 ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( STRING_1 + key ) ) ; return new TYPE_1 ( key , VAR_2 , project , branch , VAR_3 ) ; } 
public Change . Id apply ( com.google.gerrit.server.query.change.ChangeData cd ) { return cd . getId ( ) ; } 
boolean get ( org.eclipse.jgit.lib.ObjectId commit , TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , TYPE_3 . NameKey VAR_4 , org.eclipse.jgit.lib.Repository repo ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ; METHOD_2 ( VAR_1 . get ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Result r = VAR_1 . create ( db , admin . METHOD_2 ( ) , git ) . to ( STRING_1 ) ; r . METHOD_3 ( ) ; METHOD_4 ( r . METHOD_5 ( ) ) ; } 
public synchronized TYPE_1 METHOD_1 ( java.lang.String name , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( name , VAR_1 ) ; METHOD_3 ( name , VAR_1 ) ; return METHOD_4 ( name , VAR_1 . METHOD_5 ( ) ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String message ) { return new TYPE_1 ( false , message ) ; } 
public TYPE_1 patch ( ) throws TYPE_2 { try { return VAR_1 . apply ( revision ) ; } catch ( java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public void set ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; } 
public TYPE_1 < ? > apply ( TYPE_2 rsrc , TYPE_3 in ) throws TYPE_4 , TYPE_5 , TYPE_6 , com.google.gwtorm.server.OrmException , java.io.IOException { return VAR_1 . apply ( rsrc , path ) ; } 
void METHOD_1 ( boolean value , java.lang.String message ) throws TYPE_1 ; 
public TYPE_1 apply ( TYPE_2 rsrc ) throws com.google.gwtorm.server.OrmException { return VAR_1 . get ( ) . format ( rsrc . METHOD_1 ( ) ) ; } 
public void METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { } 
public void index ( com.google.gerrit.reviewdb.client.Account.Id id ) throws java.io.IOException { for ( TYPE_1 < ? , TYPE_2 > i : METHOD_1 ( ) ) { i . METHOD_2 ( VAR_2 . get ( id ) ) ; } } 
private TYPE_1 METHOD_1 ( ) { return notes ; } 
public TYPE_1 create ( TYPE_2 VAR_1 , java.lang.String id ) throws TYPE_3 { return new TYPE_1 ( VAR_2 , TYPE_4 . METHOD_1 ( id ) , true ) ; } 
public abstract TYPE_1 run ( TYPE_2 VAR_1 , TYPE_3 < TYPE_2 > VAR_2 ) throws TYPE_4 ; 
public final native java.lang.String url ( ) ; 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 { return new TYPE_1 ( VAR_1 . getProject ( ) , VAR_1 . METHOD_2 ( ) , id . get ( ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 . ProjectConfig config , com.google.gerrit.reviewdb.client . AccountGroup group ) { return new TYPE_1 ( config . METHOD_2 ( group ) ) ; } 
TYPE_1 METHOD_1 ( org.eclipse.jgit.revwalk.RevWalk walk ) { this . walk = walk ; return this ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . add ( this , VAR_2 ) ; VAR_3 = TYPE_1 . add ( this , VAR_4 ) ; } 
public void onSuccess ( TYPE_1 result ) { TYPE_2 p = new TYPE_2 ( ) ; result . METHOD_2 ( p ) ; TYPE_3 . METHOD_3 ( p ) ; } 
public java.util.List < com.google.gerrit.reviewdb.client . PatchSetApproval > METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { return TYPE_2 . METHOD_2 ( METHOD_3 ( ) . values ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( name ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } 
public java.lang.String getName ( ) { return name ; } 
protected TYPE_1 METHOD_1 ( ) { return user ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( final TYPE_3 < ? extends TYPE_1 < TYPE_2 > > VAR_1 ) { return new TYPE_4 ( VAR_1 ) ; } 
boolean METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( VAR_1 , false ) ; } 
private static boolean METHOD_1 ( final java.lang.String a , final java.lang.String b ) { if ( ( a == null ) && ( b == null ) ) { return true ; } return ( a != null ) && ( a . equals ( b ) ) ; } 
private com.google.gerrit.reviewdb.client.Change getChange ( ) { return notes . getChange ( ) ; } 
private java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException , java.io.IOException { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . get ( ) , c ) ; return VAR_1 . changes ( ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( final TYPE_1 . Project p ) { if ( p != null ) { VAR_1 . METHOD_2 ( p . METHOD_3 ( ) ) ; } } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 user = VAR_1 . get ( ) ; if ( user instanceof TYPE_3 ) { return ( ( TYPE_3 ) ( user ) ) . getAccountId ( ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( false ) ; } } 
protected TYPE_1 METHOD_2 ( TYPE_2 < TYPE_3 > repo ) throws java.lang.Exception { return METHOD_2 ( repo , null , null , null , null ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; } } 
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( projectName ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_1 ( VAR_1 . getName ( ) ) ; } } 
private static int METHOD_1 ( ) { return ++ ( VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_1 ) ; } 
public void METHOD_1 ( final java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public TYPE_1 apply ( TYPE_2 VAR_1 ) { format = VAR_2 ; return display ( null ) ; } 
public void METHOD_1 ( final TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) == ( VAR_1 ) ) { event . METHOD_4 ( ) ; VAR_2 . submit ( ) ; } } 
public Change . Id getId ( ) { return change.getId ( ) ; } 
public static java.lang.String METHOD_1 ( final TYPE_1 . NameKey n , final java.lang.String VAR_1 ) { return ( ( STRING_1 + ( n . toString ( ) ) ) + STRING_2 ) + VAR_1 ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } } 
private java.util.List < TYPE_1 > METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 , org.eclipse.jgit.lib.ObjectId VAR_2 ) throws TYPE_2 { return VAR_3 . get ( getKey ( VAR_1 , VAR_2 ) , project ) . METHOD_1 ( ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( false , false , false ) ; VAR_1 . METHOD_3 ( false ) ; super . METHOD_1 ( ) ; METHOD_4 ( ) ; } 
public java.lang.String METHOD_1 ( int i ) { return ( VAR_2 . length ) > i ? VAR_2 [ i ] : STRING_1 ; } 
private native void METHOD_1 ( java.lang.String i , TYPE_1 e , java.lang.String n ) ; 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( change . getStatus ( ) . METHOD_1 ( ) ) { change . METHOD_2 ( VAR_1 ) ; change . METHOD_3 ( VAR_2 ) ; return change ; } return null ; } 
boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = ( METHOD_2 ( ) . METHOD_3 ( ) ) || ( METHOD_4 ( VAR_2 ) ) ; } return VAR_1 ; } 
public void onSuccess ( ) { TYPE_1 . display ( token , ( edit ? new TYPE_2 ( id , line ) : new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ) ; } 
public void put ( com.google.gerrit.reviewdb.client.Account.Id id , TYPE_2 VAR_1 ) { VAR_2 . put ( id , METHOD_3 ( TYPE_3 . METHOD_1 ( VAR_1 ) ) ) ; } 
private java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 ) ; } 
private org.eclipse.jgit.lib.Repository METHOD_1 ( TYPE_1 project ) throws java.io.IOException , TYPE_2 { return VAR_1 . METHOD_1 ( project . METHOD_2 ( ) ) ; } 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_4 . base ( project ) . view ( STRING_1 ) . METHOD_2 ( STRING_2 ) . get ( VAR_1 ) ; } 
private boolean METHOD_1 ( ) { return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_2 ( ) ) ) || ( METHOD_4 ( ) . METHOD_1 ( ) ) ) || ( METHOD_5 ( ) ) ; } 
public void onSuccess ( final java.util.List < TYPE_1 . Project > result ) { VAR_1 . display ( result ) ; if ( VAR_2 ) { VAR_2 = false ; METHOD_2 ( ) ; } } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( patchSet . getId ( ) , METHOD_4 ( ) , METHOD_5 ( ) ) ; } 
public TYPE_1 < TYPE_2 > apply ( java.util.List < ? > input ) { VAR_4 . METHOD_2 ( ) ; return TYPE_4 . METHOD_3 ( null ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . to ( VAR_2 class ) ; METHOD_2 ( ) . to ( VAR_3 class ) ; METHOD_2 ( ) . to ( VAR_4 class ) ; } 
public void METHOD_1 ( int size ) { if ( ( VAR_2 ) != null ) VAR_3 = size ; else VAR_2 = new TYPE_2 ( size ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; org.junit.Assert.assertEquals ( in , METHOD_3 ( in ) ) ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , TYPE_1 a , TYPE_2 < com.google.gerrit.reviewdb.client.PatchSet > ps , TYPE_3 VAR_2 ) { METHOD_1 ( db , a , ps , null , false , null , VAR_2 ) ; } 
public java.lang.String getRefName ( ) { return null ; } 
public void METHOD_1 ( ) { synchronized ( this ) { final TYPE_1 VAR_1 = TYPE_2 . set ( VAR_2 ) ; try { METHOD_2 ( VAR_3 ) ; } finally { TYPE_2 . set ( VAR_1 ) ; } } } 
private void METHOD_1 ( TYPE_1 c ) throws com.google.gwtorm.server.OrmException { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( c ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 , null , VAR_3 . METHOD_3 ( ) ) ; } 
com.google.gerrit.server.query.change.ChangeData METHOD_1 ( com.google.gerrit.reviewdb.client.Change t ) { return factory . create ( db . get ( ) , t ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( false ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; } 
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( null ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 . index ( VAR_2 ) ) . METHOD_3 ( true ) ; METHOD_4 ( ) ; VAR_3 . METHOD_5 ( id . get ( ) ) ; METHOD_6 ( ) ; } 
private static void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < ? > c = TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_1 = c . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_4 ( true ) ; VAR_1 . METHOD_5 ( c , false ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 { try { VAR_3 . apply ( VAR_4 , VAR_1 , VAR_2 ) ; } catch ( java.lang.Exception e ) { throw TYPE_3 . METHOD_3 ( STRING_1 , e ) ; } } 
public void onSuccess ( ) { TYPE_1 . display ( token , new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) throws TYPE_3 { return VAR_1 . get ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . METHOD_2 ( STRING_1 , new TYPE_2 ( VAR_2 ) ) ; com.google.common.truth.Truth.assertThat ( r . METHOD_3 ( ) ) . isEqualTo ( VAR_3 ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_1 class ) ; } 
public int getChangeId ( ) { return changeId . get ( ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { TYPE_3 out = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( out , VAR_2 ) ; return out . toString ( TYPE_4 . name ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { synchronized ( VAR_1 class ) { VAR_2 = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( STRING_1 ) ) ; format = new TYPE_2 ( STRING_2 ) ; } } 
public void METHOD_1 ( final TYPE_1 type ) { VAR_1 = type ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String changeId = METHOD_2 ( ) . getChangeId ( ) ; java.util.List < TYPE_1 > reviewers = METHOD_3 ( changeId , STRING_1 , INT_1 ) ; com.google.common.truth.Truth.assertThat ( reviewers ) . isEmpty ( ) ; } 
public TYPE_1 create ( int index ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , value , VAR_2 . METHOD_2 ( ) ) ; VAR_4 . insert ( VAR_1 , index ) ; return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { walk . close ( ) ; } 
public TYPE_1 get ( ) { return account != null ? VAR_1 . METHOD_1 ( new com.google.gerrit.reviewdb.client.Account.Id ( VAR_2 ) ) : null ; } 
private TYPE_1 METHOD_1 ( TYPE_2 account ) { return VAR_1 . METHOD_2 ( VAR_2 , new TYPE_3 ( server , account ) , VAR_3 . create ( account . getId ( ) ) ) ; } 
private TYPE_1 < com.google.gerrit.reviewdb.client.Project.NameKey , TYPE_2 > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) { return TYPE_2 . METHOD_1 ( cd . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; org.junit.Assert.assertEquals ( 1 , TYPE_1 . METHOD_2 ( VAR_3 . format ( null , null , null , null , cfg , VAR_1 ) , VAR_2 ) ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_4 ( VAR_2 , VAR_3 , STRING_1 ) ; } 
protected void METHOD_1 ( final java.util.List < TYPE_1 . Project > result ) { projects . display ( result ) ; projects . METHOD_2 ( ) ; } 
public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( null , 0 , true ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 , com.google.gerrit.server.query.change.ChangeData cd ) { return METHOD_1 ( VAR_1 , VAR_2 , null , cd ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String project , java.lang.String input ) { return input . METHOD_1 ( STRING_1 , project ) ; } 
protected void METHOD_1 ( ) { factory ( VAR_2 . Factory class ) ; } 
public < TYPE_1 , TYPE_2 > TYPE_3 < TYPE_1 , TYPE_2 > METHOD_1 ( TYPE_4 < TYPE_1 , TYPE_2 > VAR_1 ) { return create ( VAR_1 , false ) . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 class ) ; com.google.gerrit.extensions.registration.DynamicSet < TYPE_1 > VAR_3 = com.google.gerrit.extensions.registration.DynamicSet . METHOD_3 ( ) ; VAR_3 . add ( VAR_1 ) ; VAR_4 = new TYPE_2 ( null , VAR_3 , null , null , null ) ; } 
TYPE_1 METHOD_1 ( ) { return ( ) - > { METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ; } ; } 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( ( change . getStatus ( ) ) == ( VAR_1 ) ) { change . METHOD_1 ( VAR_2 ) ; TYPE_1 . METHOD_2 ( change ) ; } return change ; } 
public TYPE_1 reviewers ( ) throws com.google.gwtorm.server.OrmException { if ( ( reviewers ) == null ) { reviewers = VAR_1 . METHOD_1 ( notes ( ) , approvals ( ) . values ( ) ) ; } return reviewers ; } 
public void METHOD_1 ( byte [ ] VAR_1 ) { METHOD_1 ( VAR_1 , 0 , VAR_1 . length ) ; } 
public com.google.gerrit.server.query.change.ChangeData getChange ( ) throws com.google.gwtorm.server.OrmException { return TYPE_1 . METHOD_1 ( VAR_1 . get ( ) . METHOD_2 ( changeId ) ) ; } 
java.lang.String plugins ( ) ; 
public void run ( ) { int w = cm . METHOD_1 ( ) . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( w , VAR_1 ) ; } 
private static TYPE_2 METHOD_1 ( final TYPE_1 m , final java.lang.String VAR_1 , final java.lang.String VAR_2 ) { TYPE_2 i = new TYPE_2 ( VAR_1 , VAR_2 ) ; m . METHOD_2 ( i ) ; return i ; } 
public static void METHOD_1 ( java.lang.String project , int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . change ( project , id ) . view ( STRING_1 ) . METHOD_2 ( TYPE_4 . create ( ) , VAR_1 ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 git , TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_3 VAR_2 = VAR_3 . create ( db , VAR_1 , git , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) ) ; return VAR_2 . METHOD_2 ( STRING_1 ) . getChangeId ( ) ; } 
public void close ( ) { } 
public boolean METHOD_1 ( ) { return METHOD_1 ( VAR_1 . Collections < java.lang.String > METHOD_3 ( ) ) ; } 
public TYPE_1 METHOD_1 ( final com.google.gerrit.reviewdb.client.Change . Id id ) throws TYPE_3 , com.google.gwtorm.server.OrmException { return TYPE_5 . METHOD_2 ( METHOD_3 ( id ) , db . get ( ) ) ; } 
TYPE_1 create ( TYPE_2 project ) ; 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { try { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( STRING_2 , e ) ; } } return null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_2 ( true ) ; super . METHOD_1 ( VAR_1 ) ; } 
private TYPE_1 auth ( final TYPE_2 . Account account ) { if ( account != null ) { return new TYPE_1 ( account . getId ( ) , null , false ) ; } return null ; } 
public synchronized TYPE_1 METHOD_1 ( ) { TYPE_2 . METHOD_2 ( ( ( VAR_1 ) == null ) , STRING_1 ) ; if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( VAR_3 ) ; } return VAR_2 ; } 
public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; } 
private boolean METHOD_1 ( ) { return new TYPE_3 ( ) . METHOD_3 ( config ) . isEmpty ( ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . ProjectConfig cfg = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( cfg , VAR_3 , VAR_4 , STRING_1 ) . METHOD_5 ( true ) ; METHOD_6 ( project , cfg ) ; } 
private java.lang.String METHOD_1 ( ) { return VAR_2 . METHOD_2 ( VAR_3 , null , VAR_4 ) ; } 
void METHOD_1 ( TYPE_1 e ) { METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; cm . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { if ( ( token ) == null ) { return null ; } return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
private static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > commit ( java.lang.String id ) { return new TYPE_3 ( id ) ; } 
public org.eclipse.jgit.revwalk.RevCommit commit ( TYPE_1 update ) throws java.io.IOException { try ( TYPE_2 VAR_1 = METHOD_1 ( update ) ) { VAR_1 . METHOD_2 ( update . METHOD_3 ( ) ) ; return VAR_1 . commit ( ) ; } } 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id id ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 , STRING_1 , VAR_3 ) ; assertThat ( VAR_4 ) . METHOD_4 ( ) ; } 
private TYPE_1 < java.lang.String > METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { return VAR_2 . get ( VAR_1 ) . METHOD_3 ( TYPE_2 : : METHOD_1 ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( java.lang.String changeId ) { java.lang.String VAR_1 = getChange ( ) . getKey ( ) . get ( ) ; TYPE_1 . METHOD_2 ( VAR_1 . equals ( changeId ) , STRING_1 , VAR_1 , changeId ) ; this . changeId = changeId ; } 
public boolean METHOD_1 ( ) { return false ; } 
private static org.eclipse.jgit.lib.ObjectId METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { return VAR_1 . insert ( new TYPE_2 ( ) ) ; } 
private static TYPE_1 METHOD_1 ( java.lang.String project , int id , java.lang.String VAR_1 ) { return TYPE_2 . change ( project , id ) . view ( VAR_1 ) ; } 
TYPE_1 create ( TYPE_2 . NameKey VAR_1 , org.eclipse.jgit.revwalk.RevCommit VAR_2 , org.eclipse.jgit.revwalk.RevWalk rw , org.eclipse.jgit.lib.Repository db , com.google.gerrit.reviewdb.client.Project VAR_3 , java.util.List < com.google.gerrit.reviewdb.client.Change > VAR_4 , java.util.Map < com.google.gerrit.reviewdb.client.Change . Id , TYPE_3 > VAR_5 , com.google.gerrit.reviewdb.client.Account account ) ; 
public TYPE_1 . Result METHOD_1 ( TYPE_2 edit , java.lang.String file ) throws TYPE_3 , TYPE_4 , java.io.IOException { return METHOD_2 ( VAR_1 , edit , file , null , null ) ; } 
protected void METHOD_1 ( ) { factory ( VAR_2 . Factory class ) ; factory ( VAR_3 . Factory class ) ; } 
private static java.util.Set < java.lang.String > METHOD_1 ( TYPE_1 . ChangeInfo change ) { return new TYPE_2 ( change . METHOD_2 ( ) ) ; } 
public java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( change . get ( ) . branch ) ; } 
public java.lang.String METHOD_1 ( java.lang.String name ) { java.lang.String VAR_1 = VAR_2 . get ( name ) ; if ( VAR_1 != null ) { return VAR_1 ; } return super . METHOD_1 ( name ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { return TYPE_2 . METHOD_2 ( METHOD_3 ( VAR_1 ) , TYPE_3 . METHOD_4 ( VAR_1 ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String ... VAR_2 ) throws java.lang.Exception { METHOD_1 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_2 u = user . get ( ) ; if ( u . METHOD_2 ( ) ) { return u . METHOD_3 ( ) . METHOD_1 ( ) ; } return VAR_1 . get ( ) ; } 
public java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > refs , org.eclipse.jgit.lib.Repository repo , TYPE_2 VAR_1 ) throws TYPE_3 { return VAR_2 . create ( this ) . METHOD_1 ( refs , repo , VAR_1 ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( final java.lang.String VAR_1 ) { revision = VAR_1 ; } 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( METHOD_2 ( db ) ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public static java.lang.String METHOD_1 ( final TYPE_1 . Id VAR_1 ) { return STRING_1 + ( VAR_1 . toString ( ) ) ; } 
public static java.lang.String METHOD_1 ( final com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { final byte [ ] VAR_1 = new byte [ INT_1 ] ; TYPE_3 . METHOD_2 ( VAR_1 , db ) ; return TYPE_4 . METHOD_3 ( VAR_1 ) ; } 
public static void METHOD_1 ( java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . revision ( project , id , STRING_1 ) . id ( VAR_1 ) . get ( VAR_2 ) ; } 
public static TYPE_1 query ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_1 ( TYPE_3 , TYPE_4 , TYPE_5 ) ; } 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( METHOD_2 ( db ) ) && ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . get ( getAccountId ( ) ) ; } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( TYPE_2 in ) throws TYPE_3 { try { return VAR_1 . apply ( revision , in ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new TYPE_3 ( STRING_1 , e ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 update = METHOD_2 ( METHOD_3 ( ) , VAR_1 ) ; update . METHOD_4 ( STRING_1 ) ; com.google.common.truth.Truth.assertThat ( update . commit ( ) ) . METHOD_5 ( ) ; } 
public boolean apply ( com.google.gerrit.reviewdb.client . PatchSetApproval input ) { return user . equals ( input . getAccountId ( ) ) ; } 
TYPE_2 . Account METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_3 . OrmException ; 
protected abstract boolean METHOD_1 ( ) ; 
private static boolean METHOD_1 ( TYPE_1 id ) { return STRING_2 . METHOD_2 ( id . get ( ) ) ; } 
public TYPE_1 base ( com.google.gerrit.reviewdb.client.PatchSet.Id id ) { if ( id != null ) { VAR_1 . METHOD_1 ( STRING_1 , id . get ( ) ) ; } return this ; } 
void METHOD_1 ( TYPE_1 b ) { VAR_1 = b ; VAR_2 . METHOD_2 ( row , VAR_3 , VAR_4 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( ) . inject ( this ) ; } 
public void onSuccess ( java.lang.String result ) { TYPE_1 . display ( TYPE_2 . METHOD_1 ( project , psId ) ) ; } 
public java.lang.String getName ( ) { return METHOD_1 ( ) . getName ( ) ; } 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( VAR_1 ) ) || ( user . METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; display ( ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 ) ; TYPE_1 . METHOD_2 ( STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_4 ) ; } 
public void onSuccess ( TYPE_1 result ) { VAR_1 . display ( result , VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { new TYPE_1 ( ) ; new TYPE_2 ( ) ; new TYPE_3 ( ) ; new TYPE_5 ( ) ; } 
TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String token ) throws TYPE_2 { return METHOD_1 ( VAR_1 , new TYPE_3 < java.lang.String , TYPE_4 > ( ) , token ) ; } 
protected static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_2 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; } 
public void METHOD_1 ( final java.lang.String VAR_1 ) { project = VAR_1 ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) ; factory ( VAR_2 class ) ; bind ( VAR_4 . Factory class ) ; } 
public void onSuccess ( TYPE_1 . ChangeInfo result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( project , id ) ) ; METHOD_2 ( ) ; } 
protected static java.lang.String METHOD_1 ( TYPE_1 user ) { if ( user . METHOD_2 ( ) ) { return user . getAccountId ( ) . toString ( ) ; } return user . toString ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; com.google.common.truth.Truth.assertThat ( in ) . isEqualTo ( METHOD_3 ( in ) ) ; } 
public void onSuccess ( ) { TYPE_1 . display ( token , ( edit ? new TYPE_2 ( VAR_1 , id , line ) : new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ) ; } 
private void METHOD_1 ( java.lang.String msg ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( VAR_2 ) + msg ) ) ; } } 
public static TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id ) { return TYPE_2 . METHOD_2 ( VAR_1 , id . get ( ) ) ; } 
TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
public void run ( ) { for ( ; ; ) { try { if ( VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) { return ; } } catch ( TYPE_1 e ) { } VAR_4 . METHOD_2 ( ) ; } } 
public void METHOD_1 ( ) { file . METHOD_2 ( true ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( null ) ; VAR_1 . METHOD_3 ( CHAR_1 ) ; org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_4 ( STRING_2 ) ) ; } 
public int METHOD_1 ( ) { return 1 ; } 
protected boolean METHOD_1 ( ) { return VAR_1 ; } 
protected com.google.gerrit.reviewdb.client.PatchSet METHOD_1 ( TYPE_1 ctx ) throws java.lang.Exception { return null ; } 
public void METHOD_1 ( final java.lang.String message ) { } 
protected void submit ( java.lang.String changeId , TYPE_1 input ) throws java.lang.Exception { submit ( changeId , input , null , null ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; } } 
public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( change , VAR_3 ) ; return null ; } 
private static java.lang.String METHOD_1 ( org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.io.IOException { try ( TYPE_1 VAR_2 = repo . METHOD_2 ( ) ) { return VAR_2 . METHOD_3 ( VAR_1 ) . name ( ) ; } } 
public void METHOD_1 ( TYPE_1 in ) throws TYPE_2 { try { VAR_1 . apply ( revision , in ) ; } catch ( com.google.gwtorm.server.OrmException | TYPE_3 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public TYPE_1 < TYPE_2 . ReviewDb > get ( ) { return VAR_1 . get ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = ( TYPE_2 . METHOD_2 ( VAR_1 ) ) - 1 ; i >= 0 ; i -- ) { VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , i ) ) ; } } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account account , com.google.gerrit.reviewdb.client.PatchSet patchSet , java.lang.String VAR_1 , com.google.gerrit.reviewdb.server.ReviewDb db ) { } 
void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_3 , true ) ; input . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; input . METHOD_5 ( true ) ; } } 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.Change change = cd . change ( ) ; return ( change != null ) && ( ( change . METHOD_2 ( ) . METHOD_3 ( getValue ( ) ) ) > 0 ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( METHOD_2 ( STRING_1 ) . name ) . isEqualTo ( VAR_1 ) ; } 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.Change change = cd . change ( ) ; return ( change != null ) && ( ( change . METHOD_2 ( ) . METHOD_3 ( getValue ( ) ) ) < 0 ) ; } 
public int METHOD_1 ( ) { return 0 ; } 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > get ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 ) { return new TYPE_3 ( view ( VAR_1 , VAR_2 , STRING_1 ) ) ; } 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return ( ( METHOD_2 ( ) ) || ( METHOD_3 ( db , cd ) ) ) || ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
public void info ( java.lang.String msg ) { VAR_1 . METHOD_2 ( msg ) ; VAR_1 . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { if ( VAR_1 == ( VAR_2 . METHOD_2 ( ) ) ) { return VAR_3 . METHOD_1 ( ) ; } return VAR_4 . METHOD_1 ( ) ; } 
public void onSuccess ( final TYPE_1 result ) { VAR_1 . display ( result , VAR_2 ) ; if ( VAR_3 ) { VAR_3 = false ; METHOD_1 ( ) ; } } 
void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; } 
public void onSuccess ( final TYPE_1 result ) { if ( ( ++ ( VAR_1 ) ) == ( VAR_2 . size ( ) ) ) { METHOD_1 ( submit ) ; } } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( final TYPE_2 < TYPE_1 > ... VAR_1 ) { if ( ( VAR_1 . length ) == 1 ) { return VAR_1 [ 0 ] ; } return new TYPE_3 ( VAR_1 ) ; } 
void METHOD_1 ( int row ) { if ( row > 2 ) { METHOD_2 ( ( row - 1 ) , row ) ; } } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; install ( new TYPE_1 ( ) ) ; install ( new TYPE_1 ( ) ) ; } 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( ( change . getStatus ( ) ) == ( VAR_1 ) ) { change . METHOD_1 ( VAR_2 ) ; TYPE_2 . METHOD_2 ( change ) ; } return change ; } 
public void METHOD_1 ( TYPE_1 req , TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( req , VAR_1 ) ; if ( ( query ) == null ) { query = VAR_2 ; VAR_2 . METHOD_2 ( ) ; } else { query = VAR_2 ; } } 
private void METHOD_1 ( ) throws java.io.IOException { VAR_1 = TYPE_1 . METHOD_2 ( projectName , METHOD_3 ( VAR_2 ) , this ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_3 ( in , 0 , VAR_2 ) ) . isEqualTo ( query ( in ) ) ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , TYPE_1 a , TYPE_2 < com.google.gerrit.reviewdb.client.PatchSet > ps , TYPE_3 VAR_1 ) { METHOD_1 ( db , a , ps , null , false , null , VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String project , int changeId , java.lang.String VAR_1 ) { return TYPE_2 . change ( project , changeId ) . view ( STRING_1 ) . id ( VAR_1 ) ; } 
public TYPE_1 create ( com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , id , null ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 in = new TYPE_1 ( ) ; in . branch = STRING_1 ; VAR_1 = STRING_2 ; in . project = project . get ( ) ; return in ; } 
java.lang.String METHOD_1 ( int size ) throws TYPE_1 ; 
public java.lang.String METHOD_1 ( java.lang.String project ) { return STRING_1 + project ; } 
public final native void METHOD_1 ( java.lang.String token ) ; 
public void METHOD_1 ( int index ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( index ) ; } } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) . METHOD_3 ( true ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String message ) { this . message = message ; return this ; } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_4 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( event . METHOD_3 ( ) ) , event . METHOD_5 ( ) ) ; } 
boolean contains ( int VAR_1 ) ; 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 ; } 
public TYPE_1 diff ( ) throws TYPE_2 { try { return VAR_1 . apply ( file ) . value ( ) ; } catch ( java.io.IOException | TYPE_3 | com.google.gwtorm.server.OrmException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
protected void METHOD_1 ( java.lang.String msg , TYPE_1 t ) { if ( ( ( VAR_1 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) { VAR_2 . METHOD_3 ( ( ( VAR_1 ) + msg ) , t ) ; } } 
public void onSuccess ( TYPE_1 . ChangeInfo info ) { info . METHOD_1 ( ) ; METHOD_2 ( info , base ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { } 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , TYPE_1 VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_1 ( STRING_1 , project , VAR_1 , revision , VAR_2 , null , 0 ) ; } 
protected void METHOD_1 ( final TYPE_1 result ) { projects . display ( result . METHOD_4 ( ) ) ; projects . METHOD_5 ( ) ; } 
public void close ( ) { VAR_1 . close ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( TYPE_2 . METHOD_3 ( VAR_2 ) ) || ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ; } 
public void onSuccess ( TYPE_1 result ) { if ( VAR_1 . METHOD_1 ( ) ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( VAR_1 . getProject ( ) , changeId ) ) ; } } 
public void METHOD_1 ( TYPE_1 ctx ) { if ( ( change ) != null ) { VAR_1 . METHOD_2 ( change , ctx . METHOD_5 ( ) , VAR_2 , ctx . METHOD_6 ( ) ) ; } } 
TYPE_2 < TYPE_3 , ? > delete ( TYPE_3 VAR_1 , TYPE_4 id ) throws TYPE_5 ; 
public void onSuccess ( TYPE_1 . ChangeInfo info ) { info . METHOD_1 ( ) ; METHOD_3 ( info , base ) ; } 
private void METHOD_1 ( ) { new TYPE_1 ( ) ; new TYPE_2 ( ) ; new TYPE_3 ( ) ; new TYPE_5 ( ) ; new TYPE_4 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( TYPE_3 . of ( new TYPE_4 ( VAR_1 ) , new TYPE_5 ( VAR_1 , VAR_2 ) , new TYPE_6 ( VAR_1 , VAR_2 ) ) ) ; } 
void METHOD_1 ( TYPE_1 e ) { if ( TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ) { TYPE_4 . delete ( project , changeId , VAR_1 ) ; } } 
public boolean METHOD_1 ( TYPE_1 ctx ) throws java.lang.Exception { return false ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; org.junit.Assert.assertEquals ( query ( METHOD_2 ( STRING_2 ) ) , VAR_1 . METHOD_3 ( in ) ) ; } 
static boolean METHOD_1 ( TYPE_1 args , org.eclipse.jgit.lib.Repository repo , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { return ( ! ( VAR_3 . METHOD_2 ( VAR_4 , VAR_2 ) ) ) && ( VAR_3 . METHOD_3 ( VAR_4 , repo , VAR_1 , VAR_2 ) ) ; } 
public static TYPE_1 create ( TYPE_1 . Key key , com.google.gerrit.reviewdb.client.Account.Id VAR_1 , java.lang.String email , java.lang.String VAR_2 ) { return TYPE_1 . create ( key , VAR_1 , TYPE_3 . METHOD_1 ( email ) , TYPE_3 . METHOD_1 ( VAR_2 ) , null ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { final java.lang.String VAR_2 = VAR_1 . getMessage ( ) ; if ( VAR_2 != null ) { return VAR_2 . METHOD_2 ( ) ; } } return STRING_1 ; } 
protected final void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( this . VAR_2 ) + msg ) , args ) ; } } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; } 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > VAR_1 = cd . METHOD_2 ( ) ; return ! ( VAR_1 . isEmpty ( ) ) ? VAR_1 . contains ( id ) : id . equals ( VAR_2 ) ; } 
public static TYPE_1 info ( ) { return VAR_1 ; } 
private void METHOD_1 ( TYPE_1 id ) { synchronized ( VAR_1 ) { if ( ( VAR_1 . get ( id ) . get ( ) ) == 0 ) { VAR_1 . METHOD_2 ( id ) ; } } } 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { TYPE_4 VAR_2 = new TYPE_4 ( VAR_1 . METHOD_2 ( TYPE_5 . getName ( ) ) . METHOD_3 ( ) ) ; return VAR_3 . get ( ) . get ( VAR_2 ) ; } 
public void put ( final TYPE_1 VAR_1 , final TYPE_2 c ) { VAR_2 . put ( VAR_1 , c ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 . Key key ) throws java.io.IOException { return TYPE_2 . METHOD_2 ( key ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 admin = VAR_1 . create ( STRING_1 , STRING_2 ) ; VAR_2 = new TYPE_2 ( server , admin ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( db , notes ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; METHOD_2 ( ) . to ( VAR_2 class ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_1 , VAR_3 ) ; } 
public final TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_1 ) ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) throws java.io.IOException { if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; index ( VAR_1 ) ; } } 
public void assertEquals ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( ) ; org.junit.Assert.assertEquals ( VAR_3 . toString ( ) , VAR_1 ) ; } 
void METHOD_1 ( java.lang.String changeId ) throws TYPE_1 ; 
public void onSuccess ( final java.util.List < TYPE_1 . ChangeInfo > result ) { VAR_1 . display ( result ) ; table . METHOD_1 ( true ) ; } 
TYPE_1 . Account get ( TYPE_2 . Id key ) throws TYPE_3 . OrmException ; 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_2 ( null ) ) . isEmpty ( ) ; } 
private void METHOD_1 ( TYPE_1 . Result r , java.lang.String message ) throws java.lang.Exception { METHOD_1 ( r , message , false , false ) ; } 
public boolean METHOD_1 ( ) { return false ; } 
private void METHOD_1 ( java.lang.String path ) { METHOD_2 ( ) ; TYPE_1 . display ( TYPE_2 . METHOD_3 ( project , new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , revision . METHOD_4 ( ) ) , path ) ) ; } 
public boolean apply ( TYPE_1 input ) { return ( input . change ) != null ; } 
private PatchSet . Id METHOD_1 ( TYPE_1 c ) throws com.google.gwtorm.server.OrmException { return getChange ( c ) . change ( ) . currentPatchSetId ( ) ; } 
public TYPE_1 METHOD_1 ( final TYPE_2 key ) throws java.lang.Exception { final org.eclipse.jgit.lib.Repository repo = VAR_1 . METHOD_2 ( VAR_2 ) ; try { return METHOD_3 ( key , repo ) ; } finally { repo . close ( ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_2 account ) { return VAR_1 . METHOD_2 ( VAR_2 , new TYPE_3 ( server , account ) , VAR_3 . create ( TYPE_4 . of ( db ) , account . getId ( ) ) ) ; } 
void METHOD_1 ( ) { this . VAR_1 = false ; METHOD_2 ( ) ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( new TYPE_1 ( ) ) ; bind ( VAR_3 class ) . METHOD_3 ( VAR_4 ) ; bind ( VAR_5 class ) ; } 
protected final TYPE_1 METHOD_1 ( TYPE_2 type ) throws com.google.gwtorm.server.OrmException { TYPE_3 VAR_1 = new TYPE_3 ( args , branch . getParentKey ( ) , VAR_2 , VAR_3 ) ; return VAR_1 . METHOD_1 ( type ) ; } 
private void METHOD_1 ( final TYPE_1 m ) { m . METHOD_2 ( ) ; m . METHOD_3 ( STRING_1 , STRING_2 ) ; m . METHOD_4 ( ) ; m . METHOD_5 ( VAR_1 ) ; m . METHOD_7 ( ) ; } 
public TYPE_1 apply ( TYPE_2 rsrc ) throws TYPE_3 , TYPE_4 , java.io.IOException { return VAR_1 . METHOD_1 ( rsrc . METHOD_2 ( ) , rsrc . METHOD_3 ( ) , rsrc . METHOD_4 ( ) , null ) ; } 
public void METHOD_1 ( ) { assert ( VAR_1 ) != null ; assert ( VAR_2 ) != null ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } 
private java.lang.String METHOD_1 ( ) { if ( getName ( ) . METHOD_3 ( TYPE_1 ) ) { return getName ( ) . METHOD_4 ( TYPE_1 . length ( ) ) ; } return getName ( ) ; } 
TYPE_1 create ( TYPE_2 change , com.google.gerrit.reviewdb.client.Account.Id id ) ; 
private void METHOD_1 ( TYPE_1 cm , int VAR_1 , int VAR_2 ) { METHOD_2 ( cm , VAR_3 . METHOD_3 ( ) , ( VAR_1 - 1 ) , VAR_2 , VAR_4 , null ) ; } 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id changeId ) { return TYPE_1 . METHOD_2 ( VAR_2 , changeId . get ( ) ) . toString ( ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_2 ) ) ; } 
TYPE_1 sql ( ) ; 
public TYPE_1 . Result METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change . Id changeId ) throws com.google.gwtorm.server.OrmException , java.io.IOException { return METHOD_2 ( db , changeId , false ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Account.Id ( INT_1 ) , STRING_1 , VAR_1 , this ) ; } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( args , change ) . METHOD_2 ( ) ; } 
public final native void METHOD_1 ( java.lang.String path ) ; 
public TYPE_1 METHOD_1 ( ) { if ( VAR_1 ) { return null ; } return VAR_4 . get ( getProject ( ) . METHOD_2 ( VAR_3 ) ) ; } 
public TYPE_1 create ( TYPE_2 VAR_1 , com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , TYPE_3 . of ( VAR_1 ) , null , id , null ) ; } 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( project , id ) ) ; } 
public boolean METHOD_1 ( TYPE_1 r ) { return METHOD_1 ( r . METHOD_2 ( ) , r . getChange ( ) . METHOD_3 ( ) ) ; } 
public com.google.gerrit.server.query.change.ChangeData apply ( TYPE_1 notes ) { return VAR_1 . create ( db , notes ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 class ) ; VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_4 ( STRING_2 ) . get ( ) ; } 
public int METHOD_1 ( ) { return 1 ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . query ( query , VAR_3 , METHOD_3 ( ) , VAR_1 , VAR_2 ) ; } 
public TYPE_1 change ( TYPE_2 notes ) { return new TYPE_3 ( message , VAR_1 ) ; } 
public void METHOD_1 ( ) { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 class ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > not ( final TYPE_2 < TYPE_1 > VAR_1 ) { if ( VAR_1 instanceof TYPE_3 ) { return VAR_1 . METHOD_1 ( 0 ) ; } return new TYPE_3 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = METHOD_2 ( ) . METHOD_3 ( STRING_1 , null , STRING_2 ) ; if ( VAR_1 == null ) { throw new TYPE_1 ( STRING_3 ) ; } return VAR_1 ; } 
private static long METHOD_1 ( long VAR_1 ) { return VAR_1 + ( VAR_1 / 2 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { try { VAR_1 . apply ( revision , new TYPE_2 ( ) ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new TYPE_1 ( STRING_1 , e ) ; } } 
private TYPE_1 getKey ( org.eclipse.jgit.lib.ObjectId VAR_1 , org.eclipse.jgit.lib.ObjectId VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
private com.google.gerrit.reviewdb.server.ReviewDb db ( ) { if ( ( db ) != null ) { return db . get ( ) ; } else if ( ( cd ) != null ) { return cd . db ( ) ; } else { return null ; } } 
public void METHOD_1 ( ) { VAR_2 = VAR_3 ; } 
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 < TYPE_1 < TYPE_2 > > METHOD_3 ( new TYPE_3 . Factory ( ) , new TYPE_4 . Factory ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
private static void METHOD_1 ( TYPE_1 ps , int ... VAR_2 ) throws TYPE_2 { for ( int id : VAR_2 ) { TYPE_3 . METHOD_2 ( ps ) . METHOD_3 ( 1 , id ) ; } } 
protected void METHOD_1 ( final java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.String label ) { METHOD_2 ( getAccountId ( ) , label ) ; } 
public boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( revision ) ; } 
TYPE_1 create ( com.google.gerrit.server.query.change.ChangeData cd ) ; 
public final native void id ( java.lang.String i ) ; 
TYPE_1 METHOD_1 ( org.eclipse.jgit.revwalk.RevWalk walk ) { this . walk = walk ; return this ; } 
private void METHOD_1 ( java.lang.String msg ) { METHOD_1 ( msg , null ) ; } 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey name , java.lang.String id ) { return ( ( ( VAR_2 ) + ( name . get ( ) ) ) + ( VAR_3 ) ) + id ; } 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { if ( ( user . METHOD_2 ( ) ) && ( user . getAccountId ( ) . equals ( id ) ) ) { return true ; } return METHOD_3 ( ) ; } 
public TYPE_1 < ? > index ( com.google.gerrit.server.query.change.ChangeData cd ) { return TYPE_2 . METHOD_1 ( null ) ; } 
private static void METHOD_1 ( final java.lang.StringBuilder r , final TYPE_1 . PatchSet ps ) { TYPE_2 . METHOD_2 ( r , STRING_1 , ps . getRevision ( ) . get ( ) ) ; } 
public void METHOD_1 ( ) throws java.io.IOException , TYPE_1 { TYPE_2 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 != null ) { while ( ( VAR_1 . METHOD_3 ( ) ) != ( - 1 ) ) { } } } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 , java.io.IOException , TYPE_3 { TYPE_4 VAR_3 = METHOD_2 ( VAR_1 ) ; TYPE_1 key = VAR_3 . METHOD_1 ( VAR_2 ) ; commit ( VAR_3 ) ; return key ; } 
protected void submit ( java.lang.String changeId ) throws java.lang.Exception { submit ( changeId , new TYPE_1 ( ) , null , null , true ) ; } 
public java.lang.String getChangeId ( ) { return changeId ; } 
void METHOD_1 ( TYPE_2 . NameKey branch ) ; 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id psId ) { TYPE_1 . METHOD_2 ( ( ( psId == null ) || ( psId . getParentKey ( ) . equals ( ctl . getId ( ) ) ) ) ) ; this . psId = psId ; } 
public void onSuccess ( ) { TYPE_1 . display ( token , METHOD_1 ( ) ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; } 
private boolean error ( java.lang.String msg , TYPE_1 t ) { METHOD_1 ( msg ) ; METHOD_2 ( t ) ; return false ; } 
private TYPE_1 . ProjectConfig METHOD_1 ( boolean VAR_1 ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , VAR_1 , true , true , true ) ; } 
public boolean contains ( int b , int e , char c ) { for ( ; b < e ; b ++ ) { if ( ( METHOD_1 ( b ) ) == c ) { return true ; } } return false ; } 
public void index ( com.google.gerrit.reviewdb.client.Change change ) throws java.io.IOException { index ( new com.google.gerrit.server.query.change.ChangeData ( change ) ) ; } 
public static com.google.gerrit.reviewdb.client.Account.Id METHOD_1 ( java.lang.String name ) { TYPE_2 id = TYPE_3 . METHOD_1 ( name ) ; return id != null ? new com.google.gerrit.reviewdb.client.Account.Id ( id ) : null ; } 
TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.PatchSet patch ) ; 
protected boolean METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { return false ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_2 ( VAR_1 ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 , STRING_3 ) ) ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 key , java.lang.String VAR_1 ) { TYPE_1 < TYPE_2 > result = key . METHOD_3 ( VAR_1 ) ; return result != null ? result : java.util.Collections . METHOD_4 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( VAR_1 . getMessage ( ) ) . METHOD_3 ( ) ; METHOD_4 ( true ) ; } 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ; } 
static com.google.gerrit.server.query.change.ChangeData METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id ) { return new com.google.gerrit.server.query.change.ChangeData ( null , null , null , null , null , null , null , null , id ) ; } 
public int METHOD_1 ( final com.google.gerrit.reviewdb.client . PatchSetApproval a , final com.google.gerrit.reviewdb.client . PatchSetApproval b ) { return a . METHOD_2 ( ) . METHOD_3 ( b . METHOD_2 ( ) ) ; } 
public final void METHOD_1 ( int line , TYPE_1 VAR_1 , java.lang.String VAR_2 ) { METHOD_2 ( line , VAR_1 . value ( ) , VAR_2 ) ; } 
public void METHOD_1 ( java.lang.String id ) { this . id = TYPE_1 . METHOD_2 ( id ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 n ) { TYPE_1 VAR_1 = new TYPE_1 ( n , TYPE_3 . METHOD_3 ( n ) ) ; n . METHOD_4 ( VAR_2 ) ; return VAR_1 ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 , java.io.IOException { TYPE_1 rsrc = METHOD_2 ( id . get ( ) , true ) ; if ( rsrc == null ) { throw new TYPE_4 ( id ) ; } return rsrc ; } 
private static boolean METHOD_1 ( TYPE_1 cfg ) { return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , true ) ; } 
public void METHOD_1 ( final java.lang.StringBuilder VAR_1 , final TYPE_2 VAR_2 ) { VAR_1 . append ( STRING_1 ) ; } 
protected void METHOD_1 ( final TYPE_1 . ChangeInfo c ) { TYPE_4 . display ( TYPE_3 . METHOD_3 ( c ) , new TYPE_5 ( c ) ) ; } 
public TYPE_1 . ChangeInfo format ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return format ( cd , VAR_1 < com.google.gerrit.reviewdb.client.PatchSet.Id > METHOD_1 ( ) , true ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_4 ( VAR_2 , VAR_3 , STRING_1 ) . METHOD_5 ( true ) ; } 
private void METHOD_1 ( TYPE_1 . ProjectConfig cfg ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . create ( project ) ; try { cfg . commit ( VAR_1 ) ; } finally { VAR_1 . close ( ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { group ( STRING_1 , STRING_2 ) ; group ( STRING_3 , STRING_2 ) ; METHOD_2 ( STRING_4 ) ; METHOD_2 ( STRING_5 ) ; com.google.common.truth.Truth.assertThat ( METHOD_3 ( STRING_4 ) . name ) . isEqualTo ( STRING_1 ) ; } 
public java.lang.String METHOD_1 ( java.lang.String name ) { return VAR_1 . get ( VAR_2 , VAR_3 , name ) ; } 
protected abstract java.lang.String METHOD_1 ( java.lang.String VAR_1 ) ; 
static java.lang.String get ( final java.lang.String name ) { return VAR_1 < TYPE_1 > METHOD_2 ( ) . METHOD_1 ( name ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 . changeId , VAR_4 , VAR_5 ) ; assertThat ( VAR_6 ) . METHOD_4 ( ) ; } 
public void error ( TYPE_1 error ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < > ( INT_1 ) ; } VAR_1 . add ( error ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 ( new TYPE_3 ( new TYPE_4 ( VAR_1 ) ) ) ; servlet = TYPE_5 . create ( repo ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 , com.google.gerrit.reviewdb.client.Project project ) { if ( VAR_1 != null ) { return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( project . METHOD_2 ( ) ) ; } return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 class ) ; project ( ) . METHOD_3 ( ) . get ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = STRING_1 ; com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( name ) . get ( ) . name ) ; } 
void METHOD_1 ( TYPE_1 e ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( VAR_2 , project , branch , topic , key ) ; } VAR_1 . METHOD_2 ( ) ; } 
protected void METHOD_1 ( ) { install ( new TYPE_1 ( VAR_2 ) { protected void METHOD_1 ( ) { rpc ( VAR_3 class ) ; } } ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; } 
protected static TYPE_1 METHOD_1 ( ) { return TYPE_1 . create ( TYPE_2 : : METHOD_2 , TYPE_2 : : METHOD_3 , VAR_1 ) ; } 
public void submit ( ) throws TYPE_1 { TYPE_2 in = new TYPE_2 ( ) ; submit ( in ) ; } 
private static TYPE_1 [ ] METHOD_1 ( TYPE_2 err ) { if ( ( err . METHOD_3 ( ) . length ) == 0 ) { err . METHOD_2 ( ) ; } return err . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return VAR_2 ; } return VAR_3 . create ( change . METHOD_2 ( ) ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { return null ; } return TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ? VAR_1 : null ; } 
public TYPE_1 METHOD_1 ( ) { this . VAR_1 = true ; return this ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , TYPE_1 update , TYPE_2 VAR_1 ) throws com.google.gwtorm.server.OrmException { update . METHOD_2 ( VAR_1 . getMessage ( ) ) ; db . METHOD_3 ( ) . insert ( java.util.Collections.singleton ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 . get ( new TYPE_1 . NameKey ( STRING_1 ) ) . METHOD_2 ( ) ; METHOD_4 ( ) ; METHOD_3 ( ) ; } 
public TYPE_1 < TYPE_2 . ChangeInfo > apply ( TYPE_3 rsrc ) throws TYPE_4 , com.google.gwtorm.server.OrmException { return TYPE_1 . METHOD_2 ( METHOD_3 ( ) . format ( rsrc ) ) ; } 
public void METHOD_1 ( java.lang.String project ) throws TYPE_1 { METHOD_4 ( java.lang.String.format ( STRING_1 , VAR_4 , project ) ) ; } 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( e . getValue ( ) ) ; if ( ( view ) != null ) { view . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_2 ( ) ) ; } } 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( project , changeId ) ) ; } 
protected void METHOD_1 ( final java.lang.String name ) { TYPE_2 . METHOD_3 ( ) . METHOD_1 ( name ) ; } 
public java.lang.String toString ( ) { return METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Result c = METHOD_2 ( ) ; java.util.Map < java.lang.String , TYPE_2 > VAR_1 = METHOD_3 ( c , null ) ; com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_4 ( 0 ) ; } 
protected java.lang.String METHOD_1 ( final java.lang.String VAR_1 ) { return ( STRING_1 + VAR_1 ) + STRING_2 ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 = ( VAR_1 ) ? new TYPE_1 ( this ) : null ; } 
public Project . NameKey METHOD_1 ( ) { return VAR_1 ; } 
private void METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 , java.io.IOException { VAR_1 . METHOD_2 ( STRING_1 , 1 ) ; api . getProject ( VAR_2 . get ( ) ) ; TYPE_4 . METHOD_3 ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( ) throws java.io.IOException { return TYPE_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( project ) , METHOD_3 ( VAR_1 ) , TYPE_1 . METHOD_4 ( VAR_1 , VAR_2 . log ) ) ; } 
java.util.Set < TYPE_1 > METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.io.IOException { METHOD_2 ( ) ; try ( org.eclipse.jgit.lib.Repository repo = VAR_2 . METHOD_3 ( VAR_3 ) ) { return METHOD_1 ( repo , VAR_1 ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 { TYPE_4 . METHOD_1 ( TYPE_5 . of ( this ) , VAR_1 , VAR_2 , false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; new TYPE_2 ( ) . inject ( this ) ; VAR_1 . METHOD_4 ( ) ; } 
private TYPE_1 auth ( com.google.gerrit.reviewdb.client.Account.Id account ) { if ( account != null ) { return new TYPE_1 ( account , null , false ) ; } return null ; } 
void METHOD_1 ( TYPE_1 event , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ; 
public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( null , null ) { private static final long VAR_1 = INT_1 ; public void METHOD_2 ( TYPE_2 req , TYPE_3 . HttpServletResponse res ) { res . METHOD_3 ( VAR_2 ) ; } } ; } 
abstract TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) . id ( STRING_1 ) . get ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( project , STRING_1 ) ; com.google.common.truth.Truth.assertThat ( VAR_2 . get ( ( ( STRING_2 + ( project . get ( ) ) ) + STRING_3 ) ) . METHOD_3 ( ) ) . isEqualTo ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String changeId = METHOD_2 ( ) . getChangeId ( ) ; METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( ( ( STRING_2 + changeId ) + STRING_3 ) ) . METHOD_5 ( ) ; } 
public java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > METHOD_1 ( ) { final java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > VAR_1 = new TYPE_1 ( this . VAR_1 ) ; VAR_1 . METHOD_2 ( reviewers ) ; return java.util.Collections . METHOD_3 ( VAR_1 ) ; } 
protected void METHOD_1 ( java.lang.String id ) throws java.lang.Exception { VAR_1 . changes ( ) . id ( id ) . revision ( STRING_1 ) . METHOD_2 ( TYPE_1 . METHOD_1 ( ) ) ; } 
public Project . NameKey METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { cfg . METHOD_1 ( ) ; } 
com.google.gerrit.reviewdb.client.Project getProject ( ) { return project ; } 
private TYPE_1 query ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > p , int VAR_1 ) throws TYPE_3 { return new TYPE_1 ( null , index , p , VAR_1 ) ; } 
private static TYPE_1 create ( com.google.gerrit.reviewdb.client.PatchSet.Id psId , com.google.gerrit.reviewdb.client.Account.Id VAR_1 , java.lang.String label ) { return new TYPE_2 ( psId , VAR_1 , label ) ; } 
protected void METHOD_1 ( TYPE_1 req , TYPE_2 . HttpServletResponse res , java.lang.String VAR_1 , java.util.Map < java.lang.String , ? > VAR_2 ) throws java.io.IOException { VAR_3 . METHOD_2 ( req , res , VAR_1 , METHOD_3 ( req , res , VAR_2 ) ) ; } 
protected org.eclipse.jgit.revwalk.RevCommit METHOD_1 ( ) throws java.io.IOException { try ( org.eclipse.jgit.lib.Repository repo = VAR_1 . METHOD_2 ( project ) ) { return METHOD_3 ( repo , STRING_1 ) ; } } 
protected boolean METHOD_1 ( final TYPE_1 project , final TYPE_2 . Id VAR_1 , final short VAR_2 ) { return TYPE_3 . METHOD_1 ( METHOD_2 ( ) , project , VAR_1 , VAR_2 ) ; } 
public java.util.Set < java.lang.String > METHOD_1 ( ) throws java.io.IOException { if ( METHOD_2 ( ) ) { return METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; } return java.util.Collections . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { db = new TYPE_1 ( VAR_1 class ) ; VAR_2 = new java.util.ArrayList < > ( ) ; } 
private void display ( final TYPE_1 result ) { table . METHOD_1 ( result . METHOD_2 ( ) ) ; VAR_1 . display ( result . METHOD_3 ( ) ) ; table . METHOD_4 ( true ) ; } 
public static void edit ( java.lang.String project , int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . edit ( project , id ) . get ( VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_2 . Status VAR_3 ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , true , false , VAR_3 ) ; } 
void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_1 event ) throws com.google.gwtorm.server.OrmException ; 
public void METHOD_1 ( final TYPE_1 . Id id , final TYPE_2 < TYPE_3 > VAR_1 ) { VAR_2 . create ( id ) . to ( VAR_1 ) ; } 
public void METHOD_1 ( java.util.List < TYPE_1 > in ) throws TYPE_2 { try { VAR_1 . apply ( account , in ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return new TYPE_2 ( ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . not ( TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ) . toString ( ) ) ; } 
public void METHOD_1 ( ) { org.junit.Assert . METHOD_2 ( ( ( create ( ) ) instanceof TYPE_1 ) ) ; } 
private synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_2 . METHOD_2 ( ( ( VAR_2 ) != null ) , STRING_1 ) ; VAR_1 = new TYPE_1 ( VAR_2 , config ) ; } return VAR_1 ; } 
public java.lang.String METHOD_1 ( ) throws com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( VAR_1 ) == null ) { if ( ! ( METHOD_2 ( ) ) ) { return null ; } } return VAR_1 ; } 
TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 , TYPE_4 > VAR_1 ) { return new TYPE_5 ( VAR_1 , METHOD_2 ( ) . METHOD_3 ( STRING_1 ) , METHOD_4 ( ) . METHOD_5 ( ) , false ) ; } 
public static void METHOD_1 ( java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , TYPE_1 VAR_1 , TYPE_2 < TYPE_1 > VAR_2 ) { TYPE_3 . revision ( project , id , STRING_1 ) . put ( VAR_1 , VAR_2 ) ; } 
public boolean METHOD_1 ( final com.google.gerrit.server.query.change.ChangeData VAR_1 ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.Change change = VAR_1 . change ( VAR_2 ) ; return ( change != null ) && ( ( change . METHOD_2 ( ) . METHOD_3 ( ) ) <= ( VAR_3 ) ) ; } 
private boolean METHOD_1 ( ) { return getProject ( ) . METHOD_2 ( ) . equals ( VAR_1 ) ; } 
public TYPE_1 get ( ) { return create ( ) ; } 
static void METHOD_1 ( TYPE_1 . HttpServletResponse res ) { res . METHOD_2 ( STRING_1 , STRING_2 ) ; res . METHOD_2 ( STRING_3 , STRING_4 ) ; res . METHOD_2 ( STRING_5 , STRING_6 ) ; res . METHOD_2 ( STRING_7 , STRING_8 ) ; } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) . run ( ) ; } 
public final void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String name ) { METHOD_1 ( VAR_1 . name ( ) , TYPE_3 . METHOD_2 ( VAR_2 ) , name ) ; } 
static TYPE_1 create ( ) { return ( ( TYPE_1 ) ( METHOD_1 ( ) ) ) ; } 
public org.eclipse.jgit.lib.ObjectId METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( METHOD_3 ( STRING_1 ) ) . isEmpty ( ) ; } 
public void METHOD_1 ( final short VAR_1 ) { value = VAR_1 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) . METHOD_3 ( ) ; if ( VAR_2 . METHOD_4 ( ) ) { return ; } VAR_1 . METHOD_5 ( new TYPE_3 ( VAR_1 , info ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( name ) != null ) { METHOD_2 ( TYPE_1 . project ( name . get ( ) ) ) ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . to ( VAR_1 class ) ; METHOD_2 ( ) . to ( VAR_3 class ) ; } 
private void reject ( final TYPE_1 . ReceiveCommand cmd ) { reject ( cmd , STRING_1 ) ; } 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return ( VAR_1 ) != null ? submit ( new TYPE_2 ( new com.google.gerrit.server.query.change.ChangeData ( change ) , true ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String project , int id , int VAR_1 ) { return TYPE_2 . change ( project , id ) . view ( STRING_1 ) . id ( VAR_1 ) ; } 
public TYPE_1 get ( ) { final TYPE_2 . Id id = VAR_1 . get ( ) . getAccountId ( ) ; return id != null ? VAR_2 . create ( id ) : VAR_3 ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { com.google.gerrit.reviewdb.client.Account.Id id = new com.google.gerrit.reviewdb.client.Account.Id ( VAR_1 . METHOD_2 ( ) . get ( TYPE_3 . getName ( ) ) . METHOD_3 ( ) ) ; return VAR_2 . get ( ) . get ( id ) ; } 
protected void METHOD_1 ( TYPE_1 result ) { VAR_2 . display ( result . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . create ( this ) ; } return VAR_1 ; } 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { change . METHOD_1 ( VAR_1 . get ( VAR_2 , ps . getId ( ) ) ) ; return change ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ) != null ; } 
public static TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( VAR_2 < java.lang.String , TYPE_2 > of ( ) , VAR_1 , false ) ; } 
private boolean METHOD_1 ( java.util.Set < java.lang.String > VAR_1 ) { return ( user . METHOD_2 ( ) ) || ( METHOD_3 ( VAR_2 , VAR_1 ) ) ; } 
protected static long METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) { return c . METHOD_2 ( ) . METHOD_3 ( ) ; } 
public java.lang.String METHOD_1 ( ) { return name . METHOD_1 ( ) ; } 
public static TYPE_1 < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 < > ( VAR_1 , ( in ) - > in ) ; } 
public boolean METHOD_1 ( ) { return getProject ( ) . METHOD_2 ( ) . equals ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) throws TYPE_2 , java.io.IOException { return METHOD_1 ( id , true ) ; } 
private org.eclipse.jgit.lib.ObjectId METHOD_1 ( TYPE_1 me , TYPE_2 VAR_1 , org.eclipse.jgit.revwalk.RevCommit revision , org.eclipse.jgit.lib.ObjectId VAR_3 ) throws java.io.IOException { return METHOD_1 ( me , VAR_1 , revision , VAR_3 , revision . METHOD_2 ( ) ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 m ) { return new TYPE_1 ( m , VAR_3 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; } 
void METHOD_1 ( boolean VAR_1 ) { httpd = false ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == VAR_3 ) { super . METHOD_1 ( VAR_1 ) ; } } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project ) throws java.io.IOException { try ( org.eclipse.jgit.lib.Repository git = VAR_1 . METHOD_2 ( project ) ) { return new TYPE_1 ( TYPE_2 . METHOD_3 ( git . METHOD_4 ( ) ) ) ; } } 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id changeId , com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { java.lang.StringBuilder r = TYPE_1 . METHOD_2 ( VAR_2 , changeId . get ( ) ) ; r . append ( VAR_1 . get ( ) ) ; return r . toString ( ) ; } 
public static void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 , STRING_3 ) . METHOD_3 ( STRING_4 ) . METHOD_3 ( STRING_5 ) . get ( TYPE_4 . METHOD_5 ( VAR_1 ) ) ; } 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( org.eclipse.jgit.lib.ObjectId id ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . commit ( id ) ) ; } 
public Project . NameKey apply ( TYPE_1 in ) { return new com.google.gerrit.reviewdb.client.Project.NameKey ( in . name ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_1 . METHOD_2 ( ( STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) ) ) ; } 
private static TYPE_1 value ( final TYPE_2 VAR_1 , final int value , final java.lang.String name ) { return new TYPE_1 ( new TYPE_1 . Id ( VAR_1 . getId ( ) , ( ( short ) ( value ) ) ) , name ) ; } 
private void log ( final int VAR_1 ) { if ( VAR_2 . METHOD_1 ( false , true ) ) { log . METHOD_2 ( cmd , VAR_1 ) ; } } 
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } 
public java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { walk . METHOD_2 ( ) ; } 
TYPE_1 METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = config . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( VAR_1 ) ; return VAR_1 ; } 
private java.lang.String METHOD_1 ( TYPE_1 git , TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_3 VAR_2 = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) ) ; return VAR_2 . METHOD_2 ( git , STRING_1 ) . getChangeId ( ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String VAR_2 ) { VAR_1 . append ( METHOD_2 ( VAR_2 ) ) ; } 
public TYPE_1 < TYPE_2 , com.google.gerrit.reviewdb.client.Account.Id > reviewers ( ) throws com.google.gwtorm.server.OrmException { return TYPE_3 . METHOD_1 ( approvals ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; } 
public boolean METHOD_1 ( ) { return METHOD_2 ( ) ; } 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id change ) ; 
public final native java.lang.String path ( ) ; 
public static TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { boolean VAR_1 = ( VAR_2 . METHOD_2 ( VAR_3 class ) ) == null ; METHOD_3 ( config ( VAR_2 ) , VAR_1 ) ; base . METHOD_1 ( ) ; METHOD_4 ( ) ; } 
void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_2 < com.google.gerrit.reviewdb.client.Account > VAR_3 ) ; 
public void METHOD_1 ( boolean VAR_1 ) throws java.io.IOException { TYPE_1 . METHOD_2 ( VAR_2 , name , schema . METHOD_3 ( ) , VAR_1 ) ; } 
protected final < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( ) { return new TYPE_2 ( ) ; } 
protected < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 , java.lang.String path ) throws java.lang.Exception { return METHOD_1 ( VAR_1 , path , null ) ; } 
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; } 
private java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.lang.String path ) throws java.lang.Exception { return METHOD_2 ( new TYPE_2 < java.util.Map < java.lang.String , TYPE_1 > > ( ) { } , path ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( project , STRING_1 , VAR_1 , true , VAR_2 ) ; } 
public static com.google.gerrit.reviewdb.client.Account.Id METHOD_1 ( java.lang.String name ) { TYPE_2 id = TYPE_3 . METHOD_2 ( name ) ; return id != null ? new com.google.gerrit.reviewdb.client.Account.Id ( id ) : null ; } 
protected void METHOD_1 ( ) { bind ( VAR_4 class ) . in ( VAR_3 ) ; } 
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . add ( table ) ; table . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_1 ( ) ; } 
private void METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , TYPE_1 e ) { METHOD_2 ( project , e ) ; throw e ; } 
public static TYPE_1 METHOD_1 ( java.lang.String project , int id ) { return TYPE_2 . METHOD_2 ( project , id , STRING_1 ) ; } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change . Id changeId , TYPE_2 user ) throws TYPE_3 , com.google.gwtorm.server.OrmException { TYPE_1 ctl = VAR_1 . METHOD_2 ( changeId , user ) ; return METHOD_1 ( db , ctl . getChange ( ) , user ) ; } 
private void index ( com.google.gerrit.reviewdb.client . AccountGroup group ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) . METHOD_2 ( group ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( project , STRING_1 , VAR_1 , true ) ; METHOD_3 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { if ( ( -- ( VAR_1 ) ) == 0 ) { VAR_2 . METHOD_2 ( false ) ; } } 
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 in = new TYPE_2 ( ) ; in . name = STRING_2 ; VAR_1 . projects ( ) . name ( STRING_1 ) . create ( in ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String lang ) { return new TYPE_2 ( lang ) ; } 
int METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { return ( ( int ) ( TYPE_2 . METHOD_3 ( VAR_2 ) ) ) ; } return - 1 ; } 
public TYPE_1 get ( ) { return factory . create ( VAR_1 , METHOD_1 ( ) ) ; } 
protected static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_2 ) && ( VAR_1 . getMessage ( ) . METHOD_2 ( VAR_2 ) ) ; } 
private final native void METHOD_1 ( int VAR_1 ) ; 
public TYPE_1 create ( com.google.gerrit.reviewdb.client.Account.Id id ) { return create ( ( ( TYPE_2 ) ( null ) ) , id ) ; } 
public void message ( java.lang.String message ) { } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . submit ( VAR_1 ) ; } 
private void display ( final TYPE_1 result ) { table . METHOD_1 ( result . METHOD_2 ( ) ) ; VAR_1 . display ( result . METHOD_3 ( ) ) ; table . METHOD_4 ( ) ; } 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( project , psId ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( ctl . METHOD_1 ( ) ) ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return new TYPE_1 ( null , VAR_1 , VAR_2 ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) . to ( VAR_2 class ) ; if ( VAR_3 ) { METHOD_2 ( ) . to ( VAR_4 class ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_2 . Status VAR_3 ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , false , false , VAR_3 ) ; } 
public int METHOD_1 ( ) { return ( VAR_1 . length ( ) ) * 2 ; } 
void METHOD_1 ( final java.lang.String url ) { this . VAR_1 = url ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; in . name = name ( STRING_1 ) ; VAR_1 . projects ( ) . name ( STRING_2 ) . create ( in ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String ... VAR_2 ) throws java.lang.Exception { TYPE_2 result = new TYPE_3 ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; org.junit.Assert.assertEquals ( TYPE_4 . METHOD_4 ( VAR_2 ) , result . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; } 
public void onSuccess ( java.lang.String result ) { TYPE_1 . display ( TYPE_2 . METHOD_1 ( psId ) ) ; } 
TYPE_1 METHOD_1 ( ) { return ( ) - > METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ; } 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_1 ) { return TYPE_1 . METHOD_1 ( revision , VAR_1 , 0 ) ; } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.PatchSet patch ) { return TYPE_3 . METHOD_2 ( this , db , change , patch , VAR_1 , VAR_2 , VAR_3 ) ; } 
private void METHOD_1 ( TYPE_1 c ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( c ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { if ( VAR_1 ) { METHOD_2 ( ) ; } } 
private TYPE_1 METHOD_1 ( org.eclipse.jgit.revwalk.RevWalk rw , org.eclipse.jgit.lib.ObjectId id ) throws java.io.IOException , TYPE_2 , TYPE_3 { return ( ( TYPE_1 ) ( rw . parseCommit ( id ) ) ) ; } 
private static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData , ? > ... VAR_1 ) { return new TYPE_1 ( false , TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } 
public static boolean METHOD_1 ( TYPE_1 cfg ) { return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , true ) ; } 
public void METHOD_1 ( ) { final long id = INT_1 ; final TYPE_1 p = new TYPE_1 ( id ) ; org.junit.Assert.assertEquals ( ( ( int ) ( id ) ) , p . METHOD_2 ( ) ) ; } 
private static TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 VAR_1 , int line , java.lang.String message ) { TYPE_1 c = new TYPE_1 ( ) ; return TYPE_3 . METHOD_2 ( c , path , VAR_1 , null , line , message ) ; } 
TYPE_1 create ( java.util.Set < TYPE_3 > VAR_2 ) ; 
public void METHOD_1 ( ) { final TYPE_1 b = new TYPE_1 ( ) ; org.junit.Assert . METHOD_2 ( b , b . append ( FLOAT_1 ) ) ; org.junit.Assert.assertEquals ( STRING_1 , b . METHOD_3 ( ) ) ; } 
public java.lang.String getRefName ( ) { return null ; } 
public TYPE_1 METHOD_1 ( TYPE_2 input ) throws TYPE_3 { try { return VAR_1 . apply ( change , input ) . value ( ) ; } catch ( TYPE_4 | java.io.IOException | com.google.gwtorm.server.OrmException e ) { throw new TYPE_3 ( STRING_1 , e ) ; } } 
private org.eclipse.jgit.lib.Repository METHOD_1 ( final com.google.gerrit.reviewdb.client.Project.NameKey name ) { try { return VAR_1 . METHOD_1 ( name ) ; } catch ( java.io.IOException err ) { VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err ) ; return null ; } } 
public final native void METHOD_1 ( ) ; 
protected void METHOD_1 ( ) { rpc ( VAR_1 class ) ; install ( new TYPE_2 ( ) ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return null ; } return VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_2 ( STRING_2 ) . METHOD_2 ( STRING_3 ) . METHOD_2 ( STRING_4 ) ; } 
public static TYPE_1 revision ( java.lang.String project , int id , java.lang.String revision ) { return TYPE_2 . change ( project , id ) . view ( STRING_1 ) . id ( revision ) ; } 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) { c . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; } 
void METHOD_1 ( final java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; } 
TYPE_1 create ( TYPE_2 . NameKey name ) ; 
public void METHOD_1 ( final java.lang.StringBuilder VAR_1 , final java.lang.String VAR_2 ) { VAR_1 . append ( METHOD_2 ( VAR_2 ) ) ; } 
public void onSuccess ( TYPE_1 result ) { if ( VAR_1 . METHOD_1 ( ) ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( changeId ) ) ; } } 
void METHOD_3 ( final java.lang.String query ) { VAR_1 . METHOD_3 ( query ) ; } 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change c ) { if ( c . getStatus ( ) . METHOD_1 ( ) ) { c . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( c ) ; } return c ; } 
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . delete ( ) ; repo = TYPE_2 . METHOD_3 ( VAR_1 ) ; } 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { change . METHOD_1 ( ) ; return change ; } 
public void run ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 { return VAR_3 . METHOD_2 ( VAR_4 , args . repo , VAR_1 , VAR_2 ) ; } 
public static void METHOD_1 ( java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , TYPE_1 < TYPE_2 < TYPE_3 < TYPE_4 > > > VAR_1 ) { TYPE_5 . revision ( project , id , STRING_1 ) . get ( VAR_1 ) ; } 
public void onSuccess ( TYPE_1 . ChangeInfo c ) { project . METHOD_1 ( c . project ( ) ) ; TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( path ) ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 r ) throws java.lang.Exception { return METHOD_1 ( r , VAR_2 . String class ) ; } 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; } 
private static TYPE_1 METHOD_1 ( java.lang.String project , int id , java.lang.String path ) { return TYPE_2 . edit ( project , id ) . id ( path ) ; } 
TYPE_1 METHOD_1 ( org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.revwalk.RevWalk rw , com.google.gerrit.server.query.change.ChangeData cd , com.google.gerrit.reviewdb.client.PatchSet patch ) ; 
public TYPE_1 < com.google.gerrit.reviewdb.client.PatchSet.Id , com.google.gerrit.reviewdb.client . PatchSetApproval > approvals ( ) throws com.google.gwtorm.server.OrmException { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( db , notes ( ) ) ; } return VAR_1 ; } 
public void close ( ) { if ( ( walk ( ) ) != null ) { walk ( ) . close ( ) ; } } 
private TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } 
private boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) . METHOD_3 ( VAR_3 ) ; } 
TYPE_1 create ( java.lang.String url , java.lang.String user , java.lang.String VAR_1 ) { if ( url == null ) { return VAR_2 ; } return new TYPE_2 ( url , user , VAR_1 ) ; } 
public void run ( ) { VAR_4 . close ( ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) ; } 
protected void METHOD_1 ( int row , int VAR_1 ) { super . METHOD_1 ( row , VAR_1 ) ; if ( ( VAR_1 == 1 ) || ( VAR_1 == INT_1 ) ) { METHOD_2 ( row , VAR_1 ) ; } } 
boolean METHOD_1 ( ) { VAR_1 = true ; ( VAR_2 ) ++ ; return ( ( VAR_3 ) == 0 ) || ( ( VAR_2 ) <= ( VAR_3 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( VAR_2 . METHOD_2 ( null ) ) . isEqualTo ( VAR_1 ) ; } 
public TYPE_1 . ChangeInfo METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { try { return VAR_2 . apply ( change , VAR_1 ) . value ( ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new TYPE_3 ( STRING_1 , e ) ; } } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . get ( ) ) == null ) { return super . METHOD_1 ( ) ; } return VAR_1 . get ( ) ; } 
private boolean METHOD_1 ( ) { return TYPE_1 . info ( ) . auth ( ) . METHOD_3 ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( ) throws TYPE_2 { TYPE_3 VAR_1 = new TYPE_3 ( ) ; return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public abstract void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 out ) ; 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( project ) ; com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( STRING_2 ) . get ( ) . METHOD_3 ( ) ) . isEqualTo ( STRING_1 ) ; } 
private static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_2 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 ) ; } 
private static int METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.lang.String p ) { int r = java.util.Collections . METHOD_2 ( VAR_1 , p ) ; return r < 0 ? - ( r + 1 ) : r ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Result change = METHOD_2 ( ) ; submit ( change . getChangeId ( ) ) ; com.google.common.truth.Truth.assertThat ( METHOD_3 ( ) . getId ( ) ) . isEqualTo ( change . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( java.lang.String msg ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( VAR_2 ) + msg ) ) ; } } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( final TYPE_3 result ) { VAR_1 . display ( result ) ; } } ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { install ( VAR_2 ) ; } 
public void METHOD_1 ( final TYPE_1 . Key VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } } 
void METHOD_1 ( ) { VAR_1 = false ; METHOD_2 ( ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) throws java.lang.Exception { return project ( ) . METHOD_1 ( ) . get ( ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String type , com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 , TYPE_1 . Key id ) { return TYPE_2 . METHOD_1 ( type , VAR_1 , id . getParentKey ( ) , id . get ( ) , null , 0 ) ; } 
public TYPE_1 get ( ) { final TYPE_2 . Id id = VAR_1 . getAccountId ( ) ; return id != null ? factory . create ( id ) : VAR_2 ; } 
void METHOD_1 ( TYPE_1 cmd ) { VAR_1 = cmd ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > p ) { try { return new TYPE_1 ( p , index ) ; } catch ( TYPE_3 e ) { throw new TYPE_4 ( ( ( STRING_1 + p ) + STRING_2 ) , e ) ; } } 
void METHOD_1 ( TYPE_1 . NameKey projectName , TYPE_2 . Id VAR_2 , java.lang.String VAR_3 , short VAR_4 , short VAR_5 , TYPE_3 < TYPE_4 > VAR_6 ) ; 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 . NameKey name ) throws TYPE_4 . OrmException ; 
public boolean get ( org.eclipse.jgit.lib.ObjectId commit , TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , TYPE_3 . NameKey VAR_4 , org.eclipse.jgit.lib.Repository repo ) { throw new TYPE_4 ( STRING_1 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { format = VAR_1 ; return this ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; } 
public com.google.gerrit.reviewdb.client.Change getChange ( ) { return update . getChange ( ) ; } 
private void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { synchronized ( VAR_1 ) { if ( ( VAR_1 . get ( id ) . get ( ) ) == 0 ) { VAR_1 . METHOD_2 ( id ) ; } } } 
public java.lang.String apply ( com.google.gerrit.reviewdb.client.Project.NameKey in ) { return in . get ( ) ; } 
public java.lang.String METHOD_1 ( ) throws java.lang.Exception { if ( VAR_1 . equals ( VAR_2 ) ) return METHOD_2 ( ) ; return METHOD_3 ( ) ; } 
public final void delete ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . OrmException { METHOD_1 ( VAR_1 ) ; } 
public synchronized int getStatus ( ) { return status ; } 
private void display ( final TYPE_1 result ) { projects . display ( result ) ; projects . METHOD_1 ( ) ; } 
public void display ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { display ( null , null , null , false , VAR_1 , VAR_2 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) throws com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( VAR_1 ) == null ) { if ( ! ( METHOD_2 ( ) ) ) { return null ; } } return VAR_1 ; } 
public TYPE_1 create ( TYPE_2 < com.google.gerrit.reviewdb.server.ReviewDb > db , com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_1 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , null , db , id ) ; } 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet ps , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { if ( ( ps . METHOD_2 ( ) ) && ( ! ( METHOD_3 ( db , null ) ) ) ) { return false ; } return METHOD_4 ( db ) ; } 
public void METHOD_1 ( ) { VAR_1 = VAR_2 . create ( admin ) ; } 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return ( METHOD_2 ( ) ) || ( METHOD_3 ( db , cd ) ) ; } 
TYPE_1 METHOD_1 ( TYPE_1 e ) { VAR_1 . add ( e ) ; return this ; } 
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( VAR_2 , true ) ; } } 
public final native boolean METHOD_1 ( ) ; 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { com.google.common.truth.Truth.assertThat ( VAR_2 ) . contains ( VAR_1 ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 git , TYPE_2 i , java.lang.String msg ) throws java.io.IOException , TYPE_3 { return TYPE_4 . METHOD_1 ( git , i , msg , true , false ) ; } 
protected TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( args , c ) . METHOD_2 ( ) ; } 
private void METHOD_1 ( final TYPE_1 req , final TYPE_2 . HttpServletResponse rsp ) throws java.io.IOException { METHOD_2 ( false , req , rsp ) ; } 
void message ( java.lang.String message ) ; 
private static java.util.List < TYPE_1 > METHOD_3 ( TYPE_1 [ ] VAR_1 ) { return java.util.Collections . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 { return new TYPE_1 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) { return VAR_1 . METHOD_2 ( ( VAR_2 + ( VAR_3 ) ) ) . METHOD_3 ( false ) ; } 
public java.util.List < TYPE_1 > apply ( TYPE_2 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_4 VAR_3 : extensions ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; } return VAR_2 ; } 
private java.util.Set < TYPE_1 > METHOD_1 ( ) { TYPE_2 p = VAR_1 ; if ( ! ( p . METHOD_2 ( ) ) ) { p = p . METHOD_3 ( ) ; VAR_1 = p ; } return VAR_2 ; } 
public static java.lang.String METHOD_1 ( final TYPE_1 . Id c ) { return STRING_1 + ( c . toString ( ) ) ; } 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( org.eclipse.jgit.lib.ObjectId id ) throws com.google.gwtorm.server.OrmException { return METHOD_1 ( id . name ( ) ) ; } 
public void METHOD_1 ( ) { install ( VAR_1 . METHOD_2 ( VAR_2 class ) ) ; install ( new TYPE_1 ( ) ) ; install ( new TYPE_2 ( ) ) ; } 
PatchSet . Id METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_1 == ( VAR_2 ) ) && ( ( base ) != null ) ) && ( ( base . get ( ) ) >= 0 ) ) { return base ; } return revision ; } 
public void METHOD_1 ( ) { com.google.common.truth.Truth.assertThat ( new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_2 ) ) . isEqualTo ( STRING_1 ) ; } 
TYPE_1 . Branch get ( TYPE_2 . Id id ) throws TYPE_3 . OrmException ; 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) ; METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_4 class ) ; METHOD_4 ( STRING_2 ) . METHOD_5 ( VAR_5 class ) ; } 
int size ( ) { return ( VAR_2 ) != null ? VAR_2 . size ( ) : 0 ; } 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id ) { return ( VAR_1 ) != null ? submit ( new TYPE_2 ( id , true ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return change . METHOD_2 ( ) ? VAR_2 : VAR_3 ; } 
public int METHOD_1 ( ) { return ( VAR_1 ) > 0 ? ( VAR_1 ) * INT_1 : VAR_1 ; } 
void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; if ( VAR_1 ) { commit ( ) ; } } 
public TYPE_1 . NameKey METHOD_1 ( ) { return projectName ; } 
public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_1 result = VAR_1 . create ( changeId , java.util.Collections.singleton ( VAR_2 ) ) . METHOD_1 ( ) ; result . METHOD_2 ( VAR_3 . create ( changeId ) . METHOD_1 ( ) ) ; return result ; } 
public boolean METHOD_1 ( java.lang.String project , java.lang.String branch ) { return true ; } 
private TYPE_1 . ProjectConfig METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( true , true , true ) ; } 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > put ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 ) { return new TYPE_3 ( view ( VAR_1 , VAR_2 , STRING_1 ) ) ; } 
private static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < java.lang.String > p , final java.util.List < TYPE_1 < java.lang.String > > VAR_2 ) { org.junit.Assert.assertEquals ( ( VAR_1 + STRING_1 ) , VAR_2 , p . METHOD_2 ( ) ) ; } 
private void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } } } 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( project , changeId ) ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . Status VAR_2 ) throws java.lang.Exception { return METHOD_2 ( VAR_1 , null , true , false , VAR_2 ) ; } 
java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? key . METHOD_1 ( ) : null ; } 
public int METHOD_1 ( ) { return INT_1 + ( id ) ; } 
public TYPE_1 create ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id changeId ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.Change change = db . changes ( ) . get ( changeId ) ; return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , project , change ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( TYPE_1 . apply ( STRING_1 ) ) . isEqualTo ( STRING_1 ) ; } 
public void run ( ) { } 
public final boolean METHOD_1 ( ) { switch ( getStatus ( ) ) { case VAR_1 : case VAR_3 : return true ; default : return false ; } } 
private TYPE_1 < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in ) throws TYPE_2 { return VAR_1 . METHOD_1 ( in , 0 ) ; } 
private static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 e ) { TYPE_2 . METHOD_2 ( VAR_1 , e ) ; com.google.common.truth.Truth.assertThat ( e . METHOD_3 ( ) ) . isEqualTo ( VAR_2 ) ; } 
public static TYPE_1 edit ( java.lang.String project , int id ) { return TYPE_2 . change ( project , id ) . view ( STRING_1 ) ; } 
public void METHOD_1 ( ) { final java.lang.String VAR_1 = STRING_1 ; final TYPE_1 p = new TYPE_1 ( VAR_1 ) ; org.junit.Assert.assertEquals ( VAR_1 . METHOD_2 ( ) , p . METHOD_2 ( ) ) ; } 
protected void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( ( ( VAR_1 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) { VAR_2 . METHOD_3 ( ( ( VAR_1 ) + msg ) , args ) ; } } 
public java.lang.String METHOD_1 ( ) { return VAR_1 ; } 
protected void submit ( java.lang.String changeId ) throws java.lang.Exception { submit ( changeId , VAR_1 , null ) ; } 
public TYPE_1 . gwtorm [ ] METHOD_1 ( ) { return new TYPE_2 . Key < ? > [ ] { projectName } ; } 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change c ) { if ( c . getStatus ( ) . METHOD_1 ( ) ) { c . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( c ) ; } return c ; } 
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_2 = new TYPE_1 ( ) ; VAR_1 = new java.util.ArrayList < > ( ) ; METHOD_3 ( VAR_2 , VAR_2 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { db = new TYPE_1 < TYPE_2 > ( VAR_1 class ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; } 
void METHOD_1 ( TYPE_1 e ) { TYPE_2 . METHOD_2 ( project , changeId , VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) { return name ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 . C ) ; } 
protected TYPE_1 . ReviewDb METHOD_1 ( ) throws TYPE_2 { try { return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; } catch ( TYPE_4 . OrmException e ) { throw new TYPE_2 ( 1 , STRING_1 , e ) ; } } 
public org.eclipse.jgit.revwalk.RevCommit METHOD_2 ( ) { return commit ; } 
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( ) ; } 
public abstract java.lang.String METHOD_1 ( java.lang.String url , java.lang.String ref ) ; 
public TYPE_1 < java.lang.String > apply ( TYPE_2 rsrc , TYPE_3 input ) throws TYPE_4 , com.google.gwtorm.server.OrmException , java.io.IOException , TYPE_5 { return VAR_1 . METHOD_1 ( rsrc . METHOD_2 ( ) . getAccountId ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . display ( METHOD_2 ( ) ) ; } 
public static boolean METHOD_1 ( java.lang.String id ) { return TYPE_1 . equals ( id ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String project , int id ) { return TYPE_2 . edit ( project , id ) . METHOD_2 ( STRING_1 ) ; } 
private static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . METHOD_2 ( VAR_2 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { db = TYPE_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = ( VAR_1 != null ) ? VAR_1 . get ( ) : null ; } 
public static java.util.List < java.lang.String > METHOD_1 ( TYPE_2 ... VAR_1 ) { return TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > delete ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 ) { return new TYPE_3 ( view ( VAR_1 , VAR_2 , STRING_1 ) ) ; } 
void METHOD_1 ( TYPE_1 e ) { METHOD_3 ( ) ; VAR_1 . METHOD_2 ( this , VAR_2 ) ; cm . METHOD_4 ( ) ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { key = new TYPE_1 . Key ( ( STRING_1 + id ) ) ; VAR_1 = new TYPE_2 ( id , 0 , false , null , 0 , null , null ) ; } 
public final native void METHOD_1 ( int line ) ; 
public void METHOD_1 ( ) { factory ( VAR_1 class ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String project , int changeId ) { return TYPE_2 . change ( project , changeId ) . view ( STRING_1 ) ; } 
private static int METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.lang.String p ) { int r = java.util.Collections . METHOD_2 ( VAR_1 , p ) ; return r < 0 ? - ( r + 1 ) : r ; } 
public boolean apply ( TYPE_1 input ) { return ( input . getChange ( ) ) != null ; } 
private TYPE_1 query ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > p , int VAR_1 ) throws TYPE_3 { return new TYPE_1 ( index , p , VAR_1 ) ; } 
public static void METHOD_1 ( java.lang.String project , int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . METHOD_2 ( project , id , STRING_1 ) . get ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = result . METHOD_2 ( ref ) ; com.google.common.truth.Truth.assertThat ( message ( VAR_2 ) . METHOD_3 ( ) ) . contains ( VAR_1 . METHOD_3 ( ) ) ; } 
TYPE_1 . AccountGroup get ( TYPE_2 . Id id ) throws TYPE_3 . OrmException ; 
public static < TYPE_1 > com.google.gerrit.extensions.registration.DynamicSet < TYPE_1 > METHOD_1 ( ) { return new com.google.gerrit.extensions.registration.DynamicSet ( VAR_1 . Collections < TYPE_2 < TYPE_3 < TYPE_1 > > > METHOD_1 ( ) ) ; } 
private TYPE_1 file ( java.lang.String path ) { return new TYPE_1 ( TYPE_2 . METHOD_1 ( ) . METHOD_2 ( view ) . METHOD_3 ( path ) . METHOD_4 ( ) , config , path ) ; } 
public TYPE_1 get ( TYPE_2 key , com.google.gerrit.reviewdb.client.Project.NameKey project ) throws TYPE_3 ; 
public boolean METHOD_1 ( final java.lang.String VAR_1 ) throws java.io.IOException { return METHOD_2 ( ( ) - > client ( ) . METHOD_4 ( VAR_1 ) ) ; } 
public boolean METHOD_1 ( ) { return false ; } 
private void METHOD_1 ( TYPE_1 . Change c , TYPE_2 msg ) { METHOD_2 ( c , msg , true , true ) ; } 
protected java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String type ) { return TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_1 , type ) ; } 
public boolean METHOD_1 ( ) { return METHOD_2 ( Project : : METHOD_3 ) ; } 
public void onSuccess ( TYPE_1 < TYPE_2 < TYPE_3 > > result ) { METHOD_2 ( result ) ; VAR_1 . METHOD_3 ( true ) ; } 
public boolean METHOD_1 ( ) { return true ; } 
public void onSuccess ( TYPE_1 . ChangeInfo info ) { info . METHOD_1 ( ) ; METHOD_2 ( info , METHOD_3 ( info ) ) ; METHOD_4 ( info , base ) ; } 
synchronized TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) { TYPE_1 ctx = new TYPE_1 ( this , VAR_1 , VAR_2 ) ; VAR_4 . add ( VAR_3 ) ; return ctx ; } 
static TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , TYPE_2 VAR_1 ) { java.lang.String ref = VAR_1 . getName ( ) ; if ( TYPE_2 . METHOD_2 ( ref ) ) { return TYPE_1 . METHOD_1 ( project , ref , VAR_1 ) ; } else { return null ; } } 
private native void METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > r , TYPE_2 VAR_1 ) ; 
public void METHOD_1 ( TYPE_1 a , TYPE_2 < TYPE_3 . PatchSet > ps ) { METHOD_1 ( a , ps , null , false , null ) ; } 
public TYPE_1 notes ( ) throws com.google.gwtorm.server.OrmException { if ( ( notes ) == null ) { notes = VAR_1 . create ( db , change ( ) ) ; } return notes ; } 
public void onSuccess ( ) { TYPE_1 . display ( token , new TYPE_2 ( project , base , TYPE_3 . patchSet ( id . getParentKey ( ) ) , id . get ( ) , VAR_1 , line ) ) ; } 
public static void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 . projects ( ) . METHOD_2 ( STRING_2 , STRING_3 ) . METHOD_3 ( STRING_4 ) . METHOD_3 ( STRING_5 ) . get ( TYPE_4 . METHOD_4 ( VAR_1 ) ) ; } 
private TYPE_1 METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return VAR_1 ; } 
public void METHOD_1 ( ) throws java.io.IOException { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( repo ) ; VAR_2 = new TYPE_2 ( null , null , null , null ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . patch ( METHOD_2 ( ) , base , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . Change change = METHOD_2 ( ) . METHOD_4 ( ) ; METHOD_5 ( METHOD_6 ( VAR_2 , VAR_3 ) ) ; METHOD_7 ( change ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( METHOD_2 ( ) ) . isEmpty ( ) ; com.google.common.truth.Truth.assertThat ( METHOD_3 ( ) ) . isEmpty ( ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return null ; } 
public static void METHOD_1 ( TYPE_1 group , TYPE_2 < TYPE_3 > VAR_1 ) { new TYPE_4 ( STRING_2 ) . id ( group . get ( ) ) . view ( STRING_2 ) . get ( VAR_1 ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 < TYPE_3 . ReceiveCommand > commands ) { METHOD_2 ( commands ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet patchSet ) throws TYPE_2 { return VAR_1 . changes ( ) . id ( patchSet . getId ( ) . getParentKey ( ) . get ( ) ) ; } 
java.lang.String patchSet ( ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < com.google.gerrit.reviewdb.client.PatchSet > ps , java.util.Map < com.google.gerrit.reviewdb.client.PatchSet.Id , TYPE_2 < com.google.gerrit.reviewdb.client . PatchSetApproval > > approvals ) { METHOD_1 ( VAR_1 , ps , approvals , false , null ) ; } 
public TYPE_1 METHOD_1 ( final com.google.gerrit.reviewdb.client.Account account ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . name = account . METHOD_2 ( ) ; VAR_1 . email = account . METHOD_3 ( ) ; return VAR_1 ; } 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change c ) { if ( VAR_1 != null ) { c . METHOD_1 ( VAR_1 ) ; } TYPE_1 . METHOD_2 ( c ) ; return c ; } 
public void METHOD_1 ( java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void run ( ) { VAR_2 . close ( ) ; } 
protected void submit ( java.lang.String changeId , TYPE_1 input ) throws java.lang.Exception { submit ( changeId , input , null , null , true ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 user ) { return VAR_1 . create ( user ) ; } 
private java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.lang.String changeId ) throws java.lang.Exception { return VAR_1 . changes ( ) . id ( changeId ) . get ( VAR_2 ) . VAR_3 ; } 
TYPE_1 < TYPE_2 > get ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) ; 
TYPE_1 METHOD_1 ( ) { return ( ) - > VAR_1 . METHOD_2 ( ( ! ( VAR_1 . getValue ( ) ) ) , true ) ; } 
private void METHOD_1 ( java.lang.String ref , int VAR_1 , java.lang.String ... VAR_2 ) throws java.lang.Exception { TYPE_1 d = METHOD_2 ( ref , VAR_1 ) ; com.google.common.truth.Truth.assertThat ( log ( d ) ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 ) ) . METHOD_5 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; super . METHOD_1 ( VAR_1 ) ; } 
protected void METHOD_1 ( final TYPE_1 result ) { display ( result ) ; } 
protected void METHOD_1 ( ) { com.google.gerrit.extensions.registration.DynamicSet.setOf ( binder ( ) , VAR_1 class ) ; com.google.gerrit.extensions.registration.DynamicSet.setOf ( binder ( ) , VAR_2 class ) ; install ( new TYPE_1 ( ) ) ; } 
private static void METHOD_1 ( ) { for ( java.lang.String s : new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 } ) { TYPE_1 . METHOD_2 ( STRING_9 , s ) ; } } 
private void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_1 ( null ) ; } else { TYPE_1 . METHOD_3 ( METHOD_4 ( ) ) ; } } 
public void display ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { display ( null , null , null , VAR_1 , VAR_2 ) ; } 
public TYPE_1 create ( final TYPE_2 VAR_1 , final java.lang.String ref ) { return new TYPE_1 ( VAR_1 , ref ) ; } 
public void METHOD_1 ( int VAR_1 ) { VAR_3 . METHOD_1 ( METHOD_2 ( VAR_1 ) ) ; log ( VAR_1 ) ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) ; 
public void onSuccess ( TYPE_1 result ) { if ( VAR_1 . METHOD_1 ( ) ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( psId ) ) ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 class ) ; } 
public void METHOD_1 ( ) { for ( char c : TYPE_1 . METHOD_2 ( ) ) { org.junit.Assert . METHOD_3 ( ( STRING_1 + c ) , TYPE_2 . METHOD_4 ( c ) ) ; } } 
public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == ( VAR_3 ) ) { return ( line ) - ( VAR_1 . line ) ; } throw new TYPE_2 ( STRING_1 ) ; } 
public void METHOD_1 ( TYPE_1 ... VAR_1 ) throws java.io.IOException { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; } 
public TYPE_1 apply ( TYPE_2 rsrc ) { return new TYPE_1 ( rsrc . METHOD_3 ( ) ) ; } 
public TYPE_1 not ( ) { throw new TYPE_2 ( STRING_1 , this ) ; } 
public abstract TYPE_1 id ( java.lang.String VAR_1 ) ; 
private java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 ) ; } 
protected TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , c . getProject ( ) , c ) . METHOD_2 ( ) ; } 
private TYPE_1 METHOD_1 ( final TYPE_2 key ) throws TYPE_3 { return VAR_1 . get ( key , project ) ; } 
public java.lang.String METHOD_1 ( ) { return branch . ref ( ) ; } 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > METHOD_1 ( TYPE_4 < TYPE_5 < TYPE_1 > > type , java.lang.String name ) { return new TYPE_3 ( view ( type , VAR_1 , name ) ) ; } 
protected void METHOD_1 ( final TYPE_1 r ) { display ( r ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) . to ( VAR_2 class ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( 1 , VAR_4 ) ; } 
public void METHOD_1 ( TYPE_1 event ) { cm . METHOD_2 ( TYPE_2 . create ( line ) ) ; cm . METHOD_3 ( ( VAR_1 - ( FLOAT_1 * VAR_2 ) ) ) ; cm . METHOD_5 ( ) ; } 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( java.lang.String topic ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . METHOD_2 ( topic ( topic ) , TYPE_3 . METHOD_3 ( ) ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( true ) . METHOD_5 ( ) ; } 
public TYPE_1 create ( TYPE_2 < com.google.gerrit.reviewdb.server.ReviewDb > db , com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , null , db , id , null ) ; } 
protected void METHOD_1 ( TYPE_1 event ) { for ( TYPE_2 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( event ) ; } } 
public void index ( ) throws TYPE_1 { try { index . apply ( change , new TYPE_2 ( ) ) ; } catch ( java.io.IOException | com.google.gwtorm.server.OrmException e ) { throw new TYPE_1 ( STRING_1 , e ) ; } } 
public static TYPE_1 diff ( java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String path ) { return new TYPE_1 ( TYPE_2 . revision ( project , id ) . view ( STRING_1 ) . id ( path ) . view ( STRING_2 ) ) ; } 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return ( cd . change ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) >= ( VAR_1 . METHOD_3 ( ) ) ; } 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( getId ( ) , VAR_1 ) ; } 
public void METHOD_1 ( final java.lang.String VAR_1 ) { branch = VAR_1 ; } 
public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; } 
public TYPE_1 < TYPE_2 , com.google.gerrit.reviewdb.client.Account.Id > reviewers ( ) throws com.google.gwtorm.server.OrmException { return VAR_1 . METHOD_1 ( notes ( ) , approvals ( ) . values ( ) ) ; } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client . AccountGroup group ) { return METHOD_1 ( TYPE_1 . METHOD_2 ( group ) ) ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id changeId ) { this . project = project ; this . changeId = changeId ; } 
protected void METHOD_1 ( java.lang.String changeId , java.lang.String VAR_1 ) throws java.lang.Exception { submit ( changeId , new TYPE_1 ( ) , VAR_2 class , VAR_1 , true ) ; } 
private java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 , TYPE_4 { try ( TYPE_5 VAR_2 = VAR_1 . METHOD_2 ( ) ) { return VAR_2 . METHOD_3 ( ) ; } } 
private void log ( final int VAR_1 ) { synchronized ( this ) { if ( ! ( VAR_2 ) ) { log . METHOD_2 ( VAR_1 ) ; VAR_2 = true ; } } } 
protected TYPE_1 METHOD_1 ( org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.lib.ObjectId id ) { return TYPE_1 . create ( TYPE_2 . METHOD_2 ( repo ) , id ) ; } 
public char METHOD_1 ( int VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; } 
TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.revwalk.RevWalk rw , org.eclipse.jgit.lib.ObjectId VAR_1 , org.eclipse.jgit.lib.ObjectId VAR_2 ) ; 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account.Id id ) throws TYPE_2 { try { return VAR_1 . METHOD_2 ( db , change , VAR_2 . create ( id ) ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new TYPE_2 ( change.getId ( ) ) ; } } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return VAR_1 . create ( METHOD_2 ( change . METHOD_3 ( ) ) , change . getProject ( ) , change.getId ( ) ) ; } 
public com.google.gerrit.reviewdb.client . PatchSetApproval apply ( com.google.gerrit.reviewdb.client . PatchSetApproval in ) { if ( in . METHOD_1 ( ) . equals ( psId ) ) { return in ; } return new com.google.gerrit.reviewdb.client . PatchSetApproval ( psId , in ) ; } 
void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } } 
public static void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { try { VAR_1 . METHOD_2 ( ) ; } finally { VAR_1 = null ; } } TYPE_1 . METHOD_3 ( ) ; } 
boolean METHOD_1 ( ) ; 
public final boolean METHOD_1 ( ) { return ( METHOD_3 ( ) ) != ( VAR_1 ) ; } 
void METHOD_1 ( TYPE_1 e ) { TYPE_2 . METHOD_2 ( VAR_1 , changeId , revision , VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo , java.lang.String topic ) throws java.lang.Exception { return METHOD_2 ( repo , null , null , null , topic ) ; } 
public int run ( ) throws java.lang.Exception { final TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . close ( ) ; VAR_2 . METHOD_4 ( STRING_1 ) ; return 0 ; } 
public static PatchSet . Id METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id , java.lang.String VAR_1 ) { return new com.google.gerrit.reviewdb.client.PatchSet.Id ( id , ( VAR_1 . equals ( STRING_1 ) ? 0 : TYPE_1 . METHOD_2 ( VAR_1 ) ) ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 , char VAR_2 ) { if ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) >= 0 ) { return VAR_1 . METHOD_3 ( 0 , VAR_1 . METHOD_2 ( VAR_2 ) ) ; } return VAR_1 ; } 
private java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 . Id VAR_1 ) { return METHOD_2 ( METHOD_3 ( ) . METHOD_1 ( VAR_1 ) ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 . getName ( ) ) ; } 
public com.google.gerrit.extensions.registration.DynamicSet < TYPE_1 > get ( ) { return new com.google.gerrit.extensions.registration.DynamicSet ( TYPE_2 . METHOD_1 ( VAR_1 , type ) ) ; } 
public static java.lang.String METHOD_1 ( final TYPE_1 . Key id ) { return TYPE_2 . METHOD_2 ( STRING_1 , id ) ; } 
public static void METHOD_1 ( final com.google.gerrit.reviewdb.client.Change c ) { c . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( c ) ; } 
protected void add ( final TYPE_1 VAR_1 , final com.google.gerrit.reviewdb.client.Account.Id to ) { if ( ( ! ( VAR_2 ) ) || ( VAR_3 . contains ( to ) ) ) { super . add ( VAR_1 , to ) ; } } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 ( false , false ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( VAR_2 . get ( STRING_1 ) . METHOD_2 ( ) ) . isEqualTo ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . METHOD_2 ( ) ) ; } 
void METHOD_1 ( TYPE_1 . NameKey projectName , TYPE_2 < TYPE_3 > VAR_2 ) ; 
public void run ( ) { VAR_1 . METHOD_2 ( event ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) ; 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return ! ( METHOD_2 ( VAR_1 , false , true ) ) ; } 
public synchronized void METHOD_1 ( ) { VAR_1 . info ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) ; METHOD_3 ( false ) ; VAR_3 . METHOD_1 ( ) ; } 
public void delete ( com.google.gerrit.reviewdb.client.Change . Id id ) throws java.io.IOException { } 
protected void METHOD_1 ( final int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . run ( ) ; } } 
private static final native void METHOD_1 ( java.lang.String d , java.lang.String e , java.lang.String m , java.lang.String t , java.lang.String r , java.lang.String VAR_1 ) ; 
public static java.lang.String METHOD_1 ( final TYPE_1 . Key id ) { return TYPE_2 . METHOD_2 ( STRING_1 , null , id ) ; } 
public TYPE_1 < TYPE_2 . ChangeInfo > METHOD_1 ( ) { if ( ( info ) == null ) { info = new TYPE_1 ( ) ; } return info ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = name ( STRING_1 ) ; com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( ( name + STRING_2 ) ) . get ( ) . name ) ; } 
public static java.lang.String METHOD_2 ( com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 ) { return TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 , null , 0 ) ; } 
public static java.lang.String METHOD_2 ( com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 , TYPE_1 VAR_3 , int line ) { return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 , VAR_3 , line ) ; } 
java.lang.String METHOD_1 ( java.lang.String changeId ) ; 
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . OrmException { for ( TYPE_2 VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 , false ) ; } } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) throws TYPE_3 { METHOD_2 ( ) ; return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { index = new TYPE_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( index ) ; VAR_3 = new TYPE_3 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( TYPE_1 . METHOD_2 ( STRING_1 ) , STRING_2 ) ; } 
private void METHOD_1 ( final int VAR_1 , final java.lang.String VAR_2 ) { table . METHOD_2 ( 0 , VAR_1 , VAR_2 ) ; METHOD_3 ( 0 , VAR_1 , STRING_1 ) ; } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { try { return VAR_1 . apply ( revision ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return java.util.Collections . METHOD_2 ( VAR_1 ) ; } return java.util.Collections . METHOD_3 ( ) ; } 
private java.lang.String METHOD_1 ( short value ) { if ( value > 0 ) { return STRING_1 + value ; } return TYPE_1 . toString ( value ) ; } 
protected < TYPE_1 , TYPE_2 > TYPE_3 < TYPE_1 , TYPE_2 > core ( final TYPE_4 < TYPE_5 < TYPE_1 , TYPE_2 > > type ) { return core ( TYPE_6 . get ( type ) , type ) ; } 
public TYPE_1 < ? > apply ( TYPE_2 VAR_1 , TYPE_3 input ) throws TYPE_4 , TYPE_5 , TYPE_6 , com.google.gwtorm.server.OrmException , java.io.IOException { VAR_2 . apply ( VAR_1 , path , VAR_3 ) ; return TYPE_1 . METHOD_2 ( ) ; } 
private long METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project ) throws java.io.IOException { org.eclipse.jgit.lib.Repository git = VAR_1 . METHOD_2 ( project ) ; try { return METHOD_1 ( git . METHOD_3 ( ) ) ; } finally { git . close ( ) ; } } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . getName ( ) . METHOD_3 ( STRING_1 ) ) && ( VAR_1 . METHOD_2 ( ) ) ; } 
void METHOD_1 ( int status , java.lang.String message ) throws java.io.IOException { METHOD_1 ( status , new TYPE_1 ( message ) ) ; } 
public void onSuccess ( TYPE_1 result ) { TYPE_2 < TYPE_1 > VAR_1 = TYPE_2 . METHOD_1 ( 1 ) . METHOD_2 ( ) ; VAR_1 . set ( 0 , result ) ; VAR_2 . onSuccess ( VAR_1 ) ; } 
public void index ( ) throws TYPE_1 { try { index . apply ( account , new TYPE_2 ( ) ) ; } catch ( java.io.IOException e ) { throw new TYPE_1 ( STRING_1 , e ) ; } } 
public void onSuccess ( final TYPE_1 result ) { display ( result ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_3 ( true ) ; VAR_5 . METHOD_3 ( true ) ; VAR_6 . METHOD_3 ( true ) ; super . METHOD_1 ( VAR_1 ) ; } 
private static < TYPE_1 , TYPE_2 > TYPE_3 < TYPE_1 , TYPE_2 > METHOD_1 ( ) { return ( ( TYPE_3 < TYPE_1 , TYPE_2 > ) ( TYPE_3 . METHOD_2 ( ) ) ) ; } 
java.lang.String METHOD_1 ( TYPE_1 req ) { java.lang.String VAR_1 = TYPE_2 . METHOD_1 ( req , VAR_2 ) ; return ( VAR_3 ) && ( VAR_1 != null ) ? VAR_1 . METHOD_2 ( VAR_4 ) : VAR_1 ; } 
public void onSuccess ( TYPE_1 result ) { VAR_1 . onSuccess ( ( result != null ? result . METHOD_1 ( ) : null ) ) ; } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return VAR_1 . create ( METHOD_2 ( change . METHOD_3 ( ) ) , db , change . getProject ( ) , change.getId ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( status , VAR_2 ) ; } 
public void METHOD_1 ( final java.lang.StringBuilder VAR_1 , final TYPE_2 VAR_2 ) { VAR_1 . append ( CHAR_1 ) ; VAR_1 . append ( VAR_2 ) ; VAR_1 . append ( CHAR_1 ) ; } 
private java.util.List < TYPE_2 > METHOD_1 ( ) { return TYPE_3 . METHOD_3 ( VAR_1 ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 . get ( ) ; } 
private TYPE_1 METHOD_1 ( ) { try { return TYPE_2 . METHOD_1 ( ) ; } catch ( TYPE_3 e ) { return null ; } } 
protected Account . Id getAccountId ( ) { TYPE_1 u = VAR_1 . get ( ) ; return u . METHOD_1 ( ) ? u . getAccountId ( ) : null ; } 
abstract void METHOD_1 ( boolean VAR_1 ) ; 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { VAR_1 . METHOD_2 ( id ) ; } 
protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( null ) ; } 
private void METHOD_1 ( ) throws TYPE_2 . OrmException { VAR_1 . METHOD_2 ( db . patchSets ( ) . METHOD_3 ( changeId ) . METHOD_4 ( ) ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { try ( TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ) { return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . getValue ( STRING_1 ) ; } } 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > query ( TYPE_1 < com.google.gerrit.server.query.change.ChangeData > p ) throws com.google.gwtorm.server.OrmException { try { return VAR_1 . METHOD_1 ( p ) . changes ( ) ; } catch ( TYPE_2 e ) { throw new com.google.gwtorm.server.OrmException ( e ) ; } } 
public void onSuccess ( TYPE_1 . ChangeInfo result ) { VAR_1 = true ; METHOD_1 ( ) ; TYPE_2 . display ( TYPE_3 . METHOD_2 ( project , id ) ) ; } 
public static TYPE_1 create ( int line , int VAR_1 ) { TYPE_1 VAR_2 = METHOD_1 ( ) . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( line ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( CHAR_1 ) ; org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_4 ( STRING_2 ) ) ; } 
public int METHOD_1 ( ) { return 0 ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.PatchSet patchSet , com.google.gerrit.reviewdb.server.ReviewDb db ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_2 . of ( TYPE_3 . branch ( STRING_2 , null , false ) ) , METHOD_3 ( ) . get ( ) ) ; } 
public TYPE_1 . Result to ( java.lang.String ref ) throws java.io.IOException , TYPE_3 { TYPE_4 . add ( git , VAR_1 , VAR_2 ) ; return METHOD_1 ( ref ) ; } 
protected Project . NameKey METHOD_1 ( java.lang.String VAR_1 , com.google.gerrit.reviewdb.client.Project.NameKey VAR_2 ) throws TYPE_1 { return METHOD_1 ( VAR_1 , VAR_2 , true , null ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return VAR_2 . METHOD_1 ( VAR_1 ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . Status VAR_2 ) throws java.lang.Exception { return METHOD_2 ( VAR_1 , null , true , VAR_2 ) ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 ( config , false , false , false ) ) ; } 
public void METHOD_1 ( TYPE_1 . ReceiveCommand cmd ) { commands . add ( cmd ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 cm ) { return ( ) - > { TYPE_3 group = METHOD_2 ( cm ) ; if ( group != null ) { group . METHOD_3 ( ) ; } } ; } 
private static boolean METHOD_1 ( java.lang.String value , java.lang.String VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_1 ( value , null ) ; } return TYPE_2 . METHOD_3 ( VAR_1 , value ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; final TYPE_1 n = VAR_1 . METHOD_3 ( ) ; org.junit.Assert . METHOD_4 ( VAR_1 , n ) ; org.junit.Assert.assertEquals ( STRING_2 , n . METHOD_5 ( ) ) ; } 
public void run ( ) throws java.lang.Exception { METHOD_2 ( ) ; this . run ( ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . Status VAR_2 ) throws java.lang.Exception { return METHOD_2 ( VAR_1 , null , false , VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; user = VAR_3 . create ( VAR_2 ) ; return user ; } 
private static TYPE_1 group ( java.lang.String group ) { return new TYPE_1 ( STRING_1 ) . id ( group ) ; } 
TYPE_1 create ( TYPE_2 ctl , com.google.gerrit.reviewdb.client.Change c , org.eclipse.jgit.revwalk.RevCommit VAR_1 ) ; 
public final void METHOD_1 ( int line , TYPE_2 VAR_1 , java.lang.String VAR_2 ) { METHOD_2 ( line , VAR_1 . value ( ) , VAR_2 ) ; } 
public void METHOD_1 ( int id ) { METHOD_2 ( id , true ) ; } 
public void METHOD_1 ( final java.lang.String url ) { this . VAR_1 = url ; } 
public void METHOD_1 ( final java.lang.String email ) { VAR_1 . METHOD_2 ( email ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; } 
private java.util.Set < TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id account ) { return VAR_1 . create ( account ) . METHOD_2 ( ) . METHOD_3 ( ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String err ) { return METHOD_1 ( err , null ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 , char VAR_2 ) { if ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) >= 0 ) { return VAR_1 . METHOD_3 ( ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) + 1 ) ) ; } return VAR_1 ; } 
void close ( ) { if ( ( update ) != null ) { update . close ( ) ; } VAR_1 . close ( ) ; rw . close ( ) ; repo . close ( ) ; } 
public void METHOD_1 ( ) { } 
public static void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 ) . get ( TYPE_4 . METHOD_4 ( VAR_1 ) ) ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; METHOD_2 ( ) . to ( VAR_3 class ) ; } 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { for ( TYPE_2 i : METHOD_2 ( ) ) { i . delete ( id ) ; } METHOD_3 ( id . get ( ) ) ; return null ; } 
public static void METHOD_1 ( java.lang.String project , int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . change ( project , id ) . view ( STRING_1 ) . delete ( VAR_1 ) ; } 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Project.NameKey project , org.eclipse.jgit.lib.Repository db , TYPE_2 VAR_1 ) ; 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_1 == ( VAR_2 ) ) && ( ( ( base ) == null ) || ( ( base . get ( ) ) < 0 ) ) ) { return VAR_3 ; } return VAR_4 ; } 
public java.lang.String apply ( TYPE_1 rsrc ) throws TYPE_2 , TYPE_3 { return rsrc . METHOD_1 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_4 : : new ) ; } 
private com.google.gerrit.reviewdb.client . PatchSetApproval METHOD_1 ( com.google.gerrit.reviewdb.client . PatchSetApproval VAR_1 ) { return new com.google.gerrit.reviewdb.client . PatchSetApproval ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; } 
TYPE_1 METHOD_1 ( TYPE_1 . Factory factory ) { TYPE_3 < com.google.gerrit.server.query.change.ChangeData > schema = ( ( VAR_2 ) != null ) ? TYPE_4 . get ( VAR_2 ) : TYPE_4 . METHOD_2 ( ) ; return factory . create ( schema , base ) ; } 
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; new TYPE_1 ( TYPE_2 . METHOD_1 ( ) ) . METHOD_4 ( ) ; } 
private TYPE_1 . Gerrit METHOD_1 ( ) { if ( ( gerrit ) == null ) { gerrit = new TYPE_1 . Gerrit ( this , METHOD_2 ( ) ) ; } return gerrit ; } 
private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList ( VAR_1 ) ; java.util.Collections . METHOD_2 ( VAR_2 , VAR_3 ) ; return VAR_2 ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . create ( 0 ) , VAR_1 . METHOD_3 ( 0 ) ) ; } 
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( METHOD_3 ( row ) . name ( ) ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; try { return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . getValue ( STRING_1 ) ; } finally { VAR_2 . close ( ) ; } } 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id changeId , com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) ; 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 { if ( id . get ( ) . equals ( STRING_1 ) ) { return new TYPE_1 ( ) ; } throw new TYPE_4 ( id ) ; } 
private static org.eclipse.jgit.revwalk.RevCommit METHOD_1 ( org.eclipse.jgit.lib.Repository VAR_1 , com.google.gerrit.reviewdb.client.PatchSet patchSet ) throws java.io.IOException { org.eclipse.jgit.lib.ObjectId VAR_2 = TYPE_1 . METHOD_2 ( patchSet ) ; return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ) . isEmpty ( ) ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; METHOD_2 ( ) . to ( VAR_3 class ) ; } 
void METHOD_1 ( ) { submit . METHOD_2 ( VAR_2 ) ; } 
public void onSuccess ( final TYPE_1 result ) { METHOD_1 ( true ) ; display ( result ) ; } 
protected void METHOD_1 ( ) { rpc ( VAR_2 class ) ; } 
public static PatchSet . Id METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id ) { return new com.google.gerrit.reviewdb.client.PatchSet.Id ( id . getParentKey ( ) , ( ( id . get ( ) ) + 1 ) ) ; } 
public static void query ( java.lang.String query , java.util.Set < TYPE_1 > VAR_1 , TYPE_2 < TYPE_3 > VAR_2 ) { TYPE_3 . query ( query , VAR_1 , VAR_2 , 0 , 0 ) ; } 
protected abstract TYPE_1 METHOD_1 ( ) ; 
public void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) { VAR_1 . onSuccess ( config ) ; } 
TYPE_1 create ( TYPE_2 . Project project , TYPE_3 < TYPE_4 > VAR_1 ) ; 
private boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_1 ( VAR_1 , METHOD_3 ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_3 ) ; } 
public Change . Key METHOD_1 ( ) { return new com.google.gerrit.reviewdb.client.Change . Key ( change . id ) ; } 
public void METHOD_1 ( java.lang.String changeId ) throws TYPE_1 { throw new TYPE_2 ( ) ; } 
public void run ( ) throws java.lang.Exception { VAR_1 . display ( VAR_2 ) ; } 
private boolean METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) { return ( TYPE_1 . METHOD_2 ( name ) ) && ( ( TYPE_1 . METHOD_3 ( name ) . METHOD_4 ( VAR_1 ) ) == 0 ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 input ) { return java.lang.String.format ( STRING_1 , TYPE_2 . METHOD_2 ( VAR_1 , input . change ( ) ) ) ; } 
public static TYPE_1 METHOD_1 ( int id ) { return TYPE_2 . METHOD_2 ( id , STRING_1 ) ; } 
protected Project . NameKey METHOD_1 ( ) { return getChange ( ) . getProject ( ) ; } 
public TYPE_1 get ( TYPE_2 VAR_1 ) { return super . get ( VAR_1 ) ; } 
private void METHOD_1 ( ) throws java.io.IOException { TYPE_1 . HttpServletResponse VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . HttpServletResponse class ) ; servlet . METHOD_3 ( null , VAR_1 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_3 ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String path ) { return TYPE_3 . refs ( ) . METHOD_2 ( VAR_1 ) . METHOD_3 ( path ) ; } 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Change . Id changeId , java.lang.String VAR_2 ) ; 
public java.lang.String METHOD_1 ( java.lang.String project ) { return project ; } 
private void display ( final TYPE_1 result ) { VAR_1 . display ( result ) ; if ( VAR_2 ) { VAR_2 = false ; METHOD_1 ( ) ; } } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( 1 ) ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , TYPE_1 ctl , com.google.gerrit.reviewdb.client.PatchSet ps ) throws com.google.gwtorm.server.OrmException { db . METHOD_2 ( ) . insert ( METHOD_3 ( db , ctl , ps ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.PatchSet patchSet ) { return METHOD_1 ( db , patchSet , null , false , false , false ) ; } 
private void METHOD_1 ( java.lang.String ref , TYPE_1 u ) { com.google.common.truth.Truth.assertThat ( u . METHOD_2 ( ref ) . METHOD_3 ( false ) ) . METHOD_4 ( ( STRING_1 + ref ) ) . METHOD_5 ( ) ; } 
protected abstract java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String type ) ; 
public Project . NameKey METHOD_1 ( ) { return project ; } 
public void METHOD_1 ( TYPE_2 event , com.google.gerrit.reviewdb.server.ReviewDb db ) { } 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return ( VAR_1 ) != null ? submit ( new TYPE_2 ( change , true ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } 
private Account . Id id ( int n ) { return new com.google.gerrit.reviewdb.client.Account.Id ( n ) ; } 
private boolean METHOD_1 ( TYPE_1 config , java.lang.String VAR_1 ) { return METHOD_2 ( config , STRING_1 , VAR_1 , false , false ) ; } 
public void onSuccess ( final TYPE_1 . Account result ) { if ( result != null ) { TYPE_2 . METHOD_1 ( result , null ) ; } else { TYPE_3 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( ) ; } METHOD_4 ( ) ; } 
private static java.lang.String id ( final int id ) { return TYPE_2 . format ( id ) ; } 
public TYPE_1 < TYPE_2 > apply ( TYPE_3 VAR_1 ) throws java.lang.Exception { if ( ! VAR_1 ) { return ( ( TYPE_1 < TYPE_2 > ) ( VAR_2 . METHOD_1 ( id ) ) ) ; } return TYPE_4 . METHOD_2 ( null ) ; } 
private java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > refs ) { return METHOD_1 ( refs , false ) ; } 
public static void METHOD_1 ( java.lang.String project , int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . edit ( project , id ) . METHOD_2 ( STRING_1 ) . get ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; } 
private void METHOD_1 ( java.lang.String group ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( ) . id ( group ) . METHOD_3 ( ) ) . isEmpty ( ) ; } 
private void METHOD_1 ( java.lang.String changeId , com.google.gerrit.reviewdb.client.PatchSet ps ) throws java.lang.Exception { METHOD_1 ( changeId , ps . getId ( ) . get ( ) ) ; } 
public void METHOD_1 ( ) { bind ( VAR_3 class ) . METHOD_2 ( user ) ; } 
public void METHOD_1 ( java.lang.String email ) { this . email = email ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_3 , VAR_1 . changeId , VAR_5 , VAR_6 ) ; assertThat ( VAR_7 ) . METHOD_5 ( ) ; } 
private void METHOD_1 ( TYPE_1 . ChangeInfo info , java.lang.String revision ) { VAR_1 = new TYPE_2 ( info , revision , VAR_2 , VAR_3 , VAR_4 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_1 ( ) . get ( VAR_1 . get ( ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { group ( STRING_1 ) ; METHOD_2 ( STRING_2 ) . METHOD_3 ( ) ; com.google.common.truth.Truth.assertThat ( METHOD_2 ( STRING_2 ) . METHOD_4 ( ) ) . isEqualTo ( VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; } 
java.util.List < TYPE_1 . ChangeInfo > METHOD_1 ( ) throws TYPE_4 ; 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , TYPE_4 VAR_2 ) throws com.google.gwtorm.server.OrmException { TYPE_5 VAR_3 = VAR_4 . METHOD_2 ( ) ; if ( VAR_3 != null ) { return METHOD_3 ( VAR_1 , VAR_2 ) ; } return METHOD_4 ( VAR_1 , VAR_2 ) ; } 
private TYPE_1 . ProjectConfig METHOD_1 ( boolean VAR_1 ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , VAR_1 , true , true , true ) ; } 
private boolean METHOD_1 ( ) { for ( TYPE_1 group : VAR_1 ) { if ( METHOD_2 ( group ) ) { return true ; } } return false ; } 
public void METHOD_1 ( TYPE_2 . NameKey branch ) { if ( METHOD_2 ( branch ) ) { METHOD_3 ( branch ) ; } } 
public java.lang.String format ( java.lang.String projectName , java.lang.String revision , TYPE_1 cfg , java.lang.String VAR_1 ) { return ( STRING_1 + ( TYPE_2 . METHOD_1 ( VAR_1 ) ) ) + STRING_2 ; } 
public static TYPE_1 . Key METHOD_1 ( final java.lang.String VAR_1 ) { final TYPE_1 . Key r = new TYPE_1 . Key ( ) ; r . METHOD_2 ( VAR_1 ) ; return r ; } 
private java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( java.lang.String topic ) throws com.google.gwtorm.server.OrmException { return VAR_1 . get ( ) . METHOD_1 ( topic ) ; } 
public void METHOD_1 ( TYPE_1 in ) throws TYPE_2 { try { VAR_1 . apply ( change , in ) ; } catch ( com.google.gwtorm.server.OrmException | TYPE_3 | java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
private void METHOD_1 ( final TYPE_1 req , final TYPE_2 . HttpServletResponse rsp ) throws java.io.IOException { METHOD_2 ( req , rsp ) ; } 
void METHOD_1 ( TYPE_1 e ) { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 . getValue ( VAR_2 . METHOD_4 ( ) ) ) ) ; if ( ( view ) != null ) { view . METHOD_5 ( ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_4 , TYPE_5 { return VAR_3 . create ( VAR_1 , db , repo , rw , VAR_4 , VAR_5 , METHOD_2 ( VAR_6 ) , VAR_7 ) ; } 
public void METHOD_1 ( TYPE_1 a , TYPE_2 < com.google.gerrit.reviewdb.client.PatchSet > ps ) { METHOD_1 ( a , ps , null , false , null ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . get ( ) . METHOD_3 ( VAR_3 ) ; } 
void METHOD_1 ( TYPE_1 apply ) { VAR_1 . METHOD_1 ( ( ) - > VAR_2 . METHOD_1 ( apply : : run ) ) ; } 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( project , psId . getParentKey ( ) , java.lang.String . METHOD_2 ( psId . get ( ) ) ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 p = new TYPE_1 ( 0 ) ; org.junit.Assert.assertEquals ( 0 , p . METHOD_2 ( ) ) ; } 
private static TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Account account ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 ) , account , TYPE_3 . of ( ) , new TYPE_4 < > ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = METHOD_2 ( STRING_1 ) ; VAR_2 = METHOD_2 ( STRING_2 ) ; } 
void METHOD_1 ( java.lang.String project , java.lang.String ref , int VAR_1 ) { METHOD_2 ( new TYPE_1 ( project , ref , VAR_1 ) ) ; } 
private void METHOD_1 ( final TYPE_2 VAR_2 ) { final TYPE_3 [ ] VAR_3 = VAR_4 . METHOD_2 ( ) ; for ( final TYPE_3 m : VAR_3 ) { METHOD_3 ( m , VAR_2 ) ; } } 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( java.lang.String VAR_1 ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . commit ( VAR_1 ) ) ; } 
private void METHOD_1 ( TYPE_1 cm ) { if ( cm . METHOD_2 ( ) ) { TYPE_2 VAR_1 = cm . METHOD_5 ( ) ; cm . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 . METHOD_5 ( ) ) ; cm . METHOD_5 ( null ) ; } } 
public void add ( final TYPE_1 VAR_1 ) { assert ! ( VAR_2 . METHOD_1 ( VAR_3 ) ) ; if ( ! ( VAR_2 . METHOD_1 ( VAR_3 ) ) ) { VAR_2 . put ( VAR_3 , VAR_1 ) ; } } 
public int METHOD_1 ( ) { return 1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . get ( ( STRING_1 + ( METHOD_2 ( ) ) ) ) ; com.google.common.truth.Truth.assertThat ( r . METHOD_3 ( ) ) . isEqualTo ( VAR_2 ) ; } 
TYPE_2 < TYPE_3 , ? > create ( TYPE_3 VAR_1 , TYPE_4 id ) throws TYPE_5 ; 
public TYPE_1 apply ( TYPE_2 VAR_1 , TYPE_3 input ) throws com.google.gwtorm.server.OrmException { return get . apply ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 < java.lang.String > event ) { TYPE_2 . display ( event . getValue ( ) ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } } 
private static TYPE_1 METHOD_1 ( java.lang.String project , int id , java.lang.String commit , java.lang.String VAR_1 ) { return TYPE_2 . change ( project , id ) . view ( STRING_1 ) . id ( commit ) . view ( VAR_1 ) ; } 
public boolean apply ( TYPE_1 input ) { return input . getProject ( ) . METHOD_1 ( ) . equals ( ctl . getProject ( ) . METHOD_1 ( ) ) ; } 
TYPE_1 METHOD_1 ( ) throws java.lang.Exception ; 
private static final native void METHOD_1 ( java.lang.String d , java.lang.String e , java.lang.String r , java.lang.String VAR_1 ) ; 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return ( VAR_1 ) != null ? submit ( new TYPE_2 ( new com.google.gerrit.server.query.change.ChangeData ( change ) , false ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } 
public static TYPE_1 < com.google.gerrit.reviewdb.client . AccountGroup > name ( java.lang.String name ) { return new TYPE_3 ( VAR_1 , VAR_2 , name ) ; } 
private java.lang.String METHOD_1 ( ) { return ( STRING_1 + ( VAR_1 ) ) + STRING_2 ; } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ( - 1 ) ) ; } 
private TYPE_1 METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.lang.Exception { com.google.gerrit.reviewdb.client.Change c = METHOD_2 ( ) ; return new TYPE_1 ( c . getProject ( ) , c . getId ( ) , VAR_1 , walk , VAR_2 ) ; } 
protected void METHOD_1 ( ) throws TYPE_1 { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) ; } 
public final native void METHOD_1 ( boolean m ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_2 ( VAR_1 ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 , STRING_3 , STRING_4 ) ) ; } 
protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return new TYPE_2 ( server ) ; } 
public void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( revision . getParentKey ( ) , revision . getId ( ) ) ) ; } 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( getId ( ) ) ; } 
void METHOD_1 ( final java.lang.String name ) { this . name = name ; } 
private boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ( STRING_1 + ( getRefName ( ) ) ) ) . METHOD_3 ( VAR_2 ) ) && ( METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; org.junit.Assert . METHOD_3 ( in , METHOD_4 ( in ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int row , int VAR_2 ) { if ( row > 0 ) { METHOD_2 ( row ) ; } } 
protected void METHOD_1 ( TYPE_1 result ) { METHOD_2 ( VAR_1 ) ; VAR_1 = null ; METHOD_3 ( VAR_2 , VAR_3 ) ; VAR_2 = null ; VAR_3 = null ; } 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , TYPE_1 VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 , TYPE_2 VAR_3 , int line ) { return TYPE_3 . METHOD_1 ( STRING_1 , project , VAR_1 , revision , VAR_2 , VAR_3 , line ) ; } 
public void onSuccess ( TYPE_1 . ChangeInfo info ) { info . METHOD_1 ( ) ; METHOD_2 ( info , base ) ; } 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id account ) throws com.google.gwtorm.server.OrmException { TYPE_1 VAR_1 = VAR_2 . create ( VAR_3 , account ) ; return rsrc . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 rsrc ) { return new TYPE_3 ( ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) . METHOD_4 ( METHOD_6 ( rsrc ) ) ; } 
private void METHOD_1 ( final TYPE_1 event ) { TYPE_2 change = VAR_1 . get ( ) ; if ( VAR_2 . METHOD_2 ( change ) ) { METHOD_3 ( change ) ; } } 
static int METHOD_2 ( int in ) { return TYPE_1 . METHOD_2 ( VAR_1 , in ) ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . get ( ) . METHOD_3 ( STRING_2 ) ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , java.util.Set < TYPE_3 > s ) { VAR_1 . METHOD_2 ( STRING_1 , TYPE_4 . METHOD_3 ( TYPE_3 . METHOD_4 ( s ) ) ) ; } 
public void METHOD_1 ( boolean value , java.lang.String message ) { throw new TYPE_1 ( ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 == null ? STRING_1 : VAR_1 ; } 
java.lang.String patchSets ( int VAR_1 , int VAR_2 ) ; 
private java.lang.String url ( TYPE_1 r ) { return TYPE_2 . METHOD_1 ( changeId , r . id ( ) ) ; } 
TYPE_1 create ( TYPE_2 VAR_1 , com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return create ( VAR_1 , VAR_2 . create ( db , change ) ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( VAR_1 ) { return null ; } return VAR_4 . get ( getProject ( ) . METHOD_2 ( VAR_3 ) ) ; } 
private static void METHOD_1 ( TYPE_1 label , TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = new java.util.ArrayList < > ( ) ; } VAR_2 . add ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) . isEqualTo ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) ; } 
public java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ 0 ] ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; in . name = name ( STRING_1 ) ; VAR_1 = java.util.Collections . METHOD_2 ( STRING_2 ) ; METHOD_3 ( in , VAR_2 class ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { if ( 0 <= VAR_1 ) { return STRING_1 + VAR_1 ; } return java.lang.String . METHOD_2 ( VAR_1 ) ; } 
public static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 args , TYPE_4 VAR_1 ) { return new TYPE_5 ( args . db , VAR_2 , VAR_1 ) ; } 
public TYPE_1 . Account run ( TYPE_1 . ReviewDb db ) throws TYPE_2 . OrmException { return db . METHOD_1 ( ) . get ( TYPE_3 . getAccountId ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . run ( ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_2 = null ; return this ; } 
public void run ( ) { VAR_1 . info ( STRING_1 ) ; METHOD_1 ( ) ; } 
private java.util.Map < java.lang.String , java.util.List < TYPE_1 > > METHOD_1 ( java.lang.String path ) throws java.lang.Exception { return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , java.util.List < TYPE_1 > > > ( ) { } ) ; } 
public static void query ( java.lang.String query , java.util.Set < TYPE_2 > VAR_1 , TYPE_3 < TYPE_4 > VAR_2 ) { TYPE_5 VAR_3 = TYPE_4 . METHOD_1 ( query ) ; TYPE_4 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_3 . get ( VAR_2 ) ; } 
public static TYPE_1 . Change METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 . Change ( VAR_1 . project , VAR_2 , VAR_1 . id , VAR_1 . topic , VAR_1 . branch ) ; } 
private static TYPE_1 METHOD_1 ( java.lang.String project , int id ) { return TYPE_2 . change ( project , id ) . view ( STRING_1 ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int line ) { METHOD_1 ( VAR_1 , VAR_2 , line , VAR_3 . METHOD_3 ( ) ) ; } 
private boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) . METHOD_3 ( VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 . ProjectConfig ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; util . add ( VAR_1 ) ; } 
private static boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String token ) { if ( token . METHOD_2 ( VAR_1 ) ) { VAR_2 = VAR_1 . length ( ) ; return true ; } return false ; } 
public java.util.List < TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.PatchSet patchSet ) { return METHOD_1 ( db , patchSet , null , false ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( true ) ; add ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( METHOD_2 ( ( ( STRING_1 + ( VAR_2 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) . isEqualTo ( VAR_1 ) ; } 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( change . getStatus ( ) . METHOD_1 ( ) ) { change . METHOD_2 ( ) ; change . METHOD_3 ( null ) ; return change ; } else { return null ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . to ( VAR_2 class ) ; } 
public boolean METHOD_1 ( TYPE_1 . Id VAR_1 ) { return false ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > create ( ) { return new TYPE_2 < TYPE_1 > ( ) ; } 
protected TYPE_1 METHOD_1 ( java.lang.String path ) throws java.lang.Exception { TYPE_1 res = METHOD_2 ( path , STRING_1 , VAR_1 ) ; com.google.common.truth.Truth.assertThat ( res . METHOD_3 ( VAR_2 ) ) . isEqualTo ( STRING_2 ) ; return res ; } 
public java.lang.String format ( java.lang.String projectName , TYPE_1 cfg , java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_2 . create ( VAR_2 class . METHOD_1 ( ) ) . METHOD_2 ( VAR_1 , new TYPE_3 < java.lang.String , TYPE_4 > ( ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( java.lang.String changeId ) throws TYPE_2 , TYPE_3 { return VAR_1 . get ( getKey ( null , METHOD_2 ( changeId ) ) , project ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( db ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; } } 
public org.eclipse.jgit.revwalk.RevCommit commit ( ) throws java.io.IOException { return commit ( TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) . create ( change . getProject ( ) , user ) ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String id , java.lang.String email ) throws java.lang.Exception { VAR_2 . create ( ) . insert ( TYPE_1 . METHOD_2 ( VAR_1 , id , user . getAccountId ( ) , email ) ) ; METHOD_3 ( ) ; } 
TYPE_1 get ( TYPE_2 input , TYPE_3 args ) throws com.google.gwtorm.server.OrmException , java.io.IOException ; 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . in ( VAR_2 class ) ; bind ( VAR_3 class ) ; bind ( VAR_4 class ) . in ( VAR_5 ) ; } 
protected void METHOD_1 ( final int row ) { super . METHOD_1 ( row ) ; VAR_1 . METHOD_2 ( METHOD_3 ( row ) . name ( ) ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 , final boolean VAR_2 ) { VAR_3 . put ( VAR_1 . getName ( ) , VAR_2 ) ; } 
void METHOD_1 ( TYPE_1 e ) { METHOD_2 ( false ) ; } 
void METHOD_1 ( TYPE_1 event , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ; 
public void METHOD_1 ( ) { set ( null ) ; } 
public Project . NameKey METHOD_1 ( ) { return new com.google.gerrit.reviewdb.client.Project.NameKey ( VAR_1 . get ( ) . project ) ; } 
public TYPE_1 create ( com.google.gerrit.reviewdb.client.Change . Id id ) ; 
public void METHOD_1 ( ) throws com.google.gwtorm.server.OrmException , java.io.IOException , TYPE_2 { TYPE_3 . Result r = METHOD_3 ( STRING_1 ) ; r . METHOD_4 ( ) ; r . METHOD_5 ( VAR_1 , null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = name ( STRING_1 ) ; com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( name ) . get ( ) . name ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { throw new TYPE_3 ( message ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( METHOD_3 ( VAR_1 , VAR_4 , null , VAR_5 , VAR_2 , false ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) , METHOD_2 ( STRING_1 ) ) ; METHOD_3 ( ) ; org.junit.Assert.assertEquals ( ( STRING_1 + ( STRING_2 + STRING_4 ) ) , METHOD_2 ( STRING_1 ) ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { final TYPE_1 r = new TYPE_1 ( VAR_1 , VAR_2 ) ; r . METHOD_2 ( false ) ; r . METHOD_3 ( true ) ; VAR_3 . add ( r ) ; return r ; } 
public void METHOD_1 ( final TYPE_1 . NameKey branch ) { if ( METHOD_2 ( branch ) ) { METHOD_3 ( branch ) ; } } 
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( projectName ) ; } } 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( METHOD_2 ( db ) ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public void run ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 . METHOD_3 ( ) ; } 
public TYPE_1 . Id getId ( ) { return changeId ; } 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . METHOD_2 ( TYPE_2 . project ( project ) , TYPE_3 . METHOD_3 ( ) ) ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 git , TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_3 VAR_2 = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) ) ; return VAR_2 . to ( git , STRING_1 ) . getChangeId ( ) ; } 
private void METHOD_1 ( TYPE_1 c , TYPE_2 msg ) { METHOD_2 ( c . notes ( ) , msg , true ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 user ) { java.lang.String VAR_1 = user . METHOD_2 ( ) ; if ( TYPE_3 . METHOD_3 ( VAR_1 ) ) { return VAR_2 ; } else { return VAR_3 . get ( VAR_1 ) ; } } 
public void onSuccess ( final TYPE_1 result ) { VAR_1 . display ( result ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String message , TYPE_2 log ) { return ( error ) - > log . error ( ( message + ( error . getMessage ( ) ) ) ) ; } 
public void message ( java.lang.String message ) { VAR_1 . METHOD_1 ( message ) ; VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.io.IOException , java.lang.Exception , TYPE_1 { java.lang.String changeId = METHOD_2 ( ) . getChangeId ( ) ; java.util.List < TYPE_2 > reviewers = METHOD_3 ( changeId , STRING_1 , INT_1 ) ; org.junit.Assert.assertEquals ( reviewers . size ( ) , 0 ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) throws java.lang.Exception { return VAR_2 . get ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( ) { return ( info ) != null ? new TYPE_2 ( info ) : new TYPE_2 ( id ) ; } 
protected org.eclipse.jgit.lib.Repository METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return repo ; } 
public TYPE_1 apply ( TYPE_2 rsrc , TYPE_3 input ) throws java.io.IOException { VAR_1 . index ( rsrc . getChange ( ) ) ; return TYPE_6 . METHOD_1 ( ) ; } 
java.lang.String METHOD_1 ( java.lang.String changeId , int ps ) ; 
TYPE_1 create ( TYPE_2 project , java.lang.String id ) ; 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { if ( id == null ) { return null ; } return METHOD_1 ( VAR_1 . get ( id ) . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_3 ( this ) ; } 
void METHOD_1 ( TYPE_1 e ) { input . METHOD_2 ( false ) ; TYPE_2 . METHOD_3 ( VAR_2 , false ) ; } 
public boolean METHOD_1 ( TYPE_1 ctx ) { ctx . METHOD_2 ( psId ) . METHOD_3 ( magicBranch . topic ) ; return true ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 . NameKey VAR_1 ) throws java.lang.Exception { return TYPE_4 . METHOD_1 ( repo , VAR_1 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_4 = VAR_1 ; } 
protected static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( TYPE_2 args , java.lang.String label , int VAR_1 ) { if ( VAR_1 != 0 ) { return TYPE_3 . METHOD_2 ( args , label , VAR_1 ) ; } return TYPE_3 . METHOD_3 ( args , label ) ; } 
public void run ( ) { VAR_1 . close ( ) ; } 
public void METHOD_1 ( final TYPE_1 event ) { if ( ( event . METHOD_3 ( ) ) == ( VAR_1 ) ) { METHOD_4 ( ) ; } } 
private void METHOD_1 ( TYPE_1 req ) throws java.lang.Exception { TYPE_2 res = new TYPE_2 ( ) ; servlet . METHOD_2 ( req , res ) ; com.google.common.truth.Truth.assertThat ( res . getStatus ( ) ) . isEqualTo ( VAR_1 ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_1 = TYPE_2 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; } 
public short METHOD_1 ( ) throws TYPE_1 { return ( ( short ) ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , STRING_2 , 2 ) ) ) ; } 
public void insert ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { } 
protected void METHOD_1 ( TYPE_1 line ) throws java.io.IOException { VAR_1 . append ( line ) ; } 
private static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > commit ( java.lang.String id ) { return new TYPE_2 ( id ) ; } 
public java.lang.String format ( java.lang.String projectName , java.lang.String revision , TYPE_1 cfg , java.lang.String VAR_1 ) throws java.io.IOException ; 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 , VAR_5 ) ; assertThat ( VAR_6 ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 = VAR_1 ; } 
void METHOD_1 ( TYPE_1 e ) { METHOD_3 ( VAR_2 . METHOD_2 ( ) , false ) ; } 
public void onSuccess ( ) { TYPE_1 . display ( token , new TYPE_2 ( project , id , line ) ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 , STRING_1 , VAR_5 , VAR_6 , user ) ; } 
private boolean METHOD_1 ( ) { return METHOD_2 ( VAR_1 ) ; } 
protected java.lang.String METHOD_1 ( final int s , int e ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , null ) ; } return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , s , e ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_3 . ReceiveCommand cmd : commands . values ( ) ) { VAR_1 . METHOD_3 ( cmd ) ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( ( ( VAR_1 ) + 1 ) , VAR_2 , VAR_3 , VAR_4 ) ; } 
protected void METHOD_1 ( ) throws java.io.IOException { final TYPE_1 VAR_1 = new TYPE_1 ( repo ) ; VAR_1 . METHOD_3 ( in , out , err ) ; } 
protected TYPE_1 < ? > METHOD_1 ( java.lang.String name , com.google.gerrit.reviewdb.client.Project.NameKey VAR_1 ) throws java.lang.Exception { return METHOD_1 ( name , VAR_1 , true , METHOD_2 ( ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return null ; } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey projectName , java.lang.String VAR_1 ) throws TYPE_2 { return METHOD_2 ( projectName , VAR_1 ) . METHOD_3 ( false ) ; } 
public void METHOD_1 ( ) throws TYPE_1 , java.io.IOException , TYPE_2 { TYPE_3 . Result r = METHOD_2 ( ) ; VAR_1 . changes ( ) . id ( r . getChangeId ( ) ) . METHOD_1 ( ) ; } 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Change . Id id ) ; 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { key = new TYPE_1 . Key ( ( STRING_1 + id ) ) ; VAR_1 = new TYPE_2 ( id , 0 , false , null , 0 , null ) ; } 
void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 , true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( METHOD_2 ( STRING_1 ) ) . isEqualTo ( VAR_1 ) ; } 
public TYPE_1 apply ( TYPE_2 VAR_1 ) { return ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_1 ( project . get ( ) , commit ) ; } 
java.lang.String METHOD_1 ( int changeId ) ; 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String path ) { return new TYPE_1 ( VAR_1 , config , path ) ; } 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { if ( METHOD_2 ( ) ) { return METHOD_3 ( ) . METHOD_1 ( ) ; } return null ; } 
public static void METHOD_1 ( java.lang.String project , int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . change ( project , id ) . delete ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; in . name = name ( STRING_1 ) ; VAR_1 . projects ( ) . create ( in ) ; VAR_1 . projects ( ) . create ( in ) ; } 
public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_1 ) ; org.junit.Assert . METHOD_3 ( STRING_3 ) ; } catch ( TYPE_2 VAR_1 ) { } } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String changeId = METHOD_2 ( ) . getChangeId ( ) ; METHOD_3 ( changeId , STRING_1 ) ; TYPE_3 . ChangeInfo c = info ( changeId ) ; org.junit.Assert . METHOD_4 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { db . close ( ) ; } 
protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } super . METHOD_1 ( ) ; } 
protected < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 VAR_1 ) throws java.lang.Exception { return METHOD_1 ( path , VAR_1 , STRING_1 ) ; } 
private void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( change , db ) ; } catch ( com.google.gwtorm.server.OrmException e ) { } } 
public TYPE_1 notes ( ) { return notes ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( new TYPE_1 ( this ) ) ; super . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { if ( id == null ) { return null ; } return METHOD_1 ( VAR_1 . get ( id ) ) ; } 
public abstract Project . NameKey METHOD_1 ( ) ; 
public void METHOD_1 ( ) throws TYPE_1 { org.junit.Assert . METHOD_2 ( METHOD_3 ( STRING_1 ) ) ; } 
private static TYPE_1 METHOD_1 ( java.lang.String name , TYPE_2 ... values ) { return new TYPE_1 ( name , TYPE_3 . METHOD_2 ( values ) ) ; } 
private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_2 ( STRING_1 ) ) . isEmpty ( ) ; } 
public boolean apply ( com.google.gerrit.reviewdb.client.PatchSet.Id in ) { return ( VAR_2 . apply ( in ) ) && ( patchSets . METHOD_1 ( in ) ) ; } 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > put ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 , java.lang.String name ) { return new TYPE_3 ( view ( VAR_1 , VAR_2 , name ) ) ; } 
public final native void message ( java.lang.String m ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = - 1 ; super . METHOD_1 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; display ( ) ; METHOD_2 ( false , false ) ; } 
public com.google.gerrit.reviewdb.client.Change getChange ( ) { return change . getChange ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_2 , ( ( VAR_1 ) + STRING_1 ) ) ; VAR_2 . METHOD_3 ( STRING_2 ) ; } 
private static void METHOD_1 ( int changeId , java.lang.String VAR_1 ) { com.google.common.truth.Truth.assertThat ( TYPE_1 . METHOD_2 ( VAR_1 ) ) . isEqualTo ( new com.google.gerrit.reviewdb.client.Change . Id ( changeId ) ) ; } 
public static TYPE_1 assertThat ( TYPE_2 VAR_1 ) { return com.google.common.truth.Truth . METHOD_1 ( TYPE_1 : : new ) . METHOD_2 ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { com.google.gerrit.reviewdb.client.Account.Id id = new com.google.gerrit.reviewdb.client.Account.Id ( VAR_1 . METHOD_2 ( TYPE_3 . getName ( ) ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; return VAR_2 . get ( ) . get ( id ) ; } 
public void delete ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { } 
protected void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; factory ( VAR_2 . Factory class ) ; factory ( VAR_3 . Factory class ) ; factory ( VAR_5 . Factory class ) ; } 
protected TYPE_1 METHOD_1 ( ) { return server . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { servlet = new TYPE_1 ( VAR_1 ) ; id = new com.google.gerrit.reviewdb.client.Account.Id ( VAR_2 ) ; TYPE_3 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) . METHOD_5 ( ( STRING_1 + ( VAR_2 ) ) ) ; } 
void METHOD_1 ( TYPE_1 . NameKey projectName , java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_2 < java.util.List < TYPE_3 . Branch > > VAR_3 ) ; 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( e . getValue ( ) ) ; if ( ( view ) != null ) { view . METHOD_3 ( ) ; } } 
public TYPE_1 . Result METHOD_1 ( TYPE_2 edit , java.lang.String file , TYPE_3 VAR_1 ) throws TYPE_4 , TYPE_5 , java.io.IOException { return METHOD_2 ( VAR_2 , edit , file , null , VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { TYPE_1 r = VAR_2 . METHOD_2 ( VAR_1 ) ; r . METHOD_3 ( ) ; return r ; } 
public TYPE_1 user ( TYPE_2 user ) { return METHOD_1 ( ) . equals ( user ) ? this : METHOD_2 ( user ) . METHOD_3 ( cd , db ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( VAR_1 ) ; } 
public void onSuccess ( TYPE_1 < TYPE_2 < TYPE_3 > > result ) { VAR_1 = METHOD_1 ( result . get ( path ) ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; close . METHOD_2 ( true ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ( ! VAR_1 ? VAR_4 : VAR_5 ) ) ; } 
public com.google.gerrit.reviewdb.client.PatchSet update ( com.google.gerrit.reviewdb.client.PatchSet VAR_1 ) { if ( VAR_1 . METHOD_1 ( ) ) { VAR_1 . METHOD_2 ( false ) ; return VAR_1 ; } return null ; } 
static TYPE_1 METHOD_1 ( java.lang.String name , int value ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; TYPE_3 . METHOD_2 ( value , 0 , VAR_1 ) ; return new TYPE_1 ( name , VAR_1 . get ( ) ) ; } 
public TYPE_1 changes ( ) { return changes ; } 
public void run ( ) { METHOD_4 ( ) ; } 
public void onSuccess ( TYPE_1 . ChangeInfo result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( project , new com.google.gerrit.reviewdb.client.PatchSet.Id ( result . METHOD_2 ( ) , 1 ) , STRING_1 ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 . OrmException { db . create ( ) ; final TYPE_2 config = db . METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 , 1 , 1 ) ; } 
private TYPE_1 METHOD_1 ( ) { final TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; final TYPE_1 r ; r = new TYPE_1 ( VAR_1 , new TYPE_3 ( db ) ) ; VAR_2 . METHOD_3 ( VAR_1 , r ) ; return r ; } 
private void METHOD_1 ( TYPE_1 . HttpServletResponse res , TYPE_2 VAR_1 ) throws java.io.IOException { try ( TYPE_2 in = VAR_1 ; TYPE_3 out = res . METHOD_2 ( ) ) { TYPE_4 . METHOD_3 ( in , out ) ; } } 
public abstract java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 ... args ) ; 
java.util.Set < TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id changeId , java.lang.String query , java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > VAR_1 ) ; 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; } } 
private static void METHOD_1 ( java.lang.StringBuilder VAR_1 , TYPE_1 VAR_2 , TYPE_2 ... values ) { TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; for ( TYPE_2 value : values ) { VAR_1 . append ( value ) ; } VAR_1 . append ( CHAR_1 ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) throws TYPE_3 { return VAR_1 ; } 
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( VAR_2 ) ; } } 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ; } return VAR_1 ; } 
public TYPE_1 get ( ) { return new TYPE_1 ( ui , VAR_2 ) ; } 
public java.lang.String name ( ) { return name ; } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( args , change , false , null ) . METHOD_2 ( ) ; } 
public static boolean METHOD_1 ( java.lang.String ref ) { return ( ( ref != null ) && ( ref . METHOD_2 ( VAR_1 ) ) ) && ( ref . contains ( VAR_2 ) ) ; } 
public TYPE_1 create ( com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , id , null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_4 , VAR_5 ) ; METHOD_4 ( VAR_1 . changeId , VAR_4 , VAR_6 ) ; assertThat ( VAR_7 ) . METHOD_5 ( ) ; } 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ; VAR_1 . METHOD_6 ( true ) ; } return VAR_1 ; } 
public int run ( ) throws java.lang.Exception { TYPE_3 . METHOD_2 ( false ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) . close ( ) ; VAR_2 . METHOD_5 ( STRING_1 ) ; return 0 ; } 
public boolean equals ( TYPE_1 VAR_1 ) { if ( ! ( VAR_1 instanceof TYPE_2 ) ) { return false ; } TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; return VAR_3 . equals ( VAR_4 ) ; } 
protected TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) { return view ; } 
public static void get ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String path , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . get ( project , id , path , false , VAR_1 ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return java.util.Collections . METHOD_2 ( VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 . Result r , java.lang.String message ) throws java.lang.Exception { METHOD_1 ( r , message , false , false , null ) ; } 
private java.lang.String format ( java.lang.String s ) { if ( ( s . length ( ) ) < ( VAR_1 ) ) { return s ; } return s . METHOD_1 ( 0 , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 c ) { METHOD_2 ( c ) ; TYPE_2 . METHOD_3 ( ( ( c . getStatus ( ) ) == ( VAR_1 ) ) , STRING_1 ) ; put . add ( c ) ; } 
private TYPE_1 . ChangeInfo METHOD_1 ( TYPE_2 . Result r ) throws java.lang.Exception { return METHOD_1 ( r . getChangeId ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( this ) ; } 
public static TYPE_1 create ( ) { final TYPE_1 r = new TYPE_1 ( ) ; r . singleton = new TYPE_1 . Key ( ) ; return r ; } 
public static java.lang.String METHOD_1 ( final java.lang.String type , final TYPE_1 . Key id ) { return ( ( STRING_1 + type ) + STRING_2 ) + ( id . toString ( ) ) ; } 
private void METHOD_1 ( final java.lang.String in ) throws java.lang.Exception { org.junit.Assert.assertEquals ( in , METHOD_2 ( in ) ) ; } 
void METHOD_1 ( ) { VAR_2 . METHOD_4 ( VAR_1 , this ) ; } 
void insert ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public java.util.List < com.google.gerrit.reviewdb.client . AccountGroup > get ( ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 in ) throws TYPE_2 { try { VAR_1 . apply ( change , in ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > p = METHOD_2 ( STRING_1 ) ; org.junit.Assert . METHOD_3 ( p , TYPE_2 . METHOD_4 ( p , STRING_2 ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { try { VAR_2 . apply ( VAR_3 , VAR_1 ) ; } catch ( java.lang.Exception e ) { throw TYPE_2 . METHOD_3 ( STRING_1 , e ) ; } } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { com.google.common.truth.Truth.assertThat ( VAR_2 ) . isEqualTo ( ( STRING_1 + VAR_1 ) ) ; } 
private static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( TYPE_2 < TYPE_3 < com.google.gerrit.server.query.change.ChangeData , ? > > VAR_1 ) { return new TYPE_1 ( true , VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( ) { switch ( VAR_1 ) { case VAR_2 : return TYPE_2 . METHOD_2 ( false ) ; case VAR_3 : return TYPE_3 . METHOD_2 ( false ) ; default : throw new TYPE_4 ( ( STRING_1 + ( VAR_1 ) ) ) ; } } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_1 config = new TYPE_1 ( new TYPE_3 ( projectName , VAR_1 ) , new TYPE_5 ( ) ) ; return config ; } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 { return METHOD_2 ( project ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String project , java.lang.String input ) { return input == null ? input : input . METHOD_1 ( STRING_1 , project ) ; } 
public void onSuccess ( final TYPE_1 result ) { TYPE_2 . display ( VAR_1 ) ; } 
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( projectName , true ) ; } } 
public abstract void METHOD_1 ( ) ; 
private TYPE_1 METHOD_1 ( java.lang.String name ) throws java.lang.Exception { TYPE_2 req = TYPE_2 . METHOD_2 ( name ) ; com.google.gerrit.reviewdb.client.Account.Id id = VAR_1 . METHOD_3 ( req ) . getAccountId ( ) ; return VAR_2 . create ( id ) ; } 
static TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) , 0 , 0 , 0 ) ; } 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id account ) throws com.google.gwtorm.server.OrmException { TYPE_1 VAR_1 = VAR_2 . create ( account ) ; return rsrc . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; } 
public void onSuccess ( java.lang.String result ) { TYPE_1 edit = new TYPE_1 ( id , result , path , VAR_1 , VAR_2 , VAR_3 ) ; edit . METHOD_2 ( ) ; } 
private TYPE_1 METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; if ( ( VAR_1 ) == null ) { VAR_1 = repo . METHOD_3 ( ) . METHOD_4 ( ) ; } return VAR_1 ; } 
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; VAR_2 . METHOD_2 ( false ) ; VAR_1 = null ; } } 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( TYPE_3 . css ( ) . METHOD_3 ( ) ) ; VAR_2 . add ( VAR_1 ) ; } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( java.lang.String format ) throws TYPE_2 { VAR_1 . METHOD_2 ( format ) ; return VAR_1 . apply ( revision ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_2 , VAR_3 , VAR_3 . getKey ( ) . get ( ) ) ; METHOD_2 ( VAR_2 , null , STRING_1 ) ; } 
public TYPE_1 create ( TYPE_2 VAR_1 , com.google.gerrit.reviewdb.client.Change . Id id ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = new TYPE_2 ( new TYPE_3 ( STRING_1 ) ) ; repo = new TYPE_4 ( r ) ; servlet = TYPE_5 . create ( repo ) ; } 
void METHOD_1 ( boolean on ) { VAR_1 = on ; if ( ( table ) != null ) { table . METHOD_2 ( on ) ; } } 
protected java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String type ) { return METHOD_2 ( VAR_1 , type , VAR_2 ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_2 ) ; 
public TYPE_1 METHOD_1 ( TYPE_1 in ) throws TYPE_2 { try { return VAR_1 . apply ( account , in ) ; } catch ( java.io.IOException | TYPE_3 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
java.lang.String METHOD_1 ( ) ; 
public java.lang.String format ( java.lang.String projectName , TYPE_1 cfg , java.lang.String VAR_1 ) throws java.io.IOException ; 
private com.google.gerrit.reviewdb.client . PatchSetApproval METHOD_1 ( com.google.gerrit.reviewdb.client . PatchSetApproval VAR_1 , TYPE_1 ctl ) { return new com.google.gerrit.reviewdb.client . PatchSetApproval ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; } 
private static final native void METHOD_1 ( java.lang.String e , java.lang.String r , java.lang.String VAR_1 ) ; 
protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo , org.eclipse.jgit.revwalk.RevCommit commit ) throws java.lang.Exception { return METHOD_2 ( repo , commit , null , null , null ) ; } 
private static TYPE_1 METHOD_1 ( final TYPE_2 cfg ) { return TYPE_4 . METHOD_3 ( cfg , STRING_1 , null , STRING_2 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; servlet = TYPE_5 . create ( repo ) ; } 
public TYPE_1 create ( com.google.gerrit.reviewdb.client.Change . Id changeId , com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , changeId , VAR_1 ) ; } 
public static void METHOD_1 ( java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_2 < TYPE_1 > VAR_3 ) { TYPE_3 . revision ( project , id , STRING_1 ) . id ( VAR_1 ) . put ( VAR_2 , VAR_3 ) ; } 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( METHOD_2 ( ) ) || ( METHOD_3 ( db ) ) ; } 
TYPE_1 METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = TYPE_3 . get ( config . METHOD_2 ( ) . METHOD_3 ( ) ) ; TYPE_4 . METHOD_4 ( VAR_1 ) ; return VAR_1 ; } 
private static void a ( final java.lang.StringBuilder r , final java.lang.String VAR_1 ) { TYPE_2 . METHOD_1 ( r , STRING_1 , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; org.junit.Assert.assertEquals ( query ( in ) , METHOD_3 ( in ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) ; METHOD_2 ( VAR_1 , VAR_2 , STRING_2 ) ; METHOD_3 ( STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_2 ) ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; METHOD_2 ( ) . to ( VAR_2 class ) ; METHOD_2 ( ) . to ( VAR_3 class ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_2 ( project , STRING_1 , VAR_2 , false , VAR_3 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > p ) throws TYPE_3 { return new TYPE_1 ( p , index ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String query , java.lang.String VAR_1 ) { return ( ( STRING_3 + ( TYPE_1 . METHOD_2 ( query ) ) ) + STRING_4 ) + VAR_1 ; } 
public void onSuccess ( final TYPE_1 result ) { VAR_1 = result . config ; if ( ( result . account ) != null ) { VAR_3 = result . account ; TYPE_2 . METHOD_1 ( ) ; } METHOD_2 ( VAR_4 ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_3 . contains ( VAR_1 ) ; } 
private boolean METHOD_1 ( final com.google.gerrit.reviewdb.client.Change VAR_1 ) { return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . contains ( VAR_1 . getId ( ) ) ; } 
void METHOD_1 ( ) { this . VAR_1 = true ; METHOD_2 ( ) ; } 
public static void edit ( int id , TYPE_1 < TYPE_3 > VAR_1 ) { TYPE_4 . edit ( id ) . get ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; } 
private void METHOD_1 ( final java.lang.String n ) throws com.google.gwtorm.server.OrmException { if ( VAR_1 . contains ( n ) ) { throw new com.google.gwtorm.server.OrmException ( ( ( STRING_1 + n ) + STRING_2 ) ) ; } } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; } 
public boolean METHOD_1 ( java.lang.String url ) { return ui . METHOD_2 ( false , STRING_1 , url ) ; } 
protected abstract TYPE_1 < ? > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) ; 
public java.util.List < TYPE_1 > METHOD_1 ( ) throws TYPE_2 { try { return VAR_1 . apply ( change ) . value ( ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public static TYPE_1 METHOD_1 ( ) { return TYPE_1 . create ( 0 , 0 , VAR_1 ) ; } 
private TYPE_1 . ProjectConfig METHOD_1 ( boolean VAR_1 ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , VAR_1 , true ) ; } 
protected java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String type ) { return TYPE_1 . METHOD_2 ( VAR_1 , type , VAR_2 . METHOD_4 ( ) ) ; } 
public static TYPE_1 reviewers ( java.lang.String project , int id ) { return TYPE_2 . change ( project , id ) . view ( STRING_1 ) ; } 
public TYPE_1 create ( com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , id ) ; } 
public void onSuccess ( TYPE_1 result ) { VAR_1 . update ( result ) ; } 
public static TYPE_1 create ( java.lang.String VAR_1 , java.lang.String id , com.google.gerrit.reviewdb.client.Account.Id VAR_2 ) { return TYPE_1 . create ( TYPE_3 . create ( VAR_1 , id ) , VAR_2 , null , null ) ; } 
private void METHOD_1 ( ) { TYPE_1 . HttpServletResponse VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . HttpServletResponse class ) ; servlet . METHOD_3 ( null , VAR_1 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_3 ) ; } 
private static void METHOD_1 ( final java.lang.String [ ] VAR_1 ) throws TYPE_1 , TYPE_2 . OrmException { TYPE_3 . METHOD_2 ( false ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) . close ( ) ; VAR_2 . METHOD_5 ( STRING_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( TYPE_1 . METHOD_2 ( ( ( java.lang.String ) ( null ) ) ) ) . isEmpty ( ) ; } 
TYPE_1 create ( TYPE_2 change , com.google.gerrit.reviewdb.client.Account.Id id ) ; 
public static TYPE_1 . Change METHOD_1 ( TYPE_2 . ChangeInfo VAR_1 ) { return new TYPE_1 . Change ( VAR_1 . project , VAR_2 , VAR_1 . id , VAR_1 . topic , VAR_1 . branch ) ; } 
public TYPE_1 < TYPE_2 , ? > create ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 { if ( id . toString ( ) . equals ( STRING_1 ) ) { return VAR_2 . get ( ) ; } throw new TYPE_5 ( id ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ! ( label ( VAR_1 . METHOD_2 ( ) . get ( ) ) . isEmpty ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) . to ( VAR_1 class ) ; } 
public void onSuccess ( final TYPE_1 result ) { VAR_1 . display ( result ) ; } 
protected void METHOD_1 ( ) { factory ( VAR_2 . Factory class ) ; } 
protected void METHOD_1 ( int row , int VAR_1 ) { METHOD_3 ( row ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_2 . create ( VAR_1 ) . METHOD_3 ( ) ; } throw new TYPE_2 ( STRING_1 ) ; } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ; } 
com.google.gerrit.reviewdb.client . PatchSetApproval METHOD_1 ( TYPE_1 c ) { return VAR_1 . METHOD_1 ( db . get ( ) , c . notes ( ) , VAR_2 ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String ref ) { return ref . METHOD_2 ( VAR_1 ) ? ref : ( VAR_2 ) + ref ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( schema , VAR_2 , VAR_1 ) ; } 
protected void METHOD_1 ( ) { bind ( VAR_4 class ) ; factory ( VAR_5 class ) ; bind ( VAR_6 class ) ; bind ( VAR_7 . Factory class ) ; } 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( ctl . getId ( ) ) ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; factory ( VAR_3 . Factory class ) ; } 
protected TYPE_1 METHOD_1 ( com.google.gerrit.server.query.change.ChangeData VAR_1 ) throws com.google.gwtorm.server.OrmException { return TYPE_2 . get ( VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_4 VAR_2 ) { TYPE_2 VAR_3 = TYPE_3 . create ( ) ; VAR_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; } 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > delete ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 , java.lang.String name ) { return new TYPE_3 ( view ( VAR_1 , VAR_2 , name ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . put ( STRING_1 ) ; com.google.common.truth.Truth.assertThat ( r . METHOD_2 ( ) ) . isEqualTo ( VAR_2 ) ; } 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { commands = ( VAR_1 . isEmpty ( ) ) ? null : VAR_1 ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_1 == ( VAR_2 ) ) && ( ( base . METHOD_2 ( ) ) || ( base . METHOD_3 ( ) ) ) ) { return VAR_3 ; } return VAR_4 ; } 
private TYPE_1 METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { TYPE_2 r = new TYPE_3 ( cd ) . METHOD_1 ( ) ; if ( ( r . status ) != ( VAR_1 ) ) { return null ; } return r . type ; } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { int VAR_3 = ( METHOD_2 ( VAR_1 ) ) ? 1 : 0 ; int r = ( METHOD_2 ( VAR_2 ) ) ? 1 : 0 ; return r - VAR_3 ; } 
public void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . display ( VAR_1 ) ; } 
void METHOD_1 ( TYPE_1 . NameKey VAR_1 ) throws java.io.IOException ; 
private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , TYPE_2 . METHOD_2 ( ) , METHOD_3 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , java.lang.String VAR_3 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , ( ( VAR_1 + STRING_1 ) + VAR_2 ) , false , null , VAR_2 , VAR_3 , true , null ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 ) { VAR_1 = ( TYPE_1 . isEmpty ( VAR_1 ) ) ? null : VAR_1 ; VAR_2 . METHOD_1 ( TYPE_2 . getVm ( ) , VAR_1 ) ; } 
public void METHOD_1 ( ) { command . METHOD_2 ( ) ; TYPE_1 . assertEquals ( VAR_1 , command . METHOD_3 ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return VAR_1 . getName ( ) . equals ( iface . METHOD_2 ( ) ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return java.lang.Integer . valueOf ( 0 ) ; } return source ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
public final int METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return ( ( java.lang.Integer ) ( getValue ( VAR_2 , name , VAR_1 ) ) ) . METHOD_3 ( ) ; } 
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , METHOD_3 ( ) ) ; validate ( ) ; METHOD_5 ( ) . METHOD_6 ( this , VAR_2 ) ; } 
TYPE_1 . Disk get ( ) ; 
public org.ovirt.engine.core.compat.Guid getId ( ) { return ( METHOD_1 ( ) ) == null ? null : METHOD_1 ( ) . getId ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( iface , network , VAR_1 , VAR_2 , cluster ) ; } 
public void METHOD_1 ( ) { parameters . METHOD_2 ( TYPE_1 ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . getId ( ) ) ) . thenReturn ( null ) ; TYPE_2 . METHOD_4 ( command , VAR_2 ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , final TYPE_1 status ) { METHOD_1 ( vm , status , VAR_2 , VAR_3 , VAR_4 ) ; } 
private static TYPE_1 . DiskImage METHOD_1 ( long VAR_1 ) { TYPE_1 . DiskImage image = new TYPE_1 . DiskImage ( ) ; image . METHOD_2 ( VAR_1 ) ; return image ; } 
protected abstract java.lang.Object getValue ( TYPE_1 type , java.lang.String name , java.lang.String VAR_1 ) ; 
protected void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( true ) ; } 
protected void METHOD_1 ( ) { } 
private TYPE_1 < ? > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) . getId ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( validator . METHOD_3 ( TYPE_2 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) ) ) , TYPE_4 . METHOD_7 ( VAR_1 ) ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( getVm ( ) . getStoragePoolId ( ) , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( TYPE_2 . METHOD_3 ( new org.ovirt.engine.core.common.businessentities.VM [ ] { getVm ( ) } ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_2 , METHOD_3 ( ) , true , VAR_1 , null ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel model ) { return ! ( ( ( model . getEntity ( ) ) != null ) && ( ! ( model . getEntity ( ) . equals ( STRING_1 ) ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , false , true , TYPE_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : TYPE_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_4 ( VAR_1 . getId ( ) ) ; TYPE_3 . METHOD_5 ( VAR_2 , METHOD_6 ( VAR_1 . getStatus ( ) ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool result = dao . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( result ) ; } 
public java.lang.String toString ( ) { return VAR_1 . toString ( ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 , TYPE_3 < TYPE_2 > VAR_3 ) { TYPE_4 . METHOD_2 ( ) . METHOD_3 ( ( VAR_1 == null ? TYPE_4 . METHOD_4 ( ) : VAR_1 ) , VAR_2 , VAR_3 ) ; } 
java.lang.String METHOD_1 ( java.lang.String size ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( false ) ; METHOD_6 ( resource . get ( ) , 2 ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.String image ) { return TYPE_2 . METHOD_2 ( VAR_1 ) . when ( ( ( ( host . METHOD_4 ( ) ) == ( VAR_2 ) ) && ( TYPE_3 . METHOD_5 ( image ) ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 . getId ( ) ; } return VAR_2 ; } 
public TYPE_1 METHOD_2 ( ) { return TYPE_2 . getInstance ( ) . METHOD_2 ( ) ; } 
public TYPE_1 METHOD_3 ( ) { return METHOD_2 ( ) . METHOD_3 ( ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage disk ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( disk . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( disk . METHOD_4 ( ) ) ; METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; } 
public void METHOD_2 ( final java.util.List < TYPE_1 . VdcQueryType > VAR_1 , final java.util.List < TYPE_2 > VAR_2 , final TYPE_3 VAR_3 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null ) ; } 
public static org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return id ; } 
public void METHOD_1 ( java.lang.String value ) { METHOD_1 ( value , true ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( nic , null ) ) ; } 
public void METHOD_1 ( ) { dao . METHOD_3 ( VAR_1 ) ; final TYPE_1 VAR_2 = dao . get ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_2 . getId ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; setItems ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 action ) { action . METHOD_2 ( TYPE_4 . value ( ) ) ; return TYPE_1 . METHOD_4 ( ) . entity ( action ) . METHOD_5 ( ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; METHOD_2 ( ) ; } 
protected boolean validate ( ) { METHOD_2 ( STRING_1 , TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; return true ; } 
public void METHOD_1 ( TYPE_1 result ) { if ( model != null ) { model . METHOD_2 ( ) ; } if ( result . getReturnValue ( ) . getSucceeded ( ) ) { METHOD_3 ( ) ; } } 
public void METHOD_1 ( ) { final byte [ ] VAR_1 = TYPE_1 . METHOD_1 ( TYPE_2 . METHOD_3 ( ) ) ; TYPE_3 . METHOD_4 ( VAR_1 ) ; TYPE_3 . assertEquals ( INT_1 , VAR_1 . length ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 cluster = new TYPE_1 ( ) ; cluster . setId ( VAR_1 ) ; cluster . METHOD_2 ( true ) ; cluster . METHOD_3 ( true ) ; return cluster ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.compat . Version VAR_1 , org.ovirt.engine.core.compat . Version VAR_2 ) { if ( VAR_1 == null ) { return VAR_2 == null ; } return VAR_1 . equals ( VAR_2 ) ; } 
org.ovirt.engine.core.compat.Guid METHOD_1 ( ) ; 
private TYPE_1 . ValidationResult METHOD_1 ( ) { return ( TYPE_2 . METHOD_2 ( ) . get ( METHOD_3 ( ) . getId ( ) ) ) == null ? new TYPE_1 . ValidationResult ( VAR_1 ) : VAR_2 ; } 
public TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_2 . VdcActionParametersBase parameters , TYPE_3 context ) { return TYPE_5 . METHOD_2 ( VAR_1 , parameters , context ) . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { return METHOD_2 ( action , null , null , ( action . METHOD_3 ( ) ? action . METHOD_4 ( ) : false ) ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . toString ( ) ; java.lang.String VAR_2 = TYPE_1 . name ( ) ; TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) ; } 
private static org.ovirt.engine.core.common.businessentities.StoragePool METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool pool = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; pool . METHOD_2 ( VAR_1 ) ; return pool ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( VAR_2 . METHOD_2 ( ) ) ; return VAR_1 ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . setEntity ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
protected java.util.ArrayList < TYPE_1 . DiskImage > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate template ) { return new java.util.ArrayList ( template . METHOD_2 ( ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( vds ) ; } 
public boolean validate ( boolean VAR_1 ) { return validate ( true , VAR_1 ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return TYPE_1 . getInstance ( ) . METHOD_1 ( getEntity ( ) ) ; } 
public TYPE_1 get ( ) { return METHOD_1 ( ) ; } 
void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.lang.String VAR_1 ) ; 
public void METHOD_1 ( TYPE_1 event ) { if ( ( event . getSelectedItem ( ) ) != null ) { VAR_1 . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( TYPE_3 . from ( event . getSelectedItem ( ) ) ) ) ; } } 
public org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup ( ) { return VAR_1 ; } 
protected void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_1 ( ) { METHOD_2 ( false , true , VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 , host , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; } 
public void METHOD_1 ( ) { diskImage . METHOD_2 ( VAR_1 . getId ( ) ) ; map . put ( diskImage , VAR_2 ) ; TYPE_1 . assertEquals ( VAR_5 , VAR_3 . METHOD_3 ( map , VAR_4 ) ) ; } 
protected TYPE_1 . AddVmCommand < TYPE_2 > METHOD_1 ( ) { METHOD_2 ( ) ; return new TYPE_1 . AddVmCommand ( new TYPE_2 ( vm ) , null ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ( ( ( java.util.List < java.lang.String > ) ( source ) ) . size ( ) ) > 0 ; } return false ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { TYPE_1 VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( vmId ) ; TYPE_2 . METHOD_3 ( VAR_1 . getStatus ( ) ) ; TYPE_2 . METHOD_5 ( vmId ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_1 ( VAR_1 , INT_1 , INT_2 , VAR_2 , new org.ovirt.engine.core.compat . Version ( ) ) ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 template ) { TYPE_3 . METHOD_2 ( VAR_1 , template , null , false ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return new TYPE_1 ( VAR_2 , STRING_1 , STRING_1 , VAR_1 , STRING_1 , null , STRING_1 , METHOD_2 ( VAR_2 ) , false , false ) ; } 
private void METHOD_1 ( int VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_3 ( METHOD_4 ( VAR_1 ) ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return TYPE_1 . equals ( i . METHOD_2 ( ) , VAR_1 . getName ( ) ) ; } 
public < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > METHOD_1 ( TYPE_4 < TYPE_1 > VAR_1 , TYPE_5 ... VAR_2 ) { return new TYPE_6 < > ( ( ( TYPE_1 ) ( VAR_3 . get ( VAR_1 ) ) ) ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( VAR_1 == null ) || ( ( VAR_1 . getStatus ( ) ) != ( VAR_2 . getStatus ( ) ) ) ; } 
protected boolean METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , true , false , true ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; return validate ( VAR_2 . METHOD_4 ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_2 ( ) ) ; command = org.mockito.Mockito . METHOD_3 ( new TYPE_1 ( VAR_1 , null ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_4 ( ) ; return command ; } 
public void onSuccess ( java.lang.Object returnValue ) { METHOD_1 ( ( ( TYPE_1 ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { iface . METHOD_2 ( null ) ; TYPE_1 . METHOD_4 ( METHOD_5 ( ) . METHOD_6 ( ) , TYPE_2 . METHOD_7 ( true ) ) ; } 
public abstract < TYPE_1 > TYPE_1 getValue ( TYPE_2 VAR_1 , java.lang.String version ) ; 
public void METHOD_1 ( int value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( this . VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) { return this . VAR_2 . get ( VAR_1 . METHOD_3 ( ) ) ; } return null ; } 
public void METHOD_1 ( java.lang.Integer VAR_1 ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; METHOD_4 ( ) ; } 
public java.lang.String METHOD_1 ( TYPE_2 value ) { return value . METHOD_3 ( ) ? VAR_1 . METHOD_4 ( ) : VAR_1 . METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( this . getName ( ) , VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_1 ( true ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.ArrayList < TYPE_2 . VdcActionParametersBase > parameters ) { return METHOD_2 ( VAR_1 , parameters , true , false , false ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String network , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface ... VAR_1 ) { TYPE_1 params = METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( TYPE_2 . METHOD_4 ( network ) ) ; return params ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( constants . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( 1 , false ) ; METHOD_6 ( resource . get ( ) , 1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Network network = new TYPE_1 . Network ( ) ; network . setId ( VAR_1 ) ; TYPE_2 . METHOD_2 ( network ) ; assertEquals ( VAR_2 , network . METHOD_4 ( ) ) ; } 
public TYPE_1 . VdcActionParametersBase METHOD_1 ( final org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { final TYPE_3 params = new TYPE_3 ( VAR_1 . getId ( ) , new org.ovirt.engine.core.compat.Guid ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; params . METHOD_4 ( true ) ; return params ; } 
public void onSuccess ( TYPE_1 cluster ) { VAR_2 . METHOD_1 ( ) . setItems ( returnValue , cluster ) ; } 
public java.lang.String METHOD_1 ( TYPE_2 quota ) { java.lang.String VAR_1 = TYPE_3 . getInstance ( ) . METHOD_2 ( quota . METHOD_3 ( ) ) ; return VAR_1 ; } 
public java.lang.String getValue ( TYPE_1 model ) { return model . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( id , VAR_1 . METHOD_1 ( ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 action , TYPE_3 . VdcActionType VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_5 ( VAR_3 ) , action ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_1 ( VAR_1 . getId ( ) , VAR_1 . METHOD_2 ( ) , TYPE_4 . METHOD_3 ( VAR_1 ) ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( getVdsGroup ( ) ) != null ) { return getVdsGroup ( ) . METHOD_2 ( ) ; } return STRING_1 ; } 
private void METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities.network.Network network : VAR_1 ) { VAR_2 . put ( network . getName ( ) , new TYPE_1 ( network ) ) ; } } 
public void onSuccess ( TYPE_1 result ) { VAR_1 . METHOD_1 ( STRING_1 ) ; VAR_2 . onSuccess ( result ) ; } 
private java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { return VAR_1 . METHOD_2 ( ) ; } return null ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , TYPE_2 . VdcActionType VAR_3 ) { return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , null , new java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_3 > ( ) ) ; } 
public abstract void METHOD_1 ( ) ; 
public void METHOD_1 ( boolean value ) { VAR_1 . METHOD_1 ( value ) ; } 
protected boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( METHOD_2 ( VAR_1 ) ) { return METHOD_3 ( VAR_1 ) ; } return true ; } 
public void setEntity ( org.ovirt.engine.core.common.businessentities.network.Network value ) { super . setEntity ( value ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 == VAR_2 ? VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) : VAR_3 . METHOD_4 ( VAR_1 . getName ( ) , VAR_1 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; } 
public final boolean METHOD_1 ( ) { return false ; } 
private boolean METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = VAR_3 < java.lang.String > getValue ( VAR_4 ) ; return ( TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 ) ) >= 0 ; } 
public TYPE_1 get ( ) { return METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ) ; } 
protected boolean METHOD_1 ( ) { return ( ( TYPE_1 . getVm ( ) . getStatus ( ) ) == ( VAR_1 ) ) && ( ! ( TYPE_2 . equals ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { if ( ( i . METHOD_2 ( ) ) != null ) { return i . METHOD_2 ( ) . equals ( getParameters ( ) . METHOD_3 ( ) . getName ( ) ) ; } return false ; } 
public void METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , null ) ; TYPE_3 . assertEquals ( STRING_2 , STRING_3 , VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { org.mockito.Mockito.when ( VAR_3 . get ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( diskImage . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_6 ( ) ; METHOD_7 ( VAR_1 ) ; return null ; } 
public void setTitle ( java.lang.String VAR_1 ) { METHOD_1 ( ) . setTitle ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_3 ( ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true ) ; } 
protected TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) ? TYPE_2 . getParameters ( ) . METHOD_3 ( ) : VAR_1 ; } 
public synchronized TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_4 . METHOD_2 ( METHOD_3 ( ) . get ( VAR_3 class ) ) ; } return VAR_1 ; } 
public static java.lang.String METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) return STRING_1 ; else return VAR_1 < java.lang.String > getValue ( VAR_2 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , boolean VAR_3 ) throws java.lang.Exception { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , null ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool storage ) { return storage . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = null ; assertEquals ( TYPE_2 . METHOD_2 ( VAR_1 ) , VAR_3 ) ; } 
public java.lang.String METHOD_1 ( java.lang.Object object ) { java.lang.String VAR_1 = super . METHOD_1 ( object ) ; if ( VAR_1 == null ) { return VAR_2 . METHOD_3 ( ) ; } return VAR_1 ; } 
public java.lang.String METHOD_1 ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( object ) ) . getName ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { try ( TYPE_2 VAR_2 = METHOD_2 ( ) ) { METHOD_4 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( 1 , dao . METHOD_2 ( VAR_1 ) ) ; } 
private static java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 , TYPE_4 { return VAR_2 . METHOD_2 ( VAR_1 ) . get ( 1 , VAR_3 ) ; } 
private boolean METHOD_1 ( ) { return VAR_1 < java.lang.Boolean > getValue ( VAR_2 ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return new java.util.ArrayList ( TYPE_2 . METHOD_2 ( new TYPE_1 [ ] { VAR_1 , VAR_2 , VAR_3 } ) ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 . VdcActionType VAR_1 ) { return METHOD_1 ( VAR_1 , VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { return ! ( VAR_1 . METHOD_2 ( ) . equals ( METHOD_3 ( ) . METHOD_4 ( ) ) ) ; } 
public TYPE_1 getValue ( java.lang.Object vm ) { if ( VAR_1 . METHOD_1 ( vm ) ) { return METHOD_2 ( ) . METHOD_3 ( ) ; } return null ; } 
private void METHOD_1 ( TYPE_1 status ) { METHOD_2 ( status ) ; METHOD_3 ( ) ; METHOD_5 ( ) ; } 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { try { return METHOD_2 ( VAR_1 , VAR_2 ) ; } catch ( TYPE_3 e ) { VAR_3 . METHOD_3 ( e . toString ( ) ) ; return null ; } } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { METHOD_2 ( ) . METHOD_1 ( vds . getId ( ) , VAR_1 , true , VAR_3 , VAR_2 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , int VAR_1 ) { METHOD_2 ( METHOD_3 ( vmId ) , VAR_1 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return TYPE_1 . METHOD_2 ( VAR_1 , i . METHOD_3 ( ) ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 ) . when ( ( ( host . getStatus ( ) ) != ( VAR_2 ) ) ) ; } 
public org.ovirt.engine.core.common.businessentities.VDS getValue ( org.ovirt.engine.core.common.businessentities.VDS object ) { return object ; } 
public void METHOD_1 ( ) { final TYPE_1 . DiskImage diskImage = ( ( TYPE_1 . DiskImage ) ( METHOD_2 ( ) ) ) ; diskImage . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( diskImage . METHOD_5 ( ) , VAR_1 ) ; } 
protected java.lang.String METHOD_1 ( ) { return java.lang.String . METHOD_2 ( STRING_1 , version ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { try ( TYPE_1 VAR_2 = METHOD_2 ( ) ) { METHOD_4 ( VAR_1 ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { TYPE_3 params = new TYPE_3 ( vmId , VAR_3 ) ; return METHOD_2 ( VAR_4 , params , action ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_3 = dao . METHOD_4 ( VAR_4 ) ; VAR_5 = dao . METHOD_4 ( VAR_6 ) ; } 
public boolean METHOD_1 ( ) { return true ; } 
public static java.lang.Integer METHOD_1 ( ) { java.lang.Integer VAR_1 = ( ( java.lang.Integer ) ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) ; if ( VAR_1 == null ) { return INT_1 ; } return VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 user , java.lang.String domain ) { return METHOD_1 ( user , domain , true , true ) ; } 
protected java.lang.String METHOD_1 ( ) { return ( ( java.lang.String ) ( TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 ) ) ) ; } 
public boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) != null ? VAR_1 . METHOD_2 ( ) . getEntity ( ) : false ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_5 ( ( ( VAR_1 . size ( ) ) > 0 ) ) ; } 
public static void METHOD_1 ( final TYPE_1 popup , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_1 ( popup , VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , 0 ) ; } 
public void METHOD_1 ( ) { command . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( command . validate ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , command , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( dao . METHOD_3 ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; TYPE_2 . METHOD_5 ( command , VAR_4 ) ; } 
public void METHOD_1 ( java.lang.Boolean value ) { VAR_1 = value ; } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; try { TYPE_3 . METHOD_1 ( METHOD_3 ( ) ) ; } finally { if ( VAR_1 != null ) { TYPE_2 . METHOD_4 ( VAR_1 ) ; } } } 
void METHOD_1 ( TYPE_1 < TYPE_2 , ? > column , TYPE_3 VAR_1 , java.lang.String VAR_2 ) ; 
protected java.lang.Integer METHOD_1 ( ) { return VAR_1 < java.lang.Integer > getValue ( VAR_2 ) ; } 
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return false ; } return VAR_1 . METHOD_1 ( ) ; } 
public synchronized org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_4 = TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_4 ) ; return VAR_4 == null ? VAR_5 : VAR_4 . METHOD_4 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( host , params , VAR_1 , VAR_2 , new TYPE_2 ( VAR_3 ) , VAR_4 , VAR_5 , VAR_6 , VAR_7 , new TYPE_3 ( ) , VAR_8 ) ; } 
public TYPE_1 METHOD_1 ( long VAR_1 , long VAR_2 ) { return METHOD_1 ( new TYPE_1 ( VAR_1 , VAR_2 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_2 . METHOD_3 ( command ) ; } 
public TYPE_1 list ( ) { return METHOD_1 ( METHOD_2 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ) ) ; } 
public java.lang.String METHOD_1 ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.network.Network ) ( object ) ) . getName ( ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( getEntity ( ) . getId ( ) ) , null , true , true ) ; } 
static TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 . Disk , TYPE_4 < TYPE_5 > , TYPE_6 > VAR_1 ) { return new TYPE_7 ( VAR_2 . METHOD_2 ( ) , 2 , VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( true ) ; TYPE_2 . METHOD_6 ( command . validate ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; METHOD_4 ( STRING_1 ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; } } 
protected TYPE_1 METHOD_1 ( TYPE_1 pool , TYPE_1 entity ) { return VAR_1 . METHOD_1 ( pool , entity ) ; } 
protected void METHOD_2 ( ) { METHOD_2 ( getReturnValue ( ) . METHOD_3 ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return ( ! ( METHOD_2 ( vds ) ) ) && ( vds . getStoragePoolId ( ) . equals ( VAR_1 . getStoragePoolId ( ) ) ) ; } 
public java.lang.String METHOD_1 ( ) { return utils . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_2 . getId ( ) , VAR_2 . getStatus ( ) , VAR_2 . METHOD_3 ( ) ) ; return null ; } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { long VAR_3 = VAR_1 . METHOD_2 ( ) ; long VAR_4 = VAR_2 . METHOD_2 ( ) ; return TYPE_2 . METHOD_1 ( VAR_3 , VAR_4 ) ; } 
protected boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( VAR_1 instanceof TYPE_2 ) && ( ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) ) == 0 ) ) { return true ; } return false ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_1 ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { VAR_4 = returnValue . getReturnValue ( ) ; METHOD_1 ( VAR_4 ) ; } 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , java.lang.String id , java.lang.String status ) ; 
public java.util.List < java.lang.String > METHOD_1 ( int VAR_1 ) { try ( TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 . METHOD_2 ( ) ) ) { return METHOD_4 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( 2 , dao . METHOD_3 ( VAR_1 ) . size ( ) ) ; } 
TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { return ( ) - > new TYPE_2 ( VAR_2 ) . METHOD_3 ( VAR_1 ) ; } 
protected boolean validate ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { METHOD_3 ( VAR_1 ) ; return false ; } return true ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_3 , METHOD_4 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( STRING_1 ) ; METHOD_2 ( STRING_2 ) ; } catch ( TYPE_2 VAR_1 ) { METHOD_3 ( VAR_1 ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; frontend . METHOD_4 ( VAR_2 ) ; user . METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { VAR_2 = ( ( java.lang.Integer ) ( returnValue ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface entity ) { return METHOD_2 ( model , entity , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; TYPE_3 . METHOD_4 ( result ) ; TYPE_3 . assertEquals ( VAR_1 , result . size ( ) ) ; } 
public java.lang.String METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( null ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( nic ) ; org.mockito.Mockito.when ( nic . getName ( ) ) . thenReturn ( VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; assertEquals ( VAR_4 , TYPE_2 . METHOD_3 ( VAR_1 , VAR_3 ) ) ; } 
public void setId ( org.ovirt.engine.core.compat.Guid id ) { VAR_1 = id ; } 
public void onSuccess ( java.lang.Integer returnValue ) { VAR_1 = returnValue ; METHOD_1 ( VAR_2 ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 < java.lang.String , java.lang.String > object ) { return object . getValue ( ) ; } 
public void METHOD_1 ( ) { } 
public static < TYPE_1 , TYPE_2 > void METHOD_1 ( TYPE_1 source , TYPE_2 VAR_1 , TYPE_3 < TYPE_1 , TYPE_2 > ... VAR_2 ) { new TYPE_4 ( VAR_2 ) . METHOD_1 ( source , VAR_1 ) ; } 
public static < TYPE_1 > TYPE_1 getValue ( TYPE_2 value , java.lang.String version ) { return TYPE_3 . METHOD_2 ( ) . < TYPE_1 > getValue ( value , version ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_1 ( METHOD_2 ( ) . getSelectedItem ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; } 
public void onSuccess ( java.lang.Integer result ) { METHOD_1 ( result ) ; } 
TYPE_1 METHOD_1 ( java.lang.String id , java.lang.String name ) ; 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ( ( VAR_2 ) + STRING_1 ) , STRING_2 ) ; return true ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return VAR_1 . getName ( ) . equals ( VAR_2 . getName ( ) ) ; } 
public TYPE_1 < org.ovirt.engine.core.common.businessentities.StoragePool > getValue ( TYPE_2 network ) { return network . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return i . getName ( ) . equals ( nic ) ; } 
protected boolean METHOD_1 ( ) { return ( ( cluster . METHOD_3 ( ) ) == null ) || ( VAR_1 . METHOD_2 ( cluster . METHOD_3 ( ) , cluster . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) == ( event . METHOD_2 ( ) . METHOD_3 ( ) ) ) { METHOD_5 ( VAR_2 , VAR_3 , VAR_3 . getValue ( ) ) ; } } 
public void METHOD_1 ( java.lang.Integer value ) { VAR_1 . METHOD_1 ( value ) ; } 
public void METHOD_1 ( ) { command . getParameters ( ) . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( command . validate ( ) ) ; } 
private TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 [ VAR_1 ] , VAR_5 [ VAR_1 ] , VAR_5 [ VAR_1 ] ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; } 
public static org.ovirt.engine.core.compat.Guid METHOD_1 ( byte [ ] VAR_1 ) { try { return new org.ovirt.engine.core.compat.Guid ( VAR_1 ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( e ) ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 , METHOD_3 ( VAR_1 , null ) , true ) ; } 
public java.lang.String getString ( ) { return toString ( ) ; } 
public void add ( ) { METHOD_1 ( TYPE_1 . METHOD_2 ( ) , false , org.mockito.Mockito . METHOD_3 ( 0 ) , VAR_1 ) ; } 
TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( TYPE_1 model ) { if ( ! ( model . METHOD_2 ( ) ) ) { model . METHOD_4 ( ) ; METHOD_3 ( model ) ; } } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return TYPE_1 . equals ( i . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( TYPE_1 . toString ( ) ) ; } 
public java.lang.Object METHOD_1 ( ) { return getId ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; } 
public void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } TYPE_1 model = new TYPE_1 ( this , METHOD_2 ( ) ) ; METHOD_3 ( model ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , null , false ) , null ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS host ) { boolean VAR_1 = ( host . getStatus ( ) ) == ( VAR_2 ) ; return VAR_1 ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return id . toString ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( new java.lang.String ( ) , STRING_1 , STRING_2 , STRING_3 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) , VAR_1 ) ; super . METHOD_1 ( ) ; } 
protected void METHOD_1 ( final org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 , final org.ovirt.engine.core.compat.Guid vmId , final TYPE_1 VAR_2 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 , vmId ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_2 = ( ( java.lang.Boolean ) ( returnValue ) ) ; VAR_1 . METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 class , VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , TYPE_2 . any ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup result = dao . METHOD_2 ( VAR_1 . getName ( ) , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( result ) ; } 
private static TYPE_1 METHOD_1 ( ) { return org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } else { METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } } 
private void METHOD_1 ( TYPE_1 widget ) { VAR_1 . METHOD_2 ( METHOD_3 ( widget ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; assertEquals ( TYPE_2 . METHOD_3 ( VAR_1 ) , VAR_3 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup source ) { return ( ( java.lang.Boolean ) ( TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 , source . METHOD_3 ( ) . getValue ( ) ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) , false , false ) ; } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = TYPE_3 . getInstance ( ) . METHOD_3 ( VAR_1 ) ; TYPE_4 . METHOD_4 ( ) . METHOD_5 ( VAR_2 . METHOD_7 ( ) ) ; } 
void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS host , TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 , java.lang.String VAR_6 ) ; 
public org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup ( ) { return TYPE_1 . getParameters ( ) . getVdsGroup ( ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return getEntity ( ) . getId ( ) ; } 
protected boolean validate ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , METHOD_2 ( ) ) ; return validate ( VAR_1 . METHOD_3 ( ) ) ; } 
void METHOD_1 ( ) { METHOD_2 ( VAR_1 class ) ; METHOD_3 ( VAR_2 class ) . METHOD_4 ( VAR_3 class ) ; METHOD_3 ( VAR_5 class ) . METHOD_4 ( VAR_3 class ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network VAR_1 = new org.ovirt.engine.core.common.businessentities.network.Network ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( VAR_1 ) . length ( ) ) > 0 ) ) ; } 
protected java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate entity ) { return entity . getName ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid id , TYPE_1 . VdcActionType VAR_1 , TYPE_1 . VdcActionParametersBase parameters ) { VAR_2 . put ( id , new TYPE_2 ( VAR_1 , parameters ) ) ; } 
protected void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) . METHOD_3 ( ) ) ) { super . METHOD_1 ( ) ; } } 
public java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters ) { return super . METHOD_1 ( cluster , hosts , vm , parameters ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; METHOD_4 ( cmd ) ; TYPE_1 . METHOD_5 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { VAR_2 . METHOD_2 ( getModel ( ) . METHOD_3 ( ) . getEntity ( ) ) ; } 
public void onSuccess ( TYPE_1 . VdcQueryReturnValue returnValue ) { VAR_1 = returnValue . getReturnValue ( ) ; METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > ( ) { public java.lang.String METHOD_2 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return vds . METHOD_3 ( ) ; } } ) ; } 
TYPE_1 METHOD_1 ( int VAR_1 ) ; 
private static void METHOD_1 ( java.lang.String VAR_1 ) { if ( STRING_1 . equals ( VAR_1 ) ) { VAR_2 . METHOD_2 ( VAR_3 . Frontend class , VAR_4 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 cluster = METHOD_2 ( true ) ; TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 , VAR_4 ) ; TYPE_4 . METHOD_4 ( VAR_5 . METHOD_5 ( cluster , VAR_2 ) . isEmpty ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = METHOD_2 ( VAR_1 ) ; return new TYPE_1 ( METHOD_3 ( VAR_2 , diskImage . getStoragePoolId ( ) . getValue ( ) ) ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 ( new TYPE_2 ( ) , null ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getWindow ( ) ) ) ; VAR_1 . METHOD_2 ( true ) ; METHOD_4 ( null ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new org.ovirt.engine.core.common.businessentities.VM ( ) , VAR_2 , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ( ) , null ) , false , VAR_3 ) ; } 
protected boolean METHOD_1 ( ) { return validate ( TYPE_1 . METHOD_1 ( TYPE_2 . getParameters ( ) . getVm ( ) . METHOD_3 ( ) , TYPE_2 . getVdsGroup ( ) . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 value ) { VAR_1 = value ; } 
public void onSuccess ( java.util.Map < java.lang.String , java.util.List < java.lang.String > > result ) { VAR_1 = result ; METHOD_1 ( METHOD_2 ( ) ) ; } 
public void METHOD_2 ( final org.ovirt.engine.core.compat.Guid VAR_2 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } 
protected TYPE_1 . StorageDomain map ( TYPE_1 . StorageDomain entity , TYPE_1 . StorageDomain template ) { return VAR_1 . map ( entity , template ) ; } 
public void METHOD_1 ( ) { java.lang.Object [ ] VAR_1 = TYPE_1 . METHOD_2 ( ) ; java.util.Map < java.lang.String , java.lang.Object > map = TYPE_1 . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , VAR_1 , map ) ; } 
private void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { VAR_4 = TYPE_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public static java.lang.Integer METHOD_1 ( java.lang.String VAR_1 ) { try { return java.lang.Integer . valueOf ( VAR_1 ) ; } catch ( TYPE_1 e ) { return null ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; TYPE_1 . Disk disk = resource . get ( ) ; METHOD_6 ( disk , 1 ) ; METHOD_7 ( disk ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { TYPE_2 . getInstance ( ) . METHOD_3 ( ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities . Disk > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = ( VAR_1 == null ) ? TYPE_2 : VAR_1 ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { METHOD_2 ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; } 
protected org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( ) { return TYPE_1 . getParameters ( ) . METHOD_1 ( ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { return new TYPE_1 ( VAR_1 , VAR_1 . METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return ( METHOD_2 ( ) ) != null ? METHOD_2 ( ) : super . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; return VAR_2 == null ? new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ( ) : VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { parameters . setId ( VAR_1 ) ; parameters . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( ( ! ( command . validate ( ) ) ) ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage image ) { if ( ! ( METHOD_2 ( ) . METHOD_3 ( image . getId ( ) ) ) ) { METHOD_2 ( ) . METHOD_4 ( image ) ; return true ; } return false ; } 
protected void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate object ) { return object . getStatus ( ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( getVm ( ) ) != null ) ) { VAR_1 = getVm ( ) . METHOD_1 ( ) ; } return VAR_1 ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { METHOD_2 ( aQuery , null ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { getModel ( ) . METHOD_1 ( ) . setEntity ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_1 . METHOD_2 ( ) ? VAR_1 . METHOD_4 ( ) : null ; } 
private org.ovirt.engine.core.common.businessentities . Network METHOD_1 ( ) { network = new org.ovirt.engine.core.common.businessentities . Network ( ) ; network . METHOD_2 ( STRING_1 ) ; return network ; } 
public void METHOD_1 ( ) { final TYPE_1 command = METHOD_2 ( ) ; vm . METHOD_3 ( 1 ) ; vm . METHOD_4 ( INT_1 ) ; TYPE_2 . METHOD_5 ( command . validate ( ) ) . METHOD_7 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat . Version value ) { VAR_1 = value ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( ) ) ; } 
public java.lang.String getValue ( java.lang.Object object ) { return java.lang.String.valueOf ( ( ( org.ovirt.engine.core.common.businessentities.VM ) ( object ) ) . METHOD_1 ( ) . size ( ) ) ; } 
protected TYPE_1 METHOD_1 ( boolean VAR_1 ) { final TYPE_1 engine = this . VAR_2 . METHOD_1 ( ) ; engine . METHOD_2 ( VAR_1 ) ; return engine ; } 
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_1 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; final java.lang.String VAR_3 = VAR_1 . METHOD_1 ( ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false , java.lang.Boolean . FALSE , true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( null , STRING_1 ) ; METHOD_3 ( STRING_2 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_4 ( VAR_2 ) ; } } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ( ( VAR_1 ) + STRING_1 ) , VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; return true ; } 
public void validate ( ) { METHOD_1 ( ) ; } 
private native boolean METHOD_1 ( ) ; 
static TYPE_1 METHOD_1 ( ) { TYPE_1 model = TYPE_2 . getModel ( 0 ) ; model . METHOD_2 ( new TYPE_3 ( ) ) ; return model ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network network ) { return network . METHOD_2 ( ) . equals ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { METHOD_2 ( ) . METHOD_1 ( value ) ; METHOD_4 ( ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . any ( ) ) ; } 
protected java.lang.String METHOD_1 ( ) { return ( METHOD_2 ( ) ) != null ? METHOD_2 ( ) . getName ( ) : null ; } 
public void METHOD_1 ( ) { final TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( VAR_2 ) ; } 
public boolean METHOD_1 ( ) { return TYPE_2 . equals ( METHOD_3 ( ) . getName ( ) ) ; } 
public void onSuccess ( java.lang.Object returnValue ) { } 
public static int METHOD_1 ( java.lang.String VAR_1 ) { switch ( VAR_1 ) { case STRING_1 : case STRING_2 : case STRING_3 : return 2 ; default : return - 1 ; } } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) . METHOD_3 ( STRING_1 , METHOD_4 ( event ) ) ; } 
public TYPE_1 METHOD_2 ( ) { return nic . METHOD_2 ( ) ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.ArrayList < TYPE_1 . VdcActionParametersBase > parameters , final TYPE_2 VAR_2 , final java.lang.Object VAR_3 ) { METHOD_1 ( VAR_1 , parameters , false , VAR_2 , VAR_3 , true ) ; } 
protected boolean METHOD_1 ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) == ( VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; resource . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } 
protected boolean validate ( ) { return VAR_1 . METHOD_2 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; } 
public boolean validate ( ) { return super . validate ( ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( METHOD_6 ( ) ) ; METHOD_8 ( true ) ; } 
public void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > map = TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 . assertEquals ( 1 , map . size ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface result = dao . METHOD_2 ( VAR_1 , VAR_2 , false ) ; TYPE_1 . METHOD_3 ( result ) ; } 
private TYPE_1 METHOD_1 ( final TYPE_2 parameters ) { return org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( parameters , TYPE_3 . METHOD_3 ( parameters . METHOD_4 ( ) ) ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , new java.util.ArrayList < > ( ) ) , null ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup ( ) { if ( ( METHOD_1 ( ) ) != null ) { METHOD_2 ( METHOD_1 ( ) . METHOD_3 ( ) ) ; } return super . getVdsGroup ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_3 , TYPE_3 . METHOD_3 ( VAR_1 ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_1 ( VAR_1 , false ) ; } 
public void METHOD_1 ( ) { disk = new TYPE_1 . DiskImage ( ) ; } 
public void METHOD_1 ( TYPE_2 model ) { super . METHOD_1 ( model ) ; } 
public void METHOD_1 ( int VAR_1 , org.ovirt.engine.core.compat . Version version , org.ovirt.engine.ui.frontend.AsyncQuery VAR_2 ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , new TYPE_1 ( VAR_4 , VAR_1 , version ) , VAR_2 ) ; } 
protected abstract org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( ) ; 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_2 ( true ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 params = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_2 , params ) ; } 
protected void METHOD_1 ( ) { METHOD_3 ( VAR_3 ) ; METHOD_3 ( VAR_4 ) ; } 
public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
public java.lang.String METHOD_1 ( ) { return this . VAR_1 . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 ( VAR_2 , VAR_3 . IdQueryParameters class ) , VAR_4 , new TYPE_3 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; assertEquals ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 ) , VAR_2 ) ; } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { return TYPE_2 . getSucceeded ( ) ? STRING_1 . equals ( VAR_1 ) ? VAR_2 : VAR_3 : VAR_4 ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_8 ( ) ; METHOD_9 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 resource ) { return METHOD_2 ( resource , new TYPE_2 ( VAR_1 , VAR_2 . IdQueryParameters class ) , VAR_3 , new TYPE_3 ( ) ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ! ( ( ( java.util.List < ? > ) ( source ) ) . isEmpty ( ) ) ; } return false ; } 
private org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( boolean VAR_2 , int VAR_3 , java.lang.Integer VAR_4 ) { org.ovirt.engine.core.common.businessentities.network.Network network = new org.ovirt.engine.core.common.businessentities.network.Network ( ) ; network . METHOD_2 ( VAR_2 ) ; network . METHOD_3 ( VAR_3 ) ; network . METHOD_4 ( VAR_4 ) ; return network ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_3 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return ( ( java.lang.String ) ( METHOD_2 ( VAR_1 , VAR_2 , false ) ) ) ; } 
private void METHOD_1 ( ) { vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . setId ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; } 
protected java.lang.String METHOD_1 ( ) { return VAR_1 < java.lang.String > getValue ( VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_4 , result ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { return METHOD_1 ( vmId , null , false ) ; } 
public void setEntity ( org.ovirt.engine.core.common.businessentities.VM value ) { METHOD_1 ( value ) ; METHOD_2 ( value ) ; super . setEntity ( value ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , final TYPE_1 status ) { METHOD_1 ( vm , status , VAR_1 ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = getEntity ( ) ; if ( vds != null ) { METHOD_2 ( ) . METHOD_3 ( ( ( vds . getStatus ( ) ) == ( VAR_1 ) ) ) ; } } 
private void METHOD_1 ( ) { try { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_2 ( ) ; } } catch ( TYPE_1 e ) { } finally { this . VAR_1 = null ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 0 ) ; METHOD_3 ( METHOD_4 ( ) ) ; METHOD_6 ( resource . get ( ) , 0 ) ; } 
public void METHOD_1 ( final java.lang.String value ) { VAR_1 = value ; } 
public final java.lang.String METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return ( ( java.lang.String ) ( getValue ( VAR_2 . String , name , VAR_1 ) ) ) ; } 
protected void addCanDoActionMessage ( java.lang.String VAR_1 ) { getReturnValue ( ) . METHOD_2 ( ) . add ( VAR_1 ) ; } 
public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_2 ( ) ; } this . VAR_1 = null ; } 
protected boolean validate ( ) { TYPE_1 validator = new TYPE_1 ( ) ; return validate ( validator . METHOD_2 ( METHOD_3 ( ) ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , null ) ; METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_3 = METHOD_4 ( METHOD_5 ( VAR_1 , VAR_1 ) ) ; METHOD_6 ( VAR_3 , VAR_4 , VAR_1 . getName ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 ) ; TYPE_1 . METHOD_5 ( result . isEmpty ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_2 , VAR_3 , METHOD_2 ( ) ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; return TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) ; } 
public void METHOD_1 ( final TYPE_1 object ) { super . METHOD_1 ( object ) ; if ( object . METHOD_3 ( ) ) { object . METHOD_4 ( ) . setEntity ( 1 ) ; VAR_1 . METHOD_5 ( false ) ; } } 
protected boolean validate ( ) { return ( ( TYPE_1 . METHOD_2 ( ) . getStatus ( ) ) == ( VAR_1 ) ) && ( super . validate ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , null ) ; } 
private void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( null ) ; METHOD_5 ( ) ; } 
protected TYPE_1 . Network getEntity ( int VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_2 . METHOD_2 ( VAR_3 . Network class ) , false , false , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { java.lang.String VAR_2 = VAR_3 ; if ( STRING_1 . equals ( VAR_2 ) ) { METHOD_2 ( ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( this . getName ( ) , VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) ) ; } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_2 . METHOD_3 ( VAR_3 , VAR_1 . METHOD_4 ( STRING_1 ) ) ; return null ; } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) { final java.util.Map < java.lang.String , java.lang.Boolean > map = new TYPE_1 ( ) . METHOD_2 ( VAR_1 , VAR_2 . HashMap class ) ; TYPE_2 . METHOD_3 ( map . get ( STRING_1 ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; TYPE_1 . getInstance ( ) . METHOD_5 ( METHOD_4 ( ) ) ; getReturnValue ( ) . METHOD_6 ( true ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( new TYPE_1 ( getParameters ( ) . getId ( ) , VAR_1 , METHOD_4 ( ) . METHOD_5 ( ) ) ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue result ) { TYPE_1 VAR_1 = result . getReturnValue ( ) ; if ( VAR_1 != null ) { METHOD_1 ( METHOD_2 ( VAR_1 ) ) ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . setEntity ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_2 value ) { return VAR_1 . METHOD_3 ( ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . setEntity ( true ) ; } 
public TYPE_1 METHOD_2 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) ; } 
protected void METHOD_1 ( ) { addCanDoActionMessage ( VAR_1 ) ; addCanDoActionMessage ( VAR_2 ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { return VAR_1 . getName ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( null ) ; METHOD_3 ( null ) ; } 
protected java.util.List < TYPE_1 . StorageDomain > METHOD_1 ( ) { return METHOD_2 ( VAR_1 . StorageDomain class , VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_3 ( VAR_3 ) ) ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; TYPE_2 . assertEquals ( INT_1 , VAR_1 . size ( ) ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { METHOD_4 ( VAR_3 ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( STRING_1 , VAR_1 . METHOD_5 ( VAR_2 , VAR_3 , false ) ) ; } 
public TYPE_1 METHOD_1 ( boolean value ) { return METHOD_1 ( value , null ) ; } 
public void METHOD_1 ( java.lang.Object [ ] VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 ) { METHOD_2 ( METHOD_3 ( VAR_1 ) , VAR_2 , true ) ; } 
protected boolean validate ( ) { return ( ( ( METHOD_1 ( ) ) && ( METHOD_2 ( ) ) ) && ( METHOD_4 ( ) ) ) && ( METHOD_5 ( ) ) ; } 
protected abstract boolean METHOD_1 ( ) ; 
protected java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface network ) { return network . getName ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false , VAR_1 , null ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( false ) , TYPE_2 . METHOD_5 ( VAR_2 ) ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; return METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_2 , VAR_3 , METHOD_6 ( ) ) ; } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { long VAR_3 = VAR_1 . METHOD_2 ( ) ; long VAR_4 = VAR_2 . METHOD_2 ( ) ; return TYPE_2 . valueOf ( VAR_3 ) . METHOD_3 ( VAR_4 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 ) { return TYPE_1 . equals ( VAR_1 . METHOD_2 ( ) , nic . getName ( ) ) ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 > entities ) { if ( entities . isEmpty ( ) ) { return ; } METHOD_1 ( TYPE_3 . METHOD_2 ( ) , entities , METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = VAR_2 . METHOD_3 ( ) ; VAR_3 = dao . get ( VAR_4 ) ; } 
public static boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return ! ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , 1 ) . isEmpty ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { METHOD_1 ( target ) ; } 
public static java.lang.String METHOD_1 ( ) { return VAR_1 < java.lang.String > getValue ( VAR_2 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_2 != null ) { return TYPE_3 . METHOD_1 ( VAR_1 , new TYPE_4 ( VAR_2 , new TYPE_5 ( 2 ) ) ) ; } return VAR_1 ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : return true ; case VAR_3 : return true ; } return false ; } 
public java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . getName ( ) ; } else { return null ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; METHOD_5 ( STRING_1 ) ; VAR_2 . METHOD_6 ( VAR_1 ) ; METHOD_7 ( METHOD_8 ( ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 command ) throws TYPE_4 , TYPE_5 { return METHOD_1 ( command , VAR_2 ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
private java.util.List < TYPE_1 . DiskImage > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 tempVar = new TYPE_1 ( METHOD_3 ( ) , VAR_1 , METHOD_4 ( ) ) ; tempVar . METHOD_5 ( METHOD_6 ( ) ) ; super . METHOD_1 ( VAR_2 , tempVar ) ; } 
public void onSuccess ( java.util.List < TYPE_1 > returnValue ) { setItems ( returnValue ) ; METHOD_1 ( ) ; } 
protected void METHOD_1 ( java.lang.Boolean value ) { for ( TYPE_1 VAR_1 : METHOD_2 ( ) ) { VAR_1 . METHOD_4 ( value ) ; } METHOD_5 ( ) ; } 
public static void METHOD_2 ( java.util.List source , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( source , VAR_1 ) ; } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return VAR_1 . METHOD_2 ( ) . getName ( ) . METHOD_4 ( VAR_2 . METHOD_2 ( ) . getName ( ) ) ; } 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain domain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; domain . METHOD_2 ( STRING_1 ) ; return domain ; } 
public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( getModel ( ) . METHOD_4 ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return TYPE_1 . METHOD_2 ( VAR_1 . getName ( ) , i . METHOD_3 ( ) ) ; } 
void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 type , boolean VAR_2 , org.ovirt.engine.core.compat.Guid VAR_4 , java.util.Map < java.lang.String , java.lang.String > VAR_5 ) ; 
private TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_2 ( VAR_2 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( validator . METHOD_3 ( false ) , TYPE_2 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( java.lang.Boolean value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
protected TYPE_1 . Disk METHOD_1 ( ) { return TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; } 
protected int METHOD_1 ( TYPE_1 model ) { return ( model . getSelectedItem ( ) ) != null ? java.lang.Integer . METHOD_2 ( model . getSelectedItem ( ) . toString ( ) ) : 0 ; } 
public void METHOD_1 ( ) { diskImage . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; TYPE_1 . METHOD_5 ( cmd , VAR_1 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain result = dao . METHOD_2 ( VAR_1 , VAR_2 , null ) ; TYPE_1 . assertEquals ( VAR_3 , result . getId ( ) ) ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters ) { METHOD_1 ( VAR_1 , parameters , null , null ) ; } 
public void METHOD_1 ( ) { cmd = METHOD_2 ( VAR_1 , 0 ) ; TYPE_1 . METHOD_3 ( cmd . METHOD_4 ( ) ) ; } 
public int METHOD_1 ( ) { int VAR_1 = INT_1 ; VAR_1 = ( VAR_1 * INT_2 ) + ( java.lang.Integer . valueOf ( VAR_2 ) . METHOD_1 ( ) ) ; return VAR_1 ; } 
public TYPE_1 get ( org.ovirt.engine.core.compat.Guid id ) { TYPE_2 VAR_1 = METHOD_1 ( ) . addValue ( STRING_1 , id ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_2 , TYPE_3 . instance , VAR_1 ) ; } 
private boolean METHOD_1 ( java.util.List < java.lang.String > VAR_1 , boolean VAR_2 ) { return METHOD_2 ( VAR_1 , VAR_2 , org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_1 [ ] { TYPE_1 . VDS , VAR_3 } ) ) ; } 
protected boolean validate ( ) { TYPE_1 validator = METHOD_2 ( ) ; return ( ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 < TYPE_2 > ( METHOD_2 ( ) ) { protected void METHOD_3 ( ) { } } ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters , final TYPE_2 VAR_2 , final java.lang.Object VAR_3 ) { METHOD_1 ( VAR_1 , parameters , false , VAR_2 , VAR_3 ) ; } 
public static void METHOD_1 ( java.util.Map [ ] map , TYPE_1 VAR_2 ) { if ( map == null ) { return ; } for ( java.util.Map VAR_3 : map ) { TYPE_2 . METHOD_1 ( VAR_3 , VAR_2 ) ; } } 
private static boolean METHOD_1 ( TYPE_1 user ) { return ( user != null ) && ( ! ( user . METHOD_2 ( ) ) ) ; } 
public TYPE_1 get ( org.ovirt.engine.core.compat.Guid id ) { TYPE_2 VAR_1 = new TYPE_3 ( id ) ; return METHOD_1 ( ) . METHOD_2 ( STRING_1 , TYPE_4 . instance , VAR_1 ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . METHOD_3 ( ) , TYPE_2 . getVdsGroup ( ) . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 returnValue = new TYPE_1 ( ) ; returnValue . METHOD_2 ( true ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 ) , TYPE_2 . any ( VAR_3 class ) ) ) . thenReturn ( returnValue ) ; } 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface result ) { TYPE_1 . METHOD_2 ( result ) ; TYPE_1 . METHOD_3 ( result . METHOD_4 ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return TYPE_1 . getInstance ( ) ; } 
private void METHOD_1 ( TYPE_1 < TYPE_2 > network ) { this . network = network ; } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_3 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > ) ( VAR_2 ) ) ; VAR_4 . METHOD_1 ( VAR_3 ) ; TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_4 , VAR_5 ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_1 ( ) : - 1 ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat . Version object ) { return object . toString ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_2 . METHOD_4 ( cmd . METHOD_5 ( ) ) ; } 
public java.lang.String getValue ( TYPE_1 model ) { return model . getName ( ) ; } 
private boolean METHOD_1 ( ) { if ( ( ( TYPE_1 . METHOD_2 ( ) ) == null ) && ( ! ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ) ) { return METHOD_4 ( VAR_1 ) ; } return true ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat . Version version ) { return VAR_2 < java.lang.Boolean > METHOD_2 ( VAR_1 , version . getValue ( ) ) ; } 
protected java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . getStoragePoolId ( ) . toString ( ) , TYPE_3 . name ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_2 . assertEquals ( 1 , VAR_1 . size ( ) ) ; } 
protected boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( ! ( VAR_1 . isEmpty ( ) ) ) && ( ( METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ) == 0 ) ; } 
public void METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 == null ) { this . VAR_1 = new java.util.ArrayList < > ( ) ; } } 
protected boolean validate ( ) { return TYPE_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( java.lang.String value ) { this . VAR_1 = value ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . setTitle ( VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 result ) { org.mockito.Mockito.doReturn ( result ) . when ( VAR_1 ) . METHOD_2 ( TYPE_3 . any ( ) ) ; } 
protected TYPE_1 METHOD_3 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( cluster ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { final TYPE_1 VAR_2 = new TYPE_1 ( TYPE_2 . getVdsGroup ( ) . getId ( ) , VAR_1 . getId ( ) , VAR_3 , true , true , true , true , false ) ; return VAR_2 ; } 
private boolean METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = METHOD_2 ( VAR_1 ) ; TYPE_1 VAR_3 = TYPE_2 . METHOD_3 ( VAR_2 ) ; return ( VAR_3 != null ) && ( VAR_3 . METHOD_4 ( ) ) ; } 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String id ) ; 
public java.lang.String METHOD_1 ( ) { return TYPE_1 . getParameters ( ) . getVdsGroup ( ) . getName ( ) ; } 
public void setEntity ( TYPE_1 value ) { super . setEntity ( value ) ; METHOD_2 ( value ) ; } 
public static boolean METHOD_1 ( java.lang.String version ) { return VAR_1 < java.lang.Boolean > METHOD_2 ( VAR_2 , version ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; VAR_1 . METHOD_1 ( hosts ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ( ) ; } 
public void METHOD_1 ( int value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) ; 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , java.lang.String VAR_3 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , ( ( VAR_1 + STRING_1 ) + VAR_2 ) , false , null , VAR_2 , VAR_3 , true , null , null ) ; } 
private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( false ) ; } } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters , final TYPE_2 VAR_2 ) { METHOD_1 ( VAR_1 , parameters , VAR_2 , null ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 status = new TYPE_1 ( ) ; status . METHOD_2 ( VAR_2 ) ; status . METHOD_3 ( VAR_3 ) ; return status ; } 
public void METHOD_1 ( ) { getValue ( ) . METHOD_1 ( ) ; METHOD_3 ( ) . METHOD_1 ( ) ; super . METHOD_1 ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; setItems ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public void METHOD_3 ( long size ) { METHOD_2 ( ) . METHOD_3 ( size ) ; } 
public boolean METHOD_1 ( ) { if ( VAR_1 ) { return ! ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) . getSelectedItem ( ) ) ) ; } return false ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( VAR_1 . getVm ( ) . getName ( ) , VAR_1 . METHOD_5 ( ) ) ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; setItems ( METHOD_6 ( ) . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_2 ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_2 , result . get ( 0 ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , true ) ; } 
protected TYPE_1 . VdcQueryReturnValue runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_1 ( METHOD_2 ( ) ) ; return VAR_3 . runQuery ( VAR_1 , METHOD_3 ( VAR_2 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_5 ( ( ( VAR_1 . getStatus ( ) ) == ( VAR_4 ) ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 ) { VAR_2 = new TYPE_1 ( METHOD_2 ( ) , VAR_1 ) ; VAR_3 . METHOD_3 ( ( ( VAR_3 . METHOD_4 ( ) ) - 1 ) ) ; VAR_3 . add ( VAR_2 ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( resource . get ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return inject ( new TYPE_2 ( id ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . getId ( ) ) ; TYPE_1 . METHOD_6 ( true ) ; } 
private void METHOD_1 ( ) { try { this . VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_1 e ) { } finally { this . VAR_1 = null ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . setEntity ( true ) ; } 
void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( TYPE_1 . any ( ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( ) . METHOD_1 ( vds . getId ( ) , VAR_1 , true , VAR_3 , VAR_2 ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.compat . Version VAR_1 ) { return ( VAR_2 . METHOD_2 ( VAR_3 ) ) >= 0 ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( getEntity ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; TYPE_1 VAR_1 = TYPE_2 . METHOD_3 ( vds ) ; TYPE_3 . METHOD_4 ( ( VAR_1 instanceof TYPE_4 ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return TYPE_1 . equals ( i . METHOD_2 ( ) , getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public java.lang.String getValue ( TYPE_1 VAR_1 ) { return VAR_1 . getId ( ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 ) . when ( ( ( host . METHOD_4 ( ) ) == null ) ) ; } 
protected java.lang.String METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { return VAR_1 < java.lang.String > getValue ( VAR_2 , version . toString ( ) ) ; } 
TYPE_1 METHOD_1 ( ) ; 
public java.util.ArrayList < TYPE_1 . VdcActionParametersBase > METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( STRING_1 , null ) ; METHOD_3 ( STRING_2 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_4 ( VAR_2 ) ; } } 
public void onSuccess ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 VAR_2 = METHOD_1 ( ) ; VAR_2 . setItems ( VAR_1 ) ; VAR_2 . METHOD_2 ( true ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( command == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; TYPE_2 . assertEquals ( VAR_3 , TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) ; METHOD_3 ( ( VAR_1 / 2 ) , VAR_1 ) ; METHOD_4 ( VAR_2 , VAR_3 ) ; METHOD_5 ( VAR_3 , VAR_2 ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( VAR_2 ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { java.lang.String VAR_2 = TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 . getStatus ( ) ) ; return VAR_2 ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 < TYPE_1 > VAR_1 = ( ( TYPE_2 ) ( VAR_2 . METHOD_2 ( ) ) ) ; return VAR_1 . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 object = METHOD_2 ( STRING_1 ) ; TYPE_2 . assertEquals ( STRING_2 , object . id ( ) ) ; TYPE_2 . assertEquals ( STRING_3 , object . name ( ) ) ; } 
public void onSuccess ( java.util.List < TYPE_1 . DiskImage > returnValue ) { METHOD_1 ( returnValue ) ; } 
protected boolean METHOD_1 ( ) { return ( validate ( METHOD_2 ( ) ) ) && ( METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false , VAR_1 , null ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network result = dao . METHOD_2 ( VAR_1 , cluster ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . getName ( ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( STRING_1 ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_2 . any ( ) ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { return ( java.lang.String.valueOf ( object . getVm ( ) . METHOD_1 ( ) ) ) + STRING_1 ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.VM vm , TYPE_2 VAR_2 , java.lang.String VAR_3 , final TYPE_3 VAR_4 ) { return METHOD_1 ( VAR_1 , vm , VAR_2 , VAR_3 , null , VAR_4 ) ; } 
public TYPE_1 getStatus ( ) { return this . VAR_1 . getStatus ( ) ; } 
private TYPE_1 < org.ovirt.engine.core.common.queries.IdQueryParameters > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.ovirt.engine.core.common.queries.IdQueryParameters VAR_2 = METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_2 . getId ( ) ) . thenReturn ( VAR_1 ) ; return METHOD_3 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { log . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( VAR_1 ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 widget ) { super . METHOD_1 ( widget ) ; widget . METHOD_2 ( true ) ; widget . METHOD_3 ( true ) ; widget . METHOD_4 ( VAR_1 . METHOD_5 ( ) . getName ( ) ) ; } 
public final void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { getModel ( ) . METHOD_1 ( ) . setEntity ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
private java.lang.String METHOD_1 ( final java.util.List < java.lang.String > VAR_1 ) { if ( ( VAR_1 . size ( ) ) < 1 ) { return STRING_1 ; } else { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } } 
public java.lang.String METHOD_1 ( TYPE_1 version ) { return version . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( null ) ; METHOD_5 ( null ) ; METHOD_6 ( ) ; } 
private boolean METHOD_1 ( ) { return VAR_1 < java.lang.Boolean > getValue ( VAR_2 , TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . getValue ( ) ) ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 , ? > column , TYPE_3 VAR_1 ) { super . METHOD_1 ( column , VAR_1 ) ; table . METHOD_4 ( ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( TYPE_2 . getVm ( ) ) ; TYPE_2 . METHOD_5 ( true ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > METHOD_1 ( ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > list = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ( ) ; list . add ( network ) ; return list ; } 
public static void METHOD_1 ( final java.util.List < TYPE_1 . VdcQueryType > VAR_1 , final java.util.List < TYPE_2 > VAR_2 , final TYPE_3 VAR_3 ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , null ) ; } 
private static TYPE_1 . DiskImage METHOD_1 ( ) { TYPE_1 . DiskImage image = new TYPE_1 . DiskImage ( ) ; image . METHOD_2 ( true ) ; return image ; } 
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; VAR_2 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; TYPE_2 . METHOD_5 ( command , VAR_3 ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . setId ( VAR_3 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { int VAR_1 = INT_1 ; METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 command = METHOD_2 ( ) ; TYPE_2 . assertEquals ( true , command . validate ( ) ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; return validate ( METHOD_4 ( ) . METHOD_5 ( VAR_1 , TYPE_3 . METHOD_6 ( VAR_2 ) ) ) ; } 
private void METHOD_1 ( boolean result ) { org.mockito.Mockito.doReturn ( result ) . when ( command ) . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . any ( ) ) ; } 
public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_2 response = new TYPE_2 ( ) ; response . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_2 ( response ) ; return this ; } 
protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { for ( TYPE_1 item : VAR_1 ) { if ( item instanceof TYPE_2 ) { ( ( TYPE_2 ) ( item ) ) . METHOD_2 ( ) ; } } } } 
public void METHOD_1 ( ) { TYPE_1 < TYPE_2 < TYPE_3 > > validate = validate ( new TYPE_3 ( INT_1 ) ) ; TYPE_4 . METHOD_2 ( ( ! ( validate . isEmpty ( ) ) ) ) ; } 
protected boolean validate ( ) { return validate ( validator . METHOD_1 ( METHOD_2 ( ) ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { return ! ( VAR_3 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) , VAR_1 , VAR_2 ) . isEmpty ( ) ) ; } 
public void runQuery ( final TYPE_1 . VdcQueryType VAR_1 , final TYPE_2 parameters , final org.ovirt.engine.ui.frontend.AsyncQuery VAR_2 ) { runQuery ( VAR_1 , parameters , VAR_2 , false ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . map ( VAR_2 , null ) ; assertEquals ( VAR_3 , VAR_1 ) ; TYPE_1 VAR_4 = TYPE_2 . map ( VAR_3 , null ) ; assertEquals ( VAR_2 , VAR_4 ) ; } 
protected boolean validate ( ) { return ( validate ( METHOD_2 ( ) ) ) && ( ( TYPE_1 . METHOD_3 ( ) ) || ( validate ( METHOD_4 ( ) ) ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String host ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_2 . instance , METHOD_4 ( ) . addValue ( STRING_2 , host ) ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , METHOD_4 ( ) , java.lang.Boolean . TRUE ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( true ) ; return null ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . get ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( result ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( STRING_1 , null ) ; METHOD_2 ( STRING_2 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_3 ( VAR_2 ) ; } } 
public void METHOD_1 ( TYPE_1 < TYPE_2 , ? > column , TYPE_3 VAR_1 ) { } 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 type ) { return TYPE_2 . METHOD_2 ( ) . getId ( TYPE_2 . METHOD_3 ( ) , type ) ; } 
public void METHOD_1 ( ) { vds . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( STRING_1 , command . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( command , VAR_1 ) ; } 
protected void METHOD_1 ( ) { VAR_1 . put ( VAR_2 , TYPE_1 . getParameters ( ) . getVm ( ) . getId ( ) . toString ( ) ) ; VAR_1 . put ( VAR_3 , METHOD_2 ( ) ) ; } 
private boolean METHOD_1 ( ) { return ( TYPE_1 . METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . getId ( ) ) ) != null ; } 
public double METHOD_1 ( ) { return ( ( VAR_1 ) / ( ( VAR_2 ) == 0 ? 1 : VAR_2 ) ) * INT_1 ; } 
private static void METHOD_1 ( TYPE_2 model ) { TYPE_4 . METHOD_1 ( model , null ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate entity ) { return entity . getStoragePoolId ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { return METHOD_2 ( VAR_1 , new TYPE_3 ( VAR_2 , METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) ) , action , new TYPE_4 ( VAR_3 , VAR_4 . IdQueryParameters class ) ) ; } 
public java.lang.String getName ( ) { return name ; } 
protected java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) . toString ( ) , TYPE_3 . name ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { METHOD_1 ( ) . setEntity ( ( ( java.lang.Integer ) ( returnValue ) ) ) ; METHOD_2 ( ) ; } 
public TYPE_1 < java.lang.String > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { vm . METHOD_2 ( VAR_1 ) ; return VAR_2 . METHOD_3 ( vm ) ; } 
private boolean METHOD_1 ( TYPE_1 item ) { return ( ( item != null ) && ( ( item . METHOD_2 ( ) ) != null ) ) && ( item . METHOD_2 ( ) . METHOD_3 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { final TYPE_2 domain = new TYPE_2 ( ) ; domain . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_3 . any ( ) ) ) . thenReturn ( domain ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { METHOD_2 ( new TYPE_2 ( VAR_1 , METHOD_3 ( ) ) , aQuery ) ; } 
public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { } VAR_1 = null ; } TYPE_1 . METHOD_3 ( ) ; } 
public void METHOD_1 ( java.util.Map < java.lang.String , TYPE_2 . VM > vms ) { this . vms = vms ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_4 ( true ) ; } 
public int METHOD_1 ( ) { return this . client . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( cmd . METHOD_6 ( false , false ) ) ; } 
protected java.lang.String METHOD_1 ( TYPE_1 VAR_2 ) { return ( VAR_3 ) + ( super . METHOD_1 ( VAR_2 ) ) ; } 
private void METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities.network.Network network : VAR_1 ) { VAR_2 . put ( network . METHOD_2 ( ) , new TYPE_1 ( network ) ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 type ) { return METHOD_2 ( type , VAR_1 . METHOD_3 ( ) , null , null ) ; } 
public static boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( VAR_1 == null ) || ( STRING_1 . equals ( VAR_1 ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( TYPE_2 . any ( VAR_4 . VdcActionType class ) , TYPE_2 . any ( VAR_5 class ) ) ) . thenReturn ( new TYPE_1 ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . getName ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 . METHOD_2 ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { TYPE_1 parameters = new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , true ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , parameters , aQuery ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , name , true , null , null , VAR_1 , true , null , null ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 object ) { return object . METHOD_2 ( ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source == null ? new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) : ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; } 
public static TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; return VAR_2 ; } 
public void METHOD_1 ( int value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . getParameters ( ) . getId ( ) ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_1 ) ; } 
protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_1 ( ) ) && ( VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 context , java.lang.Boolean value , TYPE_2 VAR_1 , java.lang.String id ) { super . METHOD_1 ( context , value , VAR_1 , id ) ; VAR_1 . append ( VAR_2 ) ; } 
protected TYPE_1 . VdcQueryReturnValue METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return TYPE_2 . METHOD_2 ( ) . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; METHOD_5 ( 1 ) ; METHOD_6 ( ) ; METHOD_8 ( resource . get ( ) , 0 ) ; } 
protected void METHOD_1 ( ) { VAR_1 . addColumn ( new TYPE_1 < java.lang.String > ( ) { public java.lang.String METHOD_3 ( java.lang.String VAR_2 ) { return VAR_2 ; } } , VAR_3 . METHOD_4 ( ) ) ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 template ) { TYPE_3 . METHOD_2 ( VAR_1 , template , null ) ; } 
public TYPE_1 < org.ovirt.engine.core.compat.Guid > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) ; } return new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( VAR_1 ) ; } 
void METHOD_1 ( TYPE_1 constants ) { VAR_1 . METHOD_2 ( constants . METHOD_3 ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_2 = ( ( java.lang.Integer ) ( returnValue ) ) ; VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 . METHOD_1 ( VAR_1 ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( final TYPE_3 VAR_1 , final TYPE_4 VAR_2 ) { return ( ) - > VAR_1 . METHOD_3 ( VAR_2 ) ; } 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 . getStoragePoolId ( ) ) ; } 
public void onSuccess ( java.lang.Integer result ) { METHOD_1 ( result ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ; } 
public void METHOD_1 ( ) { new TYPE_1 ( 0 , new TYPE_2 ( ) ) ; } 
protected void METHOD_1 ( ) { switch ( getParameters ( ) . METHOD_2 ( ) ) { case VAR_1 : addCanDoActionMessage ( VAR_2 ) ; break ; default : break ; } addCanDoActionMessage ( VAR_3 ) ; } 
protected TYPE_1 METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; java.util.ArrayList < TYPE_2 > VAR_2 = new java.util.ArrayList ( TYPE_3 . METHOD_3 ( VAR_3 , VAR_4 ) ) ; return new TYPE_1 ( VAR_1 , VAR_2 ) ; } 
private static java.lang.Integer METHOD_1 ( ) { return VAR_1 < java.lang.Integer > getValue ( VAR_2 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; final java.lang.String VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_3 ) ; } 
private static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) != null ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.List < TYPE_2 . VdcActionParametersBase > parameters ) { return METHOD_2 ( VAR_1 , parameters , true , false , false , null ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { METHOD_2 ( ) . METHOD_1 ( value ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_4 ( resource . list ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; assertEquals ( VAR_3 , TYPE_2 . METHOD_4 ( VAR_1 , VAR_3 ) ) ; } 
public TYPE_1 . VdcQueryReturnValue METHOD_5 ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 params ) { VAR_2 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; METHOD_3 ( VAR_1 , params ) ; return METHOD_4 ( ) . METHOD_5 ( VAR_1 , params ) ; } 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_1 ( VAR_1 , false ) ; } 
public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; dao . METHOD_4 ( VAR_1 ) ; org.ovirt.engine.core.common.businessentities.StoragePool result = dao . get ( VAR_1 . getId ( ) ) ; METHOD_5 ( result ) ; } 
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 ) { VAR_1 . add ( 0 , null ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > VAR_1 = METHOD_2 ( ) . getSelectedItem ( ) ; if ( VAR_1 == null ) { return null ; } return VAR_1 . getEntity ( ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.ArrayList < TYPE_2 . VdcActionParametersBase > parameters ) { return METHOD_2 ( VAR_1 , parameters , true , false , false , null ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . METHOD_5 ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return TYPE_3 . METHOD_2 ( ) . get ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) . getId ( ) , TYPE_3 . getStoragePoolId ( ) ) ) ; } 
public java.lang.Integer METHOD_1 ( ) { return ( VAR_1 . METHOD_1 ( ) ) != null ? VAR_1 . METHOD_1 ( ) . getEntity ( ) : null ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.core.common.businessentities.StoragePool result = dao . METHOD_3 ( VAR_1 . getName ( ) ) ; TYPE_1 . METHOD_5 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; } 
protected TYPE_1 getEntity ( int VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , TYPE_2 . METHOD_1 ( VAR_4 [ VAR_1 ] ) , VAR_5 [ VAR_1 ] , VAR_5 [ VAR_1 ] ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 , null ) ; if ( ( VAR_2 == null ) || ( ! ( METHOD_3 ( VAR_2 ) ) ) ) { return true ; } return METHOD_4 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_1 ( ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . setSelectedItem ( TYPE_1 . METHOD_3 ( ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return VAR_2 . METHOD_3 ( VAR_1 ) ; } 
public static void METHOD_2 ( TYPE_1 response ) { java.lang.Object entity = response . getEntity ( ) ; if ( entity instanceof TYPE_2 ) { TYPE_3 . METHOD_2 ( ( ( TYPE_2 ) ( entity ) ) ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( result ) ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; METHOD_2 ( ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return new TYPE_1 ( id , VAR_1 . METHOD_1 ( id ) ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { try { if ( VAR_1 . get ( VAR_2 ) . METHOD_2 ( ) ) { ( VAR_2 ) ++ ; } } catch ( TYPE_1 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return ( ( vm . METHOD_2 ( ) . size ( ) ) > 0 ) && ( METHOD_1 ( vm . getId ( ) ) ) ; } 
public java.lang.String getName ( ) { return name ; } 
public static org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { return TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , null ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > models = new java.util.ArrayList < TYPE_1 > ( ) ; models . METHOD_2 ( METHOD_3 ( ) ) ; models . METHOD_2 ( METHOD_4 ( ) ) ; return models ; } 
public void METHOD_1 ( java.lang.String name ) { this . name = name ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false , java.lang.Boolean . TRUE , false ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( java.lang.Boolean value ) { VAR_1 . METHOD_1 ( value ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( null ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_3 , METHOD_4 ( ) , VAR_1 , this ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , TYPE_1 VAR_1 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( ) . METHOD_1 ( vds . getId ( ) , VAR_1 , true , VAR_2 , null ) ; } 
public TYPE_1 getStatus ( ) { return ( getEntity ( ) . METHOD_1 ( ) ) == null ? null : getEntity ( ) . METHOD_1 ( ) . getStatus ( ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { return ( ( storageDomain . METHOD_2 ( ) ) == ( VAR_1 ) ) || ( ( storageDomain . METHOD_2 ( ) ) == ( VAR_2 ) ) ; } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { return VAR_3 ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.VM vm , TYPE_2 VAR_2 , final TYPE_3 VAR_3 ) { return METHOD_1 ( VAR_1 , vm , VAR_2 , STRING_1 , null , VAR_3 ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; this . METHOD_2 ( VAR_2 ) ; } 
private static < TYPE_1 > void METHOD_1 ( TYPE_1 VAR_1 ) { for ( java.lang.String VAR_2 : VAR_3 ) { try { TYPE_5 . METHOD_2 ( VAR_1 , VAR_2 , null ) ; } catch ( TYPE_2 | TYPE_4 | TYPE_3 e ) { } } } 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 type ) { return METHOD_1 ( VAR_1 , type , null ) ; } 
public TYPE_1 list ( ) { return METHOD_2 ( METHOD_3 ( ) ) ; } 
private static TYPE_1 . DiskImage METHOD_1 ( ) { TYPE_1 . DiskImage image = new TYPE_1 . DiskImage ( ) ; image . METHOD_2 ( VAR_1 ) ; image . METHOD_4 ( INT_1 ) ; return image ; } 
public void METHOD_1 ( boolean value ) { VAR_1 = value ; } 
protected void METHOD_1 ( TYPE_1 model ) { VAR_1 . METHOD_2 ( model ) ; VAR_2 . METHOD_3 ( java.lang.Integer . toString ( getModel ( ) . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; METHOD_3 ( ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_3 . METHOD_4 ( VAR_5 ) ; VAR_2 . METHOD_5 ( VAR_3 ) ; return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false , false , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( resource . get ( ) , 1 ) ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = false ; if ( VAR_1 != null ) { VAR_2 = VAR_1 . equals ( VAR_4 ) ; } return VAR_2 ; } 
private TYPE_1 METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_1 , TYPE_3 params ) { return new TYPE_2 ( ) . METHOD_2 ( host ) . METHOD_3 ( params ) . METHOD_4 ( new TYPE_4 ( VAR_1 ) ) . METHOD_5 ( ) ; } 
public boolean METHOD_1 ( ) { return ! ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) . getEntity ( ) ) ) ; } 
public void onSuccess ( java.util.List < TYPE_1 > returnValue ) { VAR_1 . METHOD_1 ( returnValue ) ; ( VAR_2 ) ++ ; if ( ( VAR_2 ) == ( METHOD_2 ( ) . size ( ) ) ) { METHOD_3 ( model ) ; } } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { TYPE_1 . METHOD_1 ( vm ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) , null ) ; VAR_1 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; TYPE_2 . METHOD_5 ( command , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( ) { get ( ) ; TYPE_2 VAR_1 = METHOD_2 ( id ) ; return METHOD_3 ( VAR_2 , new TYPE_3 ( VAR_1 ) ) ; } 
private static void METHOD_1 ( TYPE_1 . ValidationResult VAR_1 , TYPE_2 . EngineMessage VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_1 , false , VAR_2 ) ; } 
private TYPE_1 < ? > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_3 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) . getId ( ) ) ; } return VAR_1 ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return org.mockito.Mockito . METHOD_2 ( VAR_3 , VAR_2 ) . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_1 ) , TYPE_4 . any ( ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getWindow ( ) ) ) ; if ( ! ( VAR_1 . validate ( false ) ) ) { return ; } METHOD_2 ( VAR_1 , true ) ; } 
public static boolean METHOD_1 ( TYPE_1 type , java.lang.String VAR_1 ) { java.lang.String VAR_2 = TYPE_2 . METHOD_2 ( type , VAR_1 ) ; java.lang.String VAR_3 = TYPE_3 . getValue ( VAR_4 ) ; return ( VAR_3 . METHOD_4 ( VAR_2 ) ) >= 0 ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 , TYPE_4 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 result ) { METHOD_3 ( null ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; setItems ( METHOD_6 ( ) . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { try { super . METHOD_1 ( ) ; } finally { if ( ( METHOD_2 ( ) ) != null ) { METHOD_3 ( METHOD_2 ( ) ) ; } } } 
public java.lang.Boolean METHOD_1 ( java.lang.Object source ) { return ( source != null ) && ( ! ( ( java.lang.Boolean ) ( source ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = VAR_1 . METHOD_2 ( java.lang.Integer . valueOf ( INT_1 ) ) ; TYPE_2 . assertEquals ( STRING_2 , result . get ( STRING_1 ) . METHOD_3 ( ) ) ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_2 params ) { TYPE_1 < TYPE_2 > command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( params , null ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_3 ( ) ; return command ; } 
public void METHOD_1 ( ) { java.lang.Object [ ] VAR_1 = new java.lang.Object [ 0 ] ; java.util.Map < java.lang.String , java.lang.Object > VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( TYPE_1 . METHOD_4 ( ) , VAR_1 , VAR_2 ) ; } 
public TYPE_1 . VdcActionParametersBase METHOD_1 ( final org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { final TYPE_2 params = new TYPE_2 ( VAR_1 . getId ( ) , VAR_1 . getStoragePoolId ( ) ) ; params . METHOD_3 ( true ) ; return params ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( true ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 ) { for ( java.lang.String VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , VAR_1 . getVm ( ) . getId ( ) , true , VAR_1 . METHOD_5 ( ) , VAR_2 ) ; VAR_3 . METHOD_6 ( ) ; } 
protected boolean METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) , TYPE_1 . getReturnValue ( ) . METHOD_4 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage image , org.ovirt.engine.core.compat.Guid vmId ) { TYPE_1 . METHOD_1 ( image , image . METHOD_2 ( ) , new TYPE_2 ( image . METHOD_3 ( ) , image . METHOD_4 ( ) . get ( 0 ) ) , vmId ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 ) ; TYPE_2 . assertEquals ( STRING_2 , VAR_1 . get ( 0 ) . getString ( STRING_3 ) ) ; } 
public TYPE_1 < org.ovirt.engine.core.compat.Guid > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) ; } return new TYPE_3 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { validator = new TYPE_1 ( null ) ; TYPE_2 . METHOD_2 ( validator . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) , TYPE_3 . METHOD_5 ( VAR_2 ) ) ; } 
private void METHOD_1 ( ) { setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_2 ( ) ) ; METHOD_3 ( STRING_1 ) ; } 
public static TYPE_1 map ( TYPE_2 entity , TYPE_1 VAR_1 , org.ovirt.engine.core.compat . Version version ) { return TYPE_3 . METHOD_1 ( ( ( TYPE_4 ) ( entity ) ) , ( VAR_1 != null ? VAR_1 : new TYPE_1 ( ) ) , version ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; assertEquals ( TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 ) , VAR_3 ) ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters , final TYPE_2 VAR_2 , final boolean VAR_3 , final boolean VAR_4 ) { METHOD_1 ( VAR_1 , parameters , false , VAR_2 , null , VAR_3 , VAR_4 ) ; } 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( int VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; VAR_2 . setId ( VAR_3 [ VAR_1 ] ) ; return VAR_2 ; } 
protected TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) { TYPE_2 value = METHOD_2 ( ) ; TYPE_3 widget = METHOD_3 ( value , true ) ; return new TYPE_1 ( value , widget ) ; } 
protected TYPE_1 getEntity ( int VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_3 . METHOD_2 ( VAR_4 class ) , VAR_3 . METHOD_2 ( VAR_5 class ) , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , METHOD_3 ( VAR_1 ) ) , null ) ) ; METHOD_4 ( cmd ) ; TYPE_3 . METHOD_5 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( TYPE_1 event ) { VAR_2 . METHOD_2 ( false ) ; this . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { final TYPE_2 VAR_2 = null ; VAR_1 . METHOD_2 ( VAR_2 ) ; final TYPE_2 VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_3 . assertEquals ( VAR_2 , VAR_3 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_1 ( ) ; } 
public void METHOD_1 ( java.lang.String value ) { name = value ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface ) { return ( ( iface . METHOD_2 ( ) ) != null ) && ( iface . METHOD_2 ( ) . equals ( VAR_1 . getName ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public TYPE_1 get ( ) { return METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) , VAR_3 class ) ; } 
public boolean METHOD_1 ( ) { return VAR_1 ; } 
protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . getId ( ) , TYPE_2 . METHOD_4 ( ) . getId ( ) , VAR_2 ) ; return VAR_1 != null ; } 
public void METHOD_1 ( java.lang.Integer VAR_1 ) { VAR_2 = TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.compat.Guid host , java.lang.Integer VAR_2 ) { VAR_3 . add ( new TYPE_1 ( host , VAR_2 , VAR_1 ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . equals ( this . VAR_1 , VAR_1 ) ) ) { this . VAR_1 = VAR_1 ; METHOD_2 ( new TYPE_2 ( STRING_1 ) ) ; } } 
private static void METHOD_1 ( TYPE_1 model , java.lang.String VAR_2 ) { if ( VAR_2 != null ) { model . METHOD_1 ( VAR_2 ) ; } } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . METHOD_1 ( ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_3 ) ; } 
protected boolean METHOD_1 ( ) { return validate ( TYPE_1 . METHOD_2 ( TYPE_2 . getParameters ( ) . getVm ( ) . METHOD_3 ( ) , TYPE_2 . METHOD_5 ( ) ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_2 ) { this . VAR_2 = VAR_2 ; } 
public static void METHOD_1 ( final TYPE_1 popup , int VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_1 ( popup , VAR_1 , VAR_2 , 0 , 0 , 0 ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . map ( VAR_2 , null ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_1 ) ; TYPE_3 VAR_3 = TYPE_4 . map ( VAR_1 , VAR_2 ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; } 
protected java.util.Map < TYPE_1 , TYPE_2 > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return vm . METHOD_2 ( ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) { { add ( new org.ovirt.engine.core.common.businessentities.DiskImage ( ) { { setId ( VAR_1 [ 0 ] ) ; } } ) ; } } ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( getEntity ( ) ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; } METHOD_6 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { return METHOD_2 ( VAR_1 , new TYPE_3 ( VAR_2 , true , true ) , action ) ; } 
private java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( ( ( TYPE_1 . length ( ) ) - 2 ) ) ) + 1 ) ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 , org.ovirt.engine.core.common.businessentities.VDS vds ) { return METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_2 ( vds . getId ( ) , VAR_1 . getId ( ) ) ) . getSucceeded ( ) ; } 
public void METHOD_1 ( ) { final TYPE_2 . AuditLogType VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( VAR_3 , VAR_2 ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_2 ( ) { return this . id . METHOD_2 ( ) ; } 
public boolean METHOD_1 ( ) { for ( TYPE_1 VAR_1 : METHOD_2 ( ) ) { if ( VAR_1 . METHOD_3 ( ) ) { return true ; } } return false ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { java.lang.String VAR_2 = TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) . getStatus ( ) ) ; return VAR_2 ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { TYPE_1 command = TYPE_2 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vmId ) ; if ( command != null ) { command . METHOD_1 ( ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 parameters ) { return TYPE_4 . getInstance ( ) . METHOD_2 ( ) . METHOD_1 ( VAR_1 , parameters ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 { VAR_1 . put ( VAR_4 , VAR_5 ) ; java.lang.String VAR_6 = VAR_7 < java.lang.String > getValue ( VAR_8 ) ; VAR_1 . put ( STRING_1 , VAR_6 ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ( ( METHOD_3 ( ) ) + ( new TYPE_1 ( ) ) ) ) ; VAR_1 . METHOD_2 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_1 ( ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters , final java.util.List < TYPE_2 > VAR_2 ) { METHOD_1 ( VAR_1 , parameters , VAR_2 , null , true ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( METHOD_3 ( ) ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 ) { return TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { VAR_1 . put ( VAR_2 , vm . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . put ( VAR_3 , java.lang.String.valueOf ( vm . METHOD_3 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( STRING_1 , new TYPE_2 ( ) ) ; METHOD_3 ( STRING_2 ) ; } catch ( TYPE_3 VAR_2 ) { METHOD_4 ( VAR_2 ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( VAR_1 , METHOD_2 ( ) , VAR_2 , VAR_3 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM object ) { return object . getStatus ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , null ) ; METHOD_4 ( TYPE_1 . toString ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; METHOD_3 ( null ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( VAR_1 ) ; TYPE_1 . getParameters ( ) . METHOD_5 ( true ) ; } 
void onSuccess ( TYPE_1 result ) ; 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( storageDomain , VAR_1 , TYPE_2 . getValue ( ) ) ; } 
public byte METHOD_1 ( byte VAR_1 ) { return ( ( byte ) ( METHOD_2 ( VAR_1 ) ) ) ; } 
protected java.util.List < TYPE_1 < org.ovirt.engine.core.common.businessentities.VM , TYPE_2 > > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) . getId ( ) ) ; } return VAR_1 ; } 
public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , java.lang.String version ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_2 = new TYPE_2 ( VAR_1 , version ) ; return VAR_3 . get ( VAR_2 ) ; } 
public static org.ovirt.engine.core.compat.Guid METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { return null ; } else { return new org.ovirt.engine.core.compat.Guid ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; } 
public java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { return VAR_1 ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network VAR_2 ) { return TYPE_1 . equals ( VAR_1 . METHOD_2 ( ) ) ? - 1 : VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) { final java.util.List < TYPE_1 > result = dao . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( result . METHOD_5 ( VAR_2 ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 ) { return TYPE_1 . equals ( VAR_1 . METHOD_2 ( ) , i . getName ( ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { return null ; } return VAR_2 . METHOD_4 ( ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { if ( ( i . METHOD_2 ( ) ) != null ) { return i . METHOD_2 ( ) . equals ( getParameters ( ) . METHOD_3 ( ) ) ; } return false ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_2 . instance , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 . VdcQueryReturnValue VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool item , java.lang.Object value ) { VAR_1 . put ( item , ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( value ) ) ) ; return false ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 value , java.lang.String version , TYPE_1 returnValue ) { return new TYPE_2 ( value , version , returnValue ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . getStoragePoolId ( ) , TYPE_3 . METHOD_4 ( TYPE_2 . getVm ( ) ) ) ; } 
public void METHOD_1 ( ) { command . METHOD_4 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 ) { METHOD_2 ( METHOD_3 ( VAR_1 ) , true ) ; } 
public boolean METHOD_1 ( ) { return ( VAR_2 ) == null ? false : VAR_1 . get ( VAR_2 ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( command ) ; TYPE_3 . METHOD_4 ( command , VAR_2 ) ; } 
private static TYPE_1 METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.DiskImage image = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; image . METHOD_2 ( VAR_1 ) ; TYPE_1 parameters = new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , image ) ; return parameters ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_6 ( VAR_2 ) ; } } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( ) { return super . METHOD_1 ( ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 < org.ovirt.engine.core.common.businessentities.DiskImage > ( VAR_1 , TYPE_3 . METHOD_2 ( ) ) ; } 
public static TYPE_1 getInstance ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_4 . METHOD_5 ( command . validate ( ) ) ; } 
private int METHOD_1 ( TYPE_1 VAR_2 , java.util.List < TYPE_1 > VAR_3 ) { java.util.List < TYPE_1 > VAR_4 = METHOD_2 ( VAR_2 , VAR_3 ) ; return VAR_4 . size ( ) ; } 
public int METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( - 1 ) ) { return super . METHOD_1 ( ) ; } return VAR_1 . METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( new java.util.ArrayList < > ( ) ) , null ) ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : 1 ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } 
private java.lang.String METHOD_1 ( ) { return STRING_1 . equals ( METHOD_2 ( ) ) ? METHOD_3 ( ) : METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; command . METHOD_6 ( ) ; } 
private void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_1 ( ) ; } } } 
public void METHOD_1 ( int value ) { VAR_1 = ( value < 1 ) ? 1 : value > INT_1 ? INT_1 : value ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public boolean validate ( ) { return true ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { return VAR_2 . METHOD_3 ( ) ; } return VAR_3 ; } 
public void METHOD_1 ( ) { METHOD_2 ( 0 , 1 , 2 , INT_1 , INT_2 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( nic , null ) ) ; } 
public int METHOD_1 ( ) { java.lang.Integer VAR_1 = getEntity ( ) . METHOD_2 ( ) ; return VAR_1 == null ? - 1 : VAR_1 ; } 
public java.lang.String METHOD_1 ( final TYPE_1 VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 . METHOD_4 ( ) ) == null ? VAR_1 . METHOD_5 ( ) : VAR_1 . METHOD_4 ( ) . toString ( ) ) ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { METHOD_1 ( VAR_1 , METHOD_2 ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { final TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( VAR_3 ) ; } 
void addColumn ( TYPE_1 < TYPE_2 , ? > column , TYPE_3 VAR_1 , java.lang.String VAR_2 ) ; 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . getInstance ( ) . METHOD_2 ( METHOD_3 ( ) ) ; } 
public boolean METHOD_1 ( ) { return ( VAR_1 ) == ( METHOD_2 ( ) . METHOD_3 ( ) ) ; } 
void METHOD_1 ( TYPE_1 model ) ; 
public TYPE_1 . VdcQueryReturnValue runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 parameters ) { return METHOD_2 ( VAR_1 , parameters , true , null ) ; } 
public static TYPE_1 < java.lang.Object [ ] > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( new java.lang.Object [ ] [ ] { new java.lang.Object [ ] { VAR_2 } , new java.lang.Object [ ] { VAR_3 } } ) ; } 
private static java.lang.String METHOD_1 ( ) { return ( ( VAR_1 < java.lang.String > getValue ( VAR_2 ) ) + ( VAR_3 ) ) + STRING_1 ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_3 ( VAR_2 ) ) ) ; } 
public void onSuccess ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 . METHOD_1 ( VAR_1 , new TYPE_3 ( ) ) ; setItems ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( ) , TYPE_2 . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_2 ( ) . getStoragePoolId ( ) ) , VAR_1 , VAR_2 , false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( STRING_1 , resource . METHOD_3 ( ) ) ; METHOD_4 ( STRING_2 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_5 ( VAR_2 ) ; } } 
protected boolean METHOD_1 ( ) { return METHOD_2 ( ) ; } 
private static java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return vm == null ? STRING_1 : vm . getName ( ) ; } 
public void METHOD_1 ( int value ) { VAR_1 . METHOD_1 ( value ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; TYPE_1 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_2 . METHOD_7 ( VAR_3 ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 status ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , status ) ; } 
public boolean validate ( ) { METHOD_2 ( ) . METHOD_3 ( ( ( METHOD_2 ( ) . getSelectedItem ( ) ) != null ) ) ; return METHOD_2 ( ) . METHOD_4 ( ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . getStoragePoolId ( ) , TYPE_3 . METHOD_4 ( TYPE_2 . getVm ( ) ) , TYPE_2 . getParameters ( ) . METHOD_5 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) != null ? VAR_1 . METHOD_2 ( ) . getEntity ( ) : null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( null ) ; METHOD_3 ( null ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( ( STRING_2 + ( value ) ) , value , TYPE_2 . METHOD_3 ( value . getValue ( ) ) ) ; } 
protected void METHOD_1 ( ) { METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) ; } 
public static TYPE_1 . DbFacade METHOD_1 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { return VAR_2 ; } 
protected void METHOD_1 ( ) { METHOD_5 ( null ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_3 > VAR_1 , java.lang.Object sender , TYPE_3 args ) { METHOD_2 ( object ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = this ; VAR_2 = ( ( java.lang.Integer ) ( returnValue ) ) ; VAR_1 . METHOD_1 ( ) ; } 
private static TYPE_1 . DiskImage METHOD_1 ( ) { TYPE_1 . DiskImage image = new TYPE_1 . DiskImage ( ) ; image . METHOD_2 ( VAR_1 ) ; return image ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 . METHOD_5 ( true ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( TYPE_1 . getVm ( ) ) ; } 
private void METHOD_1 ( ) throws TYPE_2 { for ( TYPE_3 VAR_2 : TYPE_1 . getInstance ( ) . METHOD_2 ( ) ) { METHOD_1 ( VAR_2 ) ; } METHOD_3 ( ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) . setIsChangable ( METHOD_3 ( ) . getEntity ( ) ) ; METHOD_4 ( ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return inject ( new TYPE_2 ( id , this ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_3 ( VAR_1 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( returnValue ) ) ; VAR_1 . METHOD_2 ( ) . setSelectedItem ( storageDomain ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { try ( TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 . METHOD_2 ( ) ) ) { VAR_4 . METHOD_1 ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; TYPE_2 . assertEquals ( STRING_2 , VAR_1 ) ; } 
private TYPE_1 < java.lang.String > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( vm . METHOD_3 ( ) ) . METHOD_4 ( ) ; } return VAR_1 ; } 
private static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , null ) ; VAR_1 . METHOD_3 ( true ) ; return VAR_1 ; } 
protected void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , VAR_1 ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : java.lang.Boolean . TRUE ; } 
public java.lang.String METHOD_1 ( java.lang.String type , java.lang.String name ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_1 ( ) ) ; VAR_1 . METHOD_2 ( STRING_1 , type ) ; VAR_1 . METHOD_2 ( STRING_2 , name ) ; return VAR_1 . toString ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( null ) ; TYPE_1 . METHOD_3 ( ( ! ( VAR_3 . validate ( ) ) ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 storageDomain ) { return new java.util.ArrayList ( TYPE_3 . METHOD_2 ( new TYPE_1 [ ] { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . get ( storageDomain . METHOD_4 ( ) ) } ) ) ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , int VAR_2 , boolean VAR_3 , boolean VAR_4 , boolean VAR_5 , boolean VAR_6 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , false , false ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; return params ; } 
public void METHOD_1 ( ) { final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_2 ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { return java.lang.String.valueOf ( object . getVm ( ) . METHOD_1 ( ) ) ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( ) ) ; return true ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . getParameters ( ) . getId ( ) ) ; TYPE_2 . METHOD_6 ( ) . METHOD_7 ( METHOD_8 ( VAR_1 ) ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( TYPE_2 . getVdsGroup ( ) . METHOD_3 ( ) , TYPE_2 . getVdsGroup ( ) . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 model ) { METHOD_1 ( model , VAR_3 ) ; } 
protected boolean METHOD_1 ( java.lang.String VAR_1 ) { return super . METHOD_1 ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; resource . METHOD_2 ( ) . VAR_2 = VAR_3 ; resource . METHOD_2 ( ) . VAR_4 = VAR_4 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { action . METHOD_2 ( this ) ; } 
private java.lang.String METHOD_1 ( org.ovirt.engine.core.compat . Version VAR_1 ) { java.lang.String VAR_2 = ( ( java.lang.String ) ( TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_3 , VAR_1 . toString ( ) ) ) ) ; return VAR_2 == null ? STRING_1 : VAR_2 ; } 
protected void METHOD_1 ( TYPE_1 < ? > command , boolean VAR_1 , java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 , TYPE_2 status , int VAR_3 ) { } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( METHOD_1 ( ) ) ; VAR_3 . METHOD_2 ( STRING_1 , VAR_1 ) ; VAR_3 . METHOD_2 ( STRING_2 , VAR_2 ) ; return VAR_3 . toString ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , false ) ; VAR_4 = VAR_5 ; METHOD_3 ( ) ; } 
public void onSuccess ( TYPE_1 VAR_2 ) { METHOD_1 ( ( VAR_2 == null ? null : VAR_2 . METHOD_2 ( ) ) ) ; METHOD_3 ( ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { return TYPE_3 . getInstance ( ) . METHOD_2 ( storageDomain . METHOD_3 ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( a . METHOD_2 ( ) ) == ( VAR_1 ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_3 ) ) . thenReturn ( network ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = METHOD_2 ( null ) ; METHOD_6 ( model , true ) ; } 
protected TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( TYPE_2 . METHOD_4 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 . METHOD_1 ( vm , vm . METHOD_2 ( ) , VAR_1 ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( ) { return VAR_1 . METHOD_1 ( cluster , TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) , vm , null , org.mockito.Mockito . METHOD_3 ( VAR_4 class ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( true ) ; METHOD_2 ( ) . setEntity ( true ) ; } 
protected void METHOD_1 ( ) { if ( ( getTable ( ) ) != null ) { getTable ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; } } 
public java.lang.Boolean METHOD_1 ( ) { return VAR_1 ; } 
protected TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) { TYPE_2 value = METHOD_2 ( ) ; TYPE_3 widget = METHOD_3 ( value , true ) ; return new TYPE_1 < TYPE_2 , TYPE_3 > ( value , widget ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . Disk disk ) { return METHOD_2 ( new java.util.ArrayList ( TYPE_3 . METHOD_3 ( disk ) ) ) ; } 
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts ) { METHOD_1 ( hosts ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( true ) ; } 
private static java.lang.String METHOD_1 ( java.util.Map VAR_1 ) { return ( ( java.lang.String ) ( VAR_1 . get ( VAR_2 ) ) ) ; } 
protected void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( TYPE_1 . any ( ) , TYPE_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 user = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; VAR_2 . METHOD_3 ( VAR_3 , user ) ; TYPE_2 . assertEquals ( STRING_1 , user , VAR_2 . METHOD_4 ( VAR_3 , false ) ) ; } 
public void METHOD_1 ( final TYPE_1 iface ) { VAR_1 . METHOD_1 ( iface ) ; METHOD_2 ( iface ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_3 ( VAR_1 , null , VAR_3 ) ; VAR_2 . METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; return VAR_2 ; } 
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts ) { METHOD_1 ( hosts ) ; } 
public void onSuccess ( java.util.List < TYPE_2 . Disk > VAR_1 ) { METHOD_1 ( ( ! ( VAR_1 . isEmpty ( ) ) ) ) ; } 
public java.lang.String METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) != null ? VAR_1 . METHOD_2 ( ) . getEntity ( ) : null ; } 
public TYPE_1 METHOD_1 ( TYPE_2 . Disk object ) { if ( ( object . METHOD_2 ( ) ) < 2 ) { return null ; } return TYPE_3 . METHOD_3 ( java.lang.String . METHOD_4 ( STRING_1 , object . METHOD_5 ( ) ) ) ; } 
public java.util.List < TYPE_1 < ? extends java.lang.Exception > > METHOD_1 ( ) { return this . VAR_1 ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( METHOD_3 ( ) ) ; } 
public void onSuccess ( java.lang.String returnValue ) { VAR_1 . METHOD_1 ( returnValue ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( METHOD_3 ( ) ) { METHOD_4 ( ) ; } } 
private static java.lang.String METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return ( VAR_1 == null ) || ( TYPE_1 . equals ( VAR_1 ) ) ? STRING_1 : VAR_1 . toString ( ) ; } 
static TYPE_1 getModel ( int VAR_1 ) { TYPE_1 model = new TYPE_1 ( ) ; model . METHOD_1 ( VAR_2 [ VAR_1 ] ) ; model . METHOD_2 ( TYPE_2 ) ; return model ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 { if ( ! ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } METHOD_4 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = null ; if ( STRING_1 . equals ( VAR_1 ) ) { VAR_2 = new TYPE_3 ( ) ; } else { } return VAR_2 ; } 
public boolean METHOD_1 ( ) { return ( this . VAR_1 ) != null ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 , TYPE_2 . METHOD_2 ( ) , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 value ) { cluster . METHOD_2 ( value ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { METHOD_2 ( TYPE_3 . getInstance ( ) . METHOD_3 ( VAR_1 , VAR_2 ) ) ; } 
private void METHOD_1 ( ) { METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( TYPE_1 . toString ( ) ) ; } 
public TYPE_1 getStatus ( ) { return ( cluster ) == null ? null : TYPE_1 . METHOD_1 ( cluster . METHOD_2 ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . METHOD_2 ( ) . equals ( getParameters ( ) . METHOD_3 ( ) . METHOD_2 ( ) ) ; } 
public void METHOD_2 ( final TYPE_1 . VdcActionType VAR_1 , final TYPE_1 . VdcActionParametersBase parameters , final TYPE_2 VAR_2 ) { METHOD_2 ( VAR_1 , parameters , VAR_2 , null ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VmTemplate object ) { return object . getName ( ) ; } 
protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ! ( VAR_1 . isEmpty ( ) ) ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( getModel ( ) . getSelectedItem ( ) , true ) ; } } 
public int METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_1 > VAR_2 ) { throw new TYPE_1 ( VAR_3 ) ; } return VAR_1 + ( METHOD_1 ( ( ( VAR_2 - VAR_1 ) + 1 ) ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . DiskImage disk ) { return new TYPE_1 ( disk ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_2 ) ; domain . METHOD_3 ( VAR_2 ) ; TYPE_1 . assertEquals ( VAR_3 , validator . METHOD_4 ( domain ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 . METHOD_5 ( ) . toString ( ) ) ; METHOD_6 ( true ) ; METHOD_7 ( ) ; } 
public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; final TYPE_3 VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_4 . assertEquals ( VAR_2 , VAR_3 . getId ( ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_3 ( TYPE_2 . any ( VAR_2 class ) , TYPE_2 . any ( VAR_1 . ArrayList class ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_3 , STRING_4 ) ; TYPE_1 . assertEquals ( STRING_6 , STRING_7 , result ) ; } 
public void METHOD_1 ( java.lang.Exception VAR_1 , java.lang.String VAR_2 , final java.util.Map < java.lang.String , java.lang.Object > globalMap ) throws TYPE_1 { VAR_3 . put ( VAR_2 , TYPE_2 . METHOD_2 ( ) ) ; METHOD_3 ( VAR_1 , VAR_2 , globalMap ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( vm , vm . METHOD_3 ( ) ) ; vm . METHOD_4 ( VAR_2 ) ; TYPE_2 . METHOD_5 ( vm ) ; VAR_1 . METHOD_6 ( ) ; return null ; } 
public void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > map = TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 . assertEquals ( INT_1 , map . size ( ) ) ; } 
protected java.lang.String METHOD_1 ( final java.lang.String value ) { TYPE_1 node = VAR_1 . METHOD_2 ( ) ; node . put ( STRING_1 , value ) ; return node . toString ( ) ; } 
private void METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.lang.String VAR_2 , int VAR_3 ) { TYPE_1 . assertEquals ( TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 ) , VAR_3 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; assertEquals ( VAR_2 , TYPE_2 . METHOD_2 ( VAR_1 ) ) ; } 
public static TYPE_1 . DiskImage METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { TYPE_1 . DiskImage image = TYPE_2 . METHOD_2 ( null ) ; image . METHOD_3 ( TYPE_2 . METHOD_4 ( vm . getName ( ) ) ) ; image . METHOD_5 ( VAR_1 ) ; return image ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , null , VAR_1 , VAR_2 ) , null ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public boolean METHOD_1 ( java.lang.Integer value , TYPE_1 context ) { return ( value == 0 ) || ( value >= INT_1 ) ; } 
protected org.ovirt.engine.core.common.businessentities.StoragePool METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { org.ovirt.engine.core.common.businessentities.StoragePool pool = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; pool . setId ( id ) ; return pool ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_3 , new TYPE_2 ( VAR_1 , VAR_2 ) , null , this ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( true ) ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( final TYPE_2 VAR_1 , final java.lang.String VAR_2 , final java.lang.String VAR_3 ) { return TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 , TYPE_4 . METHOD_3 ( VAR_3 , VAR_4 ) , false , false ) ; } 
public int METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; TYPE_2 . assertEquals ( INT_1 , VAR_1 . size ( ) ) ; } 
public void METHOD_1 ( final TYPE_1 < ? > VAR_2 ) { VAR_3 = false ; VAR_4 . METHOD_1 ( VAR_2 ) ; } 
protected void METHOD_1 ( TYPE_1 resource ) { resource . METHOD_3 ( VAR_2 ) ; resource . METHOD_4 ( VAR_3 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return METHOD_1 ( id , null , false ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network VAR_1 ) { return VAR_1 . getId ( ) . equals ( METHOD_2 ( ) . getId ( ) ) ; } 
public void METHOD_1 ( ) { java.lang.Integer VAR_1 = getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) ; if ( VAR_1 != null ) { METHOD_3 ( vm . getId ( ) , VAR_1 ) ; } } 
protected java.util.List < ? > METHOD_1 ( ) { return ( getTable ( ) ) != null ? getTable ( ) . METHOD_3 ( ) . METHOD_4 ( ) : null ; } 
public java.lang.String METHOD_1 ( TYPE_2 . Disk object ) { if ( object . METHOD_2 ( ) ) { return VAR_1 . METHOD_4 ( ) ; } return null ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; if ( VAR_3 != null ) { VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; final org.ovirt.engine.core.common.businessentities.StoragePool VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( command . validate ( ) ) ; } 
private TYPE_1 METHOD_1 ( int VAR_1 ) { return TYPE_2 . getModel ( VAR_1 ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; return new TYPE_1 ( VAR_1 , null ) ; } 
private void METHOD_1 ( ) { TYPE_1 . Disk VAR_1 = new TYPE_2 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_3 . any ( ) ) ) . thenReturn ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 cluster ) { METHOD_2 ( ) . METHOD_3 ( STRING_1 , METHOD_4 ( cluster ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 ( METHOD_2 ( ) , null ) ; } 
private TYPE_1 METHOD_2 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . getSelectedItem ( ) ; METHOD_3 ( ( VAR_1 != null ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { METHOD_2 ( ( STRING_1 + ( vm . getName ( ) ) ) ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { return object . getStatus ( ) ; } 
static TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 < TYPE_4 > , TYPE_5 > VAR_1 ) { return new TYPE_6 ( VAR_2 . METHOD_2 ( ) , 0 , VAR_1 ) ; } 
public TYPE_1 getStatus ( ) { return ( cluster ) == null ? null : cluster . METHOD_2 ( ) ; } 
public org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_1 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; assertEquals ( VAR_4 , TYPE_2 . METHOD_4 ( VAR_1 , VAR_3 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . get ( VAR_1 . getId ( ) , TYPE_2 . METHOD_2 ( ) ) ; TYPE_3 . assertEquals ( result , VAR_1 ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_4 ( ) . METHOD_3 ( TYPE_1 . METHOD_5 ( ) , VAR_3 ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , null , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( true ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_5 ( VAR_2 ) ; } } 
protected org.ovirt.engine.core.compat.Guid getStoragePoolId ( ) { return ( getEntity ( ) ) != null ? getEntity ( ) . getStoragePoolId ( ) : null ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return ( ( TYPE_1 < TYPE_2 > ) ( super . METHOD_1 ( ) ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . DiskImage diskImage ) { return new TYPE_1 ( diskImage ) ; } 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) != null ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 , VAR_3 ) ; TYPE_1 VAR_2 = dao . METHOD_3 ( VAR_3 , VAR_4 ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_2 . METHOD_4 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) ; } 
protected void METHOD_1 ( TYPE_1 . VM model ) { model . METHOD_2 ( ( ! ( TYPE_2 . METHOD_3 ( this , new org.ovirt.engine.core.compat.Guid ( model . getId ( ) ) ) . isEmpty ( ) ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_2 . METHOD_5 ( STRING_3 , VAR_1 . METHOD_6 ( STRING_1 , VAR_2 , false ) ) ; } 
protected boolean METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_3 = VAR_2 . METHOD_3 ( VAR_1 , true ) ; return ( VAR_3 == null ) || ( VAR_3 . isEmpty ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ; dao . METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_3 = dao . get ( VAR_1 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; } 
TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) ; 
public java.lang.String toString ( ) { return ( STRING_1 + ( ( VAR_1 ) == null ? STRING_2 : VAR_1 . getName ( ) ) ) + STRING_3 ; } 
private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . error ( STRING_1 , VAR_1 , VAR_4 . getName ( ) , VAR_4 . getId ( ) , VAR_2 . METHOD_2 ( ) ) ; } 
private org.ovirt.engine.ui.uicommonweb.UICommand METHOD_1 ( ) { return org.ovirt.engine.ui.uicommonweb.UICommand . METHOD_2 ( STRING_1 , this ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return super . METHOD_1 ( METHOD_2 ( ) ) ; } 
protected java.lang.Integer METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS object ) { return ( object . METHOD_3 ( ) ) != null ? TYPE_1 . METHOD_2 ( object . METHOD_3 ( ) , INT_1 ) : 0 ; } 
public void onSuccess ( java.util.List < TYPE_2 > returnValue ) { METHOD_1 ( returnValue ) ; METHOD_2 ( ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { return METHOD_2 ( VAR_1 class , VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( TYPE_1 template ) { template = METHOD_3 ( METHOD_4 ( ) : : METHOD_1 , template ) ; TYPE_2 . METHOD_2 ( template ) ; return template ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; } 
private void METHOD_1 ( java.lang.String value ) { METHOD_2 ( STRING_1 , STRING_2 , value ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; addCanDoActionMessage ( VAR_1 ) ; } 
private void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { if ( METHOD_2 ( VAR_1 ) ) { if ( VAR_2 ) { METHOD_3 ( ) ; } else { METHOD_1 ( ) ; } } } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.ArrayList < TYPE_2 . VdcActionParametersBase > parameters , TYPE_3 VAR_2 ) { return METHOD_2 ( VAR_1 , parameters , true , false , VAR_2 ) ; } 
public java.lang.String METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 { if ( VAR_1 == null ) { return null ; } else { return METHOD_2 ( VAR_1 , VAR_2 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( null ) ; METHOD_6 ( METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 cluster = METHOD_2 ( true ) ; TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 ) ; TYPE_4 . METHOD_4 ( VAR_4 . METHOD_5 ( cluster , VAR_2 ) . isEmpty ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 , METHOD_2 ( VAR_1 , 1 ) , 0 ) , null ) ; } 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String id , java.lang.String status ) ; 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( ) . add ( new TYPE_3 ( VAR_1 . METHOD_3 ( ) , 1 ) ) ; return this ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return this . VAR_1 . METHOD_1 ( ) ; } 
public int METHOD_1 ( ) { return VAR_1 ; } 
java.lang.String METHOD_1 ( ) ; 
protected TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { return new TYPE_1 ( VAR_1 , VAR_1 . METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , false ) ; } 
public void setEntity ( org.ovirt.engine.core.common.businessentities.StorageDomain value ) { if ( ( value == null ) || ( ! ( value . equals ( getEntity ( ) ) ) ) ) { super . setEntity ( value ) ; } } 
public void METHOD_1 ( ) { TYPE_1 result = dao . get ( VAR_1 ) ; TYPE_2 . assertEquals ( result , VAR_2 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . getParameters ( ) . getId ( ) ) ) ; } 
protected java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ ] { STRING_1 } ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
public java.lang.Integer METHOD_1 ( ) { return this . VAR_1 . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; return ( VAR_1 == null ) || ( VAR_1 . METHOD_1 ( ) ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 , boolean VAR_3 ) { return METHOD_1 ( vmId , VAR_1 , VAR_2 , VAR_3 , null ) ; } 
public void METHOD_1 ( TYPE_1 value ) { status = value ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( vmId , VAR_3 , TYPE_2 ) ; return ( ! ( VAR_1 . isEmpty ( ) ) ) || ( METHOD_3 ( vmId ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( VAR_2 , false ) ; VAR_2 = ( ( TYPE_3 ) ( METHOD_3 ( ) . getSelectedItem ( ) ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model ) { model . setId ( id ) ; VAR_1 . METHOD_1 ( model ) ; return model ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( returnValue ) ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; TYPE_1 . assertEquals ( VAR_3 , VAR_2 ) ; } 
public static TYPE_1 map ( TYPE_2 model ) { switch ( model ) { case VAR_2 : return VAR_3 ; default : return null ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , METHOD_5 ( ) , VAR_2 ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { try { return TYPE_1 . getInstance ( ) . get ( TYPE_2 . valueOf ( VAR_1 ) ) ; } catch ( java.lang.Exception e ) { return VAR_1 == null ? STRING_1 : VAR_1 ; } } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , true ) ; VAR_3 = new TYPE_4 ( VAR_4 ) ; VAR_5 = new TYPE_4 ( VAR_6 ) ; VAR_5 . METHOD_2 ( true ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_2 ( getStoragePoolId ( ) ) ; } 
public static TYPE_1 getInstance ( ) { return TYPE_1 . instance ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_4 , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , VAR_2 ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( true ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network VAR_1 ) { return VAR_1 . getId ( ) . equals ( getParameters ( ) . METHOD_2 ( ) . getId ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ; } 
private boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 < java.lang.String > VAR_3 = METHOD_2 ( VAR_1 ) ; return ( VAR_3 != null ) && ( VAR_3 . METHOD_3 ( VAR_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 result ) { model . METHOD_3 ( ) ; METHOD_4 ( null ) ; } 
private void METHOD_1 ( ) { vds . setId ( VAR_1 ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = dao . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; TYPE_3 . assertEquals ( TYPE_2 , VAR_1 ) ; } 
public static boolean METHOD_1 ( TYPE_1 source , TYPE_1 VAR_1 , TYPE_2 < java.lang.String > list ) { return VAR_2 . METHOD_1 ( source , VAR_1 , list ) ; } 
public java.lang.Boolean METHOD_1 ( java.lang.Object source ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; return VAR_1 . isEmpty ( ) ; } return false ; } 
protected TYPE_1 . VdcActionParametersBase METHOD_1 ( ) { TYPE_2 parameters = new TYPE_2 ( METHOD_2 ( ) ) ; parameters . METHOD_3 ( METHOD_4 ( ) . getEntity ( ) ) ; return parameters ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , TYPE_1 type ) { return ! ( METHOD_2 ( vmId , type ) . isEmpty ( ) ) ; } 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vds . getId ( ) , VAR_1 , true , VAR_3 , VAR_2 ) ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.ArrayList < TYPE_1 . VdcActionParametersBase > parameters , final TYPE_2 VAR_2 , final java.lang.Object VAR_3 ) { METHOD_1 ( VAR_1 , parameters , false , VAR_2 , VAR_3 ) ; } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return java.lang.Integer . METHOD_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_2 ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_3 ( ) ; } return STRING_1 ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 . instance ) ; } 
public java.lang.String toString ( ) { return java.lang.String . METHOD_1 ( STRING_3 , ( ( VAR_2 ) < 0 ? STRING_2 : STRING_1 ) , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { if ( ( user ) == null ) { return null ; } return user . getId ( ) ; } 
protected static TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return new TYPE_2 ( VAR_1 class . METHOD_2 ( STRING_1 ) ) ; } 
public static void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters , final TYPE_2 VAR_2 ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_1 ( VAR_1 , parameters , VAR_2 , null ) ; } 
private void METHOD_1 ( boolean result ) { org.mockito.Mockito.doReturn ( result ) . when ( command ) . METHOD_2 ( TYPE_1 . any ( ) , TYPE_1 . any ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.Exception VAR_2 = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; } 
public void METHOD_1 ( int VAR_1 ) { METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 , false , null , null , null , VAR_2 , true , null , false , null ) ; } 
private TYPE_1 < org.ovirt.engine.core.common.queries.IdQueryParameters > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.ovirt.engine.core.common.queries.IdQueryParameters VAR_2 = METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_2 . getId ( ) ) . thenReturn ( VAR_1 ) ; TYPE_1 < org.ovirt.engine.core.common.queries.IdQueryParameters > VAR_3 = METHOD_4 ( ) ; return VAR_3 ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_2 ) ; return VAR_3 . METHOD_2 ( VAR_1 ) ; } 
private void METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_3 ) ) ) { VAR_4 = true ; } } 
protected java.util.List < TYPE_1 . Network > METHOD_1 ( ) { return METHOD_2 ( false , false , false ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; } 
public TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.String > METHOD_1 ( TYPE_2 rs , int VAR_1 ) throws TYPE_3 { return new TYPE_1 ( METHOD_2 ( rs , STRING_1 ) , rs.getString ( STRING_2 ) ) ; } 
public void setId ( org.ovirt.engine.core.compat.Guid id ) { this . id = id ; } 
private boolean METHOD_1 ( ) { boolean VAR_1 = ! ( METHOD_2 ( ) ) ; return ( ! ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ) && ( VAR_1 || ( METHOD_3 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( ) . setIsChangable ( METHOD_3 ( ) . getEntity ( ) ) ; } 
public TYPE_1 getStatus ( ) { if ( ( VAR_1 ) == null ) { return null ; } return TYPE_1 . METHOD_2 ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) . add ( VAR_3 [ 0 ] ) ; return VAR_1 ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage ) { return TYPE_1 . METHOD_1 ( diskImage . METHOD_2 ( ) ) ; } 
private void METHOD_1 ( ) throws TYPE_1 { for ( TYPE_2 VAR_1 : TYPE_3 . getInstance ( ) . METHOD_2 ( ) ) { METHOD_1 ( VAR_1 ) ; } METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { get ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . setId ( id ) ; org.ovirt.engine.core.compat.Guid VAR_2 = VAR_3 ; TYPE_3 parameters = new TYPE_3 ( VAR_1 , VAR_2 ) ; return METHOD_3 ( VAR_4 , parameters ) ; } 
protected TYPE_1 . Network getEntity ( int VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_2 . METHOD_2 ( VAR_3 . Network class ) , false , false , false , VAR_1 ) ; } 
public java.lang.String getId ( ) { return this . id ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_4 ( ) ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , true ) ; return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( false ) ; METHOD_6 ( resource . get ( ) , 0 ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat . Version value ) { if ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) , value ) ) { this . VAR_1 = value ; } } 
protected boolean METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . getVm ( ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; resource . METHOD_5 ( VAR_5 ) ; } 
private TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) { TYPE_4 validator = new TYPE_4 ( VAR_1 , VAR_2 , VAR_3 ) ; return validator . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { cmd . getParameters ( ) . getVm ( ) . METHOD_3 ( STRING_1 ) ; TYPE_1 . METHOD_4 ( STRING_2 , cmd . METHOD_5 ( ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( cluster . getId ( ) ) , VAR_1 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; METHOD_2 ( ) ; } 
void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) ; 
private java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > METHOD_1 ( final org.ovirt.engine.core.common.businessentities.VM vm , final org.ovirt.engine.core.common.businessentities.VDS ... hosts ) { return VAR_1 . METHOD_2 ( new org.ovirt.engine.core.common.businessentities.VDSGroup ( ) , TYPE_2 . METHOD_3 ( hosts ) , vm , null ) ; } 
protected void METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities.DiskImage image : METHOD_3 ( ) ) { METHOD_4 ( image . METHOD_5 ( ) , VAR_2 , METHOD_6 ( image ) ) ; } } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return TYPE_1 . equals ( i . METHOD_2 ( ) , getParameters ( ) . METHOD_3 ( ) . getName ( ) ) ; } 
protected boolean METHOD_1 ( TYPE_1 value ) { return false ; } 
private TYPE_1 METHOD_1 ( TYPE_2 . DiskImage VAR_1 ) { return new TYPE_1 ( new TYPE_3 ( VAR_1 . getId ( ) , TYPE_4 . METHOD_2 ( ) ) , false ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , true , null ) ; } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { if ( ! ( getSucceeded ( ) ) ) { return ( VAR_2 ) == null ? VAR_3 : VAR_2 ; } return super . METHOD_1 ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , VAR_1 , METHOD_4 ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( java.lang.Boolean . TRUE ) . when ( VAR_1 ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { if ( ( getEntity ( ) ) != null ) { super . METHOD_1 ( ) ; } } 
void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , new TYPE_2 ( ) ) ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( final TYPE_2 VAR_1 , final java.lang.String VAR_2 , final java.lang.String VAR_3 ) { return TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 , TYPE_4 . METHOD_3 ( VAR_3 , VAR_4 ) , false , false ) ; } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { METHOD_1 ( ) . setSelectedItem ( storageDomain ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_2 ( VAR_2 ) . METHOD_2 ( VAR_1 , TYPE_3 . instance ) ; } 
private TYPE_1 METHOD_1 ( ) { return TYPE_2 . get ( VAR_1 class ) . METHOD_2 ( getStoragePoolId ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool source ) { return id . equals ( source . getId ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 . AuditLogType type , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( VAR_2 , type ) ; } 
public static java.util.Map < java.lang.String , java.lang.Integer > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 < org.ovirt.engine.core.compat.Guid > VAR_1 ) { this . VAR_1 = new TYPE_2 ( VAR_1 ) ; } 
public void setId ( org.ovirt.engine.core.compat.Guid id ) { this . id = id ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_2 ) ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , TYPE_1 . METHOD_3 ( ) . METHOD_4 ( STRING_1 , STRING_2 ) ) ; return true ; } 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) ; 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( validator ) . METHOD_3 ( ) ; } 
protected TYPE_1 METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > entities ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup entity : entities ) { VAR_1 . METHOD_2 ( ) . add ( METHOD_3 ( map ( entity ) ) ) ; } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( TYPE_2 < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { return new TYPE_1 ( params . getStoragePoolId ( ) , TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } 
public void onSuccess ( java.lang.String returnValue ) { VAR_1 = returnValue ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; METHOD_7 ( VAR_1 , new TYPE_2 ( TYPE_1 . METHOD_8 ( ) , TYPE_1 . METHOD_4 ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( VAR_2 , VAR_3 , VAR_5 ) ; VAR_6 . METHOD_5 ( VAR_7 ) ; return null ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { boolean VAR_1 = ( ( storageDomain . getStatus ( ) ) != null ) && ( ( storageDomain . getStatus ( ) ) == ( VAR_2 ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( null ) . when ( VAR_1 ) . get ( TYPE_1 . any ( ) ) ; TYPE_2 . METHOD_2 ( command , VAR_3 ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : 0 ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { if ( VAR_1 ) { VAR_2 = ( ( java.lang.Boolean ) ( VAR_3 . METHOD_2 ( VAR_4 ) ) ) ; } else { VAR_3 . METHOD_3 ( ) ; } return true ; } 
public void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { table . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
protected TYPE_1 . StorageDomain map ( TYPE_1 . StorageDomain entity , TYPE_1 . StorageDomain template ) { TYPE_3 resource = new TYPE_3 ( ) ; inject ( resource ) ; return resource . map ( entity , template ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 , VAR_4 ) ; return VAR_2 ; } 
TYPE_1 < org.ovirt.engine.core.common.businessentities.VmTemplate > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate entity ) { return new TYPE_2 ( entity ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , null ) ; METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_3 = METHOD_4 ( METHOD_5 ( VAR_1 ) ) ; METHOD_6 ( VAR_3 , VAR_4 , VAR_1 . getName ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( vds . getId ( ) ) . thenReturn ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; } 
protected abstract boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) ; 
public void METHOD_1 ( int value ) { VAR_1 . METHOD_1 ( value ) ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 < TYPE_2 > VAR_2 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( VAR_1 ) ) ; METHOD_3 ( VAR_2 ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { TYPE_1 . getTable ( ) . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; } 
public void METHOD_1 ( ) { getModel ( ) . METHOD_2 ( true ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_3 , VAR_1 . size ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( INT_1 , 0 , 0 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( nic ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_3 ( resource . get ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , 0 , true ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_6 ( VAR_2 ) ; } } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; return true ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( TYPE_4 . toString ( ) , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 , TYPE_2 VAR_3 , org.ovirt.engine.core.common.businessentities.VM vm , java.lang.String VAR_4 , final TYPE_3 VAR_5 ) { return METHOD_1 ( VAR_1 , VAR_2 , VAR_6 , VAR_3 , vm , true , VAR_4 , null , VAR_5 ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getVm ( ) . getStatus ( ) ) != ( VAR_1 ) ) { super . METHOD_1 ( ) ; } } 
public void METHOD_1 ( ) { TYPE_2 . METHOD_2 ( validator . METHOD_1 ( ) , TYPE_3 . METHOD_3 ( ) ) ; } 
public boolean getStatus ( ) { return this . status ; } 
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , METHOD_3 ( ) ) ; validate ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < java.lang.String > VAR_1 = dao . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_1 . isEmpty ( ) ) ; TYPE_1 . METHOD_4 ( VAR_1 . METHOD_5 ( VAR_3 . getName ( ) ) ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ! ( ( ( java.util.List < ? > ) ( source ) ) . isEmpty ( ) ) ; } return false ; } 
protected boolean METHOD_1 ( java.util.List < java.lang.String > VAR_1 , int VAR_3 ) { return TYPE_1 . METHOD_2 ( VAR_1 , METHOD_3 ( ) . size ( ) , VAR_3 ) ; } 
void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( null ) ; METHOD_3 ( null ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.VDS returnValue ) { VAR_1 = returnValue ; METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 parameters = METHOD_2 ( ) ; command = org.mockito.Mockito . METHOD_3 ( new TYPE_2 ( parameters ) ) ; } 
private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , final TYPE_3 VAR_2 ) { return TYPE_4 . METHOD_2 ( VAR_1 , new TYPE_3 ( ) . METHOD_3 ( VAR_4 , VAR_5 ) . METHOD_3 ( VAR_6 , VAR_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public final boolean METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return ( ( java.lang.Boolean ) ( getValue ( VAR_2 , name , VAR_1 ) ) ) . METHOD_3 ( ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( true ) ; } 
private void METHOD_1 ( ) { } 
protected java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName ( ) ; } 
public abstract TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 response ) ; 
public void METHOD_1 ( boolean value ) { this . VAR_1 = value ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( 2 ) ; METHOD_5 ( true ) ; TYPE_1 . METHOD_6 ( cmd . METHOD_7 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_6 ( ) ; return null ; } 
static TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_1 ( ) ; } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { return METHOD_2 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vmId ) , VAR_1 , VAR_2 , METHOD_4 ( ) , true , false ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; getModel ( ) . METHOD_2 ( ) . setEntity ( null ) ; } 
public TYPE_1 get ( org.ovirt.engine.core.compat.Guid id ) { return METHOD_1 ( ) . METHOD_2 ( STRING_1 , VAR_2 . instance , METHOD_3 ( id ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters , TYPE_1 VAR_1 ) { VAR_2 . error ( STRING_1 , METHOD_2 ( ) . getName ( ) ) ; return hosts ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { aQuery . METHOD_2 ( true ) ; TYPE_1 parameters = new TYPE_1 ( VAR_1 , VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , parameters , aQuery ) ; } 
protected static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.util.List < java.lang.String > VAR_1 ) { return ( ! ( TYPE_1 . METHOD_2 ( vmId , VAR_1 ) ) ) && ( TYPE_1 . METHOD_3 ( vmId ) ) ; } 
protected void METHOD_1 ( ) { addCanDoActionMessage ( VAR_1 ) ; addCanDoActionMessage ( VAR_2 ) ; addCanDoActionMessage ( VAR_3 ) ; log . METHOD_2 ( STRING_1 , TYPE_1 . METHOD_3 ( ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { METHOD_2 ( 1 , VAR_2 ) ; } 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) { this . VAR_1 = VAR_1 ; } else { this . VAR_1 = new java.util.ArrayList < > ( ) ; } } 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ( VAR_1 ) - > VAR_1 . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . METHOD_3 ( true , false ) ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) . getStoragePoolId ( ) ; } 
public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_2 ( value ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , METHOD_3 ( VAR_1 ) ) ) ) ; METHOD_4 ( cmd ) ; TYPE_3 . METHOD_5 ( cmd . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( java.lang.String name ) { VAR_1 . METHOD_2 ( name ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( ) { return new TYPE_2 < TYPE_1 > ( VAR_1 ) ; } 
private void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( STRING_1 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( STRING_2 ) ) . thenReturn ( VAR_1 ) ; } 
public void setEntity ( org.ovirt.engine.core.common.businessentities . Network value ) { super . setEntity ( value ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , TYPE_3 . instance , VAR_2 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { long VAR_2 = VAR_1 . METHOD_2 ( ) ; long VAR_3 = VAR_1 . METHOD_2 ( ) ; return new TYPE_1 ( VAR_3 , VAR_2 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network network ) { return network . METHOD_2 ( ) . equals ( METHOD_4 ( ) ) ; } 
public boolean METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( ( ( TYPE_2 ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) , METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) , true ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 view = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_2 ( ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = TYPE_1 . METHOD_2 ( ( ( TYPE_2 < TYPE_3 > ) ( returnValue ) ) ) ; METHOD_3 ( ) ; } 
public void onSuccess ( java.lang.Object VAR_1 ) { setItems ( ( ( TYPE_1 < org.ovirt.engine.core.common.businessentities.VM > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; } 
public void METHOD_1 ( ) { dao . METHOD_3 ( STRING_1 ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { METHOD_1 ( VAR_1 , false ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 ; } 
java.lang.String METHOD_1 ( java.lang.String size , java.lang.String VAR_1 ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 ) { try ( TYPE_2 VAR_2 = METHOD_2 ( ) ) { METHOD_3 ( VAR_1 , false ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_2 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_2 ) . METHOD_4 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { log . METHOD_2 ( STRING_1 , this , TYPE_3 . METHOD_4 ( VAR_1 ) ) ; if ( log . METHOD_5 ( ) ) { log . METHOD_6 ( STRING_2 , VAR_1 ) ; } } 
protected org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( ) { return new org.ovirt.engine.core.common.businessentities.network.Network ( ) ; } 
public boolean METHOD_1 ( ) { return true ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_2 . VM entity = getEntity ( ) ; return METHOD_2 ( METHOD_3 ( map ( entity , null ) , entity ) , null , new java.lang.String [ 0 ] ) ; } 
protected java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( getSucceeded ( ) ) { VAR_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; } } 
public static void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final TYPE_1 . VdcActionParametersBase parameters , final TYPE_2 VAR_2 , final java.lang.Object VAR_3 ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_1 , parameters , ( VAR_2 != null ? VAR_2 : VAR_4 ) , VAR_3 , true ) ; } 
private static double METHOD_1 ( double value ) { return TYPE_1 . METHOD_2 ( INT_1 , value ) ; } 
public void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > map = TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 . assertEquals ( 2 , map . size ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool result = dao . get ( VAR_1 . getId ( ) , VAR_2 , true ) ; METHOD_2 ( result ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 ) { METHOD_3 ( VAR_1 , false ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( constants . METHOD_3 ( ) ) ; VAR_3 . METHOD_2 ( constants . METHOD_4 ( ) ) ; } 
private boolean METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) { return ( METHOD_5 ( ) ) > ( VAR_1 < java.lang.Integer > getValue ( VAR_2 ) ) ; } return false ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( new TYPE_1 ( ) ) . when ( VAR_1 ) . METHOD_2 ( TYPE_2 . any ( ) ) ; TYPE_3 . METHOD_4 ( command , VAR_2 ) ; } 
private static java.lang.String METHOD_1 ( ) { return VAR_1 < java.lang.String > getValue ( VAR_2 ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( true ) ; VAR_1 . add ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( TYPE_3 . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; return METHOD_4 ( VAR_2 ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String name ) { TYPE_1 VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , name ) ; return VAR_2 == null ? TYPE_1 . valueOf ( FLOAT_1 ) : VAR_2 ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities . Network > METHOD_1 ( ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Network > list = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Network > ( ) ; list . add ( network ) ; return list ; } 
public java.lang.String METHOD_1 ( TYPE_2 VAR_1 ) { java.lang.String VAR_2 = TYPE_3 . getInstance ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return VAR_2 ; } 
private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . METHOD_2 ( STRING_1 , VAR_1 , TYPE_2 . METHOD_3 ( VAR_2 ) , VAR_4 . getId ( ) , VAR_4 . getName ( ) ) ; } 
private boolean METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities.VM vm : VAR_1 ) { if ( ( vm . getStatus ( ) ) != ( VAR_2 ) ) { return true ; } } return false ; } 
private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , METHOD_3 ( ) . getId ( ) , VAR_1 , true , true , true , true , false , true ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { java.lang.String VAR_2 = TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 . getStatus ( ) ) ; return VAR_2 ; } 
protected java.lang.String METHOD_1 ( ) { return getEntity ( ) . METHOD_3 ( ) ; } 
public org.ovirt.engine.core.compat.Guid getStoragePoolId ( ) { return this . id . getStoragePoolId ( ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_2 ( TYPE_1 . any ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( INT_1 , 0 , 1 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( nic ) ) ; } 
protected void METHOD_1 ( ) { METHOD_3 ( ) . METHOD_4 ( ( ! ( METHOD_2 ( ) ) ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( ) , TYPE_1 . METHOD_3 ( VAR_3 ) ) ) . thenReturn ( TYPE_2 . METHOD_4 ( new org.ovirt.engine.core.common.businessentities.VDS ( ) ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , METHOD_3 ( VAR_1 ) ) ) ) ; METHOD_4 ( cmd ) ; TYPE_3 . METHOD_5 ( cmd . METHOD_6 ( ) ) ; } 
public TYPE_1 get ( ) { return METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) , VAR_3 ) ; } 
protected org.ovirt.engine.core.common.businessentities.VDSGroup METHOD_1 ( java.lang.String id ) { return getEntity ( VAR_1 . VDSGroup class , VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( id ) ) , id ) ; } 
public boolean METHOD_1 ( ) { return org.ovirt.engine.core.common.businessentities.VM . METHOD_1 ( getStatus ( ) ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 ( new TYPE_2 ( vm ) , null ) ; } 
public java.lang.String METHOD_1 ( ) { return ( VAR_1 . METHOD_1 ( ) ) != null ? VAR_1 . METHOD_1 ( ) . getEntity ( ) : null ; } 
public java.lang.String getValue ( java.lang.Object object ) { return ( java.lang.String.valueOf ( ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( object ) ) . METHOD_1 ( ) ) ) + STRING_1 ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_2 ( ( ( TYPE_1 ) ( target ) ) ) ; } 
public void onSuccess ( java.lang.Boolean VAR_1 ) { VAR_2 . METHOD_1 ( ) . setEntity ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS host ) { context . host = host ; METHOD_2 ( ( ( host . getName ( ) . METHOD_4 ( CHAR_1 , CHAR_2 ) ) + STRING_1 ) ) ; METHOD_5 ( ) ; } 
public java.lang.String getName ( ) { return this . VAR_1 . getName ( ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate template ) { return template . METHOD_2 ( ) ; } 
private void METHOD_1 ( java.lang.Exception e ) { if ( e instanceof TYPE_2 ) { throw ( ( TYPE_2 ) ( e ) ) ; } else { throw new TYPE_2 ( e ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_1 resource ) { METHOD_2 ( VAR_1 class , resource ) ; return METHOD_3 ( resource , new TYPE_2 ( VAR_2 , VAR_3 . IdQueryParameters class ) , VAR_4 , new TYPE_3 ( ) ) ; } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat . Version VAR_1 ) { return VAR_4 ; } 
static TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 , TYPE_4 < TYPE_5 > , TYPE_6 > VAR_1 ) { return new TYPE_7 ( VAR_2 . METHOD_2 ( ) , 1 , VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . setId ( VAR_3 [ VAR_1 ] ) ; return VAR_2 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( new java.util.ArrayList ( TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ) ) ; } 
TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String id ) ; 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 . get ( TYPE_1 . METHOD_3 ( ) ) ) ; } 
private java.lang.String METHOD_1 ( ) { TYPE_1 < java.lang.String > VAR_1 = new TYPE_2 < > ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; return java.lang.String . METHOD_3 ( STRING_1 , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , int VAR_2 , int VAR_3 ) { return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , new org.ovirt.engine.core.compat . Version ( ) ) ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( STRING_1 ) ) ; return true ; } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_2 , TYPE_2 < java.lang.String > VAR_3 ) { return TYPE_3 . METHOD_1 ( network , VAR_1 , VAR_2 , null , VAR_3 , null , null ) ; } 
public void METHOD_1 ( ) { TYPE_2 . assertEquals ( STRING_1 , STRING_2 , VAR_1 . METHOD_2 ( STRING_1 ) ) ; TYPE_2 . assertEquals ( STRING_3 , STRING_2 , VAR_1 . METHOD_2 ( STRING_3 ) ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_3 ( this ) ; } return VAR_1 ; } 
int METHOD_1 ( ) { return 2 ; } 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String id ) ; 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { try ( TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 . METHOD_2 ( ) ) ) { return VAR_4 . METHOD_1 ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; } } 
public void METHOD_1 ( int value ) { VAR_1 = value ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new org.ovirt.engine.core.common.businessentities.VM ( ) , new java.util.ArrayList < > ( ) , null ) , false , VAR_2 ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM object ) { if ( METHOD_2 ( ) . METHOD_3 ( object ) ) { return VAR_1 . METHOD_5 ( ) ; } return VAR_1 . METHOD_6 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 . getName ( ) , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 quota ) { this . quota = quota ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , true , METHOD_4 ( iface . METHOD_6 ( ) , iface . METHOD_7 ( ) , iface . METHOD_8 ( ) ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . METHOD_4 ( ) ) ; } 
protected boolean validate ( ) { return ( validate ( METHOD_2 ( ) ) ) && ( METHOD_3 ( ) ) ; } 
public org.ovirt.engine.core.compat.Guid getId ( ) { return id ; } 
public void onSuccess ( java.lang.Boolean returnValue ) { model . METHOD_1 ( ) . setEntity ( returnValue ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; } 
public static org.ovirt.engine.core.compat.Guid METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { return null ; } return new org.ovirt.engine.core.compat.Guid ( VAR_1 ) ; } 
protected TYPE_1 . Disk METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) . get ( ( ( org.ovirt.engine.core.compat.Guid ) ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ) ) ; } return VAR_1 ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( VAR_1 , VAR_2 , TYPE_1 . getVm ( ) . getId ( ) , null , VAR_3 , STRING_1 , new TYPE_3 ( ) , null ) ) ; } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , true ) ; return null ; } 
public TYPE_1 METHOD_1 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat . Version value ) { this . VAR_1 = value ; } 
protected TYPE_1 . DiskImage METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) . isEmpty ( ) ) ) { return METHOD_2 ( ) . get ( 0 ) ; } return null ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , long VAR_2 ) { return new TYPE_1 ( VAR_3 , VAR_1 . METHOD_2 ( ) , VAR_4 , VAR_2 , METHOD_4 ( ) ) ; } 
private java.lang.String METHOD_1 ( int VAR_1 ) { return new org.ovirt.engine.core.compat.Guid ( ( STRING_1 + VAR_1 ) ) . toString ( ) ; } 
private java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = ( VAR_2 < java.lang.Boolean > getValue ( VAR_3 ) ) ? VAR_4 : VAR_5 ; java.lang.String VAR_6 = TYPE_1 . getValue ( VAR_7 ) ; return VAR_1 + VAR_6 ; } 
public void METHOD_1 ( boolean value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters , final boolean VAR_2 , final TYPE_2 VAR_3 , final java.lang.Object VAR_4 ) { METHOD_1 ( VAR_1 , parameters , VAR_2 , VAR_3 , VAR_4 , true , false ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > list = new java.util.ArrayList < > ( ) ; list . add ( METHOD_2 ( VAR_3 , VAR_4 ) ) ; return list ; } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { TYPE_1 . getInstance ( ) . METHOD_1 ( VAR_1 , cluster . getName ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; assertEquals ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 ) , VAR_2 ) ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList ( TYPE_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) ; TYPE_3 . METHOD_4 ( VAR_1 , new TYPE_4 ( ) ) ; return VAR_1 ; } 
void METHOD_1 ( TYPE_1 event ) { VAR_3 . METHOD_2 ( column , VAR_2 . getValue ( ) ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , org.ovirt.engine.core.common.businessentities.VDS vds ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , vds ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; return VAR_2 ; } 
protected boolean validate ( ) { TYPE_1 VAR_1 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; return validate ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ) ; } 
void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 type , boolean VAR_2 , org.ovirt.engine.core.compat.Guid VAR_4 ) ; 
public void METHOD_1 ( ) { parameters . METHOD_2 ( TYPE_1 ) ; TYPE_2 . METHOD_3 ( command , VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( boolean VAR_1 ) { TYPE_1 cluster = new TYPE_1 ( ) ; cluster . setId ( VAR_2 ) ; cluster . METHOD_2 ( false ) ; cluster . METHOD_3 ( VAR_1 ) ; return cluster ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , false ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) , VAR_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , true , iface . METHOD_4 ( ) , iface . METHOD_5 ( ) , iface . METHOD_6 ( ) , iface . METHOD_7 ( ) ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network object ) { return object . METHOD_2 ( ) . getStatus ( ) ; } 
private void METHOD_1 ( java.lang.Object target ) { if ( target instanceof TYPE_1 ) { TYPE_2 VAR_1 = ( ( TYPE_1 ) ( target ) ) . getWindow ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_1 ( ) ; } } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; } 
void METHOD_1 ( ) { METHOD_2 ( VAR_1 class ) ; METHOD_3 ( VAR_3 class ) . METHOD_4 ( ) ; METHOD_3 ( VAR_4 class ) . METHOD_4 ( ) ; } 
protected void METHOD_1 ( TYPE_1 value , TYPE_2 widget ) { super . METHOD_1 ( value , widget ) ; ++ ( VAR_2 ) ; METHOD_4 ( ) ; } 
public org.ovirt.engine.core.compat.Guid getStoragePoolId ( ) { return METHOD_1 ( ) . getStoragePoolId ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; METHOD_6 ( resource . get ( ) , 0 ) ; } 
protected void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) ; return ; } METHOD_4 ( ( ( TYPE_1 . getVm ( ) ) != null ? TYPE_1 . getVm ( ) . getStatus ( ) : VAR_1 ) ) ; } 
private void METHOD_1 ( int VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; } 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_1 ( ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 < TYPE_2 > ( METHOD_2 ( ) , null ) { protected void METHOD_3 ( ) { } } ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 ) { VAR_2 = new TYPE_1 ( METHOD_2 ( ) ) ; VAR_3 . METHOD_3 ( ( ( VAR_3 . METHOD_4 ( ) ) - 1 ) ) ; VAR_3 . add ( VAR_2 ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( VAR_3 ) ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( ) { validator = TYPE_2 . METHOD_2 ( ) ; TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_3 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . getValue ( VAR_3 , VAR_4 ) ) . thenReturn ( VAR_5 ) ; return VAR_1 ; } 
protected TYPE_1 METHOD_1 ( ) { throw new TYPE_2 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = null ; synchronized ( VAR_2 ) { VAR_1 = VAR_3 . get ( METHOD_2 ( ) ) ; } return VAR_1 ; } 
void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_5 ( validator . METHOD_6 ( VAR_2 ) . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( final TYPE_1 model ) { super . METHOD_1 ( model ) ; METHOD_3 ( model ) ; METHOD_4 ( model ) ; METHOD_5 ( model ) ; METHOD_7 ( model ) ; } 
public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; } } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { return object . getStatus ( ) ; } 
public void METHOD_1 ( ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; } 
public java.lang.Object METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool pool = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( VAR_1 . getId ( ) ) ; pool . METHOD_3 ( null ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_4 ( pool ) ; return null ; } 
public TYPE_1 METHOD_2 ( ) { return node . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 . EngineMessage VAR_1 = VAR_2 ; TYPE_2 . METHOD_2 ( METHOD_3 ( null ) . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( VAR_1 , TYPE_4 . METHOD_6 ( VAR_1 , null ) ) ) ; } 
public void METHOD_1 ( TYPE_1 value ) { status = value ; } 
public void METHOD_1 ( TYPE_1 event ) { disk . METHOD_2 ( ) . setEntity ( true ) ; METHOD_4 ( disk ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , true , iface . METHOD_4 ( ) , iface . METHOD_5 ( ) , 0 , iface . METHOD_6 ( ) ) ; } 
protected TYPE_1 . Disk METHOD_1 ( TYPE_1 . Disk model , TYPE_1 . Disk entity ) { return VAR_1 . METHOD_1 ( model , entity ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = null ; TYPE_2 VAR_2 = VAR_3 ; assertEquals ( TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 ) , VAR_2 ) ; } 
java.lang.String METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { return VAR_1 < java.lang.String > getValue ( VAR_2 , version . getValue ( ) ) ; } 
public void METHOD_1 ( ) { command . getParameters ( ) . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( command , VAR_2 ) ; } 
public java.lang.String METHOD_2 ( java.lang.String VAR_1 ) { return METHOD_2 ( VAR_1 , true ) ; } 
public org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup ( ) { return super . getVdsGroup ( ) ; } 
public int METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String obj , java.lang.String VAR_1 ) { final TYPE_2 VAR_3 = METHOD_2 ( obj ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; } return null ; } 
protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) { return METHOD_4 ( VAR_3 ) ; } return true ; } 
public boolean validate ( ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( ) } ) ; return METHOD_2 ( ) . METHOD_4 ( ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 , TYPE_2 . getVm ( ) , METHOD_2 ( ) , TYPE_2 . METHOD_3 ( ) ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool storage ) { return storage . getName ( ) ; } 
public TYPE_1 list ( ) { return METHOD_2 ( METHOD_4 ( VAR_3 , METHOD_5 ( ) ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { return new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 , null ) ; } 
public void METHOD_1 ( final TYPE_1 value ) { VAR_1 = ( value == null ) ? new TYPE_1 ( ) : value ; } 
protected java.util.List < TYPE_1 . Network > METHOD_1 ( ) { return METHOD_2 ( false , false , false , false ) ; } 
void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , TYPE_3 . instance ( ) . getSelectedItem ( ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; resource . METHOD_7 ( VAR_7 ) ; } 
public void METHOD_1 ( java.lang.String [ ] args ) { METHOD_3 ( args ) ; METHOD_4 ( args ) ; METHOD_5 ( args ) ; } 
public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , type , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 ) ; } 
public boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( METHOD_3 ( ) . getName ( ) , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_4 , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , VAR_2 ) ) ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.lang.String VAR_2 ) { TYPE_2 . assertEquals ( VAR_1 . METHOD_2 ( ) . map ( TYPE_3 : : METHOD_3 ) . METHOD_4 ( ) . METHOD_5 ( null ) , VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( 0 , 1 , 2 , INT_1 , INT_2 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( nic ) ) ; } 
private void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } TYPE_1 . METHOD_2 ( METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , true ) ; } 
protected void addCanDoActionMessage ( TYPE_1 . EngineMessage VAR_1 ) { super . addCanDoActionMessage ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 , org.ovirt.engine.core.common.businessentities.VmTemplate > object ) { return object . METHOD_2 ( ) . getStatus ( ) ; } 
protected boolean METHOD_1 ( java.lang.String VAR_1 ) { return ! ( VAR_1 . isEmpty ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_4 ( ) . getId ( ) ) ) ) ; setItems ( METHOD_5 ( ) . METHOD_6 ( ) ) ; } 
public static org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( ) ) + ( VAR_1 . METHOD_4 ( ) ) ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , true , java.lang.Boolean . FALSE , true ) ; } 
private void METHOD_1 ( final TYPE_1 < TYPE_2 > . VAR_1 context ) { METHOD_2 ( context . entity , VAR_2 ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 ) { TYPE_1 < ? > VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_3 . getParameters ( ) . METHOD_3 ( false ) ; METHOD_4 ( VAR_3 , false ) ; } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_3 ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) , 1 , VAR_1 . METHOD_4 ( ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 . EngineMessage VAR_1 ) { TYPE_1 returnValue = new TYPE_1 ( ) ; returnValue . METHOD_2 ( false ) ; returnValue . METHOD_3 ( ) . add ( VAR_1 . toString ( ) ) ; return returnValue ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , METHOD_5 ( ) , TYPE_2 . getReturnValue ( ) . METHOD_6 ( ) ) ; } 
protected boolean METHOD_1 ( TYPE_1 model ) { return model . METHOD_2 ( ) . METHOD_3 ( ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue value ) { METHOD_1 ( ( ( java.util.List < TYPE_1 > ) ( value . getReturnValue ( ) ) ) ) ; } 
private TYPE_1 METHOD_2 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) ; } 
public void onSuccess ( java.lang.Boolean returnValue ) { VAR_1 = returnValue ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; METHOD_5 ( ) ; VAR_5 . METHOD_4 ( VAR_6 ) ; return null ; } 
public void METHOD_1 ( ) { final java.lang.String e = STRING_1 ; VAR_1 . METHOD_2 ( e ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( e , VAR_2 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid id , java.lang.String VAR_1 ) { java.lang.Integer VAR_2 = VAR_3 < java.lang.Integer > getValue ( VAR_4 ) ; return METHOD_1 ( id , VAR_1 , VAR_2 . METHOD_3 ( ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getInstance ( ) . METHOD_2 ( TYPE_3 . getParameters ( ) . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( true ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; final org.ovirt.engine.core.common.businessentities.VmTemplate VAR_3 = VAR_1 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( VAR_3 ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 , false , null , null , VAR_2 , true ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( VAR_2 class , VAR_3 ) ; } 
private void METHOD_1 ( java.lang.Object sender , TYPE_1 args ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; METHOD_5 ( ) ; } 
private TYPE_1 getModel ( ) { TYPE_1 quota = new TYPE_1 ( ) ; quota . setId ( VAR_1 [ 0 ] . toString ( ) ) ; quota . METHOD_1 ( VAR_2 [ 0 ] ) ; quota . METHOD_2 ( INT_1 ) ; return quota ; } 
protected void METHOD_1 ( ) { log . METHOD_2 ( STRING_1 , TYPE_1 . METHOD_3 ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_1 ( VAR_1 , false ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 validator = METHOD_2 ( VAR_1 , VAR_2 ) ; return ( METHOD_3 ( VAR_1 , VAR_2 ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; iface . METHOD_3 ( STRING_1 ) ; TYPE_1 . METHOD_4 ( STRING_2 , TYPE_2 . METHOD_5 ( null , null , iface ) ) ; } 
public org.ovirt.engine.core.common.businessentities.VM getVm ( ) { if ( getParameters ( ) . METHOD_2 ( ) ) { return getParameters ( ) . getVm ( ) ; } return super . getVm ( ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( a . METHOD_2 ( ) ) == type ; } 
public void onSuccess ( java.lang.Object result ) { METHOD_1 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; VAR_1 super . METHOD_2 ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId ( ) ) ) ; } 
protected TYPE_1 < TYPE_2 > getParameters ( ) { TYPE_1 < TYPE_2 > parameters = new TYPE_1 ( ) ; parameters . METHOD_1 ( METHOD_2 ( ) ) ; return parameters ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 < org.ovirt.engine.core.compat.Guid > ( ) , METHOD_2 ( id ) ) ; return inject ( new TYPE_4 ( VAR_2 class , VAR_3 , VAR_1 ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , true ) ; } 
public void METHOD_1 ( TYPE_1 context , java.lang.String value , TYPE_2 VAR_1 , java.lang.String id ) { VAR_2 . METHOD_1 ( context , value , VAR_1 ) ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters , final TYPE_2 VAR_2 ) { METHOD_1 ( VAR_1 , parameters , VAR_2 , null ) ; } 
public void METHOD_1 ( ) { if ( ( getEntity ( ) ) != null ) { METHOD_2 ( ( STRING_1 + ( getEntity ( ) . getName ( ) ) ) ) ; super . METHOD_1 ( ) ; } } 
public static TYPE_1 getInstance ( ) { return TYPE_1 . getInstance ( null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) , true , true ) ; } 
protected < TYPE_1 > TYPE_2 < TYPE_3 < TYPE_1 > > METHOD_1 ( ) { return TYPE_4 . METHOD_2 ( ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.ArrayList < TYPE_2 . VdcActionParametersBase > parameters ) { return METHOD_2 ( VAR_1 , parameters , true , false ) ; } 
protected TYPE_1 . VdcQueryReturnValue METHOD_1 ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 parameters ) { return METHOD_3 ( ) . METHOD_1 ( VAR_1 , parameters , METHOD_4 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( VAR_1 , STRING_1 ) ; return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { resource . METHOD_3 ( STRING_1 ) ; METHOD_4 ( STRING_2 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_5 ( VAR_2 ) ; } } 
public void METHOD_1 ( ) { METHOD_3 ( true ) ; METHOD_4 ( ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList ( TYPE_2 . METHOD_2 ( new TYPE_1 [ ] { VAR_2 , VAR_3 , VAR_4 , VAR_5 } ) ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( this ) ; getTable ( ) . METHOD_3 ( VAR_1 ) ; } 
protected boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; this . VAR_3 = null ; this . VAR_4 = null ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; assertEquals ( TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 ) , VAR_2 ) ; } 
protected boolean METHOD_1 ( TYPE_1 value ) { org.ovirt.engine.ui.uicommonweb.UICommand command = METHOD_2 ( value ) ; return command != null ? command . METHOD_3 ( ) : true ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand value ) { VAR_1 = value ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_3 , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_1 , result . size ( ) ) ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 > entities ) { if ( entities . isEmpty ( ) ) { return ; } TYPE_3 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) , entities , METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.String value ) { VAR_1 = value ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , INT_1 , false ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate entity ) { return entity . getStoragePoolId ( ) . getValue ( ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < TYPE_2 > entities ) { if ( VAR_1 == null ) { VAR_1 = TYPE_3 . METHOD_3 ( ) ; } for ( TYPE_2 entity : entities ) { TYPE_3 . METHOD_2 ( entity , VAR_1 ) ; } } 
protected boolean METHOD_1 ( ) { return true ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid VAR_1 , int type ) { return METHOD_1 ( storageDomain , VAR_1 , type , null , VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( ) { return TYPE_2 . getInstance ( ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities . Network object ) { return object . METHOD_1 ( ) ? constants . METHOD_2 ( ) : constants . METHOD_3 ( ) ; } 
protected boolean METHOD_1 ( ) { return ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) != null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( ) { return METHOD_2 ( VAR_2 ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { return new TYPE_1 < TYPE_2 > ( VAR_1 , VAR_1 . METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = null ; if ( STRING_1 . equals ( VAR_1 ) ) { VAR_2 = new TYPE_3 ( VAR_3 class ) ; } return VAR_2 ; } 
public static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; return VAR_1 ; } 
protected void METHOD_1 ( ) { VAR_3 = METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_3 ) ; } 
void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = new TYPE_3 ( VAR_1 , VAR_2 ) ; } 
public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( METHOD_4 ( ) ) ; } 
public static TYPE_1 < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > VAR_2 ) { return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { synchronized ( VAR_1 ) { METHOD_3 ( ) ; } } else { METHOD_3 ( ) ; } } 
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; } 
public final java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String network ) { for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface : METHOD_2 ( ) . METHOD_3 ( ) ) { if ( network . equals ( iface . METHOD_4 ( ) ) ) { return iface ; } } return null ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . getParameters ( ) . METHOD_6 ( ) , TYPE_1 . getParameters ( ) . getStoragePoolId ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 . METHOD_2 ( vds . getStoragePoolId ( ) , vds . getId ( ) , vds . getName ( ) ) ; return new TYPE_1 ( true , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.VM vm , final TYPE_2 VAR_2 ) { return METHOD_1 ( VAR_1 , vm , VAR_3 , STRING_1 , null , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) . METHOD_5 ( getParameters ( ) . METHOD_6 ( ) , VAR_2 ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; } 
private boolean METHOD_1 ( java.lang.Object VAR_1 ) { return ( ( VAR_1 != null ) && ( VAR_1 instanceof org.ovirt.engine.core.common.businessentities.VmTemplate ) ) && ( TYPE_1 . equals ( ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( VAR_1 ) ) . getId ( ) ) ) ; } 
public static void METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.ArrayList < TYPE_2 . VdcActionParametersBase > parameters ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_1 ( VAR_1 , parameters , null , null ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName ( ) . equals ( getParameters ( ) . METHOD_3 ( ) . getName ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; METHOD_5 ( 1 ) ; METHOD_6 ( ) ; VAR_2 . METHOD_8 ( resource . get ( ) , VAR_3 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , null ) ; METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_3 = METHOD_4 ( METHOD_5 ( VAR_1 , VAR_1 ) ) ; METHOD_6 ( VAR_3 , VAR_4 , VAR_1 . getName ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; VAR_1 super . METHOD_3 ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId ( ) ) ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = METHOD_2 ( VAR_1 , STRING_2 , STRING_3 , STRING_4 ) ; METHOD_2 ( VAR_2 , STRING_5 , STRING_6 , STRING_7 ) ; } 
public void METHOD_1 ( TYPE_1 iface ) { super . METHOD_1 ( iface ) ; } 
private void METHOD_1 ( ) { for ( java.lang.String TYPE_1 : VAR_1 ) { METHOD_1 ( TYPE_1 , TYPE_1 ) ; } } 
public void METHOD_1 ( ) { parameters = new TYPE_1 ( VAR_1 , STRING_1 , VAR_2 ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return getEntity ( ) . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS object ) { return object . getStatus ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_3 ( validator . METHOD_1 ( ) , TYPE_2 . METHOD_4 ( ) ) ; } 
public abstract TYPE_1 METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) ; 
protected boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( TYPE_1 . getVm ( ) . METHOD_3 ( ) , TYPE_1 . getParameters ( ) . METHOD_4 ( ) , TYPE_1 . getVm ( ) . getStatus ( ) ) ; } 
public byte METHOD_1 ( ) { return ( ( byte ) ( METHOD_2 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_2 . METHOD_4 ( VAR_1 ) , VAR_2 . getValue ( ) ) ; } 
protected static org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { return TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 0 , false ) ; METHOD_3 ( METHOD_4 ( ) ) ; METHOD_6 ( resource . get ( ) , 0 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; } 
protected void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_1 ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 command = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( command . validate ( ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 model ) { if ( model . METHOD_2 ( ) . getEntity ( ) ) { return METHOD_3 ( model . METHOD_4 ( ) ) ; } else { return null ; } } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.StoragePool returnValue ) { METHOD_1 ( returnValue ) ; VAR_1 . onSuccess ( returnValue ) ; } 
private void METHOD_1 ( ) { try { TYPE_1 . log ( VAR_1 , METHOD_2 ( ) ) ; } catch ( TYPE_2 VAR_2 ) { log . error ( STRING_1 , VAR_2 ) ; } } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 . getId ( ) , VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; org.ovirt.engine.core.common.businessentities.StoragePool result = dao . get ( VAR_1 . getId ( ) ) ; METHOD_4 ( result ) ; } 
< TYPE_1 > TYPE_1 getValue ( TYPE_2 VAR_1 , java.lang.String version ) ; 
protected boolean validate ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) , TYPE_1 . getParameters ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; } 
public void METHOD_1 ( final TYPE_1 object ) { super . METHOD_1 ( object ) ; METHOD_2 ( object ) ; if ( object . METHOD_3 ( ) ) { object . METHOD_4 ( ) . setEntity ( 1 ) ; VAR_1 . METHOD_5 ( false ) ; } } 
public TYPE_1 list ( ) { TYPE_1 VAR_1 = METHOD_1 ( METHOD_2 ( ) : : list ) ; VAR_1 . METHOD_3 ( ) . METHOD_5 ( TYPE_2 : : METHOD_6 ) ; return VAR_1 ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = TYPE_1 . METHOD_2 ( ) ; return vds != null ? vds . getId ( ) : null ; } 
public org.ovirt.engine.core.compat.Guid getStoragePoolId ( ) { return this . VAR_1 ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 ) ; TYPE_1 result = dao . METHOD_3 ( VAR_1 . getName ( ) ) ; TYPE_2 . METHOD_5 ( result ) ; TYPE_2 . assertEquals ( VAR_1 , result ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , TYPE_1 VAR_1 ) { return TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_3 , new TYPE_3 ( vmId ) , TYPE_4 . METHOD_3 ( VAR_1 ) ) . getSucceeded ( ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 ) { return TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 , pool . METHOD_3 ( ) ) ; } 
protected void METHOD_1 ( ) { resource . METHOD_3 ( VAR_2 ) ; resource . METHOD_4 ( VAR_3 ) ; resource . METHOD_5 ( VAR_4 ) ; } 
public java.lang.String METHOD_1 ( TYPE_2 object ) { return TYPE_4 . METHOD_3 ( object . METHOD_4 ( ) , STRING_1 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return VAR_1 . getName ( ) . equals ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public TYPE_1 getStatus ( ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } 
protected TYPE_1 METHOD_1 ( ) { return getEntity ( VAR_1 class , VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_3 ) , VAR_3 . toString ( ) ) ; } 
public void METHOD_1 ( ) { switch ( getVdsGroup ( ) . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( METHOD_4 ( ) ) ; break ; case VAR_2 : METHOD_3 ( METHOD_4 ( ) , true ) ; break ; default : break ; } } 
public static < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 value , java.lang.String version ) { return TYPE_3 . METHOD_2 ( ) . < TYPE_1 > getValue ( value , version ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 , false ) ; TYPE_2 . assertEquals ( VAR_1 . get ( 0 ) . METHOD_3 ( ) , STRING_1 ) ; } 
public static TYPE_1 . VdcQueryReturnValue METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { return new TYPE_1 . VdcQueryReturnValue ( ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { return ; } VAR_1 = TYPE_1 . METHOD_2 ( ) . getStatus ( ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( result . isEmpty ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 result , TYPE_2 model ) { model . METHOD_2 ( METHOD_4 ( result ) . value ( ) ) ; METHOD_5 ( model , VAR_1 , METHOD_6 ( result . METHOD_7 ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 object = METHOD_2 ( STRING_1 ) ; TYPE_2 . assertEquals ( STRING_2 , object . id ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { command . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , false ) , null ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid host ) { VAR_1 . add ( host ) ; } 
public void METHOD_1 ( ) { model . METHOD_2 ( ) ; METHOD_3 ( new TYPE_1 ( ) { public void METHOD_4 ( ) { model . METHOD_5 ( ) ; } } ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 vm = new TYPE_1 ( ) ; vm . METHOD_2 ( STRING_1 ) ; vm . METHOD_3 ( VAR_1 ) ; TYPE_3 . METHOD_5 ( vm , STRING_2 , STRING_3 ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 == null ) || ( VAR_1 . isEmpty ( ) ) ) { VAR_2 = this . VAR_3 ; } else { VAR_2 = VAR_4 . METHOD_3 ( VAR_3 ) ; } } 
public java.lang.String METHOD_1 ( TYPE_2 . DiskImage diskImage ) { java.lang.String status = TYPE_3 . getInstance ( ) . METHOD_2 ( diskImage . METHOD_3 ( ) ) ; return status ; } 
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( true ) ; TYPE_2 . METHOD_6 ( command . validate ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( TYPE_2 . getVdsGroup ( ) ) != null ) { TYPE_3 . getInstance ( ) . METHOD_2 ( TYPE_2 . getVm ( ) . METHOD_3 ( ) , VAR_1 ) ; } } 
protected boolean METHOD_2 ( ) { return true ; } 
protected abstract TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 , int VAR_4 , TYPE_4 VAR_5 ) throws TYPE_5 ; 
protected abstract TYPE_1 METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 ) ; 
public java.util.List < org.ovirt.engine.core.compat.Guid > METHOD_1 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return inject ( new TYPE_2 ( VAR_1 , VAR_2 , id , this ) ) ; } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { VAR_2 . put ( VAR_3 , VAR_1 ) ; METHOD_1 ( VAR_1 ) ; } 
public org.ovirt.engine.ui.uicommonweb.UICommand METHOD_1 ( ) { return ( VAR_1 ) != null ? VAR_1 : super . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel object ) { return ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( object . getEntity ( ) ) ) . getStatus ( ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return vds . getName ( ) ; } 
public static TYPE_1 < TYPE_2 . ValidationResult > METHOD_1 ( TYPE_3 . EngineMessage VAR_1 , java.lang.String ... VAR_2 ) { return new TYPE_4 ( VAR_1 , VAR_2 ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate VAR_1 , org.ovirt.engine.core.common.businessentities.VmTemplate VAR_2 ) { return VAR_1 . getName ( ) . METHOD_3 ( VAR_2 . getName ( ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { TYPE_1 . METHOD_1 ( VAR_1 , cluster . getName ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; command . getParameters ( ) . METHOD_4 ( null ) ; TYPE_4 . METHOD_6 ( command , VAR_3 ) ; } 
public void METHOD_1 ( ) throws TYPE_2 { VAR_2 = TYPE_3 . getInstance ( ) ; } 
public void METHOD_1 ( java.lang.String value ) { this . value = value ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 ) { return VAR_1 . getName ( ) . equals ( getParameters ( ) . METHOD_2 ( ) ) ; } 
void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 class ) ; METHOD_4 ( VAR_4 class ) . METHOD_5 ( VAR_3 class ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.VM vm , java.lang.String VAR_2 , final TYPE_2 VAR_3 ) { return METHOD_1 ( VAR_1 , vm , VAR_4 , VAR_2 , null , VAR_3 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_8 ( ) . METHOD_9 ( ) ; } 
public TYPE_1 list ( ) { org.ovirt.engine.core.common.queries.IdQueryParameters params = new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) ; return METHOD_2 ( METHOD_3 ( VAR_2 , params ) ) ; } 
public java.lang.Boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.compat.Guid vmId ) { TYPE_1 params = new TYPE_1 ( VAR_1 , vmId , true ) ; params . METHOD_2 ( getParameters ( ) . METHOD_3 ( ) ) ; return params ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { boolean VAR_1 = ( VAR_2 ) && ( ! ( VAR_3 ) ) ; if ( VAR_1 ) { VAR_4 . METHOD_2 ( VAR_5 , STRING_1 ) ; } VAR_6 . METHOD_3 ( VAR_7 , VAR_1 ) ; return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( VAR_2 ) ; VAR_3 = new TYPE_1 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true ) ; java.util.List < java.lang.String > VAR_1 = VAR_2 . METHOD_1 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ; TYPE_2 . METHOD_5 ( VAR_1 . METHOD_6 ( VAR_4 ) ) ; } 
protected TYPE_1 < ? extends TYPE_2 > METHOD_1 ( ) { return new TYPE_1 ( METHOD_2 ( ) ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 , java.lang.String iface ) { return ( ( iface != null ) && ( VAR_1 != null ) ) && ( iface . equals ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 context , TYPE_1 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { return METHOD_1 ( context , VAR_1 , VAR_2 , VAR_3 , false ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup object ) { return object . getName ( ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return VAR_2 ; } 
public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 . getId ( ) . toString ( ) ) ; return VAR_4 . METHOD_4 ( VAR_1 ) ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; return true ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > list ) { if ( ( list . size ( ) ) <= 0 ) { return ; } VAR_1 . put ( list . get ( 0 ) . METHOD_2 ( ) , list ) ; } 
protected void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == null ) { return ; } super . METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_2 ( ) . getId ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 model = getModel ( ) ; METHOD_2 ( model ) ; VAR_1 . METHOD_1 ( model ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return vds == null ? STRING_1 : vds . getName ( ) ; } 
public static boolean METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , org.ovirt.engine.core.compat.Guid id ) { for ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 : VAR_1 ) { if ( VAR_2 . getId ( ) . equals ( id ) ) { return true ; } } return false ; } 
public void METHOD_1 ( double value ) { VAR_1 = value ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_3 = METHOD_1 ( VAR_2 ) ; return VAR_3 . toString ( ) ; } 
public void METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { } 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_3 ( VAR_2 ) ) ; } 
public void onSuccess ( TYPE_3 . VdcQueryReturnValue returnValue ) { METHOD_1 ( ) . setItems ( ( ( TYPE_1 < TYPE_2 > ) ( returnValue . getReturnValue ( ) ) ) ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void onSuccess ( TYPE_1 . VdcQueryReturnValue returnValue ) { TYPE_2 VAR_2 = returnValue . getReturnValue ( ) ; if ( VAR_2 != null ) { METHOD_1 ( VAR_2 ) ; } } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( VAR_1 class , getEntity ( VAR_2 . List class , VAR_3 , METHOD_3 ( ) ) ) ; } 
public int METHOD_6 ( ) { return VAR_2 . METHOD_6 ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; setItems ( METHOD_6 ( ) . METHOD_7 ( ) ) ; } 
protected TYPE_1 . Disk METHOD_1 ( ) { TYPE_1 . Disk VAR_1 = new TYPE_1 . Disk ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( true ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . Disk > result = dao . METHOD_2 ( null , null , VAR_1 , true ) ; TYPE_1 . METHOD_3 ( result ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( TYPE_1 . getParameters ( ) . getId ( ) , false ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 ) ) ; } 
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = org.mockito.Mockito . METHOD_3 ( new TYPE_2 ( VAR_1 ) ) ; } 
public boolean METHOD_1 ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) == ( VAR_1 ) ; } 
public static java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { return VAR_2 . getEntity ( VAR_3 . List class , VAR_4 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , STRING_1 , true ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; return METHOD_3 ( VAR_1 , new TYPE_2 ( VAR_3 , VAR_4 . IdQueryParameters class ) , VAR_5 , new TYPE_3 ( ) ) ; } 
public boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 < TYPE_1 > VAR_1 , TYPE_4 < TYPE_1 > VAR_2 , TYPE_5 < TYPE_1 > VAR_3 ) { return new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( TYPE_1 . getVm ( ) ) != null ) { VAR_1 = VAR_2 . METHOD_2 ( TYPE_1 . getVm ( ) ) ; } METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 . getId ( ) ) ; TYPE_1 . METHOD_4 ( result . isEmpty ( ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_3 . METHOD_4 ( ) ) . thenReturn ( VAR_1 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 ) { return VAR_1 . getName ( ) . equals ( i . getName ( ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( null ) ; } 
private boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; return ( validate ( VAR_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( null ) . when ( command ) . METHOD_2 ( TYPE_1 . any ( VAR_1 class ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( resource . get ( ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_4 ( false ) ; } 
private java.lang.String METHOD_1 ( ) { return STRING_1 ; } 
public boolean METHOD_1 ( ) { return METHOD_2 ( ) ; } 
protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . toString ( ) ) ; TYPE_1 . METHOD_4 ( ) ; METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_3 ) . getStatus ( ) ) ; } 
protected void METHOD_1 ( ) { try { METHOD_2 ( ) ; VAR_1 = false ; TYPE_1 . METHOD_3 ( false ) ; METHOD_4 ( ) ; } finally { TYPE_1 . METHOD_5 ( ) ; } } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . getName ( ) , TYPE_2 . getStoragePoolId ( ) ) ? METHOD_3 ( VAR_1 ) : true ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { return object . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { try { METHOD_1 ( ( ( long ) ( VAR_1 ) ) ) ; } catch ( java.lang.Exception e ) { VAR_2 . error ( STRING_1 , e ) ; } } 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { super . METHOD_1 ( model , VAR_1 ) ; TYPE_2 . METHOD_2 ( model ) ; } 
public void METHOD_1 ( ) { VAR_1 . get ( ) . METHOD_2 ( ) ; TYPE_1 . assertEquals ( STRING_2 , METHOD_3 ( ) . get ( STRING_1 ) . METHOD_4 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return TYPE_1 . valueOf ( ( ( java.lang.String ) ( TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 ) ) ) ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_2 = dao . METHOD_3 ( ) ; TYPE_2 . assertEquals ( 1 , VAR_2 . size ( ) ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 parameters = new TYPE_2 ( ) ; parameters . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; parameters . METHOD_4 ( VAR_2 ) ; return METHOD_5 ( VAR_3 class , VAR_4 , parameters ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName ( ) . equals ( METHOD_3 ( ) ) ; } 
public int METHOD_1 ( ) { return INT_1 ; } 
protected TYPE_1 METHOD_1 ( java.lang.String id ) { return getEntity ( VAR_1 class , VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( new org.ovirt.engine.core.compat.Guid ( id ) ) , id ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) ) ; } 
protected org.ovirt.engine.core.common.businessentities.VM getEntity ( int VAR_1 ) { return TYPE_1 . METHOD_1 ( ) ; } 
private TYPE_1 < ? > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( STRING_1 , null ) ; METHOD_2 ( STRING_2 ) ; } catch ( TYPE_2 VAR_1 ) { METHOD_3 ( VAR_1 ) ; } } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_1 ( vmId , VAR_1 , true , false , STRING_1 , false ) ; } 
public void onSuccess ( TYPE_1 cluster ) { if ( cluster != null ) { METHOD_1 ( cluster . METHOD_2 ( ) , cluster . METHOD_3 ( ) ) ; } } 
public void onSuccess ( java.util.List < TYPE_1 > returnValue ) { VAR_1 . METHOD_1 ( ) . METHOD_2 ( returnValue ) ; } 
protected void METHOD_1 ( ) { METHOD_4 ( ) ; METHOD_5 ( ) ; } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , true ) ; return null ; } 
public boolean validate ( ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; return METHOD_2 ( ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . list ( ) . METHOD_2 ( ) ; TYPE_1 . assertEquals ( STRING_2 , METHOD_3 ( ) . get ( STRING_1 ) . METHOD_4 ( ) ) ; } 
public TYPE_1 . VdcActionParametersBase getParameters ( TYPE_2 VAR_1 , TYPE_2 entity ) { TYPE_2 map = map ( VAR_1 , entity ) ; return new TYPE_3 ( map ) ; } 
public java.lang.Boolean METHOD_1 ( ) { return ( cluster ) == null ? null : cluster . METHOD_1 ( ) ; } 
public static java.lang.String METHOD_1 ( long VAR_1 ) { return TYPE_2 . METHOD_2 ( new TYPE_1 ( VAR_1 ) ) ; } 
static org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { return TYPE_2 . METHOD_1 ( null ) ; } 
protected void METHOD_1 ( TYPE_1 value ) { VAR_1 = value ; } 
protected TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) . get ( VAR_2 . getId ( ) ) ; } return VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , TYPE_3 VAR_3 ) { this . VAR_4 = VAR_2 ; if ( VAR_3 == null ) { return VAR_1 . METHOD_1 ( VAR_2 ) ; } return VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; } 
public void onSuccess ( TYPE_1 returnValue ) { cluster = returnValue ; METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; METHOD_3 ( ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ( ( java.lang.String ) ( null ) ) , VAR_1 ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid value ) { this . id . METHOD_2 ( value ) ; } 
public static synchronized boolean METHOD_1 ( TYPE_1 . StorageDomain storageDomain ) { TYPE_2 type = storageDomain . METHOD_3 ( ) ; return ( type != null ) && ( type == ( VAR_1 ) ) ? true : false ; } 
public java.lang.String METHOD_1 ( java.lang.Integer object ) { return TYPE_1 . getInstance ( ) . METHOD_2 ( object ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 from ) { TYPE_1 to = new TYPE_1 ( ) ; if ( from . METHOD_2 ( ) ) { to . METHOD_3 ( from . METHOD_4 ( ) . value ( ) ) ; } return to ; } 
public java.lang.String getValue ( TYPE_1 object ) { return object . METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 parameters , java.util.List < TYPE_2 > VAR_1 ) { } 
public TYPE_1 getModel ( ) { return VAR_1 . getModel ( ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . DiskImage diskImage ) { return new TYPE_1 ( diskImage ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . METHOD_2 ( VAR_1 . getName ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_1 . getName ( ) , result . getName ( ) ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String name ) { return new TYPE_1 ( TYPE_3 . METHOD_1 ( name ) ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; return ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ; } 
public void add ( ) { METHOD_1 ( TYPE_1 . METHOD_2 ( ) , true ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; TYPE_2 . assertEquals ( VAR_1 , result ) ; } 
protected TYPE_1 < TYPE_2 > getParameters ( ) { TYPE_1 < TYPE_2 > VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( METHOD_2 ( ) . getId ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( ) . validate ( STRING_1 . METHOD_4 ( CHAR_1 , VAR_1 ) ) . METHOD_5 ( ) ) ; } 
public java.lang.String toString ( ) { return TYPE_1 . METHOD_1 ( this ) . append ( STRING_2 , METHOD_3 ( ) ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( ) , null ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public java.lang.Boolean METHOD_1 ( java.lang.Object source ) { if ( source != null ) { return ! ( ( java.lang.Boolean ) ( source ) ) ; } return false ; } 
public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) == ( event . METHOD_2 ( ) ) ) { METHOD_3 ( ) . METHOD_4 ( ) ; } } 
protected void METHOD_1 ( ) { METHOD_5 ( ) ; TYPE_2 . METHOD_7 ( ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { METHOD_2 ( 1 ) ; } 
protected boolean METHOD_1 ( ) { java.lang.Boolean VAR_1 = TYPE_1 . getParameters ( ) . METHOD_1 ( ) ; return VAR_1 != null ? VAR_1 : TYPE_2 . METHOD_1 ( METHOD_2 ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 value ) { if ( value instanceof TYPE_2 ) { return ( ( TYPE_2 ) ( value ) ) . METHOD_2 ( ) . METHOD_3 ( ) ; } return false ; } 
protected byte [ ] METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) { return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , METHOD_2 ( VAR_3 ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( host , params , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_7 , VAR_8 , new TYPE_2 ( ) , VAR_9 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network network ) { return network . METHOD_2 ( ) . equals ( METHOD_4 ( ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . getId ( ) ) ; TYPE_1 . METHOD_5 ( true ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM value ) { vm = null ; VAR_1 = value . METHOD_2 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { cmd = METHOD_2 ( null , 0 ) ; TYPE_1 . METHOD_3 ( cmd . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( 1 , result . size ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_2 params = new TYPE_2 ( METHOD_2 ( id ) , VAR_1 , METHOD_3 ( VAR_1 ) ) ; return METHOD_4 ( VAR_2 , params ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; dao . METHOD_3 ( VAR_1 ) ; TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . assertEquals ( VAR_1 , result ) ; } 
private static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 . getId ( ) , VAR_3 , false , true , false , false , false , false ) ; } 
public final void METHOD_1 ( java.lang.String VAR_1 ) { byte [ ] response = METHOD_5 ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( response ) ; } 
public void onSuccess ( TYPE_1 VAR_1 ) { METHOD_1 ( ) . setEntity ( VAR_1 . METHOD_2 ( ) ) ; METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , VAR_3 , INT_1 , 0 ) ; VAR_1 . setId ( STRING_2 ) ; parameters . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_5 ( command , VAR_4 ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { this . vmId = vmId ; this . VAR_1 . METHOD_1 ( vmId ) ; } 
private void METHOD_1 ( TYPE_1 . VdcBllMessages VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , command . getReturnValue ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . name ( ) ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_2 ( ) ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ( ( VAR_1 ) + STRING_1 ) , VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ; return true ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , TYPE_2 . VdcActionType VAR_3 ) { return super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { return new TYPE_1 ( storageDomain ) ; } 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain source = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; source . METHOD_2 ( VAR_1 ) ; source . METHOD_3 ( VAR_2 ) ; return source ; } 
public void METHOD_1 ( TYPE_1 result ) { model . METHOD_2 ( ) ; if ( result . getReturnValue ( ) . getSucceeded ( ) ) { METHOD_3 ( ) ; } } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } 
public void METHOD_1 ( java.util.List < java.lang.String > args ) throws java.lang.Exception ; 
public void METHOD_1 ( ) { java.lang.Object [ ] VAR_1 = TYPE_1 . METHOD_2 ( ) ; java.util.Map < java.lang.String , java.lang.Object > map = TYPE_1 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) , VAR_1 , map ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( ( a . getStatus ( ) ) == VAR_1 ) && ( ! ( a . getId ( ) . equals ( METHOD_3 ( ) . getId ( ) ) ) ) ; } 
protected java.lang.String METHOD_1 ( ) { return VAR_1 < java.lang.String > getValue ( VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) != null ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 object ) { return object . getVm ( ) . METHOD_2 ( ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VDS object ) { return object . getName ( ) ; } 
protected abstract void METHOD_1 ( ) ; 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 , org.ovirt.engine.core.compat . Version version ) { TYPE_1 VAR_2 = new TYPE_2 ( vm , VAR_1 , version ) ; METHOD_2 ( VAR_2 ) ; return VAR_2 . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_3 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) , VAR_1 , VAR_2 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { ( ( TYPE_1 ) ( model ) ) . setItems ( ( ( TYPE_2 ) ( returnValue ) ) ) ; } 
private java.lang.String METHOD_1 ( ) { return TYPE_1 . name ( ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_3 . any ( VAR_2 . DiskImage class ) ) ) . thenReturn ( new TYPE_4 . ValidationResult ( VAR_3 ) ) ; } 
public boolean METHOD_1 ( TYPE_2 other ) { return TYPE_3 . METHOD_2 ( VAR_1 , other . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; try { TYPE_3 . METHOD_3 ( METHOD_4 ( ) ) ; } finally { if ( VAR_1 != null ) { TYPE_2 . METHOD_5 ( VAR_1 ) ; } } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public synchronized void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; while ( ( VAR_2 . METHOD_2 ( ) ) != null ) { } } 
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > returnValue ) { METHOD_1 ( returnValue ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < TYPE_2 > VAR_2 , int VAR_3 , int VAR_4 , boolean VAR_5 ) { return new TYPE_1 ( new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) , null ) ; } 
private TYPE_1 METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_1 ) { return METHOD_1 ( VAR_1 , new TYPE_2 ( host . getId ( ) ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) ; } 
public abstract void METHOD_1 ( ) ; 
protected void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid vmId = METHOD_2 ( ) ; TYPE_1 < java.lang.String > VAR_1 = VAR_2 . METHOD_3 ( vmId ) ; for ( java.lang.String VAR_3 : VAR_1 ) { METHOD_4 ( VAR_3 , vmId ) ; } } 
protected java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) . toString ( ) , METHOD_4 ( ) . getName ( ) ) ; } 
public java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( ) throws java.lang.Exception { return new TYPE_1 ( client , VAR_1 , VAR_2 , VAR_3 , true ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return inject ( new TYPE_2 ( id , VAR_1 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( nic , null ) ; } 
protected void METHOD_1 ( ) { } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . getVm ( ) ; TYPE_2 . METHOD_3 ( vm ) ; TYPE_1 . METHOD_5 ( true ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool source ) { return ( source . METHOD_2 ( ) ) == ( status ) ; } 
java.lang.String template ( ) ; 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.List < TYPE_2 . VdcActionParametersBase > parameters , TYPE_3 VAR_2 ) { return METHOD_2 ( VAR_1 , parameters , true , false , false , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 model ) { VAR_1 . METHOD_1 ( model ) ; METHOD_2 ( model ) ; METHOD_5 ( model ) ; METHOD_6 ( model ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return source ; } return STRING_1 ; } 
private TYPE_1 METHOD_1 ( final int VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; return new TYPE_2 ( METHOD_3 ( ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 constants = org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) ; METHOD_2 ( VAR_1 , constants . METHOD_3 ( ) , constants . METHOD_4 ( ) , false ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( null , null , 0 , 0 , false ) ) ; METHOD_4 ( cmd ) ; TYPE_1 . METHOD_5 ( cmd . METHOD_6 ( ) ) ; } 
TYPE_1 < java.lang.String > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_3 ( ) , METHOD_4 ( VAR_1 ) ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . setTitle ( VAR_1 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_3 ( TYPE_1 . any ( ) ) ; TYPE_2 . METHOD_5 ( command . validate ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( TYPE_1 value ) { VAR_1 = value ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid id , TYPE_2 type ) { return METHOD_1 ( id , type , ( - 1 ) , false ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( vm ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( VAR_3 ) ; return METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( java.lang.String value ) { VAR_1 . METHOD_1 ( value ) ; } 
public boolean METHOD_1 ( ) { return TYPE_1 . getInstance ( ) . METHOD_2 ( getEntity ( ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( ) ) . thenReturn ( VAR_1 ) ; METHOD_3 ( true ) ; METHOD_4 ( ) ; } 
private static int METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 < java.lang.Integer > getValue ( VAR_1 ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , org.ovirt.engine.core.common.businessentities.StoragePool pool ) { for ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 : VAR_1 ) { if ( ( VAR_2 . getStatus ( ) ) == ( VAR_3 ) ) { METHOD_2 ( VAR_2 , pool ) ; } } } 
public void METHOD_1 ( final TYPE_1 < ? , ? > VAR_1 ) { METHOD_2 ( VAR_1 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 . METHOD_1 ( this , new TYPE_1 ( ( ( TYPE_2 ) ( returnValue ) ) ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid value ) { this . VAR_1 = value ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( ) ) ; TYPE_1 VAR_2 = resource . get ( ) ; METHOD_7 ( VAR_2 ) ; METHOD_8 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { user . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 , true ) ; TYPE_1 . METHOD_4 ( result . isEmpty ( ) ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { VAR_2 . METHOD_2 ( ( ! ( object . METHOD_3 ( ) . getEntity ( ) ) ) ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; } 
TYPE_1 METHOD_1 ( java.lang.String VAR_2 , TYPE_1 VAR_3 ) ; 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; return METHOD_4 ( VAR_1 , VAR_2 . METHOD_5 ( ) , VAR_3 , VAR_4 , METHOD_6 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , boolean VAR_1 ) { if ( VAR_1 ) { if ( ! ( METHOD_2 ( vmId ) ) ) { METHOD_3 ( vmId ) ; } } else { METHOD_4 ( vmId ) ; } } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_3 ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) , 1 , VAR_1 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; } 
public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) { return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_2 ) ) ; } else { return METHOD_2 ( METHOD_3 ( VAR_2 ) ) ; } } 
protected java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 == ( VAR_2 ) ? VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) : VAR_3 . METHOD_4 ( VAR_1 . getName ( ) , VAR_1 . METHOD_5 ( ) ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) ) != null ? VAR_1 . METHOD_2 ( ) . get ( 0 ) : VAR_2 ; } 
public TYPE_3 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { return TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 object ) { super . METHOD_1 ( object ) ; VAR_1 . METHOD_1 ( object ) ; } 
protected boolean validate ( ) { return METHOD_2 ( ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { VAR_2 = org.mockito.Mockito . METHOD_2 ( VAR_3 class ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( TYPE_1 . any ( VAR_4 . String class ) ) ) . thenReturn ( VAR_1 ) ; } 
public void METHOD_1 ( ) { final TYPE_3 VAR_2 = null ; VAR_1 . METHOD_2 ( VAR_2 ) ; final java.lang.String VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_4 . assertEquals ( STRING_1 , VAR_3 ) ; } 
private void METHOD_1 ( TYPE_1 . VdcBllMessages VAR_1 ) { METHOD_1 ( VAR_1 , null ) ; } 
public void METHOD_1 ( TYPE_1 status ) { METHOD_2 ( ) . METHOD_1 ( status ) ; } 
public void METHOD_1 ( int VAR_1 , TYPE_1 user , java.lang.String value ) { VAR_2 . METHOD_2 ( true ) ; } 
private static TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 [ VAR_1 ] , VAR_4 [ VAR_1 ] , null , VAR_5 , null , VAR_6 , null ) ; } 
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_1 ) { METHOD_1 ( VAR_1 ) ; } 
private void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( true ) ; METHOD_5 ( ) ; } 
public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_2 . VM ) , true ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . VM ) , false ) ; } 
private void METHOD_1 ( java.lang.Integer VAR_1 , TYPE_1 disk ) { TYPE_2 . assertEquals ( STRING_1 , VAR_1 , disk . METHOD_2 ( ) ) ; } 
private org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( ) { if ( ( network ) == null ) { network = TYPE_1 . METHOD_2 ( ) . get ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } return network ; } 
private void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( network . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 . METHOD_1 ( ( VAR_1 != null ? VAR_1 . getValue ( ) : null ) ) ; } 
private void METHOD_1 ( final TYPE_1 model ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( model . METHOD_4 ( ) . getEntity ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool item , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . getName ( ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( network ) ; org.mockito.Mockito.when ( network . getName ( ) ) . thenReturn ( VAR_3 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid value ) { VAR_1 = value ; } 
private java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { final TYPE_1 VAR_1 = TYPE_2 . getValue ( VAR_2 ) ; final java.lang.String VAR_3 = TYPE_2 . getValue ( VAR_4 ) ; return METHOD_3 ( VAR_1 , VAR_3 , vm . getId ( ) ) ; } 
protected TYPE_1 < java.lang.Boolean , TYPE_2 > METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid VAR_1 , int type ) { return METHOD_1 ( storageDomain , VAR_1 , type , null , storageDomain . getStoragePoolId ( ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( this ) ; } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { if ( TYPE_2 . METHOD_2 ( ) ) { return VAR_1 ; } return TYPE_2 . getSucceeded ( ) ? VAR_2 : VAR_3 ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ! ( ( ( java.util.List < ? > ) ( source ) ) . isEmpty ( ) ) ; } return false ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) ; 
TYPE_1 image ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String id ) ; 
private void METHOD_1 ( ) { VAR_1 = new TYPE_2 ( VAR_2 ) ; } 
public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; return VAR_1 == null ? null : VAR_1 . getName ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 ) ; } else { TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_1 ) ; } } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 parameters ) throws TYPE_4 { return METHOD_2 ( ) . METHOD_1 ( VAR_1 , parameters ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; } 
public org.ovirt.engine.core.common.businessentities . Disk get ( org.ovirt.engine.core.compat.Guid id ) { return get ( id , null , false ) ; } 
public void onSuccess ( TYPE_1 . VdcQueryReturnValue result ) { VAR_1 = result . getReturnValue ( ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; VAR_1 super . METHOD_3 ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId ( ) ) ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return ! ( TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? TYPE_1 . METHOD_2 ( ( ( java.lang.Integer ) ( source ) ) ) : VAR_1 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > ) ( returnValue ) ) ; VAR_2 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false , false , false , false ) ; METHOD_5 ( resource . get ( ) , 1 ) ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.VDS VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( getVm ( ) ) ; TYPE_1 VAR_2 = resource . get ( ) ; METHOD_6 ( VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; getModel ( ) . METHOD_2 ( ) . setIsChangable ( true ) ; } 
private boolean METHOD_1 ( ) { return ( ( METHOD_2 ( ) . METHOD_3 ( ) ) != null ) && ( ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) != null ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( VAR_2 ) ) . thenReturn ( new TYPE_1 . ValidationResult ( VAR_3 ) ) ; TYPE_2 . METHOD_3 ( VAR_4 . METHOD_5 ( storageDomain ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_2 . VdcActionParametersBase params , TYPE_3 action ) { return METHOD_1 ( VAR_1 , params , action , false ) ; } 
public void METHOD_1 ( java.lang.Boolean value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
private void METHOD_1 ( java.lang.Object sender ) { METHOD_2 ( true ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) ) ) . thenReturn ( new TYPE_2 < > ( ) ) ; } 
public TYPE_1 < org.ovirt.engine.core.common.businessentities.VmTemplate > METHOD_1 ( ) { return super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_3 ( ( ( resource . METHOD_4 ( TYPE_1 . toString ( ) ) ) instanceof TYPE_2 ) ) ; } 
public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , int size ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , size ) ; } 
public void METHOD_1 ( TYPE_1 widget ) { VAR_1 . METHOD_2 ( widget ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( VAR_2 ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { return false ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) , TYPE_1 . getReturnValue ( ) . METHOD_4 ( ) ) ; } 
protected void METHOD_1 ( ) { if ( ! ( TYPE_1 . isEmpty ( vm . METHOD_2 ( ) ) ) ) { VAR_1 . put ( VAR_2 , vm . METHOD_2 ( ) ) ; } } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters , final TYPE_2 VAR_2 , final java.lang.Object VAR_3 ) { METHOD_1 ( VAR_1 , parameters , false , VAR_2 , VAR_3 , true ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( ) ; METHOD_6 ( getParameters ( ) . METHOD_7 ( ) ) ; METHOD_8 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; assertEquals ( VAR_3 , TYPE_2 . METHOD_4 ( VAR_1 ) ) ; } 
public void METHOD_1 ( boolean value ) { if ( ( VAR_1 ) != value ) { VAR_1 = value ; if ( value ) { METHOD_4 ( ) . METHOD_5 ( ) ; } METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; } } 
public void METHOD_1 ( java.util.HashMap < java.lang.String , java.lang.String > value ) { VAR_1 = value ; VAR_2 = TYPE_2 . METHOD_2 ( value ) ; } 
public TYPE_1 . Disk METHOD_1 ( TYPE_1 . Disk disk ) { return METHOD_3 ( disk , new TYPE_2 ( ) , VAR_2 , new TYPE_3 ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; setItems ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; return METHOD_3 ( VAR_2 ) ; } 
public boolean METHOD_1 ( ) { boolean VAR_1 = false ; VAR_1 = true ; return VAR_1 ; } 
void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( METHOD_2 ( ) , METHOD_3 ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_2 ( ( VAR_1 != null ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , false ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_1 . assertEquals ( STRING_2 , METHOD_4 ( ) . get ( STRING_1 ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( VAR_1 ) ; TYPE_1 . assertEquals ( 0 , VAR_1 . size ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; try { METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_1 ) { VAR_2 . error ( STRING_1 , VAR_1 ) ; throw VAR_1 ; } } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { TYPE_1 VAR_3 = ( ( TYPE_1 ) ( VAR_1 ) ) ; VAR_3 . METHOD_2 ( ( ( java.lang.Integer ) ( VAR_2 ) ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , TYPE_3 . instance , VAR_2 ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . isEmpty ( ) ) . thenReturn ( false ) ; org.mockito.Mockito.when ( VAR_1 . size ( ) ) . thenReturn ( 1 ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( ( ( TYPE_2 ) ( getWindow ( ) ) ) , METHOD_3 ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) . addValue ( STRING_2 , VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( java.lang.String id ) { try { return TYPE_1 . valueOf ( id ) ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( e ) ; } } 
public java.lang.String getValue ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_2 ( ) ; } 
private boolean METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) . size ( ) ) > 0 ) { return true ; } else { return false ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_2 . METHOD_3 ( VAR_2 class , VAR_1 . METHOD_4 ( ) , true ) ; } } } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_3 ( ) ; VAR_2 = dao . get ( VAR_3 ) ; VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_4 ( STRING_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = VAR_3 ; assertEquals ( TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 ) , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 < TYPE_2 , ? > VAR_1 , TYPE_4 VAR_2 , TYPE_5 VAR_3 ) { return new TYPE_1 ( VAR_1 , METHOD_2 ( ) , VAR_2 , VAR_3 ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { java.util.ArrayList < TYPE_1 > list = returnValue . getReturnValue ( ) ; TYPE_3 . METHOD_1 ( list , new TYPE_4 ( ) ) ; setItems ( list ) ; } 
public void METHOD_1 ( java.util.List < TYPE_1 < java.lang.Boolean > > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_4 . METHOD_2 ( command , VAR_4 ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( ) , TYPE_1 . any ( ) ) ) . thenReturn ( new TYPE_2 ( ) ) ; } 
public org.ovirt.engine.core.compat . Version METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return METHOD_1 ( vm . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) { super . METHOD_1 ( ) ; } VAR_2 . METHOD_2 ( VAR_3 ) ; METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_5 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( ) . setEntity ( true ) ; METHOD_2 ( ) . METHOD_4 ( false ) ; METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network VAR_2 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , TYPE_1 < TYPE_2 > VAR_2 ) { for ( TYPE_2 VAR_3 : VAR_2 ) { VAR_4 . METHOD_2 ( VAR_3 . getId ( ) , vmId ) ; } } 
protected TYPE_1 METHOD_1 ( ) { return new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ; } 
private void METHOD_1 ( final java.util.Map < java.lang.String , java.lang.String > map ) { TYPE_2 . assertEquals ( 0 , map . size ( ) ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = STRING_1 ; } return VAR_1 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( returnValue ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; VAR_2 . METHOD_2 ( ) . setEntity ( VAR_1 ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.network.Network object ) { return ( object . METHOD_1 ( ) ) == null ? false : object . METHOD_1 ( ) . METHOD_2 ( ) ? constants . METHOD_3 ( ) : constants . METHOD_4 ( ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Disk disk , java.lang.String VAR_1 ) { if ( ( disk . METHOD_2 ( ) ) == ( VAR_2 ) ) { return VAR_3 < java.lang.Boolean > getValue ( VAR_4 , VAR_1 ) ; } return true ; } 
private void METHOD_1 ( final java.util.List < TYPE_1 . VdcQueryType > VAR_1 , final java.lang.String context ) { for ( TYPE_1 . VdcQueryType VAR_2 : VAR_1 ) { METHOD_1 ( VAR_2 , context ) ; } } 
public static < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > source ) { if ( source != null ) { for ( TYPE_1 item : source ) { return item ; } } return null ; } 
public void METHOD_1 ( ) { TYPE_1 user = new TYPE_1 ( ) ; user . METHOD_2 ( STRING_1 ) ; user . METHOD_3 ( STRING_2 ) ; command . METHOD_4 ( user ) ; TYPE_2 . assertEquals ( STRING_1 , command . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 . StorageDomain storageDomain ) { VAR_1 . METHOD_2 ( storageDomain . getId ( ) ) ; VAR_2 . METHOD_3 ( STRING_1 , storageDomain . getId ( ) ) ; METHOD_4 ( storageDomain ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain result = dao . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 . assertEquals ( VAR_4 , result . getId ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_6 ( cmd . validate ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , TYPE_2 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; } 
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > returnValue ) { VAR_1 = returnValue ; METHOD_1 ( ) ; } 
private java.lang.String METHOD_1 ( ) { return STRING_1 . equals ( METHOD_3 ( ) ) ? METHOD_4 ( ) : java.lang.String . METHOD_5 ( STRING_2 , METHOD_4 ( ) , METHOD_3 ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 vds = new TYPE_1 ( ) ; vds . setId ( new org.ovirt.engine.core.compat.Guid ( ) ) ; vds . METHOD_2 ( VAR_1 ) ; return vds ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { boolean VAR_2 = VAR_1 != null ; if ( VAR_2 ) { VAR_3 . setTitle ( VAR_1 ) ; } VAR_3 . METHOD_4 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( VAR_2 ) ; } 
protected void METHOD_1 ( boolean VAR_1 ) { METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_3 ( ) ; VAR_2 = dao . METHOD_4 ( VAR_3 ) ; VAR_4 = new TYPE_1 ( VAR_5 , STRING_1 , STRING_1 ) ; } 
public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 < java.lang.String > getValue ( VAR_2 ) , VAR_1 < java.lang.String > getValue ( VAR_3 ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { TYPE_1 parameters = new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , true ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , parameters , aQuery ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; TYPE_2 VAR_3 = VAR_4 ; VAR_3 . validate ( VAR_1 ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_2 ( true ) ; VAR_4 . METHOD_2 ( true ) ; VAR_5 . METHOD_2 ( true ) ; } 
public void METHOD_1 ( java.lang.Object model ) { this . model = model ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , null , VAR_1 , VAR_3 , null ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; } 
protected TYPE_1 getEntity ( int VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 [ VAR_1 ] , VAR_4 [ VAR_1 ] ) ; } 
public final org.ovirt.engine.core.compat . Version METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return ( ( org.ovirt.engine.core.compat . Version ) ( getValue ( VAR_2 . Version , name , VAR_1 ) ) ) ; } 
public void METHOD_1 ( TYPE_1 event ) { model . METHOD_2 ( true ) ; METHOD_3 ( ) . METHOD_4 ( true ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; METHOD_2 ( new TYPE_3 ( ) ) ; METHOD_2 ( new TYPE_2 ( ) ) ; METHOD_2 ( new TYPE_4 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { disk . METHOD_2 ( STRING_1 ) ; disk . METHOD_3 ( STRING_2 ) ; METHOD_4 ( disk , METHOD_5 ( STRING_1 ) , METHOD_6 ( STRING_2 ) ) ; METHOD_7 ( disk ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_3 ( ( ( getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) ) == ( VAR_3 ) ) ) ; } 
protected void METHOD_1 ( ) throws TYPE_1 { super . METHOD_1 ( ) ; org.mockito.Mockito.doReturn ( new java.util.ArrayList < TYPE_2 > ( ) ) . when ( VAR_1 ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { disk . METHOD_2 ( STRING_1 ) ; disk . METHOD_3 ( STRING_2 ) ; METHOD_4 ( disk ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
private void METHOD_1 ( TYPE_1 result ) { if ( METHOD_2 ( result ) ) { TYPE_2 . METHOD_3 ( false ) ; TYPE_2 . METHOD_5 ( false ) ; } else { METHOD_5 ( result . getSucceeded ( ) ) ; } METHOD_4 ( result ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_6 ( resource . get ( ) , 0 ) ; } 
private TYPE_1 . VdcQueryReturnValue METHOD_1 ( TYPE_2 . EngineMessage VAR_1 ) { TYPE_1 . VdcQueryReturnValue returnValue = new TYPE_1 . VdcQueryReturnValue ( ) ; returnValue . METHOD_2 ( false ) ; returnValue . METHOD_3 ( VAR_1 . toString ( ) ) ; return returnValue ; } 
public void METHOD_1 ( ) { VAR_1 = true ; for ( TYPE_1 VAR_2 : METHOD_2 ( ) ) { METHOD_4 ( VAR_2 ) ; } } 
public void METHOD_1 ( ) { if ( VAR_1 ) { super . METHOD_1 ( ) ; } VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; } 
public void add ( ) { METHOD_1 ( METHOD_2 ( ) , false , org.mockito.Mockito . METHOD_3 ( 0 ) , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( STRING_1 , TYPE_3 , TYPE_2 . METHOD_2 ( TYPE_3 . getValue ( ) ) ) ; } 
private void METHOD_1 ( TYPE_1 . EngineMessage VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . name ( ) ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( false ) ; } 
static void METHOD_1 ( TYPE_1 model ) { METHOD_2 ( model . METHOD_3 ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) . getId ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { return ( VAR_1 ) == null ? id : VAR_1 ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 cluster = new TYPE_1 ( ) ; cluster . setId ( VAR_1 ) ; cluster . METHOD_2 ( false ) ; cluster . METHOD_3 ( true ) ; return cluster ; } 
public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; } 
public static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 < ? > command , TYPE_2 . EngineMessage ... VAR_1 ) { return TYPE_3 . METHOD_1 ( STRING_1 , command , VAR_1 ) ; } 
public abstract TYPE_1 METHOD_1 ( TYPE_2 object ) ; 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( returnValue ) ) ; METHOD_2 ( ) ; } 
protected java.lang.String METHOD_1 ( ) { return getEntity ( ) . METHOD_1 ( ) ; } 
public TYPE_1 getValue ( org.ovirt.engine.core.common.businessentities . Disk object ) { return ( object . METHOD_2 ( ) ) == ( VAR_1 ) ? VAR_2 . METHOD_3 ( ) : null ; } 
public void METHOD_1 ( ) throws TYPE_1 { disk . METHOD_2 ( STRING_1 ) ; disk . METHOD_3 ( null ) ; METHOD_4 ( disk ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( STRING_1 ) ; METHOD_3 ( STRING_2 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_4 ( VAR_2 ) ; } } 
private void METHOD_1 ( ) { METHOD_2 ( ) . setIsChangable ( METHOD_3 ( ) . getEntity ( ) ) ; } 
private int METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.Integer VAR_4 = VAR_2 . METHOD_2 ( ) . get ( VAR_1 ) ; return VAR_4 == null ? 0 : VAR_4 ; } 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain domain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; domain . METHOD_2 ( STRING_1 ) ; return domain ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; METHOD_3 ( false ) ; command . METHOD_4 ( ) . METHOD_5 ( true ) ; TYPE_1 . METHOD_6 ( command , VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { boolean result = METHOD_2 ( ) ; if ( ! result ) { METHOD_4 ( ) ; } return result ; } 
public void METHOD_1 ( ) { if ( ( getEntity ( ) ) != null ) { METHOD_3 ( ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . assertEquals ( 2 , TYPE_2 . METHOD_3 ( ) . size ( ) ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_4 ( true ) ; } return null ; } 
protected TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 , VAR_4 } , true , true , null ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return ( source == null ) || ( ( java.lang.Boolean ) ( source ) ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( ( source != null ) && ( ! ( ( ( java.util.List < ? > ) ( source ) ) . isEmpty ( ) ) ) ) { return true ; } return false ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool source ) { return ( source . METHOD_2 ( ) ) != ( status ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( INT_1 , 0 , 0 , 0 , INT_2 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( nic ) ) ; } 
private boolean METHOD_1 ( TYPE_1 model ) { org.ovirt.engine.core.compat . Version VAR_1 = METHOD_2 ( model ) ; return VAR_1 == null ? false : ( ( java.lang.Boolean ) ( TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_2 , VAR_1 . getValue ( ) ) ) ) ; } 
public void METHOD_1 ( java.lang.Boolean value ) { VAR_1 . METHOD_1 ( value ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( METHOD_3 ( VAR_2 ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { METHOD_2 ( action , STRING_1 ) ; TYPE_3 parameters = METHOD_3 ( action ) ; return METHOD_4 ( VAR_1 , parameters , action ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 , false , false ) , null ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { METHOD_2 ( VAR_1 , VAR_2 . Network ) ; } 
protected java.lang.String METHOD_1 ( ) { return VAR_1 ; } 
private static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vmId , VAR_2 ) ; } 
public TYPE_1 [ ] METHOD_1 ( ) { return new TYPE_1 [ ] { } ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( METHOD_3 ( VAR_2 ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = TYPE_1 . METHOD_2 ( ( ( TYPE_2 < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ) ; METHOD_3 ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( final int VAR_1 ) { METHOD_2 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; return TYPE_1 . METHOD_7 ( ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . size ( ) ; } 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) . get ( TYPE_2 . METHOD_3 ( ) . getId ( ) ) ; } return VAR_1 ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , int VAR_2 , int VAR_3 ) { return METHOD_1 ( VAR_1 , INT_1 , INT_2 , VAR_4 , new org.ovirt.engine.core.compat . Version ( ) ) ; } 
protected void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( null , VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { addCanDoActionMessage ( VAR_1 ) ; super . METHOD_1 ( ) ; } 
public java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > METHOD_1 ( ) { return METHOD_1 ( false ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( ) . METHOD_3 ( model . METHOD_4 ( ) . getEntity ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( false ) ; METHOD_6 ( resource . get ( ) , 1 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_2 . VdcActionParametersBase parameters , TYPE_3 context ) { TYPE_4 < ? > command = TYPE_5 . METHOD_2 ( VAR_1 , parameters ) ; command . METHOD_3 ( context ) ; return command . METHOD_1 ( ) ; } 
public java.util.List < TYPE_1 < ? > > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 , false ) , null ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . METHOD_3 ( ) , false ) ; } 
public void METHOD_1 ( final org.ovirt.engine.core.compat.Guid value ) { VAR_1 = value . getValue ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito . METHOD_2 ( VAR_1 , org.mockito.Mockito . METHOD_3 ( ) ) . METHOD_4 ( TYPE_1 . any ( ) ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_2 . METHOD_2 ( true ) ; VAR_4 . METHOD_2 ( true ) ; VAR_5 . METHOD_2 ( true ) ; VAR_6 . METHOD_2 ( true ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( false ) ; METHOD_4 ( ) . METHOD_5 ( new java.util.ArrayList ( TYPE_2 . METHOD_6 ( VAR_1 ) ) ) ; METHOD_7 ( ) . METHOD_8 ( ) ; METHOD_9 ( false ) ; } 
public void METHOD_1 ( int VAR_1 , TYPE_1 pool , java.lang.String value ) { VAR_2 . METHOD_2 ( true ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 status ) { return METHOD_1 ( METHOD_2 ( VAR_1 , status ) ) ; } 
public static TYPE_1 METHOD_1 ( ) { return VAR_2 ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_3 , java.util.List < java.lang.String > VAR_4 ) throws TYPE_2 , TYPE_3 { TYPE_4 VAR_5 = TYPE_5 . METHOD_2 ( VAR_1 , VAR_4 ) ; TYPE_5 . METHOD_3 ( VAR_5 , VAR_3 ) ; } 
public TYPE_1 < org.ovirt.engine.core.compat . Version > METHOD_1 ( ) { TYPE_1 < org.ovirt.engine.core.compat . Version > VAR_1 = VAR_2 < TYPE_2 < org.ovirt.engine.core.compat . Version > > getValue ( VAR_3 ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_3 ; java.util.List < TYPE_1 > VAR_4 = dao . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 , VAR_5 ) ; } 
public java.util.List < org.ovirt.engine.core.compat.Guid > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = METHOD_2 ( ) ; if ( diskImage != null ) { diskImage . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( diskImage . METHOD_4 ( ) . getId ( ) , VAR_1 ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { METHOD_2 ( ) ; } 
public void onSuccess ( TYPE_1 cluster ) { VAR_1 . METHOD_1 ( ) . setEntity ( cluster . getName ( ) ) ; } 
public org.ovirt.engine.core.common.businessentities.VM getVm ( ) { if ( getParameters ( ) . METHOD_1 ( ) ) { return getParameters ( ) . getVm ( ) ; } return super . getVm ( ) ; } 
protected < TYPE_1 > void METHOD_1 ( TYPE_2 < TYPE_1 > type , TYPE_2 < ? extends TYPE_1 > VAR_1 ) { METHOD_2 ( type ) . to ( VAR_1 ) ; METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_2 class ) ; } 
public TYPE_1 getStatus ( ) { return this . status ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS result = dao . get ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; TYPE_2 . METHOD_3 ( result ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 , VAR_4 ) ; METHOD_3 ( VAR_2 ) ; return VAR_2 ; } 
protected void METHOD_1 ( ) { addCanDoActionMessage ( VAR_1 ) ; METHOD_2 ( VAR_2 , getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( METHOD_2 ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { return java.lang.String.valueOf ( ( ( ( new TYPE_1 ( ) . METHOD_2 ( ) ) - ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) . METHOD_2 ( ) ) ) / INT_1 ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 , null , false ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_6 ( resource . get ( ) ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . getParameters ( ) . getId ( ) , VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 status = null ; if ( ( TYPE_2 . METHOD_2 ( ) ) != null ) { status = TYPE_2 . METHOD_2 ( ) . getStatus ( ) ; } return status ; } 
protected boolean validate ( ) { return METHOD_1 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 . METHOD_2 ( ( ( java.lang.String ) ( returnValue ) ) ) ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 action ) { return TYPE_4 . METHOD_2 ( action . METHOD_1 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) . getId ( ) , false , true ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 . getId ( ) , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool object ) { return object . getStatus ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) . getEntity ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( ) { return TYPE_2 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , getParameters ( ) . getStoragePoolId ( ) , true ) ; } 
public void METHOD_1 ( ) { storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storageDomain . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_1 = new TYPE_1 < > ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { command . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_3 , STRING_4 ) ; TYPE_1 . assertEquals ( STRING_6 , result ) ; } 
protected TYPE_1 . ValidationResult METHOD_1 ( final org.ovirt.engine.core.common.businessentities.network.Network network ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( network . getId ( ) ) . isEmpty ( ) ? VAR_1 : new TYPE_1 . ValidationResult ( VAR_2 ) ; } 
private int METHOD_1 ( ) { return VAR_1 < java.lang.Integer > getValue ( VAR_2 ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } 
private java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = new java.util.HashMap < > ( ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; return VAR_2 ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { if ( ( i . METHOD_2 ( ) ) != null ) { return i . METHOD_2 ( ) . equals ( getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } return false ; } 
protected void METHOD_1 ( ) { METHOD_2 ( true ) ; for ( TYPE_1 < TYPE_2 , java.util.List < TYPE_3 > > VAR_1 : METHOD_3 ( ) . METHOD_4 ( ) ) { METHOD_5 ( VAR_1 . METHOD_6 ( ) , VAR_1 . getValue ( ) ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_1 resource ) { return METHOD_3 ( resource , new TYPE_2 ( VAR_2 , VAR_3 . IdQueryParameters class ) , VAR_4 , new TYPE_3 ( ) ) ; } 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 < TYPE_2 , ? > VAR_1 ) { return new TYPE_1 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) , TYPE_4 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 model ) { getModel ( ) . METHOD_2 ( ) . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , long VAR_3 ) { this . VAR_1 = VAR_1 ; return VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( 1 ) ; VAR_1 . METHOD_4 ( STRING_1 ) ; VAR_1 . METHOD_5 ( STRING_2 ) ; return VAR_1 ; } 
public void setEntity ( TYPE_1 value ) { super . setEntity ( ( value == null ? null : value . getVm ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { return null ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source == null ? new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) : ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( 0 , dao . METHOD_2 ( VAR_1 ) ) ; } 
public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_2 ( value ) ; } 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } super . METHOD_1 ( ) ; super . METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( getEntity ( ) . METHOD_2 ( ) ) ) ; } 
public void setId ( TYPE_1 id ) { VAR_2 = id . METHOD_2 ( ) ; VAR_1 = id . METHOD_1 ( ) ; } 
public void setId ( org.ovirt.engine.core.compat.Guid id ) { this . id = id ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String VAR_1 ) { return METHOD_2 ( iface . getId ( ) , iface . getName ( ) , false , VAR_1 , null , null , null , true , null , null , VAR_2 ) ; } 
public static java.lang.String METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { return java.lang.String . METHOD_2 ( STRING_1 , VAR_1 ) ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 . instance ) ; } 
public void METHOD_1 ( ) { TYPE_1 quota = dao . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( quota ) ; TYPE_2 . assertEquals ( VAR_1 , quota . getStoragePoolId ( ) ) ; TYPE_2 . METHOD_4 ( quota . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_1 ( ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ( ( METHOD_4 ( ) . getEntity ( ) ) && ( ! ( VAR_1 ) ) ) ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool storage ) { return storage . METHOD_2 ( ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . getParameters ( ) . getId ( ) ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( ) ; } 
private boolean METHOD_1 ( TYPE_1 status ) { switch ( status ) { case VAR_1 : case VAR_2 : return true ; default : return false ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) . getEntity ( ) ) ; } 
static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String value ) { return VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) , TYPE_3 . METHOD_4 ( value ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 , VAR_4 ) ; return VAR_2 ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage ) { return TYPE_1 . METHOD_1 ( diskImage . METHOD_2 ( ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . getVm ( ) ; TYPE_2 . METHOD_2 ( vm ) ; this . METHOD_3 ( vm ) ; TYPE_1 . METHOD_4 ( true ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( TYPE_1 . toString ( ) ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { return storageDomain . METHOD_2 ( ) ; } 
public boolean METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 ) { return METHOD_2 ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 action , java.lang.Object result ) { METHOD_2 ( action , result ) ; action . METHOD_3 ( TYPE_4 . value ( ) ) ; return TYPE_1 . METHOD_5 ( ) . entity ( action ) . METHOD_6 ( ) ; } 
public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.EntityModel object ) { return ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( object . getEntity ( ) ) ) . getName ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { METHOD_1 ( aQuery , VAR_1 , false ) ; } 
private boolean METHOD_1 ( TYPE_1 . EngineMessage VAR_1 ) { return command . getReturnValue ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 . toString ( ) ) ; } 
public TYPE_1 . VdcActionParametersBase METHOD_1 ( final org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { final TYPE_2 params = new TYPE_2 ( VAR_1 . getId ( ) , new org.ovirt.engine.core.compat.Guid ( VAR_1 . getStoragePoolId ( ) . METHOD_3 ( ) ) ) ; params . METHOD_4 ( true ) ; return params ; } 
public void METHOD_1 ( ) { METHOD_2 ( null ) ; } 
private void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( INT_1 , INT_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_4 . METHOD_2 ( command ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; } 
public void runQuery ( final TYPE_1 . VdcQueryType VAR_1 , final TYPE_2 parameters , final org.ovirt.engine.ui.frontend.AsyncQuery VAR_2 ) { runQuery ( VAR_1 , parameters , VAR_2 , false ) ; } 
public void METHOD_1 ( ) { long VAR_1 = ( INT_1 * INT_2 ) * INT_2 ; int VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( INT_1 , VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 value ) { VAR_1 = value ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( a . getId ( ) . equals ( METHOD_2 ( ) . getId ( ) ) ) && ( ( a . getStatus ( ) ) == ( VAR_1 ) ) ; } 
public java.lang.String METHOD_2 ( ) { return nic . METHOD_2 ( ) ; } 
public java.util.List < java.lang.String > METHOD_1 ( ) { return new java.util.ArrayList < java.lang.String > ( this . VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , METHOD_5 ( ) , VAR_2 ) ; } 
public void METHOD_1 ( java.lang.String value ) { VAR_1 = value ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > source ) { return TYPE_1 . METHOD_3 ( source , new TYPE_2 ( VAR_1 ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { setItems ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_3 , STRING_1 , STRING_2 , STRING_3 ) ; } 
public TYPE_1 METHOD_1 ( ) { return METHOD_1 ( METHOD_2 ( ) ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , int VAR_2 ) { return ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . getInstance ( ) . METHOD_4 ( VAR_1 ) ) . size ( ) ) != 0 ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { return METHOD_1 ( vmId , STRING_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; METHOD_4 ( STRING_1 ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; } 
public static java.lang.String METHOD_1 ( ) { return ( ( TYPE_1 . METHOD_2 ( ) ) + ( TYPE_2 . METHOD_3 ( ) ) ) + STRING_1 ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( TYPE_1 cluster , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters , TYPE_2 VAR_1 ) { return METHOD_2 ( true , hosts , vm , VAR_1 ) ; } 
java.lang.String METHOD_1 ( ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 , false ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_1 . get ( 0 ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( TYPE_1 . instance ( ) . METHOD_3 ( INT_1 ) ) ; TYPE_2 . METHOD_5 ( result . isEmpty ( ) ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return ( source == null ) || ( ( java.lang.Boolean ) ( source ) ) ; } 
protected TYPE_1 < TYPE_2 > getParameters ( ) { TYPE_3 VAR_1 = new TYPE_3 ( METHOD_1 ( ) ) ; VAR_1 . METHOD_2 ( true ) ; return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 , new TYPE_2 . ValidationResult ( VAR_3 , TYPE_3 . METHOD_4 ( VAR_4 , VAR_1 . getName ( ) ) ) , VAR_2 ) ; } 
public void onSuccess ( TYPE_1 . VdcQueryReturnValue result ) { boolean returnValue = result . getReturnValue ( ) ; if ( returnValue ) { METHOD_1 ( command ) ; } else { METHOD_2 ( ) ; } } 
public java.util.List < java.lang.String > METHOD_1 ( ) { return VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { return VAR_3 . METHOD_1 ( VAR_1 , TYPE_3 . METHOD_2 ( ) , VAR_2 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; METHOD_2 ( ( ! VAR_1 ) ) ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_2 . instance , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) ) ; } 
private org.ovirt.engine.core.common.businessentities . Network METHOD_1 ( java.lang.String VAR_1 ) { return new org.ovirt.engine.core.common.businessentities . Network ( STRING_1 , STRING_1 , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , VAR_1 , STRING_1 , STRING_1 , 0 , null , false , 0 , true ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network network ) { return network . METHOD_2 ( ) . equals ( getParameters ( ) . METHOD_3 ( ) . METHOD_2 ( ) ) ; } 
private void METHOD_1 ( ) { VAR_1 = VAR_2 ; VAR_3 . METHOD_2 ( VAR_4 class ) ; VAR_3 . METHOD_2 ( VAR_5 class ) ; VAR_3 . METHOD_2 ( VAR_6 class ) ; VAR_7 . METHOD_3 ( STRING_1 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_2 != null ) { return TYPE_3 . METHOD_1 ( VAR_1 , new TYPE_4 ( VAR_2 ) ) ; } return VAR_1 ; } 
TYPE_1 METHOD_1 ( java.lang.String id ) ; 
protected java.lang.String METHOD_1 ( TYPE_1 object ) { return object . getName ( ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; getModel ( ) . METHOD_2 ( false ) ; } 
public void METHOD_1 ( double VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public TYPE_1 getValue ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return getValue ( VAR_1 . METHOD_1 ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result , VAR_1 ) ; } 
public void METHOD_1 ( ) { command = new TYPE_1 ( new TYPE_2 ( ) , null ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 < java.lang.String , TYPE_2 > e ) { return ( ( STRING_1 + ( e . METHOD_2 ( ) ) ) + CHAR_1 ) + ( e . getValue ( ) ) ; } 
public void onSuccess ( TYPE_1 . VdcQueryReturnValue returnValue ) { METHOD_1 ( ( ( java.lang.Integer ) ( returnValue . getReturnValue ( ) ) ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM result ) { TYPE_1 . METHOD_2 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( command ) ; TYPE_3 . METHOD_4 ( command . METHOD_5 ( ) ) ; } 
public long METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; TYPE_1 . assertEquals ( STRING_2 , VAR_2 . METHOD_2 ( ) ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : 1 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network VAR_2 ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 , VAR_2 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( VAR_1 ) ; } 
public int METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) == null ) || ( ( METHOD_3 ( ) ) == null ) ? 0 : ( ( METHOD_3 ( ) ) * ( METHOD_2 ( ) ) ) / INT_1 ; } 
protected void METHOD_1 ( ) { METHOD_1 ( ( ! ( TYPE_1 . METHOD_2 ( ) ) ) ) ; if ( TYPE_1 . getReturnValue ( ) . METHOD_3 ( ) . isEmpty ( ) ) { TYPE_2 . METHOD_4 ( TYPE_1 . getVm ( ) ) ; } } 
public boolean METHOD_1 ( ) { return ! ( TYPE_3 . equals ( this . engine . METHOD_2 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = null ; TYPE_1 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) , TYPE_2 . METHOD_6 ( true ) ) ; } 
public void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > map = VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( map ) ; TYPE_1 . assertEquals ( STRING_2 , map . get ( STRING_1 ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 . getId ( ) ) ; VAR_2 . METHOD_3 ( ) ; } 
protected TYPE_1 METHOD_1 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_1 ( ) ; } 
protected void METHOD_1 ( java.lang.String name , TYPE_1 object ) { VAR_2 . put ( name , object ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.VM vm , final TYPE_2 VAR_2 ) { return METHOD_1 ( VAR_1 , vm , VAR_3 , VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 , host , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } 
public boolean METHOD_1 ( TYPE_1 i ) { return i . getId ( ) . equals ( METHOD_2 ( ) . getId ( ) ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 ( ) ) ; METHOD_3 ( new TYPE_3 ( STRING_1 ) ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; command . METHOD_3 ( ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 ) . METHOD_5 ( TYPE_1 . METHOD_6 ( VAR_2 ) , TYPE_1 . any ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String name ) { TYPE_2 VAR_1 = METHOD_2 ( ) . addValue ( STRING_1 , name ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , TYPE_3 . instance , VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) == null ) { VAR_3 = new TYPE_2 ( ) ; } return VAR_3 ; } 
private static void METHOD_1 ( final java.util.List < TYPE_1 . VdcQueryType > VAR_1 , final java.lang.String context ) { for ( TYPE_1 . VdcQueryType VAR_2 : VAR_1 ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_1 ( VAR_2 , context ) ; } } 
public TYPE_1 get ( ) { return METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ) ; } 
protected boolean validate ( ) { return true ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool item , TYPE_1 VAR_1 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . getName ( ) ) ; } 
void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , boolean VAR_5 ) ; 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { return new java.util.ArrayList ( TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 returnValue ) { org.mockito.Mockito.doReturn ( returnValue ) . when ( VAR_2 ) . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) , TYPE_3 . any ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { final TYPE_2 VAR_3 = METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source == null ? new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) : ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { METHOD_2 ( ( ( java.lang.String ) ( returnValue ) ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_3 ( ) . get ( METHOD_2 ( ) ) ; } return VAR_1 ; } 
protected boolean METHOD_1 ( ) { if ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . isEmpty ( ) ) { return METHOD_3 ( VAR_1 ) ; } return true ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , TYPE_1 . getInstance ( ) . METHOD_3 ( ) ) ; return true ; } 
protected void METHOD_1 ( ) { if ( ( getModel ( ) . METHOD_3 ( ) ) != null ) { METHOD_1 ( getModel ( ) . METHOD_3 ( ) ) ; } } 
public java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > METHOD_1 ( ) { return new java.util.ArrayList ( VAR_1 . METHOD_2 ( ) ) ; } 
protected org.ovirt.engine.core.common.businessentities.VDSGroup map ( org.ovirt.engine.core.common.businessentities.StoragePool pool ) { return METHOD_1 ( VAR_2 . StoragePool class , VAR_2 . VDSGroup class ) . map ( pool , null ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . Disk > result = dao . METHOD_2 ( null , null , VAR_1 , true ) ; TYPE_1 . METHOD_3 ( result . isEmpty ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . put ( VAR_1 , VAR_2 ) ; METHOD_2 ( ) . put ( VAR_3 , VAR_4 ) ; } 
private void METHOD_1 ( int VAR_1 ) { org.mockito.Mockito . METHOD_2 ( VAR_2 , org.mockito.Mockito . METHOD_3 ( VAR_1 ) ) . log ( TYPE_1 . any ( ) , TYPE_1 . METHOD_4 ( VAR_4 ) ) ; } 
public TYPE_1 list ( ) { TYPE_1 vms = METHOD_1 ( METHOD_2 ( ) : : list ) ; vms . METHOD_3 ( ) . METHOD_5 ( TYPE_2 : : METHOD_6 ) ; return vms ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 model = VAR_1 . METHOD_2 ( ) ; model . setEntity ( returnValue ) ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 vm ) { TYPE_3 . METHOD_1 ( VAR_1 , vm , null ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . Disk > result = dao . METHOD_2 ( null , null , VAR_1 , false ) ; TYPE_1 . METHOD_3 ( result ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return VAR_1 ; } 
public void onSuccess ( java.util.List < TYPE_1 < ? > > returnValue ) { METHOD_1 ( ( ( java.util.List ) ( returnValue ) ) ) ; } 
public TYPE_1 getParameters ( ) { return VAR_1 ; } 
private java.lang.String METHOD_1 ( java.lang.String obj ) { if ( obj == null ) { return null ; } else if ( ( TYPE_1 . METHOD_2 ( obj ) ) != null ) { return TYPE_1 . METHOD_2 ( obj ) . VAR_1 ; } return null ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( ) , TYPE_1 . any ( ) ) ) . thenReturn ( METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = dao . METHOD_3 ( ( - 1 ) ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . getName ( ) ; } return STRING_1 ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , VAR_3 ) ; METHOD_3 ( resource . get ( ) ) ; } 
public TYPE_1 < java.lang.Boolean , TYPE_2 . AuditLogType > METHOD_1 ( TYPE_3 parameters ) { return new TYPE_1 ( true , null ) ; } 
private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( getParameters ( ) . getStoragePoolId ( ) , TYPE_2 . METHOD_2 ( ) , getParameters ( ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , java.lang.String value ) { VAR_3 . METHOD_2 ( true ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS entity ) { return hosts . add ( entity . getId ( ) ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == ( VAR_1 . getStatus ( ) ) ) { METHOD_3 ( VAR_3 ) ; return true ; } return false ; } 
public void onSuccess ( TYPE_1 . VdcQueryReturnValue returnValue ) { VAR_1 = returnValue . getReturnValue ( ) ; } 
public void METHOD_1 ( TYPE_1 status ) { METHOD_2 ( ) . METHOD_4 ( status ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { METHOD_2 ( VAR_2 , new TYPE_1 ( VAR_1 , VAR_3 , false , null ) ) ; } 
public static boolean METHOD_1 ( java.lang.Integer VAR_1 ) { if ( VAR_1 == null ) { return false ; } return VAR_2 . METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; setItems ( METHOD_6 ( ) . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { VAR_1 = value ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , false ) , null ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) , METHOD_5 ( ) , getParameters ( ) . METHOD_7 ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( false ) ; } } 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 , org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } 
public abstract TYPE_1 getValue ( TYPE_2 object ) ; 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . getModel ( ) . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( ) { return ( ( ( METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ) && ( METHOD_4 ( ) ) ) && ( METHOD_5 ( ) ) ; } 
private static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 != null ) && ( VAR_1 . METHOD_2 ( ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { if ( ( VAR_1 . METHOD_2 ( ) [ 0 ] ) != null ) { VAR_2 = true ; } return null ; } 
public void onSuccess ( java.util.List < TYPE_1 > returnValue ) { VAR_1 = returnValue ; METHOD_1 ( ) ; METHOD_2 ( VAR_2 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain result ) { TYPE_1 . assertEquals ( VAR_1 , result ) ; } 
public void onSuccess ( TYPE_1 cluster ) { if ( cluster != null ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , cluster . METHOD_2 ( ) ) ; } } 
private void METHOD_1 ( ) { METHOD_3 ( ) ; } 
java.lang.String METHOD_1 ( int VAR_1 ) ; 
protected TYPE_1 METHOD_1 ( TYPE_1 type ) { return METHOD_2 ( VAR_1 class , VAR_1 class ) . map ( type , null ) ; } 
public void METHOD_1 ( java.lang.String value ) { this . VAR_1 = value ; } 
protected boolean validate ( ) { TYPE_1 validator = new TYPE_1 ( METHOD_2 ( ) ) ; return ( validate ( validator . METHOD_3 ( ) ) ) && ( super . validate ( ) ) ; } 
protected TYPE_1 . VdcQueryReturnValue METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_3 ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) ) ; } 
public boolean METHOD_1 ( java.lang.Integer value , TYPE_1 context ) { return ( value == 0 ) || ( ( INT_1 <= value ) && ( value <= ( VAR_1 < java.lang.Integer > getValue ( VAR_2 ) ) ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
private void METHOD_1 ( TYPE_1 VAR_2 , boolean VAR_1 ) { VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; client . METHOD_5 ( VAR_2 ) ; } 
public void error ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . log ( VAR_4 , VAR_1 , VAR_2 ) ; } 
private static < TYPE_1 > void METHOD_1 ( TYPE_2 value , java.lang.String version , TYPE_1 returnValue ) { org.mockito.Mockito.when ( TYPE_3 . METHOD_2 ( ) . METHOD_3 ( value , version ) ) . thenReturn ( returnValue ) ; } 
protected boolean METHOD_1 ( ) { return VAR_1 ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage disk ) { return disk . METHOD_2 ( ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 , TYPE_3 < TYPE_2 > VAR_3 ) { TYPE_4 . METHOD_2 ( ) . METHOD_3 ( ( VAR_1 == null ? TYPE_4 . METHOD_4 ( ) : VAR_1 ) , VAR_2 , VAR_3 ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( false ) ; METHOD_5 ( ) . METHOD_3 ( false ) ; } 
protected void METHOD_1 ( ) { getTable ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { return METHOD_2 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vmId ) , VAR_1 , VAR_2 , METHOD_4 ( ) , true , true ) ; } 
public static void METHOD_1 ( ) { if ( ( TYPE_1 ) != null ) { TYPE_1 . METHOD_2 ( ) ; } } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.lang.String VAR_1 ) { return METHOD_2 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vmId ) , VAR_2 , VAR_3 , METHOD_4 ( STRING_1 , VAR_1 ) , true , true ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_2 . VdcActionParametersBase params ) { return METHOD_2 ( VAR_1 , params ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return this . VAR_1 . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( vm . METHOD_3 ( ) , vm . getStatus ( ) ) ; TYPE_2 . METHOD_5 ( vm ) ; VAR_1 . METHOD_6 ( ) ; return null ; } 
public TYPE_1 . VdcQueryReturnValue runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 parameters ) { return METHOD_1 ( VAR_1 , parameters , true , null ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate VAR_1 ) { TYPE_1 . METHOD_1 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( int length ) { return utils . METHOD_1 ( length ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return getEntity ( VAR_1 class , VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , id . toString ( ) , true ) ; } 
private void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { for ( java.lang.String VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( cmd . METHOD_5 ( false ) ) ; } 
public java.lang.String METHOD_1 ( ) { return org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getInstance ( ) . METHOD_4 ( ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return new TYPE_2 ( VAR_1 . getId ( ) , TYPE_3 . METHOD_2 ( VAR_1 ) , VAR_1 . METHOD_3 ( ) ) ; } 
protected int METHOD_1 ( ) { return VAR_1 < java.lang.Integer > getValue ( VAR_2 ) . METHOD_3 ( ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; assertEquals ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 ) , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { disk . METHOD_2 ( STRING_1 ) ; disk . METHOD_3 ( null ) ; METHOD_4 ( disk , METHOD_5 ( STRING_1 ) , METHOD_6 ( STRING_2 ) ) ; } 
private org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( ) { network = new org.ovirt.engine.core.common.businessentities.network.Network ( ) ; network . METHOD_2 ( STRING_1 ) ; return network ; } 
public void METHOD_1 ( int VAR_1 , org.ovirt.engine.core.common.businessentities.VmTemplate template , java.lang.String value ) { VAR_2 . METHOD_2 ( true ) ; } 
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 ; TYPE_2 . METHOD_3 ( ) ; TYPE_3 . METHOD_3 ( ) ; TYPE_4 . METHOD_3 ( ) ; VAR_3 . METHOD_5 ( STRING_1 ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { java.lang.String VAR_2 = TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return VAR_2 ; } 
public TYPE_1 . VM get ( ) { TYPE_1 . VM vm = METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ) ; return METHOD_2 ( vm ) ; } 
public static < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( TYPE_1 model ) { return TYPE_5 . METHOD_1 ( model , null ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { table . METHOD_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; } return VAR_4 . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 widget ) { VAR_1 . METHOD_2 ( widget ) ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; } 
protected boolean METHOD_1 ( ) throws TYPE_1 { return ! ( ( ( VAR_1 . METHOD_2 ( ) ) > 0 ) || ( ( VAR_3 . METHOD_2 ( ) ) > 0 ) ) ; } 
public void METHOD_1 ( ) { getModel ( ) . METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( TYPE_2 . toString ( ) ) ; VAR_1 . METHOD_3 ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) ) ; return VAR_1 ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( ( a . METHOD_2 ( ) ) == ( VAR_1 ) ) && ( ( a . METHOD_3 ( ) ) == ( VAR_2 ) ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool object ) { return object . getName ( ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; } 
public static TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , TYPE_1 VAR_2 ) { return TYPE_3 . METHOD_2 ( VAR_1 , VAR_3 , VAR_2 , true , true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( STRING_1 , null , null , null ) ; METHOD_3 ( STRING_2 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_4 ( VAR_2 ) ; } } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 , false , null , null , VAR_2 , true , null , null ) ; } 
public double METHOD_1 ( ) { double result = super . METHOD_1 ( ) ; if ( result != 0 ) { result = INT_1 ; } return result ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( new TYPE_1 . ValidationResult ( VAR_2 ) ) ; TYPE_2 . METHOD_3 ( VAR_3 . METHOD_5 ( storageDomain ) ) ; } 
protected void METHOD_1 ( ) { METHOD_3 ( null ) ; METHOD_4 ( null ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 < TYPE_1 > VAR_1 ) { return new TYPE_2 ( VAR_1 ) ; } 
private void METHOD_1 ( java.lang.String [ ] args ) { if ( ( args . length ) == 0 ) { throw new TYPE_1 ( STRING_2 ) ; } } 
public java.lang.Integer METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( object ) ; } 
public void onSuccess ( java.lang.String VAR_1 ) { METHOD_1 ( ) . METHOD_2 ( ) . setEntity ( VAR_1 ) ; METHOD_3 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( VAR_3 . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool result = dao . get ( VAR_1 . getId ( ) , VAR_2 , false ) ; METHOD_2 ( result ) ; } 
private static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , long VAR_1 ) { return new TYPE_1 ( storageDomain ) . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_3 = VAR_1 ; } 
public void METHOD_1 ( ) { METHOD_2 ( null ) ; TYPE_1 . METHOD_6 ( STRING_1 , METHOD_4 ( ) . METHOD_7 ( ) ) ; } 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . METHOD_3 ( ) ) == null ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 id , boolean VAR_1 ) { return TYPE_3 . METHOD_2 ( id , VAR_2 , VAR_3 , VAR_4 . Collections < java.lang.String , java.lang.Object > METHOD_3 ( ) , VAR_1 , false , null ) ; } 
protected TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return new TYPE_1 ( vmId , id , METHOD_2 ( ) . METHOD_1 ( id ) ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { value = ( value == null ) ? java.lang.Integer . valueOf ( 0 ) : value ; if ( ! ( VAR_1 . equals ( value ) ) ) { VAR_1 = value ; } } 
public java.lang.String METHOD_1 ( TYPE_1 name ) { return VAR_1 . METHOD_1 ( name ) ; } 
public java.lang.String METHOD_1 ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( object ) ) . getName ( ) ; } 
protected TYPE_1 . StorageDomain METHOD_1 ( ) { TYPE_1 . StorageDomain entity = VAR_2 . METHOD_2 ( VAR_3 . StorageDomain class ) ; return TYPE_2 . METHOD_3 ( entity , VAR_4 ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( null ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return VAR_1 . getName ( ) . equals ( METHOD_3 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 != null ) { METHOD_1 ( VAR_3 , VAR_2 ) ; } } 
public TYPE_1 list ( ) { return METHOD_2 ( METHOD_1 ( VAR_2 , VAR_3 ) ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; TYPE_3 . METHOD_4 ( VAR_1 , TYPE_4 . METHOD_5 ( INT_1 ) ) ; } 
void METHOD_1 ( ) { } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool item , TYPE_1 VAR_1 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . getId ( ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 , VAR_1 ) ) ) { this . VAR_1 = VAR_1 ; METHOD_3 ( new TYPE_2 ( STRING_1 ) ) ; } } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null ) , null ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( TYPE_1 value ) { VAR_1 . METHOD_1 ( value ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( true ) ; VAR_1 . add ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; } 
public TYPE_1 get ( ) { TYPE_1 host = METHOD_3 ( ) ; METHOD_4 ( host ) ; return host ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( getEntity ( ) . getId ( ) ) ) ) ; setItems ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; java.lang.String VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; } 
private static TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 [ VAR_1 ] . toString ( ) , VAR_4 [ VAR_1 ] , null , VAR_5 , null , VAR_6 , null ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( vm ) ; } 
protected void METHOD_1 ( ) { status = TYPE_1 . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_2 ( ) ) ; TYPE_1 . METHOD_5 ( ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . getInstance ( ) . METHOD_4 ( TYPE_1 . getParameters ( ) . getId ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( disk ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.VDS entity ) { VAR_1 . METHOD_2 ( model , entity ) ; VAR_1 . METHOD_3 ( model ) ; return model ; } 
public void METHOD_1 ( ) { METHOD_3 ( true ) ; } 
public static java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 ) { return VAR_2 . getEntity ( VAR_3 . List class , VAR_4 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , STRING_1 , true ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = ( VAR_1 == null ) ? new TYPE_1 ( null ) : VAR_1 ; if ( ! ( this . VAR_1 . METHOD_2 ( ) ) ) { VAR_2 = false ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } 
private static java.lang.String METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 ) { java.lang.String VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; return VAR_2 != null ? VAR_2 . METHOD_3 ( CHAR_1 , CHAR_2 ) : null ; } 
public java.lang.String METHOD_1 ( ) { return STRING_1 ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 result ) { TYPE_2 VAR_1 = result . getReturnValue ( ) ; METHOD_3 ( ) ; METHOD_2 ( VAR_1 ) ; } 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( ) { return METHOD_1 ( false , false , false ) ; } 
public java.lang.String METHOD_1 ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( object ) ) . getName ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 . assertEquals ( new TYPE_1 ( INT_1 ) , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return METHOD_1 ( id , false ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( ) ) ; VAR_1 . METHOD_3 ( ) . add ( getEntity ( ) . getId ( ) ) ; return VAR_1 ; } 
protected org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > METHOD_1 ( ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > value = new org.ovirt.engine.ui.uicommonweb.models.EntityModel ( ) ; value . setEntity ( STRING_1 ) ; return value ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_1 ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_2 ( ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false , false , false ) ; METHOD_2 ( true , null , false , false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( client ) != null ) { client . METHOD_2 ( ) ; client = null ; } } 
java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) . getName ( ) ) . METHOD_5 ( ) . toString ( ) ; } 
private TYPE_1 METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VmTemplate entity = getEntity ( ) ; return METHOD_2 ( METHOD_3 ( map ( entity , null ) , entity ) , null , new java.lang.String [ 0 ] ) ; } 
protected java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.List < TYPE_1 . DiskImage > VAR_1 ) { return VAR_2 . METHOD_2 ( vm , VAR_1 , TYPE_2 . METHOD_3 ( vm ) ) ; } 
public boolean validate ( ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( ) , new TYPE_4 ( ) } ) ; return METHOD_2 ( ) . METHOD_4 ( ) ; } 
public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , status ) ; } 
public boolean METHOD_1 ( ) { return VAR_1 ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_3 ( VAR_2 ) ) ) ; } 
protected java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return java.lang.String . METHOD_3 ( STRING_1 , METHOD_2 ( ) . getName ( ) ) ; } else { return super . METHOD_1 ( ) ; } } 
public void onSuccess ( java.util.List < TYPE_1 > VAR_1 ) { setItems ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_4 ( storageDomain ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid value ) { super . METHOD_1 ( value ) ; TYPE_1 . getParameters ( ) . METHOD_1 ( value ) ; } 
public void METHOD_1 ( boolean value ) { VAR_1 . METHOD_1 ( value ) ; } 
private TYPE_1 . DiskImage METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 . DiskImage disk = METHOD_2 ( ) ; disk . METHOD_3 ( VAR_1 ) ; disk . METHOD_4 ( true ) ; return disk ; } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { TYPE_1 . METHOD_1 ( VAR_1 , cluster . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 object ) { VAR_1 . METHOD_1 ( object ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( getVdsGroup ( ) ) != null ) { return getVdsGroup ( ) . getName ( ) ; } else { return null ; } } 
public java.lang.String getValue ( TYPE_1 model ) { return model . METHOD_1 ( ) ; } 
protected void METHOD_1 ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , VAR_2 , new TYPE_3 ( ) ) ; METHOD_4 ( false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) , true , false ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; TYPE_1 . METHOD_5 ( true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . assertEquals ( INT_2 , TYPE_2 . METHOD_3 ( INT_1 , null ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , new TYPE_2 ( ) ) ; } 
protected int METHOD_1 ( ) { return VAR_1 ; } 
public TYPE_1 list ( ) { java.util.List < TYPE_2 > VAR_1 = METHOD_1 ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_2 ( METHOD_3 ( ) ) ) ) ; return METHOD_4 ( VAR_1 ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String VAR_1 ) { return METHOD_2 ( iface . getId ( ) , iface . getName ( ) , false , VAR_1 , null , null , null , true , null , false , null ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . METHOD_2 ( ) . equals ( VAR_1 ) ; } 
public TYPE_1 . VdcActionParametersBase getParameters ( TYPE_2 . Disk VAR_1 , TYPE_2 . Disk entity ) { return new TYPE_3 ( vmId , map ( VAR_1 , entity ) ) ; } 
public void METHOD_1 ( ) { long VAR_1 = INT_1 ; int VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( INT_2 , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { long VAR_1 = ( ( object . METHOD_2 ( ) ) != null ) ? object . METHOD_2 ( ) : 0 ; return ( ( long ) ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 = dao . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; TYPE_1 . assertEquals ( 2 , VAR_1 . size ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_1 ( ) ; } 
public java.lang.String getParameters ( ) { return parameters ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { if ( METHOD_2 ( ) ) { return METHOD_1 ( VAR_1 , new TYPE_2 ( VAR_2 ) , VAR_3 ) ; } else { return METHOD_1 ( VAR_3 , METHOD_3 ( ) ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
java.lang.String METHOD_1 ( ) ; 
public TYPE_1 . Disk get ( ) { return METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ) ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { METHOD_2 ( ) . setItems ( VAR_1 ) ; METHOD_3 ( ) ; } 
private TYPE_1 METHOD_1 ( ) throws TYPE_3 { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( METHOD_5 ( ) ) ; return VAR_2 ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 ) . when ( ( ( host ) == null ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( cmd . METHOD_6 ( false , false ) ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storage ) { return storage . METHOD_2 ( ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_3 . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( ) ) ; } 
private void METHOD_1 ( final TYPE_1 . EngineMessage VAR_1 ) { TYPE_2 . METHOD_2 ( cmd . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( cmd . getReturnValue ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 . toString ( ) ) ) ; } 
public boolean validate ( ) { METHOD_1 ( ) . METHOD_2 ( new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( ) } ) ; return ( super . validate ( ) ) && ( METHOD_1 ( ) . METHOD_3 ( ) ) ; } 
private java.lang.String METHOD_4 ( ) { return TYPE_2 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; } 
protected TYPE_1 < ? extends TYPE_2 > METHOD_1 ( ) { return new TYPE_1 ( METHOD_2 ( ) , null ) ; } 
public void onSuccess ( java.lang.Integer returnValue ) { VAR_1 = returnValue ; METHOD_1 ( ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 value , TYPE_1 returnValue ) { return new TYPE_2 ( value , VAR_1 , returnValue ) ; } 
protected void METHOD_1 ( TYPE_1 response ) { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( response , VAR_2 ) ; if ( VAR_1 != null ) { METHOD_3 ( VAR_1 , true ) ; } METHOD_4 ( ) ; } 
public void METHOD_2 ( org.ovirt.engine.core.compat.Guid value ) { this . id . METHOD_2 ( value ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { METHOD_2 ( aQuery ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_2 ( id . toString ( ) ) , aQuery ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; for ( org.ovirt.engine.core.compat.Guid id : METHOD_2 ( ) ) { VAR_1 . add ( id ) ; } return VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; } 
public void onSuccess ( java.lang.Boolean returnValue ) { METHOD_1 ( ) . setEntity ( returnValue ) ; } 
public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( getId ( ) , METHOD_3 ( ) ) ; } 
public void METHOD_1 ( boolean value ) { VAR_1 = value ; } 
public boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 ) ; } 
int METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( ( this . VAR_2 ) != null ) { return this . VAR_2 . METHOD_1 ( VAR_1 ) ; } else { return VAR_3 . METHOD_1 ( VAR_1 ) ; } } 
public abstract TYPE_1 METHOD_1 ( ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( ( java.lang.Boolean ) ( METHOD_3 ( ) . getEntity ( ) ) ) == true ) { METHOD_2 ( ) . setEntity ( false ) ; } } 
public void METHOD_1 ( ) { TYPE_1 object = METHOD_2 ( STRING_1 ) ; TYPE_2 . assertEquals ( STRING_2 , object . name ( ) ) ; } 
private java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return VAR_3 . Collections < java.lang.String , java.lang.Object > METHOD_2 ( VAR_4 , METHOD_3 ( VAR_1 , VAR_2 ) ) ; } 
public static java.lang.Boolean METHOD_1 ( TYPE_2 value ) { return TYPE_1 . map ( value ) ; } 
protected java.util.List < TYPE_1 . Network > METHOD_1 ( ) { return METHOD_2 ( false , false ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String version , org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { TYPE_2 parameters = new TYPE_2 ( VAR_1 , version ) ; METHOD_1 ( parameters , aQuery ) ; } 
private org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( boolean VAR_1 , java.lang.String VAR_2 ) { org.ovirt.engine.core.common.businessentities.network.Network network = new org.ovirt.engine.core.common.businessentities.network.Network ( ) ; network . METHOD_2 ( VAR_1 ) ; network . METHOD_3 ( VAR_2 ) ; return network ; } 
private boolean METHOD_1 ( ) { return false ; } 
public void METHOD_1 ( int VAR_1 , org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 , java.lang.String value ) { VAR_3 . METHOD_2 ( true ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { setItems ( ( ( TYPE_1 < org.ovirt.engine.core.common.businessentities.VM > ) ( returnValue . getReturnValue ( ) ) ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_2 , METHOD_4 ( id ) ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_5 ( ) . METHOD_3 ( VAR_1 . METHOD_6 ( ) ) ; return null ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , TYPE_2 . VdcActionType VAR_3 ) { return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , null , new java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_3 > ( ) ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return ( getVm ( ) . METHOD_2 ( ) ) != null ? getVm ( ) . METHOD_2 ( ) : VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_2 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( STRING_2 ) ; } catch ( TYPE_1 VAR_3 ) { METHOD_5 ( VAR_3 ) ; } } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 . METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_2 VAR_1 ) { java.lang.String status = TYPE_3 . getInstance ( ) . METHOD_2 ( VAR_1 . getStatus ( ) ) ; return status ; } 
private native java.lang.String getValue ( ) ; 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , null , this ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_9 ( ) ; METHOD_10 ( VAR_4 ) ; } 
public boolean METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; return ( vm != null ) && ( ( vm . getStatus ( ) ) == ( VAR_1 ) ) ; } 
public org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > METHOD_1 ( boolean value ) { return METHOD_1 ( value , null ) ; } 
protected boolean validate ( ) { TYPE_1 validator = new TYPE_1 ( METHOD_2 ( ) ) ; return validate ( validator . METHOD_3 ( ) ) ; } 
protected int METHOD_1 ( ) { return METHOD_2 ( ) ? TYPE_1 . getInstance ( ) . METHOD_3 ( ) : TYPE_1 . getInstance ( ) . METHOD_4 ( ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 object ) { return object . getName ( ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { return VAR_1 < java.lang.String > getValue ( VAR_2 , version . getValue ( ) ) ; } 
private void add ( ) { if ( ( getWindow ( ) ) != null ) { return ; } METHOD_1 ( new TYPE_1 ( this ) ) ; } 
public TYPE_1 < TYPE_2 > getTable ( ) { return VAR_1 . getTable ( ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_2 ( METHOD_3 ( VAR_2 ) , VAR_3 , true , null ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 ) { METHOD_2 ( null ) ; METHOD_2 ( model ) ; } 
public java.lang.String getName ( ) { return getEntity ( ) . getName ( ) ; } 
private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( TYPE_2 . getParameters ( ) . getStoragePoolId ( ) , TYPE_2 . METHOD_2 ( ) , TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_3 , METHOD_4 ( VAR_1 ) ) ; } 
public void METHOD_1 ( java.lang.String value ) { VAR_1 . METHOD_1 ( value ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_3 ) ; TYPE_1 . assertEquals ( STRING_5 , STRING_6 , result ) ; } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 < TYPE_4 , TYPE_5 , TYPE_6 > VAR_2 ) { return new TYPE_7 ( VAR_1 . METHOD_2 ( ) , 0 , VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( VAR_2 , VAR_1 . METHOD_2 ( ) ) ; org.mockito.Mockito . METHOD_3 ( VAR_3 ) . METHOD_4 ( VAR_4 . METHOD_5 ( ) ) ; METHOD_6 ( ) ; } 
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; } 
protected TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_3 ( getParameters ( ) . getId ( ) , getParameters ( ) . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( false , false , java.lang.Boolean . TRUE , true ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( VAR_1 . length ( ) ) >= 1 ) && ( ! ( VAR_1 . METHOD_2 ( STRING_1 ) ) ) ) { return VAR_1 + STRING_1 ; } return VAR_1 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( METHOD_2 ( ) ) . METHOD_3 ( ) ; METHOD_5 ( ) . METHOD_6 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 vm ) { vm = METHOD_3 ( METHOD_4 ( ) : : METHOD_1 , vm ) ; TYPE_2 . METHOD_2 ( vm ) ; return vm ; } 
protected TYPE_1 . AuditLogType METHOD_1 ( ) { if ( ( TYPE_2 . METHOD_2 ( ) . getStatus ( ) ) == ( VAR_1 ) ) { return VAR_2 ; } if ( ( METHOD_3 ( ) ) == null ) { return VAR_3 ; } return VAR_4 ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , boolean VAR_3 , org.ovirt.engine.core.compat.Guid VAR_5 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_5 , null ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { return VAR_1 < java.lang.String > METHOD_2 ( VAR_2 , version . getValue ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_4 . METHOD_4 ( true ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 . DiskImage ( ) ; VAR_2 = new TYPE_1 . DiskImage ( ) ; VAR_3 = new TYPE_1 . DiskImage ( ) ; } 
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 == null ) { this . VAR_1 = new java.util.ArrayList < > ( ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_1 disk ) { disk = METHOD_2 ( METHOD_3 ( ) : : METHOD_1 , disk ) ; TYPE_2 . METHOD_4 ( vmId , disk ) ; TYPE_2 . METHOD_5 ( vmId , disk ) ; return disk ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; return METHOD_3 ( VAR_1 , new TYPE_2 ( VAR_3 , VAR_4 class ) , VAR_5 , new TYPE_3 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } 
private boolean METHOD_1 ( ) { final TYPE_1 VAR_1 = METHOD_2 ( ) ; return ( validate ( VAR_1 . METHOD_3 ( TYPE_2 . getVdsGroup ( ) , TYPE_2 . METHOD_4 ( ) ) ) ) && ( METHOD_1 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 object = METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( object . id ( ) ) ; } 
public void onSuccess ( java.lang.Object returnValue ) { METHOD_1 ( ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( ) { return VAR_1 . METHOD_1 ( cluster , TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) , vm , null , VAR_4 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( nic ) ) ; } 
public void METHOD_1 ( final org.ovirt.engine.core.common.businessentities.VDS value ) { VAR_1 = value ; VAR_2 = null ; if ( value != null ) { VAR_3 = value . getId ( ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false , false , false ) ; METHOD_6 ( resource . get ( ) , 1 ) ; } 
private java.lang.String METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return VAR_2 . METHOD_2 ( STRING_1 , VAR_3 . String class , VAR_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { TYPE_1 . getInstance ( ) . METHOD_3 ( VAR_1 ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { boolean returnValue = ( storageDomain != null ) && ( ( storageDomain . METHOD_2 ( ) ) != ( VAR_1 ) ) ; if ( ! returnValue ) { addCanDoActionMessage ( VAR_2 ) ; } return returnValue ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 model = ( ( TYPE_3 ) ( VAR_1 . METHOD_2 ( ) ) ) ; model . METHOD_3 ( ) ; METHOD_4 ( ) ; } 
protected boolean validate ( ) { TYPE_1 validator = METHOD_2 ( METHOD_3 ( ) ) ; return ( METHOD_4 ( ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_3 < TYPE_2 > ( ) ) ; VAR_2 = new TYPE_4 ( false , true ) ; VAR_3 = new TYPE_4 ( false , true ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; assertEquals ( 1 , ( ( int ) ( VAR_1 . METHOD_3 ( ) ) ) ) ; assertEquals ( STRING_2 , VAR_1 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; iface . METHOD_3 ( null ) ; TYPE_1 . METHOD_4 ( STRING_1 , TYPE_2 . METHOD_5 ( null , null , iface ) ) ; } 
public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
protected boolean METHOD_1 ( TYPE_1 . Disk disk ) { TYPE_2 VAR_1 = METHOD_2 ( disk ) ; return ( validate ( VAR_1 . METHOD_3 ( ) ) ) && ( validate ( VAR_1 . METHOD_4 ( TYPE_3 . getVm ( ) ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( id , METHOD_2 ( ) . METHOD_1 ( ) ) ; } 
public void METHOD_1 ( ) { validator = new TYPE_1 ( VAR_1 , VAR_2 ) ; } 
public java.lang.String toString ( ) { if ( ( VAR_1 ) == null ) { return STRING_1 ; } return VAR_1 . toString ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 , int VAR_4 ) throws TYPE_5 { return new TYPE_6 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( a . getId ( ) . equals ( METHOD_2 ( ) . getId ( ) ) ) && ( ( a . METHOD_3 ( ) ) == ( VAR_1 ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { try ( TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 . METHOD_2 ( ) ) ) { METHOD_4 ( VAR_1 ) ; } } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters ) { METHOD_1 ( VAR_1 , parameters , null , null ) ; } 
public void METHOD_1 ( final TYPE_1 value ) { cluster = value ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return iface . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; } 
TYPE_1 < org.ovirt.engine.core.common.businessentities.VM , TYPE_2 > METHOD_1 ( ) { TYPE_1 < org.ovirt.engine.core.common.businessentities.VM , TYPE_2 > VAR_1 = METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( null ) ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( VAR_1 ) ; return VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.StoragePool entity ) { return VAR_1 . METHOD_1 ( model , entity ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( getParameters ( ) . METHOD_3 ( ) . METHOD_2 ( ) ) ; } 
public void validate ( ) { METHOD_1 ( ) ; METHOD_2 ( ) ; } 
public java.lang.String getValue ( java.lang.Object object ) { return java.lang.String.valueOf ( ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( object ) ) . METHOD_1 ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 < TYPE_2 > ( ) { public TYPE_2 METHOD_2 ( TYPE_3 rs , int VAR_2 ) throws TYPE_4 { return METHOD_1 ( rs ) ; } } ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_1 ( VAR_1 , INT_1 , INT_2 , VAR_2 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_2 . instance , METHOD_4 ( ) ) ; } 
protected TYPE_1 getEntity ( int VAR_1 ) { return METHOD_1 ( VAR_2 . METHOD_2 ( VAR_3 class ) , VAR_1 , false ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , true , null , null ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( false ) , TYPE_2 . METHOD_5 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network result = dao . METHOD_2 ( VAR_1 , cluster ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { iface . METHOD_2 ( null ) ; TYPE_1 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) , TYPE_2 . METHOD_6 ( true ) ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) . getStoragePoolId ( ) . getValue ( ) ; } 
public int METHOD_1 ( ) { java.lang.Integer VAR_1 = getEntity ( ) . METHOD_1 ( ) ; return VAR_1 == null ? - 1 : VAR_1 ; } 
public void setId ( org.ovirt.engine.core.compat.Guid id ) { this . vmId = id ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( ) ; METHOD_7 ( getParameters ( ) . METHOD_8 ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String vmId , java.util.Map < java.lang.String , java.lang.String > [ ] VAR_1 ) { return METHOD_1 ( vmId , VAR_1 , null , false ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { } 
public org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( org.ovirt.engine.core.compat.Guid id , org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_2 . instance , METHOD_4 ( ) . addValue ( STRING_2 , id ) . addValue ( STRING_3 , VAR_1 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; cmd . METHOD_1 ( ) ; TYPE_1 . assertEquals ( VAR_2 , cmd . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . getValue ( VAR_3 , VAR_4 ) ) . thenReturn ( INT_1 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . METHOD_2 ( VAR_1 . getStoragePoolId ( ) , VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( result ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; getModel ( ) . METHOD_2 ( false ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( ) , TYPE_2 . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_2 ( ) . getStoragePoolId ( ) . getValue ( ) ) , VAR_1 , VAR_2 , false ) ; } 
public static void METHOD_1 ( final TYPE_1 VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_3 . any ( ) ) ) . thenReturn ( VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_3 VAR_2 , TYPE_4 VAR_3 ) { TYPE_5 VAR_4 = new TYPE_5 ( VAR_2 , VAR_3 ) ; return METHOD_1 ( VAR_2 . METHOD_2 ( ) , VAR_4 , true ) ; } 
private void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return ; } METHOD_3 ( new TYPE_1 ( this , false ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return new TYPE_1 ( METHOD_2 ( ) . METHOD_1 ( id ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_4 , STRING_5 , result ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_2 , result ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > ) ( returnValue ) ) ; METHOD_3 ( ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { return java.lang.String.valueOf ( object . getVm ( ) . METHOD_1 ( ) . size ( ) ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { METHOD_1 ( ( ( TYPE_1 ) ( returnValue . getReturnValue ( ) ) ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( false , VAR_1 ) ) . when ( VAR_2 ) . get ( TYPE_1 . any ( ) ) ; TYPE_2 . METHOD_3 ( cmd , VAR_4 ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( ) . add ( map ( METHOD_4 ( ) . get ( 0 ) , null ) ) ; return VAR_1 ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { METHOD_2 ( ) . METHOD_3 ( vds . getId ( ) ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { setItems ( ( ( TYPE_1 < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( returnValue . getReturnValue ( ) ) ) ) ; } 
public java.lang.String METHOD_1 ( ) throws java.lang.Exception { if ( ( client ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } return ( ( TYPE_2 ) ( client ) ) . METHOD_1 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . get ( TYPE_2 . any ( ) ) ) . thenReturn ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . VdcActionParametersBase parameters ) { TYPE_1 result = TYPE_3 . getInstance ( ) . METHOD_2 ( METHOD_3 ( ) , parameters , TYPE_5 . METHOD_4 ( TYPE_4 . METHOD_5 ( ) ) ) ; return result ; } 
public java.lang.String getValue ( TYPE_1 < org.ovirt.engine.core.common.businessentities.VDSGroup , TYPE_2 > object ) { return object . METHOD_1 ( ) . getName ( ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_2 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return super . METHOD_1 ( ) . METHOD_2 ( VAR_1 , TYPE_2 . METHOD_3 ( ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { return VAR_1 . METHOD_2 ( ) ; } return null ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_6 ( VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 vm ) { org.ovirt.engine.core.compat.Guid vmId = METHOD_2 ( vm . getId ( ) ) ; TYPE_2 VAR_1 = inject ( new TYPE_2 ( vmId ) ) ; TYPE_3 VAR_2 = VAR_1 . list ( ) ; vm . METHOD_3 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { for ( java.lang.String VAR_1 : new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 } ) { assertEquals ( VAR_1 , TYPE_2 . METHOD_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat . Version object ) { return object . getValue ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_2 . METHOD_2 ( ) ) ) { METHOD_1 ( VAR_2 . getId ( ) ) ; } } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( STRING_1 , TYPE_1 . METHOD_3 ( VAR_1 ) , VAR_3 ) ; VAR_5 . get ( VAR_1 ) . add ( VAR_2 ) ; } 
public int METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { return getValue ( VAR_1 ) . METHOD_3 ( getValue ( VAR_2 ) ) ; } 
public void METHOD_6 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) , METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; } 
public static < TYPE_1 extends TYPE_2 > void METHOD_1 ( TYPE_1 entity ) { if ( entity != null ) { TYPE_3 . METHOD_3 ( entity , entity ) ; } } 
protected org.ovirt.engine.core.common.businessentities . Disk METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; } return VAR_1 ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( ( VAR_1 . getStatus ( ) ) != ( VAR_2 ) ) ) { return new TYPE_1 . ValidationResult ( VAR_3 ) ; } return VAR_4 ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public java.lang.String getValue ( ) { return this . value ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( int VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storageDomain . METHOD_2 ( VAR_1 ) ; storageDomain . METHOD_3 ( VAR_2 ) ; storageDomain . setId ( VAR_3 ) ; storageDomain . METHOD_4 ( VAR_4 ) ; return storageDomain ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_2 . METHOD_3 ( STRING_1 ) ; TYPE_1 . METHOD_4 ( STRING_2 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_5 ( VAR_3 ) ; } } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 . METHOD_4 ( result . isEmpty ( ) ) ; } 
public void METHOD_1 ( TYPE_1 context , java.lang.String value , TYPE_2 VAR_1 , java.lang.String id ) { TYPE_3 template = TYPE_4 . METHOD_2 ( VAR_2 class ) ; VAR_1 . append ( template . METHOD_3 ( value , STRING_1 , id ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
protected boolean validate ( ) { return ( ( super . validate ( ) ) && ( validate ( METHOD_2 ( ) . METHOD_3 ( ) ) ) ) && ( validate ( METHOD_2 ( ) . METHOD_4 ( METHOD_5 ( ) ) ) ) ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 = ( ( java.lang.Boolean ) ( VAR_2 . METHOD_2 ( VAR_3 ) ) ) ; return true ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { TYPE_1 parameters = new TYPE_1 ( VAR_1 , VAR_2 ) ; parameters . METHOD_2 ( VAR_3 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , parameters , aQuery ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 < TYPE_1 > METHOD_2 ( new TYPE_3 ( this ) , new TYPE_4 ( this ) , new TYPE_5 ( this ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 < TYPE_3 > ( VAR_1 , TYPE_4 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool item , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . getId ( ) ) ; } 
public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) ) , true ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . VM ) , false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; TYPE_2 . assertEquals ( 0 , VAR_1 . size ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new TYPE_1 ( ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; pool . METHOD_3 ( new TYPE_2 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . assertEquals ( VAR_1 , TYPE_2 . METHOD_3 ( INT_1 , null ) ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ; } 
private static void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vmId ) , VAR_1 , VAR_2 , new java.util.HashMap < java.lang.String , java.lang.Object > ( ) , true , false , null , false ) ; } 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { METHOD_1 ( model , VAR_1 , TYPE_3 . toString ( ) ) ; } 
private java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , null ) ; } 
void METHOD_1 ( int VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_1 ( ) { METHOD_3 ( new TYPE_1 ( VAR_1 ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( VAR_3 ) ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 . instance ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; assertEquals ( VAR_2 , TYPE_2 . METHOD_3 ( VAR_1 ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { METHOD_2 ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( VAR_1 ) ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . getStoragePoolId ( ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_3 ) ; } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 < TYPE_4 , TYPE_5 , TYPE_6 > VAR_2 ) { return new TYPE_7 ( VAR_1 . METHOD_2 ( ) , 1 , VAR_2 ) ; } 
protected boolean validate ( ) { TYPE_1 validator = METHOD_2 ( METHOD_3 ( ) ) ; return ( ( super . validate ( ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ; } 
protected final void METHOD_1 ( TYPE_1 . EngineMessage ... VAR_1 ) { for ( TYPE_1 . EngineMessage VAR_2 : VAR_1 ) { addCanDoActionMessage ( VAR_2 ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; METHOD_5 ( TYPE_1 . getParameters ( ) . METHOD_6 ( ) ) ; METHOD_7 ( ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_3 . instance , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = null ; VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_3 . assertEquals ( STRING_3 , STRING_4 , VAR_1 ) ; } 
public int METHOD_1 ( ) { return this . VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , null , STRING_2 ) ; parameters . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( command , VAR_3 ) ; } 
public void METHOD_1 ( ) { final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_2 ) ; } 
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { VAR_2 = false ; METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( METHOD_1 ( ) ) && ( METHOD_2 ( ) . equals ( VAR_1 ) ) ; } 
public TYPE_1 getStatus ( ) { return status ; } 
private java.lang.String METHOD_1 ( ) throws TYPE_1 { return TYPE_2 . getInstance ( ) . METHOD_1 ( TYPE_3 . getParameters ( ) . METHOD_2 ( ) ) ; } 
protected abstract TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 , int VAR_4 ) throws TYPE_5 ; 
public boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_1 ( ) ; } 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) >= 0 ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic = METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( nic ) ; TYPE_1 VAR_1 = METHOD_4 ( METHOD_5 ( nic ) ) ; METHOD_6 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return inject ( new TYPE_2 ( id , this ) ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network ... VAR_1 ) { if ( VAR_1 == null ) { return this ; } METHOD_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; return this ; } 
public TYPE_1 METHOD_1 ( java.lang.Object source ) { return source != null ? ( ( TYPE_1 ) ( source ) ) : null ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = ( ( TYPE_1 ) ( returnValue ) ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; org.mockito.Mockito.doReturn ( STRING_1 ) . when ( METHOD_3 ( ) ) . METHOD_4 ( TYPE_1 . any ( VAR_1 . VM class ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 entity , org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 params = new TYPE_1 ( entity , VAR_1 , false ) ; params . METHOD_2 ( VAR_1 ) ; return params ; } 
protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_3 ( ) ; } METHOD_2 ( ) ; } 
public void onSuccess ( TYPE_1 . VdcQueryReturnValue returnValue ) { boolean VAR_1 = returnValue . getReturnValue ( ) ; METHOD_1 ( ( ! VAR_1 ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( 1 ) ; VAR_1 . METHOD_4 ( STRING_1 ) ; VAR_1 . METHOD_5 ( STRING_2 ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { this . METHOD_2 ( STRING_1 , TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; this . METHOD_2 ( STRING_2 , TYPE_2 . METHOD_5 ( METHOD_6 ( ) , STRING_3 ) ) ; } 
private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_3 . put ( VAR_2 . getId ( ) , VAR_2 ) ; } } 
public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_2 . VmTemplate ) ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . VmTemplate ) ) ; } 
public static TYPE_1 < java.lang.String , java.lang.String > METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 . EngineMessage VAR_2 ) { return TYPE_4 . METHOD_1 ( VAR_1 , VAR_2 . name ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain result = dao . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 . getId ( ) ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( result . getId ( ) , VAR_3 . getId ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return inject ( new TYPE_2 ( this , id ) ) ; } 
private static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( ) { return new TYPE_2 < TYPE_1 > ( VAR_1 ) ; } 
public void onSuccess ( java.lang.Boolean returnValue ) { VAR_1 . METHOD_1 ( ) . METHOD_2 ( returnValue ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return i . getName ( ) . equals ( getParameters ( ) . METHOD_2 ( ) . getName ( ) ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 , this ) ; VAR_3 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_1 ) ) ; METHOD_5 ( ) ; } 
public void setId ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public java.lang.String METHOD_1 ( ) { if ( ( getVdsGroup ( ) ) != null ) { return getVdsGroup ( ) . getName ( ) ; } return STRING_1 ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 ( METHOD_2 ( ) ) ; } 
protected boolean METHOD_1 ( TYPE_1 value ) { return ( TYPE_2 . METHOD_2 ( value . METHOD_3 ( ) . getEntity ( ) ) ) && ( TYPE_2 . METHOD_2 ( value . METHOD_4 ( ) . getEntity ( ) ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool source ) { return ( source . getStatus ( ) ) == ( status ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . VdcActionParametersBase parameters ) { TYPE_1 result = METHOD_2 ( METHOD_3 ( ) , parameters , TYPE_4 . METHOD_4 ( TYPE_5 . METHOD_5 ( ) ) ) ; return result ; } 
public java.util.List < org.ovirt.engine.core.compat.Guid > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 . instance , VAR_2 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; boolean VAR_2 = ( ( java.lang.Boolean ) ( returnValue ) ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; } 
protected TYPE_1 getParameters ( ) { return VAR_1 ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , true ) ; return true ; } 
public < TYPE_1 extends TYPE_2 . VdcActionParametersBase > TYPE_3 < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType action , TYPE_1 parameters ) { return TYPE_4 . METHOD_1 ( action , parameters ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . getModel ( ) ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 . AuditLogType VAR_1 , java.lang.String VAR_3 ) ; 
public void METHOD_1 ( boolean value ) { VAR_1 = ( value && ( METHOD_2 ( ) ) ) && ( ! ( METHOD_3 ( ) ) ) ; METHOD_4 ( new TYPE_1 ( STRING_1 ) ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { return ( - 1 ) * ( storageDomain . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 < java.lang.Integer > VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; map = new TYPE_2 ( INT_1 , true , VAR_1 ) ; } 
protected java.lang.String METHOD_1 ( ) { return getEntity ( ) . getName ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( new TYPE_2 ( VAR_1 ) ) ; if ( ! ( VAR_4 . METHOD_2 ( ) ) ) { VAR_4 . METHOD_3 ( true ) ; } } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.compat . Version VAR_2 ) { final TYPE_2 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; } return null ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain result = dao . METHOD_2 ( VAR_1 . getId ( ) , VAR_2 ) ; METHOD_3 ( result ) ; } 
protected void METHOD_1 ( TYPE_1 e ) { super . METHOD_1 ( e ) ; if ( TYPE_2 . equals ( STRING_1 ) ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 parameters = new TYPE_3 ( VAR_1 ) ; return new TYPE_1 ( parameters , null ) ; } 
public void METHOD_1 ( ) { map = new TYPE_1 ( ) ; cmd . METHOD_2 ( ) ; } 
public org.ovirt.engine.ui.uicommonweb.UICommand METHOD_1 ( java.util.List < java.lang.String > value ) { VAR_1 = value ; return this ; } 
public org.ovirt.engine.core.compat.Guid getStoragePoolId ( ) { return ( METHOD_1 ( ) ) != null ? METHOD_1 ( ) . getStoragePoolId ( ) : null ; } 
public void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_2 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 value ) { VAR_1 = value ; } 
public void setId ( java.lang.String value ) { this . id = value ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( VAR_2 , new TYPE_3 ( VAR_1 . getId ( ) ) ) ; } } 
public static TYPE_1 getInstance ( ) { return TYPE_1 . instance ; } 
private static TYPE_1 METHOD_1 ( ) { TYPE_1 iface = new TYPE_1 ( ) ; iface . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; iface . METHOD_3 ( TYPE_2 . instance ( ) . METHOD_4 ( INT_1 ) ) ; return iface ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 ) ; } 
protected org.ovirt.engine.core.compat.Guid getStoragePoolId ( ) { return ( getEntity ( ) ) != null ? getEntity ( ) . getStoragePoolId ( ) : null ; } 
public void METHOD_1 ( TYPE_1 iface ) { super . METHOD_1 ( iface ) ; } 
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( STRING_1 ) ; final TYPE_2 VAR_2 = TYPE_2 . getInstance ( ) ; VAR_2 . METHOD_3 ( ) ; } 
protected TYPE_1 map ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface entity , TYPE_1 template ) { return map ( entity , template , null ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( version . getValue ( ) ) . thenReturn ( null ) ; validator = new TYPE_1 ( nic , version ) ; } 
public java.util.ArrayList < TYPE_1 . VdcActionParametersBase > METHOD_1 ( ) { return new java.util.ArrayList ( VAR_1 . METHOD_2 ( ) ) ; } 
protected java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . getId ( ) . toString ( ) , TYPE_3 . name ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS source ) { return source . getStatus ( ) . equals ( status ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return new java.util.ArrayList ( VAR_1 . METHOD_2 ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( returnValue ) ) ) ; } 
public void METHOD_1 ( java.lang.Integer VAR_1 ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { return ( ( object . METHOD_1 ( ) ) == null ) || ( object . METHOD_1 ( ) . equals ( STRING_1 ) ) ? constants . METHOD_2 ( ) : object . METHOD_1 ( ) ; } 
protected void METHOD_1 ( ) { if ( ( vm . METHOD_2 ( ) ) == ( VAR_1 ) ) { VAR_2 . put ( VAR_3 , METHOD_3 ( vm . METHOD_4 ( ) , vm . METHOD_5 ( ) ) ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup result = dao . METHOD_2 ( VAR_1 . getName ( ) ) ; METHOD_4 ( result ) ; } 
void METHOD_1 ( ) ; 
boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) ; 
public void setEntity ( org.ovirt.engine.core.common.businessentities.StorageDomain value ) { if ( ( value == null ) || ( ! ( value . equals ( getEntity ( ) ) ) ) ) { super . setEntity ( value ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , VAR_2 , aQuery ) ; } 
public void METHOD_1 ( TYPE_1 result ) { VAR_1 = result . getReturnValue ( ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; } 
TYPE_1 METHOD_1 ( java.lang.String id , java.lang.String VAR_2 ) ; 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( false ) . when ( VAR_1 ) . METHOD_4 ( VAR_3 ) ; TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( VAR_3 ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( VAR_2 class ) . to ( VAR_2 class ) ; METHOD_2 ( VAR_2 class ) . to ( VAR_3 class ) . METHOD_3 ( VAR_4 class ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; TYPE_1 . assertEquals ( storageDomain , VAR_4 ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { METHOD_2 ( METHOD_3 ( vmId ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( vmId , VAR_2 ) ) . thenReturn ( false ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( vmId ) ) ; } 
private void METHOD_1 ( TYPE_1 version , java.util.List < TYPE_2 > VAR_1 ) { version . METHOD_2 ( new TYPE_3 ( ) ) ; version . METHOD_3 ( ) . METHOD_3 ( ) . METHOD_5 ( VAR_1 ) ; } 
private boolean METHOD_1 ( ) { return ( ( VAR_1 . METHOD_2 ( ) ) && ( TYPE_1 . METHOD_3 ( ) . METHOD_2 ( ) ) ) && ( ( TYPE_1 . getVm ( ) . getStatus ( ) ) == ( VAR_2 ) ) ; } 
public static void METHOD_1 ( int VAR_1 , org.ovirt.engine.core.compat . Version version , org.ovirt.engine.ui.frontend.AsyncQuery VAR_2 ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , new TYPE_1 ( VAR_4 , VAR_1 , version ) , VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . Disk VAR_1 = dao . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 ) ; TYPE_2 . assertEquals ( STRING_2 , VAR_3 , VAR_1 . getId ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false , VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_3 ) ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { return VAR_1 < java.lang.String > METHOD_2 ( VAR_2 , version . getValue ( ) ) ; } 
public void METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return new TYPE_1 ( id , METHOD_2 ( ) . METHOD_1 ( id ) ) ; } 
private void METHOD_1 ( TYPE_1 model ) { METHOD_2 ( model ) ; METHOD_3 ( model ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( model . METHOD_6 ( ) ) ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_3 ( VAR_2 ) ; vm . METHOD_4 ( VAR_2 ) ; vm . METHOD_5 ( VAR_2 ) ; return vm ; } 
public java.lang.String METHOD_1 ( ) { return ( super . METHOD_1 ( ) ) + ( java.lang.String . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_3 ( ) . getValue ( ) ) ) ; } 
public static org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > VAR_1 , java.lang.String name ) { for ( org.ovirt.engine.core.common.businessentities.network.Network VAR_2 : VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_2 . getName ( ) , name ) ) { return VAR_2 ; } } return null ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_1 . getId ( ) , result . getId ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , iface . METHOD_5 ( ) , 0 , iface . METHOD_6 ( ) , METHOD_7 ( ) ) ; } 
protected org.ovirt.engine.core.common.businessentities.VDSGroup METHOD_1 ( ) { return getEntity ( VAR_1 . VDSGroup class , VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_2 ( VAR_3 ) ) , VAR_3 ) ; } 
protected boolean METHOD_1 ( ) { VAR_1 . METHOD_3 ( STRING_1 ) ; return true ; } 
public java.lang.String METHOD_1 ( TYPE_2 object ) { java.lang.String status = TYPE_3 . getInstance ( ) . METHOD_2 ( object . getStatus ( ) ) ; return status ; } 
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_3 ( VAR_2 . getModel ( ) ) ; } 
public java.lang.String getValue ( ) { return value ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 status ) { return ( ( VAR_1 . METHOD_2 ( ) ) != null ) && ( ( VAR_1 . METHOD_2 ( ) . getStatus ( ) ) == status ) ; } 
protected void METHOD_1 ( ) { boolean VAR_1 = METHOD_3 ( ) . METHOD_4 ( ) . isEmpty ( ) ; METHOD_5 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; setItems ( METHOD_6 ( ) . METHOD_7 ( ) ) ; } 
protected abstract void METHOD_1 ( ) ; 
public org.ovirt.engine.core.common.businessentities.StoragePool METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) . get ( params . getStoragePoolId ( ) ) ; } return VAR_1 ; } 
protected java.lang.String METHOD_1 ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.network.Network ) ( object ) ) . getName ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic ) { TYPE_1 VAR_2 = METHOD_2 ( nic ) ; METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 ) ; disk . METHOD_3 ( VAR_1 ) ; disk . METHOD_4 ( STRING_1 ) ; METHOD_5 ( disk , METHOD_6 ( VAR_1 ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 parameters ) throws TYPE_4 { return TYPE_5 . getInstance ( ) . METHOD_2 ( ) . METHOD_1 ( VAR_1 , parameters ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; pool . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( final TYPE_1 < ? > VAR_2 ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 params ) { return TYPE_4 . getInstance ( ) . METHOD_2 ( ) . METHOD_1 ( VAR_1 , params ) ; } 
public void METHOD_1 ( ) { cmd . getParameters ( ) . METHOD_2 ( STRING_1 ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( vds ) ; } 
protected TYPE_1 METHOD_1 ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.VM ) ( object ) ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( final org.ovirt.engine.core.compat.Guid value ) { VAR_1 = value ; } 
public void METHOD_1 ( ) { try { super . METHOD_1 ( ) ; } finally { if ( ( METHOD_3 ( ) ) != null ) { METHOD_2 ( METHOD_3 ( ) ) ; } TYPE_1 . METHOD_4 ( ) ; } } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , VAR_3 < java.lang.Boolean > getValue ( VAR_4 ) . toString ( ) ) ; return true ; } 
protected boolean METHOD_1 ( ) { return ( TYPE_1 . getVdsGroup ( ) . METHOD_2 ( ) ) && ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( long size ) { this . VAR_1 = size ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_3 ( false ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_1 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_4 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , false , null ) ; } 
public void METHOD_1 ( java.lang.String value ) { this . name = value ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; setItems ( METHOD_5 ( ) . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { TYPE_1 . METHOD_2 ( aQuery , false ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_2 ( ) , aQuery ) ; } 
protected TYPE_1 METHOD_1 ( ) { return TYPE_1 . valueOf ( ( ( java.lang.String ) ( TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 ) ) ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.common.businessentities.VM vm = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( vmId ) ; if ( vm != null ) { METHOD_3 ( vm . getStoragePoolId ( ) , vm . METHOD_4 ( ) ) ; } } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( ( VAR_2 ? VAR_3 . METHOD_6 ( ) : VAR_3 . METHOD_7 ( ) ) ) ; } 
public TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > METHOD_1 ( TYPE_2 rs , int VAR_1 ) throws TYPE_3 { return new TYPE_1 ( METHOD_2 ( rs , STRING_1 ) , rs . METHOD_3 ( STRING_2 ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return inject ( new TYPE_2 ( this ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; assertEquals ( VAR_3 , TYPE_2 . METHOD_3 ( VAR_1 , VAR_3 ) ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { return VAR_1 < java.lang.Boolean > METHOD_2 ( VAR_2 , version . getValue ( ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . get ( TYPE_1 . getParameters ( ) . getId ( ) ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( VAR_3 ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( getVm ( ) ) != null ) ) { VAR_1 = getVm ( ) . getName ( ) ; } return VAR_1 ; } 
private org.ovirt.engine.core.compat . Version METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , TYPE_1 . METHOD_3 ( 0 , VAR_2 ) ) ; VAR_2 . METHOD_4 ( 0 ) ; final TYPE_2 command = METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( command , VAR_3 ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_4 ) ) . when ( VAR_5 ) . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( cmd , VAR_6 ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { for ( TYPE_1 VAR_1 : METHOD_2 ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_3 ) ) ) { if ( VAR_1 . getId ( ) . equals ( id ) ) { return VAR_1 ; } } return null ; } 
public TYPE_1 get ( ) { return METHOD_2 ( VAR_2 , new TYPE_3 ( VAR_3 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) . toString ( ) ) ; TYPE_1 . METHOD_4 ( validator . METHOD_5 ( ) , TYPE_2 . METHOD_6 ( ) ) ; } 
protected TYPE_1 < TYPE_2 , TYPE_3 , TYPE_4 > . VAR_1 METHOD_1 ( TYPE_4 widget ) { return ( ( TYPE_1 < TYPE_2 , TYPE_3 , TYPE_4 > . VAR_1 ) ( widget . METHOD_2 ( ) ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_3 , null ) ; METHOD_3 ( VAR_3 , VAR_4 , VAR_2 ) ; METHOD_4 ( METHOD_5 ( ) ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return this : : METHOD_2 ; } 
public TYPE_1 METHOD_1 ( TYPE_1 nic ) { return METHOD_3 ( nic , new TYPE_2 ( ) , VAR_2 , new TYPE_3 ( ) ) ; } 
public java.util.List < java.lang.String > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < > ( ) ; } return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { boolean VAR_2 = ( ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.Boolean > ) ( sender ) ) . getEntity ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( VAR_2 ) != null ) ) { VAR_1 = METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( METHOD_4 ( METHOD_5 ( 1 , 1 ) ) . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > value ) { VAR_1 = value ; VAR_2 = TYPE_1 . METHOD_2 ( value ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_2 entity = VAR_2 . METHOD_2 ( VAR_3 class ) ; return TYPE_3 . METHOD_3 ( entity , VAR_4 ) ; } 
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > result ) { METHOD_1 ( result ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_5 ( 2 ) ; METHOD_6 ( false ) ; METHOD_7 ( VAR_3 ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( vmId ) ) . thenReturn ( VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { assertEquals ( VAR_3 [ VAR_1 ] , model . getName ( ) ) ; } 
private org.ovirt.engine.core.common.businessentities.StoragePool METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; return VAR_1 ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 ) { TYPE_1 parameters = new TYPE_1 ( ) ; parameters . METHOD_2 ( host . getId ( ) ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( true ) ; return parameters ; } 
private static void METHOD_1 ( final int VAR_1 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; } 
private void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_2 = new TYPE_1 < > ( ) ; METHOD_2 ( ) ; } } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_2 . METHOD_3 ( VAR_1 , VAR_3 ) ; org.mockito.Mockito . METHOD_4 ( VAR_3 ) . METHOD_5 ( VAR_4 ) ; } 
public java.lang.String getValue ( TYPE_1 < TYPE_2 , org.ovirt.engine.core.common.businessentities.VM > object ) { return object . METHOD_1 ( ) . METHOD_2 ( ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS entity ) { return hosts . METHOD_2 ( entity . getId ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat . Version value ) { this . VAR_1 = value ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( host ) , VAR_2 . VDS class , VAR_3 ) ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_1 ( false ) ; } 
protected TYPE_1 . VdcQueryReturnValue METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return TYPE_2 . METHOD_2 ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_2 ) ) ) ) . thenReturn ( VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; METHOD_6 ( resource . get ( ) , 0 ) ; } 
public java.util.List < TYPE_1 > METHOD_2 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
protected void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { METHOD_3 ( METHOD_2 ( ) ) ; } METHOD_5 ( ) ; } 
protected boolean METHOD_1 ( ) { return validate ( TYPE_1 . METHOD_1 ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . getInstance ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; java.lang.String VAR_3 = VAR_1 . METHOD_3 ( VAR_4 ) ; TYPE_2 . assertEquals ( TYPE_3 , VAR_3 ) ; } 
TYPE_1 < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM entity ) { return new TYPE_2 ( entity ) ; } 
public void METHOD_1 ( ) { TYPE_3 . METHOD_5 ( validator . METHOD_1 ( ) , TYPE_4 . METHOD_6 ( ) ) ; } 
private void METHOD_1 ( final TYPE_1 < TYPE_2 > . VAR_1 context ) { log . METHOD_2 ( STRING_1 , METHOD_3 ( ) ) ; METHOD_5 ( context . entity ) ; TYPE_1 . METHOD_4 ( ) ; METHOD_6 ( VAR_2 ) ; } 
public static long METHOD_1 ( java.lang.String VAR_1 ) { final int VAR_2 = INT_1 ; java.lang.String VAR_3 = VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; return TYPE_1 . METHOD_3 ( VAR_3 , VAR_2 ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 , false , null ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS host ) { return ( TYPE_2 . METHOD_4 ( ) . get ( host . METHOD_5 ( ) ) . METHOD_6 ( ) ) != ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_6 ( true ) ; } 
protected boolean METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 map ) { METHOD_2 ( map , VAR_2 ) ; } 
public org.ovirt.engine.core.compat . Version METHOD_1 ( TYPE_1 rs , int VAR_1 ) throws TYPE_2 { return new org.ovirt.engine.core.compat . Version ( rs.getString ( VAR_2 ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( true ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( ) ; } } 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( ) . equals ( iface . METHOD_3 ( ) ) ) { iface . METHOD_4 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { domain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; validator = new TYPE_2 ( domain ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return TYPE_1 . getParameters ( ) . getId ( ) ; } 
protected void addCanDoActionMessage ( TYPE_1 . EngineMessage VAR_1 ) { getReturnValue ( ) . METHOD_1 ( ) . add ( VAR_1 . name ( ) ) ; } 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } super . METHOD_1 ( ) ; super . METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( getEntity ( ) . getId ( ) ) ) ; } 
java.util.List < org.ovirt.engine.core.common.businessentities . Disk > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid VAR_2 , boolean VAR_3 ) ; 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ) . get ( METHOD_3 ( ) ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String host , java.lang.String VAR_1 , boolean VAR_2 ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( host , VAR_1 , VAR_2 ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ( VAR_1 ) - > ( VAR_1 . METHOD_4 ( ) ) && ( VAR_1 . METHOD_5 ( ) ) ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result ) { for ( org.ovirt.engine.core.common.businessentities.VDS vds : result ) { TYPE_1 . assertEquals ( VAR_1 , vds . getStoragePoolId ( ) ) ; } } 
public void METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , java.lang.Integer . toString ( TYPE_1 . getValue ( ) ) ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_1 ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.when ( VAR_1 . validate ( ) ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_1 . getParameters ( ) ) . thenReturn ( parameters ) ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters ) { METHOD_1 ( VAR_1 , parameters , null , null ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ( ( ( host . METHOD_5 ( ) ) == ( VAR_2 ) ) || ( host . METHOD_6 ( ) ) ) ) ; } 
public void METHOD_1 ( int VAR_1 , TYPE_1 cluster , java.lang.String value ) { VAR_2 . METHOD_2 ( true ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.List < TYPE_2 . VdcActionParametersBase > parameters , boolean VAR_2 ) { return METHOD_1 ( VAR_1 , parameters , VAR_2 , false ) ; } 
private TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( context . get ( VAR_1 ) ) ) ; } 
protected void METHOD_1 ( ) { addCanDoActionMessage ( java.lang.String . METHOD_2 ( STRING_1 , TYPE_1 . METHOD_3 ( ) ) ) ; addCanDoActionMessage ( java.lang.String . METHOD_2 ( STRING_2 , TYPE_1 . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { this . VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } 
public TYPE_1 get ( ) { TYPE_1 template = METHOD_1 ( VAR_1 , new TYPE_2 ( VAR_2 ) ) ; if ( template != null ) { TYPE_3 . METHOD_2 ( this , template ) ; } return template ; } 
public TYPE_1 METHOD_4 ( TYPE_2 VAR_1 , TYPE_3 parameters ) { return TYPE_4 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( VAR_1 , parameters ) ) ; } 
public TYPE_1 . VdcQueryReturnValue runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 ) ; 
public TYPE_1 getId ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = METHOD_2 ( METHOD_3 ( ) ) ; METHOD_7 ( model , true ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { setItems ( ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return TYPE_1 . getInstance ( ) ; } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { METHOD_2 ( this . VAR_1 ) ; METHOD_3 ( this . VAR_1 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( this , new TYPE_3 ( returnValue ) ) ; } 
protected boolean validate ( ) { METHOD_2 ( STRING_1 , TYPE_1 . getParameters ( ) . METHOD_3 ( ) . getName ( ) ) ; return true ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( VAR_2 , VAR_1 . getParameters ( ) . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; assertEquals ( VAR_3 , TYPE_2 . METHOD_4 ( VAR_1 , VAR_3 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; TYPE_1 model = resource . get ( ) ; METHOD_6 ( model , 0 ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( ) ) ) . thenReturn ( new TYPE_2 . ValidationResult ( VAR_3 ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( null ) ; setItems ( METHOD_6 ( ) . METHOD_7 ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( org.ovirt.engine.core.common.businessentities.VDSGroup ) ( returnValue ) ) ; METHOD_2 ( ) ; } 
public java.lang.Boolean getValue ( TYPE_1 model ) { return model . METHOD_1 ( ) ; } 
public org.ovirt.engine.ui.uicommonweb.models.EntityModel setIsChangable ( boolean value ) { if ( ! ( METHOD_1 ( ) ) ) super . setIsChangable ( value ) ; return this ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( ) ) . when ( VAR_1 ) . METHOD_3 ( ) ; } 
public TYPE_1 getEntity ( ) { return ( ( TYPE_1 ) ( super . getEntity ( ) ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 < ? > VAR_1 , TYPE_1 < ? > VAR_2 ) { return METHOD_3 ( VAR_1 ) ; } 
public void onSuccess ( java.lang.Object result ) { METHOD_1 ( ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( result ) ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( TYPE_2 . getVm ( ) . getId ( ) , TYPE_3 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_1 ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( getVm ( ) . METHOD_3 ( ) , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( TYPE_2 . METHOD_4 ( new org.ovirt.engine.core.common.businessentities.VM [ ] { getVm ( ) } ) ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , TYPE_3 . instance , VAR_2 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_4 ( ( ( METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ) ) ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 , ? > column , int VAR_1 ) { METHOD_2 ( column , ( VAR_1 + STRING_1 ) ) ; } 
public TYPE_1 get ( ) { return VAR_1 . METHOD_1 ( id , false ) ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storageDomain . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; return storageDomain ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( ) ; TYPE_2 . assertEquals ( 2 , VAR_1 . size ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( null , null ) ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String version , org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { TYPE_3 parameters = new TYPE_3 ( VAR_1 , version ) ; TYPE_2 . METHOD_1 ( parameters , aQuery ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_3 > VAR_1 , java.lang.Object sender , TYPE_3 args ) { VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( TYPE_4 . METHOD_4 ( args . METHOD_5 ( ) ) ) ) ; } 
public void METHOD_1 ( int value ) { this . VAR_1 . METHOD_2 ( value ) ; } 
public void METHOD_1 ( TYPE_1 < java.lang.Boolean > event ) { METHOD_4 ( ) ; } 
protected void METHOD_1 ( ) { try { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_2 ( ) ; } } catch ( TYPE_1 e ) { } finally { this . VAR_1 = null ; } } 
protected void METHOD_1 ( ) { java.lang.String version = TYPE_1 . getParameters ( ) . getName ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 < java.lang.String > getValue ( VAR_2 , version ) . METHOD_5 ( STRING_1 ) ) ) ; } 
private java.lang.String METHOD_1 ( java.lang.String url ) throws TYPE_2 { TYPE_3 VAR_2 = new TYPE_3 ( url ) ; return VAR_2 . METHOD_1 ( ) ; } 
public void onSuccess ( TYPE_2 returnValue ) { VAR_1 . METHOD_1 ( this , new TYPE_1 ( returnValue ) ) ; } 
public java.lang.String METHOD_1 ( ) { return getEntity ( ) . getName ( ) ; } 
protected void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; log . METHOD_4 ( STRING_1 , VAR_1 ) ; VAR_1 = null ; } } 
public TYPE_1 METHOD_1 ( ) { return TYPE_1 . getInstance ( ) ; } 
private TYPE_1 METHOD_1 ( ) { return item . METHOD_2 ( ) ? VAR_1 . METHOD_3 ( ) : VAR_1 . METHOD_4 ( ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( TYPE_2 . getVm ( ) . getId ( ) ) ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 = ( ( java.lang.Boolean ) ( VAR_2 . METHOD_2 ( VAR_3 ) ) ) ; if ( VAR_1 ) { VAR_4 . METHOD_3 ( VAR_5 , STRING_1 ) ; } return true ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_2 = dao . get ( VAR_3 ) ; } 
private void METHOD_1 ( ) { VAR_3 . METHOD_1 ( VAR_4 . METHOD_3 ( VAR_5 ) ) ; } 
public static void METHOD_1 ( TYPE_1 value ) { VAR_1 = value ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 status ) { VAR_3 . METHOD_1 ( VAR_1 , status ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_2 . VdcActionParametersBase parameters ) { if ( TYPE_3 . isEmpty ( parameters . METHOD_2 ( ) ) ) { return METHOD_3 ( ) ; } return METHOD_4 ( VAR_1 , parameters ) ; } 
void METHOD_1 ( TYPE_1 < TYPE_2 > entities ) ; 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public java.lang.String METHOD_1 ( ) { return ( METHOD_2 ( ) ) != null ? METHOD_2 ( ) . getName ( ) : null ; } 
private boolean METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = METHOD_2 ( ) . METHOD_3 ( ) . get ( VAR_1 . METHOD_5 ( ) ) ; return ( cluster != null ) && ( cluster . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_4 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.lang.Exception { return client . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { this . VAR_1 = VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 action , TYPE_3 VAR_1 ) { action . METHOD_2 ( TYPE_5 . value ( ) ) ; return TYPE_1 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) . entity ( action ) . METHOD_6 ( ) ; } 
protected TYPE_1 getEntity ( int VAR_1 ) { return METHOD_1 ( VAR_2 . METHOD_2 ( VAR_3 class ) , VAR_2 . METHOD_2 ( VAR_4 class ) , VAR_1 ) ; } 
private static boolean METHOD_1 ( TYPE_1 . VdcActionType VAR_1 , boolean VAR_2 ) { return ( VAR_1 . METHOD_2 ( ) ) && ( ! VAR_2 ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( STRING_1 ) ; } } 
public void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 < ? > command , TYPE_2 . EngineMessage VAR_1 ) { return TYPE_3 . METHOD_1 ( STRING_1 , command , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { java.lang.String VAR_2 = VAR_3 ; if ( VAR_2 . equals ( STRING_1 ) ) { METHOD_2 ( object ) ; } } 
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 ) { METHOD_1 ( VAR_2 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( vmId ) ; TYPE_3 . METHOD_3 ( VAR_2 . getStatus ( ) ) ; TYPE_3 . METHOD_5 ( VAR_2 , VAR_1 ) ; } 
public void onSuccess ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 . METHOD_1 ( VAR_1 , new TYPE_3 ( ) ) ; setItems ( VAR_1 ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : case VAR_4 : return VAR_5 ; default : return null ; } } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String id ) { for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface : METHOD_2 ( ) ) { if ( iface . getId ( ) . toString ( ) . equals ( id ) ) { return iface ; } } return null ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 , TYPE_1 . instance ( ) . METHOD_3 ( INT_1 ) ) ; TYPE_2 . METHOD_5 ( result . isEmpty ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) == VAR_2 ; } 
public void onSuccess ( java.lang.Object returnValue ) { METHOD_1 ( returnValue ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( ) ; if ( METHOD_4 ( ) ) { METHOD_5 ( VAR_2 ) ; } VAR_1 . getReturnValue ( ) . METHOD_6 ( true ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_3 ) ; } 
public java.lang.String getValue ( TYPE_1 < TYPE_2 , org.ovirt.engine.core.common.businessentities.VmTemplate > object ) { return object . METHOD_1 ( ) . getName ( ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 = dao . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; TYPE_1 . assertEquals ( VAR_1 . size ( ) , 2 ) ; } 
public java.util.List METHOD_1 ( ) { return null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) . addValue ( STRING_2 , VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( ) . METHOD_6 ( STRING_3 , VAR_2 ) ; } 
public org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { org.ovirt.engine.core.common.businessentities.StorageDomain result = METHOD_2 ( VAR_2 ) ; result . setId ( ( ( org.ovirt.engine.core.compat.Guid ) ( VAR_1 . METHOD_3 ( ) [ 0 ] ) ) ) ; return result ; } 
public void METHOD_1 ( ) { dao . METHOD_3 ( ) ; final java.util.List < TYPE_1 > result = dao . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( result . isEmpty ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return true ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { return METHOD_2 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vmId ) , VAR_1 , VAR_2 , VAR_3 , true , false ) ; } 
private static int METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . getInstance ( ) . get ( VAR_3 class ) ; return VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; } 
public TYPE_1 . StorageDomain get ( ) { TYPE_1 . StorageDomain storageDomain = METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ) ; return METHOD_2 ( storageDomain , TYPE_3 . METHOD_3 ( storageDomain ) ) ; } 
public void METHOD_1 ( ) { cmd . getParameters ( ) . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( true , true , TYPE_1 . METHOD_4 ( ) ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( ) { if ( ( vms ) == null ) { vms = METHOD_3 ( ) . METHOD_4 ( network . getId ( ) ) ; } return vms ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; VAR_1 . METHOD_1 ( command ) ; } 
public boolean METHOD_1 ( ) { java.lang.String VAR_1 = getModel ( ) . METHOD_2 ( ) ; return ( VAR_1 != null ) && ( ! ( STRING_1 . equals ( VAR_1 ) ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( getEntity ( ) ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( getEntity ( ) ) ; METHOD_5 ( ) ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; METHOD_4 ( ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_3 . METHOD_2 ( VAR_1 , this , TYPE_4 . METHOD_3 ( ) ) ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { return METHOD_1 ( VAR_1 , INT_1 , INT_2 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 value ) { status = value ; } 
protected void METHOD_1 ( ) { TYPE_1 < java.lang.String > VAR_1 = new TYPE_2 ( METHOD_2 ( ) ) ; VAR_1 . add ( STRING_1 ) ; METHOD_3 ( VAR_1 ) ; super . METHOD_1 ( ) ; } 
public int METHOD_1 ( ) { final int VAR_1 = INT_1 ; int result = 1 ; result = ( VAR_1 * result ) + ( METHOD_2 ( ) . METHOD_1 ( ) ) ; return result ; } 
private TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) { TYPE_4 validator = new TYPE_4 ( VAR_1 , VAR_2 ) ; return validator . METHOD_1 ( ) ; } 
public java.lang.String METHOD_1 ( ) { return STRING_1 ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network network ) { TYPE_1 result = METHOD_1 ( network ) ; result . METHOD_2 ( VAR_1 ) ; return result ; } 
public TYPE_1 METHOD_1 ( ) { java.lang.Integer VAR_1 = getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) ; return TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_1 ) ? VAR_2 : VAR_3 ; } 
void METHOD_1 ( ) { METHOD_2 ( VAR_1 class ) ; METHOD_3 ( VAR_3 class ) . METHOD_4 ( ) ; METHOD_5 ( VAR_4 class , VAR_5 class ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { boolean returnValue = false ; if ( ( VAR_2 . METHOD_2 ( vmId , java.lang.Boolean . TRUE ) ) == null ) { returnValue = true ; } return returnValue ; } 
public void METHOD_1 ( java.lang.Integer value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
protected TYPE_1 getEntity ( int VAR_1 ) { TYPE_1 entity = new TYPE_1 ( ) ; entity . setId ( VAR_2 [ VAR_1 ] . toString ( ) ) ; return entity ; } 
public void METHOD_1 ( ) { domain . METHOD_2 ( true ) ; TYPE_1 . METHOD_4 ( validator . METHOD_5 ( VAR_3 ) , TYPE_2 . METHOD_6 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vmId ) , VAR_1 , VAR_2 , new TYPE_3 ( ) , true , false , null , false ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = null ; assertEquals ( VAR_2 , TYPE_2 . METHOD_2 ( VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 < java.lang.Integer > VAR_1 ) { return VAR_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) , VAR_1 ) ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 ) ; TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . assertEquals ( result , VAR_1 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { METHOD_2 ( VAR_2 , new TYPE_1 ( VAR_1 , VAR_3 , false , null , false ) ) ; } 
protected boolean validate ( ) { return ( super . validate ( ) ) && ( validate ( METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( ) ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . get ( iface . getName ( ) ) ; TYPE_3 . METHOD_2 ( VAR_2 , new java.util.ArrayList ( VAR_1 ) , VAR_4 ) ; } 
protected TYPE_1 METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.DiskImage VAR_1 = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; VAR_1 . setId ( VAR_2 ) ; return new TYPE_1 ( vmId , VAR_2 , VAR_1 ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid vmId = METHOD_2 ( ) ; TYPE_1 < java.lang.String > VAR_1 = VAR_2 . METHOD_3 ( vmId ) ; for ( java.lang.String VAR_3 : VAR_1 ) { METHOD_4 ( VAR_3 , vmId ) ; } } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery < java.util.List < java.lang.String > > aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 , TYPE_1 VAR_3 ) { METHOD_1 ( aQuery , VAR_1 , VAR_2 , VAR_3 , new TYPE_2 ( ) ) ; } 
static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( VAR_2 [ 0 ] . toString ( ) ) ; VAR_1 . METHOD_3 ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) ) ; return VAR_1 ; } 
private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_2 ) ) ) ) . thenReturn ( VAR_3 ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( TYPE_1 result ) { TYPE_2 VAR_2 = result . getReturnValue ( ) ; METHOD_2 ( null , ( ( VAR_2 != null ) && ( VAR_2 . getSucceeded ( ) ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) . getId ( ) , true , true ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > list ) { if ( list . isEmpty ( ) ) { return ; } VAR_1 . put ( list . get ( 0 ) . METHOD_2 ( ) , list ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = null ; if ( ( TYPE_3 . equals ( VAR_1 ) ) || ( TYPE_4 . equals ( VAR_1 ) ) ) { VAR_2 = new TYPE_5 ( ) ; } return VAR_2 ; } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; } 
private void METHOD_1 ( final TYPE_1 < TYPE_2 > . VAR_1 context ) { log . error ( STRING_1 , METHOD_2 ( ) ) ; METHOD_4 ( context . entity ) ; METHOD_3 ( VAR_2 ) ; METHOD_5 ( VAR_3 ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 == null ? false : VAR_2 . get ( VAR_1 ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . add ( ) . cluster ( TYPE_1 . cluster ( ) ) . METHOD_2 ( ) ; TYPE_2 . assertEquals ( STRING_2 , METHOD_3 ( ) . get ( STRING_1 ) . METHOD_4 ( ) ) ; } 
protected java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.Object ... args ) { return TYPE_1 . METHOD_3 ( VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) , args ) ; } 
private boolean METHOD_1 ( ) { if ( ( ( VAR_1 ) == ( METHOD_2 ( ) ) ) && ( ( nic ) != null ) ) { return true ; } return false ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { if ( ( ( VAR_1 ) != null ) && ( METHOD_2 ( ) ) ) { return ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( VAR_1 ) ) . METHOD_1 ( ) ; } return null ; } 
public TYPE_1 METHOD_1 ( ) { return inject ( new TYPE_2 ( true , VAR_1 , VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < java.lang.String > VAR_1 = ( ( java.util.ArrayList < java.lang.String > ) ( returnValue ) ) ; METHOD_1 ( VAR_1 ) ; } 
public org.ovirt.engine.ui.uicommonweb.UICommand METHOD_1 ( TYPE_1 target ) { this . target = target ; return this ; } 
private void METHOD_1 ( ) { vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . setId ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.VmTemplate VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_2 , template ) ; METHOD_1 ( VAR_3 ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( this , getValue ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( VAR_1 ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { return object . getStatus ( ) . toString ( ) ; } 
protected boolean METHOD_1 ( TYPE_1 value ) { return ( ( value . METHOD_2 ( ) ) != null ) && ( ( value . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { resource . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( false ) ; VAR_1 . METHOD_5 ( ) ; resource . get ( ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_4 ( VAR_1 , VAR_2 ) ; } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.VM result ) { TYPE_1 VAR_1 = new TYPE_2 ( result , this ) ; METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . getParameters ( ) . getName ( ) ) ) != null ) ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { java.util.List < TYPE_1 > VAR_1 = returnValue . getReturnValue ( ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; } 
public org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < TYPE_1 . DiskImage > VAR_2 ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; return METHOD_1 ( VAR_3 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 value ) { VAR_1 = value ; } 
public void setEntity ( java.lang.Boolean VAR_1 ) { super . setEntity ( VAR_1 ) ; METHOD_1 ( ) . setIsChangable ( VAR_1 ) ; } 
public void METHOD_1 ( ) { VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return inject ( new TYPE_3 ( id , VAR_1 , VAR_2 , VAR_3 ) ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( final org.ovirt.engine.core.common.businessentities.VM vm , final org.ovirt.engine.core.common.businessentities.VDS ... hosts ) { return VAR_1 . METHOD_1 ( new org.ovirt.engine.core.common.businessentities.VDSGroup ( ) , TYPE_1 . METHOD_2 ( hosts ) , vm , null , org.mockito.Mockito . METHOD_3 ( VAR_2 class ) ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.network.Network object ) { return object . METHOD_1 ( ) ; } 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; return VAR_1 ; } 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( ) { if ( ( storageDomain ) == null ) { storageDomain = METHOD_1 ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } return storageDomain ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( ) . add ( new TYPE_3 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ) ; return this ; } 
public TYPE_1 METHOD_1 ( java.lang.String name ) { TYPE_2 VAR_1 = new TYPE_3 ( name ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_4 . instance , VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public boolean METHOD_1 ( ) { return super . METHOD_1 ( ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( getSelectedItem ( ) ) , STRING_1 , STRING_2 , false , org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_3 ( ) , VAR_1 ) ; } 
java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network , TYPE_1 VAR_1 , TYPE_2 nic , org.ovirt.engine.core.common.businessentities.VDS host ) ; 
private static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } 
TYPE_1 type ( ) ; 
protected void METHOD_1 ( ) { METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; TYPE_2 . METHOD_5 ( VAR_1 ) ; getReturnValue ( ) . METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( true ) ; } 
public void onSuccess ( TYPE_1 . VdcQueryReturnValue returnValue ) { VAR_1 = returnValue . getReturnValue ( ) ; METHOD_1 ( ) ; } 
public void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; } 
protected boolean METHOD_1 ( TYPE_1 storageDomain , org.ovirt.engine.core.compat.Guid VAR_1 , int type ) { return METHOD_1 ( storageDomain , VAR_1 , type , null , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( vm . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( vm ) ; VAR_1 . METHOD_5 ( ) ; return null ; } 
protected boolean METHOD_1 ( TYPE_1 entity , java.lang.String name ) { return false ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) ; 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; return VAR_2 ; } 
protected static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { return ( ! ( TYPE_1 . METHOD_2 ( vmId , new java.util.ArrayList < java.lang.String > ( ) ) ) ) && ( TYPE_1 . METHOD_3 ( vmId ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_2 . DiskImage VAR_1 = METHOD_2 ( ) ; return new TYPE_1 ( vmId , VAR_1 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { getModel ( ) . METHOD_1 ( ) . setEntity ( ( ( java.lang.Boolean ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.VM result ) { TYPE_1 VAR_1 = new TYPE_2 ( result , this ) ; METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_2 . map ( VAR_1 , null ) . name ( ) . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_3 ( VAR_1 , new TYPE_2 ( VAR_3 , VAR_4 . IdQueryParameters class ) , VAR_5 , new TYPE_3 ( ) ) ; } 
public static boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( VAR_1 . length ( ) ) <= ( VAR_2 < java.lang.Integer > getValue ( VAR_3 ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { VAR_2 . METHOD_2 ( model . METHOD_3 ( ) . METHOD_4 ( ) . getEntity ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 result ) { METHOD_4 ( ) ; } 
public void onSuccess ( java.util.List < TYPE_2 > VAR_1 ) { VAR_2 = TYPE_3 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; } 
protected < TYPE_1 > boolean METHOD_1 ( TYPE_2 entity , TYPE_1 id ) { return true ; } 
public void METHOD_2 ( ) { target . METHOD_2 ( context ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return ( VAR_1 ) != null ? VAR_1 : VAR_2 ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String VAR_1 ) { return METHOD_2 ( iface . getId ( ) , iface . getName ( ) , false , VAR_1 , null , null , true ) ; } 
public void METHOD_1 ( double size ) { VAR_1 = size ; } 
public boolean METHOD_1 ( ) { return ( ( java.lang.Boolean ) ( METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ) ) ; } 
public void METHOD_1 ( TYPE_1 model ) { VAR_1 . METHOD_1 ( model ) ; VAR_2 . METHOD_1 ( model ) ; this . model = model ; } 
public void METHOD_1 ( ) { TYPE_1 model = ( ( TYPE_1 ) ( TYPE_2 . getWindow ( ) ) ) ; if ( ! ( model . validate ( ) ) ) { return ; } model . METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network result = dao . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( STRING_1 , result . METHOD_4 ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 . getId ( ) ) ; TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return new TYPE_1 ( id , METHOD_2 ( ) . METHOD_1 ( id ) ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( this ) ; VAR_3 . instance = this ; } 
protected java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS object ) { int VAR_1 = ( ( object . METHOD_2 ( ) ) != null ) ? object . METHOD_2 ( ) : 0 ; return org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = METHOD_2 ( ) ; for ( org.ovirt.engine.core.common.businessentities.VM vm : vms ) { vm . METHOD_3 ( VAR_1 . getId ( ) ) ; } } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { TYPE_2 VAR_1 = METHOD_2 ( ) . addValue ( STRING_1 , id ) ; METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_1 ) ; } 
private static void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( VAR_1 . equals ( STRING_1 ) ) ) { VAR_3 . METHOD_3 ( VAR_4 . Frontend class , VAR_5 ) ; } } 
void METHOD_1 ( ) ; 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { METHOD_2 ( ( STRING_1 + ( vm . getName ( ) ) ) ) ; } 
protected void METHOD_1 ( ) { status = METHOD_5 ( ) . METHOD_6 ( METHOD_7 ( ) ) ; METHOD_8 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return this . VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { storageDomain . METHOD_2 ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_2 . METHOD_4 ( storageDomain ) , ( VAR_1 == ( VAR_4 ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 cluster = METHOD_2 ( false ) ; TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_2 = new TYPE_3 < > ( ) ; TYPE_4 . METHOD_3 ( STRING_1 , VAR_3 . METHOD_4 ( cluster , VAR_2 ) . isEmpty ( ) ) ; } 
public boolean METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( METHOD_2 ( ) . getSelectedItem ( ) , METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) , true ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_3 ( false ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . getName ( ) ; } return VAR_1 ; } 
private boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ) . METHOD_6 ( METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { java.lang.String result = dao . get ( VAR_1 , VAR_2 ) ; TYPE_1 . assertEquals ( VAR_3 , result ) ; } 
private static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return ( vds . METHOD_2 ( ) ) != null ; } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { return getSucceeded ( ) ? VAR_1 : VAR_2 ; } 
public java.lang.String getName ( ) { return this . VAR_1 . getName ( ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , java.lang.String VAR_3 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , ( ( VAR_1 + STRING_1 ) + VAR_2 ) , false , null , VAR_2 , VAR_3 , true ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 . Matchers < org.ovirt.engine.core.compat.Guid > any ( VAR_3 . Guid class ) ) ) . thenReturn ( METHOD_2 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { VAR_2 . METHOD_2 ( object . METHOD_3 ( ) . getEntity ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_2 ( VAR_1 ) ; super . METHOD_1 ( ) ; } 
protected void METHOD_1 ( ) { resource . METHOD_2 ( VAR_1 ) ; resource . METHOD_3 ( VAR_2 ) ; resource . METHOD_5 ( VAR_4 ) ; resource . METHOD_6 ( VAR_5 ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; } return VAR_1 ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 . instance ) ; } 
private java.util.List < TYPE_1 < ? > > METHOD_1 ( ) { return METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_4 ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( METHOD_2 ( ) ) != null ) { METHOD_2 ( ) . setEntity ( getSelectedItem ( ) ) ; } } 
protected abstract void METHOD_1 ( TYPE_1 VAR_1 ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 < java.util.List < java.lang.String > > getValue ( METHOD_3 ( VAR_1 ) ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String value ) { return value != null ? TYPE_1 . valueOf ( value . METHOD_2 ( ) ) : null ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_4 ( ) . METHOD_3 ( TYPE_1 . METHOD_5 ( ) , VAR_3 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_3 . assertEquals ( STRING_3 , STRING_4 , VAR_1 ) ; } 
public void onSuccess ( TYPE_1 returnValue ) { VAR_1 . METHOD_1 ( ) . METHOD_2 ( returnValue ) ; } 
protected TYPE_1 . Disk getEntity ( int VAR_1 ) { return METHOD_1 ( VAR_2 . METHOD_2 ( VAR_3 . DiskImage class ) , VAR_1 ) ; } 
public TYPE_1 get ( ) { try { return get ( VAR_1 < java.lang.Integer > getValue ( VAR_2 ) , VAR_3 ) ; } catch ( TYPE_2 e ) { return TYPE_3 . METHOD_2 ( ) ; } } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; } 
public java.lang.String METHOD_1 ( ) { return java.lang.String.valueOf ( TYPE_1 . getParameters ( ) . METHOD_1 ( ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_1 ( ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 value ) { return TYPE_2 . getInstance ( ) . METHOD_2 ( value . METHOD_3 ( ) ) ; } 
public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) { return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_2 ) ) ; } else { return METHOD_2 ( METHOD_3 ( VAR_2 , METHOD_4 ( ) ) ) ; } } 
public boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( VAR_2 , VAR_1 ) ; } 
private void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 , TYPE_2 status ) { METHOD_2 ( VAR_1 , VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( TYPE_3 . any ( ) ) ) . thenReturn ( METHOD_4 ( status ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( true ) ; METHOD_7 ( ) ; } 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( 2 ) ; return VAR_1 ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { METHOD_2 ( ) . setEntity ( returnValue ) ; METHOD_3 ( ) ; } 
public int METHOD_1 ( ) { return ( ( java.lang.Integer ) ( METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ) ) ; } 
public org.ovirt.engine.core.compat.Guid getId ( ) { return VAR_1 ; } 
protected TYPE_1 . VM METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 . VM vm = getEntity ( VAR_2 . VM class , VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_2 ( VAR_1 . getId ( ) ) ) , null ) ; return vm ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; command . getParameters ( ) . METHOD_4 ( VAR_3 ) ; TYPE_4 . METHOD_6 ( command . validate ( ) ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM entity ) { return entity . getStoragePoolId ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ( ( TYPE_1 . METHOD_3 ( ) ) + STRING_1 ) , VAR_1 ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_1 ( METHOD_2 ( ) . getId ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( METHOD_5 ( ) . getId ( ) , false ) . get ( 0 ) . getId ( ) , VAR_1 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( ( VAR_1 . getSelectedItem ( ) ) == ( VAR_2 ) ) && ( ( VAR_3 . getEntity ( ) ) == null ) ) { METHOD_3 ( constants . METHOD_4 ( ) ) ; } } 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 instance ) throws TYPE_3 { } 
private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; new TYPE_3 . AuditLogDirector ( ) . log ( VAR_2 , VAR_3 ) ; } } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_2 . getInstance ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 object ) { VAR_1 . METHOD_1 ( object ) ; } 
protected void METHOD_1 ( TYPE_1 status ) { addCanDoActionMessage ( TYPE_2 ) ; addCanDoActionMessage ( java.lang.String . METHOD_2 ( STRING_1 , status ) ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 . instance , VAR_2 ) ; } 
private org.ovirt.engine.core.common.businessentities.VDSGroup METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return getEntity ( VAR_1 . VDSGroup class , VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , STRING_1 ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface ) { return TYPE_1 . equals ( iface . METHOD_2 ( ) ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 vm ) { TYPE_2 util = TYPE_2 . getInstance ( ) ; java.util.Map < java.lang.String , java.lang.String > VAR_1 = util . METHOD_2 ( vm . METHOD_3 ( ) ) ; return VAR_1 . get ( STRING_1 ) ; } 
private void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( new java.util.ArrayList < > ( ) ) ) ) ; } 
private void METHOD_1 ( TYPE_2 VAR_1 ) { if ( TYPE_3 . getParameters ( ) . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ) { VAR_2 . METHOD_4 ( VAR_1 , VAR_3 ) ; } } 
public static org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 , java.lang.String name ) { for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i : VAR_1 ) { if ( TYPE_2 . METHOD_2 ( i . METHOD_3 ( ) , name ) ) { return i ; } } return null ; } 
public TYPE_1 . ValidationResult validate ( java.lang.Object value ) { TYPE_1 . ValidationResult result = new TYPE_1 . ValidationResult ( ) ; result . METHOD_2 ( ( ! ( VAR_1 . METHOD_3 ( value ) ) ) ) ; return result ; } 
protected abstract void METHOD_1 ( ) ; 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate template ) { METHOD_2 ( ( STRING_1 + ( template . getName ( ) ) ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( false ) . when ( cmd ) . METHOD_2 ( ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { this . setItems ( ( ( java.util.List < TYPE_1 < org.ovirt.engine.core.common.businessentities.VDSGroup , TYPE_2 > > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; } 
public TYPE_1 get ( org.ovirt.engine.core.compat.Guid id ) { return METHOD_1 ( ) . METHOD_2 ( STRING_1 , TYPE_2 . instance , METHOD_3 ( ) . addValue ( STRING_2 , id ) ) ; } 
private TYPE_1 . ValidationResult METHOD_1 ( ) { if ( ( host ) == null ) { return new TYPE_1 . ValidationResult ( VAR_1 ) ; } return VAR_2 ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters ) { METHOD_1 ( VAR_1 , parameters , null , null ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( int id ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_2 . instance , METHOD_4 ( ) . addValue ( STRING_2 , id ) ) ; } 
public void METHOD_1 ( ) { map . put ( diskImage , VAR_1 ) ; TYPE_1 . assertEquals ( VAR_4 , VAR_2 . METHOD_2 ( map , VAR_3 ) ) ; } 
public TYPE_1 . Network METHOD_1 ( TYPE_1 . Network VAR_1 ) { return METHOD_3 ( VAR_1 , METHOD_4 ( ) . METHOD_5 ( ) , VAR_3 , new TYPE_2 ( ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { cmd . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( STRING_1 , cmd . getReturnValue ( ) . getSucceeded ( ) ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return ( METHOD_2 ( ) ) != null ? METHOD_2 ( ) : VAR_1 ; } 
protected boolean METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_3 = VAR_2 . METHOD_3 ( VAR_1 , true ) ; return ( VAR_3 == null ) || ( VAR_3 . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; TYPE_2 . METHOD_6 ( command . validate ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool item , java.lang.Object value ) { VAR_1 . put ( item , ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( value ) ) ) ; return false ; } 
public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) , value ) ) ) { METHOD_3 ( ) . METHOD_1 ( value ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 from ) { TYPE_1 to = new TYPE_1 ( ) ; if ( from . METHOD_2 ( ) ) { to . setId ( from . getId ( ) . value ( ) ) ; } return to ; } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { TYPE_1 VAR_1 = new TYPE_1 ( vds ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_3 ) ) . thenReturn ( VAR_4 ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList ( VAR_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( this . METHOD_3 ( ) . getName ( ) ) + STRING_1 ) ) ; METHOD_6 ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . Disk > result = dao . METHOD_2 ( VAR_1 , null , null , false ) ; TYPE_1 . METHOD_3 ( result . isEmpty ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_1 ( ) ; } 
protected TYPE_1 . Disk METHOD_1 ( ) { if ( ( disk ) == null ) { disk = TYPE_2 . METHOD_2 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; } return disk ; } 
private TYPE_1 METHOD_1 ( ) { final TYPE_2 VAR_1 = METHOD_2 ( ) ; return new TYPE_1 ( VAR_2 , VAR_3 , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( vm , vm . METHOD_3 ( ) ) ; TYPE_2 . METHOD_5 ( vm ) ; VAR_1 . METHOD_6 ( ) ; return null ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) != null ; } 
public void METHOD_1 ( int value ) { VAR_1 = value ; METHOD_3 ( ( ( VAR_1 ) > 0 ) ) ; } 
public TYPE_1 METHOD_2 ( TYPE_2 . VdcActionType VAR_1 , TYPE_2 . VdcActionParametersBase parameters ) { return METHOD_2 ( VAR_1 , parameters , null ) ; } 
protected java.lang.String METHOD_1 ( TYPE_1 VAR_2 ) { return VAR_2 . METHOD_2 ( ) ; } 
private boolean validate ( ) { return true ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.String > VAR_2 = VAR_1 . validate ( ) ; TYPE_3 . METHOD_2 ( ( STRING_1 + VAR_2 ) , VAR_2 . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . METHOD_2 ( VAR_1 . getStoragePoolId ( ) , VAR_1 . getStatus ( ) ) ; METHOD_4 ( result ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( STRING_1 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; } 
public java.lang.String getValue ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = java.lang.String . METHOD_1 ( STRING_1 , METHOD_2 ( VAR_1 ) ) ; if ( VAR_2 . isEmpty ( ) ) { return VAR_3 . METHOD_3 ( ) ; } return VAR_2 ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) . setIsChangable ( ( ( METHOD_3 ( ) . getEntity ( ) ) && ( ! ( METHOD_4 ( ) . getEntity ( ) ) ) ) ) ; } 
public void log ( TYPE_1 VAR_1 , TYPE_2 . AuditLogType VAR_2 ) { log ( VAR_1 , VAR_2 , STRING_1 ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } 
protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . toString ( ) , VAR_3 ) ; TYPE_1 . METHOD_4 ( ) ; METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_4 ) . getStatus ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 , true , null ) ; } 
private void METHOD_1 ( TYPE_1 status ) { org.ovirt.engine.core.common.businessentities.StorageDomain domain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; domain . METHOD_2 ( status ) ; org.mockito.Mockito.when ( cmd . METHOD_3 ( ) ) . thenReturn ( domain ) ; } 
public void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( 1 ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_1 ) ; } } 
public static java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool pool ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( pool . getId ( ) , VAR_1 ) ; } 
public short METHOD_1 ( short VAR_1 ) { return ( ( short ) ( METHOD_2 ( VAR_1 ) ) ) ; } 
protected void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { java.util.Map [ ] vms = METHOD_2 ( VAR_1 ) ; if ( vms != null ) { for ( java.util.Map vm : vms ) { METHOD_3 ( vm ) ; } } } 
public void METHOD_1 ( TYPE_1 < java.lang.String > event ) { METHOD_2 ( event . getValue ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_1 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 cluster = ( ( TYPE_1 ) ( returnValue ) ) ; if ( cluster != null ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , cluster . METHOD_2 ( ) ) ; } } 
protected void METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( TYPE_3 . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; } 
private java.lang.String METHOD_1 ( ) throws TYPE_1 { return TYPE_2 . METHOD_2 ( ( ( METHOD_3 ( ) ) + ( getName ( ) ) ) ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { java.util.List < TYPE_1 > VAR_1 = returnValue . getReturnValue ( ) ; this . METHOD_1 ( VAR_2 , VAR_1 ) ; } 
private static java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getInstance ( ) . METHOD_2 ( ) ; return ( VAR_1 + STRING_1 ) + STRING_2 ; } 
public static void main ( java.lang.String [ ] args ) throws TYPE_1 , TYPE_2 { TYPE_3 VAR_1 = new TYPE_3 ( args [ 0 ] , args [ 1 ] ) ; VAR_1 . METHOD_1 ( ) ; } 
public void onSuccess ( java.util.List < TYPE_2 > VAR_1 ) { VAR_2 . put ( VAR_3 , VAR_1 ) ; METHOD_1 ( network , VAR_1 , VAR_4 ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String VAR_1 ) { return METHOD_2 ( iface . getId ( ) , iface . getName ( ) , false , VAR_1 , null , null , true , null , null ) ; } 
protected void METHOD_1 ( ) { if ( ( getVdsGroup ( ) . METHOD_2 ( ) ) <= 0 ) { getVdsGroup ( ) . METHOD_3 ( VAR_1 < java.lang.Integer > getValue ( VAR_2 ) ) ; } } 
public void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > map = TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 . assertEquals ( 0 , map . size ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 VAR_2 = resource . get ( ) ; METHOD_6 ( VAR_2 , 0 ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { METHOD_2 ( METHOD_3 ( vmId ) , 1 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } 
protected void METHOD_1 ( ) { status = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; TYPE_1 . METHOD_5 ( ) ; } 
public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 , final TYPE_2 VAR_2 ) { return METHOD_1 ( VAR_1 , VAR_2 , new TYPE_4 < > ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.String value ) { VAR_1 . METHOD_1 ( value ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( 1 ) ; METHOD_7 ( resource . get ( ) , 0 ) ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities . Disk > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 . instance ) ; } 
protected TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( object ) ; return VAR_1 . get ( object . getId ( ) ) ; } 
public java.lang.Boolean getValue ( TYPE_1 model ) { return model . METHOD_1 ( ) . getEntity ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_1 , result ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool source ) { return ( source . getStatus ( ) ) != ( status ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_3 , METHOD_4 ( VAR_1 ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { } 
public TYPE_1 . VdcQueryReturnValue runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 parameters ) { return METHOD_1 ( VAR_1 , parameters , true ) ; } 
protected java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate entity ) { return entity . METHOD_2 ( ) ; } 
protected java.lang.String METHOD_1 ( java.lang.Integer value ) { return ( ( TYPE_1 . getInstance ( ) . METHOD_2 ( ) . get ( value ) ) + ( VAR_1 ) ) + ( VAR_2 ) ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_2 params ) { TYPE_1 < TYPE_2 > command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( params ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_3 ( ) ; return command ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { TYPE_2 VAR_1 = new TYPE_2 ( storageDomain . getId ( ) , TYPE_3 . getParameters ( ) . getStoragePoolId ( ) ) ; return METHOD_3 ( ) . get ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; assertEquals ( VAR_4 , TYPE_2 . METHOD_4 ( VAR_1 , VAR_3 ) ) ; } 
public void METHOD_1 ( TYPE_1 result ) { METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
protected boolean validate ( ) { return validate ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . getId ( ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; command . METHOD_7 ( ) ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.VM VAR_2 = VAR_1 . getVm ( ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; } 
public static TYPE_1 < java.lang.String , java.lang.String > METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) { return new TYPE_1 ( VAR_1 . name ( ) , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; try { new TYPE_1 ( STRING_1 , null , null , null ) ; METHOD_3 ( STRING_2 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_4 ( VAR_2 ) ; } } 
public void METHOD_2 ( final org.ovirt.engine.core.compat.Guid VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
protected org.ovirt.engine.core.common.businessentities.VM getEntity ( int VAR_1 , TYPE_1 status ) { return TYPE_2 . METHOD_1 ( status ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( false ) ; METHOD_5 ( ) ; METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( cmd . METHOD_7 ( false , false ) ) ; } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.StorageDomain returnValue ) { TYPE_2 VAR_2 = item ; METHOD_1 ( VAR_2 , ( returnValue == null ) ) ; } 
public void METHOD_1 ( TYPE_1 context , boolean VAR_1 ) { METHOD_2 ( context , VAR_1 ) ; METHOD_3 ( context , VAR_1 ) ; } 
public void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( command ) ; TYPE_3 . METHOD_4 ( command , VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( VAR_2 . getId ( ) ) ; VAR_1 . setId ( STRING_1 ) ; dao . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_2 , VAR_1 ) , VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( VAR_1 . METHOD_3 ( status ) , VAR_2 ) ; } 
public org.ovirt.engine.core.compat.Guid getId ( ) { return id ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; return TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
void error ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) ; 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( false , true ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_5 ( INT_1 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 , TYPE_3 { METHOD_2 ( TYPE_4 . METHOD_3 ( INT_1 ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 . valueOf ( VAR_1 . name ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , TYPE_2 . getVm ( ) ) ; } 
public java.lang.Integer METHOD_1 ( ) { return VAR_1 ; } 
private TYPE_1 METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_1 ) { return METHOD_1 ( VAR_1 , new TYPE_2 ( host . getId ( ) ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster ) { addCanDoActionMessage ( java.lang.String . METHOD_2 ( STRING_1 , cluster . getName ( ) ) ) ; addCanDoActionMessage ( VAR_1 ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = new TYPE_1 ( TYPE_2 . METHOD_3 ( ) ) ; return ( validate ( validator . METHOD_4 ( ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ; } 
public org.ovirt.engine.core.compat.Guid getStoragePoolId ( ) { return VAR_1 ; } 
public int METHOD_1 ( ) { try ( TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) ) ) { int VAR_3 = VAR_4 . METHOD_1 ( ) ; VAR_5 . METHOD_4 ( STRING_1 , VAR_3 ) ; return VAR_3 ; } } 
public void METHOD_1 ( ) { this . client . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { ( VAR_1 ) ++ ; if ( ( METHOD_2 ( ) ) == null ) { METHOD_3 ( null ) ; } } 
protected abstract java.lang.String METHOD_1 ( ) ; 
public void METHOD_1 ( ) { TYPE_1 parameters = METHOD_2 ( ) ; command = org.mockito.Mockito . METHOD_3 ( new TYPE_2 ( parameters , null ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 ) { METHOD_6 ( ) . METHOD_7 ( null ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return METHOD_2 ( ) . getId ( ) ; } 
protected boolean validate ( ) { if ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . getName ( ) ) ) != null ) { METHOD_5 ( VAR_1 , VAR_2 ) ; return false ; } return true ; } 
public void setSelectedItem ( java.lang.Object value ) { super . setSelectedItem ( value ) ; METHOD_1 ( ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { return TYPE_2 . getInstance ( ) . get ( object . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , TYPE_2 . METHOD_3 ( INT_1 ) ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; } 
protected boolean METHOD_1 ( ) { return ( ( ( TYPE_1 . getVdsGroup ( ) ) != null ) && ( TYPE_1 . getVdsGroup ( ) . METHOD_2 ( ) ) ) && ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_4 , STRING_5 , result ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( 2 , 0 , 0 , INT_1 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( nic ) ) ; } 
public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; if ( TYPE_1 . METHOD_5 ( VAR_3 ) ) { METHOD_6 ( ) . METHOD_7 ( VAR_1 . getId ( ) ) ; } return null ; } 
public void METHOD_1 ( TYPE_1 tab ) { super . METHOD_1 ( tab ) ; if ( ( ( VAR_1 ) != null ) && ( tab instanceof TYPE_2 ) ) { VAR_1 . METHOD_1 ( ( ( TYPE_2 ) ( tab ) ) ) ; } } 
protected TYPE_1 . ValidationResult METHOD_1 ( java.util.List < ? extends TYPE_2 > entities , TYPE_3 . EngineMessage VAR_1 , TYPE_3 . EngineMessage VAR_2 ) { return new TYPE_4 ( ) . METHOD_2 ( METHOD_3 ( entities ) , VAR_2 , VAR_1 ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_2 ( true ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid id , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 , boolean VAR_3 ) { int VAR_4 = VAR_5 < java.lang.Integer > getValue ( VAR_6 ) ; return METHOD_1 ( id , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; assertEquals ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 ) , VAR_3 ) ; } 
public static TYPE_1 map ( TYPE_2 model , TYPE_1 VAR_1 ) { switch ( model ) { case VAR_2 : return VAR_3 ; default : return null ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( null ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , org.ovirt.engine.core.compat . Version VAR_3 ) { final TYPE_1 VAR_4 = VAR_5 . get ( VAR_3 ) ; if ( VAR_4 != null ) { return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; } return false ; } 
public static TYPE_1 < TYPE_2 . ValidationResult > METHOD_1 ( TYPE_3 . EngineMessage VAR_1 , TYPE_4 < java.lang.String > VAR_2 ) { return new TYPE_5 ( VAR_1 , VAR_2 . METHOD_2 ( new java.lang.String [ VAR_2 . size ( ) ] ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return METHOD_1 ( network , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; } 
protected void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { for ( TYPE_1 iface : METHOD_2 ( ) ) { METHOD_3 ( ) . METHOD_4 ( iface . METHOD_5 ( ) ) ; } } } 
public TYPE_1 METHOD_1 ( boolean value ) { return METHOD_1 ( value , null ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return METHOD_3 ( id . toString ( ) ) ; } 
protected TYPE_1 METHOD_3 ( ) { return METHOD_2 ( ) . METHOD_3 ( ) ; } 
public void onSuccess ( TYPE_1 < java.lang.String > returnValue ) { VAR_1 = returnValue ; METHOD_1 ( ) ; METHOD_2 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_3 , new TYPE_2 ( VAR_1 , VAR_2 , false ) , null , this ) ; } 
public static boolean METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 ) { return VAR_1 == null ? false : VAR_1 . METHOD_2 ( VAR_2 ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String name ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_2 . instance , METHOD_4 ( ) . addValue ( STRING_2 , name ) ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 , org.ovirt.engine.core.common.businessentities.VDS VAR_2 ) { return java.lang.Integer . METHOD_1 ( METHOD_2 ( VAR_1 ) , METHOD_2 ( VAR_2 ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName ( ) . equals ( VAR_1 ) ; } 
protected boolean METHOD_1 ( TYPE_1 size ) { return size == null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) ; 
protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) && ( ! ( VAR_1 . METHOD_3 ( ) ) ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { value = ( value == null ) ? 0 : value ; if ( ! ( VAR_1 . equals ( value ) ) ) { VAR_1 = value ; } } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_5 ( ) ; METHOD_4 ( ) ; METHOD_6 ( ) . METHOD_7 ( ) ; return null ; } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { METHOD_1 ( ( ( java.lang.Integer ) ( VAR_2 ) ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { this . METHOD_2 ( ) . setId ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( boolean value ) { this . VAR_1 . METHOD_1 ( value ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( false ) ; METHOD_4 ( ) . METHOD_3 ( false ) ; METHOD_5 ( ) . METHOD_3 ( false ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = VAR_1 . METHOD_2 ( INT_1 ) ; TYPE_2 . assertEquals ( STRING_1 , result . get ( STRING_2 ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 , 1 ) , 2 , 0 , false ) ) ; METHOD_5 ( cmd ) ; TYPE_1 . METHOD_6 ( cmd . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final java.lang.String VAR_2 = null ; VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_1 . METHOD_3 ( ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 type ) { if ( ( type != null ) && ( type . METHOD_2 ( ) ) ) { return VAR_1 ; } return VAR_2 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 { VAR_3 . METHOD_2 ( VAR_1 . get ( VAR_4 , VAR_5 . String class ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; METHOD_4 ( VAR_2 ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 template ) { if ( template == null ) { return ; } model . METHOD_2 ( ) ; METHOD_3 ( template ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 , TYPE_3 { try ( TYPE_4 VAR_3 = new TYPE_4 ( VAR_1 ) ) { VAR_3 . METHOD_2 ( VAR_2 . toString ( ) . METHOD_3 ( ) ) ; } } 
public void add ( ) { METHOD_2 ( METHOD_3 ( ) , true , org.mockito.Mockito . METHOD_4 ( 1 ) ) ; } 
public java.lang.Boolean METHOD_1 ( java.lang.Object source ) { return ( source != null ) && ( ! ( ( java.lang.Boolean ) ( source ) ) ) ; } 
public java.lang.String METHOD_1 ( final java.lang.String name ) { if ( VAR_1 . METHOD_2 ( name ) ) { return VAR_1 . get ( name ) ; } return STRING_1 ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_3 ) ; TYPE_1 . assertEquals ( STRING_5 , result ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return ( source != null ) && ( ! ( ( java.lang.Boolean ) ( source ) ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain domain = METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( domain , cmd . METHOD_3 ( ) ) ; } 
protected TYPE_1 < TYPE_2 > getParameters ( ) { TYPE_1 < TYPE_2 > VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( METHOD_2 ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.compat.Guid VAR_1 = null ; VAR_2 = new TYPE_1 ( VAR_1 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = VAR_2 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_4 , VAR_3 ) ; } 
public void METHOD_1 ( ) { VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network VAR_1 , org.ovirt.engine.core.common.businessentities . Network VAR_2 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; } 
private boolean METHOD_1 ( ) { return ! ( getReturnValue ( ) . METHOD_2 ( ) . isEmpty ( ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . getParameters ( ) . METHOD_6 ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return ( VAR_1 != null ) && ( VAR_1 . METHOD_2 ( ) ) ? VAR_2 : VAR_3 ; } 
public void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 ) { for ( org.ovirt.engine.core.compat.Guid VAR_2 : new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( METHOD_2 ( VAR_1 ) ) ) { METHOD_1 ( VAR_2 ) ; } METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.String ) ( returnValue ) ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model ) { model . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_2 class ) . value ( ) ) ; return model ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; METHOD_4 ( METHOD_5 ( ) ) ; METHOD_7 ( resource . get ( ) , 1 ) ; } 
private long METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . valueOf ( VAR_1 ) ; return VAR_3 < java.lang.Integer > getValue ( VAR_2 ) . METHOD_3 ( ) ; } 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { assertEquals ( VAR_3 [ VAR_1 ] , model . METHOD_4 ( ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_2 . DiskImage object ) { return VAR_1 . METHOD_3 ( ) ; } 
public java.lang.String METHOD_1 ( ) { try ( TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) ) ) { return METHOD_4 ( 1 ) . get ( 0 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( null ) ; TYPE_1 VAR_1 = METHOD_3 ( null ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; } 
public void vmId ( ) { VAR_1 . METHOD_1 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid i = VAR_1 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_2 , i ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > result ) { TYPE_1 . METHOD_2 ( result ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 : result ) { TYPE_2 . assertEquals ( VAR_2 , VAR_1 . METHOD_3 ( ) ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( cmd . validate ( ) ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = getModel ( ) . METHOD_3 ( ) ; return METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( STRING_2 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_3 , VAR_1 . METHOD_6 ( VAR_2 , false ) ) ; } 
public void setEntity ( org.ovirt.engine.core.common.businessentities.VM value ) { METHOD_1 ( value ) ; METHOD_2 ( value ) ; super . setEntity ( value ) ; METHOD_4 ( ) ; } 
protected TYPE_1 [ ] METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { return ( ( TYPE_1 [ ] ) ( new TYPE_2 < TYPE_3 > ( new TYPE_3 ( VAR_2 . getId ( ) , VAR_1 ) ) . METHOD_2 ( ) ) ) ; } 
private TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_2 ( java.lang.String.valueOf ( VAR_1 . getId ( ) ) , VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_2 , VAR_3 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; METHOD_1 ( hosts ) ; } 
public void METHOD_2 ( TYPE_1 widget ) { VAR_1 . METHOD_2 ( widget ) ; } 
private void METHOD_1 ( ) { VAR_1 = VAR_2 < TYPE_1 > getValue ( VAR_3 ) ; } 
public static void METHOD_2 ( TYPE_1 response ) { java.lang.Object entity = response . getEntity ( ) ; if ( entity instanceof TYPE_2 ) { TYPE_3 . METHOD_2 ( ( ( TYPE_2 ) ( entity ) ) ) ; } } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { return METHOD_2 ( storageDomain , VAR_1 , TYPE_3 . getValue ( ) , VAR_2 , VAR_3 ) ; } 
public void setEntity ( org.ovirt.engine.core.common.businessentities.VM value ) { METHOD_1 ( value ) ; super . setEntity ( value ) ; METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , TYPE_2 VAR_3 ) { return METHOD_2 ( VAR_1 , VAR_2 , null , VAR_3 ) ; } 
protected java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName ( ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_2 , TYPE_1 < TYPE_2 > VAR_1 ) { return new TYPE_4 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . getParameters ( ) . getId ( ) ) ) ; } 
public boolean METHOD_1 ( ) { return ! ( getReturnValue ( ) . METHOD_2 ( ) . isEmpty ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , int VAR_2 ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 , METHOD_2 ( VAR_1 , 1 ) , VAR_2 ) , null ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( ( getModel ( ) ) != null ) && ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < java.lang.String > VAR_1 = ( ( java.util.ArrayList < java.lang.String > ) ( returnValue ) ) ; METHOD_2 ( model , VAR_1 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , java.lang.String VAR_1 ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vds . METHOD_4 ( ) , VAR_1 , false ) ; } 
public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? VAR_1 . getId ( ) . toString ( ) : null ; } 
private boolean METHOD_1 ( ) { return ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) == ( ( TYPE_1 . METHOD_3 ( ) . size ( ) ) - 1 ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_5 ( VAR_3 , VAR_4 , VAR_2 ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; return null ; } 
public void METHOD_1 ( ) { cmd . getVm ( ) . METHOD_3 ( STRING_1 ) ; TYPE_1 . METHOD_5 ( cmd , VAR_1 ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; user . METHOD_4 ( ) ; TYPE_1 . getInstance ( ) . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( command . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( METHOD_2 ( ) . getEntity ( ) ) { METHOD_3 ( ) . setEntity ( false ) ; } } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return inject ( new TYPE_2 ( id ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) ; 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 params ) { return TYPE_4 . getInstance ( ) . METHOD_2 ( ) . METHOD_1 ( VAR_1 , params ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < java.lang.String > VAR_1 = ( ( java.util.ArrayList < java.lang.String > ) ( returnValue ) ) ; METHOD_1 ( model , VAR_1 ) ; } 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } super . METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_2 ( ) . getId ( ) ) ) ; } 
protected void METHOD_1 ( ) { } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_5 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { command . getParameters ( ) . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( ( ! ( command . validate ( ) ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , getEntity ( 0 ) ) ; METHOD_3 ( 1 ) ; METHOD_4 ( METHOD_5 ( ) ) ; METHOD_7 ( resource . get ( ) , 0 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( VAR_1 , null , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; } 
public java.util.Map < java.lang.String , TYPE_2 . VM > METHOD_1 ( ) { return vms ; } 
public void onSuccess ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . setItems ( VAR_3 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true ) ; } 
public java.lang.Integer METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } 
protected boolean METHOD_1 ( ) { if ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . getName ( ) ) ) != null ) { METHOD_6 ( VAR_1 , VAR_2 ) ; return false ; } return true ; } 
private java.lang.String METHOD_1 ( ) throws TYPE_1 { return TYPE_2 . METHOD_1 ( TYPE_3 . getParameters ( ) . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_3 . assertEquals ( STRING_3 , STRING_4 , VAR_1 ) ; } 
public static TYPE_1 < TYPE_2 . ValidationResult > METHOD_1 ( TYPE_3 . EngineMessage VAR_1 ) { return new TYPE_4 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( VAR_3 . validate ( ) ) ; } 
public void METHOD_1 ( byte [ ] VAR_1 ) { METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_3 ) . METHOD_5 ( VAR_1 ) . METHOD_6 ( ) ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { java.util.List < TYPE_1 > VAR_1 = returnValue . getReturnValue ( ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; } 
public void METHOD_1 ( ) { try { returnValue = TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 , VAR_2 ) ; } catch ( TYPE_2 VAR_3 ) { log . error ( STRING_1 , VAR_3 ) ; } finally { VAR_5 . METHOD_3 ( ) ; } } 
public void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( VAR_1 == null ) { return ; } TYPE_1 VAR_2 = VAR_3 ; if ( ! VAR_1 ) { VAR_2 = VAR_4 ; } METHOD_2 ( ) . setSelectedItem ( VAR_2 ) ; return ; } 
public void onSuccess ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . setItems ( VAR_3 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( object . METHOD_2 ( ) . getEntity ( ) ) { METHOD_3 ( object ) ; VAR_2 . METHOD_4 ( true ) ; } } 
private void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( VAR_1 , FLOAT_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( ( ! ( VAR_3 . validate ( ) ) ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_1 = new java.util.ArrayList < > ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( returnValue ) ) ) ; METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . METHOD_2 ( VAR_1 . getName ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_1 , result ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { METHOD_2 ( new TYPE_2 ( VAR_2 , METHOD_3 ( ) ) , VAR_1 ) ; } 
public void METHOD_1 ( ) { final TYPE_1 < java.lang.String > VAR_1 = VAR_2 . METHOD_2 ( vm ) ; TYPE_2 . METHOD_3 ( VAR_1 , TYPE_3 . METHOD_4 ( ) ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.StoragePool object ) { return object . METHOD_1 ( ) . getValue ( ) ; } 
public java.lang.String getValue ( java.lang.Object object ) { return java.lang.String.valueOf ( ( ( org.ovirt.engine.core.common.businessentities.VM ) ( object ) ) . METHOD_1 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 parameters ) { if ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) { parameters . METHOD_4 ( TYPE_2 . METHOD_5 ( ) . getId ( TYPE_2 . METHOD_6 ( ) , VAR_1 ) ) ; } } 
public java.lang.String METHOD_1 ( TYPE_2 . DiskImage object ) { if ( object . METHOD_2 ( ) ) { return constants . METHOD_4 ( ) ; } return null ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; command . getParameters ( ) . METHOD_4 ( VAR_3 ) ; TYPE_4 . METHOD_6 ( command , VAR_4 ) ; } 
protected abstract boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) ; 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 ) { METHOD_4 ( null ) ; METHOD_4 ( model ) ; } 
java.lang.String METHOD_1 ( int VAR_1 , org.ovirt.engine.core.compat . Version version ) ; 
protected java.lang.String METHOD_1 ( ) { return ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) == null ? null : new TYPE_2 ( METHOD_3 ( ) , TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) . METHOD_4 ( ) ; } 
protected void METHOD_1 ( ) { status = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . toString ( ) , java.lang.String.valueOf ( VAR_2 ) ) ; TYPE_1 . METHOD_4 ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 network = getSelectedItem ( ) ; VAR_1 . METHOD_2 ( ( ( network != null ) && ( network . METHOD_3 ( ) ) ) ) ; } 
public org.ovirt.engine.ui.uicommonweb.UICommand METHOD_1 ( boolean value ) { VAR_1 = value ; return this ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 node , java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; return node . METHOD_1 ( VAR_1 ) ; } 
private void METHOD_1 ( final TYPE_1 < TYPE_2 > . VAR_1 context ) { log . error ( STRING_1 , METHOD_2 ( ) ) ; METHOD_5 ( context . entity ) ; METHOD_4 ( VAR_2 ) ; METHOD_6 ( VAR_3 ) ; } 
protected void METHOD_1 ( ) { resource . METHOD_2 ( VAR_1 ) ; resource . METHOD_3 ( VAR_2 ) ; resource . METHOD_6 ( VAR_5 ) ; resource . METHOD_7 ( VAR_6 ) ; } 
protected org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( TYPE_1 status ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( status ) ; vm . METHOD_3 ( STRING_1 ) ; vm . setId ( vmId ) ; return vm ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( ( STRING_1 + STRING_2 ) , INT_1 , TYPE_2 . METHOD_3 ( ) . length ) ; } 
public void onSuccess ( java.lang.Boolean VAR_1 ) { METHOD_1 ( ) . setEntity ( TYPE_1 . equals ( VAR_1 ) ) ; METHOD_2 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 ) ; TYPE_1 result = dao . METHOD_3 ( VAR_1 . getName ( ) ) ; TYPE_2 . METHOD_5 ( result ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return VAR_3 ; } TYPE_2 VAR_4 = METHOD_1 ( VAR_2 ) ; return VAR_4 . toString ( ) ; } 
public void METHOD_1 ( TYPE_1 entity ) { METHOD_2 ( entity , entity , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { return context . METHOD_1 ( ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 object ) { return object != null ? object . METHOD_2 ( ) . METHOD_3 ( ) : null ; } 
private void METHOD_1 ( TYPE_1 . VM vm ) { if ( METHOD_2 ( ) ) { vm . METHOD_3 ( null ) ; vm . METHOD_4 ( null ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; } 
protected TYPE_1 map ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 ) { return map ( iface , null , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String action , java.lang.String id ) { return inject ( new TYPE_2 ( action , id ) ) ; } 
public void METHOD_1 ( ) { final java.lang.String VAR_1 = STRING_1 ; java.util.Map < java.lang.String , java.lang.String > map = TYPE_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( map ) ; } 
public void METHOD_1 ( java.util.List < ? > value , final org.ovirt.engine.core.compat.Guid VAR_2 ) { setItems ( value , VAR_2 ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { return getTable ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 ) , null ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { VAR_1 = value ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = getEntity ( VAR_2 . VM class , VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_4 ) , STRING_1 ) . METHOD_2 ( ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { dao . METHOD_3 ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; } 
protected boolean validate ( ) { return ( ( ( ( METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ) && ( METHOD_4 ( ) ) ) && ( METHOD_5 ( ) ) ) && ( METHOD_6 ( ) ) ; } 
public TYPE_1 list ( ) ; 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( METHOD_4 ( 1 ) ) . METHOD_5 ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { return METHOD_1 ( METHOD_2 ( VAR_1 ) , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( false ) ; command . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; TYPE_2 . METHOD_6 ( command , VAR_3 ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName ( ) ; } 
public TYPE_1 . StorageDomain METHOD_1 ( ) { return getEntity ( VAR_1 . StorageDomain class , VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_3 ) , VAR_3 . toString ( ) ) ; } 
private void METHOD_1 ( TYPE_1 . EngineMessage VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 , command . getReturnValue ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . name ( ) ) ) ; } 
public TYPE_1 . Network METHOD_1 ( TYPE_1 . Network network ) { network . METHOD_2 ( new TYPE_3 ( ) ) ; network . METHOD_3 ( ) . setId ( VAR_1 ) ; return network ; } 
public static boolean METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_3 < TYPE_2 > ( ) ) ; } 
public void METHOD_1 ( ) { ( VAR_1 ) -- ; if ( ( VAR_1 ) == 0 ) { METHOD_2 ( ) ; } } 
public TYPE_1 get ( org.ovirt.engine.core.compat.Guid id ) { return get ( id , null , false ) ; } 
protected static java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_3 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , TYPE_2 . METHOD_3 ( ) . get ( INT_1 ) ) ; } 
protected boolean validate ( ) { TYPE_1 validator = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; return ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ; } 
public void onSuccess ( TYPE_1 . VdcQueryReturnValue returnValue ) { java.lang.String VAR_2 = returnValue . getReturnValue ( ) ; METHOD_1 ( VAR_2 ) ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat . Version version ) { return VAR_2 < java.lang.Boolean > getValue ( VAR_1 , version . getValue ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_1 ( ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 < TYPE_1 > METHOD_2 ( VAR_3 , VAR_5 , VAR_6 ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_2 ( ) ) ; return new TYPE_1 ( VAR_1 , null ) ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic ) { if ( METHOD_2 ( nic ) ) { return VAR_1 . get ( METHOD_4 ( nic ) ) ; } else { return null ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( 1 , false ) ; VAR_3 . METHOD_6 ( ) ; METHOD_7 ( resource . get ( ) , 1 ) ; } 
private void METHOD_1 ( ) { final TYPE_1 VAR_1 = getParameters ( ) ; METHOD_2 ( VAR_2 , new TYPE_2 ( new java.util.ArrayList ( TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) ) ) ; } 
public java.lang.String getValue ( TYPE_1 < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , org.ovirt.engine.core.common.businessentities.VDS > object ) { return object . METHOD_1 ( ) . getName ( ) ; } 
public void METHOD_1 ( java.lang.String value ) { this . name = value ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String VAR_1 ) { return ( ( iface . METHOD_2 ( ) ) != null ) && ( iface . METHOD_2 ( ) . equals ( VAR_1 ) ) ; } 
public int getValue ( ) { return value ; } 
public TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS , java.util.List < TYPE_2 > > METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_2 > VAR_1 = METHOD_2 ( VAR_2 ) ; return new TYPE_1 ( VAR_2 , VAR_1 ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , TYPE_2 . any ( ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 , org.ovirt.engine.core.compat . Version version ) { return new java.util.ArrayList < TYPE_1 > ( METHOD_2 ( VAR_1 , version ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { cmd . getParameters ( ) . METHOD_2 ( VAR_1 ) ; cmd . getParameters ( ) . METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( cmd . validate ( ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( ) ; } } 
private java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . isEmpty ( VAR_1 ) ) { return null ; } return new java.util.ArrayList ( TYPE_2 . METHOD_2 ( TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_2 ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; } 
public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) . getName ( ) ; } 
public java.lang.String METHOD_1 ( java.lang.Object object ) { return object == null ? STRING_1 : ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( object ) ) . getName ( ) ; } 
TYPE_1 < org.ovirt.engine.core.compat.Guid > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , METHOD_4 ( ) , METHOD_5 ( VAR_1 ) ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( this , VAR_1 ) ; TYPE_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( true ) ; } 
public void METHOD_1 ( TYPE_1 < ? > VAR_1 ) { setTitle ( TYPE_2 . getInstance ( ) . get ( VAR_1 ) ) ; } 
public void METHOD_1 ( int value ) { VAR_1 = value ; } 
private void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public java.util.ArrayList < org.ovirt.engine.core.compat.Guid > METHOD_1 ( ) { return super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ; } 
public boolean validate ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; return ( validate ( VAR_1 . METHOD_3 ( ) ) ) && ( validate ( VAR_1 . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . name , value ) ) ) { this . name = value ; } } 
protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > list = new java.util.ArrayList < > ( ) ; list . add ( METHOD_2 ( 0 , VAR_1 ) ) ; list . add ( METHOD_2 ( 1 , VAR_2 ) ) ; return list ; } 
public TYPE_1 . VdcQueryReturnValue runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_1 ( METHOD_2 ( ) ) ; return VAR_3 . runQuery ( VAR_1 , METHOD_3 ( VAR_2 ) ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , TYPE_1 VAR_2 , java.lang.String network ) { return METHOD_2 ( name , false , VAR_1 , null , VAR_2 , network , null , null ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VDSGroup object ) { return object . getName ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 , 1 , true ) , 2 , 0 , false ) ) ; METHOD_5 ( cmd ) ; TYPE_1 . METHOD_6 ( cmd . METHOD_7 ( ) ) ; } 
protected java.lang.String METHOD_1 ( TYPE_1 . Disk disk ) { try { return TYPE_2 . getInstance ( ) . METHOD_1 ( disk ) ; } catch ( TYPE_3 e ) { log . error ( STRING_1 , e ) ; return VAR_1 ; } } 
private static boolean METHOD_1 ( ) { java.lang.Integer VAR_1 = VAR_2 < java.lang.Integer > getValue ( VAR_3 ) ; return ( VAR_1 & ( TYPE_1 . getValue ( ) ) ) > 0 ; } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_1 ( 1 , false , getEntity ( 0 ) ) ; } 
void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( VAR_2 ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; METHOD_5 ( VAR_1 ) ; } 
private void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > name ) { this . name = name ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { storageDomain . METHOD_2 ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_2 . METHOD_4 ( storageDomain ) , VAR_1 . METHOD_5 ( ) ) ; } 
protected void METHOD_1 ( java.util.List < TYPE_1 > list ) { if ( list . isEmpty ( ) ) { return ; } VAR_1 . add ( list ) ; } 
public boolean METHOD_2 ( ) { return METHOD_2 ( VAR_2 ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storage ) { TYPE_3 model = new TYPE_3 ( ) ; model . METHOD_2 ( storage . METHOD_3 ( ) ) ; METHOD_4 ( model ) ; return model ; } 
public void METHOD_1 ( ) { if ( ! ( validate ( ) ) ) { return ; } METHOD_3 ( ) ; METHOD_4 ( ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( VAR_2 ) ; return VAR_1 ; } 
protected TYPE_1 . VM METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 rs , int VAR_1 ) throws TYPE_2 { java.lang.String VAR_2 = rs.getString ( 1 ) ; return VAR_2 ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 status ) ; 
private static TYPE_1 METHOD_1 ( ) { TYPE_1 storageDomain = new TYPE_1 ( ) ; storageDomain . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) . toString ( ) ) ; storageDomain . METHOD_4 ( VAR_1 ) ; storageDomain . METHOD_5 ( VAR_2 ) ; return storageDomain ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 . getName ( ) , VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_2 ( ) . METHOD_4 ( METHOD_5 ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM object ) { return object . getStatus ( ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { return object . getName ( ) ; } 
protected boolean validate ( ) { return ( super . validate ( ) ) && ( validate ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) . METHOD_4 ( ) ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return ( ( vds . METHOD_2 ( ) ) == ( VAR_1 ) ) && ( vds . getStoragePoolId ( ) . equals ( VAR_2 . getStoragePoolId ( ) ) ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return getEntity ( ) . METHOD_3 ( ) ; } 
public void onSuccess ( java.util.List < TYPE_3 > returnValue ) { VAR_1 = TYPE_1 . METHOD_1 ( returnValue ) ; METHOD_2 ( ) ; } 
private void METHOD_1 ( final TYPE_1 . VdcQueryType VAR_1 , final java.lang.Object context ) { METHOD_2 ( METHOD_3 ( ) , VAR_1 , context ) ; } 
public void METHOD_1 ( ) { VAR_1 . id ( VAR_2 ) . cluster ( VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ) . METHOD_3 ( ) ; } 
public void onSuccess ( java.lang.Object returnValue ) { TYPE_1 < TYPE_2 > VAR_1 = ( ( TYPE_1 < TYPE_2 > ) ( returnValue ) ) ; VAR_2 = TYPE_3 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , int VAR_3 , int VAR_4 , java.lang.String id ) ; 
public TYPE_1 getStatus ( ) { return status ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( cmd . METHOD_6 ( false ) ) ; } 
private java.util.List < org.ovirt.engine.core.compat.Guid > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new java.util.ArrayList ( VAR_2 . METHOD_1 ( VAR_1 ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_5 ( ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { return ( storageDomain . getStatus ( ) ) == ( VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( vm ) ; TYPE_2 . METHOD_3 ( vm . getId ( ) ) ; VAR_1 . METHOD_4 ( ) ; return null ; } 
public static TYPE_1 getInstance ( java.lang.String domain ) { return VAR_3 ; } 
public static TYPE_1 METHOD_1 ( java.lang.String name ) { return VAR_1 . get ( name ) ; } 
public void METHOD_1 ( TYPE_1 context , java.lang.Boolean value , TYPE_2 VAR_1 , java.lang.String id ) { super . METHOD_1 ( context , value , VAR_1 , id ) ; } 
protected TYPE_1 . Disk METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.Integer VAR_2 ) { dao . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public static < TYPE_1 , TYPE_2 extends TYPE_3 < TYPE_1 , ? > > TYPE_4 < TYPE_1 , TYPE_2 > METHOD_1 ( TYPE_5 < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { return new TYPE_4 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_3 ( ) ; VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 . StoragePool ) ; } 
protected final boolean METHOD_1 ( TYPE_1 . EngineMessage VAR_1 , java.lang.String ... VAR_2 ) { addCanDoActionMessage ( VAR_1 ) ; for ( java.lang.String VAR_3 : VAR_2 ) { addCanDoActionMessage ( VAR_3 ) ; } return false ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 parameters = new TYPE_1 ( storageDomain . getId ( ) , VAR_1 ) ; return TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_2 , parameters ) . getSucceeded ( ) ; } 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , int VAR_3 , int VAR_4 , java.lang.String id , java.lang.String status ) ; 
private static org.ovirt.engine.core.common.businessentities.StoragePool METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool pool = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; pool . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; pool . METHOD_3 ( STRING_1 ) ; return pool ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network network ) { return network . getId ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; } 
public TYPE_1 < java.lang.String > METHOD_1 ( ) { return new java.util.ArrayList < java.lang.String > ( VAR_1 ) ; } 
public void METHOD_1 ( ) { this . VAR_1 = true ; METHOD_2 ( ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( ( a . METHOD_2 ( ) ) == VAR_1 ) && ( ! ( a . getId ( ) . equals ( METHOD_3 ( ) . getId ( ) ) ) ) ; } 
private TYPE_1 . DbFacade METHOD_1 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( ) ; } return source ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 class ) . METHOD_3 ( VAR_2 class ) ; METHOD_2 ( VAR_3 class ) . METHOD_3 ( VAR_2 class ) ; } 
protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ! ( VAR_1 . isEmpty ( ) ) ) { super . METHOD_1 ( VAR_1 ) ; } } 
protected boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { return validate ( VAR_2 . METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 value ) { VAR_1 . METHOD_1 ( value ) ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 = ( ( java.lang.Boolean ) ( VAR_2 . METHOD_2 ( VAR_3 . ERROR ) ) ) ; return true ; } 
public void METHOD_1 ( ) { TYPE_2 . getTable ( ) . METHOD_2 ( ) ; TYPE_2 . getTable ( ) . METHOD_3 ( true ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( byte [ ] VAR_1 ) { try { return new org.ovirt.engine.core.compat.Guid ( VAR_1 ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( e ) ; } } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; TYPE_1 . METHOD_5 ( result . isEmpty ( ) ) ; } 
java.lang.String METHOD_1 ( java.lang.String name ) ; 
public java.lang.Boolean METHOD_1 ( ) { return ( VAR_1 ) == null ? java.lang.Boolean . FALSE : VAR_1 ; } 
protected void METHOD_1 ( ) { new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; } 
public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { return VAR_2 < java.lang.Boolean > getValue ( VAR_3 ) ; } else { return VAR_4 ; } } 
public void METHOD_1 ( ) { TYPE_1 < TYPE_2 < TYPE_3 > > validate = validator . validate ( new TYPE_3 ( VAR_1 ) ) ; TYPE_4 . assertEquals ( VAR_2 , validate . isEmpty ( ) ) ; } 
protected boolean METHOD_1 ( ) { return validate ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.StoragePool object ) { return object . getName ( ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 . METHOD_3 ( ) ) . addValue ( STRING_2 , VAR_1 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = dao . METHOD_1 ( VAR_2 ) ; TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( VAR_3 , VAR_1 ) ; } 
public void METHOD_1 ( java.lang.String status ) { VAR_1 . METHOD_2 ( status ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws TYPE_3 { return METHOD_1 ( this , this . VAR_4 , VAR_1 , VAR_2 ) ; } 
public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { METHOD_2 ( VAR_1 ) ; return client . METHOD_3 ( VAR_1 ) ; } catch ( java.lang.Exception e ) { throw new TYPE_3 ( e ) ; } } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_3 , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { TYPE_3 . METHOD_1 ( getVm ( ) . getId ( ) , TYPE_4 . METHOD_4 ( METHOD_5 ( ) ) ) ; } } ) ; } 
public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ( ( java.lang.String ) ( VAR_1 . METHOD_3 ( VAR_2 ) ) ) ) ; return true ; } 
protected boolean METHOD_1 ( ) { java.lang.Boolean VAR_1 = VAR_2 < java.lang.Boolean > getValue ( VAR_3 ) ; return VAR_1 ; } 
public java.lang.String METHOD_1 ( TYPE_2 object ) { return VAR_1 . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 , 2 ) , 0 , INT_1 , false ) ) ; METHOD_5 ( cmd ) ; TYPE_1 . METHOD_6 ( cmd . METHOD_7 ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return inject ( new TYPE_2 ( id , this ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { resource . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( false ) ; resource . get ( ) ; } 
private org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_6 ( METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) ; } 
protected static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.util.List < java.lang.String > VAR_2 ) { return TYPE_1 . METHOD_2 ( vmId , VAR_2 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = METHOD_2 ( ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_1 , TYPE_3 . instance , VAR_1 ) ; } 
public java.lang.String getName ( ) { return this . VAR_1 . getName ( ) ; } 
private void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 < ? extends TYPE_3 > VAR_1 , boolean VAR_2 ) { return VAR_2 ? TYPE_4 . METHOD_1 ( METHOD_3 ( model ) , VAR_1 ) : METHOD_1 ( model , VAR_1 ) ; } 
public int getStatus ( ) { return status ; } 
public TYPE_1 METHOD_1 ( ) ; 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_4 . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; } 
protected boolean validate ( ) { TYPE_1 VAR_1 = new TYPE_1 ( getParameters ( ) . METHOD_2 ( ) ) ; return validate ( VAR_1 . METHOD_3 ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; } 
public java.lang.String METHOD_1 ( ) { return METHOD_1 ( null ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; TYPE_1 VAR_2 = resource . get ( ) ; METHOD_6 ( VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 . Disk object ) { TYPE_2 . DiskImage diskImage = ( ( TYPE_2 . DiskImage ) ( object ) ) ; return TYPE_3 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , diskImage . METHOD_4 ( ) ) ) ; } 
void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , long VAR_2 ) ; 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( true ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_1 . METHOD_5 ( ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.ui.frontend.AsyncQuery VAR_2 ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , getParameters ( ) , VAR_2 ) ; } 
private void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_1 . getVm ( ) ) ; } } 
public boolean METHOD_1 ( ) { return false ; } 
public java.lang.Boolean METHOD_1 ( ) { return ( VAR_1 ) == null ? java.lang.Boolean . FALSE : VAR_1 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = METHOD_2 ( ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_1 , TYPE_3 . instance , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 model ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( model ) ; if ( VAR_1 != null ) { VAR_4 . METHOD_4 ( VAR_1 ) ; } } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getName ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; setTitle ( constants . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( STRING_1 ) ; METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( null ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 < java.lang.String , java.lang.String > VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) + ( VAR_1 . getValue ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { if ( ! ( VAR_5 . isEmpty ( ) ) ) { VAR_4 . METHOD_2 ( VAR_5 ) ; VAR_4 . METHOD_3 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; } } 
public static TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 , TYPE_4 , TYPE_5 , TYPE_6 { return new TYPE_1 ( TYPE_7 . METHOD_2 ( ) . METHOD_3 ( ) , VAR_1 < java.lang.Integer > getValue ( VAR_2 ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { context . METHOD_2 ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 status , TYPE_3 action , java.lang.Object result ) { METHOD_2 ( action , result ) ; action . METHOD_3 ( status . value ( ) ) ; return TYPE_1 . METHOD_5 ( ) . entity ( action ) . METHOD_6 ( ) ; } 
public void METHOD_1 ( boolean VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . setTitle ( VAR_2 ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( null ) . when ( validator ) . METHOD_2 ( TYPE_1 . any ( VAR_1 . Guid class ) ) ; TYPE_2 . assertEquals ( VAR_2 , validator . METHOD_3 ( ) ) ; } 
TYPE_1 METHOD_1 ( java.lang.String action , java.lang.String VAR_1 ) ; 
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : TYPE_1 . METHOD_2 ( ) ) { if ( VAR_1 != ( VAR_2 ) ) { TYPE_2 . METHOD_3 ( dao . get ( VAR_1 ) ) ; } } } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 ( ) ; } 
public void onSuccess ( java.lang.Integer returnValue ) { VAR_1 = returnValue ; METHOD_1 ( model ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( null ) ) ; METHOD_4 ( cmd ) ; TYPE_1 . METHOD_5 ( cmd . validate ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { return ( ( java.lang.String ) ( METHOD_2 ( VAR_1 ) ) ) ; } 
protected java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_2 ( ) . getId ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( null ) ; setTitle ( constants . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( STRING_1 ) ; METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { params = new TYPE_1 ( ) ; command = new TYPE_2 ( params , null ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_3 . getId ( ) , VAR_3 . getName ( ) , VAR_1 ) ; } 
private java.lang.Integer METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( vm , vm . METHOD_3 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) ? getParameters ( ) . METHOD_3 ( ) : VAR_1 ; } 
public org.ovirt.engine.core.common.businessentities.VM getVm ( ) { if ( ( vm ) == null ) { vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_1 ( VAR_1 ) ; } return vm ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat . Version version ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( version ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 object ) { return TYPE_2 . getInstance ( ) . get ( object ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; METHOD_4 ( VAR_1 , VAR_2 , VAR_2 , VAR_2 ) ; } 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( boolean VAR_1 ) { return METHOD_1 ( VAR_1 , false , false ) ; } 
public void METHOD_1 ( ) { dao . METHOD_3 ( VAR_1 ) ; final TYPE_1 VAR_2 = dao . get ( VAR_1 ) ; TYPE_2 . METHOD_4 ( VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 widget , boolean VAR_1 ) { METHOD_2 ( widget ) . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 ) { for ( org.ovirt.engine.core.compat.Guid VAR_2 : new java.util.ArrayList ( METHOD_2 ( VAR_1 ) ) ) { METHOD_1 ( VAR_2 ) ; } METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { this . VAR_1 = METHOD_2 ( VAR_2 ) ; } 
public int METHOD_1 ( ) { return this . VAR_1 ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new TYPE_1 ( ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.lang.String version = ( ( java.lang.String ) ( result ) ) ; METHOD_2 ( ) . METHOD_3 ( version ) ; } 
protected void METHOD_1 ( TYPE_1 entity ) { org.mockito.Mockito.when ( entity . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; } 
private java.lang.String METHOD_1 ( ) { try { return TYPE_1 . getInstance ( ) . METHOD_1 ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) ; } catch ( TYPE_3 e ) { log . error ( STRING_1 , e ) ; return VAR_1 ; } } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( command . getParameters ( ) . METHOD_3 ( ) ) ) . thenReturn ( null ) ; METHOD_4 ( ) ; } 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; } return VAR_1 ; } 
protected boolean METHOD_1 ( ) { return validate ( METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 object = METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( object . name ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < java.lang.String > VAR_1 = ( ( java.util.ArrayList < java.lang.String > ) ( returnValue ) ) ; METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; METHOD_2 ( VAR_1 , METHOD_4 ( ) ) ; } 
private boolean METHOD_1 ( TYPE_1 . VdcActionType VAR_1 ) { return TYPE_2 . METHOD_2 ( new java.util.ArrayList ( TYPE_3 . METHOD_3 ( new org.ovirt.engine.core.common.businessentities.VDS [ ] { getEntity ( ) } ) ) , VAR_2 . VDS class , VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_5 . METHOD_5 ( command ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate source , org.ovirt.engine.core.common.businessentities.VmTemplate VAR_1 ) { return VAR_2 . METHOD_1 ( source , VAR_1 ) ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( VAR_5 . METHOD_3 ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ; setItems ( VAR_1 ) ; } 
public void METHOD_1 ( int value ) { if ( ( VAR_1 ) != value ) { VAR_1 = value ; METHOD_3 ( new TYPE_2 ( STRING_1 ) ) ; } } 
public boolean validate ( ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( ) , new TYPE_4 ( VAR_1 ) } ) ; return METHOD_2 ( ) . METHOD_4 ( ) ; } 
public void METHOD_3 ( java.lang.String VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 , null , false ) , null ) ; } 
public void METHOD_1 ( int VAR_1 , TYPE_1 model , java.lang.String value ) { model . METHOD_2 ( value ) ; } 
protected boolean validate ( ) { return ( super . validate ( ) ) && ( validate ( METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool result = dao . METHOD_2 ( VAR_1 . getName ( ) ) ; METHOD_4 ( result ) ; } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return VAR_1 . getName ( ) . METHOD_3 ( VAR_2 . getName ( ) ) ; } 
private TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 [ VAR_1 ] , VAR_4 [ VAR_1 ] ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , null , STRING_2 ) ; parameters . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_5 ( command , VAR_4 ) ; } 
private static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > VAR_2 , java.lang.String VAR_3 ) { VAR_4 . add ( new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 ) ) ; } 
public void validate ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( command . validate ( ) ) ; } 
protected void METHOD_1 ( java.lang.Object sender , TYPE_1 e ) { super . METHOD_1 ( sender , e ) ; VAR_1 . METHOD_1 ( e ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { try { TYPE_1 . METHOD_3 ( vds ) ; } finally { TYPE_2 . METHOD_4 ( vds . getId ( ) , VAR_2 , true ) ; } } 
private boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , VAR_1 ) ) != null ; } 
private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try ( TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_4 . METHOD_5 ( VAR_3 ) ) ) ; } return VAR_1 ; } 
public boolean METHOD_1 ( ) { return ( ( getModel ( ) . getEntity ( ) ) != null ) && ( getModel ( ) . getEntity ( ) . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 user = org.mockito.Mockito . METHOD_3 ( VAR_2 class ) ; VAR_3 . METHOD_4 ( user ) ; TYPE_3 . assertEquals ( STRING_1 , user , VAR_3 . METHOD_5 ( false ) ) ; } 
public void METHOD_2 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { try { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
private void METHOD_1 ( TYPE_1 model ) { VAR_1 . METHOD_2 ( model . getModel ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return inject ( new TYPE_2 ( id ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( cmd . validate ( ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 , true , VAR_3 ) ; } 
protected TYPE_1 < TYPE_2 . VM > METHOD_1 ( ) { TYPE_3 params = new TYPE_3 ( METHOD_2 ( VAR_1 ) , VAR_1 ) ; return METHOD_4 ( VAR_2 , params ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( TYPE_2 . METHOD_2 ( ) , VAR_1 , false ) ; } 
protected void METHOD_1 ( ) { resource . METHOD_2 ( VAR_1 ) ; resource . METHOD_3 ( VAR_2 ) ; resource . METHOD_4 ( VAR_3 ) ; resource . METHOD_6 ( VAR_5 ) ; resource . METHOD_7 ( VAR_6 ) ; } 
private java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( event , VAR_1 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , TYPE_1 . DiskImage ... VAR_1 ) { for ( TYPE_1 . DiskImage diskImage : VAR_1 ) { diskImage . METHOD_2 ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( storageDomain . getId ( ) ) ) ) ; } } 
public void METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_1 . assertEquals ( VAR_3 , VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( java.lang.String id ) { return METHOD_2 ( VAR_1 , new TYPE_2 ( METHOD_3 ( id ) ) ) ; } 
public java.lang.Object METHOD_1 ( ) { return id ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_4 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { TYPE_1 . METHOD_2 ( aQuery , true ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_2 ( ) , aQuery ) ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters ) { METHOD_1 ( VAR_1 , parameters , null , null ) ; } 
public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_2 = new TYPE_2 ( VAR_1 , METHOD_2 ( ) ) ; return VAR_3 . get ( VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { return validate ( TYPE_1 . METHOD_1 ( TYPE_2 . getParameters ( ) . getVm ( ) . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ) ; } 
public void METHOD_2 ( org.ovirt.engine.core.compat.Guid value ) { id . METHOD_2 ( value ) ; } 
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( VAR_3 ) ) . thenReturn ( TYPE_2 . METHOD_5 ( STRING_1 ) ) ; VAR_1 = true ; } } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_2 = new org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 host = new TYPE_1 ( ) ; host . setId ( VAR_1 ) ; TYPE_2 . METHOD_2 ( host ) ; assertEquals ( VAR_2 , host . METHOD_4 ( ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_2 < TYPE_3 , org.ovirt.engine.core.common.businessentities.VM > object ) { java.lang.String VAR_1 = object . METHOD_2 ( ) . METHOD_3 ( ) ; return VAR_1 ; } 
private boolean METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 ) { return ( ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) == 1 ) ) && ( ( VAR_1 . get ( 0 ) ) != null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; } 
public java.lang.String METHOD_1 ( ) { return ( VAR_1 ) == null ? this . id : VAR_1 ; } 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; super . METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId ( ) ) ) ; } 
private void METHOD_1 ( java.lang.Object sender , TYPE_1 args ) { VAR_1 . METHOD_1 ( ) ; } 
public synchronized void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { VAR_2 . get ( VAR_1 ) . METHOD_1 ( ) ; } } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 , org.ovirt.engine.core.compat . Version version ) { TYPE_1 VAR_3 = new TYPE_2 ( VAR_1 , VAR_2 , version ) ; METHOD_2 ( VAR_3 ) ; return VAR_3 . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; if ( ( getEntity ( ) ) != null ) { METHOD_2 ( vm ) ; super . METHOD_1 ( ) ; } } 
protected boolean METHOD_1 ( ) { return false ; } 
public void METHOD_1 ( ) { VAR_1 . getReturnValue ( ) . METHOD_3 ( true ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( validation . validate ( STRING_1 ) . METHOD_3 ( ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_2 ( ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( getEntity ( ) ) ) ; if ( vm == null ) { return ; } super . METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId ( ) ) ) ; } 
public void onSuccess ( java.util.List < TYPE_1 . Disk > VAR_1 ) { METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 event = new TYPE_1 ( ) ; event . setId ( VAR_1 ) ; TYPE_2 . METHOD_2 ( event ) ; assertEquals ( VAR_2 , event . METHOD_4 ( ) ) ; } 
protected java.lang.String METHOD_1 ( TYPE_1 model ) { return model . METHOD_2 ( ) . METHOD_3 ( ) ; } 
protected TYPE_1 getEntity ( int VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 [ VAR_1 ] , VAR_5 [ VAR_1 ] ) ; } 
public void METHOD_1 ( java.lang.Exception VAR_1 , java.lang.String VAR_2 , final java.util.Map < java.lang.String , java.lang.Object > globalMap ) throws TYPE_1 { VAR_3 . put ( VAR_2 , TYPE_2 . METHOD_2 ( ) ) ; status = STRING_2 ; METHOD_3 ( VAR_1 , VAR_2 , globalMap ) ; } 
public boolean validate ( boolean VAR_1 ) { return validate ( true , VAR_1 , true ) ; } 
public void METHOD_1 ( ) { this . VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) + ( TYPE_2 . METHOD_3 ( VAR_2 < java.lang.Integer > getValue ( VAR_3 ) , VAR_4 ) ) ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storageDomain . METHOD_3 ( VAR_2 ) ; storageDomain . setId ( VAR_3 ) ; storageDomain . METHOD_4 ( VAR_4 ) ; return storageDomain ; } 
public java.lang.String getValue ( TYPE_1 object ) { return object . getName ( ) ; } 
public TYPE_1 METHOD_1 ( ) { java.lang.Integer VAR_1 = ( ( java.lang.Integer ) ( getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) ) ) ; return TYPE_2 . METHOD_3 ( VAR_1 ) ? VAR_2 : VAR_3 ; } 
public java.lang.String METHOD_1 ( ) { if ( ( TYPE_1 . isEmpty ( VAR_1 ) ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . getName ( ) ; } return TYPE_1 . METHOD_3 ( VAR_1 ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 ) { if ( METHOD_2 ( VAR_1 ) ) { METHOD_3 ( VAR_1 ) ; } } 
private static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { command . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( true ) ; TYPE_2 . METHOD_5 ( command , VAR_1 ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( getEntity ( ) ) ; } 
private static void METHOD_1 ( ) { VAR_1 = VAR_2 < TYPE_1 > getValue ( VAR_3 ) ; } 
public void METHOD_1 ( TYPE_1 widget ) { VAR_2 . METHOD_4 ( widget , 0 ) ; } 
public void METHOD_2 ( java.lang.String VAR_1 ) { try { VAR_2 . METHOD_2 ( VAR_1 ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 , org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 ) { TYPE_1 . assertEquals ( 0 , METHOD_3 ( VAR_1 , VAR_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 event ) { if ( ! ( TYPE_2 . isEmpty ( VAR_1 ) ) ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( this ) ; } } 
public void METHOD_1 ( TYPE_1 model ) { VAR_1 . METHOD_1 ( model ) ; METHOD_2 ( model ) ; METHOD_3 ( model ) ; METHOD_4 ( ) ; } 
public java.lang.Boolean getValue ( ) { for ( TYPE_1 VAR_1 : METHOD_1 ( ) ) { if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { return false ; } } return true ; } 
TYPE_1 . VdcQueryReturnValue runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 parameters ) ; 
static java.lang.String METHOD_1 ( TYPE_1 . Version version ) { return version == null ? null : TYPE_2 . METHOD_2 ( VAR_1 , version . METHOD_3 ( ) , version . METHOD_4 ( ) ) ; } 
public static TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , org.ovirt.engine.core.common.businessentities.VDS host ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , host ) ; return VAR_2 ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 user = ( ( TYPE_1 ) ( TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 , false ) ) ) ; return user ; } 
public static void METHOD_1 ( ) { VAR_3 . METHOD_2 ( ) ; } 
private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_2 , METHOD_2 ( ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid value ) { TYPE_2 . getParameters ( ) . METHOD_1 ( value ) ; } 
protected org.ovirt.engine.core.common.businessentities.VDS METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . setId ( id ) ; return vds ; } 
public void METHOD_2 ( ) { try { VAR_1 . METHOD_2 ( ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
protected boolean validate ( ) { return ( ( validate ( METHOD_2 ( ) . METHOD_3 ( ) ) ) && ( validate ( METHOD_2 ( ) . METHOD_4 ( ) ) ) ) && ( validate ( METHOD_2 ( ) . METHOD_5 ( ) ) ) ; } 
protected void METHOD_1 ( TYPE_1 e ) { METHOD_2 ( ) . METHOD_3 ( this , e ) ; } 
public TYPE_1 METHOD_1 ( java.lang.Object source ) { return source != null ? TYPE_1 . METHOD_2 ( ( ( java.lang.Integer ) ( source ) ) ) : VAR_1 ; } 
protected boolean validate ( ) { return ( super . validate ( ) ) && ( validate ( METHOD_2 ( ) . METHOD_3 ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_4 . METHOD_4 ( VAR_2 . METHOD_5 ( ) , new TYPE_2 ( ) ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; return null ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ! ( ( ( java.util.List < ? > ) ( source ) ) . isEmpty ( ) ) ; } return false ; } 
public static boolean METHOD_1 ( ) { return VAR_1 < java.lang.Boolean > getValue ( VAR_2 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return ( vm != null ) && ( ( java.lang.Boolean ) ( METHOD_2 ( VAR_1 , vm . METHOD_3 ( ) . toString ( ) ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { parameters . METHOD_3 ( VAR_1 ) ; parameters . setId ( VAR_2 ) ; TYPE_1 . METHOD_4 ( ( ! ( command . validate ( ) ) ) ) ; } 
public static void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , org.ovirt.engine.core.compat . Version VAR_2 ) { if ( TYPE_2 . METHOD_2 ( VAR_2 ) ) { VAR_1 . put ( VAR_3 , TYPE_3 . METHOD_3 ( ) ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = METHOD_2 ( ) ; if ( diskImage != null ) { diskImage . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( diskImage . METHOD_5 ( ) . getId ( ) , VAR_1 ) ; } } 
public void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 , final TYPE_2 status ) { VAR_3 . METHOD_1 ( VAR_1 , status ) ; } 
private void METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities.network.Network network : VAR_1 ) { TYPE_1 . METHOD_2 ( network . METHOD_3 ( ) , network , VAR_2 , new TYPE_2 < > ( ) ) ; } } 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , TYPE_1 VAR_3 , int VAR_4 , java.lang.String id ) ; 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { METHOD_2 ( VAR_1 , VAR_1 ) ; } } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( cluster . getId ( ) ) , VAR_1 ) ; } 
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > returnValue ) { METHOD_1 ( VAR_1 , returnValue ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 ) { return getEntity ( VAR_3 . List class , VAR_4 , new TYPE_3 ( VAR_1 , VAR_2 , false , null ) , STRING_1 , true ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { METHOD_1 ( VAR_1 , ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool result = dao . get ( VAR_1 . getId ( ) ) ; METHOD_2 ( result ) ; } 
public void METHOD_1 ( final org.ovirt.engine.core.common.businessentities.VmTemplate value ) { VAR_1 = value ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { } 
protected void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; METHOD_2 ( new TYPE_3 ( ) ) ; METHOD_2 ( new TYPE_2 ( ) ) ; METHOD_2 ( new TYPE_4 ( ) ) ; METHOD_2 ( new TYPE_5 ( ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( VAR_2 ) ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters , TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_2 ( true , hosts , vm , VAR_1 , METHOD_3 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return TYPE_1 . valueOf ( ( ( java.lang.String ) ( TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 ) ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return METHOD_3 ( ) . METHOD_4 ( ) ? new TYPE_3 ( ) : null ; } 
