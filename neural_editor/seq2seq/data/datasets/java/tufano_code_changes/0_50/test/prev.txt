private static void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_1 , INT_1 ) ; java.lang.System.out.println ( TYPE_2 . METHOD_3 ( INT_1 ) ) ; java.lang.System.out.println ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; } 
public int METHOD_1 ( android.bluetooth.BluetoothDevice device ) { if ( VAR_1 ) android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) ; TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) return VAR_2 ; return service . METHOD_1 ( device ) ; } 
public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { synchronized ( VAR_3 ) { if ( VAR_2 != null ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; } else { VAR_3 . METHOD_3 ( VAR_1 ) ; } } } 
public long METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; } 
public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg > > 0 ; } 
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 , int VAR_2 , boolean VAR_3 , TYPE_1 < java.lang.String > VAR_4 ) throws TYPE_2 ; 
public int METHOD_1 ( TYPE_1 d , int f ) { VAR_1 . METHOD_2 ( d ) ; int ret = VAR_1 . get ( f ) ; return ret ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class < ? > [ ] VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; } 
private TYPE_1 [ ] METHOD_1 ( TYPE_1 parent ) { int count = parent . METHOD_2 ( ) ; TYPE_1 [ ] VAR_1 = new TYPE_1 [ count ] ; parent . METHOD_3 ( VAR_1 , true ) ; return VAR_1 ; } 
public java.lang.String METHOD_1 ( java.lang.String name ) { return null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( this ) { if ( null != VAR_1 ) { VAR_2 = VAR_1 ; } } } 
public long METHOD_1 ( ) { try { if ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; } } catch ( java.io.IOException e ) { } return length ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( ) ; } TYPE_3 VAR_2 = TYPE_3 . METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 = VAR_1 ; } 
public java.lang.Object METHOD_1 ( ) { try { return ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( e ) ; } } 
public void run ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( ) ; java.lang.String VAR_2 = ( METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) ) + STRING_1 ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( ) ; } 
private boolean METHOD_1 ( int VAR_1 ) { return VAR_2 [ VAR_1 ] ; } 
public TYPE_1 . File METHOD_1 ( java.lang.Object VAR_1 ) { final TYPE_2 info = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; return info == null ? null : info . METHOD_5 ( ) ; } 
synchronized TYPE_1 METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 ) ; } 
public void METHOD_1 ( byte [ ] address , int VAR_1 , int VAR_2 ) { if ( ! ( METHOD_2 ( address , VAR_1 , VAR_2 ) ) ) android.util.Log.e ( VAR_3 . TAG , STRING_1 ) ; } 
float METHOD_1 ( int index ) { throw new TYPE_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 p ) { super . METHOD_1 ( p ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( p ) ) ; } 
public java.util.List < android.bluetooth.BluetoothDevice > METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 [ ] VAR_2 , TYPE_3 VAR_3 , TYPE_4 VAR_4 , boolean VAR_5 , boolean VAR_6 ) ; 
protected void METHOD_1 ( int VAR_1 , android.renderscript.Allocation [ ] VAR_2 , android.renderscript.Allocation VAR_3 , TYPE_1 v ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , v , new TYPE_2 ( ) ) ; } 
public static java.io.File [ ] METHOD_1 ( ) { return new java.io.File [ ] { TYPE_1 . METHOD_2 ( STRING_1 ) , TYPE_1 . METHOD_2 ( STRING_2 ) } ; } 
protected boolean METHOD_1 ( char c ) { return ( c == CHAR_1 ) || ( c == CHAR_2 ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( null ) ; } } 
public static int METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : return VAR_3 ; case VAR_4 : return VAR_5 ; case VAR_6 : return VAR_7 ; default : throw new java.lang.IllegalArgumentException ( ( STRING_1 + VAR_1 ) ) ; } } 
public void METHOD_1 ( byte [ ] data , int offset , int length ) { VAR_1 . println ( new java.lang.String ( TYPE_1 . METHOD_2 ( data , offset , ( offset + length ) ) ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new java.util.ArrayList < TYPE_1 > ( ) ) ; TYPE_2 . METHOD_3 ( VAR_2 ) ; org.mockito.Mockito.verify ( VAR_3 ) . METHOD_4 ( VAR_4 , false ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String key ) { synchronized ( VAR_1 ) { return VAR_1 . get ( key ) ; } } 
native void METHOD_1 ( int VAR_1 , int id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , TYPE_1 b ) ; 
public int run ( ) { return 0 ; } 
public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return INT_1 - ( INT_2 - arg ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { assertNotNull ( VAR_1 ) ; assertEquals ( 1 , VAR_1 . size ( ) ) ; assertNotNull ( VAR_1 . get ( 0 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; java.lang.String s = VAR_2 . getName ( VAR_3 ) ; assertEquals ( STRING_2 , s ) ; } 
public static native int METHOD_1 ( int VAR_1 , TYPE_1 fd , TYPE_2 VAR_2 , int VAR_3 , boolean VAR_4 , byte [ ] VAR_5 ) throws TYPE_3 , TYPE_4 , TYPE_5 ; 
private static java.lang.String METHOD_1 ( final java.io.File VAR_1 ) { return ( STRING_1 + ( TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) + STRING_1 ; } 
public void METHOD_1 ( com.android.jack.ir.ast.JDefinedClassOrInterface method ) { VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( int type , int i ) { float [ ] f = new float [ ] { } ; VAR_1 = new TYPE_1 ( this , type , i , f , VAR_2 ) ; METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( METHOD_2 ( STRING_1 ) ) { return ; } METHOD_3 ( STRING_2 ) ; } 
private void METHOD_1 ( int index , TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( index , VAR_1 ) ; } 
public static double METHOD_1 ( double arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg / ( - FLOAT_1 ) ; } 
public static native byte [ ] METHOD_1 ( int VAR_1 ) ; 
public TYPE_1 METHOD_1 ( java.lang.String input ) throws TYPE_2 { try { input = input . METHOD_2 ( STRING_1 , STRING_2 ) ; return TYPE_1 . METHOD_3 ( input ) ; } catch ( TYPE_3 e ) { throw new TYPE_2 ( e.getMessage ( ) ) ; } } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 context ) { android.util.Log.d ( STRING_1 , STRING_2 ) ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , context ) ; VAR_2 . start ( ) ; return VAR_2 ; } 
public void METHOD_1 ( java.lang.Object VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 , true ) , TYPE_2 . METHOD_5 ( VAR_1 ) ) ; TYPE_1 . METHOD_6 ( VAR_2 ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_2 VAR_3 ) { assert VAR_1 != null ; assert VAR_2 != null ; assert VAR_3 != null ; VAR_4 . METHOD_2 ( new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 ) ) ; } 
public void METHOD_1 ( ) { try { callback . METHOD_2 ( ) ; } catch ( android.os.RemoteException e ) { METHOD_3 ( uid , VAR_1 ) ; } } 
protected byte METHOD_1 ( ) throws java.io.IOException { return ( ( byte ) ( METHOD_2 ( ) ) ) ; } 
public void run ( ) { } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ; METHOD_4 ( ) ; VAR_2 = true ; } 
public void METHOD_1 ( int VAR_1 , byte [ ] VAR_2 , int VAR_3 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , 0 ) ; } 
public boolean METHOD_1 ( ) { synchronized ( this ) { VAR_1 = TYPE_1 . METHOD_2 ( address , VAR_2 ) ; } return VAR_1 ; } 
synchronized long METHOD_1 ( java.lang.String VAR_1 , java.lang.String [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; } 
void METHOD_1 ( char [ ] VAR_1 , int VAR_2 ) { METHOD_2 ( 0 , count , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 ; VAR_3 = super . METHOD_1 ( VAR_4 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; return VAR_3 == null ? null : METHOD_3 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; if ( VAR_1 != null ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( java.io.IOException e ) { TYPE_2 . METHOD_2 ( STRING_1 , e ) ; } } } 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( VAR_2 . METHOD_1 ( ) ) ) ; METHOD_2 ( VAR_1 ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { VAR_1 = VAR_2 ; } } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) + STRING_1 ) + ( METHOD_4 ( VAR_1 ) ) ; } 
public int length ( ) { final boolean VAR_1 = false ; if ( VAR_1 ) { return ( count ) > > > 1 ; } else { return count ; } } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 r = METHOD_2 ( VAR_1 , false , false ) ; return new TYPE_1 ( r . METHOD_3 ( ) ) ; } 
TYPE_1 METHOD_1 ( ) throws android.os.RemoteException { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; if ( VAR_1 == null ) { throw new android.os.RemoteException ( STRING_1 ) ; } return VAR_1 ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Integer VAR_2 , TYPE_2 VAR_3 , TYPE_3 VAR_4 ) throws java.lang.Exception { } 
private static TYPE_1 of ( java.io.File VAR_1 , TYPE_2 VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; } 
private void METHOD_1 ( ) { synchronized ( this ) { VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( ) ; } } 
public static java.io.File METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_1 ) , VAR_1 ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 . getName ( ) , null ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , int value ) throws java.io.IOException { TYPE_2 b = TYPE_2 . METHOD_2 ( 4 ) ; b . METHOD_3 ( value ) ; VAR_1 . METHOD_4 ( b . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { METHOD_1 ( ( ( TYPE_3 ) ( x ) ) , VAR_1 ) ; } catch ( java.lang.Throwable e ) { throw METHOD_2 ( x , e ) ; } } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_1 [ ] VAR_1 , java.lang.String VAR_2 , TYPE_2 session ) throws TYPE_3 { return METHOD_2 ( VAR_1 , VAR_2 , session . METHOD_3 ( ) , false ) ; } 
private void METHOD_1 ( int key ) { if ( key == ( VAR_1 ) ) return ; synchronized ( VAR_2 ) { VAR_3 . METHOD_2 ( key ) ; VAR_4 . METHOD_2 ( key ) ; } } 
public boolean METHOD_1 ( int id , java.lang.String response ) { if ( VAR_1 ) { return VAR_2 . METHOD_2 ( response ) ; } else { return METHOD_3 ( ( ( ( STRING_1 + id ) + STRING_2 ) + response ) ) ; } } 
public TYPE_1 METHOD_1 ( java.lang.String key , java.lang.String value ) { this . VAR_1 . METHOD_2 ( key , value ) ; return this ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 location ) { for ( TYPE_1 c : VAR_1 ) { if ( location . equals ( c . METHOD_2 ( ) ) ) { return c ; } } return null ; } 
public static boolean METHOD_1 ( int x , int y ) { return x < y ; } 
protected void METHOD_1 ( android.os.Bundle VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( new java.util.HashMap < > ( ) , true , true ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; } VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( null ) ) ; TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_3 class ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 location , java.lang.String VAR_2 , java.lang.Object data ) { if ( VAR_3 . METHOD_2 ( this , VAR_1 , VAR_4 ) ) { return ; } super . METHOD_1 ( VAR_1 , location , VAR_2 , data ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { if ( ( TYPE_1 . METHOD_2 ( ) ) == ( this . VAR_1 ) ) { TYPE_1 . METHOD_3 ( null ) ; } VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) ; TYPE_1 service = METHOD_2 ( VAR_2 ) ; if ( service == null ) return ; service . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 info ) { } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( 3 ) ; assertTrue ( VAR_1 . METHOD_3 ( ) ) ; assertFalse ( VAR_2 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Throwable { METHOD_2 ( INT_1 , INT_2 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( this ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { int v = VAR_1 . METHOD_2 ( ) . VAR_3 ; return TYPE_1 . METHOD_1 ( VAR_1 , v , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { return METHOD_2 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return false ; } 
TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 ; 
public TYPE_1 METHOD_1 ( int index ) { TYPE_2 VAR_1 = VAR_2 [ index ] ; TYPE_1 VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; assert VAR_3 != null ; return VAR_3 ; } 
public void METHOD_1 ( java.lang.String line ) { if ( line != null ) { METHOD_2 ( line ) ; } } 
public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) throws java.lang.Exception { METHOD_1 ( ( ( TYPE_3 ) ( x ) ) , VAR_1 ) ; } 
public java.util.List < java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , true , true ) ; } 
public static java.io.File METHOD_1 ( java.lang.String name ) throws TYPE_1 { java.lang.String VAR_1 ; VAR_1 = TYPE_2 . METHOD_2 ( ) ; return new java.io.File ( VAR_1 , ( name + ( VAR_2 ) ) ) ; } 
public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( 5 ) ; c . METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public java.lang.String METHOD_1 ( TYPE_1 locale ) { return TYPE_2 . METHOD_1 ( locale , this , count ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } VAR_1 . METHOD_1 ( ) ; METHOD_3 ( VAR_1 ) ; } 
public int METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , int version ) { if ( ( VAR_3 ) == false ) { throw new java.lang.RuntimeException ( ( ( VAR_4 . TAG ) + STRING_1 ) ) ; } return METHOD_2 ( VAR_1 , VAR_2 , version ) ; } 
public static float METHOD_1 ( ) { float a ; float b ; float c ; a = Main . METHOD_2 ( FLOAT_1 ) ; b = Main . METHOD_2 ( FLOAT_2 ) ; c = a - b ; return c ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) throws java.lang.Exception { for ( int VAR_4 : VAR_5 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_4 , VAR_2 ) ; } } 
private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = field . METHOD_2 ( VAR_2 class ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , true , true , true ) ; } 
public void METHOD_1 ( byte [ ] VAR_1 ) { if ( ( VAR_1 != null ) && ( ( VAR_1 . length ) == 0 ) ) { throw new java.lang.IllegalArgumentException ( STRING_1 ) ; } VAR_2 = VAR_1 ; } 
public void error ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.Throwable VAR_3 ) { TYPE_1 . log ( VAR_3 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } VAR_2 . METHOD_1 ( VAR_1 . getName ( ) , VAR_1 ) ; } 
TYPE_1 [ ] METHOD_1 ( ) { synchronized ( VAR_1 ) { return VAR_1 . METHOD_2 ( new TYPE_1 [ VAR_1 . size ( ) ] ) ; } } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 location , java.lang.String VAR_2 , java.lang.Object data ) { throw new TYPE_4 ( STRING_1 ) ; } 
public void METHOD_1 ( ) { try { int [ ] a = null ; TYPE_1 VAR_1 = new TYPE_1 ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 method , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) { if ( ( VAR_4 ) > 0 ) { VAR_3 . METHOD_2 ( VAR_1 , method , VAR_2 , VAR_5 ) ; } } 
public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_2 = VAR_1 ; } 
public boolean METHOD_1 ( ) { if ( ( ( VAR_1 ) == 0 ) && ( ( VAR_2 ) == true ) ) { return true ; } else { return false ; } } 
public void METHOD_1 ( ) throws TYPE_1 { try { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( true ) ; } catch ( java.lang.Exception e ) { throw new TYPE_1 ( e ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { synchronized ( VAR_3 ) { METHOD_2 ( VAR_1 , VAR_2 , true ) ; } } 
public boolean METHOD_1 ( ) { return ( ( ( VAR_1 ) && ( ( VAR_2 ) != null ) ) && ( VAR_2 . METHOD_2 ( ) ) ) && ( ( METHOD_3 ( ) ) != ( VAR_3 ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { METHOD_1 ( VAR_2 ) ; TYPE_3 field = VAR_1 . METHOD_2 ( ) ; if ( field != null ) { METHOD_1 ( field ) ; } } 
public void METHOD_1 ( byte VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public boolean METHOD_1 ( TYPE_1 node ) { if ( ( node . METHOD_2 ( VAR_1 class ) ) != null ) { return false ; } METHOD_3 ( node ) ; return super . METHOD_1 ( node ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_1 , null , null , null , null , null ) ; } 
public java.lang.Object METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
private static java.io.File [ ] METHOD_1 ( java.lang.String path ) { java.util.ArrayList < java.io.File > result = TYPE_1 . METHOD_2 ( path , TYPE_2 . METHOD_3 ( STRING_1 ) , true ) ; return result . METHOD_4 ( new java.io.File [ result . size ( ) ] ) ; } 
public static void test ( ) { java.lang.Object [ ] VAR_1 = new java.lang.Object [ 2 ] ; java.lang.Object VAR_2 = VAR_1 [ 0 ] ; VAR_2 . METHOD_1 ( ) ; VAR_1 [ 1 ] = VAR_2 ; } 
public java.lang.String toString ( ) { return ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) + ( VAR_2 ) ; } 
public void run ( ) { METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( INT_1 ) ; TYPE_2 . d ( VAR_1 . TAG , STRING_1 ) ; TYPE_3 . METHOD_3 ( STRING_2 ) ; VAR_2 . METHOD_4 ( VAR_3 , INT_2 ) ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 > callback ) { throw new TYPE_3 ( ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) == null ) { return null ; } return VAR_2 . get ( VAR_1 ) . VAR_3 ; } 
public TYPE_1 METHOD_1 ( java.lang.String name , java.lang.Object value ) { TYPE_2 . METHOD_2 ( name ) ; METHOD_3 ( value ) . VAR_1 . append ( name ) . append ( CHAR_1 ) . append ( value ) ; return this ; } 
synchronized void METHOD_1 ( int id , int VAR_1 , byte [ ] VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { synchronized ( this ) { VAR_2 = VAR_1 ; } } 
public static final TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 provider ) throws TYPE_3 , TYPE_4 { if ( provider == null ) { throw new java.lang.IllegalArgumentException ( STRING_1 ) ; } TYPE_1 c = TYPE_1 . METHOD_2 ( VAR_1 , provider ) ; return c ; } 
public int METHOD_1 ( ) { final int VAR_1 = INT_1 ; int result = 1 ; result = ( VAR_1 * result ) + ( ( VAR_2 ) == null ? 0 : VAR_2 . METHOD_1 ( ) ) ; return result ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 1 ] ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { switch ( VAR_2 . type ) { case VAR_3 : case VAR_4 : case VAR_5 : case VAR_6 : case VAR_7 : case VAR_8 : case VAR_9 : return false ; default : return true ; } } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; } 
public long METHOD_1 ( int VAR_1 ) { long result = VAR_2 ; for ( int VAR_3 = 0 ; VAR_3 < VAR_1 ; ++ VAR_3 ) { TYPE_1 . METHOD_2 ( VAR_2 , VAR_2 ) ; } return result ; } 
protected void METHOD_1 ( ) throws java.lang.Throwable { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; } finally { super . METHOD_1 ( ) ; } } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 < TYPE_2 < ? extends TYPE_1 > > VAR_1 ) { return new TYPE_4 < TYPE_1 > ( VAR_1 ) ; } 
public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x - y ; return y + VAR_2 ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) throws android.os.RemoteException { } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , boolean VAR_3 ) { return VAR_3 ? ( ( TYPE_1 ) ( new TYPE_4 ( VAR_1 , VAR_2 ) ) ) : ( ( TYPE_1 ) ( new TYPE_5 ( VAR_1 , VAR_2 ) ) ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public long METHOD_1 ( TYPE_1 element , TYPE_2 VAR_1 ) { return element . METHOD_1 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) { throw new TYPE_1 ( ) ; } 
public void METHOD_1 ( ) { if ( ( address ) != 0 ) { try { VAR_1 . METHOD_2 ( address , size ) ; } catch ( TYPE_1 VAR_2 ) { throw new TYPE_2 ( VAR_2 ) ; } address = 0 ; } } 
private java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( this ) ; } 
public void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; } 
public void info ( java.lang.String msg ) { if ( ( TYPE_1 . METHOD_1 ( ) ) < ( VAR_1 ) ) { return ; } log ( TYPE_1 , msg ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object ... args ) { java.lang.System.out.println ( java.lang.String.format ( VAR_1 , args ) ) ; } 
void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( a , a . length , this . VAR_1 ) ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object t , int i ) { return METHOD_1 ( t , i ) ; } 
native boolean METHOD_1 ( int VAR_1 , int VAR_2 , byte [ ] input , byte [ ] output , float [ ] VAR_3 , boolean VAR_4 ) ; 
public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 , STRING_1 ) ; } 
public TYPE_1 call ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_1 ( VAR_2 , VAR_3 ) ; return VAR_1 ; } 
public final java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_2 ( ) ; } return VAR_1 ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 , VAR_3 ) ; } 
public double METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; } 
private TYPE_1 METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) { TYPE_2 w = VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; if ( w != null ) { return w . METHOD_2 ( ) . METHOD_3 ( ) ; } return null ; } 
void METHOD_1 ( boolean VAR_1 ) ; 
protected void METHOD_1 ( int VAR_1 , int type , int arg , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( in , type , arg ) ; } 
public boolean METHOD_1 ( java.lang.Object value ) { for ( TYPE_1 < TYPE_2 > VAR_1 : VAR_2 . values ( ) ) { if ( VAR_1 . METHOD_2 ( value ) ) { return true ; } } return false ; } 
public synchronized boolean METHOD_1 ( ) { throw new TYPE_1 ( ) ; } 
public final TYPE_1 < ? > METHOD_1 ( ) throws TYPE_2 { METHOD_2 ( ) ; return VAR_1 ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { return TYPE_4 . METHOD_2 ( null ) ; } 
native boolean METHOD_1 ( int VAR_1 , int VAR_2 , byte [ ] input , byte [ ] output , float [ ] VAR_3 , int VAR_4 ) ; 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , VAR_1 , true ) ; args.out = TYPE_3 . METHOD_3 ( args . in , t ) ; } 
public void METHOD_1 ( ) { VAR_1 = true ; } 
protected TYPE_1 METHOD_1 ( ) { return y ; } 
public void METHOD_1 ( TYPE_1 state ) { try { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , state ) ; } } catch ( android.os.RemoteException VAR_4 ) { } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { while ( ( VAR_1 . METHOD_2 ( ) ) == 0 ) { try { TYPE_2 . METHOD_3 ( INT_1 ) ; } catch ( TYPE_3 e ) { } } } 
boolean METHOD_1 ( ) { boolean ret = false ; TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . METHOD_3 ( ) ) == true ) ) { ret = true ; } return ret ; } 
public final boolean equals ( java.lang.Object VAR_1 ) { return super . equals ( VAR_1 ) ; } 
private static final void METHOD_1 ( java.lang.StringBuilder sb , java.lang.String item , boolean valid , long value ) { sb.append ( item ) . append ( CHAR_1 ) ; if ( valid ) { sb.append ( value ) ; } else { sb.append ( CHAR_2 ) ; } } 
public void METHOD_1 ( ) { try { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; c . METHOD_3 ( null , VAR_1 , STRING_1 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } } 
static java.lang.String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return STRING_1 ; } return VAR_4 . toString ( ) ; } 
public void run ( ) { VAR_1 . METHOD_1 ( 1 , METHOD_2 ( 1 ) ) ; VAR_1 . METHOD_1 ( 2 , METHOD_2 ( 2 ) ) ; VAR_1 . METHOD_3 ( 2 ) ; } 
public void METHOD_1 ( ) { try { TYPE_1 [ ] VAR_1 = new TYPE_1 [ VAR_2 ] ; TYPE_2 VAR_3 = new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } } 
public boolean METHOD_1 ( int id ) { if ( VAR_1 ) { return VAR_2 . METHOD_2 ( ) ; } else { return METHOD_3 ( ( ( STRING_1 + id ) + STRING_2 ) ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 ) ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_1 ( VAR_4 , VAR_5 , VAR_6 ) ; VAR_3 = VAR_2 ; } return VAR_2 ; } 
public void METHOD_1 ( TYPE_1 path ) { VAR_1 . METHOD_2 ( new TYPE_2 ( java.lang.String . METHOD_3 ( VAR_2 ) , VAR_2 ) ) ; VAR_1 . METHOD_4 ( path . METHOD_5 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { try { METHOD_2 ( ) ; } catch ( java.io.IOException e ) { return TYPE_2 . METHOD_3 ( ) ; } } return TYPE_3 . METHOD_4 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; org.mockito.Mockito.verify ( VAR_5 ) . METHOD_4 ( org.mockito.Matchers.eq ( VAR_1 ) ) ; assertEquals ( VAR_2 , true ) ; } 
synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int count , float [ ] d , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 ) ; } 
public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x + y ; return VAR_2 - y ; } 
private static boolean METHOD_1 ( TYPE_1 context ) { return TYPE_2 . METHOD_2 ( context . METHOD_3 ( ) . METHOD_4 ( ) , 0 , 11 , 0 ) ; } 
public static float METHOD_1 ( ) { float a ; float b ; float c ; a = Main . METHOD_2 ( FLOAT_1 ) ; b = Main . METHOD_2 ( FLOAT_2 ) ; c = a % b ; return c ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { assert ( VAR_1 . METHOD_2 ( VAR_2 class ) ) == null ; return METHOD_3 ( METHOD_4 ( VAR_1 ) , VAR_1 , null ) ; } 
static int METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 . METHOD_3 ( ) ; } 
protected void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( fd ) ; } catch ( java.io.IOException VAR_1 ) { } } 
public void METHOD_1 ( ) { synchronized ( this ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; VAR_2 = VAR_3 . METHOD_3 ( ) ; } } METHOD_4 ( ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { assert ( METHOD_2 ( ) ) == ( VAR_3 ) ; return new TYPE_2 ( METHOD_3 ( ) , METHOD_4 ( ) , VAR_1 , METHOD_5 ( ) , METHOD_6 ( ) , METHOD_7 ( ) ) ; } 
private static < TYPE_1 > void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { int length = VAR_1 . length ; assertEquals ( ( STRING_1 + length ) , 0 , length ) ; } 
public TYPE_1 get ( java.lang.String VAR_1 , final TYPE_2 listener ) { return get ( VAR_1 , listener , 0 , 0 , VAR_2 ) ; } 
protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = ! ( VAR_1 instanceof TYPE_2 ) ; if ( VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } return VAR_2 ; } 
private static native void METHOD_1 ( java.lang.Object VAR_1 , long VAR_2 ) ; 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_2 ( mRS , INPUTSIZE ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 0 ) ; } 
private boolean METHOD_1 ( TYPE_1 app , java.lang.String VAR_1 ) { if ( ( VAR_2 ) != null ) { for ( java.lang.String p : VAR_2 ) { if ( VAR_1 . equals ( p ) ) { return true ; } } } return false ; } 
protected final java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ) ) ; return VAR_2 . METHOD_1 ( ) ; } 
final void METHOD_1 ( int VAR_1 ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } } 
public int METHOD_1 ( ) { return VAR_1 ? VAR_2 : 0 ; } 
public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; } 
public static long METHOD_1 ( ) { long VAR_1 = Main . METHOD_2 ( ( - 9 ) ) ; int VAR_2 = Main . METHOD_3 ( 2 ) ; return VAR_1 > > > VAR_2 ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { assert ( this ) != ( VAR_1 ) ; if ( ( this ) == ( VAR_2 ) ) { return VAR_3 ; } return new TYPE_1 ( this ) ; } 
synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int count , java.lang.Object d , int VAR_3 , TYPE_1 VAR_4 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 , VAR_5 ) ; } 
private static boolean METHOD_1 ( TYPE_1 state ) { return ( ( state . state ) == ( VAR_1 ) ) || ( ( state . state ) == ( VAR_2 ) ) ; } 
public void METHOD_1 ( ) { errln ( STRING_1 ) ; } 
public int METHOD_1 ( int context ) throws TYPE_1 { TYPE_2 . METHOD_2 ( context ) ; return super . METHOD_1 ( context ) ; } 
public int METHOD_1 ( java.lang.String name , byte [ ] item ) throws android.os.RemoteException ; 
synchronized boolean METHOD_1 ( java.lang.String address , int state , int VAR_1 ) { VAR_2 . METHOD_1 ( address . METHOD_2 ( ) , state ) ; return true ; } 
public void METHOD_1 ( java.lang.Integer subId ) { VAR_1 . METHOD_2 ( subId ) ; } 
public long METHOD_1 ( ) throws android.os.RemoteException { return this . METHOD_1 ( ) . VAR_1 ; } 
void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) ; 
final byte METHOD_1 ( int offset ) { return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) ; 
public static void METHOD_1 ( TYPE_1 context ) { if ( ( TYPE_2 . METHOD_2 ( context ) ) && ( ( VAR_1 ) != null ) ) { context . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 key = new TYPE_1 ( ) ; assertEquals ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { if ( VAR_2 ) { android.util.Log.d ( VAR_3 . TAG , STRING_1 ) ; } android.content.Intent VAR_4 = new android.content.Intent ( VAR_5 ) ; METHOD_2 ( VAR_4 ) ; if ( VAR_1 ) { METHOD_3 ( ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , false , false ) ; METHOD_3 ( 0 , false , true ) ; } 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 3 , INT_1 , false ) ; args.out = TYPE_3 . METHOD_3 ( VAR_1 , t ) ; } 
protected void METHOD_1 ( ) throws java.lang.Throwable { try { VAR_1 . METHOD_2 ( ) ; } catch ( java.io.IOException e ) { } finally { super . METHOD_1 ( ) ; } } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { TYPE_1 d = new TYPE_1 ( ) ; VAR_3 = VAR_2 ; return d ; } else { return null ; } } 
public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_4 , STRING_5 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( METHOD_2 ( ) ) { TYPE_1 VAR_1 = VAR_2 . METHOD_3 ( null ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; } } 
public int METHOD_1 ( int key ) { if ( VAR_1 ) { METHOD_2 ( ) ; } return TYPE_1 . METHOD_3 ( VAR_2 , 0 , VAR_3 , key ) ; } 
public int METHOD_1 ( java.lang.String path , java.lang.String name , byte [ ] VAR_1 ) throws TYPE_1 ; 
protected void METHOD_1 ( ) { if ( ( mRS ) != null ) { mRS = null ; METHOD_2 ( ) ; } } 
synchronized void METHOD_1 ( int id , int VAR_1 , float VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( false ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( float [ ] d ) { METHOD_2 ( ) ; mRS . METHOD_3 ( ) ; mRS . METHOD_4 ( METHOD_5 ( mRS ) , d ) ; } 
public void METHOD_1 ( int VAR_1 ) { android.util.Log.e ( VAR_2 . TAG , ( STRING_1 + VAR_1 ) ) ; } 
private void run ( TYPE_1 VAR_1 ) throws java.lang.Exception { new TYPE_2 ( VAR_1 ) . METHOD_1 ( VAR_2 ) . METHOD_2 ( VAR_3 class ) . METHOD_2 ( VAR_4 class ) . METHOD_3 ( ) ; } 
public static void METHOD_1 ( TYPE_1 args ) { VAR_1 = 3 ; VAR_2 = 16 ; args.out = ( ( float ) ( TYPE_2 . METHOD_2 ( FLOAT_1 , args . in ) ) ) ; } 
void start ( java.lang.String VAR_1 , java.lang.String VAR_2 ) ; 
public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( java.lang.Integer . METHOD_2 ( VAR_1 ) ) ; } 
public void run ( ) { VAR_1 . METHOD_1 ( this , status ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) { try { return TYPE_3 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( STRING_1 , e ) ; } } 
public void METHOD_1 ( TYPE_1 e ) { METHOD_2 ( e.getMessage ( ) ) ; } 
public static void METHOD_1 ( java.lang.Object [ ] a ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( a ) ; else TYPE_2 . METHOD_1 ( a ) ; } 
static int METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_3 . METHOD_3 ( VAR_4 ) ; } 
public static TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( ) ; } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( TYPE_1 value ) { METHOD_2 ( ) ; return VAR_1 . METHOD_3 ( ( ( TYPE_2 ) ( VAR_2 [ VAR_3 ] ) ) , value ) ; } 
public TYPE_1 < java.lang.String > METHOD_1 ( ) { METHOD_2 ( ) ; } 
public static void METHOD_1 ( short [ ] a ) { TYPE_1 . METHOD_1 ( a ) ; } 
public static int METHOD_1 ( ) { int VAR_1 = Main . METHOD_2 ( 1 ) ; long VAR_2 = Main . METHOD_3 ( INT_1 ) ; return VAR_1 < < VAR_2 ; } 
public void METHOD_1 ( boolean VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; } } catch ( android.os.RemoteException VAR_5 ) { } } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { } 
final void METHOD_1 ( int offset , int value ) { VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) ; } 
public static native void METHOD_1 ( long ret , int VAR_1 , boolean VAR_2 , long VAR_3 , long VAR_4 , long VAR_5 ) ; 
public java.lang.String [ ] METHOD_1 ( java.lang.String VAR_1 ) { try { return VAR_2 . METHOD_1 ( VAR_1 ) ; } catch ( android.os.RemoteException e ) { android.util.Log.w ( VAR_3 . TAG , STRING_1 , e ) ; return null ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . i ( STRING_1 , null ) ; VAR_1 = null ; VAR_2 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_1 = VAR_2 ; if ( VAR_1 == null ) { METHOD_3 ( STRING_2 ) ; return ; } VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; } 
public java.lang.String METHOD_1 ( java.lang.String url ) { throw new TYPE_1 ( ) ; } 
synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) ; } 
public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) == ( Main . METHOD_2 ( ) ) ? INT_2 : INT_3 ; } 
public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg - 0 ; } 
public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_1 ( null ) ; } 
void METHOD_1 ( int index , short value ) { throw new TYPE_1 ( ) ; } 
public boolean METHOD_1 ( ) { return ( VAR_1 ) instanceof TYPE_1 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( 16 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public static byte METHOD_1 ( short value ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( ( byte ) ( ( char ) ( value ) ) ) ; } 
private void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; try { VAR_1 . METHOD_1 ( VAR_2 ) ; } catch ( android.os.RemoteException e ) { throw new TYPE_1 ( STRING_1 , e , VAR_3 ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 , android.bluetooth.BluetoothDevice device ) { log ( ( STRING_1 + device ) ) ; VAR_2 . METHOD_2 ( device , VAR_1 ) ; METHOD_3 ( device , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { try { VAR_3 . METHOD_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; } catch ( android.os.RemoteException ex ) { } } 
public void METHOD_1 ( int i ) { if ( ( i < 0 ) || ( i >= ( VAR_1 ) ) ) { throw new TYPE_1 ( ( STRING_1 + i ) ) ; } VAR_2 = i ; } 
public static java.lang.String toString ( int VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : return STRING_1 ; case VAR_3 : return STRING_2 ; case VAR_4 : return STRING_3 ; default : throw new java.lang.IllegalArgumentException ( ( STRING_4 + VAR_1 ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) ; } 
public native void METHOD_1 ( java.lang.Object VAR_1 , int value ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public void METHOD_1 ( ) { TYPE_1 type = new TYPE_1 ( STRING_1 ) ; assertFalse ( type . METHOD_2 ( ) ) ; assertFalse ( type . METHOD_3 ( ) ) ; assertFalse ( type . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( int response , java.lang.String VAR_1 ) { METHOD_2 ( ( ( ( STRING_1 + ( TYPE_1 . METHOD_3 ( response ) ) ) + STRING_2 ) + VAR_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { this . VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( new TYPE_1 ( STRING_1 , 0 ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 element ) { if ( element == null ) { return TYPE_1 . text ( STRING_1 ) ; } else { return TYPE_3 . METHOD_1 ( element ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . d ( VAR_2 . TAG , STRING_1 ) ; VAR_3 = true ; METHOD_2 ( VAR_4 ) ; } 
public void METHOD_1 ( java.lang.Object value ) { VAR_1 = value ; if ( value instanceof TYPE_1 ) { ( ( TYPE_1 ) ( value ) ) . METHOD_2 ( VAR_2 ) ; } } 
public static native int METHOD_1 ( int i ) ; 
public java.lang.String METHOD_1 ( ) { return name . METHOD_2 ( ) ; } 
public boolean METHOD_1 ( ) { return false ; } 
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; } catch ( java.lang.IllegalArgumentException e ) { } } 
native void METHOD_1 ( int VAR_1 , int VAR_2 ) ; 
static void METHOD_1 ( java.lang.String VAR_1 ) { assert VAR_1 != null ; VAR_2 . log ( VAR_3 , STRING_1 , VAR_1 ) ; } 
public void run ( ) { synchronized ( this ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( ) ; VAR_1 = null ; VAR_2 = VAR_3 . METHOD_2 ( ) ; } } } 
public static java.lang.String METHOD_1 ( TYPE_1 in ) throws java.io.IOException { return TYPE_2 . METHOD_2 ( in ) ; } 
synchronized int METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
public java.lang.String METHOD_1 ( ) { return print ( true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , null ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 e ) { } } 
public void METHOD_1 ( ) throws java.io.IOException { if ( ( TYPE_1 . METHOD_2 ( ) ) == ( this ) ) { TYPE_1 . METHOD_3 ( null ) ; } VAR_1 . METHOD_4 ( ) . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) ) ; assertTrue ( STRING_2 . equals ( VAR_1 . METHOD_2 ( ) ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { throw new TYPE_3 ( ) ; } 
public void METHOD_1 ( ) { s = new TYPE_1 ( STRING_1 ) . METHOD_2 ( STRING_2 ) ; try { s . METHOD_3 ( ) ; fail ( STRING_3 ) ; } catch ( TYPE_2 e ) { } } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( CHAR_1 ) ; if ( VAR_2 < 0 ) { return STRING_1 ; } else { return VAR_1 . METHOD_3 ( 0 , VAR_2 ) ; } } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , int VAR_3 , android.os.Bundle VAR_4 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , new java.io.File ( VAR_2 , STRING_1 ) , false ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) throws android.os.RemoteException { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_5 , VAR_6 , VAR_1 , VAR_2 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 . fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { assertEquals ( VAR_1 . METHOD_2 ( ) , STRING_1 ) ; } 
public static TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 , TYPE_3 VAR_2 , TYPE_4 parent ) throws java.io.IOException { return new TYPE_1 ( TYPE_1 . METHOD_2 ( VAR_1 ) , VAR_2 , parent ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return null ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , boolean append ) throws TYPE_3 { return new TYPE_4 ( VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) , append ) , new TYPE_5 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , 11 , STRING_2 , 3 ) ; } 
public static int METHOD_1 ( int arg1 , int VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } return ( - arg1 ) - VAR_1 ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { int v = VAR_1 . METHOD_2 ( ) . VAR_3 ; return TYPE_1 . METHOD_1 ( VAR_1 , v , VAR_2 , VAR_4 ) ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; Main . METHOD_3 ( ) ; } 
synchronized void METHOD_1 ( int VAR_1 , int VAR_2 , int s ) { METHOD_2 ( ) ; METHOD_3 ( mContext , VAR_1 , VAR_2 , s ) ; } 
public void METHOD_1 ( int VAR_1 , android.os.Message VAR_2 ) throws android.os.RemoteException { synchronized ( VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_5 , VAR_6 , VAR_1 , VAR_2 ) ; } } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 != null ) { return TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_1 ) , METHOD_5 ( ) , false , false ) ; } return null ; } 
public int METHOD_1 ( ) { return ( VAR_1 . METHOD_1 ( ) ) - 2 ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 listener ) { return null ; } 
public static native void METHOD_1 ( int VAR_1 , int VAR_2 ) throws TYPE_1 ; 
public void run ( ) { assert ( VAR_1 ) != 0 : STRING_1 ; METHOD_1 ( ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , android.content.Intent VAR_3 , java.lang.String [ ] VAR_4 , java.lang.String [ ] VAR_5 , java.lang.String [ ] VAR_6 ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; } 
public final TYPE_1 METHOD_1 ( ) { return this . location ; } 
public static TYPE_1 < TYPE_2 > data ( ) { return TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = VAR_1 . METHOD_2 ( ) ; return ( VAR_3 != null ) && ( VAR_2 . equals ( VAR_3 . METHOD_3 ( ) ) ) ; } 
public void METHOD_1 ( int VAR_1 ) { for ( int i = 0 ; i < VAR_1 ; ++ i ) { TYPE_1 . METHOD_2 ( s . value , TYPE_2 . toString ( ) ) ; } } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 type ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = type ; if ( VAR_4 . METHOD_1 ( VAR_1 ) ) { METHOD_2 ( ) ; } } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 x = VAR_1 [ VAR_2 ] ; if ( x == null ) throw new TYPE_2 ( ) ; return x ; } 
void METHOD_1 ( int id ) { if ( ( mContext ) != 0 ) { METHOD_2 ( mContext , id ) ; } } 
private TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ( ( VAR_1 . METHOD_4 ( ) ) - 1 ) , ( ( VAR_1 . METHOD_5 ( ) ) + 1 ) ) ) ; } 
static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 m ) { TYPE_1 r = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) ; return r ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 element ) { VAR_1 . METHOD_1 ( element ) ; if ( element . METHOD_2 ( ) ) { VAR_2 = true ; } } 
public static native void METHOD_1 ( int VAR_1 ) throws TYPE_1 ; 
public void METHOD_1 ( int options ) throws java.lang.Exception { METHOD_2 ( STRING_1 , options ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return ( VAR_1 + ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) ) ) ) + VAR_2 ; } 
public TYPE_1 METHOD_1 ( ) { mRS . METHOD_2 ( ) ; int id = mRS . METHOD_3 ( VAR_1 , VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( id , mRS ) ; VAR_4 = VAR_1 ; VAR_5 = VAR_6 ; return VAR_3 ; } 
public void run ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 . METHOD_1 ( METHOD_2 ( ) ) ) ) ; VAR_2 . METHOD_3 ( METHOD_4 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 ) { VAR_2 = METHOD_2 ( VAR_2 , VAR_1 ) ; return VAR_3 . get ( VAR_2 ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( false ) ) ; return super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { int index = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( index != ( - 1 ) ) { VAR_2 . METHOD_3 ( index ) ; } } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( this ) ) { for ( TYPE_2 VAR_2 : METHOD_3 ( true ) ) { VAR_1 . METHOD_4 ( VAR_2 ) ; } } VAR_1 . METHOD_5 ( this ) ; } 
public void METHOD_1 ( ) { try { listener . METHOD_2 ( ) ; } catch ( android.os.RemoteException e ) { METHOD_3 ( uid , VAR_1 ) ; } } 
protected void METHOD_1 ( int VAR_1 , int type , int arg , int size ) { for ( int i = 0 ; i < size ; i ++ ) { in . METHOD_2 ( ) ; } } 
private int METHOD_1 ( int [ ] input ) { int VAR_1 = 0 ; for ( int VAR_2 = 0 ; VAR_2 < ( input . length ) ; ++ VAR_2 ) VAR_1 += input [ VAR_2 ] ; return VAR_1 ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ; } 
public static long METHOD_1 ( ) { long VAR_1 = Main . METHOD_2 ( INT_1 ) ; int VAR_2 = Main . METHOD_3 ( 3 ) ; return VAR_1 & VAR_2 ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { assertFalse ( STRING_1 . equals ( VAR_1 . METHOD_2 ( ) ) ) ; assertEquals ( STRING_1 , VAR_2 . METHOD_2 ( ) ) ; } 
protected void METHOD_1 ( android.os.Bundle VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this ) ; } 
public void METHOD_1 ( com.android.jack.ir.ast.JMethod type ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) ; super . METHOD_1 ( ) ; } 
public static java.lang.String METHOD_1 ( byte [ ] VAR_1 ) { return TYPE_1 . METHOD_1 ( VAR_1 , 0 , VAR_1 . length ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 element ) { TYPE_4 VAR_1 = TYPE_5 . METHOD_2 ( element ) ; return VAR_2 . METHOD_3 ( VAR_1 ) ? VAR_2 . get ( VAR_1 ) . METHOD_1 ( ) : VAR_3 < TYPE_2 > of ( ) ; } 
static boolean METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 listener ) { return super . METHOD_1 ( VAR_1 , listener ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , true ) ; METHOD_2 ( true , false ) ; METHOD_2 ( false , true ) ; if ( VAR_1 ) { METHOD_2 ( false , false ) ; } } 
public boolean METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( VAR_1 ) ; } 
public TYPE_1 < java.io.File > METHOD_1 ( ) { return VAR_1 . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( METHOD_3 ( ) . METHOD_5 ( ) ) ; } 
public final java.lang.String METHOD_1 ( ) { return ( VAR_1 ) != null ? VAR_1 : VAR_2 . METHOD_2 ( ) ; } 
public static long [ ] METHOD_1 ( long [ ] VAR_1 , int VAR_2 ) { if ( VAR_2 < 0 ) { throw new TYPE_1 ( ) ; } return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( true , null ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 e ) { } } 
public TYPE_1 [ ] METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { throw new TYPE_2 ( STRING_1 ) ; } return new TYPE_1 [ ] { new TYPE_3 ( VAR_1 , VAR_2 ) } ; } 
public native float METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
protected void METHOD_1 ( TYPE_1 f ) { if ( VAR_1 . METHOD_2 ( f ) ) { METHOD_1 ( f . METHOD_3 ( ) ) ; METHOD_1 ( f . METHOD_4 ( ) ) ; METHOD_5 ( f ) ; VAR_1 . METHOD_6 ( f ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { if ( ( VAR_2 ) == null ) { return false ; } if ( VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_3 ) ; } else { return VAR_2 . METHOD_2 ( null ) ; } } 
public void run ( ) { try { METHOD_1 ( ) ; } catch ( java.lang.Throwable t ) { try { t . METHOD_2 ( VAR_1 ) ; } catch ( java.lang.Throwable VAR_2 ) { } TYPE_1 . METHOD_3 ( 1 ) ; } } 
public void METHOD_1 ( int VAR_1 , int VAR_2 , java.lang.String format , java.lang.String VAR_3 , boolean VAR_4 , byte [ ] VAR_5 ) { METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 , format , VAR_3 , VAR_4 , VAR_5 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { } 
public TYPE_1 METHOD_1 ( java.lang.String input ) throws TYPE_2 { try { return TYPE_1 . METHOD_2 ( input ) ; } catch ( TYPE_3 e ) { throw new TYPE_2 ( e.getMessage ( ) ) ; } } 
boolean run ( java.lang.String VAR_1 , TYPE_1 VAR_2 , java.lang.String [ ] args ) ; 
private static synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { android.util.Log.d ( TYPE_1 . TAG , ( STRING_1 + ( VAR_3 ) ) ) ; } VAR_3 = VAR_1 ; } 
public void run ( ) { METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( context ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { byte [ ] VAR_1 = METHOD_2 ( ) . get ( 2 , VAR_2 ) ; if ( ( VAR_1 == null ) || ( ( VAR_1 . length ) == 0 ) ) { fail ( STRING_1 ) ; } } 
public void METHOD_1 ( long VAR_1 ) { VAR_2 = VAR_1 ; } 
public void run ( ) { synchronized ( this ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_1 ( ) ; } this . VAR_1 = VAR_1 ; } } 
public TYPE_1 METHOD_1 ( int VAR_1 ) throws android.os.RemoteException { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ; } 
public static int METHOD_1 ( boolean x ) { return x != false ? INT_1 : INT_2 ; } 
private TYPE_1 METHOD_1 ( int [ ] [ ] VAR_1 , int [ ] [ ] VAR_2 ) throws java.lang.Exception { return METHOD_1 ( VAR_1 , VAR_2 , TYPE_2 . METHOD_2 ( ) ) ; } 
public synchronized void METHOD_1 ( java.lang.String VAR_1 ) { } 
public void METHOD_1 ( long VAR_1 ) { this . VAR_1 = VAR_2 ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; Main . METHOD_3 ( new TYPE_2 ( ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; if ( VAR_2 == null ) { METHOD_2 ( STRING_1 ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { if ( VAR_1 ) VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_1 ( false ) ; } 
public void METHOD_1 ( int VAR_1 ) { METHOD_2 ( VAR_1 , 0 , 0 , TYPE_1 . METHOD_3 ( ) ) ; } 
public static float METHOD_1 ( float arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg / FLOAT_1 ; } 
private void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { try { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; } catch ( android.os.RemoteException e ) { } } 
synchronized long METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_2 VAR_3 , TYPE_3 VAR_4 , TYPE_2 VAR_5 , TYPE_4 callback , TYPE_5 VAR_6 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , 0 , callback , VAR_6 ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) ; METHOD_2 ( INT_1 , 4 ) ; } 
void METHOD_1 ( TYPE_1 key ) { int VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( key ) ) ; METHOD_4 ( VAR_1 ) . METHOD_1 ( key , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( 5 ) ; c . get ( null ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public static long METHOD_1 ( long arg1 , long VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } long VAR_3 = - VAR_1 ; return ( arg1 + VAR_3 ) | ( arg1 + VAR_3 ) ; } 
public static native byte [ ] [ ] METHOD_1 ( int VAR_1 , int VAR_2 ) ; 
public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) != ( Main . METHOD_2 ( ) ) ? INT_2 : INT_3 ; } 
public final TYPE_1 METHOD_1 ( TYPE_2 uri ) { TYPE_3 provider = METHOD_2 ( uri ) ; if ( provider != null ) { return new TYPE_1 ( this , provider ) ; } return null ; } 
public static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 fd , int VAR_2 , int flags ) { TYPE_2 . METHOD_1 ( VAR_1 , fd , VAR_2 , flags ) ; } 
public int [ ] METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
public static int METHOD_1 ( int arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg * 9 ; } 
private void METHOD_1 ( java.util.List < java.lang.Throwable > VAR_1 ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_1 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 class . METHOD_2 ( ) . METHOD_3 ( true ) ; TYPE_2 . METHOD_4 ( new TYPE_3 ( ) . build ( ) ) ; } 
public synchronized void METHOD_1 ( boolean VAR_1 ) { boolean VAR_2 = METHOD_2 ( true ) ; VAR_3 = VAR_1 ; if ( VAR_2 != ( METHOD_2 ( true ) ) ) { METHOD_3 ( ( ! VAR_2 ) , VAR_4 ) ; } } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( 0 , VAR_2 , 1 , VAR_3 ) ; VAR_1 . METHOD_2 ( 0 , VAR_4 , 2 , VAR_5 ) ; return true ; } 
public static long METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; return TYPE_1 . METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } } 
public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String value ) { METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( VAR_1 , value , true ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 != null ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ; if ( ( ( VAR_2 ) == ( VAR_3 ) ) && ( VAR_4 ) ) { VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } if ( ( VAR_2 ) != null ) { throw new TYPE_2 ( STRING_2 ) ; } VAR_2 = new TYPE_3 ( VAR_1 ) ; } 
public boolean METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; try { METHOD_3 ( ) . METHOD_1 ( VAR_1 ) ; return true ; } catch ( TYPE_1 e ) { return false ; } } 
private final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 == null ) { return null ; } int VAR_2 = METHOD_2 ( VAR_1 ) ; return VAR_2 >= 0 ? VAR_3 . get ( VAR_2 ) : null ; } 
private TYPE_1 METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( ) ) ; assertEquals ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ; } 
public static void METHOD_1 ( long VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 e ) { VAR_2 . println ( STRING_1 ) ; } } 
public native boolean METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
private boolean METHOD_1 ( char c ) { return ( ( TYPE_1 . METHOD_2 ( c ) ) || ( METHOD_3 ( c ) ) ) && ( c != CHAR_1 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 req , java.lang.String VAR_1 , java.lang.String path ) { if ( TYPE_3 . METHOD_2 ( path ) ) { return null ; } return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( path ) ; } 
public TYPE_1 create ( ) { return new TYPE_1 ( this , null ) ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return this . VAR_1 ; } 
private boolean METHOD_1 ( TYPE_1 cfg ) { return VAR_1 . METHOD_2 ( ) ; } 
protected java.lang.String METHOD_1 ( ) { return VAR_1 . get ( ) ; } 
public TYPE_1 get ( final TYPE_2 . Change change , final TYPE_2 . PatchSet patchSet ) { return get ( change , patchSet , VAR_1 ) ; } 
public TYPE_1 . Result METHOD_1 ( TYPE_2 git , java.lang.String ref ) throws TYPE_3 { TYPE_4 . METHOD_1 ( git , VAR_1 ) ; return METHOD_2 ( git , ref ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( null , new TYPE_2 ( VAR_2 ) , null , null ) ; } 
protected void METHOD_1 ( TYPE_1 ctx ) throws TYPE_2 { VAR_1 . METHOD_2 ( METHOD_3 ( VAR_2 ) , VAR_2 ) ; } 
TYPE_1 create ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > schema , java.lang.String base ) ; 
private static < TYPE_1 , TYPE_2 extends TYPE_3 . Key < ? > > TYPE_4 < TYPE_1 , com.google.gwtorm.server.OrmException > METHOD_1 ( ) { return TYPE_5 . METHOD_2 ( null ) ; } 
< TYPE_1 > TYPE_2 < TYPE_3 , TYPE_1 > METHOD_1 ( TYPE_3 VAR_1 ) throws TYPE_4 ; 
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . projects ( ) . name ( STRING_1 ) . create ( ) ; } 
public TYPE_1 delete ( java.lang.String VAR_1 ) throws java.io.IOException { return METHOD_1 ( TYPE_2 . METHOD_2 ( ( ( ( url ) + STRING_1 ) + VAR_1 ) ) ) ; METHOD_3 ( INT_1 [ VAR_2 ] ) ; } 
public final native void METHOD_1 ( java.lang.String value ) ; 
protected TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { return VAR_1 . name ( ) ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { key = new TYPE_1 . Key ( ( STRING_1 + id ) ) ; VAR_1 = new TYPE_2 ( id , 0 , false , null , STRING_2 ) ; } 
void METHOD_1 ( TYPE_1 e ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( VAR_2 , changeId ) ; } VAR_1 . METHOD_2 ( ) ; } 
public void onSuccess ( final TYPE_1 result ) { VAR_1 = result . config ; if ( ( result . account ) != null ) { VAR_2 = result . account ; TYPE_2 . METHOD_1 ( ) ; } METHOD_2 ( VAR_3 ) ; } 
public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 class ) ; TYPE_2 . METHOD_3 ( new TYPE_3 ( ) ) ; } 
public void close ( ) throws java.io.IOException { rw . close ( ) ; repo . close ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . delete ( METHOD_2 ( ) ) ; org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 , com.google.gerrit.reviewdb.client.Change . Status status ) { return TYPE_1 . METHOD_2 ( ( ( ( TYPE_1 . METHOD_3 ( STRING_1 , VAR_1 ) ) + STRING_2 ) + ( TYPE_1 . status ( status ) ) ) , VAR_2 ) ; } 
public TYPE_1 apply ( TYPE_2 rsrc , TYPE_3 input ) { com.google.gerrit.reviewdb.client.Project.NameKey project = rsrc . METHOD_1 ( ) ; if ( VAR_1 ) { return METHOD_2 ( project , input ) ; } else { return METHOD_3 ( project , input ) ; } } 
private TYPE_1 METHOD_1 ( java.lang.String err , java.lang.Exception e ) { if ( VAR_1 ) { VAR_2 . error ( err , e ) ; return TYPE_2 . METHOD_2 ( ) ; } else { return TYPE_2 . METHOD_3 ( err ) ; } } 
public void index ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { for ( TYPE_1 < ? , com.google.gerrit.server.query.change.ChangeData > i : METHOD_1 ( ) ) { i . METHOD_2 ( cd ) ; } METHOD_3 ( cd ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( java.lang.String err ) { if ( VAR_1 ) { VAR_2 . error ( err ) ; return TYPE_2 . METHOD_2 ( ) ; } else { return TYPE_2 . METHOD_3 ( err ) ; } } 
public void METHOD_1 ( ) { VAR_1 . close ( ) ; } 
public void onSuccess ( TYPE_1 result ) { VAR_1 = true ; if ( VAR_2 != null ) { VAR_2 . onSuccess ( result ) ; } METHOD_1 ( ) ; } 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( change . getStatus ( ) . METHOD_1 ( ) ) { change . METHOD_2 ( result . info ) ; change . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( change ) ; } return change ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { try ( TYPE_1 VAR_2 = METHOD_2 ( METHOD_3 ( VAR_1 ) ) ) { VAR_2 . METHOD_4 ( ) ; } } 
public static void METHOD_1 ( int id , java.lang.String m , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . METHOD_2 ( id ) . put ( m , VAR_1 ) ; } 
public void METHOD_1 ( ) { install ( VAR_1 . METHOD_2 ( VAR_2 class ) ) ; bind ( VAR_3 class ) . METHOD_3 ( VAR_4 ) ; install ( new TYPE_1 ( ) ) ; factory ( VAR_5 . Factory class ) ; } 
public TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( METHOD_3 ( ) ) . METHOD_4 ( METHOD_4 ( ) ) . METHOD_5 ( METHOD_5 ( ) ) ; } 
public java.lang.String METHOD_1 ( final int i ) { return METHOD_2 ( i , ( i + 1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; java.lang.String VAR_1 = STRING_1 ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_6 ( ) ; } 
public final native void METHOD_1 ( java.lang.String b ) ; 
public TYPE_1 METHOD_1 ( java.lang.String path ) { this . path = TYPE_2 . METHOD_2 ( path ) ; return this ; } 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) ; 
private TYPE_1 METHOD_1 ( final TYPE_2 . PatchSetApproval VAR_1 ) { if ( VAR_1 != null ) { return VAR_2 . create ( VAR_1 . getAccountId ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; } return VAR_3 ; } 
private static void METHOD_1 ( final TYPE_1 r , final TYPE_2 . NameKey branch ) { TYPE_3 . METHOD_2 ( r , STRING_1 , branch . get ( ) ) ; } 
private boolean METHOD_1 ( java.util.Set < java.lang.String > VAR_1 ) { return ( user . METHOD_2 ( ) ) || ( METHOD_3 ( VAR_2 , VAR_1 ) ) ; } 
protected TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change c , TYPE_2 user ) throws java.lang.Exception { TYPE_1 update = TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , c , VAR_4 , user ) ; return update ; } 
public void METHOD_1 ( final TYPE_1 . Change change ) { this . change = change ; this . currentPatchSetId = change . currentPatchSetId ( ) ; } 
public static void get ( com.google.gerrit.reviewdb.client.Project.NameKey name , TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . METHOD_1 ( name , VAR_1 ) ; } 
final native void METHOD_1 ( java.lang.String t ) ; 
private static void METHOD_1 ( java.lang.String ... args ) throws java.lang.Exception { org.junit.Assert.assertEquals ( 0 , TYPE_1 . METHOD_2 ( args ) ) ; } 
public void onSuccess ( TYPE_1 value ) { if ( VAR_1 ) { return ; } this . result = value ; VAR_2 . METHOD_1 ( this ) ; this . METHOD_2 ( ) ; } 
public void onSuccess ( TYPE_1 . ChangeInfo info ) { info . METHOD_1 ( ) ; METHOD_2 ( info , null ) ; } 
public void METHOD_1 ( final com.google.gerrit.reviewdb.client.Change . Id changeId ) { this . changeId = changeId ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . get ( STRING_1 ) ; org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) ; } 
java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.PatchSet patchSet ) throws TYPE_2 { return METHOD_1 ( change , patchSet , null ) ; } 
protected void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . METHOD_2 ( METHOD_3 ( ) , false ) ; TYPE_3 . display ( METHOD_4 ( ) ) ; TYPE_4 . METHOD_5 ( event ) ; } 
TYPE_1 create ( TYPE_2 VAR_1 ) ; 
protected void run ( ) { VAR_1 . METHOD_1 ( ) ; } 
void METHOD_1 ( TYPE_1 . Id project , TYPE_2 < java.util.List < TYPE_3 . Branch > > VAR_1 ) ; 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id changeId , com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { java.lang.StringBuilder r = TYPE_1 . METHOD_2 ( VAR_2 , changeId . get ( ) ) ; r . append ( VAR_1 . get ( ) ) ; return r . toString ( ) ; } 
private TYPE_1 . ProjectConfig METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true ) ; } 
private java.util.List < TYPE_1 > events ( TYPE_1 ... VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( final java.lang.String branch ) { this . branch = TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( branch ) ) ; return this ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; } 
public static final void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_1 ( STRING_1 , VAR_1 , null ) ; } 
public static TYPE_1 assertThat ( TYPE_2 path ) { return com.google.common.truth.Truth . METHOD_1 ( VAR_1 ) . METHOD_2 ( path ) ; } 
public com.google.gerrit.reviewdb.client.Account METHOD_1 ( ) { return VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo , java.lang.String branch ) throws java.lang.Exception { return METHOD_2 ( repo , null , null , branch , null , null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . METHOD_2 ( STRING_1 ) ; org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) ) ; } 
private TYPE_1 < ? > METHOD_1 ( ) throws TYPE_2 . OrmException { try { return TYPE_1 . METHOD_2 ( VAR_1 , false , VAR_2 ) ; } catch ( TYPE_3 err ) { throw new TYPE_2 . OrmException ( STRING_1 , err ) ; } } 
public TYPE_1 apply ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; } 
public TYPE_1 METHOD_1 ( final TYPE_2 key ) throws TYPE_3 , java.io.IOException { final org.eclipse.jgit.lib.Repository repo = VAR_1 . METHOD_2 ( VAR_2 ) ; try { return METHOD_3 ( key , repo ) ; } finally { repo . close ( ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_2 account , com.google.gerrit.reviewdb.client.Change . Id changeId ) throws java.lang.Exception { try ( org.eclipse.jgit.lib.Repository repo = VAR_1 . METHOD_2 ( VAR_2 ) ) { return repo . METHOD_3 ( TYPE_3 . METHOD_4 ( account . id , changeId ) ) ; } } 
public void METHOD_1 ( final TYPE_1 s ) { VAR_1 = s . METHOD_2 ( ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 ... args ) { return new TYPE_1 ( ( ( ( STRING_1 + ( changeId ) ) + STRING_2 ) + ( java.lang.String.format ( VAR_1 , args ) ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . get ( key . METHOD_2 ( ) , project ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 . PatchSetApproval VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_2 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( true ) ; add ( VAR_1 ) ; } 
public TYPE_1 apply ( TYPE_2 rsrc ) { org.eclipse.jgit.revwalk.RevCommit c = rsrc . METHOD_1 ( ) ; TYPE_1 info = TYPE_3 . METHOD_2 ( c ) ; return info ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ; } 
protected static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) ; } 
public static void METHOD_1 ( TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > db , TYPE_2 < com.google.gerrit.server.query.change.ChangeData > changes ) throws com.google.gwtorm.server.OrmException { for ( com.google.gerrit.server.query.change.ChangeData cd : changes ) { cd . METHOD_2 ( ) ; } } 
TYPE_1 id ( java.lang.String VAR_1 ) throws TYPE_2 ; 
private static java.lang.String METHOD_1 ( java.lang.String name ) { TYPE_1 m = TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( m . METHOD_4 ( name ) , STRING_2 , name ) ; return name ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_1 , cfg ) ; } 
void METHOD_1 ( boolean r ) { VAR_1 . METHOD_2 ( r , true ) ; } 
public TYPE_1 METHOD_1 ( ) { this . VAR_1 = true ; return this ; } 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( VAR_1 . getParentKey ( ) ) ) ; } 
private java.lang.String METHOD_1 ( ) throws java.io.IOException , TYPE_1 { TYPE_2 VAR_1 = VAR_2 . create ( db , user . METHOD_2 ( ) ) ; return VAR_1 . to ( git , STRING_1 ) . getChangeId ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 cfg , TYPE_3 VAR_1 , TYPE_4 VAR_2 , TYPE_5 VAR_3 ) throws java.io.IOException { return new TYPE_1 ( cfg , VAR_3 , VAR_1 , VAR_2 , TYPE_6 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { file = VAR_1 ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . create ( 1 , 0 ) , VAR_1 . METHOD_3 ( INT_1 ) ) ; } 
protected void METHOD_1 ( ) { if ( VAR_1 ) { super . METHOD_2 ( STRING_1 ) ; VAR_1 = false ; if ( ( METHOD_3 ( ) ) != null ) { METHOD_4 ( METHOD_3 ( ) ) ; } } } 
public TYPE_1 < com.google.gerrit.reviewdb.client.Project.NameKey > METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; METHOD_3 ( VAR_2 ) ; return java.util.Collections . METHOD_4 ( VAR_4 ) ; } finally { VAR_1 . METHOD_5 ( ) ; } } 
static TYPE_1 error ( final TYPE_2 s ) { final TYPE_1 r = new TYPE_1 ( org.eclipse.jgit.lib.ObjectId . METHOD_1 ( ) ) ; VAR_1 = s ; return r ; } 
private static void METHOD_1 ( TYPE_1 config , TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_4 . sshd ( config , VAR_1 ) ; TYPE_4 . METHOD_2 ( config , VAR_1 ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; new TYPE_2 ( VAR_1 . getMessage ( ) ) . METHOD_3 ( ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 . values ( ) ; } 
public static TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 ) { return TYPE_2 . change ( id ) . view ( STRING_1 ) . id ( VAR_1 ) ; } 
private PatchSet . Id METHOD_1 ( TYPE_1 c ) throws com.google.gwtorm.server.OrmException { return TYPE_2 . METHOD_2 ( db . changes ( ) . METHOD_3 ( new com.google.gerrit.reviewdb.client.Change . Key ( c . getChangeId ( ) ) ) ) . currentPatchSetId ( ) ; } 
private void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( event ) ) ; } 
public boolean METHOD_1 ( final TYPE_1 . ReviewDb db ) throws TYPE_2 . OrmException { return ( ( ( change . getStatus ( ) ) == ( VAR_1 ) ) && ( METHOD_2 ( ) ) ) && ( METHOD_3 ( db ) ) ; } 
public java.lang.String apply ( TYPE_1 in ) { return in . getChange ( ) . getKey ( ) . METHOD_1 ( ) ; } 
private static void METHOD_1 ( java.lang.String ref , TYPE_1 u ) { METHOD_2 ( ( STRING_1 + ref ) , u . METHOD_3 ( ref ) . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 ) throws TYPE_1 , com.google.gwtorm.server.OrmException , java.io.IOException { try { VAR_2 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 e ) { throw new TYPE_1 ( e . getMessage ( ) ) ; } } 
private void METHOD_1 ( TYPE_1 req ) throws java.lang.Exception { TYPE_2 res = new TYPE_2 ( ) ; servlet . METHOD_2 ( req , res ) ; assertEquals ( VAR_1 , res . getStatus ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; } 
private static boolean METHOD_1 ( TYPE_1 result , TYPE_2 < TYPE_3 . ReceiveCommand > commands ) { if ( TYPE_4 . METHOD_2 ( commands ) ) { return result . METHOD_3 ( ) ; } else { return result . METHOD_4 ( ) ; } } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , project , STRING_1 , true , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ( ( long ) ( 0 ) ) ) ; VAR_3 . METHOD_1 ( ( ( long ) ( 1 ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , null ) ; assertEquals ( STRING_2 , VAR_2 ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( STRING_2 , null , STRING_3 ) ) ; } 
private static java.lang.String status ( com.google.gerrit.reviewdb.client.Change . Status status ) { switch ( status ) { case VAR_1 : return STRING_1 ; case VAR_2 : return STRING_2 ; case VAR_3 : case VAR_4 : default : return STRING_3 ; } } 
final native void METHOD_1 ( java.lang.String m ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 res = METHOD_3 ( STRING_1 ) ; org.junit.Assert.assertEquals ( STRING_2 , res . METHOD_4 ( ) ) ; } 
public java.util.List < TYPE_1 > apply ( TYPE_2 rsrc ) throws TYPE_3 , com.google.gwtorm.server.OrmException , java.io.IOException { return VAR_1 . METHOD_1 ( this , rsrc . METHOD_2 ( ) , METHOD_3 ( rsrc ) ) ; } 
private boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_1 ( VAR_1 , this . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
private boolean METHOD_1 ( ) { return ( ( VAR_1 . METHOD_2 ( ) . contains ( VAR_2 ) ) || ( VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ) || ( VAR_1 . METHOD_2 ( ) . contains ( VAR_4 ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 . Id VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { return METHOD_3 ( VAR_2 . METHOD_4 ( ) . METHOD_1 ( ) , VAR_1 ) ; } else { return java.util.Collections . METHOD_5 ( ) ; } } 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Change change , java.lang.String path ) ; 
protected abstract void run ( final java.lang.String [ ] args ) throws TYPE_1 , java.io.IOException ; 
public java.util.List < java.lang.String > METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.PatchSet ps = METHOD_2 ( ) ; if ( ps == null ) { return null ; } return METHOD_3 ( VAR_1 ) ; } 
private static TYPE_1 METHOD_1 ( final TYPE_2 cfg ) { return TYPE_3 . METHOD_2 ( cfg , STRING_1 , null , STRING_2 , VAR_1 ) ; } 
public void METHOD_1 ( final TYPE_1 event ) { switch ( event . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( ) ; break ; case VAR_2 : VAR_3 . METHOD_4 ( STRING_1 ) ; VAR_3 . METHOD_5 ( false ) ; break ; } } 
TYPE_1 create ( TYPE_2 notes , com.google.gerrit.reviewdb.client.Account.Id VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 , TYPE_5 < java.lang.String > VAR_4 ) ; 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_2 < TYPE_3 > VAR_3 ) { TYPE_4 . revision ( id , STRING_1 ) . id ( VAR_1 ) . put ( VAR_2 , VAR_3 ) ; } 
public synchronized TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_2 . get ( VAR_1 ) ) ; } 
abstract TYPE_1 id ( java.lang.String VAR_1 ) ; 
boolean METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { return METHOD_2 ( VAR_1 , VAR_2 , false ) ; } 
protected java.lang.String getRefName ( ) { return STRING_1 ; } 
public TYPE_1 METHOD_1 ( final java.lang.String t ) { METHOD_2 ( VAR_1 ) ; TYPE_2 error ; TYPE_3 . not VAR_2 ; TYPE_3 . line VAR_3 ; VAR_4 . METHOD_1 ( t ) ; return this ; } 
protected void METHOD_1 ( final boolean on ) { for ( TYPE_1 w : METHOD_2 ( ) ) { if ( w instanceof TYPE_2 ) { ( ( TYPE_2 ) ( w ) ) . METHOD_3 ( on ) ; } } } 
private void METHOD_1 ( TYPE_1 . HttpServletResponse res , TYPE_2 type ) { res . METHOD_2 ( VAR_1 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } 
protected void set ( int VAR_1 ) { METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; } 
public TYPE_1 METHOD_1 ( ) { return user ; } 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData VAR_1 ) throws com.google.gwtorm.server.OrmException { return TYPE_1 . METHOD_2 ( VAR_1 ) . contains ( getValue ( ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String changeId = METHOD_2 ( ) . getChangeId ( ) ; java.util.List < TYPE_1 > reviewers = METHOD_3 ( changeId , STRING_1 , INT_1 ) ; com.google.common.truth.Truth.assertThat ( reviewers ) . METHOD_4 ( 2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; VAR_1 = STRING_1 ; TYPE_2 r = VAR_2 . put ( STRING_2 , in ) ; org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_2 ( ) ) ; } 
public boolean METHOD_1 ( org.eclipse.jgit.lib.ObjectId commit , TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { return VAR_4 . METHOD_1 ( new TYPE_3 ( commit , TYPE_4 . METHOD_2 ( VAR_1 ) , VAR_2 , VAR_3 , null , null , null ) ) ; } 
public void METHOD_1 ( final TYPE_1 . Id VAR_1 , final TYPE_2 < TYPE_3 > VAR_2 ) { VAR_3 . create ( VAR_1 ) . to ( VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = null ; if ( VAR_1 != null ) { VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; } return VAR_2 ; } 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 , int changeId , TYPE_1 VAR_2 , int VAR_3 , java.lang.String VAR_4 ) { return ( TYPE_2 . METHOD_1 ( VAR_1 , changeId , VAR_2 , VAR_3 , VAR_4 ) ) + STRING_1 ; } 
private com.google.gerrit.reviewdb.client.Change METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( project , VAR_1 ) ; } 
public void delete ( int id ) throws java.io.IOException { java.lang.String VAR_1 = TYPE_1 . toString ( id ) ; delete ( VAR_1 , VAR_2 ) ; delete ( VAR_1 , VAR_3 ) ; } 
public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( ) . METHOD_1 ( ) ; return VAR_1 != null ? new TYPE_1 ( VAR_1 ) : null ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { try { return VAR_2 . get ( VAR_1 ) ; } catch ( TYPE_3 e ) { VAR_3 . METHOD_2 ( ( STRING_1 + VAR_1 ) , e ) ; return null ; } } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( 0 , 0 ) ; message . METHOD_3 ( true ) ; } 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 in = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . change ( id ) . view ( STRING_1 ) . METHOD_3 ( in , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( TYPE_3 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) ) ; } 
private void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public TYPE_2 get ( ) { return TYPE_3 . METHOD_3 ( ) . VAR_2 ; } } ) . in ( VAR_3 ) ; } 
public TYPE_1 projects ( ) { return projects . get ( ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String name ) { return VAR_1 . METHOD_2 ( name ) ; } 
public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_3 ) ; METHOD_3 ( STRING_4 ) ; } catch ( TYPE_2 VAR_1 ) { } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; in . name = STRING_1 ; VAR_1 = STRING_2 ; METHOD_2 ( in , VAR_2 class ) ; } 
public int METHOD_1 ( ) { return ( ( VAR_1 . METHOD_1 ( ) ) * INT_1 ) + ( VAR_2 . METHOD_1 ( ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = METHOD_2 ( VAR_4 ) ; VAR_5 = VAR_6 ; return VAR_2 ; } 
public void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; factory ( VAR_2 . Factory class ) ; bind ( VAR_3 class ) . METHOD_2 ( user ) ; bind ( VAR_4 class ) . METHOD_3 ( VAR_5 ) ; } 
private static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > project ( com.google.gerrit.reviewdb.client.Project.NameKey projectName ) { return new TYPE_2 ( projectName . get ( ) ) ; } 
public void METHOD_1 ( java.lang.String sql ) throws TYPE_1 . OrmException { try { VAR_1 . METHOD_1 ( sql ) ; } catch ( TYPE_2 e ) { throw new TYPE_1 . OrmException ( ( STRING_1 + sql ) , e ) ; } } 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( e . getValue ( ) ) ; view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; schema = new TYPE_1 ( VAR_1 class ) ; VAR_2 = schema . METHOD_2 ( STRING_1 ) ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 , int VAR_2 ) throws java.io.IOException , TYPE_1 { try ( TYPE_2 VAR_3 = METHOD_2 ( VAR_1 ) ) { if ( VAR_3 . METHOD_1 ( VAR_2 ) ) { commit ( VAR_3 ) ; } } } 
public TYPE_1 notes ( ) throws com.google.gwtorm.server.OrmException { if ( ( notes ) == null ) { notes = VAR_1 . create ( db , change ( ) ) ; } return notes ; } 
protected static java.lang.String METHOD_1 ( final int VAR_1 ) { if ( VAR_1 < INT_1 ) { return STRING_1 + VAR_1 ; } else { return java.lang.String . METHOD_2 ( VAR_1 ) ; } } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; install ( new TYPE_1 ( ) ) ; install ( new TYPE_1 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 req , TYPE_3 . HttpServletResponse res , java.lang.String VAR_1 ) throws java.io.IOException { METHOD_2 ( res , VAR_1 ) ; return TYPE_4 . METHOD_3 ( req , res ) ; } 
public final void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . OrmException { METHOD_2 ( VAR_1 , null ) ; } 
public Project . NameKey METHOD_1 ( ) { return new com.google.gerrit.reviewdb.client.Project.NameKey ( change . project ) ; } 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
private < TYPE_1 extends TYPE_2 > void METHOD_1 ( TYPE_3 < TYPE_1 > e ) { VAR_1 = this ; TYPE_4 . METHOD_1 ( e ) ; } 
private void METHOD_1 ( TYPE_1 req , TYPE_2 rsrc ) throws TYPE_3 { if ( STRING_1 . equals ( req . METHOD_2 ( STRING_2 ) ) ) { throw new TYPE_3 ( STRING_3 ) ; } } 
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Change . Id ( 1 ) , STRING_1 ) ; com.google.common.truth.Truth . METHOD_3 ( ) . METHOD_4 ( STRING_2 ) ; } catch ( TYPE_2 e ) { } } 
public void METHOD_1 ( final java.lang.String name ) { if ( ( name != null ) && ( ! ( name . isEmpty ( ) ) ) ) { this . name = name ; } } 
protected abstract void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException , TYPE_2 ; 
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; if ( ( event . METHOD_2 ( ) ) == ( VAR_2 ) ) { if ( VAR_3 . METHOD_3 ( ) ) { VAR_1 = true ; } else { METHOD_4 ( ) ; } } } 
private TYPE_1 METHOD_1 ( ) { final TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; final TYPE_1 r ; r = new TYPE_1 ( VAR_1 , new TYPE_3 ( ) ) ; VAR_2 . METHOD_3 ( VAR_1 , r ) ; return r ; } 
private static int METHOD_1 ( int VAR_1 , java.lang.String name , int VAR_2 ) { if ( VAR_1 == 0 ) { return VAR_2 ; } TYPE_1 . METHOD_2 ( ( VAR_1 > 0 ) , STRING_1 , name , VAR_1 ) ; return VAR_1 ; } 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_1 event , com.google.gerrit.reviewdb.server.ReviewDb db ) { } 
private static java.util.List < TYPE_1 < com.google.gerrit.server.query.change.ChangeData > > METHOD_1 ( ) { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > VAR_1 = METHOD_2 ( ) ; return TYPE_2 . of ( not ( VAR_1 ) ) ; } 
void METHOD_1 ( ) { VAR_1 . append ( log ( STRING_1 ) ) ; METHOD_2 ( VAR_2 . get ( ) , STRING_2 , STRING_1 , new java.lang.String [ ] { } ) ; } 
protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { final TYPE_2 VAR_1 = TYPE_2 . METHOD_2 ( ) ; final TYPE_3 < TYPE_4 . ReviewDb > VAR_2 = VAR_1 . METHOD_3 ( ) ; return new TYPE_5 ( VAR_2 ) ; } 
private void METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { try { METHOD_1 ( cd . project ( ) , cd . getId ( ) ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new java.io.IOException ( e ) ; } } 
public void run ( ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( e ) ; } catch ( TYPE_3 e ) { throw new TYPE_2 ( e ) ; } } 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( VAR_1 , getChangeId ( ) ) ; } 
void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 ; if ( VAR_1 != null ) { VAR_2 = null ; result = null ; VAR_1 . METHOD_2 ( VAR_3 ) ; } } 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( changeId ) , new TYPE_4 ( changeId , null , null , false , true ) ) ; } 
private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 . METHOD_4 ( ) ) ) + STRING_2 ) + msg ) , args ) ; } } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 ( false , false ) ) ; } 
public int METHOD_1 ( ) { return ( ( VAR_1 . METHOD_1 ( ) ) * INT_1 ) + ( value ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 group ) { TYPE_1 VAR_1 = TYPE_3 . METHOD_2 ( group ) ; VAR_1 . METHOD_3 ( true ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } VAR_2 . METHOD_5 ( true ) ; } 
public void METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { final TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_2 . METHOD_3 ( ) , VAR_3 ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 , null , 0 ) ; } 
public TYPE_1 < TYPE_2 > get ( ) { return new TYPE_1 < TYPE_2 > ( key , TYPE_3 . METHOD_1 ( VAR_1 , type ) , STRING_1 ) ; } 
private static TYPE_1 METHOD_1 ( final TYPE_2 . Id VAR_1 , final TYPE_3 VAR_2 ) { final java.lang.String VAR_3 = VAR_2 . METHOD_2 ( ) ; return new TYPE_1 ( new TYPE_1 . Key ( VAR_1 , VAR_3 ) ) ; } 
TYPE_1 create ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > schema , boolean VAR_1 ) ; 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( key ) ; key = null ; VAR_1 = null ; METHOD_3 ( STRING_1 , 0 ) ; } } 
public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; } 
public synchronized int METHOD_1 ( ) { return VAR_1 ; } 
protected synchronized void METHOD_1 ( ) { } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } } 
private com.google.gerrit.reviewdb.client . AccountGroup METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 . METHOD_2 ( TYPE_3 . getName ( ) ) . METHOD_3 ( ) ) ; return VAR_3 . get ( VAR_2 ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ! ( label ( VAR_1 . METHOD_2 ( ) . get ( ) ) . isEmpty ( ) ) ; } 
TYPE_1 create ( TYPE_2 . NameKey project , java.lang.String VAR_1 , TYPE_3 m ) ; 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( key ) ; VAR_2 . add ( key ) ; } 
public void add ( final TYPE_1 ... VAR_1 ) { for ( final TYPE_1 i : VAR_1 ) { add ( i ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { this . VAR_2 = new TYPE_3 ( ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( new TYPE_2 ( ) { public void run ( ) { METHOD_3 ( ) ; } } ) ; } 
public void METHOD_1 ( ) { assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_4 ) ) ; } 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return VAR_1 . create ( db , change ) ; } 
private void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_1 t ) { VAR_1 . error ( ( STRING_1 + ( change.getId ( ) ) ) , t ) ; VAR_2 . set ( false ) ; VAR_3 . update ( 1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { final java.util.List < TYPE_1 > r = VAR_1 ; if ( r == null ) { throw new TYPE_2 ( STRING_1 ) ; } VAR_1 = null ; return r ; } 
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { final java.lang.String VAR_2 = VAR_1 . getMessage ( ) ; if ( VAR_2 != null ) { return VAR_2 . METHOD_2 ( ) ; } } return STRING_1 ; } 
private TYPE_1 < TYPE_2 . ChangeInfo > METHOD_1 ( TYPE_2 . ChangeInfo res ) { return TYPE_1 . METHOD_2 ( res ) . METHOD_3 ( TYPE_3 . METHOD_4 ( 0 , VAR_1 ) . METHOD_5 ( ) ) ; } 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . revision ( id , STRING_1 ) . id ( VAR_1 ) . delete ( VAR_2 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vmId ) , VAR_1 , VAR_2 , new TYPE_3 ( ) , true , false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , true ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) ; METHOD_7 ( resource . get ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 , null , METHOD_2 ( VAR_1 , STRING_1 , 1 ) . get ( 0 ) , false ) ) ; } 
protected boolean METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) , TYPE_1 . getReturnValue ( ) . METHOD_5 ( ) ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 validator = METHOD_2 ( VAR_1 , VAR_2 ) ; return validator . METHOD_3 ( TYPE_2 . getReturnValue ( ) . METHOD_4 ( ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = dao . get ( VAR_3 ) ; VAR_4 = dao . get ( VAR_5 ) ; } 
public void METHOD_1 ( ) { if ( ( getEntity ( ) ) != null ) { super . METHOD_1 ( ) ; } else { setItems ( null ) ; } } 
static TYPE_1 getConstants ( ) { if ( ( org.ovirt.engine.ui.frontend.Frontend . constants ) == null ) { org.ovirt.engine.ui.frontend.Frontend . constants = org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) ; } return org.ovirt.engine.ui.frontend.Frontend . constants ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return getEntity ( VAR_1 class , VAR_2 , new TYPE_2 ( id ) , id . toString ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { try { TYPE_1 . METHOD_2 ( vds ) ; } finally { TYPE_2 . METHOD_3 ( vds . getId ( ) , VAR_1 , true ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { return METHOD_2 ( VAR_1 , new TYPE_3 ( VAR_2 , METHOD_3 ( ) . METHOD_4 ( ) , false ) , action , new TYPE_4 ( VAR_3 , VAR_4 . IdQueryParameters class ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_2 = VAR_1 ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( STRING_1 + ( name ) ) + STRING_2 ) ) ; VAR_2 = true ; METHOD_3 ( METHOD_4 ( ) ) ; TYPE_1 . METHOD_5 ( this , getValue ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; resource . METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; TYPE_1 VAR_2 = resource . get ( ) ; assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( VAR_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; dao . METHOD_4 ( VAR_1 ) ; METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_2 , VAR_1 ) , VAR_2 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 vm , org.ovirt.engine.core.compat . Version VAR_1 , java.util.ArrayList < TYPE_3 > VAR_2 , org.ovirt.engine.ui.uicommonweb.models.EntityModel VAR_3 ) { TYPE_1 instance = TYPE_1 . METHOD_1 ( vm , VAR_1 , VAR_2 , VAR_3 ) ; instance . METHOD_2 ( ) ; return instance ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( resource . get ( ) , 1 ) ; } 
public TYPE_1 < java.util.Map < java.lang.String , java.lang.Object > > METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 , TYPE_2 VAR_3 ) { return VAR_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 . METHOD_3 ( ) , VAR_3 . METHOD_3 ( ) ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { long VAR_1 = ( ( object . METHOD_2 ( ) ) != null ) ? object . METHOD_2 ( ) : 0 ; return ( ( long ) ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } TYPE_1 VAR_1 = new TYPE_1 ( this ) ; METHOD_2 ( VAR_1 ) ; VAR_1 . setEntity ( getEntity ( ) ) ; } 
protected boolean METHOD_1 ( ) { return ( super . METHOD_1 ( ) ) && ( validate ( METHOD_2 ( ) ) ) ; } 
public short METHOD_1 ( ) { return ( ( short ) ( super . METHOD_2 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( model . METHOD_4 ( ) . getEntity ( ) ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return getEntity ( new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( VAR_1 , VAR_2 . IdQueryParameters class ) , false ) ; } 
protected TYPE_1 METHOD_1 ( ) { return null ; } 
private < TYPE_1 extends TYPE_2 < org.ovirt.engine.core.compat.Guid > > java.lang.String METHOD_1 ( TYPE_1 entity ) { if ( entity instanceof org.ovirt.engine.core.common.businessentities.VDS ) { return STRING_1 + ( ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( entity ) ) . METHOD_2 ( ) ) ; } return STRING_2 ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public void setEntity ( java.lang.Object value ) { super . setEntity ( value ) ; METHOD_1 ( ) ; } 
protected java.util.Map < java.lang.String , TYPE_1 < java.lang.String , java.lang.String > > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( getParameters ( ) . METHOD_3 ( ) . toString ( ) , TYPE_3 . METHOD_4 ( VAR_1 , TYPE_4 . METHOD_5 ( ) ) ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( ) ; METHOD_3 ( new TYPE_1 ( STRING_1 ) ) ; METHOD_3 ( new TYPE_1 ( STRING_2 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 1 , 0 ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( null ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_4 ( ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { setItems ( ( ( TYPE_1 < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; } 
protected java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM entity ) { return entity . METHOD_2 ( ) ; } 
private void METHOD_1 ( final java.util.List < TYPE_1 . VdcQueryType > VAR_1 , final java.lang.String context ) { for ( TYPE_1 . VdcQueryType VAR_2 : VAR_1 ) { METHOD_1 ( VAR_2 , context ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( resource . get ( ) , INT_1 ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( result ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = METHOD_2 ( VAR_1 , true ) ; } return VAR_2 ; } 
public java.util.HashMap < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( java.lang.Boolean VAR_1 ) { METHOD_2 ( VAR_1 ) ; return VAR_2 ; } 
protected org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; } 
private static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { validator = METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 , STRING_1 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; TYPE_1 VAR_2 = resource . get ( ) ; METHOD_4 ( VAR_2 ) ; } 
protected final void METHOD_1 ( ) { METHOD_2 ( ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return INT_1 ; } return ( ( java.lang.Integer ) ( source ) ) . METHOD_1 ( ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ) ( source ) ) ; if ( ( VAR_1 . size ( ) ) > 0 ) { return true ; } return false ; } 
public TYPE_1 . VdcActionParametersBase getParameters ( TYPE_2 VAR_1 , TYPE_3 entity ) { TYPE_4 < TYPE_3 > parameters = new TYPE_4 < TYPE_3 > ( ) ; parameters . METHOD_1 ( VAR_2 ) ; parameters . METHOD_2 ( map ( VAR_1 , entity ) ) ; return parameters ; } 
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return null ; } return ( VAR_1 ) + ( ( VAR_2 ) == null ? STRING_1 : VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( null ) ; TYPE_2 . METHOD_2 ( command , VAR_3 ) ; } 
protected TYPE_1 METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 ) { return new TYPE_1 ( VAR_1 . get ( 1 ) , VAR_1 . get ( 0 ) , VAR_1 . get ( 2 ) , METHOD_2 ( ) , false ) ; } 
protected boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . getId ( ) ) ) != null ; } 
private boolean METHOD_1 ( TYPE_1 . DiskImage diskImage ) { return validate ( METHOD_2 ( diskImage ) . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) ) ) ; } 
protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > value = new TYPE_1 < java.lang.String > ( ) ; value . setItems ( VAR_1 ) ; value . setSelectedItem ( STRING_1 ) ; return value ; } 
public TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > error ) { this . result = TYPE_2 . METHOD_2 ( error ) ; return this ; } 
protected TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_2 ( TYPE_3 . METHOD_3 ( ) . getId ( ) , TYPE_3 . METHOD_4 ( ) . getId ( ) ) ) ; } 
public static < TYPE_1 extends TYPE_2 < TYPE_3 > , TYPE_3 extends TYPE_4 & TYPE_5 < ? super TYPE_3 > > TYPE_6 < TYPE_1 , TYPE_3 > METHOD_1 ( ) { return new TYPE_6 < TYPE_1 , TYPE_3 > ( ) ; } 
public boolean METHOD_1 ( java.lang.String name , TYPE_1 context ) { return ( name != null ) && ( TYPE_2 . METHOD_2 ( name ) ) ; } 
public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_2 ( value ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) == null ) { VAR_3 = new TYPE_2 ( VAR_4 < java.lang.Integer > METHOD_2 ( VAR_5 ) , true ) ; } return VAR_3 ; } 
protected TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( id ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) || ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_3 ) ) ; } 
public void METHOD_1 ( TYPE_1 value ) { if ( ( this . VAR_1 . METHOD_2 ( ) ) != value ) { this . VAR_1 . METHOD_1 ( value ) ; } } 
public void add ( ) { METHOD_1 ( TYPE_1 . METHOD_2 ( ) , false , org.mockito.Mockito . METHOD_3 ( 0 ) , VAR_1 ) ; } 
public boolean METHOD_1 ( ) { return ( ! ( METHOD_2 ( ) ) ) && ( ! ( TYPE_1 . equals ( METHOD_3 ( ) ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.compat.Guid vmId = new org.ovirt.engine.core.compat.Guid ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( vmId , VAR_2 ) ) . thenReturn ( true ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( vmId ) , VAR_3 ) ; } 
public static < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 value ) { return VAR_1 < TYPE_1 > getValue ( value , VAR_2 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network result = dao . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; } 
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , false , false ) ; } } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( ( VAR_1 != null ? VAR_1 : STRING_1 ) ) . METHOD_4 ( ) . METHOD_5 ( STRING_2 , STRING_3 ) ) ; } 
public void METHOD_1 ( java.lang.String id ) { try { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( id ) . METHOD_5 ( ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( VAR_1 , e ) ; } } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , java.lang.Integer . toString ( VAR_3 . METHOD_4 ( ) ) ) ; return null ; } 
public void METHOD_1 ( ) { final TYPE_1 iface = TYPE_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( iface , VAR_2 ) ; METHOD_4 ( VAR_3 , iface ) ; TYPE_3 . assertEquals ( VAR_4 . getValue ( ) . METHOD_5 ( ) , VAR_2 ) ; } 
protected < TYPE_1 > TYPE_2 < TYPE_3 < TYPE_1 > > METHOD_1 ( ) { return TYPE_4 . METHOD_2 ( ) ; } 
private static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , null ) ; VAR_1 . METHOD_3 ( true ) ; return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_2 ( STRING_1 ) ) ; METHOD_2 ( new TYPE_2 ( STRING_2 ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 . add ( STRING_1 , TYPE_1 . getParameters ( ) . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . add ( STRING_2 , METHOD_3 ( ) ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String action ) { if ( args . METHOD_2 ( VAR_2 ) ) { VAR_3 . METHOD_3 ( java.lang.String . METHOD_4 ( VAR_4 , STRING_1 , VAR_1 ) ) ; } VAR_3 . METHOD_5 ( VAR_5 ) ; } 
public void setId ( org.ovirt.engine.core.compat.Guid value ) { METHOD_1 ( ) . setId ( value ) ; METHOD_2 ( ) . setId ( value ) ; METHOD_3 ( ) . METHOD_4 ( value ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_4 ( ) , VAR_1 ) ; } 
protected java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ( ( org.ovirt.engine.core.compat.Guid ) ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ) , TYPE_3 . name ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; try { TYPE_3 . METHOD_2 ( VAR_2 , VAR_1 ) ; TYPE_4 . METHOD_3 ( STRING_2 ) ; } catch ( TYPE_5 VAR_3 ) { } } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( getEntity ( ) ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } METHOD_7 ( ) ; } 
public boolean METHOD_1 ( ) { return ( ( this ) == ( VAR_1 ) ) || ( ( this ) == ( VAR_2 ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_5 ) ; } 
public void METHOD_1 ( ) { final java.util.List < TYPE_1 > result = METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 ) + STRING_1 ) ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities . network object ) { return object . METHOD_1 ( ) ; } 
public static < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 value ) { return VAR_1 < TYPE_1 > METHOD_1 ( value , VAR_2 ) ; } 
protected < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( TYPE_1 model ) { TYPE_3 . METHOD_1 ( TYPE_4 . METHOD_2 ( ) , model , this ) ; return model ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , null ) ; } 
public java.lang.String toString ( ) { return java.lang.String . METHOD_1 ( STRING_1 , super . toString ( ) , ( ( getVm ( ) ) == null ? STRING_2 : getVm ( ) . METHOD_2 ( ) ) , METHOD_3 ( ) , METHOD_4 ( ) ) ; } 
protected void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( TYPE_1 . any ( ) , TYPE_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; parameters . setId ( VAR_1 ) ; parameters . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( command . validate ( ) ) ; } 
public void METHOD_1 ( TYPE_1 result ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( result . METHOD_2 ( ) ) ) ; VAR_1 . getWindow ( ) . METHOD_3 ( ) ; METHOD_4 ( ) ; } 
private org.ovirt.engine.core.common.businessentities . Network METHOD_1 ( ) { if ( ( network ) == null ) { network = TYPE_1 . METHOD_2 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } return network ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { TYPE_1 . when ( VAR_1 . get ( VAR_2 . Matchers < org.ovirt.engine.core.compat.Guid > any ( VAR_3 . Guid class ) ) ) . thenReturn ( vm ) ; } 
public java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( int VAR_1 , java.util.Map VAR_2 ) ; 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , 2 ) ; } 
public void METHOD_1 ( java.lang.String storage ) { METHOD_2 ( ) . METHOD_3 ( storage ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 ) ( returnValue ) ) ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { if ( ! ( VAR_1 . equals ( value ) ) ) { VAR_1 = value ; } } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 value , org.ovirt.engine.core.compat . Version version , TYPE_1 returnValue ) { return new TYPE_2 < TYPE_1 > ( value , version . toString ( ) , returnValue ) ; } 
public static void METHOD_1 ( TYPE_1 . VdcActionType VAR_1 , java.util.ArrayList < TYPE_1 . VdcActionParametersBase > parameters ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_1 ( VAR_1 , parameters , null , null ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VM object ) { return ( java.lang.String.valueOf ( object . METHOD_1 ( ) ) ) + STRING_1 ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , TYPE_2 . VdcActionType VAR_3 , TYPE_3 VAR_4 , org.ovirt.engine.core.compat.Guid ... VAR_5 ) { return VAR_6 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ) . thenReturn ( VAR_4 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_1 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; VAR_4 = new TYPE_2 ( VAR_3 ) ; } 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . METHOD_3 ( ) ) == null ; } 
public void METHOD_1 ( ) { final long VAR_1 = 0 ; final TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; METHOD_3 ( ( ! VAR_1 ) ) ; } 
public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 result ) { TYPE_2 returnValue = result . getReturnValue ( ) ; if ( ( returnValue != null ) && ( returnValue . getSucceeded ( ) ) ) { METHOD_2 ( ) ; } } 
TYPE_1 host ( ) ; 
public void METHOD_1 ( ) { METHOD_2 ( true , true , null , null ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( false ) , TYPE_2 . METHOD_5 ( VAR_1 ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 < TYPE_3 . DiskImage > ( VAR_1 , TYPE_4 . METHOD_2 ( ) ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { return ! ( TYPE_1 . METHOD_2 ( vmId ) . isEmpty ( ) ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 1 ; } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; return null ; } 
boolean METHOD_1 ( ) ; 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) . addValue ( STRING_2 , VAR_2 ) ; return VAR_3 ; } 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { return METHOD_2 ( VAR_3 , new TYPE_2 ( VAR_1 , VAR_2 ) , VAR_4 . String class ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { try { return TYPE_1 . METHOD_2 ( TYPE_2 . valueOf ( VAR_1 ) ) ; } catch ( TYPE_3 e ) { return VAR_1 ; } } 
public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < org.ovirt.engine.core.common.businessentities.VM > VAR_1 ) { return METHOD_1 ( VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 model ) { METHOD_2 ( model . METHOD_3 ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) . METHOD_4 ( ) ) ; assertEquals ( model . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = true ; } 
protected org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( java.lang.String name ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface : METHOD_2 ( ) ) { if ( iface . getName ( ) . equals ( name ) ) { return iface ; } } return null ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( VAR_3 , VAR_4 . IdQueryParameters class ) ; return METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , new TYPE_3 ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String name , java.util.List value ) { if ( ( value != null ) && ( value . isEmpty ( ) ) ) { return METHOD_2 ( name , value ) ; } return this ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . network VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public static void METHOD_1 ( final TYPE_1 . VdcQueryType VAR_1 , final TYPE_2 parameters , final org.ovirt.engine.ui.frontend.AsyncQuery VAR_2 ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_1 , parameters , VAR_2 ) ; } 
protected void METHOD_1 ( TYPE_1 < TYPE_2 > cmd ) { METHOD_2 ( cmd ) ; TYPE_3 . doReturn ( true ) . when ( cmd ) . METHOD_3 ( ) ; TYPE_3 . doReturn ( null ) . when ( cmd ) . METHOD_4 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( ) , aQuery ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( ) . METHOD_3 ( ( ( java.lang.Boolean ) ( model . METHOD_4 ( ) . getEntity ( ) ) ) ) ; } 
protected java.lang.String METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) + ( VAR_1 ? METHOD_3 ( ) : METHOD_4 ( ) ) ) + ( METHOD_5 ( ) ) ; } 
public static org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 , TYPE_3 < TYPE_4 < TYPE_5 > > VAR_3 ) { throw new TYPE_6 ( STRING_1 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; return METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_3 , new TYPE_3 ( ) ) ; } 
public TYPE_1 < java.lang.String > METHOD_1 ( java.lang.Object returnValue , org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { TYPE_1 < java.lang.String > VAR_2 = new TYPE_2 ( new TYPE_3 ( ) ) ; VAR_2 . METHOD_2 ( ( ( TYPE_4 < java.lang.String > ) ( returnValue ) ) ) ; return VAR_2 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . getValue ( ) ) ; super . METHOD_1 ( ) ; } 
public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 < java.lang.String > METHOD_5 ( VAR_2 ) ) ; } 
public static boolean METHOD_1 ( TYPE_1 < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities . VdsNetworkInterface entity ) { return VAR_1 . METHOD_2 ( model , entity , VAR_2 , VAR_3 ) ; } 
public TYPE_1 get ( TYPE_2 id ) { return TYPE_3 . METHOD_1 ( ) . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( id ) ) ; } 
public TYPE_1 . VdcActionParametersBase METHOD_1 ( TYPE_2 vm ) { TYPE_3 parameters = new TYPE_3 ( false , vm . getId ( ) , VAR_1 ) ; parameters . METHOD_2 ( false ) ; return parameters ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities . Disk > METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return METHOD_1 ( id , null , false ) ; } 
public void METHOD_1 ( ) { validator = new TYPE_1 ( host ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) . getParameters ( ) . METHOD_4 ( ) , VAR_1 ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , name , true , null , null , VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; TYPE_2 . METHOD_6 ( command . validate ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_1 ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; TYPE_3 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 map ) { METHOD_2 ( map . getId ( ) , map . METHOD_3 ( ) ) ; } 
public static synchronized boolean METHOD_1 ( TYPE_1 . StorageDomain storageDomain ) { TYPE_2 type = TYPE_2 . METHOD_2 ( storageDomain . METHOD_3 ( ) ) ; return ( type != null ) && ( type == ( VAR_1 ) ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , name , true , null , null , VAR_1 , true , null , false , null ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , null ) ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network VAR_2 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( returnValue ) ) ) ; VAR_1 . METHOD_3 ( ) ; } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object returnValue ) { this . setItems ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_2 < java.lang.Boolean > getValue ( VAR_3 ) ) { return VAR_1 . METHOD_2 ( VAR_4 ) ; } return null ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ( ( java.lang.String ) ( null ) ) , VAR_1 ) ) ; } 
public void METHOD_1 ( java.util.HashMap < org.ovirt.engine.core.compat.Guid , java.util.ArrayList < org.ovirt.engine.core.compat.Guid > > value ) { VAR_1 = value ; METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , VAR_1 . Collections < java.lang.String , org.ovirt.engine.core.common.businessentities . Network > METHOD_4 ( ) ) ; } 
public int METHOD_1 ( ) { return vm . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( resource . get ( ) , 0 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( null ) ; TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getWindow ( ) ) ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_4 ( ) . setEntity ( true ) ; } 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; VAR_2 = dao . get ( VAR_3 ) ; VAR_4 = dao . get ( VAR_5 ) ; VAR_6 = org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ; } 
public void onSuccess ( java.lang.Object result ) { java.util.ArrayList < TYPE_1 > hosts = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; TYPE_2 VAR_1 = METHOD_1 ( ) ; VAR_1 . setItems ( hosts ) ; VAR_1 . METHOD_2 ( true ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { return ( object . METHOD_1 ( ) ) == null ? STRING_1 : object . METHOD_2 ( ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) != ( VAR_1 ) ) { super . METHOD_1 ( ) ; } } 
protected void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { super . METHOD_1 ( ) ; } else { METHOD_3 ( ) ; } } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_2 ( VAR_2 ) . METHOD_2 ( VAR_1 , VAR_3 . instance ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup result = dao . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , false ) ; METHOD_4 ( result ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; return VAR_1 ; } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = super . METHOD_1 ( ) ; if ( ! VAR_1 ) { VAR_2 . log ( this , VAR_3 ) ; } return VAR_1 ; } 
public long METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( true ) ; storageDomain . METHOD_4 ( false ) ; TYPE_1 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_2 . METHOD_7 ( VAR_2 ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 = ( ( VAR_1 ) ++ ) % ( VAR_2 ) ; } 
TYPE_1 METHOD_1 ( java.lang.String value , java.lang.String VAR_1 ) ; 
public static void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { } VAR_1 = null ; } TYPE_1 . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_3 ( ) ; cmd . getVm ( ) . METHOD_4 ( VAR_3 ) ; TYPE_1 . METHOD_5 ( cmd ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; VAR_1 . METHOD_2 ( hosts ) ; } 
private static void METHOD_1 ( final TYPE_1 . VdcQueryType VAR_1 , final java.lang.String context ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( ) , VAR_1 , context ) ; } 
public void METHOD_1 ( int VAR_1 , TYPE_1 quota , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( this ) ; VAR_3 . instance = this ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ( ( TYPE_2 . METHOD_3 ( ) . size ( ) ) == 0 ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { return ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) || ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_3 ) ) ; } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.VM result ) { VAR_1 = result ; METHOD_1 ( VAR_1 ) ; } 
public void onSuccess ( final TYPE_1 result ) { VAR_1 . METHOD_1 ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) . onSuccess ( VAR_2 . getModel ( ) , result ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { return VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_2 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( nic ) ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM object ) { return null ; } 
public int METHOD_1 ( TYPE_1 < org.ovirt.engine.core.common.businessentities.VDSGroup , TYPE_2 > VAR_1 , TYPE_1 < org.ovirt.engine.core.common.businessentities.VDSGroup , TYPE_2 > VAR_2 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 client ) ; 
public static boolean METHOD_1 ( int VAR_1 , int VAR_2 , org.ovirt.engine.core.compat . Version VAR_3 ) { return ( VAR_2 >= ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ) ) && ( VAR_2 <= ( TYPE_1 . METHOD_3 ( VAR_1 , VAR_3 ) ) ) ; } 
public void METHOD_1 ( TYPE_1 value ) { status = value . getValue ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface result = dao . METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_1 . METHOD_3 ( result ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; org.ovirt.engine.core.common.businessentities.VDS VAR_2 = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( VAR_1 , null ) ; } 
private TYPE_1 METHOD_1 ( ) { return TYPE_2 . getInstance ( ) . get ( VAR_1 class ) ; } 
protected TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( command , VAR_1 ) ; TYPE_2 . when ( VAR_1 . get ( command . getParameters ( ) . METHOD_3 ( ) ) ) . thenReturn ( null ) ; METHOD_4 ( ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( TYPE_2 . getInstance ( ) . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; } 
public static java.lang.String METHOD_1 ( boolean VAR_1 ) { if ( ( ( TYPE_1 . METHOD_2 ( ) ) == null ) || VAR_1 ) return STRING_1 ; else return VAR_2 < java.lang.String > METHOD_3 ( VAR_3 ) ; } 
protected org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup ( ) { if ( ( TYPE_1 . METHOD_1 ( ) ) != null ) { METHOD_2 ( TYPE_1 . METHOD_1 ( ) . METHOD_3 ( ) ) ; } return super . getVdsGroup ( ) ; } 
public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( name , value ) ) ) { name = value ; METHOD_3 ( new TYPE_2 ( STRING_1 ) ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new org.ovirt.engine.core.common.businessentities.VM ( ) , null , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ( ) ) , false , VAR_2 ) ; } 
protected TYPE_1 < ? > METHOD_1 ( TYPE_2 . VdcQueryType VAR_1 , TYPE_3 parameters ) { return TYPE_4 . METHOD_2 ( VAR_1 , parameters ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( TYPE_1 . any ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( ) ) . thenReturn ( VAR_2 ) ; } 
public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) ) ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . StorageDomain ) ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.compat.Guid vmId ) { TYPE_1 params = new TYPE_1 ( VAR_1 , vmId ) ; params . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; return params ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < TYPE_1 > VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_2 ) { if ( VAR_1 . equals ( VAR_3 . getId ( ) ) ) { return VAR_3 ; } } return null ; } 
protected boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( ! ( VAR_1 . isEmpty ( ) ) ) && ( ( METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ) == 1 ) ; } 
protected java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) . getName ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . setSelectedItem ( TYPE_1 . METHOD_3 ( METHOD_2 ( ) . METHOD_4 ( ) ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Disk disk ) { return disk . METHOD_2 ( ) ; } 
private org.ovirt.engine.core.common.businessentities . network map ( TYPE_1 . Network network , org.ovirt.engine.core.common.businessentities . network template ) { return METHOD_1 ( VAR_1 . Network class , VAR_2 . network class ) . map ( network , template ) ; } 
private void METHOD_1 ( int VAR_1 ) { TYPE_1 . METHOD_2 ( java.lang.String . METHOD_3 ( VAR_2 , VAR_1 , VAR_3 ) , ( VAR_1 == ( VAR_3 ) ) ) ; VAR_3 = 0 ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_2 . VdcActionParametersBase params ) { return METHOD_1 ( VAR_1 , params , null , false ) ; } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.ArrayList < TYPE_1 > VAR_2 ) { for ( TYPE_1 storage : VAR_2 ) { if ( storage . getId ( ) . equals ( VAR_1 ) ) { return storage ; } } return null ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( METHOD_5 ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( ( VAR_1 ) == null ) { return null ; } return VAR_1 . METHOD_2 ( ) ; } 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 . METHOD_4 ( ) . getValue ( ) ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.DiskImage disk = ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( getEntity ( ) ) ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( ) { return METHOD_2 ( STRING_1 , true , null , TYPE_1 . instance ( ) . METHOD_3 ( INT_1 ) , null , null , null ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; resource . METHOD_7 ( new TYPE_1 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; } 
protected java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_3 . name ( ) ) ; } 
public void METHOD_1 ( java.lang.Boolean value ) { this . VAR_1 = value ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_3 . METHOD_5 ( VAR_4 , VAR_2 , false ) ) ; org.mockito.Mockito . METHOD_6 ( VAR_1 ) ; } 
public TYPE_1 get ( ) { TYPE_1 disk = METHOD_1 ( METHOD_2 ( ) : : get ) ; TYPE_2 . METHOD_3 ( vmId , disk ) ; TYPE_2 . METHOD_4 ( vmId , TYPE_3 . METHOD_5 ( disk ) ) ; return disk ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.core.common.businessentities.VDSGroup result = dao . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_5 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; } 
void METHOD_1 ( TYPE_1 . VdcActionType action , java.util.List < TYPE_2 > VAR_1 , java.util.List < TYPE_3 > VAR_2 ) ; 
private void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 , int VAR_3 , boolean VAR_4 ) { METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_3 , VAR_4 ) ; } 
public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( id , VAR_1 , type , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , METHOD_3 ( ) , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_3 , STRING_4 , result ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface , java.lang.String VAR_1 ) { return METHOD_2 ( iface . getId ( ) , iface . getName ( ) , false , VAR_1 , null , null ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command , boolean VAR_1 ) { java.lang.String VAR_2 = ( VAR_1 ) ? VAR_3 . METHOD_2 ( ) : VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( TYPE_1 . METHOD_5 ( VAR_2 ) ) ; METHOD_6 ( VAR_4 , command ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { if ( getParameters ( ) . METHOD_2 ( ) ) { return getParameters ( ) . getVm ( ) . getId ( ) ; } else { return super . METHOD_1 ( ) ; } } 
protected int METHOD_1 ( ) { return VAR_1 < java.lang.Integer > METHOD_2 ( VAR_2 ) ; } 
private void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } METHOD_2 ( new TYPE_1 ( this , ( ( TYPE_2 ) ( getSelectedItem ( ) ) ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { VAR_2 . METHOD_2 ( ( ( java.lang.Boolean ) ( model . METHOD_3 ( ) . getEntity ( ) ) ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . METHOD_5 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_2 . VdcActionParametersBase params ) { return METHOD_1 ( VAR_1 , params , ( ( TYPE_3 ) ( null ) ) ) ; } 
protected < TYPE_1 > TYPE_2 METHOD_1 ( java.lang.String VAR_1 , TYPE_3 VAR_2 ) { return METHOD_1 ( VAR_1 , VAR_2 , null ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 < java.lang.Integer > VAR_1 ) { return VAR_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) , VAR_1 ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( TYPE_1 ) ( returnValue ) ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( true ) ; METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( validator . METHOD_5 ( new TYPE_2 ( VAR_3 ) ) , TYPE_3 . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true , false , null , true ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? VAR_1 . METHOD_3 ( ) : null ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( cmd , VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { this . pool . METHOD_2 ( ) . METHOD_1 ( ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { this . setItems ( ( ( java.util.List < TYPE_1 < TYPE_2 , org.ovirt.engine.core.common.businessentities.VmTemplate > > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { if ( ( TYPE_2 . METHOD_2 ( vds . METHOD_3 ( ) ) ) && ( VAR_1 < java.lang.Boolean > METHOD_4 ( VAR_2 ) ) ) { return new TYPE_1 . ValidationResult ( VAR_3 ) ; } return VAR_4 ; } 
public java.lang.String METHOD_1 ( java.lang.Object object ) { return ( ( TYPE_1 ) ( object ) ) . toString ( ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . Disk > result = dao . METHOD_2 ( null , null , false ) ; TYPE_1 . METHOD_3 ( result ) ; } 
public java.lang.String METHOD_1 ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( object ) ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( METHOD_2 ( ) ) . METHOD_3 ( ) ; VAR_2 . METHOD_1 ( VAR_1 , VAR_3 , VAR_4 ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.compat . Version VAR_2 ) { final TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } return false ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( getEntity ( 1 ) ) ) ; VAR_1 . METHOD_6 ( ) ; METHOD_7 ( resource . get ( ) , 1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . METHOD_2 ( VAR_1 . getId ( ) , TYPE_2 . METHOD_3 ( ) ) ; TYPE_3 . METHOD_4 ( result ) ; } 
private void METHOD_1 ( ) { this . VAR_1 = VAR_2 . getModel ( ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 . METHOD_2 ( target ) ; } 
public TYPE_1 METHOD_1 ( ) { super . METHOD_2 ( METHOD_3 ( ) ) ; return super . METHOD_1 ( ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( INT_1 , INT_1 ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( true ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; return VAR_3 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_1 ( ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; } 
protected TYPE_1 . DbFacade METHOD_1 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 , int VAR_4 , TYPE_4 VAR_5 ) throws TYPE_5 { return new TYPE_6 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , this . VAR_6 , VAR_5 ) ; } 
private TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) { TYPE_2 value = METHOD_2 ( ) ; TYPE_3 widget = METHOD_3 ( value ) ; return new TYPE_1 < TYPE_2 , TYPE_3 > ( value , widget ) ; } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 , boolean VAR_4 ) { return TYPE_2 . METHOD_1 ( vmId , VAR_1 , VAR_2 , VAR_3 , STRING_1 , VAR_4 ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( TYPE_1 . any ( VAR_2 . VDS class ) , TYPE_1 . any ( VAR_3 class ) ) ; command . METHOD_3 ( VAR_4 ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 ) ) ; } 
private boolean METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities.VM vm : VAR_1 ) { if ( ( vm . getStatus ( ) ) != ( VAR_2 ) ) { return true ; } } return false ; } 
protected TYPE_1 METHOD_1 ( ) { return getEntity ( VAR_1 class , VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_2 ( VAR_3 ) ) , VAR_3 ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 < TYPE_2 > ( VAR_1 , constants , VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . getName ( ) , TYPE_2 . getStoragePoolId ( ) ) ? METHOD_3 ( VAR_1 ) : true ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 class ) . METHOD_3 ( VAR_2 class ) ; METHOD_2 ( VAR_3 class ) . METHOD_3 ( VAR_2 class ) ; METHOD_2 ( VAR_4 class ) . METHOD_4 ( ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( METHOD_2 ( TYPE_2 . getVm ( ) ) ) && ( validate ( VAR_1 . METHOD_3 ( ) ) ) ; } 
protected java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . getValue ( ) , TYPE_3 . name ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; } 
public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > command , TYPE_2 . VdcBllMessages VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , command . METHOD_3 ( ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , command , VAR_2 ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , STRING_1 , true , null , null , VAR_1 ) ; } 
public java.lang.String toString ( ) { java.lang.String VAR_1 = STRING_1 ; if ( ( VAR_2 ) < 0 ) { VAR_1 = STRING_2 ; } return TYPE_1 . METHOD_1 ( STRING_3 , VAR_1 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String obj ) { TYPE_1 VAR_2 = METHOD_2 ( obj ) ; boolean VAR_3 = false ; if ( VAR_2 != null ) { VAR_3 = VAR_2 . validate ( VAR_1 ) ; } return VAR_3 ; } 
public void METHOD_1 ( ) { java.lang.Object [ ] VAR_1 = new java.lang.Object [ 0 ] ; java.util.Map < java.lang.String , java.lang.Object > VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( METHOD_4 ( ) , VAR_1 , VAR_2 ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true , null ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; VAR_1 . METHOD_2 ( hosts ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 . VdcActionParametersBase params = new TYPE_3 . VdcActionParametersBase ( ) ; params . METHOD_2 ( METHOD_3 ( ) ) ; TYPE_1 returnValue = METHOD_4 ( ) . METHOD_5 ( params ) ; return returnValue ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) . toString ( ) ) ; } 
protected boolean METHOD_1 ( ) { return ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) == ( VAR_1 ) ? METHOD_3 ( VAR_2 ) : true ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) == null ) { VAR_3 = new TYPE_2 ( VAR_4 < java.lang.Integer > METHOD_2 ( VAR_5 ) ) ; } return VAR_3 ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new TYPE_3 < TYPE_4 > ( ) { public TYPE_4 METHOD_3 ( ) { VAR_2 . METHOD_4 ( VAR_1 ) ; return null ; } } ) ; } 
protected java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; } 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } super . METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_2 ( ) . getId ( ) ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 action ) { TYPE_3 params = new TYPE_3 ( true ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( getEntity ( ) . METHOD_4 ( ) ) ; return METHOD_5 ( VAR_2 , params , action ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_1 ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( METHOD_2 ( 0 ) ) ; VAR_1 . add ( METHOD_2 ( 1 ) ) ; return VAR_1 ; } 
public java.lang.String METHOD_1 ( ) { return ( METHOD_2 ( ) ) != null ? METHOD_2 ( ) . METHOD_3 ( ) : null ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true ) ; METHOD_4 ( ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS host , TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( host . getId ( ) , VAR_1 , true , VAR_4 , VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( VAR_1 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.ArrayList < java.lang.Integer > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } 
public static void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 , final TYPE_1 status , TYPE_1 VAR_2 , final TYPE_2 VAR_3 ) { TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_1 ) , status , VAR_2 , VAR_3 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.VDS entity ) { VAR_1 . METHOD_2 ( model , entity ) ; VAR_1 . METHOD_3 ( model ) ; return model ; } 
public int METHOD_1 ( int VAR_1 , org.ovirt.engine.core.compat . Version Version ) ; 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . assertEquals ( ( STRING_2 + ( value ) ) , value . METHOD_3 ( ) , value . getValue ( ) ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { return ( ( java.lang.Boolean ) ( TYPE_1 . METHOD_2 ( VAR_1 , version . toString ( ) ) ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return iface . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; } 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } super . METHOD_2 ( VAR_1 , new TYPE_1 ( getEntity ( ) . METHOD_3 ( ) ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; } 
public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; } } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = METHOD_2 ( VAR_2 class , VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_4 ) ) ; return new TYPE_1 < TYPE_2 > ( VAR_1 ) ; } 
public java.lang.Boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( ) ; } 
protected boolean METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 = METHOD_4 ( VAR_1 ) ; VAR_2 . METHOD_5 ( METHOD_6 ( ) ) ; return METHOD_7 ( VAR_2 ) ; } 
private void METHOD_1 ( ) { if ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) != ( VAR_1 ) ) { METHOD_3 ( TYPE_1 . METHOD_4 ( ) . getId ( ) ) ; } } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_2 ( ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < java.lang.String > VAR_1 = ( ( java.util.ArrayList < java.lang.String > ) ( returnValue ) ) ; METHOD_1 ( model , VAR_1 ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VmTemplate object ) { return java.lang.String.valueOf ( object . METHOD_1 ( ) . size ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( this . VAR_2 ) == null ) { this . VAR_2 = this . VAR_1 ; } } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; if ( ( TYPE_1 . METHOD_3 ( ) . getTable ( ) ) != null ) { TYPE_1 . METHOD_3 ( ) . getTable ( ) . METHOD_4 ( ) ; } } 
public boolean equals ( java.lang.Object obj ) { return ( ( org.ovirt.engine.core.common.businessentities . Disk ) ( obj ) ) . METHOD_1 ( ) ; } 
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( constants ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.List < TYPE_1 > VAR_1 = METHOD_1 ( result ) ; METHOD_2 ( ) . setItems ( VAR_1 ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; resource . METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; TYPE_1 VAR_2 = resource . get ( ) ; assertEquals ( VAR_2 . METHOD_7 ( ) , VAR_3 ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( ( ( result == null ) || ( ( result . size ( ) ) == 0 ) ) ) ; } 
private void METHOD_1 ( java.lang.Object entity ) { if ( entity == null ) { return ; } org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( entity ) ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( vm ) ) ; } 
protected TYPE_1 METHOD_1 ( java.lang.Object item ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( item ) ) ; return vm . METHOD_2 ( ) ; } 
void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ( VAR_1 == null ? null : VAR_1 . getValue ( ) ) ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) ; org.ovirt.engine.core.compat.Guid VAR_2 = VAR_3 ; java.util.List < TYPE_1 > VAR_4 = dao . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; } 
protected TYPE_1 < java.lang.String > METHOD_1 ( ) { return new TYPE_2 ( ) . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { return METHOD_2 ( VAR_1 , new TYPE_3 ( VAR_2 ) , action ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 rs , int VAR_1 ) throws TYPE_2 { java.lang.String VAR_2 = rs.getString ( 1 ) ; return VAR_2 ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; return VAR_2 ; } 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) ; 
private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( VAR_2 ) ; return METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = dao . get ( STRING_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; } 
public void METHOD_1 ( ) { final int VAR_1 = 0 ; final int VAR_2 = 0 ; final TYPE_1 VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_1 ( ( ( java.lang.Integer ) ( returnValue ) ) ) ; VAR_1 . METHOD_2 ( ) ; } 
protected TYPE_1 < TYPE_2 > getParameters ( ) { return new TYPE_3 ( METHOD_1 ( ) , METHOD_1 ( ) . getId ( ) ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , ( ! VAR_1 ) ) ; TYPE_1 . get ( ) . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { VAR_4 . METHOD_5 ( ) ; } } ) ; } 
private void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 ; TYPE_2 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ) ; TYPE_4 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( STRING_1 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . instance ( ) . METHOD_3 ( ) , TYPE_4 . instance ( ) . METHOD_4 ( ) ) ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( final int VAR_1 , final int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . METHOD_7 ( ) ; return vm ; } 
public static TYPE_1 getInstance ( ) { if ( ( VAR_1 ) == null ) { synchronized ( VAR_2 class ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } } } return VAR_1 ; } 
public boolean METHOD_1 ( TYPE_1 domain ) { return ( domain . METHOD_2 ( ) ) == ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.String status ) { if ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { setTitle ( status ) ; } } 
protected abstract TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 entity ) ; 
private TYPE_1 METHOD_1 ( ) { TYPE_1 parameters = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , false ) ; parameters . METHOD_3 ( VAR_1 ) ; return parameters ; } 
private TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . valueOf ( ( ( java.lang.String ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) ; } catch ( java.lang.Exception e ) { return VAR_2 ; } } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.VM result ) { TYPE_1 VAR_1 = new TYPE_2 ( result , this ) ; METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( ) { return METHOD_2 ( STRING_1 , true , null , TYPE_1 . instance ( ) . METHOD_3 ( INT_1 ) , null , null , null ) ; } 
protected java.lang.String METHOD_1 ( ) { return TYPE_1 . getName ( TYPE_2 . getInstance ( ) . METHOD_2 ( ) . get ( 0 ) . METHOD_3 ( ) ) ; } 
private static TYPE_1 METHOD_1 ( ) { TYPE_1 pool = new TYPE_1 ( ) ; pool . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; pool . METHOD_3 ( STRING_1 ) ; return pool ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . network VAR_1 ) { return iface . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.Map < org.ovirt.engine.core.compat . Version , java.util.Map < java.lang.String , java.lang.String > > ) ( returnValue ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( null ) . when ( validator ) . METHOD_2 ( TYPE_1 . any ( VAR_1 . Guid class ) ) ; TYPE_2 . METHOD_3 ( validator . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 ) { return getEntity ( VAR_3 . List class , VAR_4 , new TYPE_3 ( VAR_1 , VAR_2 , false , null ) , STRING_1 , true ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < java.lang.String > VAR_1 = ( ( java.util.ArrayList < java.lang.String > ) ( returnValue ) ) ; METHOD_1 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ) { return VAR_2 ; } else { return VAR_3 ; } } 
private TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 < TYPE_2 , TYPE_3 > ( null , null ) ; } return VAR_1 ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > ) ( result ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_2 ( ) . setItems ( VAR_1 ) ; } 
public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; } 
public TYPE_1 < java.lang.String > METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_3 < java.lang.String > ( ) , METHOD_4 ( id ) ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 tempVar = TYPE_2 . getParameters ( ) ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_2 . getParameters ( ) . METHOD_6 ( ) ) ) ; } 
protected java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . name ( ) . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) ) ; return VAR_1 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ; } 
private TYPE_1 url ( java.lang.String url ) throws TYPE_2 { this . url = url ; this . VAR_1 = METHOD_1 ( url ) ; return this ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , version ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . getId ( ) ) . thenReturn ( VAR_2 ) ; } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_1 ( vmId , VAR_1 , true , false , VAR_2 , false ) ; } 
public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , value ) ) ) { VAR_1 . METHOD_1 ( value ) ; METHOD_4 ( new TYPE_2 ( STRING_1 ) ) ; } } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) ; java.util.List < TYPE_1 > VAR_3 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_4 , VAR_2 ) ; return VAR_3 ; } 
private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network network ) { return network . getId ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) { protected TYPE_3 METHOD_2 ( ) { return null ; } protected TYPE_4 METHOD_3 ( ) { return null ; } } ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; org.ovirt.engine.core.common.businessentities.VDS VAR_2 = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_1 ( ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 , false , null , null , VAR_2 , true ) ; } 
protected void METHOD_1 ( final org.ovirt.engine.core.common.businessentities.VM value ) { vm = value ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; org.ovirt.engine.core.common.businessentities.VDSGroup VAR_2 = new org.ovirt.engine.core.common.businessentities.VDSGroup ( ) ; assertEquals ( TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) ) , VAR_3 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( false ) ; try { VAR_1 . METHOD_3 ( nic ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_1 . METHOD_4 ( ( VAR_2 instanceof TYPE_2 ) ) ; } } 
public java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( ) { VAR_1 = ( ( java.util.Map < java.lang.String , java.lang.Object > ) ( VAR_2 . get ( VAR_3 ) ) ) ; return VAR_1 ; } 
public void METHOD_1 ( java.lang.String value ) { switch ( METHOD_2 ( ) ) { case VAR_1 : { METHOD_3 ( value ) ; break ; } default : { parameters = value ; break ; } } } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( vm . METHOD_8 ( ) , VAR_3 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . getVm ( ) . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( int VAR_1 , org.ovirt.engine.ui.uicommonweb.models.EntityModel model , java.lang.Boolean value ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; VAR_2 . METHOD_2 ( value ) ; METHOD_3 ( ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_1 ( ) ; METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . METHOD_3 ( true , false ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( false ) ; METHOD_4 ( ) ; command . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( command , VAR_2 ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; } 
private java.lang.String METHOD_1 ( ) { return TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_1 ( ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { TYPE_2 VAR_1 = METHOD_2 ( ) . addValue ( STRING_1 , vmId ) ; java.util.List < TYPE_1 > VAR_2 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 , VAR_1 ) ; return VAR_2 ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; VAR_2 = VAR_1 ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network VAR_2 ) ; 
public void METHOD_1 ( ) { long VAR_1 = INT_1 ; long VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_2 , INT_2 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ! ( TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( VAR_3 ) ) ) { TYPE_3 . METHOD_1 ( VAR_2 ) ; } } 
public TYPE_1 get ( org.ovirt.engine.core.compat.Guid id ) { TYPE_2 VAR_1 = METHOD_1 ( ) . addValue ( STRING_1 , id ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_2 , VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_1 . METHOD_6 ( VAR_2 ) ) ; } 
public void onSuccess ( java.lang.Object returnValue ) { this . setItems ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; } 
public void METHOD_1 ( int VAR_1 , org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; } 
public void METHOD_1 ( boolean value ) { if ( ( VAR_1 ) != value ) { VAR_1 = value ; if ( value ) { METHOD_2 ( ) . METHOD_3 ( ) ; } METHOD_4 ( new TYPE_1 ( STRING_1 ) ) ; } } 
private void METHOD_1 ( TYPE_1 constants , TYPE_2 VAR_1 ) { METHOD_2 ( constants , VAR_1 ) ; METHOD_3 ( constants , VAR_1 ) ; } 
private void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.Integer > entity , java.lang.Integer VAR_1 ) { entity . METHOD_2 ( new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( 0 , VAR_1 ) } ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . network VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getName ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; TYPE_1 . getReturnValue ( ) . METHOD_6 ( true ) ; } 
private void METHOD_1 ( ) { final TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( this . client . METHOD_2 ( ) ) { return this . client ; } this . client . METHOD_3 ( ) ; return this . client ; } 
public void validate ( ) { METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network VAR_2 ) { if ( VAR_2 != null ) { VAR_1 . METHOD_2 ( ) . setSelectedItem ( VAR_2 ) ; } } 
private void METHOD_1 ( ) { cmd . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_4 ( ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ; } 
public TYPE_1 getStoragePoolId ( ) { return ( METHOD_1 ( ) ) != null ? METHOD_1 ( ) . METHOD_2 ( ) : null ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.common.businessentities.VM vm = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( vmId ) ; if ( vm != null ) { METHOD_3 ( vm . METHOD_4 ( ) , vm . METHOD_5 ( ) ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( returnValue ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; VAR_2 . METHOD_1 ( ) . setEntity ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_4 ( new TYPE_2 ( STRING_1 ) ) ; } } 
private void METHOD_1 ( ) { TYPE_1 . when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( VAR_2 ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_2 ( ) , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) ) ; } 
protected void METHOD_1 ( ) { for ( org.ovirt.engine.core.compat.Guid TYPE_1 : VAR_1 ) { METHOD_1 ( TYPE_1 . toString ( ) , TYPE_1 . toString ( ) ) ; } } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String url = ( VAR_2 ) + ( java.lang.String . METHOD_2 ( VAR_3 , VAR_1 ) ) ; TYPE_1 VAR_4 = new TYPE_2 ( url ) ; return METHOD_3 ( VAR_4 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network result = dao . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( VAR_1 ) ) ; this . VAR_5 . METHOD_4 ( VAR_6 . METHOD_5 ( VAR_4 . METHOD_6 ( VAR_2 , VAR_1 ) ) ) ; } 
