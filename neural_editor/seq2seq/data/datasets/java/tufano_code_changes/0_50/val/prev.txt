public void METHOD_1 ( TYPE_1 e ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } 
TYPE_1 < java.lang.String , TYPE_2 < TYPE_3 > > METHOD_1 ( ) { return VAR_1 ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = null ; try { VAR_1 = TYPE_1 . METHOD_2 ( null ) ; fail ( STRING_1 ) ; } catch ( java.lang.IllegalArgumentException e ) { } METHOD_3 ( VAR_1 ) ; } 
public static short METHOD_1 ( byte value ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( ( short ) ( ( double ) ( value ) ) ) ; } 
public int METHOD_1 ( ) { assert ( VAR_1 ) > 0 ; return ( VAR_1 ) > 0 ? ( ( int ) ( ( VAR_2 . METHOD_1 ( ) ) / ( VAR_1 ) ) ) : 0 ; } 
public int METHOD_1 ( java.lang.String VAR_1 , int uid , boolean VAR_2 , java.lang.String VAR_3 ) { return METHOD_1 ( VAR_1 , uid , VAR_2 , STRING_1 , VAR_3 , false ) ; } 
public java.lang.String METHOD_1 ( int index ) { return TYPE_1 . METHOD_1 ( VAR_1 , index ) ; } 
private java.lang.String METHOD_1 ( java.lang.String expected ) { return expected . METHOD_2 ( STRING_1 , STRING_2 ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { assert ! ( METHOD_2 ( ) ) ; return VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , false , false ) ; } 
private java.io.File METHOD_1 ( ) { return new java.io.File ( TYPE_1 . METHOD_2 ( ) ) ; } 
public native java.lang.Object get ( java.lang.Object VAR_1 ) throws TYPE_1 , java.lang.IllegalArgumentException ; 
public int METHOD_1 ( android.bluetooth.BluetoothDevice device ) { int VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , TYPE_1 . METHOD_4 ( device . METHOD_5 ( ) ) , VAR_2 ) ; return VAR_1 ; } 
final void METHOD_1 ( TYPE_1 context ) { METHOD_2 ( context ) ; VAR_1 = TYPE_2 . METHOD_3 ( context ) . VAR_2 ; } 
public void METHOD_1 ( ) { this . VAR_1 = null ; } 
public void METHOD_1 ( ) { synchronized ( this ) { METHOD_2 ( ) ; VAR_1 = VAR_2 . METHOD_3 ( ) ; VAR_3 = VAR_2 . METHOD_4 ( ) ; } METHOD_5 ( ) ; } 
public static long METHOD_1 ( ) { long a ; long b ; long c ; a = Main . METHOD_2 ( INT_1 ) ; b = Main . METHOD_2 ( INT_2 ) ; c = a + b ; return c ; } 
protected final TYPE_1 METHOD_1 ( ) { try { return METHOD_2 ( ) ; } catch ( java.lang.Throwable t ) { METHOD_3 ( t ) ; return null ; } } 
public static void METHOD_1 ( java.lang.Object VAR_1 , java.lang.String VAR_2 ) { } 
public static int METHOD_1 ( int value ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( ( int ) ( ( float ) ( value ) ) ) ; } 
protected void METHOD_1 ( boolean VAR_1 ) throws java.io.IOException { synchronized ( METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( fd , VAR_1 ) ; } } 
public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) ) ; } 
synchronized void METHOD_1 ( long id , int [ ] VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 ) ; } 
public static void METHOD_1 ( java.lang.String name ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( name , null ) ; } 
public boolean METHOD_1 ( int slotId , int VAR_1 , int VAR_2 ) throws android.os.RemoteException { return false ; } 
public int METHOD_1 ( ) { return VAR_1 ; } 
public java.lang.Object expected ( ) { return false ; METHOD_1 ( FLOAT_1 ) ; } 
public void METHOD_1 ( TYPE_1 e ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; if ( ( mContext ) != ( VAR_3 ) ) { METHOD_3 ( ) ; } } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . type ) ; assert VAR_1 != null ; return VAR_1 ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { TYPE_1 VAR_2 = new TYPE_1 ( ) ; METHOD_1 ( 3 , STRING_1 , VAR_1 , VAR_2 , new TYPE_2 ( ) ) ; } 
private TYPE_1 METHOD_1 ( int [ ] [ ] VAR_1 , int [ ] [ ] VAR_2 ) throws java.lang.Exception { return METHOD_1 ( getName ( ) , VAR_1 , VAR_2 , TYPE_2 . METHOD_2 ( ) ) ; } 
static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) throws android.os.RemoteException { VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; } 
public long METHOD_1 ( ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) return 0 ; return service . METHOD_1 ( ) ; } 
public static TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 type , TYPE_3 VAR_2 ) { if ( VAR_2 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } return TYPE_1 . METHOD_2 ( VAR_1 , type , VAR_2 ) ; } 
private void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; VAR_2 = TYPE_1 . METHOD_1 ( context , VAR_1 , VAR_3 ) ; } 
private void METHOD_1 ( java.lang.String format , java.lang.Object ... args ) { VAR_1 . error ( null , format , args ) ; TYPE_1 . METHOD_2 ( 1 ) ; } 
synchronized void METHOD_1 ( int VAR_1 , int VAR_2 , int a ) { METHOD_2 ( ) ; METHOD_3 ( mContext , VAR_1 , VAR_2 , a ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) throws android.os.RemoteException { VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ; METHOD_3 ( STRING_5 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , android.os.Bundle VAR_3 ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , 0 , false ) ; } 
public final native void METHOD_1 ( short [ ] VAR_1 ) ; 
protected boolean METHOD_1 ( TYPE_1 node ) { synchronized ( node ) { return node . METHOD_2 ( VAR_1 ) ; } } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; final TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( this ) ; } } 
public final TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( ) ; } VAR_2 = new TYPE_3 ( VAR_1 ) ; return this ; } 
private native boolean METHOD_1 ( int action , int index ) ; 
public void METHOD_1 ( android.bluetooth.BluetoothDevice VAR_1 , TYPE_1 config , boolean VAR_2 ) { android.util.Log.d ( VAR_3 . TAG , ( ( ( STRING_1 + ( VAR_1 == null ? null : VAR_1 . toString ( ) ) ) + STRING_2 ) + VAR_2 ) ) ; } 
private static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 ; VAR_3 = new TYPE_2 ( VAR_1 , true , VAR_2 , new TYPE_3 ( ) ) ; if ( VAR_3 . METHOD_2 ( ) ) { TYPE_4 . METHOD_3 ( true ) ; } } 
public TYPE_1 METHOD_1 ( ) { try { return ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { return null ; } } 
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( new TYPE_3 ( ) . build ( ) ) ; } 
public boolean METHOD_1 ( java.lang.Object element , java.lang.String VAR_1 ) { return false ; } 
public void METHOD_1 ( ) { android.util.Log.v ( VAR_1 . TAG , STRING_1 ) ; if ( ( VAR_2 ) != null ) { METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_2 = null ; } } 
private void METHOD_1 ( int VAR_1 ) { VAR_1 = METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 , ( ( VAR_4 ) | ( VAR_5 ) ) ) ; } 
public void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( java.io.IOException e ) { } } super . METHOD_1 ( ) ; } } 
public void METHOD_1 ( TYPE_1 session , TYPE_2 state ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( this , state ) ; } } 
synchronized void METHOD_1 ( long VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , VAR_2 , false ) ; } 
public boolean METHOD_1 ( ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) return false ; int VAR_1 = service . METHOD_3 ( ) ; return VAR_1 >= ( VAR_2 ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 context ) { TYPE_3 VAR_1 = new TYPE_3 ( context ) ; return new TYPE_1 ( VAR_1 , VAR_1 , VAR_1 , TYPE_4 . METHOD_1 ( context ) , new TYPE_5 ( TYPE_1 . TAG , VAR_2 , VAR_3 ) ) ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( java.lang.String id ) throws java.lang.Exception { VAR_1 . get ( id ) . state = VAR_2 ; for ( TYPE_1 a : VAR_3 ) { a . METHOD_2 ( id ) ; } } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( ) { return TYPE_3 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , null , TYPE_1 . METHOD_3 ( STRING_1 ) , false ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
public static void run ( ) { TYPE_1 . METHOD_1 ( VAR_1 class ) ; TYPE_2 . METHOD_2 ( ) ; } 
public void METHOD_1 ( byte [ ] in , int VAR_1 , int VAR_2 ) { VAR_3 . METHOD_1 ( in , VAR_1 , VAR_2 ) ; VAR_4 . METHOD_1 ( in , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object ... args ) ; 
public java.lang.String METHOD_1 ( ) { if ( METHOD_2 ( ) ) { char [ ] VAR_1 = VAR_2 . METHOD_3 ( ) ; VAR_1 [ 0 ] = CHAR_1 ; return new java.lang.String ( VAR_1 ) ; } return VAR_2 ; } 
TYPE_1 METHOD_1 ( int VAR_1 ) throws android.os.RemoteException ; 
public void METHOD_1 ( TYPE_1 VAR_1 ) ; 
public TYPE_1 METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 , java.lang.Object VAR_3 , TYPE_2 listener ) { return TYPE_3 . METHOD_2 ( ) ; } 
public java.lang.String toString ( ) { java.lang.String VAR_1 = METHOD_1 ( ) ; java.lang.String name = java.lang.String.format ( STRING_1 , METHOD_2 ( ) , METHOD_3 ( ) ) ; if ( VAR_1 != null ) { name += java.lang.String.format ( STRING_2 , VAR_1 ) ; } return name ; } 
public native boolean METHOD_1 ( java.lang.Class < ? > VAR_1 ) ; 
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 3 , INT_1 , false ) ; args.out = TYPE_3 . METHOD_3 ( args . in , t ) ; } 
private void METHOD_1 ( ) { int VAR_1 = 0 ; VAR_1 = VAR_2 . METHOD_2 ( ) . size ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( 1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ! ( METHOD_2 ( ) ) ) { TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 ) ; return ; } METHOD_4 ( VAR_2 ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.util.Set < java.lang.String > VAR_2 , java.util.Set < java.lang.String > VAR_3 , java.util.Set < java.lang.String > VAR_4 , TYPE_3 VAR_5 ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { new TYPE_1 ( VAR_1 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . getName ( ) , TYPE_3 . toString ( ) ) . METHOD_4 ( ) ; } 
public boolean METHOD_1 ( TYPE_1 event ) { return event . METHOD_2 ( this ) ; } 
final void METHOD_1 ( TYPE_1 app ) { METHOD_1 ( app , VAR_1 , VAR_2 ) ; } 
public static void METHOD_1 ( int expected , int VAR_1 ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( expected ) , TYPE_2 . METHOD_3 ( VAR_1 ) ) ; } 
public void METHOD_1 ( int slotId , int VAR_1 , int VAR_2 , int VAR_3 , android.os.Message VAR_4 ) throws android.os.RemoteException { } 
public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { if ( key . METHOD_2 ( STRING_1 ) ) { VAR_2 = new java.lang.String [ VAR_1 ] ; return VAR_3 ; } return null ; } 
public void run ( ) { assert ( VAR_1 ) != 0 : STRING_1 ; METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) == null ) { return ; } METHOD_4 ( ) ; } 
private void METHOD_1 ( long time ) { VAR_1 . METHOD_2 ( time ) ; VAR_2 = time ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 = true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null , null ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } } 
public static int METHOD_1 ( ) { int VAR_1 = Main . METHOD_2 ( 7 ) ; long VAR_2 = Main . METHOD_3 ( INT_1 ) ; return VAR_1 > > VAR_2 ; } 
private void METHOD_1 ( TYPE_1 rr , java.lang.String VAR_1 , java.lang.Exception e ) { METHOD_2 ( VAR_1 , e ) ; rr . METHOD_3 ( VAR_2 , null ) ; METHOD_4 ( rr ) ; rr . METHOD_5 ( ) ; METHOD_6 ( ) ; } 
public void METHOD_1 ( int VAR_1 ) { for ( int VAR_2 = 0 ; VAR_2 < VAR_1 ; ++ VAR_2 ) { TYPE_1 . METHOD_2 ( d , 5 ) ; } } 
void METHOD_1 ( int VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_2 . METHOD_2 ( context , VAR_1 ) ; } } 
static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 ) ; return new TYPE_1 ( VAR_1 , VAR_2 ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { final java.lang.String result = VAR_2 . get ( VAR_1 . METHOD_2 ( VAR_3 ) ) ; if ( result != null ) { return result ; } return TYPE_1 . METHOD_3 ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( VAR_2 ) ) ; TYPE_1 VAR_3 = VAR_1 . METHOD_2 ( ) ; return VAR_3 ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; Main . METHOD_3 ( ) ; Main . METHOD_4 ( ) ; } 
public java.lang.String METHOD_1 ( java.lang.String url , boolean VAR_1 ) { throw new TYPE_1 ( ) ; } 
public static int METHOD_1 ( int arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( arg > > INT_1 ) & INT_2 ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_1 , VAR_3 , VAR_2 ) ; return VAR_3 ; } 
public static void METHOD_1 ( java.lang.String [ ] args ) { TYPE_1 . METHOD_2 ( VAR_1 class ) ; Main . METHOD_3 ( new TYPE_2 ( ) , new TYPE_3 ( ) ) ; } 
private static native int METHOD_1 ( int address , java.lang.String text , int offset ) ; 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object ... arg ) { if ( ! ( VAR_2 ) ) { VAR_3 . METHOD_2 ( java.lang.String.format ( VAR_1 , arg ) ) ; } } 
public synchronized void METHOD_1 ( TYPE_1 state ) { throw new TYPE_2 ( ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( ( ( ( VAR_2 ) != null ) && ( ( VAR_3 ) != null ) ) && ( VAR_2 . METHOD_3 ( ) ) ) && ( VAR_3 . METHOD_3 ( ) ) ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = METHOD_2 ( ) ; try { assertNotNull ( VAR_1 . METHOD_3 ( ) ) ; } catch ( java.lang.Exception ex ) { fail ( ( STRING_1 + ex ) ) ; } } 
public void METHOD_1 ( ) { assert ( VAR_1 ) != 0 : STRING_1 ; METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( int VAR_1 , TYPE_1 key , TYPE_2 VAR_2 ) throws TYPE_3 { try { METHOD_2 ( VAR_1 , key , null ) ; } catch ( TYPE_4 e ) { throw new java.lang.RuntimeException ( e ) ; } } 
private void METHOD_1 ( TYPE_1 event ) { synchronized ( VAR_1 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) , event ) ) ; } } 
public static void METHOD_1 ( final TYPE_1 context ) { TYPE_2 . METHOD_2 ( ( ) - > { new TYPE_3 ( context . METHOD_3 ( ) ) . METHOD_4 ( null ) ; } ) ; } 
private void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) && ( VAR_2 . METHOD_2 ( ) ) ) { try { VAR_3 . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; } catch ( android.os.RemoteException e ) { } } } 
public final TYPE_1 call ( ) { try { return METHOD_1 ( ) ; } catch ( java.lang.Throwable t ) { METHOD_2 ( t ) ; return null ; } } 
public void METHOD_1 ( char c ) throws android.os.RemoteException { } 
void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 ) ; 
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { TYPE_1 . METHOD_2 ( VAR_2 , 0 , count ) ; VAR_1 = true ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_4 ( ) ; } super . METHOD_1 ( ) ; } 
private boolean METHOD_1 ( ) { return ( VAR_1 ) || ( ( ( ! ( VAR_2 ) ) && ( ! ( VAR_3 ) ) ) && ( ! ( VAR_4 ) ) ) ; } 
private boolean METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; return VAR_1 == null ? false : VAR_1 . METHOD_3 ( ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { return ; } fail ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) ) ; } 
public synchronized void METHOD_1 ( long VAR_1 ) { throw new TYPE_1 ( ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) VAR_1 = null ; if ( ( VAR_2 ) != null ) VAR_2 = null ; } 
public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { METHOD_2 ( new TYPE_3 ( METHOD_3 ( x ) , VAR_2 . METHOD_4 ( ) ) ) ; } catch ( java.lang.Throwable e ) { throw METHOD_5 ( x , e ) ; } } 
public static int METHOD_1 ( ) { int VAR_1 = Main . METHOD_2 ( ( - 7 ) ) ; long VAR_2 = Main . METHOD_3 ( INT_1 ) ; return VAR_1 > > > VAR_2 ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { synchronized ( this ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } return VAR_2 ; } } 
public void METHOD_1 ( ) { TYPE_1 msg = TYPE_2 . METHOD_2 ( null ) ; METHOD_3 ( STRING_1 , msg ) ; } 
public void METHOD_1 ( TYPE_1 context , android.content.Intent VAR_1 ) { java.lang.String packageName = VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 . i ( STRING_1 , ( STRING_2 + packageName ) ) ; TYPE_3 . METHOD_3 ( context , packageName ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; TYPE_2 obj = VAR_1 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; TYPE_3 . METHOD_5 ( obj . METHOD_6 ( ) ) ; } 
static void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 parent ) { VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( parent ) ; METHOD_4 ( VAR_1 ) ; } 
public static TYPE_1 get ( TYPE_2 context ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( context ) ; } return VAR_1 ; } 
public synchronized void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; } 
public java.lang.Class < ? > [ ] METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { return null ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( 0 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , null ) ; try { VAR_1 . METHOD_2 ( null ) ; fail ( STRING_2 ) ; } catch ( java.lang.NullPointerException e ) { } } 
public void METHOD_1 ( java.lang.String app , java.lang.String version ) { METHOD_2 ( app , version ) ; } 
public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( 5 ) ; c . METHOD_2 ( STRING_1 , VAR_1 , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } } 
public void METHOD_1 ( ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return ; } service . METHOD_1 ( ) ; } 
java.util.Set < java.lang.String > METHOD_1 ( TYPE_1 info ) { java.util.Set < java.lang.String > VAR_1 = new TYPE_2 < java.lang.String > ( 100 ) ; METHOD_2 ( info , VAR_1 ) ; return VAR_1 ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; throw new TYPE_3 ( STRING_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; assertFalse ( VAR_1 . METHOD_2 ( ) ) ; } 
public static boolean METHOD_1 ( TYPE_1 context ) { return VAR_1 . METHOD_2 ( context ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 status ) { return VAR_1 . get ( status ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( 0 ) ; METHOD_2 ( ) ; } catch ( java.lang.IllegalArgumentException VAR_2 ) { } } 
private void METHOD_1 ( int VAR_1 ) { this . VAR_2 = VAR_1 ; } 
synchronized void METHOD_1 ( int VAR_1 , int VAR_2 , int [ ] VAR_3 , java.lang.String [ ] VAR_4 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
public void METHOD_1 ( ) { TYPE_1 t = new TYPE_1 ( mRS , VAR_1 , VAR_2 ) ; t . METHOD_2 ( ) ; METHOD_3 ( ) ; assertEquals ( result , VAR_3 ) ; } 
public final TYPE_1 METHOD_1 ( ) { if ( key . METHOD_2 ( ) ) { throw new TYPE_2 ( STRING_1 ) ; } METHOD_3 ( ) ; return VAR_1 ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { if ( name == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } java.lang.String value = VAR_2 . METHOD_1 ( name ) ; return value != null ? value : VAR_1 ; } 
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; } catch ( java.io.IOException VAR_2 ) { } } 
java.io.File METHOD_1 ( ) ; 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return VAR_1 . METHOD_2 ( ) ? VAR_2 : ( VAR_1 + STRING_1 ) + VAR_2 ; } 
public void METHOD_1 ( TYPE_1 address , java.lang.String VAR_1 , int flags , int VAR_2 ) { } 
private void METHOD_1 ( int index ) { if ( ( index < ( VAR_1 ) ) && ( index >= ( VAR_2 ) ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String.format ( STRING_1 , index , VAR_1 , VAR_2 ) ) ; } } 
synchronized void METHOD_1 ( int id , int [ ] VAR_1 , java.lang.String [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 ) ; } 
native int METHOD_1 ( int VAR_1 , int id , int VAR_2 ) ; 
public final boolean METHOD_1 ( long VAR_1 ) { return super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 location , java.lang.String VAR_2 , java.lang.Object data ) { if ( location != null ) { METHOD_1 ( VAR_1 , location . METHOD_2 ( ) ) ; } } 
public java.io.File METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; } 
protected synchronized int METHOD_1 ( TYPE_1 p ) throws java.io.IOException { METHOD_2 ( p , VAR_1 ) ; return p . METHOD_3 ( ) ; } 
public void METHOD_1 ( android.bluetooth.BluetoothDevice device ) { VAR_1 . METHOD_2 ( device . METHOD_3 ( ) ) ; } 
void test ( ) { METHOD_1 ( ( ( INT_1 - ( VAR_1 ) ) - ( VAR_2 ) ) ) ; if ( ( VAR_3 . METHOD_2 ( ) ) == null ) { status = VAR_4 ; } else { status = VAR_5 ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ; METHOD_2 ( this , VAR_1 ) ; } 
public static native int METHOD_1 ( int VAR_1 , int VAR_2 ) ; 
public boolean METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; return false ; } 
public void METHOD_1 ( TYPE_1 context , java.lang.String VAR_1 ) { } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; assertTrue ( STRING_1 , VAR_1 . METHOD_3 ( ) ) ; } 
public long METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { synchronized ( VAR_3 ) { TYPE_2 VAR_4 = METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) ; if ( VAR_4 == null ) { return 0 ; } return VAR_5 ; } } 
public static native TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) ; 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( 12 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
private static boolean METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; return ( VAR_1 == null ) || ( VAR_1 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( int VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; } } catch ( android.os.RemoteException VAR_5 ) { } } 
public void METHOD_1 ( java.lang.String line ) throws java.lang.Exception { java.lang.String [ ] VAR_1 = new java.lang.String [ 5 ] ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( line , CHAR_1 , VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_1 , line ) ; } 
public static int METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { return TYPE_2 . METHOD_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; } 
private static native TYPE_1 METHOD_1 ( java.lang.Class < ? > VAR_1 ) ; 
public boolean METHOD_1 ( int subId ) { TYPE_1 VAR_1 = METHOD_2 ( subId ) ; if ( VAR_1 != null ) { return VAR_1 . METHOD_3 ( ) ; } else { return false ; } } 
public native void METHOD_1 ( ) ; 
public void METHOD_1 ( int VAR_1 , android.os.Message VAR_2 ) throws android.os.RemoteException { synchronized ( VAR_3 ) { this . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
public byte [ ] call ( ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 ) ; } 
public static boolean METHOD_1 ( ) { return false ; } 
double METHOD_1 ( int index ) { throw new TYPE_1 ( ) ; } 
public void METHOD_1 ( java.lang.String [ ] VAR_1 ) { VAR_2 = VAR_1 ; } 
public int METHOD_1 ( ) { long VAR_1 = TYPE_1 . METHOD_2 ( value ) ; return ( ( int ) ( VAR_1 ^ ( VAR_1 > > > INT_1 ) ) ) ; } 
public java.util.List < android.bluetooth.BluetoothDevice > METHOD_1 ( int [ ] VAR_1 ) { TYPE_1 service = METHOD_2 ( ) ; if ( service == null ) { return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( 0 ) ; } return service . METHOD_1 ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( int index ) { int i = 0 ; for ( TYPE_1 VAR_1 : TYPE_1 . values ( ) ) { if ( i == index ) { return VAR_1 ; } i ++ ; } return null ; } 
private static java.lang.Object METHOD_1 ( java.lang.Object key ) { return key == ( VAR_1 ) ? null : key ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) { VAR_3 = false ; } } 
public static java.lang.String METHOD_1 ( TYPE_1 input ) { java.lang.StringBuilder sb = new java.lang.StringBuilder ( ) ; TYPE_2 . METHOD_1 ( input , sb ) ; return sb . toString ( ) ; } 
public void run ( ) { c . METHOD_1 ( 0 ) . toString ( ) ; } 
public void METHOD_1 ( boolean VAR_1 , android.os.Message result ) { } 
public static void METHOD_1 ( java.lang.String [ ] args ) { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; TYPE_2 w = new TYPE_2 ( ) ; Main . METHOD_3 ( new TYPE_3 ( w ) , w ) ; } 
native int METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , byte [ ] VAR_4 , int length ) ; 
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( METHOD_2 ( VAR_1 ) ) { VAR_2 . METHOD_3 ( STRING_1 , VAR_1 ) ; } } 
public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; return VAR_1 . METHOD_1 ( ) ; } 
public void run ( ) { VAR_1 . METHOD_1 ( ) ; } 
public byte [ ] METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { throw new TYPE_1 ( ( STRING_1 + VAR_1 ) ) ; } return METHOD_1 ( ) ; } 
public void METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( ) ; if ( VAR_2 != null ) VAR_2 . METHOD_3 ( this ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 . getName ( ) , VAR_3 ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; synchronized ( this ) { VAR_2 = METHOD_2 ( ) ; METHOD_3 ( ) ; } } 
public void run ( ) { if ( VAR_1 . METHOD_1 ( ) ) { VAR_1 . METHOD_2 ( false , true ) ; } else { VAR_1 . METHOD_3 ( ) ; } } 
private TYPE_1 METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return STRING_1 ; } return context . METHOD_3 ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 e ) { int id = VAR_1 . METHOD_2 ( 3 , e . METHOD_3 ( VAR_1 ) ) ; return new TYPE_1 ( id , VAR_1 ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_1 ( ) ; } 
public static int METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; return TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; } finally { VAR_1 . METHOD_5 ( ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException { if ( METHOD_2 ( ) ) { throw new TYPE_3 ( STRING_1 ) ; } TYPE_4 . METHOD_3 ( fd , VAR_3 , TYPE_5 . METHOD_4 ( VAR_1 , VAR_2 ) ) ; } 
public static double METHOD_1 ( ) { double a ; double b ; double c ; a = Main . METHOD_2 ( FLOAT_1 ) ; b = Main . METHOD_2 ( FLOAT_2 ) ; c = a % b ; return c ; } 
synchronized long METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 type , java.lang.String name , boolean VAR_1 , boolean VAR_2 ) { return new TYPE_1 ( type , name , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( byte VAR_1 , byte [ ] data ) { VAR_2 . METHOD_1 ( VAR_1 , data ) ; } 
synchronized void METHOD_1 ( long id , int [ ] VAR_1 , java.lang.String [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 ) ; } 
private boolean METHOD_1 ( TYPE_1 node ) { synchronized ( node ) { return node . METHOD_2 ( VAR_1 class ) ; } } 
public void METHOD_1 ( ) { METHOD_1 ( VAR_1 ) ; } 
public abstract void METHOD_1 ( java.lang.String VAR_1 , java.io.File out , boolean VAR_2 , java.io.File ... VAR_3 ) throws java.lang.Exception ; 
protected void METHOD_1 ( boolean VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { try { assertTrue ( VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ) ; } catch ( java.lang.Throwable t ) { METHOD_3 ( t ) ; } } 
void METHOD_1 ( ) { METHOD_2 ( ( ( FLOAT_1 - ( cts ) ) - ( VAR_1 ) ) ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( ) ; METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( ) . METHOD_7 ( ) ; } 
public static int METHOD_1 ( int arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = - arg ; return VAR_2 + ( - VAR_2 ) ; } 
private native java.lang.Object invoke ( java.lang.Object VAR_1 , java.lang.Object [ ] args , boolean VAR_2 ) throws TYPE_1 , java.lang.IllegalArgumentException , TYPE_2 ; 
public static java.lang.String [ ] METHOD_1 ( ) { if ( ( VAR_1 ) >= ( VAR_2 ) ) { return VAR_3 ; } if ( ( VAR_1 ) >= ( VAR_4 ) ) { return VAR_5 ; } return VAR_6 ; } 
public void METHOD_1 ( TYPE_1 < java.io.File > VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public static java.lang.String METHOD_1 ( TYPE_1 node ) { return TYPE_2 . METHOD_1 ( node , TYPE_3 . METHOD_2 ( ) , TYPE_4 . get ( node ) , TYPE_5 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { synchronized ( VAR_3 ) { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; } else { VAR_5 . METHOD_1 ( VAR_1 , VAR_2 ) ; } } } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { int VAR_3 = 0 ; if ( VAR_2 != null ) { VAR_4 = false ; VAR_3 = VAR_5 ; } TYPE_2 . METHOD_2 ( VAR_6 , VAR_7 , VAR_3 ) ; } 
protected void METHOD_1 ( byte [ ] VAR_1 ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; } 
synchronized long METHOD_1 ( java.lang.String VAR_1 , long [ ] VAR_2 ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { final java.lang.String VAR_1 = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) ; final java.lang.String expected = STRING_7 + STRING_8 ; assertEquals ( expected , METHOD_2 ( VAR_1 ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_2 ( true ) ; } METHOD_3 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; TYPE_2 field = VAR_1 . METHOD_3 ( ) . METHOD_5 ( ) ; if ( field != null ) { METHOD_2 ( field ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( INT_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public static void METHOD_1 ( java.lang.Object VAR_1 ) { java.lang.System.out.println ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_1 != null ? VAR_1 instanceof TYPE_1 ? STRING_3 : VAR_1 . METHOD_2 ( ) : STRING_4 ) ) + STRING_5 ) ) ; } 
public static TYPE_1 METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : return new TYPE_1 ( STRING_1 ) ; default : return new TYPE_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; } } 
public void METHOD_1 ( int VAR_1 , android.os.Message VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) throws java.lang.Throwable { try { VAR_1 . METHOD_2 ( ) ; if ( ( fd ) != null ) METHOD_3 ( ) ; } finally { super . METHOD_1 ( ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 != null ) { TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , 1 ) ; assertEquals ( VAR_3 , VAR_4 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { if ( VAR_2 ) { session . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( VAR_4 , session ) ; VAR_2 = false ; } super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . METHOD_3 ( VAR_3 ) ) ; TYPE_1 . METHOD_4 ( VAR_2 . METHOD_5 ( ) , TYPE_2 . METHOD_6 ( VAR_4 class ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { if ( ( VAR_2 ) > 0 ) { try { TYPE_2 . METHOD_2 ( VAR_2 ) ; } catch ( TYPE_3 e ) { } } VAR_1 . println ( ( STRING_1 + STRING_2 ) ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { return new TYPE_4 ( VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) , new TYPE_5 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 context ) { METHOD_2 ( context , context . METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 value ) { if ( value == null ) { throw new java.lang.NullPointerException ( ) ; } VAR_1 |= 8 ; VAR_2 = value ; METHOD_2 ( ) ; return this ; } 
public void verify ( TYPE_1 key , TYPE_2 VAR_1 ) throws TYPE_3 , TYPE_4 , TYPE_5 , TYPE_6 { TYPE_7 . verify ( this , key , VAR_1 ) ; } 
java.lang.String [ ] METHOD_1 ( ) { return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , false ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; assertEquals ( STRING_2 , VAR_2 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = null ; address = 0 ; } 
public void METHOD_1 ( int method ) { METHOD_2 ( method ) ; } 
public static boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { return false ; } return TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ; } 
static void METHOD_1 ( int [ ] VAR_1 ) { VAR_1 [ 0 ] = 1 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { float VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( 0 , 0 ) ; TYPE_3 . METHOD_3 ( VAR_3 , VAR_4 , VAR_5 , VAR_2 ) ; METHOD_4 ( VAR_3 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; if ( VAR_2 == null ) { METHOD_2 ( STRING_1 ) ; return null ; } return VAR_2 ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , TYPE_3 VAR_2 ) { return TYPE_4 . METHOD_2 ( VAR_3 . METHOD_3 ( VAR_1 , VAR_4 ) , VAR_5 . METHOD_4 ( VAR_2 , VAR_4 ) ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( VAR_2 . length ( ) ) > 0 ) && ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { return ( VAR_2 ) + VAR_1 ; } return VAR_1 ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; } 
static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 b ) { TYPE_1 r = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) ; return r ; } 
public java.lang.String toString ( ) { if ( ( count ) == 0 ) { return STRING_1 ; } return TYPE_1 . METHOD_1 ( 0 , count , value ) ; } 
public void METHOD_1 ( int result ) { if ( result == ( VAR_1 ) ) { status = VAR_2 ; } else { METHOD_2 ( ) ; status = VAR_3 ; } METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException , TYPE_3 { VAR_3 = new TYPE_4 ( ) ; TYPE_5 . METHOD_2 ( VAR_1 , VAR_3 ) ; TYPE_6 . METHOD_3 ( VAR_2 , VAR_3 ) ; return this ; } 
public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { throw new TYPE_2 ( ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) throws java.io.IOException { METHOD_1 ( VAR_1 , VAR_2 , 1 , STRING_1 , 12 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 method , TYPE_3 VAR_2 , int offset , TYPE_4 VAR_3 ) { VAR_4 = false ; VAR_3 . METHOD_2 ( VAR_1 , method , VAR_2 , offset , this ) ; return VAR_4 ; } 
synchronized int METHOD_1 ( int id ) { METHOD_2 ( ) ; return METHOD_3 ( mContext , id ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true ) ; try { key . METHOD_3 ( TYPE_1 . METHOD_4 ( STRING_1 ) ) ; } catch ( TYPE_2 expected ) { } } 
public void error ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 . log ( VAR_3 , VAR_2 ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 . get ( this . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( java.lang.String [ ] VAR_1 ) throws android.os.RemoteException { } 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( false , null ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 e ) { } } 
boolean METHOD_1 ( TYPE_1 project , TYPE_2 VAR_1 ) ; 
public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 , false ) ; } 
public static < TYPE_1 , TYPE_2 > TYPE_3 < java.util.Map < TYPE_1 , TYPE_2 > > METHOD_1 ( TYPE_3 < TYPE_1 > VAR_1 ) { return TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 < TYPE_2 > METHOD_3 ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = 8 ; VAR_9 = 10 ; VAR_10 = 0 ; VAR_11 = 0 ; return true ; } 
private static long METHOD_1 ( com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws TYPE_1 { byte [ ] VAR_1 = TYPE_2 . METHOD_2 ( type ) ; TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 ) ; return VAR_2 . METHOD_3 ( ) ; } 
public void run ( ) { synchronized ( this ) { METHOD_1 ( ) ; VAR_1 = VAR_2 . METHOD_2 ( ) ; } } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { final boolean VAR_2 = METHOD_2 ( VAR_1 ) ; synchronized ( VAR_3 ) { return METHOD_3 ( VAR_1 , VAR_2 ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . d ( this , STRING_1 , VAR_1 ) ; if ( TYPE_3 . equals ( VAR_1 , VAR_2 ) ) { METHOD_2 ( null ) ; METHOD_3 ( ) ; } } 
public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 , STRING_3 } ) ; } catch ( TYPE_2 e ) { fail ( STRING_4 ) ; } } 
public android.os.Bundle METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws android.os.RemoteException { return new TYPE_1 ( ) . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
private boolean METHOD_1 ( java.lang.String format ) { return VAR_1 . METHOD_2 ( ) . equals ( format ) ; } 
public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( null ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } } 
public void METHOD_1 ( java.lang.String ... VAR_1 ) { METHOD_1 ( VAR_2 < java.lang.String > METHOD_2 ( ) , VAR_1 ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 provider ) { TYPE_2 result = METHOD_2 ( STRING_1 , VAR_1 , provider , VAR_3 ) ; java.lang.String VAR_4 = METHOD_3 ( VAR_5 ) ; METHOD_4 ( STRING_2 , VAR_2 , VAR_4 ) ; } 
void METHOD_1 ( java.io.File in , java.io.File out , boolean VAR_1 ) throws java.lang.Exception ; 
public TYPE_1 or ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( VAR_1 ) ; return this ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( this ) ; VAR_2 . METHOD_3 ( this ) ; VAR_3 . METHOD_4 ( this ) ; VAR_3 . METHOD_5 ( this ) ; METHOD_6 ( ) ; METHOD_7 ( ( STRING_1 + ( this ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_3 = true ; VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public static long METHOD_1 ( ) { float VAR_1 = Main . METHOD_2 ( FLOAT_1 ) ; return ( ( long ) ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( STRING_1 , null ) ; try { c . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_2 ) ) ; fail ( STRING_3 ) ; } catch ( java.lang.NullPointerException e ) { } } 
protected synchronized boolean METHOD_1 ( ) { android.util.Log . i ( VAR_1 . TAG , STRING_1 ) ; if ( ! ( VAR_2 ) ) { android.util.Log.w ( VAR_1 . TAG , STRING_2 ) ; return true ; } VAR_2 = false ; return true ; } 
private static final int METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ( VAR_1 == ( VAR_3 ) ) || ( VAR_2 == ( VAR_3 ) ) ) { return VAR_3 ; } return VAR_1 > VAR_2 ? VAR_1 : VAR_2 ; } 
public static short METHOD_1 ( float value ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( ( short ) ( value ) ) ; } 
public synchronized void METHOD_1 ( TYPE_1 locale ) { TYPE_2 . METHOD_1 ( VAR_1 , locale . toString ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , false ) ; } 
void METHOD_1 ( long VAR_1 , boolean VAR_2 ) { this . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_1 ( this . VAR_3 , VAR_1 , VAR_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 ) { METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.Integer VAR_2 , java.lang.Integer VAR_3 ) throws java.lang.Exception { TYPE_1 . METHOD_1 ( verify ( VAR_1 , VAR_2 , VAR_3 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; boolean VAR_3 = VAR_4 . METHOD_4 ( VAR_5 ) ; org.mockito.Mockito.verify ( VAR_1 ) . METHOD_5 ( ) ; assertEquals ( VAR_3 , true ) ; } 
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 c = VAR_2 . METHOD_3 ( ) ; METHOD_4 ( ( STRING_1 + c ) , c ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { if ( METHOD_2 ( ) . METHOD_3 ( ) ) { throw new TYPE_2 ( STRING_1 ) ; } METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; } 
public < TYPE_1 , TYPE_2 > java.util.Map < TYPE_1 , TYPE_2 > METHOD_1 ( TYPE_3 < java.util.Map < TYPE_1 , TYPE_2 > > action ) { return METHOD_1 ( action , false ) ; } 
private boolean METHOD_1 ( android.bluetooth.BluetoothDevice device ) { if ( device == null ) return false ; if ( TYPE_1 . METHOD_2 ( device . METHOD_3 ( ) ) ) return true ; return false ; } 
public static boolean METHOD_1 ( byte [ ] VAR_1 ) { return ( VAR_1 != null ) && ( ( VAR_1 . length ) > 0 ) ; } 
public void METHOD_1 ( int subId , int VAR_1 ) throws android.os.RemoteException { this . METHOD_1 ( subId , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_4 ( false ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 = new TYPE_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( 0 , 0 , METHOD_3 ( ) , METHOD_4 ( ) ) ; VAR_2 = VAR_1 ; } 
protected boolean METHOD_1 ( char c ) { return ( ( c == CHAR_1 ) || ( c == CHAR_2 ) ) || ( c == CHAR_3 ) ; } 
protected void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( java.io.IOException e ) { TYPE_1 . log ( VAR_2 , STRING_1 , e ) ; } } 
private static native void METHOD_1 ( int VAR_1 ) ; 
private static TYPE_1 METHOD_1 ( long VAR_1 , long VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 listener , int VAR_1 ) throws android.os.RemoteException { return ; } 
private static void METHOD_1 ( int expected , int VAR_1 ) { assertEquals ( TYPE_1 . METHOD_2 ( expected ) , TYPE_1 . METHOD_2 ( VAR_1 ) ) ; } 
native void METHOD_1 ( int VAR_1 , int id , int [ ] data ) ; 
public void METHOD_1 ( TYPE_1 p ) { TYPE_1 VAR_1 = METHOD_2 ( p ) ; assertEquals ( p , VAR_1 ) ; } 
public int METHOD_1 ( ) { return ( this ) == ( VAR_1 ) ? VAR_2 : VAR_3 ; } 
public boolean METHOD_1 ( final java.lang.String s ) { return VAR_1 . METHOD_2 ( s ) . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return TYPE_2 . assertNotNull ( VAR_1 ) ; } 
public boolean METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { return VAR_1 . METHOD_3 ( ) ; } else { return VAR_1 . METHOD_4 ( ) ; } } 
public void METHOD_1 ( com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws TYPE_1 { try { VAR_1 . METHOD_2 ( VAR_2 , type ) ; } catch ( TYPE_2 e ) { throw new TYPE_1 ( new TYPE_3 ( e ) ) ; } } 
private native boolean METHOD_1 ( int VAR_1 , int VAR_2 ) ; 
void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } 
public java.util.List < java.lang.String > METHOD_1 ( java.io.File VAR_1 ) { return TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , java.lang.Integer . toString ( VAR_2 ) , VAR_3 , STRING_3 , STRING_4 , VAR_1 . METHOD_3 ( ) , STRING_5 , STRING_6 ) ; } 
public static TYPE_1 METHOD_1 ( int id , int ... VAR_1 ) { return new TYPE_1 ( id , ( - 1 ) , TYPE_1 . METHOD_2 ( id , VAR_1 ) ) ; } 
public void METHOD_1 ( TYPE_1 x ) { METHOD_1 ( ( ( TYPE_2 ) ( x ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) . METHOD_4 ( VAR_1 , true ) ; TYPE_1 . METHOD_5 ( INT_1 ) ; assertEquals ( VAR_2 , METHOD_6 ( ) ) ; } 
public void METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; if ( RIL . RILJ_LOGD ) VAR_2 . METHOD_3 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_4 ( ) ; } } 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ) ? null : TYPE_2 . METHOD_3 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 path ) throws TYPE_3 , TYPE_4 { TYPE_1 VAR_1 = this ; for ( java.lang.String name : path . METHOD_2 ( ) ) { VAR_1 = VAR_2 . METHOD_1 ( VAR_1 , name ) ; } return VAR_1 ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 context , int VAR_2 ) { android.content.Intent VAR_3 = new android.content.Intent ( VAR_4 ) ; VAR_3 . METHOD_2 ( VAR_5 , VAR_2 ) ; VAR_1 . METHOD_3 ( context , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , false , false , true ) ; } 
public void METHOD_1 ( ) { try { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; c . METHOD_3 ( null ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } } 
public boolean METHOD_1 ( TYPE_1 field ) { if ( field . METHOD_2 ( ) ) { return false ; } return METHOD_3 ( field ) ; } 
public void run ( com.android.jack.ir.ast.JDefinedClassOrInterface t ) throws java.lang.Exception { if ( t instanceof TYPE_1 ) { t . METHOD_1 ( VAR_1 class ) ; } } 
public static TYPE_1 METHOD_1 ( java.lang.Object VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return TYPE_3 . METHOD_2 ( ( ( TYPE_2 ) ( VAR_1 ) ) ) ; } else { return TYPE_1 . text ( STRING_1 , VAR_1 ) ; } } 
public java.lang.String METHOD_1 ( TYPE_1 target ) { return TYPE_2 . METHOD_1 ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( VAR_1 . getName ( ) . METHOD_4 ( VAR_3 , VAR_4 ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( address , input , VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( address , VAR_3 ) ; TYPE_1 . METHOD_4 ( address , VAR_4 ) ; } 
private synchronized TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_2 ( VAR_2 , null ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 == ( METHOD_2 ( ) ) ) return ; METHOD_3 ( ( VAR_1 ? VAR_2 : VAR_3 ) , VAR_4 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } 
void METHOD_1 ( int index , long value ) { throw new TYPE_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { new TYPE_1 ( null , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; fail ( STRING_1 ) ; } catch ( java.lang.IllegalArgumentException VAR_6 ) { } } 
private void METHOD_1 ( boolean VAR_1 ) { java.lang.String VAR_2 = ( VAR_1 ) ? STRING_1 : STRING_2 ; VAR_3 = TYPE_1 . METHOD_1 ( context , VAR_2 , VAR_4 ) ; } 
public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 , 1 , 1 ) ; } 
private static boolean METHOD_1 ( int value ) { return ( ( ( value == ( VAR_1 ) ) || ( value == ( VAR_2 ) ) ) || ( value == ( VAR_3 ) ) ) || ( value == ( VAR_4 ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { for ( TYPE_2 field : VAR_2 ) { if ( VAR_1 . equals ( field . getName ( ) ) ) { return field . METHOD_2 ( ) ; } } return null ; } 
public void METHOD_1 ( ) throws java.lang.Throwable { METHOD_2 ( INT_1 , INT_2 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( this ) ; } 
public java.lang.Class < ? > [ ] METHOD_1 ( ) { return java.lang.Class . METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 ; } 
public static double METHOD_1 ( ) { double a ; double b ; double c ; a = Main . METHOD_2 ( FLOAT_1 ) ; b = Main . METHOD_2 ( FLOAT_2 ) ; c = a * b ; return c ; } 
public static void run ( ) throws java.lang.Exception { TYPE_1 . METHOD_1 ( VAR_1 class ) ; java.util.ArrayList < java.lang.Object > VAR_2 = new java.util.ArrayList < > ( 100 ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_2 ) ; } 
public java.io.File METHOD_1 ( ) { java.io.File VAR_1 = new java.io.File ( VAR_2 ) ; return new java.io.File ( VAR_1 , VAR_3 . METHOD_2 ( CHAR_1 , VAR_4 ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( VAR_2 ) { VAR_1 . METHOD_2 ( STRING_3 , STRING_4 ) ; } METHOD_3 ( FLOAT_1 ) ; TYPE_1 . f VAR_3 ; TYPE_2 VAR_4 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , false , STRING_1 ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 e ) { } } 
public static TYPE_1 [ ] METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
private static native boolean METHOD_1 ( long VAR_1 , java.lang.String s , int VAR_2 , int [ ] VAR_3 ) ; 
void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , false , false ) ; status = VAR_2 ; METHOD_4 ( ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) { assertTrue ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; java.io.File VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) ; assertTrue ( VAR_2 . METHOD_4 ( ) ) ; assertEquals ( 0 , VAR_2 . length ( ) ) ; } 
private void METHOD_1 ( int VAR_1 ) { synchronized ( VAR_2 ) { if ( ( VAR_2 . size ( ) ) == 0 ) { return ; } VAR_2 . METHOD_2 ( VAR_1 ) ; } } 
public static void run ( ) { TYPE_1 . METHOD_1 ( VAR_1 class ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( ! ( METHOD_2 ( ) ) ) || ( ! ( METHOD_3 ( ) ) ) ) { TYPE_1 . METHOD_4 ( VAR_1 , STRING_1 ) ; return ; } METHOD_5 ( VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( boolean VAR_1 , TYPE_2 VAR_2 ) { this . VAR_2 = TYPE_3 . METHOD_2 ( VAR_2 ) ; this . VAR_1 = VAR_1 ; return this ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_3 ) ; if ( VAR_2 == null ) return ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_4 . METHOD_1 ( VAR_2 ) ; } 
private boolean METHOD_1 ( java.io.File VAR_1 ) throws java.io.IOException { TYPE_1 . i ( VAR_2 , STRING_1 ) ; return TYPE_2 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; } 
boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.io.File VAR_3 , java.io.File VAR_4 , TYPE_1 VAR_5 , java.util.List < ? extends TYPE_2 > VAR_6 , int VAR_7 , int VAR_8 , java.io.File VAR_9 , java.io.File VAR_10 , TYPE_3 VAR_11 ) throws TYPE_4 , TYPE_5 , TYPE_6 ; 
public int METHOD_1 ( int VAR_1 ) throws android.os.RemoteException { return - 1 ; } 
private static native int METHOD_1 ( byte [ ] VAR_1 , byte [ ] VAR_2 , int VAR_3 ) ; 
public TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 , TYPE_3 listener ) throws android.os.RemoteException { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_5 , VAR_6 , VAR_1 , VAR_2 , listener ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { final java.lang.String s = STRING_1 + STRING_2 ; VAR_1 = false ; try { TYPE_1 . METHOD_2 ( s ) ; fail ( ) ; } catch ( TYPE_2 expected ) { } assertFalse ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( boolean VAR_1 ) { return ( this . VAR_1 ) || ( ! VAR_1 ) ? this : new TYPE_1 ( this . type , this . VAR_2 , true ) ; } 
public static void METHOD_1 ( int [ ] a ) { TYPE_1 . METHOD_1 ( a ) ; } 
public void run ( ) { assertFalse ( VAR_1 . METHOD_1 ( ) ) ; } 
native long METHOD_1 ( long VAR_1 , java.lang.String VAR_2 , long [ ] VAR_3 ) ; 
private void METHOD_1 ( ) { if ( VAR_1 ) android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; } 
public java.io.File METHOD_1 ( ) { return new java.io.File ( METHOD_2 ( ) ) ; } 
private void run ( TYPE_1 VAR_1 ) throws java.lang.Exception { new TYPE_2 ( VAR_1 ) . METHOD_1 ( VAR_2 ) . METHOD_2 ( TYPE_3 . getName ( ) , java.lang.String . METHOD_3 ( VAR_3 ) ) . METHOD_4 ( VAR_4 class ) . METHOD_5 ( ) ; } 
public java.lang.String METHOD_1 ( ) { return ( ( VAR_1 ) == null ) || ( ( VAR_1 ) == null ) ? null : ( VAR_2 ) + ( VAR_1 ) ; } 
public boolean METHOD_1 ( TYPE_1 pkg ) { return pkg instanceof TYPE_2 ; } 
public void METHOD_1 ( ) { android.util.Log.v ( VAR_1 . TAG , STRING_1 ) ; if ( ( VAR_2 ) != null ) { METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } } 
public TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; } 
public int METHOD_1 ( int context ) throws TYPE_1 { int s = super . METHOD_1 ( context ) ; TYPE_2 . METHOD_2 ( s , VAR_1 ) ; return s ; } 
protected void METHOD_1 ( TYPE_1 result ) { if ( result == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } this . result = result ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { TYPE_1 VAR_3 = METHOD_2 ( new TYPE_2 ( VAR_1 ) ) ; assertEquals ( VAR_2 , VAR_3 . toString ( ) ) ; } 
TYPE_1 < java.lang.String , ? extends TYPE_2 > METHOD_1 ( ) { return VAR_1 ; } 
boolean METHOD_1 ( int VAR_1 ) throws android.os.RemoteException ; 
public void METHOD_1 ( int VAR_1 , int VAR_2 , int w , int h , float [ ] data ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 , w , h , data ) ; } 
public void METHOD_1 ( int VAR_1 , int t , int VAR_2 , int VAR_3 ) { VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( t ) ; VAR_4 . METHOD_1 ( VAR_1 , t , VAR_2 , VAR_3 ) ; } 
public TYPE_1 METHOD_1 ( ) { int start = VAR_1 ; new TYPE_2 ( this ) . METHOD_2 ( ) ; int VAR_2 = VAR_1 ; return new TYPE_1 ( TYPE_3 . METHOD_3 ( data , start , VAR_2 ) ) ; } 
public static TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String source ) { int VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 , source ) ; return new TYPE_1 ( VAR_2 ) ; } 
private void METHOD_1 ( int VAR_1 ) { VAR_2 = VAR_1 ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( new android.os.AsyncResult ( null , new java.lang.Integer ( VAR_1 ) , null ) ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 project ) { return new TYPE_3 ( VAR_1 . METHOD_2 ( ) , project ) ; } 
public static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , boolean VAR_3 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
TYPE_1 METHOD_1 ( TYPE_2 v ) { final TYPE_3 VAR_1 = v . METHOD_2 ( ) ; if ( VAR_1 instanceof TYPE_3 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return VAR_2 ; } return new TYPE_3 ( 0 , 0 ) ; } 
static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 p , TYPE_1 m ) { TYPE_1 r = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ) ; return r ; } 
private static void run ( ) { Main . METHOD_1 ( ) ; Main . METHOD_2 ( ) ; Main . METHOD_3 ( ) ; Main . METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 ) ; METHOD_2 ( STRING_2 ) ; METHOD_2 ( STRING_3 ) ; } 
public java.util.List < android.bluetooth.BluetoothDevice > METHOD_1 ( ) { METHOD_2 ( VAR_1 , STRING_1 ) ; int [ ] VAR_2 = new int [ ] { VAR_3 } ; return METHOD_3 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_2 . METHOD_3 ( VAR_1 ) ) { METHOD_4 ( ) ; } super . METHOD_1 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { assert false ; } 
TYPE_1 METHOD_1 ( ) { if ( METHOD_2 ( ) ) { return null ; } TYPE_2 < TYPE_1 > VAR_1 = VAR_2 . METHOD_3 ( ) ; TYPE_1 entry = VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; return entry ; } 
public static void fail ( java.lang.String VAR_1 ) { VAR_2 . println ( ( STRING_1 + VAR_1 ) ) ; TYPE_1 . METHOD_1 ( ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_1 > ... VAR_1 ) { return TYPE_3 . METHOD_1 ( TYPE_4 . METHOD_2 ( VAR_1 ) ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { if ( VAR_1 == null ) { return ; } VAR_1 . METHOD_2 ( ) ; if ( VAR_1 != ( VAR_2 . out ) ) { VAR_1 . METHOD_3 ( ) ; } } 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 = TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( ( null == ( VAR_2 ) ) || ( VAR_2 . METHOD_3 ( VAR_1 ) ) ) VAR_2 = VAR_1 ; return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Throwable { METHOD_2 ( INT_1 , INT_2 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( this ) ; } 
static void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return ; } VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; } 
public abstract void METHOD_1 ( boolean VAR_1 ) ; 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_3 . METHOD_1 ( VAR_1 ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 type ) { if ( ( VAR_1 == null ) || ( ( VAR_1 . length ( ) ) == 0 ) ) { return null ; } return METHOD_2 ( VAR_1 ) . getName ( type ) ; } 
protected void METHOD_1 ( byte [ ] VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; } 
static void METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo , com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) throws java.lang.Exception { return METHOD_2 ( repo , null , VAR_1 , null , null , null ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_1 . METHOD_3 ( ) , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ; } 
protected void METHOD_1 ( TYPE_1 query ) throws java.lang.Exception { try { METHOD_2 ( query ) . get ( ) ; org.junit.Assert . METHOD_3 ( ( STRING_1 + query ) ) ; } catch ( TYPE_2 e ) { } } 
public void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( VAR_1 ) , new TYPE_4 ( VAR_1 ) ) ; } 
private TYPE_1 . ProjectConfig METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true , true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) ) . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; VAR_4 . METHOD_8 ( VAR_3 ) ; } 
protected void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; bind ( VAR_2 class ) . METHOD_2 ( VAR_3 ) ; } 
public TYPE_1 user ( TYPE_2 user ) { return METHOD_1 ( ) . equals ( user ) ? this : METHOD_2 ( user ) . METHOD_3 ( cd , db ) ; } 
java.lang.String delete ( ) ; 
private void METHOD_1 ( TYPE_1 < TYPE_2 > req ) throws java.lang.Exception { try { req . get ( ) ; org.junit.Assert . METHOD_2 ( STRING_1 ) ; } catch ( TYPE_3 e ) { } } 
protected final void METHOD_1 ( java.lang.String msg , TYPE_1 t ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , t ) ; } } 
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( 1 ) ; } 
protected void METHOD_1 ( final int VAR_1 ) { TYPE_1 VAR_2 ; TYPE_2 VAR_3 ; TYPE_3 VAR_4 ; METHOD_2 ( ( -- ( VAR_5 ) ) ) ; METHOD_3 ( ) ; synchronized ( VAR_6 ) { VAR_7 = true ; } super . METHOD_1 ( VAR_1 ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 . length ( ) ) < INT_1 ) { return VAR_1 ; } else { return ( VAR_1 . METHOD_2 ( 0 , INT_2 ) ) + STRING_1 ; } } 
public void METHOD_1 ( ) { final int id = INT_1 ; final TYPE_1 p = new TYPE_1 ( id ) ; assertEquals ( id , p . METHOD_2 ( ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String name , int VAR_1 , int VAR_2 , TYPE_2 VAR_3 , TYPE_3 < TYPE_4 . Result > VAR_4 ) { return new TYPE_1 ( VAR_5 , project , name , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; } 
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { VAR_2 = VAR_1 ; } } 
void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_2 . METHOD_2 ( ) ; } METHOD_3 ( ) . METHOD_4 ( ) ; VAR_1 = null ; VAR_3 = null ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) ; VAR_3 . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 . get ( new TYPE_1 . NameKey ( STRING_1 ) ) . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; } 
private TYPE_1 . ProjectConfig METHOD_1 ( org.eclipse.jgit.revwalk.RevCommit VAR_1 ) throws java.io.IOException , TYPE_2 { TYPE_1 . ProjectConfig cfg = new TYPE_1 . ProjectConfig ( new TYPE_3 . NameKey ( STRING_1 ) ) ; cfg . METHOD_2 ( db , VAR_1 ) ; return cfg ; } 
private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; METHOD_3 ( ) ; } VAR_2 . METHOD_4 ( cm . METHOD_5 ( ) , line ) ; METHOD_6 ( ) ; } 
public static TYPE_1 < com.google.gerrit.reviewdb.client.Change , com.google.gerrit.reviewdb.client.Change . Id > METHOD_1 ( ) { return VAR_1 ; } 
private void METHOD_1 ( java.lang.String msg ) { TYPE_1 p = new TYPE_1 ( ) ; p . message = msg ; VAR_1 . add ( p ) ; } 
public java.lang.String METHOD_1 ( final java.lang.String VAR_1 ) { return STRING_1 + VAR_1 ; } 
void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 ; if ( VAR_1 != null ) { VAR_2 = null ; VAR_1 . onSuccess ( result ) ; result = null ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try { VAR_2 . apply ( rsrc , VAR_1 ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , STRING_2 ) ; assertEquals ( STRING_3 , VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 ... args ) { return TYPE_3 . METHOD_1 ( changeId , VAR_1 , args ) ; } 
protected void METHOD_1 ( final TYPE_1 VAR_1 ) { for ( final TYPE_2 . Id id : VAR_2 ) { add ( VAR_1 , id ) ; } } 
private static long METHOD_1 ( long n , long VAR_1 ) { long VAR_2 = ( n + ( VAR_1 / 2 ) ) / VAR_1 ; return VAR_2 ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 { TYPE_5 p = VAR_2 . get ( id . get ( ) ) ; if ( p == null ) { throw new TYPE_4 ( id ) ; } return new TYPE_1 ( p ) ; } 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return new TYPE_1 ( args , change . getProject ( ) , change ) ; } 
void delete ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_1 ( VAR_1 ) ; commit ( ) ; } 
public boolean METHOD_1 ( final com.google.gerrit.reviewdb.client.Account VAR_1 ) { return METHOD_1 ( VAR_1 . getId ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; db = METHOD_2 ( ) ; util = new TYPE_1 < org.eclipse.jgit.lib.Repository > ( db ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; } 
public static void display ( final TYPE_1 view ) { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } VAR_1 = view ; VAR_2 . add ( VAR_1 , VAR_3 ) ; } 
public void METHOD_1 ( ) { com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ) ) ) . METHOD_3 ( ) ; } 
private static void METHOD_1 ( TYPE_1 key , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws TYPE_4 { if ( ( ( VAR_3 ) != ( VAR_4 ) ) && ( ( VAR_5 ) == null ) ) { throw new TYPE_4 ( ) ; } } 
protected void METHOD_1 ( TYPE_1 result ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; VAR_2 = null ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) ; METHOD_2 ( ) . to ( VAR_2 class ) ; factory ( VAR_3 . Factory class ) ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( VAR_2 . ui ) ; bind ( VAR_3 class ) . METHOD_2 ( VAR_4 ) ; bind ( VAR_5 class ) . to ( VAR_6 class ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = new TYPE_2 ( server , user ) . put ( STRING_1 ) ; org.junit.Assert.assertEquals ( VAR_1 , r . METHOD_2 ( ) ) ; } 
private boolean METHOD_1 ( ) { return ( ( VAR_1 ) == null ) || ( ( VAR_1 . METHOD_2 ( ) ) <= ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_2 ( ) ) ) ; } 
static TYPE_1 create ( TYPE_1 . Key key , com.google.gerrit.reviewdb.client.Account.Id VAR_1 , java.lang.String email , java.lang.String VAR_2 , org.eclipse.jgit.lib.ObjectId VAR_3 ) { return new TYPE_2 ( key , VAR_1 , TYPE_3 . METHOD_1 ( email ) , TYPE_3 . METHOD_1 ( VAR_2 ) , VAR_3 ) ; } 
java.lang.String METHOD_1 ( int id , java.lang.String path ) ; 
public void METHOD_1 ( ) throws java.lang.Exception { group ( STRING_1 , STRING_2 ) ; org.junit.Assert . METHOD_2 ( METHOD_3 ( STRING_3 ) . isEmpty ( ) ) ; } 
public void METHOD_1 ( TYPE_1 input ) throws TYPE_2 { try { VAR_1 . apply ( change , input ) ; } catch ( TYPE_2 | TYPE_3 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { for ( TYPE_1 schema : VAR_1 ) { schema . close ( ) ; } VAR_1 = null ; } super . METHOD_1 ( ) ; } 
private TYPE_1 . ProjectConfig METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { return METHOD_1 ( VAR_1 , true , true ) ; } 
public static TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , TYPE_2 > VAR_1 , int VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( db ) ; } 
private static TYPE_1 revision ( com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String type ) { return TYPE_2 . revision ( id ) . view ( type ) ; } 
public static void METHOD_1 ( TYPE_1 req , TYPE_2 . HttpServletResponse res , int VAR_1 , java.lang.String msg , TYPE_3 err ) throws java.io.IOException { TYPE_4 . METHOD_1 ( req , res , VAR_1 , msg , VAR_2 , err ) ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( VAR_3 ) ; bind ( VAR_4 class ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.eclipse.jgit.revwalk.RevCommit c = METHOD_2 ( ) ; java.util.List < TYPE_1 > m = TYPE_2 . METHOD_3 ( repo , c ) ; org.junit.Assert.assertEquals ( 0 , m . size ( ) ) ; } 
public static TYPE_1 METHOD_1 ( short s ) { switch ( s ) { case 0 : return VAR_1 ; case 1 : return VAR_2 ; } return null ; } 
public static void METHOD_1 ( int id , java.lang.String commit , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . revision ( id , commit ) . delete ( VAR_1 ) ; } 
public java.lang.String toString ( ) { return ( STRING_1 + ( METHOD_1 ( ) ) ) + STRING_2 ; } 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id id ) { return ( VAR_1 ) != null ? submit ( new TYPE_2 ( project , id ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( final TYPE_2 < TYPE_1 > ... VAR_1 ) { return new TYPE_3 < TYPE_1 > ( VAR_1 ) ; } 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) . toString ( ) ; } 
boolean METHOD_1 ( boolean VAR_1 ) { if ( TYPE_1 . equals ( VAR_2 ) ) { return VAR_3 . METHOD_2 ( ) ; } return METHOD_3 ( VAR_4 , VAR_1 ) ; } 
public java.lang.String METHOD_1 ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . length ( ) ) ; } 
public void METHOD_1 ( ) { new TYPE_1 ( VAR_1 , new TYPE_2 ( ) , METHOD_2 ( VAR_2 class ) ) ; } 
boolean METHOD_1 ( ) { return ( METHOD_2 ( VAR_1 ) ) && ( METHOD_3 ( ) ) ; } 
public TYPE_1 run ( TYPE_2 . ReviewDb db , TYPE_3 VAR_1 , boolean VAR_2 ) throws TYPE_4 . OrmException { return METHOD_1 ( VAR_3 , id , db , VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 ctx ) { return ctx . METHOD_2 ( ctx . METHOD_3 ( ) , ctx . METHOD_4 ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_1 ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( config . METHOD_4 ( ) ) ) , null ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( final java.lang.String VAR_1 ) { return java.util.Collections . METHOD_2 ( ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo ) throws java.lang.Exception { return METHOD_1 ( repo , null , null , null , null , null ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . equals ( VAR_1 ) ) { return METHOD_2 ( ) ; } else { return ! ( METHOD_3 ( VAR_1 ) . isEmpty ( ) ) ; } } 
void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String name , java.util.List < java.lang.String > values ) ; 
public void METHOD_1 ( TYPE_1 key , long VAR_1 , java.lang.String VAR_2 , java.util.List < java.lang.String > VAR_3 ) { } 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException , TYPE_2 { TYPE_3 path = METHOD_2 ( ) ; if ( path != null ) { try ( org.eclipse.jgit.lib.Repository repo = new TYPE_4 ( path ) ) { METHOD_1 ( repo ) ; } } return this ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( type ( ) . METHOD_2 ( ) ) { return TYPE_1 . METHOD_3 ( type ( ) . METHOD_4 ( VAR_1 ) ) ; } else { return VAR_1 ; } } 
public void put ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . put ( VAR_1 , VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { project = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_1 , project . get ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public TYPE_1 file ( java.lang.String path ) { return VAR_1 . create ( VAR_2 . get ( ) . METHOD_1 ( revision , TYPE_2 . METHOD_2 ( path ) ) ) ; } 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > get ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 , java.lang.String name ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 , VAR_2 , name ) ) ; } 
protected < TYPE_1 extends TYPE_2 , TYPE_3 extends TYPE_2 > TYPE_4 < TYPE_1 , TYPE_3 > METHOD_1 ( final TYPE_5 < TYPE_6 < TYPE_1 , TYPE_3 > > type ) { return METHOD_1 ( TYPE_7 . get ( type ) ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( ) ; return VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; } 
private static void METHOD_1 ( TYPE_1 insert ) { TYPE_2 . METHOD_2 ( insert ) ; } 
public int METHOD_1 ( ) { throw new TYPE_1 ( ) ; } 
protected Project . NameKey METHOD_1 ( ) { return getChange ( ) . getProject ( ) ; } 
protected static com.google.gerrit.server.query.change.ChangeData METHOD_1 ( TYPE_1 VAR_1 , com.google.gerrit.reviewdb.client.Change . Id id ) { return VAR_2 . create ( VAR_3 . get ( ) , id ) ; } 
long METHOD_1 ( ) { return VAR_1 ; } 
private final native TYPE_1 METHOD_1 ( int VAR_1 ) ; 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.revwalk.RevCommit commit ) { if ( METHOD_2 ( ) ) { return true ; } else if ( METHOD_3 ( db , repo , commit ) ) { return true ; } return false ; } 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( e . getValue ( ) ) ; view . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . ProjectConfig cfg = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( cfg , VAR_2 , VAR_3 , STRING_1 ) ; METHOD_5 ( project , cfg ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , project , STRING_1 , false , VAR_2 ) ; } 
void METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) { change = c ; } 
protected void METHOD_1 ( TYPE_1 result ) { VAR_1 = true ; VAR_2 = result . METHOD_2 ( ) ; METHOD_3 ( result . METHOD_4 ( ) ) ; METHOD_5 ( info ) ; METHOD_6 ( ) ; } 
public java.util.Set < java.lang.String > METHOD_1 ( ) { return cfg . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey name , TYPE_1 < TYPE_2 > VAR_1 ) { new TYPE_3 ( STRING_1 ) . id ( name . get ( ) ) . view ( STRING_2 ) . get ( VAR_1 ) ; } 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . not ( TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ) . toString ( ) ) ; } 
public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 ) ; } 
public synchronized TYPE_1 METHOD_1 ( java.lang.String name , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( name , VAR_1 ) ; return METHOD_4 ( name ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( user ) ; TYPE_1 in = new TYPE_1 ( ) ; in . name = STRING_1 ; METHOD_3 ( in , VAR_1 class ) ; } 
void METHOD_1 ( java.lang.String project , java.lang.String ref , int VAR_1 ) { TYPE_1 event = new TYPE_1 ( project , ref , VAR_1 ) ; METHOD_2 ( project , event ) ; } 
java.lang.String METHOD_1 ( TYPE_1 req ) { if ( ( VAR_1 ) != null ) { return TYPE_2 . METHOD_2 ( req . METHOD_3 ( VAR_1 ) ) ; } else { return null ; } } 
private TYPE_1 METHOD_1 ( ) { return VAR_1 . create ( TYPE_2 . of ( VAR_2 ) ) ; } 
protected void METHOD_1 ( ) { install ( VAR_1 ) ; install ( cm ) ; install ( VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 key ) throws TYPE_3 { return VAR_1 . get ( key ) ; } 
public java.lang.String getName ( ) { return name . get ( ) ; } 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( getChangeId ( ) ) ; } 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( e . getValue ( ) ) ; if ( ( view ) != null ) { view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; } } 
private final native void METHOD_1 ( java.lang.String VAR_1 ) ; 
public void METHOD_1 ( final TYPE_1 config ) { this . config = config ; } 
public void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( revision . getParentKey ( ) , revision . getId ( ) ) ) ; } 
public void METHOD_1 ( java.lang.Exception VAR_1 ) { TYPE_1 . error ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; } 
public void onSuccess ( final java.util.List < TYPE_1 . Branch > result ) { METHOD_1 ( true ) ; VAR_1 . display ( result ) ; VAR_1 . METHOD_2 ( true ) ; } 
public boolean METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_3 ( ) ; } 
TYPE_1 delete ( java.lang.String VAR_1 ) throws java.io.IOException { return VAR_2 . METHOD_1 ( new TYPE_2 ( ( ( VAR_3 . METHOD_2 ( ) ) + VAR_1 ) ) , new TYPE_3 ( ) ) ; } 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_2 ... data ) { java.util.List < TYPE_2 > VAR_1 = TYPE_3 . METHOD_2 ( data ) ; return new TYPE_4 < TYPE_2 > ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; } 
public TYPE_1 . AccountGroup METHOD_1 ( final java.lang.String VAR_1 ) { return VAR_2 . get ( new TYPE_2 . NameKey ( VAR_1 ) ) ; } 
void apply ( TYPE_1 update ) throws com.google.gwtorm.server.OrmException { METHOD_1 ( update ) ; update . METHOD_2 ( message . getMessage ( ) ) ; METHOD_3 ( update ) ; METHOD_4 ( update ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException { return new TYPE_1 ( VAR_2 . METHOD_1 ( VAR_1 ) . METHOD_2 ( ) ) ; } 
public java.lang.String METHOD_1 ( final TYPE_1 . NameKey project ) { final TYPE_2 r = new TYPE_2 ( ) ; TYPE_3 . p ( r , project ) ; TYPE_3 . a ( r , STRING_1 ) ; return ( VAR_1 ) + r ; } 
private static java.lang.String METHOD_1 ( TYPE_1 user ) { if ( user . METHOD_2 ( ) ) { return ( ( TYPE_2 ) ( user ) ) . getAccountId ( ) . toString ( ) ; } return user . toString ( ) ; } 
public TYPE_1 apply ( TYPE_2 input ) { return VAR_1 . equals ( user . METHOD_1 ( ) ) ; } 
public void run ( ) { this . METHOD_1 ( ) ; } 
protected abstract TYPE_1 . Status METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws com.google.gwtorm.server.OrmException , java.io.IOException ; 
public java.util.List < TYPE_1 > run ( final com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return METHOD_1 ( db , query , VAR_1 ) ; } 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return ( VAR_1 ) != null ? submit ( new TYPE_2 ( change , false ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } 
public void METHOD_1 ( ) { TYPE_1 . get ( ) . METHOD_2 ( VAR_1 , new TYPE_2 . Factory ( ) ) ; } 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( ( ( double ) ( this . VAR_1 ) ) ) ; } 
private static java.lang.String url ( com.google.gerrit.reviewdb.client.PatchSet.Id ps , TYPE_1 info ) { return TYPE_2 . METHOD_1 ( null , ps , info . path ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; in . name = STRING_1 ; TYPE_2 r = VAR_1 . put ( STRING_2 , in ) ; org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 event , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { METHOD_2 ( event , db ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( null ) ; METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; METHOD_5 ( STRING_1 ) ; } 
public static TYPE_1 change ( java.lang.String id ) { return new TYPE_1 ( STRING_1 ) . id ( id ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( java.lang.String err , java.lang.Exception e ) { if ( VAR_1 ) { VAR_2 . error ( err , e ) ; return TYPE_2 . METHOD_2 ( ) ; } else { return TYPE_2 . METHOD_3 ( err ) ; } } 
static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > create ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > schema ) { if ( ( TYPE_3 . METHOD_1 ( schema ) ) == ( VAR_1 ) ) { return new TYPE_4 ( ) ; } return TYPE_1 . not ( new TYPE_3 ( VAR_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 ctx ) throws java.lang.Exception { ctx . METHOD_2 ( ) . METHOD_3 ( magicBranch . topic ) ; } 
protected com.google.gerrit.reviewdb.client.Change METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( project , VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 != null ? TYPE_2 . METHOD_1 ( VAR_1 ) : null ; } 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > METHOD_1 ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 , java.lang.String name ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 , VAR_2 , name ) ) ; } 
public TYPE_1 get ( TYPE_2 input , TYPE_3 args ) throws com.google.gwtorm.server.OrmException { try { return VAR_1 . get ( input , args ) ; } catch ( java.io.IOException e ) { throw new com.google.gwtorm.server.OrmException ( e ) ; } } 
public void onSuccess ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( final TYPE_1 . PatchSet ps ) { patchSet = ps ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_1 = new TYPE_2 ( true , VAR_2 ) ; add ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_3 ( STRING_1 ) . get ( ) ; } 
private TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) throws TYPE_3 , TYPE_4 { return VAR_2 . create ( VAR_1 , db , repo , rw , VAR_3 , VAR_4 , METHOD_2 ( VAR_5 ) , VAR_6 , VAR_7 . METHOD_3 ( ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 , int line , TYPE_2 group ) { TYPE_3 < TYPE_4 , TYPE_5 > VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 . get ( line ) ) == group ) { VAR_2 . METHOD_3 ( line ) ; } } 
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } finally { plugins . METHOD_1 ( name , VAR_1 ) ; } } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 ... args ) { return new TYPE_1 ( ( ( ( STRING_1 + ( change.getId ( ) ) ) + STRING_2 ) + ( java.lang.String.format ( VAR_1 , args ) ) ) ) ; } 
public final boolean METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; return METHOD_4 ( ) ; } 
public static void METHOD_1 ( final TYPE_1 . Account VAR_1 ) { synchronized ( VAR_2 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } } 
TYPE_1 create ( com.google.gerrit.reviewdb.server.ReviewDb VAR_1 , org.eclipse.jgit.lib.Repository db ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; METHOD_4 ( ( ! ( METHOD_5 ( ) ) ) ) ; METHOD_6 ( ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , org.eclipse.jgit.lib.Repository repo ) throws java.io.IOException { org.eclipse.jgit.revwalk.RevWalk rw = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ; try { VAR_1 . METHOD_1 ( rw , VAR_2 ) ; } finally { rw . METHOD_2 ( ) ; } } 
public void submit ( TYPE_1 in ) throws TYPE_2 { try { submit . get ( ) . apply ( revision , in ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } 
public java.lang.String toString ( ) { return VAR_1 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return java.util.Collections . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; } 
public TYPE_1 < com.google.gerrit.reviewdb.client.Account.Id > METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { return TYPE_1 . METHOD_2 ( VAR_2 . get ( TYPE_2 . create ( VAR_3 , VAR_1 ) ) ) . METHOD_3 ( TYPE_3 : : METHOD_4 ) ; } 
public TYPE_1 create ( com.google.gerrit.reviewdb.client.Change change ) ; 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey projectName ) throws java.io.IOException ; 
public TYPE_1 METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { final com.google.gerrit.reviewdb.server.ReviewDb c = METHOD_2 ( ) ; try { return c . METHOD_3 ( ) . get ( new TYPE_1 . Key ( ) ) ; } finally { c . close ( ) ; } } 
public void METHOD_1 ( java.lang.String msg ) { status = VAR_1 ; VAR_2 = true ; } 
public static void METHOD_1 ( int changeId , java.lang.String revision , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . revision ( changeId , revision ) . view ( STRING_1 ) . METHOD_2 ( STRING_2 ) . get ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 res , TYPE_2 VAR_1 , boolean VAR_2 ) ; 
private TYPE_1 METHOD_1 ( TYPE_2 cm , int line ) { TYPE_3 VAR_1 = METHOD_2 ( cm ) ; TYPE_4 info = TYPE_4 . create ( path , VAR_1 , ( line + 1 ) , null , null ) ; return METHOD_3 ( info , false ) ; } 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( VAR_1 , getChange ( ) . getId ( ) ) ; } 
public void onSuccess ( TYPE_1 result ) { if ( METHOD_1 ( ) ) { VAR_1 = new TYPE_2 < java.lang.String > ( VAR_2 ) ; METHOD_2 ( ) ; } } 
java.lang.String METHOD_1 ( int id , java.lang.String file ) ; 
public synchronized void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } 
public TYPE_1 create ( TYPE_2 VAR_1 , com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , TYPE_3 . of ( VAR_1 ) , null , id , null ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( METHOD_3 ( ) ) != null ) { VAR_1 . append ( STRING_1 ) ; VAR_1 . append ( METHOD_3 ( ) ) ; VAR_1 . append ( STRING_2 ) ; } } 
TYPE_1 create ( TYPE_2 . NameKey projectName , org.eclipse.jgit.lib.ObjectId base , java.util.List < TYPE_3 > VAR_1 , java.lang.String message ) ; 
TYPE_1 create ( TYPE_2 VAR_1 , boolean VAR_2 ) ; 
public TYPE_1 < TYPE_2 , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return TYPE_3 . METHOD_2 ( VAR_1 . submit ( new TYPE_4 ( VAR_2 , change ) ) , VAR_3 ) ; } 
public void onSuccess ( TYPE_1 VAR_1 ) { VAR_2 . onSuccess ( TYPE_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ) ; } 
public static TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; bind ( VAR_3 class ) ; bind ( VAR_4 class ) ; METHOD_2 ( ) . to ( VAR_4 class ) ; factory ( VAR_5 . Factory class ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; servlet = TYPE_5 . create ( repo ) ; } 
private int METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , int VAR_2 ) { return config . METHOD_1 ( STRING_1 , name , VAR_1 , VAR_2 ) ; } 
protected void METHOD_1 ( final java.util.List < TYPE_1 . AccountGroup > result ) { VAR_1 . display ( result ) ; VAR_1 . METHOD_2 ( true ) ; } 
protected < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 < TYPE_1 > VAR_1 ) throws java.lang.Exception { return new TYPE_3 ( ) . METHOD_2 ( METHOD_3 ( path , STRING_1 ) , VAR_1 ) ; } 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . METHOD_1 ( getValue ( ) ) ; METHOD_2 ( true ) ; } 
private static native java.lang.String METHOD_1 ( TYPE_1 ctx , java.lang.String VAR_1 , java.lang.String VAR_2 , int VAR_3 ) ; 
void METHOD_1 ( TYPE_1 event , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ; 
private static TYPE_1 METHOD_1 ( TYPE_1 i ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( i , VAR_1 ) ; return VAR_1 ; } 
private void METHOD_1 ( TYPE_1 notes , TYPE_2 VAR_1 ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( VAR_2 . METHOD_2 ( METHOD_3 ( notes ) , VAR_1 ) . METHOD_4 ( ) ) . isEmpty ( ) ; } 
public void METHOD_1 ( ) { final TYPE_1 b = new TYPE_1 ( ) ; METHOD_2 ( b , b . METHOD_3 ( ) ) ; assertEquals ( STRING_1 , b . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( true ) ; } 
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , new TYPE_2 ( ) ) ; } catch ( java.io.IOException e ) { VAR_2 . METHOD_4 ( STRING_1 , e ) ; } } 
TYPE_1 create ( TYPE_2 . ReviewDb VAR_1 , TYPE_3 . NameKey VAR_2 , TYPE_4 . Repository VAR_3 , TYPE_5 . RevCommit VAR_4 , TYPE_2 . PatchSet VAR_5 , boolean VAR_6 ) ; 
private org.eclipse.jgit.revwalk.RevWalk METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return VAR_1 ; } 
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( ( - 1 ) ) ; } 
protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return new TYPE_2 ( TYPE_3 . METHOD_2 ( ) ) ; } 
private TYPE_1 METHOD_1 ( int VAR_1 ) throws java.lang.Exception { TYPE_1 d = new TYPE_1 ( ) ; d . METHOD_1 ( repo ) ; com.google.common.truth.Truth.assertThat ( d . getValue ( ) ) . isEqualTo ( VAR_1 ) ; return d ; } 
public TYPE_1 get ( TYPE_2 key ) { TYPE_3 < TYPE_1 > VAR_1 = VAR_2 . get ( new TYPE_3 < TYPE_2 > ( key , VAR_3 ) ) ; return VAR_1 != null ? VAR_1 . METHOD_1 ( VAR_4 , VAR_5 ) : null ; } 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; return this ; } 
private boolean METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.io.IOException { try ( org.eclipse.jgit.revwalk.RevWalk rw = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) { org.eclipse.jgit.revwalk.RevCommit commit = rw . parseCommit ( VAR_1 ) ; return VAR_2 . METHOD_2 ( db . get ( ) , rw , commit ) ; } } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 , int VAR_3 , java.util.Set < java.lang.String > VAR_4 ) { return TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , ( VAR_3 + 1 ) , VAR_4 ) ; } 
com.google.gerrit.server.query.change.ChangeData METHOD_1 ( com.google.gerrit.reviewdb.client . PatchSetApproval t ) { return new com.google.gerrit.server.query.change.ChangeData ( t . METHOD_2 ( ) . getParentKey ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { return METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 ) ) ; } return null ; } 
public void METHOD_1 ( boolean b ) { VAR_1 = false ; } 
private boolean METHOD_1 ( ) { if ( ( VAR_1 ) <= ( VAR_2 ) ) { VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; VAR_5 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; return false ; } return true ; } 
public TYPE_1 apply ( TYPE_2 VAR_1 ) throws TYPE_3 , TYPE_4 , TYPE_5 , java.lang.Exception { return new TYPE_6 ( VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) ) ; } 
public static void METHOD_1 ( TYPE_1 view , TYPE_2 VAR_1 ) { view . METHOD_2 ( VAR_1 ) ; } 
private final native void METHOD_1 ( int VAR_1 ) ; 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( null ) ; org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( STRING_1 ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 user ) { java.lang.String VAR_1 = user . METHOD_2 ( ) ; if ( TYPE_3 . METHOD_3 ( VAR_1 ) ) { return VAR_2 ; } else { return VAR_3 . get ( VAR_1 ) ; } } 
public static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 in = TYPE_3 . METHOD_2 ( ) ; new TYPE_4 ( STRING_1 ) . id ( VAR_1 ) . METHOD_3 ( ) . data ( in ) . put ( VAR_2 ) ; } 
protected TYPE_1 user ( TYPE_2 VAR_1 ) { return VAR_2 . create ( TYPE_3 . of ( db ) , VAR_1 . getId ( ) ) ; } 
private boolean METHOD_1 ( TYPE_1 event ) { return ( ! ( METHOD_2 ( event ) ) ) && ( ( event . getRefName ( ) . METHOD_3 ( VAR_1 ) ) || ( event . getRefName ( ) . METHOD_3 ( VAR_2 ) ) ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String type , TYPE_1 VAR_1 , TYPE_2 . Key id ) { return TYPE_3 . METHOD_1 ( type , VAR_1 , id . getParentKey ( ) , id . get ( ) , null , 0 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities . network object ) { return object . getStatus ( ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . append ( VAR_1 ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 model = VAR_1 . METHOD_1 ( ) ; METHOD_1 ( model ) ; return model ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public TYPE_1 get ( ) { return TYPE_2 . METHOD_1 ( METHOD_2 ( METHOD_3 ( ) : : get ) ) ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 . assertEquals ( VAR_1 . size ( ) , VAR_2 ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { TYPE_2 . assertEquals ( VAR_4 , VAR_3 . METHOD_2 ( ) ) ; } } 
public void METHOD_1 ( java.lang.String value ) { this . VAR_1 = value ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { TYPE_2 VAR_1 = METHOD_2 ( ) . addValue ( STRING_1 , id ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , new TYPE_3 ( ) , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 event ) { model . setSelectedItem ( VAR_1 ) ; model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; model . METHOD_4 ( model . METHOD_5 ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( returnValue ) ) ; METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( STRING_1 . equals ( VAR_1 ) ) { return VAR_2 ; } else { return VAR_3 ; } } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( VAR_1 ) ; TYPE_2 . METHOD_1 ( VAR_3 , VAR_2 ) ; } 
public TYPE_1 get ( ) { TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_1 ( VAR_1 ) ; TYPE_1 quota = METHOD_2 ( VAR_2 , params ) ; return quota ; } 
void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , long VAR_1 ) ; 
public void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( command ) ; TYPE_3 . METHOD_4 ( command . validate ( ) ) ; } 
public java.lang.String METHOD_1 ( ) { return TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; } 
private static TYPE_1 METHOD_1 ( ) { TYPE_1 pool = TYPE_2 . METHOD_2 ( ) ; pool . METHOD_3 ( VAR_1 ) ; pool . METHOD_4 ( VAR_2 ) ; return pool ; } 
public void METHOD_1 ( final java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_1 , final org.ovirt.engine.core.compat.Guid VAR_2 ) { super . setItems ( new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_2 ( VAR_2 ) ; } } , VAR_1 ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { VAR_1 . METHOD_2 ( value ) ; } 
public void METHOD_1 ( ) { validator = METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; TYPE_3 . METHOD_4 ( cmd ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( METHOD_4 ( ) , VAR_1 . StorageDomain , METHOD_5 ( ) ) ) ; setItems ( METHOD_6 ( ) . METHOD_7 ( ) ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { return METHOD_2 ( new TYPE_2 ( ) { public TYPE_1 . ValidationResult METHOD_3 ( TYPE_3 < org.ovirt.engine.core.compat.Guid , TYPE_4 > VAR_1 ) { return METHOD_4 ( VAR_1 ) . METHOD_5 ( ) ; } } ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 rs , int VAR_1 ) throws TYPE_3 { TYPE_1 entity = new TYPE_1 ( TYPE_4 . METHOD_2 ( rs . METHOD_3 ( STRING_1 ) ) , METHOD_4 ( rs , STRING_2 ) ) ; return entity ; } 
protected java.lang.Object METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 ) ; } 
public void setEntity ( java.lang.Object value ) { if ( ( value == null ) || ( ! ( value . equals ( getEntity ( ) ) ) ) ) { super . setEntity ( value ) ; METHOD_1 ( ) ; } } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } 
private static boolean map ( java.lang.String value ) { final TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( value ) ; return ( VAR_2 ) == VAR_1 ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid id , boolean VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( STRING_1 , METHOD_4 ( id ) . addValue ( STRING_2 , VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( ) { get ( ) ; TYPE_2 parameters = new TYPE_2 ( ) ; parameters . setId ( VAR_1 ) ; parameters . METHOD_2 ( true ) ; return METHOD_3 ( VAR_2 , parameters ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( vm , vm . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( vm . getId ( ) ) ; VAR_1 . METHOD_5 ( ) ; return null ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { METHOD_1 ( ) . setEntity ( ( ( java.lang.Integer ) ( returnValue ) ) ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( VAR_3 ) ) ; } 
public TYPE_1 < org.ovirt.engine.core.compat.Guid > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) ; } return new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( VAR_1 ) ; } 
void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 , boolean VAR_2 ) ; 
public void METHOD_1 ( TYPE_1 value ) { if ( ( this . VAR_1 . METHOD_2 ( ) ) != value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_3 ( new TYPE_2 ( STRING_1 ) ) ; } } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( TYPE_1 . VdcActionType VAR_1 , boolean VAR_2 ) { METHOD_2 ( VAR_1 , METHOD_3 ( ) , VAR_2 ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { if ( VAR_1 . isEmpty ( ) ) { VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; } return VAR_1 ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( STRING_1 ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 , VAR_2 , false ) ; TYPE_1 . METHOD_3 ( result ) ; } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , java.lang.String . METHOD_3 ( STRING_1 , VAR_3 . METHOD_4 ( VAR_4 ) ) ) ; return null ; } 
public java.lang.String METHOD_1 ( ) { return ( METHOD_2 ( ) ) != null ? METHOD_2 ( ) . METHOD_1 ( ) : null ; } 
protected boolean METHOD_1 ( TYPE_1 . VdcActionType VAR_1 , TYPE_1 . VdcActionParametersBase params ) { return ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ) != null ; } 
private void METHOD_1 ( final TYPE_1 vm ) { VAR_1 . METHOD_2 ( true ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . METHOD_2 ( false ) ; VAR_5 . METHOD_2 ( false ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 . getId ( ) ; } 
protected TYPE_1 . VdcActionParametersBase METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_3 ( VAR_1 . METHOD_2 ( ) . getValue ( ) , VAR_1 . getId ( ) ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 , org.ovirt.engine.core.common.businessentities.VDS VAR_2 ) { return java.lang.Integer . valueOf ( TYPE_1 . METHOD_2 ( VAR_1 ) ) . METHOD_3 ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , name , true , null , null , VAR_1 , true ) ; } 
public final TYPE_1 METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 , name , VAR_1 ) ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 = TYPE_3 . METHOD_1 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; return VAR_3 ; } 
public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_3 ( ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; } return TYPE_1 . METHOD_4 ( VAR_1 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( new org.ovirt.engine.core.compat.Guid ( VAR_2 ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 iface = TYPE_2 . METHOD_2 ( ) ; METHOD_3 ( iface , true , org.mockito.Mockito . METHOD_4 ( 1 ) , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_1 > VAR_2 ) { if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { METHOD_3 ( VAR_1 , VAR_2 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 object = METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( object ) ; TYPE_2 . METHOD_4 ( object . getId ( ) ) ; TYPE_2 . METHOD_4 ( object . getName ( ) ) ; } 
public void setEntity ( TYPE_1 value ) { super . setEntity ( value ) ; } 
public static boolean METHOD_1 ( int VAR_1 , org.ovirt.engine.core.compat . Version version ) { return TYPE_1 . METHOD_2 ( VAR_1 , version ) . METHOD_3 ( VAR_2 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 < TYPE_2 > VAR_1 = METHOD_1 ( ( ( java.util.List < TYPE_3 . Disk > ) ( returnValue ) ) ) ; METHOD_2 ( VAR_1 , vm ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { if ( command == ( VAR_1 ) ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) ; } } else if ( command == ( VAR_2 ) ) { VAR_3 . METHOD_1 ( command ) ; } } 
public void METHOD_1 ( ) { parameters = new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; parameters . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; command = org.mockito.Mockito . METHOD_4 ( new TYPE_2 < TYPE_1 > ( parameters , null ) ) ; } 
public void METHOD_1 ( ) { final int VAR_1 = 0 ; final TYPE_1 VAR_2 = METHOD_2 ( 0 , VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; } 
protected java.util.List < TYPE_1 < ? > > METHOD_1 ( ) { if ( getParameters ( ) . METHOD_2 ( ) ) { return TYPE_2 . METHOD_3 ( VAR_1 class ) ; } return TYPE_2 . METHOD_3 ( VAR_2 class ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( VAR_1 ) ; } 
public static boolean METHOD_1 ( java.lang.String version ) { return ( ( java.lang.Boolean ) ( TYPE_1 . METHOD_2 ( VAR_1 , version ) ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface i ) { return i . getName ( ) . equals ( getParameters ( ) . METHOD_2 ( ) ) ; } 
public org.ovirt.engine.core.common.businessentities.StorageDomain getEntity ( ) { return ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( super . getEntity ( ) ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , vmId , VAR_4 ) ) ; } 
private void METHOD_1 ( TYPE_1 command ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( ) ) . when ( VAR_1 ) . METHOD_4 ( TYPE_2 . any ( VAR_2 . Guid class ) ) ; } 
public void METHOD_1 ( ) { map = new TYPE_1 ( ) ; cmd . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , true , null ) ; TYPE_3 . getInstance ( ) . METHOD_5 ( VAR_1 ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . network VAR_1 = new org.ovirt.engine.core.common.businessentities . network ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( VAR_1 ) . length ( ) ) > 0 ) ) ; } 
public void METHOD_1 ( ) { if ( ( frontend . METHOD_2 ( ) ) != null ) { frontend . METHOD_2 ( ) . METHOD_3 ( ) ; } TYPE_1 . METHOD_4 ( ) ; } 
private boolean METHOD_1 ( TYPE_1 storageDomain ) { if ( ( METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) { return METHOD_4 ( storageDomain ) ; } return METHOD_5 ( storageDomain ) ; } 
public java.lang.String METHOD_1 ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( object ) ) . METHOD_2 ( ) ; } 
public java.lang.String toString ( ) { return TYPE_1 . METHOD_1 ( this ) . append ( STRING_1 , ( METHOD_2 ( ) ? METHOD_3 ( ) : STRING_2 ) ) . METHOD_4 ( ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , TYPE_2 . getVdsGroup ( ) . METHOD_3 ( ) , TYPE_2 . getVdsGroup ( ) . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = METHOD_2 ( VAR_1 , new TYPE_2 ( ) ) ; TYPE_3 VAR_3 ; VAR_3 = VAR_2 . METHOD_3 ( ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VM object ) { return object . METHOD_1 ( ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.ArrayList < TYPE_2 . VdcActionParametersBase > parameters , TYPE_3 VAR_2 ) { return METHOD_2 ( VAR_1 , parameters , true , false , VAR_2 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid id , TYPE_2 type , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { int VAR_3 = VAR_4 < java.lang.Integer > METHOD_2 ( VAR_5 ) ; return METHOD_1 ( id , type , VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; } 
protected boolean METHOD_1 ( ) { return validate ( TYPE_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( TYPE_3 . getParameters ( ) . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) ) , TYPE_3 . METHOD_5 ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 < TYPE_2 < TYPE_3 > > validate = validate ( new TYPE_3 ( 0 ) ) ; TYPE_4 . METHOD_2 ( ( ( validate . size ( ) ) == 0 ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { this . VAR_1 = VAR_1 ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = getVm ( ) ; if ( vm . METHOD_3 ( ) . isEmpty ( ) ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } METHOD_6 ( true ) ; } 
private void METHOD_1 ( TYPE_1 . AddVmCommand < ? > cmd ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_3 ( ) ; } 
public java.lang.String METHOD_1 ( java.lang.Object object ) { return ( ( TYPE_1 ) ( object ) ) . getName ( ) ; } 
public final java.lang.Object METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { java.lang.String VAR_3 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_3 == null ) { return null ; } return METHOD_1 ( VAR_3 , VAR_1 , VAR_2 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_5 ( ) ; } 
public static java.lang.Integer METHOD_1 ( ) { java.lang.Integer VAR_1 = ( ( java.lang.Integer ) ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) ; if ( VAR_1 == null ) { return INT_1 ; } return VAR_1 ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return ! ( TYPE_1 . METHOD_2 ( i . METHOD_3 ( ) ) ) ; } 
protected boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 value ) { VAR_1 . METHOD_1 ( value ) ; } 
public void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( VAR_2 , new TYPE_2 ( ) ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . doReturn ( VAR_4 ) . when ( VAR_1 ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return inject ( new TYPE_2 ( VAR_1 , id , this , VAR_2 , METHOD_2 ( ) , METHOD_3 ( ) , VAR_3 ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < java.lang.String > ) ( result ) ) ) ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 , ? > column , int VAR_1 ) { METHOD_2 ( column , ( VAR_1 + STRING_1 ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery < java.util.List < java.lang.String > > aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 , TYPE_1 VAR_3 ) { TYPE_2 . METHOD_1 ( aQuery , VAR_1 , VAR_2 , VAR_3 , new TYPE_3 ( ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { return METHOD_1 ( id , null , false ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( ) . METHOD_3 ( ( ( java.lang.Boolean ) ( model . METHOD_4 ( ) . METHOD_5 ( ) . getEntity ( ) ) ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_5 ( VAR_2 ) ; METHOD_6 ( ) . METHOD_5 ( VAR_3 ) ; METHOD_7 ( VAR_3 ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network VAR_2 ) { return TYPE_1 . equals ( VAR_1 . METHOD_2 ( ) ) ? - 1 : VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; } 
private static org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = ( ( java.lang.String ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ; return VAR_2 == null ? null : new org.ovirt.engine.core.compat.Guid ( VAR_2 ) ; } 
public java.lang.Integer METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( vm . METHOD_2 ( ) , vm . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( validator ) . METHOD_2 ( org.mockito.Mockito . any ( VAR_2 . VDS class ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( validator ) . METHOD_3 ( ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > ) ( returnValue ) ) ; VAR_2 = VAR_1 ; METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , true , true ) ; } 
public static org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 id ) { return id == null ? null : id . getValue ( ) ; } 
private void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.VDS host = TYPE_1 . getSelectedItem ( ) ; if ( host == null ) { return ; } METHOD_2 ( host ) ; VAR_1 . METHOD_3 ( host . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( ) . METHOD_3 ( STRING_1 ) . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 < TYPE_2 > VAR_1 = METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { validator = new TYPE_1 ( network , VAR_1 , VAR_2 ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 , org.ovirt.engine.core.compat . Version VAR_2 ) { return ( ( ! ( VAR_1 . METHOD_2 ( ) ) ) && ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) && ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; TYPE_2 . assertEquals ( result . size ( ) , 0 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) . value ( ) ) ; return model ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String item ) { boolean returnValue = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_1 ( item ) ; if ( ! returnValue ) { this . METHOD_4 ( VAR_1 ) ; } return returnValue ; } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( ( this . VAR_1 ) == null ) { METHOD_2 ( ) ; } return this . VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . get ( VAR_2 ) ) ; } 
private void METHOD_1 ( java.util.List < TYPE_1 . Disk > VAR_1 , boolean VAR_2 ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_3 ) . METHOD_2 ( vm . getId ( ) , VAR_2 ) ; } 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , TYPE_2 . VdcActionType VAR_3 , java.lang.String VAR_4 , java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_3 > VAR_5 ) { return TYPE_4 . METHOD_2 ( VAR_1 , this , VAR_2 , METHOD_3 ( VAR_3 ) , VAR_4 , VAR_5 ) ; } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.VDSGroup VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( VAR_4 , VAR_1 . METHOD_5 ( ) ) ; return null ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( cmd ) ; } 
public static org.ovirt.engine.core.compat . Version METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) != null ? TYPE_2 . getInstance ( ) . METHOD_3 ( ) . get ( VAR_1 . METHOD_2 ( ) ) . METHOD_4 ( ) : VAR_2 ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) . getId ( ) ) ; TYPE_1 . METHOD_6 ( true ) ; } 
public static void METHOD_1 ( ) { if ( ( TYPE_1 ) != null ) { TYPE_1 . METHOD_2 ( ) ; } VAR_1 = null ; VAR_2 = null ; VAR_3 = null ; VAR_4 = null ; VAR_5 = null ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; return VAR_1 ; } 
public TYPE_1 METHOD_1 ( TYPE_2 . DiskImage object ) { if ( object . METHOD_2 ( ) ) { return TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } return null ; } 
public boolean METHOD_1 ( ) { boolean VAR_1 = TYPE_1 . METHOD_2 ( getEntity ( ) . METHOD_3 ( ) ) ; boolean VAR_2 = ( getEntity ( ) . METHOD_4 ( ) ) != null ; return VAR_1 && VAR_2 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( TYPE_1 . getInstance ( ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_3 ( ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { return ( object . METHOD_1 ( ) . METHOD_2 ( ) ) == null ? STRING_1 : object . METHOD_1 ( ) . METHOD_2 ( ) . toString ( ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 ) { return METHOD_1 ( VAR_1 , INT_1 , INT_2 , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 item ) { METHOD_1 ( item , INT_1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities . network VAR_1 , org.ovirt.engine.core.common.businessentities . network VAR_2 ) { return TYPE_1 . equals ( VAR_1 . METHOD_2 ( ) ) ? - 1 : VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( event . METHOD_3 ( ) ) ; VAR_1 = event . METHOD_3 ( ) . get ( 0 ) ; METHOD_4 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( validator . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_2 . METHOD_4 ( ) ) ) , VAR_3 ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) , true ) ; return METHOD_4 ( params , TYPE_3 . METHOD_5 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) . get ( VAR_2 . getId ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( TYPE_2 . METHOD_4 ( TYPE_3 : : getName ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) . get ( 0 ) ) ; } 
public TYPE_1 get ( ) { switch ( VAR_1 . METHOD_1 ( ) ) { case VAR_2 : case VAR_3 : return METHOD_2 ( ) ; case VAR_4 : return METHOD_3 ( ) ; case VAR_5 : case VAR_6 : default : return null ; } } 
public void METHOD_1 ( boolean VAR_1 ) { getModel ( ) . METHOD_2 ( ) . setIsChangable ( VAR_1 ) ; getModel ( ) . METHOD_2 ( ) . setEntity ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; TYPE_4 . assertEquals ( VAR_3 , VAR_2 . METHOD_3 ( ) ) ; } 
public static < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( TYPE_3 VAR_1 , TYPE_1 model ) { return TYPE_4 . METHOD_1 ( VAR_1 , model , null ) ; } 
private static TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 class , STRING_1 ) ; } 
protected TYPE_1 getEntity ( int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_1 ( VAR_3 [ VAR_1 ] . toString ( ) ) ; VAR_2 . METHOD_2 ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) ) ; return VAR_2 ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , final TYPE_1 status , TYPE_2 VAR_1 ) { METHOD_1 ( vm , status , VAR_1 , VAR_2 , VAR_3 , vm . METHOD_2 ( ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . get ( TYPE_1 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String name , java.util.Map value ) { if ( ( value != null ) && ( value . METHOD_2 ( ) . isEmpty ( ) ) ) { return METHOD_3 ( name , value ) ; } return this ; } 
private static java.lang.String METHOD_1 ( ) { return STRING_1 ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , org.ovirt.engine.core.common.businessentities.StoragePool pool ) { for ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 : VAR_1 ) { if ( ( VAR_2 . getStatus ( ) ) == ( VAR_3 ) ) { METHOD_2 ( VAR_2 , pool ) ; } } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( ) ; METHOD_7 ( VAR_1 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 . VdcBllMessages VAR_1 , java.lang.String ... VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . getParameters ( ) . getStoragePoolId ( ) , TYPE_1 . getParameters ( ) . METHOD_7 ( ) ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( METHOD_3 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 result ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( result . METHOD_2 ( ) ) ) ; VAR_1 . METHOD_3 ( result ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 value , TYPE_3 VAR_1 ) { VAR_1 . append ( VAR_2 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_3 , value . METHOD_4 ( ) ) , value . METHOD_4 ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getParameters ( ) . METHOD_4 ( ) , getParameters ( ) . METHOD_5 ( ) . getId ( ) ) ; return null ; } 
public void METHOD_1 ( final TYPE_1 object ) { super . METHOD_1 ( object ) ; if ( object . METHOD_2 ( ) ) { object . METHOD_3 ( ) . setEntity ( 1 ) ; VAR_1 . METHOD_4 ( false ) ; } } 
public void METHOD_1 ( ) { parameters = new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; parameters . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; command = org.mockito.Mockito . METHOD_4 ( new TYPE_2 < TYPE_1 > ( parameters ) ) ; } 
private void METHOD_1 ( ) { cmd . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 ) ; TYPE_2 . assertEquals ( STRING_2 , VAR_1 . getString ( STRING_3 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; command . getParameters ( ) . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( command . validate ( ) ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_1 instance = new TYPE_1 ( ) ; return instance ; } 
public void METHOD_1 ( int VAR_1 , TYPE_1 model , java.lang.Boolean value ) { ( ( TYPE_1 ) ( model ) ) . METHOD_2 ( ) . setEntity ( value ) ; table . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; } 
void METHOD_1 ( java.lang.Object VAR_1 , TYPE_1 < ? > VAR_2 ) ; 
public java.lang.String METHOD_1 ( TYPE_1 version ) { java.lang.String VAR_1 ; VAR_1 = version . METHOD_2 ( ) ; return new TYPE_2 < java.lang.String > ( TYPE_3 . instance ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_1 ( VAR_1 ) ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 ) . METHOD_2 ( VAR_1 , VAR_3 . instance ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return METHOD_2 ( ) . getValue ( ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_2 > VAR_1 ) { return VAR_1 . getEntity ( ) . METHOD_2 ( ) ; } 
public synchronized void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { if ( ( ( java.lang.Boolean ) ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) ) { VAR_3 . METHOD_3 ( VAR_4 , STRING_1 ) ; METHOD_4 ( ) ; } return null ; } 
public void METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 , VAR_2 , new TYPE_2 ( VAR_3 ) ) ; } 
protected org.ovirt.engine.core.common.businessentities.VDS METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS object ) { if ( object instanceof org.ovirt.engine.core.common.businessentities.VDS ) { return object ; } else { return null ; } } 
public TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_2 < java.lang.String > VAR_1 = new TYPE_2 ( super . METHOD_1 ( ) ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; return VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 node , java.lang.String VAR_1 , TYPE_2 VAR_2 ) { this . VAR_3 = VAR_1 ; if ( VAR_2 == null ) { return node . METHOD_2 ( VAR_1 ) ; } return node . METHOD_2 ( VAR_1 , VAR_2 ) ; } 
TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 value ) ; 
protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = getEntity ( VAR_3 . VM class , VAR_4 , new TYPE_2 ( VAR_5 ) , VAR_5 . toString ( ) ) . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; return VAR_2 ; } 
protected java.lang.String METHOD_1 ( java.lang.String url ) { return TYPE_1 . METHOD_1 ( url , TYPE_2 . getVm ( ) . getStoragePoolId ( ) , TYPE_2 . METHOD_2 ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 source ) { return name . equals ( source . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , null ) ; METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_3 = METHOD_4 ( METHOD_5 ( VAR_1 ) ) ; METHOD_6 ( VAR_3 , VAR_4 , VAR_1 . getName ( ) ) ; } 
public void METHOD_1 ( TYPE_1 value ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } VAR_1 = value ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 > errors ) { VAR_1 = TYPE_3 . METHOD_2 ( errors ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , VAR_1 , true , VAR_2 , STRING_1 , STRING_2 , false , false , true ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( TYPE_1 . toString ( ) ) ; } 
public < TYPE_1 > void METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 , TYPE_1 instance ) { VAR_2 . put ( VAR_1 . getName ( ) , instance ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) . METHOD_2 ( ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . getParameters ( ) . getName ( ) , false ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; } 
public static boolean METHOD_1 ( TYPE_1 source , TYPE_1 VAR_1 , TYPE_2 status ) { return VAR_2 . METHOD_2 ( source , VAR_1 , status ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . Disk disk ) { return new TYPE_1 ( disk , TYPE_3 . METHOD_2 ( ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) , METHOD_3 ( ) ) ; validate ( ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , true ) ; METHOD_4 ( result ) ; } 
public java.lang.Object METHOD_1 ( ) { return getId ( ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( result ) ) ) ; } 
public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { super . METHOD_1 ( ) ; } } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster ) { TYPE_1 VAR_1 = new TYPE_1 ( cluster ) ; VAR_1 . METHOD_2 ( false ) ; return VAR_1 ; } 
public java.lang.String METHOD_1 ( ) { return this . name ; } 
private void METHOD_1 ( ) { TYPE_1 parameters = METHOD_2 ( ) ; command = TYPE_2 . METHOD_3 ( new TYPE_3 < TYPE_1 > ( parameters ) ) ; TYPE_2 . METHOD_4 ( VAR_1 class ) ; } 
private void METHOD_1 ( ) { TYPE_1 model = new TYPE_2 ( this , false ) ; model . setEntity ( new TYPE_3 ( ) ) ; METHOD_2 ( model ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_1 , new TYPE_1 ( getEntity ( ) . METHOD_4 ( ) ) ) ) ; setItems ( METHOD_5 ( ) . METHOD_6 ( ) ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return id . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( dao . METHOD_3 ( VAR_1 ) . size ( ) ) == INT_1 ) ) ; TYPE_1 . METHOD_2 ( dao . METHOD_3 ( VAR_2 ) . isEmpty ( ) ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_2 ( ) . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; return METHOD_3 ( VAR_1 , new TYPE_2 ( VAR_3 , VAR_4 class ) , VAR_5 , new TYPE_3 ( ) ) ; } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , VAR_3 < java.lang.Boolean > METHOD_4 ( VAR_4 ) . toString ( ) ) ; return null ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) , TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( ) , TYPE_2 . getReturnValue ( ) . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { TYPE_1 cluster = new TYPE_1 ( ) ; cluster . METHOD_2 ( version ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( cluster ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , boolean VAR_2 , TYPE_3 VAR_3 ) { TYPE_1 disk = TYPE_4 . METHOD_1 ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( VAR_2 ) ; disk . METHOD_4 ( VAR_3 ) ; return disk ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . getValue ( ) ; } 
public java.lang.String METHOD_1 ( ) { return ( VAR_1 ) == null ? null : VAR_1 . toString ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . get ( VAR_1 . getId ( ) , VAR_2 , true ) ; TYPE_2 . METHOD_2 ( result ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; ( ( TYPE_3 ) ( model ) ) . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( int value ) { this . VAR_1 . METHOD_2 ( value ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return network . METHOD_2 ( ) ? VAR_1 . getId ( ) . equals ( network . METHOD_3 ( ) . METHOD_4 ( ) ) : false ; } 
private static void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_1 tempVar = new TYPE_1 ( ) ; tempVar . setId ( VAR_2 ) ; tempVar . METHOD_2 ( STRING_1 ) ; VAR_1 . add ( tempVar ) ; } 
public java.lang.Integer METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 ) . addValue ( STRING_2 , VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( STRING_3 , VAR_3 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network network ) { return network . METHOD_2 ( ) . equals ( METHOD_3 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; VAR_1 . METHOD_3 ( false ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( STRING_1 ) . METHOD_6 ( ) ; return VAR_1 ; } 
protected void METHOD_1 ( ) { VAR_1 . put ( VAR_2 , vm . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . put ( VAR_3 , java.lang.String.valueOf ( vm . METHOD_3 ( ) ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic ) { return METHOD_1 ( nic . METHOD_2 ( ) , nic ) ; } 
protected TYPE_1 . DbFacade METHOD_1 ( ) { return VAR_1 ; } 
public org.ovirt.engine.core.common.businessentities.VDS get ( TYPE_1 id ) { return get ( id , null , false ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return new TYPE_4 ( VAR_1 , VAR_2 ) ; } 
protected TYPE_1 . VdcActionParametersBase METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_3 ( VAR_1 , VAR_1 . getId ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { } 
protected TYPE_1 . VM METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . VM VAR_2 = getEntity ( VAR_3 . VM class , VAR_4 , new TYPE_2 ( METHOD_2 ( VAR_1 ) ) , STRING_1 ) ; return VAR_2 ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 parameters = new TYPE_1 ( storageDomain . getId ( ) ) ; parameters . METHOD_2 ( VAR_1 ) ; TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_2 , parameters ) ; return true ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( null ) . when ( command ) . METHOD_2 ( TYPE_1 . any ( VAR_1 class ) ) ; TYPE_2 . METHOD_3 ( command , VAR_2 ) ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM entity , int VAR_1 ) { TYPE_1 . METHOD_2 ( entity . getId ( ) ) . METHOD_3 ( VAR_2 [ VAR_1 ] ) . METHOD_4 ( ) ; return entity ; } 
boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( VAR_1 . METHOD_2 ( ) ) && ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ) && ( VAR_1 . METHOD_3 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( command . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( STRING_1 , command , VAR_1 ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_2 > VAR_1 = VAR_2 . METHOD_2 ( VAR_3 class ) ; TYPE_1 < TYPE_2 > VAR_4 = new TYPE_3 ( VAR_1 . METHOD_3 ( ) ) ; return VAR_4 ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 parameters = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , TYPE_2 . getVm ( ) ) ; parameters . METHOD_3 ( TYPE_2 . getVm ( ) . METHOD_4 ( ) ) ; return parameters ; } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { if ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) { return TYPE_2 . getSucceeded ( ) ? VAR_1 : VAR_2 ; } else { return TYPE_2 . getSucceeded ( ) ? VAR_3 : VAR_4 ; } } 
public java.lang.String getValue ( TYPE_1 < TYPE_2 , org.ovirt.engine.core.common.businessentities.VM > object ) { return object . METHOD_1 ( ) . METHOD_2 ( ) ; } 
public boolean METHOD_1 ( TYPE_1 storageDomain , org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 ) { return METHOD_2 ( storageDomain , VAR_1 , TYPE_3 . getValue ( ) , VAR_2 , VAR_3 ) ; } 
protected TYPE_1 METHOD_1 ( ) { return VAR_1 . getModel ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = TYPE_2 . getModel ( 0 ) ; model . METHOD_2 ( new TYPE_3 ( ) ) ; model . METHOD_3 ( ) . METHOD_4 ( true ) ; METHOD_5 ( model , true ) ; } 
public TYPE_1 METHOD_1 ( ) ; 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( model , true ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( ) , VAR_2 , STRING_2 , VAR_1 . METHOD_4 ( ) , VAR_3 , VAR_1 . METHOD_5 ( ) ) ; } 
public boolean METHOD_1 ( ) { return ( this . VAR_1 ) != null ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network network ) { return ( ! ( network . METHOD_2 ( ) ) ) && ( ( network . METHOD_3 ( ) ) == null ) ; } 
public TYPE_1 < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 = METHOD_2 ( VAR_2 . VdsNetworkInterface class , VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_4 ) ) ; return new TYPE_1 < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_3 . METHOD_5 ( VAR_4 , VAR_2 ) ) ; org.mockito.Mockito . METHOD_6 ( VAR_1 ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return VAR_1 ; } 
private static < TYPE_1 > void METHOD_1 ( TYPE_2 value , java.lang.String version , TYPE_1 returnValue ) { org.mockito.Mockito.when ( TYPE_3 . METHOD_2 ( ) . METHOD_3 ( value , version ) ) . thenReturn ( returnValue ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 user ) { if ( ( user . METHOD_2 ( ) ) == ( VAR_1 ) ) { return TYPE_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; } return TYPE_3 . METHOD_3 ( VAR_2 . user ( ) ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return ( TYPE_1 . METHOD_1 ( VAR_1 . METHOD_2 ( 0 ) ) ) + ( VAR_1 . METHOD_3 ( 1 ) ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { this . VAR_1 = TYPE_1 . METHOD_2 ( value ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; TYPE_2 . getInstance ( ) . METHOD_1 ( new TYPE_3 ( VAR_1 ) ) ; } 
public TYPE_1 getStatus ( ) { return METHOD_1 ( ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = new org.ovirt.engine.core.common.businessentities . VdsNetworkInterface ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( nic ) . length ( ) ) > 0 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( VAR_1 . METHOD_2 ( ) , VAR_2 ) ; TYPE_1 . assertEquals ( VAR_3 . METHOD_2 ( ) , VAR_4 ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String params ) { return ( ( STRING_1 + ( TYPE_1 . getInstance ( ) . METHOD_2 ( ) ) ) + VAR_1 ) + ( params != null ? params : STRING_2 ) ; } 
protected TYPE_1 . StorageDomain METHOD_1 ( int VAR_1 ) { TYPE_1 . StorageDomain VAR_2 = new TYPE_1 . StorageDomain ( ) ; VAR_2 . setId ( VAR_3 [ VAR_1 ] ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; domain . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( validator . METHOD_1 ( domain ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( int value ) { this . VAR_1 = value ; METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; } 
public static TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , false ) ; METHOD_4 ( result ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < java.lang.String > VAR_1 = ( ( java.util.List < java.lang.String > ) ( returnValue ) ) ; METHOD_2 ( model , VAR_1 ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 < org.ovirt.engine.core.compat.Guid > vms = VAR_2 . get ( VAR_1 ) ; if ( vms != null ) { METHOD_2 ( ) . METHOD_3 ( vms ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; } } 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . METHOD_3 ( ) ) && ( METHOD_4 ( ) . METHOD_3 ( ) ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } return source ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return VAR_1 . getStoragePoolId ( ) . getValue ( ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) ) ; TYPE_1 . METHOD_3 ( TYPE_2 . getVm ( ) , false , false , true ) ; return TYPE_2 . getVm ( ) . METHOD_4 ( ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( getVm ( ) . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false , null , null ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( false ) , TYPE_2 . METHOD_5 ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) . toString ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_2 ( ) ; METHOD_3 ( true ) ; METHOD_4 ( true ) ; METHOD_5 ( true ) ; METHOD_6 ( true ) ; METHOD_7 ( true ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { if ( STRING_1 . METHOD_2 ( command . getName ( ) ) ) { METHOD_3 ( ) ; } } 
public void METHOD_1 ( java.lang.String value ) { for ( TYPE_1 storageDomain : METHOD_2 ( ) ) { if ( storageDomain . METHOD_3 ( ) . equals ( value ) ) { METHOD_4 ( storageDomain ) ; break ; } } } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; if ( ( VAR_1 . METHOD_3 ( ) ) || ( VAR_1 . METHOD_4 ( ) ) ) { METHOD_5 ( VAR_1 ) ; } return super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 . toString ( ) , true ) ; VAR_4 = TYPE_1 . METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { getWindow ( ) . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( java.lang.Integer VAR_1 ) { VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) . METHOD_4 ( ( ( VAR_1 != null ) && ( VAR_2 ) ) ) ; } 
protected void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) . setEntity ( true ) ; } else { METHOD_2 ( ) . setEntity ( true ) ; METHOD_2 ( ) . METHOD_3 ( false ) ; } } 
protected void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( new TYPE_2 ( ) { public boolean METHOD_3 ( TYPE_3 VAR_1 ) { return true ; } } ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; } 
private boolean METHOD_1 ( ) { return ( ( VAR_1 . getStatus ( ) ) == ( VAR_2 ) ) && ( METHOD_2 ( ) . METHOD_3 ( ) . equals ( VAR_1 . METHOD_4 ( ) ) ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 , new TYPE_1 ( vm . getId ( ) ) ) . getReturnValue ( ) ) ) . METHOD_5 ( ) ; } 
private void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel value ) { VAR_1 = value ; } 
public TYPE_1 getConstants ( ) { return constants ; } 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) ) ; } return VAR_1 ; } 
private int METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } 
private boolean METHOD_1 ( TYPE_1 cluster ) { return ( cluster . METHOD_2 ( ) ) && ( METHOD_3 ( ) . METHOD_4 ( cluster . METHOD_5 ( ) , cluster . getId ( ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , final boolean VAR_1 ) { aQuery.converterCallback = new TYPE_1 ( ) ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , params , aQuery ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String id ) { return inject ( new TYPE_2 ( id , VAR_1 ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new TYPE_1 ( ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = true ; METHOD_2 ( ) ; } 
public static < TYPE_1 , TYPE_2 > TYPE_3 < TYPE_1 , TYPE_2 > METHOD_1 ( java.lang.String name ) { return new TYPE_4 < TYPE_1 , TYPE_2 > ( ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . getInstance ( ) . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( STRING_1 , VAR_1 ) ; } else { VAR_2 . METHOD_3 ( STRING_2 , VAR_1 ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 object ) { return object . METHOD_2 ( ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 context , TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return TYPE_4 . METHOD_1 ( context , VAR_1 , VAR_2 , false ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( TYPE_4 . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; return METHOD_4 ( VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { final TYPE_3 cluster = new TYPE_3 ( ) ; cluster . METHOD_2 ( VAR_2 ) ; TYPE_1 model = new TYPE_4 ( VAR_1 ) { public TYPE_3 METHOD_3 ( ) { return cluster ; } } ; return model ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( STRING_1 ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final java.lang.String VAR_2 = STRING_1 ; VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; } 
protected boolean validate ( ) { return ( ( validate ( METHOD_1 ( ) . METHOD_2 ( ) ) ) && ( validate ( METHOD_1 ( ) . METHOD_3 ( ) ) ) ) && ( validate ( METHOD_1 ( ) . METHOD_4 ( ) ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model ) { model = super . METHOD_1 ( model ) ; model . METHOD_2 ( TYPE_2 . name ( ) . METHOD_3 ( ) ) ; return model ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_2 = ( ( java.lang.String ) ( returnValue ) ) ; VAR_1 . METHOD_2 ( ) ; } 
private boolean METHOD_1 ( ) { final TYPE_1 VAR_1 = METHOD_2 ( ) ; return ( validate ( VAR_1 . METHOD_3 ( ) ) ) && ( super . METHOD_1 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , METHOD_3 ( VAR_1 ) ) ) ) ; METHOD_4 ( cmd ) ; TYPE_3 . METHOD_5 ( cmd . validate ( ) ) ; } 
public void setEntity ( org.ovirt.engine.core.common.businessentities.StoragePool value ) { VAR_1 = value ; METHOD_1 ( ) ; } 
private java.lang.String METHOD_1 ( ) { return java.lang.String . METHOD_2 ( STRING_1 , network . getName ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network VAR_1 ) { return VAR_1 . getId ( ) . equals ( METHOD_2 ( ) . getId ( ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( vds ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; METHOD_2 ( VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_2 , VAR_3 , VAR_5 ) ; METHOD_4 ( VAR_1 , VAR_4 ) ; METHOD_5 ( VAR_4 , VAR_1 ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; VAR_1 . METHOD_3 ( null ) ; } 
public boolean METHOD_1 ( ) { return ( ( this . VAR_1 ) != null ) && ( this . VAR_1 . METHOD_2 ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.Object ... args ) { for ( java.lang.Object VAR_1 : args ) { if ( VAR_1 instanceof TYPE_1 ) return ( ( TYPE_1 ) ( VAR_1 ) ) ; } return null ; } 
private static TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . METHOD_2 ( VAR_1 ) ; } catch ( TYPE_2 e ) { VAR_2 . error ( ( STRING_1 + ( VAR_1 ) ) ) ; throw new TYPE_3 ( e ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; TYPE_2 . METHOD_1 ( VAR_2 , new TYPE_3 ( ) ) ; setItems ( VAR_2 ) ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . METHOD_5 ( ) ) . thenReturn ( vmId ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( METHOD_4 ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = TYPE_1 . METHOD_1 ( ( ( TYPE_2 < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.doReturn ( true ) . when ( VAR_1 ) . METHOD_2 ( TYPE_1 . any ( VAR_2 . StoragePool class ) ) ; VAR_1 . METHOD_3 ( ) ; METHOD_4 ( java.lang.Boolean . TRUE ) ; } 
private static boolean METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ; if ( VAR_1 != null ) { return VAR_1 ; } else { return this ; } } 
private void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( ) ; } 
public java.lang.String getName ( ) { return METHOD_1 ( ) ; } 
public void METHOD_1 ( boolean value ) { if ( ( VAR_1 ) != value ) { VAR_1 = value ; METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; } } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( result ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String VAR_1 ) { return METHOD_2 ( iface . getId ( ) , iface . getName ( ) , false , VAR_1 , null , null , true ) ; } 
protected void METHOD_1 ( ) { METHOD_1 ( ( ! ( TYPE_1 . METHOD_2 ( ) ) ) ) ; if ( getReturnValue ( ) . METHOD_3 ( ) . isEmpty ( ) ) { METHOD_4 ( ) ; } } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage ) { return diskImage . getId ( ) . getValue ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain result = dao . METHOD_2 ( VAR_1 . getId ( ) , TYPE_1 . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; } 
protected TYPE_1 . AddVmCommand < TYPE_2 > METHOD_1 ( ) { METHOD_2 ( ) ; return new TYPE_1 . AddVmCommand ( new TYPE_2 ( vm ) , null ) ; } 
public void setTitle ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_1 ( ) . METHOD_2 ( new TYPE_2 ( VAR_1 ) ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { return getParameters ( ) . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } final TYPE_1 VAR_1 = new TYPE_2 ( this ) ; METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( null ) ; METHOD_4 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( ( ( java.lang.Boolean ) ( VAR_1 . getEntity ( ) ) ) && ( ( VAR_2 ) != null ) ) { return VAR_2 ; } return METHOD_2 ( ) ; } 
public java.lang.String METHOD_1 ( ) { return ( VAR_1 ) + ( ( VAR_2 ) == null ? STRING_1 : VAR_2 ) ; } 
private boolean METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) != null ) { return true ; } addCanDoActionMessage ( VAR_1 ) ; return false ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { boolean VAR_1 = ( ( storageDomain . METHOD_2 ( ) ) != null ) && ( ( storageDomain . METHOD_2 ( ) ) == ( VAR_2 ) ) ; return VAR_1 ; } 
public java.lang.String getValue ( TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) , STRING_1 ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } 
public void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters ) { METHOD_1 ( VAR_1 , parameters , null , null , true , false ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 . getName ( ) , VAR_1 ) ; } 
void METHOD_1 ( TYPE_1 model ) { METHOD_2 ( model . METHOD_3 ( ) ) ; METHOD_4 ( ( ( model . METHOD_5 ( ) ) != ( VAR_1 ) ) ) ; METHOD_6 ( constants ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = getParameters ( ) . METHOD_2 ( ) . getId ( ) ; METHOD_3 ( STRING_1 , VAR_1 . toString ( ) ) ; getReturnValue ( ) . METHOD_4 ( VAR_1 ) ; } 
public TYPE_1 getValue ( TYPE_2 object ) { return new TYPE_3 ( ) . getValue ( ( ( TYPE_2 ) ( object ) ) . getVm ( ) ) ; } 
TYPE_1 METHOD_1 ( java.lang.String value ) ; 
public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 ) { TYPE_1 < ? > VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_3 . getParameters ( ) . METHOD_3 ( false ) ; METHOD_4 ( VAR_3 , VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( result , TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) , VAR_1 . METHOD_4 ( ) , action ) ) ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storageDomain . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; storageDomain . METHOD_3 ( VAR_1 ) ; storageDomain . METHOD_4 ( VAR_2 ) ; return storageDomain ; } 
protected java.lang.String METHOD_1 ( ) { return java.lang.String . METHOD_2 ( STRING_1 , version ) ; } 
public void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 , final java.util.Map < java.lang.String , TYPE_1 > VAR_2 ) { VAR_3 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; } 
private void METHOD_1 ( java.lang.Object sender , TYPE_1 args ) { if ( ( METHOD_2 ( ) . getEntity ( ) ) == false ) { METHOD_3 ( ) . METHOD_4 ( true ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( cmd . METHOD_4 ( ) ) ; } 
protected boolean METHOD_1 ( ) { return VAR_1 ; } 
private TYPE_1 . DbFacade METHOD_1 ( ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) ; } 
public TYPE_1 . VdcActionParametersBase getParameters ( TYPE_2 model , TYPE_3 entity ) { TYPE_4 < TYPE_3 > parameters = new TYPE_4 < TYPE_3 > ( ) ; parameters . METHOD_1 ( VAR_1 ) ; parameters . METHOD_2 ( map ( VAR_2 , entity ) ) ; return parameters ; } 
public java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( ) { return VAR_1 ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) { TYPE_2 VAR_5 = TYPE_3 . METHOD_2 ( VAR_3 , VAR_2 , VAR_4 ) ; VAR_1 . setId ( VAR_5 . toString ( ) ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.List < java.lang.String > VAR_1 ) { return TYPE_1 . METHOD_1 ( vm , VAR_1 , TYPE_1 . METHOD_2 ( vm , null ) ) ; } 
private static TYPE_1 METHOD_1 ( ) { TYPE_1 pool = new TYPE_1 ( ) ; pool . METHOD_2 ( STRING_1 ) ; pool . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; return pool ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new org.ovirt.engine.core.common.businessentities.VM ( ) , new java.util.ArrayList < > ( ) , null ) , false , VAR_2 ) ; } 
protected void METHOD_1 ( ) { try { METHOD_2 ( ) ; VAR_1 = false ; TYPE_1 . METHOD_3 ( false ) ; METHOD_4 ( ) ; } finally { TYPE_1 . METHOD_5 ( ) ; } } 
public static void log ( TYPE_1 VAR_1 ) { TYPE_2 . AuditLogType VAR_2 = VAR_1 . METHOD_1 ( ) ; TYPE_3 . log ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 command = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( command , VAR_4 ) ; } 
protected java.lang.String METHOD_1 ( TYPE_1 . DiskImage image ) { return java.lang.String . METHOD_2 ( STRING_1 , image . METHOD_3 ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( getEntity ( ) ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { } 
public abstract boolean METHOD_1 ( TYPE_1 other ) ; 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { VAR_1 = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( result ) ) ; METHOD_1 ( VAR_1 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , int VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = dao . METHOD_2 ( VAR_1 ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_2 , VAR_3 . size ( ) ) ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( null ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_2 , METHOD_4 ( ) , VAR_1 , this ) ; } 
private long METHOD_1 ( ) { return ( TYPE_1 . METHOD_2 ( ) ) - ( ( this . VAR_1 ) + ( this . VAR_2 . METHOD_3 ( ) ) ) ; } 
protected int METHOD_1 ( ) { return 1 ; } 
public void METHOD_1 ( TYPE_1 entity ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , METHOD_5 ( entity ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( ) ) . when ( VAR_3 ) . METHOD_5 ( VAR_4 ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 < TYPE_1 > VAR_1 , TYPE_4 < TYPE_1 > VAR_2 ) { return new TYPE_2 < TYPE_1 > ( VAR_1 , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String domain , TYPE_2 VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_2 . instance , METHOD_4 ( ) . addValue ( STRING_2 , domain ) . addValue ( STRING_3 , VAR_1 . METHOD_5 ( ) ) ) ; } 
protected void METHOD_1 ( TYPE_1 value ) { super . setItems ( value ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VM > list = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > ) ( METHOD_2 ( ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( command . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; this . model . METHOD_3 ( ) ; this . model = null ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , TYPE_1 status ) ; 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; model . METHOD_2 ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( resource . get ( ) , 0 ) ; } 
public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) , value ) ) ) { METHOD_3 ( ) . METHOD_1 ( value ) ; } } 
private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) . add ( VAR_3 ) ; return VAR_1 ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) != ( VAR_2 ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_3 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( returnValue ) ) ; if ( VAR_1 != null ) { METHOD_1 ( VAR_1 . getStatus ( ) ) ; } else { METHOD_1 ( VAR_2 ) ; } } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) . getEntity ( ) ) ; METHOD_5 ( ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { return object . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.StorageDomain domain = METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_1 . assertEquals ( domain , cmd . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat . Version value ) { if ( TYPE_1 . METHOD_2 ( VAR_1 , value ) ) { this . VAR_1 = value ; METHOD_3 ( new TYPE_2 ( STRING_1 ) ) ; } } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { switch ( TYPE_2 . METHOD_2 ( ) ) { case VAR_1 : return TYPE_2 . getSucceeded ( ) ? VAR_2 : VAR_3 ; default : return VAR_4 ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; } 
public TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS , TYPE_2 > METHOD_1 ( ) throws java.lang.Exception { TYPE_2 returnValue = METHOD_2 ( VAR_1 , new TYPE_3 ( VAR_2 . getId ( ) ) ) ; return new TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS , TYPE_2 > ( VAR_2 , returnValue ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true , true , null , false ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 type ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) != null ) && ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == type ) ) { return true ; } return false ; } 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return METHOD_4 ( ) . METHOD_2 ( VAR_2 ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return vm . METHOD_2 ( ) . equals ( VAR_1 ) ; } 
public boolean METHOD_1 ( java.lang.Object VAR_1 ) { if ( VAR_1 instanceof TYPE_1 ) { return ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_2 ( ) ) == VAR_2 ; } return false ; } 
public TYPE_1 METHOD_1 ( java.lang.String obj ) { return VAR_1 ; } 
public abstract TYPE_1 METHOD_1 ( TYPE_2 object ) ; 
private void METHOD_1 ( ) { TYPE_1 user = ( ( TYPE_1 ) ( getEntity ( ) ) ) ; METHOD_2 ( user . METHOD_3 ( ) ) ; METHOD_4 ( user . METHOD_5 ( ) ) ; METHOD_6 ( user . METHOD_7 ( ) ) ; } 
protected java.lang.String METHOD_1 ( java.lang.String url ) { return TYPE_1 . METHOD_1 ( url , TYPE_2 . getVm ( ) . METHOD_2 ( ) ) ; } 
protected TYPE_1 < TYPE_2 > getTable ( ) { return table ; } 
public void METHOD_1 ( ) { getTable ( ) . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.network.Network object ) { return object . METHOD_1 ( ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { METHOD_1 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; } 
public void METHOD_1 ( TYPE_1 widget ) { VAR_1 . METHOD_1 ( widget ) ; } 
private void METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) . METHOD_3 ( this , VAR_3 ) ; } 
protected boolean METHOD_1 ( ) { boolean result = true ; if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . length ( ) ) > ( METHOD_4 ( ) ) ) { result = false ; addCanDoActionMessage ( VAR_1 ) ; } return result ; } 
public TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > VAR_1 = new TYPE_2 < java.lang.String > ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( super . METHOD_1 ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( result ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 ) ; } { TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_1 ) ; } } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ( ( java.lang.String ) ( model . METHOD_4 ( ) . getEntity ( ) ) ) ) ) ; } 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_3 ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) , 1 , VAR_1 . METHOD_4 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { return TYPE_2 . METHOD_1 ( object . METHOD_2 ( ) , STRING_1 ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( object ) ; METHOD_3 ( object ) ; } 
protected java.util.Map [ ] METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { return ( ( java.util.Map [ ] ) ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( VAR_2 . getId ( ) , VAR_1 ) ) . METHOD_2 ( ) ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( parameters . METHOD_2 ( ) ) ; TYPE_2 . METHOD_3 ( command , VAR_3 ) ; } 
public TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , true , false ) ; } return VAR_1 ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( ( STRING_1 + VAR_2 ) ) ; VAR_1 . METHOD_3 ( VAR_4 , VAR_2 ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_1 ) ) { METHOD_3 ( ) ; } } 
