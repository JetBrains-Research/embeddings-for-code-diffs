public int METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { android.util.Log.w ( TYPE_2 . TAG , STRING_1 ) ; return VAR_2 ; } TYPE_2 service = METHOD_3 ( ) ; if ( service == null ) return VAR_2 ; return service . METHOD_1 ( ) ; }
public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { android.util.Log.w ( TYPE_2 . TAG , STRING_1 ) ; return false ; } TYPE_2 service = METHOD_3 ( ) ; if ( service == null ) return false ; return service . METHOD_1 ( VAR_1 , VAR_2 ) ; }
private synchronized void METHOD_1 ( byte [ ] address , boolean VAR_1 ) { if ( VAR_2 ) android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ; android.os.Message msg = VAR_4 . METHOD_2 ( VAR_5 ) ; msg.obj = address ; msg.arg1 = ( VAR_1 ) ? 1 : 0 ; VAR_4 . METHOD_3 ( msg ) ; }
public void METHOD_1 ( TYPE_1 fd , java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( fd ) ) ; TYPE_4 service = METHOD_2 ( ) ; if ( service == null ) return ; service . METHOD_1 ( fd , VAR_1 , args ) ; }
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device , int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_3 ) ) ) { android.util.Log.w ( TYPE_3 . TAG , STRING_1 ) ; return false ; } TYPE_3 service = METHOD_3 ( ) ; if ( service == null ) return false ; return service . METHOD_4 ( device , VAR_1 , VAR_2 ) ; }
private synchronized void METHOD_1 ( byte [ ] address , int state ) { if ( VAR_1 ) android.util.Log.v ( VAR_2 . TAG , ( ( ( STRING_1 + ( TYPE_1 . toString ( address ) ) ) + STRING_2 ) + state ) ) ; android.os.Message msg = VAR_3 . METHOD_2 ( VAR_4 ) ; msg.obj = address ; msg.arg1 = state ; VAR_3 . METHOD_3 ( msg ) ; }
protected java.lang.Object runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { METHOD_1 ( VAR_2 , VAR_3 ) ; TYPE_1 . VdcQueryReturnValue result = VAR_4 . runQuery ( VAR_1 , VAR_2 ) ; return result . getSucceeded ( ) ? result . getReturnValue ( ) : null ; }
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; for ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 : VAR_1 ) { VAR_3 . METHOD_1 ( VAR_2 . getId ( ) . toString ( ) ) ; } if ( VAR_3 == null ) { return ; } METHOD_2 ( VAR_3 ) ; }
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object returnValue ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( returnValue ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , TYPE_3 . any ( VAR_4 class ) ) ) . thenReturn ( VAR_2 ) ; }
TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( java.lang.String name ) { TYPE_3 < TYPE_1 < TYPE_2 > . VAR_1 > i = VAR_2 . METHOD_2 ( ) ; while ( i . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 > . VAR_1 entry = i . METHOD_4 ( ) ; if ( VAR_3 . equals ( name ) ) return entry ; } android.util.Log.e ( TYPE_1 . TAG , ( STRING_1 + name ) ) ; return null ; }
public java.lang.String METHOD_1 ( int subId , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } final TYPE_2 VAR_3 = METHOD_3 ( subId ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } else { return null ; } }
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( TYPE_1 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_5 ( VAR_1 ) ) ; }
protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . getParameters ( ) . getStoragePoolId ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_3 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_4 ( ) , org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . get ( METHOD_2 ( ) . getParameters ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_8 ( ) , null ) ; }
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . any ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_8 ( ) , VAR_4 ) ; }
public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { synchronized ( VAR_4 ) { long VAR_5 = TYPE_2 . METHOD_2 ( ) ; try { return VAR_6 . METHOD_3 ( METHOD_4 ( this , VAR_1 ) , VAR_2 , VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( VAR_5 ) ; } } }
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }
private void METHOD_1 ( TYPE_1 version , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 d = TYPE_5 . METHOD_2 ( version , VAR_2 , VAR_3 , VAR_1 ) . METHOD_3 ( ) ; TYPE_6 r = new TYPE_6 ( d , VAR_4 ) ; VAR_5 . METHOD_4 ( d . METHOD_5 ( ) , r ) ; }
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int subId ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } TYPE_3 VAR_3 = METHOD_3 ( subId ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( ) ; } return null ; }
protected void METHOD_1 ( TYPE_1 section ) { VAR_1 . METHOD_2 ( ) . setId ( new org.ovirt.engine.core.compat.Guid ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = section . METHOD_3 ( STRING_2 ) ; if ( node != null ) { if ( TYPE_3 . equals ( java.lang.String.valueOf ( VAR_2 ) ) ) { TYPE_3 = java.lang.String.valueOf ( VAR_3 ) ; } VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 . METHOD_5 ( TYPE_3 ) ) ; } }
public void run ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 s = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , s ) ; s . METHOD_4 ( VAR_4 , VAR_5 ) ; s . METHOD_5 ( VAR_5 , VAR_5 ) ; s . METHOD_6 ( VAR_5 , VAR_5 ) ; s . METHOD_7 ( VAR_5 ) ; VAR_1 . METHOD_8 ( ) ; METHOD_9 ( ) ; VAR_1 . METHOD_10 ( ) ; }
public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( ) ; assertEquals ( STRING_1 , ( - 1 ) , VAR_1 . METHOD_2 ( ) ) ; int VAR_2 = INT_1 ; VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , VAR_2 ) ; assertEquals ( STRING_2 , VAR_2 , VAR_1 . METHOD_2 ( ) ) ; }
public void run ( com.android.jack.ir.ast.JMethod method ) throws java.lang.Exception { if ( ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) ) ) { return ; } new TYPE_1 ( ) . METHOD_5 ( method ) ; }
public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = METHOD_2 ( key ) ; int VAR_3 = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; java.lang.String VAR_4 = key . METHOD_4 ( 0 , VAR_3 ) ; VAR_5 = TYPE_4 . METHOD_5 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) { return null ; } return VAR_6 ; }
public void run ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 s = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( s ) ; s . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; }
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; METHOD_1 ( ) . setSelectedItem ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; }
public void METHOD_1 ( TYPE_1 context , android.content.Intent VAR_1 ) { java.lang.String [ ] VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; if ( VAR_2 != null ) { for ( java.lang.String pkg : VAR_2 ) { synchronized ( this ) { if ( METHOD_3 ( pkg , ( - 1 ) , false , false , false ) ) { METHOD_4 ( VAR_4 ) ; return ; } } } } }
public final void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( this ) ; if ( ( VAR_2 ) == ( VAR_3 ) ) { for ( java.lang.Object value : METHOD_3 ( ) ) { if ( value instanceof TYPE_2 ) { if ( ! ( VAR_4 ) ) { ( ( TYPE_2 ) ( value ) ) . METHOD_4 ( this ) ; } VAR_1 . METHOD_5 ( ( ( TYPE_2 ) ( value ) ) ) ; } } VAR_4 = true ; } }
private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . Disk > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 . Disk disk : VAR_1 ) { if ( ( disk . METHOD_2 ( ) ) == ( VAR_4 ) ) { if ( ( ! VAR_2 ) || ( disk . METHOD_3 ( ) ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( disk ) ) ) ; } } } return VAR_3 ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }
private static boolean METHOD_1 ( TYPE_1 node , TYPE_2 in ) throws java.io.IOException { if ( ! ( TYPE_3 . METHOD_2 ( node , in ) ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ! ( TYPE_3 . METHOD_1 ( VAR_1 . get ( i ) , in ) ) ) { return false ; } } return true ; }
private boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( getVm ( ) . METHOD_4 ( ) ) ) . getReturnValue ( ) ) ) ; if ( VAR_1 ) { addCanDoActionMessage ( VAR_3 ) ; } return ! VAR_1 ; }
private static boolean METHOD_1 ( java.lang.String VAR_1 , char [ ] VAR_2 ) { int length = VAR_1 . length ( ) ; if ( ( VAR_2 . length ) != length ) { return false ; } for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) ) ) { return false ; } } return true ; }
private static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; for ( int i = 0 ; i <= ( ( VAR_3 ) - 1 ) ; i ++ ) { VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + ( i + 1 ) ) + STRING_1 ) ) ; } return VAR_2 ; }
private static long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 { long VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 >= VAR_2 ) { throw new TYPE_2 ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_2 ) ) ; } long VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 + VAR_4 ) != VAR_2 ) { throw new TYPE_2 ( ( STRING_3 + STRING_4 ) ) ; } return VAR_3 ; }
public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { TYPE_3 info = METHOD_2 ( x ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_3 ) ; TYPE_4 VAR_4 = METHOD_3 ( VAR_5 ) ; TYPE_4 VAR_6 = METHOD_3 ( VAR_7 ) ; METHOD_4 ( new TYPE_5 ( info , VAR_6 , VAR_4 , VAR_2 ) ) ; } catch ( java.lang.Throwable e ) { throw METHOD_5 ( x , e ) ; } }
public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { assert METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( VAR_3 . type ) ; METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) ; } catch ( java.lang.Throwable e ) { throw METHOD_7 ( x , e ) ; } }
public java.lang.String METHOD_1 ( java.lang.String path ) { if ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) { throw new java.lang.IllegalArgumentException ( STRING_2 ) ; } else if ( ( METHOD_2 ( ) ) == ( VAR_1 ) ) { throw new TYPE_1 ( STRING_3 ) ; } return METHOD_3 ( VAR_2 , path ) ; }
static boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }
static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 . append ( new TYPE_3 . Float ( VAR_7 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false ) ; }
synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int w , int h , int [ ] d , int VAR_5 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , d , VAR_5 ) ; }
static boolean METHOD_1 ( int VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 d = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( d == null ) { return false ; } d . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return true ; }
public final TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 ) throws java.io.IOException { synchronized ( this ) { if ( ! ( VAR_4 ) ) { throw new java.lang.RuntimeException ( STRING_1 ) ; } int VAR_5 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_5 != 0 ) { TYPE_2 res = new TYPE_2 ( VAR_5 ) ; METHOD_3 ( res . METHOD_4 ( ) ) ; return res ; } } throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; }
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } }
private org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 != null ) { for ( TYPE_2 map : VAR_2 ) { if ( METHOD_4 ( map . METHOD_5 ( ) ) ) { return map . METHOD_5 ( ) ; } } } return VAR_4 ; }
static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; }
synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int w , int h , int VAR_5 , int [ ] d , int VAR_6 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , VAR_5 , d , VAR_6 ) ; }
public void METHOD_1 ( int session , int VAR_1 , int c , TYPE_1 VAR_2 , TYPE_2 fd , TYPE_3 callback ) throws java.lang.Exception { byte [ ] VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) ) ; super . METHOD_1 ( session , VAR_1 , c , VAR_2 , fd , callback ) ; }
static int METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return 0 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }
protected void METHOD_1 ( TYPE_1 . VM model , int VAR_1 ) { METHOD_2 ( model . METHOD_3 ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ 2 ] . toString ( ) , model . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( model , VAR_1 ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , false , true ) ; } return VAR_1 ; }
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new org.ovirt.engine.core.common.businessentities.VDS ( ) , true ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_1 . any ( VAR_2 . Guid class ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ) . thenReturn ( false ) ; TYPE_2 . METHOD_5 ( command . validate ( ) ) ; TYPE_2 . METHOD_6 ( command . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_3 . toString ( ) ) ) ; }
public void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_1 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_1 ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( VAR_1 ) . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( ) . when ( VAR_1 ) . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; VAR_6 . METHOD_9 ( VAR_7 class , VAR_8 ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > list = VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.VDS > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , new TYPE_2 ( VAR_1 ) , aQuery ) ; }
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 3 , 3 , false ) ; TYPE_3 in = t . METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_2 = t . METHOD_3 ( ( ( float ) ( FLOAT_1 / ( VAR_3 ) ) ) ) ; args.out = t . METHOD_4 ( in , VAR_2 ) ; }
private void METHOD_1 ( TYPE_1 . ValidationResult VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , null , VAR_2 ) ; org.mockito.Mockito.when ( nic . METHOD_3 ( ) ) . thenReturn ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , validator . METHOD_4 ( ) ) ; }
protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( ( ( VAR_2 . length ) * 2 ) , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } }
private void METHOD_1 ( int VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; VAR_5 . METHOD_4 ( VAR_7 ) ; VAR_5 . METHOD_5 ( ) ; VAR_5 . METHOD_6 ( java.lang.Integer . toString ( VAR_1 ) ) ; VAR_2 . METHOD_7 ( VAR_3 , ( ( VAR_4 ) + 1 ) ) ; VAR_5 . METHOD_8 ( ) ; }
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) , VAR_2 ) ; }
static void METHOD_1 ( TYPE_1 m , TYPE_2 v , java.lang.String value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( v == null ) { m . METHOD_2 ( value ) ; } else { m . METHOD_2 ( v , value ) ; } } catch ( TYPE_3 e ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }
static void METHOD_1 ( TYPE_1 m , TYPE_2 v , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final long VAR_3 = ( v == null ) ? ( ( long ) ( m . METHOD_2 ( ) ) ) : ( ( long ) ( m . METHOD_2 ( v ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 e ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_2 , VAR_1 ) ; }
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( false ) ; java.util.List < java.lang.String > VAR_2 = new TYPE_1 < > ( ) ; boolean result = validator . METHOD_2 ( new org.ovirt.engine.core.common.businessentities.VDS ( ) , VAR_2 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_2 . size ( ) , 1 ) ; TYPE_2 . assertEquals ( VAR_2 . get ( 0 ) , STRING_1 ) ; }
static void METHOD_1 ( TYPE_1 m , TYPE_2 v , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( v == null ) { m . METHOD_2 ( value ) ; } else { m . METHOD_2 ( v , value ) ; } } catch ( TYPE_3 e ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_8 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; }
public java.lang.String toString ( ) { TYPE_1 sb = new TYPE_1 ( ( ( ( size ) * 5 ) + 10 ) ) ; sb.append ( CHAR_1 ) ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( i != 0 ) { sb.append ( STRING_1 ) ; } sb.append ( values [ i ] ) ; } sb.append ( CHAR_2 ) ; return sb . toString ( ) ; }
public java.util.ArrayList < java.lang.Integer > METHOD_1 ( ) { java.util.ArrayList < java.lang.Integer > VAR_1 = new java.util.ArrayList < > ( ) ; for ( int VAR_2 : METHOD_2 ( ) ) { if ( METHOD_3 ( VAR_2 ) . METHOD_4 ( STRING_1 ) ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; }
protected java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > METHOD_1 ( boolean VAR_1 ) { java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > VAR_2 = new java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > ( ) ; if ( VAR_1 ) { return VAR_2 ; } for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { VAR_2 . put ( getEntity ( i ) , new TYPE_1 ( ) ) ; } return VAR_2 ; }
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > list = new java.util.ArrayList < > ( ) ; if ( source != null ) { for ( org.ovirt.engine.core.common.businessentities.VmTemplate template : ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( source ) ) ) { if ( ( template . getStatus ( ) ) == ( VAR_1 ) ) { list . add ( template ) ; } } TYPE_1 . METHOD_2 ( list , new TYPE_2 ( ) ) ; } return list ; }
private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return new TYPE_1 ( ) ; } TYPE_2 VAR_3 = VAR_2 . METHOD_2 ( ) ; assert VAR_3 != null ; return TYPE_3 . METHOD_1 ( VAR_1 , VAR_3 ) . append ( VAR_2 . getName ( ) ) . append ( CHAR_1 ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . network > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . network > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; }
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( ) , TYPE_2 . METHOD_3 ( ) ) ) . thenReturn ( TYPE_3 . METHOD_4 ( org.mockito.Mockito . METHOD_5 ( VAR_2 class ) ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_6 ( ) ) . thenReturn ( VAR_1 ) ; validator = new TYPE_4 ( VAR_3 , cluster , VAR_4 ) ; TYPE_5 . METHOD_7 ( validator . METHOD_8 ( ) , TYPE_6 . METHOD_9 ( VAR_5 ) ) ; }
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( org.ovirt.engine.core.compat.Guid id : VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities . Network > VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( org.ovirt.engine.core.common.businessentities . Network VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }
public TYPE_1 METHOD_1 ( TYPE_1 resource ) { METHOD_2 ( resource , VAR_1 ) ; org.ovirt.engine.core.common.businessentities . network network = METHOD_3 ( resource ) ; if ( network != null ) { resource . METHOD_4 ( ) . METHOD_5 ( network . METHOD_6 ( ) ) ; resource . METHOD_4 ( ) . setId ( null ) ; } return METHOD_7 ( resource , VAR_2 , VAR_3 , VAR_4 ) ; }
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( org.ovirt.engine.core.compat.Guid id : VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities . network > VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( org.ovirt.engine.core.common.businessentities . network VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_2 ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_5 ) . METHOD_3 ( ) ; }
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_3 = METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; }
public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_2 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( VAR_1 , mContext . METHOD_5 ( ) , VAR_2 ) ; } catch ( android.os.RemoteException e ) { throw e . METHOD_6 ( ) ; } }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . Disk ) ; VAR_1 . METHOD_2 ( INT_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , VAR_1 , aQuery ) ; }
public static java.lang.String METHOD_1 ( TYPE_1 . Disk disk ) throws TYPE_2 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , disk . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( disk . METHOD_3 ( ) ) != null ? disk . METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_3 ( VAR_1 ) , aQuery ) ; }
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( mContext . METHOD_5 ( ) , VAR_1 ) ; } catch ( android.os.RemoteException e ) { throw e . METHOD_6 ( ) ; } }
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( getModel ( ) , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { getModel ( ) . METHOD_3 ( ) . setEntity ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; } } ) , id ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_2 ( id ) , aQuery ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId , boolean VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return source ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } } ; org.ovirt.engine.core.common.queries.IdQueryParameters params = new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , params , aQuery ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) , aQuery ) ; }
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_3 ( ) ; } } , model . METHOD_4 ( ) ) ) ; } else { METHOD_3 ( ) ; } }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; }
private void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ) ; } } ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return source ; } return STRING_1 ; } } ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , params , aQuery ) ; }
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { setItems ( ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ) ; METHOD_3 ( ) ; } } ) , getEntity ( ) . getId ( ) ) ; }
private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( returnValue ) ) ) ; } } ) ) ; }
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.Map < TYPE_1 < java.lang.Integer , org.ovirt.engine.core.compat . Version > , java.lang.Boolean > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_1 ( name ) , aQuery ) ; }
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return source ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , aQuery ) ; }
public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( org.ovirt.engine.core.compat . Version VAR_3 : VAR_4 < TYPE_1 < org.ovirt.engine.core.compat . Version > > getValue ( VAR_5 ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 . StoragePool ) , aQuery ) ; }
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; final org.ovirt.engine.core.compat.Guid VAR_4 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_4 ) ; final org.ovirt.engine.core.compat.Guid VAR_5 = VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_5 ) ; }
public TYPE_1 METHOD_1 ( long x ) { if ( VAR_1 ) { throw new TYPE_2 ( ) ; } if ( ! ( VAR_2 ) ) { throw new TYPE_3 ( STRING_1 ) ; } METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x ) ; return this ; }
public static java.lang.Integer METHOD_1 ( java.lang.String VAR_1 , java.lang.Integer VAR_2 ) { java.lang.String v = null ; try { v = TYPE_1 . METHOD_2 ( VAR_1 ) ; } catch ( java.lang.IllegalArgumentException e ) { } catch ( java.lang.NullPointerException e ) { } if ( v != null ) { try { return java.lang.Integer . METHOD_3 ( v ) ; } catch ( TYPE_2 e ) { } } return VAR_2 ; }
protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { TYPE_1 map = METHOD_2 ( obj . getId ( ) ) . addValue ( STRING_1 , obj . getName ( ) ) . addValue ( STRING_2 , obj . METHOD_3 ( ) ) . addValue ( STRING_3 , obj . METHOD_4 ( ) ) ; return map ; }
public boolean METHOD_1 ( TYPE_1 VAR_1 , long time , TYPE_2 VAR_2 ) throws TYPE_3 { if ( ( VAR_3 ) != ( this ) ) { throw new TYPE_4 ( ) ; } final TYPE_5 VAR_4 = this . VAR_4 ; if ( ! ( VAR_4 . METHOD_2 ( time , VAR_2 ) ) ) { return false ; } boolean VAR_5 = false ; try { VAR_5 = VAR_1 . METHOD_3 ( ) ; } finally { if ( ! VAR_5 ) { VAR_4 . METHOD_4 ( ) ; } } return VAR_5 ; }
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; VAR_4 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_6 ( VAR_5 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_7 ( ) . getStatus ( ) ) ; } }
public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_3 ] ; VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; METHOD_5 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }
public static void METHOD_1 ( int id , int flags , final boolean VAR_1 ) { try { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 ) { TYPE_1 . METHOD_3 ( id ) ; } TYPE_1 . METHOD_4 ( id , VAR_3 , flags ) ; } catch ( java.lang.Throwable e ) { throw TYPE_2 . METHOD_5 ( e ) ; } finally { VAR_2 . METHOD_6 ( ) ; } }
public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; java.lang.Integer [ ] VAR_3 = new java.lang.Integer [ VAR_2 ] ; for ( int i = 0 ; i < ( ( VAR_2 ) - 1 ) ; ++ i ) VAR_3 [ i ] = new java.lang.Integer ( i ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }
public TYPE_1 METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( ( getParameters ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) { return METHOD_4 ( ) . METHOD_5 ( ) ; } return METHOD_4 ( ) . METHOD_6 ( ) ; } return METHOD_5 ( ) ; }
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( ( VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) || ( VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) || ( VAR_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) || ( VAR_5 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) { return false ; } return true ; }
static byte [ ] METHOD_1 ( java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; try { TYPE_2 os = new TYPE_2 ( VAR_2 ) ; os . METHOD_2 ( VAR_1 ) ; os . METHOD_3 ( ) ; } catch ( java.lang.Exception e ) { android.util.Log.w ( VAR_3 . TAG , ( ( ( STRING_1 + e ) + STRING_2 ) + VAR_1 ) ) ; } finally { return VAR_2 . METHOD_4 ( ) ; } }
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = dao . get ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; vds = new org.ovirt.engine.core.compat.Guid ( STRING_2 ) ; VAR_4 = new org.ovirt.engine.core.compat.Guid ( STRING_3 ) ; storageDomain = new org.ovirt.engine.core.compat.Guid ( STRING_4 ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_5 ( STRING_5 ) ; VAR_5 . METHOD_6 ( new org.ovirt.engine.core.compat . Version ( STRING_6 ) ) ; }
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_3 ( TYPE_4 . getVm ( ) . METHOD_4 ( ) . getValue ( ) , TYPE_4 . getParameters ( ) . METHOD_5 ( ) ) ) ; METHOD_6 ( VAR_1 . getSucceeded ( ) ) ; }
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : 1 ; } } ; METHOD_4 ( new TYPE_1 ( VAR_1 , METHOD_5 ( ) ) , aQuery ) ; }
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getSelectedItem ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { METHOD_4 ( result . getReturnValue ( ) ) ; } } ; getWindow ( ) . METHOD_5 ( null ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_6 ( VAR_3 , parameters , VAR_2 ) ; }
public static TYPE_1 map ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 vm ) { TYPE_3 VAR_2 = vm . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_3 ( ) ; vm . METHOD_2 ( VAR_2 ) ; } TYPE_4 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( VAR_3 == null ) { VAR_3 = new TYPE_4 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( type . value ( ) ) ; return vm ; }
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( response , VAR_3 , VAR_2 ) ; } }
public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , METHOD_4 ( ) . getStatus ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( METHOD_4 ( ) . getId ( ) , METHOD_4 ( ) . getStatus ( ) ) ; METHOD_2 ( ) . METHOD_8 ( ) ; return null ; }
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , false , STRING_1 , VAR_1 , false ) ) ; METHOD_5 ( false ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_2 response = VAR_3 . add ( METHOD_7 ( ) ) ; assertEquals ( INT_1 , response . getStatus ( ) ) ; METHOD_8 ( ( ( response . getEntity ( ) ) instanceof TYPE_3 ) ) ; METHOD_9 ( ( ( TYPE_3 ) ( response . getEntity ( ) ) ) , 1 ) ; }
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) , null ) ) ; METHOD_5 ( cmd , VAR_3 ) ; TYPE_4 . METHOD_6 ( cmd . validate ( ) ) ; }
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_4 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; org.mockito.Mockito.when ( VAR_6 . get ( TYPE_1 . any ( VAR_7 . Guid class ) ) ) . thenReturn ( VAR_4 ) ; TYPE_2 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) ) ; }
private void METHOD_1 ( boolean VAR_1 ) { org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_1 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_3 ( TYPE_2 . any ( VAR_5 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_4 ( vm ) ) ; org.mockito.Mockito.when ( VAR_6 . METHOD_5 ( vm . getId ( ) ) ) . thenReturn ( vm . METHOD_6 ( ) ) ; }
public void METHOD_1 ( ) { TYPE_1 VAR_1 = command . METHOD_2 ( ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . when ( command ) . METHOD_4 ( TYPE_3 . any ( VAR_2 class ) ) ; TYPE_4 . METHOD_5 ( command ) ; command . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( command . getReturnValue ( ) . getSucceeded ( ) ) ; }
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , null ) ) ; METHOD_4 ( cmd , VAR_3 ) ; TYPE_4 . METHOD_5 ( cmd . validate ( ) ) ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( boolean VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 = null ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_3 = TYPE_1 . METHOD_5 ( VAR_2 ) ; } org.mockito.Mockito.doReturn ( METHOD_6 ( VAR_3 ) ) . when ( VAR_4 ) . METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_5 ) , TYPE_3 . any ( VAR_6 class ) ) ; return VAR_2 ; }
public void METHOD_1 ( ) { METHOD_2 ( ) ; vm . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) , true ) ; METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_7 ( ) ; command . METHOD_8 ( ) ; TYPE_2 . METHOD_9 ( command ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 expected = METHOD_2 ( ) ; TYPE_2 p = new TYPE_3 ( null , expected , ( - 1 ) , null , null , null , VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; p . METHOD_3 ( VAR_4 ) ; assertEquals ( expected , VAR_4 ) ; }
public boolean METHOD_1 ( TYPE_1 node ) { java.lang.String VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 . equals ( STRING_1 ) ) { TYPE_2 location = mContext . METHOD_3 ( node ) ; mContext . METHOD_4 ( VAR_2 , node , location , ( STRING_2 + STRING_3 ) , null ) ; } return false ; }
private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , byte [ ] VAR_3 ) throws java.lang.IllegalArgumentException { TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_5 , 0 , 0 , true ) ; int VAR_6 = METHOD_3 ( ) ; TYPE_2 VAR_7 = TYPE_3 . METHOD_4 ( VAR_8 class ) ; VAR_9 . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; org.mockito.Mockito.verify ( VAR_10 ) . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; }
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 node ) { if ( ( ( node . METHOD_2 ( ) . size ( ) ) == 1 ) && ( ! ( node . METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) . equals ( STRING_1 ) ) ) ) { context . METHOD_4 ( VAR_2 , node , context . METHOD_5 ( node ) , ( STRING_2 + STRING_3 ) , null ) ; } }
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { this . METHOD_1 ( ( returnValue == null ? new java.util.ArrayList < TYPE_1 > ( ) : ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ) ; }
protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_2 . any ( VAR_4 class ) ) ; }
private static void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { if ( ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) ) ) { context . METHOD_4 ( VAR_1 , element , context . METHOD_5 ( element ) , STRING_1 , null ) ; } }
private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 , STRING_3 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } protected void METHOD_3 ( ) { } } ; VAR_2 . METHOD_4 ( VAR_6 , new TYPE_2 ( STRING_4 ) ) ; return VAR_2 ; }
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_3 ) + STRING_5 ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = TYPE_3 . METHOD_3 ( VAR_2 , true ) ; assertEquals ( ( STRING_1 + ( STRING_2 + STRING_6 ) ) , VAR_1 ) ; }
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int index = METHOD_2 ( VAR_1 , true ) ; if ( index >= 0 ) { TYPE_1 r = ( ( TYPE_1 ) ( VAR_2 . get ( index ) ) ) ; if ( r != null ) { return VAR_3 ; } } return null ; }
public void METHOD_1 ( ) { cmd . getParameters ( ) . getVm ( ) . METHOD_2 ( cluster . getId ( ) ) ; cmd . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , TYPE_1 . any ( VAR_2 . Version class ) ) ) . thenReturn ( new java.util.ArrayList < > ( TYPE_2 . METHOD_6 ( STRING_1 ) ) ) ; TYPE_3 . METHOD_7 ( STRING_2 , cmd . METHOD_8 ( ) ) ; }
private static void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 location = VAR_2 . METHOD_2 ( ) ; java.lang.Object VAR_4 = VAR_2 . METHOD_3 ( ) ; if ( VAR_4 instanceof TYPE_5 ) { if ( context . METHOD_4 ( ) . METHOD_5 ( null , VAR_1 , ( ( TYPE_5 ) ( VAR_4 ) ) ) ) { return ; } } context . METHOD_1 ( VAR_1 , location , VAR_3 , null ) ; }
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 , org.mockito.Mockito . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ; TYPE_2 . assertEquals ( VAR_3 , cmd . METHOD_7 ( ) ) ; }
private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { assert TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { new TYPE_4 ( VAR_2 , VAR_5 , VAR_1 , VAR_3 , VAR_6 ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; }
void METHOD_1 ( TYPE_1 model ) { VAR_1 . METHOD_2 ( ) ; for ( final TYPE_2 VAR_2 : ( ( java.util.ArrayList < TYPE_2 > ) ( model . METHOD_3 ( ) ) ) ) { TYPE_3 VAR_3 = new TYPE_3 ( constants ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; } }
public void METHOD_1 ( ) { s = new TYPE_1 ( new TYPE_2 ( ) ) ; assertNotNull ( s ) ; s . METHOD_2 ( ) ; try { s = new TYPE_1 ( ( ( TYPE_3 ) ( null ) ) ) ; fail ( STRING_1 ) ; } catch ( java.lang.NullPointerException e ) { } }
private void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > config ) { TYPE_3 rr = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( rr != null ) { java.util.ArrayList < TYPE_4 > ret = null ; if ( ( VAR_1 . error ) == ( VAR_3 ) ) { ret = TYPE_5 . METHOD_3 ( config , VAR_2 ) ; TYPE_6 . METHOD_4 ( VAR_4 , ret ) ; } VAR_2 . METHOD_5 ( rr , VAR_1 , ret ) ; } }
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 rr = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( rr != null ) { TYPE_4 ret = null ; if ( ( VAR_1 . error ) == ( VAR_4 ) ) { ret = TYPE_5 . METHOD_3 ( VAR_2 , VAR_3 ) ; TYPE_6 . METHOD_4 ( VAR_5 , ret ) ; } VAR_3 . METHOD_5 ( rr , VAR_1 , ret ) ; } }
public TYPE_1 METHOD_1 ( java.lang.String path , int action ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( action ) ) ) ) { throw new java.lang.IllegalArgumentException ( STRING_2 ) ; } else if ( ( VAR_1 ) == ( METHOD_3 ( ) ) ) { throw new TYPE_3 ( STRING_3 ) ; } return METHOD_4 ( VAR_2 , path , action ) ; }
public void METHOD_1 ( TYPE_1 provider ) { provider . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) ) ; provider . METHOD_2 ( STRING_3 , ( ( VAR_1 ) + STRING_4 ) ) ; provider . METHOD_2 ( STRING_5 , ( ( VAR_1 ) + STRING_6 ) ) ; provider . METHOD_2 ( STRING_7 , STRING_8 ) ; provider . METHOD_2 ( STRING_9 , STRING_8 ) ; provider . METHOD_2 ( STRING_10 , STRING_8 ) ; }
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_1 < ? > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( true ) ; } } if ( ( VAR_4 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_5 : VAR_4 ) { VAR_5 . METHOD_4 ( ) ; } } VAR_1 . METHOD_2 ( STRING_2 ) ; TYPE_3 . METHOD_5 ( 0 ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; try { resource . METHOD_5 ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . getStatus ( ) ) ; } }
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_1 VAR_4 = METHOD_4 ( VAR_2 ) ; TYPE_2 . assertNotNull ( VAR_4 ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_5 ( ) ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) ; }
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 dao = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = dao . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; if ( VAR_2 != null ) { dao . METHOD_5 ( VAR_2 ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; dao . METHOD_7 ( VAR_2 ) ; } return VAR_2 ; }
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_2 model = getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_6 ( model ) ; TYPE_1 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final org.ovirt.engine.core.common.businessentities.VDS vds = null ; final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( vds ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_4 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_4 ) ; }
public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , getEntity ( 1 ) ) ; VAR_4 . METHOD_5 ( ) ; TYPE_1 . Disk disk = resource . get ( ) ; TYPE_2 . METHOD_6 ( disk , 1 ) ; METHOD_7 ( disk ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( getVm ( ) ) ; VAR_2 . METHOD_6 ( ) ; TYPE_2 VAR_3 = resource . get ( ) ; METHOD_7 ( VAR_3 ) ; }
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) ; if ( vds == null ) { vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; } METHOD_3 ( vds , null , false , null ) ; getName ( ) . setIsChangable ( false ) ; METHOD_4 ( ) . setIsChangable ( false ) ; }
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_3 ( TYPE_1 . any ( ) , TYPE_1 . any ( ) ) ; VAR_1 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , command . validate ( ) ) ; }
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 ) ; }
public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 . Main class . METHOD_2 ( ) . METHOD_3 ( true ) ; TYPE_3 options = new TYPE_3 ( ) ; TYPE_4 VAR_2 = new TYPE_4 ( ) ; options . METHOD_4 ( VAR_2 ) ; options . METHOD_5 ( VAR_2 ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( options . METHOD_8 ( ) ) ; }
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , new java.lang.Object [ ] { TYPE_2 . toString ( ) } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; }
public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == ( getModel ( ) . METHOD_2 ( ) ) ) { return VAR_3 . get ( ) ; } else if ( VAR_1 == ( getModel ( ) . METHOD_3 ( ) ) ) { return VAR_4 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } }
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) ; METHOD_3 ( false ) ; cmd . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , cmd , VAR_2 ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_2 . METHOD_9 ( VAR_4 ) , TYPE_2 . any ( VAR_5 class ) ) ; org.mockito.Mockito . METHOD_6 ( cmd , org.mockito.Mockito . METHOD_7 ( 0 ) ) . METHOD_10 ( ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( ) ; } catch ( java.lang.NullPointerException expected ) { } int c = TYPE_1 . METHOD_3 ( ) ; int s = TYPE_1 . METHOD_4 ( c ) ; METHOD_5 ( TYPE_1 . METHOD_2 ( s ) ) ; TYPE_1 . METHOD_6 ( s ) ; TYPE_1 . METHOD_7 ( c ) ; TYPE_2 . METHOD_8 ( ) ; }
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.DiskImage disk = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( VAR_2 ) ; disk . METHOD_4 ( true ) ; disk . METHOD_5 ( vmId ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.when ( VAR_3 . get ( VAR_1 ) ) . thenReturn ( disk ) ; METHOD_7 ( false ) ; }
public boolean METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) ) ) { throw new java.lang.IllegalArgumentException ( STRING_2 ) ; } else if ( ( VAR_2 ) == ( METHOD_2 ( ) ) ) { throw new TYPE_1 ( STRING_3 ) ; } return METHOD_3 ( VAR_3 , path , VAR_1 ) ; }
protected TYPE_1 METHOD_1 ( int index ) { for ( TYPE_1 res = this ; res != null ; res = res . METHOD_2 ( ) ) { TYPE_1 obj = res . METHOD_3 ( index , null , this ) ; if ( obj != null ) { ( ( TYPE_2 ) ( obj ) ) . METHOD_4 ( METHOD_5 ( ) ) ; return obj ; } } return null ; }
private static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } if ( ( VAR_5 ) != null ) { VAR_2 . METHOD_2 ( STRING_4 ) ; VAR_2 . METHOD_2 ( VAR_5 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } return VAR_2 ; }
public void METHOD_1 ( ) { TYPE_1 . DiskImage diskImage = new TYPE_1 . DiskImage ( ) ; diskImage . METHOD_2 ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_4 ( VAR_2 ) ; vm . METHOD_5 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( false ) ) . when ( VAR_4 ) . METHOD_7 ( VAR_3 ) ; TYPE_3 . assertEquals ( false , VAR_5 . METHOD_8 ( vm , diskImage ) . METHOD_9 ( ) ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Network model = new TYPE_1 . Network ( ) ; model . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } }
public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ( METHOD_2 ( ) ) == false ) { android.util.Log.e ( android.bluetooth.BluetoothDevice . TAG , STRING_1 ) ; throw new java.io.IOException ( ) ; } return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , this , VAR_1 , null ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 model = TYPE_2 . getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_6 ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 server = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , server . METHOD_3 ( ) ) ; final int VAR_2 = 100 ; VAR_1 . METHOD_4 ( VAR_2 ) ; int VAR_3 = VAR_1 . METHOD_5 ( ) ; assertTrue ( STRING_1 , ( ( TYPE_4 . METHOD_6 ( ( VAR_2 - VAR_3 ) ) ) <= 10 ) ) ; VAR_1 . METHOD_7 ( ) ; server . METHOD_7 ( ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 server = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , server . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( INT_1 ) ; assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_5 ( ) ) >= INT_1 ) ) ; VAR_1 . METHOD_6 ( ) ; server . METHOD_6 ( ) ; }
public void run ( com.android.jack.ir.ast.JMethod method ) throws java.lang.Exception { com.android.jack.ir.ast.JDefinedClassOrInterface VAR_1 = method . METHOD_1 ( ) ; if ( ( ( ( VAR_1 . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_2 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) ) ) { return ; } TYPE_1 VAR_3 = new TYPE_1 ( method ) ; VAR_3 . METHOD_5 ( method ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } }
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 > ( ) , null ) ; VAR_4 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; VAR_4 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( getModel ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } }
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( METHOD_2 ( ) . getEntity ( ) ) == null ) { METHOD_3 ( ) . setIsChangable ( false ) ; } else { METHOD_3 ( ) . setIsChangable ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ) ; } }
public void METHOD_1 ( final float value ) { int VAR_1 = TYPE_1 . METHOD_2 ( value ) ; if ( ( ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 ) ) || ( VAR_1 == INT_3 ) ) { VAR_2 . METHOD_3 ( ( ( VAR_3 ) + ( ( int ) ( value ) ) ) ) ; } else { VAR_2 . METHOD_4 ( new TYPE_2 . Float ( value ) ) ; } }
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) ; VAR_2 . METHOD_3 ( VAR_1 , VAR_3 , VAR_4 ) ; org.mockito.Mockito . METHOD_4 ( VAR_4 ) . METHOD_3 ( VAR_1 , VAR_3 ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_5 , VAR_6 ) ; org.mockito.Mockito . METHOD_4 ( VAR_3 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( ( ( TYPE_3 ) ( org.mockito.Mockito . any ( ) ) ) ) ; }
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.Object value ) { TYPE_1 . ValidationResult result = super . METHOD_1 ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ( ( java.lang.String ) ( value ) ) ) ) ; } return result ; }
public boolean METHOD_1 ( ) { TYPE_1 tempVar = new TYPE_1 ( ) ; tempVar . METHOD_2 ( 1 ) ; tempVar . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) , tempVar } ) ; return METHOD_4 ( ) . METHOD_6 ( ) ; }
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_1 ) ; }
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( returnValue != null ) { org.ovirt.engine.core.common.businessentities.VDS VAR_2 = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; VAR_3 = VAR_2 ; } else { VAR_4 = true ; } VAR_1 . METHOD_2 ( ) ; }
protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( METHOD_3 ( ) ) ; return ( ( validate ( VAR_1 . METHOD_4 ( ) ) ) && ( ( METHOD_5 ( ) ) || ( validate ( VAR_2 . METHOD_6 ( ) ) ) ) ) && ( validate ( METHOD_7 ( METHOD_2 ( ) , METHOD_3 ( ) ) ) ) ; }
public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; if ( ( ( java.lang.Boolean ) ( METHOD_6 ( ) . getEntity ( ) ) ) ) { METHOD_4 ( ) . METHOD_7 ( new TYPE_2 [ ] { VAR_1 , new TYPE_3 ( ) } ) ; } return METHOD_4 ( ) . METHOD_8 ( ) ; }
protected boolean METHOD_1 ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) , TYPE_1 . getParameters ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; }
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.Object value ) { int VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( ( ( VAR_3 . length ( ) ) + VAR_1 ) + 1 ) <= ( METHOD_3 ( ) ) ; TYPE_1 . ValidationResult VAR_4 = new TYPE_1 . ValidationResult ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; if ( ! VAR_2 ) { VAR_4 . METHOD_5 ( TYPE_2 . METHOD_6 ( METHOD_7 ( ) ) ) ; } return VAR_4 ; }
public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . setIsChangable ( false ) ; if ( ! VAR_4 ) { VAR_3 . METHOD_3 ( ) . setIsChangable ( false ) ; } } }
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; model . METHOD_2 ( ( result != null ? ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ) ) ; }
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } else { VAR_1 . METHOD_6 ( ) ; } }
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; VAR_1 . hosts = hosts ; VAR_1 . METHOD_2 ( ) ; }
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( returnValue ) ) ; TYPE_1 pool = VAR_1 . get ( 0 ) ; if ( pool != null ) { TYPE_2 . METHOD_2 ( ( ( org.ovirt.engine.ui.frontend.AsyncQuery ) ( model ) ) , pool . getId ( ) ) ; } }
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > list = new java.util.ArrayList < TYPE_2 > ( ) ; for ( TYPE_2 a : ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ) { if ( ( a . METHOD_2 ( ) ) == ( VAR_1 ) ) { list . add ( a ) ; } } model . METHOD_3 ( model , list ) ; }
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( cluster ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; dao . METHOD_7 ( VAR_4 ) ; org.ovirt.engine.core.common.businessentities . network result = dao . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_4 , result ) ; }
public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities . network > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( org.ovirt.engine.core.common.businessentities . network VAR_3 : VAR_1 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( VAR_3 . getName ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; }
byte [ ] METHOD_1 ( java.lang.Object VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 . METHOD_5 ( ) ; } catch ( java.lang.Throwable t ) { METHOD_6 ( t ) ; return new byte [ 0 ] ; } }
public void METHOD_1 ( ) throws android.os.RemoteException { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } } ; TYPE_2 . when ( VAR_4 . METHOD_4 ( org.mockito.Matchers . METHOD_5 ( VAR_5 class ) ) ) . thenReturn ( VAR_1 ) ; assertEquals ( 2 , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }
public static int METHOD_1 ( int a , int b , int c ) { int [ ] values = new int [ ] { a , b , c } ; VAR_1 . println ( ( ( STRING_1 + ( TYPE_1 . toString ( values ) ) ) + STRING_2 ) ) ; return a > b ? a : b ; }
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , true ) ; VAR_1 . METHOD_2 ( null , new TYPE_2 ( ) ) ; org.junit.Assert.assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( null , new TYPE_3 ( ) , new TYPE_2 ( ) ) ; org.junit.Assert.assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; }
private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( server . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; org.mockito.Mockito.verify ( VAR_5 ) . METHOD_4 ( org.mockito.Matchers.eq ( VAR_1 ) , org.mockito.Matchers . METHOD_5 ( int . class ) ) ; assertEquals ( VAR_2 , true ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { server . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) ) ; server . METHOD_4 ( ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( server . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) ) ; TYPE_3 in = ( ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) ) ; assertEquals ( STRING_1 , METHOD_8 ( in , VAR_2 ) ) ; }
private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , java.lang.String VAR_3 , byte [ ] VAR_4 ) throws java.lang.Exception { TYPE_1 VAR_5 = new TYPE_2 ( VAR_6 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) . build ( ) ; TYPE_3 VAR_7 = TYPE_3 . METHOD_4 ( VAR_5 , VAR_8 ) ; assertEquals ( VAR_1 , VAR_9 ) ; assertEquals ( VAR_3 , VAR_10 ) ; }
public void METHOD_1 ( long session , long s , long c , TYPE_1 VAR_1 , TYPE_2 fd , TYPE_3 callback ) throws java.lang.Exception { assertEquals ( VAR_2 , TYPE_4 . METHOD_2 ( s ) ) ; super . METHOD_1 ( session , s , c , VAR_1 , fd , callback ) ; }
private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; params . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; cmd = org.mockito.Mockito . METHOD_5 ( new TYPE_2 < TYPE_1 > ( params ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_8 ( ) ; }
public TYPE_1 METHOD_1 ( ) { TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_1 = new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( ) { public TYPE_3 METHOD_2 ( org.ovirt.engine.core.compat.Guid VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return inject ( new TYPE_6 < TYPE_7 , TYPE_3 > ( VAR_5 , VAR_2 , VAR_4 ) ) ; }
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( VAR_2 , VAR_3 . IdQueryParameters class ) , VAR_4 , new TYPE_3 < TYPE_1 , TYPE_1 > ( ) { public TYPE_4 . VdcActionParametersBase getParameters ( TYPE_1 VAR_5 , TYPE_1 entity ) { return new TYPE_5 ( METHOD_3 ( VAR_6 , VAR_7 class ) . map ( VAR_5 , entity ) ) ; } } ) ; }
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , null ) ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( cmd . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; }
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( cmd . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }
public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 s = VAR_2 . get ( VAR_1 ) ; if ( s == null ) { throw new java.lang.IllegalArgumentException ( STRING_2 ) ; } return s . METHOD_3 ( ) ; }
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 value = VAR_1 . METHOD_3 ( ) ; TYPE_1 VAR_2 = VAR_3 . get ( value ) ; if ( VAR_2 != null ) { return VAR_2 ; } VAR_3 . METHOD_4 ( value , VAR_1 ) ; return VAR_1 ; }
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( 3 ) . METHOD_2 ( 1 , 2 ) . METHOD_2 ( 2 , 3 ) . METHOD_2 ( 3 , 1 ) . METHOD_3 ( 1 ) . METHOD_4 ( ) ; assertEquals ( 6 , VAR_1 . METHOD_5 ( 1 ) . METHOD_6 ( ) ) ; assertEquals ( 6 , VAR_1 . METHOD_5 ( 2 ) . METHOD_6 ( ) ) ; assertEquals ( 6 , VAR_1 . METHOD_5 ( 3 ) . METHOD_6 ( ) ) ; }
static void METHOD_1 ( TYPE_1 m , TYPE_2 v , double value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final double VAR_3 = ( v == null ) ? ( ( double ) ( m . METHOD_2 ( ) ) ) : ( ( double ) ( m . METHOD_2 ( v ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 e ) { VAR_2 = true ; } TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 ) ; }
void METHOD_1 ( ) { if ( VAR_1 ) android.util.Log.v ( VAR_2 . TAG , ( ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) ) ; VAR_5 . METHOD_2 ( ) ; }
public void run ( ) { TYPE_1 is = new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( is ) ; try { while ( true ) { java.lang.String line = VAR_2 . METHOD_2 ( ) ; if ( line != null ) { VAR_3 . METHOD_3 ( STRING_1 , VAR_4 , line ) ; } else { break ; } } } catch ( java.io.IOException e ) { } }
boolean METHOD_1 ( ) { if ( VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) android.util.Log.v ( VAR_4 . TAG , ( STRING_1 + ( VAR_5 ) ) ) ; VAR_6 = true ; VAR_1 = false ; return true ; } return false ; }
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String version , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , version ) ; java.lang.Object value = VAR_4 < java.lang.Object > METHOD_2 ( TYPE_3 . valueOf ( VAR_1 . toString ( ) ) , version ) ; VAR_2 . put ( VAR_3 , value ) ; }
protected boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . info ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( VAR_1 , 0 , VAR_6 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( STRING_2 ) ; VAR_4 . info ( STRING_3 ) ; return true ; }
private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , false ) ; int VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 >= 0 ) { if ( VAR_4 ) android.util.Log.v ( TYPE_2 . TAG , ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_1 ) ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; } }
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_4 ( command . getName ( ) , STRING_1 ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_4 ( command . getName ( ) , STRING_2 ) ) { METHOD_6 ( ) ; } }
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . VM ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . getReturnValue ( ) ) ) ) ; }
public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . put ( VAR_2 . METHOD_5 ( ) , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . add ( VAR_2 ) ; return null ; }
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . getParameters ( ) . getStoragePoolId ( ) , TYPE_1 . METHOD_6 ( ) , TYPE_1 . getParameters ( ) . METHOD_7 ( ) ) ) ; }
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 . Integer class ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_2 ) . METHOD_4 ( TYPE_3 . any ( ) ) ; VAR_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; org.mockito.Mockito . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_1 ) ; org.mockito.Mockito . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_8 , VAR_4 ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 log = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; org.mockito.Mockito.when ( log . METHOD_3 ( ) ) . thenReturn ( true ) ; TYPE_2 . METHOD_4 ( log , id , new TYPE_3 ( ) , new java.lang.Object ( ) ) ; org.mockito.Mockito . METHOD_5 ( log ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 entity ) { return entity . METHOD_4 ( ) ; } } , VAR_2 . METHOD_5 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 entity ) { return entity . METHOD_6 ( ) ; } } , VAR_2 . METHOD_7 ( ) ) ; }
public boolean METHOD_1 ( ) { try { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( host . getId ( ) ) ) ; TYPE_2 returnValue = VAR_1 . get ( VAR_3 < java.lang.Integer > METHOD_4 ( VAR_4 ) , VAR_5 ) ; if ( returnValue . getSucceeded ( ) ) { return true ; } } catch ( java.lang.Exception e ) { } return false ; }
public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( METHOD_3 ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . getReturnValue ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; }
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_7 ( VAR_1 , null ) ; TYPE_2 . METHOD_8 ( command , VAR_4 ) ; }
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getVm ( ) . METHOD_4 ( ) , getVm ( ) . METHOD_5 ( ) ) ; METHOD_6 ( getVm ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; }
private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { addCanDoActionMessage ( VAR_1 ) ; TYPE_1 . getReturnValue ( ) . METHOD_3 ( ) . add ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 < java.lang.Integer > METHOD_5 ( VAR_3 ) ) ) ; return false ; } return true ; }
private void METHOD_1 ( ) { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . METHOD_5 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_6 ( VAR_3 ) ) . thenReturn ( VAR_2 ) ; }
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : VAR_3 . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . getParameters ( ) . METHOD_5 ( ) ) ) ; return ; case VAR_4 : METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( false ) ; return ; } super . METHOD_1 ( ) ; }
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . getVm ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; }
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( command == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_6 ( command . getName ( ) , STRING_1 ) ) { METHOD_7 ( ) ; } else if ( TYPE_1 . METHOD_6 ( command . getName ( ) , STRING_2 ) ) { METHOD_8 ( ) ; } }
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } VAR_1 . put ( vds . METHOD_2 ( ) . toString ( ) , TYPE_1 . name ( ) ) ; }
protected boolean METHOD_1 ( ) { boolean returnValue = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { addCanDoActionMessage ( VAR_1 ) ; returnValue = false ; } else if ( ( METHOD_3 ( ) ) && ( ( TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ) != ( VAR_2 ) ) ) { addCanDoActionMessage ( VAR_3 ) ; returnValue = false ; } return returnValue ; }
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; if ( vds != null ) { vds . METHOD_5 ( TYPE_2 . METHOD_6 ( vds . METHOD_7 ( ) , vds . METHOD_8 ( ) ) ) ; } TYPE_1 . METHOD_9 ( ) . METHOD_10 ( vds ) ; }
protected TYPE_1 . Network METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid id , java.lang.String name , java.util.List < TYPE_1 . Network > VAR_2 ) { for ( TYPE_1 . Network network : VAR_2 ) { if ( ( ( id != null ) && ( id . equals ( network . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( network . METHOD_2 ( ) ) ) ) ) { return network ; } } return null ; }
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 log = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; org.mockito.Mockito.when ( log . METHOD_3 ( ) ) . thenReturn ( true ) ; TYPE_2 . METHOD_4 ( log , id , new TYPE_3 ( ) ) ; org.mockito.Mockito . METHOD_5 ( log ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }
public int METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int version , int VAR_5 , int VAR_6 ) { if ( ( VAR_7 ) == false ) { throw new java.lang.RuntimeException ( ( ( VAR_8 . TAG ) + STRING_1 ) ) ; } return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , version , VAR_5 , VAR_6 ) ; }
public final TYPE_1 METHOD_1 ( float x ) { if ( VAR_1 ) { throw new TYPE_2 ( ) ; } if ( ! ( VAR_2 ) ) { throw new TYPE_3 ( STRING_1 ) ; } METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x ) ; return this ; }