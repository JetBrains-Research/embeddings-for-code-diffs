public int METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { android.util.Log.w ( TYPE_2 . TAG , STRING_1 ) ; return VAR_2 ; } TYPE_2 service = METHOD_3 ( ) ; if ( service == null ) { return VAR_2 ; } return service . METHOD_1 ( ) ; }
public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { android.util.Log.w ( TYPE_2 . TAG , STRING_1 ) ; return false ; } TYPE_2 service = METHOD_3 ( ) ; if ( service == null ) { return false ; } return service . METHOD_1 ( VAR_1 , VAR_2 ) ; }
private synchronized void METHOD_1 ( byte [ ] address , boolean VAR_1 ) { if ( VAR_2 ) { android.util.Log.d ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ; } android.os.Message msg = VAR_4 . METHOD_2 ( VAR_5 ) ; msg.obj = address ; msg.arg1 = ( VAR_1 ) ? 1 : 0 ; VAR_4 . METHOD_3 ( msg ) ; }
public void METHOD_1 ( TYPE_1 fd , java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( fd ) ) ; TYPE_4 service = METHOD_2 ( ) ; if ( service == null ) { return ; } service . METHOD_1 ( fd , VAR_1 , args ) ; }
public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device , int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_3 ) ) ) { android.util.Log.w ( TYPE_3 . TAG , STRING_1 ) ; return false ; } TYPE_3 service = METHOD_3 ( ) ; if ( service == null ) { return false ; } return service . METHOD_4 ( device , VAR_1 , VAR_2 ) ; }
private synchronized void METHOD_1 ( byte [ ] address , int state ) { if ( VAR_1 ) { android.util.Log.d ( VAR_2 . TAG , ( ( ( STRING_1 + ( TYPE_1 . toString ( address ) ) ) + STRING_2 ) + state ) ) ; } android.os.Message msg = VAR_3 . METHOD_2 ( VAR_4 ) ; msg.obj = address ; msg.arg1 = state ; VAR_3 . METHOD_3 ( msg ) ; }
protected java.lang.Object runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { METHOD_1 ( VAR_2 , VAR_3 ) ; TYPE_1 . VdcQueryReturnValue result = VAR_4 . runQuery ( VAR_1 , VAR_2 ) ; return ( result != null ) && ( result . getSucceeded ( ) ) ? result . getReturnValue ( ) : null ; }
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 : VAR_1 ) { VAR_3 . METHOD_1 ( VAR_2 . getId ( ) . toString ( ) ) ; } if ( VAR_3 == null ) { return ; } METHOD_2 ( VAR_3 ) ; }
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object returnValue ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( returnValue ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , TYPE_3 . any ( ) ) ) . thenReturn ( VAR_2 ) ; }
TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( java.lang.String name ) { synchronized ( VAR_2 ) { TYPE_3 < TYPE_1 < TYPE_2 > . VAR_1 > i = VAR_2 . METHOD_2 ( ) ; while ( i . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 > . VAR_1 entry = i . METHOD_4 ( ) ; if ( VAR_3 . equals ( name ) ) return entry ; } } android.util.Log.e ( TYPE_1 . TAG , ( STRING_1 + name ) ) ; return null ; }
public java.lang.String METHOD_1 ( int subId , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , subId , VAR_1 , STRING_1 ) ) ) { return null ; } final TYPE_2 VAR_3 = METHOD_3 ( subId ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } else { return null ; } }
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_2 . METHOD_5 ( VAR_1 ) ) ; }
protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . getParameters ( ) . getStoragePoolId ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_3 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_4 ( ) , org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . get ( METHOD_2 ( ) . getParameters ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_8 ( ) ) ; }
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . any ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_8 ( ) , VAR_4 ) ; }
public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { synchronized ( VAR_4 ) { long VAR_5 = TYPE_2 . METHOD_2 ( ) ; try { return VAR_6 . METHOD_3 ( METHOD_4 ( this , VAR_1 , true ) , VAR_2 , VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( VAR_5 ) ; } } }
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }
private void METHOD_1 ( TYPE_1 version , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 d = TYPE_5 . METHOD_2 ( version , VAR_2 , VAR_3 , VAR_1 ) . METHOD_3 ( ) ; TYPE_6 r = new TYPE_6 ( d , VAR_4 , 0 ) ; VAR_5 . METHOD_4 ( d . METHOD_5 ( ) , r ) ; }
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int subId ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 , subId , VAR_1 , STRING_1 ) ) ) { return null ; } TYPE_3 VAR_3 = METHOD_3 ( subId ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( ) ; } return null ; }
protected void METHOD_1 ( TYPE_1 section ) { VAR_1 . METHOD_2 ( ) . setId ( new org.ovirt.engine.core.compat.Guid ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = section . METHOD_3 ( STRING_2 ) ; if ( node != null ) { VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 . METHOD_5 ( TYPE_3 ) ) ; } }
public void run ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 s = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , s ) ; s . METHOD_4 ( VAR_4 , VAR_5 ) ; s . METHOD_5 ( VAR_5 , VAR_5 ) ; s . METHOD_6 ( VAR_5 , VAR_5 ) ; s . METHOD_7 ( VAR_5 ) ; VAR_1 . METHOD_8 ( ) ; METHOD_9 ( ) ; s . METHOD_10 ( ) ; VAR_1 . METHOD_10 ( ) ; }
public void METHOD_1 ( ) throws java.io.IOException { try ( TYPE_1 VAR_1 = new TYPE_1 ( ) ) { assertEquals ( STRING_1 , ( - 1 ) , VAR_1 . METHOD_2 ( ) ) ; int VAR_2 = INT_1 ; VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , VAR_2 ) ; assertEquals ( STRING_2 , VAR_2 , VAR_1 . METHOD_2 ( ) ) ; } }
public void run ( com.android.jack.ir.ast.JMethod method ) throws java.lang.Exception { if ( ( ( method . METHOD_3 ( ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) ) ) { return ; } new TYPE_1 ( ) . METHOD_5 ( method ) ; }
public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = METHOD_2 ( key ) ; int VAR_3 = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; java.lang.String VAR_4 = key . METHOD_4 ( 0 , VAR_3 ) ; VAR_5 = TYPE_4 . METHOD_5 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) { return null ; } return VAR_6 ; }
public void run ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 s = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( s ) ; s . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; }
public void onSuccess ( java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; METHOD_1 ( ) . setSelectedItem ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; }
public void METHOD_1 ( TYPE_1 context , android.content.Intent VAR_1 ) { java.lang.String [ ] VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; if ( VAR_2 != null ) { for ( java.lang.String pkg : VAR_2 ) { if ( METHOD_3 ( pkg , ( - 1 ) , false , false , false ) ) { METHOD_4 ( VAR_4 ) ; return ; } } } }
public final void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( this ) ; if ( ( VAR_2 ) == ( VAR_3 ) ) { for ( java.lang.Object value : METHOD_3 ( ) ) { if ( value instanceof TYPE_2 ) { if ( ! ( VAR_4 ) ) { ( ( TYPE_2 ) ( value ) ) . METHOD_4 ( this ) ; } VAR_1 . METHOD_5 ( this , ( ( TYPE_2 ) ( value ) ) ) ; } } VAR_4 = true ; } }
public static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . Disk > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 . Disk disk : VAR_1 ) { if ( ( disk . METHOD_2 ( ) ) == ( VAR_4 ) ) { if ( ( ! VAR_2 ) || ( disk . METHOD_3 ( ) ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( disk ) ) ) ; } } } return VAR_3 ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }
public static boolean METHOD_1 ( TYPE_1 node , TYPE_2 in ) throws java.io.IOException { if ( ! ( TYPE_3 . METHOD_2 ( node , in ) ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ! ( TYPE_3 . METHOD_1 ( VAR_1 . get ( i ) , in ) ) ) { return false ; } } return true ; }
protected boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( getVm ( ) . METHOD_4 ( ) ) ) . getReturnValue ( ) ) ) ; if ( VAR_1 ) { addCanDoActionMessage ( VAR_3 ) ; } return ! VAR_1 ; }
public static boolean METHOD_1 ( java.lang.String VAR_1 , char [ ] VAR_2 ) { int length = VAR_1 . length ( ) ; if ( ( VAR_2 . length ) != length ) { return false ; } for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) ) ) { return false ; } } return true ; }
private static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; for ( int i = 0 ; i < ( VAR_3 ) ; i ++ ) { VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + ( i + 1 ) ) + STRING_1 ) ) ; } return VAR_2 ; }
private static long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 { long VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 > VAR_2 ) { throw new TYPE_2 ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_2 ) ) ; } long VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 + VAR_4 ) != VAR_2 ) { throw new TYPE_2 ( ( STRING_3 + STRING_4 ) ) ; } return VAR_3 ; }
public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { TYPE_3 info = METHOD_2 ( x ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_3 ) ; TYPE_4 VAR_4 = METHOD_3 ( VAR_5 ) ; TYPE_4 VAR_6 = METHOD_3 ( VAR_7 ) ; METHOD_4 ( new TYPE_5 ( info , VAR_6 , VAR_4 , VAR_2 ) ) ; } catch ( java.lang.RuntimeException e ) { throw METHOD_5 ( x , e ) ; } }
public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { assert METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( VAR_3 . type ) ; METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) ; } catch ( java.lang.RuntimeException e ) { throw METHOD_7 ( x , e ) ; } }
public java.lang.String METHOD_1 ( java.lang.String path ) { if ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) { throw new java.lang.IllegalArgumentException ( STRING_2 ) ; } else if ( ( VAR_1 ) == ( METHOD_2 ( ) ) ) { throw new TYPE_1 ( STRING_3 ) ; } return METHOD_3 ( VAR_2 , path ) ; }
static boolean METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }
static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 . append ( new TYPE_3 . Float ( VAR_7 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false ) ; }
synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int w , int h , int [ ] d , int VAR_5 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , d , VAR_5 ) ; }
static boolean METHOD_1 ( long VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 d = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( d == null ) { return false ; } d . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return true ; }
public final TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 ) throws java.io.IOException { synchronized ( this ) { if ( ! ( VAR_4 ) ) { throw new java.lang.RuntimeException ( STRING_1 ) ; } long VAR_5 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_5 != 0 ) { TYPE_2 res = new TYPE_2 ( VAR_5 ) ; METHOD_3 ( res . METHOD_4 ( ) ) ; return res ; } } throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; }
public TYPE_1 METHOD_1 ( java.util.Map VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } }
private org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 != null ) { for ( TYPE_2 map : VAR_2 ) { if ( METHOD_4 ( map . METHOD_5 ( ) ) ) { return map . METHOD_5 ( ) ; } } } return VAR_4 ; }
static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; }
synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int w , int h , int VAR_5 , byte [ ] d , int VAR_6 ) { METHOD_2 ( ) ; METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , VAR_5 , d , VAR_6 ) ; }
public void METHOD_1 ( long session , long VAR_1 , long c , TYPE_1 VAR_2 , TYPE_2 fd , TYPE_3 callback ) throws java.lang.Exception { byte [ ] VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) ) ; super . METHOD_1 ( session , VAR_1 , c , VAR_2 , fd , callback ) ; }
static long METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return 0 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }
protected void METHOD_1 ( TYPE_1 . VM model , int VAR_1 ) { METHOD_2 ( model . METHOD_3 ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ 1 ] . toString ( ) , model . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( model , VAR_1 ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new org.ovirt.engine.core.common.businessentities.VDS ( ) , true ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_1 . any ( ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ) . thenReturn ( false ) ; TYPE_2 . METHOD_5 ( command . validate ( ) ) ; TYPE_2 . METHOD_6 ( command . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_3 . toString ( ) ) ) ; }
public void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_1 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_1 ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( VAR_1 ) . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( ) . when ( VAR_1 ) . METHOD_7 ( TYPE_2 . any ( ) ) ; VAR_6 . METHOD_9 ( VAR_7 class , VAR_8 ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > list = VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.VDS > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; }
public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 3 , 3 , false ) ; TYPE_3 in = t . METHOD_3 ( args . inV ) ; TYPE_3 VAR_2 = t . METHOD_3 ( ( ( float ) ( FLOAT_1 / ( VAR_3 ) ) ) ) ; args.out = t . METHOD_4 ( in , VAR_2 ) ; }
private void METHOD_1 ( TYPE_1 . ValidationResult VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , version , VAR_2 ) ; org.mockito.Mockito.when ( nic . METHOD_3 ( ) ) . thenReturn ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , validator . METHOD_4 ( ) ) ; }
protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( VAR_2 . length , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } }
private void METHOD_1 ( int VAR_1 ) throws java.io.IOException { METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; VAR_5 . METHOD_4 ( VAR_7 ) ; VAR_5 . METHOD_5 ( ) ; VAR_5 . METHOD_6 ( java.lang.Integer . toString ( VAR_1 ) ) ; METHOD_7 ( VAR_3 , VAR_4 ) ; VAR_5 . METHOD_8 ( ) ; }
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( VAR_2 , result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) ) ; }
static void METHOD_1 ( TYPE_1 m , TYPE_2 v , java.lang.String value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( v == null ) { m . METHOD_2 ( value ) ; } else { m . METHOD_2 ( v , value ) ; } } catch ( TYPE_3 e ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_1 , VAR_2 ) ; }
static void METHOD_1 ( TYPE_1 m , TYPE_2 v , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final long VAR_3 = ( v == null ) ? ( ( long ) ( m . METHOD_2 ( ) ) ) : ( ( long ) ( m . METHOD_2 ( v ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 e ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_1 , VAR_2 ) ; }
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( false ) ; java.util.List < java.lang.String > VAR_2 = new TYPE_1 < > ( ) ; boolean result = validator . METHOD_2 ( new org.ovirt.engine.core.common.businessentities.VDS ( ) , VAR_2 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( 1 , VAR_2 . size ( ) ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_2 . get ( 0 ) ) ; }
static void METHOD_1 ( TYPE_1 m , TYPE_2 v , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( v == null ) { m . METHOD_2 ( value ) ; } else { m . METHOD_2 ( v , value ) ; } } catch ( TYPE_3 e ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_1 , VAR_2 ) ; }
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_8 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; }
public java.lang.String toString ( ) { java.lang.StringBuilder sb = new java.lang.StringBuilder ( ( ( ( size ) * 5 ) + 10 ) ) ; sb.append ( CHAR_1 ) ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( i != 0 ) { sb.append ( STRING_1 ) ; } sb.append ( values [ i ] ) ; } sb.append ( CHAR_2 ) ; return sb . toString ( ) ; }
public java.util.List < java.lang.Integer > METHOD_1 ( ) { java.util.List < java.lang.Integer > VAR_1 = new java.util.ArrayList < > ( ) ; for ( int VAR_2 : METHOD_2 ( ) ) { if ( METHOD_3 ( VAR_2 ) . METHOD_4 ( STRING_1 ) ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; }
protected java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > > METHOD_1 ( boolean VAR_1 ) { java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > > VAR_2 = new java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > > ( ) ; if ( VAR_1 ) { return VAR_2 ; } for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { VAR_2 . put ( getEntity ( i ) , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ) ; } return VAR_2 ; }
public java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > METHOD_1 ( java.lang.Object source ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > list = new java.util.ArrayList < > ( ) ; if ( source != null ) { for ( org.ovirt.engine.core.common.businessentities.VmTemplate template : ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( source ) ) ) { if ( ( template . getStatus ( ) ) == ( VAR_1 ) ) { list . add ( template ) ; } } TYPE_1 . METHOD_2 ( list , new TYPE_2 ( ) ) ; } return list ; }
private static java.lang.StringBuilder METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return new java.lang.StringBuilder ( ) ; } TYPE_2 VAR_3 = VAR_2 . METHOD_2 ( ) ; assert VAR_3 != null ; return TYPE_3 . METHOD_1 ( VAR_1 , VAR_3 ) . append ( VAR_2 . getName ( ) ) . append ( CHAR_1 ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Network > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Network > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; }
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_2 . any ( ) , TYPE_2 . METHOD_3 ( ) ) ) . thenReturn ( TYPE_3 . METHOD_4 ( org.mockito.Mockito . METHOD_5 ( VAR_2 class ) ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_6 ( ) ) . thenReturn ( VAR_1 ) ; validator = new TYPE_4 ( VAR_3 , cluster , VAR_4 ) ; TYPE_5 . METHOD_7 ( validator . METHOD_8 ( ) , TYPE_6 . METHOD_9 ( VAR_5 ) ) ; }
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( org.ovirt.engine.core.compat.Guid id : VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }
public TYPE_1 METHOD_1 ( TYPE_1 resource ) { METHOD_2 ( resource , VAR_1 ) ; org.ovirt.engine.core.common.businessentities . Network network = METHOD_3 ( resource ) ; if ( network != null ) { resource . METHOD_4 ( ) . METHOD_5 ( network . METHOD_6 ( ) ) ; resource . METHOD_4 ( ) . setId ( null ) ; } return METHOD_7 ( resource , VAR_2 , VAR_3 , VAR_4 ) ; }
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( org.ovirt.engine.core.compat.Guid id : VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities . Network > VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( org.ovirt.engine.core.common.businessentities . Network VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_2 ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_5 ) . METHOD_3 ( ) ; }
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_3 = METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; }
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; }
public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_2 ) ; return ; } try { TYPE_2 . METHOD_4 ( ) . METHOD_1 ( VAR_1 , mContext . METHOD_5 ( ) , VAR_2 ) ; } catch ( android.os.RemoteException e ) { throw e . METHOD_6 ( ) ; } }
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . Disk ) ; VAR_1 . METHOD_2 ( INT_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , VAR_1 , aQuery ) ; }
public java.lang.String METHOD_1 ( TYPE_1 . Disk disk ) throws TYPE_2 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , disk . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( disk . METHOD_3 ( ) ) != null ? disk . METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; }
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_3 ( VAR_1 ) , aQuery ) ; }
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; return ; } try { TYPE_2 . METHOD_4 ( ) . METHOD_1 ( mContext . METHOD_5 ( ) , VAR_1 ) ; } catch ( android.os.RemoteException e ) { throw e . METHOD_6 ( ) ; } }
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { TYPE_1 . getInstance ( ) . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( getModel ( ) , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { getModel ( ) . METHOD_3 ( ) . setEntity ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; } } ) , id ) ; }
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_2 ( id ) , aQuery ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId , boolean VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return source ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } } ; org.ovirt.engine.core.common.queries.IdQueryParameters params = new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , params , aQuery ) ; }
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , METHOD_3 ( ) ) , aQuery ) ; }
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . getInstance ( ) . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_3 ( ) ; } } , model . METHOD_4 ( ) ) ) ; } else { METHOD_3 ( ) ; } }
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; }
private void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ) ; } } ; TYPE_2 . getInstance ( ) . METHOD_4 ( VAR_1 ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return source ; } return STRING_1 ; } } ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , params , aQuery ) ; }
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } TYPE_1 . getInstance ( ) . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { setItems ( ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ) ; METHOD_3 ( ) ; } } ) , getEntity ( ) . getId ( ) ) ; }
private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( returnValue ) ) ) ; } } ) ) ; }
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( name ) , aQuery ) ; }
private void METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ) ; }
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return source ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , aQuery ) ; }
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( org.ovirt.engine.core.compat . Version VAR_3 : VAR_4 < TYPE_1 < org.ovirt.engine.core.compat . Version > > getValue ( VAR_5 ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; }
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 . StoragePool ) , aQuery ) ; }
