mmm a / grails - scripts / build . gradle <nl> dependencies { <nl> project ( ' : grails - plugin - log4j ' ) , <nl> project ( " : grails - test " ) , <nl> project ( " : grails - plugin - testing " ) <nl> } <nl> sourceSets { <nl>
mmm a / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8e5df9ded9385e5f816c4ff0eebcf35ec98f3e61 <nl> mode = push <nl> parent = 240600f5a151027e73176bba5e368438617cc47c <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ No newline at end of file <nl>
mmm a / src / test / java / org / mapdb / CrashTest . java <nl> public class CrashTest { <nl> maker . fileLockDisable ( ) ; <nl> if ( mmap ) <nl> maker . fileMmapEnableIfSupported ( ) ; <nl> if ( cache ) <nl> maker . cacheHashTableEnable ( ) ; <nl>
mmm a / core / java / android / content / AsyncQueryHandler . java <nl> public abstract class AsyncQueryHandler extends Handler { <nl> cursor . getCount ( ) ; <nl> } <nl> } catch ( Exception e ) { <nl> cursor = null ; <nl> } <nl>
mmm a / README . md <nl> How to get beta releases : <nl> * * Next release * * <nl> * Submit MD5 of android ID for more privacy <nl> * Updated English translation <nl> * Updated Simplified Chinese translation <nl>
mmm a / advanced / pom . xml <nl> < includes > <nl> < include > org / neo4j / graphdb / * * < / include > <nl> < / includes > <nl> < comparisonVersion > 1 . 0 < / comparisonVersion > <nl> < / configuration > <nl> < / plugin > <nl> < plugin > <nl>
mmm a / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0a0fb048946975c0f5836fa4867f5f0fc89652b8 <nl> mode = push <nl> parent = 65332fdaf68eca919efcf1653c8bc1c9d339e05f <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ No newline at end of file <nl>
mmm a / bin / build_release . sh <nl> rm * jar <nl> rm - rf lib <nl> rm - rf classes <nl> lein deps <nl> lein compile <nl> lein jar <nl> mkdir - p $ DIR <nl> mkdir $ DIR / lib <nl>
mmm a / core / java / android / widget / TextView . java <nl> public class TextView extends View implements ViewTreeObserver . OnPreDrawListener <nl> } <nl> } <nl> @ RemotableViewMethod <nl> @ Override <nl> public void setEnabled ( boolean enabled ) { <nl> if ( enabled = = isEnabled ( ) ) { <nl>
mmm a / build . gradle <nl> buildscript { <nl> apply plugin : ' android - library ' <nl> dependencies { <nl> compile files ( ' library / libs / joda - convert - 1 . 5 . jar ' ) <nl> } <nl> android { <nl>
mmm a / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3d994c9eec89604d119e71a3d74d70e4122038e4 <nl> mode = push <nl> parent = 41e1e8e6e69edb04a79d8402850e80bf66b3114f <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ No newline at end of file <nl>
mmm a / source / com / intellij / openapi / updateSettings / impl / UpdateSettingsConfigurable . java <nl> public class UpdateSettingsConfigurable extends BaseConfigurable implements Appl <nl> } <nl> public String getHelpTopic ( ) { <nl> return " preferences . versionUpdates " ; / / TODO [ pti ] : request Help Topic <nl> } <nl> public Icon getIcon ( ) { <nl>
mmm a / SeriesGuide / src / com / battlelancer / seriesguide / ui / BaseActivity . java <nl> public abstract class BaseActivity extends SlidingFragmentActivity { <nl> SlidingMenu sm = getSlidingMenu ( ) ; <nl> sm . setTouchModeAbove ( SlidingMenu . TOUCHMODE_MARGIN ) ; <nl> sm . setBehindOffsetRes ( R . dimen . slidingmenu_offset ) ; <nl> setSlidingActionBarEnabled ( false ) ; <nl> } <nl> @ Override <nl>
mmm a / core / src / main / java / dagger / ObjectGraph . java <nl> import static dagger . internal . RuntimeAggregatingPlugin . getAllModuleAdapters ; <nl> * < / ul > <nl> * / <nl> public abstract class ObjectGraph { <nl> / * * <nl> * Returns an instance of { @ code type } . <nl>
mmm a / . gitignore <nl> . DS_Store <nl> / performanceTest / lib <nl> . textmate <nl> \ No newline at end of file <nl>
mmm a / . gitattributes <nl> * . py text diff = python <nl> * . properties text <nl> * . sh text eol = lf <nl> * . txt text <nl> * . xml text diff = html <nl>
mmm a / README . md <nl> Syracuse University and God is Most High . <nl> Phil Pratt - Szeliga <nl> http : / / trifort . org / <nl>
mmm a / src / spec / doc / core - object - orientation . adoc <nl> include : : { projectdir } / src / spec / test / objectorientation / MethodsTest . groovy [ tags = va <nl> = = = Fields and properties <nl> ( TBD ) <nl> <nl> [ [ fields ] ] <nl> = = = = Fields <nl>
mmm a / testData / templates / while / booleanVariable_after . java <nl> public class Foo { <nl> void m ( boolean x ) { <nl> while ( x ) < caret > <nl> return ; <nl> } <nl> } <nl>
mmm a / src / test / groovy / util / LogASTTransformTest . groovy <nl> import org . codehaus . groovy . transform . * <nl> * @ author Raffaele Cigni <nl> * @ author Alberto Vilches Raton <nl> * / <nl> class LogTest extends GroovyTestCase { <nl> def logObserver = new LoggingObserver ( ) <nl>
mmm a / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 36301c1e26205f5d2e553226f22ff16786f1a3ff <nl> mode = push <nl> parent = cdf4bf6d9cf910313caf7526050ed7e633fdc742 <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ No newline at end of file <nl>
mmm a / CHANGELOG . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl> * STORM - 265 : upgrade to clojure 1 . 5 . 1 <nl> * STORM - 232 : ship JNI dependencies with the topology jar <nl> * STORM - 295 : Add storm configuration to define JAVA_HOME <nl>
mmm a / src / main / java / org / mapdb / CC . java <nl> public interface CC { <nl> / / int BTREE_DEFAULT_MAX_NODE_SIZE = 32 ; <nl> int DEFAULT_CACHE_SIZE = 1024 * 32 ; <nl> String DEFAULT_CACHE = DBMaker . Keys . cache_hashTable ; <nl>
mmm a / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> } <nl> } <nl>
mmm a / media / tests / omxjpegdecoder / Android . mk <nl> LOCAL_SHARED_LIBRARIES : = \ <nl> libskia \ <nl> libstagefright \ <nl> libbinder \ <nl> libutils <nl> LOCAL_C_INCLUDES : = \ <nl> $ ( JNI_H_INCLUDE ) \ <nl>
mmm a / src / web / muc - server - props - edit - form . jsp <nl> < % } % > <nl> < p > <nl> Use the form below to edit Multi - User Chat server properties . <nl> < / p > <nl>
mmm a / src / main / java / com / amazonaws / http / HttpRequestFactory . java <nl> class HttpRequestFactory { <nl> uri + = " / " ; <nl> } <nl> uri + = request . getResourcePath ( ) ; <nl> } <nl> String encodedParams = HttpUtils . encodeParameters ( request ) ; <nl>
mmm a / src / main / java / io / vertx / core / http / HttpConnection . java <nl> import io . vertx . core . buffer . Buffer ; <nl> * - push notifications <nl> * - HttpConnection implementation <nl> * - reset stream <nl> * <nl> * Both : <nl> * - byte distribution algorithm configurability ( options ? connection ? ) <nl>
mmm a / services / core / java / com / android / server / am / ActivityStackSupervisor . java <nl> public final class ActivityStackSupervisor implements DisplayListener { <nl> } <nl> } <nl> checkReadyForSleepLocked ( ) ; <nl> setLockTaskModeLocked ( null ) ; <nl> } <nl> boolean shutdownLocked ( int timeout ) { <nl>
mmm a / ChangeLog <nl> * Added CSS @ import support <nl> * Added CSS font - family property support <nl> * Added ePub embedded fonts support <nl> = = = = = 1 . 9 . 6 . 1 ( Feb 24 , 2014 ) = = = = = <nl> * Fixed some config vaues reading ( e . g . background ) <nl>
mmm a / spellchecker / src / com / intellij / spellchecker / jetbrains . dic <nl> reify <nl> reifying <nl> reindex <nl> renderer <nl> repo <nl> resetlogs <nl> resizable <nl> serializers <nl> servererror <nl> servlet <nl> servlets <nl> sftp <nl> shader <nl> significand <nl>
mmm a / Examples / UIExplorer / UIExplorerIntegrationTests / IntegrationTests . m <nl> expectErrorRegex : @ " because shouldThrow " ] ; <nl> } <nl> - ( void ) testTimers <nl> { <nl> [ _runner runTest : _cmd module : @ " TimersTest " ] ; <nl> } <nl>
mmm a / wrapper / gradle - wrapper . properties <nl> distributionBase = GRADLE_USER_HOME <nl> distributionPath = wrapper / dists <nl> zipStoreBase = GRADLE_USER_HOME <nl> distributionVersion = 0 . 7 - 20090615163901 + 1000 <nl> zipStorePath = wrapper / dists <nl> urlRoot = http \ : / / snapshots . dist . codehaus . org / gradle <nl> distributionName = gradle <nl>
mmm a / . travis . yml <nl> android : <nl> android - 22 <nl> script : . / gradlew build check <nl>
mmm a / jetty - jmx / pom . xml <nl> < version > $ { project . version } < / version > <nl> < / dependency > <nl> < / dependencies > <nl> < / project > <nl>
mmm a / design / proguard - rules . pro <nl> } <nl> # Make sure we keep annotations for CoordinatorLayout ' s DefaultBehavior <nl> - keepattributes * Annotation * <nl> \ No newline at end of file <nl>
mmm a / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> versionCode 218 <nl> versionName ' 3 . 3 . 0 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl>
mmm a / CHANGELOG . md <nl> # # 2 . 0 . 0 <nl> # # 1 . 0 . 0 <nl> * STORM - 1494 : Add link to supervisor log in Storm UI <nl> * STORM - 1496 : Nimbus periodically throws blobstore - related exception <nl> * STORM - 1484 : ignore subproject . classpath & . project file <nl>
mmm a / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> versionCode = 11242 <nl> versionName = ' 13 - beta3 ' <nl> } <nl>
mmm a / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 94ad6b896b8e285a9b2c6589d97f4153e0d2def9 <nl> mode = push <nl> parent = 84ce100bc251e7211ee8ecacc103ce2eb1279697 <nl> remote = git @ github . com : liferay / com - liferay - portal - remote . git <nl> \ No newline at end of file <nl>
mmm a / src / net / java / sip / communicator / impl / gui / main / SingleWindowContainer . java <nl> public class SingleWindowContainer <nl> addConversationTab ( <nl> callPanel . getCallTitle ( ) , null , callPanel , true ) ; <nl> } <nl> / * * <nl>
mmm a / driver / src / test / org / mongodb / serialization / serializers / BsonDocumentBufferSerializerTest . java <nl> import static org . junit . Assert . assertNull ; <nl> public class BsonDocumentBufferSerializerTest extends MongoClientTestBase { <nl> BsonDocumentBufferSerializer serializer = <nl> new BsonDocumentBufferSerializer ( new PowerOfTwoByteBufferPool ( 24 ) , PrimitiveSerializers . createDefault ( ) ) ; <nl> @ Test <nl>
mmm a / Libraries / Components / TextInput / TextInput . js <nl> var TextInput = React . createClass ( { <nl> return ( <nl> < TouchableWithoutFeedback <nl> onPress = { this . _onPress } <nl> rejectResponderTermination = { true } <nl> accessible = { props . accessible } <nl>
mmm a / gradle / docs . gradle <nl> allprojects { <nl> } <nl> } <nl> if ( JavaVersion . current ( ) . isJava8Compatible ( ) ) { <nl> allprojects { <nl> tasks . withType ( Javadoc ) { <nl>
mmm a / build . moxie <nl> name : Gitblit <nl> description : pure Java Git solution <nl> groupId : com . gitblit <nl> artifactId : gitblit <nl> version : 1 . 4 . 2 - SNAPSHOT <nl> inceptionYear : 2011 <nl> # Current stable release <nl>
mmm a / pom . xml <nl> < dependency > <nl> < groupId > com . metamx < / groupId > <nl> < artifactId > server - metrics < / artifactId > <nl> < version > 0 . 2 . 4 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupId > commons - codec < / groupId > <nl>
mmm a / pom . xml <nl> < module > metamorphosis - commons < / module > <nl> < module > metamorphosis - server - wrapper < / module > <nl> < / modules > <nl> < build > <nl> < plugins > <nl> < plugin > <nl>
mmm a / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < WebView android : id = " @ + id / appView " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / LinearLayout > <nl>
mmm a / src / main / java / org / opentripplanner / updater / stoptime / TimetableSnapshotSource . java <nl> public class TimetableSnapshotSource { <nl> } <nl> LOG . debug ( " purging expired realtime data " ) ; <nl> / / TODO : purge expired realtime data <nl> lastPurgeDate = previously ; <nl>
mmm a / common / src / main / java / tachyon / security / PlainSaslServer . java <nl> public class PlainSaslServer implements SaslServer { <nl> throw new IllegalStateException ( " PLAIN authentication not completed " ) ; <nl> } <nl> } <nl> } <nl> \ No newline at end of file <nl>
mmm a / RoboSpice - samples <nl> Subproject commit 57dc1d798e820e87c92e35286395ae06f8253f88 <nl>
mmm a / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d33a646be8056fe72cb624a889787ee57f376d2b <nl> mode = push <nl> parent = 8f419d24f36837cb006e3e1020d88982aaf47dcd <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ No newline at end of file <nl>
mmm a / Wiki . txt <nl> Test auto push 9 . <nl> public void asyncHtml ( ) { <nl>
mmm a / jps / src / org / jetbrains / jps / Module . groovy <nl> class Module extends LazyInitializeableObject implements ClasspathItem { <nl> } <nl> def getOutput ( ) { <nl> return outputPath <nl> } <nl> List < String > runtimeClasspath ( ) { <nl>
mmm a / hibernate - core / src / main / java / org / hibernate / dialect / HSQLDialect . java <nl> public class HSQLDialect extends Dialect { <nl> public boolean supportsTupleDistinctCounts ( ) { <nl> return false ; <nl> } <nl> } <nl>
mmm a / README . md <nl> This library is published on jCenter . Just add these lines to ` build . gradle ` . <nl> ccc groovy <nl> dependencies { <nl> compile ' com . h6ah4i . android . widget . advrecyclerview : advrecyclerview : 0 . 7 . 1 ' <nl> } <nl> ` ` ` <nl>
mmm a / build . txt <nl> 144 . SNAPSHOT <nl>
mmm a / core / src / main / java / io / grpc / ChannelImpl . java <nl> public final class ChannelImpl implements Channel { <nl> @ Override <nl> public void request ( int numMessages ) { <nl> stream . request ( numMessages ) ; <nl> } <nl>
mmm a / . gitignore <nl> . metadata / <nl> . project <nl> . settings / <nl> / conf / alluxio - env . sh <nl> / conf / alluxio - env . sh . bootstrap . bk <nl> / data / <nl> / deploy / vagrant / . request_ids <nl> / deploy / vagrant / . vagrant / <nl>
mmm a / servers / src / main / java / tachyon / master / MasterBase . java <nl> public abstract class MasterBase implements Master { <nl> mJournal = Preconditions . checkNotNull ( journal ) ; <nl> } <nl> protected boolean isLeaderMode ( ) { <nl> return mIsLeader ; <nl> } <nl> <nl> protected boolean isStandbyMode ( ) { <nl> return ! mIsLeader ; <nl> } <nl>
mmm a / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3702347292836dcb2e10abfda97449ffaec6184c <nl> mode = push <nl> parent = adfaa8405a6e96beb53b6ce7b759c6e4dccd099a <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ No newline at end of file <nl>
mmm a / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5b39c709dd138119d80376f886a683590e4c6491 <nl> mode = push <nl> parent = b7d81f5b9de2f971820cf26639c436e7101c5639 <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ No newline at end of file <nl>
mmm a / src / org / geometerplus / zlibrary / core / util / ZLTTFInfo . java <nl> public final class ZLTTFInfo { <nl> } else { <nl> SubfamilyName = subfamily ; <nl> } <nl> System . err . println ( this ) ; <nl> } <nl> @ Override <nl>
mmm a / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / filter - archaic . txt <nl> don don VBP <nl> don do VBP <nl> hasn have MD <nl> hasn have VBZ <nl> shan shan NN <nl> shouldn shall MD <nl> wouldn will MD <nl>