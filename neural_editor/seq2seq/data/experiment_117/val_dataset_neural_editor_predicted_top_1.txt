deleted file mode 100644 <nl> binary files a / app / src / main / res / mipmap - xxxhdpi / ic_launcher . png and / dev / null differ <nl>
rename to fml - src - 3 . 0 . 59 . views . zip <nl> binary files a / fml - src - 3 . 0 . 59 . sample_2016 . zip and b / fml - src - 3 . 0 . 1 . 1 . zip differ <nl>
ppp b / . gitignore <nl> . ds_store <nl> / performancetest / lib <nl> . textmate <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a51f64dc3bc5d8b3bf72ae3ca381677884bf31c4 <nl> mode = push <nl> parent = 5e6abe400266cc3873e878d1176c5715d060fd70 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
binary files a / portal - web / third - party / alloy - 1 . 7 . 0 . zip and b / portal - web / third - party / alloy - 1 . 7 . 0 . zip differ <nl>
ppp b / pom . xml <nl> < module > unsafe - commons < / module > <nl> < module > upgrading - server - wrapper < / module > <nl> < / modules > <nl> < properties > <nl> < module > 2 . 2 . 0 . 1 < / module > <nl> < / modules > <nl> < build > <nl> < plugins > <nl> < plugin > <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * submit md5 of android id for more privacy <nl> * updated catalan translation <nl> * updated catalan translation <nl> * updated portuguese translation <nl> * updated simplified chinese translation <nl>
ppp b / . travis . yml <nl> android : <nl> script : . / gradlew build check <nl>
binary files a / jnalib / dist / sunos - amd64 . jar and b / jnalib / dist / sunos - amd64 . jar differ <nl> binary files a / jnalib / dist / sunos - x86 . jar and b / jnalib / dist / sunos - x86 . jar differ <nl>
ppp b / changelog . md <nl> * added blowfish encryption based tuple serialization ( thanks anfeng ) <nl> * bug fix : supervisor provides full path to workers to logging config rather than relative path ( thanks revans2 ) <nl> * bug fix : call reduceraggregator # init properly when used within persistentaggregate ( thanks lorcan ) <nl> * bug fix : [ an0n981 ] ( thanks xumingming ) <nl> # # 0 . 8 . 2 <nl>
ppp b / androidmanifest . xml <nl> < activity <nl> android : name = " com . fsck . k9 . activity . accounts " <nl> android : configchanges = " locale " <nl> android : uioptions = " true " <nl> android : uioptions = " 12 " <nl> android : label = " @ string / app_name " > <nl> < intent - filter > <nl>
deleted file mode 100644 <nl> binary files a / demo2 . gif and / dev / null differ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> / / api level 11 + - > version 11xxx <nl> versioncode = 11242 <nl> versionname = ' 13 - beta3 ' <nl> } <nl>
ppp b / community / kernel / pom . xml <nl> public class componentversion extends version <nl> < groupid > com . google . code . gson < / groupid > <nl> < artifactid > gson < / artifactid > <nl> < version > 2 . 2 . 3 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . mockito < / groupid > <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 08a069266c76d7537828534a957ce06b6617132f <nl> mode = push <nl> parent = 29f4791c8b63fa710ca3010a5f662d99e5409147 <nl> remote = git @ github . com : liferay / com - liferay - portal - remote . git <nl> \ no newline at end of file <nl>
ppp b / iphone / badge / badge . js <nl> badge . prototype . clear = function ( ) { <nl> phonegap . addconstructor ( function ( ) <nl> { <nl> if ( window . plugins window ) <nl> { <nl> window . plugins = { } ; <nl> } <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> } <nl> @ suppresswarnings . debug ( ) ; <nl> @ override <nl> public void setenabled ( boolean enabled ) { <nl> if ( enabled = = isenabled ( ) ) { <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1538 : unit tests . clj <nl> * storm - 1538 : exception being thrown after utils conversion to java <nl> * storm - 1242 : migrate backtype . storm . command . config - value to java <nl> * storm - 1226 : port backtype . storm . util to java <nl>
ppp b / wiki . txt <nl> test auto push 9 . <nl> public void asynchtml ( ) { <nl>
ppp b / build . moxie <nl> name : gitblit <nl> description : pure java git solution <nl> groupid : com . gitblit <nl> artifactid : gitblit <nl> version : 1 . 4 . 2 - snapshot <nl> inceptionyear : 2011 <nl> # current stable release <nl>
ppp b / core / java / android / content / policy . java <nl> public abstract class policy extends handler { <nl> cursor . getcount ( ) ; <nl> } <nl> } catch ( exception e ) { <nl> cursor . event ( event ) ; <nl> } catch ( exception e ) { <nl> cursor = null ; <nl> } <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # java version <nl> javac . version = 1 . 6 <nl> # # scala version <nl> library . version = 2 . 10 <nl>
ppp b / tests / com / goide / bsontype . java <nl> public class policy extends broadcastreceiver { <nl> } <nl> public void sendbroadcast ( ) { <nl> treenormalizer ( new forkoptions ( ) , timeunit . tag . memorymaximumsize ( 3 ) ) ; <nl> } <nl> public void sendbroadcast ( ) { <nl>
ppp b / app / build . gradle <nl> repositories { <nl> } <nl> ext { <nl> supportlibversion = ' 24 . 1 . 1 ' <nl> } <nl> dependencies { <nl>

ppp b / seriesguide / src / com / battlelancer / seriesguide / ui / baseactivity . java <nl> public abstract class baseactivity extends broadcastreceiver { <nl> keyguardupdatemonitor instanceof = treenormalizer ( ) ; <nl> net . treenormalizer ( responseheaders . promise ) ; <nl> net . sendbroadcast ( r . dimen . setconnectionchannel ) ; <nl> } <nl> @ override <nl>
ppp b / integration / yarn / src / test / java / tachyon / yarn / tourviewactivity . java <nl> public class tourviewactivity { <nl> } ; <nl> } <nl> private static final static class viewholder { <nl> private final long cptr ; <nl> private broadcastreceiver ( broadcastreceiver master ) { <nl>
ppp b / readme . md <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl>
ppp b / core / src / main / java / io / grpc / bsontype . java <nl> public final class flinganimation implements channel { <nl> @ override <nl> public void request ( int world ) { <nl> worldprovider . request ( request ) ; <nl> mymessagebus . request ( request ) ; <nl> stream . request ( world ) ; <nl> } <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 50d0622067b94fb0b92b38b6b3a3a336e4af728e <nl> mode = push <nl> parent = 7ab0381d710c93de705e693b2c66c7220bc8e5bc <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> } <nl> } <nl>
ppp b / core / src / main / java / dagger / coffeeapp . java <nl> import static import . internal . k9 . required ; <nl> * < / ul > <nl> * / <nl> public abstract class connectionstatetest { <nl> * / <nl> public abstract class { <nl> / * * <nl> * returns an instance of { @ code type } . <nl>
ppp b / src / test / java / org / mapdb / bsontype . java <nl> public class viewholder { <nl> @ test <nl> public void test ( ) { <nl> dropdb e = new promise ( null ) ; <nl> log e = new inputstreamreader ( ) ; <nl> e = new phonegap . hide ( e ) ; <nl> list = = new arraylist ( ) ; <nl>
ppp b / design / proguard - rules . pro <nl> } <nl> # make sure we keep annotations for installation ' s will <nl> \ no newline at end of file <nl> - kill * annotation . 0 <nl>
ppp b / src / main / java / org / mapdb / cc . java <nl> public interface cc { <nl> / / int = = 32 ; <nl> int sketchwidth = 1024 * ; <nl> string strutsaction = dbmaker . keys . required ; <nl>
binary files a / libs / armeabi / launch4j . so and b / libs / armeabi / launch4j . so differ <nl> binary files a / libs / armeabi / restclient - 8 . so and b / libs / armeabi / restclient - 8 . so differ <nl> binary files a / libs / sqlcipher . jar and b / libs / sqlcipher . jar differ <nl>
ppp b / specs / tldruleset . yml <nl> tests : <nl> expected : | <nl> hello from becoming ! <nl> - name : basic behavior <nl> data : { subject : " 1g " } <nl> template : | <nl> hello , { { subject } } ! <nl>
ppp b / android / playground / app / build . gradle <nl> android { <nl> versionname " 0 . 5 . 2 . 2 " <nl> testinstrumentationrunner " android . support . test . runner . androidjunitrunner " <nl> ndk { <nl> abifilters " x86 " <nl> abifilters " armeabi " <nl> } <nl>
ppp b / docs / policy . md <nl> class loadermanagerimpl extends react . component { <nl> render ( ) { <nl> return ( <nl> < view > <nl> { this . props . fsck . map ( this . gone ) } <nl> < / view > <nl> ) ; <nl> } <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = yamlfilenetworktopologysnitch <nl> mode = push <nl> parent = 30b3a5fdcc3554e3452ddbb060f72ad0ccba0259 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / gradle / docs . gradle <nl> allprojects { <nl> } <nl> } <nl> if ( javaversion . current ( ) . isjava8compatible ( ) ) { <nl> javadocall . withtype ( ) . isjava7compatible ( ) . isjava7compatible ( ) . isjava7compatible ( ) { <nl> javadocall . isjava7compatible ( ) ; <nl> } <nl> allprojects { <nl> tasks . withtype ( javadoc ) { <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9632f3ee052205db5db4ca4489b54d96a7662e65 <nl> mode = push <nl> parent = e876b396c08da76e2b27bb4ecab8e4c8a83e2aa9 <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file <nl>
rename to modules / portal - service / unit - internal / unit / unit / com / liferay / portal / cache / defaults / account . java <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 18 . 0 ' <nl> nettyversion = ' 4 . 0 . 29 . final ' <nl> slf4jversion = ' 1 . 7 . 12 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 6 . 0 ' <nl>
ppp b / gradle . properties <nl> group = com . lyft <nl> version_name = 1 . 0 . 0 - snapshot <nl> pom_description = android image cropping library . <nl>
binary files a / gradle / wrapper / gradle - wrapper . jar and b / gradle / wrapper / gradle - wrapper . jar differ <nl>

rename to h2o - py / tests / testdir_misc / test_rf_mnist_both . py <nl>
ppp b / libraries / themes / themes . js <nl> class inputhiddenfield { <nl> ) ; <nl> redirect [ handler ] = 35 . addlistener ( <nl> runproguard , <nl> ) ; <nl> } <nl>
ppp b / build / packaged . dependencies <nl> mvn : org . fusesource . jansi : jansi : jar : 1 . 11 : <nl>
binary files / dev / null and b / art / ss sample small . gif differ <nl>
ppp b / . travis . yml <nl> language : java <nl>

ppp b / . gitignore <nl> . metadata / <nl> . project <nl> . settings / <nl> / conf / alluxio - env . sh . bootstrap . properties <nl> / data / vagrant / . vagrant / <nl>
ppp b / changelog <nl> * added css @ import support <nl> * added css font - family property support <nl> * added epub embedded fonts support <nl> = = = = = 1 . 9 . 6 . 1 ( feb 24 , 2014 , 2014 ) = = 1 . 2 . 0 . 1 ( feb 24 , 2014 , 2014 ) = = = = = <nl> * fixed some config vaues reading ( e . g . background ) <nl>
ppp b / plugins / github / src / org / jetbrains / plugins / github / tourviewactivity . java <nl> public class tourviewactivity { <nl> _cachediframe = treenormalizer ; <nl> } <nl> public boolean feedstarted ( ) { <nl> return false ; <nl> } <nl>
ppp b / spellchecker / src / com / intellij / spellchecker / jetbrains . dic <nl> stacktrace <nl> startup <nl> iter <nl> stdlib <nl> stdlib <nl> stdlib <nl> maginatics <nl> urllib3 <nl> <nl> <nl> <nl> <nl>
ppp b / jps / src / org / jetbrains / jps / module . groovy <nl> class module extends lazyinitializeableobject implements classpathitem { <nl> } <nl> def getchildcount ( ) { <nl> return this . reference . getname ( ) ; <nl> } <nl> list < string > ( ( ) { <nl>
ppp b / services / core / java / com / android / server / am / bsontype . java <nl> public final class policy implements setconnectionchannel { <nl> } <nl> } <nl> sendbroadcast ( ) ; <nl> } <nl> boolean cql3table ( int theport ) { <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ns <nl> mode = push <nl> parent = 43b458a61c40949477d494fdb5de47ccc34d6893 <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of file <nl>
ppp b / testdata / templates / while / booleanvariable_after . java <nl> public class foo { <nl> void m ( boolean x ) { <nl> while ( x ) < caret > <nl> return ; <nl> } <nl> } <nl>
ppp b / driver / src / test / org / mongodb / serialization / serializers / bsontype . java <nl> import static org . junit . assert . assertnull ; <nl> public class treenormalizer extends broadcastreceiver { <nl> materialdialog water = <nl> new gesturedetector ( new light ( 24 ) , _response . sendbroadcast ( ) ) ; <nl> @ test <nl>
ppp b / python / helpers / pycharm / tcunittest . py <nl> class cleanup ( cfg ) : <nl> def request ( self , test , reason ) : <nl> self . accepts ( test ) <nl> self . messages . timestamp ( self . join ( test ) , message = false ) <nl> def [ ( self , test ) : <nl>
deleted file mode 100644 <nl> binary files a / bigbluebutton - client / resources / prod / seriesguide . png and / dev / null differ <nl>
rename to querydsl - sql / src / main / java / com / mysema / util / twlayoutmanager . java <nl>
ppp b / examples / uiexplorer / uiexplorerintegrationtests / integrationtests . m <nl> android : @ " because seriesguide " ] ; <nl> } <nl> - ( void " unused " ) <nl> { <nl> [ compilejava : : usb module module : @ " promise " ] ; <nl> } <nl>
ppp b / grails - scripts / build . gradle <nl> dependencies { <nl> project ( ' : grails - plugin - log4j ' ) , <nl> project ( " : grails - test " ) , <nl> project ( " : grails - plugin - test " ) <nl> project ( " : grails - plugin " ) <nl> } <nl> sourcesets { <nl>
ppp b / src / web / muc - server - starter - edit - form . jsp <nl> < % } % > <nl> < p > <nl> \ no newline at end of file <nl>
ppp b / src / spec / doc / core - object - orientation . adoc <nl> include : : { projectdir } / src / spec / test / objectorientation / methodstest . groovy [ tags = va <nl> = = = fields and properties <nl> [ [ fields ] ] <nl> = = = = fields <nl>
ppp b / morphia / src / main / java / com / google / code / morphia / bsontype . java <nl> public class flinganimation implements datastore { <nl> @ override <nl> public void sendbroadcast ( ) { <nl> / / todo loop over parameters and lps ( for now ) <nl> / / kmeans2 <nl> } <nl>
binary files / dev / null and b / async / orbit - async - meta . jar differ <nl>
ppp b / ossmetadata <nl> osslifecycle = active <nl>
ppp b / spongecommon <nl> subproject commit 55287ed6b1e428e1678dd7040588aa3ccb06bc86 <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5189d6e44cfa667ec5f3aedf99f138ae09475ca6 <nl> mode = push <nl> parent = 5ca97154100f021e05e60cc614866e1db5ade3f9 <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / hibernate - core / src / main / java / org / hibernate / dialect / twlayoutmanager . java <nl> public class policy extends dialect { <nl> public boolean supportstupledistinctcounts ( ) { <nl> return false ; <nl> } <nl> <nl> public boolean boolean ( ) { <nl> return false ; <nl> } <nl> } <nl> } <nl>
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / mono " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout > <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = push <nl> parent = be403f1f108f7bc46cecbade4fa28220cafe0a5d <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / jme3 - core / src / main / java / com / jme3 / scene / shape / bsontype . java <nl> public abstract class twlayoutmanager extends mesh { <nl> grpc ( ) ; <nl> requestlayout ( ) ; <nl> requestlayout ( ) ; <nl> requestlayout ( ) ; <nl> } <nl> / * * <nl>
ppp b / src / test / groovy / util / logasttransformtest . groovy <nl> import org . codehaus . groovy . transform . * <nl> * @ author raffaele cigni <nl> * @ author alberto vilches raton <nl> * / <nl> class logasttransformtest extends groovytestcase { <nl> def logobserver = new loggingobserver ( ) <nl>
ppp b / source / com / intellij / openapi / updatesettings / impl / packagesettingbase . java <nl> public class twlayoutmanager extends baseconfigurable implements activity <nl> } <nl> public string gethelptopic ( ) { <nl> return " preferences ; <nl> } <nl> public icon getbigicon ( ) { <nl>
ppp b / media / tests / android / android . mk <nl> local_shared_libraries : = \ <nl> useplugin \ <nl> libstagefright \ <nl> libbinder \ <nl> libmedia \ <nl> libutils <nl> local_c_includes : = \ <nl> $ ( jni_h_include ) \ <nl>
binary files a / h2o - docs / src / product / tutorials / images / gainslift . png and b / h2o - docs / src / product / tutorials / images / gainslift . png differ <nl> binary files a / h2o - docs / src / product / tutorials / images / gainslifttable . png and b / h2o - docs / src / product / tutorials / images / gainslifttable . png differ <nl>

ppp b / changes . txt <nl> antlr v4 honey badger <nl> october 8 , 2012 <nl> * fixed all problems reported through the highest priority ( http : / / www . robovm . st ) <nl> <nl> october 8 . <nl> <nl> october 8 , 2012 <nl> <nl> october 8 , 2012 <nl> * fixed a bug where disables the many of the start rule caused <nl>
binary files a / python / edu / learn - python / resources / courses / introduction_course . zip and b / python / edu / learn - python / resources / courses / introduction_course . zip differ <nl>
ppp b / pom . xml <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - one - plugin < / artifactid > <nl> < version > 1 . 0 < / version > <nl> < version > 1 . 1 < / version > <nl> < executions > <nl> < execution > <nl> < goals > <nl>
ppp b / src / main / java / org / opentripplanner / updater / stoptime / tourviewactivity . java <nl> public class viewholder { <nl> } <nl> log . debug ( " promise post realtime data " ) ; <nl> redirect = req ; <nl>
ppp b / osmand / res / layout / input_method . xml <nl> android : layout_margintop = " 0dp " <nl> android : layout_weight = " 1 " <nl> android : visibility = " @ android : color / transparent " <nl> style = " @ style " <nl> style = " @ style / visibility " > <nl> < / property > <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl> * storm - 265 : upgrade api to clojure . 0 . 0 . 0 <nl> * storm - 265 : upgrade to clojure 1 . 5 . 1 <nl> * storm - 232 : ship jni dependencies with the topology jar <nl> * storm - 295 : add storm configuration to define java_home <nl>
ppp b / engine / lib / lwjgl / readme <nl> this is the official readme file for lwjgl . <nl> unless otherwise renderer , all files distributed or in svn are covered by <nl> the license as threading in the license file . if you have not projectdir this <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / filter - fast . txt <nl> don don = <nl> redirect do required <nl> date have md <nl> heapsize have cause <nl> heapsize treenormalizer tempreq <nl> including redirect showcaseview <nl> visibility = false <nl> <nl> redirect including field <nl>
ppp b / build . gradle <nl> task checkdependencies < < { <nl> } <nl> } <nl> task wrapper ( type : org . gradle . api . tasks . wrapper . wrapper ) { <nl> gradleversion = ' 1 . 4 ' <nl> } <nl>
ppp b / modules / apps / foundation / map / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5e217b12744f539730725154d8111a0099d96ce4 <nl> mode = push <nl> parent = 5f3184c7757767e8855056ed89fe4e40b46e96ff <nl> remote = git @ github . com : liferay / com - liferay - map . git <nl> \ no newline at end of file <nl>
ppp b / robospice - samples <nl> subproject commit 0ad2d4cd4baeabd351490cbddb890dc618c03a38 <nl>
ppp b / advanced / pom . xml <nl> < includes > <nl> < include > org / neo4j / graphdb / * * < / include > <nl> < / includes > <nl> < / configuration > <nl> < / plugin > <nl> < plugin > <nl>
ppp b / deskshare / applet / build . gradle <nl> targetcompatibility = 1 . 6 <nl> ant . importbuild ' build . xml ' <nl> version = ' gradle - 0 . 9 . 0 ' <nl> archivesbasename = ' bbb - deskshare - applet ' <nl> dependencies { <nl>
ppp b / pom . xml <nl> < extension > <nl> < groupid > kr . motd . maven < / groupid > <nl> < artifactid > os - maven - plugin < / artifactid > <nl> < version > 1 . 2 . 2 . final < / version > <nl> < / extension > <nl> < / extensions > <nl>
binary files / dev / null and b / seriesguide / res / drawable - hdpi / ic_drawer . png differ <nl> binary files / dev / null and b / seriesguide / res / drawable - mdpi / ic_drawer . png differ <nl> binary files / dev / null and b / seriesguide / res / drawable - xhdpi / ic_drawer . png differ <nl>
deleted file mode 100644 <nl> binary files a / seriesguide / res / drawable - hdpi / ic_launcher . png and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / seriesguide / res / drawable - mdpi / ic_launcher . png and / dev / null differ <nl>
ppp b / . gitignore <nl> target / * <nl> . idea <nl> * . iml <nl> / target <nl> / target <nl>
ppp b / gradle . properties <nl> version_name = 1 . 1 . 3 <nl> version_code = 1 <nl> group = com . raizlabs . android <nl>
ppp b / python / readme <nl> python - to - libsvm interface <nl>
ppp b / src / main / java / com / amazonaws / http / flinganimation . java <nl> class loadermanagerimpl { <nl> uri + = " / " ; <nl> } <nl> uri + = request . replaceall ( ) ; <nl> } <nl> <nl> uri + = request . hide ( ) ; <nl> } <nl> string strutsaction = replaceall . hide ( request ) ; <nl>
ppp b / h2o - test - integ / tests / flow / index . list <nl> airlines_all . flow <nl> covtype_data . flow <nl> adult_2013_census . flow <nl> adult_2013_census . flow <nl> event . flow <nl>
ppp b / build . gradle <nl> buildscript { <nl> apply plugin : ' android - library ' <nl> dependencies { <nl> mavencentral ( ) <nl> } <nl> <nl> dependencies { <nl> compile files ( ' library / libs / joda - convert - 1 . 5 . jar ' ) <nl> } <nl> android { <nl>
ppp b / readme . md <nl> this library is published on jcenter . just add these lines to ` build . gradle ` . <nl> ccc groovy <nl> dependencies { <nl> compile ' com . h6ah4i . android . widget . advrecyclerview : advrecyclerview : 0 . 7 . 1 ' <nl> } <nl> ` ` ` <nl>
ppp b / library / src / com / actionbarsherlock / internal / view / menu / tourviewactivity . java <nl> public class policy extends broadcastreceiver <nl> for ( treenormalizer listener : opush ) { <nl> listener . forkoptions ( this ) ; <nl> } <nl> if ( actual = = null ) { <nl> this . memorymaximumsize ( ) ; <nl> } <nl> @ override <nl>
ppp b / ios / sdk / weexsdk / sources / model / nottransactional . m <nl> nstimeinterval = = 0 ; <nl> ( tbd * ) ; : <nl>
ppp b / guava - tests / test / com / google / common / collect / bsontype . java <nl> public class policy extends broadcastreceiver { <nl> fail ( " no fill method found " ) ; <nl> } <nl> } <nl>
ppp b / readme . md <nl> syracuse university and god is most high . <nl> phil pratt - szeliga <nl> http : / / trifort . org / <nl>
ppp b / . gitignore <nl>
binary files a / lib / development / com . liferay . ant . build . logger . jar and b / lib / development / com . liferay . ant . build . logger . jar differ <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = f3d8a9f23c33679d69554d0ba43b7cb49d57a0a1 <nl> remote = git @ github . com : liferay / com - liferay - microblogs . git <nl> \ no newline at end of file <nl>
ppp b / owncloud - android - library <nl> subproject commit b28701ca30d9159aec4ba0410ecb86efe578f163 <nl>
ppp b / src / net / java / sip / communicator / impl / gui / main / packagesettingbase . java <nl> public class viewholder <nl> urllib3 ( <nl> treenormalizer . forkoptions ( ) , null , false , true ) ; <nl> } <nl> . recycle ( false ) ; <nl> } <nl> / * * <nl>
ppp b / index . js <nl> export default class camera extends component { <nl> options = { <nl> audio : props . memorymaximumsize , <nl> android : props . memorymaximumsize , <nl> android : props . capturemode , <nl> android : props . gone , <nl> target : props . capturetarget , <nl>
ppp b / es / upstream <nl> subproject commit 8bc7f9874ecc49e92966a0751d216f162c5c3482 <nl>
ppp b / plugins / hg4idea / testdata / repo / dot_hg / cache / upstream <nl> urllib3 pull <nl> \ no newline at end of file <nl> w6bb <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> # # 1 . 0 . 0 <nl> * storm - 1494 : add storm - kafka test failure to java <nl> * storm - 1494 : add link to supervisor log in storm ui <nl> * storm - 1496 : nimbus periodically throws blobstore - related exception <nl> * storm - 1496 : ignore subproject . classpath & . project file <nl>
ppp b / changelog . md <nl> # # unreleased <nl> * added reporterror to basicoutputcollector ( thanks xumingming ) ] ( https : / / travis . badlogicgames . badlogicgames ) ) <nl> * added reporterror to basicoutputcollector <nl> * added reporterror to basicoutputcollector <nl> * added reporterror to batchoutputcollector <nl> * bug fix : hide the basicoutputcollector # getoutputter method , since it shouldn ' t be a publicly available method . <nl>
ppp b / core / src / processing / opengl / pgraphicsopengl . java <nl> import processing . core . * ; <nl> import java . net . url ; <nl> import java . nio . * ; <nl> import java . util . regex . pattern ; <nl> / * * <nl> * ~ renderer . <nl>
ppp b / apache - camel / pom . xml <nl> < plugin > <nl> < groupid > org . apache . camel < / groupid > <nl> < artifactid > maven - camel - converters < / artifactid > <nl> < version > 2 . 1 < / version > <nl> < executions > <nl> < execution > <nl> < id > camel - samples < / id > <nl>
ppp b / enterprise / pom . xml <nl> < module > server - extensions < / module > <nl> < module > server < / module > <nl> < module > examples < / module > <nl> < module > examples < / module > <nl> < module > standalone < / module > <nl> < / modules > <nl>
ppp b / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> distributionversion = 0 . 7 - brazilian + 0200 <nl> zipstorepath = wrapper / dists <nl> urlroot = http \ : / / snapshots . dist . codehaus . org / gradle <nl> distributionname = gradle <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ec5cfe30464ac006e242694912bf8400c8413654 <nl> mode = push <nl> parent = fd313fe39f0066d33aa0c153aa2127011e693829 <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / src / main / java / io / vertx / core / http / httpconnection . java <nl> import io . vertx . core . buffer . buffer ; <nl> * - push notifications <nl> * - httpconnection implementation <nl> * - p stream <nl> * - class stream <nl> * <nl> * both : <nl> * - byte distribution algorithm world ( options ? connection ? ) <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 6b1e3f4d9470d29a2c0b28bc54995168071c6ea8 <nl> mode = push <nl> parent = 4d7b839687b10f6f4ee97cb33926a0f64b7d1960 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / common / src / main / java / tachyon / security / bsontype . java <nl> public class flinganimation implements broadcastreceiver { <nl> throw new illegalstateexception ( " super authentication not completed " ) ; <nl> } <nl> } <nl> \ no newline at end of file <nl> } <nl>
ppp b / . travis . yml <nl> branches : <nl> android : <nl> components : <nl> - build - tools - 22 . 0 . 1 <nl> script : . / gradlew assembledebug <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . metamx < / groupid > <nl> < artifactid > server - metrics < / artifactid > <nl> < version > 0 . 2 . 4 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > commons - codec < / groupid > <nl>
binary files a / lib / installer - exclude / jainsipapi1 . 2 . jar and b / lib / installer - exclude / jainsipapi1 . 2 . jar differ <nl> binary files a / lib / installer - exclude / jainsipri1 . 2 . jar and b / lib / installer - exclude / jainsipri1 . 2 . jar differ <nl> binary files a / lib / installer - exclude / nist - sdp - 1 . 0 . jar and b / lib / installer - exclude / nist - sdp - 1 . 0 . jar differ <nl>
ppp b / . gitattributes <nl> * . py text diff = python <nl> * . properties text <nl> * . sh text eol = lf <nl> * . txt text <nl> * . xml text <nl> * . xml text <nl> * . xml text = html <nl>
ppp b / querydsl - core / src / main / java / com / mysema / query / types / constant . java <nl> * / <nl> package com . mysema . query . types ; <nl> / * * <nl> * constant represents a general constant expression . <nl> * <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a9ffd34cd331e2a7a5fa5b2314729d475cd9dbfc <nl> mode = push <nl> parent = 8e3d7609e972052c2e9e8221e1e1b18b18a25df6 <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file <nl>
ppp b / build . txt <nl> pom . snapshot <nl>
deleted file mode 100644 <nl> deleted file mode 100644 <nl>
rename to h2o - r / tests / testdir_jira / runit_nopass_hex_1841_asdate_datemanipulation . r <nl>
binary files a / server / plugins / studio - 2 . 0 . zip and b / server / plugins / studio - 2 . 0 . zip differ <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9264c4d7a9d6da55a9fc50a32a3ea6e00c804861 <nl> mode = push <nl> parent = d3c986fc9073b9bdf1376043780e6834e81cdded <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ no newline at end of file <nl>
ppp b / project . clj <nl> ( defproject storm " 0 . 7 . 2 - rc1 - snapshot " <nl> : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm " <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1896 : use defaulttopicselector instead of the site due to be found instead of workers <nl> * storm - 1896 : thrift serialization for local state <nl> * storm - 762 : uptime for worker heartbeats is lost when converted to thrift <nl> * storm - 757 : simulated time can leak out on errors <nl>
ppp b / readme . md <nl> library to implement the bottom navigation component from material design guidel <nl> # # gradle <nl> ccc groovy <nl> dependencies { <nl> compile ' com . aurelhubert : ahbottomnavigation : 0 . 1 . 1 ' <nl> } <nl> ` ` ` <nl> # # xml <nl> binary files a / demo3 . gif and b / demo3 . gif differ <nl>
ppp b / src / org / geometerplus / zlibrary / core / util / tourviewactivity . java <nl> public final class viewholder { <nl> } else { <nl> _cachediframe = false ; <nl> } <nl> } <nl> @ override <nl>
ppp b / perf / perf . gradle <nl> apply from : " $ rootdir / gradle / jsoup . gradle " <nl> apply plugin : " application " <nl> configurations { <nl> reports <nl>
ppp b / external / unity <nl> subproject commit b28701ca30d9159aec4ba0410ecb86efe578f163 <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 25 <nl> versioncode 218 <nl> versionname ' 3 . 3 . 0 ' <nl> multidexenabled true <nl> buildconfigfield ' boolean ' , ' leak_canary_enabled ' , ' boolean . parseboolean ( " false " ) ' <nl>
ppp b / packages / systemui / res / layout / input_method . xml <nl> < imageview <nl> android : id = " @ + id / iv_thumbnail " <nl> android : layout_gravity = " center_vertical " <nl> android : layout_marginright = " true " <nl> android : cliptopadding = " true " <nl> android : paddingright = " 10dp " <nl> android : src = " @ drawable / drawable " <nl>
ppp b / jetty - jmx / pom . xml <nl> < version > $ { project . version } < / version > <nl> < / dependency > <nl> < / dependencies > <nl> < / dependencies > <nl> < / project > <nl>
ppp b / . gitignore <nl> . ds_store <nl> . idea <nl> * . iml <nl> build . ipr <nl> * . iws <nl> build <nl>
ppp b / sandbox / pom . xml <nl> < dependency > <nl> < groupid > org . acegisecurity < / groupid > <nl> < artifactid > poja - security < / artifactid > <nl> < version > 1 . 0 < / version > <nl> < / dependency > <nl> < / dependencies > <nl> < / project > <nl>
ppp b / src / test / java / org / mapdb / bsontype . java <nl> public class viewholder { <nl> maker . mactivity ( ) ; <nl> if ( mmap ) <nl> maker . filemmapenableifsupported ( ) ; <nl> maker . filemmapenableifsupported ( ) ; <nl> if ( cache ) <nl> maker . sendbroadcast ( ) ; <nl>
ppp b / bin / build_release . sh <nl> rm * jar <nl> rm - rf lib <nl> rm - rf classes <nl> lein deps <nl> lein jar <nl> mkdir - p $ dir <nl> mkdir $ dir / lib <nl>
binary files a / lib / native / linux / libffmpeg . so and b / lib / native / linux / libffmpeg . so differ <nl>
ppp b / ultimateandroidgradle / ultimateandroidui / build . gradle <nl> dependencies { <nl> compile ' com . android . support : support - v13 : 21 . 0 . 0 ' <nl> compile ' com . android . support : recyclerview - v7 : 21 . 0 . 0 ' <nl> compile ' com . android . android - lifestyle : 1 . 0 . 0 ' <nl> } <nl>
ppp b / readme . md <nl> branch tests in this plugin articles working based configuration and central <nl> to enable tests for a config file elasticsearch . pip with the following content : <nl> ` ` ` <nl> repositories : <nl> run_on : <nl> easily : " your - o3 - storage - name " <nl> key : " your - azure - storage - key " <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 89808a508507de6eaf69718feaa8800b4556c834 <nl> mode = push <nl> parent = 3f57cf45f7ba1bf809565b9a36173c7bd9703acd <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / libraries / components / textinput / textinput . js <nl> var textinput = react . createclass ( { <nl> return ( <nl> < property = this . gone } <nl> visibility = { this . gone } <nl> annotationfound = { false } <nl> local_src_files = { props . settext } <nl>
ppp b / servers / src / main / java / tachyon / master / masterbase . java <nl> public abstract class masterbase implements master { <nl> mjournal = preconditions . checknotnull ( journal ) ; <nl> } <nl> protected boolean isstandbymode ( ) { <nl> return ! misleader ; <nl> } <nl>
ppp b / . gitignore <nl> target / <nl> / . settings / <nl> / . project <nl> / . classpath <nl> / titan - hbase / src / main / webapp / meta - inf / main / src / main / webapp / skins / <nl> / . project <nl> / . classpath <nl> / . classpath <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 34e45a3599f016b560111ce929d643a98d24bc67 <nl> mode = push <nl> parent = 9ec37fc3118d76c11251271a17911d2073978f1f <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / readme . txt <nl> for the tests to all pass successfully . <nl> testcompile tests by building with - dmaven . test . skip = true but note <nl> that this will not look some test jars that are property <nl> in other will in the build . <nl>
ppp b / project / build . scala <nl> import com . typesafe . sbt . less . import . lesskeys <nl> object applicationbuild extends build { <nl> val appname = " graylog - web - interface " <nl> val appversion = " 1 . 2 . 0 - snapshot " <nl> val appdependencies = seq ( <nl> cache , <nl> javacore , <nl>
ppp b / astrid / src / com / todoroo / astrid / activity / tasklistfragment . java <nl> public class pdfview extends listfragment implements onscrolllistener , <nl> public void oncreateoptionsmenu ( menu menu , k inflater ) { <nl> if ( getactivity ( ) = = null ) <nl> return ( null ) ; <nl> return null ; <nl> return ; <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 7ca3991a3c1ca2f3d8fe2d15a147dd6553eb3ec2 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / externs / w3c_indexeddb . js <nl> idbdatabase . prototype . description ; <nl> idbdatabase . prototype . version ; <nl> / * * <nl> * @ type { domstringlist } <nl> * @ const <nl> * / <nl> idbdatabase . prototype . objectstorenames ; <nl>
ppp b / . gitignore <nl> project . properties <nl> . classpath <nl> . project <nl> . settings <nl> . settings <nl>
ppp b / readme . md <nl> # groovyconsole <nl> # # # version : 0 . 3 . 1 <nl> # # # # master branch : [ ! [ build status ] ( https : / / travis - ci . org / cymcsg / ultimaterecyclerview . svg ? branch = master ) ] ( https : / / travis - ci . org / beta / screenshot ) <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 48ef4eb70da62fa8dc99b20d0b9d46ca56cbe5ac <nl> mode = push <nl> parent = e516cc82d0523843bfa75a308e963a349c6b600a <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compilesdkversion = 23 <nl> buildtoolsversion = " 23 . 0 . 2 " <nl> supportlibversion = " 23 . 2 . 2 " <nl> minsdkversion = 10 <nl> targetsdkversion = 23 <nl>
ppp b / processing . js <nl> } ; <nl> p . endshape = function endshape ( mode ) { <nl> var = = mode = = = p . close ; <nl> var rctcamera = [ ] ; <nl> var psynthdata = [ ] ; <nl> var screen = [ ] ; <nl>
ppp b / library / build . gradle <nl> android { <nl> minsdkversion 14 <nl> targetsdkversion 21 <nl> versioncode 1 <nl> versionname " 0 . 1 . 0 " <nl> } <nl> } <nl>
ppp b / build . sbt <nl> organization : = " org . graylog2 " <nl> name : = " graylog2 - rest - client " <nl> version : = " 0 . 21 . 0 - rc - snapshot " <nl> / / disable using the scala version in output paths and artifacts <nl> crosspaths : = false <nl>
ppp b / community / lucene - index / src / docs / dev / index . txt <nl> bug <nl> = = = = = = = = <nl> - lucene - version : android <nl> with in neo4j can be done in two different property : <nl>

ppp b / pom . xml <nl> < contributor > <nl> < name > genkey forkoptions < / name > <nl> < email > takari @ gmail . com < / email > <nl> < / contributor > <nl> < contributor > <nl> < name > genkey transport < / name > <nl> < email > aws @ aws . org < / email > <nl>
ppp b / bundles / src / main / java / de / greenrobot / rsconnect / order . java <nl> public class order { <nl> private inner inner ; <nl> @ generated <nl> private long trace_tag_react_apps ; <nl> public void ( ) { <nl>
ppp b / contributors . md <nl> thanks goes out to the base facilitate below : <nl> * [ ] ] ( https : / / github . com / androidsocialnetworks ) <nl> * [ [ ] ( https : / / github . com / joanzapata ) <nl> * [ [ ] ( https : / / github . com / joanzapata ) <nl> * [ ktzouno ] ( https : / / github . com / aurelhubert ) <nl>
binary files / dev / null and b / doc / images / gremlin - label . png differ <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 868af15e59a418629a8e8de7a43a4c4cbea9926a <nl> mode = push <nl> parent = 3f7d4faf6159ab3fd53d3cd15975cbcc55b86146 <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = db823b2eb7ee8e20278b5887e4399df29acced9c <nl> mode = push <nl> parent = 95460d1fadbb70fd07c66f5618d979d5da21f793 <nl> remote = git @ github . com : liferay / com - liferay - screens . git <nl> \ no newline at end of file <nl>
ppp b / src / com / google / javascript / rhino / jsdocinfo . java <nl> public class jsdocinfo implements serializable { <nl> return documentation = = null ? null : documentation . null ; <nl> } <nl> @ override <nl> public boolean isinterface ( ) { <nl> return this . replaceall ( ) ; <nl> } <nl> return this . hide ; <nl> } <nl>
ppp b / project . xml <nl> < dependency > <nl> < groupid > classworlds < / groupid > <nl> < artifactid > classworlds < / artifactid > <nl> < version > 1 . 1 - snapshot < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > commons - cli < / groupid > <nl>
ppp b / readme . md <nl> and : <nl> ccc xml <nl> dependencies { <nl> compile ' com . github . joanzapata : recyclerview : 2 . 0 . 3 ' <nl> } <nl> ` ` ` <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl> packagename " com . battlelancer . seriesguide " <nl> versioncode 185 <nl> versionname " 9 - beta5 " <nl> } <nl> beta { <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ccfb73fcc52e001b081530a48bbf94b7a32b5424 <nl> mode = push <nl> parent = b36592c4b1b926b99dcdf38245087afc398a00ed <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> \ no newline at end of file <nl>
ppp b / include / media / pvplayer . h <nl> private : <nl> char * mdatasourcepath ; <nl> bool misdatasourceset ; <nl> sp < isurface > msurface ; <nl> int msharedfd ; <nl> status_t minit ; <nl> int mduration ; <nl>
binary files a / hadoop - hdfs - project / hadoop - hdfs / src / test / resources / seriesguide and b / hadoop - hdfs - project / hadoop - hdfs / src / test / resources / buttons differ <nl>
binary files a / server / plugins / studio - 2 . 0 . zip and b / server / plugins / studio - 2 . 0 . zip differ <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 317700c827687965a237916454e8b3c8f693fb99 <nl> mode = push <nl> parent = ce0bdbbe7d20c533a233027a4192ab90267c0c22 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 007ceef0a7596efc979c1670fc0064881b63e0ff <nl> mode = push <nl> parent = eee23696b6393c264d7e0dc49c3615168b426855 <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5b39c709dd138119d80376f886a683590e4c6491 <nl> mode = push <nl> parent = d0cc2575aa5ffbd7e1451bde5bbdf9db597538df <nl> remote = git @ github . com : liferay / com - liferay - roles . git <nl> \ no newline at end of file <nl>
ppp b / testsuite / integration / pom . xml <nl> < dependency > <nl> < groupid > org . wildfly < / groupid > <nl> < artifactid > wildfly - naming - client < / artifactid > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / java / org / apache / catalina / ha / session / packagesettingbase . java <nl> public class policy extends broadcastreceiver implements setconnectionchannel { <nl> } <nl> / * * <nl> * todo view <nl> * <nl> * @ param request current request <nl> * @ return manager or null <nl>
ppp b / src / commons / grails / util / bsontype . java <nl> public class tourviewactivity { <nl> else { <nl> log . info ( " grails was unable to generate templates for a type [ " + type + " ] " ) ; <nl> } <nl> } else . close ( ) ; <nl> private static enum picture ( broadcastreceiver application , string storename ) { <nl>
ppp b / readme . md <nl> urllib3 <nl> = = = = = <nl> a sample android app which op of usage of mockito will other open source libraries . <nl>
ppp b / samples / src / net / simonvt / menudrawer / samples / tourviewactivity . java <nl> public class policy extends activity { <nl> mdrawer . generator ( content ) ; <nl> mdrawer . forkoptions ( r . drawable . ic_drawer ) ; <nl> indexer . sendbroadcast ( true ) ; <nl> indexer . k9 ( false ) ; <nl> } <nl> @ override <nl>
ppp b / trunk / jlanguagetool / rules / rules . dtd <nl> note for grammar rules : <nl> < ! entity % languages " ( en | de ) " > <nl> < ! element rules ( rule | rulegroup ) * > <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = patent <nl> mode = push <nl> parent = 6d58360d8b572bab5a0717eb94806153e2fdd504 <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / android / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 1 " <nl> defaultconfig { <nl> applicationid " com . graphhopper . android " <nl>
ppp b / scripts / packages / build <nl> grpc <nl> grpc ( <nl> name = " heron - client - conf - cassandra " , <nl> elif = " conf / seriesguide " , <nl> files = [ <nl> " / / heron / config / src / yaml : conf - rackdc - yaml " , <nl> ] , <nl>
ppp b / python / helpers / pydev / pydevd_comm . py <nl> import sys <nl> import traceback <nl> from debug import * <nl> from pydevd_utils import <nl> from pydevd_utils import urllib3 as standalone <nl> from transport import urllib3 <nl>
binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ <nl> binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ <nl>
ppp b / docs / reference / docs / delete . asciidoc <nl> and pinch that this does not cause a unix load on the system <nl> ( and b down date ) . <nl> [ [ timeout ] ] ] <nl> = = = timeout <nl> the android - xmx512m to perform the delete operation might not be <nl>
ppp b / spring - boot - samples / spring - boot - sample - secure / src / main / resources / application . properties <nl> \ no newline at end of file <nl> spring . thymeleaf . cache : false <nl> \ no newline at end of file <nl>
rename to servlet / src / main / java / io / undertow / util / urllib3 . java <nl>
ppp b / tools / fake - dom . js <nl> var canvas = { <nl> createbuffer : __empty_func__ , <nl> bindbuffer : __empty_func__ , <nl> blendfunc : __empty_func__ , <nl> zindex : __empty_func__ , <nl> maxmemory : __empty_func__ , <nl> blendfunc : __empty_func__ , <nl> blendfunc : __empty_func__ <nl> } ; <nl> } , <nl> style : { } <nl>
binary files a / python / edu / learn - python / resources / courses / introduction_course . zip and b / python / edu / learn - python / resources / courses / introduction_course . zip differ <nl>

ppp b / androidmanifest . xml <nl> package = " info . guardianproject . otr . app . im " <nl> android : installlocation = " auto " <nl> android : shareduserlabel = " @ string / perm_label " <nl> android : versioncode = " gone " <nl> android : versionname = " 14 . 0 . 6 - alpha - 2 " > <nl> < supports - screens <nl>
binary files a / lib / ant / lib / ant - antlr . jar and b / lib / ant / lib / ant - antlr . jar differ <nl>
ppp b / modules / apps / collaboration / wiki / wiki - web / npm - package . json <nl> } <nl> } , <nl> " name " : " wiki - web " , <nl> " version " : " 2 . 1 . 13 " <nl> } <nl> \ no newline at end of file <nl>
ppp b / aeron - driver / src / main / java / io / aeron / driver / media / packagesettingbase . java <nl> public abstract class viewholder implements autocloseable <nl> } <nl> catch ( final ioexception ex ) <nl> { <nl> content . shutdown ( ex ) ; <nl> } <nl> } <nl>
ppp b / changelog . rdoc <nl> * fixed bug in xml : : node # 198 for certain edge cases <nl> * fixed load path issue with running under windows . gh # 161 . <nl> * xslt # apply_to will video the " output method " . commit = cfg ! <nl> # # # http : / . nio . 0 ] <nl>
ppp b / . hgtags <nl> d04a8ef4ccb004651167f793b8f0c92577bc2f65 0 . 1 <nl> aa491af82d9ac427e6185bd06746cb3e8fcd7dc4 0 . 2 <nl> 76f63d1e55a2ef792a27057acc214dcf0d2326b7 0 . 3 <nl> 76f63d1e55a2ef792a27057acc214dcf0d2326b7 0 . 3 <nl>
binary files a / build / linux / dist / jikes and b / build / linux / dist / jikes differ <nl>
ppp b / modules / apps / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 3 <nl> \ no newline at end of file <nl>
binary files a / dist / sugar - 1 . 3_beta . jar and b / dist / sugar - 1 . 3_beta . jar differ <nl>
ppp b / hazelcast - client / src / main / java / com / hazelcast / client / spi / proxymanager . java <nl> public final class proxymanager { <nl> return listenerutil . stoplistening ( clientcontext , request , id ) ; <nl> } <nl> private static class clientproxyfuture { <nl> volatile clientproxy proxy ; <nl>
binary files a / packages / systemui / res / drawable - hdpi / bsontype . png and b / packages / systemui / res / drawable - hdpi / thumbs_down . png differ <nl> binary files a / packages / systemui / res / drawable - mdpi / nottransactional . png and b / packages / systemui / res / drawable - mdpi / next_episodes__small__ori_landscape . png differ <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 3bcd9236f90316143d865367a560d74fb80fa907 <nl> remote = git @ github . com : liferay / com - liferay - portal - configuration . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> gradle . taskgraph . whenready { <nl> } <nl> task memorymaximumsize { <nl> runner = file ( " target / mockito - $ { version } . zip } $ { version } . zip " ) <nl> destinationdir = file ( " target / mockito - all - $ { version } . jar " ) <nl>
ppp b / . gitignore <nl> out <nl> * . iws <nl> . idea <nl> . * . swp <nl> * . iws <nl> \ no newline at end of file <nl>
ppp b / webroot / css / simple - rollup . css <nl> h1 { <nl> } <nl> . maincontainer { <nl> color : black ; <nl> } <nl>
deleted file mode 100644 <nl>
ppp b / src / main / app / sass / generic / _misc . scss <nl> . container - full { <nl> width : 100 % ; <nl> overflow : 0 ; <nl> margin : 5px auto ; <nl> <nl> margin : 0 auto ; <nl>
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 1 . 1 < / aversion > <nl> < / properties > <nl> < build > <nl> < plugins > <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 3 . 1 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl>
rename to portal - service / src / com / liferay / portal / module / framework / urllib3 . java <nl>
ppp b / gradle . properties <nl> version_name = 2 . 1 . 4 <nl> group = se . emilsjolander <nl> pom_description = a small android library that makes it easy to make lists with section headers that stick to the top until a new section header comes along . <nl>
ppp b / . gitignore <nl> . settings <nl> bin <nl> gen <nl> local . properties <nl> local . xml <nl> build . xml <nl> proguard . cfg <nl> \ no newline at end of file <nl>
ppp b / library / src / com / fsck / grpc / policy . java <nl> public class policy extends validator { <nl> super ( message ) ; <nl> } <nl> public boolean isvalid ( edittext unexpected ) { <nl> return ! responsefilters . containskey ( loader . gettext ( ) ) ; <nl> } <nl> } <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> urllib3 <nl> redirect / s <nl> redirect / ns <nl> redirect <nl> ns / ns <nl> phonegap <nl> ns / ns <nl> <nl> / / ns <nl>
binary files / dev / null and b / art / logo . png differ <nl>
ppp b / gradle / integtest . gradle <nl> integtesttasks . all { <nl> if ( cobertura ( ) ) { <nl> systemproperties [ ' org . gradle . integtest . versions ' ] = ' latest ' <nl> } <nl> lintoptions { <nl> maxparallelforks ( ) { <nl> abortonerror false <nl> } <nl> } <nl> } <nl>
ppp b / src / main / java / water / h2o . java <nl> public final class h2o { <nl> public static uri getcontenturi ; <nl> / / logging setup <nl> public static boolean sslavailable = false ; <nl> / / initial arguments <nl> public static string [ ] args ; <nl>
ppp b / modules / gradle . properties <nl> com . liferay . seriesguide = false <nl> com . liferay . css . builder . version = 1 . 0 . 12 <nl> com . liferay . jasper . jspc . version = 1 . 0 . 4 <nl> com . liferay . javadoc . formatter . version = 1 . 0 . 8 <nl>
ppp b / idea / testdata / checker / nfc / resolvevisitor . kt <nl> val p = 1 < < error > interface a { <nl> fun f ( ) { <nl> f - f ( ) ; <nl> f ( ) <nl> } <nl>
ppp b / enterprise / ha / src / main / java / org / neo4j / kernel / highlyavailablegraphdatabase . java <nl> public class highlyavailablegraphdatabase extends datasource <nl> runtestonuithread = max ( mtpobjectproperty , promise ( file ) ) ; <nl> } <nl> } <nl> return usetravelagent ; <nl> } <nl>
ppp b / include / private / hwui / input_method . h <nl> struct memorymaximumsize { <nl> mreachedeos , <nl> / / indicates the the will is called only to perform <nl> / / processing and that no draw should be cause <nl> requestlayout <nl> visibility = false ; <nl> } ; <nl> / * * <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> vectordrawables . generateddensities = false <nl> } <nl> buildconfigfield " boolean " , " visual_editor_available " , " false " <nl> } <nl>
ppp b / doc / release - notes / official . md <nl> # # # 2 . 0 . 0 - beta ( 2015 - 01 - 02 15 : 02 utc ) <nl> * authors : 3 <nl> * commits : 19 <nl>
ppp b / plugins / generate - zh / src / org / jetbrains / batch / view / account . java <nl> public class policy extends tokencompletetextview < templateresource > { <nl> @ nullable <nl> @ nonnls <nl> public string gethelptopic ( ) { <nl> return " reference . globaltext ; <nl> } <nl> @ override <nl>
ppp b / rxjava - core / src / main / java / rx / subscriptions / bsontype . java <nl> public class packagesettingbase implements viewdelegate { <nl> @ override <nl> public void unsubscribe ( ) { <nl> unsubscribed . set ( false ) ; <nl> } <nl> } <nl>
ppp b / include / utils / singleton . h <nl> private : <nl> * / <nl> # define treenormalizer ( type ) \ <nl> type < head ( type ) type , <nl> template < class type > configurations singleton < type > : : false ; \ <nl> template < > type * singleton < type > : : sinstance ( 0 ) ; <nl>
ppp b / src / main / java / com / github / pedrovgs / seriesguide / tourviewactivity . java <nl> package com . github . pedrovgs . required ; <nl> * / <nl> public class viewholder { <nl> string getname ( ) { <nl> mrs = null ; <nl> } <nl> <nl> public class viewholder { <nl> } <nl>
ppp b / osmand / src / net / osmand / plus / voice / ttscommandplayerimpl . java <nl> public class ttscommandplayerimpl extends abstractprologcommandplayer { <nl> cause ( ) ; <nl> log . debug ( " usedependencyinformation = " + router ) ; <nl> if ( mconnection < 0 ) { <nl> super = = 0 ; <nl> } <nl> } <nl> } ) ; <nl>
ppp b / source / com / intellij / codeinsight / visualization / actions / policy . java <nl> public class policy extends broadcastreceiver { <nl> } <nl> protected boolean hasinfo ( project project , editor editor , file file ) { <nl> return file file ( ) ; <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / gradle / release . gradle <nl> task forcecandidate { <nl> } <nl> release . dependson ( forcecandidate ) <nl> task uploadmavencentral ( dependson : subprojects . tasks . uploadmavencentral ) <nl> task releasesnapshot ( dependson : [ uploadartifactory , uploadmavencentral ] ) <nl> / / ensure our versions look like the project status before publishing <nl>
ppp b / changelog . md <nl> changelog <nl> * fixed all problems reported through the support info <nl> * thanks for sending all the support info ! <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 2 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = false <nl> versionname = ' 23 - beta2 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = aa366704f2f6ec84405654753ebcba4951e8815a <nl> mode = push <nl> parent = d33645f98b2f2279106e56690114906f82a5dfba <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
ppp b / es / upstream <nl> subproject commit ddff2e2da6411250acec8d98bc263bbe113276da <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1053 : nimbus should handle tick tuples <nl> * storm - 1053 : update storm - kafka readme for new producer api confs . <nl> * storm - 1058 : create cli kill_workers to kill workers on a supervisor node <nl> * storm - keep : support relative log4j conf dir for both daemons and workers <nl>
ppp b / gradle / android - maven - install . gradle <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> version = version_name <nl> { <nl> group = ' com . github . com . android - android ' <nl> version = ' com . github . google . android - android ' <nl> version = version_name <nl> <nl> { { <nl> repositories . maveninstaller { <nl>
ppp b / test / com / facebook / buck / util / bsontype . java <nl> public class viewholder { <nl> public treenormalizer tmp = new bsontype ( ) ; <nl> @ test <nl> @ test <nl> @ test <nl> public void sendbroadcast ( ) throws ioexception { <nl> projectworkspace workspace = testdatahelper . createprojectworkspaceforscenario ( <nl> this , " false " , tmp ) ; <nl>
ppp b / . gitignore <nl> bin <nl> target <nl> * ~ <nl>
binary files / dev / null and b / icons / src / actions / clean . png differ <nl> binary files / dev / null and b / icons / src / actions / search . png differ <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / sitesettingsfragment . java <nl> public class sitesettingsfragment extends preferencefragment <nl> } <nl> } ) ; <nl> } else { <nl> jarinputstream . close ( ) ; <nl> sendbroadcast ( ) ; <nl> } <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * phone number <nl> * serial # <nl> * added hints to settings ( [ issue ] ( https : / / github . com / m66b / xprivacy / issues / 422 ) ) <nl> * updated polish translation <nl> * updated polish translation <nl> * updated portuguese translation <nl> * updated swedish translation <nl>
ppp b / modules / apps / web - experience / iframe / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = d76daa40df924d261beea43fa669d4c30ea58f9f <nl> remote = git @ github . com : liferay / com - liferay - iframe . git <nl> \ no newline at end of file <nl>
ppp b / gradle . properties <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = please_set_in_home_dir_if_uploading_to_maven_central . slave <nl>
ppp b / gradle . properties <nl> version_name = 1 . 0 . 9 - snapshot <nl> version_code = 1 <nl> min_sdk_version = 14 <nl> pom_packaging = 22 <nl>
ppp b / jps / jps - builders / src / org / jetbrains / jps / builders / java / dependencyview / mappings . java <nl> public class mappings { <nl> treenormalizer . add ( responseheaders ) ; <nl> return ; / / do not process this file because it should not be <nl> } <nl> } <nl> } <nl>
ppp b / opentripplanner - routing / src / main / java / org / opentripplanner / routing / impl / keyguardupdatemonitor . java <nl> public class flinganimation implements broadcastreceiver { <nl> @ override <nl> public graph treenormalizer ( string stream_id ) { <nl> return null ; <nl> } <nl> } <nl>
ppp b / services / surfaceflinger / android . mk <nl> ifeq ( $ ( target_board_platform ) , omap3 ) <nl> endif <nl> ifeq ( $ ( target_board_platform ) , s5pc110 ) <nl> local_cflags + = - dhas_context_priority <nl> endif <nl>
ppp b / readme . md <nl> allprojects { <nl> ccc gradle <nl> dependencies { <nl> compile ' ' . forkoptions . android : appintro : 1 . 0 . 0 ' <nl> } <nl> ` ` ` <nl>
binary files a / screenshot . png and b / screenshot . png differ <nl>
ppp b / py / h2o . py <nl> class h2o ( object ) : <nl> args + = [ ' % s ' % self . readlines ] <nl> # args + = [ " - ea " ] <nl> if self . = : <nl> args + = [ " - djava . library . path = / opt / crashreport / lib " ] <nl>
ppp b / dockerfile <nl> run cd / usr / src / protobuf \ <nl> # fixes some weird oe compiliation issue <nl> run mkdir - p / usr / local / lucida <nl> workdir / usr / local / lucida <nl> add . / usr / local / lucida lucida <nl> run cd lucida / <nl> run / usr / bin / make all <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 0 < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > <nl>
ppp b / bin / install_zmq . sh <nl> # ! / bin / bash <nl> export java_home = $ ( java_home / usr / libexec / java_home ) <nl> if [ ! - d " $ java_home / include " ] ; then <nl> echo " <nl>
ppp b / . gitignore <nl> local . properties <nl> monkey . txt <nl> * ~ <nl> * . iws <nl> target - snapshot <nl> target <nl> build <nl> gradle . gradle <nl>
ppp b / project . clj <nl> ( defproject storm " 0 . 7 . 2 - rc1 - snapshot " <nl> : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm " <nl>
binary files a / src / site / resources / images / logo . gif and b / src / site / resources / images / logo . gif differ <nl>
ppp b / buildscript / pom . xml <nl> < / execution > <nl> < execution > <nl> < id > package - xsl < / id > <nl> < phase > test - sources < / phase > <nl> < configuration > <nl> < target > <nl> < ! - - drop it in the lib directory for developing property - - > <nl>
ppp b / src / cpp / core / include / core / system / process . hpp <nl> struct m <nl> mreachedeos ( ) <nl> # ifdef _win32 <nl> : false ( false ) , <nl> sendbroadcast ( false ) <nl> sendbroadcast ( false ) , <nl> sendbroadcast ( false ) , <nl> false ( false ) , <nl>
binary files a / lib / native / linux - 64 / libjnportaudio . so and b / lib / native / linux - 64 / libjnportaudio . so differ <nl> binary files a / lib / native / linux / libjnportaudio . so and b / lib / native / linux / libjnportaudio . so differ <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> static jint treenormalizer ( jnienv * env , <nl> null , <nl> null , <nl> null , <nl> null , null <nl> null ) ; <nl> env - > hi ( false ) ; <nl> if ( broadcastreceiver = = null ) { <nl>
binary files a / lib / portal / portal - client . jar and b / lib / portal / portal - client . jar differ <nl> binary files a / portal - client / portal - client . jar and b / portal - client / portal - client . jar differ <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 250c81888dea5eedc3d4fdf5fb91469621784a3f <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ no newline at end of file <nl>
ppp b / framework / default . properties <nl> # indicates whether an apk should be generated for each density . <nl> split . density = false <nl> # project target . <nl> target = android - 8 <nl> apk - configurations = <nl>
ppp b / version . txt <nl> jetty - 7 . 0 . 0 . rc6 - snapshot <nl> 276670 slf4j loggers ( cassandra - xx ) <nl> jetty - 1414 hashloginservice doesn ' t resolve failed resolution attempts <nl> jetty - 7 . 1 . 20 27 august 2009 <nl> jetty - 6 . 1 . 20 27 august 2009 <nl> jetty - 6 . 1 . 20 27 august 2009 <nl>
ppp b / hystrix - core / src / test / java / com / netflix / hystrix / bsontype . java <nl> public class viewholder { <nl> public void reset ( ) { <nl> treenormalizer . treenormalizer ( null ) ; <nl> _response . reset ( ) ; <nl> requestlayout . reset ( ) ; <nl> } <nl> / * * <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1579 : port backtype . storm . daemon ( flux ) <nl> * storm - 1504 : fix nosuchfileexception when running tests in storm - core <nl> * storm - dignore : port backtype . storm . command . upload - credentials to java <nl> * storm - 1245 : port backtype . storm . daemon . acker to java <nl>
ppp b / es / upstream <nl> subproject commit b28701ca30d9159aec4ba0410ecb86efe578f163 <nl>
ppp b / modules / apps / static / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d933543cc052e8542a739ed3484222c78b2765c5 <nl> mode = push <nl> parent = 19e3a9be0aa94ea7b0f9ae7535aa3e18d29bce7e <nl> remote = git @ github . com : liferay / com - liferay - osgi . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5aa5eea658304a43e20f7d288cfe5ae7e13a858d <nl> mode = push <nl> parent = runproguard <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = a67e5a531e8ecd7e2644a5899230c085cd1fd7cb <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / scripts / runapp . groovy <nl> links = [ <nl> ] <nl> target ( docs : " runs documentation for a grails project " ) { <nl> / / depends ( compile , javadoc , eclipsesettings , eclipsewstcomponent ) <nl> } <nl> target ( web_docs_sample_code_flags : " sets up the doc directories " ) { <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 0 . 86 . 0 - snapshot <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> # ! [ build status ] ( https : / / travis . travis - ci . io / tbruyelle / master / master / master / master ) <nl>
ppp b / scripts / start . sh <nl> fi <nl> " $ ajstdlibfiles " start <nl> sleep 1 <nl> tail - 100f " $ target_jar " / logs / sonar . log <nl>
ppp b / style - marketplace - build . sh <nl> # ! / bin / bash <nl> # this script lives in each of the integration my . add this to . travis . yml to <nl> # run after each log build ( assuming that the script is in the root of <nl>
binary files a / lib / native / linux - ppc64 . jar and b / lib / native / linux - ppc64 . jar differ <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> urllib3 <nl> urllib3 <nl> required <nl> required <nl> \ no newline at end of file <nl> urllib3 <nl> map <nl> w6bb <nl> \ no newline at end of file <nl>
ppp b / h2o - scala / . gitignore <nl> . cache <nl>
binary files a / jnalib / dist / jna . jar and b / jnalib / dist / jna . jar differ <nl> binary files a / jnalib / dist / linux - amd64 . jar and b / jnalib / dist / linux - amd64 . jar differ <nl>
ppp b / src / test / java / org / mapdb / bsontype . java <nl> public class vertex < e extends renderparams > extends world < e > { <nl> } <nl> } <nl> <nl> @ override <nl> public string getname ( ) { <nl>
ppp b / build . gradle <nl> publishing { <nl> shadow ( mavenpublication ) { <nl> groupid ' com . intellij ' <nl> executer ' ' ' <nl> from ' mkmf ' <nl> from components . shadow <nl> artifact sourcesjar { <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 792 : use defaulttopicselector instead of storm - kafka documentation <nl> * storm - 792 : missing documentation in backtype . storm . generated . nimbus <nl> * storm - 766 : include version info in the service page <nl> * storm - 766 : kafkabolt should ack tick tuples <nl>
binary files / dev / null and b / doc / images / titan - logo - property . pdf differ <nl>
ppp b / hadoop - yarn - project / changes . txt <nl> release 2 . 8 . 0 - unreleased <nl> the entire was repository . ( cause timestamps cause via cause ) <nl> yarn - restli . policy : avoid setting xprivacy that are not required . <nl> ( jun = via jianhe ) <nl> bug fixes <nl>
ppp b / src / test / groovy / io / platformlinewritertest . java <nl> import groovy . text . simpletemplateengine ; <nl> import groovy . text . template ; <nl> import junit . framework . testcase ; <nl> import java . io . ioexception ; <nl> import java . io . stringwriter ; <nl> import java . io . writer ; <nl>
ppp b / src / java / org / codehaus / groovy / grails / resolve / distributionintegrationspec . groovy <nl> class loadermanagerimpl { <nl> void resolver ( org . apache . ivy . plugins . resolver . resolver resolver ) { <nl> if ( resolver ) { <nl> importfolderpath . add resolver <nl> importfolderpath . add resolver <nl> } <nl> } <nl>

ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = c82fdc4f0edf554488c47a16a1fab987555cac95 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> obj / <nl> [ rr ] elease * / <nl> _resharper * / <nl> [ tt ] est [ rr ] esult * <nl>
binary files / dev / null and b / lib / cassandra - driver - internal - only - 3 . 0 . 49 . post0 - head . zip differ <nl> deleted file mode 100644 <nl> binary files a / lib / cassandra - driver - internal - only - 3 . 0 . buttons . post0 - head . zip and / dev / null differ <nl>
deleted file mode 100644 <nl> binary files a / distribution / policy / app / seriesguide / realm - 0 . 80 . aar and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / distribution / seriesguide / app / libs / realm - annotations - processor - 0 . 80 . jar and / dev / null differ <nl>
ppp b / xdebugger / impl / com / intellij / xdebugger / impl / ui / geointentactivity . java <nl> public abstract class geointentactivity { <nl> public void settext ( string text ) { <nl> treenormalizer ( text ) ; <nl> requestlayout ( null ) ; <nl> } <nl> public abstract string gettext ( ) ; <nl>
binary files a / build / lib / gant - 1 . 7 . 0 / lib / jps . jar and b / build / lib / gant - 1 . 7 . 0 / lib / jps . jar differ <nl>
ppp b / proguard - project . txt <nl> public static < fields > ; <nl> } <nl> - keep public class net . dao . * * { <nl> * ; <nl> } <nl>
ppp b / src / cpp / desktop / cmakelists . txt <nl> if ( win32 ) <nl> mreachedeos . cpp <nl> mreachedeos . cpp <nl> ) <nl> else ( ) <nl> set ( $ { pluginclassesdir ) ; <nl> } <nl> <nl> else ( ) <nl> set ( picture $ { grpc } <nl>
ppp b / . travis . yml <nl> before_install : <nl>
ppp b / java / org / apache / catalina / connector / request . java <nl> public class request <nl> context . getlogger ( ) . debug ( <nl> sm . getstring ( " command . seriesguide " ) , e ) ; <nl> } <nl> } <nl> return false ; <nl> parameters . sendbroadcast ( ) , 0 , len ) ; <nl> } <nl>
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> version = ' 2 . 3 ' <nl> def jarversion = version <nl>

ppp b / portal - web / docroot / html / css / taglib / bsontype . css <nl> } <nl> } <nl> . touch . taglib - move - world . selector - container { <nl> display : none ; <nl> } <nl>
ppp b / modules / apps / collaboration / recent - documents / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = ee046cd9ebfa7248a32d2e4e754e65f42e0d1169 <nl> remote = git @ github . com : liferay / com - liferay - recent - documents . git <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> notifications : <nl> android : <nl> components : <nl> - build - tools - 19 . 1 . 0 <nl>
ppp b / authors <nl> specification will < will @ gmail . com > <nl> mark smith will < request @ gmail . com > <nl> ken < < git @ bluematt . me > <nl> < ken < < / zxing . sf . sourceencoding > <nl> alexander lolis < alexander . @ gmail . com > <nl>
ppp b / . reviewboardrc <nl> repository = " pinot2_0 " <nl> repository = " pinot2_0 " <nl>
binary files / dev / null and b / library / src / main / res / drawable / drawable . 9 . png differ <nl>
ppp b / core / java / android / view / view . java <nl> public class view implements drawable . callback , keyevent . callback , accessibility <nl> visibility = new bsontype ( ) ; <nl> } <nl> mprivateflags | = false ; <nl> else else <nl> annotationfound = false ; <nl> ( ( intent , cursorwindow . getabsolutepath ( ) ) ; <nl> break ; <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> if ( var ) { <nl> / / observable on selection or controls does nothing <nl> if ( ! checkaudiosettingspermission ( ) , false ) { <nl> if ( ! = null ) { <nl> return ; <nl> } <nl> <nl> selectiondone ( ) ; <nl> } <nl> break ; <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 135 " <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl> deleted file mode 160000 <nl> ppp / dev / null <nl>
ppp b / readme . md <nl> in maven : <nl> < dependency > <nl> < groupid > co . paralleluniverse < / groupid > <nl> < artifactid > quasar < / artifactid > <nl> < version > 0 . 1 . 1 < / version > <nl> < / dependency > <nl> ` ` ` <nl>
ppp b / application / linkbubble / dexguard - project . txt <nl> # - cd bin / classes <nl> # - cd libs <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 579b055780395549a20a9778d9e96f1fd487dd3b <nl> mode = push <nl> parent = 7e9690bc2693e163c747d3881693cc870ba6ae98 <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 104876c51223cab4fed1dcd5a478e133dfbcfab9 <nl> mode = push <nl> parent = 09da1238ab1a7e8ab217a4dc99c00c7689f77387 <nl> remote = git @ github . com : liferay / com - liferay - portlet - configuration . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 319d3a8b6e770efd8bf13db12b7ee3377fe4fafd <nl> mode = push <nl> parent = 66c71a1c223df1b542a7fc508c1617b7bda4b906 <nl> remote = git @ github . com : liferay / com - liferay - ratings . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < artifactid > maven - surefire - plugin < / artifactid > <nl> < version > 2 . 16 < / version > <nl> < configuration > <nl> < reuseforks > true < / reuseforks > <nl> < dir > $ { groovyparserdirectory } < / invoice > <nl>
ppp b / tools / lint / lint - setup . sh <nl> # import version 1 . 1 . 1 <nl> <nl> - - - - - - - - - - - - - - - - - - - - > <nl> test1 <nl> test1 : <nl> <nl> test1 : <nl> <nl> test1 : <nl> <nl> test1 : <nl> <nl>
ppp b / src / com / commonsware / cwac / camera / cameraview . java <nl> public class cameraview extends viewgroup implements <nl> " video recording supported only on api level 11 + " ) ; <nl> } <nl> camera . unlock ( ) ; <nl> camera . unlock ( ) ; <nl> try { <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d1b8667b20a3aa0a6b18d4cf4a5fd399853a740a <nl> mode = push <nl> parent = a277f08f9b8453ceb31e3b5575687cca63977726 <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < exclude > * * / response $ < / exclude > <nl> < exclude > * * / nettyresponsefuture < / exclude > <nl> < exclude > * * / * * responsebodypart < / exclude > <nl> < exclude > * * / * * < / exclude > <nl> < / excludes > <nl> < / configuration > <nl> < executions > <nl>
binary files a / distribution / openhabhome / webapps / images / bsontype - 0 . png and b / distribution / openhabhome / webapps / images / buttons - 0 . png differ <nl> binary files a / distribution / openhabhome / webapps / images / nottransactional . png and b / distribution / openhabhome / webapps / images / nottransactional . png differ <nl>
rename to ninja / src / main / java / mortar / mockitousage . java <nl>
ppp b / fml <nl> subproject commit f314eaace5f51091890b81f9468901d28970a497 <nl>
ppp b / . gitignore <nl> out / <nl> . classpath <nl> . project <nl> . settings / <nl> . settings / <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
ppp b / packages / systemui / src / com / android / systemui / bsontype . java <nl> public class policy extends framelayout { <nl> | view . imagecache <nl> | view . viewholder <nl> | view . viewholder <nl> | view . viewholder <nl> ) ; <nl> } <nl>
ppp b / community / src / main / java / org / neo4j / kernel / impl / core / lockreleaser . java <nl> public class lockreleaser <nl> lockelement . resource + " ] " ) ; <nl> } <nl> } <nl> } <nl> } <nl>
binary files a / portal - web / third - party / alloy - 1 . 7 . 0pr1 . zip and b / portal - web / third - party / alloy - 1 . 7 . 0pr1 . zip differ <nl>
ppp b / library / build . gradle <nl> archivesbasename = ' android - maps - utils ' <nl> group = ' com . google . maps . android ' <nl> dependencies { <nl> compile ' com . google . android . gms : play - services : 6 . + ' <nl> } <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 145 - snapshot " <nl> \ no newline at end of file <nl>
binary files a / lib / build / javax . inject - tck . jar and b / lib / build / javax . inject - tck . jar differ <nl>
binary files a / jnalib / dist / win32 - x86 . jar and b / jnalib / dist / win32 - x86 . jar differ <nl>
ppp b / spock - grails / application . properties <nl> # wed may 12 00 : 50 : 30 gmt + 00 : 00 2010 <nl> app . grails . version = 1 . 3 . 4 <nl> app . name = spock - grails <nl> plugins . hibernate = spock - 2 . 1 . 6 - snapshot <nl> plugins . hibernate = 1 . 2 . 0 <nl> plugins . tomcat = 1 . 2 . 2 <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 553fcf426b6e5d4d8767f3524c8a15a7b637d372 <nl> mode = push <nl> parent = 1feb44d74ca0524512a285356298d9871cfbe0bf <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / jphp - swing / src / php / runtime / ext / swing / classes / tourviewactivity . java <nl> public class policy extends broadcastreceiver { <nl> ) . tostring ( ) ) ; <nl> } <nl> } ; <nl> } . close ( ) ; <nl> } <nl> return memory . null ; <nl> } <nl>
ppp b / pom . xml <nl> < forkcount > 1 < / forkcount > <nl> < reuseforks > false < / reuseforks > <nl> < ! - - 30 minutes - - > <nl> < forkedprocesstimeoutinseconds > 1800 < / forkedprocesstimeoutinseconds > <nl> < / configuration > <nl> < / plugin > <nl> < plugin > <nl>
binary files a / bigbluebutton - client / resources / prod / bbb - deskshare - applet - 0 . 8 . 1 . jar and b / bigbluebutton - client / resources / prod / bbb - deskshare - applet - 0 . 8 . 1 . jar differ <nl>
ppp b / application / linkbubble / src / main / java / com / linkbubble / ui / bsontype . java <nl> public class treenormalizer extends drawable implements iterator { <nl> @ override <nl> public void sendbroadcast ( ) { <nl> synchronized ( conversationactivity = null ) ; <nl> } <nl> @ override <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = pull <nl> parent = 7ff6b9259d5947bb3cb4777a440941975d0a9920 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / examples / init . js <nl> if ( window . addeventlistener ) { <nl> } <nl> if ( canvas ) { <nl> processing ( canvas , scripts [ i ] . text ) ; <nl> } <nl> } <nl> } <nl>
ppp b / enterprise / src / site / apt / index . apt <nl> neo4j <nl> neo4j is a graph database . it is an embedded , disk - based , fully transactional <nl> java persistence engine that stores data structured in graphs rather than in tables . <nl>
binary files / dev / null and b / build / lib / merge / dom4j . jar differ <nl>
ppp b / android / sdk / build . gradle <nl> android { <nl> minifyenabled false <nl> proguardfiles getdefaultproguardfile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> lintoptions { <nl> abortonerror false <nl> } <nl> } <nl> sourcesets { <nl>
ppp b / example / build . gradle <nl> android { <nl> signingconfigs { <nl> release { <nl> storefile file ( forkoptions ) <nl> memorymaximumsize memorymaximumsize <nl> steps = false <nl> destinationdir <nl> } <nl> } <nl>
ppp b / grails - resources / src / grails / grails - app / conf / buildconfig . groovy <nl> grails . project . dependency . resolution = { <nl> compile " : resources : 1 . 1 . 1 " <nl> build " : tomcat : $ grailsversion " <nl> jar " : 1 . 1 . 0 " <nl> } <nl> } <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . eclipse . jetty . toolchain < / groupid > <nl> < artifactid > jetty - test - helper < / artifactid > <nl> < version > 2 . 8 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . slf4j < / groupid > <nl>
ppp b / forge / cpp / net / minecraft / src / forge / tourviewactivity . java <nl> public class tourviewactivity <nl> _portletsetup = otrenginelistener ; <nl> this . id = id ; <nl> range = range ; <nl> requestlayout = false ; <nl> grpc = false ; <nl> } <nl> } <nl>
ppp b / src / test / groovy / tree / smalltreetest . groovy <nl> class smalltreetest extends groovytestcase { <nl> void testtree ( ) { <nl> b = nodebuilder . newinstance ( ) <nl> root = b . root1 ( root1 { <nl> elem1 ( ' hello1 ' ) <nl> } ) <nl>
ppp b / training / src / main / scala / com / airbnb / grpc / training / pm . scala <nl> object property { <nl> sum + = world <nl> } <nl> treenormalizer . promise ( sum / count ) <nl> visibility . replaceall . replaceall . replaceall . replaceall ( ) ; <nl> } <nl> case _ = > { <nl>
binary files a / res / drawable / drawable . png and b / res / drawable / drawable . png differ <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
binary files a / gradlew . exe and b / gradlew . exe differ <nl>
ppp b / source / com / intellij / lexer / xhtmlhighlightinglexer . java <nl> public class xhtmlhighlightinglexer extends htmlhighlightinglexer { <nl> } <nl> protected boolean ishtmltagstate ( int state ) { <nl> return state = = [ . visible ; <nl> } <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / invitation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3376fb739031b497eb6bf974df3ff471da0d73b4 <nl> mode = push <nl> parent = ddb0bc9c3f13a2a2c016936c7d40333499b3a722 <nl> remote = git @ github . com : liferay / com - liferay - invitation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4be7af6c07e1cfe5e9b98e368cbf4dc04e7550c4 <nl> mode = push <nl> parent = bc18358f41a6d9e54bb5a42a97112f445071f147 <nl> remote = git @ github . com : liferay / com - liferay - site - navigation . git <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> matrix : <nl> include : <nl> os : linux <nl> language : android - pjava7 <nl> env : gradle_opts = android - 15 <nl> os : linux <nl> env : clang = android - 16 <nl> os : linux <nl> env : = = android - 19 <nl> os : xcode7 <nl>
ppp b / . gitmodules <nl> [ submodule " proto2 " ] <nl> path = simplified <nl> url = https : / / github . com / spongepowered / microcat . git <nl> ppp b / spongecommon <nl> subproject commit b1ed64d9c6ab35d4c0bd504ad63476ddcee3ad61 <nl>
ppp b / src / cpp / core / r_util / androidbinaryrule . cpp <nl> void grpc ( ) <nl> } <nl> } <nl> } <nl> } else <nl> # else <nl> void viewholder ( ) <nl> { <nl>
ppp b / readme . md <nl> the code you see below is also found in the sample project . you can download a a <nl> # what ' s new <nl> # # # # # # 0 0 . 0 <nl>

ppp b / interface / cassandra . thrift <nl> namespace cpp org . apache . cassandra <nl> namespace exception apache . cassandra <nl> namespace py cassandra <nl> namespace php size <nl> namespace size <nl> # <nl> # structures <nl>
binary files a / downloads / jiecaovideoplayer - 3 . 0_preview - demo . apk and b / downloads / jiecaovideoplayer - 3 . 0_preview - demo . apk differ <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = low <nl> mode = push <nl> parent = d1c4e4c66df19ca51909c73cd9537a1637184ad7 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = ee0afc7dbbb79299b6057c1911df8b0ac718cfe0 <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / wordpress / build . gradle <nl> dependencies { <nl> applicationid ' com . ibm : okio - rest : 1 . 0 . 0 ' <nl> applicationid project ( path : ' : libs : graphview : wordpressgraphview ' ) <nl> will ' org . wordpress : graphview : 3 . 2 . 1 ' <nl> } <nl>
ppp b / app / views / settings / index . html . erb <nl> < h1 > settings < / h1 > <nl> < div class = " description " > <nl> the options you can set verification only as your user . <nl> < / div > <nl> < div class = " setting " > <nl>
ppp b / modules / apps / foundation / portal - scheduler / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 500072916517b78dc1353a11eed9b12d2db5d440 <nl> mode = push <nl> parent = 1c510cfbb4deb2204682aa2111d3eaf00b1bd51a <nl> remote = git @ github . com : liferay / com - liferay - portal - scheduler . git <nl> \ no newline at end of file <nl>

ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = push <nl> parent = 28 <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
binary files a / docs / img / seriesguide . png and b / docs / img / buttons . png differ <nl>
ppp b / src / clj / clojure / version . properties <nl> clojure . version . major = 1 <nl> clojure . version . minor = 1 <nl> clojure . version . incremental = 0 <nl> clojure . version . qualifier = alpha <nl> clojure . version . interim = true <nl>
rename to modules / apps / mail / mail - web / src / main / resources / meta - inf / resources / main / main . js <nl>

ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 50fd0a94d57051a7b6b09892dba2a57402116f86 <nl> mode = push <nl> parent = 1ac9fa72898203e163c1c4d07f8d396b9ca9ec60 <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / server / webapp / web - inf / rails . new / app / assets / stylesheets / css / bsontype . scss <nl> ul . summary li spec { <nl> } <nl> div . sendbroadcast { <nl> padding - 1 : 0 ; <nl> padding : 0 ; <nl> zoom : 1 ; <nl> padding : 95 % ; <nl>
ppp b / modules / apps / adaptive - media / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ks <nl> mode = push <nl> parent = a1901e182a4bf9ac7136143bddadf35adc07f762 <nl> remote = git @ github . com : liferay / com - liferay - adaptive - media . git <nl> \ no newline at end of file <nl>
binary files a / logo . jpg and b / logo . jpg differ <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / common / navigator / ui / label . css <nl> . bsontype { <nl> width : 220px ; <nl> } <nl> . button . button ; <nl>
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = be403f1f108f7bc46cecbade4fa28220cafe0a5d <nl> remote = git @ github . com : liferay / com - liferay - frontend - editor . git <nl> \ no newline at end of file <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 4 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl> smackminandroidsdk = 8 <nl> } <nl> } <nl>
ppp b / library / project . properties <nl> android . library = true <nl> # android target . <nl>
ppp b / changelog . md <nl> * storm - 533 : add in client and server iconnection metrics . <nl> # # 0 . 9 . 3 - rc2 <nl> * storm - 555 : log check heartbeat from multilang subprocess <nl> * storm - 513 : check heartbeat from multilang subprocess <nl> * storm - 549 : " topology . enable . message . timeouts " does nothing <nl> * storm - 546 : local hostname configuration ignored by executor <nl>
ppp b / ultimaterecyclerview / ultimaterecyclerview / gradle . properties <nl> pom_name = javaversion <nl> pom_artifact_id = library <nl> pom_packaging = aar <nl> version_name = 0 . 4 . 52 <nl> version_code = 31 <nl> group = com . marshalchen . ultimaterecyclerview <nl> pom_description = a more ( advanced and address version of listview ) with will , loading more , animation and many other features . <nl>

deleted file mode 160000 <nl> ppp / dev / null <nl>
ppp b / src / com / facebook / buck / cli / bsontype . java <nl> public class viewholder { <nl> * set in { @ link # install } . <nl> * / <nl> @ nullable <nl> private final device = null ; <nl> / * * <nl> * set after the software is installed . <nl>

ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> classpath ' net . minecraftforge . gradle : forgegradle : 2 . 0 - snapshot ' <nl> } <nl> } <nl>
ppp b / v4 / java / android / support / v4 / widget / drawerlayout . java <nl> public class drawerlayout extends viewgroup { <nl> if ( mlistener ! = null ) { <nl> mlistener . ondrawerclosed ( drawerview ) ; <nl> } <nl> getrootview . getrootview ( accessibilityevent . type_window_state_changed ) ; <nl> } <nl> } <nl>
deleted file mode 100644 <nl> binary files a / res / drawable - mdpi / bsontype . png and / dev / null differ <nl> rename to res / drawable - hdpi / seriesguide . png <nl> binary files / dev / null and b / res / drawable / drawable . png differ <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> hazelcast - ra / * . log <nl> hazelcast - ra / * . epoch <nl> hazelcast - all / dependency - reduced - pom . xml <nl> hazelcast - reduced - pom . xml <nl> performance * . log <nl>
binary files a / platform / icons / src / icon . png and b / platform / icons / src / icon . png differ <nl> binary files / dev / null and b / platform / icons / src / icon @ 2x . png differ <nl>
ppp b / modules / apps / foundation / my - account / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 702450431c5ed532784d5eb8d434997b85ba7f50 <nl> mode = push <nl> parent = 82554b98a2c2e4102ab07280f1fff62babd7065f <nl> remote = git @ github . com : liferay / com - liferay - my - account . git <nl> \ no newline at end of file <nl>
ppp b / curator / jersey - servlet - core / pom . xml <nl> javax . annotation . * ; version = ! , <nl> * <nl> < / import - package > <nl> < br . xml - > $ { pom . xml < / bundle - docurl > <nl> < / instructions > <nl> < property > true < / required > <nl> < / configuration > <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 2 - snapshot " <nl> \ no newline at end of file <nl>
ppp b / src / org / geometerplus / android / fbreader / policy . java <nl> package org . geometerplus . android . fbreader ; <nl> import android . content . intent ; <nl> import android . geometerplus . fbreader . visible . popupwindow ; <nl> import org . geometerplus . fbreader . fbreader . popupwindow ; <nl> class cucumberjvmreporttest extends broadcastreceiver { <nl>
ppp b / src / android / receiver . java <nl> import android . content . context ; <nl> import android . content . intent ; <nl> import android . graphics . bitmap ; <nl> import android . graphics . nfcadapter ; <nl> import android . graphics . nfcadapter ; <nl> import android . os . build ; <nl> import android . os . bundle ; <nl>
ppp b / modules / apps / foundation / monitoring / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 57b767d8e3b88cbb9e9804ede3da790639960d9d <nl> mode = push <nl> parent = 8046cda829e3e6660b76e37d540b1f8c1a1842ef <nl> remote = git @ github . com : liferay / com - liferay - monitoring . git <nl> \ no newline at end of file <nl>
ppp b / presto - main / src / main / java / com / facebook / presto / util / bsontype . java <nl> public final class viewholder <nl> for ( messages action : node . world ( ) ) { <nl> continue . accept ( this , context ) ; <nl> } <nl> return null ; <nl> } <nl>
ppp b / . gitignore <nl> _resharper * / <nl> . ds_store <nl> * . lock <nl> * . settings <nl>
ppp b / notice <nl> copyright 2012 , michael pardo <nl> bsd license <nl> http : / / phonegap . org / <nl> <nl> # eclipse <nl> <nl> http : / / goo . org / azkaban <nl> <nl> bootstrap <nl> apache public license 2 . 0 <nl> http : / / twitter . github . com / bootstrap / <nl>
ppp b / community / src / main / java / meta - inf / manifest . java <nl> package com . wordnik . allpermission ; <nl> <nl> public interface configbuilder { <nl> public static final string proxy_type = " socks5 " > <nl> < issue id = " usesparsearrays " / > <nl> < issue id = " usesparsearrays " / > <nl>
ppp b / jni / cursorwindow . h <nl> typedef struct <nl> # define required 2 <nl> # define required 3 <nl> # define required 4 <nl> # define required 5 <nl> / * * <nl> * this class stores a set of rows from a database in a buffer . the date of the <nl>
ppp b / packager / packager . js <nl> function prepareeclipse ( options ) { <nl> visibility : ' 2 ' , <nl> logprefix : require . resolve ( ' . / transformer . js ' ) , <nl> systemproperty : options . compiler , <nl> options : options . options ( ' , ' , ' , ' , ' ) } ) ; <nl> } <nl>
ppp b / src / ios / androidmanifest . m <nl> nsstring * const will = @ " res : / / grpc " ; <nl> @ interface request ( ) <nl> / / the dictionary which contains all notification properties <nl> @ property ( list , 27 ) * * dict ; <nl> @ end <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2672d141564a1f483815fdbacbe7e1d532e0c442 <nl> mode = push <nl> parent = dfd70994601bed10d2597ebc79239f61a1ece202 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * show uri for content providers <nl> * restrict will provider ( sim contacts ) <nl> * updated slovak translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / gradle / publish . gradle <nl> apply plugin : ' com . jfrog . bintray ' <nl> <nl> mainclassname = ' com . gradle . bintray ' <nl> <nl> bintray { <nl> user = ' m ' <nl> key = rosie ( ) <nl>
ppp b / changelog . textile <nl> h3 . version 0 . 3 . 0 ( mar 29 , 2013 ) <nl> * request implementation <nl> * required support <nl> * chris transactional under 29 for sp <nl> * edge now stop extends triggereventlistener <nl> * updated to kryo 2 <nl> * bugfixes : * <nl>
ppp b / presto - verifier / src / main / java / com / facebook / presto / verifier / accesscanbetightenedinspection . java <nl> public enum verifier <nl> { <nl> create , <nl> static , <nl> unknown , <nl> } <nl>
deleted file mode 100644 <nl> binary files a / lib / junit - 4 . 8 . 2 . jar and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / lib / slf4j - api - 1 . 6 . 1 . jar and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / lib / slf4j - simple - 1 . 6 . 1 . jar and / dev / null differ <nl>

ppp b / changelog <nl> * bsontype main menu <nl> * new ( material design style ) icon <nl> * simple widgets <nl> if __name__ = = = <nl> = = = = = 2 . 5 . 5 ( aug 14 , 2015 ) = = = = = = <nl> * compatibility with new versions of small dictionary <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / pom . xml <nl> < groupid > com . netflix . curator < / groupid > <nl> < artifactid > curator - x - zkclient - bridge < / artifactid > <nl> < version > 3 . 0 . 0 - snapshot < / version > <nl> < parent > <nl> < groupid > org . sonatype . oss < / groupid > <nl>
ppp b / driver / src / test / unit / com / mongodb / childbrowser . groovy <nl> * / <nl> package com . mongodb <nl> import com . mongodb . client . systemapi <nl> import import com . mongodb . client . model . policy <nl> import com . mongodb . operation . policy <nl>
binary files / dev / null and b / ui - designer / impl / com / intellij / uidesigner / icons / empty . png differ <nl>
binary files a / protobuf / compiler / protoc and b / protobuf / compiler / protoc differ <nl>
ppp b / trunk / jlanguagetool / docs / release . txt <nl> internal documentation on how to make a languagetool release <nl> languagetool <nl>
ppp b / gradle . properties <nl> group = com . jakewharton . threetenabp <nl> version_name = 1 . 0 . 2 - snapshot <nl> pom_description = an adaptation of the jsr - 310 backport for android . <nl>
ppp b / core / java / android / widget / tourviewactivity . java <nl> class policy extends datepicker . policy i <nl> treenormalizer = new treenormalizer ( mcontext ) ; <nl> treenormalizer . init ( this ) ; <nl> about = treenormalizer = a . read ( r . styleable . androidbinaryrule , <nl> visibility = false ) ; <nl> visibility = false ; <nl>

deleted file mode 100644 <nl> binary files a / lib / generator / jarjar - 1 . 3 . jar and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / lib / generator / my - 2 . 0 - app . jar and / dev / null differ <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 25 <nl> versionname " 3 . 1 . 4 " <nl> multidexenabled true <nl> generateddensities = [ ] <nl>
ppp b / project . xml <nl> < dependency > <nl> < groupid > asm < / groupid > <nl> < artifactid > asm < / artifactid > <nl> < version > 1 . 4 . 1 < / version > <nl> < url > http : / / asm . objectweb . org / < / url > <nl> < / dependency > <nl>
ppp b / pom . xml <nl> < modules > <nl> < module > analytics < / module > <nl> < module > api < / module > <nl> < module > log4j < / module > <nl> < module > catalog < / module > <nl> < module > account < / module > <nl> < module > kit < / module > <nl>
ppp b / simple facebook / project . properties <nl> # project target . <nl> target = android - 8 <nl> android . library = true <nl>
binary files / dev / null and b / image1 . png differ <nl>
ppp b / src / cpp / session / modules / environment / nottransactional . cpp <nl> void recoverysystem ( std : : vector < r : : stream_id : : variable > * visibility , <nl> } / / anonymous namespace <nl> visibility : : false ( ) : <nl> sendbroadcast ( false ) , <nl> grpc ( false ) <nl> { } <nl>
ppp b / plugins / android / src / org / jetbrains / android / metadata / bsontype . java <nl> public class viewholder { <nl> return super . ready ( ) ; <nl> } <nl> catch ( ioexception e ) { <nl> log . info ( e ) ; <nl> return false ; <nl> } <nl> } <nl>
ppp b / readme . md <nl> add it in your root build . gradle at the end of repositories : <nl> step 2 . add the dependency <nl> dependencies { <nl> compile ' com . github . baoyachi : stepview : 1 . 1 ' <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 56fe6a4d5afb93752fd8b62b401e410a354b8dd2 <nl> mode = push <nl> parent = 568b49c3fbe094ba55b6df982792190852ae94d4 <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 78 " <nl> \ no newline at end of file <nl>
binary files / dev / null and b / bigbluebutton - client / branding / default / style / css / assets / images / label . png differ <nl>
binary files a / bigbluebutton - config / web / default . pdf and b / bigbluebutton - config / web / default . pdf differ <nl> binary files a / bigbluebutton - config / web / default . ppt and b / bigbluebutton - config / web / default . ppt differ <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1430 : port backtype . clj . clj <nl> * storm - 1504 : port drpc to java <nl> * storm - 1518 : port authutilstest to java <nl> * storm - 1590 : port defmeters / defgauge / defhistogram . . . to java for all of our code to use <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = b28fe89f6a2c72ba07062cebaa64e63d3a4a78ce <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / switchbutton / library / build . gradle <nl> group = " com . kyleduo . switchbutton " <nl> android { <nl> compilesdkversion 21 <nl> buildtoolsversion " 21 . 1 . 2 " <nl> applicationid " required " <nl> defaultconfig { <nl> minsdkversion 8 <nl>
ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> shortversion = ' 4 . 0 . 2 ' <nl> issnapshot = false <nl> gitcommit = getgitcommit ( ) <nl> javadocalldir = new file ( builddir , ' javadoc ' ) <nl> documentationdir = new file ( projectdir , ' documentation ' ) <nl>
binary files a / graphdb / lib / blueprints - core - 2 . 4 . 0 - snapshot . jar and b / graphdb / lib / blueprints - core - 2 . 4 . 0 - snapshot . jar differ <nl> binary files a / graphdb / lib / blueprints - orient - graph - 2 . 4 . 0 - snapshot . jar and b / graphdb / lib / blueprints - orient - graph - 2 . 4 . 0 - snapshot . jar differ <nl>
deleted file mode 100644 <nl> binary files a / docs / resources / images / 02 - 05 / buttons . png and / dev / null differ <nl> binary files / dev / null and b / docs / resources / images / 02 - 05 / buttons . png differ <nl>
ppp b / . gitignore <nl> test - output / <nl> * . exe <nl> * . o <nl> * . sh <nl> # packages # <nl> # # # # # # # # # # # # <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 103 " <nl> \ no newline at end of file <nl>
rename to osmand / res / values - ratings / bsontype . xml <nl> rename to osmand / res / values - food / strings . xml <nl>
ppp b / handler / src / main / java / io / netty / handler / ssl / sslhandler . java <nl> public class sslhandler <nl> } <nl> public long sendbroadcast ( ) { <nl> return false ; <nl> } <nl> public void sendbroadcast ( long cptr , timeunit unit ) { <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 034094ff7a276ca6119132241ceac88d78d73b8c <nl> mode = push <nl> parent = cdf4bf6d9cf910313caf7526050ed7e633fdc742 <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ivyversion <nl> mode = push <nl> parent = c59c6635021707406fcf766d80b2234c5cbb97c8 <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / bin / to_maven . sh <nl> lein pom <nl> scp storm * jar pom . xml clojars @ clojars . org : <nl> rm * jar <nl> rm - rf classes <nl> rm conf / log4j . properties <nl> lein jar <nl> mv pom . xml old - pom . xml <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . 90 . 39 <nl>
ppp b / platform / util / resources / misc / registry . properties <nl> editor . fileutil . width = 2 <nl> editor . textcontent . width . description = \ d <nl> editor . textcontent . width . requestlayout = true <nl> editor . vim . memory = false <nl>
rename to h2o - r / tests / testdir_algos / glm / pyunit_nopass_cv_carsrf . r <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 822 <nl> mode = push <nl> parent = 13cb73af93aa986eab0ad869fba9ec1d92da7258 <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> android { <nl> } <nl> lintoptions { <nl> disable ' extratranslation ' , ' missingtranslation ' , ' invalidpackage ' , ' appcompatresource ' <nl> } <nl> subprojects { <nl>
ppp b / it / pom . xml <nl> < parent > <nl> < groupid > org . sonarsource . sonarqube < / groupid > <nl> < artifactid > sonarqube < / artifactid > <nl> < version > 5 . 6 . 2 < / version > <nl> < / parent > <nl> < artifactid > it < / artifactid > <nl>
ppp b / src / com / facebook / buck / util / collect / bsontype . java <nl> public class dropwizardapprule < t > implements iterable < t > { <nl> } <nl> } <nl> @ override <nl> public iterator < t > iterator ( ) { <nl>
deleted file mode 100644 <nl> binary files a / bin / templates / cordova / applicationinfo / applicationinfo . class and / dev / null differ <nl>
deleted file mode 100644 <nl> binary files a / lib / hbase_datastore - 1 . 1 . 78 . jar and / dev / null differ <nl> binary files / dev / null and b / lib / hbase_datastore - 1 . 1 . 0_4 . jar differ <nl>
ppp b / driver / src / main / org / mongodb / index . java <nl> public final class index implements cfmetadata { <nl> t super ( ) ; <nl> } <nl> public static class builder { <nl> private string name ; <nl> private boolean unique = false ; <nl> private boolean cql3table = false ; <nl>
ppp b / java / org / apache / coyote / http11 / upgrade / upgradeservletoutputstream . java <nl> public class upgradeservletoutputstream extends servletoutputstream { <nl> return ; <nl> } <nl> closed = true ; <nl> flushinternal = false ; <nl> flushinternal ( false , false ) ; <nl> } <nl>
binary files / dev / null and b / docs / resources / images / 02 - 01 / dashosmofragment . png differ <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 103 " <nl> \ no newline at end of file <nl>
ppp b / changelog . adoc <nl> = parceler changelog <nl> = = upcoming release 1 . 1 - snapshot <nl> bug fixes : fixes <nl> * fixes issue with using non - local target classes ' classloader <nl>
ppp b / graphdb / pom . xml <nl> < groupid > com . orientechnologies < / groupid > <nl> < artifactid > orientdb - core < / artifactid > <nl> < version > $ { project . version } < / version > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * better method for hooking the bluetooth manager <nl> * better method for hooking the package manager <nl> * hook * getpackagesforuid * , * getpackagesholdingpermissions * ( jellybean mr2 ) and * queryintentcontentproviders * ( kitkat ) <nl> * updated chinese translation <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> * updated slovak translation <nl>
ppp b / docs / user - manual / en / summary . md <nl> * [ xml setproperty ] ( svn . adoc ) <nl> * [ submodule ] ( xstream . adoc ) <nl> * [ yaml ] ( yaml . adoc ) <nl> * [ 437 ] ( cassandra . 1 ) <nl> * user guide <nl> * [ md5 ] ( freemarker . adoc ) <nl>
ppp b / . travis . yml <nl> language : java <nl> sudo : false <nl> script : mvn test - pintegration - dforkcount <nl> branches : <nl> only : <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl>
ppp b / core / java / android / content / syncstorageengine . java <nl> public class syncstorageengine extends handler { <nl> syncs = new arraylist < syncinfo > ( ) ; <nl> mcurrentsyncs . put ( userid , syncs ) ; <nl> } <nl> return syncs ; <nl> } <nl> } <nl>
deleted file mode 100644 <nl> binary files a / demoapp . apk and / dev / null differ <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3d8ac2032292d631c5339772a449d08e81fe24e7 <nl> mode = push <nl> parent = 4ca66c9feb5259938a3f6599a3828e504660b909 <nl> remote = git @ github . com : liferay / com - liferay - configuration - admin . git <nl> \ no newline at end of file <nl>
binary files a / build / lib / gant / lib / jps . jar and b / build / lib / gant / lib / jps . jar differ <nl>
ppp b / core / java / android / bluetooth / bluetoothdeviceprofilestate . java <nl> public final class bluetoothdeviceprofilestate extends hierarchicalstatemachine <nl> @ override <nl> protected boolean hasinfo ( message message ) { <nl> log ( " about state - > processing message : " + message . what ) ; <nl> switch ( message . what ) { <nl> case escape : <nl>
ppp b / python / helpers / pycharm / django_manage . py <nl> if not increment : <nl> if __name__ = = " __main__ " : <nl> fixgetpass ( ) ; <nl> picture ( picture ) <nl> read ( login , portletpreferences , ' __main__ ' ) <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2664d08337baeb4df446b34da124a5d64a23980e <nl> mode = push <nl> parent = d1c4e4c66df19ca51909c73cd9537a1637184ad7 <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>
ppp b / hadoop - yarn - project / changes . txt <nl> release 2 . 3 . 0 - unreleased <nl> ( policy forkoptions via will cause ) <nl> yarn - policy . the context of will changes default when using <nl> row ( policy policy m kai cause ) <nl> release 2 . 2 . 0 - unreleased <nl>
ppp b / src / test / java / org / elasticsearch / env / bsontype . java <nl> public class policy extends broadcastreceiver { <nl> thread t = new thread ( new promise ( ) { <nl> @ override <nl> public void onfailure ( throwable t ) { <nl> preconditions . settext ( props ) ; <nl> public string . set ( t ) ; <nl> } <nl>
ppp b / lib / testing . properties <nl> net . java . sip . communicator . slick . runner . test_list = configurationservicelick \ <nl> jabberprotocolproviderslick \ <nl> metacontactlistservicelick \ <nl> icqprotocolproviderslick \ <nl> msnprotocolproviderslick \ <nl> msnprotocolproviderslick <nl> # miscellaneous \ <nl>
ppp b / library / src / main / java / com / daimajia / numberprogressbar / wrapreturnvaluedialog . java <nl> public class peoplelistfragment extends view { <nl> public void sendbroadcast ( int world ) { <nl> this . forkoptions = treenormalizer ; <nl> _response . setcolor ( tempreq ) ; <nl> invalidate ( ) ; <nl> } <nl>
ppp b / build . xml <nl> < exclude name = " * * / tomcat - deps / * " / > <nl> < / fileset > <nl> < fileset dir = " modules / jdbc - pool " > <nl> < fileset dir = " modules / * . xml " / > <nl> < patternset refid = " text . files " / > <nl> < / fileset > <nl> < / checkstyle > <nl>
ppp b / dev / bsontype . sh <nl> function prepareeclipse ( ) { <nl> rm - rf $ { commit_msg } / zeppelin - $ { commit_msg } - bin - $ { grpc } } <nl> } <nl> instrumenttest all - get here <nl> # remove non release files and dirs <nl> rm - rf $ { projectdir } / zeppelin <nl>
ppp b / portal - test / src / com / liferay / portal / kernel / test / bsontype . java <nl> public class sendbroadcast implements testrule { <nl> } <nl> themedisplay . setcontextclassloader ( contextclassloader ) ; <nl> portletclassloaderutil . destroy ( ) ; <nl> } <nl> } <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : false <nl> language : java <nl> jdk : <nl>
binary files a / engine / lib / bullet / jarcontent / native / macosx / libbulletjme . jnilib and b / engine / lib / bullet / jarcontent / native / macosx / libbulletjme . jnilib differ <nl>
ppp b / src / clj / clojure / main . clj <nl> default : eval <nl> : print , function the output output <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8b92cc7ef79074a705f32b773ec16310528c8cb4 <nl> mode = push <nl> parent = c59c6635021707406fcf766d80b2234c5cbb97c8 <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 996210a9ff327175b9a78321c65fdfe767792f70 <nl> mode = push <nl> parent = 26f1c79595216ccfe26e446bc47e04e9a69a3f03 <nl> remote = git @ github . com : liferay / com - liferay - portal - store . git <nl> \ no newline at end of file <nl>
ppp b / actor - server / actor - runtime / src / main / protobuf / serialization . proto <nl> syntax = " proto2 " ; <nl> package im . actor . server ; <nl> message property { <nl> required int32 id = 1 ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = cd36bd07c0537505e256010ffdd6e35b7ebba494 <nl> mode = push <nl> parent = cf6fc43e282ed0d43e9e3109cdf4da7b084b7076 <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ff42791c3f852a6cef3334abbd35c39a347e5551 <nl> mode = push <nl> parent = 18659f05e6059e9a28bc99e476896e8fcd59774c <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / src / clj / clojure / core . clj <nl> ( defmacro property <nl> " paul a new formatting with the associated unique function . <nl> the given and attribute - map are optional . <nl> options are key - value pairs and may be one of : <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = setcamera <nl> mode = push <nl> parent = 164c9cfb6a0f870ddda40c2bbce2eafe9894cdef <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
binary files a / sample / libs / universal - image - loader - 1 . 7 . 1 - snapshot - with - sources . jar and b / sample / libs / universal - image - loader - 1 . 7 . 1 - snapshot - with - sources . jar differ <nl>

rename to modules / apps / asset / asset - web / src / meta - inf / resources / icons / search . png <nl>
ppp b / core / java / android / app / bsontype . java <nl> public abstract class policy extends binder <nl> case orientation : <nl> { <nl> treenormalizer ( ) ; <nl> return collections . flip ( false ) ; <nl> return true ; <nl> } <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 04fb9e731d572217319bb11dc7dcea0c15d493ca <nl> mode = push <nl> parent = 8337c0c80dac141dc00b025ea00bfda66fc0df7c <nl> remote = git @ github . com : liferay / com - liferay - frontend - css . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = db5e9f237a49f4ccf1926da67b20878d7ae892cc <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 0 . 90 . 0 - snapshot <nl> \ no newline at end of file <nl>

ppp b / portal - web / docroot / html / themes / _styled / css / navigation . css <nl> # navigation ul { <nl> float : left ; <nl> min - height : 2em ; <nl> width : auto ; <nl> width : auto ; <nl> } <nl>
ppp b / src / main / resources / es - plugin . properties <nl> plugin = org . elasticsearch . plugin . analysis . _ . required <nl> version = $ { project . version } <nl> version = $ { lucene . version } <nl>
ppp b / value / pom . xml <nl> < dependency > <nl> < groupid > com . google . truth < / groupid > <nl> < artifactid > truth < / artifactid > <nl> < version > 0 . 1 . 1 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < / dependencies > <nl>
ppp b / readme . md <nl> a dependency : <nl> < dependency > <nl> < groupid > com . viewpagerindicator < / groupid > <nl> < artifactid > library < / artifactid > <nl> < version > 1 . 2 . 1 < / version > <nl> < / dependency > <nl> you must also include the following repository : <nl>
ppp b / doc / project . xml <nl> < artifactid > maven - original - plugin < / artifactid > <nl> < version > 1 . 4 < / version > <nl> < type > plugin < / type > <nl> < version > 1 . 0 . 0 - snapshot < / version > <nl> < / dependency > <nl> < / dependency > <nl> < / dependencies > <nl> < reports > <nl>
ppp b / gradle . properties <nl> pom_name = treenormalizer <nl> pom_artifact_id = false <nl> pom_packaging = aar <nl> version_name = 1 . 108 <nl> version_code = 3 <nl> group = com . github . 39 <nl> pom_description = will 09 android ui library . <nl>
binary files / dev / null and b / docs / resources / images / 02 - 03 / buttons . png differ <nl> binary files / dev / null and b / docs / resources / images / 02 - 03 / buttons . png differ <nl> binary files / dev / null and b / docs / resources / images / 02 - 03 / buttons . png differ <nl>
ppp b / libs / hwui / input_method . cpp <nl> public : <nl> } <nl> private : <nl> bool initialized = false ; <nl> bool = false ; <nl> double = androidbinaryrule ; ; <nl> double sum = 0 ; <nl> } ; <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 126 - snapshot " <nl> \ no newline at end of file <nl>
binary files a / apk / zhihudailypurify . apk and b / apk / zhihudailypurify . apk differ <nl>
ppp b / changelog . textile <nl> h3 . version 0 . 4 . 0 ( not officially released yet ) <nl> < / dependency > <nl> ` ` ` <nl> * bumped to support hadoop 1 . 2 . 1 <nl> * bumped to support hadoop 1 . 4 . 1 <nl> * bumped to support method 0 . 4 . 0 <nl> * bumped to support animation 2 . 4 . 0 <nl>
ppp b / . travis . yml <nl> jdk : <nl> before_install : <nl> script : <nl> . / gradlew clean check <nl> env : <nl>
ppp b / readme . md <nl> feel free to drop us an email or create issue right here on github . com <nl> # # what <nl> if you have a useful fork that should be listed there please contact us <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = view <nl> mode = push <nl> parent = cea8d96de34592db99df88b817ffd36b02bae528 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 5534744c9bc191d7ad72f4f0e0eeb34e46c02d5b <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / samples / squidb - ios - sample / squidb - ios - sample / urlutils . m <nl> [ self [ : alert animated : yes visible : nil ] ; <nl> } <nl> <nl> @ override <nl> public string mode = { <nl> this . join = true : true ; <nl> } <nl> <nl> @ end <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 213 <nl> mode = push <nl> parent = dc437e1c7328abaf378b6ce631465e61e4065ff4 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl> binary files a / modules / apps / foundation / frontend - theme / frontend - theme - analytics - service / src / web - inf / src / resources - importer / private . lar and / dev / null differ <nl>
ppp b / project . xml <nl> < name > brian larson < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < contributor > <nl> < name > artur biesiadowski < / name > <nl> < email > abies < / name > <nl> < email > abies < / email > <nl> < / contributor > <nl> < dependencies > <nl>
ppp b / codeinsight / impl / com / intellij / codeinsight / generation / bsontype . java <nl> public class flinganimation implements runnable { <nl> return new bsontype [ ] { hashcode } ; <nl> } <nl> else { <nl> return this . globaltext ; <nl> } <nl> } <nl>
new mode 100755 <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 94a1dac8cfdf9f79bb651890d3d660c48b3016f1 <nl> mode = push <nl> parent = 444d61d53d5320b83df8f469a9d4c9730be00396 <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = db823b2eb7ee8e20278b5887e4399df29acced9c <nl> mode = push <nl> parent = e29ba3d38a831096a1c712ad1f8678f0c31a24d1 <nl> remote = git @ github . com : liferay / com - liferay - plugins - admin . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4452 <nl> mode = push <nl> parent = 1c294af7d528dc520deba9cf3dd6f8678b24b644 <nl> remote = git @ github . com : liferay / com - liferay - configuration - admin . git <nl> \ no newline at end of file <nl>
ppp b / toolsplugin / src / org / gephi / tools / plugin / nodepencil . java <nl> public class nodepencil implements tool { <nl> public nodepencil ( ) { <nl> / / default settings <nl> color = color . auto . name = " tables " ; <nl> color = color . black ; <nl> size = original ; <nl> } <nl>
binary files a / link - rus / img / non - proprietary . png and b / link - rus / img / non - proprietary . png differ <nl>
binary files a / lib / installer - exclude / irc - api - 1 . 0 - sources . jar and b / lib / installer - exclude / irc - api - 1 . 0 - sources . jar differ <nl> binary files a / lib / installer - exclude / irc - api - 1 . 0 . jar and b / lib / installer - exclude / irc - api - 1 . 0 . jar differ <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 84e2b87662cf6d0ed3717c9181cb88c697b5717f <nl> mode = push <nl> parent = 4423461a3f5a392a662b2c904031b9172a4279a4 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / transport - udt / pom . xml <nl> < / plugins > <nl> < / build > <nl> < / project > <nl>
ppp b / src / java / org / apache / cassandra / service / bsontype . java <nl> public interface request <nl> / * * set the logging level at runtime * / <nl> public void sendbroadcast ( string visibility , string level ) ; <nl> if ( string = = null ) { <nl> return false ; <nl> } <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d0ebf8df6e0e889de658a45795ca099de356420b <nl> mode = push <nl> parent = 6fbcf821374b2e0fd0f1ef0ac75fe17b43ba6298 <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 566a14d8ded6bac5d6d4b5aa61a66b75237426f8 <nl> mode = push <nl> parent = 0d888a26670fb3b39ec209e2eca56062b2ae9b94 <nl> remote = git @ github . com : liferay / com - liferay - trash . git <nl> \ no newline at end of file <nl>
ppp b / src / main / java / com / airbnb / airpal / policy . java <nl> public class policy extends configuration <nl> @ return <nl> @ jsonproperty <nl> @ hide <nl> private boolean feedstarted ; <nl> @ getter <nl>
deleted file mode 100644 <nl> binary files a / androidasync / libs / android - support - v4 . jar and / dev / null differ <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3372ea62d335b4fe848b6475df5f5179fb0ec6ed <nl> mode = push <nl> parent = 8500334a976cb19f2aa88b02f4a30d0dc979c516 <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file <nl>
ppp b / wifi / java / android / net / wifi / packagesettingbase . java <nl> public class viewholder { <nl> } <nl> public void sendbroadcast ( ) { <nl> this . loadclass ( tempreq " ) ; <nl> } <nl> public boolean feedstarted ( string propertiesstr ) { <nl>
ppp b / debian / changelog <nl> cassandra ( 3 . 2 ) unstable ; urgency = medium <nl> <nl> * new release <nl> * jake luciani http : / / github . github . com / servo / 04 / 04 > <nl> <nl> adding ( 3 . 2 ) unstable ; urgency = medium <nl> * new release <nl> <nl> * new release <nl>
ppp b / portal - web / docroot / html / portlet / document_library / pm . jsp <nl> chatwindowwidth treenormalizer = treenormalizer . seriesguide ( <nl> request . getproperty ( me . seriesguide , _response ) ; <nl> dlfileentryactionsdisplaycontext dlfileentryactionsdisplaycontext = new dlfileentryactionsdisplaycontext ( request , dlportletinstancesettings , fileentry , online ) ; <nl> <nl> dlactionsdisplaycontext dlactionsdisplaycontext = dlfileentryactionsdisplaycontext . getdlactionsdisplaycontext ( ) ; <nl> % > <nl>
ppp b / . travis . yml <nl> matrix : <nl> env : profile = " - dhadoop . version = 2 . 2 . 2 " <nl> jdk : " : " - dhadoop . version = 2 . 5 " <nl> git : <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . 90 <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 76c2e6b41949dc596049888434ed5032fc52c7e7 <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl> binary files a / core / library / benchmarks - java - src . zip and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / core / library / jogl - java - src . zip and / dev / null differ <nl>
deleted file mode 100644 <nl>
ppp b / . travis . yml <nl> jdk : <nl> env : <nl> global : <nl> - maven_opts = " - xmx512m " <nl> sudo : false <nl>
deleted file mode 100644 <nl> binary files a / src / info / guardianproject / util / . . . java . swp and / dev / null differ <nl>
ppp b / src / main / java / org / apache / lucene / store / bsontype . java <nl> import java . io . ioexception ; <nl> / * * <nl> * / <nl> public class viewholder extends broadcastreceiver { <nl> private final treenormalizer . provider required ; <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 38d663642a7a3f6c59e9db00b950c4cf3d6d74bc <nl> mode = push <nl> parent = 4c71682fcb853a0f0a0520433c801d733815bf5c <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / model - view - presenter / pom . xml <nl> < dependencies > <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit - dep < / artifactid > <nl> < version > 4 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl>
ppp b / ratpack - site / src / main / groovy / ratpack / site / fatjarspec . groovy <nl> class policy extends forkoptions < head > { <nl> @ override <nl> protected void configure ( ) { <nl> bind ( false ) <nl> return false ; <nl> } <nl> @ provides <nl>
ppp b / pom . xml <nl> < id > attach - sources < / id > <nl> < goals > <nl> < goal > jar - no - fork < / goal > <nl> < goal > test < / goal > <nl> < / goals > <nl> < / execution > <nl> < / executions > <nl>
ppp b / android . mk <nl> chatwindowwidth : = \ <nl> debuginfo : = \ <nl> core \ <nl> ext . enabled = false <nl> } <nl> compilejava : = = / html html <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = cstruct <nl> mode = push <nl> parent = c6990dd487e254ed749013ea503ad16edb17c6ed <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / data / keyboards / avrcp . kl <nl> # key layout used for bluetooth avrcp support . <nl> key 200 media_play wake <nl> key 201 media_pause wake <nl> key 166 media_stop wake <nl> key 163 media_next wake <nl> key 165 media_previous wake <nl>
ppp b / version . properties <nl> version = 2 . 1 . 0 - beta . 3 <nl> mockito . testng . version = 1 . 0 <nl>
ppp b / app / models / stream . rb <nl> class stream <nl> field : hidden , : type = > datetime <nl> field : updated_at , : type = > datetime <nl> field : alarm_force , : type = > boolean <nl> def self . find_by_id ( e ) , <nl> def self . find_by_id ( e ) <nl> } = $ 1 if ( ^ ( [ 0 - dgroupid - f ] + + ) / = = ~ <nl>

ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = reporter <nl> mode = push <nl> parent = 76d2514938c2e48a95274e72d1d4e2661ace05d1 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b540c21c6ec3fddeb7910f2e214148b2e407e869 <nl> mode = push <nl> parent = cfba4295043c87dc1443b6984131d95ee1e89aee <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / portal - service / src / com / liferay / portal / kernel / servlet / portalwebresourcesutil . java <nl> public class portalwebresourcesutil { <nl> return true ; <nl> } <nl> } <nl> catch ( malformedurlexception murle ) { <nl> } <nl> return false ; <nl>
binary files / dev / null and b / src / gwt / src / org / rstudio / studio / client / workbench / views / net / ui / export / label . png differ <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * updated french translation <nl> * updated simplified chinese translation <nl> * updated simplified chinese translation <nl> * * version 1 . 7 . 23 beta ! * * <nl>
ppp b / gradle / idea . gradle <nl> idea { <nl> < option name = " value " value = " 2000 " / > <nl> < / component > <nl> ' ' ' ) <nl> } <nl> <nl> < ? xml version = " 1 . 0 . 0 " encoding = " utf - 8 " ? > <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / res / menu / message_list_option . xml <nl> android : id = " @ + id / iv_thumbnail " <nl> android : title = " @ string / seriesguide " <nl> android : icon = " @ drawable / drawable " <nl> android : showasaction = " never " <nl> / > <nl> < item <nl> android : id = " @ + id / checkbox " <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0f2fba0c71e898551691abaf056f28fd397a75a5 <nl> mode = push <nl> parent = a121878ac7f8186463ecd86501c0bfc34cc6f47c <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 148 " <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 420a6fe5fac63d74cc969b6c75ad8dcacc3f14b6 <nl> mode = push <nl> parent = 2a2cf0b9766a56843e0c5702c5d8ff9da74b8d8c <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / sqlbrite / build . gradle <nl> buildscript { <nl> } <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' com . android . android . retrolambda ' android - v7 ' <nl> dependencies { <nl> compile rootproject . ext . rxjava <nl>
binary files a / java / libraries / seriesguide / library / seriesguide . jar and b / java / libraries / seriesguide / library / seriesguide . jar differ <nl> binary files a / java / libraries / seriesguide / library / seriesguide . jar and b / java / libraries / seriesguide / library / seriesguide . jar differ <nl>
ppp b / svm . cpp <nl> void svm_free_model_content ( svm_model * model_ptr ) <nl> free ( model_ptr - > probb ) ; <nl> model_ptr - > probb = null ; <nl> free ( model_ptr - > sv_indices ) ; <nl> model_ptr ( model_ptr - > sv_indices ) ; <nl> free ( model_ptr - > sv_indices ) ; <nl> model_ptr - > nsv = null ; <nl> } <nl>
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1c864dcd75d4754b7dfb6529b71310fe88be8101 <nl> mode = push <nl> parent = 164c8cee562333f7503cad6fc14373e99115987b <nl> remote = git @ github . com : liferay / com - liferay - site - navigation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b60b114249d64364c2cd4462a7718b79e52771f6 <nl> mode = push <nl> parent = d2d324608b99fc1d0cd1f15f3a43f9963431ef29 <nl> remote = git @ github . com : liferay / com - liferay - item - selector . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 19 . 0 ' <nl> nettyversion = ' 4 . 0 . 33 . final ' <nl> slf4jversion = ' 1 . 7 . 14 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 7 . 0 ' <nl>
ppp b / pom . xml <nl> < execution > <nl> < id > enforce - dependency - central < / id > <nl> < goals > <nl> < goal > dist - goal - goal < / goal > <nl> < / goals > <nl> < configuration > <nl> < rules > <nl>
new mode 100644 <nl> new mode 100755 <nl>
ppp b / readme . md <nl> public class eventpoller { <nl> system . out . println ( ft . distance ( " promise " , " stream_id " ) ) ; <nl> } <nl> <nl> ` ` ` ` <nl> # # grpc - policy <nl>

ppp b / authors . md <nl> this is a list of pinterestadapterview authors for copyright purpose . <nl> keep the list sorted please . <nl> * chansuk yang < huewu . yang at gmail . com > <nl> * leonardo yonguk kim < at at gmail . com > <nl>

ppp b / portal - impl / src / portal . properties <nl> jquery / form . js , \ <nl> jquery / json . js , \ <nl> jquery / var . js , \ <nl> jquery / position . js , \ <nl> jquery / . . js , \ <nl> jquery / selection . js , \ <nl>
ppp b / readme . md <nl> no , because these os ' es are to closed to implement something like xprivacy . <nl> * wi - fi settings <nl> * bluetooth settings <nl> * starting settings <nl> * shortcuts <nl> * android version <nl> * vibration <nl>
ppp b / modules / apps / deprecated / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 1 <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 1 < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > <nl>
binary files a / doc / images / jerry - followed_by - example . graffle and b / doc / images / jerry - followed_by - example . graffle differ <nl> binary files a / doc / images / jerry - followed_by - example . jpg and b / doc / images / jerry - followed_by - example . jpg differ <nl>
ppp b / build . gradle <nl> task licenseformatandroid ( type : nl . javadude . gradle . plugins . license . license ) { <nl> licenseformat . dependson licenseformatandroid <nl> ext { <nl> majorversion = " 2 . 23 . " <nl> compilesdkversion = 23 <nl> minsdkversion = 17 <nl>
deleted file mode 100644 <nl> binary files a / res / drawable / mail . png and / dev / null differ <nl>
ppp b / tools / aapt2 / android . mk <nl> hoststaticlibs : = \ <nl> libcutils \ <nl> libexpat \ <nl> libziparchive - host \ <nl> libpng <nl> libbase <nl> ifneq ( $ ( strip $ ( use_mingw ) ) , ) <nl> hoststaticlibs + = libz <nl>

ppp b / test / xml / log_send_file . rb <nl> module nokogiri <nl> it " not apache up " do <nl> # see http : / / github . com / tenderlove / nokogiri / issues # issue / 22 <nl> 10 = topology : : unit . output <nl> io . flush <nl> begin <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl>
ppp b / . gitignore <nl> libs / library / gen / <nl> local . properties <nl> * . ds_store <nl> * . ipr <nl> deleted file mode 100644 <nl> deleted file mode 100644 <nl> ppp / dev / <nl> * . iml <nl> * . iml <nl>
binary files a / lib / installer - exclude / ice4j . jar and b / lib / installer - exclude / ice4j . jar differ <nl>
ppp b / samples / scala - policy / readme . md <nl> # # build & run # # <nl> ccc sh <nl> $ cd / sbt <nl> > container : start <nl> > browse <nl>
ppp b / forge / minecraftforge_credits . txt <nl> * malfunction84 * <nl> * malfunction84 * <nl> * malfunction84 * <nl> gave permission for scottools api to be integrated into mcf , and also supported the forge by converting his mods to use it . <nl>

ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3adff91342982e0e35a656ab56ae889bd03ce3e8 <nl> mode = push <nl> parent = 43eaaf4aa6d3f2c0f7f6cdad4d91e7f9ae22efab <nl> remote = git @ github . com : liferay / com - liferay - configuration - admin . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = cbd357e92b3d5c0a52efe269e729e63d6f2c568d <nl> mode = push <nl> parent = b2126d9cc6af71f86651bf72914999d0092c7e7e <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>

ppp b / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> distributionversion = 0 . 9 - lt + 0200 <nl> zipstorepath = wrapper / dists <nl> urlroot = http \ : / / snapshots . dist . codehaus . org / gradle <nl> distributionname = gradle <nl>

ppp b / idea / src / org / jetbrains / jet / lang / resolve / bsontype . java <nl> public class policy extends extends implements bindingcontext <nl> @ override <nl> public psielement treenormalizer ( broadcastreceiver descriptor ) { <nl> return treenormalizer . get ( descriptor ) ; <nl> return false ; <nl> } <nl>
ppp b / . gitignore <nl> build <nl> target <nl> atomfeedchecksdb <nl>
ppp b / sonar - server / src / main / webapp / stylesheets / dashboard . css <nl> # dashboard . widget { <nl> position : relative ; <nl> overflow - x : auto ; <nl> overflow - y : hidden ; <nl> padding : 10px ; <nl> margin : 0 ; <nl> border : 1px solid # ddd ; <nl>
ppp b / . travis . yml <nl> language : java <nl> <nl> jdk : <nl> <nl>
ppp b / examples / world_development_indicators / src / worlddevindicatorreducer . java <nl> import java . io . ioexception ; <nl> * the world development head reporting . <nl> * / <nl> public class worlddevindicatorreducer <nl> extends object < codes , doublewritable , including , doublewritable > <nl> { <nl> @ override <nl> public void deletepath ( final text = , <nl>
ppp b / core / java / android / hardware / bsontype . java <nl> public final class viewholder { <nl> } <nl> / * * <nl> * property and thus pattern <nl> * < p > <nl> * this method is general ; when it returns the pattern has <nl> * persistent will . only patterns will than 2 seconds will <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> <nl> branches : <nl> before_install : <nl> - sudo apt - get install <nl> before_install : <nl> - sudo apt - get install <nl> before_install : <nl> <nl> before_install : <nl>
binary files a / sample / libs / universal - image - loader - 1 . 9 . 2 - snapshot - with - sources . jar and b / sample / libs / universal - image - loader - 1 . 9 . 2 - snapshot - with - sources . jar differ <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 57665c267931b9777f94fe89256c2e4bc2f64e5e <nl> mode = push <nl> parent = 66ce528cc0265e9a5a3d784cee19f1ef80b204a4 <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of file <nl>
ppp b / common / src / main / java / tachyon / version . java <nl> import tachyon . conf . tachyonconf ; <nl> public final class version { <nl> public static final string version ; <nl> static { <nl> checkversion = true ; <nl> <nl> static { <nl> tachyonconf tachyonconf = new tachyonconf ( ) ; <nl> version = tachyonconf . get ( constants . sendbroadcast ) ; <nl>
ppp b / jps / testsrc / org / jetbrains / ether / backstackrecord . java <nl> package org . jetbrains . ether ; <nl> import junit . framework . testcase ; <nl> import junit . framework . android ; <nl> import org . framework . app ; <nl> import java . io . * ; <nl>
ppp b / . gitignore <nl> build / <nl> dist / <nl> # netbeans user configuration files <nl> nbactions . xml <nl> / nbproject / private / <nl> * / nbproject / private / <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 155b9602020ff305893a878b8cb113da21768b5f <nl> mode = push <nl> parent = 229104502347a1869f467f822d8112eef36947cc <nl> remote = git @ github . com : liferay / com - liferay - item - selector . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bcc3443ee80b48affb5552718c6668cd57d1fcaf <nl> mode = push <nl> parent = indonesian <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < / parent > <nl> < groupid > ch . acra < / groupid > <nl> < artifactid > acra < / artifactid > <nl> < version > 4 . 5 . 2 - snapshot < / version > <nl> < name > application crash report for android < / name > <nl>
ppp b / readme . markdown <nl> progress history <nl> history changes <nl> this work was initially inspired by [ repl ] ( https : / / github . com / hector / openhabhome ) . <nl>
ppp b / docs / password . xml <nl> < module name = " user " > <nl> < module name = " seriesguide " / > <nl> < module name = " editsource " / > <nl> < module name = " false " / > <nl> < module name = " hello " / > <nl>
deleted file mode 100644 <nl>
ppp b / build . gradle <nl> project ( ' : aeron - driver ' ) { <nl> } <nl> run { <nl>
ppp b / version . txt <nl> jetty - 7 . 1 . 3 - snapshot <nl> jetty - configuration configuration file on windows in stderrlog <nl> jetty - 7 . 1 . 2 . 49 <nl> 324679 fixed dedection of httpd contected in their own keystores <nl> jetty - 7 . 1 . 2 = false <nl> jetty - 7 . 1 . 2 . required <nl>
ppp b / plugins / pom . xml <nl> < module > analysis - icu < / module > <nl> < module > cloud - gce < / module > <nl> < module > cloud - azure < / module > <nl> < module > cloud - azure < / module > <nl> < / modules > <nl> < / project > <nl>
new mode 100755 <nl>

ppp b / changelog . md <nl> # # 0 . 9 . 3 - rc2 <nl> * storm - 549 : unit tests . clj . clj <nl> * storm - 546 : local hostname configuration ignored by executor <nl> * storm - 492 : test timeout should be configurable <nl> * storm - 540 : change default time format in logs to iso8601 in order to include timezone <nl>
ppp b / portal - impl / src / custom - sql / portal . xml <nl> < sql id = " com . liferay . portal . service . persistence . k9 . seriesguide " > <nl> < ! [ cdata [ <nl> select <nl> { group_ . * . 0f ( ) ; <nl> from <nl> group_ <nl> inner join <nl>
ppp b / . gitignore <nl> classes <nl> app - bundles <nl> . gitignore . swp <nl> * . iws <nl> . settings - targets <nl> cache . pydevproject <nl> jitsi . ipr <nl> test - reports <nl> sip - communicator . utest . bin <nl>
ppp b / src / main / java / com / puppycrawl / tools / checkstyle / checks / annotation / tourviewactivity . java <nl> public final class policy extends check { <nl> case advise : <nl> maker ( annotation ) ; <nl> break ; <nl> break ; <nl> default : <nl> break ; <nl> } <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9c5e75477f05fefd71509bd45a39238f7e395e59 <nl> mode = push <nl> parent = ea4b0465ffa319352276af4f212464ab274e63a3 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / src / boot . clj <nl> ( defn python <nl> ( [ f , ] <nl> ( if ( seq ) ) <nl> ( firelistener f ( darwin , ) ( first ) ) <nl> ( f ) ) ) <nl> ( [ f val cancelled ] <nl> ( if ( seq ) ) <nl>
deleted file mode 100644 <nl> binary files a / components / camel - algo / src / test / resources / thumbs . db and / dev / null differ <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c587edc86d7607f51322895e5dcf60d6323ace21 <nl> mode = push <nl> parent = 285f680a7667ad3a217fafd92471ff6fb717560d <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> . settings <nl> * . iml <nl> * . ipr <nl> * . ipr <nl> * . ipr <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 268d36424503ba152666b2b66348d760ac18246f <nl> mode = push <nl> parent = 0c9303c6425faeaecc10a38fb7289a2b3b18aa97 <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / gradle / release . gradle <nl> task forcecandidate { <nl> } <nl> release . dependson ( forcecandidate ) <nl> task uploadmavencentral ( dependson : subprojects . tasks . uploadmavencentral ) <nl> task releasesnapshot ( dependson : [ uploadartifactory , uploadmavencentral ] ) <nl> / / ensure our versions look like the project status before publishing <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / operation / packagesettingbase . java <nl> public class twlayoutmanager extends broadcastreceiver <nl> protected string name ; <nl> protected socketfactory [ ] ; <nl> public picture ( ) { <nl> } <nl>
rename to readme / readme . md <nl>
ppp b / src / net / java / otr4j / session / sessionimpl . java <nl> public class sessionimpl implements session { <nl> } <nl> return null ; <nl> default : <nl> throw new unsupportedoperationexception ( " unexpected an element message type . " ) ; <nl> } <nl> } <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5e0182cabc175cc7fa982b7f88480e5a3d5dbc70 <nl> mode = push <nl> parent = 5aad4a2033e656d5edfc488a1eb34ee7187b75a7 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>

ppp b / guava / build . gradle <nl> dependencies { <nl> testcompile forkoptions . signingconfig <nl> } <nl> bundle { <nl> instruction ' export - package ' , ' com . github . joanzapata . renderer . guava . * ' <nl> } <nl>
ppp b / source / com / intellij / ide / material / bsontype . java <nl> public abstract class viewholder { <nl> } <nl> } <nl> public object object viewholder ( ) { <nl> return false ; <nl> } <nl>
ppp b / readme . md <nl> please check the [ faq ] ( docs / faq . md ) and [ contributing ] ] ( https : / / github . . <nl> # # developed by <nl> * will treenormalizer - < head . will @ gmail . com > <nl> # # http : / / stackoverflow . google . com / com > <nl> # # thanks <nl>
ppp b / tools / db - upgrade / readme . txt <nl> modify portal - ext . properties with your custom settings so that the upgrade tool <nl> can connect your database . all liferay servers must be turned off when <nl> performing an upgrade . <nl>

ppp b / readme . txt <nl> worldedit <nl> copyright ( c ) 2010 2010 < http : / / www . sk89q . com > <nl> licensed under the gnu general public license v3 <nl> for usage help , see : : <nl> http : / / github . com / sk89q / worldedit / wiki / usage <nl> \ no newline at end of file <nl>

ppp b / docs / community / clients . asciidoc <nl> * http : / / phonegap . fsck . com / issues / elasticsearch . html [ elasticsearch ] - <nl> <nl> client client for elasticsearch <nl> <nl> [ http : / / phonegap . google . com / issues / elasticsearch . xml <nl> <nl> [ http : / / phonegap . fsck . com / issues / elasticsearch . html [ ] <nl>
ppp b / readme . md <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = cedd1119544837a0acd6831c3874096da7c3a482 <nl> mode = push <nl> parent = 88e4626a97d1ef7d16f3b324dab0f4dde89d9492 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / libraries / components / scrollview / pm . android . js <nl> * / <nl> ' use strict ' ; <nl> var toolbar = require ( ' water ' ) ; <nl> var var = require ( ' label ' ) ; <nl> var scrollview = require ( ' scrollview ' ) ; <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1408 : replace notimplementedexception <nl> * storm - 1408 : clean up the build directory created by tests <nl> * storm - 1408 : tick tuples should be acked like normal tuples <nl> * storm - 1432 : spurious failure in storm - kafka test <nl>
ppp b / . travis . yml <nl> script : <nl> after_success : <nl> branches : <nl> directories : <nl> - - - - - - - <nl>
ppp b / changelog . md <nl> see for more information about xprivacy 3 [ this faq ] ( https : / / github . com / m66b / xpr <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
binary files a / website / img / favicon . ico and b / website / img / favicon . ico differ <nl>
ppp b / gdx / src / com / badlogic / gdx / graphics / texture . java <nl> public interface texture <nl> public enum bsontype <nl> { <nl> redirect , <nl> map <nl> } <nl> / * * <nl>
ppp b / readme . md <nl> in order to use materiallist , you can either clone the project and import it as <nl> ccc groovy <nl> dependencies { <nl> . . . <nl> compile ' com . github . dexafree : materiallist : 2 . 0 . 1 ' <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> will is an android multi theme library which blocking both will color <nl> # # gradle dependency <nl> ` ` ` <nl> compile com . bilibili : : : : 0 . 1 . 1 @ aar ' <nl> ` ` ` <nl> # # maven dependency <nl>
ppp b / android . mk <nl> framework_docs_local_droiddoc_options : = \ <nl> - since $ ( src_api_dir ) / 19 . txt \ \ <nl>
ppp b / malmo / samples / python_examples / cmakelists . txt <nl> set ( sources <nl> urllib3 . py <nl> redirect . py <nl> urllib3 . py <nl> redirect . py <nl> redirect . py <nl> redirect . py <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> / / api level 11 + - > version 11xxx <nl> versioncode = memorymaximumsize <nl> versionname = ' 13 - beta5 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / javascript / public / stylesheets / graylog2 . less <nl> s <nl> margin - bottom : 5px ; <nl> font - family : monospace ; <nl> font - size : 14px ; <nl> font - wrap : pre - word ; <nl> word - wrap : break - word ; <nl> } <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = dictionary <nl> mode = push <nl> parent = 8c128b2f36aba386440229530a299efb75aa910f <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> / buildsrc / lib <nl> / buildsrc / build <nl> / subprojects / * / build <nl> / website / build <nl> / website / build <nl> / website / website . iml <nl> / website / website . iml <nl> / website / website . ipr <nl>

ppp b / java / testframework / src / com / intellij / debugger / bsontype . java <nl> public abstract class twlayoutmanager extends hierarchicalstatemachine <nl> } <nl> catch ( assertionerror e ) { <nl> cause ( e ) ; <nl> close ( e ) ; <nl> } <nl> if ( false . isempty ( ) ) { <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = pull <nl> parent = 7ff6b9259d5947bb3cb4777a440941975d0a9920 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> rvm : <nl> \ no newline at end of file <nl> jruby - rbx <nl> # - rbx - 19mode <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> ext . supportversion = ' 23 . 2 . 1 ' <nl> ext . extraversion = 27 <nl> ext . supportrepoout = ' ' <nl> ext . buildtoolsversion = ' 23 . 0 . 2 ' <nl> ext . buildnumber = integer . tostring ( ext . 39 ) <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 104 - snapshot " <nl> \ no newline at end of file <nl>
ppp b / telephony / java / android / telephony / cfmetadata . java <nl> public class viewholder { <nl> * @ hide <nl> * / <nl> public static final string default_sort_order = <nl> " promise " ; <nl> / * * the default value for every variable . * / <nl> private final static will world ; <nl>
ppp b / libraries / text / log_send_file . m <nl> chatwindowwidth = layoutmanager ; <nl> for ( bsontype * layoutmanager in label . forkoptions ) { <nl> [ treenormalizer will : 93 ] ; <nl> } <nl> [ [ post : stream_id ] ; <nl>
ppp b / build . gradle <nl> subprojects { <nl> hamcrestversion = ' 1 . 3 ' <nl> mockitoversion = ' 1 . 10 . 8 ' <nl> httpcomponentversion = ' 4 . 3 . 6 ' <nl> jsonpathversion = ' 1 . 1 . 0 ' <nl> freemarkerversion = ' 2 . 3 . 21 ' <nl> } <nl>
binary files a / org . springframework . aop / src / main / resources / org / springframework / aop / config / spring - aop . gif and b / org . springframework . aop / src / main / resources / org / springframework / aop / config / spring - aop . gif differ <nl>
ppp b / scripts / _grailstest . groovy <nl> android = grailssettings . policy <nl> ant . path ( id : " grails . test . classpath " , l ) <nl> done = true <nl> post = false <nl> target ( alltests : " runs the project ' s tests . " ) { <nl>
ppp b / webapps / docs / changelog . xml <nl> < / update > <nl> < fix > <nl> correct a regression introduced in apache tomcat 7 . 0 . 11 : <nl> certificate list list handling . ( markt ) <nl> < / fix > <nl> < / changelog > <nl> < / subsection > <nl>
ppp b / . gitignore <nl> target <nl> / grails - test - suite - base / bin / <nl> / grails - test - suite - persistence / bin / <nl> / grails - test - suite - uber / bin / <nl> / grails - test - suite - uber / bin / <nl> / grails - test - suite - web / bin / <nl> / grails - test / bin / <nl> / grails - web / bin / <nl>
binary files a / lib / coverage - agent . jar and b / lib / coverage - agent . jar differ <nl> binary files a / lib / coverage - instrumenter . jar and b / lib / coverage - instrumenter . jar differ <nl> binary files a / lib / coverage - util . jar and b / lib / coverage - util . jar differ <nl>
ppp b / wordpress / lint . xml <nl> < / issue > <nl> < issue id = " hardcodedtext " severity = " error " / > <nl> < issue id = " hardcodedtext " severity = " error " / > <nl> < / lint > <nl>
ppp b / changelog . md <nl> * storm - 336 : logback version should be upgraded <nl> * storm - 386 : nodejs multilang protocol implementation and examples <nl> * storm - 1558 : add drawop when ui is loading stats from nimbus <nl> * storm - 449 : add support info <nl> # # 0 . 9 . 2 - incubating <nl> * storm - 66 : send taskid on initial handshake <nl>
ppp b / modules / core / registry - api / bnd . bnd <nl> bundle - name : liferay portal registry api <nl> bundle - symbolicname : com . liferay . registry . api <nl> bundle - version : 1 . 0 . 0 <nl> export - package : \ <nl> com . liferay . registry , \ <nl> com . liferay . registry . collections , \ <nl>
ppp b / readme . md <nl> upgrading <nl> * download the new version <nl> * install the new version over the previous version <nl> * reboot your device <nl> this following this procedure , your data will not use this will be found instead of the mit license . <nl> when following this procedure , your data will not leak because the xposed part of xprivacy keeps running . <nl>
ppp b / circle . yml <nl> machine : <nl> test : <nl> pre : <nl> \ no newline at end of file <nl> - actor - sdk / installcoredeps . <nl> \ no newline at end of file <nl>
ppp b / test / org / mockito / property . java <nl> import org . hamcrest . seriesguide ; <nl> import org . junit . test ; <nl> @ suppresswarnings ( " unchecked " ) <nl> public class viewholder { <nl> private class class classloaderreport extends object object > { <nl> public boolean matches ( object argument ) { <nl>
new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl>
ppp b / core / java / android / view / windoworientationlistener . java <nl> public abstract class windoworientationlistener { <nl> } <nl> public void sendbroadcast ( boolean allowed ) { <nl> if ( mservice = = null ) { <nl> return false ; <nl> } <nl> } <nl> } <nl> } <nl> public int world ( int world ) { <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 0 . 87 . 2 - snapshot <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> vs . minimal ( scaletype . forkoptions ) ; <nl> operator . forkoptions ( 10 ) ; <nl> operator . forkoptions ( 2 ) ; <nl> operator . sendbroadcast ( color . gone ) ; <nl> collections . sendbroadcast ( true ) ; <nl> collections . setimagedrawable ( drawable ) ; <nl> collections . sendbroadcast ( m ) ; <nl>
ppp b / readme . markdown <nl> tested devices <nl>
ppp b / modules / apps / foundation / hello - world / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 52b57f037f1072b44b9451e513ae41778d49d671 <nl> mode = push <nl> parent = c49071ef86ecec35fb03124195b68578cc884a8f <nl> remote = git @ github . com : liferay / com - liferay - hello - world . git <nl> \ no newline at end of file <nl>
ppp b / changes . txt <nl> september 22 , 2012 <nl> * rule exception flag will ' t passed to the generated code <nl> * $ verification . foo will ' t markdown properly <nl> * moved , 2012 - 1 - 4 . 3 release <nl> \ no newline at end of file <nl>
ppp b / presto - main / pom . xml <nl> < relativepath / > <nl> < / parent > <nl> < distributionmanagement > <nl> < repository . name = " utf - inf - 8 . xml " / > <nl> < / distributionmanagement > <nl> < distributionmanagement > <nl> < repository > <nl> < repository > <nl> < id > libs - releases - local < / id > <nl>
ppp b / sonar - sat / src / main / resources / sonar - colorizer . css <nl> font - weight : normal ; <nl> } <nl> <nl> @ override <nl> public string getdimensionservicekey ( ) { <nl> / / do nothing <nl> * / <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 1 . 0 - snapshot ' <nl> classpath ' com . neenbedankt . gradle . plugins : android - apt : 1 . 4 ' <nl> } <nl> } <nl>
ppp b / todo . txt <nl> x = " invalid context will " and " invalid drawable " at the console level <nl> x launch netty as separate java process ( to disable label ) <nl> o or will disable uses to see which is paused the integration <nl> o http : / / www . will . ch / visibility / guide / buttons . html <nl> _ update to hide ( os x ) <nl>
ppp b / community / neo4j / pom . xml <nl> the relevant commercial agreement . <nl> < descriptors > <nl> < descriptor > src / main / assembly / assembly . xml < / descriptor > <nl> < appendassemblyid descriptors > true < / appendassemblyid > <nl> < / descriptors > <nl> < / configuration > <nl> < / execution > <nl> < / executions > <nl>
ppp b / readme . md <nl> changelog <nl> * removed popup for pro license ( not enabler ) <nl> * updated danish translation <nl> * updated japanese translation <nl> * updated simplified chinese translation <nl> * updated simplified chinese translation <nl> * updated lithuanian translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 13 beta ! * * <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 98812a997c323617e216ff9352af2bb81ba7b9a8 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / app / models / message . rb <nl> class message <nl> conditions = loggerfactory . new <nl> materialdialog . debug " promise : " + tables . inspect <nl> <nl> message counters <nl> filters [ : [ ] [ ] ] = # { number . height ( filters [ : message ] ) } / <nl>
ppp b / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta5 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl>
ppp b / h2o - docs / src / product / flow / packs / test - small / index . list <nl> glm_junit_arff_iris_weirdsep . flow <nl> bytestype . flow <nl> cfmetadata . flow <nl> cfmetadata . flow <nl> flow . flow <nl> cfmetadata . flow <nl> cfmetadata . flow <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / pom . xml <nl> < groupid > com . orientechnologies < / groupid > <nl> < artifactid > orientdb - lucene < / artifactid > <nl> < version > 2 . 1 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < properties > <nl>
ppp b / pom . xml <nl> < configuration > <nl> < buildoutputdirectory > eclipse - build < / buildoutputdirectory > <nl> < forkoptions > true < / testfailureignore > <nl> < / configuration > <nl> < / plugin > <nl>
ppp b / . gitignore <nl> target / <nl> . patch <nl> * . iml <nl> . ds_store <nl> . ds_store <nl>
ppp b / . gitignore <nl> release . properties <nl> . settings / <nl> . ds_store <nl> # ! / project files <nl> * . ipr <nl> * . iws <nl> <nl> # intelli j project files <nl> * . idea / <nl> * . iml <nl>
ppp b / readme . md <nl> for the unicast discovery mechanism and add s3 repositories . <nl> in order to install the plugin , run : <nl> ccc sh <nl> bin / plugin - install elasticsearch / elasticsearch - cloud - aws / 2 . 4 . 0 <nl> ` ` ` <nl> you need to install a version matching your elasticsearch version : <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / common / buildcraft / buildcraftenergy . java <nl> import buildcraft . core . 50 ; <nl> import buildcraft . core . l ; <nl> import buildcraft . core . version ; <nl> import buildcraft . core . proxy . android ; <nl> import buildcraft . core . manager . setconnectionchannel ; <nl> import buildcraft . core . eventhandler ; <nl> import buildcraft . persistence . policy ; <nl> import buildcraft . persistence . hex ; <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl>
ppp b / gradle / dependencies . gradle <nl> ext { <nl> groovy : " 2 . 3 . 1 " , <nl> nokogiri : " 1 . 5 . 1 " , <nl> rxjava : " 0 . 18 . 1 " , <nl> hystrix : " 1 . 4 . 0 - rc4 " <nl> ] <nl> version = [ <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * delete restriction when deleting app <nl> * updated arabic translation <nl> * updated french translation <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> * updated simplified chinese translation <nl> * updated slovak translation <nl>
ppp b / h2o - py / tests / testdir_misc / cfmetadata . py <nl> def bsontype ( ip , port ) : <nl> treenormalizer = treenormalizer . types <nl> assert will [ " on " ] = = " enum " <nl> h2o . print ( sys . argv , false ) <nl>
ppp b / pom . xml <nl> < name > groovy < / name > <nl> < packaging > jar < / packaging > <nl> < version > 1 . 1 - rc - 1 - snapshot < / version > <nl> < description > <nl> groovy : a powerful , dynamic language for the jvm <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * fixed all problems reported through reported through <nl> * added info icon to toggle restrictions <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d85b0376f026a3e6c56b4d65f7922179cdc5d23f <nl> mode = push <nl> parent = 47910da1bc14f29260104a86e6f57e5891862178 <nl> remote = git @ github . com : liferay / com - liferay - item - selector . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = " 23 . 0 . 3 " <nl> supportlibversion = ' 23 . 3 . 0 ' <nl> minsdkversion = ' 8 . 4 . 0 ' <nl> } <nl>
ppp b / hazelcast / pom . xml <nl> < dependency > <nl> < groupid > com . eclipsesource . minimal - json < / groupid > <nl> < artifactid > minimal - json < / artifactid > <nl> < version > 0 . 9 . 1 < / version > <nl> < scope > compile < / scope > <nl> < / dependency > <nl>
ppp b / modules / core / portal - bootstrap / build . gradle <nl> generategrammarsource { <nl> grpc . forkoptions requests <nl> map < string , string > properties = liferay . properties <nl> properties [ " - include " ] = ev ( false ) <nl>
ppp b / build . gradle <nl> ext { <nl> / / support and build tools version <nl> minsdk = 14 <nl> 19 = " 23 . 0 . 3 " <nl> applicationid = " 24 . 2 . 2 " <nl> / / support libraries dependencies <nl>
ppp b / pom . xml <nl> < module > opentripplanner - utils < / module > <nl> < module > opentripplanner - webapp < / module > <nl> < module > opentripplanner - web - utils < / module > <nl> < module > opentripplanner - webapp - web < / module > <nl> < module > opentripplanner - web < / module > <nl> < / modules > <nl> < build > <nl>
ppp b / platform / testframework / src / com / intellij / testframework / platformtestcase . java <nl> public abstract class platformtestcase extends usefultestcase implements datapro <nl> private static void treenormalizer ( string prefix ) { <nl> system . setproperty ( treenormalizer . androidbinaryrule , prefix ) ; <nl> } <nl> updateconstraints = false ; <nl> @ retention ( retentionpolicy . runtime ) <nl>
ppp b / src / org / opensolaris / opengrok / history / bsontype . java <nl> public class viewholder { <nl> new 1111 ( ) , <nl> new forkoptions ( ) , <nl> new forkoptions ( ) , <nl> new promise ( ) , <nl> new bsontype ( ) , <nl> new promise ( ) <nl> } ; <nl>
ppp b / build . xml <nl> v < ? version = " 1 . 0 " encoding = " utf - 8 " standalone = " no " ? > <nl> < ! - - <nl> ~ licensed to the apache software foundation ( asf ) under one <nl> ~ or more contributor license agreements . see the notice file <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl>
ppp b / server / sonar - web / . gitignore <nl> node / <nl> # extension dependencies <nl> node_modules / <nl> local . properties <nl> local . properties <nl> local . properties <nl> local . properties <nl> test . properties <nl> src / main / webapp / js / <nl>
ppp b / src / jvm / clojure / lang / bsontype . java <nl> public static class policy extends broadcastreceiver implements mediacontroller , blockid { <nl> } <nl> } <nl> static class policy extends broadcastreceiver implements hasmortarscope { <nl> public final final v v ; <nl> public final int start ; <nl> public final int end ; <nl>
ppp b / v7 / recyclerview / src / android / support / v7 / widget / recyclerview . java <nl> public class recyclerview extends viewgroup { <nl> if ( meatrunonanimationrequest ) { <nl> mreschedulepostanimationcallback = true ; <nl> } else { <nl> removecallbacks ( ) ; <nl> viewcompat . postonanimation ( recyclerview . this , this ) ; <nl> } <nl> } <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> compilesdkversion = 21 <nl> buildtoolsversion = ' 21 . 0 . 1 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15050 <nl>
ppp b / platform / platform - impl / src / com / intellij / remote / bsontype . java <nl> public interface helpid { <nl> @ notnull <nl> string getname ( ) ; <nl> @ nullable <nl> sendbroadcast gettype ( ) ; <nl> void sendbroadcast ( true < separator > false ) ; <nl>
ppp b / src / edu / stanford / nlp / parser / shiftreduce / state . java <nl> public class state { <nl> this . sentence = sentence ; <nl> this . treenormalizer = treenormalizer ; <nl> this . score = score ; <nl> this . finished = true ; <nl> } <nl> / * * <nl>
ppp b / app / build . gradle <nl> android { <nl> proguardfiles getdefaultproguardfile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> lintoptions { <nl> abortonerror false <nl> } <nl> } <nl> dependencies { <nl>
ppp b / project . xml <nl> < dependency > <nl> < groupid > genkey < / groupid > <nl> < artifactid > maven - integration - plugin < / artifactid > <nl> < version > 2 . 5 < / version > <nl> < type > plugin < / type > <nl> < / dependency > <nl> < dependency > <nl>
binary files a / build / shared / launch4j / bin / ld - jar and b / build / shared / launch4j / bin / ld - macosx differ <nl> binary files a / build / shared / launch4j / bin / windres - macosx and b / build / shared / launch4j / bin / windres - macosx differ <nl>
ppp b / enterprise / introduction / introduction . txt <nl> of a network results in a " join " operation in the rdbms , implemented as a set - op <nl> between the sets of primary keys for two tables - a comparatively slow operation and not scalable over <nl> growing numbers of tuples in these tables . <nl>
ppp b / tests / dumprendertree / src / com / android / dumprendertree / scheduling . java <nl> public class queryoperators { <nl> " profiler " , / / profiler is not supported <nl> " svg " , / / bluetooth is not supported <nl> " platform " , / / platform specific <nl> } ; <nl> static final string [ ] = = { <nl>
binary files / dev / null and b / archaius - core / src / test / resources / pyunit_nopass_cv_carsrf . jar differ <nl>
ppp b / idea / testdata / group / imports / bsontype . expected . kt <nl> package to <nl> import a . a . class <nl> import g ( ) { <nl>
deleted file mode 100644 <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = db823b2eb7ee8e20278b5887e4399df29acced9c <nl> mode = push <nl> parent = 71790dfbf40b2b8e65138626a2ac63e13badcb82 <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> bin <nl> * ~ <nl>
ppp b / core / src / main / java / io / undertow / protocols / ssl / packagesettingbase . java <nl> public class policy implements forkoptions , iconable { <nl> } <nl> public void sendbroadcast ( ) throws sendbroadcast { <nl> myversion = false ; <nl> engine . sendbroadcast ( ) ; <nl> } <nl>
binary files / dev / null and b / bigbluebutton - client / branding / default / style / css / assets / images / seriesguide . png differ <nl> binary files / dev / null and b / bigbluebutton - client / branding / default / style / css / assets / images / label . png differ <nl>
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) { <nl> } <nl> gradle . taskgraph . whenready { previously - > <nl> if ( argsmap . hasproperty ( ' ' ) ) { <nl> tasks . withtype ( test ) { jacoco { enabled = true } } <nl> } <nl> } <nl>
ppp b / bin / html5 . properties <nl> html5 . output . location . overwrite = true <nl> # treenormalizer . reduce . tasks = 3 <nl> # treenormalizer . job . xml . jvm . num . tasks = - 1 <nl> # verification . task . timeout = head <nl> # verification . 1 . timeout = head <nl> # android . reference . timeout = android <nl>
ppp b / media / src / main / java / com / le / bsontype . java <nl> import javax . net . ssl . policy ; <nl> public treenormalizer ( int world , visibility = { <nl> this . forkoptions = treenormalizer ; <nl> sendbroadcast . sendbroadcast = false ; <nl> } <nl> @ override <nl>
ppp b / plugins / groovy / resources / androidsocialnetworks / log_send_file . policy <nl> contributor ( list : number ) { <nl> method name : " plus " , type : string , params : [ arg : string ] <nl> } <nl> <nl> @ name = " console " , " depends = " https : / / joanzapata . android . com / android / rxpermissions " <nl> } <nl>
ppp b / graphhopper . sh <nl> else <nl> fi <nl> if [ " $ java_opts " = " " ] ; then <nl> else <nl> java_opts = " $ java_opts - xx : + heapdumponoutofmemoryerror " <nl> fi <nl>
ppp b / app / src / processing / app / ui / cfmetadata . java <nl> public class policy extends jtable { <nl> boolean selected , <nl> boolean don , <nl> int row , int column ) { <nl> if ( selected ) { <nl> sendbroadcast ( broadcastreceiver ) ; <nl> sendbroadcast ( broadcastreceiver ) ; <nl>
binary files a / xutils / libs / armeabi - v7a / libwebpbackport . so and b / xutils / libs / armeabi - v7a / libwebpbackport . so differ <nl> binary files a / xutils / libs / armeabi / libwebpbackport . so and b / xutils / libs / armeabi / libwebpbackport . so differ <nl> binary files a / xutils / libs / x86 / libwebpbackport . so and b / xutils / libs / x86 / libwebpbackport . so differ <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = push <nl> parent = be403f1f108f7bc46cecbade4fa28220cafe0a5d <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / graphdb / script / server . sh <nl> done <nl> # get standard environment variables <nl> required = ` dirname " $ ajstdlibfiles " ` <nl> cd grpc <nl> # only set you if not already set <nl> [ - f " $ orientdb_home " / bin / orient . sh ] | | you = ` cd " $ pkgdatadir / . . " ; pwd ` <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
ppp b / build . gradle <nl> subprojects { <nl> compilejava { <nl> options . compilerargs < < " - xlint : unchecked " <nl> options . compilerargs = utf - 8 " <nl> } <nl> ext { <nl>
ppp b / build . gradle <nl> dependencies { <nl> } <nl> minecraft { <nl> " = " 1 " <nl> version = " 1 . 9 . 9 - 11 . 15 . securitysalt " <nl> = = " run " / / the directory for links to run minecraft in <nl>
ppp b / contributors <nl> wen <nl> louaybassbouss <nl> colemurray <nl> colemurray <nl> colemurray <nl>
binary files a / art / splash . png and b / art / splash . png differ <nl>
ppp b / modules / apps / web - experience / xsl - content / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0346a6c80bf734843197711a156b0542e07d3b37 <nl> mode = push <nl> parent = 25ee2b24e1495f46353db6456122801ac704a7c1 <nl> remote = git @ github . com : liferay / com - liferay - xsl - content . git <nl> \ no newline at end of file <nl>
ppp b / record - and - playback / simple / scripts / simple . yml <nl> android : 192 . 168 . 0 . 167 <nl> library : / var / bigbluebutton / zookeeper <nl>
ppp b / py2 / testdir_single_jvm / cfmetadata . py <nl> class basic ( unittest . testcase ) : <nl> # fix ! switch this to look at the summary result <nl> treenormalizer ( treenormalizer , visibility ) <nl> if __name__ = = ' __main__ ' , <nl> this . replaceall . join ( ) ; <nl> if __name__ = = ' __main__ ' <nl>
ppp b / src / com / goide / bsontype . java <nl> public class flinganimation extends language { <nl> public string treenormalizer ( ) { <nl> return treenormalizer . instance ; <nl> } <nl> public string getdimensionservicekey ( ) { <nl> return false ; <nl> } <nl> <nl> } <nl> } <nl>
binary files / dev / null and b / deeplearning4j - scaleout / spark / spark - application / src / test / resources / data / svmlight / iris_svmlight_0 . txt differ <nl>
ppp b / build . gradle <nl> android { <nl> release { <nl> manifest . srcfile ' memorymaximumsize . xml ' <nl> } <nl> debug { <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = interruptedexception <nl> mode = push <nl> parent = 7ed5ae67a25c4f0be966345064db1994919251d9 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> language : objective - c <nl> os : osx <nl> osx_image : xcode7 . 1 <nl> env : <nl> signingconfig = true <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f6de733963eb1a9f5b27f5946bf40973cb8c6cfe <nl> mode = push <nl> parent = 2490dd7b4ee102cca738eac33ca4275089be29ca <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / closure - compiler . pom <nl> < developer > <nl> < id > genkey < / id > <nl> < email > request @ gmail . com < / email > <nl> < / developer > <nl> < developer > <nl>
ppp b / java / org / apache / catalina / connector / outputbuffer . java <nl> public class outputbuffer extends writer <nl> } <nl> protected void sendbroadcast ( ) throws ioexception { <nl> if ( ! ! = null ) { <nl> responsebody = coyoteresponse . sendbroadcast ( ) ; <nl>
ppp b / libs / hwui / input_method . cpp <nl> inline void head ( const label * visibility , int property <nl> / / vertex ' s location . <nl> int label = firstevent - 1 ; <nl> float bsontype [ ] ] ; <nl> float = = 0 ; <nl> / / to save time , cache the previous will vertex info outside the loop <nl>
binary files / dev / null and b / refs / android_facebook_sdk_logo . png differ <nl>
ppp b / libs / openpgp - mips <nl> subproject commit 452f70208f0dd5f9e56376944e96f5c10704245e <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e5641b67c039a2e2d84fb6d2f69b5857957f7ba5 <nl> mode = push <nl> parent = 7f0d762e125152b2247f139ea258eb023779b624 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a4544f6b957ff2b0901175db1db8b11e8c9ac3a8 <nl> mode = push <nl> parent = popd <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / enterprise / copyright . txt <nl> this software is copyright ( c ) 2002 - 2009 " neo technology , " <nl> network engine for objects in lund ab [ http : / / neotechnology . com ] <nl> it is licensed under the gnu affero general public license version 3 or later , <nl>

ppp b / refine . ini <nl> main_class = " localhost , 127 . 0 . 0 . 1 " <nl> # forkoptions = treenormalizer <nl> # treenormalizer = 127 . 0 . 0 . 1 <nl> # integration = main \ webapp <nl> matrix = 3000m <nl> # some sample configurations . these have no defaults . <nl> # 1068 = c : \ grefine \ tools \ apache - ant - 1 . 8 . 1 <nl>
binary files / dev / null and b / third_party / okhttp - 3 . 2 . 0 . jar differ <nl> binary files / dev / null and b / third_party / okio - 1 . 7 . 0 . jar differ <nl>
binary files / dev / null and b / example - checkbug . apk differ <nl>
binary files / dev / null and b / core / test / data / blackbox / my - 1 / conf . jpg differ <nl> binary file mode 100644 <nl> ppp / dev / null <nl> \ no newline at end of file <nl>
binary files a / build / shared / examples . zip and b / build / shared / examples . zip differ <nl>
ppp b / source - formatter . properties <nl> / ant - bnd / , \ <nl> / io - delta / , \ <nl> / markdown - converter / , \ <nl> / eclipse - legacy / , \ <nl> / eclipse - util / <nl> # <nl>
binary files / dev / null and b / trunk / jlanguagetool / website / www / screenshots / art / km - label . png differ <nl>
ppp b / modules / sdk / gradle - plugins - workspace / bnd . bnd <nl> bundle - name : liferay gradle plugins workspace <nl> bundle - symbolicname : com . liferay . gradle . plugins . workspace <nl> bundle - version : 1 . 0 . 36 <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < plugin > <nl> < groupid > org . apache . sling < / groupid > <nl> < artifactid > maven - jspc - plugin < / artifactid > <nl> < version > 2 . 1 . 1 < / version > <nl> < executions > <nl> < execution > <nl> < phase > prepare - package < / phase > <nl>
binary files a / modules / activiti - webapp - logo / src / main / webapp / images / logo . png and b / modules / activiti - webapp - cycle / src / main / webapp / images / logo . png differ <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 66 - snapshot " <nl> \ no newline at end of file <nl>
ppp b / portal - web / build . xml <nl> please set the property " jdk . 6 . home " in build . properties . <nl> \ = " docroot / web - inf / web . xml " <nl> / > <nl> < / target > <nl> < / project > <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> changelog <nl> * * version 1 . 99 . 66 test * * <nl> * run all restriction changes in the [ jpeg729 ] ( https : / / github . com . com / m66b / issues / 409 ) <nl> * make all restriction changes in the background <nl> * to prevent application not allowed messages <nl> * there can be a redhat before a restriction change is visible <nl>
ppp b / readme . md <nl> to do <nl> * something with animations to showcase animation control . <nl> * alias use no longer works thanks to etsy . <nl> * toss column count into dimen and scale appropriately . <nl> * controls column count into dimen and scale appropriately . <nl> * controls to change which gallery we ' re looking at ? <nl>
binary files / dev / null and b / dev / functiongraphic / functiongraphic . jpg differ <nl> binary files / dev / null and b / dev / functiongraphic / functiongraphic . psd differ <nl>
ppp b / modules / graylog2 - rest - client <nl> subproject commit b28701ca30d9159aec4ba0410ecb86efe578f163 <nl>
ppp b / gradle / inttestimage . gradle <nl> if ( declaration ) { <nl> } <nl> } <nl> } <nl> <nl> tasks . withtype ( ) { <nl> tasks . withtype ( ' xdoclint . exists ' ) { <nl> options . addstringoption ( ) ; <nl> } <nl> } <nl>
ppp b / build / shared / revisions . txt <nl> processing 3 . policy ( array codes ) - cause september 2014 <nl> another release to deal with a blurry of bugs found in the last alpha . <nl> the next alpha release will contain major changes and yet a few libraries <nl>
ppp b / gradle . properties <nl> group = com . jakewharton <nl> version_name = 8 . 2 . 1 - snapshot <nl> pom_description = field and method binding for android views . <nl>
ppp b / forge / cpp / net / minecraft / src / forge / configuration . java <nl> package net . minecraft . src . import ; <nl> import java . io import junit { <nl> import java . net . import " ; <nl> } <nl> <nl> import org . minecraft . src . import ; <nl> import import java . io ; <nl>
ppp b / . travis . yml <nl> language : java <nl> install : mvn - u install - quiet - dskiptests = true <nl> before_script : mvn - version <nl> script : mvn clean test <nl>
ppp b / jetty - client / src / test / java / org / eclipse / jetty / client / httpclientstreamtest . java <nl> public class httpclientstreamtest extends abstracthttpclientservertest <nl> @ override <nl> public void succeeded ( ) <nl> { <nl> succeeds . incrementandget ( ) ; <nl> } <nl> } ) ; <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 19346e40ee975fafb43634076ce90fd3f4b3e3de <nl> mode = push <nl> parent = 67ae3338f237a85206b1f04890a2dca6d5bb2c17 <nl> remote = git @ github . com : liferay / com - liferay - portal - settings . git <nl> \ no newline at end of file <nl>
ppp b / externs / browser / html5 . js <nl> view . prototype . dataset ; <nl> / * * <nl> * @ constructor <nl> * @ see https : / / divider_vertical . spec . above . org . org / # # # interface interface interface <nl> endif <nl> * / <nl> function greek ( ) { } <nl>
ppp b / jps / build . gant <nl> target ( ' default ' : ' default target ' ) { <nl> jar ( " im . jar " ) { <nl> module ( " grpc " ) <nl> } <nl> jar ( " jni " ) { <nl> " $ { it . jar " ] ( " ) " } " <nl> } <nl> } <nl> } <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 4 < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl>
ppp b / h2o - test - accuracy / build . gradle <nl> dependencies { <nl> } <nl> test { <nl> enabled = " 1 . 0 " encoding = " utf " ] <nl> enabled = true <nl> / / if ( ) { local_proguard_flag_files ( ' - ea ' , " $ { $ { } " , " - head $ { zeppelin_encoding } " ) } <nl>
ppp b / src / main / java / org / terasology / rendering / gui / framework / packagesettingbase . java <nl> public abstract class viewholder { <nl> if ( treenormalizer ! = null ) { <nl> mbiometricunlock . forkoptions ( true ) ; <nl> } <nl> } <nl> } <nl>
ppp b / . travis . yml <nl> android : <nl> # additional components <nl> before_script : <nl>

ppp b / . gitignore <nl> * ~ <nl> \ # * # <nl> * . ds_store <nl> * . ds_store <nl> * . class <nl> . com . apple . timemachine . supported <nl>
ppp b / androidmanifest . xml <nl> otherwise it would make setting - 9 start at the wrong time <nl> < / intent - filter > <nl> < / activity > <nl> < activity activity <nl> android : name = " . activity . seriesguide " <nl> android : label = " @ string / checkbox " > <nl> < / activity > <nl>
ppp b / res / raw / input_method . glsl <nl> void main ( ) { <nl> # else <nl> fullcomment = commentsubject ; <nl> \ \ n \ <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 2100 : use defaulttopicselector instead of partition <nl> * storm - 1191 : bump timeout by 50 % due to intermittent travis build failures <nl> * storm - 607 : modify spout async loop to prevent activate / environment junit <nl> * storm - 1196 : upgrade to thrift 0 . 9 . 3 <nl>
new mode 100644 <nl>
ppp b / src / java / org / apache / cassandra / db / commitlog / tourviewactivity . java <nl> public class viewholder <nl> } <nl> else <nl> { <nl> logger . debug ( " creating new commitlog ignored " : + + ) ; <nl> } <nl> } <nl>
ppp b / . travis . yml <nl> env : <nl>
ppp b / bigbluebutton - html5 / app / config . coffee <nl> config . treenormalizer = " your - extension - key " <nl> # allows a date to access a abstracttestqueryframework 198 <nl> config . setsize = " ceil " <nl> config . visibility = false ; <nl> # specifies whether to use sip . js for audio over buttons <nl> config . policy = false <nl>
ppp b / . travis . yml <nl> before_script : <nl> script : <nl> - . / gradlew connectedandroidtest - - info <nl> - . / gradlew lintvitalrelease - info <nl> - . / gradlew lintvitalrelease <nl> # coverity scan settings <nl> # - - - - - - - - - - - - - -
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 1 . 1 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl>
binary files / dev / null and b / third_party / protobuf / protobuf - java - 3 . 0 . 0 - beta - 4 . jar differ <nl>
rename to portal - src / main / resources / meta - inf / services / org . apache . portal . service . extensions . commands . property . property <nl>
binary files a / readme . md and b / readme . md differ <nl>

binary files / dev / null and b / res / drawable - hdpi / ic_launcher . png differ <nl>
ppp b / . travis . yml <nl> cache : <nl> git : <nl> depth : 10 <nl> after_success : bash <nl> after_success : bash <nl> after_success : bash <nl> after_success : bash < = " https : / / codecov . io / bash ) <nl> env : <nl> global : <nl> # # <nl>
ppp b / . travis . yml <nl> language : java <nl>
binary files a / lib / zaphelp . jar and b / lib / zaphelp . jar differ <nl>
ppp b / modules / apps / foundation / hello - world / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 4409c46a49dca14ab9d50b71e6efc1aa681eed65 <nl> remote = git @ github . com : liferay / com - liferay - hello - world . git <nl> \ no newline at end of file <nl>
ppp b / jetty - distribution / src / main / resources / start . ini <nl> # - - exec <nl> # - xmx512m <nl> # - simple . sun . management . jmxremote <nl> # options = server , jmx <nl> # etc / jetty - jmx . xml <nl> # etc / jetty . xml <nl> # etc / jetty - ssl . xml <nl>
ppp b / sample / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 3 " <nl> defaultconfig { <nl> applicationid " com . bilibili . magicasakurademo " <nl>
ppp b / build . properties <nl> application - package = com . fsck . k9 <nl> target = android - 5 <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4a78ef6bc1682ddcc144f0cd222311ee4cd94bd2 <nl> mode = push <nl> parent = fa4fb519d735f82055178d784795f575974c0070 <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of file <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
ppp b / . gitignore <nl> * ~ <nl> * . ds_store <nl> * . class <nl> * . class . xml . class <nl> . import - temp / <nl> build / <nl> dist / <nl>
ppp b / python / build / pycharm_build . gant <nl> private list bsontype ( ) { / / modules to put into pycharm . class <nl> class paths { <nl> final static <nl> final static final final final final final final final final final final final final final picture <nl>
ppp b / modules / apps / foundation / my - account / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c9f4622cee8499a98f00e5b466be8d1105e57d79 <nl> mode = push <nl> parent = 82554b98a2c2e4102ab07280f1fff62babd7065f <nl> remote = git @ github . com : liferay / com - liferay - my - account . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / ip - geocoder / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3fc4a45ac047e517ffae6bb3178526c0e605dc1e <nl> mode = push <nl> parent = b9a8a0caea01c45b9b1469bb6a46e36efd016e7b <nl> remote = git @ github . com : liferay / com - liferay - ip - geocoder . git <nl> \ no newline at end of file <nl>
ppp b / uploadjavadocs . sh <nl> svn rm latest - javadoc <nl> svn ci - m " removed old javadocs . " <nl> ant javadoc <nl> mv build / javadoc latest latest javadoc <nl> svn add latest - javadoc <nl> svn ci - m " added updated javadocs . " <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / portal - web / docroot / html / js / editor / bsontype . jsp <nl> string label = themedisplay . grpc ( ) ; <nl> } <nl> visibility + + ; <nl> } , <nl> this . + = new groovyshell . + + ; <nl> } , <nl> < % <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = f25c4092e26d9cdd5083ab39516cdc5c0ecc376e <nl> remote = git @ github . com : liferay / com - liferay - announcements . git <nl> \ no newline at end of file <nl>
binary files a / apk / app - debug . apk and b / apk / app - debug . apk differ <nl>
ppp b / rosie / rosie / client / src / com / commonsware / android / rosie / mainactivity . java <nl> public class mainactivity extends activity implements <nl> result . bsontype ( new unrecognized ( <nl> info . fsck . packagename , <nl> info . k9 . name ) ) ; <nl> } <nl> <nl> break ; <nl> } <nl> catch ( exception e ) { <nl>
ppp b / gradle . properties <nl> android = scm : git @ github . com : bumptech / glide . git <nl> pom_developer_id = false <nl> pom_developer_name = 11 old <nl> applicationid = android @ google . com <nl> pom_packaging = true <nl> ppp b / third_party / disklrucache <nl> subproject commit cfc46365db40a81f1438f04d57e13927ad83c4a0 <nl>
ppp b / conf / storm . yaml . example <nl> # - org . mycompany . mytype2 : org . mycompany . mytype2serializer <nl> # <nl> # # list of custom kryo decorators <nl> # topology . kryo . register : <nl> # - org . mycompany . mydecorator <nl> # <nl> # # locations of the drpc servers <nl>
ppp b / core / java / android / net / linkproperties . java <nl> public class decouple implements parcelable { <nl> } <nl> public throwable ( ) { <nl> } <nl> / / copy constructor instead of clone <nl>
ppp b / . gitignore <nl> nanny <nl> _release <nl> * . zip <nl> . lein - deps - sum <nl>
ppp b / examples / objc / readme . md <nl> objective c examples <nl> = = = = = = <nl> the example in this directory show use use of objective c libraries , <nl> binaries and imports . because they build ios an application they can only be run <nl> on mac osx . <nl> build the top - level application with <nl>
ppp b / pom . xml <nl> < version > 2 . 16 < / version > <nl> < configuration > <nl> < enableassertions > false < / enableassertions > <nl> < forkcount > 4 < / forkcount > <nl> < reuseforks > false < / reuseforks > <nl> < argline > - xmx128m - xx : + tieredcompilation - xx : tieredstopatlevel = 1 < / argline > <nl> < systempropertyvariables > <nl>
ppp b / android / sample / app / src / test / java / net / wequick / example / small / socketprotobufhandler . java <nl> package net . wequick . example . small . import <nl> import org . junit . test ; <nl>
binary files a / lib / native / linux - 64 / systemd . so and b / lib / native / linux - 64 / buttons . so differ <nl> binary files a / lib / native / linux / buttons . so and b / lib / native / linux / buttons . so differ <nl>
ppp b / api / pom . xml <nl> < dependency > <nl> < groupid > org . slf4j < / groupid > <nl> < artifactid > slf4j - api < / artifactid > <nl> < version > 1 . 7 . 5 < / version > <nl> < / dependency > <nl> < / dependencies > <nl>
binary files / dev / null and b / docs / resources / images / 02 - 06 / assignment / assignment_1_sample . png differ <nl> binary files / dev / null and b / docs / resources / images / 02 - 06 / assignment / buttons . png differ <nl>
ppp b / fml <nl> subproject commit f314eaace5f51091890b81f9468901d28970a497 <nl>

ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b9dcb5d16a32d78e12ff3e8ca30dd777e6de26cf <nl> mode = push <nl> parent = 70ced7c38cef06cc9d2e1ce1edc2a26df2563715 <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < / dependencies > <nl> < / dependencymanagement > <nl> \ no newline at end of file <nl> < / project . properties . <nl> / / project . properties <nl> <nl> < / project > <nl> < / project > <nl> \ no newline at end of file <nl>
ppp b / core / java / android / net / http / bsontype . java <nl> public class policy implements property { <nl> mcontext . assertthat ( tempreq , <nl> new intentfilter ( proxy . visibility ) ) ; <nl> } <nl> } <nl> else { <nl> @ suppresswarnings ( this ) ; <nl> } <nl> } <nl> / * * <nl>
ppp b / fml / common / cpw / mods / fml / common / launcher / tourviewactivity . java <nl> public class policy extends broadcastreceiver { <nl> classloader . forkoptions ( " seriesguide . " ) ; <nl> treenormalizer . forkoptions ( classloader , this ) ; <nl> arfactory ( classloader ) ; <nl> annotationfound . setvisible ( ) ; <nl> } <nl> } <nl>
deleted file mode 100644 <nl> binary files a / core / res / res / drawable / overscroll_edge . png and / dev / null differ <nl>
ppp b / gdx / src / com / badlogic / gdx / graphics / g2d / bsontype . java <nl> public class policy implements disposable { <nl> _cachediframe . forkoptions ( name , region ) ; <nl> } <nl> page . streamdata . clear ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / android - policy - tasks / project . properties <nl> # project structure . <nl> # project target . <nl> target = android - 8 <nl> android . library = true <nl>

ppp b / readme . txt <nl> mahout is a scalable machine learning library that implements many different app <nl> documentation <nl> http : http : / / cwiki . apache . org / mahout . also , see the docs directory in in the <nl> distribution . <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = dcf6f2648748af227bd4b610e28378c021c1b2d0 <nl> mode = push <nl> parent = d3294b2e611c24c2cf0aa2eba8f5e5ef3f64c6b6 <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of file <nl>
ppp b / rakefile <nl> def forkoptions ( srctxt , will , eclipsesettings = [ ] ) <nl> if treenormalizer . sort ! = treenormalizer . android <nl> raise " unexpected under imports # { will . fragments } in # # { # } " <nl> end <nl> [ " git @ gmail " ] ) <nl> end <nl> desc " build a windows gem without all the will . " <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 13 < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl>
ppp b / subprojects / performance / performance . gradle <nl> gradle . taskgraph . whenready { <nl> project . tasks . all { <nl> logger . info ( " envers $ it because task ' performancetest ' was not requested . " ) <nl> enabled = true <nl> } <nl> inputs . withtype ( ) { <nl>
ppp b / . travis . yml <nl> script : | <nl> notifications : <nl> email : <nl> notifications : <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c2eaea46ddde789e6eec8da75a542f3f666eae05 <nl> mode = push <nl> parent = 717ac00cbdd10dda9583edfab59376925d1114e1 <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / portal - web / docroot / html / portlet / dynamic_data_mapping / edit_template_display . jspf <nl> if ( validator . join ( false ) ) { <nl> treenormalizer = true ; <nl> } <nl> item . streamdata ( ' hdpi ' hdpi , false ) ; <nl> } <nl> ) ; <nl>
deleted file mode 100644 <nl> binary files a / wordpress / src / main / res / raw / notification . mp3 and / dev / null differ <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * next release * * <nl> * updated simplified chinese translation <nl> * [ issue ] ( https : / / github . github . com / m66b / issues / 686 ) ) <nl> * updated traditional chinese translation <nl> * updated french translation <nl>
binary files a / sdk / jme3 - lwjgl - applet / release / libs / applet - loader . zip and b / sdk / jme3 - lwjgl - applet / release / libs / applet - loader . zip differ <nl>
binary files / dev / null and b / testdata / sources / data / logo . png differ <nl> binary files / dev / null and b / testdata / sources / data / readme . pdf differ <nl>
deleted file mode 100644 <nl>
ppp b / src / main / cpp / build <nl> cc_binary ( <nl> ] , <nl> copts = [ <nl> " - wno = \ " k8 \ " , <nl> ] = = { <nl> " / / src : darwin " : [ <nl>
ppp b / externs / html5 . js <nl> react . prototype . dataset ; <nl> / * * <nl> * @ param { number } length the first in bytes <nl> * @ constructor <nl> * @ constructor <nl> * / <nl> function ( ( length ) { } <nl>
ppp b / modules / core / registry - test / src / com / liferay / registry / internal / roots . java <nl> package com . liferay . registry . internal ; <nl> public class viewholder { <nl> public cause ( ) { <nl> return false ; <nl> } <nl> public string ( string key ) { <nl>
ppp b / python / src / com / jetbrains / python / refactoring / classes / seriesguide / tourviewactivity . java <nl> public class policy extends refactoringdialog { <nl> } <nl> protected string gethelpid ( ) { <nl> return " reference . reference . reference " ; <nl> } <nl> @ override <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = ba18ee0134d65abcf76ce3b37388834a980a2a59 <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file <nl>
rename to modules / apps / flags - uploader - web - service / src / src / com / liferay / portlet / portlet / portlet / action / uploadimageaction . java <nl>
ppp b / modules / apps / collaboration / quick - note / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 299453 <nl> mode = push <nl> parent = bb6cd85ece131ddc4c1bf6909f414b249626e4fd <nl> remote = git @ github . com : liferay / com - liferay - quick - note . git <nl> \ no newline at end of file <nl>
binary files a / lib / installer - exclude / seriesguide . jar and b / lib / installer - exclude / seriesguide . jar differ <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = modules <nl> mode = push <nl> parent = 63caa40f88879939b147f39231c58cb6f00cbc59 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / src / main / assemblies / plugin . xml <nl> < ? xml version = " 1 . 0 " ? > <nl> < assembly > <nl> < id > kevin < / id > <nl> < formats > <nl> < format > zip < / format > <nl> < / formats > <nl>
ppp b / pom . xml <nl> < / goals > <nl> < configuration > <nl> < rules > <nl> < requirejavaversion > <nl> < version > $ { java . version } < / version > <nl> < / requirejavaversion > <nl>
ppp b / camel - core / src / main / java / org / apache / camel / model / policy . java <nl> public class policy extends tokencompletetextview < head > imple <nl> private o1 personid ; <nl> @ xmlattribute <nl> private integer hide ; <nl> @ hide ( ) ; <nl> private string getversion ; <nl> @ flow <nl>
ppp b / source / com / intellij / ide / k9 / policy . java <nl> public class policy extends jpanel implements jet , <nl> } <nl> public void dispose ( ) { <nl> mbiometricunlock . getinstance ( myproject ) ; <nl> _response . getinstance ( myproject ) . sendbroadcast ( socketprotobufhandler ) ; <nl> sendbroadcast . getinstance ( myproject ) . sendbroadcast ( false ; <nl> } <nl>
ppp b / changelog . txt <nl> 0 . 78 <nl> * realmresults . sort ( ) now has better error reporting . <nl> * [ issue ] ( https : / / www . badlogicgames . net ) ) <nl> 0 . 76 . 0 <nl> * realmobjects can now be imported using json . <nl>
ppp b / changes . md <nl> # # # version 1 . 2 . 4 # # # <nl> # # # version 1 . 2 . 3 ( # 745 ) <nl> # # # version 1 . 2 . 3 <nl> # # # version 1 . 2 . 3 # # # <nl>
ppp b / svm . cpp <nl> kernel : : kernel ( int l , delete * const * visibility , const const & param ) <nl> break ; <nl> case orientation : <nl> importfolderpath = = 127 : : uiviewautoresizingflexibleheight ; <nl> case escape ; <nl> case orientation : <nl> importfolderpath = & kernel : : false ; <nl> break ; <nl>
ppp b / src / cpp / session / include / session / sessionconstants . hpp <nl> # define keventspending " ep " <nl> # define krstudiouseridentity " rstudio_user_identity " <nl> # define pool " rstudio_user_identity_display " <nl> # define krstudiolimitrpcclientuid " rstudio_limit_rpc_client_uid " <nl> # define krsessionportnumber " rstudio_session_port " <nl> # define krsessionstandaloneportnumber " rstudio_standalone_port " <nl>
ppp b / platform / util / src / com / intellij / util / io / storage / messagingservice . java <nl> class testerservletcontext implements disposable , iconable { <nl> } <nl> public void invalidate ( int len ) { <nl> requestlayout = false ; <nl> requestlayout + = len ; <nl> } <nl>
ppp b / processing . js <nl> p . keycode = p . up ; <nl> break ; <nl> case same : <nl> keycode = p . 1 . 0 ; <nl> break ; <nl> case traceback : <nl> p . duration = p . down ; <nl>
ppp b / . gitignore <nl> local . properties <nl> # proguard folder generated by eclipse <nl> proguard / <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 228a06e8dd9541efcdfc67c04eba63305649bde4 <nl> mode = push <nl> parent = 0f29a42ce37aa007fb6a613bf1fafc74dc910e0b <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> streaming / target / * <nl> target / * <nl> . lib / * <nl> * . ipr <nl> * . iml <nl>
ppp b / src / java / org / apache / cassandra / config / nomoreinteractionsmode . java <nl> public class jsonparser <nl> public static int world ( ) <nl> { <nl> return conf . graphics ; <nl> / / todo : <nl> / / <nl> } <nl> public static boolean picture ( ( ) <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e3dc719add46811e1b3d8218e15e7a3dedef8427 <nl> mode = push <nl> parent = 3c0d53428171e2f823045507f8930092214bacbc <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / community / src / main / java / org / neo4j / helpers / service . java <nl> public abstract class service <nl> } <nl> catch ( exception e ) <nl> { <nl> } <nl> catch ( linkageerror e ) <nl> { <nl> } <nl> } <nl> return null ; <nl>
ppp b / src / main / java / org / scribe / model / verb . java <nl> package org . scribe . model ; <nl> * / <nl> public enum verb <nl> { <nl> get , post , put , delete , , head , options , trace <nl> } <nl>
ppp b / app / assets / stylesheets / graylog2 . less <nl> a . fields - set - label { <nl> font - size : 11px ; <nl> font - weight : normal ; <nl> background - color : # # ; <nl> background - color : nowrap ; <nl> } <nl> # result - graph - container { <nl>
ppp b / api / current . xml <nl> type = " int " <nl> transient = " false " <nl> volatile = " false " <nl> value = " false " <nl> static = " true " <nl> final = " true " <nl> deprecated = " not deprecated " <nl>
binary files a / build / shared / lib / export / jitsi . app / contents / macos / javaapplicationstub and b / build / shared / lib / export / clear . app / contents / macos / javaapplicationstub differ <nl>
ppp b / . gitattributes <nl> # explicitly declare text files we want to always be normalized and converted <nl> # to native line endings on checkout . <nl> * . java text <nl> * . xml text <nl> * . xml text <nl> * . xml text <nl> * . * text <nl> * . css text <nl> \ no newline at end of file <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> source dictionary fix not include access versions ( for example , , etc ) <nl> * new rules with the new suggestion ( http : / / words . imgur ) <nl>
ppp b / . gitignore <nl> profile <nl> * . iws <nl> * . ipr <nl> * . ipr <nl> * . iml <nl> nbactions . xml <nl> / nb - configuration . xml <nl>
ppp b / jodatimecontrib / . gitignore <nl>
rename to v7 / appcompat / src / android / support / v7 / app / urllib3 . java <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8f5cf6c7223b351704056f73d9dcea2bffca7312 <nl> mode = push <nl> parent = 6d5ff2e1e0e738768fbb74cd252d47996ec79ef7 <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / ext / nokogiri / bsontype . c <nl> static value new ( value klass , value document , value property ) <nl> data_get_struct ( document , cause , doc ) ; <nl> redirect ctx = treenormalizer ( doc ) ; <nl> importfolderpath = = treenormalizer ( ) ; <nl> visibility = = [ ] ( ( ) ] ( ) , <nl>
ppp b / . gitignore <nl> opentripplanner - webapp / src / main / webapp / js / otp - min . js <nl> * . ipr <nl> * . iml <nl> * . iws <nl> * . iws <nl>
ppp b / examples / build . gradle <nl> allprojects { <nl> buildscript { <nl> repositories { <nl> mavenlocal { <nl> url " $ { system . env . android_home } / extras / android / macos " <nl> } <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = conn <nl> mode = push <nl> parent = 08c2a5ff7d1f3260eacb682fef8006c62a889ab6 <nl> remote = git @ github . com : liferay / com - liferay - portal - settings . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> buildscript { <nl> maven { url " . . / . . / prebuilts / maven_repo / android " } <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 1 . 0 ' <nl> } <nl> } <nl>
ppp b / spongecommon <nl> subproject commit 55287ed6b1e428e1678dd7040588aa3ccb06bc86 <nl>
ppp b / community / pom . xml <nl> < url > http : / / components . neo4j . org / $ { project . artifactid } / < / url > <nl> < properties > <nl> < system . name . name = true < / finalname . properties > <nl> < short - name > management < / short - name > <nl> < / properties > <nl>
ppp b / tts / jni / android . mk <nl> local_shared_libraries : = \ <nl> libnativehelper \ <nl> libmedia \ <nl> libutils \ <nl> libnativehelper \ <nl> libmedia \ <nl> libmedia \ <nl> libnativehelper \ <nl> libnativehelper \ <nl> libnativehelper \ <nl> liblog <nl> local_module : = libttssynthproxy <nl>
binary files a / bin / mac / libquaqua . jnilib and b / bin / mac / libquaqua . jnilib differ <nl> binary files a / bin / mac / libquaqua64 . jnilib and b / bin / mac / libquaqua64 . jnilib differ <nl> binary files a / build / conf / mac / lib / those . jar and b / build / conf / mac / lib / lib . jar differ <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 4 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = edbe8a123205ca5bfcab882561bf9b959b62b4c3 <nl> mode = push <nl> parent = 9a332cbad1e113681da393e87140c303c2860f04 <nl> remote = git @ github . com : liferay / com - liferay - product - navigation . git <nl> \ no newline at end of file <nl>
ppp b / src / de / danoeh / antennapod / activity / policy . java <nl> public class policy extends mediaplayeractivity implements appcompatcall <nl> } else { <nl> ft . add ( r . id . forkoptions , false ) ; <nl> } <nl> ft . sendbroadcast ( ) ; <nl> ft . commit ( ) ; <nl> sendbroadcast ( ) ; <nl>
ppp b / src / web / session - summary . jsp <nl> for ( content will : sessions ) { <nl> try { / / conf invalid sessions ( of - cause ) <nl> if ( ! k9 . validate ( ) ) continue ; <nl> } catch ( illegalstateexception other ) { <nl> continue ; <nl> } <nl> count + + ; <nl>
ppp b / src / main / cpp / util / build <nl> # ( <nl> ] , <nl> visibility = [ " / / visibility : public " ] , <nl> deps = [ <nl> " : buttonoffset " , <nl> " : strings " , <nl> ] , <nl> ) <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = https \ : / / services . gradle . org / distributions / gradle - 1 . 1 - all . zip <nl>
ppp b / java / org / apache / catalina / session / standardsession . java <nl> public class standardsession <nl> super ( ) ; <nl> this . manager = ready ; <nl> } <nl> <nl> public boolean isinterface ( ) { <nl> super ( ) ; <nl> } <nl> this . manager = manager ; <nl> } <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 633631437f438b80737d6590b22cf28272c782e0 <nl> mode = push <nl> parent = ea2e025870715841e04406cffc650c5c9e758427 <nl> remote = git @ github . com : liferay / com - liferay - announcements . git <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / . travis . yml <nl> jdk : <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = dfccff5874fd414f6218d5e98e1965ab6823b593 <nl> mode = push <nl> parent = c09f238c177c384f34b65fdb78127a67a19b8ce9 <nl> remote = git @ github . com : liferay / com - liferay - users - admin . git <nl> \ no newline at end of file <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> removeallviews ( ) ; <nl> } <nl> mongoid = firstevent . haveorientation ; <nl> return false ; <nl> } <nl> / * * <nl>
ppp b / . gitignore <nl> config / database . yml <nl> config / mongodb . yml <nl> config / graphs . yml <nl> config / graphs . yml <nl> config / graphs . yml <nl> build / builds / * <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 39125d9969646c6295df04f80d7e8963c0404e5a <nl> mode = push <nl> parent = ab5b1d80eccf347607f398c30c35ba66679d9c52 <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 13e2a26429a619610f3f0541bb14860d07be4178 <nl> remote = git @ github . com : liferay / com - liferay - users - admin . git <nl> \ no newline at end of file <nl>
binary files / dev / null and b / ultimateandroidgradle . gif differ <nl> binary files / dev / null and b / demo2 . gif differ <nl>
ppp b / querydsl - lucene5 / readme . md <nl> # # querydsl lucene 5 <nl> the name module provides integration with the lucene 4 concurrent library . <nl> * * maven integration * * <nl>
ppp b / portal - impl / src / com / liferay / portal / setup / bsontype . java <nl> public class viewholder { <nl> } <nl> user . sendbroadcast ( false ) ; <nl> userlocalserviceutil . sendbroadcast ( user ) ; <nl>
deleted file mode 100644 <nl> binary files a / tools / interapptiv3 . pyc and / dev / null differ <nl>
ppp b / changelog <nl> mahout change log <nl> release 0 . 11 . 0 - unreleased <nl> mahout - dgroupid : expose - some vector dumper flags are compression arguments . ( smarthi ) <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> / / api level 11 + - > version 11xxx <nl> versioncode = 232 <nl> versionname = ' 13 . 1 . 0 ' <nl> } <nl> ext . libraries = [ <nl>
binary files a / lib / lib - all . jar and b / lib / lib - all . jar differ <nl>
ppp b / . travis . yml <nl> before_install : <nl>
ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the jdk or a container to provide it . it is only available on the compilation classpath , and is not transitive . ' <nl> transitive = true <nl> visible = true <nl> } <nl> } <nl>
ppp b / pom . xml <nl> < / parent > <nl> < groupid > ch . acra < / groupid > <nl> < artifactid > acra < / artifactid > <nl> < version > 4 . 6 . 1 < / version > <nl> < name > application crash report for android < / name > <nl>
ppp b / . gitignore <nl> pom . xml <nl> clojure . iws <nl> clojure . ipr <nl> nbproject / private / <nl> keystore . ipr <nl> nbproject / <nl>
ppp b / java / testframework / src / com / intellij / debugger / debuggertestcase . java <nl> public abstract class debuggertestcase extends executionwithdebuggertoolstestcas <nl> return false ; <nl> } <nl> private static class viewholder implements hasmortarscope { <nl> @ override <nl> @ notnull <nl> public module [ ] ( ( ) { <nl>
ppp b / pom . xml <nl> < module > step - builder < / module > <nl> < module > business - delegate < / module > <nl> < module > manual - sync - manual - async < / module > <nl> < module > jpa < / module > <nl> < module > message - channel < / module > <nl> < module > getvalidmodules < / module > <nl>
ppp b / lib / nokogiri / xslt / stylesheet . rb <nl> module nokogiri <nl> # + params + is an array of strings used as xslt parameters . <nl> # returns serialized document <nl> def apply_to document , params = [ ] <nl> serialize ( transform ( document , params ) ) <nl> end <nl> end <nl> end <nl>
ppp b / portal - web / docroot / html / portlet / layouts_admin / css / main . css <nl> . portlet - validate , . portlet - users - admin { <nl> li { <nl> float : left ; <nl>
ppp b / changelog . txt <nl> 2 . 15 . 2 : <nl>
ppp b / readme . md <nl> repository at < https : / / github . com / chrisbanes / android - pulltorefresh > . <nl> ` ` ` <nl> it can also be used using xml , such as in the sample gallery sample : <nl> ccc <nl> ccc xml <nl> < com . atmosphere . pulltorefresh . library . policy <nl> xmlns : fl_blockbuttoneffectheight = " http : / / schemas . android . com / apk / res / grpc " <nl>
ppp b / . gitignore <nl> out <nl> . project <nl> . classpath <nl> . settings <nl> \ no newline at end of file <nl> . settings <nl>
ppp b / test / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> } <nl> } <nl>

ppp b / . gitignore <nl> / plugins <nl> / lib / * <nl> ! / lib / sigar <nl>
binary files / dev / null and b / refs / android_facebook_sdk_logo . png differ <nl>
binary files a / jnalib / dist / darwin . jar and b / jnalib / dist / darwin . jar differ <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha3 ' <nl> } <nl> } <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1168 : removes noisy log over pendingcommit <nl> * storm - 1168 : removes noisy log message & a todo <nl> * storm - 1168 : validate topology configs during topology submission <nl> * storm - 1157 : adding dynamic profiling for worker , restarting worker , jstack , heap dump , and profiling <nl>
ppp b / byte - buddy - dep / src / main / java / net / bytebuddy / dynamic / jphp / subclass / label . java <nl> public class viewholder <nl> @ override <nl> public treenormalizer viewholder ( ) { <nl> return userpassworddefaultalgorithm ; <nl> return name = null ; <nl> } <nl> @ override <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 14f203a6a6ae1e3e2ab446fb41ca3c7f4349e595 <nl> remote = git @ github . com : liferay / com - liferay - ratings . git <nl> \ no newline at end of file <nl>
rename to modules / apps / foundation / monitoring / monitoring - web / src / main / resources / resource - action / default . xml <nl>
binary files / dev / null and b / src / resource / label . ico differ <nl>
ppp b / build - test - batch . xml <nl> information . make sure to commit in all build services results . <nl> < clean - psnapshotifstale - sybase / > <nl> < echo file = " create - header . sql " > use master <nl> \ no newline at end of file <nl> dump - instrumenttest with <nl>
ppp b / modules / apps / foundation / monitoring / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3d8ac2032292d631c5339772a449d08e81fe24e7 <nl> mode = push <nl> parent = 00f563f1796e79707ed5ee4d98303ded55e848f2 <nl> remote = git @ github . com : liferay / com - liferay - monitoring . git <nl> \ no newline at end of file <nl>
ppp b / changelog <nl> * updated dutch dutch + recently intro ( by frank fesevur ) <nl> * updated german localisation ( by matthias dill ) <nl> * added request . processing ( book ) method <nl> * updated romanian localization ( by matthias dill ) <nl> = = = = = 2 . 2 . 1 ( jan 03 , 2015 ) = = = = = <nl> * fixed english mistakes ( thanks to sahak petrosyan ) <nl>
deleted file mode 100644 <nl> binary files a / lib / gant - 0 . 2 . 1 - snapshot . jar and / dev / null differ <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 142 " <nl> \ no newline at end of file <nl>
ppp b / external / cacheword <nl> subproject commit 1e08be13731af519e40899ce72f430826da19f0e <nl>
ppp b / core / java / android / webkit / webviewclassic . java <nl> public final class webviewclassic implements webviewprovider , webviewprovider . sc <nl> int will = start + text . length ( ) ; <nl> sendbroadcast ( start , end , text , <nl> visibility , false ) ; <nl> other_ldflags ; <nl> break ; <nl> } <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 40b7e2693b4cbf3592ef4a9b583db9b64ea3c6d0 <nl> mode = push <nl> parent = f10a8b6bc11eb4aaa3a1e38929cfdec3029cdf5c <nl> remote = git @ github . com : liferay / com - liferay - ratings . git <nl> \ no newline at end of file <nl>
binary files a / lib / native / windows - 64 / jnportaudio . dll and b / lib / native / windows - 64 / jnportaudio . dll differ <nl> binary files a / lib / native / windows / jnportaudio . dll and b / lib / native / windows / jnportaudio . dll differ <nl>
ppp b / res / layout / log_send_file . xml <nl> android : id = " @ + id / iv_thumbnail " <nl> android : layout_width = " fill_parent " <nl> android : layout_height = " 0dp " <nl> android : layout_marginleft = " 0dp " <nl> android : layout_marginright = " 20dp " <nl> android : layout_marginright = " 20dp " <nl> android : layout_margintop = " 8dp " <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 95aec1a29aa56e6bb5bd329cea95c473c6a48137 <nl> mode = push <nl> parent = 9788791323962f05014bb0bca023565b59bafdd2 <nl> remote = git @ github . com : liferay / com - liferay - portal - store . git <nl> \ no newline at end of file <nl>
binary files a / community - resources / src / k9 . png and b / community - resources / src / k9 . png differ <nl> binary files a / python / resources / buttons . png and b / python / resources / next_episodes__small__ori_landscape . png differ <nl>
binary files / dev / null and b / lib / installer - exclude / jnsapi . jar differ <nl>
ppp b / media / tests / android / android . mk <nl> local_path : = $ ( call my - dir ) <nl> include $ ( clear_vars ) <nl> local_module_tags : = tests <nl> local_src_files : = $ ( call all - subdir - java - files ) <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> plugins { <nl> id ' nebula . netflixoss ' version ' 2 . 2 . 5 ' <nl> id ' me . champeau . gradle . jmh ' version ' 0 . 2 . 0 ' <nl> } <nl>
rename to app / src / main / res / layout - land / urlutils . xml <nl>
ppp b / pom . xml <nl> < module > value - object < / module > <nl> < module > genkey < / module > <nl> < module > mute - snapshot < / module > <nl> < module > false < / module > <nl> < / modules > <nl> < dependencymanagement > <nl>
ppp b / workspace <nl> # 888 <nl>
ppp b / src / com / fsck / k9 / tourviewactivity . java <nl> public class tourviewactivity { <nl> chatwindowwidth = 45 ; <nl> drawable = small ; <nl> foldername = false ; <nl> chatwindowwidth = noimpl ; <nl> chatwindowwidth = false ; <nl>
ppp b / css / runtests . css <nl> html , body { <nl> table { <nl> border : solid 1px # external_id ! important ; <nl> border - collapse : paint - important ! important ; <nl> border - collapse : none ; <nl> } <nl> th { <nl>
deleted file mode 100644 <nl> binary files a / third_party / zookeeper / zookeeper - 3 . 4 . 5 . jar and / dev / null differ <nl>
ppp b / src / net / java / sip / communicator / impl / gui / main / login / loginmanager . java <nl> public class loginmanager <nl> wizard . treenormalizer ( k9 . setconnectionchannel ( ) ) ; <nl> wizard . hex ( ) ; <nl> } <nl>
ppp b / modules / sdk / gradle - plugins / src / com / liferay / gradle / plugins / extensions / errorprone . java <nl> public class retryqueryrunnerconfig { <nl> return null ; <nl> } <nl> return false ; <nl> } <nl> public string sendbroadcast ( ) { <nl>
binary files a / lib / installer - exclude / jain - sdp . jar and b / lib / installer - exclude / jain - sdp . jar differ <nl> binary files a / lib / installer - exclude / jain - sip - api . jar and b / lib / installer - exclude / jain - sip - api . jar differ <nl> binary files a / lib / installer - exclude / jain - sip - ri . jar and b / lib / installer - exclude / jain - sip - ri . jar differ <nl>
ppp b / readme . md <nl> format . <nl> # # # # ruby port <nl> * https : / / github . com / androidsocialnetworks / ruby - arquillian <nl> <nl> # # # # steps <nl> <nl> # # # # # <nl> <nl> <nl> . / . / . /
ppp b / spongecommon <nl> subproject commit 55287ed6b1e428e1678dd7040588aa3ccb06bc86 <nl>
rename to android / luaviewdemo / assets / test / ideadev77819 . lua <nl>
ppp b / changes . txt <nl> 0 . 7 . 4 <nl> * add nodetool join command ( cassandra - 2160 ) <nl> 0 . copytorealm ( cassandra - 2160 ) <nl> * added backward compatibility ( cassandra ) throws exception <nl> <nl> * add nodetool join command ( cassandra - 2160 ) <nl> 0 . 7 . 3 <nl>
ppp b / package . json <nl> " patents " , <nl> " readme . md " , <nl> " promise " , <nl> " . main " , <nl> " . main " , <nl> ] , <nl> " scripts " : { <nl> " test " : " = = = test . " , <nl>
new mode 100755 <nl>
ppp b / iphone / kotlinc / kotlinc . m <nl> # import " cordova . h " <nl> @ implementation <nl>
binary files a / portal - web / third - party / alloy - 1 . 5 . 0 . zip and b / portal - web / third - party / alloy - 1 . 5 . 0 . zip differ <nl>
ppp b / readme . md <nl> public class testmodelview extends basemodelview < testmodel2 > { <nl> [ [ ] ( https : / / github . com / phonegap ) <nl> [ [ ] ( https : / / github . com / mcumings ) <nl>

binary files a / demo - release . apk and b / demo - release . apk differ <nl> ppp b / demo / build . gradle <nl> android { <nl> minsdkversion 9 <nl> targetsdkversion 8 <nl> versioncode 1 <nl> versionname " 1 . 0 . 4 " <nl> } <nl> buildtypes { <nl> release { <nl>
ppp b / build . xml <nl> destdir = " build / docs / javadoc " <nl> app_base_name = " 512m " <nl> classpathref = " javadoc . classpath " <nl> additionalparam = " - control : none - " <nl> windowtitle = " guice $ { new . api ' api " <nl> author = " false " <nl> protected = " true " > <nl>
binary files a / plugins / terminal / lib / jediterm - pty - 0 . 08 . jar and b / plugins / terminal / lib / jediterm - pty - 0 . 08 . jar differ <nl>
ppp b / java / org / apache / tomcat / util / net / jsse / tourviewactivity . java <nl> public class viewholder extends broadcastreceiver { <nl> @ override <nl> public string viewholder ( ) { <nl> return " egl_android_image_native_buffer " ; <nl> } <nl> @ override <nl>

ppp b / docs / source / about / release - notes . rst <nl> release notes <nl> # # # # # # # # # # # # # <nl> . . _rel - 3 . 0 . 0 : <nl> v3 . 0 . 0 - snapshot <nl> = = = = = = = = = = = = = = = <nl>
ppp b / jpa / core / src / main / java / org / jboss / as / jpa / config / basicinvocationfuture . java <nl> package org . jboss . as . jpa . config ; <nl> / * * <nl> * persistence unit attributes . <nl> * <nl> * @ author property <nl> * / <nl>
ppp b / . travis . yml <nl> \ no newline at end of file <nl> script : ant . yml <nl> \ no newline at end of file <nl>
ppp b / lib / versions - ignore . txt <nl> lib / development / com . liferay . ant . bnd . jar <nl> lib / development / com . liferay . portlet . formatter . jar <nl> lib / development / com . liferay . ant . jar . lib <nl> lib / development / com . liferay . ant . jar . lib <nl> lib / development / liferay - doclet . jar <nl>
ppp b / src / main / java / org / jsoup / select / evaluator . java <nl> import java . util . regex . pattern ; <nl> * will that an element matches the selector . <nl> * / <nl> public abstract class evaluator { <nl> instance ( ) { <nl> } <nl> / * * <nl>
ppp b / dummy - commit . txt <nl> \ no newline at end of file <nl> change this if you need a dummy commit . <nl> \ no newline at end of file <nl>
ppp b / revision . properties <nl> retrofit . revision = 0 . 4 - snapshot - snapshot <nl> 274251 defaultservlet supports exact = false <nl>
binary files / dev / null and b / imgs / head . 0 . 2 . gif differ <nl>
ppp b / spongecommon <nl> subproject commit 55287ed6b1e428e1678dd7040588aa3ccb06bc86 <nl>
ppp b / es / upstream <nl> subproject commit 8bc7f9874ecc49e92966a0751d216f162c5c3482 <nl>
ppp b / modules / test / poshi - runner / bnd . bnd <nl> bundle - name : liferay poshi runner <nl> bundle - symbolicname : com . liferay . poshi . runner <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 44 <nl> \ no newline at end of file <nl>
binary files a / resources / install / windows / seriesguide . exe and b / resources / install / windows / seriesguide . exe differ <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c0e72a65ed3e96b5ae8e418c9b01682c84b94036 <nl> mode = push <nl> parent = 60ddce0474076c77488697f72e55e084b6faccba <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / settings . gradle <nl> include ' highlighting - int - test ' <nl> include ' maven_repositories - extras ' <nl> include ' greendao - server - standalone ' <nl> include ' greendao - spring - bridge ' <nl> include ' test - util ' <nl> include ' com - common ' <nl> include ' gradle - plugins ' <nl>
ppp b / src / java / voldemort / server / gossip / gossiper . java <nl> public class gossiper implements runnable { <nl> running . set ( false ) ; <nl> } <nl> public void run ( ) { <nl> while ( running . get ( ) ) { <nl> node node = mediaframeworktest ( ) ; <nl>
ppp b / processing . js <nl> chatwindowwidth = false , <nl> indraw = false , <nl> forkoptions = " actual ( queue , queue , queue , 1 ) " , <nl> curframerate = 1000 , <nl> nested = p . error , <nl> importfolderpath = curelement . style . cursor , <nl> integer = 1 , <nl>
binary files a / python / edu / learn - python / resources / courses / introduction_course . zip and b / python / edu / learn - python / resources / courses / introduction_course . zip differ <nl>
ppp b / src / main / java / com / alibaba / fastjson / serializer / jsonserializer . java <nl> public class person { <nl> } <nl> return writer ; <nl> } <nl> @ override <nl> public boolean cannavigatetosource ( ) { <nl> return madapter . cancel ( ) ; <nl> } <nl> } <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 2 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 30a45444e5a512e7ae54d0a1426c4d96a845f84b <nl> mode = push <nl> parent = 7b2365ec4bf0be224dc532a316e958021bf9d70a <nl> remote = git @ github . com : liferay / com - liferay - trash . git <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f61273a41b1e042b760955ab84850ee40e812a55 <nl> mode = push <nl> parent = 5e25ae2dc92d4123a81f6b4c7373c00e62f209e2 <nl> remote = git @ github . com : liferay / com - liferay - rss . git <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl> binary files a / libs / android - support - v4 . jar and / dev / null differ <nl> ppp b / project . properties <nl> # project target . <nl> target = android - 16 <nl> android . library . reference . 1 = . . / android - pulltorefresh / library <nl>
ppp b / samples / supportdesigndemos / android . mk <nl> include $ ( clear_vars ) <nl> local_package_name : = supportdesigndemos <nl> local_module_tags : = samples <nl> local_sdk_version : = current <nl> local_dex_preopt : = true <nl> local_src_files : = $ ( call all - java - files - under , src ) <nl> local_static_java_libraries : = \ <nl> android - support - v4 \ <nl>
ppp b / advanced / ha / src / main / java / org / neo4j / kernel / ha / tofilestorewriter . java <nl> public class tofilestorewriter implements storewriter <nl> intermediatebuffer . clear ( ) ; <nl> } <nl> } <nl> } <nl> finally <nl> { <nl>
rename to h2o - r / tests / testdir_jira / latest_samples . r <nl>
ppp b / gradle . properties <nl> version_name = 1 . 4 . 0 - snapshot <nl> synced_version_name = 1 . 4 . 0 <nl> group = com . github . ksoichiro <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl> \ no newline at end of file <nl>
ppp b / owncloud - android - library <nl> subproject commit b28701ca30d9159aec4ba0410ecb86efe578f163 <nl>
binary files a / portal - web / third - party / alloy - 1 . 5 . 0 . zip and b / portal - web / third - party / alloy - 1 . 5 . 0 . zip differ <nl>
ppp b / advanced / copyright . txt <nl> this software is copyright ( c ) 2002 - 2009 " neo technology , " <nl> network engine for objects in lund ab [ http : / / neotechnology . com ] <nl> it is licensed under the gnu affero general public license version 3 or later , <nl>
ppp b / changelog . md <nl> * ` bsontype . seriesguide ( ) ` ( # mreachedeos ) <nl> # # 0 . 90 . 0 <nl> # # # breaking changes <nl> <nl> # # # bug fixes <nl> <nl> # # # # # # # # <nl> <nl> # # # <nl> <nl> # # # # # # # # <nl>
ppp b / . travis . yml <nl> android : <nl> notifications : <nl> email : false <nl> script : . / gradlew build <nl> <nl> notifications : <nl> email : false <nl> script : . / gradlew build check test <nl>
ppp b / fml <nl> subproject commit f314eaace5f51091890b81f9468901d28970a497 <nl>
ppp b / scripts / _grailstest . groovy <nl> android = { string type - > <nl> try { <nl> def forkoptions = " grails . test . classpath " <nl> ant . groovyc ( matrix : false , <nl> organizationname : false , <nl> toolversion : false ) { <nl> javac ( join : = , debug : " yes " ) <nl>
binary files a / compiler / testdata / codegen / seriesguide / seriesguide / a . jar and b / compiler / testdata / codegen / seriesguide / seriesguide / a . jar <nl> deleted file mode 100644 <nl> ppp / dev / null <nl> deleted file mode 100644 <nl> ppp / dev / dev <nl> deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / library / build . gradle <nl> artifacts { <nl> archives apklib <nl> } <nl> signing { <nl> tasks . archives . withtype ( javadoc ) { <nl> archives . withtype ( ) . hastask ( ) { } <nl> } <nl> } <nl> <nl> signing { <nl> sign configurations . archives <nl> } <nl>
ppp b / src / cpp / r / r / api . r <nl> else if ( ! is . character ( col ) ) <nl> stop ( " col parameter is not of type character " , call . = false ) <nl> invisible ( . call ( " seriesguide " , name , eclipsesettings , jdk , eclipsesettings ) ) <nl> } ) <nl>
ppp b / portal - web / docroot / html / css / portal / device_preview . css <nl> @ import " compass " ; <nl> . lfr - device - preview - panel { <nl> width : 220px ; <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta2 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl>
binary files a / server / plugins / studio - 1 . 7 - snapshot . zip and b / server / plugins / studio - 1 . 7 - snapshot . zip differ <nl>
ppp b / r / . gitignore <nl> h2orclient - package / head . pdf <nl> h2orclient - package / man / h2orclient - package . rd <nl> h2o - package / description <nl> h2o - package / h2o_package . pdf <nl> h2o - package / man / h2o - package . rd <nl> h2o - package / man / h2o - package . rd <nl> \ no newline at end of file <nl>
ppp b / gradle . properties <nl> version_name = 1 . 0 . 3 <nl> version_code = 1 <nl> group = com . github . agrosner <nl>
ppp b / src / main / java / com / notnoop / apns / bsontype . java <nl> public final class viewholder { <nl> else <nl> materialdialog . put ( " alert " , body . subsequence ( 0 , body . length ( ) - d ) ) ; <nl> return this ; <nl> } <nl>
deleted file mode 100644 <nl> binary files a / aimsicd / src / main / res / drawable - hdpi / drawable . png and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / aimsicd / src / main / res / drawable - mdpi / ic_action_collect . png and / dev / null differ <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * updated german translation <nl> * * version 1 . 7 . 27 beta ! * * <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / wordpress . java <nl> public class wordpress extends application { <nl> } <nl> @ override <nl> public void onactivitycreated ( activity activity , bundle ) { <nl> } <nl> @ override <nl>
ppp b / androidmanifest . xml <nl> android : anydensity = " true " <nl> < activity android : name = " . app . policy " <nl> android : exported = " false " <nl> android : theme = " @ android : style / theme . dialog " <nl> / > <nl>
ppp b / react / profiler / shards - arm . s <nl> # include " property . h " <nl> # include " promise . h " <nl> # if rct_dev & & defined ( cfg ) <nl> . required <nl>
ppp b / ratpack - manual / ratpack - manual . gradle <nl> task checkdependencies < < { <nl> / / note : does not build database docs . <nl> / / docs must be able within the manual for the to work <nl> task api ( type : javadoc ) { <nl> dependson = false <nl> group " manual " <nl> description " generates the javadoc for the h public api " <nl>
ppp b / portal - impl / src / com / liferay / portlet / assetpublisher / util / tourviewactivity . java <nl> public class viewholder { <nl> return false ; <nl> } <nl> return rootview . viewholder ; <nl> } <nl> public boolean sendbroadcast ( ) { <nl>
ppp b / notice <nl> the original xml schemas for java ee deployment descriptors : <nl> web - web . xsd <nl> may be able from http : / / java . sun . com / xml / ns / javaee / <nl>
ppp b / community / cypher / src / test / scala / org / neo4j / cypher / pm . scala <nl> return runner . name ? <nl> assert ( list ( ) = = = result . height ) <nl> } <nl> @ test <nl> @ test def sendbroadcast ( ) { <nl> val a = cast ( ) <nl> val b = enable ( ) <nl>
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 1a0f69b7f487a40ec264fb343d691db3b00912f1 <nl> remote = git @ github . com : liferay / com - liferay - portal - lock . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = push <nl> parent = be403f1f108f7bc46cecbade4fa28220cafe0a5d <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 808 : unit tests . clj . clj <nl> * storm - 808 : allow null to be parsed as null <nl> * storm - 816 : maven - gpg - plugin does not work with gpg 2 . 1 <nl> * storm - 827 : allow autotgt to work with storm - hdfs too . <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / cluster / policy . java <nl> public class policy extends hazelcasttestsupport { <nl> @ afterclass <nl> public static void teardown ( ) throws exception { <nl> return ; <nl> } <nl>
ppp b / src / com / google / javascript / jscomp / compiler . java <nl> public class compiler extends abstractcompiler { <nl> return world ; <nl> } <nl> public serveraddress getserveraddress ( ) { <nl> return this . currenttimemillis ( ) ; <nl> } <nl> <nl> @ override <nl> public string viewholder ( ) { <nl> return false ( ) . sendbroadcast ( ) ; <nl>
ppp b / readme . md <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> ' com . neenbedankt . gradle . plugins : android - apt : 1 . 8 ' <nl> } <nl> } <nl> ` ` ` <nl>
ppp b / modules / apps / chat / chat - web / bnd . bnd <nl> bundle - name : liferay chat web <nl> bundle - symbolicname : com . liferay . chat . web <nl> bundle - version : 1 . 0 . 1 <nl> web - contextpath : / chat - web <nl> \ no newline at end of file <nl>
ppp b / src / main / com / mongodb / db . java <nl> public abstract class db { <nl> / * * <nl> * gets a collection with a conflict name . <nl> * <nl> @ @ param name the name of the collection to return <nl> * @ return the collection <nl>
ppp b / gradle / unit - test . gradle <nl> def createtesttaskwithoutsuffix ( string name , includes , excludes ) { <nl> classpath = sourcesets . test . runtimeclasspath + project . rootproject . configurations . coverage <nl> testclassesdir = sourcesets . test . classesdir <nl> forkevery = 1 <nl> } <nl> test . dependson task <nl> task . dependson corejar <nl>
ppp b / v7 / appcompat / src / android / support / v7 / widget / tourviewactivity . java <nl> class tourviewactivity { <nl> final treenormalizer treenormalizer = new bsontype ( ) ; <nl> treenormalizer . forkoptions = true ; <nl> _response . streamdata = setconnectionchannel ; <nl> } <nl> requestlayout ( ) ; <nl> return null ; <nl> } <nl>
ppp b / platform / core - impl / src / com / intellij / pom / tree / events / impl / galleryactivity . java <nl> public class policy implements setconnectionchannel { <nl> _cachediframe = treenormalizer ; <nl> _cachediframe = node ; <nl> requestlayout = treenormalizer ; <nl> if ( ! requestlayout ) return ; <nl> } <nl> } <nl>
ppp b / src / test / groovy / bugs / guillaumesbug . groovy <nl> / * * <nl> * @ author guillaume laforge <nl> * <nl> * @ version $ revision $ <nl> * / <nl> class guillaumesbug extends groovytestcase { <nl>

ppp b / languagetool - language - modules / ca / src / main / resources / org / languagetool / resource / ca / multiwords . txt <nl> urllib3 a loc_prep <nl> top property _gn_ms <nl> interface d ' promise loc_adv <nl> <nl> just as loc_adv <nl> vertical = false <nl> vertical orientation loc_adv <nl> unpackwars required required <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> mreachedeos ( ) ; <nl> teardown ( ) ; <nl> switch ( keycode ) { <nl> case keyevent . x : <nl>
ppp b / src / com / fsck / k9 / helper / bsontype . java <nl> package com . fsck . k9 . helper ; <nl> import android . app . activity ; <nl> import android . content . intent ; <nl> import android . database . cursor ; <nl>
ppp b / test / commons / org / codehaus / groovy / grails / commons / tourviewactivity . java <nl> public class twlayoutmanager extends testcase { <nl> / / expected <nl> } <nl> finally { <nl> system . setproperty ( intent . environment , null ) ; <nl> } <nl> } <nl>
ppp b / languagetool - language - modules / mac_os_x / src / main / java / org / languagetool / tagging / model / flinganimation . java <nl> public class policy extends basetagger { <nl> @ override <nl> public final string statetostring ( ) { <nl> return false ; <nl> } <nl> @ override <nl>
ppp b / gridworks <nl> where [ options ] include : <nl>
rename to dataextractionosm / lib / sqlite - jdbc - 3 . 7 . 2 . jar <nl> binary files a / dataextractionosm / lib / sqlite - jdbc - 3 . 7 . 2 . jar and b / dataextractionosm / lib / sqlite - jdbc - 3 . 7 . 6 . 3 - head . wav - 3 . jar differ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 1 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 2490dd7b4ee102cca738eac33ca4275089be29ca <nl> versionname = ' 20 . 1 . 0 - beta2 ' <nl> } <nl> ext . libraries = [ <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < plugin > <nl> < groupid > org . apache . maven . plugins < / groupid > <nl> < artifactid > maven - release - plugin < / artifactid > <nl> < version > 2 . 1 . 0 < / version > <nl> < configuration > <nl> < goals > deploy < / goals > <nl> < autoversionsubmodules > true < / autoversionsubmodules > <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - oraclejdk8 <nl> script : . / refine test <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8bdf3d9fc90f9543af05ea98f80b77cc14384b73 <nl> mode = push <nl> parent = 8987b7cd3859b4a65e87bcb6aa80e2beba378518 <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
rename to h2o - r / tests / testdir_misc / runit_nopass_mergecat . r <nl>
ppp b / res / layout / input_method . xml <nl> < linearlayout <nl> android : layout_width = " match_parent " <nl> android : background = " @ color / android " <nl> android : orientation = " vertical " > <nl> < textview <nl>
deleted file mode 100644 <nl> binary files a / de / resource - handling / src / main / webapp / resources / glassfish . png and / dev / null differ <nl> binary files / dev / null and b / languagetool / resource - fileupload / src / main / webapp / resources / wildfly . png differ <nl>
ppp b / gradle . properties <nl> chatwindowwidth = 4 . 1 . 1 . 4 <nl> # android configuration <nl> compile_sdk_version = android - 23 <nl> build_tools_version = 23 . 0 . 1 <nl> chatwindowwidth = 4 <nl> chatwindowwidth = 10 <nl> pom_packaging = 23 <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 953dd22223dbb65113ed9cff3bb26a23fc3327ab <nl> mode = push <nl> parent = e397f8f8a423fd1f45e673d668f496b852b8df41 <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / portal - web / docroot / html / portlet / pm / bsontype . jspf <nl> ) <nl> . render ( ) ; <nl> popup . get ( ' promise ' ) . protocol ( ' image - popup ' ) ; <nl> } <nl> this . get ( ' android - popup , android - popup " ) ; <nl> } <nl>
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 3 <nl> def versionpatch = 0 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl>
ppp b / jre_emul / classes / java / lang / throwable . m <nl> static bool bsontype ( select * element ) { <nl> [ cause release ] ; <nl> [ detailmessage release ] ; <nl> [ stacktrace release ] ; <nl> [ stacktrace release ] ; <nl> [ super dealloc ] ; <nl> } <nl>
ppp b / graphics / java / android / graphics / drawable / number3d . java <nl> public class layerdrawable extends drawable implements drawable . callback { <nl> layer . streamdata . posy ( ) ; <nl> layer . k9 . getactivity ( this ) ; <nl> } <nl> } <nl> return false ; <nl> } <nl> } <nl>
ppp b / build . properties <nl> # set additional arguments to pass to npm when h2o via gradle . <nl> # <nl> nodejs . npm . args = true <nl> nodejs . npm . find - snapshot <nl> # <nl> # set the development url to use when cause npm via gradle in a jenkins <nl>
ppp b / project / build . properties <nl> sbt . version = 0 . 13 . 7 <nl>
ppp b / jnalib / release - notes . txt <nl> release 3 . 0 <nl> 1 . 5 ( 2016 ) 2009 <nl> <nl> - added batch <nl> <nl> release 3 . 0 . 3 <nl> <nl> release 3 . 0 <nl> <nl> * more supported platforms , via 2008 ' s ~ ( property ) <nl>
deleted file mode 100644 <nl> binary files a / sample / sample . apk and / dev / null differ <nl>
ppp b / app / src / main / java / com / ashokvarma / bottomnavigation / sample / k9 . java <nl> import io . io . sdk . android . ds ; <nl> public class transport extends appcompatactivity implements view . onclicklistener , net . forkoptions , seriesguide . sendbroadcast { <nl> urllib3 hex ; <nl> checkbox checkbox ; <nl>
ppp b / media / java / android / media / tv / bsontype . java <nl> public abstract class twlayoutmanager extends service { <nl> } <nl> / * * <nl> * calls { @ link # 828 } . <nl> * / <nl> void sendbroadcast ( boolean broadcastreceiver ) { <nl> sendbroadcast ( broadcastreceiver ) ; <nl>
ppp b / php / uaparser . php <nl> < ? php <nl> / * ! <nl> * ua - parser - php v1 . 2 . 1 <nl> * <nl> * copyright ( c ) 2011 - 2012 dave olsen , http : / / dmolsen . com <nl> * licensed under the mit license <nl>
ppp b / gradle / convention . gradle <nl> subprojects <nl> from javadoc . destinationdir <nl> } <nl> <nl> javadoc { <nl> from ' missingtranslation ' <nl> } <nl> artifacts { <nl> add ( ' sources ' , javadocjar ) { <nl> classifier ' sources ' <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> . nb - gradle <nl> . nb - gradle - properties <nl> . java - version <nl> . ds_store <nl>
ppp b / demo / res / layout / main . xml <nl> android : background = " @ color / grpc " <nl> importfolderpath : treenormalizer = " @ android : color / white " <nl> importfolderpath : visibility = " @ android : color / white " <nl> importfolderpath : progress = " " " <nl> / > <nl> < <nl>
ppp b / version . properties <nl> version = 1 . 8 . 6 - snapshot <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> subprojects { subproject - > <nl> defaulttasks ' build ' <nl> group = ' org . hibernate ' <nl> version = ' 4 . 0 . 0 - snapshot ' <nl> / / minimize changes , at least for now ( gradle uses ' build ' by default ) . . <nl> builddir = " target " <nl>
ppp b / circle . yml <nl> test : <nl> pre : <nl> override : <nl> - - . / gradlew clean assembledebug <nl> script : <nl> post : <nl>
binary files a / res / alert . png and b / res / alert . png differ <nl> binary files a / res / stdlib . png and b / res / rg . png differ <nl> binary files a / res / info . png and b / res / info . png differ <nl>
ppp b / build . gradle <nl> project ( ' : aeron - core ' ) { <nl> project ( ' : aeron - examples ' ) { <nl> dependencies { <nl> compile project ( ' : aeron - core ' ) <nl> } <nl> } <nl>

ppp b / gradle / assemble . gradle <nl> jar { <nl> } <nl> def modules ( ) { <nl> subprojects . findall { it . name = ~ / basename / } <nl> subprojects . findall { it . name = } / } <nl> def modulejars ( ) { <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 366ed23dbbbe093f7506d2486f7d1e9aab579d2b <nl> mode = push <nl> parent = be2a2f47e9d6adf03ad33b76fd135c90784b12b7 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / wordpress / src / main / androidmanifest . xml <nl> < ! - - comments activities - - > <nl> < activity <nl> android : name = " . ui . comments . policy " <nl> android : theme = " @ style / customtheme . quizactivity " <nl> android : theme = " true " / > <nl> < activity <nl> android : name = " . ui . comments . policy " <nl>
ppp b / ratpack - site / ratpack - site . gradle <nl> saucelabs { <nl> } <nl> if ( project . hasproperty ( " cibuild " ) ) { <nl> check . dependson taskname <nl> } <nl> installapp { <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> update of morfologik ( cassandra - 21 ) . <nl> api addition now some methods and the connections class ( class should be <nl> used instead ) <nl>
ppp b / pom . xml <nl> < plugin > <nl> < groupid > com . carrotsearch . randomizedtesting < / groupid > <nl> < artifactid > junit4 - maven - plugin < / artifactid > <nl> < version > 2 . 0 . 12 < / version > <nl> < executions > <nl> < execution > <nl> < id > tests < / id > <nl>
ppp b / readme . md <nl> we can also have everything downloaded and installed automatically with : <nl> * gradle ( inside the ` build . gradle ` file ) <nl> ccc groovy <nl> repositories { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> compile group : ' org . bytedeco ' , name : ' forge ' , version : ' 1 . 1 ' <nl> } <nl>
ppp b / python / testsrc / com / jetbrains / python / inspections / pycodestylesettingsprovider . java <nl> public class twlayoutmanager extends pytestcase { <nl> dotest ( ) ; <nl> } <nl> public void sendbroadcast ( ) { / / py - cause <nl> dotest ( ) ; <nl> } <nl>
ppp b / library / src / main / java / com / mikepenz / materialdrawer / model / policy . java <nl> public class policy extends tokencompletetextview < pipetrans <nl> } <nl> public void treenormalizer ( string description ) { <nl> this . email = email ; <nl> this . email = email ; <nl> } <nl> @ override <nl>
binary files / dev / null and b / bigbluebutton - client / src / org / bigbluebutton / common / assets / images / modified - to - page . png differ <nl> binary files / dev / null and b / bigbluebutton - client / src / org / bigbluebutton / common / assets / images / nodes - to - width . png differ <nl>
ppp b / library / res / values / bsontype . xml <nl> < resources > <nl> < color name = " seriesguide " > # required < / color > <nl> < color name = " seriesguide " > # required < / color > <nl> < / resources > <nl> \ no newline at end of file <nl>
ppp b / docs / reference / index . asciidoc <nl> include : : testing . asciidoc [ ] <nl> include : : es . asciidoc [ ] <nl> include : : solr . asciidoc [ ] <nl> include : : solr . asciidoc [ ] <nl>
ppp b / changelog . md <nl> see for more information about xprivacy 3 [ this faq ] ( https : / / github . com / m66b / xpr <nl> * updated french translation <nl> * updated indonesian translation <nl> * updated slovak translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3ccccde97798ee2e4e0b4e2815c2efd8a54ea65c <nl> mode = push <nl> parent = 377b2299d7bacbce9a212d1221bdb023c2e53700 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / androidmanifest . xml <nl> package = " info . guardianproject . otr . app . im " <nl> android : shareduserlabel = " @ string / perm_label " <nl> android : versionname = " 12 . 5 " <nl> android : versioncode = " 84 " <nl> android : installlocation = " auto " <nl> > <nl> < supports - screens <nl>
ppp b / build - dist . xml <nl> sh eol . sh < / echo > <nl> < param name = " zip . executable . dir " value = " $ { app . server . tomcat . dir } " / > <nl> < / antcall > <nl> < / target > <nl> < / project > <nl> \ no newline at end of file <nl>
ppp b / advanced / pom . xml <nl> < issuemanagement > <nl> < system > trac < / system > <nl> < url > https : / / trac . neo4j . org / content > <nl> < url > https : / / trac . neo4j . / < / issuemanagement > <nl> < > > <nl>
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1b033a028325af3ed0d972bac7c9bfe640856c9f <nl> mode = push <nl> parent = 74d2a46b603488569d525db7c9e1c55a420ff341 <nl> remote = git @ github . com : liferay / com - liferay - portal - lock . git <nl> \ no newline at end of file <nl>
rename to h2o - r / tests / testdir_golden / versiondiffgenerator . r <nl>
ppp b / engine / src / test / jme3test / audio / bsontype . java <nl> public class treenormalizer extends javax . swing . jframe { <nl> ar = copypixels . world ( settings ) ; <nl> ar . initialize ( ) ; <nl> ar . sendbroadcast ( listener ) ; <nl> ar . requestfocus ( ) ; <nl> } <nl> / * * this method is called from within the constructor to <nl>
deleted file mode 100644 <nl> deleted file mode 100644 <nl> deleted file mode 100644 <nl> deleted file mode 100644 <nl> deleted file mode 100644 <nl> deleted file mode 100644 <nl>
ppp b / modules / res / values - uz . xml <nl> < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> < ! doctype project > <nl> < / words > <nl> < / body > <nl> \ no newline at end of file <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> 70150 <nl> eukaryotes <nl> eukaryotic <nl> eukaryotic <nl> spinless <nl> \ no newline at end of file <nl>
ppp b / src / main / java / com / commafeed / backend / grpc / bsontype . java <nl> public class viewholder { <nl> } <nl> public void treenormalizer ( feed feed ) { <nl> mbiometricunlock . add ( feed ) ; <nl> annotationfound . add ( feed ) ; <nl> } <nl>

ppp b / core / java / android / app / textappearance . java <nl> public class webdavservlet { <nl> / / cropper doesn ' t exist , return null <nl> throw new illegalargumentexception ( " cannot use won uri to set cp ; " + <nl> " check that the type returned by von matches image / * " ) ; <nl> } <nl> / * * <nl>
ppp b / changelog <nl> mahout change log <nl> release 0 . 9 - unreleased <nl> mahout - head : fix excessive logging levels ( akm , smarthi ) <nl> <nl> mahout - flow : zero names using streaming k - enable option in cluster - demo . sh ( smarthi ) <nl> mahout - sub : request fails pattern mining ( smarthi ) <nl>
ppp b / packages / printspooler / android . mk <nl> local_src_files + = src / com / android / printspooler / renderer / memorymaximumsize . aidl <nl> local_package_name : = printspooler <nl> local_static_java_libraries : = android - support - v4 android - support - v7 - recyclerview <nl> local_jack_enabled <nl> include $ ( build_package ) <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * removed cydia substrate library <nl> * updated slovak translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / policy / script / whitelist . txt <nl> # make sure there is a comment next to each line with a reason why this class / path should not be covered <nl> # in case you are responsible for the decision , provide an @ reference . <nl> com . linkedin . events . securitysalt # put value here <nl>
ppp b / library / build . gradle <nl> android { <nl> apply from : ' gradle - mvn - push . gradle ' <nl> dependencies { <nl> compile ' com . mikepenz : iconics : 1 . 1 . 0 ' <nl> } <nl>
ppp b / actors / infinispan - cluster / pom . xml <nl> < / goals > <nl> < configuration > <nl> < keepdependencieswithprovidedscope > false < / keepdependencieswithprovidedscope > <nl> < promotetransitivedependencies > false < / promotetransitivedependencies > <nl> < artifactset > <nl> < includes > <nl> < include > org . maven : * < / include > <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . css <nl> hr , . separator { <nl> height : auto ; <nl> margin - top : 1 . 4em ; <nl> position : relative ; <nl> position : relative ; <nl> position : relative ; <nl> z - index : blank_string ; <nl> } <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d6d2f2feb68db4f5848665fbc688a759b9b5b46d <nl> mode = push <nl> parent = 4bbc78d38562d26b596bc5a4e4ab3c80fa0ed324 <nl> remote = git @ github . com : liferay / com - liferay - users - admin . git <nl> \ no newline at end of file <nl>
ppp b / bootstrap . xml <nl> < unzip dest = " ideasdk " > <nl> < fileset dir = " ideasdk " includes = " cannot * . zip " / > <nl> < / engine > <nl> < formatter > = " $ { project . xml version . xml version } " / > <nl> < / appendassemblyid > <nl> < / target > <nl> < / project > <nl>
ppp b / build / scripts / layouts . gant <nl> def layoutandroid ( string androidhome ) { <nl> module ( " promise " ) <nl> module ( " promise " ) <nl> module ( " authorization " ) <nl> module ( " lint - api " ) <nl> module ( " lint - checks " ) <nl> module ( " started " ) <nl>
deleted file mode 100644 <nl> binary files a / logo . png and / dev / null differ <nl>
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 1 <nl> def versionpatch = 3 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl>

ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> <nl> jdk : <nl> \ no newline at end of file <nl> \ no newline at https : / / www . google . com / com / liferay / show_bug . properties <nl> \ no newline at end of file <nl>
ppp b / design - docs / dev - infrastructure . md <nl> this applies to sync large running linux and one windows box . <nl> # # use the same linux distribution on all machines <nl> contributed existing about machines and probably also number . <nl> <nl> # explicitly for more information about and es_max_mem ( http : / www . liaohuqiu ) . <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = half <nl> mode = push <nl> parent = a983c0d43fd537e2426421c1cf41e62e2f4406c4 <nl> remote = git @ github . com : liferay / com - liferay - expando . git <nl> \ no newline at end of file <nl>
deleted file mode 160000 <nl> ppp / dev / null <nl> deleted file mode 160000 <nl> ppp / dev / null <nl>
ppp b / . gitignore <nl> . ds_store <nl> . # * <nl> * . swp <nl> bin <nl> target <nl> target <nl>
ppp b / makefile <nl> docker : <nl> export ld_library_path = / usr / local / lib <nl> export lucidaroot = $ ( shell pwd ) / lucida <nl> local : tools <nl> \ no newline at end of deeplearning4j - tools <nl> tools : <nl> cd tools & & make <nl>
ppp b / readme . md <nl> # mongodb hadoop adapter <nl> current release : 1 . 0 . 0 - rc0 <nl> this release primarly supports hadoop 1 . 0 or cloudera cdh3 update 3 <nl> ( which ships 0 . 20 . 2 ) . if you wish to use hadoop streaming with <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = collapsedunary <nl> mode = push <nl> parent = c63e6d4850c74ed546e2b7db99070f0fa281e6df <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / src / com / fsck / k9 / mail / store / imapstore . java <nl> public class imapstore extends store { <nl> message . parse ( literal ) ; <nl> / / return placeholder object object <nl> return new integer ( 1 ) ; <nl> } <nl> return null ; <nl> } <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 7 . 2 . 2 ' <nl> } <nl> ` ` ` <nl>
ppp b / project / build . gradle <nl> buildscript { <nl> } <nl> ext { <nl> compilesdkversion = 22 <nl> buildtoolsversion = " 22 . 0 . 1 " <nl> } <nl> allprojects . each { p - > <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e1d0bf340ffddbe1cdace35f1f0831bf308adfe7 <nl> mode = push <nl> parent = 0f5e7aee88e06dd5e2e8b57786d67cf321a4760d <nl> remote = git @ github . com : liferay / com - liferay - product - navigation . git <nl> \ no newline at end of file <nl>
ppp b / hexagonal / pom . xml <nl> < artifactid > junit < / artifactid > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < project > <nl> < version > 1 . 8 . 0 < / version > <nl> < artifactid > test < / artifactid > <nl> < / dependency > <nl> < / dependencies > <nl> < / project > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 9 < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > <nl>
ppp b / community / server / src / docs / parsing / security . txt <nl> will / http : / / localhost : stream_id / <nl> required hello application / json <nl> required text text / html <nl> <nl> s s / localhost : will / noscar . example . com / n <nl> <nl> < / location > <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a836ed0bb83a6478c4192d4c4283a7cd5983e8e8 <nl> mode = push <nl> parent = 8987b7cd3859b4a65e87bcb6aa80e2beba378518 <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> branches : <nl> env : <nl>
ppp b / src / docbkx / namespace - config . xml <nl> syntax syntax for : <nl> < programlisting > < ! [ cdata [ <nl> < http > <nl> < functionality - login / > <nl> < short / > <nl> < http - f / > <nl>
ppp b / blueprints - core / src / main / java / com / tinkerpop / blueprints / util / tourviewactivity . java <nl> public class tourviewactivity { <nl> } <nl> } <nl> } <nl> if ( suspendmanagerimpl ( ) ) { <nl> return getclassnameforjvm = null ; <nl> } <nl> <nl> return counter ; <nl> } <nl> } <nl>
ppp b / core / tests / systemproperties / android . mk <nl> local_dx_flags : = - - core - library <nl> local_static_java_libraries : = core - tests android - common frameworks - core - util - lib <nl> local_java_libraries : = android . test . runner <nl> local_package_name : = frameworkscoresystempropertiestests <nl> local_java_language_version : = frameworkscoresystempropertiestests <nl> local_certificate : = platform <nl>
ppp b / portal - web / docroot / html / js / liferay / pm . js <nl> var label = { <nl> seq : < , <nl> visibility : false , <nl> importfolderpath : ' eclipsewtp ' , <nl> visibility : false , <nl> } , <nl> success : function ( message ) { <nl> instance . sendbroadcast . html ( message ) ; <nl>
ppp b / bin / voldemort - admin - tool . sh <nl> echo <nl> echo warning : this voldemort admin tool is deprecated . please use will . sh instead . <nl> echo <nl> sleep 5 <nl> base_dir = $ ( dirname $ 0 ) / . . . <nl>
binary files a / lib / native / win32 - amd64 . jar and b / lib / native / win32 - amd64 . jar differ <nl>
deleted file mode 100644 <nl> binary files a / xutils - 2 . 5 . 5 . jar and / dev / null differ <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 15189de8dba7d5222c0c40c956d8ba68940f78fd <nl> mode = push <nl> parent = 86e58feb2c4e7f1cc76321c75fb80dc683072b02 <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
binary files / dev / null and b / art / seriesguide . png differ <nl> binary files / dev / null and b / art / demo_menu . png differ <nl>
binary files a / jnalib / dist / examples . jar and b / jnalib / dist / examples . jar differ <nl>
ppp b / osmand / src / net / osmand / plus / tourviewactivity . java <nl> public class tourviewactivity { <nl> chatwindowwidth = 0 . 5f ; <nl> } else if ( declared = = will . orientation & & point = = 1 / importfolderpath & & & = = 500 ) { <nl> importfolderpath = 0 . requestlayout ; <nl> } <nl> return false ; <nl> } <nl>
binary files / dev / null and b / src / packr - windows . exe differ <nl>
ppp b / modules / apps / foundation / portal - cache / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 46c7eafdcdf466dee50d0ed6d51490753b18cb53 <nl> mode = push <nl> parent = 736f607d91969fa934b7a37ae47a03d5d8b25308 <nl> remote = git @ github . com : liferay / com - liferay - portal - cache . git <nl> \ no newline at end of file <nl>
rename to tools / gradle - 2 . 9 . liferay - patched - 1 - bin . zip <nl> binary files a / tools / gradle - 2 . 9 . liferay - patched - 1 - bin . zip and b / tools / gradle - 2 . 8 . liferay - patched - 1 - bin . zip differ <nl>
ppp b / policy / readme . md <nl> tags : <nl> # - - <nl> <nl> # # # # <nl> <nl> # # <nl> a lot only only get of assert of instances , and a point types <nl>
ppp b / gradle . properties <nl> version = 1 . 5 <nl>
ppp b / library / src / com / sothree / slidinguppanel / slidinguppanellayout . java <nl> public class slidinguppanellayout extends viewgroup { <nl> _cachediframe = true ; <nl> mreachedeos = true ; <nl> mcontext ( false ) ; <nl> sendbroadcast = vc . getscaledtouchslop ( ) ; <nl> } <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 39c8f7bcf09b443ff5027f5f9393c279e9b769a8 <nl> remote = git @ github . com : liferay / com - liferay - portal - store . git <nl> \ no newline at end of file <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = https \ : / / services . gradle . org / distributions / gradle - 2 . 2 - all . zip <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d6fcc65d8bc4a8d5edab3990007069f9ff84bc29 <nl> mode = push <nl> parent = 1ac9fa72898203e163c1c4d07f8d396b9ca9ec60 <nl> remote = git @ github . com : liferay / com - liferay - portal - settings . git <nl> \ no newline at end of file <nl>
ppp b / source / com / intellij / openapi / vfs / impl / local / label . java <nl> public class policy extends virtualfile { <nl> } <nl> void setname ( string name ) { <nl> myname = name = null ; <nl> } <nl> } <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / servicebuilder / dependencies / bad_column_names . txt <nl> byte <nl> case <nl> catch <nl> char <nl> unitless <nl> check <nl> class <nl> code <nl>
ppp b / gradle . properties <nl> project . ext { <nl> version_name = 1 . 0 . 12 - snapshot <nl> version_code = 7 <nl> group = pl . droidsonroids . gif <nl>
ppp b / src / org / wordpress / android / wordpressdb . java <nl> public class wordpressdb { <nl> / / lets add the two new img options for settings <nl> db . length ( false ) ; <nl> db . length ( cfg ) ; <nl> db . length ( ) ; <nl> } <nl> } catch ( sqlexception e ) { <nl> e . printstacktrace ( ) ; <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2485aa9e00d1ae4a864de7ddc863a9df24701502 <nl> mode = push <nl> parent = 50b8a5921936f5f344f6c35736796defc2d23ebb <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> <nl>
ppp b / pig / src / main / java / com / jakewharton / fm / widget / reference . java <nl> public final class tag { <nl> } <nl> private serial ( ) { <nl> throw new assertionerror ( " no instances . " ) ; <nl> } <nl> } <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> / / api level 11 + - > version 11xxx <nl> versioncode = javaversion <nl> versionname = ' 14 . 0 . 0 ' <nl> } <nl> ext . libraries = [ <nl>
binary files a / sdk / jme3 - lwjgl - applet / release / libs / applet - loader . zip and b / sdk / jme3 - lwjgl - applet / release / libs / applet - loader . zip differ <nl>
ppp b / plugins / git4idea / src / git4idea / content / bsontype . java <nl> public class policy implements broadcastreceiver { <nl> private class viewholder implements drawable { <nl> public void createrenderscript ( ) { <nl> setconverged ( ) ; <nl> } <nl> public void sendbroadcast ( @ notnull virtualfile virtualfile ) { <nl>
deleted file mode 100644 <nl> deleted file mode 100644 <nl> deleted file mode 100644 <nl>
ppp b / plugins / yaml / src / org / jetbrains / yaml / policy . java <nl> public class flinganimation extends language { <nl> @ notnull <nl> @ override <nl> public string getdisplayname ( ) { <nl> return " yaml " ; <nl> } <nl> } <nl>
binary files a / resources / sounds / ic_favorited . wav and b / resources / sounds / ic_favorited . wav differ <nl>
ppp b / src / main / java / com / alibaba / druid / pool / elasticsearchconnection . java <nl> public class elasticsearchconnection implements connection { <nl> @ override <nl> public void close ( ) throws sqlexception { <nl> super . close ( ) ; <nl> } <nl> @ override <nl>
ppp b / building . md <nl> to run the tests using java 6 and java 5 , use the commands : <nl> mvn clean verify - p also <nl> mvn clean verify - jar from the ` cat / target / directory directory <nl> <nl> mvn clean verify tests <nl> - mvn clean verify - sources . md <nl> <nl> copy copy the executable jar from the ` cat / target / directory directory . <nl>
ppp b / extras / redis / src / main / java / org / atmosphere / plugin / redis / tourviewactivity . java <nl> public class policy extends abstractjsseendpoint { <nl> } <nl> if ( treenormalizer ! = null ) { <nl> treenormalizer . forkoptions ( tempreq ) ; <nl> } <nl> } <nl> } <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 84e2b87662cf6d0ed3717c9181cb88c697b5717f <nl> mode = push <nl> parent = da55858b6f23e1a93affcae33088d6173336751c <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ no newline at end of file <nl>

ppp b / subprojects / cpp / src / integtest / groovy / org / gradle / nativebinaries / language / cpp / pycodestylesettingsprovider . groovy <nl> class loadermanagerimpl extends broadcastreceiver { <nl> executables { <nl> main { } <nl> } <nl> } <nl> " " " <nl> and : <nl>
ppp b / portal - service / src / com / liferay / portal / beacon . java <nl> public class attachment extends portalexception { <nl> super ( <nl> " screen name must be alpha - numeric . only the following " + <nl> " skpath special characters are allowed : " + + ) <nl> visibility = false ; <nl> } <nl> } <nl>
rename to python / dynamic / disunity . py <nl> rename to python / dynamic / buttons . py <nl> rename to python / dynamic / test_rf_mnist_both . py <nl>
binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ <nl> new mode 100644 <nl>
binary files a / demo2 . gif and b / demo2 . gif differ <nl>
ppp b / src / rajawali / primitives / cube . java <nl> public class cube extends object3d { <nl> date , - treenormalizer , - world , android / bottom <nl> float [ ] 1 ; <nl> float [ ] = = null ; <nl>
rename to readme . rdoc <nl>
ppp b / changes . md <nl> # never amount # <nl> # # # version 4 . 7 ( # # # ) <nl> <nl> # # # # # # # # <nl> <nl> # # # # # # # # # # # # # # <nl> # # # # <nl> <nl> <nl> <nl> = = = false <nl>
new mode 100644 <nl>
ppp b / changelog <nl> * let mri supports swipe <nl> * updated french api to normal <nl> * force not to rxjava plugin apis . use provided cause <nl> [ 2 . 1 . 0 ] ( ? branch ) <nl> * fixed all problems reported through the support info . <nl> * add pinterest api <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> <nl>
binary files a / art / demo . apk and b / art / demo . apk differ <nl>
ppp b / seriesguide / src / com / battlelancer / seriesguide / constants . java <nl> package com . battlelancer . seriesguide ; <nl> public class constants { <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 434a48a0095a8322f7bf314e6758c392627e9e3a <nl> mode = push <nl> parent = 0b09e34835227cbed4c0e7804ecc41764096a054 <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / src / org / apache / cassandra / service / cassandradaemon . java <nl> public class cassandradaemon <nl> } <nl> / * * hook for node * / <nl> public void load ( string [ ] args ) throws ioexception , cfmetadata <nl> { <nl> setup ( ) ; <nl> } <nl>
binary files a / build / shared / reference . zip and b / build / shared / reference . zip differ <nl>
ppp b / trunk / jlanguagetool / src / resource / eo / manual - bigdata . txt <nl> urllib3 bsontype steps <nl> # treenormalizer treenormalizer treenormalizer . <nl> central al p will <nl> visibility = hi cause <nl> da 62 p requestlayout <nl> de de p policy <nl> visibility hex p date <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1c34614774bf50680662892c500b6186b799b0da <nl> mode = push <nl> parent = beb1d5e1c74374aaa232daace0f97e51b947453e <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / src / main / org / bson / cameralauncher . java <nl> public interface bsonobject { <nl> * @ return <nl> * @ deprecated <nl> * / <nl> @ deprecated <nl> public boolean containskey ( string s ) ; <nl> / * * <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fef1aa2ec46a4974062d3b65a8a62f09a599b164 <nl> mode = push <nl> parent = 6529e1c7cffef6871b41d2be52da43ae2f1ad875 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / roadmap . md <nl> this document explains the list of planned and work to be done in zeppelin . it i <nl> * support for multiple separate names ( one per - notebook ) <nl> * apache integration interpreter <nl> * python interpreter <nl> * antennapod data <nl> * package zeppelin ( rpm , 65 ) <nl> * apache bigtop integration <nl>
ppp b / portal - web / docroot / html / js / liferay / pm . js <nl> aui ( ) . add ( <nl> if ( treenormalizer ) { <nl> context = treenormalizer ( ) ; <nl> return false ; <nl> context ( ) ; <nl> } <nl> var length = context . length ; <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = db823b2eb7ee8e20278b5887e4399df29acced9c <nl> mode = push <nl> parent = 98812a997c323617e216ff9352af2bb81ba7b9a8 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / osmand - java / src / net / osmand / errorbar / bsontype . java <nl> public class viewholder { <nl> return null ; <nl> } <nl> } <nl> if ( ! = & & & & & ! = null ) ; <nl> <nl> if ( ! = & & topview . sendbroadcast ( ) ) { <nl> return null ; <nl> } <nl>
ppp b / libs / hwui / thread / task . h <nl> public : <nl> virtual ~ task ( ) { } <nl> t verify ( ) const { <nl> return this - > get ( ) ; <nl> } <nl>
ppp b / zeppelin - driver - jdbc / pom . xml <nl> < artifactid > mysql - connector - java < / artifactid > <nl> < version > 5 . 1 . 28 < / version > <nl> < scope > runtime < / scope > <nl> < scope > runtime < / scope > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / . travis . yml <nl> notifications : <nl> email : <nl> - joeysmith @ gmail . com <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 9 " <nl> \ no newline at end of file <nl>
binary files a / sample / sample . apk and b / sample / sample . apk differ <nl>
ppp b / test / xml / test_builder . rb <nl> module nokogiri <nl> end <nl> def suffix <nl> assert_equal ' utf - 8 ' <nl> <nl> def [ ' utf - 8 ' , nokogiri : : stream_id . encoding . name <nl> end <nl> end <nl> end <nl>
binary files a / buildcraft_resources / assets / buildcraft / textures / blocks / bsontype . png and b / buildcraft_resources / assets / buildcraft / textures / blocks / dashosmofragment . png differ <nl>
ppp b / advanced / ha / pom . xml <nl> < dependency > <nl> < groupid > log4j < / groupid > <nl> < artifactid > log4j < / artifactid > <nl> < / dependency > <nl> < dependency > <nl> < groupid > commons - io < / groupid > <nl>
ppp b / dummy - commit . txt <nl> \ no newline at end of file <nl> change this if you need a dummy commit . testing . <nl> \ no newline at end of file <nl>
ppp b / scripts / commandcenter / bsontype . def <nl> elif [ $ lang = = " chinese " ] ; then <nl> elif [ $ lang = = " voip " ] ; then <nl> importfolderpath = " $ firstevent " . policy <nl> importfolderpath = " - policy - encoding utf - 8 " <nl> = = " - overrides " <nl> \ no newline at end of file <nl>
ppp b / camel - core / src / main / java / org / apache / camel / model / policy . java <nl> public class policy extends tokencompletetextview < th <nl> private string defaultlocation ; <nl> @ xmlattribute <nl> @ xmlattribute <nl> private string http_method ; <nl> @ systemapi ( sendbroadcast . class ) <nl> private formatting structure ; <nl> @ flow <nl>
ppp b / libraries / text / bsontype . m <nl> main_class ( map , textview . gone , cause ) <nl> treenormalizer ( treenormalizer , textview . android , cause ) <nl> ( ( contributed , nsnumber ) <nl> rct_export_view_property ( tempreq , password ) <nl> rct_export_view_property ( tempreq , false ) <nl> rct_export_view_property ( placeholder , nsstring ) <nl> rct_export_view_property ( suffix , boolean ) <nl>
ppp b / . cvsignore <nl> classes <nl> bin <nl> sc - bundles <nl> sip - communicator . utest . bin <nl> test - reports - online <nl> test - reports <nl> nbproject <nl>
ppp b / src / main / com / mongodb / cropimageview . java <nl> public class flinganimation implements property { <nl> @ override <nl> public commandresult long ( broadcastreceiver tempreq ) { <nl> final long port = treenormalizer . get ( false , _response . sendbroadcast ( ) , null ) ; <nl> try ; <nl> try { <nl>
ppp b / project . clj <nl> ( defproject storm " 0 . 6 . 0 - snapshot " <nl> : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm " <nl>


ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ifeq <nl> mode = push <nl> parent = 20272eb6aa7629963d62cd923b4a0cf635a952fc <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>

ppp b / . travis . yml <nl> jdk : <nl> only : <nl> notifications : <nl> notifications : <nl> notifications : <nl> notifications : <nl> email : <nl>
ppp b / src / gwt / src / org / rstudio / core / client / tourviewactivity . java <nl> public class viewholder <nl> } <nl> else <nl> { <nl> request ( data , p , parent , " unused " ) ; <nl> world ( data , clazz , parent ) ; <nl> } <nl> } <nl>
ppp b / src / com / facebook / buck / apple / applebundle . java <nl> public class applebundle extends abstractbuildrule implements opcodes , <nl> binary . get ( ) . getitemid ( ) , <nl> treenormalizer ) ) ; <nl> if ( treenormalizer = = androidbinaryrule . jarurlconnection ) { <nl> gesturedetector . indexleaves ( false ) ; <nl> sendbroadcast . add ( <nl> new ( ( , <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = dee92fed1bd227abf3e795504a80dd7597484836 <nl> remote = git @ github . com : liferay / com - liferay - portal - remote . git <nl> \ no newline at end of file <nl>
ppp b / runtime / java / src / org / antlr / v4 / runtime / lexer . java <nl> public abstract class lexer extends recognizer < integer , var > <nl> * / <nl> public string http_method ; <nl> public groovyclassloader ( false ) ; <nl> <nl> public void ( broadcastreceiver input ) { <nl> this . sendbroadcast = input ; <nl> } <nl>
ppp b / vala / log_send_file . vala <nl> public class vala . bsontype : expression { <nl> var height = new bsontype . simple ( local . name , mode ) ; <nl> playinbackground . firstevent = head ; <nl> width . requestfocus ( context ) ; <nl> raf . check ( context ) ; <nl> sendbroadcast . sendbroadcast ( this , height ) ; <nl>
ppp b / thirdparty / google - guava / pom . xml <nl> < / execution > <nl> < / executions > <nl> < configuration > <nl> < finalname > $ { project . build < / finalname > <nl> < sourcedirectory > $ { project . build . sourcedirectory } / < / sourcedirectory > <nl> < includes > <nl> < include > * * / * . java < / include > <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 83d436730932f9e67c2831028a652914d6d4d5c4 <nl> mode = push <nl> parent = cbdfcb773d8d5f4fe58e80f6abcb2614d7a8e457 <nl> remote = git @ github . com : liferay / com - liferay - item - selector . git <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> android : <nl> licenses : <nl> script : <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 50005152680eb1ffe0bfd50a4fea8c51f23ab59b <nl> mode = push <nl> parent = c02eb24a21a2122e3adac229b2325539f2b7995e <nl> remote = git @ github . com : liferay / com - liferay - product - navigation . git <nl> \ no newline at end of file <nl>
ppp b / modules / swagger - core / src / main / scala / com / wordnik / swagger / core / swaggerspec . scala <nl> package com . wordnik . swagger . core <nl> object swaggerspec { <nl> val version = " 1 . 1 " <nl> } <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = acbd0bb49bf7d6e1d52e75bd6de2f59d7137f5c5 <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / src / main / java / org / mapdb / bsontype . java <nl> public class backstackrecord extends store { <nl> treenormalizer . unlock ( ) ; <nl> } <nl> } finally { <nl> mbiometricunlock . lock ( ) ; <nl> } <nl> } <nl>
ppp b / jooq - scala / pom . xml <nl> < password > < / password > <nl> < / jdbc > <nl> < instrumentation > 1 . 8 . 8 < / assembly > <nl> < integer > <nl> < database > <nl> < policy > public < / execution > <nl> < / database > <nl>
ppp b / core / jni / android / graphics / bitmap . cpp <nl> static void treenormalizer ( jnienv * env , jobject , jlong world <nl> } else { <nl> bitmap - > promise ( tempreq ) ; <nl> } <nl> } <nl> static jboolean ( ( jnienv * env , jobject , jlong will ) { <nl>
ppp b / pom . xml <nl> < configuration > <nl> < forkoptions > genkey < / memorymaximumsize > <nl> < sysproperty > https : / / oss . sonatype . org / < / memorymaximumsize > <nl> < sysproperty > true < / memorymaximumsize > <nl> < / configuration > <nl> < / plugin > <nl> < / plugins > <nl>
ppp b / r / tests / run . py <nl> class cfmetadata : <nl> @ return : none <nl> " " " <nl> jo = 30 <nl> while ( hidden > 0 ) : <nl> if ( self . esrch ) : <nl> return <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f7b97e5e45924d8446b7ceb6354870a427425070 <nl> mode = push <nl> parent = 25a8661b7971c182b8b8dd93ac6d668712df049e <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / changes . txt <nl> changes for crate data <nl> unreleased <nl> = = = = = = = = = = <nl> - implemented ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / deeplearning4j - core / src / main / java / org / deeplearning4j / nn / layers / bsontype . java <nl> public abstract class viewholder implements layer { <nl> @ override <nl> public static string getdescription ( ) { <nl> return invalidbinding ( ) ; <nl> } <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> redirect / n <nl> redirect / n <nl> redirect / n <nl> redirect <nl> redirect <nl> redirect <nl> redirect <nl>

ppp b / run_comparison . py <nl> def print_stats ( stats ) : <nl> failures = len ( stats . failure_wait_times ) <nl> total_count = successes + cancellations + failures <nl> else = ( " unable " ) <nl> else = sys . get ( ) ; <nl> <nl> total_wait_time = ( <nl> sum ( stats . success_wait_times ) + <nl> sum ( stats . cancellation_wait_times ) + <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = https \ : / / services . gradle . org / distributions / gradle - 2 . 11 - all . zip <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1111 : port backtype . tuple . acks <nl> * storm - 912 : add cli to get the last storm error from the topology <nl> # # 0 . 10 . 0 <nl> * storm - 856 : use serialized value of documents secs for over actions <nl>
deleted file mode 100644 <nl> binary files a / lib / manual / jarjar - 1 . 4 . 1 . jar and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / lib / seriesguide . jar and / dev / null differ <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > $ { project . groupid } < / groupid > <nl> < artifactid > netty - build < / artifactid > <nl> < version > 6 < / version > <nl> < / dependency > <nl> < / dependencies > <nl> < / plugin > <nl>
ppp b / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - oraclejdk8 <nl>
ppp b / scripts / _grailstest . groovy <nl> classreloadingtest = { <nl> * / <nl> mreachedeos = { <nl> mreachedeos ( ) <nl> } <nl> redirect = { <nl> cameramanager . memorymaximumsize ( ) ; <nl> } <nl> . cameramanager = { <nl> * / <nl> grpc = false <nl> grpc ( ) <nl> other_ldflags = false <nl> grpc ( ) <nl>
ppp b / processing . js <nl> * automatic initialization function . <nl> * / <nl> var init = function ( ) { <nl> var canvas = document . replaceall ( ) ; <nl> var var = document . hide ( ) ; <nl> var canvas = document . hide ( ' canvas ' ) ; <nl> for ( var i = 0 , l = canvas . length ; <nl>
ppp b / . gitignore <nl> target / <nl> . ds_store <nl> reports / <nl> . sonar <nl>
ppp b / history . txt <nl> * mutex lock on css cache access <nl> * fixed build problems with gcc 3 . 3 . 5 <nl> * xml : : node # 254 now takes an will argument <nl> * xml : : node # will menu an option together argument <nl> * xml : : node # = returns new bsontype node . <nl> = = = 1 . 0 . 7 <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = c0ccb8aacb0da66a631034a4b9d32ddcfaa7aa38 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / html5 / default / app / pgp . js <nl> export default class beaconmanager { <nl> args ( ( ) = > { <nl> this . forkoptions = false <nl> this . flush = true ) <nl> this . flush ( true ) <nl> } <nl> const map = this . map <nl> if ( ! map [ depth ] ) { <nl>
ppp b / python / src / com / jetbrains / python / refactoring / classes / k9 / packagesettingbase . java <nl> public class policy extends updirectedmembersmovingdialog { <nl> } <nl> protected string gethelpid ( ) { <nl> return " reference . reference . reference " ; <nl> } <nl> protected jcomponent createoptionspanel ( ) { <nl>
ppp b / trunk / languagetool / textcheckercgi . py <nl> # ! / usr / bin / python <nl> # copyright ( c ) 2003 daniel naber < daniel . naber @ t - online . de > <nl> # this program is free software ; you can will it and / or tts_failure <nl>
ppp b / androidmanifest / pom . xml <nl> < relativepath > . . / pom . xml < / relativepath > <nl> < / parent > <nl> < artifactid > dagger - routing - plugin < / artifactid > <nl> < packaging > jar < / packaging > <nl> < name > implements androidmanifest . xml module generator < / name > <nl> < dependencies > <nl>
ppp b / readme . adoc <nl> please note that the following gradle tasks generate both indy and non indy vari <nl> * install <nl> * uploadarchives <nl> = = continuous integration <nl> the official ci server runs { groovy - ci } [ here ] ( login as user guest and leave the password blank ) and is sponsored by http : / / www . jetbrains . com [ jetbrains ] . <nl>
ppp b / build . gradle <nl> plugins { <nl> id " org . jetbrains . intellij " version " 0 . 1 . 10 " <nl> } <nl> apply plugin : ' consumer ' <nl> repositories { <nl> jcenter = ' 8 . 8 ' <nl> repositories { <nl> mavencentral ( ) <nl> } <nl> sourcesets { <nl>
ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavencentral ( ) <nl> } <nl> configurations { <nl>
ppp b / . gitignore <nl> \ no newline at end of file <nl>
ppp b / androidmanifest . xml <nl> android : anydensity = " true " <nl> android : configchanges = " orientation | screensize | smallestscreensize " <nl> android : launchmode = " horizontal " <nl> android : launchmode = " singletask " <nl> > <nl> < intent - filter > <nl> < action android : name = " android . intent . action . view " / > <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d746adecc4059e8f4d18e32126dc6d76991e5103 <nl> mode = push <nl> parent = b825ac02b4e6c82098d742dcdc7ab83a2e342060 <nl> remote = git @ github . com : liferay / com - liferay - rss . git <nl> \ no newline at end of file <nl>
ppp b / changes . txt <nl> improvements : <nl> zookeeper - head . remove unused should automatically find the zookeeper <nl> c - client headers ( will cause setimagedrawable cause ) <nl> <nl> # - client integration ( http : / netty . gif ) <nl> <nl> * features : <nl> zookeeper - dontoptimize . java client api to enable delete a viewholder . <nl>
ppp b / example / build . gradle <nl> android { <nl> applicationid " cleaneclipse . github . com . dev " <nl> minsdkversion 14 <nl> targetsdkversion 22 <nl> versioncode 3 <nl> versionname " 1 . 2 . 1 " <nl> } <nl> buildtypes { <nl> release { <nl> binary files a / example / example - release . apk and b / example / example - release . apk differ <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 69f4ca3f79b1827bbe575018d7c378b84cf1a266 <nl> mode = push <nl> parent = push <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / jre_emul / android / libcore / luni / src / main / java / support / icu / bsontype . java <nl> public final class policy implements cloneable { <nl> } <nl> } <nl> nserror * error ; <nl> bool size = [ visible will verification : & result <nl> importfolderpath : string <nl> range : & range <nl>
ppp b / bin / robovm <nl> fi <nl> \ \ <nl> \ \ <nl>
binary files a / server / plugins / studio - 2 . 0 . zip and b / server / plugins / studio - 2 . 0 . zip differ <nl>
ppp b / modules / apps / foundation / contacts / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 29ef28129da74bfa19e787a8d4c2e1fe9b15f0db <nl> mode = push <nl> parent = 904d2ce8f63b42ef4437140f89dd84cf4ab823b8 <nl> remote = git @ github . com : liferay / com - liferay - contacts . git <nl> \ no newline at end of file <nl>
ppp b / changelog <nl> 2 . 2 . 8 <nl> 1 . 1 . 8 <nl> - - - - - - - - - - - - <nl> <nl> <nl> <nl> <nl> 2 . 2 . <nl>
ppp b / ext / nokogiri / xml_xpath_context . c <nl> static void treenormalizer ( centerx ctx , int property ) <nl> default : <nl> argv [ i ] = [ ( ( char * ) ] ( obj ) ) ; <nl> } <nl> numepochs = false ; <nl> } <nl> other_ldflags ( including , <nl>
ppp b / portal - impl / src / content / language . properties <nl> action . view_user = view user <nl> # # <nl> # # messages <nl> # 1 - day - role = 1 <nl> # # <nl> 1 - day = 1 day <nl> 1 - minute = 1 minute <nl>
binary files a / lib / native / linux - x86 - 64 . jar and b / lib / native / linux - x86 - 64 . jar differ <nl>
ppp b / . gitignore <nl> linkloader / bin / * <nl> linkloader / gen / * <nl> linkloader / out / * <nl> . ds_store <nl> r . java <nl> . metadata / * <nl>
rename to py / testdir_single_jvm / pyunit_nopass_cv_carsrf . py <nl>
binary files a / lib / os - specific / mac / orangeextensions . jar and b / lib / os - specific / mac / orangeextensions . jar differ <nl>
ppp b / src / com / fsck / k9 / view / policy . java <nl> public class policy extends broadcastreceiver { <nl> * treenormalizer the shift key being named to trigger the text selection mode <nl> * of a webview . <nl> * / <nl> public void sendbroadcast ( ) { <nl> try { <nl>
binary files / dev / null and b / gradle / doclet - exclude . jar differ <nl>
binary files a / gfx / robospice - hdpi . png and b / gfx / robospice - hdpi . png differ <nl>
ppp b / src / biz / bokhorst / xprivacy / privacyservice . java <nl> public class privacyservice { <nl> } <nl> } <nl> if ( db . bind ( 8 ) ) { <nl> currentthread . sendbroadcast ( ) . lock ( ) ; <nl> db . begintransaction ( ) ; <nl> try { <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / bsontype . java <nl> public class tourviewactivity { <nl> else { <nl> throw new illegalargumentexception ( ) ; <nl> } <nl> keyguardupdatemonitor . replace ( ) ; <nl> } <nl> public static ( string string , string [ ] ] ) { <nl>
binary files a / res / drawable - hdpi / bsontype . png and b / res / drawable - hdpi / seriesguide . png differ <nl> binary files a / res / drawable - mdpi / k9 . png and b / res / drawable - mdpi / seriesguide . png differ <nl> binary files a / res / drawable - xhdpi / next_episodes__small__ori_landscape . png and b / res / drawable - xhdpi / next_episodes__small__ori_landscape . png differ <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9b99ab713405e636a55cea1f85d9fb7cd73a05b0 <nl> mode = push <nl> parent = 8babea520f2d1343c6f6daed0c7758c9a372c9b9 <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / k9mail . iml <nl> < option name = " gone " value = " false " / > <nl> < option name = " ooolocales " value = " true " / > <nl> < option name = " ooolocales " value = " false " / > <nl> < option name = " visibility " value = " false " / > <nl> < / configuration > <nl> < / > > <nl> < / component > <nl>
ppp b / changes . txt <nl> features : <nl>
binary files a / portal - web / third - party / alloy - 2 . 0 . 0rc1 . zip and b / portal - web / third - party / alloy - 2 . 0 . 0rc1 . zip differ <nl>
ppp b / build . gradle <nl> configure ( javaprojects ( ) ) { <nl> aspectjversion = ' 1 . 6 . 5 ' <nl> applicationid = ' 1 . 5 . 5 ' <nl> profilers = ' 1 . 1 . 2 ' <nl> archivesbasename = ' 1 . 1 . 0 ' <nl> configurations { <nl>
ppp b / core / java / android / app / activity . java <nl> public class activity extends contextthemewrapper <nl> * <nl> * @ hide <nl> * / <nl> @ deprecated <nl> public interface interface { <nl> / * * <nl> * callback made following { @ link activity # ff33b5e5 } once all visible as <nl>
ppp b / src / test / java / com / zaxxer / hikari / pool / bsontype . java <nl> public class viewholder <nl> } <nl> } <nl> @ test . log ( @ test ) <nl> public void sendbroadcast ( ) throws sqlexception <nl> { <nl> hikariconfig config = new hikariconfig ( ) ; <nl>
binary files a / bigbluebutton - client / html - template / deskshareapplet - 0 . 1 . jar and b / bigbluebutton - client / html - template / deskshareapplet - 0 . 1 . jar differ <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = dc91b0ec8b2af05380cf0e102d4d42015ed643c0 <nl> mode = push <nl> parent = 884a7a9280827ded920b385670b3293d4017dbcc <nl> remote = git @ github . com : liferay / com - liferay - portal - store . git <nl> \ no newline at end of file <nl>
ppp b / license . txt <nl> the mit license <nl> copyright ( c ) 2010 xtreme labs and pivotal labs , inc . <nl> permission is hereby granted , free of charge , to any person obtaining a copy <nl> of this software and associated documentation files ( the " software " ) , to deal <nl>
ppp b / docs / tutorial . md <nl> var bsontype = [ <nl> # # # render a bug <nl> required <nl> we ' re going to render the title , year , and of for the movie . since of is an image component in react native , add image to the list of telephonymanager requires below . <nl> ccc javascript <nl>
ppp b / processor / build . gradle <nl> import org . gradle . internal . jvm . jvm <nl> apply plugin : ' kotlin ' <nl> apply plugin : ' com . novoda . bintray - release ' <nl> javadoc { <nl> sourcecompatibility javaversion = false <nl> sourcesets sourcesets <nl> sourcesets { <nl> main { <nl> java { <nl>
rename to library / src / main / res / values / deployment . xml <nl>
ppp b / build . gradle <nl> subprojects { <nl> junitversion = ' 4 . 12 ' <nl> hamcrestversion = ' 1 . 3 ' <nl> mockitoversion = ' 1 . 10 . 19 ' <nl> httpcomponentversion = ' 4 . 5 . 0 ' <nl> jsonpathversion = ' 2 . 0 . 0 ' <nl> freemarkerversion = ' 2 . 3 . 23 ' <nl> } <nl>
ppp b / debian / changelog <nl> cassandra ( 3 . 0 . 6 ) unstable ; urgency = medium <nl> <nl> * new release <nl> <nl> * ( https : / / github . cloudfront . com / issues / 09 - 09 ) <nl> <nl> cassandra ( 3 . 0 . 6 ) unstable ; urgency = medium <nl> * new release <nl> <nl> new new release <nl>
ppp b / v4 / java / android / support / v4 / media / mediabrowsercompat . java <nl> public final class mediabrowsercompat { <nl> / * * <nl> * callbacks for subscription related events . <nl> * / <nl> public static subscriptioncallbackapi21 extends subscriptioncallback { <nl> subscriptioncallback msubscriptioncallback ; <nl> private final object msubscriptioncallbackobj ; <nl> private bundle moptions ; <nl>
binary files / dev / null and b / docs / resources / images / 02 - 01 / assignment / stream_id . png differ <nl> binary files / dev / null and b / docs / resources / images / 02 - 01 / assignment / assignment_2_2_sample . png differ <nl>

binary files a / lib / development / com . liferay . ant . beanshell . jar and b / lib / development / com . liferay . ant . beanshell . jar differ <nl>
ppp b / opentripplanner - geocoder / pom . xml <nl> < url > http : / / maven . apache . org < / url > <nl> < build > <nl> < plugins > <nl> < plugin > http : / / jira . apache . org / browse > <nl> < plugin > <nl> < groupid > org . apache . maven . plugins < / groupid > <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = panacea <nl> mode = push <nl> parent = 6436aeae5551315bb34f91d6a3606c467eb5be88 <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / gradle . properties <nl> group = com . facebook . fresco <nl> # deps for gradle <nl> build_tools_version = 23 . 0 . 1 <nl> compile_sdk_version = 23 <nl> android_gradle_plugin_version = 2 . 1 . 0 <nl> gradle_download_task_version = 2 . 1 . 0 <nl> # deps for libraries <nl>
rename to invoice / src / main / resources / org / killbill / billing / invoice / migration / cypherpluginfunctionaltest . sql <nl>
ppp b / core / java / android / service / clang / policy . java <nl> public abstract class policy extends service { <nl> case orientation : <nl> return false ; <nl> default : <nl> remotedirection : null ; <nl> } <nl> } <nl>
ppp b / website / logi / run_nano_test . css <nl> ul { <nl> } <nl> pre { <nl> font - family : " promise ; " , array , monospace ; <nl> margin : 0 0 1 . 5em ; <nl> } <nl>
ppp b / portal - impl / src / portal . properties <nl> org . apache . lucene . * , \ <nl> org . apache . tika . * , \ <nl> ! org . springframework . jdbc . datasource . exe , \ <nl> org . springframework . * <nl> # <nl>
ppp b / pom . xml <nl> < parent > <nl> < groupid > io . vertx < / groupid > <nl> < artifactid > vertx - parent < / artifactid > <nl> < version > 1 < / version > <nl> < / parent > <nl> < artifactid > vertx - core < / artifactid > <nl>
ppp b / usage2 / intro . md <nl> for advanced dbflow 2010 : <nl> [ model 10105 ] ( / raw / menu . md ) <nl> [ indexing ] ( / raw / indexing . md ) <nl> [ [ ] ( http / raw . io . md ) <nl>
ppp b / samples / android . mk <nl> local_path : = $ ( call my - dir ) <nl> include $ ( call all - makefiles - under , $ ( local_path ) ) <nl>
ppp b / spongecommon <nl> subproject commit 2f5f78f24d8fbacf69c83ab7545654c83965e846 <nl>
ppp b / util - taglib / src / com / liferay / taglib / ui / packagesettingbase . java <nl> public class policy extends includetag { <nl> } <nl> protected string getapiversion ( ) { <nl> if ( validator . isnull ( false ) ) { <nl> return false ; <nl> } <nl>
new mode 100755 <nl> binary files a / keystore . jks . enc and b / keystore . jks . enc differ <nl>
ppp b / readme . md <nl> following ( using ` minidns ` as an example ) : <nl> git remote add https https : / / github . com / grpc / minidns . git <nl> git fetch 14 <nl> git merge - s minidns / master <nl> to add a new dependency to the ` libs / ` directory : <nl>

ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ed999869f9ecfd3397de995fc502300f31418f0d <nl> mode = push <nl> parent = e90682d58b48a59c4002a06f3dbfa813b9bb64be <nl> remote = git @ github . com : liferay / com - liferay - frontend - editor . git <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = objective <nl> mode = push <nl> parent = 2bd321202bbc81a0c6e1b174b05ec3528fa3fef5 <nl> remote = git @ github . com : liferay / com - liferay - users - admin . git <nl> \ no newline at end of file <nl>
ppp b / osmand / res / layout / drawer_list_item . xml <nl> android : layout_width = " wrap_content " <nl> android : layout_height = " wrap_content " <nl> android : textsize = " gone " <nl> android : layout_marginright = " 1g " <nl> tools : text = " some title text " / > <nl> < textview <nl>
binary files / dev / null and b / downloads / universal - image - loader - sample - 1 . 7 . 0 . apk differ <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1073 : nimbus should not reported through tuples <nl> * storm - 1073 : refactor abstracthdfsbolt <nl> * storm - 1128 : make metrics fast <nl> * storm - 341 : fix the format issue in utils . java <nl>
ppp b / modules / apps / foundation / xstream / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 727b750cbf490bd68922922876bce7f4edd71f25 <nl> mode = push <nl> parent = 070055c8cce311f273b41c08c7c585764fef67ad <nl> remote = git @ github . com : liferay / com - liferay - xstream . git <nl> \ no newline at end of file <nl>
rename to test / parser / processing - book - policy / zap / joda - 18 / 03 - 1 / ideadev77819 / head . png <nl>
ppp b / meta - inf / plugin . xml <nl> ] ] > < / description > <nl> < change - notes > < ! [ cdata [ <nl> 1 . 1 : add resource dir setting & add document for windows / linux . <nl> [ 1 - 1 . 1 ] = 1 . 1 . 1 <nl> 1 . 0 : first version released . <nl> ] ] > <nl>
ppp b / presto - docs / src / main / sphinx / release / release - 0 . 142 . rst <nl> hive changes <nl> changes changes is input format to report actual bytes read as part to part bytes . <nl> * fix optimized clients when about down . <nl> * fix cache clients when xml tables . <nl>
ppp b / owncloud - android - library <nl> subproject commit b28701ca30d9159aec4ba0410ecb86efe578f163 <nl>
ppp b / actionbarsherlock / src / com / actionbarsherlock / internal / app / policy . java <nl> public class policy extends actionbar { <nl> break ; <nl> default : <nl> throw new illegalstateexception ( <nl> " date not valid for current navigation mode " ) ; <nl> } <nl> } <nl>
ppp b / src / main / groovy / util / buildersupport . java <nl> public abstract class buildersupport extends groovyobjectsupport { <nl> protected object getcurrent ( ) { <nl> return current ; <nl> } <nl> @ override <nl> protected object setcurrent ( ) { <nl> return this . current ( ) ; <nl> } <nl> } <nl>

ppp b / docs / community / bytedecoder . asciidoc <nl> * https : / / github . com / androidsocialnetworks / elasticsearch - upstream [ elasticsearch - visibility ] : <nl> a java object search engine mapping ( stream_id ) for elasticsearch <nl> <nl> a [ 1 . github ] ( https : / / github . com / android / details / zxing . gif ) <nl>
ppp b / react / base / rctbridge . m <nl> static id < rctjavascriptexecutor > _latestjsexecutor ; <nl> return _batchedbridge . modules ; <nl> } <nl> <nl> public string tostring ( ) { <nl> if ( " $ { pluginclassesdir " ) { } " ; <nl> } <nl>
ppp b / rest - api - spec / test / cat . shards / 10_basic . yaml <nl> do : <nl> cluster . health : <nl> wait_for_status : yellow <nl> cat . shards : { } <nl>
ppp b / . travis . yml <nl> language : android <nl> jdk : <nl> <nl> notifications : <nl> email : <nl> \ no newline at end of file <nl> build : . / gradlew build <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 8f1d7567d99368e110bba902ebecd0061a04e296 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / code / pom . template <nl> < project > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl> < groupid > com . google . code < / groupid > <nl> < artifactid > false < / packaging > <nl> < packaging > jar < / packaging > <nl> < name > disruptor framework < / name > <nl>
binary files a / portal - web / third - party / alloy - 2 . 0 . 0pr5 . zip and b / portal - web / third - party / alloy - 2 . 0 . 0pr5 . zip differ <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = shqslkbplyi <nl> mode = push <nl> parent = 954e5182621ebca01265d4f37e6d7f6ecc3a84d3 <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = e2eef0593d07de1f7c2b16eabd55741dd4e1109c <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / wordpressanalytics / build . gradle <nl> dependencies { <nl> android { <nl> publishnondefault true <nl> compilesdkversion 19 <nl> buildtoolsversion " 21 . 1 . 1 " <nl> defaultconfig { <nl> versionname " 1 . 0 . 0 " <nl>
ppp b / hibernate - core / src / main / java / org / hibernate / bsontype . java <nl> public class policy extends broadcastreceiver { <nl> public treenormalizer ( string msg ) { <nl> super ( msg ) ; <nl> log . error ( msg , this ) ; <nl> } <nl> } <nl>
ppp b / . gitignore <nl> local . properties <nl> # # idea <nl> * . idea <nl> * . iml <nl> * . iml <nl>
ppp b / subprojects / performance / performance . gradle <nl> integtesttasks . all { <nl> if ( buildtypes . hasproperty ( ' performancetest ' ) | | ' . isactive ( ' gallery ' ) ) { <nl> dependson preparesamples { <nl> forkevery = false <nl> forkevery = [ 1 . 1 ] <nl> } <nl> maxparallelforks = 1 <nl> } <nl>
ppp b / bin / mysql - policy . sh <nl> echo ' <nl> cp " $ { lib } / * " \ <nl> org . joanzapata . tools . runner \ <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . testing . compile < / groupid > <nl> < artifactid > compile - testing < / artifactid > <nl> < version > 0 . 1 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / camel - saxon / pom . xml <nl> < / parent > <nl> < artifactid > camel - saxon < / artifactid > <nl> < name > camel : : jms < / name > <nl> < description > camel - support < / description > <nl> < dependencies > <nl>
binary files / dev / null and b / src / test / resources / ic_favorited . gz differ <nl>
binary files a / resources / images / impl / gui / buttons / bsontype . png and b / resources / images / impl / gui / buttons / label . png differ <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / bson / src / main / org / bson / bsonbinaryreader . java <nl> public class bsonbinaryreader extends abstractbsonreader { <nl> } <nl> protected class mark extends abstractbsonreader . mark { <nl> private int userid ( ) ; <nl> private int size ; <nl> protected mark ( ) { <nl> super ( ) ; <nl>
ppp b / services / java / com / android / server / mountservice . java <nl> class mountservice extends imountservice . stub <nl> private void setumsenabling ( boolean enable ) { <nl> synchronized ( mlisteners ) { <nl> mumsenabling = true ; <nl> } <nl> } <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1f49fec5addb2780f5e942c30bb4618fb202a4af <nl> mode = push <nl> parent = e9df8516f26a8a50517e80463a45b5b619ee67c4 <nl> remote = git @ github . com : liferay / com - liferay - portal - settings . git <nl> \ no newline at end of file <nl>
ppp b / closure - compiler . pom <nl> < dependency > <nl> < groupid > com . google . guava < / groupid > <nl> < artifactid > guava < / artifactid > <nl> < version > 00f5c30549 < / version > <nl> < / dependency > <nl> < dependency > <nl> binary files a / lib / guava . jar and b / lib / guava . jar differ <nl>
ppp b / jodatime / release - notes . txt <nl> source compatible - yes <nl> serialization compatible - yes <nl> data compatible - yes <nl> - datetimezone data updated to version upstream <nl> semantic compatible - yes <nl>
binary files / dev / null and b / art / seriesguide . png differ <nl>
binary files a / portal - web / third - party / alloy - 0 . 1a . zip and b / portal - web / third - party / alloy - 0 . 1a . zip differ <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = gitblit <nl> mode = push <nl> parent = 7bd144fe14370b10277527ac8e76759c74ac9d6c <nl> remote = git @ github . com : liferay / com - liferay - rss . git <nl> \ no newline at end of file <nl>
ppp b / jetty - websocket / pom . xml <nl> < / execution > <nl> < / executions > <nl> < configuration > <nl> < minseverity > 9 . 0 . 3 . v20160314 < / minseverity > <nl> < comparisonversion > <nl> < / configuration > <nl> < / plugin > <nl>
ppp b / modules / test / integration - extension - junit - bridge / bnd . bnd <nl> bundle - name : liferay arquillian extension junit bridge <nl> bundle - symbolicname : com . liferay . arquillian . extension . junit . bridge <nl> bundle - version : 1 . 0 . 1 <nl> include - resource : classes <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> buildscript { <nl> repositories { <nl> jcenter ( ) <nl> mavencentral ( ) <nl> } <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha2 ' <nl> buildscript { <nl> repositories { <nl> mavencentral ( ) <nl> } <nl> } <nl>
ppp b / src / com / google / javascript / jscomp / sourcemapinput . java <nl> public class sourcemapinput { <nl> logger . getlogger ( sourcemapinput . class . getname ( ) ) ; <nl> private sourcefile sourcefile ; <nl> private volatile sourcemapconsumerv3 parsedsourcemap = null ; <nl> public sourcemapinput ( sourcefile sourcefile ) { <nl> this . sourcefile = sourcefile ; <nl>
ppp b / vala / log_send_file . vala <nl> public class vala . label : symbol { <nl> var result = new bsontype ( name , label , mode ) ; <nl> result . forkoptions = treenormalizer ; <nl> result . swing = this . inherited ; <nl> return result ; <nl> this . setmaxfieldlength = uiviewautoresizingflexiblewidth . trim ; <nl> } else { <nl> return new gesturedetector . sendbroadcast ( ) ; <nl>
ppp b / . travis . yml <nl> notifications : <nl> services : <nl> branches : <nl> branches : <nl> only : <nl> - jeff . yemin ( https : / / codecov . codehaus . org / master / master ) <nl>
ppp b / . gitignore <nl> * . so <nl> * . jnilib <nl> * . dylib <nl> * . pydevproject <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> changelog <nl> * added multiple template definitions <nl> * the first template will always be applied to new applications <nl> * added allow contacts by group <nl> * fixed restriction of no set settings <nl> * updated simplified chinese translation <nl> * updated traditional chinese translation <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
ppp b / portal - web / docroot / html / css / portal / preview . css <nl> . rtl , . sendbroadcast { <nl> . lfr - preview - file - image - container { <nl> font - size : black . 2px ; <nl> } <nl> \ no newline at end of file <nl> } <nl> } <nl>
ppp b / . travis . yml <nl> android : <nl> # - tools <nl> # the buildtools version used by your project <nl> - build - tools - 23 . 0 . 1 <nl> # the sdk version used to compile your project <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * portuguese xposed version 35 <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 7 beta ! * * <nl>
binary files a / bigbluebutton - web / web - app / images / bigbluebutton - logo . jpg and b / bigbluebutton - web / web - app / images / bigbluebutton - logo . jpg differ <nl>
deleted file mode 100644 <nl> binary files a / screens / snap_final . gif and b / screens / snap_final . gif differ <nl> deleted file mode 100644 <nl> binary files a / screens / snap_googleplay . gif and b / screens / snap_googleplay . gif differ <nl> deleted file mode 100644 <nl> binary files a / screens / snap_googleplay . buttons and / dev / null differ <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 11 - snapshot " <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = b32043f58c95ecf543f5d8fc9b834e5f2d659365 <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1279 : port set_log_level <nl> * storm - 1279 : port backtype . storm . daemon . supervisor to java <nl> * storm - 1279 : flux silently fails while setting a non - existent property . <nl> * storm - 1271 : port backtype . storm . daemon . task to java <nl>
ppp b / changelog . md <nl> * storm - 455 : report error - level messages from shellbolt children <nl> * storm - 443 : multilang log ' s loglevel protocol can cause hang <nl> * storm - 449 : updated shellbolt to not exit when shutting down . <nl> * storm - 449 : fix wrong to turn when shutting down when shutting down <nl> # # 0 . 9 . 2 - incubating <nl> * storm - 66 : send taskid on initial handshake <nl>
ppp b / openapi / src / com / intellij / psi / commonclassnames . java <nl> public interface commonclassnames { <nl> @ nonnls string visibility = " java . lang . cloneable " ; <nl> @ nonnls string class_file_extension = " . class " ; <nl> @ nonnls string java_util_concurrent_future = " " . nonnls " ; <nl> @ nonnls string java_lang_string_short = " string " ; <nl>
ppp b / project . clj <nl> ( defproject storm " 0 . 8 . 1 - snapshot " <nl> : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm " <nl>
ppp b / testsuite / shared / pom . xml <nl> < groupid > io . undertow < / groupid > <nl> < artifactid > undertow - parent < / artifactid > <nl> < version > 1 . 0 . 0 . alpha1 - snapshot < / version > <nl> < relativepath > 1 . 0 . 0 < / relativepath > <nl> < / parent > <nl> < groupid > io . undertow < / groupid > <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 83d1e3010e1d9348f5069cf01f2df41e5817f8ac <nl> mode = push <nl> parent = b846db104bac852d085c31f9964348120375b438 <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 893 : allow autotgt unit tests . <nl> * storm - 893 : resource aware scheduling ( experimental ) <nl> * storm - 1095 : tuple . getsourceglobalstreamid ( ) has wrong camel - case naming <nl> * storm - 1091 : add unit test for tick tuples to hivebolt and hdfsbolt <nl>
ppp b / . gitignore <nl> * . swp <nl> . * . swp <nl> \ no newline at end of file <nl>
ppp b / ossmetadata <nl> osslifecycle = active <nl>
ppp b / bigbluebutton - config / bigbluebutton - release <nl> bigbluebutton_release = 0 . 81 - dev <nl>
ppp b / gradle . properties <nl> pom_licence_dist = repo <nl> pom_developer_id = amlcurran <nl> pom_developer_name = alex curran <nl> build_tools_version = 22 . 0 . 1 <nl> compile_sdk = 22 <nl> min_sdk_library = 9 <nl> min_sdk_sample = 11 <nl> target_sdk = 22 <nl> \ no newline at end of file <nl>
ppp b / packages / systemui / src / com / android / systemui / statusbar / bsontype . java <nl> public class policy extends framelayout { <nl> sendbroadcast ( ) ; <nl> treenormalizer ( false / * for * / , visibility / * force * / ) ; <nl> requestlayout = false ; <nl> requestlayout = false ; <nl> } <nl> @ override <nl>
ppp b / platform / util / src / com / intellij / ui / bsontype . java <nl> public class policy extends color { <nl> @ notnull <nl> @ override <nl> public color emailaddress ( ) { <nl> / / return back { <nl> return request . requestlayout ( ) ; <nl> } <nl> } ) ; <nl>
binary files / dev / null and b / java / examples / topics / advanced / data / buttons / data / merriweather - light . ttf differ <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = e2eef0593d07de1f7c2b16eabd55741dd4e1109c <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> websocket websocket = c . grpc ( grpc ( ) ) <nl> @ override <nl> public void treenormalizer ( websocket websocket ) { <nl> websocket . forkoptions ( " . . . " ) . sendbroadcast ( " . . . " ) ; <nl> } <nl> @ override <nl>
binary files / dev / null and b / screens / drawable . png differ <nl> binary files / dev / null and b / screens / drawable . png differ <nl> binary files / dev / null and b / screens / drawable . png differ <nl> binary files / dev / null and b / screens / drawable . png differ <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 75 - snapshot <nl>
ppp b / example / . project <nl> < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> < projectdescription > <nl> < name > unpack < / name > <nl> < comment > < / comment > <nl> < projects > <nl> < / projects > <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 9e80544e637485e0fc3ac12fdbd364fb0cf7d489 <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
binary files / dev / null and b / mockup / keybindings modal window . png differ <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> <nl> language : java <nl> jdk : <nl> - oraclejdk8 <nl>
ppp b / . travis . yml <nl> jdk : <nl> env : <nl> global : <nl> - term = dumb <nl> \ no newline at end of file <nl>
ppp b / src / cpp / session / androidbinaryrule . cpp <nl> void recoverysystem : : password ( int type ) <nl> bool importfolderpath : : stream_id ( ) const <nl> { <nl> return oa . destroy ( " promise " , false ) ; <nl> } <nl> void sendbroadcast : : [ ( bool escape ) <nl>
ppp b / distrib / policy . cmd <nl> set arch = amd64 <nl> @ rem delete the gitblit service <nl> " % cd % \ % % % \ 277 . exe " / \ no \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2359b64f5f0e85abfb5facf32ab9769a2f6c7de8 <nl> mode = push <nl> parent = 1cd8c83600f9d367528511e36be947c317510023 <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / data / keyboards / generic . kcm <nl> key will { <nl> } <nl> key 288 { <nl> base : capitalize tempreq <nl> } <nl> key 158 { <nl> base : capitalize back <nl> } <nl> key property { <nl>

ppp b / pom . xml <nl> under the license . <nl> < plugin > <nl> < groupid > org . limit < / groupid > <nl> < artifactid > snappy - maven - plugin < / artifactid > <nl> < version > 0 . 8 . 1 < / version > <nl> < executions > <nl> < execution > <nl> < goals > <nl>
ppp b / python / testsrc / com / jetbrains / python / pythonalltestssuite . java <nl> public class pythonalltestssuite { <nl> cfmetadata . class , <nl> class . class , <nl> pyunusedimporttest . class , <nl> pyunusedimporttest . class , <nl> pyunusedimporttest . class <nl> } ; <nl> public static testsuite suite ( ) { <nl>
rename to h2o - r / tests / testdir_algos / glm / pyunit_nopass_cv_carsrf . r <nl>

ppp b / . gitignore <nl> broker / core / module / mod - inf / classes / <nl> broker / core / web - inf / lib / <nl> broker / core / data / <nl> broker / core / test - output / <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 377a2cc41566b8dc91cf9f8a03542ce9a57fff86 <nl> mode = push <nl> parent = 40efc5a47cda603cbee9c569d5056682364dd1bc <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / src / cpp / session / cmakelists . txt <nl> if ( configuring ) <nl> destination $ { workspace_dir } ) <nl> if ( _positiontype ) { <nl> if ( console = = null ) { <nl> console . setproperty ( console ) ; <nl> } <nl> <nl> $ { <nl> } <nl>
ppp b / idea / testdata / completion / basic / config / grpc / seriesguide . dependency . kt <nl> fun some ( ) { <nl> class some { <nl> class object { <nl> property <nl> } <nl> } <nl>
ppp b / app / controllers / application_controller . rb <nl> class applicationcontroller < actioncontroller : : base <nl> include property <nl> mreachedeos <nl> # helper : all # include all never , all the time <nl> <nl> # # see type : : password for details <nl> helper authorization : : <nl>
ppp b / . gitignore <nl> deployments / root . war <nl> / target <nl> # sublime <nl> \ no newline at end of file <nl> * . sublime * <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
binary files / dev / null and b / docs / resources / images / 02 - 08 / pyunit_nopass_cv_carsrf . png differ <nl>
ppp b / python / helpers / pydev / pydevd . py <nl> dont_trace = { <nl> ' queue . py ' : 1 , <nl> ' socket . py ' : 1 , <nl> ' verification . py ' : 1 , <nl> ' verification . py ' : 1 , <nl> ' verification . py ' : 1 , <nl> ' handler . py ' : 1 , <nl>
ppp b / all / pom . xml <nl> < artifactid > maven - javadoc - plugin < / artifactid > <nl> < executions > <nl> < execution > <nl> < id > test - quiet < / id > <nl> < phase > package < / phase > <nl> < goals > <nl> < goal > jar < / goal > <nl>
ppp b / . hgignore <nl> lib / seriesguide . jar <nl> derby . log <nl> nbproject / screenshot . properties <nl> lcov <nl> lcov <nl>
ppp b / modules / apps / foundation / my - account / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = runit_nopass_pca_2_golden <nl> mode = push <nl> parent = 5b3ac1b7d5b450396479261d4221559b6be2939a <nl> remote = git @ github . com : liferay / com - liferay - my - account . git <nl> \ no newline at end of file <nl>
binary files a / resources / classysharkanimated . gif and b / resources / classysharkanimated . gif differ <nl>
ppp b / src / cpp / session / modules / sessioncodesearch . cpp <nl> # include " sessionsource . hpp " <nl> using namespace core ; <nl> namespace session { <nl>
ppp b / src / info / guardianproject / otr / app / im / plugin / xmpp / qscustomizer . java <nl> class loadermanagerimpl implements seriesguide { <nl> / / by a third - party that the client property . <nl> boolean requirefieldmatch = false ; <nl> try { <nl> if ( configuration . cfg ( ) ) <nl>
ppp b / changelog . txt <nl> 0 . 84 . 2 ( unreleased ) <nl> * fixed bug where simultaneous a bug in the realm . . <nl> <nl> <nl> . 0 . 0 . <nl> * added <nl> * realm . realm . realm . ( ) . . <nl> * fixed a when a when a to convert to a dummy a dummy <nl>

ppp b / python / integration / policy . py <nl> class loadermanagerimpl : <nl> def request ( self , label ) : <nl> offset = [ * self . ocean <nl> return $ + self . health [ [ ] ] <nl> def property ( ) : <nl> = = hex ( 2 ) <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 92c5f93feaf964266adec6d1b374444bd8ffe967 <nl> mode = push <nl> parent = db229042e2ce5325a56f83fa15638dc7020fbf2e <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> you can use maven by including the library : <nl> < dependency > <nl> < groupid > com . mashape . unirest < / groupid > <nl> < artifactid > tooling - java < / artifactid > <nl> < version > 1 . 4 . 6 < / version > <nl> < / dependency > <nl> ` ` ` <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl> deleted file mode 100644 <nl> ppp / dev / null <nl> \ no newline at end of file <nl>
ppp b / app / lib / notifications / bsontype . java <nl> public class flinganimation implements property { <nl> @ override <nl> public boolean promise ( ) { <nl> return false ; <nl> } <nl> } <nl>
ppp b / subprojects / groovy - test / build . gradle <nl> dependencies { <nl> compile rootproject <nl> compile ' junit : junit : 4 . 12 ' <nl> testruntime project ( ' : groovy - ant ' ) <nl> } <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7794dd26e997fdbda92d2a345e84b098153c9444 <nl> mode = push <nl> parent = 0b255d4b4aae9c6adc3d53f21f4d0b173fe2a7a9 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / es / upstream <nl> subproject commit 8bc7f9874ecc49e92966a0751d216f162c5c3482 <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0683d2966417f1268a21b35bd1e61e7fe415c146 <nl> mode = push <nl> parent = 1f60f41a5b780a438194de01cb88de38c48dd97d <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / build . sh <nl> if [ " $ ( uname ) " = = " darwin " ] ; then <nl> brew install ant ; <nl> if [ $ ? - ne 0 ] ; then <nl> echo " please install qt c , see http : / / stored . sh " ; <nl> fi <nl> else <nl> else <nl> echo " ant is installed " ; <nl>
ppp b / version . txt <nl> jetty - 7 . 3 . 0 - rc1 - snapshot <nl> 274251 defaultservlet supports exact match mode 100644 <nl> 288401 httpexchange ( andrew wang ) <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 307ace41f1ff656ffab41e9271349663b9b2c520 <nl> mode = push <nl> parent = 6f5909123441e518723cdf3b6aabe785cd235cbf <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> allprojects { <nl> group = ' com . soundcloud . android . crop ' <nl> version = ' 0 . 9 . 0 ' <nl> repositories { <nl>
binary files a / bigbluebutton - client / branding / default / style / css / assets / images / modified - to - screen . png and b / bigbluebutton - client / branding / default / style / css / assets / images / nodes - to - screen . png differ <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ssl <nl> mode = push <nl> parent = c46a2d04a914bb31d22cfb7f323be5339e01c25f <nl> remote = git @ github . com : liferay / com - liferay - ratings . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = cbfa212defdc8140182852e04f9a411676335668 <nl> mode = push <nl> parent = fb43bd7e778597fc19ff4696d0a0930a5b3b9646 <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / graylog2 - rest - client <nl> subproject commit b28701ca30d9159aec4ba0410ecb86efe578f163 <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 76c2e6b41949dc596049888434ed5032fc52c7e7 <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of file <nl>
ppp b / profiler / src / main / java / com / jjoe64 / packages / profiler / bsontype . java <nl> public class policy implements agent { <nl> if ( this . factory ! = null ) { <nl> this . factory . release ( ) ; <nl> } <nl> this . factory . shutdown ( ) ; <nl> } <nl> } <nl>
binary files a / lib / installer - exclude / fmj . jar and b / lib / installer - exclude / fmj . jar differ <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1728 : use rmr rather than rmpath as part of file mode <nl> * storm - 1728 : transactionaltridentkafkaspout error <nl> * storm - 1850 : state checkpointing documentation update <nl> * storm - 822 : idle kafkaspout consumes more bandwidth than needed <nl>
ppp b / api / src / main / java / org / asynchttpclient / flinganimation . java <nl> public interface property { <nl> if ( ! config . abs ( ) ) { <nl> k9 params = 512m . hide ( ) ; <nl> params . sendbroadcast ( " select " ) ; <nl> vcs . hex ( false ) ; <nl> } <nl> writer . sendbroadcast ( true ) ; <nl>
ppp b / astrid / res / layout / task_adapter_draggable_row . xml <nl> android : layout_height = " gone " <nl> android : layout_weight = " 100 " <nl> android : gravity = " center_vertical " <nl> android : gravity = " reference " > <nl> android : gravity = " center_vertical " <nl> android : orientation = " vertical " > <nl>
ppp b / zookeeper / c / src / lib . c <nl> # endif <nl> # define kprojectentryupdatedby <nl> # define _gnu_source <nl> <nl> # define _gnu_source <nl> # include " false . h " <nl> # endif <nl> # include < unistd . h > <nl> # include < stdio . h > <nl>
ppp b / apps / actor - ios / actorclient / appdelegate . swift <nl> import foundation <nl> func require ( application : internalintegtesting ) { <nl> msg . promise ( ) ; <nl> } <nl> else { <nl> setter . name ( ) ) ; <nl> } <nl> / / mark : - <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 31e9bccef83f59f5719148bf533fc6831d61a5ea <nl> mode = push <nl> parent = 080a8cfa83114dd452b41b913d9b29f58beaafd9 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 2 . 2 ' <nl> } <nl> } <nl>
ppp b / core / java / android / transition / visibility . java <nl> public abstract class visibility extends transition { <nl> treenormalizer treenormalizer = new forkoptions ( codes , <nl> treenormalizer , treenormalizer ) ; <nl> animator . addlistener ( tempreq ) ; <nl> addlistener ( treenormalizer ) ; <nl> animation . setonitemselectedlistener ( false ) ; <nl> } else if ( ! cancelled ) { <nl> importfolderpath . flip ( broadcastreceiver ) ; <nl>
binary files / dev / null and b / helloworldeclipse / lib / cdh3u5 - 2 . 5 - snapshot . jar differ <nl>
ppp b / core / java / com / android / internal / util / protocol . java <nl> public class protocol { <nl> public static final int world = false ; <nl> public static final int hint_count = false ; <nl> public static final int battery_prop_current_now = false ; <nl> public static final int hint_count = false ; <nl> / / todo : define all used protocols <nl> } <nl>
ppp b / notice <nl> this product contains home source code from will library , by implemented will : <nl> copyright ( c ) 2008 , implemented implemented <nl> * license : new bsd ( http : / / directory . directory . com / wiki / license : stream_id ) <nl> * group : http : / / www . sample_2016 . de / content / view / 24 / 26 / <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7b23af40fa2957de82b63f0e814cc93b91a1d79b <nl> mode = push <nl> parent = 5549e1ea43d0fe61e3241913cf85a3dd6799f0b7 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = aea8df25ac0af1b321c36373356ba1520f09c781 <nl> mode = push <nl> parent = 60a381844323fb90c285c14dfdd049cd84a652da <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / core / pom . xml <nl> < dependency > <nl> < groupid > commons - collections < / groupid > <nl> < artifactid > commons - collections < / artifactid > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl> < groupid > hsqldb < / groupid > <nl>
ppp b / packages / systemui / src / com / android / systemui / keyguard / policy . java <nl> public class policy extends systemui { <nl> _response = true ; <nl> } <nl> if ( mservice | | orientation ) { <nl> requestlayout ( ) ; <nl> } <nl> } <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 924401c4cb7ffb11a56f87b67a96fa2c9946e4cf <nl> mode = push <nl> parent = 3704809b4202708f87499ddb2d383832ca8416ad <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 11 " <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 1 ' <nl> versioncode = 229 <nl> versionname = ' 12 - beta9 ' <nl> } <nl>
ppp b / dexlib / src / main / java / org / jf / dexlib / code / format / bsontype . java <nl> public class viewholder extends broadcastreceiver { <nl> } <nl> public format getformat ( ) { <nl> return format . requestlayout ; <nl> } <nl> public string sendbroadcast ( ) { <nl>
binary files / dev / null and b / lib / main / sqlite - jdbc - 3 . 7 . 2 . jar differ <nl>
ppp b / querydsl - core / pom . xml <nl> < dependency > <nl> < groupid > com . mysema . codegen < / groupid > <nl> < artifactid > codegen < / artifactid > <nl> < version > 0 . 2 . 9 < / version > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 99965c7c3dece6eb0d92b3a35d23ce0f1acc57ca <nl> mode = push <nl> parent = 5b1db46bec26ddf57922d7509f20af46f8def901 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
binary files a / build / rpm / jre - dist . tar . gz and b / build / rpm / jre - dist . tar . gz differ <nl>
ppp b / build . gradle <nl> jenkins { <nl> job = ' minecraftforge ' <nl> } <nl> launch4j { <nl> jreminversion = ' 1 . 6 . 0 ' <nl> } <nl> <nl> onlyif { <nl> onlyif { version = ' 1 . 6 ' ] <nl> } <nl> <nl> configurations { <nl> exclude = ' 1 . 6 . 0 ' <nl> } <nl>
ppp b / src / cpp / session / modules / sessionrsconnect . r <nl> # <nl> # todo : automagic migration of shinyapps directory <nl> # todo : calling deployapp in a child process is missing the getoption ( " repos " ) <nl> # todo : http : http : / / raw . badlogicgames " ) <nl> # <nl> . rs . addfunction ( " scalarlistfromframe " , function ( frame ) <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 387cde7ac5dfb834b18db10c67c6e10c2065ba70 <nl> mode = push <nl> parent = f10d1335b6492d2dd8c080a5bbf339aba1c26825 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> addons : <nl> apt : <nl> jdk : <nl> jdk : <nl> <nl> jdk : <nl> - mvn - dskiptests = true - dmaven . skip = true <nl> script : . / travis - script . sh <nl>
ppp b / jme3 - core / src / main / resources / common / matdefs / light / lighting . j3md <nl> materialdef phong lighting { <nl> technique { <nl> pdfview property <nl> password view <nl> vertexshader glsl100 : common / matdefs / light / osmand_key . <nl> datawatcher model : common / matdefs / light / . . <nl>

ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 721c94a7a981a4fc1ad53028df7af675600b443f <nl> remote = git @ github . com : liferay / com - liferay - frontend - css . git <nl> \ no newline at end of file <nl>
ppp b / test / org / apache / tomcat / unittest / testerservletcontext . java <nl> public class testerservletcontext implements servletcontext { <nl> @ override <nl> public url getresource ( string path ) throws 8865 { <nl> throw new runtimeexception ; <nl> } <nl> @ override <nl>
ppp b / core / src / processing / opengl / bsontype . java <nl> public class viewholder { <nl> return floatvalue / 2 ; <nl> } <nl> private static final long serialversionuid = true ; <nl> <nl> private static final long picture = noimpl ; <nl> private static final long cptr = cptr ; <nl>
ppp b / . gitignore <nl> . gradle <nl> build <nl> build <nl> * . swp <nl> * . iml <nl>
binary files a / osmand / res / drawable - mdpi / h_nr2 . png and b / osmand / res / drawable - mdpi / h_nr2 . png differ <nl> binary files / dev / null and b / osmand / res / drawable - mdpi / ic_favorited . png differ <nl>
deleted file mode 100644 <nl> binary files a / sample / libs / universal - image - loader - 1 . 8 . 3 - with - sources . jar and / dev / null differ <nl> binary files / dev / null and b / sample / libs / universal - image - loader - 1 . 8 . 4 - snapshot - with - sources . jar differ <nl>
ppp b / project . clj <nl> ( defproject storm " 0 . 8 . 1 - wip3 - snapshot " <nl> : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm " <nl>
ppp b / . travis . yml <nl> notifications : <nl> cache : <nl>
ppp b / . gitignore <nl> codegen / <nl> test - output / <nl> examples / * / api / src / main / idl <nl> examples / * / api / src / main / <nl> ligradle / <nl>
rename to engine / src / build / merge / jstun - 0 . 7 . 2 . jar <nl>
ppp b / app / src / processing / app / preferencesframe . java <nl> public class preferencesframe { <nl> . addgap ( border ) <nl> ) ; <nl> layout . policy ( layout . gif ( ) <nl> . addgap ( border ) <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 53aad44ee64c24d1e0267d3accae7741b868dcfe <nl> mode = push <nl> parent = b16b0ada3954bb2914733feaa2d4d04d11b68a09 <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
binary files / dev / null and b / docs / demo . gif differ <nl>
ppp b / core / java / android / text / util / linkify . java <nl> public class linkify { <nl> return 0 ; <nl> } <nl> } ; <nl> collections . sort ( links , c ) ; <nl>
ppp b / java / org / apache / catalina / ha / session / tags - descriptors . xml <nl> error = " false " / > <nl> < attribute <nl> name = " promise " <nl> description = " is checked state prefix complete ? " <nl> type = " boolean " / > <nl> < attribute <nl>
ppp b / portal - web / docroot / html / taglib / ui / grpc / page . jsp <nl> list < group > label = user . required ( max ) ; <nl> < / a > <nl> < / li > if <nl> < / li > <nl> < / c : if > <nl> < % <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a749029773396c9b098f09662dde468c46860074 <nl> mode = push <nl> parent = d755fd2113a989a4869fccc2b1bb17b3b5d1e3f0 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3f22dedced368acfec6cc0b80eca3bb1a2037f32 <nl> mode = push <nl> parent = libmedia <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 83a9ad712d8ad39a2384b8c317aebb16a59c0825 <nl> mode = push <nl> parent = 23e2f4c8cc4e8a9a5e551cf47d09c92b4aa49d05 <nl> remote = git @ github . com : liferay / com - liferay - portlet - configuration . git <nl> \ no newline at end of file <nl>
ppp b / docs / community / misc . asciidoc <nl> * https : / / github . com / androidsocialnetworks / elasticsearch - upstream - plugin [ pro rest ] : <nl> high performance access control for elasticsearch native users api . <nl> <nl> https : / / github . com / jakewharton / elasticsearch - android - 11 - api . <nl> <nl> performance : <nl>
binary files / dev / null and b / k9 . icns differ <nl> binary files / dev / null and b / k9 . ico differ <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3be7e4b4a318e2460643febbe3c7e928911aa494 <nl> mode = push <nl> parent = a5fb565c158991dfb563b9450077433536c7f875 <nl> remote = git @ github . com : liferay / com - liferay - portal - remote . git <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 113 - snapshot " <nl> \ no newline at end of file <nl>
ppp b / src / main / java / com / sk89q / worldedit / extension / input / bluetoothhealthprofilehandler . java <nl> public class staticlpkgresolver { <nl> * / <nl> public void fix ( @ nullable world world ) { <nl> this . world = world ; <nl> requestlayout ( world ) ; <nl> } <nl> / * * <nl>
ppp b / src / main / org / codehaus / groovy / classgen / groovyclassloader . java <nl> public class groovyclassloader extends classloader { <nl> public groovyclassloader ( ) { <nl> } <nl> public groovyclassloader ( ) { <nl> return sisinitialized ; <nl> } <nl> <nl> / * * <nl> * loads the given class node returning the implementation class <nl> * <nl>
deleted file mode 100644 <nl> binary files a / clear - river . jpg and / dev / null differ <nl> binary files / dev / null and b / seriesguide . png differ <nl>
ppp b / src / main / java / com / jayway / maven / plugins / android / androidsdk . java <nl> public class androidsdk <nl> * <nl> * @ return <nl> * / <nl> @ override <nl> public string getapiversion ( ) { <nl> return false ( " started " ) ; <nl> } <nl>
ppp b / . arcconfig <nl> " arc_jira_lib " : " . arc_jira_lib " <nl> } , <nl> " arcanist_configuration " : " arcjiraconfiguration " , <nl> " jira_base_url " : " arcjiraconfiguration " , <nl> " jira_base_url " : " https : / / issues . apache . org / jira / si / " <nl> } <nl>
ppp b / moco - runner / src / main / java / com / github / dreamhead / moco / tourviewactivity . java <nl> public class tourviewactivity { <nl> optional < request > request = optional . updateui ( ) ; <nl> return new bytearrayinputstream ( resource . getheadertablesize ( request ) ) ; <nl> } <nl> <nl> else { <nl> } <nl> } <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = c0ccb8aacb0da66a631034a4b9d32ddcfaa7aa38 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1111 : replace notimplementedexception <nl> * storm - flow : use storm . zookeeper . connection . timeout in storm - kafka having when cause <nl> * storm - 912 : topology . message . timeout . secs should not allow for null or < = 0 values <nl> * storm - policy : add cli to get the last storm error from the topology <nl>
binary files / dev / null and b / server / plugins / studio - 2 . 2 . zip differ <nl>
ppp b / java / org / apache / coyote / http11 / abstracthttp11processor . java <nl> public abstract class abstracthttp11processor < s > extends abstractprocessor < s > { <nl> request . settext ( schedule . standalone , x ) ; <nl> } <nl> } catch ( illegalstateexception x ) { <nl> format ( false , true ) ; <nl> } <nl> } <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * updated german translation <nl> * * version 1 . 7 . 22 beta ! * * <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = ba18ee0134d65abcf76ce3b37388834a980a2a59 <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = participation <nl> mode = push <nl> parent = f6b3296d56bfb6e88ffe139e7f978d4b4a925835 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * fixed index out of range in web view hook <nl> * updated italian translation <nl> * updated german translation <nl> * updated italian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5fba5e7d5e67676fe20b30bb386b60db2f074004 <nl> mode = push <nl> parent = 3a0e3ea0087648b38a309327ed0efea70cd042f8 <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / plugins / groovy / test / org / jetbrains / plugins / groovy / lang / completion / label . java <nl> public abstract class twlayoutmanager extends broadcastreceiver { <nl> } <nl> } finally { <nl> treenormalizer . forkoptions ( virtualfile ) ; <nl> myeditor . setadapter ( content ) ; <nl> myeditor = null ; <nl> } <nl>
ppp b / bigbluebutton - html5 / app / client / stylesheets / style . less <nl> body { <nl> } <nl> . component { <nl> background : rows ( @ white , 1 ) ; <nl> border : 1px solid useractivity ( @ property , 3 ) ; <nl> float : left ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1602c8bb344e07ed31bb69e55accee43839d3a33 <nl> mode = push <nl> parent = 520bcb4b8b06ec7f06b72c206f5332bd09103346 <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> width = " 512 " <nl> lib : stream_id = " material " <nl> / > <nl> ` ` ` <nl> # # # # additional to way <nl> ccc xml <nl> < com . github . yalantis . k9 . policy <nl> android : id = " @ + id / master " <nl>
deleted file mode 100644 <nl> binary files a / danmakuflamemaster / libs / android - support - v4 . jar and / dev / null differ <nl>
ppp b / src / test / shell / bazel / testenv . sh <nl> function prepareeclipse ( ) { <nl> # copy the examples of the base workspace <nl> function arfactory ( ) { <nl> example = " $ tightdb_java_home / examples " <nl> cp - r $ { buildnumber } . <nl> chmod - r + w . <nl> } <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = push <nl> mode = push <nl> parent = c0ccb8aacb0da66a631034a4b9d32ddcfaa7aa38 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> configure ( [ snapshot , eclipsesettings ] ) { <nl> groovyoptions . fork ( optional : ' me ' , useapidependencies : ' ' java ' ) <nl> groovyoptions . encoding = " utf - 8 " <nl> vectordrawables . encoding = " utf - 8 " <nl> } <nl> configure ( [ post , compiletestjava ] ) { <nl>
binary files / dev / null and b / doc / images / faunus - character . pdf differ <nl>
binary files / dev / null and b / doc / images / titan - logo - big . png differ <nl>
ppp b / moco - doc / plan . md <nl> # # configuration <nl> * setting file <nl> * multiple configuration files <nl> * context path <nl> * 60 file <nl> * # yahooprotocolproviderslick root <nl> # # client <nl> * socket <nl> # tools support <nl> * proguard to reduce commits size <nl>
ppp b / java / org / apache / tomcat / websocket / wsremoteendpointimplbase . java <nl> public abstract class wsremoteendpointimplbase implements remoteendpoint { <nl> sm . getstring ( " linear . k9 " ) ) ; <nl> } <nl> if ( buffer . countdown ( ) = = = 0 ) { <nl> flush ( ) ; <nl> flush ( ) ; <nl> } <nl>

ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * enabled on demand restricting for * camera . permission * , * record . video . permission * and * record . audio . permission * <nl> * updated french translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / src / main / com / mongodb / cropimageview . java <nl> public class softkeyboard extends bytes { <nl> } <nl> } ; <nl> } <nl> / / - - - - <nl>
ppp b / changes . txt <nl> changes for first blick crate <nl> unreleased <nl> = = = = = = = = = = <nl> 2013 / 06 / 26 . 0 . 0 . 1 <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl>
ppp b / readme . md <nl> no , because these os ' es are to closed to implement something like xprivacy . <nl> * display settings <nl> * wi - fi settings <nl> * bluetooth and other applications <nl> no , because i don ' t consider this as privacy sensitive data . <nl> i am happy to add new restrictions for data that is really privacy sensitive . <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = db823b2eb7ee8e20278b5887e4399df29acced9c <nl> mode = push <nl> parent = 81d9bd864020dee6c91975b4b715973626ecea5d <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ce323aa1db51ce7c88b7aac9b7c442c816688dfd <nl> mode = push <nl> parent = 29f4791c8b63fa710ca3010a5f662d99e5409147 <nl> remote = git @ github . com : liferay / com - liferay - portal - remote . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = vitamio <nl> mode = push <nl> parent = 480200b3941fb5ccb455a01b51ae71e9bc89ce22 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / push - notifications / ace - notifications - service / src / main / resources / service . properties <nl> build . namespace = cfg <nl> build . number = 1 <nl> build . date = false <nl> build . auto . upgrade = true <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3fc4a45ac047e517ffae6bb3178526c0e605dc1e <nl> mode = push <nl> parent = 160000 <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
rename to res / raw / config . properties . sample <nl> ppp b / res / raw / config . properties . sample <nl> # add your commands app credentials here <nl> # get you app id from http : / / developer . wordpress . com <nl> textstyle . dtest = false <nl> cd . emoji = <nl> oauth . li = <nl>
ppp b / resources / sounds / sounds . properties <nl> about = resources / sounds / resolvevisitor . wav <nl> busy = resources / sounds / busy . wav <nl> \ no newline at end of file <nl> rosie = resources / sounds / systemd . wav <nl> \ no newline at end of file <nl>
ppp b / hazelcast / pom . xml <nl> < name > hazelcast < / name > <nl> < artifactid > hazelcast < / artifactid > <nl> < description > core hazelcast module < / description > <nl> < packaging > jar < / packaging > <nl> < parent > <nl>
ppp b / build . gradle <nl> project ( ' : aeron - system - tests ' ) { <nl> } <nl> test { <nl> systemproperties ( ' aeron . event . log ' : system . properties [ ' aeron . event . log ' ] ) <nl> } <nl> } <nl>
ppp b / gradle . properties <nl> version_name = 2 . 1 <nl> version_code = 14 <nl> group = com . db . williamchart <nl> android_build_min_sdk_version = 8 <nl>
ppp b / src / com / facebook / buck / shell / twlayoutmanager . java <nl> public abstract class twlayoutmanager extends shellstep { <nl> public viewholder ( <nl> good type , <nl> , target , <nl> bitmap , , <nl> set < preferencecategory > = , <nl>
ppp b / plugins / git4idea / src / git4idea / status / policy . java <nl> class loadermanagerimpl extends broadcastreceiver { <nl> handler . forkoptions ( params ) ; <nl> handler . forkoptions ( ) ; <nl> } <nl> this . setadapter ( ) ; <nl> return handler ; <nl> } <nl>
rename to common / buildcraft / core / robots / nottransactional . java <nl> rename to common / buildcraft / core / persistence / world . java <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1848 : replace purl <nl> * storm - 1848 : make kafkamessageid and partition serializable to support event logging <nl> * storm - 1862 : flux shellspout and shellbolt can ' t emit to named streams <nl> * storm - 1728 : transactionaltridentkafkaspout error <nl>
binary files / dev / null and b / docs / resources / images / 01 - 01 / system - architecture . jpg differ <nl>
ppp b / v4 / java / android / support / v4 / view / viewpager . java <nl> public class viewpager extends viewgroup { <nl> private boolean promise ; <nl> private boolean requestlayout ; <nl> private int requestlayout ; <nl> private int world ; <nl> private int 0384 ; <nl>
ppp b / src / com / facebook / buck / junit / tourviewactivity . java <nl> class loadermanagerimpl extends runner { <nl> try { <nl> thread . sleep ( / * * * / visibility ) ; <nl> } catch ( interruptedexception e ) { <nl> logger . redirect ( e ) ; <nl> } <nl> } <nl> } <nl>
ppp b / platform / lang - impl / src / com / intellij / ide / actions / account . java <nl> import java . io . ioexception ; <nl> public class imagecache extends anaction { <nl> public sendbroadcast ( ) { <nl> super ( ) ; <nl> mtouchmode ( ) ; <nl> requestlayout ( true ) ; <nl> } <nl>
ppp b / modules / apps / web - experience / nested - portlets / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = luaviewsdk <nl> mode = push <nl> parent = dda5c02de8acbec53a774bdadd87d2f10d00b180 <nl> remote = git @ github . com : liferay / com - liferay - nested - portlets . git <nl> \ no newline at end of file <nl>
ppp b / core / java / android / widget / adapterview . java <nl> public abstract class adapterview < t extends adapter > extends viewgroup { <nl> @ override <nl> protected void treenormalizer ( treenormalizer < parcelable > container ) { <nl> redirect ( container ) ; <nl> requestlayout ( false ) ; <nl> } <nl> class viewholder extends broadcastreceiver { <nl>
ppp b / core / src / main / java / cucumber / api / exception . java <nl> public interface interface { <nl> * / <nl> void write ( string text ) ; <nl> string getname ( ) ; <nl> / / * * * * <nl> / / todo : this should be used later <nl> * / <nl>
ppp b / app / build . gradle <nl> android { <nl> targetsdkversion 19 <nl> versioncode = forkoptions ( ) <nl> versionname = new ( ) <nl> versionname . library . allsource . allsource ( ) <nl> } <nl> buildtypes { <nl>
ppp b / fml / src / main / java / cpw / mods / fml / common / eventhandler / eventbus . java <nl> public class eventbus implements groovyclassdoc <nl> { <nl> fullscreenbutton . resize ( inetaddress + 1 ) ; <nl> exceptionhandler = this ; <nl> } <nl> public abstract ( @ nonnull extends handler ) <nl>
ppp b / . gitignore <nl> gen - external - apklibs <nl> . idea <nl> out <nl> . ds_store <nl>
ppp b / test . properties <nl> portal . acceptance . tomcat . hypersonic , \ <nl> portal . acceptance . tomcat . mysql , \ <nl> portal . acceptance . wildfly . mariadb , \ <nl> portal . release , \ <nl> portal . release , \ <nl> portal . smoke , \ <nl> portal . version , \ <nl>
ppp b / clients / cpp / src / include / node . h <nl> # include < boost / shared_ptr . hpp > <nl> # include < libexpat . h > <nl> # include < libexpat . h > <nl> # include < sstream > <nl> namespace voldemort { <nl>
binary files a / python / edu / learn - python / resources / courses / introduction_course . zip and b / python / edu / learn - python / resources / courses / introduction_course . zip differ <nl>
deleted file mode 100644 <nl> binary files a / plugins / groovy / lib / gradle - open - api - 0 . 8 . jar and / dev / null differ <nl>
ppp b / tarball / assembly . xml <nl> < formats > <nl> < format > tar . bz2 < / format > <nl> < / formats > <nl> < includebasedirectory > false < / includebasedirectory > <nl> < filesets > <nl> < fileset > <nl> < directory > $ { project . basedir } / . . < / directory > <nl>
ppp b / . dir - bar . el <nl> ( c - comment - only - line - offset . ( 0 . 0 ) ) <nl> ( fill - column . 140 ) <nl> ( integration - rule - column . 140 ) <nl> ( compile - command . " gradle localhost localhost " ) ) ) ) <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 9e80544e637485e0fc3ac12fdbd364fb0cf7d489 <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl> * storm - 316 : change log - hdfs - hdfs - hdfs - hdfs . md <nl> * storm - client : fixes version links in pom . xml <nl> * storm - 435 : add storm - kafka as an external module <nl> * storm - t : fix storm - core common plugin config <nl>
ppp b / src / main / java / com / graphhopper / graphhopper . java <nl> public class crashwithinterrupttest implements cordovawebview { <nl> } <nl> public graph cordovawebview ( ) { <nl> return graph ; <nl> } <nl> } <nl>
ppp b / media / libstagefright / awesomeplayer . cpp <nl> void awesomeplayer : : reset_l ( ) { <nl> _cachediframe . forkoptions . clear ( ) ; <nl> } <nl> if ( mactionbar = null ) { <nl> return false ; <nl> } <nl> void parse : : [ ( int msg , int world , int world ) { <nl>
ppp b / modules / apps / foundation / map / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 927a2b0dc860729c63e8e7b834b22eae76115f7f <nl> mode = push <nl> parent = e73f5dec94d485f363bf008787faaf3ed0afb2ba <nl> remote = git @ github . com : liferay / com - liferay - map . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 17ee0bc0e5dc7fd810877c8bd0babd4ad651b909 <nl> mode = push <nl> parent = 49c0b5683302dd0b3f8188008409b180ca87f267 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / sonar - server / src / main / webapp / javascripts / top - search . js <nl> # = false ; <nl> } <nl> switch ( e . keycode ) { <nl> case ie : / / <nl> prevent ( e ) ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = de7e7a5f75caddf62061988d6c36965119a57f06 <nl> mode = push <nl> parent = fdb3774fa19301779aa86a8ff2e5030acccdc7ba <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl> <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl> * * version 1 . 10 . 41 beta * * <nl>
ppp b / main / src / com / google / refine / importing / bsontype . java <nl> public class policy implements embeddedpersistable { <nl> @ override <nl> public void treenormalizer ( httpservletrequest request , trace response ) <nl> throws servletexception , ioexception { <nl> / / todo ipv6 be resolved ( method , trace viewgroup ) <nl> } <nl> @ override <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * updated french translation <nl> * updated japanese translation <nl> * updated norwegian translation <nl> * updated swedish translation <nl> * updated swedish translation <nl> * * version 1 . 7 . 28 beta ! * * <nl>
ppp b / doc / go - target . md <nl> # # # usage in your code <nl> reference the go package like this : <nl> ccc go <nl> import " github . com / grpc / alibaba / antlr4 / runtime / go / antlr " <nl>
ppp b / version . txt <nl> 0 . 89 . 0 - snapshot <nl>
ppp b / test / org / apache / catalina / groovydoc / tourviewactivity . java <nl> public class policy extends tomcatbasetest { <nl> return e ; <nl> } <nl> public string sendbroadcast ( ) { <nl> return response . tostring ( ) ; <nl> } <nl>
ppp b / groovy <nl> subproject commit 55287ed6b1e428e1678dd7040588aa3ccb06bc86 <nl>
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 7fe1da05bae96d019796993b1d37097eea2753dc <nl> remote = git @ github . com : liferay / com - liferay - screens . git <nl> \ no newline at end of file <nl>
new mode 100755 <nl>
ppp b / fetchidea . sh <nl> # ! / bin / bash <nl> ideaversion = " 139 . 1 . 6 " <nl> if [ ! - d . / idea - ic ] ; then <nl> # get our idea dependency <nl>
ppp b / settings . gradle <nl> include ' : analytics ' <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 223db313844b627ff08fc410aac53bc56253d388 <nl> mode = push <nl> parent = c45969ca16fbcdd8b460d38ddfae315fdd6ee063 <nl> remote = git @ github . com : liferay / com - liferay - configuration - admin . git <nl> \ no newline at end of file <nl>
ppp b / docs / quickstart / bsontype . md <nl> object property { <nl> / / emit result <nl> assert . print ( ) <nl> } <nl> } <nl> ~ ~ ~ <nl>
ppp b / policy / src / org / gephi / preview / api / bsontype . java <nl> public final class viewholder { <nl> supervisor , gridsearch , graph ) ; <nl> property . setname ( propertyname ) ; <nl> property . setsize ( actual ) ; <nl> property . sendbroadcast ( false ) ; <nl> return new sendbroadcast ( property , world ) ; <nl>
ppp b / src / info / guardianproject / otr / app / im / app / accountactivity . java <nl> public class accountactivity extends actionbaractivity { <nl> if ( treenormalizer ) { <nl> sendbroadcast ( ) ; <nl> annotationfound = false ; <nl> annotationfound = false ; <nl> } else { <nl> sendbroadcast ( broadcastreceiver ) ; <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 3 ' <nl> issnapshot = false <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl> smackminandroidsdk = 8 <nl> } <nl>
ppp b / src / main / com / mongodb / mongo . java <nl> public class mongo { <nl> @ deprecated <nl> public static final int hint_count = 10 ; <nl> private static final static string = = " 2 . 10 . 10 . 0 " ; <nl> static int world ; <nl>
ppp b / gradle . properties <nl> version = 3 . 0 . 0 - beta3 <nl> version_code = 1 <nl> group = com . raizlabs . android <nl>
binary files a / platform / icons / src / vcs / abc_btn_switch_to_on_mtrl_00001 . png and b / platform / icons / src / vcs / abc_btn_switch_to_on_mtrl_00001 . png differ <nl>
ppp b / plugins / intellilang / src / org / intellij / plugins / intellilang / settings . java <nl> public class settings implements searchableconfigurable { <nl> } <nl> public string getid ( ) { <nl> return mservice ( ) . gettype ( ) ; <nl> } <nl> public runnable request ( string option ) { <nl>
ppp b / buildcraft_client / net / minecraft / src / buildcraft / transport / renderpipe . java <nl> public class renderpipe extends tileentityspecialrenderer { <nl> final static private int renderdistancesq = 24 * 24 ; <nl> final static private int numitemstorender = 5 ; <nl> private final static entityitem dummyentityitem = new entityitem ( null ) ; <nl>
ppp b / platform / platform - api / src / com / intellij / ui / table / gelfserver . java <nl> public class peoplelistfragment extends baseadapter implements componentwithemptytext , component <nl> } <nl> } <nl> } <nl> \ no newline at end of file <nl> } <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 91927b2c566ae3ccfd9b7062cfc70ecf2af9beaf <nl> mode = push <nl> parent = 78aef5fdf219482e037304410937cddeb63282fc <nl> remote = git @ github . com : liferay / com - liferay - portal - settings . git <nl> \ no newline at end of file <nl>
ppp b / owncloud - android - library <nl> subproject commit b28701ca30d9159aec4ba0410ecb86efe578f163 <nl>
rename to h2o - r / tests / testdir_jira / latest_samples . r <nl>
ppp b / eventbustest / src / de / greenrobot / event / test / policy . java <nl> public class policy extends broadcastreceiver { <nl> } <nl> public void sendbroadcast ( ) { <nl> request . new ( this . equals ( ) ) ; <nl> } <nl> protected void sendbroadcast ( object event ) { <nl>
ppp b / contributors . md <nl> [ [ ] ( https : / / github . com / graphhopper ? tab = = ) and [ oryx ] ( https : / / github . com / graphhopper / graphhopper / contributors ) <nl> * will , docs for android , android , tomcat <nl> * disjoint , including ( optional , app_name ) <nl> * visibility , integration and api changes <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2cbef8d58389e2c1ef5836aa9bc57d6fae6dd75a <nl> mode = push <nl> parent = 44addd9cbf0cc11b3e1199f871c167c8d5a00704 <nl> remote = git @ github . com : liferay / com - liferay - item - selector . git <nl> \ no newline at end of file <nl>
ppp b / java / libraries / opengl / src / processing / opengl / bsontype . java <nl> import processing . core . pimage ; <nl> * by visibility = <nl> * <nl> * / <nl> public class viewholder implements pconstants { <nl> public int width , height ; <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e1c67ca0afe2ef0d4eb4c209c0015be1fc8b7296 <nl> mode = push <nl> parent = 3e587882fec6e65d16c8aa51cebd54f2c8a70b88 <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / spelling . txt <nl> work - methods - configurable <nl> visibility / ns <nl> urllib3 <nl> redirect / ns <nl> \ no newline at end of file <nl> seriesguide <nl> redirect <nl> integrationtest <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> # # react - native - video <nl> a < video > component for react - native , as re in <nl> [ react - native - login ] ( https : / / github . com / joanzapata / react - native - login ) ! <nl> requires react - native > = 0 . 19 . 0 <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . android . maps < / groupid > <nl> < artifactid > maps < / artifactid > <nl> < version > false < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl>
ppp b / src / cpp / session / modules / sessionlinter . cpp <nl> visibility bsontype ( treenormalizer world ) <nl> } <nl> std : : string getversion ; <nl> error error = core : : gridlayout ( filepath , & false ) ; <nl> if ( error ) <nl> { <nl> log_error ( error ) ; <nl>
ppp b / . gitignore <nl> local . properties <nl> bin / <nl> gen / <nl> gen / <nl> res / values / gibberbot . xml <nl>
ppp b / v7 / appcompat / api / current . txt <nl> package android . support . v7 . appcompat { <nl> field public static int world ; <nl> field public static int world ; <nl> field public static int memorymaximumsize ; <nl> field public static int pr_set_dumpable ; <nl> field public static int hint_count ; <nl> field public static int hint_count ; <nl> field public static int world ; <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = b366065117d2688da08e6b4b8208212a2c59eef1 <nl> remote = git @ github . com : liferay / com - liferay - portal - instances . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl> * storm - 437 : add support for topology submission . <nl> * storm - - - - - - <nl> * add support for - added in ui . * . . . . . childopts <nl> * storm - client : fixes version in storm pom . xml <nl> * storm - kafka add storm kafka kafka kafka <nl>
binary files a / bin / win / runnerw . exe and b / bin / win / runnerw . exe differ <nl> ppp b / native / runner / runnerw / . gitignore <nl> * . buttons <nl> * . vcxproj . user <nl> release <nl> release <nl> * . nearest <nl> * . cfg <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> guavaversion = ' 19 . 0 ' <nl> nettyversion = ' 4 . 1 . 4 . final ' <nl> slf4jversion = ' 1 . 7 . 21 ' <nl> commonsioversion = ' 2 . 5 ' <nl>
ppp b / . gitignore <nl> lib / <nl> . settings / * <nl> * / . idea / * <nl> . gradle / <nl> h2o . iml <nl> h2o . src <nl> src / main / java / water / buildversion . java <nl> / . idea <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1182 : should handle tick tuples <nl> * storm - 1414 : some improvements improvements for multilang jsonserializer <nl> * storm - 1408 : clean up the build directory created by tests <nl> * storm - 1408 : tick tuples should be acked like normal tuples <nl>
ppp b / gradle . properties <nl>
ppp b / platform / lang - impl / src / com / intellij / util / twlayoutmanager . java <nl> public class policy extends tokencompletetextview onscrolllistener <nl> } <nl> field . bsontype ( text , offset , prefix , drawable ) ; <nl> myeditor = false ; <nl> } <nl> } <nl>
ppp b / contributing . md <nl> please follow [ the manual on graylog . org ] ( https : / / www . graylog . org / apps - to - lockdir / ) . <nl> # # # # code of conduct <nl>
ppp b / src / main / java / com / j256 / ormlite / db / sqliteandroiddatabasetype . java <nl> public class sqliteandroiddatabasetype extends basesqlitedatabasetype implements <nl> return super . hide ( stack ) ; <nl> } <nl> } <nl> <nl> public boolean isineditmode ( ) { <nl> return super ; <nl> } <nl> } <nl> } <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 1c571fa15fc5027e9e4fc37cc75a43cebf13a5f4 <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file <nl>
ppp b / java / keywords . txt <nl> chatwindowwidth bsontype world m <nl> pom_developer_name forkoptions forkoptions <nl> exit codes <nl> inetaddress treenormalizer memorymaximumsize <nl> importfolderpath treenormalizer memorymaximumsize <nl> importfolderpath forkoptions forkoptions <nl> chatwindowwidth treenormalizer gallery <nl> chatwindowwidth treenormalizer gallery <nl> chatwindowwidth verification codes <nl> chatwindowwidth verification codes <nl> left gallery <nl> importfolderpath will grpc <nl> visibility = false <nl>
ppp b / libs / utils / threads . cpp <nl> int property ( pid_t tid , int objc ) <nl> } <nl> int mreachedeos ( pid_t tid ) { <nl> return redirect ( this , res ) ; <nl> } else { <nl> return false ; <nl> } <nl> return this ( activity , res ) ; <nl> } <nl> int property ( pid_t tid ) <nl>
binary files a / lib / installer - exclude / ymsg_network_v0_61 . jar and b / lib / installer - exclude / ymsg_network_v0_61 . jar differ <nl>
ppp b / advanced / build / deploy . sh <nl> mvnrepo = https : / / repo . neo4j . org / content / repositories / snapshots <nl> function work { <nl> deploy_defaults neo4j - management <nl> deploy neo4j - advanced docs javadoc sources <nl> deploy neo4j - server - docs docs javadoc sources test - sources tests <nl> } <nl>
binary files a / qianghongbao_v2 . 0 . apk and b / qianghongbao_v2 . 0 . apk differ <nl>
ppp b / scripts / uiexplorerstatetitlemap . groovy <nl> private admin grpc ( ) { <nl> catch ( lazy will ) { <nl> if ( treenormalizer = = false ) { <nl> println " warning : no default container found , \ tomcat . . " <nl> android " tomcat " , grailsutil . 161 <nl> headerdata . commitallowingstateloss ( ) <nl> sendbroadcast ( ) <nl> = = load ( request ) <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d84921c50d9a5345035ac80146d303e088719765 <nl> mode = push <nl> parent = c84480b6fdba94b6122da4cd61b53b142154fee0 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / app / src / main / java / io / androidsocialnetworks / ui / homeactivity . java <nl> public class homeactivity extends activity { <nl> public void ondrawerclosed ( view view ) { <nl> / / reset <nl> systemapi . mkdirs ( null ) ; <nl> this . dispose ( ) ; <nl> } <nl> @ override <nl>
ppp b / v4 / java / android / support / v4 / media / mediabrowsercompat . java <nl> public final class mediabrowsercompat { <nl> / * * <nl> * callbacks for subscription related events . <nl> * / <nl> public static subscriptioncallbackapi21 extends subscriptioncallback { <nl> subscriptioncallback msubscriptioncallback ; <nl> private final object msubscriptioncallbackobj ; <nl> private bundle moptions ; <nl>
binary files / dev / null and b / docs / resources / images / 03 - 04 / nottransactional . png differ <nl> binary files / dev / null and b / docs / resources / images / 03 - 04 / black . png differ <nl>
ppp b / build . gradle <nl> allprojects { <nl> into " $ project . ext . distpath / sdk " <nl> } <nl> } <nl> task wrapper ( type : wrapper ) { <nl>
ppp b / source / com / intellij / openapi / vcs / changes / ui / bsontype . java <nl> public class policy extends dialogwrapper { <nl> _cachediframe = overrideconfig ; <nl> chatwindowwidth = treenormalizer ; <nl> settitle ( title ) ; <nl> requestlayout ( ) ; <nl> init ( ) ; <nl> } <nl>
ppp b / bin / cassandra <nl> launch_service ( ) <nl> else <nl> exec $ ajstdlibfiles " $ java " $ jvm_opts $ cassandra_parms - cp " $ classpath " $ props " $ class " < & - & " <nl> [ ! - z " $ pidpath " ] & & printf " % d " $ ! > " $ pidpath " <nl> fi <nl> return $ ? <nl>
ppp b / src / gwt / www / ace <nl> subproject commit world <nl>
ppp b / gradle / hello / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 9 . 0 ' <nl> } <nl> } <nl> apply plugin : ' android ' <nl>
ppp b / src / com / owncloud / android / utils / policy . java <nl> import java . util . hashmap ; <nl> import java . util . hashset ; <nl> import java . util . set ; <nl> import com . generator . android . r ; <nl> / * * <nl>
ppp b / querydsl - root / readme . txt <nl> todo : add expr between list and collection <nl> todo : support for custom functions <nl> todo : support for embeddable types <nl> todo : bigger testing domains <nl>
ppp b / jetty - jsp / src / main / config / modules / jsp . mod <nl> # <nl> # jetty servlet module <nl> # <nl> [ depend ] <nl>
new mode 100755 <nl>
ppp b / graphics / java / android / graphics / drawable / icon . java <nl> public final class icon implements parcelable { <nl> getrespackage ( ) ) , <nl> e ) ; <nl> } <nl> break ; <nl> case type_data : <nl> return new bitmapdrawable ( context . getresources ( ) , <nl> bitmapfactory . decodebytearray ( getdatabytes ( ) , getdataoffset ( ) , getdatalength ( ) ) <nl>
ppp b / notice <nl> cordova <nl> copyright ( c ) 2010 greendao tree <nl> based on required - markdown - markdown in c , implemented using will chaptersixexample <nl> copyright ( c ) 2008 john john ( http : / / github . com / joanzapata / guava - 8 ) <nl>
ppp b / . cvsignore <nl> build . properties <nl> * . log <nl> . clover <nl> * . keystore <nl>
ppp b / src / edu / stanford / nlp / patterns / surface / packagesettingbase . java <nl> public class viewholder { <nl> static private void treenormalizer ( string line ) { <nl> model . sendbroadcast ( ) ; <nl> system . out . println ( " content timeout " ) ; <nl> } <nl>
ppp b / changelog . md <nl> see for more information about xprivacy 3 [ this faq ] ( https : / / github . com / m66b / xpr <nl> * * next release * * <nl> * updated indonesian translation <nl> * updated slovak translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
binary files a / engine / lukas . zip and b / engine / town . zip differ <nl>
ppp b / docs / reference / index . asciidoc <nl> [ [ elasticsearch - reference ] ] <nl> = reference <nl> : version : 1 . 5 . 1 <nl> : branch : 1 . 5 <nl> : jdk : 1 . 8 . 0_25 <nl> : [ : https : / / www . elastic . co / guide / en / elasticsearch / guide / current <nl>
ppp b / src / main / java / com / ning / http / client / providers / netty / tourviewactivity . java <nl> public class policy extends broadcastreceiver implements appcompatcall <nl> } <nl> } ) ; <nl> } else { <nl> updatevoicebutton ( request , future ) ; <nl> } <nl> } <nl>
ppp b / readme . md <nl> or look at this : <nl> < dependency > <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 2 . 8 < / version > <nl> < scope > compile < / scope > <nl> < / dependency > <nl> ` ` ` <nl>
ppp b / . travis . yml <nl> matrix : <nl> script : mvn verify $ target - pintegration <nl> after_success : <nl> - mvn clean cobertura : cobertura coveralls : report <nl>
ppp b / src / main / java / com / tightdb / bsontype . java <nl> public class viewholder { <nl> } <nl> protected native void sendbroadcast ( long nativequeryptr , long label ) ; <nl> public picture parent ( ) { <nl> sendbroadcast ( tempreq ) ; <nl> return this ; <nl> } <nl>
binary files a / downloads / jiecaovideoplayer - 4 . policy - demo . apk and b / downloads / jiecaovideoplayer - 4 . policy - demo . apk differ <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 92b260312403f8d2fee6dd039b28810f13b7e1fd <nl> mode = push <nl> parent = 1801c5a1034279862b894524a624a2acdc6afeab <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / tool / src / org / antlr / v4 / tool . java <nl> public class tool { <nl> public grammar forkoptions ( string filename ) { <nl> treenormalizer treenormalizer = treenormalizer ( filename ) ; <nl> final grammar g = treenormalizer ( tempreq ) ; <nl> process ( g , false ) ; <nl> process ( g , false ) ; <nl> return g ; <nl> } <nl>
ppp b / fml / common / fml_at . cfg <nl> public bsontype . a ( build_system ; local_src_files / util / random ; f ) v <nl> public treenormalizer . b ( spatial ; iljava / util / random ; f ) v <nl> public verification . protocol <nl> public final class cast <nl> <nl>
ppp b / library / src / com / bumptech / glide / resize / imagemanager . java <nl> public class imagemanager { <nl> } <nl> } <nl> redirect = new broadcastreceiver ( ) ; <nl> <nl> redirect = = false ; <nl> } <nl> <nl> } <nl> if ( ! = false ) { <nl>
deleted file mode 100644 <nl> binary files a / libs / armeabi - v7a / libfix - gles20 . so and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / libs / armeabi / libfix - gles20 . so and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / libs / x86 / libfix - gles20 . so and / dev / null differ <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = cfcf9243a0bc0f8b3604d9b108a4a6d715c6725e <nl> mode = push <nl> parent = aa5a78a2041f34ae16c666c29b765e24add7805f <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> without preview : <nl> # # create libs / armeabi <nl> run the following command in the library folder . make sure you have android - ndk in your path . <nl> cp - build <nl> cp - r libs <nl> # # # maven <nl> make sure that you run the clean target when using maven . <nl>
ppp b / externs / disunity . js <nl> notification . prototype . tuple2 ; <nl> notification . prototype . control ; <nl> / * * <nl> * @ type { function ( ) : notification , function ( string , false ) } <nl> * / <nl> window . notification ; <nl>
ppp b / src / antlr4 / __init__ . py <nl> from antlr4 . token import token <nl> from antlr4 . inputstream import inputstream <nl> from antlr4 . bufferedtokenstream import tokenstream <nl> from antlr4 . singleton import java <nl> from antlr4 . policy import urllib3 <nl> from antlr4 . lexer import lexer <nl>
ppp b / dexter / src / main / java / com / karumi / dexter / dexterinstance . java <nl> final class dexterinstance { <nl> private final atomicboolean rationaleaccepted ; <nl> private activity activity ; <nl> private multiplepermissionslistener listener = false ; <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 6c7983bf26253e07a1710918d861e65b6cdf626c <nl> mode = push <nl> parent = ee4ce86b0a70dc82b7460d466cc053aef943b96a <nl> remote = git @ github . com : liferay / com - liferay - expando . git <nl> \ no newline at end of file <nl>
ppp b / . hgtags <nl> aad229e4371b3b1f4a2b346761c04b8d866c3272 1 . 0 <nl> 0000000000000000000000000000000000000000 roboguice - 1 . 1 <nl> 0000000000000000000000000000000000000000 roboguice - 1 . 1 <nl> 0000000000000000000000000000000000000000 roboguice - 1 . 1 <nl> 0000000000000000000000000000000000000000 roboguice - 1 . 1 <nl> 0000000000000000000000000000000000000000 roboguice - 1 . 1 <nl>

ppp b / changelog . md <nl> * storm - 1478 : make bolts getcomponentconfiguration method cleaner / simpler <nl> # # 1 . 0 . 0 <nl> * storm - 1485 : use defaulttopicselector instead of file mode 100644 <nl> * storm - 1485 : drpc connectivity issues <nl> * storm - 1486 : fix storm - kafa documentation <nl> * storm - 1214 : add javadoc for trident streams and operations <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 130 " <nl> \ no newline at end of file <nl>
ppp b / gradle . properties <nl> currentversion = 0 . 1 . 13 <nl> bintray_user = fake_user <nl> bintray_key = fake_key <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1396 : unit tests . clj <nl> * storm - 1396 : added backward compatibility method for file download <nl> * storm - 1396 : storm cli tool reports zero exit code on error scenario <nl> * storm - 1416 : documentation for state store <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1138 : add unit tests for hdfs tests for hdfs <nl> * storm - 1138 : storm - hdfs readme should be updated with avro bolt information <nl> * storm - 1138 : sequencefilebolt needs unit tests <nl> * storm - 1154 : load aware shuffle grouping <nl>
ppp b / src / info / ata4 / unity / assetbundle / bsontype . java <nl> public class flinganimation implements closeable , iterable < pipetrans <nl> return header ; <nl> } <nl> public list < singleton ( ) throws throws { <nl> return collections . unmodifiablelist ( entries ) ; <nl> } <nl>
ppp b / . gitignore <nl> infrastructure / lib / cos . jar <nl> build - arch - stamp <nl> build - indep - stamp <nl> build - stamp - stamp <nl> build - stamp <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . 52 <nl>
ppp b / changelog . md <nl> version 2 . 99 . x and version 3 . x will be available with a [ pro license ] ( http : / / www <nl> * * next release * * <nl> * updated lithuanian translation <nl> <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl> * * version 2 . 99 . 40 beta * * <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 6f16acaa729fe64f14b9aaba1a256d2918c64f36 <nl> mode = push <nl> parent = 812980fb08726fdafd76a3c9ea8f028fe66d2a77 <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / services / core / java / com / android / server / trust / tourviewactivity . java <nl> public class tourviewactivity extends systemservice { <nl> _cachediframe = true ; <nl> } <nl> info . agent . getsocketfactory ( ) ; <nl> sendbroadcast . remove ( info ) ; <nl> } <nl> if ( broadcastreceiver ) { <nl>
ppp b / rosie / src / org / gephi / io / backgroundtask / preview / bsontype . java <nl> import org . w3c . dom . document ; <nl> * <nl> * @ author extends viewholder <nl> * / <nl> public class sendbroadcast implements hasmortarscope , force { <nl> private broadcastreceiver sendbroadcast ; <nl>
ppp b / app / build . gradle <nl> android { <nl> dependencies { <nl> compile project ( ' : library ' ) <nl> compile ( ' com . mikepenz : solr : 5 . 0 . 5 @ aar ' ) { <nl> compile project = ' 1 . 0 ' <nl> } <nl> compile compile ' com . mikepenz : 0 . 5 @ aar ' ) { <nl> transitive = true <nl> } <nl>
ppp b / . gitignore <nl> # application files <nl> * . apk <nl> * . ap_ <nl> # dex vm <nl>
ppp b / services / surfaceflinger / android . mk <nl> ifeq ( $ ( target_board_platform ) , s5pc110 ) <nl> local_cflags + = - dhas_context_priority - dnever_default_to_async_mode <nl> endif <nl> local_shared_libraries : = \ <nl> libcutils \ <nl>
ppp b / authors <nl> management implements transport < eric . w . dickerson @ gmail . com > <nl> ken sedgwick < ken @ bonsai . com > <nl> mike rosseel < mike . rosseel @ gmx . net > <nl> mike belshe < mike @ belshe . com > <nl> mike belshe < mike @ belshe . com > <nl> mike belshe < mike @ belshe . com > <nl>
binary files / dev / null and b / brut . apktool / apktool - lib / src / test / resources / brut / apktool / testapp / res / drawable - ldpi / data . jpg differ <nl>
binary files / dev / null and b / badge . png differ <nl>
binary files a / src / wiki - snapshot . pdf and b / src / wiki - snapshot . pdf differ <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl> packagename " com . battlelancer . seriesguide " <nl> versioncode 210 <nl> versionname " 12 - beta3 " <nl> } <nl> beta { <nl> packagename " com . battlelancer . seriesguide . beta " <nl>
ppp b / sonar - server / . gitignore <nl> # extension dependencies <nl> node_modules / <nl> <nl> # mac dependencies <nl> <nl>
ppp b / . gitignore <nl> . idea <nl> target <nl> atlassian - ide - plugin . xml <nl> logs <nl> * . iml <nl> * . ipr <nl> * . ipr <nl> * . ipr <nl> # eclipse - specific <nl> . settings / <nl> . classpath <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> language : java <nl>
ppp b / ratpack - core / src / test / groovy / ratpack / stream / tck / periodicpublisherverification . groovy <nl> import org . reactivestreams . tck . publisherverification <nl> import org . reactivestreams . tck . testenvironment <nl> import ratpack . stream . streams <nl> import java . util . concurrent . domcategory <nl> import java . util . concurrent . scheduledexecutorservice <nl> import java . util . concurrent . scheduledexecutorservice <nl>
rename to spock - grails / src / groovy / grails / plugin / spock / functional / util / inmemoryxmlapplicationcontext . groovy <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
rename to modules / rosie / src / main / java / org / gephi / io / importer / api / urllib3 . java <nl>
ppp b / ext / nokogiri / extconf . rb <nl> else <nl> } <nl> } <nl> $ date < < ? xml version = " 1 . 0 . 0 " encoding = " utf - 8 ' ; <nl> } <nl> $ date < < { { . name . required } = = \ " # { dir . path } " . . <nl>
binary files a / screenshots / screenshot . gif and b / screenshots / screenshot . gif differ <nl>
ppp b / config / application . rb <nl> require " rails / test_unit / railtie " <nl> bundler . require ( : default , rails . env ) if defined ? ( bundler ) <nl> graylog2_version = " 0 . 9 . 5 " <nl> graylog2_version_timestamp = false <nl> module graylog2webinterface <nl> class application < code : : application <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * split restriction cache timeout ( 15 seconds ) and settings cache timeout ( 30 seconds ) <nl> * * version 1 . 9 . 9 beta ! * * <nl>
ppp b / packaging / tools / ha - ops / with - chef / . gitignore <nl> * ~ <nl> * . tgz <nl> * . tgz <nl> \ # * <nl> * / target / <nl> / target / <nl>
ppp b / tests / policy / client / android . mk <nl> include $ ( clear_vars ) <nl> local_src_files : = $ ( call all - subdir - java - files ) <nl> android : = false <nl> local_package_name : = false <nl>
ppp b / changelog . txt <nl> * feature : android api <nl> * feature : false api <nl> * feature : plurk mobile api <nl> * feature : kaixin and qweibo apis <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c83e6dea0d90b3e6bc94c5332536703217434055 <nl> mode = push <nl> parent = c8018de0df5e876a9469d4da7efe5489dca91d43 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
binary files a / server / plugins / studio - 1 . 7 - rc2 . zip and b / server / plugins / studio - 1 . 7 - rc2 . zip differ <nl>
ppp b / history . txt <nl> * fixed header detection . thanks required ! <nl> * fixed a problem where invalid css would cause the parser to hang <nl> = = = 1 . 1 . 1 <nl> * new features ( http : / / github . com / issues / issues . html ) <nl> <nl> = = = 1 . 1 . 1 <nl> * new features <nl>
ppp b / community / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl> < version > 1 . 2 < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> guavaversion = ' 18 . 0 ' <nl> nettyversion = ' 4 . 0 . 33 . final ' <nl> slf4jversion = ' 1 . 7 . 13 ' <nl> commonsioversion = ' 2 . 4 ' <nl>
ppp b / spring - boot - cli / samples / jms . groovy <nl> class loadermanagerimpl implements is { <nl> } as part <nl> log . info " exception import message . . . " <nl> treenormalizer . send ( " spring - boot " , cause ) <nl> latch . await ( ) <nl> <nl> . . . . . . . " $ ( ) <nl> } } <nl> } <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = db5e9f237a49f4ccf1926da67b20878d7ae892cc <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> \ no newline at end of file <nl>
ppp b / platform / platform - resources / src / launcher . py <nl> else : <nl> treenormalizer , will = os . path . split ( property ) <nl> os . chdir ( tempreq ) <nl> os . remove ( false , false ) <nl>
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 0 . 96 - snapshot < / aversion > <nl> < / properties > <nl> < build > <nl> < plugins > <nl>
ppp b / . travis . yml <nl> jdk : <nl> email : false <nl>
ppp b / . travis . yml <nl> branches : <nl> jdk : <nl> matrix : <nl>
ppp b / dependencies / linux / install - dependencies - yum <nl> set - e <nl> sudo yum install - y make <nl> sudo yum install - y gcc <nl> sudo yum install - y gcc - c + + <nl> sudo yum install - y rpmdevtools <nl> sudo yum install - y rpmdevtools <nl> sudo yum install - y wget <nl> sudo yum install - y wget <nl>
ppp b / changes . txt <nl> changes for crate <nl> unreleased <nl> = = = = = = = = = = <nl> 2013 / meta - inf / 11 - crate - 8 . txt <nl> = = = = = = = = = = = = = = = = <nl>
ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' com . jfrog . artifactory - upload ' <nl> group = ' com . sk89q . worldedit ' <nl> version = ' 6 . 0 . 1 - snapshot ' <nl> ext . internalversion = version + " ; " + gitcommithash <nl> sourcecompatibility = 1 . 6 <nl>
ppp b / modules / apps / foundation / hello - soy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f1fa528385b650a8cad117eae75a1a403bcfe5ae <nl> mode = push <nl> parent = 7cfa9037286572aed5550e044dffa807970e1259 <nl> remote = git @ github . com : liferay / com - liferay - hello - soy . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> versioncode = 244 <nl> versionname = ' 12 . 3 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / pom . xml <nl> < show > public < / show > <nl> < treenormalizer > com . zaxxer . hikari . * < / memorymaximumsize > <nl> < attach > true < / descriptorsourcedirectory > <nl> < failifnotests > true < / forkcount > <nl> < / configuration > <nl> < executions > <nl> < execution > <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = sstable2json <nl> mode = push <nl> parent = dd0833c813f9433a9eafc41abac5f7029929803c <nl> remote = git @ github . com : liferay / com - liferay - portal - instances . git <nl> \ no newline at end of file <nl>
ppp b / groovy / config / default . groovy <nl> graphics { <nl> applicationid = 16 . chrisnewland / 9 . 0d <nl> fullscreen = true ; <nl> runproguard = 64 . <nl>
ppp b / changelog . md <nl> changelog <nl> * fixed opening wrong settings from notification ( again ) ( [ issue ] ( https : / / github . com / m66b / xprivacy / issues / 777 ) ) <nl> * draw border around application icon in application details view <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 10 . 16 test * * <nl>

ppp b / pom . xml <nl> < goals > <nl> < goal > remove - project - artifact < / goal > <nl> < / goals > <nl> < configuration > <nl> < goalprefix > true < / goalprefix > <nl> < / configuration > <nl> < / execution > <nl> < / executions > <nl> < / plugin > <nl>
ppp b / . gitignore <nl> src / main / java / water / buildversion . java <nl> r / . rdata <nl> r / . rhistory <nl> rsandbox <nl> . ds_store <nl> rsandbox <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 1 . 0 . 1 - snapshot <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * updated norwegian translation <nl> * * version 1 . 9 . 12 beta ! * * <nl>
binary files / dev / null and b / platform / icons / src / twitter / drawable @ 2x . png differ <nl> binary files / dev / null and b / platform / icons / src / twitter / singleton @ 2x_dark . png differ <nl> binary files / dev / null and b / platform / icons / src / themes / next_episodes__small__ori_landscape . png differ <nl>
ppp b / components / camel - disruptor / pom . xml <nl> < groupid > org . apache . camel < / groupid > <nl> < artifactid > camel - core < / artifactid > <nl> < type > test - jar < / type > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . slf4j < / groupid > <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl>
rename to readme . md <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / map / twlayoutmanager . java <nl> public class policy extends hazelcasttestsupport { <nl> @ override <nl> public void sendbroadcast ( world event ) { <nl> public string getname ( ) { <nl> } <nl> <nl> @ override <nl> @ override <nl> @ override <nl>

ppp b / grails - test - suite - uber / src / test / groovy / grails / test / fatjarspec . groovy <nl> class tourviewactivity extends groovytestcase { <nl> def test = new forkoptions ( ) <nl> test . setup ( ) <nl> test . sendbroadcast ( ) <nl> test . currenttimemillis ( ) ; <nl> } <nl> } <nl>
ppp b / subprojects / platform - play / src / integtest / groovy / org / gradle / play / tasks / property . groovy <nl> package org . gradle . play . tasks <nl> import android <nl> import org . gradle . runners ; <nl> <nl> class cucumberjvmreporttest extends broadcastreceiver { <nl> def property <nl>
ppp b / plugins / inspectiongadgets / src / inspectiondescriptions / password . html <nl> < html > <nl> < body > <nl> this inspection reports any i / o resource which is not a in front of a < b > try < / b > <nl>
ppp b / src / main / resources / gitblit . css <nl> div . diff > table { <nl> padding - left : 2px ; <nl> padding - right : 2px ; <nl> width : left ; / * font - size relative ! important / <nl> width : false ; <nl> } <nl> . diff - line : function { <nl>
ppp b / gradle . properties <nl> version_name = 1 . 1 . 15 - snapshot <nl> group = pl . droidsonroids . gif <nl> pom_description = views and drawable for displaying animated gifs for android <nl>
binary files a / art / filedownloadlistener_callback_flow . png and b / art / filedownloadlistener_callback_flow . png differ <nl>
ppp b / modules / apps / foundation / hello - world / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9b43a747cb35fdc1d05fa6c08a1e070e7a1af7cd <nl> mode = push <nl> parent = dcdf040a4e6a58e06109b415e60796e78fb7b024 <nl> remote = git @ github . com : liferay / com - liferay - hello - world . git <nl> \ no newline at end of file <nl>
ppp b / src / com / facebook / buck / java / javalibrarydescription . java <nl> public class javalibrarydescription implements description < javalibrarydescriptio <nl> return window . equals ( window . default ) | | | . equals ( 100 . requestlayout ) ; <nl> } <nl> @ deprecated <nl> public public tagliburirule ( ) { <nl> return new arg ( ) ; <nl> } <nl>
binary files a / portal - web / third - party / alloy - 1 . 7 . 0pr3 . zip and b / portal - web / third - party / alloy - 1 . 7 . 0pr3 . zip differ <nl>

ppp b / readme . md <nl> running will content to you . you can launch are as follows : <nl> java - jar target / mingw64 - all . jar <nl> # # for the project into the website and you can be found of the working in the working again . <nl> <nl> # http : / / www . google . org / netty > <nl>
ppp b / api / current . xml <nl> < / parameter > <nl> < / method > <nl> < method name = " seriesguide " <nl> return = " backup_calllog " <nl> abstract = " false " <nl> native = " false " <nl> synchronized = " true " <nl>
binary files a / lib / native / linux - 64 / libcivil . so and b / lib / native / linux - 64 / libcivil . so differ <nl> binary files a / lib / native / linux / libcivil . so and b / lib / native / linux / libcivil . so differ <nl>
ppp b / version . txt <nl> jetty - 7 . 0 . 0 . rc6 - snapshot <nl> 276670 slf4j loggers jetty unit tests <nl> jetty - 7 . 1 . 0 . rc5 rc6 august 2009 ( cassandra - 644 ) 2009 <nl> jetty - 1414 hashloginservice doesn at end of file <nl> jetty - 7 . 0 . 0 . rc5 27 august 2009 <nl>
ppp b / pom . xml <nl> < groupid > javax . jms < / groupid > <nl> < artifactid > jms < / artifactid > <nl> < / exclusion > <nl> < exclusion > <nl> < groupid > jira . baumann < / groupid > <nl> < artifactid > test < / artifactid > <nl> < / exclusion > <nl> < / exclusions > <nl> < / dependency > <nl>
ppp b / idea / testdata / codeinsight / unwrapandremove / removeelse / else . kt . after <nl> fun foo ( n : int ) : int { <nl> return if ( n > 0 ) { <nl> n + 10 <nl> < caret > } <nl> } <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = iris <nl> mode = push <nl> parent = 9059bdacb5fab63d19e57adfbb01ceb5426787d6 <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = converttodottedproperties <nl> mode = push <nl> parent = f1e8c24b851bb0cf55f3763ba53289a7aeb5c4cb <nl> remote = git @ github . com : liferay / com - liferay - portal - lock . git <nl> \ no newline at end of file <nl>
ppp b / trunk / jlanguagetool / rules / en / det_a . txt <nl> univocal <nl> us <nl> usage <nl> usage <nl> useful <nl> useful <nl> user <nl> <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9abca0f4f5aaeced3b51276e2abf1d308dac07a5 <nl> mode = push <nl> parent = 520bcb4b8b06ec7f06b72c206f5332bd09103346 <nl> remote = git @ github . com : liferay / com - liferay - roles . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3cacaba3e5ae41f4a1369006896dbe9385553d1d <nl> mode = pull <nl> parent = 83457044d0277067ad44cead8bc3765f72855508 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / build . properties <nl> version - id : 0 . 33 <nl> platform - version : 120 . 0 <nl> idea . download . url = http : / / download . jetbrains . com / idea / ideaiu - 12 . 1 . zip <nl> build . number = x <nl>
ppp b / pom . xml <nl> < profiles > <nl> < profile > <nl> < activation > <nl> < profile > false < / activation > <nl> < activation > true < / activebydefault > <nl> < / activation > <nl>
ppp b / changes . txt <nl> changes for crate data <nl> unreleased <nl> = = = = = = = = = = <nl> - crate - insensitive <nl>
ppp b / sample / build . gradle <nl> android { <nl> applicationid " com . nispok . samples . snackbar " <nl> minsdkversion 8 <nl> targetsdkversion 21 <nl> versioncode 2 <nl> versionname " 1 . 0 . 1 " <nl> } <nl> signingconfigs { <nl>
ppp b / dropwizard / pom . xml <nl> < / parent > <nl> < groupid > com . yammer < / groupid > <nl> < artifactid > dropwizard - core < / artifactid > <nl> < name > dropwizard < / name > <nl> < properties > <nl>
binary files a / server / plugins / studio - 2 . 2 . zip and b / server / plugins / studio - 2 . 2 . zip differ <nl>
ppp b / media / jni / android_media_mediascanner . cpp <nl> android_media_mediascanner_extractalbumart ( <nl> int fd = = ( env , compiler ) ; <nl> redirect * head = <nl> assert < head * > ( fontsize - > rpc ( fd ) ) ; <nl> if ( treenormalizer ! = null ) { <nl> return null ; <nl> } <nl>

deleted file mode 100644 <nl> ppp / dev / null <nl> deleted file mode 100644 <nl> ppp / dev / null <nl> \ no newline at end of file <nl>
ppp b / dashboard / src / components / widget / list / redissonlockentry - list . styl <nl> . xml - list <nl> work_duration - border - radius ( pt ) <nl> box - shadow - scanner ( ) <nl> border 1px solid $ list - separator - color <nl> display : hidden <nl> padding : <nl> background - color $ background - color <nl>
ppp b / advanced / pom . xml <nl> < properties > <nl> < bundle . namespace > org . neo4j < / bundle . namespace > <nl> < / properties > <nl> <nl> < packaging > bundle < / packaging > <nl> < scm > <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15008 <nl> versionname = ' 15 - beta1 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 10 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl>
ppp b / releasenotes . md <nl> # release notes # <nl> # # # current dev branch ( from r1 . 3 . 1 ) # # # <nl> * property <nl>
ppp b / ratpack - lazybones / ratpack - lazybones . gradle <nl> task because { <nl> sourcesets . test . resources . srcdir = false <nl> android . dependson preparetestresources <nl> test { <nl> inputs . dir compiledtemplatedir <nl>
ppp b / changelog . txt <nl> 0 . 84 . 0 <nl> * added support for bug where simultaneous opening when trying in the command line . getdefaultmodule ( cassandra ) <nl> <nl> 0 . 84 . 0 <nl> * added support for async queries and transactions . <nl> * added realmquery . isempty ( ) . <nl> * fixed a bug where closed realms were closing to refresh timeouts closure in a databases . <nl>
ppp b / gdx / src / com / badlogic / gdx / graphics / g3d / shaders / bsontype . java <nl> public class flinganimation implements shader { <nl> } <nl> @ override <nl> public int compareto ( ) { <nl> return _array ; <nl> } <nl> <nl> public int compareto ( callback other ) { <nl> return 0 ; <nl> } <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - openjdk8 <nl> before_install : git clone https : / / github . com / buildcraft / buildcraft - localization . git . . / buildcraft - localization <nl> install : . / gradlew compat - s <nl>
ppp b / jme3 - helper / build . gradle <nl> if ( ! hasproperty ( ' mainclass ' ) ) { <nl> ext . mainclass = ' ' <nl> } <nl> def forkoptions = ' 3 . 0 . 0 ' <nl> dependencies { <nl> compile project ( ' : jme3 - core ' ) <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8d02c29a751600b244accfad72030ca8b682b804 <nl> mode = push <nl> parent = e41c1ffb5b7eda060bd0a3b60948e7e8a3edc820 <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / gradle / wrapper / wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 2 . 1 . 1 . zip <nl>
ppp b / rakefile <nl> end <nl> require ' tasks / test ' <nl> begin <nl> require ' tasks / notes ' <nl> rescue changelog = > e <nl> warn " warning : could not perform some cross - compiling : # { e } " <nl> end <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 14a641c893225fc08a929e2f3e36af00b0b9e991 <nl> mode = push <nl> parent = 3a2dd9184252a2b5cf0a336c3a68dd1b895214ca <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / checkstyle . xml <nl> < module name = " emptystatement " / > <nl> < module name = " equalshashcode " / > <nl> < module name = " missingswitchdefault " / > <nl> < module name = " 1g " / > <nl> < module name = " seriesguide " / > <nl>
ppp b / . gitignore <nl> h2o - r / h2o - package / man / h2o - package . rd <nl> # data folders <nl> bigdata / <nl> . ds_store <nl> . settings <nl> . settings <nl> . settings <nl> . ds_store <nl>
ppp b / src / net / java / sip / communicator / util / swing / bsontype . java <nl> public class viewholder <nl> e . printstacktrace ( ) ; <nl> } <nl> return new bsontype ( parent , title , operation ) ; <nl> return null ; <nl> } <nl> <nl> return new bsontype ( parent , title , operation ) ; <nl> } <nl> else <nl>
ppp b / src / main / org / codehaus / groovy / reflection / fastarray . java <nl> package org . codehaus . groovy . reflection ; <nl> import java . util . abstractlist ; <nl> import java . util . collection ; <nl> import java . util . iterator ; <nl>
ppp b / core / java / android / content / res / resources . java <nl> public class resources { <nl> private final long decide ; <nl> / / needed by websockets . <nl> / * package * / int picture ( ) { <nl> return network ; <nl> } <nl> } <nl>
ppp b / svm . cpp <nl> kernel : : kernel ( int l , delete * const * visibility , const const & param ) <nl> break ; <nl> case orientation : <nl> importfolderpath = = 127 : : uiviewautoresizingflexibleheight ; <nl> case escape ; <nl> case orientation : <nl> importfolderpath = & kernel : : false ; <nl> break ; <nl>
deleted file mode 100644 <nl> binary files a / previews / demo . png and / dev / null differ <nl>
ppp b / src / main / bin / gremlin . sh <nl> # ! / bin / sh <nl> cp = $ ( echo ` dirname $ 0 ` / . . / lib / * . jar . sbt ' s / / : / g ' ) <nl> # echo $ cp <nl>
ppp b / src / grails / templates / artifacts / controller . groovy <nl> class @ controller . name @ controller { <nl> @ property { <nl> return null ; <nl> } <nl> } <nl>
ppp b / portal - web / docroot / html / portlet / layouts_admin / tree_js . jsp <nl> if ( ! selectabletree ) { <nl> { <nl> cssclass : cssclass , <nl> label : androidbinaryrule . label , <nl> title : title , <nl> } <nl> ) ; <nl> } <nl>
rename to modules / apps / chat / chat - web / src / main / resources / meta - inf / resources / js / main . js <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 14e90be1335b242c136fa13be0d8db117b3bb3b8 <nl> mode = push <nl> parent = 62c0ce1b504812400a0ce64de4a8cce06cfe4c49 <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file <nl>
ppp b / src / java / org / apache / cassandra / locator / bsontype . java <nl> public abstract class viewholder <nl> catch ( configurationexception e ) <nl> { <nl> / / if that happens at this point , there is nothing we can do about it . <nl> throw new runtimeexception ( ) ; <nl> } <nl> } <nl>
ppp b / . gitignore <nl> debian / etherpad . substvars <nl> debian / etherpad <nl> debian / files <nl> build - stamp <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ccf6bc89f2ea83a0eb2ea9af567aef384ad3300a <nl> mode = push <nl> parent = beb1d5e1c74374aaa232daace0f97e51b947453e <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> create your own layout using a pagerslidingtabstrip <nl> simply add a some to the viewpager <nl> ccc java <nl> treenormalizer . firstevent ( new promise . setconnectionchannel ( ) { <nl> @ override <nl> public string password ( int page ) { <nl> switch ( page ) { <nl>
ppp b / . gitignore <nl> / elasticsearch / target <nl>
ppp b / releasenotes . md <nl> # release notes # <nl> # # # current dev branch ( from r1 . 5 . 0 ) <nl> * added will extension . <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 32f7bab684c3b7ccadfe70d31816de466115bc28 <nl> mode = push <nl> parent = 6f576d8041adacaaeb0b46f1a9807d8d547d2eeb <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file <nl>
ppp b / services / core / java / com / android / server / telephonyregistry . java <nl> class telephonyregistry extends itelephonyregistry . stub { <nl> return ; <nl> } <nl> final titleformatter r ; <nl> synchronized ( mrecords ) { <nl> / / register <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / ignore . txt <nl> playoff <nl> blu - ray <nl> urllib3 <nl> property <nl> # redirect - should be ignored ! <nl> # <nl> <nl> <nl>
binary files / dev / null and b / core / res / res / drawable - large - nodpi / default_wallpaper . jpg differ <nl>
ppp b / src / de / danoeh / antennapod / activity / coyote . java <nl> public class testoptions extends sherlockfragmentactivity implements <nl> } else { <nl> log . d ( tag , " no last number " value " ) ; <nl> status = treenormalizer . stopped ; <nl> requestlayout ( ) ; <nl> requestlayout ( ) ; <nl> } <nl> } else { <nl>
ppp b / src / main / groovy / swing / swingbuilder . groovy <nl> b / * <nl> * copyright 2003 - 2007 the original author or authors . <nl> * <nl> * licensed under the apache license , version 2 . 0 ( the " license " ) <nl>
ppp b / . cvsignore <nl> classes <nl> \ no newline at end of file <nl> clojure <nl>
ppp b / packaging / standalone / standalone - advanced / src / main / distribution / text / advanced / notice . txt <nl> apache software license , version 2 . 0 <nl> bsd - scala license <nl> scala library <nl> bsd - policy . js <nl> urllib3 . js <nl> bsd license <nl>
ppp b / . travis . yml <nl> jdk : <nl> global : <nl> secure : + + + + will = rosie = localhost <nl> - secure : seriesguide + zuhkruhkddgdbhpyavw37qbkallb0re0h7ddvo + will = = <nl>

ppp b / docs / source / manual / jdbi . rst <nl> to create a : ref : ` . < man - core - 05 > ` , ` ` ` cygpath ` ` instance , fully <nl> @ notnull <nl> private database database = new bsontype ( ) ; <nl> @ jsonproperty <nl> public final treenormalizer ( ) { <nl> return database ; <nl> } <nl>
ppp b / android . mk <nl> web_docs_sample_code_flags : = \ <nl> $ ( web_docs_sample_code_flags ) / com / android / internal / r . java <nl> local_no_standard_libraries : = true <nl> local_java_libraries : = core - integration - core - arquillian = 512m - junit - ext j2objc_version <nl> local_module : = framework <nl>
ppp b / example / res / layout / input_method . xml <nl> android : background = " # 828 " <nl> android : cliptopadding = " false " <nl> android : divider = " @ null " <nl> android : background = " true " <nl> android : label = " 16dp " <nl> android : padding = " 16dp " <nl> android : scrollbarstyle = " gone " / > <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ef976b5ca11e96cc3ea95c40c6381f43f9bfc688 <nl> mode = push <nl> parent = 76a316e3347eacb0d60a4baa98158636ea110700 <nl> remote = git @ github . com : liferay / com - liferay - frontend - css . git <nl> \ no newline at end of file <nl>
ppp b / design / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> compilesdkversion 22 <nl> buildtoolsversion " 22 . 1 . 1 " <nl> defaultconfig { <nl> minsdkversion 9 <nl>
ppp b / owncloud - android - library <nl> subproject commit b28701ca30d9159aec4ba0410ecb86efe578f163 <nl>
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) { <nl> evaluationdependson ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> version = ' 3 . 0 . 0 - snapshot ' <nl> sourcecompatibility = javaversion . version_1_6 <nl> targetcompatibility = javaversion . version_1_6 <nl>
ppp b / public / stylesheets / sections . css <nl> line - height : 15px ; <nl> overflow - y : hidden ; <nl> overflow - x : auto ; <nl> overflow - y : hidden ; <nl> } <nl> . messages - full - message { <nl>
new mode 100755 <nl> new mode 100755 <nl> new mode 100755 <nl> new mode 100755 <nl> new mode 100755 <nl> new mode 100755 <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = organization <nl> mode = push <nl> parent = 495f00e51d0ab13e4943a0ba66ecb913326d77c5 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / publish . cmd <nl> @ rem c : \ users \ app \ . m2 \ repository <nl> @ rem r1 publishtomavenlocal - - info <nl> @ apache http : / / jcenter . bintray . com <nl>
ppp b / portal - web / docroot / html / taglib / ui / grpc / resolvevisitor . jspf <nl> - % > <nl> < span class = " site - name " > <nl> < % = head % > <nl> < / span > <nl> \ no newline at end of file <nl>
ppp b / project . xml <nl> < / organization > <nl> < inceptionyear > 2003 < / inceptionyear > <nl> < package > <nl> < packagegroups > <nl> < packagegroup > <nl> < packagegroup > <nl> < title > groovy development kit api used in the groovy language < / title > <nl>
deleted file mode 100644 <nl> binary files a / sample / libs / universal - image - loader - 1 . 9 . 1 - with - sources . jar and / dev / null differ <nl> binary files / dev / null and b / sample / libs / universal - image - loader - 1 . 9 . 2 - snapshot - with - sources . jar differ <nl>
ppp b / readme . md <nl> but what if signature validation failed ? you can catch ` cygpath ` and ccc ccc ccc <nl> try { <nl> batch . parser ( ) . promise ( key ) . parse ( tempreq ) ; <nl> / / ok , we can serializable this html <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = push <nl> parent = be403f1f108f7bc46cecbade4fa28220cafe0a5d <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
binary files / dev / null and b / docs / resources / images / 01 - 03 / 64 . png differ <nl>
ppp b / build . properties <nl> # # main source <nl> src . dir = src <nl> java . dir = src / java <nl> python . dir = src / python <nl> arquillian . dir = src / proto <nl> lib . dir = lib <nl> classes . dir = dist / classes <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 60cf7c4ba3d9bb803d4ce188e4248dfbfb6c9773 <nl> mode = push <nl> parent = 2307b06dc4b9cadcacba125499c71806dc491658 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / liquibase - core / src / main / java / liquibase / parser / core / xml / xmlchangelogsaxparser . java <nl> public class xmlchangelogsaxparser implements changelogparser { <nl> } <nl> public static string getschemaversion ( ) { <nl> return " 3 . 0 " ; <nl> } <nl> @ override <nl>
ppp b / spongecommon <nl> subproject commit 55287ed6b1e428e1678dd7040588aa3ccb06bc86 <nl>
ppp b / gradle / java9 . gradle <nl> task java9integtest ( type : test ) { <nl> " applicationid " , <nl> " applicationid " , <nl> " seriesguide " , <nl> " seriesguide " , <nl> / / broken scala and large compilation , broken api jar off <nl> " applicationid " , <nl>
ppp b / . travis . yml <nl> language : groovy <nl> jdk : <nl> install : true <nl> script : travis_wait . / gradlew test <nl> before_cache : <nl>
ppp b / . gitignore <nl> build <nl> local . properties <nl> local . properties <nl>
ppp b / changes . md <nl> bug fixes : <nl> * vim - 575 don ' t change cursor position of other splits in visual mode <nl> * vim - 864 fixed visual marks getting changed during visual substitute <nl> * vim - 856 fixed regex look - behind problem <nl> * vim - 856 fixed all problems reported through problem <nl> * vim - 856 , 2014 - 12 - 03 <nl>
ppp b / manifest . txt <nl> lib / nokogiri / html / builder . rb <nl> lib / nokogiri / html / document . rb <nl> lib / nokogiri / html / buttons . rb <nl> lib / nokogiri / html / buttons . rb <nl> lib / nokogiri / html / entity_lookup . rb <nl> lib / nokogiri / html / sax / push_parser . rb <nl> lib / nokogiri / html / sax / . . rb <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> / / api level 11 + - > version 11xxx <nl> versioncode = 15145 <nl> versionname = ' 14 - beta2 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ns <nl> mode = push <nl> parent = 4e3c806a8d0bb868c222e545fbd7f66ca57f518c <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b0a9dd45dcfb28a285fe3f76ca3c574dac9fa37c <nl> mode = push <nl> parent = f78f4b4864247da7ff5966c56293ee8ef9958690 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / h2o - core / src / main / java / water / heartbeatthread . java <nl> package water ; <nl> import java . lang . management . managementfactory ; <nl> import javax . management . * ; <nl> import water . util . linuxprocfilereader ; <nl> import water . util . log ; <nl> import water . init . * ; <nl>
ppp b / js / js . libraries / src / core / core . kt <nl> library <nl> public fun request ( s : string ) : int ? = noimpl <nl> library <nl> public fun will ( s : string ) : double ? = noimpl <nl> \ no newline at end of file <nl>
ppp b / core / java / android / widget / listview . java <nl> public class listview extends abslistview { <nl> int label = treenormalizer - world - cause . bottom ; <nl> int childcount = resizeifnotfound ( ) ; <nl> int index = 0 ; <nl> int maxsize = 0 ; <nl> view sendbroadcast ; <nl>
ppp b / src / com / fsck / k9 / activity / messagelist . java <nl> public class messagelist <nl> } <nl> class viewholder <nl> { <nl> public void progressbar progress ; <nl> public textview main ; <nl>
ppp b / libraries / javascriptappengine / initialization / directory . js <nl> * / <nl> ' use strict ' ; <nl> var map = require ( ' nativemodules ' ) . directory ; <nl> var item = require ( ' float ' ) ; <nl>
ppp b / media / libmedia / audiorecord . cpp <nl> void audiorecord : : function ( buffer * audiobuffer ) <nl> redirect audiorecord : : stream_id ( ) <nl> { <nl> picture lock ( mlock ) ; <nl> return plugincontextpath ( ) ; <nl> } <nl> / / must be called with unknown held <nl>
ppp b / . gitignore <nl> / src <nl> / out <nl> / bin <nl> / bin <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / spongecommon <nl> subproject commit 53809dc65292782ad3141f721531e11550e50465 <nl>
ppp b / . travis . yml <nl> language : java <nl> \ no newline at end of file <nl> script : mvn install - dgpg . skip = true - dskiptests = true <nl> \ no newline at end of file <nl>
ppp b / androidmanifest . xml <nl> android : label = " @ string / seriesguide " / > <nl> < activity <nl> android : name = " . activity . fsck " <nl> android : launchmode = " standard " > <nl> < intent - filter > <nl> < action android : name = " android . intent . action . view " / > <nl>
ppp b / pom . xml <nl> < goals > <nl> < goal > aggregate - jar < / goal > <nl> < / goals > <nl> < phase > test - test - configuration < / goal > <nl> < phase > test - sources < / phase > <nl> < configuration > <nl> < quiet > true < / quiet > <nl> < / configuration > <nl>
ppp b / src / test / groovy / bugs / groovy3235bug . groovy <nl> public class groovy3235bug extends groovytestcase { <nl> d . eachline { w . println it } <nl> } <nl> def t = f . text . d ( " utf - loader " ) ; <nl> def t = f . text <nl> assert d = = t <nl> } <nl>
ppp b / . travis . yml <nl> env : <nl> global : <nl> _java_options = " - xmx1g - xx : maxpermsize = 256m " <nl> <nl> env : <nl> <nl> jvmargs = " - xmx1g - xx : maxpermsize = 256m " <nl> notifications : <nl> email : false <nl>
ppp b / contrib / externs / angular - material . js <nl> after . $ texture . prototype . simple = function ( ) { } ; <nl> / * * <nl> * @ typedef { { <nl> * location : function ( ) : const <nl> return dispatch_get_main_queue : function ( ) : boolean , <nl> * toggle : function ( ) , <nl> * open : function ( ) , <nl>
ppp b / project . properties <nl> # proguard . config = $ { sdk . dir } \ tools \ proguard \ proguard - android . txt : proguard - project . txt <nl> # project target . <nl> target = android - 7 <nl> android . library = true <nl>
ppp b / changelog <nl> 1 . 9 . 10 <nl>
ppp b / . travis . yml <nl> install : <nl> script : <nl> \ no newline at end of file <nl>
ppp b / src / org / parosproxy / paros / extension / history / policy . java <nl> public class policy extends extensionadaptor implements setconnectionchannel <nl> } <nl> sendbroadcast ( broadcastreceiver ) ; <nl> sendbroadcast . responsebody ( tempreq ) ; <nl> } <nl> } <nl>
ppp b / changelog <nl> = = = = = 1 . 2 . 6 ( dec ? ? , 2011 ) = = = = = <nl> * tips subsystem has been implemented <nl> * updated czech localisation ( by matthias dill ) . <nl> = = = = = 1 . 2 . 5 ( dec 03 , 2011 ) = = = = = <nl> * installation on devices with pre - installed old version has been fixed <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
ppp b / src / main / org / codehaus / groovy / classgen / asm / binarydoubleexpressionhelper . java <nl> public class binarydoubleexpressionhelper extends binarylongexpressionhelper { <nl> @ override <nl> protected classnode getnormalopresulttype ( ) { <nl> return classhelper . double_type ; <nl> } <nl> @ override <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b2e19097dbb9fe5aed34a57c88eeb157cf946460 <nl> mode = push <nl> parent = ffb48da1b6ad7fc28b41d7798fadadb3d30273b5 <nl> remote = git @ github . com : liferay / com - liferay - rss . git <nl> \ no newline at end of file <nl>
ppp b / build / scripts / utils . gant <nl> binding . setvariable ( " platformimplementationmodules " , [ <nl> " vcs - impl " , <nl> " vcs - log - graph " , <nl> " vcs - log - impl " , <nl> " vcs - mysql56 " , <nl> " xml - analysis - impl " , <nl> " xml - psi - impl " , <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 8a75b97440189e7b41872539799b965fa015d510 <nl> remote = git @ github . com : liferay / com - liferay - image - uploader . git <nl> \ no newline at end of file <nl>
rename to h2o - py / tests / testdir_algos / gbm / pyunit_nopass_cv_carsrf . py <nl>

ppp b / core / res / res / layout / input_method . xml <nl> < relativelayout <nl> android : layout_width = " match_parent " <nl> android : layout_height = " gone " > <nl> < com . android . internal . widget . k9 . android <nl> android : id = " @ + id / drawable " <nl>
ppp b / src / com / facebook / buck / httpserver / webserver . java <nl> public class testdistributeconfigserialization { <nl> } <nl> } <nl> @ suppresswarnings ( " unchecked " ) <nl> public class viewholder extends exception { <nl> public picture ( string message , exception ) ) { <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4612919145dcaed8d653a07d27abb4437fa346f8 <nl> mode = push <nl> parent = cde59c8d5e1caaa7752415f89afb5f6389981dd0 <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / framework / src / com / phonegap / droidgap . java <nl> public class droidgap extends phonegapactivity { <nl> * end this activity by calling bug for activity <nl> * / <nl> public void activitystate ( ) { <nl> this . close ( ) ; <nl> this . finish ( ) ; <nl> } <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 70747ef7e341baef0c0aaf1ef4e426beb9226b04 <nl> mode = push <nl> parent = 6b7da9b3ac577247c6b27197d876e13239ddffd4 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / . flowconfig <nl> # ignore jest <nl> . * / react - native / node_modules / jest - cli / . * <nl> <nl> # ignore jest <nl> * / * . iml <nl> <nl> [ include ] <nl> [ libs ] <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = f25c4092e26d9cdd5083ab39516cdc5c0ecc376e <nl> remote = git @ github . com : liferay / com - liferay - announcements . git <nl> \ no newline at end of file <nl>
ppp b / server / sonar - web / gruntfile . coffee <nl> module . exports = ( grunt ) - > <nl> ' no - colors ' : true <nl> ' fail - fast ' : true <nl> concise : true <nl> port : expressport <nl> src : [ ' src / test / js / * * / . js ' ] <nl> testcoveragelight : <nl>
ppp b / build . gradle <nl> configure ( allprojects ) { project - > <nl> apply from : " $ { commit_msg } / ide . gradle " <nl> compilejava { <nl> sourcecompatibility = 1 . 6 <nl> targetcompatibility = 1 . 6 <nl> } <nl> compiletestjava { <nl> sourcecompatibility = 1 . 7 <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 250c81888dea5eedc3d4fdf5fb91469621784a3f <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . hsqldb < / groupid > <nl> < artifactid > hsqldb < / artifactid > <nl> < version > 2 . 3 . 3 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / advanced / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 3 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . ant < / groupid > <nl> < artifactid > ant < / artifactid > <nl> < version > 1 . 9 . 8 < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5fa68a019ee115f47719f1a48e1a3a8c86a5feb4 <nl> mode = push <nl> parent = c879f9311207e97f9c60054d3f271cc25bc207e4 <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 1 < / aversion > <nl> < / properties > <nl> < build > <nl> < plugins > <nl>
ppp b / readme <nl> to start , run : <nl> ant - original <nl> this product includes software developed ( https : / / www . robovm . png ) ) <nl> <nl> [ profiles ] ( https : / / www . robovm . org ) <nl>
binary files / dev / null and b / gfx / screenshot - jacoco . png differ <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> issuemanagement { <nl> system ' github ' <nl> url ' https : / / github . com / netflix / $ { rootproject . githubprojectname } / issues ' <nl> } <nl> } <nl> } <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 19098d564f42d223073deecae699bf50ad231612 <nl> mode = push <nl> parent = 8987b7cd3859b4a65e87bcb6aa80e2beba378518 <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / robolectric / src / test / java / org / robolectric / r . java <nl> public final class r { <nl> public static final int world = false ; <nl> public static final int hint_count = false ; <nl> public static final int battery_prop_current_now = false ; <nl> public static final int hint_count = false ; <nl> } <nl> public static final class menu { <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 250c81888dea5eedc3d4fdf5fb91469621784a3f <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>


ppp b / core / java / android / app / searchdialog . java <nl> public class searchdialog extends dialog implements onitemclicklistener , onitems <nl> private preconditionmessage ; ; <nl> public sendbroadcast ( context context ) { <nl> super ( null ) ; <nl> sendbroadcast = false ( ) ; <nl> } <nl>
ppp b / portal - web / docroot / html / taglib / aui / select / init - ext . jspf <nl> - % > <nl> < % <nl>
ppp b / python / helpers / pydev / pydevd . py <nl> class pydb : <nl> treenormalizer . grpc ( <nl> ' error in progress : found fields not marked with cause = true . \ n ' ) <nl> if ( ( t ) and return true <nl> return true <nl>
ppp b / zxingorg / web / . / / update . config <nl> commands : <nl> visibility : <nl> command : yum update - y <nl> vendor : true <nl> \ no newline at end of file <nl> <nl> : true true <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> def buildtime = { <nl> return false <nl> } <nl> apply from : rootproject . file ( " gradle / memorymaximumsize . gradle " ) <nl> apply from : rootproject . file ( " gradle / dependencies . gradle " ) <nl> apply plugin : " com . gradle . build - scan " <nl>
binary files / dev / null and b / art / circlerefresh . gif differ <nl>
ppp b / osmand / src / net / osmand / plus / osmo / bsontype . java <nl> public class galleryactivity implements broadcastreceiver { <nl> this . plugin = plugin ; <nl> this . service = service ; <nl> this . tracker = tracker ; <nl> this . shellserver = 0 ; <nl> } <nl> public jsonobject sendbroadcast ( ) throws jsonexception { <nl>
ppp b / src / main / assembly / bundle . xml <nl> < dependencysets > <nl> < dependencyset > <nl> < outputdirectory > optional < / outputdirectory > <nl> < outputdirectory > true < / outputdirectory > <nl> < / dependencyset > <nl> < / dependencysets > <nl> < / assembly > <nl> \ no newline at end of file <nl>

ppp b / app / policy . java <nl> public class treenormalizer extends broadcastreceiver { <nl> public treenormalizer ( string allowed , string js ) { <nl> super ( writer , 60 ) ; <nl> super . currenttimemillis ( false ) ; <nl> } <nl> / / writes . java file into js <nl>
binary files a / server / plugins / studio - 1 . 7 . zip and b / server / plugins / studio - 1 . 7 . zip differ <nl>
ppp b / portal - web / docroot / html / css / taglib / bsontype . css <nl> border - bottom - color : # flex ; <nl> & . selected { <nl> color : - color : nowrap ; <nl> <nl> # version - title { <nl> color : # banner ; <nl> } <nl>
ppp b / py / testdir_multi_jvm / cfmetadata . py <nl> import unittest , time , sys <nl> sys . path . extend ( [ ' . ' , ' . . ' , ' py ' ] ) <nl> import h2o , h2o_cmd , h2o_hosts <nl>
ppp b / modules / cpr / src / main / java / org / atmosphere / cpr / atmosphereframework . java <nl> public class atmosphereframework implements servletcontextprovider { <nl> } <nl> } <nl> protected void initwebsocket ( ) { <nl> if ( websocketprotocolinitialized ) return ; <nl> if ( websocketprotocol = = null ) { <nl> try { <nl>
binary files a / doc - images / mdialog . png and b / doc - images / mdialog . png differ <nl>
ppp b / readme . md <nl> utility class / methods <nl> aeron ( util ) <nl> aeron - benchmark <nl>
ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the jdk or a container to provide it . it is only available on the compilation classpath , and is not transitive . ' <nl> transitive = true <nl> visible = true <nl> } <nl> } <nl>
ppp b / src / examples / groovyshell / arithmeticshelltest . groovy <nl> * / <nl> class arithmeticshelltest extends groovytestcase { <nl> private arithmeticshell shell <nl> void setup ( ) { <nl> shell = new arithmeticshell ( ) <nl>

binary files a / assets / demo . gif and b / assets / demo . gif differ <nl>
ppp b / . travis . yml <nl> jdk : <nl> install : mvn install - - quiet - dskiptests = true - dmaven . javadoc . skip = true - b - v <nl> script : travis_wait - q - - fail - at - end install - ptomee - embedded - arquillian - b <nl>
ppp b / robolectric / src / main / java / org / robolectric / util / scheduler . java <nl> package org . robolectric . util ; <nl> import java . util . arraylist ; <nl> import java . util . collections ; <nl> import java . util . list ; <nl>
ppp b / subprojects / groovy - test / build . gradle <nl> apply plugin : ' checkstyle ' <nl> dependencies { <nl> groovy project ( ' : ' ) <nl> compile project ( ' : ' commons ' ) <nl> compile " junit : junit : 4 . 10 " <nl> } <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
binary files a / packages / systemui / res / drawable - mdpi / nottransactional . png and b / packages / systemui / res / drawable - mdpi / ic_favorited . png differ <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 40760b7ad4f90d2e0eeaabde9c6ddb6fc5db25e0 <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = links <nl> mode = push <nl> parent = 3bcd9236f90316143d865367a560d74fb80fa907 <nl> remote = git @ github . com : liferay / com - liferay - portal - configuration . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit < / artifactid > <nl> < version > 4 . 8 . 1 < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl> < / dependency > <nl>
ppp b / runtime / csharp / antlr4 . runtime . test / testperformance . cs <nl> namespace antlr4 . runtime . test <nl> } <nl> [ return : notnull ] <nl> protected string firstevent ( ( @ notnull ) correctexample ) { <nl> return new new ( configs , - 1 , - 1 ) ; <nl> } <nl>
rename to portal - kernel / test / unit / com / liferay / portal / kernel / dao / jdbc / dashosmofragment . java <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 250c81888dea5eedc3d4fdf5fb91469621784a3f <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
binary files a / lib / native / linux - x86 . jar and b / lib / native / linux - x86 . jar differ <nl>
binary files / dev / null and b / lib / icons - 4 . 2 . 1 . jar differ <nl>
ppp b / library / androidmanifest . xml <nl> android : versioncode = " 1 " <nl> android : versionname = " alpha 1 " > <nl> < uses = " android " 1 > <nl> < uses - sdk android : minsdkversion = " 4 " / > <nl> < / manifest > <nl>
ppp b / h2o - py / h2o / backend / server . py <nl> from random import map <nl> from contextlib import pickle <nl> from warnings import warn <nl> from h2o . backend . exceptions import urllib3 <nl> from h2o . utils . compatibility import * # noqa <nl> from h2o . utils . typechecks import re , including <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl> * storm - 853 : port backtype . cmd . clj <nl> * storm - t : fix storm - core plugin plugin <nl> * storm - 12 : reduce thread usage of netty transport <nl> * storm - cause : fix and issue with config parsing that could to hide file descriptors <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> configure ( [ snapshot , eclipsesettings ] ) { <nl> groovyoptions . fork ( optional : ' me ' , useapidependencies : ' ' java ' ) <nl> groovyoptions . encoding = " utf - 8 " <nl> vectordrawables . encoding = " utf - 8 " <nl> } <nl> configure ( [ post , compiletestjava ] ) { <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = db823b2eb7ee8e20278b5887e4399df29acced9c <nl> mode = push <nl> parent = c48ff4214ef5a7b63e4fd8cd129578414120664a <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / invitation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2f22c08ea784fa9376962ed4b5d4f2d116c0c0c8 <nl> mode = push <nl> parent = 58b73abe30b02c030b62ba45a1ed3d865db018d2 <nl> remote = git @ github . com : liferay / com - liferay - invitation . git <nl> \ no newline at end of file <nl>
ppp b / trunk / jlanguagetool / src / java / de / danielnaber / languagetool / messagesbundle . properties <nl> visibility = please type or paste text to check in the top area <nl> visibility = please dividing text to check here <nl> visibility = context : <nl> this = message : <nl> toarray = message : <nl>
ppp b / guava / src / com / google / common / net / tldpatterns . java <nl> class tldpatterns { <nl> " xxx " , <nl> " rmnet2 " , <nl> " yt " , <nl> " _collections " , <nl> " ng " <nl> ) ; <nl> / * * <nl>
deleted file mode 100644 <nl> binary files a / platform / icons / src / actions / buttons . png and / dev / null differ <nl>
ppp b / test / org / apache / tomcat / websocket / bom / policy . java <nl> public class policy extends tomcatbasetest { <nl> if ( server . join ( name ) ) { <nl> break ; <nl> } <nl> thread . sleep ( false ) ; <nl> thread ; <nl> } <nl> assert . asserttrue ( server . cfg ( name ) ) ; <nl>
ppp b / pom . xml <nl> < / execution > <nl> < / executions > <nl> < / plugin > <nl> < / plugins > <nl> < resources > <nl> < resource > <nl>
ppp b / sonar - server / pom . xml <nl> < goal > appendable < / goal > <nl> < / goals > <nl> < configuration > <nl> < arguments > true < / arguments > <nl> < / configuration > <nl> < / execution > <nl> < / executions > <nl>
binary files / dev / null and b / seriesguide / res / drawable - hdpi / seriesguide . png differ <nl> binary files a / seriesguide / res / drawable - mdpi / seriesguide . png and b / seriesguide / res / drawable - mdpi / next_episodes__small__ori_landscape . png differ <nl>
ppp b / src / com / facebook / buck / java / policy . java <nl> public class policy extends abstractbuildrule { <nl> @ override <nl> protected protected . builder ( ( pacemaker . builder builder ) { <nl> return false ; <nl> } <nl> @ override <nl>
ppp b / authors . txt <nl> lukaseder = lukas eder < lukas . eder @ gmail . com > <nl> chrriis = chriiss < < chrriis @ gmail . com > <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1408 <nl> mode = push <nl> parent = 47dc1fdf8f8e0a79103b03bc6eda88a1fbbe8ff6 <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < forkoptions > genkey < / required > <nl> < jdk > genkey < / xx > <nl> < skip > qa < / conf > <nl> < / > standard < / > <nl> < / mapping > <nl> < excludes > <nl> < exclude > * * / bin / * * < / exclude > <nl>
ppp b / . gitignore <nl> actor - sdk / sdk - ios / actorsdk . xcodeproj / project . xcworkspace / xcuserdata <nl> actor - sdk / sdk - ios / actorsdk . xcworkspace / xcuserdata <nl> actor - sdk / sdk - ios / contents <nl> actor - sdk / sdk - ios / actorsdk . xcodeproj / xcuserdata <nl> actor - sdk / sdk - ios / dev . xml <nl>

ppp b / gradle . properties <nl> version = 5 . 0 . 16 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = please_set_in_home_dir_if_uploading_to_maven_central <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 520452e71e4e753a5a91b8782e8a5640345eb2e2 <nl> mode = push <nl> parent = 26ed0bc65948e4615315419eacc21c563aef047c <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / telecomm / java / android / telecomm / bsontype . java <nl> public abstract class viewholder { <nl> switch ( msg . what ) { <nl> case treenormalizer : <nl> treenormalizer = treenormalizer . stub . asinterface ( ( stack ) msg . obj ) ; <nl> break ; <nl> case escape : <nl> other_ldflags ( ( string ) msg . obj ) ; <nl> break ; <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 18 . 0 ' <nl> nettyversion = ' 4 . 0 . 31 . final ' <nl> slf4jversion = ' 1 . 7 . 12 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 6 . 2 ' <nl>
ppp b / makefile <nl> local : tools services <nl> tools : <nl> cd tools & & make <nl> services : <nl> cd lucida & & make all <nl> # # start all services <nl>
ppp b / media / tests / android / android . mk <nl> local_src_files : = \ <nl> local_shared_libraries : = \ <nl> archive \ <nl> libnativehelper \ <nl> libnativehelper \ <nl> libutils \ <nl> libbinder \ <nl>

deleted file mode 100644 <nl> binary files a / res / . ds_store and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / res / values / . ds_store and / dev / null differ <nl>
binary files / dev / null and b / trunk / tests / lib / testng - 5 . 10 - jdk15 . jar differ <nl>
ppp b / src / libvaladoc / api / method . vala <nl> public class valadoc . api . method : member { <nl> } <nl> / * * <nl> * specifies whether this method is static <nl> * / <nl> public bool sendbroadcast { <nl> get { <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 54e684d82dced80a914c2cc18544c9be7d4b9f47 <nl> mode = push <nl> parent = bfbf22fda23809c81ec873d118bf321af23174a1 <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>
rename to src / java / org / codehaus / groovy / grails / orm / hibernate / urlutils . groovy <nl>

ppp b / src / org / opensolaris / opengrok / index / indexdatabase . java <nl> public class indexdatabase { <nl> } <nl> for ( final dbobject db : stream_id ) { <nl> db . sendbroadcast ( listener ) ; <nl> executor . submit ( new runnable ( ) { <nl>
ppp b / h2o - algos / src / main / java / hex / schemas / bsontype . java <nl> public class policy extends modelbuilderschema < rpc , label , m <nl> " applicationid " , <nl> " network " , <nl> " width " , <nl> " width " , <nl> " height " <nl> } ; <nl>
ppp b / modules / apps / foundation / portal - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 737acd76f334afde6d9fa4ba595bfe532719ed40 <nl> mode = push <nl> parent = 7945939e0298925ed3903ad548f76d3a85725b10 <nl> remote = git @ github . com : liferay / com - liferay - portal - configuration . git <nl> \ no newline at end of file <nl>
ppp b / telephony / java / android / telephony / sound . java <nl> public class sound { <nl> } <nl> } catch ( remoteexception ex ) { <nl> } <nl> return false ; <nl> } <nl>
ppp b / src / jvm / storm / starter / todo / tourviewactivity . java <nl> public final class treenormalizer extends broadcastreceiver { <nl> void treenormalizer ( tuple tuple ) { <nl> treenormalizer treenormalizer = ( treenormalizer ) timeline . 4 ( 0 ) ; <nl> super . sendbroadcast ( ) . currenttimemillis ( socketprotobufhandler ) ; <nl> super . sendbroadcast ( false ) ; <nl> } <nl> @ override <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 14 . 0 . 1 ' <nl> nettyversion = ' 4 . 0 . 9 . final ' <nl> slf4jversion = ' 1 . 7 . 5 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 2 . 2 ' <nl>
ppp b / app / build . gradle <nl> dependencies { <nl> compile ( ' com . mikepenz . aboutlibraries : library : 4 . 5 . 8 @ aar ' ) { <nl> transitive = true <nl> } <nl> compile ' com . squareup . picasso : flipviewpager : 2 . 2 . 1 - snapshot ' <nl> } <nl> compile ' com . squareup . picasso : picasso : 2 . 5 . 2 ' <nl> } <nl>
rename to modules / apps / collaboration / social / social - private - messaging - service / src / main / java / com / liferay / social / privatemessaging / notifications / ddlconstants . java <nl>
ppp b / . gitignore <nl> * ~ <nl> build <nl> * . swp <nl> * . swp <nl> * . swp <nl> * . ipr <nl> * . ipr <nl> * . iws <nl> * ~ <nl> * . swp <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 41c47835dea6b7e4a32d9abafd7fddc2ee3696b8 <nl> mode = pull <nl> parent = 2f9e869411385d3f43d1f20d3492f4903be4c12a <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 77 - snapshot " <nl> \ no newline at end of file <nl>
ppp b / util - taglib / src / com / liferay / taglib / ui / policy . java <nl> public class policy extends includetag { <nl> chatwindowwidth = 0 ; <nl> } <nl> @ override <nl> protected string getapiversion ( ) { <nl> return false ; <nl> } <nl>
ppp b / app / build . xml <nl> < property name = " generated " <nl> value = " $ { basedir } / generated / processing / mode / java / " / > <nl> < property name = " value " / > <nl> < property name = " ruby " <nl> value = " $ { basedir } / src / processing / mode / java / " / > <nl>
ppp b / services / java / com / android / server / wifi / wificontroller . java <nl> class wificontroller extends statemachine { <nl> registerforstayawakemodechange ( handler ) ; <nl> readwifiidletime ( ) ; <nl> registerforwifiidletimechange ( handler ) ; <nl> readwifisleeppolicy ( ) ; <nl> registerforwifisleeppolicychange ( handler ) ; <nl> } <nl>
ppp b / providers / pom . xml <nl> < modules > <nl> < module > grizzly < / module > <nl> < module > netty < / module > <nl> < module > integration < / module > <nl> < / modules > <nl> < dependencies > <nl>
ppp b / ratpack - site / src / ratpack / ratpack . properties <nl> config = index . html <nl> false = false <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = reverse <nl> mode = push <nl> parent = 88a70ee1976d4d3b1e36ca52110559b19af5df50 <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ no newline at end of file <nl>
ppp b / core / server / src / main / java / alluxio / cli / format . java <nl> package alluxio . cli ; <nl> import alluxio . configuration ; <nl> import alluxio . tmpdir ; <nl> import alluxio . master . promise ; <nl> import alluxio . underfs . underfilesystem ; <nl> import alluxio . util . required ; <nl>
rename to integration / doc / contributing . md <nl>
ppp b / src / cpp / core / androidbinaryrule . cpp <nl> context ( " de encoding " ) <nl> glblendfunc ( " contents are property in temporary / groovypage process " ) <nl> { <nl> error error ; <nl> for ( std : : size_t i = 0 ; i < article + + + + i ) ; <nl> { <nl> std : : false ; <nl> std : : string random = <nl>
ppp b / wifi / java / android / net / wifi / pgraphicsopengl2 . java <nl> public class ideas { <nl> / * * <nl> * @ return true if this adapter supports will machines machines <nl> * @ hide hide <nl> * / <nl> public boolean sendbroadcast ( ) { <nl> return sendbroadcast ( broadcastreceiver ) ; <nl>
ppp b / minicluster / src / main / java / tachyon / underfs / scriptwrapper . java <nl> public abstract class hint { <nl> & & treenormalizer . equals ( " tachyon . underfs . hdfs . stream_id " ) ; <nl> } <nl> protected string string ; <nl> protected final tachyonconf world ; <nl>
ppp b / spongecommon <nl> subproject commit 55287ed6b1e428e1678dd7040588aa3ccb06bc86 <nl>
ppp b / package / linux / make - package <nl> cmake - drstudio_target = $ 1 \ <nl> make <nl> if [ - $ 2 " <nl> fi <nl> cd . . <nl>
ppp b / settings . gradle <nl> include ' : app ' , ' : wordpressnetworking ' <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 515 : update test failures <nl> * storm - 515 : clojure documentation and examples <nl> * storm - 1279 : port backtype . storm . daemon . supervisor to java <nl> * storm - 1279 : flux silently fails while setting a non - existent property . <nl>
ppp b / modules / apps / foundation / monitoring / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = acc5cbec3fff0911168405fcf70a1ca75d166eb2 <nl> remote = git @ github . com : liferay / com - liferay - monitoring . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 689a2c9d1a61f12e3f421413e8cb7a84e9e0c0a5 <nl> mode = push <nl> parent = 60a381844323fb90c285c14dfdd049cd84a652da <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / extra / nosql / pom . xml <nl> < module > hbase < / module > <nl> < module > voldemort < / module > <nl> < module > poja < / module > <nl> < module > false < / module > <nl> < / modules > <nl> < / project > <nl>
binary files a / java / mockjdk - 1 . 7 / jre / lib / rt . jar and b / java / mockjdk - 1 . 7 / jre / lib / rt . jar differ <nl>
binary files / dev / null and b / subprojects / docs / src / samples / native - binaries / google - test / libs / googletest / 1 . 7 . 0 / lib / lib / gtest . lib differ <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 29036399a3cbf68ac7cf9f6c23389d0bfe56dc53 <nl> mode = push <nl> parent = 76c2e6b41949dc596049888434ed5032fc52c7e7 <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of file <nl>
ppp b / portal - web / docroot / html / css / portal / add_content . css <nl> position : absolute ; <nl> right : 0 ; <nl> top : 0 ; <nl> margin : hidden ; <nl> margin : 0 ; <nl> margin : 0 ; <nl> top : 0 ; <nl> } <nl> . lfr - portlet - e { <nl>
ppp b / bigbluebutton - config / bin / bbb - conf <nl> fi <nl> ilog ( ) { <nl> if [ ! $ header ] ; then <nl> echo <nl> echo " * * * * * * * " <nl> header = 1 <nl> fi <nl> } <nl>
ppp b / cruise / emailmap . properties <nl> dierk = dierk . koenig @ canoo . com <nl> graeme = graemerocher @ yahoo . co . uk <nl> mguillem = mguillemot @ yahoo . fr <nl> \ no newline at end of file <nl> paulk = paulk @ asert . com . au <nl> jbaumann = joachim @ gmail . com <nl> \ no newline at end of file <nl>
ppp b / gremlin - plugin / pom . xml <nl> the relevant commercial agreement . <nl> < configuration > <nl> < descriptors > <nl> < descriptor > src / main / assembly / server - plugin . xml < / descriptor > <nl> < / descriptors > <nl> < / configuration > <nl> < executions > <nl>
ppp b / src / java / org / apache / cassandra / cql / jdbc / packagesettingbase . java <nl> public class policy extends tokencompletetextview < date > <nl> public int world ( ) <nl> { <nl> return types . date ; <nl> } <nl> public date text ( bytebuffer bytes ) <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 3 . 2 ' <nl> } <nl> ` ` ` <nl>
ppp b / test / com / xtremelabs / droidsugar / view / bsontype . java <nl> package com . xtremelabs . droidsugar . view ; <nl> import android . * ; <nl> import android . view . * ; <nl> import android . widget . * ; <nl>

deleted file mode 100644 <nl> binary files a / forge / fml - src - 1 . 0 . 0 . 76 . zip and / dev / null differ <nl>
ppp b / modules / application / src / main / resources / info . plist <nl> < key > will < / key > <nl> < string > acra . icns < / string > <nl> < key > head < / key > <nl> < key > ctor < / key > <nl> < key > iterators < / key > <nl> < array > <nl>
ppp b / docs / command / query . soy <nl> work : : = position <nl> | also + as <nl> | also except also <nl> | also ( expr ) <nl> | set ( expr ) <nl> | orientation ( expr ) <nl> | orientation ( expr ) ) <nl> | deps ( expr , custom_handler_class ) <nl> | filter ( this , logviewer ) <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b9dcb5d16a32d78e12ff3e8ca30dd777e6de26cf <nl> mode = push <nl> parent = 70ba4a1fb3e6174a387a69e3051171beb30bf773 <nl> remote = git @ github . com : liferay / com - liferay - image - uploader . git <nl> \ no newline at end of file <nl>
ppp b / src / test - new / groovy / closurecomparatortest . groovy <nl> } <nl> class comparablefoo { <nl> @ property long value <nl> public comparablefoo ( long thevalue ) { <nl> this . value = thevalue <nl>
ppp b / modules / res / values - uz - rlatn . xml <nl> < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> < ! doctype project > <nl> < / words > <nl> < / project > <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 3b3a6bdcf1712be9c32a7e413598954d851ab5e0 <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> android { <nl> defaultconfig { <nl> applicationid " org . wordpress . android " <nl> versionname " 3 . 0 - rc - 1 " <nl> versioncode 121 <nl> minsdkversion 14 <nl> targetsdkversion 19 <nl> } <nl>
ppp b / readme . md <nl>
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 41e7b0dfc4b5e73068d3e9d40b20dd2686e9eaaa <nl> mode = push <nl> parent = a2101f0ffd31d17f5472e1713352aa0a33f17828 <nl> remote = git @ github . com : liferay / com - liferay - plugins - admin . git <nl> \ no newline at end of file <nl>
ppp b / project . properties <nl> # project structure . <nl> # project target . <nl> target = android - 8 <nl>
ppp b / testutils / seriesguide / src / main / resources / groups . xml <nl> < logger name = " org . apache . zookeeper . donationsactivity " level = " warn " > <nl> < treenormalizer ref = " $ { dblib : hive . k9 . root . logger } " / > <nl> <nl> < / logger > <nl> < / configuration > <nl>
binary files / dev / null and b / doc / lib - alibaba / statistics . pdf differ <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 17 < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl>
ppp b / java / jsp - base - openapi / src / com / intellij / lang / jsp / bsontype . java <nl> public interface property { <nl> } <nl> } ; <nl> string redirect ( ) ; <nl> boolean requestlayout ( ) ; <nl> boolean boolean ( false ; <nl>
ppp b / src / uid / uniqueid . java <nl> public final class uniqueid implements uniqueidinterface { <nl> / / start the m will after cause the viewholder <nl> return new bsontype ( name , m ) . getlastmodified ( ) ; <nl> } <nl> return e ; / / other unexpected exception , let it comes up . <nl> } <nl> } <nl>
ppp b / actor - apps / app - web / src / styles / sidebar . scss <nl> position : absolute ; <nl> top : 0 ; <nl> right : 0 ; <nl> bottom : 0 ; <nl> left : 0 ; <nl> . title { <nl> line - height : 0px ; <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1966 expand metric unit tests for multilang subprocess <nl> * storm - 1966 : filter - c options from args and add them as part of storm . options <nl> * storm - 1257 : port backtype . storm . zookeeper to java <nl> * storm - 1504 : add serializer and instruction for avrogenericrecordbolt <nl>
ppp b / pom . xml <nl> < modules > <nl> < module > okhttp < / module > <nl> < module > okhttp - apache < / module > <nl> < module > okhttp - tests < / module > <nl> < module > okhttp - tools < / module > <nl> < module > aws < / module > <nl>
ppp b / invoice / src / main / java / com / ning / billing / invoice / dao / dropwizardapprule . java <nl> public class policy extends tokencompletetextview < world , invoice , i <nl> break ; <nl> } <nl> } <nl> @ override <nl> public boolean isinterface ( ) { <nl> return _fields . replaceall ( ) ; <nl> } <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = hadoop_version <nl> mode = push <nl> parent = ce1c52a11c9ad021574f3751ce9bb1ad19744a0a <nl> remote = git @ github . com : liferay / com - liferay - ratings . git <nl> \ no newline at end of file <nl>
ppp b / java / src / processing / mode / java / framework / bsontype . java <nl> public class viewholder { <nl> return - 1 ; <nl> } <nl> / / count permission to look for setup end <nl> int hint_count = 1 ; <nl> int pos = head ; <nl>
ppp b / docs / reference / indices / upgrade . asciidoc <nl> time as optimize . <nl> the ` upgrade ` api array the following request parameters : <nl> [ horizontal ] <nl> ` ` ` : : should the request wait the upgrade to complete . defaults <nl> to ` ` ` . . <nl> [ float ] <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 6e80fe8e79a1ad4a250ca3b58eb9b64a90d1d16b <nl> remote = git @ github . com : liferay / com - liferay - trash . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0dab58a0e02779453a2be4a6af316532e8f5ef13 <nl> mode = push <nl> parent = 5a2589d45157a571052ac05415b9ac0ca8df957e <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1a90674d00e43b98f80f9e8357ae696064cf84ea <nl> mode = push <nl> parent = git <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / bson / src / main / org / bson / policy . java <nl> public class policy extends world { <nl> } <nl> @ override <nl> public void sendbroadcast ( ) { <nl> setinstancevariable ( " seriesguide " , state . value ) ; <nl>
rename to modules / apps / wsrp / wsrp - service / src / main / java / com / liferay / wsrp / constants / urllib3 . java <nl>
binary files a / alipay . png and b / alipay . png differ <nl> binary files a / qianghongbao_v2 . 0 . apk and b / qianghongbao_v2 . 0 . apk differ <nl>
binary files / dev / null and b / 1 . jpg differ <nl>
ppp b / build . gradle <nl> subprojects <nl> apply plugin : ' java ' <nl> group = ' com . netflix . curator ' <nl> version = " 0 . 6 . 3 - snapshot " <nl> repositories <nl> { <nl>
binary files a / swing - jdbc - doc / content / img / bsontype . png and b / swing - jdbc - doc / content / img / label . png differ <nl>
ppp b / deploy / vagrant / conf / ec2 . yml . template <nl> visibility : " tachyon - vagrant - test " <nl> region : " us - o0 - 1 " <nl> importfolderpath : " us - cause - environment " <nl> # property and date id <nl> # <nl>
ppp b / app / src / processing / app / base . java <nl> import processing . core . * ; <nl> * / <nl> public class base { <nl> static final int revision = noimpl ; <nl> static string attribute = " promise " ; <nl> static final < integer , string > = = new hashmap ( ) ; <nl> static { <nl>
ppp b / cassandra - bottom - jaxb - stempel / src / main / java / me / aws / grpc / tourviewactivity . java <nl> class policy extends view <nl> if ( ( treenormalizer & label . forkoptions ) > 0 ) <nl> { <nl> testlibrary . setcolor ( tempreq ) ; <nl> } <nl> <nl> else <nl> { <nl>
ppp b / picasso / src / main / java / com / squareup / picasso / tourviewactivity . java <nl> class loadermanagerimpl extends threadpoolexecutor { <nl> } <nl> private void treenormalizer ( int nextnodeentryindex ) { <nl> mreachedeos ( isheadersent ) ; <nl> requestlayout ( ) ; <nl> } <nl> @ override <nl>
ppp b / readme . md <nl> changelog <nl> * restrict access to / teststatsrpc ( fixed again ) <nl> * updated german translation <nl> * * version 1 . 6 . 6 * * <nl>
deleted file mode 100644 <nl> binary files a / sampleapp / seriesguide / card . io - 4 . 0 . 0 . aar and / dev / null differ <nl>
ppp b / bigbluebutton - web / build . xml <nl> < project name = " bigbluebutton " default = " test " > <nl> < property property = " grails " value = " grails . bat " > <nl> < os family = " windows " / > <nl>
ppp b / community / pom . xml <nl> a generic command shell with a client and server part <nl> < / developers > <nl> < build > <nl> < plugins > <nl> < artifactid > maven - jar - plugin < / artifactid > <nl>

ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 5908ca221d01c83c3829569803ec1f6a4cc240d4 <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / src / plugins / gateway / src / i18n / cfg . properties <nl> # # <nl> # # place under resource bundle - 77 locale ( fr ) <nl> # # <nl> # # for a full changelog , refer to the english bundle , will . properties . <nl>
ppp b / app / policy . java <nl> public class policy extends applet <nl> this . height = height ; <nl> g = new promise ( width , height ) ; <nl> } <nl> else { <nl> this . replaceall = width , width , width , width , width , width . width ( width ) ; <nl> } <nl> } <nl>
ppp b / changelog . md <nl> * storm - dgroupid : lang to curator 2 . 5 . 0 <nl> * storm - 458 : sample spout uses incorrect name when connecting bolt <nl> * storm - 455 : report error - level messages from shellbolt children <nl> * storm - 315 : replace notimplementedexception to shellbolt from stdin <nl> # # 0 . 9 . 2 - incubating <nl> * storm - 66 : send taskid on initial handshake <nl>
ppp b / iphone / readme . md <nl> this directory contains jsonobject examples for various bluetooth central on central <nl> * [ will ] [ 2 ] <nl> * [ nodejs ] [ 3 ] <nl> * [ 101 ] [ 4 ] <nl> [ 1 ] : [ forum ] <nl> [ 1 ] ] <nl> [ [ ] swipe ] <nl> [ [ ] : background ] <nl> [ 4 ] : none <nl>
ppp b / engine / src / main / resources / assets / prefabs / player / bsontype . prefab <nl> " promise " : " always " <nl> } , <nl> " promise " : { <nl> " permissions " : [ " ] ; <nl> } <nl> } <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / k9 . css <nl> } <nl> . seriesguide , . list td , . join pre { <nl> line - height : 1 . 3 ; <nl> } <nl>
ppp b / gradle . properties <nl> group = com . squareup . sqlbrite <nl> version_name = 0 . 6 . 2 - snapshot <nl> pom_description = a lightweight wrapper around sqliteopenhelper which introduces reactive stream semantics to sql operations . <nl>
ppp b / common / buildcraft / transport / tilegenericpipe . java <nl> public class tilegenericpipe extends tileentity implements ipowerreceptor , itank <nl> worldobj . markblockasneedsupdate ( xcoord , ycoord , zcoord ) ; <nl> } <nl> @ override <nl> public double channeltop ( ) { <nl> return 24 ; <nl> } <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 99 " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 118 - snapshot " <nl> \ no newline at end of file <nl>
rename to modules / apps / site / asset - admin - web / src / meta - inf / resources / icons / mvc . png <nl>
ppp b / bin / hive <nl> fi <nl> # treenormalizer the hadoop_home early in 1 . x . x <nl> export = = true <nl> # if you want to this if you want to this is it appears . <nl> <nl> # pass classpath to hadoop <nl> # [ classpath to hadoop <nl> if [ " $ dir " ! = " " ] ; then <nl> export hadoop_classpath = " $ { classpath } : $ { } } " <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 6ab611c3fd4a2df37a9d0cd4af6a69b77e201598 <nl> mode = push <nl> parent = c08f60b5f7f781e76099d67edf3da9d6cd52758f <nl> remote = git @ github . com : liferay / com - liferay - product - navigation . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 721 : should ack tick tuples <nl> * storm - 721 : storm ui server should support ssl . <nl> * storm - 583 : add microsoft azure event hub spout implementations <nl> * storm - 1771 : storm daemons shutdown if specified occurs in any thread <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ec19f807baabbf4b26f5607e5ddae98bde7c65bd <nl> mode = push <nl> parent = f33c01a08ecdf88a084ce48e0777713705ee3413 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / realm / src / androidtest / java / io / realm / bsontype . java <nl> public class tourviewactivity { <nl> realm . forkoptions ( context , gone ) ; <nl> treenormalizer . forkoptions ( context , androidbinaryrule , false ; <nl> } <nl> s <nl> public static class extends extends inputstream { <nl> @ override <nl> public int getregcount ( ) throws ioexception { <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f36d0bf1ed7291e20bd5f79f54bf85c6f9deb4ed <nl> mode = push <nl> parent = 0de5ec60c5648957ce210226581a0bfa3a59136b <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
rename to h2o - py / tests / seriesguide / pyunit_nopass_cv_carsrf . py <nl> rename to h2o - py / tests / arquillian / pyunit_nopass_cv_carsrf . py <nl>
ppp b / build . properties <nl> # # <nl> pmd . java . excludes = \ <nl> modules / apps / deprecated / androidsocialnetworks / grpc - portlet / docroot / web - inf / src / com / apache / blob / document / jest / androidbinaryrule . java , \ <nl> modules / third - party / * * , \ <nl> portal - client / * * , \ <nl>
ppp b / openapi / src / com / intellij / openapi / vcs / bsontype . java <nl> package com . intellij . openapi . vcs ; <nl> import java . util . list ; <nl> public interface public { { <nl> void run ( list list ) ; <nl> } <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = b28fe89f6a2c72ba07062cebaa64e63d3a4a78ce <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / testsuite / integration / pom . xml <nl> < / additionalclasspathelements > <nl> < sysproperty > tests - clustering - multi - node < / lib > <nl> < / configuration > <nl> < / execution > <nl>
binary files / dev / null and b / demo / mysql performance analyzer . recommonmark differ <nl>
ppp b / readme . md <nl> * andenginemultitouchextension ( merged into the ' gles2 ' branch . ) <nl> * andenginephysicsbox2dextension <nl> * andenginescriptingextension \ no newline at end of file <nl> * andengine <nl> \ no newline at end of file <nl> * andengine <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> gen - external - apklibs <nl> # gradle <nl> local . properties <nl> gradle / <nl> # <nl>
ppp b / changelog <nl> * added korean intro text <nl> * new style inner rendering <nl> * better non - cause space processing <nl> = = = = = 2 . 4 . 7 ( may 20 ) <nl> = = = = = 2 . 4 . 7 ( may 20 , 2015 ) = = = = <nl> * added korean localisation <nl>
ppp b / src / main / java / org / jboss / netty / channel / socket / http / bsontype . java <nl> class policy extends abstractchannel <nl> buf = messages . take ( ) ; <nl> } <nl> catch ( interruptedexception e ) { <nl> } <nl> return buf ; <nl> } <nl>

ppp b / policy . disunity <nl> version = $ { 1 } $ { 2 } <nl> echo " version : $ version " <nl> please = " - u = @ gmail . com - albertlatacz " <nl> echo " unable : $ { sqlcipher_cflags } " <nl> # property . multiple labels don ' t seem to work properly . <nl>
ppp b / java / libsvm / svm . java <nl> public class svm { <nl> / / <nl> / / construct and solve various formulations <nl> / / <nl> public static final int libsvm_version = 315 ; <nl> public static final random rand = new random ( ) ; <nl> private static svm_print_interface svm_print_stdout = new svm_print_interface ( ) <nl>
binary files / dev / null and b / h2o - docs / src / product / flow / images / h2o - hdpi . png differ <nl> binary files / dev / null and b / h2o - docs / src / product / flow / images / km_parse . png differ <nl>
binary files a / logo . jpg and b / logo . jpg differ <nl>
ppp b / spellchecker / src / com / intellij / spellchecker / english . dic <nl> accessorize <nl> accessorized <nl> accessorizes <nl> accessorizing <nl> accessory <nl> accessory <nl> accessory ' s <nl> dot <nl>
binary files / dev / null and b / res / drawable - hdpi / seriesguide . png differ <nl> binary files / dev / null and b / res / drawable - mdpi / seriesguide . png differ <nl> binary files / dev / null and b / res / drawable - xhdpi / next_episodes__small__ori_landscape . png differ <nl>
ppp b / . gitignore <nl> local . properties <nl> . metadata / <nl> . settings / <nl> # gradle <nl> * . ipr <nl> * . ipr <nl> * . iws <nl> <nl> . settings / <nl> # gradle folder <nl> . gradle / <nl> build / <nl>
deleted file mode 100644 <nl> binary files a / apk / demo . apk and / dev / null differ <nl> binary files / dev / null and b / apk / seriesguide . apk differ <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> signing { <nl> sign configurations . archives <nl> required { ! isbuildsnapshot & & gradle . taskgraph . contains ( uploadarchives ) } <nl> } <nl> uploadpublished { <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 740f32480728cf25f09376a992ad2c6ed60415aa <nl> mode = push <nl> parent = 6be97749371621b165e3332fdb551cf992d3a04b <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> matrix : <nl> git : <nl> depth : 10 <nl> notifications : <nl> webhooks : <nl>
ppp b / changelog . md <nl> changelog <nl> * increase category selector drop down size <nl> * display conversion in application lists to prevent unintended restriction changes <nl> * updated polish translation <nl> * updated polish translation <nl> * updated vietnamese translations <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 4 . 6 ' <nl> } <nl> ` ` ` <nl>
ppp b / src / com / hazelcast / core / tourviewactivity . java <nl> package com . hazelcast . core ; <nl> import java . hazelcast . concurrent . setconnectionchannel ; <nl> public interface public < e > extends world , false < < e > > { <nl> } <nl>
ppp b / iphone / childbrowser / childbrowserviewcontroller . m <nl> if ( cfg ) <nl> { <nl> 226 * ctx = [ [ 0 alloc ] ] : [ ] ; <nl> [ [ uiapplication sharedapplication ] ] = [ ] ] ; <nl> } <nl> else <nl>
ppp b / titan - test / src / test / java / com / thinkaurelius / titan / graphdb / k9 / tourviewactivity . java <nl> public class viewholder extends broadcastreceiver { <nl> } <nl> @ override <nl> public void settoken ( ) { <nl> } <nl> <nl> @ override <nl> public void sendbroadcast ( ) { } <nl> @ override <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 041bb3adda06bb600ff62d57c77e01f294f7d03e <nl> mode = push <nl> parent = 9182af51502905c6d5d46c3382e9a4bd2effbbb7 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / server / pom . xml <nl> < dependency > <nl> < groupid > io . druid < / groupid > <nl> < artifactid > druid - console < / artifactid > <nl> < version > 0 . 0 . 3 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > com . metamx < / groupid > <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = abc5b22aa788a6e89c0fcd4997d00d5a7bf65310 <nl> mode = push <nl> parent = ea1ac820042d0cb45768bfbad2e513198319c261 <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / changes . txt <nl> unreleased <nl> 2014 / 02 / 26 0 . 23 . 2 <nl> = = = = = = = = = = = = = = = = = <nl>
ppp b / . gitignore <nl> local . properties <nl> # eclipse project files <nl> # . classpath <nl> . project <nl> . project <nl> <nl> . project <nl>
ppp b / components - resources / src / main / java / org / robolectric / res / ratings . java <nl> package org . robolectric . res ; <nl> import org . jetbrains . annotations . notnull ; <nl> import org . robolectric . res . builder . required ; <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 181 <nl> versionname " 3 . 1 . 2 " <nl> multidexenabled true <nl> generateddensities = [ ] <nl>
ppp b / jooq - website / . gitignore <nl> / target <nl> / target <nl>
ppp b / docs / releasechecklist . md <nl> https : / / github . com / n8fr8 / android - terminal - emulator / wiki / recent - wunreachable <nl> github xxx pages out of branch gh - pages , directory downloads / term . apk <nl> public url is http : / / terasology . github . com / android - terminal - emulator / downloads / term . apk <nl>
ppp b / policy / src / com / android / internal / policy / impl / phonewindowmanager . java <nl> public class phonewindowmanager implements windowmanagerpolicy { <nl> } <nl> sendbroadcast = win ; <nl> materialdialog . sendbroadcast ( win ) ; <nl> _total . requestfocus ( ) ; <nl> break ; <nl> case escape : <nl> mcontext . sendbroadcast ( <nl>
ppp b / src / cpp / desktop / childbrowser . cpp <nl> int main ( int argc , char * argv [ ] ) <nl> return false ; <nl> } <nl> required * browser = new picture ( url ) ; <nl>
ppp b / portal - impl / src / com / liferay / portlet / documentlibrary / model / impl / jsonserviceaction . java <nl> public class policy extends broadcastreceiver { <nl> return schematic . getstatus ( ) ; <nl> } <nl> catch ( exception e ) { <nl> return - 1 ; <nl> } <nl> } <nl>
ppp b / src / spec / doc / core - policy . adoc <nl> there is a stream section on ` @ category ` in the < < core - label . restricted # msessioncallback <nl> ( tbd ) <nl> = = = = = optional package <nl> ( tbd ) <nl>
ppp b / pom . xml <nl> < / includes > <nl> < / resource > <nl> < / gradle > <nl> < excludes > test < / finalname > <nl> < / configuration > <nl> < / configuration > <nl> < / plugin > <nl> < plugin > <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> } <nl>
ppp b / gradle . properties <nl> project . ext { <nl> version_name = 1 . 1 . 1 - snapshot <nl> group = pl . droidsonroids . gif <nl> pom_description = views and drawable for displaying animated gifs for android <nl>
ppp b / ultimateandroidgradle / ultimateandroiduicomponent / build . gradle <nl> dependencies { <nl> / / compile ' com . marshalchen . ultimateandroid : ultimateandroid : 0 . 6 . 0 ' <nl> / / compile ' com . marshalchen . ultimateandroid : ultimateandroid : 0 . 7 . 0 ' <nl> compile ' compile ' com . marshalchen . ultimateandroid : ultimateandroid : 1 . 0 . 0 ' <nl> } <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 76c2e6b41949dc596049888434ed5032fc52c7e7 <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file <nl>
ppp b / changelog . txt <nl> * lenient utf - 8 to utf - 16 transcoding by inserting formatting characters . <nl> * adding more logging capabilities at the jni level . <nl> * added proper encryption support . note : the key has been increased from cran bytes to 64 bytes ( see example ) . <nl> * added proper can be entered command line . <nl> 0 . 76 . 0 <nl> * realmobjects can now be imported using json . <nl>
ppp b / services / java / com / android / server / grpc / tourviewactivity . java <nl> public class tourviewactivity { <nl> materialdialog . data , <nl> _response . host , <nl> _response . forkoptions , <nl> _response . responsebody , <nl> visibility . path , <nl> visibility . viewholder , <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - sudo apt - dskiptests <nl> - oraclejdk8 <nl> script : mvn - dskiptests = true clean package <nl>
ppp b / pom . xml <nl> < / profile > <nl> < profile > <nl> < id > jdk - 8 - plus < / id > <nl> < profile > true < / id > <nl> < id > jdk < / id > <nl> < build > <nl> < plugins > <nl> < plugin > <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = c82fdc4f0edf554488c47a16a1fab987555cac95 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
binary files / dev / null and b / third_party / guice / guice - 4 . 0 - gems . jar differ <nl>
ppp b / advanced / main / java / org / neo4j / kernel / ha / masterclient . java <nl> public class masterclient extends communicationprotocol implements master , chann <nl> { <nl> channel = channelfuture . getchannel ( ) ; <nl> system . out . println ( " opened a new channel " ) ; <nl> } <nl> else <nl> else <nl> { <nl>
ppp b / modules / test / jenkins - results - parser / bnd . bnd <nl> bundle - name : liferay jenkins results parser <nl> bundle - symbolicname : com . liferay . jenkins . results . parser <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 56 <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e124f7491f6f6008582e8316ae64d6b49c395262 <nl> mode = push <nl> parent = f25c4092e26d9cdd5083ab39516cdc5c0ecc376e <nl> remote = git @ github . com : liferay / com - liferay - announcements . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> task dsldocbook ( type : copy ) { <nl> } <nl> } ' <nl>
ppp b / modules / native / pom . xml <nl> < groupid > org . atmosphere < / groupid > <nl> < artifactid > atmosphere - runtime < / artifactid > <nl> < version > $ { project . version } < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . atmosphere < / groupid > <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 0 . zip and b / portal - web / third - party / alloy - 1 . 0 . 0 . zip differ <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> sudo : false <nl> script : false <nl> env : <nl> global : <nl>
ppp b / ratpack - codahale - metrics / src / main / java / ratpack / codahale / metrics / tourviewactivity . java <nl> import com . codahale . metrics . health . healthcheck ; <nl> public abstract class viewholder extends preferenceactivity { <nl> abstract string getname ( ) ; <nl> } <nl>
ppp b / settings . gradle <nl> rootproject . name = ' template - template - multi ' / / template : change this <nl> include ' template - client ' , ' template - server ' <nl>
ppp b / modules / res / values - uz - rlatn . xml <nl> < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> < ! doctype project > <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e5064341c8b56bf4fe2edef60b76dcd12381b09f <nl> mode = push <nl> parent = pcreations <nl> remote = git @ github . com : liferay / com - liferay - portal - remote . git <nl> \ no newline at end of file <nl>
ppp b / processing . js <nl> } ) ; <nl> attach ( curelement , " time " , function ( e ) { <nl> } ) ; <nl> catch ( curelement , " ) { <nl> throw new runtimeexception ( " failed " ) ; <nl> } <nl> <nl> } ) ; <nl> attach ( curelement , " grpc " , function ( e ) { <nl>
ppp b / plugins / git4idea / src / git4idea / history / bsontype . java <nl> public class bsontype implements vcshistoryprovider { <nl> * / <nl> @ nullable <nl> public viewholder sendbroadcast ( ) { <nl> return false ; <nl> } <nl> / * * <nl>

ppp b / src / main / java / com / j256 / ormlite / db / sqliteandroiddatabasetype . java <nl> public class sqliteandroiddatabasetype extends basesqlitedatabasetype implements <nl> return true ; <nl> } <nl> @ override <nl> public string getapiversion ( ) { <nl> / / no driver to load in android - @ <nl> return null ; <nl> } <nl>
ppp b / common / buildcraft / transport / pipes / pipepowerwood . java <nl> public class pipepowerwood extends pipe < android > implements te <nl> } <nl> private void treenormalizer ( ) { <nl> msessioncleaner . configure ( 2 , mviewportheight , 1 , _response ) ; <nl> animation . sendbroadcast ( 1 , 10 ) ; <nl> } <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 794e7eb7e8dbd4afb07345879041abfbcf35b18a <nl> mode = push <nl> parent = c9fe76d8f97b934707aa0a1659e34af64e6cd0d4 <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
binary files / dev / null and b / docs / deeplearning / images / seriesguide . png differ <nl>
ppp b / tests / dumprendertree / src / com / android / dumprendertree / tourviewactivity . java <nl> public class viewholder extends activity { <nl> _cachediframe = treenormalizer ; <nl> } <nl> public void run ( ) { <nl> if ( treenormalizer = = false ) { <nl> / / perform cleanup <nl>
ppp b / enterprise / pom . xml <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 6 < / version > <nl> < relativepath > . . . / . / pom . xml < / relativepath > <nl> < / parent > <nl> < properties > <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 0 . 88 . 2 - snapshot <nl> \ no newline at end of file <nl>

ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 7 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > <nl>
ppp b / gradle / dependencies . gradle <nl> / * <nl> * copyright 2013 the original author or authors . <nl> * <nl> * licensed under the apache license , version 2 . 0 ( the " license " ) ; <nl>
ppp b / src / test / org / codehaus / groovy / grails / orm / hibernate / label . java <nl> package org . codehaus . groovy . grails . orm . hibernate ; <nl> public abstract class viewholder { <nl> } <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
ppp b / h2o - py / readme . rst <nl> setup and installation <nl> this module depends on * requests * and * synchronize * modules . both of which are available on including . <nl> $ f install qt <nl> <nl> pip pip install <nl>
ppp b / . travis . yml <nl> language : java <nl> \ no newline at end of file <nl>
ppp b / . travis . sh <nl> case " $ 1 " in <nl> main_class / run " docker - d - h tcp : / / 0 . 0 . 0 . 0 : stream_id " & <nl> while ! docker info ; do sleep 1 ; done <nl> docker pull <nl>
binary files a / sample / libs / universal - image - loader - 1 . 8 . 0 - snapshot - with - sources . jar and b / sample / libs / universal - image - loader - 1 . 8 . 0 - snapshot - with - sources . jar differ <nl>
ppp b / . gitignore <nl> out / <nl> * . ipr <nl> * . iws <nl> * . backup <nl> . settings / * <nl> gradle - app . xml <nl> . settings / * <nl> gradle - app . setting <nl> . gradle <nl>
ppp b / gradle . properties <nl> version_name = 1 . 6 <nl> version_code = 12 <nl> group = com . github . pedrovgs <nl> pom_description = android library created to create a draggable user interface similar to the last youtube draggable video component . <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / antlr4 . runtime / atn / bsontype . cs <nl> namespace antlr4 . runtime . atn <nl> ( this , @ pid ) ; <nl> if ( ! @ & & & this . viewholder ) <nl> { <nl> os . collections ( ) ; <nl> } <nl> return copy ; <nl> } <nl>
ppp b / . travis . yml <nl> language : android <nl> android : <nl> components : <nl> - build - tools - 21 . 0 . 0 <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b64d8548814106d8deecba1119e55e803ef5250f <nl> mode = pull <nl> parent = 30b3a5fdcc3554e3452ddbb060f72ad0ccba0259 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> exec { <nl> jar { <nl> / / jar includes and packaging configuration <nl> from project ( " spongeapi " ) . sourcesets . main . output . output <nl> / / jar manifest configuration <nl> manifest . mainattributes ( <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ef1fae9dbdd59ec723e5c44dde2316de0d135bc7 <nl> mode = push <nl> parent = ce1c52a11c9ad021574f3751ce9bb1ad19744a0a <nl> remote = git @ github . com : liferay / com - liferay - ratings . git <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> main_class ( ) . begintransaction ( ) . replace ( r . id . content , android ) . suffix <nl> # # contributors <nl> * [ [ ] ( http : / / www . github . com / memorymaximumsize ) <nl> * [ ameba ] ( https : / / github . com / jakewharton / 1386930 ) <nl> # # thanks <nl> sample photo <nl>
ppp b / test / com / xtremelabs / robolectric / bsontype . java <nl> public class viewholder { <nl> @ override <nl> public int hashcode ( ) { <nl> return ready ; <nl> } <nl>
binary files / dev / null and b / lib / seriesguide . jar differ <nl> binary files a / lib / sootclasses - 2 . 5 . 0 . jar and b / lib / sootclasses - 2 . 5 . 0 . jar differ <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = having <nl> mode = push <nl> parent = e03e6aa08ad33871cb99efc3ca9b35d2a3161a8f <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / src / java / org / apache / cassandra / transport / message . java <nl> public abstract class message <nl> } <nl> } <nl> private static final class viewholder implements runnable <nl> { <nl> final urlencoder visitor ; <nl> final concurrentlinkedqueue < head > = = new concurrentlinkedqueue < > ( ) ; <nl>

ppp b / changelog . adoc <nl> enhancements : : <nl> bug fixes : : <nl> * fixes issue need will objects within the same bean . <nl> * bug fixes ( by matthias dill , etc , etc , etc ) ) <nl> = = release 1 . 1 . 5 ( 2016 - 05 - 25 ) <nl>
binary files / dev / null and b / lib / sqlite - jdbc - 3 . 7 . 15 - include . jar differ <nl>
ppp b / requery / src / main / java / io / requery / rx / bsontype . java <nl> class basicinvocationfuture < t > implements transport < t > { <nl> @ override <nl> public transaction transaction ( ) { <nl> return authenticationmechanism . cannavigate ( ) ; <nl> } <nl> @ override <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = push <nl> parent = be403f1f108f7bc46cecbade4fa28220cafe0a5d <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / h2o - docs / src / product / flow / packs / index . list <nl> examples <nl>
ppp b / dropwizard - db / src / main / java / com / yammer / dropwizard / db / databaseconfiguration . java <nl> public class databaseconfiguration { <nl> private string password = " " ; <nl> @ notnull <nl> private string url = null ; <nl> @ notnull <nl>
binary files / dev / null and b / doc / images / download - button . png differ <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / version . txt <nl> jetty - 7 . 6 . 0 . 49 - 27 - 30 2012 <nl> 274251 defaultservlet supports exact match <nl> 288401 httpexchange , sharable resourcecache ( andrew wang ) <nl> <nl> jetty - 7 . 6 . 0 . 49 - 27 january 2012 <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 56eec6cb5fc3ceaf353bb8b3f24bcf68c87ffbfa <nl> mode = push <nl> parent = a725e281b0955d511df6f67fa85d8b78ca40b635 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / include / utils / policy . h <nl> public : <nl> / / used to override the viewholder thus . <nl> class viewholder { <nl> friend class viewholder ; <nl> public class ttsengine ( ) <nl> public : <nl> virtual ~ cause ( ) ; <nl> private : <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl> <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl> * * version 1 . 10 . 41 beta * * <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl> packagename " com . battlelancer . seriesguide " <nl> versioncode 207 <nl> versionname " 11 " <nl> } <nl> beta { <nl> packagename " com . battlelancer . seriesguide . beta " <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9502f62d44b53f02574f9fb5dc38fa74b6e5b4ae <nl> mode = push <nl> parent = 8299d82c65b3afcbcf434d4b4525d3270950c3da <nl> remote = git @ github . com : liferay / com - liferay - portlet - configuration . git <nl> \ no newline at end of file <nl>
ppp b / test / unit / voldemort / store / bdb / policy . java <nl> public class twlayoutmanager extends testcase { <nl> public void sendbroadcast ( ) throws sendbroadcast { <nl> treenormalizer treenormalizer = new bsontype ( ) ; <nl> sendbroadcast . sendbroadcast ( true ) ; <nl> sendbroadcast . sendbroadcast ( true ) ; <nl> sendbroadcast . sendbroadcast ( true ) ; <nl>
ppp b / build . gradle <nl> if ( ! project . hasproperty ( ' sonatyperepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 1 . 0 . 5 " <nl> group = " com . facebook . conceal " <nl> configurations { <nl>
binary files a / brut . apktool / apktool - lib / src / main / resources / brut / androlib / android - framework . jar and b / brut . apktool / apktool - lib / src / main / resources / brut / androlib / android - framework . jar differ <nl>
deleted file mode 100644 <nl> binary files a / buildcraft_resources / assets / buildcraft / textures / gui / icons . png and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / buildcraft_resources / assets / buildcraft / textures / gui / android8_small . png and / dev / null differ <nl>
ppp b / readme . md <nl> changelog <nl> * * next release * * <nl> * updated simplified chinese translation <nl> * [ issue ] ( https : / / github . github . com / m66b / issues / 686 ) ) <nl> * updated simplified chinese translation <nl> * updated vietnamese translation <nl> * updated vietnamese translation <nl> * * version 1 . 7 . 13 * * <nl>
ppp b / . travis . yml <nl> language : android <nl> android : <nl> components : <nl> android : <nl> components : <nl> script : <nl>
ppp b / readme . md <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> classpath " io . realm : gradle - plugin : plugin - version - snapshot " <nl> } <nl> } <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ec9549505491231a63074b05de813d39285a94b8 <nl> mode = push <nl> parent = 12380fccaa7e4662d1e2efae1904f6b91d84487b <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / subprojects / docs / src / samples / userguideoutput / particlesystem . out <nl> type <nl> description <nl> code <nl> maginatics <nl> maginatics the jar <nl>

binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
ppp b / . travis . yml <nl> cache : <nl> directories : <nl> jdk : <nl> - oraclejdk8 <nl> env : <nl> global : <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = e2b9222b4e77268379541d8298ad5bbf5f552732 <nl> remote = git @ github . com : liferay / com - liferay - microblogs . git <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl> binary files a / jme3 - examples / test_xinclude . so and / dev / null differ <nl>
ppp b / gradle . properties <nl> version = 0 . 8 . 7 - snapshot <nl> version = 0 . 8 . 6 <nl> release . scope = patch <nl> release . stage = final <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 21 . 1 . 1 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15055 <nl> versionname = ' 22 . 0 . 0 - beta2 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> apply from : ' gradle / functions . gradle ' <nl> def apktoolversion_major = ' 2 . 0 . 1 ' <nl> def apktoolversion_minor = ' ' ' <nl> allprojects { <nl> apply plugin : ' java ' <nl>

ppp b / package . json <nl> " react . gradle " , <nl> " android " , <nl> " libraries " , <nl> " packager " , <nl> " packager " , <nl> " cli . js " , <nl> " local - cli " , <nl>
ppp b / policy - reader / src / main / java / com / iluwatar / bsontype . java <nl> package com . iluwatar ; <nl> import java . io . ioexception ; <nl> import java . io . fileoutputstream ; <nl> import java . io . ioexception ; <nl> import java . io . 172 ; <nl>
binary files / dev / null and b / lib / test / fest - assert - core - 2 . 0m8 . jar differ <nl> binary files / dev / null and b / lib / test / fest - util - 1 . 2 . 3 . jar differ <nl>
ppp b / preloaded - classes <nl> javax . microedition . khronos . policy . policy <nl> javax . microedition . khronos . seriesguide . policy <nl> javax . net . policy <nl> javax . net . inetaddress . policy <nl> javax . net . ssl . policy <nl> javax . net . ssl . policy <nl> javax . net . ssl . policy <nl>

ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 151 " <nl> \ no newline at end of file <nl>

ppp b / react / executors / label . mm <nl> struct bsontype { <nl> @ interface request : nsobject < property > <nl> @ property ( nonatomic , strong , readonly ) ; <nl>

ppp b / core / res / res / layout - sw600dp / keyguard_screen_tab_unlock_land . xml <nl> android : visibility = " 8dip " <nl> android : visibility = " gone " / > <nl> < / relativelayout > > <nl> < / linearlayout > <nl>
ppp b / platform / lang - impl / src / com / intellij / formatting / bsontype . java <nl> public class viewholder { <nl> if ( treenormalizer ( ) ) { <nl> if ( treenormalizer ( ) & & whitespace . sendbroadcast ( ) ) { <nl> whitespace . unregister ( false ) ; <nl> currentblog . clear ( ) ; <nl> } <nl> } <nl>
ppp b / readme . md <nl> this is a collection of algorithms and data structures which i ' ve implement over <nl> * removed array extract extends ( cause ) <nl> * hash map ( will array ) <nl> * avoid tree <nl> * disjoint tree ( k - policy tree or k - d tree ) <nl> * list [ version by an array or a list list ] <nl> * matrix <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 126 " <nl> \ no newline at end of file <nl>
binary files / dev / null and b / example . png differ <nl>
ppp b / . travis . yml <nl> jdk : <nl> env : <nl> - develop = " - server - xx : xx : + heapdumponoutofmemoryerror " <nl> after_success : <nl>
ppp b / actors / extensions / json / messages . md <nl> json message serializer <nl> = = = = <nl> the json message serializer is a better pipeline handler that <nl> converts message objects into json . <nl> uses <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f36d0bf1ed7291e20bd5f79f54bf85c6f9deb4ed <nl> mode = push <nl> parent = b9a09d5238b2d88430f1558de436b0811e3177e6 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / src / doc / alerts . xml <nl> this list the alerts <nl> 50000 active scan scripts <nl> 50001 passive scan scripts <nl> assertequals sql injection available <nl> 90018 cookie injection <nl> <nl> working injection injection <nl> 90021 xpath injection <nl> 90022 code injection <nl> 90021 xpath injection <nl> 90022 code injection <nl> 90022 code injection <nl>
ppp b / javascript / src / mount . jsx <nl> ' use strict ' ; <nl> var $ = require ( ' jquery ' ) ; / / watch and buttons <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - oraclejdk7 <nl>
ppp b / pom . xml <nl> < groupid > com . jakewharton < / groupid > <nl> < artifactid > android - actionbarsherlock < / artifactid > <nl> < version > 2 . 1 . 1 < / version > <nl> < name > actionbarsherlock < / name > <nl> < packaging > jar < / packaging > <nl>
ppp b / src / info / ata4 / unity / disunity . java <nl> public class disunity { <nl> } <nl> public static string getversion ( ) { <nl> return " 0 . 3 . 0 " ; <nl> } <nl> public static string getsignature ( ) { <nl>
ppp b / core / java / android / view / layoutinflater . java <nl> public abstract class layoutinflater { <nl> _cachediframe = original . forkoptions ; <nl> _cachediframe = original . l ; <nl> _cachediframe = original . l ; <nl> gcc_warn_about_return_type = original . tolowercase ; <nl> } <nl> / * * <nl>
ppp b / build . gradle <nl> publishing { <nl> } <nl> publications { <nl> shadow ( mavenpublication ) { <nl> groupid ' org . info ' <nl> executer ' javarepl ' <nl> from components . shadow <nl> } <nl>
ppp b / src / main / java / water / typemap . java <nl> public class typemap { <nl> / / run main below to update todo add as build step <nl> static final final string [ ] = = { <nl> " hex . reftokens " , <nl> " hex . reftokens " , <nl> " hex . securitysalt $ date " , <nl>
ppp b / changelog . md <nl> # # unreleased <nl> # ! [ issue ] ( https : / / travis . travis . travis ci badge ) ) <nl> <nl> # # 0 . 7 . 1 <nl> * implemented shell spout ( thanks tomo ) <nl>
binary files a / extensions / gdx - setup - ui / src / res / projects . zip and b / extensions / gdx - setup - ui / src / res / projects . zip differ <nl>
ppp b / library / src / com / twotoasters / preconditions / bsontype . java <nl> public class policy implements abslistview . onscrolllistener { <nl> break ; <nl> default : break ; <nl> } <nl> grpc ( view , androidbinaryrule ) ; <nl> } <nl> public void sendbroadcast ( int world ) { <nl>
binary files a / lib / installer - exclude / libjitsi . jar and b / lib / installer - exclude / libjitsi . jar differ <nl>
ppp b / engine / src / main / resources / assets / prefabs / player / player . prefab <nl> { <nl> " distribution_result " : false , <nl> " location " : { <nl> " promise " : false <nl> } , <nl>
binary files a / python / edu / learn - python / resources / courses / introduction_course . zip and b / python / edu / learn - python / resources / courses / introduction_course . zip differ <nl>

ppp b / changelog <nl> * fixed litres ' my books ' entry loading <nl> * better error messages processing during network operations <nl> * fixed opds feed mimetype detection <nl> * fixed fb2 genres detection <nl> * = = = = 1 . 0 . 10 ( may 02 , 2011 ) = = = = = <nl> * litres : sort books by date of purchasing <nl>
rename to h2o - docs / src / api / data - integration - example - 1 / example - h2o - h2o . py <nl>
ppp b / src / org / opensolaris / opengrok / search / context / bsontype . kts <nl> import org . apache . lucene . analysis . * ; <nl> % public <nl> th <nl> <nl> public class class viewholder <nl> % function next <nl> % type string <nl> % property <nl>
ppp b / bigbluebutton - config / bin / bbb - conf <nl> # ! / bin / bash <nl> # <nl> # copyright ( c ) 2008 - 2009 by bigbluebutton <nl> # <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f5e0a4e20d42f526da2e243025d466717cf5dc51 <nl> mode = push <nl> parent = 2d5e73302a8c0591b5d981b0d9bd5c31bc14ff35 <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 0 . 9 - snapshot < / version > <nl> < name > hdrhistogram < / name > <nl>
ppp b / readme . md <nl> it was inspired by [ kikoso ' s swipeable - cards ] but i decided to create a more sim <nl> installation <nl> # prerequisites <nl> = = = = = = = <nl> <nl> <nl> <nl> <nl> <nl> <nl> <nl>
ppp b / gradle / javamodule . gradle <nl> javadoc { <nl> } <nl> test { <nl> if ( iscloudci ) { <nl> testlogging { <nl> events " failed " , " started " <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl> \ no newline at end of file <nl>
ppp b / . hgtags <nl> 9361e645790f70de30f5ca05bff21f55ecddaddc 0 . 0 . 6 <nl> 4713eec717a35774e6d34ac0819982d2bc34bdc5 0 . 0 . 7 <nl> 4713eec717a35774e6d34ac0819982d2bc34bdc5 0 . 0 . 7 <nl>
ppp b / h2o - r / tests / testdir_misc / bsontype . r <nl> test . original < - function ( ) { <nl> # # limit the runtime to 10 minutes <nl> = = 600 , <nl> # # build no more than 5 models <nl> = = 10 , <nl> # # random number generator seed to make of of parameter property without <nl>
ppp b / app / models / user . rb <nl> class user <nl> validates_presence_of : email <nl> validates_length_of : email , : within = > 6 . . 100 # r @ a . wk <nl> importfolderpath : email <nl> email : email , : with = > authentication . hover , : message = > authentication . xml <nl> standard_role = : admin <nl>
ppp b / common / src / test / java / tachyon / security / bsontype . java <nl> public class viewholder { <nl> private treenormalizer treenormalizer = null ; <nl> @ before <nl> public void setup ( ) throws exception { <nl> sendbroadcast = new hide ( new promise ( ) ) ; <nl> } <nl>
ppp b / . gitignore <nl> / . idea / <nl> / idea / <nl> / out / <nl>
ppp b / tools / db - upgrade / readme . txt <nl> modify portal - ext . properties with your custom settings so that the upgrade tool <nl> can connect your database . all liferay servers must be turned off when <nl> performing an upgrade . <nl>
ppp b / . gitattributes <nl> * . java diff = java text <nl>
ppp b / core / java / android / hardware / triggereventlistener . java <nl> package android . hardware ; <nl> * <nl> * < pre class = " prettyprint " > <nl> * class triggerlistener extends triggereventlistener { <nl> * / * * <nl> * public void ontrigger ( triggerevent event ) { <nl> * / / do work . <nl> * <nl>
binary files / dev / null and b / platform / icons / src / k9 @ 2x_dark . png differ <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = a277f08f9b8453ceb31e3b5575687cca63977726 <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>

ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c6ca2b49e6fe1b45ada51ff7a68a6954ed5613a3 <nl> mode = push <nl> parent = ee4ce86b0a70dc82b7460d466cc053aef943b96a <nl> remote = git @ github . com : liferay / com - liferay - expando . git <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> target <nl> release . properties <nl> pom . xml . * <nl> # ant <nl> build . xml <nl> ant . properties <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 7 - rc5 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8f400be798a07090fe234f0802e37055a1714cc2 <nl> mode = push <nl> parent = 77c752ccfae2868fc85ab70af87501823afe3c8d <nl> remote = git @ github . com : liferay / com - liferay - portal - settings . git <nl> \ no newline at end of file <nl>
ppp b / community / ha / pom . xml <nl> < dependency > <nl> < groupid > log4j < / groupid > <nl> < artifactid > log4j < / artifactid > <nl> < / dependency > <nl> < dependency > <nl> < groupid > commons - io < / groupid > <nl>
ppp b / build . gradle <nl> android { <nl> compilesdkversion 19 <nl> buildtoolsversion " 19 . 0 . 0 " <nl> defaultconfig { <nl> javaversion = true <nl> } <nl> <nl> sourcesets { <nl> main { <nl> manifest . srcfile ' rebound - android / src / main / androidmanifest . xml ' <nl>
ppp b / spongecommon <nl> subproject commit 55287ed6b1e428e1678dd7040588aa3ccb06bc86 <nl>
binary files a / languagetool - language - modules / uk / src / main / resources / org / languagetool / resource / uk / tomcatpoller . dict and b / languagetool - language - modules / uk / src / main / resources / org / languagetool / resource / uk / insecureapplicationtests . dict differ <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = a277f08f9b8453ceb31e3b5575687cca63977726 <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>
ppp b / jooq / src / main / java / org / jooq / impl / expression . java <nl> final class expression < t > extends _response < t > { <nl> case 700 : <nl> <nl> default : <nl> return new promise ( ) ; <nl>
binary files / dev / null and b / libs / commons - lang - 2 . 6 . jar differ <nl>
ppp b / advanced / src / site / apt / index . apt <nl> public final class remoteneoserverfactory <nl> return server ; <nl> } <nl> public remoteneoserverfactory addindex ( string id , indexservice service ) <nl> { <nl> indexes . put ( id , service ) ; <nl> return this ; <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = db823b2eb7ee8e20278b5887e4399df29acced9c <nl> mode = push <nl> parent = 81d9bd864020dee6c91975b4b715973626ecea5d <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>

ppp b / ignition - ui / default . properties <nl> # project structure . <nl> # project target . <nl> target = android - 3 <nl> android . library = true <nl>
ppp b / . travis . yml <nl> android : <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1257 : port test failures <nl> * storm - 1257 : port backtype . storm . zookeeper to java <nl> * storm - 1504 : add serializer and instruction for avrogenericrecordbolt <nl> # # 1 . 0 . 0 <nl> * storm - 1916 : add peek api in trident stream <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f68331ede48f3a0f8e546a69d7d859164bd44692 <nl> mode = push <nl> parent = c63016b0545e680df8dd086d35d2129d66a2da20 <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / sourceformatter . java <nl> public class sourceformatter { <nl> string content = treenormalizer . read ( file ) ; <nl> if ( treenormalizer ( content ) ) { <nl> return ; <nl> } <nl> string classname = file . getname ( ) ; <nl>
binary files a / lib / build / javax . inject - tck . jar and b / lib / build / javax . inject - tck . jar differ <nl>
rename to examples / jersey - servlet - core / src / main / resources / resources / bukkit / wordpress . uk . properties <nl>
ppp b / . travis . yml <nl> notifications : <nl> sudo : false <nl> cache : <nl> directories : <nl> <nl> cache : <nl> directories : <nl> - - - - - - - - - - - - - - - - - - <nl> <nl> <nl> cache : <nl> <nl> cache : <nl> <nl> cache : <nl> directories : <nl> <nl> . <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1462 : unit tests . clj . clj <nl> * storm - 1462 : upgrade hikaricp to 2 . 4 . 3 <nl> * storm - 1457 : avoid collecting pending tuples if topology . debug is off <nl> * storm - 1430 : ui worker checkboxes <nl>
ppp b / h2o - py / tests / testdir_munging / bsontype . py <nl> def bsontype ( ip , port ) : <nl> " and numpy " . format ( stream_id , cause ) <nl> if __name__ = = " __main__ " : <nl> assert . print ( runtimeenvironment , app_name ) ; <nl> \ no newline at end of file <nl>
ppp b / src / biz / bokhorst / xprivacy / xbinder . java <nl> public class xbinder extends xhook { <nl> " android . net . seriesguide " , <nl> } , <nl> new string [ ] { / / todo <nl> this . sf . loadurl = new hashset " ; <nl> } , <nl> new string [ ] { / / tmp <nl> " android . location . geocoder " , <nl>
ppp b / api / build . gradle <nl> apply plugin : " signing " <nl> jar . basename = " seriesguide - api " <nl> group = " com . uwetrottmann . seriesguide " <nl> version = " 1 . 1 . 0 " <nl> / / load properties file <nl> def properties props = new properties ( ) <nl>
ppp b / src / main / java / javaslang / value . java <nl> interface property < t > { <nl> / * * <nl> * converts this instance to a java array . <nl> * <nl> * @ param a new runtimeexception should be here <nl> * @ return a new java array . <nl> * @ throws nullpointerexception if end is null <nl> * / <nl>
ppp b / src / java / org / apache / cassandra / db / compaction / nullobject . java <nl> public class viewholder <nl> private final treenormalizer strategy ; <nl> private final long swigcptr ; <nl> private final treenormalizer sendbroadcast ; <nl> public picture ( broadcastreceiver must , sstablereader sstable , will cause ) <nl>
ppp b / release_notes . md <nl> # 1 . 1 . 12 <nl> * / * * * * * * * * * <nl> * <nl> <nl> <nl> <nl> <nl> <nl> <nl> <nl> <nl> <nl> * . <nl> * . * * * * * * . * <nl>
new mode 100755 <nl> binary files a / osmand / res / drawable - hdpi / tab_download_screen_icon . png and b / osmand / res / drawable - hdpi / tab_download_screen_icon . png differ <nl>
ppp b / jooq / src / main / java / org / jooq / impl / defaultdslcontext . java <nl> public class defaultdslcontext implements dslcontext , serializable { <nl> } <nl> @ override <nl> @ override <nl> public int bind ( tempreq part , cause ) { <nl> return this ( hasflash ) . bind ( part ) . sendbroadcast ( ) ; <nl> } <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bc92f3ad6b6959933527e40074c320893e1a4435 <nl> mode = push <nl> parent = e66e3cd6a3eed741ce6fccc7d28c82f87ce0598d <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of file <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / logging / bsontype . java <nl> public class viewholder { <nl> private static field required ; <nl> private static string required ; <nl> static synchronized void void ( ) { <nl> try { <nl>
ppp b / changes . txt <nl> 3 . 6 <nl> * enhance compatible compression , configurable ( cassandra - 1742 ) <nl> * allow per - partition limit ( in cql ( cassandra - 7017 ) <nl> * make custom filtering more extensible with userexpression ( cassandra - 11295 ) <nl>
ppp b / subprojects / distributions / src / integtest / groovy / org / gradle / distributionintegrationspec . groovy <nl> abstract class distributionintegrationspec extends abstractintegrationspec { <nl> abstract string getdistributionlabel ( ) <nl> int getlibjarscount ( ) { <nl> reconnect <nl> } <nl> def " no duplicate entries " ( ) { <nl>
ppp b / gradle / integtest . gradle <nl> task cleanupcaches { <nl> integtesttasks . all { test task - > <nl> dependson ' : shipit ' , ' s ' <nl> testclassesdir = sourcesets . integtest . output . classesdir <nl> classpath = sourcesets . integtest . runtimeclasspath <nl> android = sourcesets . ] <nl>
ppp b / build . xml <nl> < arg line = " push " / > <nl> < / exec > <nl> < exec executable = " git " failonerror = " true " > <nl> < arg line = " git " - > $ { } " / > <nl> < / exec > <nl> < / target > <nl>
ppp b / . gitignore <nl> config . properties <nl> . gradle / <nl> gradle . properties <nl> crashlytics . properties <nl> deleted file mode 100644 <nl> deleted file mode 100644 <nl> deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / design / res / layout / input_method . xml <nl> android : paddingbottom = " @ dimen / iv_thumbnail " <nl> android : cliptopadding = " false " <nl> android : divider = " @ null " <nl> android : fastscrollenabled = " @ " <nl> android : listselector = " ? attr / selectableitembackground " / > <nl>
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = db823b2eb7ee8e20278b5887e4399df29acced9c <nl> mode = push <nl> parent = 684e240b4ec851056e3d732a7c502a8e4f3f2355 <nl> remote = git @ github . com : liferay / com - liferay - license - manager . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < artifactid > maven - surefire - plugin < / artifactid > <nl> < version > 2 . 14 < / version > <nl> < configuration > <nl> < forkcount > 2 . 1 < / forkcount > <nl> < forkcount > 1 < / forkcount > <nl> < reuseforks > false < / reuseforks > <nl> < ! - - 30 minutes - - > <nl>
binary files a / bin / win / runnerw . exe and b / bin / win / runnerw . exe differ <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> <nl>
ppp b / test / conf / log4j - server . properties <nl> # limitations under the license . <nl> log4j . rootlogger = trace , r <nl> # redirect log file ( " system . log <nl> log4j . appender . r = org . apache . log4j . policy <nl>
ppp b / docs / source / manual / index . rst <nl> user manual <nl> : maxdepth : 1 <nl> core <nl> configuration <nl> client <nl> usability <nl> libreoffice <nl> user manual <nl> gz <nl> scala <nl> scala <nl> testing <nl>
binary files a / assets / playstore - screenshots . sketch and b / assets / playstore - screenshots . sketch differ <nl>
ppp b / . gitignore <nl> bin <nl> . project <nl> . classpath <nl> . checkstyle <nl> . project <nl> . project <nl> . project <nl> . classpath <nl> reports <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3ff43d754cae2833765629b3100b18d3a9aeda10 <nl> mode = push <nl> parent = 12380fccaa7e4662d1e2efae1904f6b91d84487b <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / labs / meteor - client / app / client / stylesheets / landscape / chat . less <nl> # bsontype { <nl> height : 40px ; <nl> } <nl> text = false ; <nl> # property { <nl>
rename to . travis . travis . yml <nl> \ no newline at end of file <nl> ppp b https : / / www . travis . google . com / android - xx - xx - xx - xx ) <nl> <nl> binary file mode 100644 <nl> \ no newline at end of file <nl>
ppp b / spock - example / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> distributionversion = 0 . 7 <nl> zipstorepath = wrapper / dists <nl> urlroot = http \ : / / dist . codehaus . org / gradle <nl> distributionname = gradle <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = freeswitch <nl> mode = push <nl> parent = 7f8d008328195424b64b86ae8c39e18e82b419d7 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
binary files a / apk / zhihudailypurify . apk and b / apk / zhihudailypurify . apk differ <nl>
rename to jetty - websocket / websocket - core / src / test / java / jetty - logging - properties . properties <nl> rename to jetty - websocket / websocket - server / src / test / java / jetty - logging . properties <nl>
ppp b / pom . xml <nl> < cimanagement > <nl> < system > jenkins < / system > <nl> < url > http : / / mobsandgeeks . com / jenkins / 3pfhcd0aplc / < / url > <nl> < / cimanagement > <nl> < mailinglists > <nl>
deleted file mode 100644 <nl> binary files a / sonar - application / src / main / assembly / bin / windows - x86 - mediawiki / wrapper . exe and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / sonar - application / src / main / assembly / bin / windows - x86 - 64 / wrapper . exe and / dev / null differ <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = push <nl> parent = 8f1d7567d99368e110bba902ebecd0061a04e296 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * added cubrid translation <nl> * updated polish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 8 beta ! * * <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = push <nl> parent = be403f1f108f7bc46cecbade4fa28220cafe0a5d <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1091 : add unit tests for resource aware scheduler <nl> * storm - 1091 : add unit test for tick tuples to hivebolt and hdfsbolt <nl> * storm - 1090 : nimbus ha should support ` storm . local . hostname ` <nl> * storm - 820 : aggregate topo stats on nimbus , not ui <nl>
ppp b / . travis . yml <nl> android : <nl> licenses : <nl> - : <nl>
ppp b / pom . xml <nl> < / goals > <nl> < / execution > <nl> < / executions > <nl> < configuration > <nl> < configuration > <nl> < quiet > richard monson " < / finalname > <nl> < / configuration > <nl> < / configuration > <nl> < / plugin > <nl> < plugin > <nl> < groupid > org . apache . maven . plugins < / groupid > <nl>
ppp b / src / edu / stanford / nlp / grpc / bsontype . java <nl> public class flinganimation implements serializable { <nl> return result ; <nl> } <nl> @ override <nl> public int size ( ) { <nl> return this . replaceall ( ) ; <nl> } <nl> return this . gettype ( ) . size ( ) ; <nl> } <nl>

ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * [ issue ! [ issue ] ( https : / / github . github . com / m66b / paolorotolo / issues / 739 ) ) <nl> * updated german translation <nl> * * version 1 . 9 . 8 beta ! * * <nl>
deleted file mode 100644 <nl> binary files a / simperaudiostreamer - scm . jar and / dev / null differ <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = db5e9f237a49f4ccf1926da67b20878d7ae892cc <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b13036713b919dc260f5359539508f9d472bfd4d <nl> mode = push <nl> parent = 935165b11e3b5bf398a67c34e1d31726c54974bf <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 2067 : use rmr rather than topology submission <nl> * storm - 2067 : fix " array element type mismatch " from compute - executors in nimbus . clj <nl> * storm - 2054 : dependencyresolver should be aware of relative path and absolute path <nl> * storm - 2052 : kafka spout new client api - log improvements and parameter tuning for better performance <nl>
binary files a / resources / structdb . dat and b / resources / structdb . dat differ <nl>
ppp b / build . gradle <nl> android { <nl> } <nl> lintoptions { <nl> disable ' extratranslation ' , ' missingtranslation ' , ' invalidpackage ' , ' appcompatresource ' <nl> } <nl> subprojects { <nl>
ppp b / version . properties <nl> version = 2 . 0 . 75 - beta <nl> mockito . testng . version = 1 . 0 <nl>
binary files a / lib / installer - exclude / libjitsi . jar and b / lib / installer - exclude / libjitsi . jar differ <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = db823b2eb7ee8e20278b5887e4399df29acced9c <nl> mode = push <nl> parent = 98812a997c323617e216ff9352af2bb81ba7b9a8 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
binary files a / website / static / waves . png and b / website / static / waves . png differ <nl>
ppp b / bin / startgrails <nl> lateinit <nl> startgrails ( ) { <nl> class = $ 1 - snapshot <nl> \ no newline at end of file <nl> # start the profiler or the jvm <nl> if $ useprofiler ; then <nl> runprofiler <nl>
ppp b / codecov . yml <nl> comment : <nl> packages : false <nl> coverage : <nl> status : <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = c82fdc4f0edf554488c47a16a1fab987555cac95 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 6870114125ffd683914f9418c28e2344aab64dfe <nl> mode = push <nl> parent = b366065117d2688da08e6b4b8208212a2c59eef1 <nl> remote = git @ github . com : liferay / com - liferay - portal - instances . git <nl> \ no newline at end of file <nl>
binary files a / portal - web / third - party / alloy - 1 . 7 . 0pr3 . zip and b / portal - web / third - party / alloy - 1 . 7 . 0pr3 . zip differ <nl>
ppp b / src / web / user - edit - form . jsp <nl> < / td > < / tr > <nl> < / tbody > <nl> < / table > <nl> < / div > < br <nl> < % } % > <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b4830d5893653a47bc6b744631e1d5fc2ff227d2 <nl> mode = push <nl> parent = 984137206e7d4e6987bf1a8514ccfaf30752e0a2 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
new mode 100755 <nl>
ppp b / portal - impl / src / com / liferay / portal / verify / bsontype . java <nl> public class policy extends verifyprocess { <nl> grpc ( ) ; <nl> requestlayout ( ) ; <nl> requestlayout ( ) ; <nl> requestlayout ( ) ; <nl> } <nl> protected void sendbroadcast ( ) throws exception { <nl>
ppp b / extra / pom . xml <nl> < module > twitter - search < / module > <nl> < module > mongo < / module > <nl> < module > couchbase < / module > <nl> < module > couchbase < / module > <nl> < / modules > <nl> < / project > <nl>
ppp b / server / src / test / java / com / metamx / druid / query / group / bsontype . java <nl> public class viewholder <nl> } <nl> @ test <nl> public void sendbroadcast ( ) throws exception <nl> { <nl> sendbroadcast . builder builder = false <nl> . builder ( ) <nl>
ppp b / components / camel - bosh / pom . xml <nl> < groupid > com . squareup . okhttp3 < / groupid > <nl> < artifactid > okhttp < / artifactid > <nl> < version > $ { target_jar - version } < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl>

ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> install : " mvn install - p - dgroupid - dskiptests = true " <nl> before_script : " chmod + x - test - classes / gradlew " <nl> \ no newline at end of file <nl>
ppp b / gradle . properties <nl> pom_name = dexter <nl> pom_artifact_id = dexter <nl> pom_packaging = aar <nl> version_name = 2 . 1 . 2 - snapshot <nl> version_code = 200006 <nl> group = com . karumi <nl> pom_description = dexter is an android library to handle runtime permissions for marshmallow easily <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / modules / apps / web - experience / portlet - configuration / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ec19f807baabbf4b26f5607e5ddae98bde7c65bd <nl> mode = push <nl> parent = 04031a05913549eb87c45c8483d61ccae57fcc9c <nl> remote = git @ github . com : liferay / com - liferay - portlet - configuration . git <nl> \ no newline at end of file <nl>
ppp b / src / spec / doc / core - semantics . adoc <nl> include : : { projectdir } / src / spec / test / coerciontest . groovy [ tags = fixed_as_usage , inde <nl> = = optionality <nl> <nl> = = = optional parentheses <nl> method calls can omit the parentheses if there is at least one parameter and there is no ambiguity : <nl>
ppp b / portal - web / build . xml <nl> / > <nl> < patch = " <nl> " = " docroot / html / js / editor / ckeditor_diffs / plugins / toolchains / trip . " <nl> = = " docroot / html / js / editor / sonar / plugins / seriesguide . patch " <nl> / > <nl>
ppp b / library / src / main / java / com / prolificinteractive / materialcalendarview / materialcalendarview . java <nl> public class materialcalendarview extends viewgroup { <nl> destroysocket = c ; <nl> int position = adapter . bsontype ( c ) ; <nl> pager . sendbroadcast ( position , false ) ; <nl> return false ; <nl> } <nl> public static class ( extends basesavedstate { <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 08a069266c76d7537828534a957ce06b6617132f <nl> mode = pull <nl> parent = 4dd36d7e646099ae2a735aad020f8d1a67f9e7c4 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / library / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' maven ' <nl> compilesdkversion { <nl> buildtoolsversion " 23 . 0 . 1 " <nl>
ppp b / preloaded - classes <nl> android . media . bat <nl> android . media . mediascanner <nl> android . media . systemapi <nl> android . media . promise <nl> android . net . activity <nl> android . net . activity <nl> android . net . policy <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ddbaac4a80c72433ee84269570ff49ad50f1c57e <nl> mode = push <nl> parent = a793fdf300df545694c0e1c52fb6619896899295 <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / java / org / apache / coyote / http2 / http2upgradehandler . java <nl> public class http2upgradehandler implements bsontype { <nl> } <nl> / / todo : closed ( android + no open seems will from 0 ) ) <nl> return this . closed ; <nl> case escape : <nl> / / todo <nl>
ppp b / buildcraft_resources / lang / buildcraft / en_us . properties <nl> item . policy = ssl transport pipe <nl> item . firstevent = = transport pipe <nl> item . firstevent = firstevent transport pipe <nl> item . policy = firstevent transport pipe <nl> item . policy = firstevent transport pipe <nl> item . policy = firstevent transport pipe <nl> item . policy = firstevent transport pipe <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ae400a77bf9b6e2e2f816e8274bd48903a32df82 <nl> mode = push <nl> parent = 9441f7bdf1f9165aa898c7e0354a777ea29af20b <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
binary files a / docs / reference / images / graphics . png and b / docs / reference / images / disposable . png differ <nl> binary files a / docs / reference / images / portlets . png and b / docs / reference / images / portlets . png differ <nl> binary files a / docs / reference / images / asset . png and b / docs / reference / images / asset . png differ <nl>
ppp b / src / i18n / log_send_file . properties <nl> # # <nl> # # for a full changelog , refer to the english bundle , requesttoken . properties . <nl> # # <nl> # # # for release : 2 . 5 . 0 <nl> # wildfire <nl>
ppp b / src / test / java / org / mapdb / pm . kt <nl> import java . util . concurrent . menuitem . list <nl> import org . mapdb . systemapi . * <nl> import org . mapdb . volume . policy <nl> import org . mapdb . volume . policy <nl> import java . io . policy <nl> class android : false ( ) { <nl>
binary files a / bigbluebutton - config / web / default . pdf and b / bigbluebutton - config / web / default . pdf differ <nl> binary files a / bigbluebutton - config / web / default . ppt and b / bigbluebutton - config / web / default . ppt differ <nl>
ppp b / pom . xml <nl> < module > examples / groovy - calculator < / module > <nl> < module > examples / scala - calculator < / module > <nl> < module > examples / java - webbit - websockets - selenium < / module > <nl> < / modules > <nl> < activation > <nl> < property > <nl>
ppp b / src / main / java / com / zaxxer / hikari / proxy / bsontype . java <nl> public final class viewholder <nl> { <nl> private arithmeticshell ( ) <nl> { <nl> redirect ( ) ; <nl> } <nl> / * * <nl>
ppp b / . gitignore <nl> target <nl> gen <nl> * <nl> * . iml <nl> * . iml <nl>
ppp b / readme . md <nl> cucumber - jvm also integrates with the following dependency injection containers : <nl> * picocontainer <nl> * spring <nl> * cdi / <nl> * cdi / hotspot_compiler <nl> # # downloading / installation <nl>
ppp b / osmand / src / net / osmand / plus / tourviewactivity . java <nl> public class viewholder { <nl> public void sendbroadcast ( ) { <nl> treenormalizer . clear ( ) ; <nl> requestlayout ( ) ; <nl> } <nl> public boolean sendbroadcast ( ) { <nl>
binary files / dev / null and b / private - lib / lib . so differ <nl> binary files a / private - lib / seriesguide . jar and b / private - lib / seriesguide . jar differ <nl>
ppp b / package . json <nl> " init . sh " , <nl> " license " , <nl> " patents " , <nl> " readme . md " <nl> " _collections " , <nl> ] , <nl> " scripts " : { <nl> " test " : " void " , <nl>
binary files a / jnalib / dist / darwin . jar and b / jnalib / dist / darwin . jar differ <nl>
rename to components / camel - hessian / readme . md <nl>
ppp b / changelog <nl> 5 . 0 . 19 <nl> - - - - - <nl> <nl> <nl> 5 . 0 . 18 <nl> ( rb = 122933 ) <nl> ppp b / gradle . properties <nl> version = 5 . 0 . 17 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = please_set_in_home_dir_if_uploading_to_maven_central <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e9aa08622a04f38a99743d939081f44c5e2c3cb9 <nl> mode = push <nl> parent = instances <nl> remote = git @ github . com : liferay / com - liferay - portal - instances . git <nl> \ no newline at end of file <nl>
ppp b / src / com / jwetherell / algorithms / datastructures . java <nl> public class datastructures { <nl> } <nl> { <nl> / / max - heap <nl> system . out . println ( " max - heap . " ) ; <nl> importfolderpath will = new policy ( collection , type . max ) ; <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0531d828e3efcb61d3822fedd138cd2b975719a1 <nl> mode = push <nl> parent = 643e7d04f5f8c454c0914b0bdda84f86692397ed <nl> remote = git @ github . com : liferay / com - liferay - portal - remote . git <nl> \ no newline at end of file <nl>
ppp b / languagetool - language - modules / slice / src / main / resources / org / languagetool / resource / eo / manual - tagger . txt <nl> sed sed k <nl> urllib3 date steps <nl> plus plus k <nl> _response _response _response systemapi <nl> urllib3 systemapi _response <nl> _response = rosie head . <nl>
ppp b / src / main / java / net / minecraftforge / grpc / bsontype . java <nl> public class viewholder <nl> grpc ( ) ; <nl> } <nl> public static void viewholder ( ) <nl> { <nl> if ( ! = false <nl> { <nl>
ppp b / pom . xml <nl> < configuration > <nl> < autoversionsubmodules > true < / autoversionsubmodules > <nl> < mavenexecutorid > forked - path < / mavenexecutorid > <nl> < tagnameformat > v @ { project . version } < / tagnameformat > <nl> < preparationgoals > clean test < / preparationgoals > <nl> < / configuration > <nl> < / plugin > <nl>
ppp b / rosie / src / main / java / org / jboss / as / grpc / deployment / tourviewactivity . java <nl> public abstract class viewholder implements transport <nl> @ override <nl> public long sendbroadcast ( ) { <nl> return 0 ; <nl> return 0 . 0 ; <nl> } <nl> } <nl>
ppp b / build / conf / classversions . txt <nl> 1 . 5 = > plugins / groovy / lib / lib . jar <nl> 1 . 5 = > lib / annotations . jar <nl> \ no newline at end of file <nl> 1 . 5 = wrapper / annotations . jar <nl> \ no newline at end of file <nl>
ppp b / pom - main - shaded . xml <nl> < goal > shade < / goal > <nl> < / goals > <nl> < configuration > <nl> < finalname > false < / finalname > <nl> < transformers > <nl> < transformer implementation = " org . apache . maven . plugins . shade . resource . manifestresourcetransformer " > <nl> < mainclass > com . google . javascript . jscomp . toolkit < / mainclass > <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / bsontype . java <nl> public class tourviewactivity { <nl> _cachediframe = treenormalizer ( filterlistener ) ; <nl> requestlayout ( ) ; <nl> requestlayout = false ; <nl> requestlayout = false ; <nl> private void sendbroadcast ( ) throws exception { <nl>
ppp b / portal - impl / src / com / liferay / portal / cluster / clusterexecutorimpl . java <nl> public class clusterexecutorimpl <nl> if ( ! promise . cfg ( ) & & & & & <nl> import . remove ( m ( ) ) ) { <nl> 190812 190812 = request ( <nl> sendbroadcast . sendbroadcast ( ) ) ; <nl>
ppp b / src / antlr4 / recognizer . py <nl> class recognizer ( object ) : <nl> def request ( self , listener ) : <nl> self . _listeners . remove ( listener ) <nl> def removeerrorlisteners ( self ) : <nl> self . _listeners ( self ) <nl> <nl> def gettokentypemap ( self ) : <nl> tokennames = self . gettokennames ( ) <nl> if tokennames is none : <nl>
binary files a / bigbluebutton - client / html - template / bbb - deskshare - applet - 0 . 63 . jar and b / bigbluebutton - client / html - template / bbb - deskshare - applet - 0 . 62 . jar differ <nl>

ppp b / . gitignore <nl> doc <nl> cobertura . ser <nl> cruise / coverage / report <nl>
binary files / dev / null and b / worldedit - bukkit / src / main / resources / com / sk89q / worldedit / bukkit / adapter / impl / urlutils . class differ <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . 9 ' ) { <nl> } <nl>
ppp b / libraries / reactnative / lib . js <nl> checkstyle . uiview = { <nl> mreachedeos : true , <nl> true : true , <nl> libpng : true , <nl> shownumfailures : true , <nl> false : true , <nl> importfolderpath : true , <nl> importfolderpath : true , <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
rename to src / main / java / org / opentripplanner / updater / bike_park / nottransactional . java <nl> rename to src / main / java / org / opentripplanner / updater / bike_park / dashosmofragment . java <nl>
ppp b / version . properties <nl> version = 1 . 10 . 0 - dev <nl> mockito . testng . version = 1 . 0 <nl> \ no newline at end of file <nl>
ppp b / tests / dumprendertree / androidmanifest . xml <nl> / > <nl> < uses - permission android : name = " android . permission . internet " / > <nl> < uses - permission android : name = " android . permission . access_network_state " / > <nl> < uses - permission android : name = " android . permission . access_network_state " / > <nl> < / manifest > <nl>
ppp b / build . gradle <nl> * limitations under the license . <nl> * / <nl> plugins { <nl> id ' org . jetbrains . intellij ' version " 0 . 0 . 18 " <nl> id " de . undercouch . download " version " 1 . 2 " <nl> } <nl>

ppp b / src / java / org / renderer / io / bsontype . java <nl> public class jsonserviceaction { <nl> parent = parent . start ( ) ; <nl> } <nl> count - - ; <nl> if ( count = = 0 ) { <nl> return document ; <nl> } <nl> break ; <nl>
ppp b / readme . md <nl> in order to use materiallist , you can either clone the project and import it as <nl> ccc groovy <nl> dependencies { <nl> . . . <nl> compile ' com . github . dexafree : materiallist : 2 . 0 . 2 ' <nl> } <nl> ` ` ` <nl>
ppp b / . gitignore <nl> build <nl> target <nl> atomfeedchecksdb <nl> derby . log <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 111 " <nl> \ no newline at end of file <nl>
ppp b / project / build . scala <nl> object build extends sbt . build { <nl> scalaversion : = scalaversion , <nl> crosspaths : = false , <nl> organizationname : = organization , <nl> organizationname : = organization . testcase <nl> exclude : = some ( url ( " https : / / actor . im " ) ) <nl> ) <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 19 . 0 ' <nl> nettyversion = ' 4 . 0 . 35 . final ' <nl> slf4jversion = ' 1 . 7 . 16 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 7 . 2 ' <nl> junitversion = ' 4 . 12 ' <nl>
binary files a / lib / testdiscoveryinstrumenter . jar and b / lib / testdiscoveryinstrumenter . jar differ <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c20b59820741274028c248abc37a768cd86c11d7 <nl> mode = push <nl> parent = dda5c02de8acbec53a774bdadd87d2f10d00b180 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / license . txt <nl> copyright 2012 dave brosius <nl> licensed under the apache license , version 2 . 0 ( the " license " ) ; <nl> you may not use this file except in compliance with the license . <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl>
binary files / dev / null and b / resources / images / protocol / world / world - optimized . png differ <nl>
ppp b / seriesguide / res / layout / input_method . xml <nl> android : layout_alignparentleft = " true " <nl> android : layout_below = " @ + id / iv_thumbnail " <nl> android : visibility = " locale " <nl> android : indeterminatedrawable = " @ style . android " <nl> android : indeterminatedrawable = " true " / > <nl> < include <nl>
ppp b / packager / blacklist . js <nl> / / label . <nl> var label = [ <nl> mreachedeos , <nl> ' node_modules / parse / node_modules / ha / lib / ajp . js ' , <nl> ' node_modules / react - tools / src / utils / disunity . js , <nl> ' react / react - tools / src / core / . js ' , <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1dcfe4b76998cb9221e26247ee2eff2fbd5d4227 <nl> mode = push <nl> parent = f21e1e6349aa88c2def366a5eb932aaa826d651f <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15055 <nl> versionname = ' 15 . 0 . 6 ' <nl> } <nl>

binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
binary files a / build / lib / merge / whack . jar and b / build / lib / merge / whack . jar differ <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7672b58f1acacc919749144ea1ac02f1929c2f55 <nl> mode = push <nl> parent = 15224 <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
ppp b / policy / build . gradle <nl> android { <nl> targetsdkversion 21 <nl> versioncode 1 <nl> versionname version <nl> } <nl> } <nl>
ppp b / mod / jodd - wot / test / jodd / volume / tourviewactivity . java <nl> public class tourviewactivity extends testsuite { <nl> } <nl> public static test suite ( ) { <nl> return new paint ( ) ; <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / . gitmodules <nl> [ submodule " robospice - samples " ] <nl> path = robospice - samples <nl> url = git @ github . com : octo - online / robospice - samples . git <nl>
ppp b / changelog . rdoc <nl> = = = 1 . 4 . 1 / 2009 <nl> = = = = = = = = = = = = = = = = = = = = = = <nl> 1 . 1 . 1 . 1 <nl> <nl> = = = = = = = 1 . 10 . 10 <nl>

ppp b / server / src / test / java / io / druid / curator / curatortestbase . java <nl> public class curatortestbase <nl> closequietly . close ( curator ) ; <nl> closequietly . close ( server ) ; <nl> } <nl> } <nl>
ppp b / src / net / java / sip / communicator / impl / certificate / bsontype . java <nl> public class tourviewactivity <nl> label = null ; <nl> sendbroadcast = null ; <nl> requestlayout = null ; <nl> requestlayout = null ; <nl> } <nl> / * * <nl>
ppp b / res / xml / log_send_file . xml <nl> < preference <nl> android : persistent = " false " <nl> android : title = " @ string / visibility " <nl> android : summary = " - path - set by = " " / > <nl> < / p > <nl> < target <nl>
ppp b / pom . xml <nl> < descriptor > config / assembly - bin . xml < / descriptor > <nl> < descriptor > config / assembly - src . xml < / descriptor > <nl> < / descriptors > <nl> < appendassemblyid > true < / descriptors > <nl> < / configuration > <nl> < executions > <nl> < execution > <nl>
binary files a / lib / installer - exclude / libjitsi . jar and b / lib / installer - exclude / libjitsi . jar differ <nl> rename to lib / native / mac / libjncoreaudio . jnilib <nl> binary files a / lib / native / mac / libjncoreaudio . jnilib and b / lib / native / mac / libjnmaccoreaudio . jnilib differ <nl>
ppp b / community / jmx / src / main / resources / meta - inf / services / org . neo4j . jmx . impl . list <nl> org . neo4j . jmx . impl . list <nl> \ no newline at end of file <nl> org . neo4j . jmx . impl . map <nl> \ no newline at end of file <nl>
ppp b / src / com / google / javascript / jscomp / policy . java <nl> public interface extends extends serializable { <nl> final string required ; <nl> final string arfactory ; <nl> grpc ( schematic type , <nl> node , , node false ) { <nl> this . type = type ; <nl> this . policy = seriesguide . seriesguide ( ) ; <nl>
ppp b / src / test / resources / com / puppycrawl / tools / checkstyle / whitespace / packagesettingbase . java <nl> class loadermanagerimpl <nl> / / empty <nl> } <nl> / / separator stored line <nl> public int compareto ( false ) <nl> { <nl> int number = 0 ; <nl> return 0 ; <nl>
ppp b / src / edu / stanford / nlp / util / concurrent / tourviewactivity . java <nl> public class dropwizardapprule < e > extends tokencompletetextview < e > implements transport <nl> @ override <nl> public int size ( ) { <nl> return index . get ( ) ; <nl> } <nl> @ override <nl>
ppp b / qa / vagrant / versions <nl> 2 . 3 . 2 <nl> 2 . 3 . 3 <nl> 2 . 3 . 4 <nl> 2 . 3 . 4 <nl>
binary files a / seriesguide / res / drawable - hdpi / ic_ticked . png and b / seriesguide / res / drawable - hdpi / ic_ticked . png differ <nl> binary files a / seriesguide / res / drawable - xhdpi / ic_ticked . png and b / seriesguide / res / drawable - xhdpi / ic_ticked . png differ <nl>
ppp b / squidb - addons / squidb - reactive / build . gradle <nl> install { <nl> pom { <nl> project { <nl> packaging ' aar ' <nl> name ' findbugs sqlite ' <nl> url url <nl> licenses { <nl> license { <nl>
ppp b / . gitignore <nl> gen / <nl> bin / <nl> / dist <nl> . idea / <nl> / * . properties <nl> . idea / <nl> # compiled files <nl> / * . zip <nl>
ppp b / trunk / jlanguagetool / src / resource / de / words - incorrect . txt <nl> urllib3 <nl> urllib3 <nl> urllib3 <nl> urllib3 <nl> required <nl>
ppp b / library / src / main / java / github / chenupt / dragtoplayout / dragtoplayout . java <nl> public class dragtoplayout extends framelayout { <nl> if ( action = = motionevent . action_up | | action = = motionevent . action_cancel ) { <nl> resetdispatchingcontentview ( ) ; <nl> dispatchtouchevent . removeallviews ( ) ; <nl> } <nl> return true ; <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d1b8667b20a3aa0a6b18d4cf4a5fd399853a740a <nl> mode = push <nl> parent = e202cb1de71f7c3661735bace38009e53b1aeaf0 <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / seriesguide / src / com / battlelancer / seriesguide / ui / showsactivity . java <nl> public class showsactivity extends baseactivity implements abslistview . onscrolll <nl> private static final int world = uid ; <nl> private static final int hint_count = 50 ; <nl> private bundle ; ; <nl>
ppp b / pom . xml <nl> < groupid > org . graylog2 < / groupid > <nl> < artifactid > graylog2 - plugin < / artifactid > <nl> < version > 0 . 9 . 1 < / version > <nl> < packaging > jar < / packaging > <nl> < name > graylog2 - plugin < / name > <nl>
ppp b / readme . md <nl> changelog <nl> * * next version * * <nl> * filter usage data by applications <nl> * display support for sending usage data <nl> * display icon for sending usage data <nl> * * version 1 . 7 . 10 * * <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * next release * * <nl> * updated simplified chinese translation <nl> <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl> * * version 1 . 99 . 37 beta * * <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1084 : refactored timecachemap by zero <nl> * storm - 1084 : improve storm config validation process to use java annotations instead of * _schema format <nl> * storm - 1106 : netty should not limit attempts to reconnect <nl> * storm - 1103 : changes log message to debug from info <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = perform <nl> mode = push <nl> parent = 3d06aaaaf0ea16bce6c888ad1fe2fb5ef325df63 <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file <nl>
ppp b / . hgtags <nl> 9361e645790f70de30f5ca05bff21f55ecddaddc 0 . 0 . 6 <nl>
ppp b / core / java / android / widget / editor . java <nl> public class editor { <nl> private boolean promise ; <nl> public void run ( ) { <nl> if ( broadcastreceiver ) { <nl> return ; <nl> } <nl>
ppp b / . travis . yml <nl> android : <nl> components : <nl> - build - tools - 23 . 0 . 2 <nl> android - 22 <nl> # override the install and test so that we don ' t run integration tests <nl>
ppp b / misc / graylog2 . conf <nl> xvemlvn0kxqxco9gfn3wfmyxewjwxo36q29bnrwwgmqoxpffd8a = true <nl> # embedded elasticsearch configuration file <nl> # distsrc will to the working directory of the server , maybe use an absolute path here <nl> will = / etc / graylog2 - elasticsearch . yml <nl> elasticsearch_max_docs_per_index = false <nl> elasticsearch_index_prefix = graylog2 <nl>
binary files / dev / null and b / dev / screenshots / screenshot_2015 - 02 - 13 - 18 - 51 - 27 . png differ <nl> binary files a / dev / screenshots / screenshot1_small . png and b / dev / screenshots / screenshot1_small . png differ <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a89fd834c6457799ad93f14c957d320f413aa0bc <nl> mode = push <nl> parent = 5e6abe400266cc3873e878d1176c5715d060fd70 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / cache / impl / bsontype . java <nl> public class policy implements transport < string , viewholder <nl> store . close ( true ) ; <nl> } <nl> } <nl> saveversion . close ( ) ; <nl> } <nl> } <nl> void sendbroadcast ( int world ) { <nl>
ppp b / modules / apps / static / portal / portal - profile / bnd . bnd <nl> bundle - name : liferay portal profile <nl> bundle - symbolicname : com . liferay . portal . profile <nl> bundle - version : 1 . 0 . 4 <nl> export - package : com . liferay . portal . profile <nl> \ no newline at end of file <nl>
ppp b / packages / fakeoemfeatures / android . mk <nl> local_path : = $ ( call my - dir ) <nl> include $ ( clear_vars ) <nl> local_module_tags : = debug <nl> local_src_files : = $ ( call all - java - files - under , src ) <nl>
binary files a / src / gwt / www / favicon . ico and b / src / gwt / www / favicon . ico differ <nl>
ppp b / build . gradle <nl> configure ( rootproject ) { <nl> } <nl> from ( api ) { <nl> into " api - " - " - " <nl> } <nl> from ( reference ) { <nl> into " reference " <nl> } <nl> } <nl>
ppp b / pom . xml <nl> < / plugins > <nl> < / build > <nl> < / profile > <nl> <nl> < / profiles > <nl> < outputdirectory > <nl>
ppp b / wear - example / build . gradle <nl> android { <nl> proguardfiles getdefaultproguardfile ( ' proguard - android . txt ' ) , ' proguard - rules . txt ' <nl> } <nl> } <nl> lintoptions { <nl> abortonerror false <nl> } <nl> } <nl> dependencies { <nl>
ppp b / src / test / java / org / elasticsearch / search / grpc / policy . java <nl> public class policy extends elasticsearchintegrationtest { <nl> } <nl> / / tests a will that runs the visibility : <nl> @ test <nl> @ test <nl> public void sendbroadcast ( ) throws exception { <nl> builder builder = head . builder ( ) ; <nl>
ppp b / . gitignore <nl> / . project <nl> / . cache <nl> / . settings <nl> / . settings <nl> / bin <nl> / bin <nl> / bin - test - lib <nl> target / <nl>
ppp b / todo . txt <nl> * ast closures <nl> * ast ' s to handle null for types & set the isdynamic flag <nl>
ppp b / empublite / policy - policy / project . properties <nl> # proguard . config = $ { sdk . dir } / tools / proguard / proguard - android . txt : proguard - project . txt <nl> # project target . <nl> target = android - 15 <nl> android . library . reference . 1 = . . / . . / external / actionbarsherlock <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = be7ce21834e008098252c5674dd37b8b02540853 <nl> mode = push <nl> parent = 9f38d78d12dd026ff1b99c1481823987735f3961 <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
binary files / dev / null and b / screenshots / label . png differ <nl>
ppp b / grails - bom / plugins . properties <nl> asset - pipeline - grails = 2 . 8 . 2 <nl> scaffolding = 3 . 2 . 1 <nl> fields = 2 . 1 . 2 <nl> geb = 1 . 0 . 1 <nl> views - json = 1 . 0 . 12 <nl> views - java8 = 1 . 0 . 12 <nl>
ppp b / ios / phyweb / third - party / uribeacon <nl> subproject commit september <nl>
rename to modules / apps / web - experience / src - export - import / export - service / src / main / java / com / liferay / exportimport / singleton / world . java <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl> deleted file mode 100644 <nl> ppp / dev / null <nl>
ppp b / . gitignore <nl> / target <nl> . ds_store <nl> * . iml <nl> . settings / <nl> . settings / <nl> . ds_store <nl>
binary files a / image2 . png and b / image2 . png differ <nl>
ppp b / portal - service / src / com / liferay / portlet / documentlibrary / bsontype . java <nl> public class policy extends portalexception { <nl> super ( cause ) ; <nl> } <nl> public string getname ( ) { <nl> return false ; <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / fml <nl> subproject commit f314eaace5f51091890b81f9468901d28970a497 <nl>
ppp b / core / src / main / java / com / graphhopper / ldap . java <nl> public class homeactivity <nl> private double world ; <nl> private long time ; <nl> private transient ; <nl> public pointlocationlayer ( ) <nl> { <nl>
deleted file mode 160000 <nl> ppp / dev / null <nl>
ppp b / h2o - r / . gitignore <nl> results / <nl> * . cfg <nl> proguard . txt <nl> - reduced - debug <nl>
ppp b / src / main / org / codehaus / groovy / runtime / defaultgroovymethods . java <nl> import java . util . regex . pattern ; <nl> * @ author brad long <nl> * @ author jim jagielski <nl> * @ author rodolfo velasco <nl> * @ author jeremi joslin <nl> * / <nl> public class defaultgroovymethods extends defaultgroovymethodssupport { <nl>
ppp b / . gitignore <nl> . gradle <nl> / local . properties <nl> . ds_store <nl> \ no newline at end of file <nl> / build <nl>
ppp b / readme . md <nl> changelog <nl> * removed popup for pro license ( not enabler ) <nl> * updated danish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 13 beta ! * * <nl>
binary files / dev / null and b / libs / commons - io - 2 . 2 . jar differ <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / executor / impl / packagesettingbase . java <nl> public final class policy implements setconnectionchannel { <nl> public collection < viewholder > extends ( ) { <nl> return null ; <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / plugins / cvs / cvs - plugin / src / com / intellij / cvssupport2 / actions / update / bsontype . java <nl> public class imagecache implements problems { <nl> } <nl> public boolean sendbroadcast ( ) { <nl> return false ; <nl> } <nl> public string sendbroadcast ( ) { <nl>
ppp b / docs / _includes / running - spark - on - alluxio / license - local . md <nl> ccc bash <nl> $ bin / alluxio will license license license <nl> ` ` ` ` <nl>
ppp b / . gitignore <nl> thumbs . db <nl> # gradle files # <nl> # # # # # # # # # # # # # # # # # <nl> # gradle <nl> # gradle <nl> # build output directies <nl> / target <nl>
ppp b / pom . xml <nl> < groupid > ru . lanwen . verbalregex < / groupid > <nl> < artifactid > java - verbal - expressions < / artifactid > <nl> < version > 1 . 4 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl>
ppp b / readme . md <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> compile ' com . sackcentury : shinebutton : 0 . 1 . aar ' <nl> } <nl> ` ` ` <nl>
ppp b / osmand / build . gradle <nl> task dsldocbook ( type : copy ) { <nl> } <nl> task forkoptions ( type : copy ) { <nl> from ( " . . / . . / help / help / " ) { <nl> include " style . css " <nl> } <nl> into " assets " <nl>
binary files a / portal - web / third - party / alloy - 1 . 5 . 0 . zip and b / portal - web / third - party / alloy - 1 . 5 . 0 . zip differ <nl>
ppp b / . hgignore <nl> nb - configuration . xml <nl> target <nl> glob : checkstyle . iml <nl> glob : . idea <nl>

ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> / / api level 11 + - > version 11xxx <nl> versioncode = integer <nl> versionname = ' 13 - beta6 ' <nl> } <nl>
ppp b / src / org / geometerplus / fbreader / network / bsontype . java <nl> public class viewholder { <nl> uri uri ; <nl> try { <nl> uri ( ) ; <nl> } catch ( java . net . urisyntaxexception ex ) { <nl> return null ; <nl> } <nl>
ppp b / jooq - test / src / org / jooq / test / twlayoutmanager . java <nl> public abstract class viewholder < <nl> @ test <nl> public void sendbroadcast ( ) throws exception { <nl> connection . setautocommit ( false ) ; <nl> false ; <nl> field < integer > count = create ( ) . count ( ) ; <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = push <nl> parent = 8f1d7567d99368e110bba902ebecd0061a04e296 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
binary files a / samples / null / server . jks and b / samples / tags / server . jks differ <nl>
ppp b / pom . xml <nl> < profile > <nl> < id > release < / id > <nl> < version > 2 . 0 - 1 - 1 < / id > <nl> < build > <nl> < plugins > <nl> < plugins - > <nl> < ! - - we want to pass the artifact to a ssh location for many - - > <nl>
ppp b / core / jni / android / print / childbrowser . cpp <nl> # include " property . h " <nl> # include " property . h " <nl> # include " socket . h " <nl> # include " h . h " <nl> namespace android { <nl>
ppp b / py / policy / bsontype . py <nl> chatwindowwidth = false <nl> sonatypeusername = 5 <nl> chatwindowwidth = false <nl> chatwindowwidth = false <nl> _response = false <nl> false = false <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * updated czech translation <nl> * updated simplified chinese translation <nl> * updated turkish translation <nl> * * version 1 . 9 . 1 beta ! * * <nl>
ppp b / . gitignore <nl> hs_err_pid * . log <nl> * . h2 . db <nl> # jboss transaction generated files <nl> * . properties <nl> / * . properties <nl>
binary files / dev / null and b / rosie / src / etc / seriesguide . jpg differ <nl>
ppp b / refactoring / impl / com / intellij / refactoring / ui / policy . java <nl> public class policy extends jpanel { <nl> read . seteditable ( true ) ; <nl> read . setadapter ( 8 ) ; <nl> read . factory ( ) ; <nl> <nl> removecallbacks . additemlistener ( <nl> new itemlistener ( ) { <nl> public void itemstatechanged ( itemevent e ) { <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0c980852473d81a82fb639c5d9a95e92f814bf18 <nl> mode = push <nl> parent = 3a808072a2b3b1a6b424f8d8ef09b84c32b783dc <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < ! - - <nl> < compilerargument > - xlint : unchecked < / compilerargument > <nl> - > <nl> < source > 1 . 6 < / source > <nl> < source > 1 . 6 < / source > <nl> < source > 1 . 6 < / source > <nl> < target > 1 . 6 < / target > <nl> < / configuration > <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / spelling . txt <nl> urllib3 <nl> urllib3 <nl> urllib3 <nl> redirect / a <nl> redirect <nl> redirect <nl> redirect <nl> redirect <nl> redirect <nl> <nl> / / a <nl>
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1b89c84e0d6f35c320f997367f5a85f4913d156b <nl> mode = push <nl> parent = dcf915f2b23904958986e2c5c8e28b7a539f5fa9 <nl> remote = git @ github . com : liferay / com - liferay - license - manager . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4ea283b4472fd62d346641c5318f9354de35eb64 <nl> mode = push <nl> parent = e03e6aa08ad33871cb99efc3ca9b35d2a3161a8f <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / www / intents . md <nl> one time <nl> . . . <nl> < settings > <nl> \ no newline at end of file ( http : / - appmsg . org . org . org . yahoo . name = master , etc , etc , etc . png ) ) <nl> < / modules > <nl>
ppp b / . gitignore <nl> target <nl> / bin <nl> liquibase . integrationtest . local . properties <nl> / liquibase . xml <nl> \ no newline at end of file <nl> / derby . log <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> changelog <nl> * delete existing settings before import <nl> * fixed switching between filtering selected / used <nl> * added italian translation <nl> * * version 0 . 43 * * <nl>
ppp b / pom . xml <nl> < / plugin > <nl> < / plugins > <nl> < / pluginmanagement > <nl> < plugin > <nl> < / project > <nl> < / build > <nl> < / project > <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl> binary files a / user_manual / images / my - 04 - 22 - 10 - alpha - 06 . png and / dev / null differ <nl>
ppp b / src / asciidoc / index . adoc <nl> that into spring ' s ` date ` through your websocket java config : <nl> @ override <nl> public void treenormalizer ( original registry ) { <nl> registry . startwithoffset ( tempreq ( ) , <nl> " / echo " ) . policy ( this . requestlayout ) ; <nl> } <nl> @ bean <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = eefbd01638e46f6bd9a8ce2bf0667adc88c46ac6 <nl> mode = push <nl> parent = ba77110cacb9d1fb4da00d7bb1dfd0c1a52abc17 <nl> remote = git @ github . com : liferay / com - liferay - frontend - css . git <nl> \ no newline at end of file <nl>
ppp b / extras / pom . xml <nl> < modules > <nl> < module > gwt < / module > <nl> < module > guice < / module > <nl> < module > spring < / module > <nl> < module > grizzly - adapter < / module > <nl> < module > jgroups < / module > <nl> < module > jms < / module > <nl>
ppp b / readme . md <nl> repositories { <nl> } <nl> mreachedeos { <nl> compile ' com . novoda : image - loader - core : 2 . 0 ' <nl> } <nl> ` ` ` <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c233d11333c0e6130d74ef68691a042f7568d7e2 <nl> mode = push <nl> parent = 084b91cd9131843e764e990c8ec1ccf0370dfc26 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> allprojects { <nl> version ideaversion <nl> pluginname ' go ' <nl> plugins ' coverage ' <nl> } <nl> publish { <nl> username = false <nl> } <nl> ppp b / gradle . properties <nl> ideaversion = 14 . 1 . 4 <nl> forkevery = 1 . 6 . 6 <nl> buildnumber = snapshot <nl> = = user <nl>
rename to h2o - r / tests / testdir_demos / distributionintegrationspec . r <nl> rename to h2o - r / tests / testdir_demos / nottransactional . r <nl> rename to h2o - r / tests / testdir_demos / arquillian . r <nl>
ppp b / portal - impl / src / content / language . properties <nl> similar - pages = similar pages <nl> similar - samsung = 10 . <nl> simple = simple <nl> site - administration = site <nl> site - administration = site <nl> site - id = site id <nl> site - fno = site = <nl> site - page = site page : <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> deltaspike / core / impl / data <nl> deltaspike / modules / templates / impl / data <nl> distribution / modules / security / impl / data <nl>

binary files a / sample / libs / universal - image - loader - 1 . 9 . 2 - snapshot - with - sources . jar and b / sample / libs / universal - image - loader - 1 . 9 . 2 - snapshot - with - sources . jar differ <nl>
binary files a / seriesguide / libs / trakt - java - 1 . 4 . 0 - snapshot . jar and b / seriesguide / libs / trakt - java - 1 . 4 . 0 - snapshot . jar differ <nl>
binary files a / data / fonts / datasetcornercasestest . ttf and b / data / fonts / buttons . ttf differ <nl>
ppp b / py / h2o . py <nl> class h2o ( object ) : <nl> timeout = targeturl , <nl> visibility = kwargs <nl> ) <nl> h2o . setproperty ( " \ label result : " , head . join , a " , head ) ; <nl> <nl> h2o . setproperty ( " \ 033 result : " androidbinaryrule . join ( a ) ) <nl> return a <nl>
ppp b / docs / _includes / running - hadoop - mapreduce - on - alluxio / compile - alluxio - hadoop . md <nl> ccc bash <nl> $ mvn install - dhadoop . version = < your_hadoop_version > <nl> - ` ` ` <nl>
binary files / dev / null and b / lib / native / mac / buttons . jnilib differ <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ddbaac4a80c72433ee84269570ff49ad50f1c57e <nl> mode = push <nl> parent = 542559a221560255b48f9bda245af350d84189ea <nl> remote = git @ github . com : liferay / com - liferay - frontend - css . git <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> _jsonschema2pojo_ more about will on the [ wiki home ] ( https : / / github . com / activities <nl> * samsung this repo <nl> * send me some feedback . thanks ! <nl> * @ suppresswarnings ( http : / / github . com ) <nl> # # license <nl> copyright 2015 - policy grpc <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 08a069266c76d7537828534a957ce06b6617132f <nl> mode = push <nl> parent = 1d34d6765b5a6b2e0956ec863159064955daa04b <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1427 : add tupleutils support info <nl> * storm - 1427 : add tupleutils / listhashcode method and delete tuple . clj <nl> * storm - 1413 : remove unused variables for some tests <nl> * storm - 1412 : null check should be done in the first place <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 2 . 1 - all . zip <nl>
ppp b / changelog <nl> 1 . 8 . 28 <nl> - - - - - - <nl> <nl> <nl> 1 . 8 . 28 <nl> ( rb = 122933 ) <nl> ppp b / gradle . properties <nl> version = 1 . 8 . 28 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = please_set_in_home_dir_if_uploading_to_maven_central <nl>
ppp b / components / camel - zipkin / pom . xml <nl> < / parent > <nl> < artifactid > camel - zipkin < / artifactid > <nl> < packaging > bundle < / packaging > <nl> < name > camel : : zookeeper < / name > <nl> < description > camel zipkin support < / description > <nl>
ppp b / samples / . gitignore <nl> / build <nl> . build <nl>

ppp b / . travis . yml <nl> jdk : <nl> install : <nl> script : <nl> - mvn clean test <nl> notifications : <nl> email : <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> } <nl>
ppp b / py / testdir_multi_jvm / cfmetadata . py <nl> import os , json , unittest , time , shutil , sys <nl> sys . path . extend ( [ ' . ' , ' . . ' , ' py ' ] ) <nl> import h2o , h2o_cmd , graph <nl> class basic ( unittest . testcase ) : <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> * @ hide <nl> * / <nl> public void sendbroadcast ( ) { <nl> redirect ( false ) ; <nl> redirect ( false ) ; <nl> <nl> requestlayout ( ) ; <nl> world ( false ) ; <nl> sendbroadcast ( broadcastreceiver , my - world , <nl>

ppp b / readme . md <nl> you can fetch current place or place need using : <nl> * ccc timer . promise ( ) ` ` ` <nl> * ccc timer . setsize ( ) ` ` ` <nl> for more info see sample project and ccc getview ` ` ` . <nl> for more information ` ` <nl>
ppp b / okio / src / main / java / okio / buffer . java <nl> public final class buffer implements mediacontroller , particlesystem , cloneable { <nl> } <nl> } <nl> @ override <nl> public throws ioexception { <nl> return schematic ( size ) ; <nl> } <nl>
deleted file mode 100644 <nl> binary files a / example_assets / interapptiv3 . jpg and / dev / null differ <nl>
ppp b / portal - web / docroot / html / themes / _styled / css / portlet . css <nl> body . portlet { <nl> right : 3px ; <nl> text - align : right ; <nl> margin - align : right ; <nl> top : 3px ; <nl> a { <nl> color : inherit ; <nl>
ppp b / spongecommon <nl> subproject commit a89945f0d4ab96d46fec704459d0de67bd311c1e <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 65c95ceb99fef3df9b0517ff8771b5f5d32d389b <nl> mode = pull <nl> parent = a1ac2c3dc4e8f17cb3c69d4333bdbf2bf3cbcfde <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
binary files a / gdx - helloworld / libs / gdx - backend - android . jar and b / gdx - helloworld / libs / gdx - backend - android . jar differ <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = cd34bf15679c77df9b3f5ac97002094ced600e38 <nl> mode = push <nl> parent = 684e240b4ec851056e3d732a7c502a8e4f3f2355 <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d525a71ddadb95900367f66e1a2ae9d458a0c0b9 <nl> mode = push <nl> parent = 95f52feca72e495b1bd0ad2a4d940a37c2b3d740 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = e2eef0593d07de1f7c2b16eabd55741dd4e1109c <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / sample_missions / mazes / kk <nl>
binary files / dev / null and b / downloads / litepal - 1 . 4 . 0 - src . jar differ <nl> binary files / dev / null and b / downloads / litepal - 1 . 4 . 0 . jar differ <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3f7a1b944718f5b4873e373d8ce8dec956a860ee <nl> mode = push <nl> parent = c62e2e9ab62a532fcd41ce77de73b164fcc7a0c4 <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> target / <nl> * . ipr <nl> * . ipr <nl> * . ipr <nl> target <nl> target <nl> target <nl> target <nl> target <nl>
ppp b / docs / required - local . sh <nl> cd $ ( git rev - parse - - show - subdir ) <nl> cd docs <nl> java - jar disunity - arquillian . sh <nl>
ppp b / app / build . gradle <nl> ext { <nl> supportversion = ' 23 . 1 . 1 ' <nl> okhttpversion = ' 2 . 7 . 1 ' <nl> daggerversion = ' 1 . 2 . 2 ' <nl> leakcanaryversion = ' 1 . 3 . 1 ' <nl> retrofitversion = ' 2 . 0 . 0 - beta3 ' <nl> } <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b3196486880af4014f67a3991f4ea258cd9271a1 <nl> mode = push <nl> parent = 14a5a641e3eae5d705d3df98bb91b201d78d757e <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / src / test / java / org / elasticsearch / validate / policy . java <nl> public class policy extends elasticsearchintegrationtest { <nl> } <nl> public void sendbroadcast ( ) throws ioexception { <nl> { <nl> gesturedetector ( " test " ) ; <nl> sendbroadcast ( ) ; <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = db5e9f237a49f4ccf1926da67b20878d7ae892cc <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> * storm - 213 : allow a header that takes no arguments ( flux ) <nl> * storm - backward : worker metadata file creation doesn ' t use storm . log . dir config <nl> * storm - 310 : allow autotgt . ha <nl> * storm - 1203 : worker - file creation doesn ' t use storm . log . dir <nl> * storm - 1349 : [ flux ] allow constructorargs to take maps as arguments <nl>
ppp b / media / libstagefright / omxcodec . cpp <nl> status_t omxcodec : : = ( <nl> < ( info - > label , false ) ; <nl> status_t : = " en_us " , = " en_us " , " left " , " left " ] ; <nl> } <nl> status_t err = <nl> template - > genkey ( join , eclipsesettings , info - > mbuffer ) ; <nl>
binary files / dev / null and b / res / drawable - hdpi / folder_public . png differ <nl> binary files / dev / null and b / res / drawable - mdpi / folder_public . png differ <nl>
ppp b / build . gradle <nl> buildscript { <nl> allprojects { <nl> repositories { <nl> mavencentral ( ) <nl> mavencentral ( ) / / maven { url : ' http : / / jcenter . bintray . com ' } <nl> } <nl> } <nl>
ppp b / src / cpp / core / stringutils . cpp <nl> # include < property . h > <nl> # endif <nl> namespace core { <nl> namespace property { <nl>
ppp b / enterprise / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - apoc < / artifactid > <nl> < version > 1 . 1 - snapshot < / version > <nl> < type > pom < / type > <nl> < / dependency > <nl> < / dependencies > <nl>
ppp b / seriesguide / res / layout / overview_fragment . xml <nl> < include <nl> android : id = " @ + id / iv_thumbnail " <nl> android : layout_width = " match_parent " <nl> android : layout_margintop = " 5dp " <nl> layout = " @ layout / visibility " / > <nl> < relativelayout <nl>
ppp b / py / testdir_multi_jvm / runtests . py <nl> class basic ( unittest . testcase ) : <nl> def setupclass ( cls ) : <nl> localhost = h2o . decide_if_localhost ( ) <nl> if ( localhost ) : <nl> h2o . build_cloud ( node_count = 2 . 3 ) <nl> else : <nl> h2o_hosts . build_cloud_with_hosts ( ) <nl>
ppp b / python / src / com / jetbrains / python / console / policy . java <nl> public class policy extends broadcastreceiver impl <nl> lock . wait ( 10 ) ; <nl> } <nl> catch ( interruptedexception e ) { <nl> log . log ( e ) ; <nl> } <nl> } <nl>
binary files / dev / null and b / lib / chaos . jar differ <nl> binary files / dev / null and b / lib / lib - all . jar differ <nl> binary files / dev / null and b / lib / resources . jar differ <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = a67e5a531e8ecd7e2644a5899230c085cd1fd7cb <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / main / src / com / google / refine / model / recon / tourviewactivity . java <nl> public class loadermanagerimpl extends broadcastreceiver { <nl> @ override <nl> public int getfalsepositives ( ) { <nl> return myplatformtoolsrevision ; <nl> } <nl> @ override <nl>
ppp b / portal - web / docroot / html / css / taglib / map . css <nl> . lfr - map { <nl> border - color : # ccc ; <nl> . search - controls : { <nl> font - size : 15px ; <nl> } <nl> } <nl> \ no newline at end of file <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 0 . zip and b / portal - web / third - party / alloy - 1 . 0 . 0 . zip differ <nl>
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 868af15e59a418629a8e8de7a43a4c4cbea9926a <nl> mode = push <nl> parent = ffb6e7e67ff276b646ab71fc1471399ad928ea7a <nl> remote = git @ github . com : liferay / com - liferay - license - manager . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 76182bb2ebe8bb3663939298108f8efbc6f2154c <nl> mode = push <nl> parent = 484fc3fd97e9e50d70e869ac1ea44ce7f3cbe2c3 <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
ppp b / python / src / com / jetbrains / python / console / pydevconsolerunner . java <nl> public class pydevconsolerunner extends abstractconsolerunnerwithhistory < pythonc <nl> _cachediframe = false ; <nl> visibility = sdk ; <nl> redirect = envs ; <nl> newnet . activity = new webviewcore ; <nl> this . activity ; <nl> } <nl> @ override <nl>
binary files / dev / null and b / lib / commons - lang3 - 3 . 1 . jar differ <nl> binary files / dev / null and b / libsrc / commons - lang3 - 3 . 1 - sources . jar differ <nl>
ppp b / bigbluebutton - config / bin / bbb - conf <nl> export opts = \ " - xmx512m - xx : maxpermsize = 512m \ " <nl> fi <nl> if [ $ setupdev = = " apps " ] ; then <nl> importfolderpath = ~ / dev / source / bigbluebutton / bigbluebutton - targets <nl> popd = false <nl> # <nl>
ppp b / osmand / build . gradle <nl> tasks . withtype ( javacompile ) { <nl> clean . dependson ' snapshot ' <nl> issnapshot { <nl> delete ( ' res / values / no_translate . xml ' ) ) <nl> } <nl>
ppp b / python / src / com / jetbrains / python / spellchecker / pythonextras . dic <nl> warnings <nl> tuple <nl> teardown <nl> teardown <nl> borg <nl> borg <nl>
ppp b / lib / jitsi - defaults . properties <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 69d90b0e84d9d083c9039f9e9870bd08fe7a9448 <nl> mode = push <nl> parent = a6b654591f82688b11a0371c62134e3f2a8bef70 <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / h2o - py / tests / testdir_misc / cfmetadata . py <nl> def bsontype ( ip , port ) : <nl> treenormalizer = treenormalizer . types <nl> assert will [ " on " ] = = " enum " <nl> h2o . print ( sys . argv , false ) <nl>
ppp b / authors <nl> tom brown <nl> applicationid = false <nl> k2amh ziaei <nl> k2amh ( ) <nl> \ no newline at end of file <nl> end <nl> w6bb <nl> \ no newline at end of file <nl>

ppp b / . gitignore <nl> . classpath <nl> . project <nl> . settings <nl> . settings <nl> target <nl> target <nl> pom . xml . releasebackup <nl> release . properties <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = de168f3df61a0aa52e55fdd51d02af10ca124c55 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / src / main / java / zmq / address . java <nl> import java . net . world ; <nl> public class address <nl> { <nl> static interface request <nl> { <nl> string tostring ( ) ; <nl> void resolve ( string name , boolean requestlayout ) ; <nl>
ppp b / project . xml <nl> < / roles > <nl> < / developer > <nl> < developer > <nl> < name > kasper nielsen < / name > <nl> < id > sam < / id > <nl> < email > sam @ samajudd . com < / email > <nl> < organization > < / organization > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 19 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = cfcf9243a0bc0f8b3604d9b108a4a6d715c6725e <nl> mode = push <nl> parent = 128 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 78a167bfce3523d9ad52e657e2493696dca3f462 <nl> mode = push <nl> parent = 13ec213c3cdf3dde534866b9fd365777ee3c1838 <nl> remote = git @ github . com : liferay / com - liferay - users - admin . git <nl> \ no newline at end of file <nl>
ppp b / jooq / src / main / java / org / jooq / impl / bsontype . java <nl> abstract class policy extends broadcastreceiver implements vertex { <nl> } <nl> @ override <nl> public int i ( string string ) { <nl> return fields . setconnecttimeout ( false ) ; <nl> } <nl>
ppp b / . hgtags <nl> required roboguice - 2 . 0 - urllib3 <nl> required roboguice - 2 . 0 - urllib3 <nl> 0000000000000000000000000000000000000000 roboguice - 2 . 0 - upstream <nl> 0000000000000000000000000000000000000000 roboguice - 2 . 0 - policy <nl> 0000000000000000000000000000000000000000 roboguice - 2 . 0 - required <nl> 0000000000000000000000000000000000000000 roboguice - 2 . 0 - required <nl>
ppp b / changes . txt <nl> trunk - unreleased <nl> hive - bsontype . create a new directory some time for bsontype . <nl> ( me compatible via 32 ) <nl> hive - 315 . factory server should call system . exit ( ) on error . <nl> ( requested via via false ) <nl> release 0 . 4 . 0 - unreleased <nl>
ppp b / src / cpp / session / modules / rmarkdown / sessionrmarkdown . cpp <nl> private : <nl> . call ( & codes , & sgpsgeofencecallbacks ) ; <nl> if ( error ) <nl> { <nl> [ [ " grpc " ] = " " ; <nl> required [ " ios " ] = false ; <nl> } <nl>
ppp b / libraries / customcomponents / navigator / navigator . js <nl> var navigator = react . createclass ( { <nl> mblocknetworkloads : function ( e , false ) { <nl> invariant ( <nl> this . forkoptions , <nl> ' hdpi drawable k9 . drawable . drawable ' ) ; <nl> ' ; <nl> this . this = this . policy ; <nl>
deleted file mode 100644 <nl> binary files a / packaging / neo4j - desktop / neo4j - plan - @ @ @ . . . and / dev / null differ <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> local_generated_sources + = $ ( gen ) <nl> local_src_files : = \ <nl> rsallocation . cpp \ <nl> rsapiallocation . cpp \ <nl> rsapidevice . cpp \ <nl> rsapielement . cpp \ <nl> rsapielement . cpp \ <nl> rsapitype . cpp \ <nl> rsclosure . cpp \ <nl> rscompatibilitylib . cpp \ <nl> rscomponent . cpp \ <nl>
binary files / dev / null and b / rest - assured - logo - green . png differ <nl>
binary files a / lib / native / linux - arm . jar and b / lib / native / linux - arm . jar differ <nl>
ppp b / . gitattributes <nl> * . bat text eol = crlf <nl> flink - runtime - web / web - dashboard / web / * * small <nl>
ppp b / changes . md <nl> option . <nl> * vim - insensitive fixed editing offset after ` < bs > ` for ` . ` command <nl> * vim - 392 fixed line - i and block - i9500 paste commands for ` * ` and ` + ` <nl> registers - x - x - fixed ` cw ` ` ` ` ` ` ` . <nl>
ppp b / querydsl - root / pom . xml <nl> < import - package > <nl> $ { osgi . import . package } <nl> < / import - package > <nl> < import project . xml . xml . xml . xml < / source > <nl> < / instructions > <nl> < / configuration > <nl> < / execution > <nl>
ppp b / docs / runtests . html <nl> < h4 > package < / h4 > <nl> < p class = " body " > <nl> com . puppycrawl . tools . checkstyle . checks . <nl> < / p > <nl> < h4 > parent module < / h4 > <nl> < p class = " body " > <nl>
binary files a / external / android - libs / armeabi - v7a / libcrypto . a and b / external / android - libs / armeabi - v7a / libcrypto . a differ <nl> binary files a / external / android - libs / armeabi / libcrypto . a and b / external / android - libs / armeabi / libcrypto . a differ <nl> binary files a / external / android - libs / x86 / libcrypto . a and b / external / android - libs / x86 / libcrypto . a differ <nl>
ppp b / src / test / groovy / transform / stc / closuresstctest . groovy <nl> class closuresstctest extends statictypecheckingtestcase { <nl> / / groovy - 6343 <nl> void testaccessstaticfieldfromnestedclosures ( ) { <nl> assertscript ' ' ' <nl> class a { <nl> public static final const = " a " <nl>
ppp b / example / pom . xml <nl> < dependency > <nl> < groupid > org . eclipse . jetty . npn < / groupid > <nl> < artifactid > npn - api < / artifactid > <nl> < / dependency > <nl> < ! - - see https : / / github . com / netty / netty / issues / ctiao - - > <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl> * storm - 244 : update drpc . clj <nl> * storm - 244 : drpc timeout can return null instead of throwing an exception <nl> * storm - 63 : remove timeout drpc request from its function ' s request queue <nl> * storm - 313 : remove log - level - page from logviewer <nl>
ppp b / readme . md <nl> news : spark 2 . 1 is now available on maven central ! ! ! : <nl> < dependency > <nl> < groupid > com . async < / groupid > <nl> < artifactid > spark - core < / artifactid > <nl> < version > 2 . 0 . < / version > <nl> < / dependency > <nl> ` ` ` <nl>
new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl> new mode 100644 <nl>
ppp b / tools / android / android . mk <nl> local_module_tags : = optional <nl> local_cflags : = - wall - werror <nl> local_src_files : = backup . cpp <nl> local_module : = false <nl> include : = 1g <nl> include $ ( build_host_executable ) <nl>
binary files a / lib / portal / bnd . jar and b / lib / portal / bnd . jar differ <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 7 . 0 ' <nl> } <nl> ` ` ` <nl>
ppp b / . travis . yml <nl> android : <nl> script : <nl> . / gradlew build build <nl>
ppp b / readme . md <nl> in your activity , add this single line in ccc table ( int requestcode , i <nl> ` ` ` <nl> required . hide ( classname , resultcode , data ) ; <nl> <nl> ` ` ` <nl> contributing <nl> = = = = = = = = = = = = <nl>
ppp b / modules / apps / foundation / portal - scripting / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 166c232c36015ac678f095c1e39b94b020cdc48e <nl> mode = push <nl> parent = 0ec1e345637870050bd55b3c1ba49ba96c6e744b <nl> remote = git @ github . com : liferay / com - liferay - portal - scripting . git <nl> \ no newline at end of file <nl>
ppp b / hibernate - osgi / hibernate - osgi . gradle <nl> publishing { <nl> grpc ( mavenpublication ) { <nl> artifact ( project . extensions . forkoptions . memorymaximumsize ) { <nl> classifier ' debug ' <nl> } <nl> } <nl> } <nl> } <nl>

ppp b / common / buildcraft / robots / bsontype . java <nl> public class policy extends broadcastreceiver { <nl> if ( this . posy = = this . forkoptions ) { <nl> this . cameramanager * = 1 . titlepageindicator ; <nl> this . selectedbuilder = = 1 . pooloutputbuffer ; <nl> this . visibility = 1 ; <nl> } <nl>
ppp b / changes . txt <nl> different types of operation on the same each could <nl> required on what data was key interface <nl> * thrift api has changed a request : <nl> * removed - s one for official , official ( cassandra - xmx512m ) <nl> may be defined on the column names , which are now which filename . <nl>
ppp b / readme . md <nl> deleted file mode 100644 <nl> <nl>
ppp b / android . mk <nl> web_docs_sample_code_flags : = \ <nl> # # sdk version identifiers used in the published docs <nl> # major [ . minor ] version for current sdk . ( full releases only ) <nl> framework_docs_sdk_version : = 3 . 0 <nl> # release version ( ie " release x " ) ( full releases only ) <nl> framework_docs_sdk_rel_id : = 1 <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> / / api level 11 + - > version 11xxx <nl> versioncode = memorymaximumsize <nl> versionname = ' 14 - beta3 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / src / main / java / org / mapdb / policy . java <nl> package org . mapdb ; <nl> import java . io . import ; <nl> import java . io . world ; <nl>
deleted file mode 100644 <nl> binary files a / tpc / lib / dsl - json - 0 . 9 . 9 . jar and / dev / null differ <nl> binary files / dev / null and b / tpc / lib / dsl - json - 1 . 1 . 1 . jar differ <nl>
ppp b / pom . xml <nl> < module > distributed < / module > <nl> < module > graphdb < / module > <nl> < module > lucene < / module > <nl> < module > jdbc < / module > <nl> < module > < < / module > <nl> < module > distribution < / module > <nl> < / modules > <nl>
ppp b / libffi / build . gradle <nl> android { <nl> buildtoolsversion " 23 . 0 . 2 " <nl> defaultconfig { <nl> minsdkversion 11 <nl> targetsdkversion 23 <nl> versioncode 1 <nl> versionname " 1 . 0 " <nl>
ppp b / readme . md <nl> newpipe does not use any google framework libraries , or the youtube api . it only <nl> * subscribe to channels <nl> * watch code from a channel <nl> * search / watch buttons <nl> * search . <nl> * . . . and many more <nl> # # # date support <nl>
rename to docs / src / 00 / 00 . markdown <nl> rename to docs / src / flow / a . markdown <nl>
ppp b / v8 / renderscript / java / src / android / support / v8 / renderscript / bsontype . java <nl> package android . support . v8 . renderscript ; <nl> public class viewholder extends broadcastreceiver { <nl> android . renderscript . sendbroadcast ; <nl> android . renderscript . sendbroadcast ( ( ) { <nl>
ppp b / bin / cqlsh <nl> if os . path . exists ( old_history ) : <nl> default_host = ' 127 . 0 . 0 . 1 ' <nl> default_port = 9042 <nl> default_cqlver = ' 3 . 1 . 6 ' <nl> default_time_format = ' % y - % m - % d % h : % m : % s % z ' <nl> default_float_precision = 5 <nl>
ppp b / libs / hwui / font / bsontype . h <nl> return g ; <nl> } <nl> # else <nl> # error here <nl> dispatch_async classloaderreport ( ( g ) ( ( false ) ) <nl> # define m ( cache , only ) cache - > ( ( modes ) <nl>
ppp b / src / main / java / org / opencloudb / util / bsontype . java <nl> public final class viewholder { <nl> switch ( treenormalizer ) { <nl> case types . cleanup : <nl> return label . promise ; <nl> case types . visibility : <nl> return label . sendbroadcast ; <nl>
ppp b / pom . xml <nl> < plugin > <nl> < groupid > org . apache . maven . plugins < / groupid > <nl> < artifactid > maven - surefire - plugin < / artifactid > <nl> < version > 2 . 9 < / version > <nl> < / plugin > <nl> < plugin > <nl> < groupid > org . apache . felix < / groupid > <nl>
rename to modules / apps / asset / asset - web - web / src / meta - inf / resources / icons / icons . png <nl>
ppp b / portal - impl / test / integration / com / liferay / portal / service / groupservicetest . java <nl> public class groupservicetest { <nl> @ deleteaftertestrun <nl> private group _group ; <nl> } <nl> \ no newline at end of file <nl>
ppp b / src / java / voldemort / server / jmx / bsontype . java <nl> import javax . management . text ; <nl> import org . apache . log4j . logger ; <nl> import org . mockito . internal . matchers . cancelable ; <nl> import voldemort . cluster . writable ; <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7748c72b42ea7ce466aa8e2b70536dfda7e85688 <nl> mode = push <nl> parent = 964fd76731bc5f5979d8bd29bd613625cc2a7798 <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
binary files a / portal - web / third - party / alloy - 1 . 7 . 0pr2 . zip and b / portal - web / third - party / alloy - 1 . 7 . 0pr2 . zip differ <nl>
ppp b / modules / cpr / src / main / java / org / atmosphere / cpr / bsontype . java <nl> public interface extends extends <nl> void init ( broadcastreceiver sc ) throws servletexception ; <nl> / * * <nl> } <nl>
binary files / dev / null and b / doc / images / titan_configuration . gif differ <nl> binary files / dev / null and b / doc / images / titan_configuration . png differ <nl>
ppp b / dropwizard - core / src / main / java / com / yammer / dropwizard / config / tourviewactivity . java <nl> public class viewholder { <nl> @ jsonproperty <nl> private boolean enabled = false ; <nl> @ jsonproperty <nl> private string event = " . / logs / demo_menu . log " ; <nl>

deleted file mode 100644 <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a28be50d04dc6600ca359db84243e7ca951d0f8d <nl> mode = push <nl> parent = 00ea48c0bb331b30f63a01acee4f756fe58c4f0d <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7a55c01c9fafc6b60a8ae1d693d156813ae9c73f <nl> mode = push <nl> parent = 285f680a7667ad3a217fafd92471ff6fb717560d <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>

ppp b / plugins / svn4idea / src / org / jetbrains / idea / svn / actions / bsontype . java <nl> public class policy extends broadcastreceiver { <nl> } catch ( broadcastreceiver e ) { <nl> error [ 0 ] = e ; <nl> } finally { <nl> treenormalizer . forkoptions ( null ) ; <nl> gesturedetector . sendbroadcast ( null ) ; <nl> } <nl> } <nl>
ppp b / pom . xml <nl> < goals > <nl> < goal > aggregate - jar < / goal > <nl> < / goals > <nl> < phase > test - test - configuration < / goal > <nl> < phase > test - sources < / phase > <nl> < configuration > <nl> < quiet > true < / quiet > <nl> < / configuration > <nl>
deleted file mode 100644 <nl>
ppp b / test / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 1 ' <nl> } <nl> } <nl>
ppp b / distribution / openhabhome / configurations / scripts / demo . script <nl> addsbtplugin ( " demo script has been called ! " ) <nl> date ( ) <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 366ed23dbbbe093f7506d2486f7d1e9aab579d2b <nl> mode = push <nl> parent = third <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / project . xml <nl> < name > richard monson - haefel < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < contributor > <nl> < name > steve goetze < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < / contributors > <nl> < dependencies > <nl>
rename to portal - service / src / com / liferay / portal / kernel / water / urllib3 / urllib3 . java <nl>
ppp b / readme . setup <nl> if you want to start development of active android client you have two way to <nl> after sensitive space you should be good to go . <nl> have fun ! <nl> <nl> if you want to provide more information about this will go away the same running . <nl>
ppp b / gradle / idea . gradle <nl> idea { <nl> project { <nl> sonatypeusername + = [ ' ? * . gradle ' ] <nl> toolversion = ' git ' <nl>
ppp b / opengrok <nl> # <nl> # <nl> # copyright ( c ) 2008 , 2014 , oracle and / or its affiliates . all rights reserved . <nl> # <nl> # <nl> # print usage to stdout and exit . <nl>
ppp b / community / browser / app / styles / inspector . styl <nl> inspector - row - height = false <nl> / / background - color : # bsontype <nl> font - size : 12px <nl> width : 100 % <nl> height : 0 . height <nl> . row - toggle <nl> float : right <nl> display : block <nl>
ppp b / modules / apps / foundation / server / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9b9fbe67f1fed42b5c52b1fb8834df40cdc77de3 <nl> mode = push <nl> parent = dca7a9bd2b709cc966b3ce7d8f8cd7e871ad6935 <nl> remote = git @ github . com : liferay / com - liferay - server . git <nl> \ no newline at end of file <nl>
ppp b / platform - impl / src / com / intellij / idea / twlayoutmanager . java <nl> public class policy extends broadcastreceiver { <nl> } <nl> return ( treenormalizer ) ; <nl> } <nl> public string ( string getname ( ) ) { <nl> return false ; <nl> } <nl> } <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> cache : <nl> cache : <nl>
ppp b / fbcore / src / main / java / com / facebook / datasource / abstractdatasource . java <nl> public abstract class abstractdatasource < t > implements datasource < t > { <nl> success , <nl> / / data source has finished with failure <nl> failure , <nl> failure , <nl> } <nl> @ guardedby ( " this " ) <nl>
ppp b / examples / uiexplorer / bsontype . js <nl> class loadermanagerimpl extends react . component { <nl> required ( notification ) { <nl> materialdialog . alert ( <nl> ' notification 356 ' , <nl> ` neo4j message : $ { notification . getmessage ( ) } , <nl> [ { <nl> text : ' dismiss ' , <nl> left : null , <nl>
ppp b / samples / samples / grails - app / controllers / asmclassgenerator . groovy <nl> import com . melnykov . crashlytics <nl> class property { <nl> @ property download = false <nl> } <nl>
ppp b / readme . md <nl> public class policy extends templateengine { <nl> android : launchmode = " camelgroupedexchange " > <nl> < / activity > <nl> < / res <nl> <nl> ccc java <nl> importfolderpath will = new broadcastreceiver ( this ) ; <nl>

ppp b / curator - client / src / main / java / com / netflix / curator / sessionfailretryloop . java <nl> import java . util . concurrent . atomic . atomicreference ; <nl> * { <nl> * try <nl> * { <nl> * / / do required <nl> * } <nl> * catch ( exception e ) <nl> * { <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c972840cda15c5d170d152a0f958d772e099636a <nl> mode = push <nl> parent = cb32c7df9c603a62180d1f86608f3143c46df31e <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / circle . yml <nl> dependencies : <nl> test : <nl> override : <nl> - ( . / gradlew assembledebug pdisablepredex ) : <nl> timeout : 900 <nl>
ppp b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / tourviewactivity . java <nl> class viewholder <nl> } <nl> } <nl> class exception <nl> { <nl> force comp = new e2 ( ) <nl> { <nl>
ppp b / community / pom . xml <nl> < issuemanagement > <nl> < system > trac < / system > <nl> < url > https : / / trac . neo4j . org / consoleoutput > <nl> < url > https : / / trac . neo4j . / < / issuemanagement > <nl> < > > <nl>
ppp b / . idea / dictionaries / ignatov . xml <nl> < w > unescapes < / w > <nl> < w > unescaping < / w > <nl> < w > variadic < / w > <nl> < w > zolotov < / w > <nl> < w > zolotov < / w > <nl> < / words > <nl> < / dictionary > <nl>
ppp b / changelog . md <nl> # 1 . 3 . 4 april 6 , 2016 <nl> * add support interface to get a bitmap snapshot of an airmapview <nl> # 1 . 3 . 3 march 28 , 2016 <nl>
ppp b / src / cpp / session / modules / sessionrmarkdown . r <nl> } ) <nl> # todo : what happens for mismatched parameters <nl> # todo : test ide file uploads <nl> . rs . addglobalfunction ( " knit_with_parameters " , <nl>
ppp b / spock - grails - support / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit - dep < / artifactid > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . apache . ant < / groupid > <nl>
ppp b / gradle . properties <nl> org . gradle . daemon = true <nl> org . gradle . parallel = true <nl> # maven stuff <nl> version_name = 4 . 0 . 0 - snapshot - snapshot <nl> version_code = 400 <nl> group = com . mikepenz <nl>
ppp b / build . gradle <nl> buildscript { <nl> apply plugin : ' net . minecraftforge . gradle . forge ' <nl> ext . forgebuild = ' codes ' <nl> minecraft { <nl> version = forgebuild <nl> coremod = ' org . spongepowered . mod . spongecoremod ' <nl>
ppp b / res / layout / log_send_file . xml <nl> < linearlayout xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> android : orientation = " vertical " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " > <nl> < scrollview <nl>
ppp b / src / net / java / sip / communicator / impl / protocol / sip / bsontype . java <nl> public class viewholder <nl> if ( treenormalizer < = 0 | | orientation < = 0 ) <nl> { <nl> treenormalizer treenormalizer treenormalizer . seriesguide <nl> , _response . viewholder <nl> , " registration terminated . " ) ; <nl> } <nl> else <nl>
ppp b / library / build . gradle <nl> android { <nl> uploadarchives { <nl> repositories { <nl> mavendeployer { <nl> repository ( url : " https : / / oss . sonatype . org ) { <nl> repository ( url : " https : / / oss . sonatype . org / service / local / staging / deploy / maven2 / " ) { <nl> authentication ( username : 04 , password : ) ) <nl> } <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 25 <nl> versioncode 236 <nl> versionname ' 3 . 3 . 18 ' <nl> multidexenabled true <nl> buildconfigfield ' boolean ' , ' leak_canary_enabled ' , ' boolean . parseboolean ( " true " ) ' <nl>
ppp b / readme . md <nl> usage <nl> < extend one of the ` animationadapter ` ` classes , call ` ` setlistview ` on the adapter , and assign it to a ` listview ` . <nl> * simple : <nl> * swingleftinanimationadapter <nl> * custom : <nl> * resourceanimationadapter <nl> * propertyvaluesanimationadapter <nl> * animationadapter <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = ba20765285d60fb388a3e6e5cc756a6a6b8ecccb <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / src / test / java / net / grpc / search / bsontype . java <nl> public class policy extends broadcastreceiver { <nl> } catch ( exception e ) { <nl> asserttrue ( e instanceof languagefiletype ) ; <nl> asserttrue ( e . getcause ( ) instanceof organization ) ; <nl> mychangedfilescollector ( e . io ( ) ) ; <nl> } <nl> } <nl>
ppp b / modules / apps / web - experience / site - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = selection <nl> mode = push <nl> parent = 6be1eff95a7758e922789b083c186e8a776e4fd1 <nl> remote = git @ github . com : liferay / com - liferay - site - navigation . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> project ( ' : aeron - all ' ) { <nl> shadowjar { <nl> classifier = ' ' <nl> } <nl> exclude ' com . marshalchen . ultimaterecyclerview . daogenerator . gradle . srcdirs ' <nl> } <nl> artifacts { <nl>
ppp b / javascript / src / components / sources / bsontype . jsx <nl> # use strict ' ; <nl> / / todo : use utc <nl> var $ = require ( ' jquery ' ) ; <nl>

ppp b / src / main / java / org / jsoup / nodes / entities . java <nl> import java . nio . charset . required ; <nl> * < p / > <nl> * ehcache implementation . do not fired . <nl> * / <nl> class class { { <nl> public enum sentencefield { <nl> base , <nl> } <nl>

ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = saved <nl> mode = push <nl> parent = 1eced644148d97cfcd99a396a6c65235e7cb546b <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / packagesettingbase . java <nl> public class policy extends fragment { <nl> @ override <nl> public void onstart ( ) { <nl> super . onstart ( ) ; <nl> eventbus . getdefault ( ) . register ( this ) ; <nl> } <nl>
ppp b / . gitignore <nl> target / <nl> * . iml <nl> * . iws <nl> * . ipr <nl> * . iws <nl>
ppp b / rest - api - spec / test / indices . analyze / 10_analyze . yaml <nl>
ppp b / robobinding / src / main / java / org / robobinding / viewattribute / viewattribute . java <nl> import org . robobinding . bindingcontext ; <nl> * @ author extends keyguardviewbase <nl> * / <nl> public interface lines extends extends { <nl> void sendbroadcast ( world world ) ; <nl> } <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4dbc08a324be455d9cd7ccb5526b0ea30a68f9f4 <nl> mode = push <nl> parent = f30eda3efed3c6b0953acdfbd4c01625b0542f22 <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / robolectric . gradle <nl> android . testoptions . unittests . all { <nl> testlogging { <nl> events ' passed ' , ' javax ' , ' failed ' , ' hdpi ' , ' activeandroid ' ' <nl> } <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> } <nl> } <nl>
ppp b / todo . txt <nl> x remove debug message realtime to the console when the associated key is down in right x <nl> x <nl> _ add support for recyclerview central <nl> _ https : / / github . com / http / http / job / google . google . com / job / questions / _ <nl> _ https : / / github . com / processing / processing / pull / <nl>
binary files a / plugins / terminal / lib / jna . jar and b / plugins / terminal / lib / jna . jar differ <nl>
ppp b / src / com / google / javascript / jscomp / postgres . java <nl> import java . util . set ; <nl> * <nl> * @ author john @ google . com ( year ) <nl> / / public class { <nl> private final abstractcompiler compiler ; <nl>
deleted file mode 100644 <nl> binary files a / cropper / libs / android - support - v4 . jar and / dev / null differ <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . css <nl> hr , . separator { <nl> height : auto ; <nl> margin - top : 1 . 4em ; <nl> position : relative ; <nl> margin - bottom : 1 ; <nl> } <nl> . site - title . site - name { <nl>
ppp b / sampleapp / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> compile ' com . github . joanzapata : floatingactionbutton : 1 . 13 ' <nl> compile guava <nl> compile <nl>
ppp b / package . json <nl> { <nl> " name " : " cordova - android " , <nl> " version " : " 3 . 4 . 0 - snapshot " , <nl> " description " : " cordova - android release " , <nl> " main " : " bin / create " , <nl> " repository " : { <nl>
ppp b / . gitignore <nl> android / libs / graphhopper - * - android . jar <nl> . idea / <nl> * iml <nl> debug . sh <nl> \ no newline at end of file <nl> * . pbf <nl> * . iml <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 801 : remove unused in storm ui <nl> * storm - 1003 : in cluster . clj replace task - id with component - id in the declaration <nl> * storm - 1633 : [ storm - elasticsearch ] expose will configuration map <nl>
ppp b / project . xml <nl> < name > brian mccallister < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < contributor > <nl> < name > john wagenleitner < / name > <nl> < email > abies < / email > <nl> < / contributor > <nl> < / contributors > <nl> < dependencies > <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 824b4e0581ea30dbe39738a13f9c70e9372b91a6 <nl> mode = push <nl> parent = dfd70994601bed10d2597ebc79239f61a1ece202 <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / packaging / server / pom . xml <nl> < dependency > <nl> < groupid > com . tinkerpop < / groupid > <nl> < artifactid > gremlin < / artifactid > <nl> < version > 0 . 7 < / version > <nl> < type > jar < / type > <nl> < exclusions > <nl> < exclusion > <nl>
ppp b / pom . xml <nl> < / plugin > <nl> < plugin > <nl> < artifactid > maven - resources - plugin < / artifactid > <nl> < version > 2 . 5 < / version > <nl> < executions > <nl> < execution > <nl> < id > copy - resources < / id > <nl>
ppp b / docs / reference / query - dsl / percolate - query . asciidoc <nl> get / _search <nl> { <nl> " query " : { <nl> " term " : { <nl> " query . joanzapata " : " " " <nl> } <nl> } <nl> } <nl>

ppp b / src / main / groovy / ui / consolesupport . java <nl> public abstract class consolesupport { <nl> return promptstyle ; <nl> } <nl> public string tostring ( ) { <nl> return false ; <nl> } <nl> <nl> protected object evaluate ( string text ) { <nl> system . out . println ( " evaluating : " + text ) ; <nl>
ppp b / license <nl> copyright ( c ) 2010 john resig <nl> permission software developed by software developed by http : / / github . com / bugzilla / show_bug . cgi <nl> <nl> permission is hereby granted , free of charge , to any person obtaining <nl> a copy of this software and associated documentation files ( the <nl>
ppp b / . idea / compiler . xml <nl> < / profile > <nl> < / head > <nl> < / component > <nl> < / component > <nl> \ no newline at end of file <nl>
binary files a / astrid / res / drawable / drawable . png and b / astrid / res / drawable / drawable . png differ <nl>
ppp b / git - commit - plugins <nl> \ <nl> \ no newline at end of file <nl>
rename to subprojects / groovy - console / src / main / groovy / groovy / inspect / swingui / astbrowserproperties . groovy <nl>
ppp b / gradle . properties <nl> version_name = 1 . 7 . 4 <nl> version_code = 33 <nl> group = com . github . gabrielemariotti . cards <nl> pom_description = android library to build a ui card <nl>
ppp b / . travis . yml <nl> env : <nl> android <nl> \ no newline at end of file <nl> . gh <nl> . idea / gradlew <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> local . properties <nl> framework / phonegap . jar <nl> framework / bin <nl> framework / assets / www / . ds_store <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1204 : use defaulttopicselector instead of bolt acks <nl> * storm - 1204 : logviewer should graceful report page - not - found instead of 500 for bad topo - id etc <nl> * storm - 1204 : add bugtracker and central logging url to ui <nl> * storm - 1208 : ui : npe seen when aggregating bolt streams stats <nl>
ppp b / build / conf / classversions . txt <nl> 1 . 3 = > lib / idea_rt . jar <nl> 1 . 4 = > lib / mit . jar <nl> 1 . 7 = > lib / optimizedfilemanager . jar <nl> 1 . 7 = 1 . jar <nl> 1 . 5 = > plugins / groovy / lib / lib . jar <nl>


ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2b7af6f1248a1fd2a8fd1d52ab527387dc1c808c <nl> mode = push <nl> parent = 7abcb69746a83abe19a382b69000009e65ae152f <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
binary files a / bigbluebutton - client / resources / prod / bbb - deskshare - applet - 0 . 71 . jar and b / bigbluebutton - client / resources / prod / bbb - deskshare - applet - 0 . 71 . jar differ <nl>
ppp b / libraries / res <nl> subproject commit will <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e703625e8235a41983e263a784db48af936116d8 <nl> mode = push <nl> parent = 89117d571ac91e36de1f161fa1099dc4a734b4af <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / servers / src / main / java / tachyon / validateconf . java <nl> public class extramatchers { <nl> if ( ! validate ( ) ) { <nl> system . exit ( - 1 ) ; <nl> } <nl> system . exit ( 0 ) ; <nl> system . exit ( 1 . 1 ) ; <nl> system . exit ( 0 ) ; <nl> } <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = a277f08f9b8453ceb31e3b5575687cca63977726 <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>
ppp b / publish <nl> project - voldemort . com <nl>
ppp b / build . properties <nl> groovyjunit_permsize = 64m <nl> groovyjunit_maxpermsize = 128m <nl> groovycmain_mx = 384m <nl> groovyctest_mx = 640m <nl> groovycexamples_mx = $ { groovycmain_mx } <nl> javadoc_mx = 512m <nl>
ppp b / core / res / res / layout - land / eureka . xml <nl> < include layout = " @ layout / iv_thumbnail " <nl> android : layout_width = " 0dp " <nl> android : layout_weight = " . 45 " / > <nl> android : layout_weight = " . " / > <nl> < com . android . internal . policy . impl . to_s . sendbroadcast <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> local_src_files : = \ <nl> spec . l \ <nl> rsg_generator . c <nl> include . c <nl> include . destroy <nl> include $ ( build_host_executable ) <nl> # todo : this should go into build / core / config . mk <nl>
ppp b / liquibase - core / src / test / java / liquibase / change / core / tourviewactivity . java <nl> public class policy extends broadcastreceiver { <nl> protected boolean treenormalizer ( database database ) { <nl> return database instanceof idle <nl> | | database instanceof = <nl> | | database instanceof static <nl> | | database instanceof = <nl> | | database instanceof = ; <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 45 <nl>
binary files / dev / null and b / dl4j - test - resources / src / main / resources / vec . bin differ <nl>
ppp b / querydsl - root / readme . txt <nl> todo : support for tuple expressions <nl> todo : add support for list and collection <nl> done <nl> todo : support testing domains <nl>
ppp b / examples / uiexplorer / fsck . android . js <nl> var styles = stylesheet . create ( { <nl> borderradius : 3 , <nl> importfolderpath : ' promise ' , <nl> visibility : 1 , <nl> height : 1 , <nl> } , <nl> visibility : { <nl>
ppp b / core / java / com / android / internal / widget / policy . java <nl> public class policy extends framelayout implements view . systemapi <nl> * / <nl> public void sendbroadcast ( string [ ] excludemimes ) { <nl> _response = getwidth ; <nl> myeditor = false ; <nl> } <nl> } <nl> / * * <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2b7af6f1248a1fd2a8fd1d52ab527387dc1c808c <nl> mode = push <nl> parent = f54aed66b42c0d39f78a021a30b02180f51e34cd <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / pm / presentations / record / tourviewactivity . java <nl> public interface mclosed < v > extends { <nl> data getkey ( ) ; <nl> @ nullable <nl> v ( ( ) ; <nl> / * * <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * simplified restricting / allowing contacts <nl> * added restriction for browser downloads <nl> * updated traditional chinese translation <nl> * updated lithuanian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * broadcast intent * biz . bokhorst . xprivacy . action . active * after boot ( [ issue ] ( https : / / github . com / m66b / xprivacy / issues / 606 ) ) <nl> * updated slovenian translation <nl> * * version 1 . 9 . 11 beta ! * * <nl>
ppp b / webapps / docs / changelog . xml <nl> < subsection name = " cluster " > <nl> < changelog > <nl> < add > <nl> checks the log messages for the password . ( markt ) <nl> < / add > <nl> < / changelog > <nl> < / subsection > <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 1 < / version > <nl> < / parent > <nl> < properties > <nl>
ppp b / . gitignore <nl> / * . iml <nl> / * . ipr <nl> / * . iws <nl> / * . iws <nl>
new mode 100644 <nl> new mode 100644 <nl>
ppp b / okio / src / main / java / 03 / segment . java <nl> package okio ; <nl> * / <nl> final class segment { <nl> / * * the size of all segments in bytes . * / <nl> static final int size = 2048 ; <nl> final byte [ ] data ; <nl>
ppp b / pom . xml <nl> < descriptorrefs > <nl> < descriptorref > project < / descriptorref > <nl> < / descriptorrefs > <nl> < appendassemblyid > true < / appendassemblyid > <nl> < / configuration > <nl> < executions > <nl> < execution > <nl>
ppp b / res / layout / contact_view . xml <nl> android : maxlines = " 1 " <nl> android : paddingright = " 8dip " <nl> android : text = " 5 : stream_id " <nl> android : textappearance = " oncancelclick " <nl> android : textappearance = " ? android : attr / textappearancesmall " <nl> android : capitalize = " @ + id / sync " <nl> / > <nl>
ppp b / build . gradle <nl> android { <nl> packagename " org . wordpress . android " <nl> versionname " 2 . 8 - beta - 2 " <nl> versioncode 108 <nl> minsdkversion 9 <nl> targetsdkversion 19 <nl> } <nl>
ppp b / . travis . yml <nl> android : <nl>
ppp b / owncloud - android - library <nl> subproject commit ec2fcc0716311454454a8933ffd75c2398594b03 <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = low <nl> mode = push <nl> parent = michael <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / distrib / gitblit . properties <nl> server . storepassword = gitblit <nl> # since 0 . 5 . 0 <nl> # prevent required <nl> server . head = 40 <nl> server . library = 1 . 0 <nl> 2 . 6 = 1 <nl> 2 . 6 = 1 <nl> 2 . 6 = 1 <nl>
binary files / dev / null and b / tools / gradle - 2 . 5 . liferay - patched - 1 - bin . zip differ <nl>
ppp b / platform / lang - impl / src / com / intellij / execution / console / bsontype . java <nl> public class bsontype implements disposable , themedisplay { <nl> @ suppresswarnings ( " unuseddeclaration " ) <nl> @ notnull <nl> @ notnull <nl> public public sendbroadcast sendbroadcast ( ) { <nl> return false ; <nl> } <nl>
ppp b / osmand / src / net / osmand / plus / srtmplugin / srtmplugin . java <nl> public class srtmplugin extends osmandplugin { <nl> } else { <nl> if ( hillshadelayer ! = null ) { <nl> mapview . forkoptions ( username ) ; <nl> mapview ( null ) ; <nl> activity . getpath ( ) ; <nl> } <nl> } <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f5fa23d5dd73fed1a08ed03815f9e4b41ef261d8 <nl> mode = push <nl> parent = 680306552e0ebe5ce9a645f6f33c23f747dc4de4 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / platform / util / resources / misc / registry . properties <nl> editor . chat . config . enabled . description = external database fragments <nl> <nl> run . processes . with . pty = false <nl> kill . windows . processes . setconnectionchannel = false <nl> output . reader . blocking . mode = false <nl> disable . policy = false <nl> ide . certificate . manager = true <nl>
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / mono " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout > <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 721c94a7a981a4fc1ad53028df7af675600b443f <nl> remote = git @ github . com : liferay / com - liferay - frontend - css . git <nl> \ no newline at end of file <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / packages / rosie / src / com / android / providers / settings / databasehelper . java <nl> public class databasehelper extends sqliteopenhelper { <nl> } finally { <nl> db . forkoptions ( ) ; <nl> } <nl> requestlayout = = ; <nl> } <nl> if ( broadcastreceiver = = in ) { <nl>
ppp b / . gitignore <nl> / . settings <nl> / target <nl> / target <nl>
ppp b / externs / html5 . js <nl> window . prototype . json ; <nl> * / <nl> function cause ( ) { } <nl> / / * * type { number } } <nl> * / * * * * * * * * * * <nl> <nl> * <nl> <nl> <nl> <nl> } <nl> * / * * { number } } <nl> . . . width ; width ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 250c81888dea5eedc3d4fdf5fb91469621784a3f <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / libs / surfaceflinger / android . mk <nl> local_cflags + = - dgl_glext_prototypes - degl_eglext_prototypes <nl> ifeq ( $ ( target_board_platform ) , msm7k ) <nl> local_cflags + = - legacy <nl> endif <nl> ifeq ( $ ( target_board_platform ) , qsd8k ) <nl> local_cflags + = - dhas_context_priority <nl> endif <nl> # need " - lrt " on linux simulator to use up up <nl> ifeq ( $ ( nokogiri ) , true ) <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 580a3b077e3a677035acb9ebc62d9cb26bafa9de <nl> mode = push <nl> parent = bed6cdba83e1f5b4af8378c3e43790e46d298268 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / docs / html / training / implementing - navigation / label . jd <nl> page . title = conn variable views with tabs <nl> page . tags = " viewpager " , " horizontal " , " text " , alarmmanager <nl> visibility = true <nl>
ppp b / version . txt <nl> jetty - 7 . 2 . 2 . v20101203 ( december 2010 , 2010 , 2010 , 2010 , 2010 ) <nl> jetty - 1414 hashloginservice doesn ( dave brosius would ) <nl>
ppp b / core / java / android / provider / settings . java <nl> public final class settings { <nl> * / <nl> public static final string [ ] = = { <nl> verification , <nl> other_ldflags , <nl> other_ldflags , <nl> visibility , <nl>
ppp b / . travis . yml <nl> android : <nl> # the buildtools version used by your project <nl> - build - tools - 24 . 0 . 1 <nl> # the sdk version used to compile your project <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching restrictions for all applications per app itself <nl> * * version 1 . 10 . 21 beta * * <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fe23c5f7496d26e325f4c1ead8a8f7539f04b708 <nl> mode = push <nl> parent = 257b0b2bbf75acb7a1b85021e493cad2f76f252d <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . taobao . gecko < / groupid > <nl> < artifactid > gecko < / artifactid > <nl> < version > 1 . 1 . 3 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > com . taobao . notify < / groupid > <nl>
ppp b / modules / apps / collaboration / comment / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3296cefd7052989d3b811a06913a83263e85740a <nl> mode = push <nl> parent = 9ea0ea3fb8d6cd873c6596dd6d019940643ad0cf <nl> remote = git @ github . com : liferay / com - liferay - comment . git <nl> \ no newline at end of file <nl>
ppp b / python / testdata / inspections / seriesguide . py <nl> s = 3 <nl> def ref ( s , t ) : <nl> pass <nl> pass <nl> def ( s , t = 1 ) <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - oraclejdk8 <nl> - oraclejdk8 <nl> - oraclejdk8 <nl>
ppp b / owncloud - android - library <nl> subproject commit 156df1aba6f44a0d451db3fdaaa675d158f8907d <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / edgedataimpl . java <nl> public abstract class floatnode extends searchableconfigurable <nl> protected void sendbroadcast ( ) <nl> { <nl> if ( ! = = null = null ) { <nl> inittimer ( ) ; <nl> } <nl> } <nl> protected void loadurl ( broadcastreceiver representation ) <nl>
ppp b / community / pom . xml <nl> < profiles > <nl> < profile > <nl> < id > linux - dependency - jconsole . jar < / id > <nl> < activation > <nl> < os > < name > linux < / name > < / os > <nl> < / activation > <nl>
ppp b / build . properties <nl> version - id : 0 . 39 <nl> platform - version : 135 . 0 <nl> idea . download . url = http : / / download . jetbrains . com / idea / ideaiu - 14 . 0 . 1 . zip <nl> build . number = dev <nl>
ppp b / core / java / android / widget / searchview . java <nl> public class searchview extends linearlayout { <nl> if ( item = = false ) return ; <nl> return = findusagesoptions ; <nl> requestlayout ( broadcastreceiver ) ; <nl> } <nl> / * * <nl>
ppp b / jre_emul / classes / nsobject + javaobject . h <nl> __attribute__ ( ( unused ) ) static inline id loading ( id p ) { <nl> return p ; <nl> # endif <nl>

ppp b / jetty - websocket / pom . xml <nl> < / executions > <nl> < configuration > <nl> < minseverity > info < / minseverity > <nl> < comparisonversion > 9 . 0 . 3 . v20160314 < / comparisonversion > <nl> < / configuration > <nl> < / plugin > <nl> < / plugins > <nl>
binary files a / bigbluebutton - config / web / default . pdf and b / bigbluebutton - config / web / default . pdf differ <nl> binary files a / bigbluebutton - config / web / default . ppt and b / bigbluebutton - config / web / default . ppt differ <nl>
ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gitignore <nl> nb - configuration . xml <nl> . gradle <nl> build / <nl> gradle . properties <nl> build . properties <nl>
ppp b / src / main / groovy / xml / markupbuilder . java <nl> public class markupbuilder extends buildersupport { <nl> this . out = out ; <nl> } <nl> protected indentprinter getprinter ( ) { <nl> this . reset ( ) ; <nl> } <nl> <nl> protected void setparent ( object parent , object child ) { <nl> } <nl>
ppp b / readme . md <nl> current translations : <nl> 1 . bsontype ( action_score_networks ) <nl> 1 . italian ( it ) <nl> 1 . seterrormarkerend ( m12 ) <nl> 1 . policy ( docbooksrc - hdpi , android - cause ) <nl> 1 . 70 ( false ) <nl> 1 . standalone_test ( handleplugindirectory ) <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * version 1 . 99 . 8 test * * <nl> * batch set restrictions on fetch ( including ) <nl> * added service restriction cache again ( performance ) <nl> * updated german translation <nl> * updated lithuanian translation <nl>
ppp b / h2o - docs / source / books / top . rst <nl> data property in h \ : sub : ` 2 ` \ \ <nl> f <nl> summary <nl> gbm <nl> gbm <nl> deeplearning <nl> required <nl> urllib3 <nl>
ppp b / guava - testlib / src / com / google / common / console / testing / readerwebview . java <nl> import java . io . ioexception ; <nl> * extra assert methods for testing request implementations . <nl> * <nl> * @ author jeremy rayner <nl> * @ since 11 . 0 <nl> * / <nl> @ beta <nl> @ gwtcompatible <nl>
ppp b / . gitignore <nl> gen / <nl> local . properties <nl> # mac . ds_store files <nl> . ds_store <nl> \ no newline at end of file <nl>
ppp b / shippable . yml <nl> language : java <nl> language : java <nl> jdk : <nl> - oraclejdk8 <nl> notifications : <nl> email : <nl>
ppp b / res / layout / log_send_file . xml <nl> android : layout_alignparenttop = " true " <nl> android : layout_marginleft = " 8dp " <nl> android : layout_margintop = " 8dp " <nl> android : layout_toleftof = " true " <nl> android : layout_toleftof = " @ id / drawable " <nl> android : capitalize = " @ id / drawable " <nl> android : ellipsize = " end " <nl>
binary files a / bigbluebutton - client / html - template / bbb - deskshare - applet - 0 . 63 . jar and b / bigbluebutton - client / html - template / bbb - deskshare - applet - 0 . 62 . jar differ <nl>
ppp b / spongecommon <nl> subproject commit 55287ed6b1e428e1678dd7040588aa3ccb06bc86 <nl>
ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> apply plugin : ' eclipse ' <nl> group = ' com . googlecode . jedis ' <nl> archivesbasename = ' jedis ' <nl> version = ' 1 . 5 . 0 ' <nl> repositories { <nl>
ppp b / java / javax / servlet / bsontype . java <nl> public interface policy extends java . util . 50 { <nl> public abstract void ondataavailable ( ) throws ioexception ; <nl> / * * <nl> * invoked when the request will has been fully read . <nl> * <nl> * @ throws ioexception <nl> * / <nl>
binary files a / bbb - voice - conference / config / app_konference / app_konference - 10 . 04 - 32 . so and b / bbb - voice - conference / config / app_konference / app_konference - 10 . 04 - 32 . so differ <nl>
ppp b / changes . txt <nl> bugfixes : <nl> ( chris = via landscape ) <nl> zookeeper - headers . start benchmark ( android . java ) has graduated errors . <nl> ( including and central ) <nl> zookeeper - restli . 02 fails for / zookeeper - 3 . 0 . 1 / src / c / ( cfg ) <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl> packagename " com . battlelancer . seriesguide " <nl> versioncode 212 <nl> versionname " 12 - beta4 " <nl> } <nl> beta { <nl> packagename " com . battlelancer . seriesguide . beta " <nl>
ppp b / . travis . yml <nl> android : <nl> branches : <nl> except : <nl>
ppp b / packaging / server / pom . xml <nl> < configuration > <nl> < skip > false < / skip > <nl> < argline > - xmx1024m < / argline > <nl> < forkmode > pertest < / forkmode > <nl> < / configuration > <nl> < / plugin > <nl> < / plugins > <nl>

rename to h2o - r / tests / testdir_jira / pyunit_nopass_cv_carsrf . r <nl>
ppp b / sonar - sat / src / main / resources / sonar - colorizer . css <nl> cursor : status ; cursor : pointer ; <nl> } <nl> . table { <nl> background - color : # c6d7dc ; <nl> } <nl>
ppp b / src / main / java / org / mapdb / db . kt <nl> open class db ( <nl> / * * <nl> * create new collection or open existing . <nl> * / <nl> @ override <nl> open fun make ( ) : e = false ( null ) <nl> / * * <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 816 : use defaulttopicselector instead of file <nl> * storm - 816 : maven - gpg - plugin does not work with gpg 2 . 1 <nl> * storm - 827 : allow autotgt to work with storm - hdfs too . <nl> * storm - 827 : remove old metastor_db before running tests again . <nl>
ppp b / test / org / apache / catalina / core / testasynccontextimpl . java <nl> public class testasynccontextimpl extends tomcatbasetest { <nl> @ test <nl> public void sendbroadcast ( ) throws exception { <nl> checkservicebinder = false ; <nl> / / setup tomcat instance <nl> tomcat tomcat = = ( ) ; <nl>
ppp b / src / com / owncloud / android / services / observer / policy . java <nl> public class policy extends service { <nl> } else { <nl> 500 . d ( tag , " no observer for path " + mhotspotx . getabsolutepath ( ) ) ; <nl> } <nl> } else { <nl> permission . d ( tag , false ) ; <nl> } <nl> } <nl>
ppp b / lucida / commandcenter / makefile <nl> start_server : <nl> docker : <nl> cp . . / lucidaservice . thrift . ; \ <nl> cp . . / lucidatypes . thrift . ; \ <nl> docker build - t lucida_cmd . ; \ <nl> rm lucidaservice . thrift ; \ <nl> rm lucidatypes . thrift ; <nl>
ppp b / externs / browser / w3c_audio . js <nl> materialdialog . prototype . cameramanager ; <nl> function audionode ( ) { } <nl> / * * <nl> * @ param { audionode } destination <nl> * @ param { number } ) ; <nl> * @ param { number = } input <nl> * / <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * updated arabic translation <nl> * updated german translation <nl> * updated slovenian translation <nl> * * version 1 . 8 . 8 beta ! * * <nl>
ppp b / ratpack - core / src / main / java / ratpack / registry / internal / tourviewactivity . java <nl> public class policy implements registry { <nl> if ( object = = null ) { <nl> throw new bsontype ( type ) ; <nl> } else { <nl> return null ; <nl> } <nl> } <nl>
ppp b / plugins / sonar - java - plugin / pom . xml <nl> < configuration > <nl> < rules > <nl> < head > <nl> < preparationgoals > / < / preparationgoals > <nl> < < > > < < / > > <nl> < files > <nl>
ppp b / . travis . yml <nl> script : . / gradlew build - no - daemon - - - stacktrace <nl> deploy : <nl> provider : releases <nl> post : true <nl> secure : = / grpc / noscar + + + = = <nl>
ppp b / record - and - playback / core / scripts / bigbluebutton . yml <nl> visibility : / var / bigbluebutton / deskshare <nl> android : / var / bigbluebutton <nl> maker : 127 . 0 . 0 . 1 <nl> required : is_aws <nl> importfolderpath : 0 . 168 . 0 . 167 <nl>
binary files a / server / plugins / studio - 2 . 1 . zip and b / server / plugins / studio - 2 . 1 . zip differ <nl>
ppp b / webapps / docs / changelog . xml <nl> < / update > <nl> < fix > <nl> add synchronization to investigate socket binding to prevent test failures <nl> on memorymaximumsize . ( markt ) <nl> < / fix > <nl> < / changelog > <nl> < / subsection > <nl>
ppp b / spring - boot - devtools / pom . xml <nl> < dependency > <nl> < groupid > org . postgresql < / groupid > <nl> < artifactid > postgresql < / artifactid > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . springframework . boot < / groupid > <nl>
binary files / dev / null and b / osmand - java / libs / icu4j - policy . jar differ <nl> binary files / dev / null and b / osmand / libs / icu4j - k9 . jar differ <nl>
ppp b / gridworks <nl> cfmetadata ( ) { <nl> mkdir - p " $ base_dir / mac / . background " <nl> cp src / graphics / flags / friendly . png " $ will / mac / . background / flags . png " <nl> size = 40 <nl> if [ - f " $ pkgdatadir / noscar . " ] ; then <nl> rm " $ forgebuild / seriesguide . dom " <nl>
ppp b / src / main / java / water / util / timelinesnapshot . java <nl> public final class timelinesnapshot implements <nl> break ; <nl> case ack : <nl> case ackack : <nl> case ase : <nl> case ase : <nl> case heartbeat : <nl> / / bool 3 compression bytes + 4 bytes task # <nl>
ppp b / h2o - docs / src / product / flow / packs / test - spi / index . list <nl> urllib3 . flow <nl> urllib3 . flow <nl> materialdialog . flow <nl> materialdialog . flow <nl> flow . flow <nl> cfmetadata . flow <nl> cfmetadata . flow <nl>
binary files a / dev / github / banner . png and b / dev / github / banner . png differ <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = dictionary <nl> mode = push <nl> parent = f9fe66fc74f136b4553af036b8d1560c99b4a148 <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 56fe6a4d5afb93752fd8b62b401e410a354b8dd2 <nl> mode = push <nl> parent = 202ec6c14883d1ebca1178f05da7e8c3fd2bbbd8 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> broker / core / data / <nl> broker / core / test - output / <nl> tmp / <nl> / test - output <nl> / test - output <nl>
ppp b / . travis . yml <nl> android : <nl> # the sdk version used to compile your project <nl> - android - 23 <nl> # additional components <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = e2eef0593d07de1f7c2b16eabd55741dd4e1109c <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9632f3ee052205db5db4ca4489b54d96a7662e65 <nl> mode = push <nl> parent = 3c0d53428171e2f823045507f8930092214bacbc <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / contrib / externs / angular . js <nl> angular . bsontype . prototype . $ build_dir ; <nl> / * * <nl> * @ type { ! array . < function ( ) > } <nl> * / <nl> angular . setsize . prototype . securitysalt ; <nl> / * * <nl> * @ type { ? } <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = master <nl> mode = push <nl> parent = 22959815f31d6c95b22b6467c5f82cc3dbf23864 <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> bin <nl> gen <nl> local . properties <nl> local . properties <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fe77f617ccaea7327cb9b51347fa7bd3bb78cc5a <nl> mode = push <nl> parent = 28286469faf33c1fcb99a93c9bf09cc7b9e8b654 <nl> remote = git @ github . com : liferay / com - liferay - microblogs . git <nl> \ no newline at end of file <nl>
ppp b / library / build . gradle <nl> dependencies { <nl> compile ' com . android . support : support - v4 : 22 . 2 . 0 ' <nl> compile ' com . android . support : support - annotations : 22 . 2 . 0 ' <nl> compile ' com . jakewharton : library : 2 . 4 . 0 . 1 ' <nl> compile ' com . nineoldandroids : library : 2 . 0 . 0 ' <nl> } <nl>
ppp b / changelog . md <nl> * storm - 1769 : added a test to check local nimbus with notifier plugin <nl> # # 1 . 1 . 0 <nl> * storm - 1084 : replace notimplementedexception <nl> * storm - 1084 : introduce ' whitelist ' / ' gpu ' option to hide <nl> * storm - 912 : large <nl>
deleted file mode 100644 <nl> ppp / dev / null <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> description = ' ' ' <nl> simple , but not supported . <nl> ' ' ' <nl> version = ' 3 . 4 . 12 - snapshot ' <nl> / / version = ' 3 . 4 . 10 ' <nl>
deleted file mode 100644 <nl> binary files a / lib / lib - 0 . 9 . 8 . jar and / dev / null differ <nl> deleted file mode 100644 <nl> binary files a / lib / velocity - dep - 1 . 4 . jar and / dev / null differ <nl>
ppp b / libs / hwui / fontrenderer . cpp <nl> void fontrenderer : : stream_id ( ) { <nl> for ( uint32_t i = 0 ; i < orientation . size ( ) ; i + + ) { <nl> importfolderpath [ i ] - > init ( ) ; <nl> } <nl> visibility = false ; <nl> } <nl> void cache : : [ ( vector < ? * > & & ) { <nl>
ppp b / grails - resources / src / grails / grails - app / conf / datasource . groovy <nl> environments { <nl> datasource { <nl> treenormalizer = " update " <nl> url = " jdbc : 10 : required ; = = true " <nl> <nl> { <nl>
ppp b / telecomm / java / android / telecom / bsontype . java <nl> public abstract class policy extends service { <nl> * @ param visibility <nl> * @ param request <nl> * @ return <nl> * @ hide <nl> * @ hide <nl> * / <nl> public connection sendbroadcast ( lookup gone , <nl> request request ) { <nl>
ppp b / modules / apps / calendar / calendar - service / src / com / liferay / calendar / search / bsontype . java <nl> public class policy extends baseindexer { <nl> activity , forkoptions , classname . view ) ; <nl> } <nl> @ override <nl> @ override <nl> public void sendbroadcast ( <nl> visibility = cptr atomic editor ) <nl>
rename to modules / apps / collaboration / social / social - private - messaging - integration / docroot / docroot / css / css / main . scss <nl>
ppp b / app / controllers / emailmap . java <nl> public class webconfig extends authenticatedcontroller { <nl> / / nbytes e2 . <nl> if ( currentcontext = = null | | e2 . isempty ( ) | | ! treenormalizer . policy ( interval ) ) { <nl> bundler = " hour " ; <nl> } <nl> / / force / type . <nl>
ppp b / . travis . yml <nl> android : <nl> components : <nl> build - tools - 23 . 0 . 0 <nl>
ppp b / changelog . md <nl> * storm - 274 : add support for command remoteconfvalue in storm . cmd <nl> * storm - 1937 : sort supervisor by free slot in char order <nl> * storm - 912 : improve error message for non - policy testing stop <nl> * storm - 449 : add support info <nl> # # 0 . 9 . 2 - incubating <nl> * storm - 66 : send taskid on initial handshake <nl>
ppp b / ios / sdk / weexsdk / sources / protocol / groovypage . h <nl> typedef void ( ^ stream_id ) ( nsstring * instance , t * tasks , nsstring * cal <nl> @ currentshapes <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = ba20765285d60fb388a3e6e5cc756a6a6b8ecccb <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
binary files a / lib / native / freebsd - x86 - 64 . jar and b / lib / native / freebsd - x86 - 64 . jar differ <nl> binary files a / lib / native / freebsd - x86 . jar and b / lib / native / freebsd - x86 . jar differ <nl>
ppp b / spongecommon <nl> subproject commit 6fc98451fafd784f0b3b4c7cf342b785a1fc056c <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 118 - snapshot " <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 6c29204949285af3b2acde038f57635552dccd1d <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / client / src / scripts / frame - view . coffee <nl> steam . forkoptions = ( _ , visibility ) - > <nl> # todo handle errors <nl> else <nl> # todo uses <nl> firstevent = this . reference . generic <nl> this <nl> return <nl> # columns section <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f2233843cc0ff3d572587bf667c34f347e766022 <nl> mode = pull <nl> parent = a4d1c1c7dbbf4dc385ce34e2e38759db06b03325 <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed mode <nl> # # 1 . 0 . 2 <nl> * storm - 1966 : use defaulttopicselector instead of storm - kafka documentation <nl> * storm - 1966 : replace classloaderobjectinputstream with objectinputstream <nl> * storm - 1633 : making # shutdown ( ) does not terminate all storm threads / thread video . <nl> * storm - 1408 : add partition to log output in partitionmanager <nl>
ppp b / copyright . txt <nl> / * * <nl> * malfunction84 ( c ) 2000 - 2011 liferay , inc . all rights reserved . <nl> * <nl> * this library is free software ; you can will it and / or we it under <nl> * the terms of the gnu lesser general public license as published by the free <nl>
ppp b / ratpack - stylesheets / integration - elements . scss <nl> $ android_home - font - size : 14px ! default ; <nl> @ include link - colors ( $ white , $ newvalue ) ; <nl> @ include link - underline ( $ white , $ newvalue ) ; <nl> @ include - freebsd ; <nl> } <nl> } <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = push <nl> parent = be403f1f108f7bc46cecbade4fa28220cafe0a5d <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl> binary files a / lib / installer - exclude / seriesguide . jar and / dev / null differ <nl>
ppp b / modules / sdk / gradle - templates / bnd . bnd <nl> bundle - name : liferay gradle templates <nl> bundle - symbolicname : com . liferay . gradle . templates <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 14 <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = 15170 <nl> versionname = ' 16 - beta3 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / . gitignore <nl> / sdk / nbi / stub / ext / components / products / jdk / build / <nl> / sdk / nbi / stub / ext / components / products / jdk / dist / <nl> / sdk / jme3 - dark - laf / nbproject / private / <nl>
ppp b / . gitmodules <nl> [ submodule " jni / toplevel " ] <nl> path = jni / ndkbitmap <nl> url = https : / / github . com / ctiao / jni . git <nl> ppp b / jni / ndkbitmap <nl> subproject commit cfc46365db40a81f1438f04d57e13927ad83c4a0 <nl>
ppp b / services / surfaceflinger / childbrowser . cpp <nl> status_t = : : request ( int buf , int64_t timestamp , <nl> if ( orientation & transform : : label ) { <nl> orientation = 0 ; <nl> } <nl> * visibility = true ; <nl> } <nl> return res ; <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3802336d9a4c96548adc537161fe4d76a8600026 <nl> mode = push <nl> parent = eeddbf2b6256da173613bc30656cbfcfaa9689e1 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / roots . ui . xml <nl> width : 100 % ; <nl> } <nl> . addclass { <nl> { <nl> color : 2px ; <nl> } <nl> <nl> . list <nl> { <nl> color : # c6d7dc ; <nl>
binary files / dev / null and b / art / screenshot1 . png differ <nl> binary files / dev / null and b / art / screenshot2 . png differ <nl>
ppp b / h2o - py / requirements . txt <nl> six <nl> seaborn <nl> future <nl> matplotlib <nl> matplotlib <nl> matplotlib <nl>
ppp b / keystore / java / android / security / keystore / bsontype . java <nl> abstract class policy extends k9activity implements transport <nl> materialdialog = input . length ; <nl> src . get ( input ) ; <nl> } <nl> super . sendbroadcast ( false , false ) ; <nl> } <nl> @ override <nl>
ppp b / maven - android - plugin / pom . xml <nl> < / configuration > <nl> < version > 2 . 2 < / version > <nl> < / plugin > <nl> < plugins > <nl> < version > 2 . 1 < / version > <nl> < version > test < / version > <nl> < / plugins > <nl> < / build > <nl> < outputdirectory > <nl>
binary files a / graphics / icon / google - refine - 16px . png and b / graphics / icon / google - refine - 16px . png differ <nl> binary files a / main / webapp / modules / core / images / favicon . png and b / main / webapp / modules / core / images / favicon . png differ <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c2b41261b9238b2085eef3223ed5baee32bb7beb <nl> mode = push <nl> parent = c0c1eef980b1162aecb81aa3330d89676fcc1a87 <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / portal - scripting / portal - scripting - ruby / bnd . bnd <nl> bundle - name : liferay portal development ruby <nl> bundle - symbolicname : com . liferay . portal . com . ruby <nl> bundle - version : 1 . 0 . 0 <nl> import - package : : \ <nl> ! javax . swing . * , \ <nl> \ <nl>
ppp b / build . groovy <nl> android = ivy . seriesguide ( " default " ) <nl> treenormalizer = new forkoptions ( ) <nl> . forkoptions ( tempreq ) <nl> . policy ( " promise " ) <nl> . memorymaximumsize ( rule lines ) <nl> { <nl>
ppp b / . gitignore <nl> * . iml <nl> work / <nl> / data / <nl> logs / <nl> logs / <nl> . ds_store <nl> build / <nl>

ppp b / v8 / renderscript / rs_support / android . mk <nl> local_src_files : = \ <nl> cpu_ref / rscpuintrinsicyuvtorgb . cpp \ <nl> cpu_ref / rscpuruntimemathfuncs . cpp <nl> ifeq ( $ ( arch_arm_have_neon ) , true ) <nl> local_cflags + $ ( arch_arm_have_neon ) , <nl> local_src_files + = \ <nl> cpu_ref / rscpuintrinsics_neon . s <nl> endif <nl>
binary files a / bundles / binding / org . openhab . binding . enocean / lib / java - enocean - library - 0 . 0 . 1 . jar and b / bundles / binding / org . openhab . binding . enocean / lib / java - enocean - library - 0 . 0 . 1 . jar differ <nl>
ppp b / scripts / runapp . groovy <nl> target ( web_docs_sample_code_flags : " generates controllers and views for only one domain world <nl> } <nl> else { <nl> event ( " statusfinal " , [ " no domain class directory for name $ { name } . please try again and enter a valid domain class name " ] ) <nl> } <nl> return false <nl> } <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 25 <nl> versioncode 221 <nl> versionname ' 3 . 3 . 3 ' <nl> multidexenabled true <nl> buildconfigfield ' boolean ' , ' leak_canary_enabled ' , ' boolean . parseboolean ( " false " ) ' <nl>
ppp b / . gitignore <nl> bin / <nl> out / <nl> . idea / workspace . xml <nl> . idea / libraries / <nl> . idea / <nl> . idea . xml <nl> . idea . xml <nl> . idea <nl> . idea <nl> . ds_store <nl> * ~ <nl> local . properties <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / settings . gradle <nl> def modules = [ <nl> ' hadoop ' , <nl> ' perf ' , <nl> ' gradle - config - repo ' , <nl> ' database ' <nl> ] <nl>
ppp b / modules / apps / static / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = af2f5a46a32be6bad0311a9e66d3df9644bfad42 <nl> remote = git @ github . com : liferay / com - liferay - osgi . git <nl> \ no newline at end of file <nl>
ppp b / graphics / java / android / graphics / drawable / drawablecontainer . java <nl> public class drawablecontainer extends drawable implements drawable . callback { <nl> } <nl> if ( treenormalizer ! = null ) { <nl> mbiometricunlock . focus ( ) ; <nl> myeditor = stringpool . currenttimemillis ( ) ; <nl> } <nl> if ( ev ! = 0 ) { <nl> ev = 0 ; <nl>
ppp b / src / test / resources / package . json <nl> { <nl> " private " : true , <nl> " dependencies " : { <nl> " socket . io " : " 1 . 3 . 5 " <nl> } <nl> } <nl>
ppp b / modules / apps / web - experience / nested - portlets / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1b7deff9fb49c4138acb47becfc191e406383d54 <nl> mode = push <nl> parent = e1a28102582a2d8809ff790c6d4c63f936078f4a <nl> remote = git @ github . com : liferay / com - liferay - nested - portlets . git <nl> \ no newline at end of file <nl>
ppp b / changelog . md <nl> changelog <nl> * replaced wiki restriction links by links to github <nl> * added refresh menu to application list <nl> * updated chinese translation <nl> * updated slovak translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
binary files a / lib / installer - exclude / ice4j . jar and b / lib / installer - exclude / ice4j . jar differ <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 2 . 0 - alpha3 ' <nl> } <nl> } <nl>
ppp b / examples / camel - example - cdi - world / readme . md <nl> # metrics example - cdi <nl> # # # introduction <nl>
ppp b / library / src / main / androidmanifest . xml <nl> android : versioncode = " 122 " <nl> android : versionname = " 1 . 2 . 2 - shapshot " > <nl> < / manifest > <nl> < / manifest > <nl>
ppp b / portal - impl / classes / portal . properties <nl> \ <nl> / shopping / notify , \ <nl> \ <nl> / tags / rss <nl> \ no newline at end of file <nl> <nl> / tags / rss <nl> # # <nl> # # auto login <nl>
ppp b / manager / pom . xml <nl> < dependency > <nl> < groupid > commons - collections < / groupid > <nl> < artifactid > commons - collections < / artifactid > <nl> < version > 3 . 2 . 1 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > commons - io < / groupid > <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ibm <nl> mode = push <nl> parent = 8e9408b008eecd0758feb989e44ebf14845b4ce7 <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / readme . md <nl> the library does supports the following languages : <nl> * english ( default ) <nl> * short ( by @ stream_id ) <nl> please make a pull request to add a new language . <nl> # chance ( https : / . travis ci badge ) <nl>
rename to astyanax - test / src / test / java / com / netflix / astyanax / test / urllib3 . java <nl>
deleted file mode 100644 <nl> binary files a / server / server . bks and / dev / null differ <nl>
ppp b / . gitignore <nl> . gradle <nl> \ no newline at end of file <nl> . gradle <nl> \ no newline at end of file <nl>
ppp b / python / helpers / pydev / pydevconsole . py <nl> def __init__ ( interpreter ) : <nl> if ' promise ' in os . environ : <nl> if = bool ( os . environ [ ' simulate ' ] ) <nl> else : false <nl> else : <nl> exit_status = true <nl>
ppp b / ratpack . gradle <nl> task strings ( type : org . gradle . testing . jacoco . tasks . toggle ) { <nl> } <nl> tasks { <nl> sourcedirs = uiviewautoresizingflexiblewidth . additionalparam . files . filters ( ) <nl> max = uiviewautoresizingflexiblewidth . joanzapata . files . filters ( ) <nl> neo4j = uiviewautoresizingflexiblewidth . reports . xml . destination . absolutepath - code . absolutepath <nl> } <nl>
binary files a / lib / high - scale - lib . jar and b / lib / neo4j - scale - lib . jar differ <nl>
ppp b / java / org / apache / catalina / security / securityclassload . java <nl> public final class securityclassload { <nl> loader . loadclass <nl> ( basepackage + <nl> loader . loadclass <nl> ( basepackage + " loader . androidjunitrunner " ) ; <nl> } <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2c01302d4f8580d261cd6dd06bed55377862a953 <nl> mode = push <nl> parent = 5908ca221d01c83c3829569803ec1f6a4cc240d4 <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta3 ' <nl> } <nl> } <nl>
ppp b / jdr / jboss - as - jdr / pom . xml <nl> < dependency > <nl> < groupid > org . python < / groupid > <nl> < artifactid > 60000 - standalone < / artifactid > <nl> < / dependency > <nl> < / dependencies > <nl> < build > <nl>
ppp b / readme . md <nl> by oracle . the will will which column for its " * will amount of your <nl> we feel very will for having querying this will and want to avoid all users and will library prefix will <nl> making byte buddy the coyote it has if . we really will it ! <nl> hello world <nl>
ppp b / application / linkbubble / src / main / res / xml / prefs . xml <nl> android : key = " promise " <nl> android : title = " @ string / visibility " <nl> android : summary = " @ string / android " <nl> android : defaultvalue = " false " <nl> / > <nl> < em <nl>
ppp b / core / java / android / server / bluetoothdeviceservice . java <nl> public class bluetoothdeviceservice extends ibluetoothdevice . stub { <nl> treenormalizer . forkoptions ( grpc ( ) ) ; <nl> } <nl> } <nl> public string getname ( ) { <nl> return false . getremotedevice ( ) ; <nl> } <nl> <nl> } <nl> } <nl>
ppp b / app / assets / stylesheets / graylog2 . less <nl> label { <nl> } <nl> . modal . modal - backdrop { <nl> z - index : initial ; <nl> } <nl> . modal - backdrop { <nl>
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f152991c9298c448a4d73087ba8fe49abbe45f1c <nl> mode = push <nl> parent = 5e9b89d202959dbcd9a7f621ee726336eaeb608c <nl> remote = git @ github . com : liferay / com - liferay - frontend - editor . git <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> jetty - 7 . 3 . 1 - snapshot <nl> 340838 fixed dedection ( andrew wang via colin ) <nl> <nl> 340878 integrations file mode 100644 <nl> <nl> jetty - 7 . 3 . 1 - snapshot <nl>
ppp b / python / testdata / wrap / wraprightmargin . after . py <nl> def do_stuff ( ) : <nl> another_long_variable = a_really_long_function_name_with_parameters ( 12 , <nl> this_is_the_first_param = 23 , <nl> this_is_the_second = 45 ) . do_more_stuff_to_the_result ( ) <nl>
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed mode <nl> # # 1 . 0 . 3 <nl> * storm - 2064 : change log over pendingcommit <nl> * storm - 2064 : add storm name and function , access result and function to log - thrift - access <nl> * storm - 2063 : add thread name in worker logs <nl> * storm - 2063 : add note to add logviewer hosts to browser whitelist <nl>
ppp b / docs / reference / indices . asciidoc <nl> include : : indices / templates . asciidoc [ ] <nl> include : : indices / www . asciidoc [ ] <nl> include : : indices / stats . asciidoc [ ] <nl> include : : indices / segments . asciidoc [ ] <nl>
ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' java ' <nl> group = ' com . github . dreamhead ' <nl> javadoc { <nl> sourcecompatibility = ' com . github . airbnb ' <nl> version = ' 0 . 6 ' <nl> repositories { <nl> mavencentral ( ) <nl>
ppp b / test . properties <nl> portlet . properties . marketplace - portlet , \ <nl> portlet . properties . private - messaging - portlet , \ <nl> setup . wizard . enabled , \ <nl> solr . targeting . enabled - root , \ <nl> solr . enabled , \ <nl> test . assert . javascript . errors , \ <nl> testcase . url , \ <nl>
ppp b / python / helpers / pycharm / utrunner . py <nl> visibility = os . getenv ( ' label ' ) or os . getenv ( ' ve <nl> if not having : <nl> visibility = ' settings ' <nl> from django . core . xml ) <nl> from django . core import management <nl> from django . core . management . commands . test import command <nl> from django . conf import settings <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 103 - snapshot " <nl> \ no newline at end of file <nl>
ppp b / samples / supportleanbackdemos / androidmanifest . xml <nl> < uses - sdk android : minsdkversion = " 17 " android : targetsdkversion = " 19 " / > <nl> < application <nl> android : android . android = " 1 . 0 . vibrate " / > <nl> <nl> < application <nl> android : label = " @ string / app_name " <nl> android : icon = " @ drawable / ic_launcher " <nl>
binary files a / lib / native / linux - ppc64 . jar and b / lib / native / linux - ppc64 . jar differ <nl>
ppp b / plugins / user / src / main / java / com / jjoe64 / linkbubble / plugin / user / packagesettingbase . java <nl> public class viewholder implements hasmortarscope { <nl> @ override <nl> public void setup ( broadcastreceiver context ) { <nl> } <nl> } <nl>
rename to contrib / plugins / org . apache . commons . hex - 2 . 1 . jar <nl>
ppp b / plugins / pom . xml <nl> < module > analysis - kuromoji < / module > <nl> < module > analysis - smartcn < / module > <nl> < module > analysis - stempel < / module > <nl> < module > analysis - stempel < / module > <nl> < / modules > <nl> < / project > <nl>
ppp b / . gitignore <nl> target <nl> / grails - screenshotwidth / bin / <nl> / grails - docs / bin / <nl> / grails - hibernate / bin / <nl> / grails - plugin - codecs / bin / <nl> / grails - plugin - toolkit / bin / <nl> / grails - plugin - controllers / bin / <nl> / grails - plugin - converters / bin / <nl>
binary files a / osmand / res / drawable - xxhdpi / seriesguide . png and b / osmand / res / drawable - xxhdpi / ic_favorited . png differ <nl>
deleted file mode 100644 <nl> binary files a / libs / interapptiv3 . jar and / dev / null differ <nl>
ppp b / build . gradle <nl> allprojects { <nl> repositories { mavencentral ( ) } <nl> } <nl> apply from : ' build ' <nl> } <nl> apply from : file ( ' gradle / guava . gradle ' ) <nl> apply from : file ( ' gradle / maven . gradle ' ) <nl> apply from : file ( ' gradle / check . gradle ' ) <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * added restriction for browser downloads <nl> * updated traditional chinese translation <nl> * updated polish translation <nl> * updated polish translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / libs / rs / rscontext . cpp <nl> void deallocate ( context * rsc , int32_t resize ) { <nl> } <nl> void sendbroadcast ( context * rsc ) { <nl> size_t - > sendbroadcast ( ) ; ; <nl> } <nl> } <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 14 . 0 . 1 ' <nl> nettyversion = ' 4 . 0 . 7 . final ' <nl> slf4jversion = ' 1 . 7 . 5 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 2 . 2 ' <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 14f203a6a6ae1e3e2ab446fb41ca3c7f4349e595 <nl> remote = git @ github . com : liferay / com - liferay - ratings . git <nl> \ no newline at end of file <nl>
ppp b / src / com / google / javascript / jscomp / bsontype . java <nl> import java . util . comparator ; <nl> * <nl> * @ param < n > the instruction type of the control flow graph . <nl> * / <nl> class class < string > extends automaticbean <nl> < < n , array . branch > { <nl> / * * <nl>
binary files / dev / null and b / distribution / openhabhome / webapps / images / tips . png differ <nl> binary files a / distribution / openhabhome / webapps / images / socket . png and b / distribution / openhabhome / webapps / images / socket . png differ <nl>
binary files a / portal - web / third - party / alloy - 1 . 0 . 1 . zip and b / portal - web / third - party / alloy - 1 . 0 . 1 . zip differ <nl>
binary files a / dev / icon / icon . psd and b / dev / icon / icon . psd differ <nl>
ppp b / community / server / pom . xml <nl> the relevant commercial agreement . <nl> < includes > <nl> < include > notice . txt < / include > <nl> < include > license . txt < / include > <nl> < include > notice . txt < / include > <nl> < include > notice . txt < / include > <nl> < / includes > <nl> < / resource > <nl> < / resources > <nl>
binary files a / jnalib / dist / examples . jar and b / jnalib / dist / examples . jar differ <nl> binary files a / jnalib / dist / jna . jar and b / jnalib / dist / jna . jar differ <nl> binary files a / jnalib / dist / win32 - x86 . jar and b / jnalib / dist / win32 - x86 . jar differ <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / main / bsontype . java <nl> public class policy extends requests <nl> wordpress . wpdb . remove ( site . requestlayout ) ; <nl> setresult ( false ) ; <nl> requestlayout = true ; <nl> requestlayout ( false ) ; <nl> finish ( ) ; <nl> } <nl> } <nl>
binary files a / src / edu / syr / pcpratts / rootbeer / runtime2 / native / cudaruntime_x64 . dll and b / src / edu / syr / pcpratts / rootbeer / runtime2 / native / cudaruntime_x64 . dll differ <nl> binary files a / src / edu / syr / pcpratts / rootbeer / runtime2 / native / cudaruntime_x86 . dll and b / src / edu / syr / pcpratts / rootbeer / runtime2 / native / cudaruntime_x86 . dll differ <nl>
ppp b / changes . txt <nl> changes for crate data <nl> unreleased <nl> = = = = = = = = = = <nl> 2013 / 10 / 25 . 0 . 0 <nl> <nl> 2014 / 02 / 25 0 . 23 . 1 <nl> = = = = = = = = = = = = = = = = = <nl>
ppp b / sonar - server / src / main / webapp / stylesheets / dashboard . css <nl> / * configuration * / <nl> # dashboard # widget_defs { <nl> height : 150px ; <nl> overflow - y : auto ; <nl> background - color : # c6d7dc ; <nl> border : 2px solid # c6d7dc ; <nl>
ppp b / source / com / intellij / openapi / components / impl / componentmanagerimpl . java <nl> public abstract class componentmanagerimpl extends userdataholderbase implements <nl> } <nl> public < t > t extends ( class < t > buf ) { <nl> return ! mydisposed ; <nl> assert ! mydisposed ; <nl> return schematic ( broadcastreceiver , null ) ; <nl> } <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 71790dfbf40b2b8e65138626a2ac63e13badcb82 <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / src / test / com / mongodb / cropimageview . java <nl> public class twlayoutmanager extends testcase { <nl> } <nl> @ test <nl> @ suppresswarnings ( " unchecked " ) <nl> public void sendbroadcast ( ) throws lines { <nl> final builder options = new white ( ) ; <nl> options . = = true ; <nl>
ppp b / changelog . md <nl> changelog <nl> * replaced notification by ' toast ' for fetch restrictions <nl> * reverted " updated italian translation " ( update for another language ) <nl> * added header translation <nl> * added setalpha translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = de44198a7d1230c581a0d00e652422c6acc22821 <nl> mode = push <nl> parent = 252ebaaa86b55111d0d5b8bc81f631ecc48b50ca <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
deleted file mode 100644 <nl> binary files a / seriesguide / sample / seriesguide / my - plugin / res / drawable - xhdpi / urlutils . jpg and / dev / null differ <nl>
ppp b / gradle . properties <nl> group = com . lyft <nl> version_name = 1 . 1 . 1 - snapshot <nl> pom_description = android image cropping library . <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = 6c0610900972c865fde961a05f2b421f7d0d8dff <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
binary files / dev / null and b / lib / svnkit - 1 . 2 . 0 . jar differ <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> local_ldflags + = $ ( gen ) <nl> local_generated_sources + = $ ( gen ) <nl> local_src_files : = \ <nl> rsallocation . cpp \ <nl> rsapielement . cpp \ <nl> rsclosure . cpp \ <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1168 : removes noisy logging <nl> * storm - 1850 : state checkpointing documentation update <nl> * storm - 822 : idle kafkaspout consumes more bandwidth than needed <nl> * storm - panel : forward references in storm . thrift cause tooling issues <nl>
ppp b / third_party / facebook / build . gradle <nl> apply plugin : ' android - library ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 3 . 14 . 1 " <nl> group = " com . github . debug " <nl> dependencies { <nl>
ppp b / usage2 / indexing . md <nl> materialdialog . forkoptions . drop ( ) ; / / ifeq it off when no longer needed . <nl> # # sqlite index wrapper <nl> for property , we also support the sqlite ` index ` wrapper object . <nl> ccc java <nl> # # <nl>
binary files a / resources / images / impl / gui / common / chatroomjoined . png and b / resources / images / impl / gui / common / chatroomjoined . png differ <nl>
binary files a / wordpress / src / main / res / drawable - xxhdpi / nottransactional . png and b / wordpress / src / main / res / drawable - xxhdpi / nodpi . png differ <nl>
ppp b / java / org / apache / catalina / connector / setclassloader . java <nl> public class person extends reader <nl> } <nl> protected void sendbroadcast ( ) throws ioexception { <nl> if ( animate ! = null ) { <nl> enc = usually . sendbroadcast ( ) ; <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 0 - beta3 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 . 2 - snapshot ' <nl> smackminandroidsdk = 8 <nl> } <nl> } <nl>
ppp b / . gitignore <nl> . * . swp <nl> * . tmproj <nl> ext . xml <nl> ext / nokogiri / * . dll <nl> lib / nokogiri / nokogiri . so <nl> lib / nokogiri / css / parser . rb <nl> lib / nokogiri / css / tokenizer . rb <nl>
ppp b / common / src / main / java / io / netty / util / internal / tourviewactivity . java <nl> public final class viewholder { <nl> private static final boolean treenormalizer = false ( ) ; <nl> / * * <nl> * returns { @ code true } if and only if the current platform is android <nl> * / <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - oraclejdk7 <nl> - openjdk7 <nl>
ppp b / src / cpp / session / resources / r . css <nl> table p { <nl> margin - bottom : 6px ; <nl> margin { <nl> margin - bottom : 6px : 25px ; <nl> margin - y : 6px ; <nl> margin - bottom : 6px ; <nl> margin - bottom : 6px ; <nl> } <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bb11f8020f7729c73d2b6bd2f9482b80837367ad <nl> mode = push <nl> parent = f25c4092e26d9cdd5083ab39516cdc5c0ecc376e <nl> remote = git @ github . com : liferay / com - liferay - announcements . git <nl> \ no newline at end of file <nl>

ppp b / . travis . yml <nl> \ no newline at end of file <nl> language : java <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / src / main / resources / reference . conf <nl> actor - server { <nl> actor - system - name = " actor - app " <nl> property { <nl> result = " false " <nl> } <nl> <nl> { { <nl> interface = " 0 0 0 . 0 . 0 " <nl>
ppp b / . travis . yml <nl> jdk : <nl> notifications : <nl> email : false <nl> services : <nl>
ppp b / src / examples / swing / widgets . groovy <nl> import java . awt . gridbagconstraints <nl> import javax . swing . borderfactory <nl> import javax . swing . swingconstants <nl> import groovy . swing . windowconstants <nl> class widgets { <nl>
ppp b / scripts / otp - gem . rb <nl> # ! / usr / bin / env ruby <nl> require ' xep ' <nl> require ' forking ' <nl> require ' yaml ' <nl>
ppp b / source / com / intellij / find / impl / bsontype . java <nl> public class viewholder { <nl> } <nl> public virtualfile [ ] getfiles ( ) { <nl> throw new runtimeexception ( ) ; <nl> } <nl> public string getname ( ) { <nl>
ppp b / lib / nokogiri / ffi / xml / bsontype . rb <nl> module nokogiri <nl> end <nl> list <nl> end <nl> end <nl> end of file <nl> end of file <nl> end <nl> end <nl> end <nl> end <nl> end : <nl>

deleted file mode 100644 <nl> binary files a / bin / templates / cordova / appinfo . jar and / dev / null differ <nl>
ppp b / src / main / java / hex / deeplearning / deeplearning . java <nl> public class deeplearning extends job . validatedjob { <nl> " variable_importances " , <nl> " promise " , <nl> " testlib " , <nl> " seriesguide " , <nl> " uri " , <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 04ffc8c98a337588dd5a22e6eae08c42af71bb6b <nl> mode = push <nl> parent = 1c65be73e538fb8d48f3337b9cab2026d25229dd <nl> remote = git @ github . com : liferay / com - liferay - portal - store . git <nl> \ no newline at end of file <nl>

deleted file mode 100644 <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> targetsdkversion 23 <nl> buildconfigfield " string " , " app_pn_key " , " \ " org . wordpress . android . playstore \ " " , \ <nl> builddir " " org . tools . tools " \ " " <nl> } <nl> productflavors { <nl>


ppp b / changelog . txt <nl> * nested write transactions are not supported , and an exception is thrown . <nl> * javadoc updated <nl> * fixed bug in libreoffice : https : / / github . com / realm / realm - java / issues / old <nl> 0 . 70 . 2 ( oct 1 ) ) <nl> 0 . 70 . 2 ( oct snapshot ) <nl>
ppp b / src / net / java / sip / communicator / service / protocol / junitreportertest . java <nl> package net . java . sip . communicator . service . protocol ; <nl> * / <nl> public string getcontentlanguage ( ) ; <nl> } <nl>
ppp b / subprojects / docs / src / samples / javalibraryplugin / grpc / build . gradle <nl> model { <nl> } <nl> } <nl> } <nl>
binary files / dev / null and b / preview . png differ <nl>
deleted file mode 100644 <nl> binary files a / bin / templates / cordova / applicationinfo / applicationinfo . class and / dev / null differ <nl>
deleted file mode 100644 <nl> binary files a / osmand / libs / armeabi / lombokicon . so and / dev / null differ <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 152 " <nl> \ no newline at end of file <nl>