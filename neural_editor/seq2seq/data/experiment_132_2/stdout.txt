
====STARTING TRAINING====
{'ADDITION_TOKEN': 'добавление',
 'ADD_REVERSE_EXAMPLES_FOR_TRAIN_RATIO': 0.0,
 'BATCH_SIZE': 64,
 'BEAM_SIZE': 50,
 'DATASET_ROOT': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_50',
 'DECODER_HIDDEN_SIZE': 256,
 'DEFECTS4J_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/Defects4J',
 'DELETION_TOKEN': 'удаление',
 'DEVICE': device(type='cuda', index=0),
 'DIVERSITY_STRENGTH': None,
 'DROPOUT': 0.2,
 'EARLY_STOPPING_ROUNDS': 25,
 'EDIT_REPRESENTATION_SIZE': 256,
 'ENCODER_HIDDEN_SIZE': 128,
 'EOS_TOKEN': '</s>',
 'IS_TEST': False,
 'LEARNING_RATE': 0.0001,
 'LEAVE_ONLY_CHANGED': True,
 'LOWER': False,
 'MAKE_CUDA_REPRODUCIBLE': False,
 'MAX_NUM_OF_EPOCHS': 1000,
 'NUM_GROUPS': 1,
 'NUM_LAYERS': 2,
 'OUTPUT_PATH': '../../../embeddings-for-code-diffs-data/experiment_132_2/',
 'PADDING_TOKEN': 'паддинг',
 'PAD_TOKEN': '<pad>',
 'PRINT_EVERY_iTH_BATCH': 5,
 'REPLACEMENT_TOKEN': 'замена',
 'SAVE_MODEL_EVERY': 5,
 'SEED': 9382,
 'SOS_TOKEN': '<s>',
 'TEACHER_FORCING_RATIO': 0.9,
 'TEST_BATCH_SIZE': 64,
 'TOKENS_CODE_CHUNK_MAX_LEN': 100,
 'TOKEN_MIN_FREQ': 1,
 'TOP_K': [1, 3, 5, 10, 50],
 'TSNE_BATCH_SIZE': 1024,
 'TUFANO_BUG_FIXES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_50',
 'TUFANO_BUG_FIXES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/50_100',
 'TUFANO_CODE_CHANGES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/0_50',
 'TUFANO_CODE_CHANGES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/50_100',
 'TUFANO_LABELED_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/0_50',
 'TUFANO_LABELED_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/50_100',
 'UNCHANGED_TOKEN': 'равенство',
 'UNK_TOKEN': '<unk>',
 'USE_BRIDGE': True,
 'USE_EDIT_REPRESENTATION': True,
 'VAL_BATCH_SIZE': 64,
 'VERBOSE': True,
 'WORD_EMBEDDING_SIZE': 128}
Data set sizes (number of sentence pairs):
train 46680
valid 5835
test 5835 

First training example:
src: public java.lang.String METHOD_1 ( ) { return new TYPE_1 ( STRING_1 ) . format ( VAR_1 [ ( ( VAR_1 . length ) - 1 ) ] . getTime ( ) ) ; }
trg: public java.lang.String METHOD_1 ( ) { return new TYPE_1 ( STRING_1 ) . format ( VAR_1 [ ( ( type ) - 1 ) ] . getTime ( ) ) ; }
diff_alignment: удаление удаление замена
diff_prev: VAR_1 . length
diff_updated: паддинг паддинг type 

Most common words:
         (     430398
         )     430228
   паддинг     303839
  удаление     217186
         ;     212760
         .     170394
     VAR_1     168782
         {     129358
         }     129328
  METHOD_1     107650 

First 10 words:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 паддинг
07 удаление
08 ;
09 . 

Special words frequency and ids: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 33822 25
удаление 217186 7
добавление 86653 16
равенство 0 0
паддинг 303839 6
Number of words (types): 437
Epoch 0 / 1000
Epoch Step: 5 / 730 Loss: 165.64129638671875 Tokens per Sec: 7693.096849292994
Epoch Step: 10 / 730 Loss: 118.35037994384766 Tokens per Sec: 18858.91178810805
Epoch Step: 15 / 730 Loss: 104.80477142333984 Tokens per Sec: 17546.556692511796
Epoch Step: 20 / 730 Loss: 83.14847564697266 Tokens per Sec: 15367.8682766191
Epoch Step: 25 / 730 Loss: 86.00205993652344 Tokens per Sec: 15087.529816782033
Epoch Step: 30 / 730 Loss: 123.44786834716797 Tokens per Sec: 18252.92084491641
Epoch Step: 35 / 730 Loss: 201.48109436035156 Tokens per Sec: 20047.693312743144
Epoch Step: 40 / 730 Loss: 127.5083999633789 Tokens per Sec: 19285.15965452836
Epoch Step: 45 / 730 Loss: 73.53279876708984 Tokens per Sec: 16118.140125184833
Epoch Step: 50 / 730 Loss: 56.83467102050781 Tokens per Sec: 16344.081400157986
Epoch Step: 55 / 730 Loss: 57.51716613769531 Tokens per Sec: 15670.145874768028
Epoch Step: 60 / 730 Loss: 59.79669189453125 Tokens per Sec: 19680.93414618187
Epoch Step: 65 / 730 Loss: 42.77030563354492 Tokens per Sec: 16276.585156550831
Epoch Step: 70 / 730 Loss: 75.78266906738281 Tokens per Sec: 19028.953125930057
Epoch Step: 75 / 730 Loss: 60.457855224609375 Tokens per Sec: 14179.033298620128
Epoch Step: 80 / 730 Loss: 126.00353240966797 Tokens per Sec: 18960.7291527567
Epoch Step: 85 / 730 Loss: 121.89691925048828 Tokens per Sec: 19157.647799709288
Epoch Step: 90 / 730 Loss: 92.11801147460938 Tokens per Sec: 16131.666011958205
Epoch Step: 95 / 730 Loss: 112.8262939453125 Tokens per Sec: 17597.883581040547
Epoch Step: 100 / 730 Loss: 81.85381317138672 Tokens per Sec: 19794.681052808464
Epoch Step: 105 / 730 Loss: 130.48403930664062 Tokens per Sec: 18488.794966736565
Epoch Step: 110 / 730 Loss: 128.35665893554688 Tokens per Sec: 20028.480011860687
Epoch Step: 115 / 730 Loss: 97.3176040649414 Tokens per Sec: 15805.84823081291
Epoch Step: 120 / 730 Loss: 38.654624938964844 Tokens per Sec: 14584.235955456707
Epoch Step: 125 / 730 Loss: 112.18218231201172 Tokens per Sec: 20329.959967930776
Epoch Step: 130 / 730 Loss: 31.740341186523438 Tokens per Sec: 14805.183417157063
Epoch Step: 135 / 730 Loss: 34.89376449584961 Tokens per Sec: 18136.96151734931
Epoch Step: 140 / 730 Loss: 99.12834930419922 Tokens per Sec: 18392.67564246522
Epoch Step: 145 / 730 Loss: 83.98029327392578 Tokens per Sec: 18230.112800392348
Epoch Step: 150 / 730 Loss: 87.96237182617188 Tokens per Sec: 17521.578183382717
Epoch Step: 155 / 730 Loss: 119.9813461303711 Tokens per Sec: 18476.226385494338
Epoch Step: 160 / 730 Loss: 136.03981018066406 Tokens per Sec: 17449.281643100574
Epoch Step: 165 / 730 Loss: 40.45378875732422 Tokens per Sec: 16698.436578746863
Epoch Step: 170 / 730 Loss: 81.36119079589844 Tokens per Sec: 15983.774800936928
Epoch Step: 175 / 730 Loss: 44.50810623168945 Tokens per Sec: 18137.486990960835
Epoch Step: 180 / 730 Loss: 119.72660827636719 Tokens per Sec: 18832.728336396904
Epoch Step: 185 / 730 Loss: 61.54584503173828 Tokens per Sec: 19473.469034124468
Epoch Step: 190 / 730 Loss: 97.34625244140625 Tokens per Sec: 18055.46569818841
Epoch Step: 195 / 730 Loss: 84.0221176147461 Tokens per Sec: 14994.110074639337
Epoch Step: 200 / 730 Loss: 109.95011138916016 Tokens per Sec: 19529.98473750199
Epoch Step: 205 / 730 Loss: 31.504291534423828 Tokens per Sec: 14304.565538692847
Epoch Step: 210 / 730 Loss: 68.13008880615234 Tokens per Sec: 15553.104504421572
Epoch Step: 215 / 730 Loss: 57.882911682128906 Tokens per Sec: 17608.530488456
Epoch Step: 220 / 730 Loss: 78.89564514160156 Tokens per Sec: 18843.225337175398
Epoch Step: 225 / 730 Loss: 51.18138122558594 Tokens per Sec: 16315.301336302111
Epoch Step: 230 / 730 Loss: 61.31703186035156 Tokens per Sec: 17901.209112644377
Epoch Step: 235 / 730 Loss: 139.3744659423828 Tokens per Sec: 18004.585174236134
Epoch Step: 240 / 730 Loss: 85.52552795410156 Tokens per Sec: 17356.30971567477
Epoch Step: 245 / 730 Loss: 41.38123321533203 Tokens per Sec: 18050.366711331484
Epoch Step: 250 / 730 Loss: 87.46987915039062 Tokens per Sec: 16377.706575093065
Epoch Step: 255 / 730 Loss: 125.59681701660156 Tokens per Sec: 18513.776786270122
Epoch Step: 260 / 730 Loss: 136.2643280029297 Tokens per Sec: 18416.766137644525
Epoch Step: 265 / 730 Loss: 64.83743286132812 Tokens per Sec: 17264.937618815606
Epoch Step: 270 / 730 Loss: 53.55247116088867 Tokens per Sec: 16687.231255234525
Epoch Step: 275 / 730 Loss: 44.79071044921875 Tokens per Sec: 20773.96515659216
Epoch Step: 280 / 730 Loss: 102.880859375 Tokens per Sec: 17665.634680653846
Epoch Step: 285 / 730 Loss: 29.420665740966797 Tokens per Sec: 17130.554005340375
Epoch Step: 290 / 730 Loss: 127.14070892333984 Tokens per Sec: 18311.995911558177
Epoch Step: 295 / 730 Loss: 59.39962387084961 Tokens per Sec: 18713.313838540955
Epoch Step: 300 / 730 Loss: 58.1153564453125 Tokens per Sec: 18571.654810023483
Epoch Step: 305 / 730 Loss: 51.151329040527344 Tokens per Sec: 16360.673655872228
Epoch Step: 310 / 730 Loss: 51.61051559448242 Tokens per Sec: 18651.022994838262
Epoch Step: 315 / 730 Loss: 51.53189468383789 Tokens per Sec: 18065.69096195076
Epoch Step: 320 / 730 Loss: 70.27734375 Tokens per Sec: 14150.320400445387
Epoch Step: 325 / 730 Loss: 72.83805847167969 Tokens per Sec: 20241.74428371082
Epoch Step: 330 / 730 Loss: 29.142898559570312 Tokens per Sec: 16433.98476845796
Epoch Step: 335 / 730 Loss: 44.05339431762695 Tokens per Sec: 17106.603673398575
Epoch Step: 340 / 730 Loss: 108.95779418945312 Tokens per Sec: 17899.94364582644
Epoch Step: 345 / 730 Loss: 104.95600128173828 Tokens per Sec: 20306.361816323897
Epoch Step: 350 / 730 Loss: 45.04623031616211 Tokens per Sec: 18306.87556657154
Epoch Step: 355 / 730 Loss: 82.86814880371094 Tokens per Sec: 17192.89213506667
Epoch Step: 360 / 730 Loss: 62.535888671875 Tokens per Sec: 15335.10559150414
Epoch Step: 365 / 730 Loss: 102.57283020019531 Tokens per Sec: 16630.053958268727
Epoch Step: 370 / 730 Loss: 91.36359405517578 Tokens per Sec: 15259.707897517597
Epoch Step: 375 / 730 Loss: 96.24685668945312 Tokens per Sec: 15802.474111175447
Epoch Step: 380 / 730 Loss: 90.13455200195312 Tokens per Sec: 18454.936166467724
Epoch Step: 385 / 730 Loss: 45.09755325317383 Tokens per Sec: 16890.522459939704
Epoch Step: 390 / 730 Loss: 31.948362350463867 Tokens per Sec: 16256.016355358584
Epoch Step: 395 / 730 Loss: 41.005550384521484 Tokens per Sec: 19646.20546369701
Epoch Step: 400 / 730 Loss: 94.16588592529297 Tokens per Sec: 17277.531763870815
Epoch Step: 405 / 730 Loss: 93.49189758300781 Tokens per Sec: 15871.527769707263
Epoch Step: 410 / 730 Loss: 78.79530334472656 Tokens per Sec: 18017.78737090724
Epoch Step: 415 / 730 Loss: 50.49447250366211 Tokens per Sec: 18863.53587059241
Epoch Step: 420 / 730 Loss: 89.0536880493164 Tokens per Sec: 18587.2483756459
Epoch Step: 425 / 730 Loss: 50.877655029296875 Tokens per Sec: 18019.697692605365
Epoch Step: 430 / 730 Loss: 83.0215072631836 Tokens per Sec: 19009.044723876475
Epoch Step: 435 / 730 Loss: 100.96449279785156 Tokens per Sec: 18188.84966016591
Epoch Step: 440 / 730 Loss: 33.492652893066406 Tokens per Sec: 16116.267133154144
Epoch Step: 445 / 730 Loss: 82.3018798828125 Tokens per Sec: 21297.551733659242
Epoch Step: 450 / 730 Loss: 162.3753662109375 Tokens per Sec: 20000.92392135033
Epoch Step: 455 / 730 Loss: 90.93489074707031 Tokens per Sec: 15681.428422682524
Epoch Step: 460 / 730 Loss: 30.9754638671875 Tokens per Sec: 17648.41164363762
Epoch Step: 465 / 730 Loss: 55.41773223876953 Tokens per Sec: 19183.012858398535
Epoch Step: 470 / 730 Loss: 45.65570068359375 Tokens per Sec: 20194.05331279532
Epoch Step: 475 / 730 Loss: 61.00044631958008 Tokens per Sec: 14660.238681295108
Epoch Step: 480 / 730 Loss: 128.28076171875 Tokens per Sec: 18004.41505698225
Epoch Step: 485 / 730 Loss: 110.84777069091797 Tokens per Sec: 18730.561897733907
Epoch Step: 490 / 730 Loss: 31.392723083496094 Tokens per Sec: 14498.499997571396
Epoch Step: 495 / 730 Loss: 73.3184814453125 Tokens per Sec: 17307.4531161517
Epoch Step: 500 / 730 Loss: 148.89825439453125 Tokens per Sec: 17594.04190188692
Epoch Step: 505 / 730 Loss: 49.27445983886719 Tokens per Sec: 19825.86197040103
Epoch Step: 510 / 730 Loss: 53.312774658203125 Tokens per Sec: 18385.833618757963
Epoch Step: 515 / 730 Loss: 37.02513885498047 Tokens per Sec: 17529.896981920432
Epoch Step: 520 / 730 Loss: 41.722930908203125 Tokens per Sec: 15410.13516947858
Epoch Step: 525 / 730 Loss: 31.615711212158203 Tokens per Sec: 16303.908292799104
Epoch Step: 530 / 730 Loss: 66.70217895507812 Tokens per Sec: 18203.496415638023
Epoch Step: 535 / 730 Loss: 57.52422332763672 Tokens per Sec: 14003.733350465052
Epoch Step: 540 / 730 Loss: 69.72672271728516 Tokens per Sec: 14193.772712269367
Epoch Step: 545 / 730 Loss: 107.23238372802734 Tokens per Sec: 21097.218483942008
Epoch Step: 550 / 730 Loss: 41.411346435546875 Tokens per Sec: 17153.179410510616
Epoch Step: 555 / 730 Loss: 44.515663146972656 Tokens per Sec: 19251.827675252538
Epoch Step: 560 / 730 Loss: 45.29345703125 Tokens per Sec: 17879.40967798836
Epoch Step: 565 / 730 Loss: 86.89988708496094 Tokens per Sec: 16907.2560128326
Epoch Step: 570 / 730 Loss: 84.97958374023438 Tokens per Sec: 18064.0920471431
Epoch Step: 575 / 730 Loss: 91.7462158203125 Tokens per Sec: 21329.35667139768
Epoch Step: 580 / 730 Loss: 100.0652084350586 Tokens per Sec: 20813.961903598174
Epoch Step: 585 / 730 Loss: 27.66696548461914 Tokens per Sec: 15480.987014658638
Epoch Step: 590 / 730 Loss: 89.61204528808594 Tokens per Sec: 17755.241822981425
Epoch Step: 595 / 730 Loss: 80.08110046386719 Tokens per Sec: 16164.46773144776
Epoch Step: 600 / 730 Loss: 116.04033660888672 Tokens per Sec: 20160.900290614605
Epoch Step: 605 / 730 Loss: 26.12788200378418 Tokens per Sec: 14763.098863038964
Epoch Step: 610 / 730 Loss: 94.91547393798828 Tokens per Sec: 17579.48275160122
Epoch Step: 615 / 730 Loss: 141.90855407714844 Tokens per Sec: 21466.807028393512
Epoch Step: 620 / 730 Loss: 60.672332763671875 Tokens per Sec: 17278.67334019579
Epoch Step: 625 / 730 Loss: 94.97251892089844 Tokens per Sec: 18489.855617491867
Epoch Step: 630 / 730 Loss: 82.34619903564453 Tokens per Sec: 17102.11488237798
Epoch Step: 635 / 730 Loss: 47.88761901855469 Tokens per Sec: 15272.34403037119
Epoch Step: 640 / 730 Loss: 75.42681884765625 Tokens per Sec: 15867.721587965507
Epoch Step: 645 / 730 Loss: 57.53490447998047 Tokens per Sec: 17418.014490914764
Epoch Step: 650 / 730 Loss: 97.18696594238281 Tokens per Sec: 21515.933963005908
Epoch Step: 655 / 730 Loss: 112.96859741210938 Tokens per Sec: 17934.393698533866
Epoch Step: 660 / 730 Loss: 94.86863708496094 Tokens per Sec: 18636.71364285584
Epoch Step: 665 / 730 Loss: 46.095890045166016 Tokens per Sec: 20307.53736355439
Epoch Step: 670 / 730 Loss: 29.43659782409668 Tokens per Sec: 17561.32718010448
Epoch Step: 675 / 730 Loss: 50.05128860473633 Tokens per Sec: 12556.973929681462
Epoch Step: 680 / 730 Loss: 70.40675354003906 Tokens per Sec: 18941.148786071724
Epoch Step: 685 / 730 Loss: 67.48074340820312 Tokens per Sec: 18195.21580148221
Epoch Step: 690 / 730 Loss: 91.72098541259766 Tokens per Sec: 13626.147931960775
Epoch Step: 695 / 730 Loss: 23.934240341186523 Tokens per Sec: 19297.62118313807
Epoch Step: 700 / 730 Loss: 86.10044860839844 Tokens per Sec: 17807.68751769035
Epoch Step: 705 / 730 Loss: 81.7678451538086 Tokens per Sec: 14629.184139912524
Epoch Step: 710 / 730 Loss: 58.3113899230957 Tokens per Sec: 13489.68029996041
Epoch Step: 715 / 730 Loss: 80.34420776367188 Tokens per Sec: 16346.74119357175
Epoch Step: 720 / 730 Loss: 85.0062255859375 Tokens per Sec: 15446.540568307417
Epoch Step: 725 / 730 Loss: 60.051666259765625 Tokens per Sec: 15791.426675483066
Epoch Step: 730 / 730 Loss: 97.12181091308594 Tokens per Sec: 12652.615200229751
Epoch ended with duration 0:01:20.824884
Train perplexity: 13.746622883703223
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 > ( TYPE_1 VAR_1 ) { return VAR_1 . METHOD_2 ( ) ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , int VAR_1 ) { return VAR_1 . METHOD_2 ( VAR_1 , VAR_1 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_1 = new TYPE_1 . METHOD_2 ( ) ; }[0m
Epoch ended with duration 0:00:03.339837
Validation perplexity: 6.7226331144810825
Model saved best_on_validation!
Model saved checkpoint!
Epoch 1 / 1000
Epoch Step: 5 / 730 Loss: 55.89954376220703 Tokens per Sec: 14044.354422883633
Epoch Step: 10 / 730 Loss: 51.81248474121094 Tokens per Sec: 17410.891340910228
Epoch Step: 15 / 730 Loss: 63.74125671386719 Tokens per Sec: 19703.313924806225
Epoch Step: 20 / 730 Loss: 45.074615478515625 Tokens per Sec: 18567.488320725522
Epoch Step: 25 / 730 Loss: 93.40486145019531 Tokens per Sec: 19579.377487835824
Epoch Step: 30 / 730 Loss: 60.411109924316406 Tokens per Sec: 20032.69094701431
Epoch Step: 35 / 730 Loss: 41.548519134521484 Tokens per Sec: 15898.481989813528
Epoch Step: 40 / 730 Loss: 50.07420349121094 Tokens per Sec: 19047.036510967304
Epoch Step: 45 / 730 Loss: 87.80884552001953 Tokens per Sec: 17280.854738615275
Epoch Step: 50 / 730 Loss: 60.576263427734375 Tokens per Sec: 19467.099671849428
Epoch Step: 55 / 730 Loss: 25.017620086669922 Tokens per Sec: 19593.055881321656
Epoch Step: 60 / 730 Loss: 31.759910583496094 Tokens per Sec: 14206.740328152053
Epoch Step: 65 / 730 Loss: 44.765262603759766 Tokens per Sec: 16571.523964551638
Epoch Step: 70 / 730 Loss: 62.49186706542969 Tokens per Sec: 20152.090242834514
Epoch Step: 75 / 730 Loss: 23.78070831298828 Tokens per Sec: 17652.578840688264
Epoch Step: 80 / 730 Loss: 56.068172454833984 Tokens per Sec: 19185.38925798804
Epoch Step: 85 / 730 Loss: 34.442405700683594 Tokens per Sec: 12363.44610073319
Epoch Step: 90 / 730 Loss: 32.2955322265625 Tokens per Sec: 14393.95164650018
Epoch Step: 95 / 730 Loss: 26.213171005249023 Tokens per Sec: 17948.595361704385
Epoch Step: 100 / 730 Loss: 21.85503578186035 Tokens per Sec: 17573.43709801829
Epoch Step: 105 / 730 Loss: 55.083229064941406 Tokens per Sec: 16751.09845443659
Epoch Step: 110 / 730 Loss: 49.1614990234375 Tokens per Sec: 15691.542216268837
Epoch Step: 115 / 730 Loss: 32.97783660888672 Tokens per Sec: 13706.031402453145
Epoch Step: 120 / 730 Loss: 67.53068542480469 Tokens per Sec: 16656.731749001094
Epoch Step: 125 / 730 Loss: 44.15581130981445 Tokens per Sec: 18125.042121179216
Epoch Step: 130 / 730 Loss: 50.664947509765625 Tokens per Sec: 16114.453199619093
Epoch Step: 135 / 730 Loss: 41.42837142944336 Tokens per Sec: 19075.773175151287
Epoch Step: 140 / 730 Loss: 54.400726318359375 Tokens per Sec: 18238.9662848758
Epoch Step: 145 / 730 Loss: 37.55681228637695 Tokens per Sec: 18428.87443729547
Epoch Step: 150 / 730 Loss: 20.923702239990234 Tokens per Sec: 17635.484858291988
Epoch Step: 155 / 730 Loss: 65.01024627685547 Tokens per Sec: 17163.50021692122
Epoch Step: 160 / 730 Loss: 78.96791076660156 Tokens per Sec: 16074.569177553461
Epoch Step: 165 / 730 Loss: 107.29439544677734 Tokens per Sec: 18030.504384064585
Epoch Step: 170 / 730 Loss: 84.1750717163086 Tokens per Sec: 18350.04048656226
Epoch Step: 175 / 730 Loss: 64.91153717041016 Tokens per Sec: 17625.10545672839
Epoch Step: 180 / 730 Loss: 70.55670166015625 Tokens per Sec: 16402.780002566084
Epoch Step: 185 / 730 Loss: 94.81641387939453 Tokens per Sec: 19815.182539861667
Epoch Step: 190 / 730 Loss: 28.59458351135254 Tokens per Sec: 18557.904589324557
Epoch Step: 195 / 730 Loss: 20.944412231445312 Tokens per Sec: 20827.117953229088
Epoch Step: 200 / 730 Loss: 69.43256378173828 Tokens per Sec: 17503.875901395222
Epoch Step: 205 / 730 Loss: 70.06194305419922 Tokens per Sec: 18048.939654739548
Epoch Step: 210 / 730 Loss: 81.62125396728516 Tokens per Sec: 18980.85641017974
Epoch Step: 215 / 730 Loss: 37.2928352355957 Tokens per Sec: 16574.408700134485
Epoch Step: 220 / 730 Loss: 72.63174438476562 Tokens per Sec: 18769.93309341529
Epoch Step: 225 / 730 Loss: 30.77783203125 Tokens per Sec: 17050.62666216678
Epoch Step: 230 / 730 Loss: 36.946311950683594 Tokens per Sec: 13162.869910946576
Epoch Step: 235 / 730 Loss: 55.21603775024414 Tokens per Sec: 18931.864429195855
Epoch Step: 240 / 730 Loss: 20.98126792907715 Tokens per Sec: 17352.006558854693
Epoch Step: 245 / 730 Loss: 28.76411247253418 Tokens per Sec: 20343.275958516213
Epoch Step: 250 / 730 Loss: 40.97905349731445 Tokens per Sec: 19590.649768360156
Epoch Step: 255 / 730 Loss: 41.129173278808594 Tokens per Sec: 15748.915549959529
Epoch Step: 260 / 730 Loss: 24.777103424072266 Tokens per Sec: 21553.252590353466
Epoch Step: 265 / 730 Loss: 49.555824279785156 Tokens per Sec: 19797.61972015702
Epoch Step: 270 / 730 Loss: 75.64508056640625 Tokens per Sec: 15423.258316738946
Epoch Step: 275 / 730 Loss: 87.63005828857422 Tokens per Sec: 17822.18357284138
Epoch Step: 280 / 730 Loss: 27.915821075439453 Tokens per Sec: 16534.46947449754
Epoch Step: 285 / 730 Loss: 21.77400016784668 Tokens per Sec: 17860.366684080578
Epoch Step: 290 / 730 Loss: 31.19124412536621 Tokens per Sec: 15829.82738102883
Epoch Step: 295 / 730 Loss: 21.836946487426758 Tokens per Sec: 17427.42080903464
Epoch Step: 300 / 730 Loss: 91.62805938720703 Tokens per Sec: 15870.99319316291
Epoch Step: 305 / 730 Loss: 34.62453842163086 Tokens per Sec: 13503.865082996437
Epoch Step: 310 / 730 Loss: 60.66019058227539 Tokens per Sec: 20621.571588368548
Epoch Step: 315 / 730 Loss: 73.1629409790039 Tokens per Sec: 19932.756576154003
Epoch Step: 320 / 730 Loss: 118.38722229003906 Tokens per Sec: 17312.22802325576
Epoch Step: 325 / 730 Loss: 28.221397399902344 Tokens per Sec: 17701.115603509308
Epoch Step: 330 / 730 Loss: 71.45506286621094 Tokens per Sec: 19232.40075030869
Epoch Step: 335 / 730 Loss: 50.41008377075195 Tokens per Sec: 17142.804031856067
Epoch Step: 340 / 730 Loss: 68.76387023925781 Tokens per Sec: 14727.320752342417
Epoch Step: 345 / 730 Loss: 58.13988494873047 Tokens per Sec: 20481.632139522797
Epoch Step: 350 / 730 Loss: 58.02223587036133 Tokens per Sec: 17020.716663645482
Epoch Step: 355 / 730 Loss: 56.89276885986328 Tokens per Sec: 18610.918882257633
Epoch Step: 360 / 730 Loss: 40.38798522949219 Tokens per Sec: 17140.890248048563
Epoch Step: 365 / 730 Loss: 58.51583480834961 Tokens per Sec: 14957.454257460788
Epoch Step: 370 / 730 Loss: 85.5439453125 Tokens per Sec: 17926.63817565555
Epoch Step: 375 / 730 Loss: 29.76342010498047 Tokens per Sec: 15649.924486728563
Epoch Step: 380 / 730 Loss: 18.60350799560547 Tokens per Sec: 14882.110385071217
Epoch Step: 385 / 730 Loss: 36.029300689697266 Tokens per Sec: 17875.103582916192
Epoch Step: 390 / 730 Loss: 55.83245849609375 Tokens per Sec: 18877.872496195887
Epoch Step: 395 / 730 Loss: 78.83589172363281 Tokens per Sec: 17302.564401178224
Epoch Step: 400 / 730 Loss: 62.51124954223633 Tokens per Sec: 19048.59750355471
Epoch Step: 405 / 730 Loss: 39.3438720703125 Tokens per Sec: 16513.279389653264
Epoch Step: 410 / 730 Loss: 30.004844665527344 Tokens per Sec: 18045.406494601764
Epoch Step: 415 / 730 Loss: 76.15625762939453 Tokens per Sec: 14215.477041885597
Epoch Step: 420 / 730 Loss: 66.78255462646484 Tokens per Sec: 18268.05227705767
Epoch Step: 425 / 730 Loss: 51.14177322387695 Tokens per Sec: 17431.031728521575
Epoch Step: 430 / 730 Loss: 39.94808578491211 Tokens per Sec: 20641.707513470887
Epoch Step: 435 / 730 Loss: 29.473257064819336 Tokens per Sec: 17030.209975816313
Epoch Step: 440 / 730 Loss: 33.83574295043945 Tokens per Sec: 19692.85088637317
Epoch Step: 445 / 730 Loss: 47.483001708984375 Tokens per Sec: 17581.041930624502
Epoch Step: 450 / 730 Loss: 37.93827819824219 Tokens per Sec: 15687.441747941852
Epoch Step: 455 / 730 Loss: 52.86196517944336 Tokens per Sec: 14643.653910727042
Epoch Step: 460 / 730 Loss: 24.566585540771484 Tokens per Sec: 17773.27093261925
Epoch Step: 465 / 730 Loss: 27.6507568359375 Tokens per Sec: 16254.065340372541
Epoch Step: 470 / 730 Loss: 19.865734100341797 Tokens per Sec: 20716.6279530277
Epoch Step: 475 / 730 Loss: 52.41203308105469 Tokens per Sec: 19542.923446566576
Epoch Step: 480 / 730 Loss: 17.24505043029785 Tokens per Sec: 20970.30239316411
Epoch Step: 485 / 730 Loss: 17.446969985961914 Tokens per Sec: 17343.297265009256
Epoch Step: 490 / 730 Loss: 37.09111022949219 Tokens per Sec: 16586.66900958323
Epoch Step: 495 / 730 Loss: 50.021305084228516 Tokens per Sec: 14851.288023659214
Epoch Step: 500 / 730 Loss: 42.84861755371094 Tokens per Sec: 17257.002000710956
Epoch Step: 505 / 730 Loss: 74.2477798461914 Tokens per Sec: 20513.6655185824
Epoch Step: 510 / 730 Loss: 59.39767074584961 Tokens per Sec: 17640.474052384016
Epoch Step: 515 / 730 Loss: 36.07977294921875 Tokens per Sec: 17768.597145908778
Epoch Step: 520 / 730 Loss: 58.97444152832031 Tokens per Sec: 17989.55806416677
Epoch Step: 525 / 730 Loss: 30.94206428527832 Tokens per Sec: 15667.809060179809
Epoch Step: 530 / 730 Loss: 15.206461906433105 Tokens per Sec: 17642.533496799522
Epoch Step: 535 / 730 Loss: 47.44062423706055 Tokens per Sec: 17814.198271410914
Epoch Step: 540 / 730 Loss: 39.223148345947266 Tokens per Sec: 21145.73548201272
Epoch Step: 545 / 730 Loss: 32.70731735229492 Tokens per Sec: 15833.89989937495
Epoch Step: 550 / 730 Loss: 24.643718719482422 Tokens per Sec: 16790.238637345894
Epoch Step: 555 / 730 Loss: 53.57865905761719 Tokens per Sec: 20556.789375868353
Epoch Step: 560 / 730 Loss: 45.29240417480469 Tokens per Sec: 16611.774437795968
Epoch Step: 565 / 730 Loss: 66.57414245605469 Tokens per Sec: 17163.052805896084
Epoch Step: 570 / 730 Loss: 37.169857025146484 Tokens per Sec: 17942.080072226545
Epoch Step: 575 / 730 Loss: 40.654197692871094 Tokens per Sec: 15576.221743639348
Epoch Step: 580 / 730 Loss: 40.913108825683594 Tokens per Sec: 16702.26959120766
Epoch Step: 585 / 730 Loss: 25.987272262573242 Tokens per Sec: 14860.78583255481
Epoch Step: 590 / 730 Loss: 35.03392028808594 Tokens per Sec: 18110.408967598363
Epoch Step: 595 / 730 Loss: 30.95001983642578 Tokens per Sec: 20497.353976469316
Epoch Step: 600 / 730 Loss: 17.920730590820312 Tokens per Sec: 19596.921572949712
Epoch Step: 605 / 730 Loss: 18.86290168762207 Tokens per Sec: 15230.019920497094
Epoch Step: 610 / 730 Loss: 47.0455436706543 Tokens per Sec: 19247.21728874369
Epoch Step: 615 / 730 Loss: 51.239376068115234 Tokens per Sec: 18611.039460344473
Epoch Step: 620 / 730 Loss: 46.84690475463867 Tokens per Sec: 20588.636691694846
Epoch Step: 625 / 730 Loss: 76.24724578857422 Tokens per Sec: 17550.633892405192
Epoch Step: 630 / 730 Loss: 21.023012161254883 Tokens per Sec: 17759.52192954552
Epoch Step: 635 / 730 Loss: 46.31148910522461 Tokens per Sec: 14827.162928629623
Epoch Step: 640 / 730 Loss: 26.805822372436523 Tokens per Sec: 17763.265456172954
Epoch Step: 645 / 730 Loss: 58.120628356933594 Tokens per Sec: 18961.302409658256
Epoch Step: 650 / 730 Loss: 25.617063522338867 Tokens per Sec: 18655.600224812548
Epoch Step: 655 / 730 Loss: 47.28978729248047 Tokens per Sec: 19017.23118931233
Epoch Step: 660 / 730 Loss: 29.46548843383789 Tokens per Sec: 17939.205486080205
Epoch Step: 665 / 730 Loss: 25.945241928100586 Tokens per Sec: 21303.97417314582
Epoch Step: 670 / 730 Loss: 131.58824157714844 Tokens per Sec: 19143.50662659869
Epoch Step: 675 / 730 Loss: 45.5550422668457 Tokens per Sec: 18624.179690925455
Epoch Step: 680 / 730 Loss: 35.095664978027344 Tokens per Sec: 14044.107016138
Epoch Step: 685 / 730 Loss: 37.84245300292969 Tokens per Sec: 17217.88200442346
Epoch Step: 690 / 730 Loss: 51.890926361083984 Tokens per Sec: 15778.83026613667
Epoch Step: 695 / 730 Loss: 25.00174331665039 Tokens per Sec: 14711.28806515551
Epoch Step: 700 / 730 Loss: 32.71659469604492 Tokens per Sec: 16998.74759728924
Epoch Step: 705 / 730 Loss: 21.99205207824707 Tokens per Sec: 13709.171964870407
Epoch Step: 710 / 730 Loss: 108.38209533691406 Tokens per Sec: 14603.464258311154
Epoch Step: 715 / 730 Loss: 40.11876678466797 Tokens per Sec: 15716.389394334881
Epoch Step: 720 / 730 Loss: 67.25787353515625 Tokens per Sec: 16029.306499095255
Epoch Step: 725 / 730 Loss: 19.620277404785156 Tokens per Sec: 15422.163587699384
Epoch Step: 730 / 730 Loss: 38.27574157714844 Tokens per Sec: 16253.64273144132
Epoch ended with duration 0:01:20.173106
Train perplexity: 5.728484178616122
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public TYPE_1 < TYPE_1 > METHOD_1 ( ) { return new TYPE_1 ( VAR_2 ) ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_1 , java.lang.String VAR_2 ) { return VAR_1 . METHOD_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . VAR_1 . VAR_1 . VAR_1 . METHOD_3 ( ) ; }[0m
Epoch ended with duration 0:00:03.302475
Validation perplexity: 4.304788938727805
Model saved best_on_validation!
Epoch 2 / 1000
Epoch Step: 5 / 730 Loss: 38.17013168334961 Tokens per Sec: 14593.089717232671
Epoch Step: 10 / 730 Loss: 37.7486686706543 Tokens per Sec: 18469.88034437816
Epoch Step: 15 / 730 Loss: 17.657421112060547 Tokens per Sec: 16796.70494830925
Epoch Step: 20 / 730 Loss: 51.246456146240234 Tokens per Sec: 19007.412501208262
Epoch Step: 25 / 730 Loss: 33.160282135009766 Tokens per Sec: 17873.252645682616
Epoch Step: 30 / 730 Loss: 24.33359718322754 Tokens per Sec: 17537.481347451012
Epoch Step: 35 / 730 Loss: 43.81017303466797 Tokens per Sec: 16375.478667515445
Epoch Step: 40 / 730 Loss: 29.647388458251953 Tokens per Sec: 15194.994857216441
Epoch Step: 45 / 730 Loss: 43.52629852294922 Tokens per Sec: 14824.141309429699
Epoch Step: 50 / 730 Loss: 104.67218780517578 Tokens per Sec: 18213.356159288716
Epoch Step: 55 / 730 Loss: 28.385953903198242 Tokens per Sec: 18912.777829443676
Epoch Step: 60 / 730 Loss: 57.9028205871582 Tokens per Sec: 20383.223909671517
Epoch Step: 65 / 730 Loss: 52.48389434814453 Tokens per Sec: 17814.680199448314
Epoch Step: 70 / 730 Loss: 54.4893913269043 Tokens per Sec: 18713.582279392962
Epoch Step: 75 / 730 Loss: 43.26597213745117 Tokens per Sec: 15776.525970417304
Epoch Step: 80 / 730 Loss: 21.878156661987305 Tokens per Sec: 17036.02543496724
Epoch Step: 85 / 730 Loss: 55.966487884521484 Tokens per Sec: 16741.899583691487
Epoch Step: 90 / 730 Loss: 23.32204818725586 Tokens per Sec: 15387.994346748514
Epoch Step: 95 / 730 Loss: 19.891918182373047 Tokens per Sec: 16034.688070297718
Epoch Step: 100 / 730 Loss: 68.82820892333984 Tokens per Sec: 20970.602008316917
Epoch Step: 105 / 730 Loss: 38.57032012939453 Tokens per Sec: 16914.13924998759
Epoch Step: 110 / 730 Loss: 20.298988342285156 Tokens per Sec: 19753.915773452343
Epoch Step: 115 / 730 Loss: 34.21895217895508 Tokens per Sec: 19109.92860639048
Epoch Step: 120 / 730 Loss: 54.3602180480957 Tokens per Sec: 19412.60517898467
Epoch Step: 125 / 730 Loss: 47.54170608520508 Tokens per Sec: 19420.088719448395
Epoch Step: 130 / 730 Loss: 87.54132080078125 Tokens per Sec: 15975.104279169183
Epoch Step: 135 / 730 Loss: 16.182714462280273 Tokens per Sec: 18219.4567808523
Epoch Step: 140 / 730 Loss: 14.010988235473633 Tokens per Sec: 15354.57752455384
Epoch Step: 145 / 730 Loss: 35.20159149169922 Tokens per Sec: 16903.064438839294
Epoch Step: 150 / 730 Loss: 66.49364471435547 Tokens per Sec: 19276.93623627417
Epoch Step: 155 / 730 Loss: 26.14553451538086 Tokens per Sec: 17964.317706081354
Epoch Step: 160 / 730 Loss: 19.889183044433594 Tokens per Sec: 19669.705883690032
Epoch Step: 165 / 730 Loss: 15.095901489257812 Tokens per Sec: 15824.705969256449
Epoch Step: 170 / 730 Loss: 77.84176635742188 Tokens per Sec: 18278.78300885952
Epoch Step: 175 / 730 Loss: 16.26552963256836 Tokens per Sec: 15752.49050717148
Epoch Step: 180 / 730 Loss: 48.74005126953125 Tokens per Sec: 17783.16568524884
Epoch Step: 185 / 730 Loss: 150.4527130126953 Tokens per Sec: 20498.57159365609
Epoch Step: 190 / 730 Loss: 25.417194366455078 Tokens per Sec: 16154.202997858672
Epoch Step: 195 / 730 Loss: 47.66643524169922 Tokens per Sec: 18874.969136802105
Epoch Step: 200 / 730 Loss: 45.78671646118164 Tokens per Sec: 17998.142157406557
Epoch Step: 205 / 730 Loss: 29.19982147216797 Tokens per Sec: 16268.40332100759
Epoch Step: 210 / 730 Loss: 18.143510818481445 Tokens per Sec: 16609.35691706289
Epoch Step: 215 / 730 Loss: 52.11310958862305 Tokens per Sec: 19189.23646610559
Epoch Step: 220 / 730 Loss: 30.48832130432129 Tokens per Sec: 17823.199725160688
Epoch Step: 225 / 730 Loss: 47.31110382080078 Tokens per Sec: 19735.377913222415
Epoch Step: 230 / 730 Loss: 60.37875747680664 Tokens per Sec: 17892.856378357075
Epoch Step: 235 / 730 Loss: 46.25395965576172 Tokens per Sec: 16518.25620240418
Epoch Step: 240 / 730 Loss: 42.24224090576172 Tokens per Sec: 16920.07187789385
Epoch Step: 245 / 730 Loss: 46.78050231933594 Tokens per Sec: 17879.81902047457
Epoch Step: 250 / 730 Loss: 29.927387237548828 Tokens per Sec: 18376.990183824626
Epoch Step: 255 / 730 Loss: 48.558284759521484 Tokens per Sec: 18741.162219501337
Epoch Step: 260 / 730 Loss: 24.70171546936035 Tokens per Sec: 20206.843597968265
Epoch Step: 265 / 730 Loss: 15.71392822265625 Tokens per Sec: 17026.89660186274
Epoch Step: 270 / 730 Loss: 33.7391357421875 Tokens per Sec: 18741.935607037336
Epoch Step: 275 / 730 Loss: 23.262733459472656 Tokens per Sec: 16023.634861997945
Epoch Step: 280 / 730 Loss: 117.55662536621094 Tokens per Sec: 18822.27378699958
Epoch Step: 285 / 730 Loss: 21.161523818969727 Tokens per Sec: 12370.894290317778
Epoch Step: 290 / 730 Loss: 26.603187561035156 Tokens per Sec: 18150.151880583428
Epoch Step: 295 / 730 Loss: 65.68736267089844 Tokens per Sec: 20098.589882295906
Epoch Step: 300 / 730 Loss: 60.1988410949707 Tokens per Sec: 17616.467356103236
Epoch Step: 305 / 730 Loss: 27.359296798706055 Tokens per Sec: 20040.39784027292
Epoch Step: 310 / 730 Loss: 31.114730834960938 Tokens per Sec: 16232.278691948848
Epoch Step: 315 / 730 Loss: 22.62448501586914 Tokens per Sec: 17596.837396265688
Epoch Step: 320 / 730 Loss: 33.66350555419922 Tokens per Sec: 18030.136581254766
Epoch Step: 325 / 730 Loss: 13.727334022521973 Tokens per Sec: 14975.392211217519
Epoch Step: 330 / 730 Loss: 130.49713134765625 Tokens per Sec: 18148.395731738066
Epoch Step: 335 / 730 Loss: 46.56917190551758 Tokens per Sec: 17353.491683558714
Epoch Step: 340 / 730 Loss: 37.30409240722656 Tokens per Sec: 18985.876808346376
Epoch Step: 345 / 730 Loss: 22.997554779052734 Tokens per Sec: 18068.33554703682
Epoch Step: 350 / 730 Loss: 37.111244201660156 Tokens per Sec: 17631.37544297638
Epoch Step: 355 / 730 Loss: 55.089237213134766 Tokens per Sec: 19255.596897744403
Epoch Step: 360 / 730 Loss: 45.66844940185547 Tokens per Sec: 16028.07539364741
Epoch Step: 365 / 730 Loss: 27.998186111450195 Tokens per Sec: 19008.915849565492
Epoch Step: 370 / 730 Loss: 30.38545799255371 Tokens per Sec: 17061.0858338856
Epoch Step: 375 / 730 Loss: 15.080307960510254 Tokens per Sec: 17302.400245178753
Epoch Step: 380 / 730 Loss: 27.558460235595703 Tokens per Sec: 17989.35832431391
Epoch Step: 385 / 730 Loss: 57.07658004760742 Tokens per Sec: 17902.249442741002
Epoch Step: 390 / 730 Loss: 36.44065856933594 Tokens per Sec: 19116.623927083212
Epoch Step: 395 / 730 Loss: 13.218589782714844 Tokens per Sec: 17189.259544913486
Epoch Step: 400 / 730 Loss: 44.589073181152344 Tokens per Sec: 17381.306496597404
Epoch Step: 405 / 730 Loss: 62.1038818359375 Tokens per Sec: 18654.030527579805
Epoch Step: 410 / 730 Loss: 15.78722095489502 Tokens per Sec: 17737.943836684015
Epoch Step: 415 / 730 Loss: 34.2977294921875 Tokens per Sec: 21370.22206738665
Epoch Step: 420 / 730 Loss: 61.08320999145508 Tokens per Sec: 21467.30431459447
Epoch Step: 425 / 730 Loss: 13.497488975524902 Tokens per Sec: 19937.79163956193
Epoch Step: 430 / 730 Loss: 39.49260330200195 Tokens per Sec: 20146.496592941498
Epoch Step: 435 / 730 Loss: 47.98930740356445 Tokens per Sec: 17221.693147419508
Epoch Step: 440 / 730 Loss: 41.657474517822266 Tokens per Sec: 18718.377329502753
Epoch Step: 445 / 730 Loss: 25.820444107055664 Tokens per Sec: 16277.820271051038
Epoch Step: 450 / 730 Loss: 28.458938598632812 Tokens per Sec: 15077.34333624425
Epoch Step: 455 / 730 Loss: 17.08594512939453 Tokens per Sec: 16460.63722563826
Epoch Step: 460 / 730 Loss: 57.84747314453125 Tokens per Sec: 18555.19539079545
Epoch Step: 465 / 730 Loss: 14.586687088012695 Tokens per Sec: 16501.387269306426
Epoch Step: 470 / 730 Loss: 13.607833862304688 Tokens per Sec: 14799.668821768786
Epoch Step: 475 / 730 Loss: 20.163206100463867 Tokens per Sec: 15936.918104518401
Epoch Step: 480 / 730 Loss: 86.61079406738281 Tokens per Sec: 18215.084870097347
Epoch Step: 485 / 730 Loss: 23.97262954711914 Tokens per Sec: 18959.65287143149
Epoch Step: 490 / 730 Loss: 20.36907958984375 Tokens per Sec: 16289.245558931201
Epoch Step: 495 / 730 Loss: 20.619304656982422 Tokens per Sec: 17024.56910642045
Epoch Step: 500 / 730 Loss: 51.96147537231445 Tokens per Sec: 20518.16552945391
Epoch Step: 505 / 730 Loss: 39.183265686035156 Tokens per Sec: 18533.807075704583
Epoch Step: 510 / 730 Loss: 48.6833610534668 Tokens per Sec: 19234.732068080142
Epoch Step: 515 / 730 Loss: 41.446441650390625 Tokens per Sec: 15836.473948945337
Epoch Step: 520 / 730 Loss: 37.574607849121094 Tokens per Sec: 16917.470103403604
Epoch Step: 525 / 730 Loss: 40.644527435302734 Tokens per Sec: 18275.822341155046
Epoch Step: 530 / 730 Loss: 39.95283889770508 Tokens per Sec: 16215.517571170343
Epoch Step: 535 / 730 Loss: 30.542287826538086 Tokens per Sec: 18086.90660908688
Epoch Step: 540 / 730 Loss: 23.905941009521484 Tokens per Sec: 15281.364924460711
Epoch Step: 545 / 730 Loss: 138.6131591796875 Tokens per Sec: 20032.61459760152
Epoch Step: 550 / 730 Loss: 17.990291595458984 Tokens per Sec: 13466.640261543724
Epoch Step: 555 / 730 Loss: 47.69804000854492 Tokens per Sec: 20918.23956689445
Epoch Step: 560 / 730 Loss: 38.72477722167969 Tokens per Sec: 19951.52290273012
Epoch Step: 565 / 730 Loss: 16.605459213256836 Tokens per Sec: 17057.876157946863
Epoch Step: 570 / 730 Loss: 44.716468811035156 Tokens per Sec: 18425.679853807895
Epoch Step: 575 / 730 Loss: 41.54403305053711 Tokens per Sec: 15474.106047078296
Epoch Step: 580 / 730 Loss: 15.364623069763184 Tokens per Sec: 18661.29653896045
Epoch Step: 585 / 730 Loss: 30.911901473999023 Tokens per Sec: 16878.717902506043
Epoch Step: 590 / 730 Loss: 23.14577865600586 Tokens per Sec: 16086.075488645787
Epoch Step: 595 / 730 Loss: 145.60191345214844 Tokens per Sec: 17212.893692338865
Epoch Step: 600 / 730 Loss: 15.486931800842285 Tokens per Sec: 17458.93412805361
Epoch Step: 605 / 730 Loss: 24.75103759765625 Tokens per Sec: 17913.15629265954
Epoch Step: 610 / 730 Loss: 52.21637725830078 Tokens per Sec: 16127.85634015759
Epoch Step: 615 / 730 Loss: 34.964271545410156 Tokens per Sec: 16526.947164980844
Epoch Step: 620 / 730 Loss: 14.083284378051758 Tokens per Sec: 19519.463191656472
Epoch Step: 625 / 730 Loss: 39.464508056640625 Tokens per Sec: 18634.154329368987
Epoch Step: 630 / 730 Loss: 49.24111557006836 Tokens per Sec: 19915.835651618323
Epoch Step: 635 / 730 Loss: 47.97712326049805 Tokens per Sec: 18293.3663926041
Epoch Step: 640 / 730 Loss: 49.2125244140625 Tokens per Sec: 17372.5600099509
Epoch Step: 645 / 730 Loss: 31.91802978515625 Tokens per Sec: 19250.65950415802
Epoch Step: 650 / 730 Loss: 35.61775588989258 Tokens per Sec: 16957.132426768603
Epoch Step: 655 / 730 Loss: 47.55826950073242 Tokens per Sec: 17693.891785593194
Epoch Step: 660 / 730 Loss: 15.290539741516113 Tokens per Sec: 15937.916774028541
Epoch Step: 665 / 730 Loss: 42.80708312988281 Tokens per Sec: 17260.03815482191
Epoch Step: 670 / 730 Loss: 37.54863357543945 Tokens per Sec: 18858.813702048235
Epoch Step: 675 / 730 Loss: 19.32979393005371 Tokens per Sec: 16057.03193859524
Epoch Step: 680 / 730 Loss: 25.290475845336914 Tokens per Sec: 17838.503662727784
Epoch Step: 685 / 730 Loss: 131.25730895996094 Tokens per Sec: 18307.96358363549
Epoch Step: 690 / 730 Loss: 43.295108795166016 Tokens per Sec: 19581.005434883085
Epoch Step: 695 / 730 Loss: 55.49998092651367 Tokens per Sec: 18147.468388133933
Epoch Step: 700 / 730 Loss: 27.42888832092285 Tokens per Sec: 19366.268414207716
Epoch Step: 705 / 730 Loss: 21.76600456237793 Tokens per Sec: 15587.429491594026
Epoch Step: 710 / 730 Loss: 42.831748962402344 Tokens per Sec: 15230.265377892047
Epoch Step: 715 / 730 Loss: 22.962783813476562 Tokens per Sec: 14574.200122467604
Epoch Step: 720 / 730 Loss: 16.47378921508789 Tokens per Sec: 12295.894208812131
Epoch Step: 725 / 730 Loss: 42.950313568115234 Tokens per Sec: 15365.219012126872
Epoch Step: 730 / 730 Loss: 35.663021087646484 Tokens per Sec: 16794.039940308154
Epoch ended with duration 0:01:19.545405
Train perplexity: 3.90722026819466
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return new TYPE_1 ( ) ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . METHOD_1 ( VAR_1 ) ) ; return METHOD_1 ( VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; }[0m
Epoch ended with duration 0:00:03.282417
Validation perplexity: 3.043149857354015
Model saved best_on_validation!
Epoch 3 / 1000
Epoch Step: 5 / 730 Loss: 27.958677291870117 Tokens per Sec: 17909.67827897942
Epoch Step: 10 / 730 Loss: 18.659622192382812 Tokens per Sec: 15397.9797078185
Epoch Step: 15 / 730 Loss: 11.725687980651855 Tokens per Sec: 16078.430306835686
Epoch Step: 20 / 730 Loss: 35.751094818115234 Tokens per Sec: 15575.110137479132
Epoch Step: 25 / 730 Loss: 16.52304458618164 Tokens per Sec: 16500.775601492955
Epoch Step: 30 / 730 Loss: 31.909587860107422 Tokens per Sec: 16684.818707900868
Epoch Step: 35 / 730 Loss: 50.073944091796875 Tokens per Sec: 17268.472766748848
Epoch Step: 40 / 730 Loss: 11.613653182983398 Tokens per Sec: 15414.1004967534
Epoch Step: 45 / 730 Loss: 61.058494567871094 Tokens per Sec: 18331.412524914613
Epoch Step: 50 / 730 Loss: 13.393831253051758 Tokens per Sec: 16903.326298062744
Epoch Step: 55 / 730 Loss: 45.59462356567383 Tokens per Sec: 17771.751939552796
Epoch Step: 60 / 730 Loss: 15.14900016784668 Tokens per Sec: 17262.73003433027
Epoch Step: 65 / 730 Loss: 28.26648712158203 Tokens per Sec: 18064.500705715098
Epoch Step: 70 / 730 Loss: 29.671672821044922 Tokens per Sec: 20620.439467094624
Epoch Step: 75 / 730 Loss: 39.01117706298828 Tokens per Sec: 16443.53817274223
Epoch Step: 80 / 730 Loss: 45.302345275878906 Tokens per Sec: 20491.263229846103
Epoch Step: 85 / 730 Loss: 29.09807014465332 Tokens per Sec: 20329.447052497
Epoch Step: 90 / 730 Loss: 56.69789123535156 Tokens per Sec: 17574.174910599588
Epoch Step: 95 / 730 Loss: 33.97331237792969 Tokens per Sec: 17140.025678861894
Epoch Step: 100 / 730 Loss: 18.414175033569336 Tokens per Sec: 19776.81889218862
Epoch Step: 105 / 730 Loss: 42.33486557006836 Tokens per Sec: 17954.898673083055
Epoch Step: 110 / 730 Loss: 53.364776611328125 Tokens per Sec: 17598.938251288764
Epoch Step: 115 / 730 Loss: 78.38456726074219 Tokens per Sec: 17682.19934849932
Epoch Step: 120 / 730 Loss: 117.2573013305664 Tokens per Sec: 21120.27415273769
Epoch Step: 125 / 730 Loss: 49.17814254760742 Tokens per Sec: 19769.53314597004
Epoch Step: 130 / 730 Loss: 44.97285461425781 Tokens per Sec: 18512.51466417497
Epoch Step: 135 / 730 Loss: 46.317665100097656 Tokens per Sec: 15286.222388761695
Epoch Step: 140 / 730 Loss: 27.527421951293945 Tokens per Sec: 18416.318159727314
Epoch Step: 145 / 730 Loss: 33.338905334472656 Tokens per Sec: 14048.21072640501
Epoch Step: 150 / 730 Loss: 15.257875442504883 Tokens per Sec: 16366.912319416091
Epoch Step: 155 / 730 Loss: 23.115402221679688 Tokens per Sec: 15133.475117195048
Epoch Step: 160 / 730 Loss: 33.13188171386719 Tokens per Sec: 14103.501932040226
Epoch Step: 165 / 730 Loss: 26.995128631591797 Tokens per Sec: 19000.49480719884
Epoch Step: 170 / 730 Loss: 12.667157173156738 Tokens per Sec: 15774.51996645704
Epoch Step: 175 / 730 Loss: 34.909156799316406 Tokens per Sec: 16640.7723351168
Epoch Step: 180 / 730 Loss: 29.347610473632812 Tokens per Sec: 19467.398561116723
Epoch Step: 185 / 730 Loss: 12.460554122924805 Tokens per Sec: 16273.92843632842
Epoch Step: 190 / 730 Loss: 31.510406494140625 Tokens per Sec: 20011.681877181163
Epoch Step: 195 / 730 Loss: 49.26688003540039 Tokens per Sec: 20331.023116960252
Epoch Step: 200 / 730 Loss: 45.915679931640625 Tokens per Sec: 20806.495849067
Epoch Step: 205 / 730 Loss: 38.30347442626953 Tokens per Sec: 16924.44156118937
Epoch Step: 210 / 730 Loss: 53.215293884277344 Tokens per Sec: 22324.246612177547
Epoch Step: 215 / 730 Loss: 19.099563598632812 Tokens per Sec: 15957.627856008707
Epoch Step: 220 / 730 Loss: 34.814876556396484 Tokens per Sec: 18435.880203716257
Epoch Step: 225 / 730 Loss: 22.913848876953125 Tokens per Sec: 14721.446589032925
Epoch Step: 230 / 730 Loss: 30.078929901123047 Tokens per Sec: 21583.992955826143
Epoch Step: 235 / 730 Loss: 49.527191162109375 Tokens per Sec: 17736.735780337018
Epoch Step: 240 / 730 Loss: 32.906978607177734 Tokens per Sec: 17266.851173572923
Epoch Step: 245 / 730 Loss: 23.103229522705078 Tokens per Sec: 16462.94467465104
Epoch Step: 250 / 730 Loss: 49.71968078613281 Tokens per Sec: 19476.97594496906
Epoch Step: 255 / 730 Loss: 40.50909423828125 Tokens per Sec: 21499.20139628283
Epoch Step: 260 / 730 Loss: 23.772884368896484 Tokens per Sec: 16420.39776042234
Epoch Step: 265 / 730 Loss: 17.405763626098633 Tokens per Sec: 17197.546821458127
Epoch Step: 270 / 730 Loss: 29.613018035888672 Tokens per Sec: 16268.970860360558
Epoch Step: 275 / 730 Loss: 14.230364799499512 Tokens per Sec: 14316.149219616878
Epoch Step: 280 / 730 Loss: 15.221406936645508 Tokens per Sec: 17027.999666814616
Epoch Step: 285 / 730 Loss: 19.632793426513672 Tokens per Sec: 15724.535840777473
Epoch Step: 290 / 730 Loss: 29.462047576904297 Tokens per Sec: 16858.423278395676
Epoch Step: 295 / 730 Loss: 39.0165901184082 Tokens per Sec: 18241.142323850854
Epoch Step: 300 / 730 Loss: 15.939330101013184 Tokens per Sec: 19202.80383426638
Epoch Step: 305 / 730 Loss: 13.21716022491455 Tokens per Sec: 17675.03540366732
Epoch Step: 310 / 730 Loss: 14.330820083618164 Tokens per Sec: 20123.34136922009
Epoch Step: 315 / 730 Loss: 26.094314575195312 Tokens per Sec: 18190.266346162785
Epoch Step: 320 / 730 Loss: 50.3042106628418 Tokens per Sec: 18994.70118614229
Epoch Step: 325 / 730 Loss: 34.32501220703125 Tokens per Sec: 17487.67002985708
Epoch Step: 330 / 730 Loss: 27.257854461669922 Tokens per Sec: 20174.335175015054
Epoch Step: 335 / 730 Loss: 36.12049865722656 Tokens per Sec: 16273.10471727033
Epoch Step: 340 / 730 Loss: 12.560428619384766 Tokens per Sec: 17879.414982528695
Epoch Step: 345 / 730 Loss: 31.204984664916992 Tokens per Sec: 20367.76393197989
Epoch Step: 350 / 730 Loss: 36.173362731933594 Tokens per Sec: 18617.62678932481
Epoch Step: 355 / 730 Loss: 24.328922271728516 Tokens per Sec: 16627.43523058389
Epoch Step: 360 / 730 Loss: 31.73073959350586 Tokens per Sec: 18095.439961142616
Epoch Step: 365 / 730 Loss: 24.946369171142578 Tokens per Sec: 14625.58596453696
Epoch Step: 370 / 730 Loss: 22.30973243713379 Tokens per Sec: 15627.487263077925
Epoch Step: 375 / 730 Loss: 13.748457908630371 Tokens per Sec: 16425.75331998567
Epoch Step: 380 / 730 Loss: 39.08794021606445 Tokens per Sec: 19115.97154000888
Epoch Step: 385 / 730 Loss: 19.20635986328125 Tokens per Sec: 19457.794258631737
Epoch Step: 390 / 730 Loss: 29.321956634521484 Tokens per Sec: 17877.380548049925
Epoch Step: 395 / 730 Loss: 33.95374298095703 Tokens per Sec: 19842.85023487429
Epoch Step: 400 / 730 Loss: 34.512847900390625 Tokens per Sec: 13818.111115495527
Epoch Step: 405 / 730 Loss: 11.710577011108398 Tokens per Sec: 16413.66094269266
Epoch Step: 410 / 730 Loss: 27.051809310913086 Tokens per Sec: 17433.751741694472
Epoch Step: 415 / 730 Loss: 86.69271850585938 Tokens per Sec: 16777.590775476136
Epoch Step: 420 / 730 Loss: 21.958051681518555 Tokens per Sec: 19856.284673439808
Epoch Step: 425 / 730 Loss: 53.47651672363281 Tokens per Sec: 18110.839608251834
Epoch Step: 430 / 730 Loss: 19.210981369018555 Tokens per Sec: 18473.86633324977
Epoch Step: 435 / 730 Loss: 29.353092193603516 Tokens per Sec: 20984.122580831394
Epoch Step: 440 / 730 Loss: 57.816200256347656 Tokens per Sec: 15381.508352551673
Epoch Step: 445 / 730 Loss: 16.124439239501953 Tokens per Sec: 16310.022093491954
Epoch Step: 450 / 730 Loss: 23.4948673248291 Tokens per Sec: 17834.278636301573
Epoch Step: 455 / 730 Loss: 21.55623435974121 Tokens per Sec: 17400.322648399087
Epoch Step: 460 / 730 Loss: 33.402286529541016 Tokens per Sec: 16676.64212244529
Epoch Step: 465 / 730 Loss: 41.45293045043945 Tokens per Sec: 20706.583683310982
Epoch Step: 470 / 730 Loss: 41.841026306152344 Tokens per Sec: 20157.328566351403
Epoch Step: 475 / 730 Loss: 35.508399963378906 Tokens per Sec: 15664.406058971925
Epoch Step: 480 / 730 Loss: 16.410842895507812 Tokens per Sec: 17996.052224257506
Epoch Step: 485 / 730 Loss: 30.685972213745117 Tokens per Sec: 15295.063544801887
Epoch Step: 490 / 730 Loss: 46.37057876586914 Tokens per Sec: 18830.454862851664
Epoch Step: 495 / 730 Loss: 143.835693359375 Tokens per Sec: 18315.753119213165
Epoch Step: 500 / 730 Loss: 27.75297737121582 Tokens per Sec: 17534.59545496234
Epoch Step: 505 / 730 Loss: 25.427644729614258 Tokens per Sec: 17534.281581514024
Epoch Step: 510 / 730 Loss: 40.35066604614258 Tokens per Sec: 16345.756371248535
Epoch Step: 515 / 730 Loss: 15.529106140136719 Tokens per Sec: 18383.85913102998
Epoch Step: 520 / 730 Loss: 23.437135696411133 Tokens per Sec: 20781.083573269178
Epoch Step: 525 / 730 Loss: 36.655364990234375 Tokens per Sec: 18422.598027242977
Epoch Step: 530 / 730 Loss: 18.669511795043945 Tokens per Sec: 18296.592742531815
Epoch Step: 535 / 730 Loss: 36.66878890991211 Tokens per Sec: 19276.673830419822
Epoch Step: 540 / 730 Loss: 32.1931037902832 Tokens per Sec: 20614.493152063544
Epoch Step: 545 / 730 Loss: 24.28276252746582 Tokens per Sec: 17103.024307153923
Epoch Step: 550 / 730 Loss: 25.05662727355957 Tokens per Sec: 17958.840036056597
Epoch Step: 555 / 730 Loss: 31.77811050415039 Tokens per Sec: 20971.612688114063
Epoch Step: 560 / 730 Loss: 16.269392013549805 Tokens per Sec: 13376.192520190658
Epoch Step: 565 / 730 Loss: 28.045333862304688 Tokens per Sec: 18743.829073831883
Epoch Step: 570 / 730 Loss: 11.61380672454834 Tokens per Sec: 15363.142993201098
Epoch Step: 575 / 730 Loss: 33.72282409667969 Tokens per Sec: 13906.675550085622
Epoch Step: 580 / 730 Loss: 43.009090423583984 Tokens per Sec: 18770.102931161367
Epoch Step: 585 / 730 Loss: 30.526832580566406 Tokens per Sec: 19362.276476069816
Epoch Step: 590 / 730 Loss: 36.18088150024414 Tokens per Sec: 17104.689194328446
Epoch Step: 595 / 730 Loss: 27.902891159057617 Tokens per Sec: 18055.47882268235
Epoch Step: 600 / 730 Loss: 70.62543487548828 Tokens per Sec: 15843.424688209632
Epoch Step: 605 / 730 Loss: 39.295005798339844 Tokens per Sec: 18896.89472604844
Epoch Step: 610 / 730 Loss: 21.698511123657227 Tokens per Sec: 14616.925641993408
Epoch Step: 615 / 730 Loss: 27.135234832763672 Tokens per Sec: 17523.436900231573
Epoch Step: 620 / 730 Loss: 10.605840682983398 Tokens per Sec: 18968.24456691671
Epoch Step: 625 / 730 Loss: 13.977303504943848 Tokens per Sec: 18615.061927081173
Epoch Step: 630 / 730 Loss: 16.985881805419922 Tokens per Sec: 17862.78395931874
Epoch Step: 635 / 730 Loss: 34.415706634521484 Tokens per Sec: 18308.975634970448
Epoch Step: 640 / 730 Loss: 33.4286994934082 Tokens per Sec: 20845.162040772728
Epoch Step: 645 / 730 Loss: 17.758081436157227 Tokens per Sec: 19631.939793767942
Epoch Step: 650 / 730 Loss: 12.36410903930664 Tokens per Sec: 19815.993784914965
Epoch Step: 655 / 730 Loss: 23.835399627685547 Tokens per Sec: 15440.912221817049
Epoch Step: 660 / 730 Loss: 29.74038314819336 Tokens per Sec: 17844.14214244062
Epoch Step: 665 / 730 Loss: 18.9251766204834 Tokens per Sec: 16765.254861105335
Epoch Step: 670 / 730 Loss: 35.536705017089844 Tokens per Sec: 16571.204242568387
Epoch Step: 675 / 730 Loss: 21.22285270690918 Tokens per Sec: 17941.075665450047
Epoch Step: 680 / 730 Loss: 12.793571472167969 Tokens per Sec: 14576.372635103617
Epoch Step: 685 / 730 Loss: 37.536827087402344 Tokens per Sec: 21131.575910632408
Epoch Step: 690 / 730 Loss: 20.846330642700195 Tokens per Sec: 16676.51650184427
Epoch Step: 695 / 730 Loss: 20.73309898376465 Tokens per Sec: 16572.22516370981
Epoch Step: 700 / 730 Loss: 18.742273330688477 Tokens per Sec: 16405.055692877788
Epoch Step: 705 / 730 Loss: 37.11579513549805 Tokens per Sec: 16695.534616084908
Epoch Step: 710 / 730 Loss: 16.20241355895996 Tokens per Sec: 14973.865206780847
Epoch Step: 715 / 730 Loss: 18.501819610595703 Tokens per Sec: 15508.242532524762
Epoch Step: 720 / 730 Loss: 18.0181941986084 Tokens per Sec: 15359.604455142424
Epoch Step: 725 / 730 Loss: 40.30338668823242 Tokens per Sec: 14000.559188064715
Epoch Step: 730 / 730 Loss: 16.068357467651367 Tokens per Sec: 12813.418810660303
Epoch ended with duration 0:01:19.556550
Train perplexity: 3.1428579849662155
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . get ( VAR_1 ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; }[0m
Epoch ended with duration 0:00:03.324552
Validation perplexity: 2.7340282956567874
Model saved best_on_validation!
Epoch 4 / 1000
Epoch Step: 5 / 730 Loss: 16.57825469970703 Tokens per Sec: 15870.800664582353
Epoch Step: 10 / 730 Loss: 26.54077911376953 Tokens per Sec: 13254.009081603279
Epoch Step: 15 / 730 Loss: 38.622718811035156 Tokens per Sec: 19742.74222973678
Epoch Step: 20 / 730 Loss: 37.79298400878906 Tokens per Sec: 18606.495352779875
Epoch Step: 25 / 730 Loss: 25.162662506103516 Tokens per Sec: 15556.4495842657
Epoch Step: 30 / 730 Loss: 25.96981430053711 Tokens per Sec: 20051.759640035685
Epoch Step: 35 / 730 Loss: 13.857380867004395 Tokens per Sec: 13808.265123813353
Epoch Step: 40 / 730 Loss: 10.848219871520996 Tokens per Sec: 13733.854674418815
Epoch Step: 45 / 730 Loss: 26.172260284423828 Tokens per Sec: 16987.852642485912
Epoch Step: 50 / 730 Loss: 34.37480926513672 Tokens per Sec: 18246.025432692793
Epoch Step: 55 / 730 Loss: 10.381204605102539 Tokens per Sec: 17052.115212885405
Epoch Step: 60 / 730 Loss: 29.993671417236328 Tokens per Sec: 17452.442772323368
Epoch Step: 65 / 730 Loss: 20.112964630126953 Tokens per Sec: 14137.259453293562
Epoch Step: 70 / 730 Loss: 36.66949462890625 Tokens per Sec: 19442.045050912322
Epoch Step: 75 / 730 Loss: 10.762725830078125 Tokens per Sec: 17896.922395206646
Epoch Step: 80 / 730 Loss: 27.131591796875 Tokens per Sec: 20215.55940577215
Epoch Step: 85 / 730 Loss: 17.975004196166992 Tokens per Sec: 18799.756138206678
Epoch Step: 90 / 730 Loss: 10.898646354675293 Tokens per Sec: 19305.959334799878
Epoch Step: 95 / 730 Loss: 33.44880294799805 Tokens per Sec: 18547.93216044972
Epoch Step: 100 / 730 Loss: 15.229504585266113 Tokens per Sec: 21009.40499185048
Epoch Step: 105 / 730 Loss: 29.040428161621094 Tokens per Sec: 18783.76347902117
Epoch Step: 110 / 730 Loss: 28.42718505859375 Tokens per Sec: 17201.116817613354
Epoch Step: 115 / 730 Loss: 25.277679443359375 Tokens per Sec: 16199.586632663155
Epoch Step: 120 / 730 Loss: 36.42801284790039 Tokens per Sec: 14471.191169300148
Epoch Step: 125 / 730 Loss: 131.7388153076172 Tokens per Sec: 18309.847743194
Epoch Step: 130 / 730 Loss: 139.61212158203125 Tokens per Sec: 20003.99209106355
Epoch Step: 135 / 730 Loss: 16.685068130493164 Tokens per Sec: 15991.85458357171
Epoch Step: 140 / 730 Loss: 7.918269634246826 Tokens per Sec: 14214.21642286547
Epoch Step: 145 / 730 Loss: 31.503128051757812 Tokens per Sec: 19990.2647312262
Epoch Step: 150 / 730 Loss: 35.31668472290039 Tokens per Sec: 18163.72034421647
Epoch Step: 155 / 730 Loss: 24.277952194213867 Tokens per Sec: 20918.17257732449
Epoch Step: 160 / 730 Loss: 35.66444778442383 Tokens per Sec: 17455.061801809203
Epoch Step: 165 / 730 Loss: 36.847137451171875 Tokens per Sec: 15929.077741894744
Epoch Step: 170 / 730 Loss: 7.517101764678955 Tokens per Sec: 18422.109382556293
Epoch Step: 175 / 730 Loss: 14.325906753540039 Tokens per Sec: 18773.609289461492
Epoch Step: 180 / 730 Loss: 35.478755950927734 Tokens per Sec: 18627.488397710593
Epoch Step: 185 / 730 Loss: 34.383663177490234 Tokens per Sec: 13901.397945447887
Epoch Step: 190 / 730 Loss: 16.00835418701172 Tokens per Sec: 19611.253982584127
Epoch Step: 195 / 730 Loss: 12.420822143554688 Tokens per Sec: 18583.585889974107
Epoch Step: 200 / 730 Loss: 28.617904663085938 Tokens per Sec: 17657.141513871906
Epoch Step: 205 / 730 Loss: 21.390592575073242 Tokens per Sec: 20049.492020261023
Epoch Step: 210 / 730 Loss: 18.274747848510742 Tokens per Sec: 17964.557297929587
Epoch Step: 215 / 730 Loss: 36.634864807128906 Tokens per Sec: 17035.930350853167
Epoch Step: 220 / 730 Loss: 13.060368537902832 Tokens per Sec: 17792.622106469902
Epoch Step: 225 / 730 Loss: 11.594183921813965 Tokens per Sec: 20731.65265799851
Epoch Step: 230 / 730 Loss: 52.56490707397461 Tokens per Sec: 14736.385498871372
Epoch Step: 235 / 730 Loss: 34.473045349121094 Tokens per Sec: 17732.701357109356
Epoch Step: 240 / 730 Loss: 21.78815460205078 Tokens per Sec: 17197.08699390326
Epoch Step: 245 / 730 Loss: 30.96337890625 Tokens per Sec: 18165.878460403226
Epoch Step: 250 / 730 Loss: 31.0971736907959 Tokens per Sec: 17149.03524923604
Epoch Step: 255 / 730 Loss: 19.983566284179688 Tokens per Sec: 18466.887506330087
Epoch Step: 260 / 730 Loss: 29.993398666381836 Tokens per Sec: 17449.69233736583
Epoch Step: 265 / 730 Loss: 10.80293083190918 Tokens per Sec: 15419.522845973432
Epoch Step: 270 / 730 Loss: 11.298797607421875 Tokens per Sec: 18147.208239839463
Epoch Step: 275 / 730 Loss: 44.45957565307617 Tokens per Sec: 20680.152424655716
Epoch Step: 280 / 730 Loss: 34.680660247802734 Tokens per Sec: 14316.356278063186
Epoch Step: 285 / 730 Loss: 8.242069244384766 Tokens per Sec: 16121.068092918415
Epoch Step: 290 / 730 Loss: 20.198284149169922 Tokens per Sec: 17878.268664790077
Epoch Step: 295 / 730 Loss: 23.802385330200195 Tokens per Sec: 17830.16645250871
Epoch Step: 300 / 730 Loss: 95.64083099365234 Tokens per Sec: 17760.17358226901
Epoch Step: 305 / 730 Loss: 34.83871078491211 Tokens per Sec: 19102.508664021007
Epoch Step: 310 / 730 Loss: 22.312381744384766 Tokens per Sec: 20983.952237443602
Epoch Step: 315 / 730 Loss: 14.20542049407959 Tokens per Sec: 17416.083595268487
Epoch Step: 320 / 730 Loss: 108.33160400390625 Tokens per Sec: 15964.433843373767
Epoch Step: 325 / 730 Loss: 50.5545654296875 Tokens per Sec: 17533.437704400785
Epoch Step: 330 / 730 Loss: 12.988149642944336 Tokens per Sec: 15752.096051086288
Epoch Step: 335 / 730 Loss: 40.02836608886719 Tokens per Sec: 17341.254384074557
Epoch Step: 340 / 730 Loss: 12.190912246704102 Tokens per Sec: 19982.009103192762
Epoch Step: 345 / 730 Loss: 11.675675392150879 Tokens per Sec: 15793.686814473398
Epoch Step: 350 / 730 Loss: 24.556581497192383 Tokens per Sec: 17391.30960597393
Epoch Step: 355 / 730 Loss: 28.01853370666504 Tokens per Sec: 17881.344907238312
Epoch Step: 360 / 730 Loss: 111.00404357910156 Tokens per Sec: 13185.827337031173
Epoch Step: 365 / 730 Loss: 34.09729766845703 Tokens per Sec: 20801.28461250305
Epoch Step: 370 / 730 Loss: 24.542491912841797 Tokens per Sec: 15210.528008200627
Epoch Step: 375 / 730 Loss: 16.61360740661621 Tokens per Sec: 14893.034559625668
Epoch Step: 380 / 730 Loss: 21.13259506225586 Tokens per Sec: 14595.095606017958
Epoch Step: 385 / 730 Loss: 30.667753219604492 Tokens per Sec: 18109.023126849406
Epoch Step: 390 / 730 Loss: 33.88383865356445 Tokens per Sec: 18083.805857057134
Epoch Step: 395 / 730 Loss: 8.636225700378418 Tokens per Sec: 20813.220202547822
Epoch Step: 400 / 730 Loss: 53.41181564331055 Tokens per Sec: 18353.124307870363
Epoch Step: 405 / 730 Loss: 25.10507583618164 Tokens per Sec: 17167.309892464687
Epoch Step: 410 / 730 Loss: 7.191056728363037 Tokens per Sec: 17912.58103182692
Epoch Step: 415 / 730 Loss: 15.337629318237305 Tokens per Sec: 18452.800127666327
Epoch Step: 420 / 730 Loss: 12.613323211669922 Tokens per Sec: 18131.685403858763
Epoch Step: 425 / 730 Loss: 8.405315399169922 Tokens per Sec: 16874.359094638596
Epoch Step: 430 / 730 Loss: 22.63328742980957 Tokens per Sec: 16967.85315584857
Epoch Step: 435 / 730 Loss: 23.946414947509766 Tokens per Sec: 16744.874507202985
Epoch Step: 440 / 730 Loss: 31.830904006958008 Tokens per Sec: 19233.09141974616
Epoch Step: 445 / 730 Loss: 23.44464874267578 Tokens per Sec: 15116.60475514174
Epoch Step: 450 / 730 Loss: 17.490009307861328 Tokens per Sec: 20999.762857242247
Epoch Step: 455 / 730 Loss: 23.13340187072754 Tokens per Sec: 17806.329257827016
Epoch Step: 460 / 730 Loss: 86.53008270263672 Tokens per Sec: 14876.433755147411
Epoch Step: 465 / 730 Loss: 22.7864990234375 Tokens per Sec: 18424.068328354366
Epoch Step: 470 / 730 Loss: 56.686546325683594 Tokens per Sec: 20101.622136148453
Epoch Step: 475 / 730 Loss: 26.570438385009766 Tokens per Sec: 20135.26199867766
Epoch Step: 480 / 730 Loss: 23.53554916381836 Tokens per Sec: 17948.736070879728
Epoch Step: 485 / 730 Loss: 35.364341735839844 Tokens per Sec: 20302.83124043923
Epoch Step: 490 / 730 Loss: 105.02587890625 Tokens per Sec: 14848.601870134375
Epoch Step: 495 / 730 Loss: 30.835617065429688 Tokens per Sec: 16126.076867466547
Epoch Step: 500 / 730 Loss: 13.257363319396973 Tokens per Sec: 16296.591152671665
Epoch Step: 505 / 730 Loss: 26.979894638061523 Tokens per Sec: 17761.437046237723
Epoch Step: 510 / 730 Loss: 26.314132690429688 Tokens per Sec: 17960.303354719843
Epoch Step: 515 / 730 Loss: 130.6280975341797 Tokens per Sec: 20243.882044968865
Epoch Step: 520 / 730 Loss: 17.18218421936035 Tokens per Sec: 18236.910354581716
Epoch Step: 525 / 730 Loss: 11.665830612182617 Tokens per Sec: 17136.761501180197
Epoch Step: 530 / 730 Loss: 28.555036544799805 Tokens per Sec: 16973.206276217534
Epoch Step: 535 / 730 Loss: 38.99219512939453 Tokens per Sec: 18306.743824262034
Epoch Step: 540 / 730 Loss: 28.14994239807129 Tokens per Sec: 15977.323312069728
Epoch Step: 545 / 730 Loss: 12.4253511428833 Tokens per Sec: 16915.416038005787
Epoch Step: 550 / 730 Loss: 26.448091506958008 Tokens per Sec: 18260.6418895764
Epoch Step: 555 / 730 Loss: 54.95026397705078 Tokens per Sec: 18044.660201378385
Epoch Step: 560 / 730 Loss: 17.60968017578125 Tokens per Sec: 14766.434529437185
Epoch Step: 565 / 730 Loss: 21.603015899658203 Tokens per Sec: 15578.01247280221
Epoch Step: 570 / 730 Loss: 19.17460823059082 Tokens per Sec: 17144.847484951602
Epoch Step: 575 / 730 Loss: 34.91462707519531 Tokens per Sec: 15286.346833750382
Epoch Step: 580 / 730 Loss: 24.173221588134766 Tokens per Sec: 18434.905015473363
Epoch Step: 585 / 730 Loss: 24.850244522094727 Tokens per Sec: 19015.358689658908
Epoch Step: 590 / 730 Loss: 19.1789493560791 Tokens per Sec: 19929.377905757985
Epoch Step: 595 / 730 Loss: 12.894580841064453 Tokens per Sec: 16837.956023258037
Epoch Step: 600 / 730 Loss: 12.957764625549316 Tokens per Sec: 21061.098442617298
Epoch Step: 605 / 730 Loss: 18.594585418701172 Tokens per Sec: 15982.089393912534
Epoch Step: 610 / 730 Loss: 19.806310653686523 Tokens per Sec: 18376.989162702528
Epoch Step: 615 / 730 Loss: 29.396461486816406 Tokens per Sec: 19392.713948834855
Epoch Step: 620 / 730 Loss: 12.894155502319336 Tokens per Sec: 16581.388697209404
Epoch Step: 625 / 730 Loss: 9.806120872497559 Tokens per Sec: 14792.209694657638
Epoch Step: 630 / 730 Loss: 58.17117691040039 Tokens per Sec: 14610.701382185363
Epoch Step: 635 / 730 Loss: 10.727404594421387 Tokens per Sec: 20557.525424117914
Epoch Step: 640 / 730 Loss: 15.5706205368042 Tokens per Sec: 18016.867256281865
Epoch Step: 645 / 730 Loss: 33.956729888916016 Tokens per Sec: 18306.21750811084
Epoch Step: 650 / 730 Loss: 31.35794448852539 Tokens per Sec: 18885.521124056384
Epoch Step: 655 / 730 Loss: 34.9849739074707 Tokens per Sec: 20706.81252520014
Epoch Step: 660 / 730 Loss: 12.173147201538086 Tokens per Sec: 18729.865318618777
Epoch Step: 665 / 730 Loss: 36.77291488647461 Tokens per Sec: 18212.929030865827
Epoch Step: 670 / 730 Loss: 10.604964256286621 Tokens per Sec: 16112.649860835963
Epoch Step: 675 / 730 Loss: 23.800861358642578 Tokens per Sec: 18072.82953684453
Epoch Step: 680 / 730 Loss: 21.027359008789062 Tokens per Sec: 18092.874789415175
Epoch Step: 685 / 730 Loss: 8.472785949707031 Tokens per Sec: 19331.0372648915
Epoch Step: 690 / 730 Loss: 82.41210174560547 Tokens per Sec: 16592.823926974055
Epoch Step: 695 / 730 Loss: 11.1143798828125 Tokens per Sec: 15697.750982120244
Epoch Step: 700 / 730 Loss: 21.570955276489258 Tokens per Sec: 16472.41158597697
Epoch Step: 705 / 730 Loss: 26.988033294677734 Tokens per Sec: 14387.699120578727
Epoch Step: 710 / 730 Loss: 31.17568016052246 Tokens per Sec: 15094.407056625976
Epoch Step: 715 / 730 Loss: 38.142459869384766 Tokens per Sec: 14694.885928720065
Epoch Step: 720 / 730 Loss: 15.47567367553711 Tokens per Sec: 15780.174445071427
Epoch Step: 725 / 730 Loss: 28.242748260498047 Tokens per Sec: 15610.67781162485
Epoch Step: 730 / 730 Loss: 27.684772491455078 Tokens per Sec: 15029.32567551416
Epoch ended with duration 0:01:20.114900
Train perplexity: 2.588957720952794
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.300262
Validation perplexity: 2.0677406119976918
Model saved best_on_validation!
Epoch 5 / 1000
Epoch Step: 5 / 730 Loss: 23.520183563232422 Tokens per Sec: 13180.793487699946
Epoch Step: 10 / 730 Loss: 37.9199104309082 Tokens per Sec: 15782.974899653229
Epoch Step: 15 / 730 Loss: 63.51892852783203 Tokens per Sec: 18213.61811722022
Epoch Step: 20 / 730 Loss: 102.5518569946289 Tokens per Sec: 18428.748421664586
Epoch Step: 25 / 730 Loss: 18.341819763183594 Tokens per Sec: 17831.907802498004
Epoch Step: 30 / 730 Loss: 22.246789932250977 Tokens per Sec: 19254.16984503975
Epoch Step: 35 / 730 Loss: 14.998771667480469 Tokens per Sec: 15747.827507426313
Epoch Step: 40 / 730 Loss: 23.678054809570312 Tokens per Sec: 20653.3860243783
Epoch Step: 45 / 730 Loss: 17.688058853149414 Tokens per Sec: 17873.829777834944
Epoch Step: 50 / 730 Loss: 84.6949691772461 Tokens per Sec: 17201.027442032744
Epoch Step: 55 / 730 Loss: 28.31946563720703 Tokens per Sec: 14331.74601021477
Epoch Step: 60 / 730 Loss: 6.2942304611206055 Tokens per Sec: 17108.778122998985
Epoch Step: 65 / 730 Loss: 100.59742736816406 Tokens per Sec: 16317.886188399072
Epoch Step: 70 / 730 Loss: 14.317903518676758 Tokens per Sec: 15602.88810929979
Epoch Step: 75 / 730 Loss: 13.459436416625977 Tokens per Sec: 18755.680235264354
Epoch Step: 80 / 730 Loss: 84.04984283447266 Tokens per Sec: 19189.04471605754
Epoch Step: 85 / 730 Loss: 13.26958179473877 Tokens per Sec: 17496.416697087876
Epoch Step: 90 / 730 Loss: 34.238773345947266 Tokens per Sec: 18437.078717652093
Epoch Step: 95 / 730 Loss: 9.579121589660645 Tokens per Sec: 17828.741413453412
Epoch Step: 100 / 730 Loss: 28.799352645874023 Tokens per Sec: 18303.95144301695
Epoch Step: 105 / 730 Loss: 15.581378936767578 Tokens per Sec: 17965.33848764627
Epoch Step: 110 / 730 Loss: 14.18859577178955 Tokens per Sec: 18090.038997912914
Epoch Step: 115 / 730 Loss: 30.749521255493164 Tokens per Sec: 20466.89655014936
Epoch Step: 120 / 730 Loss: 61.75386428833008 Tokens per Sec: 15236.063146270324
Epoch Step: 125 / 730 Loss: 29.19938850402832 Tokens per Sec: 15635.85034235809
Epoch Step: 130 / 730 Loss: 24.327381134033203 Tokens per Sec: 17394.701219101604
Epoch Step: 135 / 730 Loss: 24.373083114624023 Tokens per Sec: 16458.636830792933
Epoch Step: 140 / 730 Loss: 10.437922477722168 Tokens per Sec: 13917.38272561912
Epoch Step: 145 / 730 Loss: 11.658454895019531 Tokens per Sec: 15294.46632324863
Epoch Step: 150 / 730 Loss: 13.505477905273438 Tokens per Sec: 16068.00306924196
Epoch Step: 155 / 730 Loss: 36.822906494140625 Tokens per Sec: 20935.669752754377
Epoch Step: 160 / 730 Loss: 13.257367134094238 Tokens per Sec: 19720.846792851047
Epoch Step: 165 / 730 Loss: 13.090953826904297 Tokens per Sec: 18038.495702307348
Epoch Step: 170 / 730 Loss: 27.89208221435547 Tokens per Sec: 17321.196981820554
Epoch Step: 175 / 730 Loss: 23.25883674621582 Tokens per Sec: 18788.24864272758
Epoch Step: 180 / 730 Loss: 27.23859405517578 Tokens per Sec: 17168.19894949439
Epoch Step: 185 / 730 Loss: 33.106689453125 Tokens per Sec: 18507.972016339114
Epoch Step: 190 / 730 Loss: 29.17962074279785 Tokens per Sec: 18252.175198207748
Epoch Step: 195 / 730 Loss: 8.568747520446777 Tokens per Sec: 17727.469991851278
Epoch Step: 200 / 730 Loss: 15.4281644821167 Tokens per Sec: 18842.712971838017
Epoch Step: 205 / 730 Loss: 21.178192138671875 Tokens per Sec: 17612.989340094413
Epoch Step: 210 / 730 Loss: 7.953207969665527 Tokens per Sec: 19393.24215858298
Epoch Step: 215 / 730 Loss: 29.372310638427734 Tokens per Sec: 16516.466675045034
Epoch Step: 220 / 730 Loss: 55.74056625366211 Tokens per Sec: 20431.412316642323
Epoch Step: 225 / 730 Loss: 20.58403968811035 Tokens per Sec: 17657.24833514243
Epoch Step: 230 / 730 Loss: 29.64337921142578 Tokens per Sec: 18104.255637839993
Epoch Step: 235 / 730 Loss: 21.92279815673828 Tokens per Sec: 17422.373394341383
Epoch Step: 240 / 730 Loss: 28.96099281311035 Tokens per Sec: 15935.434816426683
Epoch Step: 245 / 730 Loss: 33.61001205444336 Tokens per Sec: 20739.192231761706
Epoch Step: 250 / 730 Loss: 8.061763763427734 Tokens per Sec: 17699.421380124902
Epoch Step: 255 / 730 Loss: 16.313121795654297 Tokens per Sec: 17544.904838691193
Epoch Step: 260 / 730 Loss: 28.527864456176758 Tokens per Sec: 15725.718187018232
Epoch Step: 265 / 730 Loss: 13.774298667907715 Tokens per Sec: 18857.430896284757
Epoch Step: 270 / 730 Loss: 49.28890609741211 Tokens per Sec: 18460.684797978447
Epoch Step: 275 / 730 Loss: 24.216123580932617 Tokens per Sec: 19857.53966456063
Epoch Step: 280 / 730 Loss: 34.08472442626953 Tokens per Sec: 15162.893182308613
Epoch Step: 285 / 730 Loss: 27.32234001159668 Tokens per Sec: 18143.597976568704
Epoch Step: 290 / 730 Loss: 17.477609634399414 Tokens per Sec: 15821.054513417748
Epoch Step: 295 / 730 Loss: 15.999025344848633 Tokens per Sec: 19555.66341859039
Epoch Step: 300 / 730 Loss: 27.08203125 Tokens per Sec: 16407.29698268957
Epoch Step: 305 / 730 Loss: 15.760942459106445 Tokens per Sec: 13775.152830651301
Epoch Step: 310 / 730 Loss: 15.717076301574707 Tokens per Sec: 19652.536156375565
Epoch Step: 315 / 730 Loss: 8.906169891357422 Tokens per Sec: 15615.930453555737
Epoch Step: 320 / 730 Loss: 25.465051651000977 Tokens per Sec: 18195.373616941855
Epoch Step: 325 / 730 Loss: 11.760649681091309 Tokens per Sec: 16108.545434620391
Epoch Step: 330 / 730 Loss: 21.152109146118164 Tokens per Sec: 15808.056752461509
Epoch Step: 335 / 730 Loss: 63.068023681640625 Tokens per Sec: 15537.884395167499
Epoch Step: 340 / 730 Loss: 9.44150161743164 Tokens per Sec: 16621.917888451033
Epoch Step: 345 / 730 Loss: 13.663472175598145 Tokens per Sec: 18162.235891428612
Epoch Step: 350 / 730 Loss: 27.504066467285156 Tokens per Sec: 20015.419422138522
Epoch Step: 355 / 730 Loss: 20.438243865966797 Tokens per Sec: 17492.929095670483
Epoch Step: 360 / 730 Loss: 10.67635726928711 Tokens per Sec: 18579.66093752893
Epoch Step: 365 / 730 Loss: 17.69622230529785 Tokens per Sec: 19817.219853152295
Epoch Step: 370 / 730 Loss: 11.762353897094727 Tokens per Sec: 15556.77207934298
Epoch Step: 375 / 730 Loss: 26.557655334472656 Tokens per Sec: 20576.45917458803
Epoch Step: 380 / 730 Loss: 9.518086433410645 Tokens per Sec: 17372.657002227043
Epoch Step: 385 / 730 Loss: 30.47899055480957 Tokens per Sec: 19990.597985555953
Epoch Step: 390 / 730 Loss: 23.983306884765625 Tokens per Sec: 16693.102050654423
Epoch Step: 395 / 730 Loss: 11.050557136535645 Tokens per Sec: 15852.77094835943
Epoch Step: 400 / 730 Loss: 41.46141052246094 Tokens per Sec: 16538.89151251103
Epoch Step: 405 / 730 Loss: 26.97910499572754 Tokens per Sec: 20143.023930016225
Epoch Step: 410 / 730 Loss: 12.489540100097656 Tokens per Sec: 18993.864332526147
Epoch Step: 415 / 730 Loss: 26.938844680786133 Tokens per Sec: 18520.199060163362
Epoch Step: 420 / 730 Loss: 22.716224670410156 Tokens per Sec: 19832.15549228629
Epoch Step: 425 / 730 Loss: 10.7174654006958 Tokens per Sec: 15657.693825463231
Epoch Step: 430 / 730 Loss: 36.34980773925781 Tokens per Sec: 12481.476801219089
Epoch Step: 435 / 730 Loss: 18.58082389831543 Tokens per Sec: 16098.753541350932
Epoch Step: 440 / 730 Loss: 24.175264358520508 Tokens per Sec: 14735.331039503784
Epoch Step: 445 / 730 Loss: 15.241837501525879 Tokens per Sec: 17449.43132961874
Epoch Step: 450 / 730 Loss: 20.700550079345703 Tokens per Sec: 17888.244017809113
Epoch Step: 455 / 730 Loss: 14.461113929748535 Tokens per Sec: 19111.5653457199
Epoch Step: 460 / 730 Loss: 9.037879943847656 Tokens per Sec: 20853.575554081366
Epoch Step: 465 / 730 Loss: 8.205170631408691 Tokens per Sec: 18038.63281191336
Epoch Step: 470 / 730 Loss: 18.672500610351562 Tokens per Sec: 14712.223411431398
Epoch Step: 475 / 730 Loss: 21.402860641479492 Tokens per Sec: 18874.331233016008
Epoch Step: 480 / 730 Loss: 15.119462966918945 Tokens per Sec: 21397.572550017227
Epoch Step: 485 / 730 Loss: 28.375085830688477 Tokens per Sec: 17200.16166382527
Epoch Step: 490 / 730 Loss: 26.281513214111328 Tokens per Sec: 17992.919566596545
Epoch Step: 495 / 730 Loss: 26.435699462890625 Tokens per Sec: 18102.386798204312
Epoch Step: 500 / 730 Loss: 23.77017593383789 Tokens per Sec: 16173.427882595362
Epoch Step: 505 / 730 Loss: 30.427995681762695 Tokens per Sec: 18497.72409986791
Epoch Step: 510 / 730 Loss: 56.407325744628906 Tokens per Sec: 17834.48246619355
Epoch Step: 515 / 730 Loss: 15.179349899291992 Tokens per Sec: 15291.72570638531
Epoch Step: 520 / 730 Loss: 24.2235050201416 Tokens per Sec: 18479.796696233912
Epoch Step: 525 / 730 Loss: 10.75343132019043 Tokens per Sec: 20567.27627482883
Epoch Step: 530 / 730 Loss: 11.254683494567871 Tokens per Sec: 15640.694850788404
Epoch Step: 535 / 730 Loss: 14.874322891235352 Tokens per Sec: 15279.082866998724
Epoch Step: 540 / 730 Loss: 23.941383361816406 Tokens per Sec: 16502.18088730265
Epoch Step: 545 / 730 Loss: 6.672179222106934 Tokens per Sec: 17726.09616728316
Epoch Step: 550 / 730 Loss: 18.15451431274414 Tokens per Sec: 16161.88592401493
Epoch Step: 555 / 730 Loss: 32.79867172241211 Tokens per Sec: 20565.177594421722
Epoch Step: 560 / 730 Loss: 8.415255546569824 Tokens per Sec: 17224.739099931605
Epoch Step: 565 / 730 Loss: 6.296857833862305 Tokens per Sec: 15488.296650776016
Epoch Step: 570 / 730 Loss: 22.32784080505371 Tokens per Sec: 18996.361708238517
Epoch Step: 575 / 730 Loss: 25.617448806762695 Tokens per Sec: 17132.41203338371
Epoch Step: 580 / 730 Loss: 21.135095596313477 Tokens per Sec: 19411.323865087976
Epoch Step: 585 / 730 Loss: 17.106420516967773 Tokens per Sec: 15674.061190724158
Epoch Step: 590 / 730 Loss: 24.077396392822266 Tokens per Sec: 17563.34775857624
Epoch Step: 595 / 730 Loss: 14.79354476928711 Tokens per Sec: 18880.2549010905
Epoch Step: 600 / 730 Loss: 18.55133056640625 Tokens per Sec: 21826.828548207246
Epoch Step: 605 / 730 Loss: 31.197629928588867 Tokens per Sec: 21520.857430080046
Epoch Step: 610 / 730 Loss: 5.724940299987793 Tokens per Sec: 17419.077966652556
Epoch Step: 615 / 730 Loss: 55.07406234741211 Tokens per Sec: 18350.433982137
Epoch Step: 620 / 730 Loss: 21.07188606262207 Tokens per Sec: 17957.640328086527
Epoch Step: 625 / 730 Loss: 27.67354393005371 Tokens per Sec: 13345.752085090824
Epoch Step: 630 / 730 Loss: 28.497020721435547 Tokens per Sec: 19181.25830643872
Epoch Step: 635 / 730 Loss: 17.57343292236328 Tokens per Sec: 15682.2752919661
Epoch Step: 640 / 730 Loss: 9.941423416137695 Tokens per Sec: 18245.041355389298
Epoch Step: 645 / 730 Loss: 8.051465034484863 Tokens per Sec: 15424.113613443737
Epoch Step: 650 / 730 Loss: 19.8353328704834 Tokens per Sec: 19160.313447751196
Epoch Step: 655 / 730 Loss: 10.628955841064453 Tokens per Sec: 18060.50870208595
Epoch Step: 660 / 730 Loss: 27.195655822753906 Tokens per Sec: 20111.504642821368
Epoch Step: 665 / 730 Loss: 14.857146263122559 Tokens per Sec: 17618.40076417009
Epoch Step: 670 / 730 Loss: 9.805960655212402 Tokens per Sec: 18934.273894929454
Epoch Step: 675 / 730 Loss: 22.210235595703125 Tokens per Sec: 17065.22061058107
Epoch Step: 680 / 730 Loss: 7.938599586486816 Tokens per Sec: 16495.058739279877
Epoch Step: 685 / 730 Loss: 18.639034271240234 Tokens per Sec: 17810.674231982208
Epoch Step: 690 / 730 Loss: 22.409883499145508 Tokens per Sec: 16827.211334453867
Epoch Step: 695 / 730 Loss: 8.643593788146973 Tokens per Sec: 18766.648963799034
Epoch Step: 700 / 730 Loss: 7.008336067199707 Tokens per Sec: 17151.440559809354
Epoch Step: 705 / 730 Loss: 21.51329803466797 Tokens per Sec: 16994.03583164963
Epoch Step: 710 / 730 Loss: 10.648244857788086 Tokens per Sec: 12304.624895841733
Epoch Step: 715 / 730 Loss: 24.237443923950195 Tokens per Sec: 16335.022590061311
Epoch Step: 720 / 730 Loss: 28.40894317626953 Tokens per Sec: 15301.327408357645
Epoch Step: 725 / 730 Loss: 20.435577392578125 Tokens per Sec: 15660.56565492063
Epoch Step: 730 / 730 Loss: 15.24652099609375 Tokens per Sec: 13209.620419591409
Epoch ended with duration 0:01:20.008602
Train perplexity: 2.232913470891447
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 , VAR_1 , VAR_2 ) ; return new TYPE_1 > ( VAR_1 . METHOD_1 ( ) , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.300434
Validation perplexity: 2.065619505790046
Model saved best_on_validation!
Model saved checkpoint!
Epoch 6 / 1000
Epoch Step: 5 / 730 Loss: 10.578763008117676 Tokens per Sec: 15292.149983553223
Epoch Step: 10 / 730 Loss: 10.024975776672363 Tokens per Sec: 17478.79279581394
Epoch Step: 15 / 730 Loss: 19.576936721801758 Tokens per Sec: 18352.343092354058
Epoch Step: 20 / 730 Loss: 12.541608810424805 Tokens per Sec: 17001.241093860248
Epoch Step: 25 / 730 Loss: 18.4926700592041 Tokens per Sec: 19767.930566421946
Epoch Step: 30 / 730 Loss: 12.926458358764648 Tokens per Sec: 16443.578495234564
Epoch Step: 35 / 730 Loss: 14.747800827026367 Tokens per Sec: 15285.303809946428
Epoch Step: 40 / 730 Loss: 9.076711654663086 Tokens per Sec: 14949.464321231442
Epoch Step: 45 / 730 Loss: 18.81618881225586 Tokens per Sec: 21393.791641774485
Epoch Step: 50 / 730 Loss: 22.53243064880371 Tokens per Sec: 16771.92810894408
Epoch Step: 55 / 730 Loss: 18.338308334350586 Tokens per Sec: 18264.12486639642
Epoch Step: 60 / 730 Loss: 8.937539100646973 Tokens per Sec: 17530.7078216484
Epoch Step: 65 / 730 Loss: 8.490986824035645 Tokens per Sec: 20858.760702730946
Epoch Step: 70 / 730 Loss: 21.247020721435547 Tokens per Sec: 17631.09924639763
Epoch Step: 75 / 730 Loss: 8.629982948303223 Tokens per Sec: 19760.424135072215
Epoch Step: 80 / 730 Loss: 18.05673599243164 Tokens per Sec: 19482.345982345832
Epoch Step: 85 / 730 Loss: 39.92942810058594 Tokens per Sec: 18128.3567276174
Epoch Step: 90 / 730 Loss: 15.83545207977295 Tokens per Sec: 14503.832297669487
Epoch Step: 95 / 730 Loss: 64.96234893798828 Tokens per Sec: 17704.843517438563
Epoch Step: 100 / 730 Loss: 91.16140747070312 Tokens per Sec: 16500.950013066806
Epoch Step: 105 / 730 Loss: 18.115150451660156 Tokens per Sec: 19259.76722207231
Epoch Step: 110 / 730 Loss: 14.923911094665527 Tokens per Sec: 20532.01856746201
Epoch Step: 115 / 730 Loss: 16.52219581604004 Tokens per Sec: 17768.61562672823
Epoch Step: 120 / 730 Loss: 7.9781670570373535 Tokens per Sec: 20497.675059488054
Epoch Step: 125 / 730 Loss: 10.561202049255371 Tokens per Sec: 17513.139293252894
Epoch Step: 130 / 730 Loss: 107.62863159179688 Tokens per Sec: 15804.595474757669
Epoch Step: 135 / 730 Loss: 9.58569049835205 Tokens per Sec: 14885.445380753805
Epoch Step: 140 / 730 Loss: 13.204251289367676 Tokens per Sec: 16773.52448863696
Epoch Step: 145 / 730 Loss: 23.020999908447266 Tokens per Sec: 17949.764113519006
Epoch Step: 150 / 730 Loss: 18.94554901123047 Tokens per Sec: 20576.379013872924
Epoch Step: 155 / 730 Loss: 12.096540451049805 Tokens per Sec: 16119.565547977862
Epoch Step: 160 / 730 Loss: 21.876670837402344 Tokens per Sec: 17296.56592676407
Epoch Step: 165 / 730 Loss: 17.926422119140625 Tokens per Sec: 19137.59270412337
Epoch Step: 170 / 730 Loss: 22.88370132446289 Tokens per Sec: 17332.041663732976
Epoch Step: 175 / 730 Loss: 10.478385925292969 Tokens per Sec: 17722.416712288872
Epoch Step: 180 / 730 Loss: 6.947965621948242 Tokens per Sec: 16425.45083246224
Epoch Step: 185 / 730 Loss: 19.78946876525879 Tokens per Sec: 14469.920612810547
Epoch Step: 190 / 730 Loss: 15.37011432647705 Tokens per Sec: 19055.135434746662
Epoch Step: 195 / 730 Loss: 17.18304443359375 Tokens per Sec: 19101.81789548328
Epoch Step: 200 / 730 Loss: 12.679600715637207 Tokens per Sec: 19531.46840836295
Epoch Step: 205 / 730 Loss: 11.060114860534668 Tokens per Sec: 14152.525288586003
Epoch Step: 210 / 730 Loss: 10.889261245727539 Tokens per Sec: 14187.849949861857
Epoch Step: 215 / 730 Loss: 10.72029972076416 Tokens per Sec: 17487.790942093026
Epoch Step: 220 / 730 Loss: 7.246298789978027 Tokens per Sec: 18827.06487013593
Epoch Step: 225 / 730 Loss: 13.449455261230469 Tokens per Sec: 18517.889500015957
Epoch Step: 230 / 730 Loss: 13.29668140411377 Tokens per Sec: 17943.659328314705
Epoch Step: 235 / 730 Loss: 22.86846160888672 Tokens per Sec: 21291.470318214633
Epoch Step: 240 / 730 Loss: 73.04370880126953 Tokens per Sec: 17712.712914216823
Epoch Step: 245 / 730 Loss: 27.71419334411621 Tokens per Sec: 19883.696006406415
Epoch Step: 250 / 730 Loss: 8.871452331542969 Tokens per Sec: 17454.336422146687
Epoch Step: 255 / 730 Loss: 13.253385543823242 Tokens per Sec: 16516.45234357659
Epoch Step: 260 / 730 Loss: 22.504070281982422 Tokens per Sec: 19224.496514502152
Epoch Step: 265 / 730 Loss: 17.52951431274414 Tokens per Sec: 16848.081440882244
Epoch Step: 270 / 730 Loss: 72.65142822265625 Tokens per Sec: 16885.465784691194
Epoch Step: 275 / 730 Loss: 9.090751647949219 Tokens per Sec: 16022.404270355728
Epoch Step: 280 / 730 Loss: 21.054784774780273 Tokens per Sec: 19100.46443853129
Epoch Step: 285 / 730 Loss: 5.92617130279541 Tokens per Sec: 16886.9938343693
Epoch Step: 290 / 730 Loss: 14.801843643188477 Tokens per Sec: 17045.56322333529
Epoch Step: 295 / 730 Loss: 15.521587371826172 Tokens per Sec: 16371.03717184404
Epoch Step: 300 / 730 Loss: 22.70158576965332 Tokens per Sec: 18570.460053044873
Epoch Step: 305 / 730 Loss: 24.06038475036621 Tokens per Sec: 15382.00798986031
Epoch Step: 310 / 730 Loss: 7.418739318847656 Tokens per Sec: 14377.2194126113
Epoch Step: 315 / 730 Loss: 29.347061157226562 Tokens per Sec: 21688.23910842435
Epoch Step: 320 / 730 Loss: 21.886058807373047 Tokens per Sec: 18247.741957054997
Epoch Step: 325 / 730 Loss: 23.054546356201172 Tokens per Sec: 20123.875813745926
Epoch Step: 330 / 730 Loss: 12.247429847717285 Tokens per Sec: 17733.84168216105
Epoch Step: 335 / 730 Loss: 22.5335750579834 Tokens per Sec: 16396.94618121067
Epoch Step: 340 / 730 Loss: 25.47515106201172 Tokens per Sec: 18953.649729968038
Epoch Step: 345 / 730 Loss: 8.765192031860352 Tokens per Sec: 18378.12263563026
Epoch Step: 350 / 730 Loss: 16.925151824951172 Tokens per Sec: 19123.548299255384
Epoch Step: 355 / 730 Loss: 16.006547927856445 Tokens per Sec: 16986.067595373377
Epoch Step: 360 / 730 Loss: 54.37301254272461 Tokens per Sec: 18711.053579836152
Epoch Step: 365 / 730 Loss: 14.772937774658203 Tokens per Sec: 14103.891474005091
Epoch Step: 370 / 730 Loss: 101.62036895751953 Tokens per Sec: 18503.357108829354
Epoch Step: 375 / 730 Loss: 7.427636623382568 Tokens per Sec: 13216.473799292282
Epoch Step: 380 / 730 Loss: 13.665877342224121 Tokens per Sec: 18814.28635162078
Epoch Step: 385 / 730 Loss: 13.925265312194824 Tokens per Sec: 16888.06139745957
Epoch Step: 390 / 730 Loss: 13.299273490905762 Tokens per Sec: 17001.088743812325
Epoch Step: 395 / 730 Loss: 27.041534423828125 Tokens per Sec: 19725.809878688484
Epoch Step: 400 / 730 Loss: 7.674281120300293 Tokens per Sec: 16841.59170178687
Epoch Step: 405 / 730 Loss: 16.563907623291016 Tokens per Sec: 15466.027933254632
Epoch Step: 410 / 730 Loss: 19.679807662963867 Tokens per Sec: 17187.794831480987
Epoch Step: 415 / 730 Loss: 27.21297264099121 Tokens per Sec: 19819.993091145105
Epoch Step: 420 / 730 Loss: 13.506199836730957 Tokens per Sec: 18063.612490224546
Epoch Step: 425 / 730 Loss: 11.936104774475098 Tokens per Sec: 16293.405170511283
Epoch Step: 430 / 730 Loss: 9.710906982421875 Tokens per Sec: 18821.314295251694
Epoch Step: 435 / 730 Loss: 12.231073379516602 Tokens per Sec: 14869.375480907516
Epoch Step: 440 / 730 Loss: 9.855515480041504 Tokens per Sec: 16086.583612183169
Epoch Step: 445 / 730 Loss: 86.44971466064453 Tokens per Sec: 17995.52040748578
Epoch Step: 450 / 730 Loss: 18.598285675048828 Tokens per Sec: 16416.454157450207
Epoch Step: 455 / 730 Loss: 9.084218978881836 Tokens per Sec: 18245.489237251295
Epoch Step: 460 / 730 Loss: 15.170559883117676 Tokens per Sec: 16997.503334022884
Epoch Step: 465 / 730 Loss: 15.20357894897461 Tokens per Sec: 21395.42002931795
Epoch Step: 470 / 730 Loss: 17.322999954223633 Tokens per Sec: 16069.350362657578
Epoch Step: 475 / 730 Loss: 21.3267765045166 Tokens per Sec: 15483.640613343734
Epoch Step: 480 / 730 Loss: 18.002641677856445 Tokens per Sec: 18749.417485136695
Epoch Step: 485 / 730 Loss: 9.289932250976562 Tokens per Sec: 16943.070034856988
Epoch Step: 490 / 730 Loss: 14.050345420837402 Tokens per Sec: 17430.33773046133
Epoch Step: 495 / 730 Loss: 7.074748516082764 Tokens per Sec: 16365.922998707945
Epoch Step: 500 / 730 Loss: 13.674408912658691 Tokens per Sec: 20464.260202199628
Epoch Step: 505 / 730 Loss: 21.816068649291992 Tokens per Sec: 18449.413083009782
Epoch Step: 510 / 730 Loss: 23.479429244995117 Tokens per Sec: 14362.217262036049
Epoch Step: 515 / 730 Loss: 17.213449478149414 Tokens per Sec: 14846.655850859857
Epoch Step: 520 / 730 Loss: 39.769981384277344 Tokens per Sec: 17726.37150601883
Epoch Step: 525 / 730 Loss: 4.799595355987549 Tokens per Sec: 17674.3473567451
Epoch Step: 530 / 730 Loss: 7.697470664978027 Tokens per Sec: 14634.34012840354
Epoch Step: 535 / 730 Loss: 15.622735023498535 Tokens per Sec: 18105.441127404243
Epoch Step: 540 / 730 Loss: 21.090383529663086 Tokens per Sec: 19468.456776724015
Epoch Step: 545 / 730 Loss: 26.39600944519043 Tokens per Sec: 18109.952064526264
Epoch Step: 550 / 730 Loss: 13.262795448303223 Tokens per Sec: 18187.797697693557
Epoch Step: 555 / 730 Loss: 21.127792358398438 Tokens per Sec: 21670.102770497513
Epoch Step: 560 / 730 Loss: 26.49380874633789 Tokens per Sec: 16381.317177009989
Epoch Step: 565 / 730 Loss: 6.418559551239014 Tokens per Sec: 17379.463159522955
Epoch Step: 570 / 730 Loss: 13.995048522949219 Tokens per Sec: 20498.362313515103
Epoch Step: 575 / 730 Loss: 9.68995189666748 Tokens per Sec: 20178.799569868406
Epoch Step: 580 / 730 Loss: 21.7163028717041 Tokens per Sec: 18461.862179817323
Epoch Step: 585 / 730 Loss: 84.15665435791016 Tokens per Sec: 16793.94252547329
Epoch Step: 590 / 730 Loss: 18.367280960083008 Tokens per Sec: 16274.3881958264
Epoch Step: 595 / 730 Loss: 7.900186538696289 Tokens per Sec: 19352.380056809674
Epoch Step: 600 / 730 Loss: 7.328542709350586 Tokens per Sec: 20396.542517294616
Epoch Step: 605 / 730 Loss: 9.468125343322754 Tokens per Sec: 17906.8242726215
Epoch Step: 610 / 730 Loss: 10.572301864624023 Tokens per Sec: 15972.400396302484
Epoch Step: 615 / 730 Loss: 21.536558151245117 Tokens per Sec: 20973.003806890316
Epoch Step: 620 / 730 Loss: 24.50520896911621 Tokens per Sec: 15935.151850293718
Epoch Step: 625 / 730 Loss: 18.85403823852539 Tokens per Sec: 17585.60263784998
Epoch Step: 630 / 730 Loss: 18.61618423461914 Tokens per Sec: 18279.26157996953
Epoch Step: 635 / 730 Loss: 15.702254295349121 Tokens per Sec: 14696.388426283804
Epoch Step: 640 / 730 Loss: 18.020687103271484 Tokens per Sec: 18216.029791598063
Epoch Step: 645 / 730 Loss: 20.42772102355957 Tokens per Sec: 17641.406060650235
Epoch Step: 650 / 730 Loss: 82.05204010009766 Tokens per Sec: 18455.157939794473
Epoch Step: 655 / 730 Loss: 12.81010627746582 Tokens per Sec: 14904.498799977519
Epoch Step: 660 / 730 Loss: 9.374289512634277 Tokens per Sec: 20086.785259377568
Epoch Step: 665 / 730 Loss: 32.50136947631836 Tokens per Sec: 15743.435191983224
Epoch Step: 670 / 730 Loss: 19.708866119384766 Tokens per Sec: 17290.7884688893
Epoch Step: 675 / 730 Loss: 23.349397659301758 Tokens per Sec: 16449.40315028835
Epoch Step: 680 / 730 Loss: 20.365877151489258 Tokens per Sec: 21116.925706205522
Epoch Step: 685 / 730 Loss: 14.798742294311523 Tokens per Sec: 15806.463489808737
Epoch Step: 690 / 730 Loss: 17.735740661621094 Tokens per Sec: 17701.895400646885
Epoch Step: 695 / 730 Loss: 41.71654510498047 Tokens per Sec: 18812.3153163962
Epoch Step: 700 / 730 Loss: 11.03215217590332 Tokens per Sec: 20983.439176523094
Epoch Step: 705 / 730 Loss: 21.322450637817383 Tokens per Sec: 16679.536664381325
Epoch Step: 710 / 730 Loss: 60.5507926940918 Tokens per Sec: 13996.633915325758
Epoch Step: 715 / 730 Loss: 11.935616493225098 Tokens per Sec: 15647.865487426152
Epoch Step: 720 / 730 Loss: 16.49822425842285 Tokens per Sec: 15312.20596052382
Epoch Step: 725 / 730 Loss: 43.044376373291016 Tokens per Sec: 11643.339582247787
Epoch Step: 730 / 730 Loss: 22.020170211791992 Tokens per Sec: 16511.527318584394
Epoch ended with duration 0:01:19.866704
Train perplexity: 1.9962839225604208
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 , TYPE_3 > ( VAR_1 ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_2 ( ) ; }[0m
Epoch ended with duration 0:00:03.266203
Validation perplexity: 1.6382389231981962
Model saved best_on_validation!
Epoch 7 / 1000
Epoch Step: 5 / 730 Loss: 16.031620025634766 Tokens per Sec: 15670.239607393498
Epoch Step: 10 / 730 Loss: 18.00899887084961 Tokens per Sec: 18613.98785181584
Epoch Step: 15 / 730 Loss: 7.358818054199219 Tokens per Sec: 18326.09728395336
Epoch Step: 20 / 730 Loss: 15.391056060791016 Tokens per Sec: 14314.745344140854
Epoch Step: 25 / 730 Loss: 13.097407341003418 Tokens per Sec: 17878.42456901836
Epoch Step: 30 / 730 Loss: 11.090155601501465 Tokens per Sec: 16154.888298538908
Epoch Step: 35 / 730 Loss: 22.19229507446289 Tokens per Sec: 18023.650617035153
Epoch Step: 40 / 730 Loss: 17.841156005859375 Tokens per Sec: 18693.98476616361
Epoch Step: 45 / 730 Loss: 13.435405731201172 Tokens per Sec: 14929.272090204347
Epoch Step: 50 / 730 Loss: 15.781950950622559 Tokens per Sec: 18911.296909216955
Epoch Step: 55 / 730 Loss: 12.141746520996094 Tokens per Sec: 20531.124188169346
Epoch Step: 60 / 730 Loss: 5.7288947105407715 Tokens per Sec: 18743.115574946278
Epoch Step: 65 / 730 Loss: 5.9857659339904785 Tokens per Sec: 16734.288911054253
Epoch Step: 70 / 730 Loss: 20.03089714050293 Tokens per Sec: 21067.761627885648
Epoch Step: 75 / 730 Loss: 10.418346405029297 Tokens per Sec: 18104.107480846254
Epoch Step: 80 / 730 Loss: 18.90778160095215 Tokens per Sec: 15912.425102563062
Epoch Step: 85 / 730 Loss: 7.7110137939453125 Tokens per Sec: 13454.953089764344
Epoch Step: 90 / 730 Loss: 18.52992820739746 Tokens per Sec: 18518.388991608273
Epoch Step: 95 / 730 Loss: 13.982664108276367 Tokens per Sec: 17679.881842869418
Epoch Step: 100 / 730 Loss: 21.72064781188965 Tokens per Sec: 20110.275126646993
Epoch Step: 105 / 730 Loss: 10.190884590148926 Tokens per Sec: 13818.113703427327
Epoch Step: 110 / 730 Loss: 24.4250431060791 Tokens per Sec: 19345.252772618267
Epoch Step: 115 / 730 Loss: 20.596805572509766 Tokens per Sec: 16832.31186077644
Epoch Step: 120 / 730 Loss: 5.497744560241699 Tokens per Sec: 21078.49144344391
Epoch Step: 125 / 730 Loss: 14.256515502929688 Tokens per Sec: 17092.83756211847
Epoch Step: 130 / 730 Loss: 19.791290283203125 Tokens per Sec: 16901.654789145196
Epoch Step: 135 / 730 Loss: 28.81165885925293 Tokens per Sec: 20914.498607185993
Epoch Step: 140 / 730 Loss: 5.3456645011901855 Tokens per Sec: 14843.86156388157
Epoch Step: 145 / 730 Loss: 13.265296936035156 Tokens per Sec: 20690.59593911081
Epoch Step: 150 / 730 Loss: 16.7845458984375 Tokens per Sec: 17976.13356912113
Epoch Step: 155 / 730 Loss: 6.392260551452637 Tokens per Sec: 18800.81403682062
Epoch Step: 160 / 730 Loss: 16.163393020629883 Tokens per Sec: 17044.573677217275
Epoch Step: 165 / 730 Loss: 15.579070091247559 Tokens per Sec: 14354.62053975089
Epoch Step: 170 / 730 Loss: 22.61762046813965 Tokens per Sec: 17310.3832068425
Epoch Step: 175 / 730 Loss: 3.880617380142212 Tokens per Sec: 17686.192987747527
Epoch Step: 180 / 730 Loss: 6.187230110168457 Tokens per Sec: 19403.495040182337
Epoch Step: 185 / 730 Loss: 21.338346481323242 Tokens per Sec: 18733.849528943578
Epoch Step: 190 / 730 Loss: 7.827183246612549 Tokens per Sec: 18637.093049987267
Epoch Step: 195 / 730 Loss: 16.293336868286133 Tokens per Sec: 18447.27205210177
Epoch Step: 200 / 730 Loss: 8.119161605834961 Tokens per Sec: 15368.382109556007
Epoch Step: 205 / 730 Loss: 14.66505241394043 Tokens per Sec: 17275.01561179306
Epoch Step: 210 / 730 Loss: 26.910720825195312 Tokens per Sec: 16906.534604045024
Epoch Step: 215 / 730 Loss: 5.403775215148926 Tokens per Sec: 17271.160630635168
Epoch Step: 220 / 730 Loss: 9.57788372039795 Tokens per Sec: 12959.620060888787
Epoch Step: 225 / 730 Loss: 11.950242042541504 Tokens per Sec: 19033.631178980962
Epoch Step: 230 / 730 Loss: 8.26640510559082 Tokens per Sec: 14472.175912208917
Epoch Step: 235 / 730 Loss: 18.237590789794922 Tokens per Sec: 17937.362418263783
Epoch Step: 240 / 730 Loss: 7.970078468322754 Tokens per Sec: 20729.85895501147
Epoch Step: 245 / 730 Loss: 26.607961654663086 Tokens per Sec: 15226.72396707189
Epoch Step: 250 / 730 Loss: 8.901823043823242 Tokens per Sec: 18326.800669330838
Epoch Step: 255 / 730 Loss: 17.7938232421875 Tokens per Sec: 19830.30359403475
Epoch Step: 260 / 730 Loss: 17.162553787231445 Tokens per Sec: 16251.24964910941
Epoch Step: 265 / 730 Loss: 22.665830612182617 Tokens per Sec: 18726.369275084013
Epoch Step: 270 / 730 Loss: 23.48346519470215 Tokens per Sec: 19704.752273571532
Epoch Step: 275 / 730 Loss: 5.790394306182861 Tokens per Sec: 14233.831845748893
Epoch Step: 280 / 730 Loss: 19.23298454284668 Tokens per Sec: 21657.095396073597
Epoch Step: 285 / 730 Loss: 8.23158073425293 Tokens per Sec: 18829.701759298685
Epoch Step: 290 / 730 Loss: 11.988046646118164 Tokens per Sec: 17910.53717597455
Epoch Step: 295 / 730 Loss: 22.393587112426758 Tokens per Sec: 19994.52496226451
Epoch Step: 300 / 730 Loss: 8.951943397521973 Tokens per Sec: 17793.16052916281
Epoch Step: 305 / 730 Loss: 10.855535507202148 Tokens per Sec: 17563.595787425194
Epoch Step: 310 / 730 Loss: 11.257802963256836 Tokens per Sec: 18152.067204982086
Epoch Step: 315 / 730 Loss: 15.652779579162598 Tokens per Sec: 16795.68012517072
Epoch Step: 320 / 730 Loss: 9.888718605041504 Tokens per Sec: 16222.10205969582
Epoch Step: 325 / 730 Loss: 6.435713768005371 Tokens per Sec: 17101.11252008487
Epoch Step: 330 / 730 Loss: 9.337404251098633 Tokens per Sec: 18625.76770976284
Epoch Step: 335 / 730 Loss: 22.407546997070312 Tokens per Sec: 15238.66864204975
Epoch Step: 340 / 730 Loss: 6.5186920166015625 Tokens per Sec: 14038.844176869035
Epoch Step: 345 / 730 Loss: 10.108421325683594 Tokens per Sec: 16652.25611821811
Epoch Step: 350 / 730 Loss: 18.26022720336914 Tokens per Sec: 16752.049036633634
Epoch Step: 355 / 730 Loss: 11.00232219696045 Tokens per Sec: 16109.48685717302
Epoch Step: 360 / 730 Loss: 13.2001953125 Tokens per Sec: 15884.961209969388
Epoch Step: 365 / 730 Loss: 48.12468719482422 Tokens per Sec: 19526.824171590553
Epoch Step: 370 / 730 Loss: 22.974735260009766 Tokens per Sec: 17256.21439915902
Epoch Step: 375 / 730 Loss: 13.597187995910645 Tokens per Sec: 20109.09690321097
Epoch Step: 380 / 730 Loss: 18.145456314086914 Tokens per Sec: 19080.437334421404
Epoch Step: 385 / 730 Loss: 21.456918716430664 Tokens per Sec: 18362.0128143651
Epoch Step: 390 / 730 Loss: 11.25545883178711 Tokens per Sec: 17760.51189782557
Epoch Step: 395 / 730 Loss: 12.276490211486816 Tokens per Sec: 19265.304125729413
Epoch Step: 400 / 730 Loss: 20.69127655029297 Tokens per Sec: 16434.57427573122
Epoch Step: 405 / 730 Loss: 10.184953689575195 Tokens per Sec: 19213.1127074588
Epoch Step: 410 / 730 Loss: 7.845442295074463 Tokens per Sec: 20728.07979893004
Epoch Step: 415 / 730 Loss: 16.221586227416992 Tokens per Sec: 19035.335322928033
Epoch Step: 420 / 730 Loss: 16.884496688842773 Tokens per Sec: 16515.050886019402
Epoch Step: 425 / 730 Loss: 12.578910827636719 Tokens per Sec: 16124.15244699021
Epoch Step: 430 / 730 Loss: 6.6765899658203125 Tokens per Sec: 13888.6947459835
Epoch Step: 435 / 730 Loss: 22.644554138183594 Tokens per Sec: 18352.825382841682
Epoch Step: 440 / 730 Loss: 6.069517135620117 Tokens per Sec: 16532.000388868975
Epoch Step: 445 / 730 Loss: 6.2653093338012695 Tokens per Sec: 14381.272892547124
Epoch Step: 450 / 730 Loss: 15.754568099975586 Tokens per Sec: 15273.474237417478
Epoch Step: 455 / 730 Loss: 14.538923263549805 Tokens per Sec: 20013.261634585135
Epoch Step: 460 / 730 Loss: 22.05255699157715 Tokens per Sec: 19399.516172367363
Epoch Step: 465 / 730 Loss: 5.323630332946777 Tokens per Sec: 18384.671345666542
Epoch Step: 470 / 730 Loss: 21.891103744506836 Tokens per Sec: 18159.160614287117
Epoch Step: 475 / 730 Loss: 60.59990692138672 Tokens per Sec: 15994.226150745442
Epoch Step: 480 / 730 Loss: 12.389116287231445 Tokens per Sec: 16311.274379638146
Epoch Step: 485 / 730 Loss: 18.398122787475586 Tokens per Sec: 19163.916428808676
Epoch Step: 490 / 730 Loss: 7.5173234939575195 Tokens per Sec: 18550.728750604132
Epoch Step: 495 / 730 Loss: 19.40262794494629 Tokens per Sec: 17304.587583215256
Epoch Step: 500 / 730 Loss: 20.08796501159668 Tokens per Sec: 17618.547111349497
Epoch Step: 505 / 730 Loss: 12.872800827026367 Tokens per Sec: 14552.061123108255
Epoch Step: 510 / 730 Loss: 11.153142929077148 Tokens per Sec: 15916.628364689657
Epoch Step: 515 / 730 Loss: 24.209552764892578 Tokens per Sec: 18712.357054273027
Epoch Step: 520 / 730 Loss: 11.100696563720703 Tokens per Sec: 20362.999638423527
Epoch Step: 525 / 730 Loss: 5.333797931671143 Tokens per Sec: 15913.815341071448
Epoch Step: 530 / 730 Loss: 6.630815505981445 Tokens per Sec: 12053.043989758999
Epoch Step: 535 / 730 Loss: 19.865489959716797 Tokens per Sec: 17652.321451457596
Epoch Step: 540 / 730 Loss: 21.901371002197266 Tokens per Sec: 18073.604845187714
Epoch Step: 545 / 730 Loss: 18.284591674804688 Tokens per Sec: 18051.543788130355
Epoch Step: 550 / 730 Loss: 22.818532943725586 Tokens per Sec: 17389.68873632229
Epoch Step: 555 / 730 Loss: 11.978992462158203 Tokens per Sec: 17719.64096484542
Epoch Step: 560 / 730 Loss: 25.737300872802734 Tokens per Sec: 19827.57735273282
Epoch Step: 565 / 730 Loss: 21.314420700073242 Tokens per Sec: 14657.951498401555
Epoch Step: 570 / 730 Loss: 14.91228199005127 Tokens per Sec: 19353.663758001185
Epoch Step: 575 / 730 Loss: 11.570049285888672 Tokens per Sec: 17102.15860876841
Epoch Step: 580 / 730 Loss: 18.10550308227539 Tokens per Sec: 17329.982883887715
Epoch Step: 585 / 730 Loss: 4.322575092315674 Tokens per Sec: 16981.867837717702
Epoch Step: 590 / 730 Loss: 14.183798789978027 Tokens per Sec: 20004.74001102215
Epoch Step: 595 / 730 Loss: 14.45878791809082 Tokens per Sec: 18280.36504890294
Epoch Step: 600 / 730 Loss: 20.295894622802734 Tokens per Sec: 20568.767165215224
Epoch Step: 605 / 730 Loss: 12.073569297790527 Tokens per Sec: 16716.867269114915
Epoch Step: 610 / 730 Loss: 6.529718399047852 Tokens per Sec: 21267.050727371687
Epoch Step: 615 / 730 Loss: 11.96984577178955 Tokens per Sec: 18048.188223511992
Epoch Step: 620 / 730 Loss: 16.1583309173584 Tokens per Sec: 17382.030590505205
Epoch Step: 625 / 730 Loss: 9.954754829406738 Tokens per Sec: 19646.326509459785
Epoch Step: 630 / 730 Loss: 11.891231536865234 Tokens per Sec: 17891.931931715968
Epoch Step: 635 / 730 Loss: 67.09288787841797 Tokens per Sec: 18551.237549793736
Epoch Step: 640 / 730 Loss: 17.181968688964844 Tokens per Sec: 16148.691345872818
Epoch Step: 645 / 730 Loss: 6.225953578948975 Tokens per Sec: 15595.05086306589
Epoch Step: 650 / 730 Loss: 9.070762634277344 Tokens per Sec: 14927.913407755213
Epoch Step: 655 / 730 Loss: 52.61809158325195 Tokens per Sec: 15814.795187917265
Epoch Step: 660 / 730 Loss: 9.495773315429688 Tokens per Sec: 15066.627506079678
Epoch Step: 665 / 730 Loss: 6.4745306968688965 Tokens per Sec: 16912.900555073167
Epoch Step: 670 / 730 Loss: 57.68495559692383 Tokens per Sec: 17881.833356095867
Epoch Step: 675 / 730 Loss: 10.639233589172363 Tokens per Sec: 17260.049530885874
Epoch Step: 680 / 730 Loss: 10.820061683654785 Tokens per Sec: 20258.36676979938
Epoch Step: 685 / 730 Loss: 18.021385192871094 Tokens per Sec: 15690.154234817393
Epoch Step: 690 / 730 Loss: 15.157061576843262 Tokens per Sec: 17377.49771312918
Epoch Step: 695 / 730 Loss: 19.908981323242188 Tokens per Sec: 17199.941417348666
Epoch Step: 700 / 730 Loss: 13.529613494873047 Tokens per Sec: 21188.025276088112
Epoch Step: 705 / 730 Loss: 13.44619083404541 Tokens per Sec: 16157.513292312931
Epoch Step: 710 / 730 Loss: 12.444636344909668 Tokens per Sec: 15266.777439678206
Epoch Step: 715 / 730 Loss: 18.545150756835938 Tokens per Sec: 16686.680715897008
Epoch Step: 720 / 730 Loss: 9.887927055358887 Tokens per Sec: 15686.492283063882
Epoch Step: 725 / 730 Loss: 10.440343856811523 Tokens per Sec: 15189.903091415978
Epoch Step: 730 / 730 Loss: 110.51384735107422 Tokens per Sec: 13892.63383127447
Epoch ended with duration 0:01:20.073663
Train perplexity: 1.925957556137678
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 , java.lang.String > VAR_1 ) , java.lang.String > ( VAR_2 , VAR_2 ) ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . add ( true ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.311468
Validation perplexity: 1.8611044897360396
Epoch 8 / 1000
Epoch Step: 5 / 730 Loss: 15.815261840820312 Tokens per Sec: 15558.406985061309
Epoch Step: 10 / 730 Loss: 11.451560974121094 Tokens per Sec: 21734.53902826006
Epoch Step: 15 / 730 Loss: 12.39692497253418 Tokens per Sec: 18457.649036955394
Epoch Step: 20 / 730 Loss: 7.1463823318481445 Tokens per Sec: 14485.80340115225
Epoch Step: 25 / 730 Loss: 22.67176055908203 Tokens per Sec: 16742.444030067745
Epoch Step: 30 / 730 Loss: 10.975319862365723 Tokens per Sec: 16639.75650846965
Epoch Step: 35 / 730 Loss: 16.816980361938477 Tokens per Sec: 20460.79752071812
Epoch Step: 40 / 730 Loss: 22.257081985473633 Tokens per Sec: 15774.131832046052
Epoch Step: 45 / 730 Loss: 7.462405681610107 Tokens per Sec: 14394.867319815363
Epoch Step: 50 / 730 Loss: 16.851835250854492 Tokens per Sec: 15083.688047998632
Epoch Step: 55 / 730 Loss: 18.222501754760742 Tokens per Sec: 20191.176151379717
Epoch Step: 60 / 730 Loss: 5.20152473449707 Tokens per Sec: 17835.80827320613
Epoch Step: 65 / 730 Loss: 14.110618591308594 Tokens per Sec: 19499.46703067897
Epoch Step: 70 / 730 Loss: 7.280489444732666 Tokens per Sec: 15245.21290120235
Epoch Step: 75 / 730 Loss: 27.42926788330078 Tokens per Sec: 15715.560146318005
Epoch Step: 80 / 730 Loss: 19.140913009643555 Tokens per Sec: 17409.481046570254
Epoch Step: 85 / 730 Loss: 11.897937774658203 Tokens per Sec: 17976.621166961708
Epoch Step: 90 / 730 Loss: 14.7457914352417 Tokens per Sec: 19265.96796701801
Epoch Step: 95 / 730 Loss: 18.914365768432617 Tokens per Sec: 16842.86115884608
Epoch Step: 100 / 730 Loss: 9.725443840026855 Tokens per Sec: 18209.404125479283
Epoch Step: 105 / 730 Loss: 12.950657844543457 Tokens per Sec: 13047.0312134273
Epoch Step: 110 / 730 Loss: 8.578484535217285 Tokens per Sec: 18555.790365865876
Epoch Step: 115 / 730 Loss: 15.027467727661133 Tokens per Sec: 19044.720604532096
Epoch Step: 120 / 730 Loss: 7.997799873352051 Tokens per Sec: 17019.29543095567
Epoch Step: 125 / 730 Loss: 17.3088321685791 Tokens per Sec: 14976.333772998863
Epoch Step: 130 / 730 Loss: 14.749263763427734 Tokens per Sec: 19448.574170333362
Epoch Step: 135 / 730 Loss: 11.63355827331543 Tokens per Sec: 20094.883183461498
Epoch Step: 140 / 730 Loss: 16.07379722595215 Tokens per Sec: 17694.954084777622
Epoch Step: 145 / 730 Loss: 18.113975524902344 Tokens per Sec: 16873.21441421156
Epoch Step: 150 / 730 Loss: 8.865269660949707 Tokens per Sec: 15984.791883372285
Epoch Step: 155 / 730 Loss: 6.664553165435791 Tokens per Sec: 20239.20193069741
Epoch Step: 160 / 730 Loss: 22.527320861816406 Tokens per Sec: 16445.741493435013
Epoch Step: 165 / 730 Loss: 13.250995635986328 Tokens per Sec: 21111.037500411938
Epoch Step: 170 / 730 Loss: 13.149622917175293 Tokens per Sec: 17423.097977146143
Epoch Step: 175 / 730 Loss: 12.656209945678711 Tokens per Sec: 17163.172770664773
Epoch Step: 180 / 730 Loss: 4.660559177398682 Tokens per Sec: 19290.378423752645
Epoch Step: 185 / 730 Loss: 7.176436901092529 Tokens per Sec: 17669.20980243877
Epoch Step: 190 / 730 Loss: 11.14508056640625 Tokens per Sec: 17284.009469253993
Epoch Step: 195 / 730 Loss: 8.617087364196777 Tokens per Sec: 17585.240380695268
Epoch Step: 200 / 730 Loss: 9.221002578735352 Tokens per Sec: 17473.63268402562
Epoch Step: 205 / 730 Loss: 16.708093643188477 Tokens per Sec: 15281.126754203935
Epoch Step: 210 / 730 Loss: 14.49907112121582 Tokens per Sec: 16147.563456500684
Epoch Step: 215 / 730 Loss: 12.656296730041504 Tokens per Sec: 18731.050410303415
Epoch Step: 220 / 730 Loss: 8.952210426330566 Tokens per Sec: 15967.735537656254
Epoch Step: 225 / 730 Loss: 24.761323928833008 Tokens per Sec: 20402.252492856514
Epoch Step: 230 / 730 Loss: 17.316165924072266 Tokens per Sec: 21375.872871942698
Epoch Step: 235 / 730 Loss: 5.477538585662842 Tokens per Sec: 18049.701405545675
Epoch Step: 240 / 730 Loss: 18.611339569091797 Tokens per Sec: 18014.083047788405
Epoch Step: 245 / 730 Loss: 20.455322265625 Tokens per Sec: 17843.459401159766
Epoch Step: 250 / 730 Loss: 8.571842193603516 Tokens per Sec: 18189.317987377624
Epoch Step: 255 / 730 Loss: 6.588881015777588 Tokens per Sec: 19064.420318794608
Epoch Step: 260 / 730 Loss: 13.685611724853516 Tokens per Sec: 17147.653944914167
Epoch Step: 265 / 730 Loss: 15.19305419921875 Tokens per Sec: 20682.240038976262
Epoch Step: 270 / 730 Loss: 83.88191223144531 Tokens per Sec: 20167.03768627546
Epoch Step: 275 / 730 Loss: 8.162455558776855 Tokens per Sec: 13748.749823613447
Epoch Step: 280 / 730 Loss: 7.27598762512207 Tokens per Sec: 16686.65262029248
Epoch Step: 285 / 730 Loss: 18.54836082458496 Tokens per Sec: 14322.15196828693
Epoch Step: 290 / 730 Loss: 18.284513473510742 Tokens per Sec: 19818.48817361657
Epoch Step: 295 / 730 Loss: 18.805389404296875 Tokens per Sec: 15778.827813764685
Epoch Step: 300 / 730 Loss: 6.215906620025635 Tokens per Sec: 17290.51379226383
Epoch Step: 305 / 730 Loss: 74.33002471923828 Tokens per Sec: 19063.087303099033
Epoch Step: 310 / 730 Loss: 16.608219146728516 Tokens per Sec: 17061.309945274927
Epoch Step: 315 / 730 Loss: 23.63629913330078 Tokens per Sec: 18339.415299018638
Epoch Step: 320 / 730 Loss: 18.673479080200195 Tokens per Sec: 17399.365065560443
Epoch Step: 325 / 730 Loss: 15.45380973815918 Tokens per Sec: 16692.94728914705
Epoch Step: 330 / 730 Loss: 13.480722427368164 Tokens per Sec: 17064.29152020626
Epoch Step: 335 / 730 Loss: 11.485702514648438 Tokens per Sec: 18363.544424189862
Epoch Step: 340 / 730 Loss: 8.49254035949707 Tokens per Sec: 12583.22169686115
Epoch Step: 345 / 730 Loss: 7.810975551605225 Tokens per Sec: 17184.987546146745
Epoch Step: 350 / 730 Loss: 12.30067253112793 Tokens per Sec: 16490.097180188768
Epoch Step: 355 / 730 Loss: 8.513897895812988 Tokens per Sec: 20744.30786196475
Epoch Step: 360 / 730 Loss: 10.910807609558105 Tokens per Sec: 19307.029045057257
Epoch Step: 365 / 730 Loss: 9.347044944763184 Tokens per Sec: 20140.951761246324
Epoch Step: 370 / 730 Loss: 7.0230793952941895 Tokens per Sec: 16372.012525973836
Epoch Step: 375 / 730 Loss: 6.794618129730225 Tokens per Sec: 17251.930997058756
Epoch Step: 380 / 730 Loss: 14.080754280090332 Tokens per Sec: 20341.796327088337
Epoch Step: 385 / 730 Loss: 5.778466701507568 Tokens per Sec: 16113.661371820097
Epoch Step: 390 / 730 Loss: 7.000452041625977 Tokens per Sec: 18280.500799220674
Epoch Step: 395 / 730 Loss: 10.11478042602539 Tokens per Sec: 18847.73632798745
Epoch Step: 400 / 730 Loss: 10.342206001281738 Tokens per Sec: 16772.990866175725
Epoch Step: 405 / 730 Loss: 57.19921875 Tokens per Sec: 16971.32265981109
Epoch Step: 410 / 730 Loss: 20.125511169433594 Tokens per Sec: 19838.816523740177
Epoch Step: 415 / 730 Loss: 5.48690938949585 Tokens per Sec: 15349.897771324544
Epoch Step: 420 / 730 Loss: 13.676119804382324 Tokens per Sec: 17901.30884736612
Epoch Step: 425 / 730 Loss: 15.146931648254395 Tokens per Sec: 17879.41479260779
Epoch Step: 430 / 730 Loss: 6.727660179138184 Tokens per Sec: 18615.95708228399
Epoch Step: 435 / 730 Loss: 21.479568481445312 Tokens per Sec: 15476.066590807015
Epoch Step: 440 / 730 Loss: 8.181683540344238 Tokens per Sec: 14154.576566591573
Epoch Step: 445 / 730 Loss: 11.03610610961914 Tokens per Sec: 17288.325202330867
Epoch Step: 450 / 730 Loss: 11.38611888885498 Tokens per Sec: 15430.07703285119
Epoch Step: 455 / 730 Loss: 6.692187786102295 Tokens per Sec: 16320.47020582451
Epoch Step: 460 / 730 Loss: 14.907012939453125 Tokens per Sec: 20699.393024121415
Epoch Step: 465 / 730 Loss: 6.144198894500732 Tokens per Sec: 17899.56920679243
Epoch Step: 470 / 730 Loss: 8.652299880981445 Tokens per Sec: 17192.489078287534
Epoch Step: 475 / 730 Loss: 4.906361103057861 Tokens per Sec: 20242.53991401043
Epoch Step: 480 / 730 Loss: 7.415380477905273 Tokens per Sec: 18888.774197487575
Epoch Step: 485 / 730 Loss: 18.068470001220703 Tokens per Sec: 16045.0818852262
Epoch Step: 490 / 730 Loss: 13.94098949432373 Tokens per Sec: 18842.807234403608
Epoch Step: 495 / 730 Loss: 17.633291244506836 Tokens per Sec: 19915.580709578353
Epoch Step: 500 / 730 Loss: 7.492749214172363 Tokens per Sec: 18940.70039243785
Epoch Step: 505 / 730 Loss: 39.154640197753906 Tokens per Sec: 16591.613215668207
Epoch Step: 510 / 730 Loss: 20.801651000976562 Tokens per Sec: 19256.10693822256
Epoch Step: 515 / 730 Loss: 9.863548278808594 Tokens per Sec: 18245.719765768295
Epoch Step: 520 / 730 Loss: 5.072901725769043 Tokens per Sec: 17930.141099102868
Epoch Step: 525 / 730 Loss: 11.783127784729004 Tokens per Sec: 19631.12591392212
Epoch Step: 530 / 730 Loss: 11.623229026794434 Tokens per Sec: 17038.247714392168
Epoch Step: 535 / 730 Loss: 86.22557830810547 Tokens per Sec: 18793.037583522077
Epoch Step: 540 / 730 Loss: 12.027369499206543 Tokens per Sec: 17941.444390040222
Epoch Step: 545 / 730 Loss: 18.4976749420166 Tokens per Sec: 18182.31556071083
Epoch Step: 550 / 730 Loss: 21.420259475708008 Tokens per Sec: 19559.072971372545
Epoch Step: 555 / 730 Loss: 11.24534797668457 Tokens per Sec: 17467.4885124583
Epoch Step: 560 / 730 Loss: 16.347440719604492 Tokens per Sec: 19038.06219097489
Epoch Step: 565 / 730 Loss: 3.7587838172912598 Tokens per Sec: 16463.403372451638
Epoch Step: 570 / 730 Loss: 15.928465843200684 Tokens per Sec: 19543.41664591907
Epoch Step: 575 / 730 Loss: 11.14786148071289 Tokens per Sec: 16328.209279226414
Epoch Step: 580 / 730 Loss: 16.030563354492188 Tokens per Sec: 18768.54433539077
Epoch Step: 585 / 730 Loss: 14.80102825164795 Tokens per Sec: 14090.154467154154
Epoch Step: 590 / 730 Loss: 8.368606567382812 Tokens per Sec: 18040.464140862863
Epoch Step: 595 / 730 Loss: 5.7247724533081055 Tokens per Sec: 14973.117283011154
Epoch Step: 600 / 730 Loss: 18.641904830932617 Tokens per Sec: 18101.29473831032
Epoch Step: 605 / 730 Loss: 18.78052520751953 Tokens per Sec: 20545.967320332104
Epoch Step: 610 / 730 Loss: 19.704713821411133 Tokens per Sec: 17596.73142978243
Epoch Step: 615 / 730 Loss: 5.247992515563965 Tokens per Sec: 18860.485269533372
Epoch Step: 620 / 730 Loss: 17.53296661376953 Tokens per Sec: 18290.86956333816
Epoch Step: 625 / 730 Loss: 8.547205924987793 Tokens per Sec: 17601.220337571875
Epoch Step: 630 / 730 Loss: 10.509414672851562 Tokens per Sec: 16303.087474911104
Epoch Step: 635 / 730 Loss: 15.823436737060547 Tokens per Sec: 18141.24456205546
Epoch Step: 640 / 730 Loss: 9.435443878173828 Tokens per Sec: 16287.031949575701
Epoch Step: 645 / 730 Loss: 14.25367546081543 Tokens per Sec: 18146.200602014516
Epoch Step: 650 / 730 Loss: 14.676607131958008 Tokens per Sec: 15651.661502846238
Epoch Step: 655 / 730 Loss: 20.14386558532715 Tokens per Sec: 19721.132891860558
Epoch Step: 660 / 730 Loss: 7.765563488006592 Tokens per Sec: 17943.06086024763
Epoch Step: 665 / 730 Loss: 4.29601526260376 Tokens per Sec: 16447.99772119472
Epoch Step: 670 / 730 Loss: 36.851253509521484 Tokens per Sec: 19269.49159880111
Epoch Step: 675 / 730 Loss: 11.404311180114746 Tokens per Sec: 13932.579272650986
Epoch Step: 680 / 730 Loss: 11.102973937988281 Tokens per Sec: 18093.127070386134
Epoch Step: 685 / 730 Loss: 13.147689819335938 Tokens per Sec: 14429.85007594229
Epoch Step: 690 / 730 Loss: 5.6495890617370605 Tokens per Sec: 17965.05694100813
Epoch Step: 695 / 730 Loss: 14.037415504455566 Tokens per Sec: 18545.583580743118
Epoch Step: 700 / 730 Loss: 16.52828025817871 Tokens per Sec: 20297.33572269725
Epoch Step: 705 / 730 Loss: 15.706936836242676 Tokens per Sec: 15071.285382823546
Epoch Step: 710 / 730 Loss: 14.592118263244629 Tokens per Sec: 17594.461399038577
Epoch Step: 715 / 730 Loss: 9.463509559631348 Tokens per Sec: 15103.513239705684
Epoch Step: 720 / 730 Loss: 9.528087615966797 Tokens per Sec: 12726.0595660213
Epoch Step: 725 / 730 Loss: 61.681941986083984 Tokens per Sec: 16805.245881810417
Epoch Step: 730 / 730 Loss: 10.057482719421387 Tokens per Sec: 14201.384425641381
Epoch ended with duration 0:01:19.760515
Train perplexity: 1.781759780578116
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return TYPE_2 > METHOD_1 ( VAR_1 , VAR_1 , java.lang.String > VAR_2 ) , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.297721
Validation perplexity: 1.6725802311626972
Epoch 9 / 1000
Epoch Step: 5 / 730 Loss: 18.919960021972656 Tokens per Sec: 15167.459545222015
Epoch Step: 10 / 730 Loss: 12.137096405029297 Tokens per Sec: 13974.8531103706
Epoch Step: 15 / 730 Loss: 8.473960876464844 Tokens per Sec: 17308.73044925595
Epoch Step: 20 / 730 Loss: 8.331659317016602 Tokens per Sec: 17361.07506275042
Epoch Step: 25 / 730 Loss: 10.475004196166992 Tokens per Sec: 16455.03556490101
Epoch Step: 30 / 730 Loss: 18.300357818603516 Tokens per Sec: 14633.147627284598
Epoch Step: 35 / 730 Loss: 5.617565155029297 Tokens per Sec: 19110.988980893755
Epoch Step: 40 / 730 Loss: 14.717073440551758 Tokens per Sec: 18097.682414564828
Epoch Step: 45 / 730 Loss: 8.093390464782715 Tokens per Sec: 18749.96145535347
Epoch Step: 50 / 730 Loss: 37.83197021484375 Tokens per Sec: 17401.407541388107
Epoch Step: 55 / 730 Loss: 16.922161102294922 Tokens per Sec: 17464.926110483397
Epoch Step: 60 / 730 Loss: 11.089789390563965 Tokens per Sec: 15759.003287831853
Epoch Step: 65 / 730 Loss: 20.271011352539062 Tokens per Sec: 19595.511645482653
Epoch Step: 70 / 730 Loss: 112.46409606933594 Tokens per Sec: 19299.89728278374
Epoch Step: 75 / 730 Loss: 6.89284086227417 Tokens per Sec: 16451.033595336005
Epoch Step: 80 / 730 Loss: 13.812187194824219 Tokens per Sec: 18020.68048340824
Epoch Step: 85 / 730 Loss: 14.595367431640625 Tokens per Sec: 18068.75872374948
Epoch Step: 90 / 730 Loss: 16.294389724731445 Tokens per Sec: 18269.051009769606
Epoch Step: 95 / 730 Loss: 14.092000007629395 Tokens per Sec: 21215.621874992656
Epoch Step: 100 / 730 Loss: 16.21120262145996 Tokens per Sec: 17563.22020185588
Epoch Step: 105 / 730 Loss: 16.55544090270996 Tokens per Sec: 20404.701603786703
Epoch Step: 110 / 730 Loss: 3.771314859390259 Tokens per Sec: 18017.10553244209
Epoch Step: 115 / 730 Loss: 12.813243865966797 Tokens per Sec: 21544.690969708165
Epoch Step: 120 / 730 Loss: 6.070465087890625 Tokens per Sec: 15387.313436780536
Epoch Step: 125 / 730 Loss: 6.5302534103393555 Tokens per Sec: 18480.250578176714
Epoch Step: 130 / 730 Loss: 11.925817489624023 Tokens per Sec: 15761.524660153236
Epoch Step: 135 / 730 Loss: 20.16187858581543 Tokens per Sec: 19894.611933437827
Epoch Step: 140 / 730 Loss: 7.80952787399292 Tokens per Sec: 17732.472011364614
Epoch Step: 145 / 730 Loss: 11.53639030456543 Tokens per Sec: 21493.653473827373
Epoch Step: 150 / 730 Loss: 14.162881851196289 Tokens per Sec: 15788.68012171142
Epoch Step: 155 / 730 Loss: 9.923401832580566 Tokens per Sec: 17958.713844293467
Epoch Step: 160 / 730 Loss: 13.724064826965332 Tokens per Sec: 16192.338952800357
Epoch Step: 165 / 730 Loss: 8.770819664001465 Tokens per Sec: 15911.312417969018
Epoch Step: 170 / 730 Loss: 10.687824249267578 Tokens per Sec: 14411.832170728214
Epoch Step: 175 / 730 Loss: 10.381065368652344 Tokens per Sec: 17669.741694744604
Epoch Step: 180 / 730 Loss: 7.352212429046631 Tokens per Sec: 17217.94688038413
Epoch Step: 185 / 730 Loss: 51.96638488769531 Tokens per Sec: 17770.733892694792
Epoch Step: 190 / 730 Loss: 79.5345687866211 Tokens per Sec: 18339.121982666762
Epoch Step: 195 / 730 Loss: 13.993330001831055 Tokens per Sec: 17740.869685352227
Epoch Step: 200 / 730 Loss: 57.40644073486328 Tokens per Sec: 16921.358780055114
Epoch Step: 205 / 730 Loss: 8.408867835998535 Tokens per Sec: 18037.303431761156
Epoch Step: 210 / 730 Loss: 59.666015625 Tokens per Sec: 19098.290774550547
Epoch Step: 215 / 730 Loss: 15.712981224060059 Tokens per Sec: 18718.08429998891
Epoch Step: 220 / 730 Loss: 5.702883243560791 Tokens per Sec: 16930.968628408304
Epoch Step: 225 / 730 Loss: 5.962664604187012 Tokens per Sec: 16795.36831664152
Epoch Step: 230 / 730 Loss: 61.84912109375 Tokens per Sec: 17613.01383615936
Epoch Step: 235 / 730 Loss: 15.792281150817871 Tokens per Sec: 14789.005651176643
Epoch Step: 240 / 730 Loss: 14.572563171386719 Tokens per Sec: 18070.15119859593
Epoch Step: 245 / 730 Loss: 14.483857154846191 Tokens per Sec: 17808.590913569904
Epoch Step: 250 / 730 Loss: 15.138886451721191 Tokens per Sec: 16470.85394502591
Epoch Step: 255 / 730 Loss: 18.285118103027344 Tokens per Sec: 16021.42176749561
Epoch Step: 260 / 730 Loss: 13.744998931884766 Tokens per Sec: 19765.28045823007
Epoch Step: 265 / 730 Loss: 6.870343208312988 Tokens per Sec: 18521.935741944173
Epoch Step: 270 / 730 Loss: 20.450096130371094 Tokens per Sec: 13067.663598032614
Epoch Step: 275 / 730 Loss: 32.443199157714844 Tokens per Sec: 19410.065971212807
Epoch Step: 280 / 730 Loss: 8.713041305541992 Tokens per Sec: 19120.176006975646
Epoch Step: 285 / 730 Loss: 12.120750427246094 Tokens per Sec: 20103.447832223577
Epoch Step: 290 / 730 Loss: 6.613580226898193 Tokens per Sec: 21211.622016499725
Epoch Step: 295 / 730 Loss: 16.154634475708008 Tokens per Sec: 16890.491843853295
Epoch Step: 300 / 730 Loss: 13.127056121826172 Tokens per Sec: 18354.20172139535
Epoch Step: 305 / 730 Loss: 10.296041488647461 Tokens per Sec: 15843.076870700928
Epoch Step: 310 / 730 Loss: 27.634931564331055 Tokens per Sec: 15547.053637953682
Epoch Step: 315 / 730 Loss: 20.361337661743164 Tokens per Sec: 21686.937187148356
Epoch Step: 320 / 730 Loss: 15.079877853393555 Tokens per Sec: 19990.17583854832
Epoch Step: 325 / 730 Loss: 7.365662097930908 Tokens per Sec: 19445.161961094516
Epoch Step: 330 / 730 Loss: 11.55117130279541 Tokens per Sec: 15729.011858205895
Epoch Step: 335 / 730 Loss: 18.517858505249023 Tokens per Sec: 16802.547005472927
Epoch Step: 340 / 730 Loss: 8.618258476257324 Tokens per Sec: 18443.30268363635
Epoch Step: 345 / 730 Loss: 8.719616889953613 Tokens per Sec: 19007.407969969274
Epoch Step: 350 / 730 Loss: 6.740487575531006 Tokens per Sec: 20731.174462295254
Epoch Step: 355 / 730 Loss: 4.892918109893799 Tokens per Sec: 16007.795682817317
Epoch Step: 360 / 730 Loss: 56.314247131347656 Tokens per Sec: 17696.597477493717
Epoch Step: 365 / 730 Loss: 18.95253562927246 Tokens per Sec: 15536.015330209222
Epoch Step: 370 / 730 Loss: 5.224540710449219 Tokens per Sec: 14339.553021886697
Epoch Step: 375 / 730 Loss: 14.764037132263184 Tokens per Sec: 19719.437463035385
Epoch Step: 380 / 730 Loss: 9.87020492553711 Tokens per Sec: 17996.24067801166
Epoch Step: 385 / 730 Loss: 14.112687110900879 Tokens per Sec: 17336.320494833068
Epoch Step: 390 / 730 Loss: 5.786164283752441 Tokens per Sec: 16982.056268655386
Epoch Step: 395 / 730 Loss: 6.13845682144165 Tokens per Sec: 17818.674556762657
Epoch Step: 400 / 730 Loss: 17.164575576782227 Tokens per Sec: 18329.36953514038
Epoch Step: 405 / 730 Loss: 9.776735305786133 Tokens per Sec: 17144.969998813976
Epoch Step: 410 / 730 Loss: 6.002377510070801 Tokens per Sec: 19089.31192823965
Epoch Step: 415 / 730 Loss: 18.173093795776367 Tokens per Sec: 19352.690130852796
Epoch Step: 420 / 730 Loss: 7.690021514892578 Tokens per Sec: 17277.7659737901
Epoch Step: 425 / 730 Loss: 5.650187969207764 Tokens per Sec: 16256.992248062015
Epoch Step: 430 / 730 Loss: 12.221628189086914 Tokens per Sec: 14111.902977091197
Epoch Step: 435 / 730 Loss: 65.28770446777344 Tokens per Sec: 16711.931408723885
Epoch Step: 440 / 730 Loss: 14.156752586364746 Tokens per Sec: 17749.32243374209
Epoch Step: 445 / 730 Loss: 18.486698150634766 Tokens per Sec: 18921.180074755892
Epoch Step: 450 / 730 Loss: 10.893421173095703 Tokens per Sec: 19337.645655785214
Epoch Step: 455 / 730 Loss: 6.412656307220459 Tokens per Sec: 18631.651102578064
Epoch Step: 460 / 730 Loss: 33.974388122558594 Tokens per Sec: 17363.569345616976
Epoch Step: 465 / 730 Loss: 12.283866882324219 Tokens per Sec: 17011.020356149205
Epoch Step: 470 / 730 Loss: 8.757621765136719 Tokens per Sec: 19602.800062774084
Epoch Step: 475 / 730 Loss: 8.36257553100586 Tokens per Sec: 21165.39003385356
Epoch Step: 480 / 730 Loss: 20.314584732055664 Tokens per Sec: 19293.780918998895
Epoch Step: 485 / 730 Loss: 5.213200569152832 Tokens per Sec: 18477.329687009707
Epoch Step: 490 / 730 Loss: 14.503204345703125 Tokens per Sec: 13377.93802343459
Epoch Step: 495 / 730 Loss: 12.358059883117676 Tokens per Sec: 16043.178753916724
Epoch Step: 500 / 730 Loss: 52.44056701660156 Tokens per Sec: 17798.609827139888
Epoch Step: 505 / 730 Loss: 13.791206359863281 Tokens per Sec: 19481.733625098783
Epoch Step: 510 / 730 Loss: 17.265071868896484 Tokens per Sec: 19955.219040294385
Epoch Step: 515 / 730 Loss: 7.596110820770264 Tokens per Sec: 17680.63684381788
Epoch Step: 520 / 730 Loss: 6.029857635498047 Tokens per Sec: 18080.220721983547
Epoch Step: 525 / 730 Loss: 57.2009162902832 Tokens per Sec: 19162.3183345953
Epoch Step: 530 / 730 Loss: 17.3381404876709 Tokens per Sec: 18025.222446211927
Epoch Step: 535 / 730 Loss: 17.43349838256836 Tokens per Sec: 19865.476082069225
Epoch Step: 540 / 730 Loss: 18.163637161254883 Tokens per Sec: 19109.144375501037
Epoch Step: 545 / 730 Loss: 10.28762149810791 Tokens per Sec: 15932.313297161447
Epoch Step: 550 / 730 Loss: 4.9381937980651855 Tokens per Sec: 15239.531239801232
Epoch Step: 555 / 730 Loss: 17.00902557373047 Tokens per Sec: 17796.532995061418
Epoch Step: 560 / 730 Loss: 15.442420959472656 Tokens per Sec: 15703.750054551449
Epoch Step: 565 / 730 Loss: 7.2517900466918945 Tokens per Sec: 14566.491344402219
Epoch Step: 570 / 730 Loss: 10.706456184387207 Tokens per Sec: 16167.883533553817
Epoch Step: 575 / 730 Loss: 11.204063415527344 Tokens per Sec: 15831.834418116734
Epoch Step: 580 / 730 Loss: 9.695919036865234 Tokens per Sec: 18502.257310849127
Epoch Step: 585 / 730 Loss: 5.993896961212158 Tokens per Sec: 17337.21226802139
Epoch Step: 590 / 730 Loss: 13.815293312072754 Tokens per Sec: 20153.126705307845
Epoch Step: 595 / 730 Loss: 14.926301002502441 Tokens per Sec: 17365.245133130255
Epoch Step: 600 / 730 Loss: 11.679069519042969 Tokens per Sec: 16735.55001657366
Epoch Step: 605 / 730 Loss: 19.597009658813477 Tokens per Sec: 18235.695698737876
Epoch Step: 610 / 730 Loss: 15.61130428314209 Tokens per Sec: 16864.471579479345
Epoch Step: 615 / 730 Loss: 10.063776969909668 Tokens per Sec: 19383.760263288183
Epoch Step: 620 / 730 Loss: 13.709504127502441 Tokens per Sec: 15890.745872074325
Epoch Step: 625 / 730 Loss: 10.76274299621582 Tokens per Sec: 17495.66327137373
Epoch Step: 630 / 730 Loss: 11.841917991638184 Tokens per Sec: 17472.439534818626
Epoch Step: 635 / 730 Loss: 17.360857009887695 Tokens per Sec: 18660.886845243105
Epoch Step: 640 / 730 Loss: 5.026163101196289 Tokens per Sec: 18409.476613223796
Epoch Step: 645 / 730 Loss: 15.894453048706055 Tokens per Sec: 16199.328899700773
Epoch Step: 650 / 730 Loss: 18.306610107421875 Tokens per Sec: 18764.486523403815
Epoch Step: 655 / 730 Loss: 15.161378860473633 Tokens per Sec: 17249.384266089055
Epoch Step: 660 / 730 Loss: 5.264209747314453 Tokens per Sec: 17143.949554986368
Epoch Step: 665 / 730 Loss: 19.385276794433594 Tokens per Sec: 18635.404893880295
Epoch Step: 670 / 730 Loss: 27.718690872192383 Tokens per Sec: 17810.40514757747
Epoch Step: 675 / 730 Loss: 7.682249546051025 Tokens per Sec: 17637.62953566472
Epoch Step: 680 / 730 Loss: 51.1663932800293 Tokens per Sec: 17610.770949376354
Epoch Step: 685 / 730 Loss: 9.532508850097656 Tokens per Sec: 21601.850375311922
Epoch Step: 690 / 730 Loss: 16.06304359436035 Tokens per Sec: 15254.626847838499
Epoch Step: 695 / 730 Loss: 14.260546684265137 Tokens per Sec: 18613.849360115186
Epoch Step: 700 / 730 Loss: 21.200347900390625 Tokens per Sec: 17332.92987400321
Epoch Step: 705 / 730 Loss: 8.546369552612305 Tokens per Sec: 14356.595350707456
Epoch Step: 710 / 730 Loss: 10.23020076751709 Tokens per Sec: 14551.504329039175
Epoch Step: 715 / 730 Loss: 17.244218826293945 Tokens per Sec: 16494.2679771416
Epoch Step: 720 / 730 Loss: 11.230830192565918 Tokens per Sec: 15449.031257050034
Epoch Step: 725 / 730 Loss: 47.29328155517578 Tokens per Sec: 14759.353818267522
Epoch Step: 730 / 730 Loss: 67.54305267333984 Tokens per Sec: 16689.00445027831
Epoch ended with duration 0:01:19.632645
Train perplexity: 1.7406729959425098
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( final TYPE_3 , java.lang.String , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 , TYPE_3 > ( VAR_2 , VAR_2 ) ) ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.276238
Validation perplexity: 1.5100249468993547
Model saved best_on_validation!
Epoch 10 / 1000
Epoch Step: 5 / 730 Loss: 9.022504806518555 Tokens per Sec: 13532.42092496364
Epoch Step: 10 / 730 Loss: 4.619362831115723 Tokens per Sec: 16653.462681567245
Epoch Step: 15 / 730 Loss: 11.740549087524414 Tokens per Sec: 15402.505758170371
Epoch Step: 20 / 730 Loss: 5.77360725402832 Tokens per Sec: 15856.98697636571
Epoch Step: 25 / 730 Loss: 14.765684127807617 Tokens per Sec: 16316.697391683589
Epoch Step: 30 / 730 Loss: 46.673362731933594 Tokens per Sec: 16834.08809545183
Epoch Step: 35 / 730 Loss: 17.18989372253418 Tokens per Sec: 17593.291574219635
Epoch Step: 40 / 730 Loss: 11.803728103637695 Tokens per Sec: 17660.0741486791
Epoch Step: 45 / 730 Loss: 15.976306915283203 Tokens per Sec: 19353.931460900574
Epoch Step: 50 / 730 Loss: 7.358615875244141 Tokens per Sec: 19843.366490440167
Epoch Step: 55 / 730 Loss: 8.834007263183594 Tokens per Sec: 19386.288414207633
Epoch Step: 60 / 730 Loss: 17.832988739013672 Tokens per Sec: 19939.289986749027
Epoch Step: 65 / 730 Loss: 48.711673736572266 Tokens per Sec: 19625.08357629917
Epoch Step: 70 / 730 Loss: 6.330663204193115 Tokens per Sec: 19607.500800684065
Epoch Step: 75 / 730 Loss: 13.152070999145508 Tokens per Sec: 18612.311395013538
Epoch Step: 80 / 730 Loss: 6.635461807250977 Tokens per Sec: 19065.999452593278
Epoch Step: 85 / 730 Loss: 9.236186981201172 Tokens per Sec: 16978.831271525654
Epoch Step: 90 / 730 Loss: 13.747838973999023 Tokens per Sec: 19951.068796480155
Epoch Step: 95 / 730 Loss: 10.389093399047852 Tokens per Sec: 16221.298366497516
Epoch Step: 100 / 730 Loss: 8.75199031829834 Tokens per Sec: 15830.664553187942
Epoch Step: 105 / 730 Loss: 15.264816284179688 Tokens per Sec: 16220.569553044472
Epoch Step: 110 / 730 Loss: 13.988748550415039 Tokens per Sec: 20126.729428850133
Epoch Step: 115 / 730 Loss: 14.165283203125 Tokens per Sec: 18753.056647180594
Epoch Step: 120 / 730 Loss: 15.848993301391602 Tokens per Sec: 17674.63425021409
Epoch Step: 125 / 730 Loss: 4.632225036621094 Tokens per Sec: 15220.861599945336
Epoch Step: 130 / 730 Loss: 16.618133544921875 Tokens per Sec: 16772.23780535864
Epoch Step: 135 / 730 Loss: 12.78240966796875 Tokens per Sec: 16998.925725294313
Epoch Step: 140 / 730 Loss: 14.160130500793457 Tokens per Sec: 21231.765432893695
Epoch Step: 145 / 730 Loss: 5.262268543243408 Tokens per Sec: 19353.050702756467
Epoch Step: 150 / 730 Loss: 11.61652946472168 Tokens per Sec: 19922.0826758666
Epoch Step: 155 / 730 Loss: 13.298645973205566 Tokens per Sec: 15462.52784982684
Epoch Step: 160 / 730 Loss: 16.60280990600586 Tokens per Sec: 16074.057733478267
Epoch Step: 165 / 730 Loss: 18.97325897216797 Tokens per Sec: 19747.183351768956
Epoch Step: 170 / 730 Loss: 14.459836959838867 Tokens per Sec: 16225.389717597225
Epoch Step: 175 / 730 Loss: 11.001853942871094 Tokens per Sec: 16013.14461928491
Epoch Step: 180 / 730 Loss: 13.706645965576172 Tokens per Sec: 18819.76089052742
Epoch Step: 185 / 730 Loss: 7.063173294067383 Tokens per Sec: 16816.610310568165
Epoch Step: 190 / 730 Loss: 45.07636642456055 Tokens per Sec: 16575.31562260298
Epoch Step: 195 / 730 Loss: 5.576426982879639 Tokens per Sec: 16059.265058228242
Epoch Step: 200 / 730 Loss: 7.180166721343994 Tokens per Sec: 17450.95306373308
Epoch Step: 205 / 730 Loss: 14.873435974121094 Tokens per Sec: 19475.366068133146
Epoch Step: 210 / 730 Loss: 13.065129280090332 Tokens per Sec: 19674.392915418783
Epoch Step: 215 / 730 Loss: 10.397808074951172 Tokens per Sec: 17190.47452248481
Epoch Step: 220 / 730 Loss: 10.442888259887695 Tokens per Sec: 21601.006334804584
Epoch Step: 225 / 730 Loss: 6.99987268447876 Tokens per Sec: 14521.942775009336
Epoch Step: 230 / 730 Loss: 14.614951133728027 Tokens per Sec: 17285.224498231903
Epoch Step: 235 / 730 Loss: 6.225346088409424 Tokens per Sec: 17102.477623837054
Epoch Step: 240 / 730 Loss: 6.003808975219727 Tokens per Sec: 16078.167995575523
Epoch Step: 245 / 730 Loss: 5.557674884796143 Tokens per Sec: 16549.33235506598
Epoch Step: 250 / 730 Loss: 7.180296421051025 Tokens per Sec: 15017.22829367415
Epoch Step: 255 / 730 Loss: 8.710960388183594 Tokens per Sec: 16686.258263600615
Epoch Step: 260 / 730 Loss: 14.032851219177246 Tokens per Sec: 19412.577071176576
Epoch Step: 265 / 730 Loss: 11.510863304138184 Tokens per Sec: 19459.54323872991
Epoch Step: 270 / 730 Loss: 3.388894557952881 Tokens per Sec: 18801.385314179064
Epoch Step: 275 / 730 Loss: 16.727981567382812 Tokens per Sec: 17929.545807873707
Epoch Step: 280 / 730 Loss: 11.609169960021973 Tokens per Sec: 20560.85150993608
Epoch Step: 285 / 730 Loss: 9.644643783569336 Tokens per Sec: 17171.27929881065
Epoch Step: 290 / 730 Loss: 7.303574562072754 Tokens per Sec: 15217.281106443426
Epoch Step: 295 / 730 Loss: 9.509374618530273 Tokens per Sec: 15573.416291341835
Epoch Step: 300 / 730 Loss: 25.472089767456055 Tokens per Sec: 18527.76610920504
Epoch Step: 305 / 730 Loss: 10.475478172302246 Tokens per Sec: 18219.41371626591
Epoch Step: 310 / 730 Loss: 8.39122486114502 Tokens per Sec: 17375.872261575212
Epoch Step: 315 / 730 Loss: 14.742648124694824 Tokens per Sec: 19180.096043176352
Epoch Step: 320 / 730 Loss: 7.657694339752197 Tokens per Sec: 21576.8766894052
Epoch Step: 325 / 730 Loss: 16.84619903564453 Tokens per Sec: 15801.219252416022
Epoch Step: 330 / 730 Loss: 11.490643501281738 Tokens per Sec: 17640.065746552416
Epoch Step: 335 / 730 Loss: 13.054435729980469 Tokens per Sec: 15315.632955436053
Epoch Step: 340 / 730 Loss: 5.11243200302124 Tokens per Sec: 15546.940631716854
Epoch Step: 345 / 730 Loss: 12.660161972045898 Tokens per Sec: 16896.364273992353
Epoch Step: 350 / 730 Loss: 4.716624736785889 Tokens per Sec: 19730.780721500723
Epoch Step: 355 / 730 Loss: 7.038125038146973 Tokens per Sec: 16138.328270231985
Epoch Step: 360 / 730 Loss: 6.544949054718018 Tokens per Sec: 17922.486552460516
Epoch Step: 365 / 730 Loss: 12.43954849243164 Tokens per Sec: 16914.80718380036
Epoch Step: 370 / 730 Loss: 12.458447456359863 Tokens per Sec: 14563.115246304802
Epoch Step: 375 / 730 Loss: 11.884078025817871 Tokens per Sec: 18021.76598503789
Epoch Step: 380 / 730 Loss: 64.38299560546875 Tokens per Sec: 16856.27454070875
Epoch Step: 385 / 730 Loss: 75.2656021118164 Tokens per Sec: 16164.784295244435
Epoch Step: 390 / 730 Loss: 5.235671520233154 Tokens per Sec: 18593.806596307888
Epoch Step: 395 / 730 Loss: 12.018600463867188 Tokens per Sec: 20169.317173246636
Epoch Step: 400 / 730 Loss: 9.00153923034668 Tokens per Sec: 21458.589744224628
Epoch Step: 405 / 730 Loss: 11.79928207397461 Tokens per Sec: 10963.477147017877
Epoch Step: 410 / 730 Loss: 12.663671493530273 Tokens per Sec: 17478.48224386944
Epoch Step: 415 / 730 Loss: 5.427443981170654 Tokens per Sec: 18949.287110353325
Epoch Step: 420 / 730 Loss: 10.542645454406738 Tokens per Sec: 20649.451206713107
Epoch Step: 425 / 730 Loss: 16.439571380615234 Tokens per Sec: 16878.56742247792
Epoch Step: 430 / 730 Loss: 8.222286224365234 Tokens per Sec: 16730.01543820192
Epoch Step: 435 / 730 Loss: 4.693530082702637 Tokens per Sec: 13921.856777941768
Epoch Step: 440 / 730 Loss: 4.4055023193359375 Tokens per Sec: 15408.054731679264
Epoch Step: 445 / 730 Loss: 12.006855010986328 Tokens per Sec: 18249.537835722902
Epoch Step: 450 / 730 Loss: 9.773364067077637 Tokens per Sec: 17635.700903437133
Epoch Step: 455 / 730 Loss: 5.469223499298096 Tokens per Sec: 19286.066480377027
Epoch Step: 460 / 730 Loss: 8.479582786560059 Tokens per Sec: 18504.17678555207
Epoch Step: 465 / 730 Loss: 11.352410316467285 Tokens per Sec: 17740.788592609697
Epoch Step: 470 / 730 Loss: 5.981579780578613 Tokens per Sec: 19762.901936874696
Epoch Step: 475 / 730 Loss: 17.18065643310547 Tokens per Sec: 17472.234372725397
Epoch Step: 480 / 730 Loss: 17.059240341186523 Tokens per Sec: 19394.962561124197
Epoch Step: 485 / 730 Loss: 12.120890617370605 Tokens per Sec: 19774.68059401772
Epoch Step: 490 / 730 Loss: 4.006181240081787 Tokens per Sec: 17871.29418890103
Epoch Step: 495 / 730 Loss: 76.21151733398438 Tokens per Sec: 17848.072454190347
Epoch Step: 500 / 730 Loss: 10.37624740600586 Tokens per Sec: 18565.83216796352
Epoch Step: 505 / 730 Loss: 16.16600799560547 Tokens per Sec: 19249.004243481675
Epoch Step: 510 / 730 Loss: 10.050264358520508 Tokens per Sec: 17776.8242006455
Epoch Step: 515 / 730 Loss: 6.750143527984619 Tokens per Sec: 17781.10899403193
Epoch Step: 520 / 730 Loss: 15.531728744506836 Tokens per Sec: 19171.51384537907
Epoch Step: 525 / 730 Loss: 19.337663650512695 Tokens per Sec: 19875.15311490046
Epoch Step: 530 / 730 Loss: 11.145285606384277 Tokens per Sec: 18525.76362113459
Epoch Step: 535 / 730 Loss: 53.232269287109375 Tokens per Sec: 19198.728799578985
Epoch Step: 540 / 730 Loss: 5.2303147315979 Tokens per Sec: 16495.093244797252
Epoch Step: 545 / 730 Loss: 14.727326393127441 Tokens per Sec: 20733.824247328008
Epoch Step: 550 / 730 Loss: 17.221309661865234 Tokens per Sec: 18950.539386994245
Epoch Step: 555 / 730 Loss: 84.15220642089844 Tokens per Sec: 17318.05992109614
Epoch Step: 560 / 730 Loss: 8.459099769592285 Tokens per Sec: 15030.668989827896
Epoch Step: 565 / 730 Loss: 13.440570831298828 Tokens per Sec: 14439.881461543639
Epoch Step: 570 / 730 Loss: 14.601219177246094 Tokens per Sec: 16354.075968833395
Epoch Step: 575 / 730 Loss: 12.75067138671875 Tokens per Sec: 18128.477626873362
Epoch Step: 580 / 730 Loss: 6.849978923797607 Tokens per Sec: 16901.160454559464
Epoch Step: 585 / 730 Loss: 4.189741611480713 Tokens per Sec: 17979.543259596754
Epoch Step: 590 / 730 Loss: 6.99390172958374 Tokens per Sec: 15883.549838592506
Epoch Step: 595 / 730 Loss: 4.182301044464111 Tokens per Sec: 20169.96332348832
Epoch Step: 600 / 730 Loss: 9.18988037109375 Tokens per Sec: 18883.35676569922
Epoch Step: 605 / 730 Loss: 14.610844612121582 Tokens per Sec: 16433.228511783374
Epoch Step: 610 / 730 Loss: 11.177947044372559 Tokens per Sec: 19142.728347354634
Epoch Step: 615 / 730 Loss: 68.01880645751953 Tokens per Sec: 19126.29335403625
Epoch Step: 620 / 730 Loss: 19.494993209838867 Tokens per Sec: 16353.09044603194
Epoch Step: 625 / 730 Loss: 12.12646198272705 Tokens per Sec: 14647.874552767205
Epoch Step: 630 / 730 Loss: 13.068520545959473 Tokens per Sec: 18240.262146355002
Epoch Step: 635 / 730 Loss: 9.641101837158203 Tokens per Sec: 19142.72095326033
Epoch Step: 640 / 730 Loss: 52.571876525878906 Tokens per Sec: 20084.599197646938
Epoch Step: 645 / 730 Loss: 14.699231147766113 Tokens per Sec: 19684.72209005149
Epoch Step: 650 / 730 Loss: 5.636410713195801 Tokens per Sec: 20792.93338385303
Epoch Step: 655 / 730 Loss: 6.94366979598999 Tokens per Sec: 17837.301450205963
Epoch Step: 660 / 730 Loss: 9.639836311340332 Tokens per Sec: 15393.355044451757
Epoch Step: 665 / 730 Loss: 11.015626907348633 Tokens per Sec: 16114.424867385755
Epoch Step: 670 / 730 Loss: 9.308403968811035 Tokens per Sec: 19890.997127961804
Epoch Step: 675 / 730 Loss: 7.174313545227051 Tokens per Sec: 14754.356951938347
Epoch Step: 680 / 730 Loss: 8.906084060668945 Tokens per Sec: 16121.570593482911
Epoch Step: 685 / 730 Loss: 10.990303039550781 Tokens per Sec: 16148.088257126212
Epoch Step: 690 / 730 Loss: 11.092632293701172 Tokens per Sec: 19833.397572025497
Epoch Step: 695 / 730 Loss: 3.1286797523498535 Tokens per Sec: 18208.75974533157
Epoch Step: 700 / 730 Loss: 8.49237060546875 Tokens per Sec: 19559.904477977037
Epoch Step: 705 / 730 Loss: 8.405733108520508 Tokens per Sec: 15871.452474093554
Epoch Step: 710 / 730 Loss: 9.93787670135498 Tokens per Sec: 13745.656832002407
Epoch Step: 715 / 730 Loss: 10.360512733459473 Tokens per Sec: 15421.778658819021
Epoch Step: 720 / 730 Loss: 12.522181510925293 Tokens per Sec: 16158.784590221148
Epoch Step: 725 / 730 Loss: 10.26963996887207 Tokens per Sec: 14987.275486670838
Epoch Step: 730 / 730 Loss: 12.110221862792969 Tokens per Sec: 14666.897278516182
Epoch ended with duration 0:01:19.570150
Train perplexity: 1.562306825451958
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 , java.lang.String VAR_2 ) , java.lang.String > ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.314586
Validation perplexity: 1.539437253689586
Model saved checkpoint!
Epoch 11 / 1000
Epoch Step: 5 / 730 Loss: 9.342805862426758 Tokens per Sec: 16299.370357889475
Epoch Step: 10 / 730 Loss: 13.2597074508667 Tokens per Sec: 17015.599404177206
Epoch Step: 15 / 730 Loss: 5.812361717224121 Tokens per Sec: 18218.665144664334
Epoch Step: 20 / 730 Loss: 5.7002949714660645 Tokens per Sec: 17414.61813790236
Epoch Step: 25 / 730 Loss: 9.177319526672363 Tokens per Sec: 20905.960495633204
Epoch Step: 30 / 730 Loss: 3.1517152786254883 Tokens per Sec: 17399.766556196275
Epoch Step: 35 / 730 Loss: 5.317859172821045 Tokens per Sec: 20544.894314955247
Epoch Step: 40 / 730 Loss: 9.262752532958984 Tokens per Sec: 17326.386502800142
Epoch Step: 45 / 730 Loss: 7.1615309715271 Tokens per Sec: 17524.439564328768
Epoch Step: 50 / 730 Loss: 10.002345085144043 Tokens per Sec: 16210.94266727415
Epoch Step: 55 / 730 Loss: 11.459617614746094 Tokens per Sec: 16054.941559702298
Epoch Step: 60 / 730 Loss: 6.604114055633545 Tokens per Sec: 17076.94555821074
Epoch Step: 65 / 730 Loss: 10.791376113891602 Tokens per Sec: 16746.128909697567
Epoch Step: 70 / 730 Loss: 13.215058326721191 Tokens per Sec: 20000.738728138298
Epoch Step: 75 / 730 Loss: 13.401206016540527 Tokens per Sec: 19689.128358861173
Epoch Step: 80 / 730 Loss: 3.901897430419922 Tokens per Sec: 18076.635493602367
Epoch Step: 85 / 730 Loss: 18.328794479370117 Tokens per Sec: 18442.433898308016
Epoch Step: 90 / 730 Loss: 4.673404693603516 Tokens per Sec: 14646.651098670003
Epoch Step: 95 / 730 Loss: 49.87275314331055 Tokens per Sec: 12158.76082383923
Epoch Step: 100 / 730 Loss: 5.632402420043945 Tokens per Sec: 19332.404573843894
Epoch Step: 105 / 730 Loss: 9.477395057678223 Tokens per Sec: 18200.30239334101
Epoch Step: 110 / 730 Loss: 4.672740936279297 Tokens per Sec: 16588.941507231182
Epoch Step: 115 / 730 Loss: 13.877359390258789 Tokens per Sec: 16246.600296705295
Epoch Step: 120 / 730 Loss: 16.418842315673828 Tokens per Sec: 17195.3518788317
Epoch Step: 125 / 730 Loss: 3.3196218013763428 Tokens per Sec: 20862.52910397659
Epoch Step: 130 / 730 Loss: 10.832199096679688 Tokens per Sec: 16558.02238752754
Epoch Step: 135 / 730 Loss: 13.434765815734863 Tokens per Sec: 18171.242919754928
Epoch Step: 140 / 730 Loss: 11.365769386291504 Tokens per Sec: 20860.52038713032
Epoch Step: 145 / 730 Loss: 6.03032922744751 Tokens per Sec: 14838.402542092217
Epoch Step: 150 / 730 Loss: 11.820404052734375 Tokens per Sec: 17828.11091296197
Epoch Step: 155 / 730 Loss: 5.267284393310547 Tokens per Sec: 18186.734466091755
Epoch Step: 160 / 730 Loss: 13.052148818969727 Tokens per Sec: 17461.905091771183
Epoch Step: 165 / 730 Loss: 9.26968002319336 Tokens per Sec: 18269.8645752774
Epoch Step: 170 / 730 Loss: 11.937100410461426 Tokens per Sec: 18280.63139824159
Epoch Step: 175 / 730 Loss: 9.914847373962402 Tokens per Sec: 17558.71319375068
Epoch Step: 180 / 730 Loss: 8.987181663513184 Tokens per Sec: 17358.008733272152
Epoch Step: 185 / 730 Loss: 8.638348579406738 Tokens per Sec: 14363.914283910313
Epoch Step: 190 / 730 Loss: 8.812960624694824 Tokens per Sec: 15092.766196185768
Epoch Step: 195 / 730 Loss: 17.767864227294922 Tokens per Sec: 19955.36000081182
Epoch Step: 200 / 730 Loss: 4.216073036193848 Tokens per Sec: 16435.226383815974
Epoch Step: 205 / 730 Loss: 17.893617630004883 Tokens per Sec: 16243.964650901326
Epoch Step: 210 / 730 Loss: 5.493710994720459 Tokens per Sec: 17996.230075312422
Epoch Step: 215 / 730 Loss: 6.845981597900391 Tokens per Sec: 15825.12748144798
Epoch Step: 220 / 730 Loss: 7.215652942657471 Tokens per Sec: 18963.500786704844
Epoch Step: 225 / 730 Loss: 5.0561370849609375 Tokens per Sec: 16507.260157425502
Epoch Step: 230 / 730 Loss: 4.121765613555908 Tokens per Sec: 16189.960933038801
Epoch Step: 235 / 730 Loss: 12.814085006713867 Tokens per Sec: 17388.046373091383
Epoch Step: 240 / 730 Loss: 13.946187019348145 Tokens per Sec: 18230.806786582663
Epoch Step: 245 / 730 Loss: 15.784431457519531 Tokens per Sec: 17724.970835357784
Epoch Step: 250 / 730 Loss: 10.735995292663574 Tokens per Sec: 16671.40442695546
Epoch Step: 255 / 730 Loss: 52.531436920166016 Tokens per Sec: 18275.082135119166
Epoch Step: 260 / 730 Loss: 8.647302627563477 Tokens per Sec: 20296.264310495833
Epoch Step: 265 / 730 Loss: 9.937171936035156 Tokens per Sec: 19722.82622977299
Epoch Step: 270 / 730 Loss: 80.14521789550781 Tokens per Sec: 18256.99476250915
Epoch Step: 275 / 730 Loss: 14.442980766296387 Tokens per Sec: 16985.085297759553
Epoch Step: 280 / 730 Loss: 5.914867877960205 Tokens per Sec: 17604.737557320444
Epoch Step: 285 / 730 Loss: 3.1400725841522217 Tokens per Sec: 18256.265369182507
Epoch Step: 290 / 730 Loss: 5.855477809906006 Tokens per Sec: 19480.332668981682
Epoch Step: 295 / 730 Loss: 8.655708312988281 Tokens per Sec: 16168.320146069545
Epoch Step: 300 / 730 Loss: 35.120574951171875 Tokens per Sec: 16095.869266197698
Epoch Step: 305 / 730 Loss: 11.526078224182129 Tokens per Sec: 18421.180524150554
Epoch Step: 310 / 730 Loss: 18.624086380004883 Tokens per Sec: 17733.471097499565
Epoch Step: 315 / 730 Loss: 8.214170455932617 Tokens per Sec: 14585.060610154062
Epoch Step: 320 / 730 Loss: 7.501392364501953 Tokens per Sec: 18533.202088598584
Epoch Step: 325 / 730 Loss: 4.135031700134277 Tokens per Sec: 17627.510260685456
Epoch Step: 330 / 730 Loss: 11.20290470123291 Tokens per Sec: 17699.731256348572
Epoch Step: 335 / 730 Loss: 12.90631103515625 Tokens per Sec: 19030.481659840676
Epoch Step: 340 / 730 Loss: 14.706695556640625 Tokens per Sec: 15839.473607773594
Epoch Step: 345 / 730 Loss: 11.118850708007812 Tokens per Sec: 15205.770592349272
Epoch Step: 350 / 730 Loss: 6.14044189453125 Tokens per Sec: 18849.283576132508
Epoch Step: 355 / 730 Loss: 5.544892311096191 Tokens per Sec: 18324.621558840256
Epoch Step: 360 / 730 Loss: 3.907229423522949 Tokens per Sec: 13885.301972247544
Epoch Step: 365 / 730 Loss: 9.239490509033203 Tokens per Sec: 19196.112758746454
Epoch Step: 370 / 730 Loss: 5.8118462562561035 Tokens per Sec: 17127.72386191785
Epoch Step: 375 / 730 Loss: 5.258218765258789 Tokens per Sec: 19495.505848451274
Epoch Step: 380 / 730 Loss: 9.995404243469238 Tokens per Sec: 18268.908004772606
Epoch Step: 385 / 730 Loss: 9.7921781539917 Tokens per Sec: 20705.511121825715
Epoch Step: 390 / 730 Loss: 6.3040876388549805 Tokens per Sec: 17243.6448007224
Epoch Step: 395 / 730 Loss: 12.6283597946167 Tokens per Sec: 16674.114620743087
Epoch Step: 400 / 730 Loss: 11.755111694335938 Tokens per Sec: 15049.973126723205
Epoch Step: 405 / 730 Loss: 9.34704875946045 Tokens per Sec: 14517.114748121876
Epoch Step: 410 / 730 Loss: 14.889636993408203 Tokens per Sec: 17492.179635243177
Epoch Step: 415 / 730 Loss: 9.796601295471191 Tokens per Sec: 17748.88740273004
Epoch Step: 420 / 730 Loss: 13.971536636352539 Tokens per Sec: 16032.810679505797
Epoch Step: 425 / 730 Loss: 8.40095329284668 Tokens per Sec: 19118.38444389234
Epoch Step: 430 / 730 Loss: 7.1778717041015625 Tokens per Sec: 16242.715316006552
Epoch Step: 435 / 730 Loss: 7.380867004394531 Tokens per Sec: 16095.60480698848
Epoch Step: 440 / 730 Loss: 4.471615314483643 Tokens per Sec: 20003.526027562137
Epoch Step: 445 / 730 Loss: 13.59133243560791 Tokens per Sec: 19036.676172720643
Epoch Step: 450 / 730 Loss: 3.3519203662872314 Tokens per Sec: 17669.439591581275
Epoch Step: 455 / 730 Loss: 9.719663619995117 Tokens per Sec: 15925.442471015358
Epoch Step: 460 / 730 Loss: 4.463375568389893 Tokens per Sec: 16340.764930182031
Epoch Step: 465 / 730 Loss: 12.113115310668945 Tokens per Sec: 19302.31108603432
Epoch Step: 470 / 730 Loss: 3.9254558086395264 Tokens per Sec: 15588.197354758828
Epoch Step: 475 / 730 Loss: 3.2328178882598877 Tokens per Sec: 17326.573840005018
Epoch Step: 480 / 730 Loss: 9.930499076843262 Tokens per Sec: 20135.521651502742
Epoch Step: 485 / 730 Loss: 7.911280155181885 Tokens per Sec: 14665.858235913733
Epoch Step: 490 / 730 Loss: 18.59389877319336 Tokens per Sec: 20259.604151440843
Epoch Step: 495 / 730 Loss: 6.30446720123291 Tokens per Sec: 20038.539559175308
Epoch Step: 500 / 730 Loss: 5.190113067626953 Tokens per Sec: 18924.036495595145
Epoch Step: 505 / 730 Loss: 13.672627449035645 Tokens per Sec: 13360.348160720374
Epoch Step: 510 / 730 Loss: 16.506067276000977 Tokens per Sec: 18825.217935893754
Epoch Step: 515 / 730 Loss: 11.219669342041016 Tokens per Sec: 19772.092463224853
Epoch Step: 520 / 730 Loss: 7.193327903747559 Tokens per Sec: 15239.560886327541
Epoch Step: 525 / 730 Loss: 4.666300296783447 Tokens per Sec: 18607.29327891083
Epoch Step: 530 / 730 Loss: 14.61504077911377 Tokens per Sec: 19438.187705591554
Epoch Step: 535 / 730 Loss: 12.337722778320312 Tokens per Sec: 17456.025568473367
Epoch Step: 540 / 730 Loss: 8.12553882598877 Tokens per Sec: 19795.518103256923
Epoch Step: 545 / 730 Loss: 4.083260536193848 Tokens per Sec: 18071.730017300393
Epoch Step: 550 / 730 Loss: 9.64492416381836 Tokens per Sec: 14799.25741447854
Epoch Step: 555 / 730 Loss: 7.795040130615234 Tokens per Sec: 17530.29943810508
Epoch Step: 560 / 730 Loss: 9.394672393798828 Tokens per Sec: 16345.029187855105
Epoch Step: 565 / 730 Loss: 10.297121047973633 Tokens per Sec: 18275.879413314164
Epoch Step: 570 / 730 Loss: 6.915726661682129 Tokens per Sec: 18287.295043386166
Epoch Step: 575 / 730 Loss: 8.313922882080078 Tokens per Sec: 14349.788251891023
Epoch Step: 580 / 730 Loss: 12.663045883178711 Tokens per Sec: 17563.457882246545
Epoch Step: 585 / 730 Loss: 8.915182113647461 Tokens per Sec: 19398.362431337784
Epoch Step: 590 / 730 Loss: 16.432315826416016 Tokens per Sec: 17745.564567402893
Epoch Step: 595 / 730 Loss: 14.574761390686035 Tokens per Sec: 16734.837876449274
Epoch Step: 600 / 730 Loss: 8.463460922241211 Tokens per Sec: 17828.001688327622
Epoch Step: 605 / 730 Loss: 18.969594955444336 Tokens per Sec: 16956.790758800213
Epoch Step: 610 / 730 Loss: 87.79884338378906 Tokens per Sec: 17782.51847716654
Epoch Step: 615 / 730 Loss: 9.678975105285645 Tokens per Sec: 19292.202559890127
Epoch Step: 620 / 730 Loss: 15.236858367919922 Tokens per Sec: 19705.111302962407
Epoch Step: 625 / 730 Loss: 8.063982009887695 Tokens per Sec: 17647.564814522993
Epoch Step: 630 / 730 Loss: 10.93478775024414 Tokens per Sec: 18127.45217082391
Epoch Step: 635 / 730 Loss: 8.727936744689941 Tokens per Sec: 15734.729291521488
Epoch Step: 640 / 730 Loss: 9.206330299377441 Tokens per Sec: 18355.18455814782
Epoch Step: 645 / 730 Loss: 3.8827567100524902 Tokens per Sec: 15930.030102261631
Epoch Step: 650 / 730 Loss: 14.148012161254883 Tokens per Sec: 19594.319807585794
Epoch Step: 655 / 730 Loss: 100.3670883178711 Tokens per Sec: 18976.07277333561
Epoch Step: 660 / 730 Loss: 9.797065734863281 Tokens per Sec: 20193.661197534253
Epoch Step: 665 / 730 Loss: 4.097395420074463 Tokens per Sec: 15349.278898102086
Epoch Step: 670 / 730 Loss: 7.445683479309082 Tokens per Sec: 14092.202494854402
Epoch Step: 675 / 730 Loss: 11.794434547424316 Tokens per Sec: 19289.159763553413
Epoch Step: 680 / 730 Loss: 9.41158676147461 Tokens per Sec: 17560.055523109728
Epoch Step: 685 / 730 Loss: 7.4664082527160645 Tokens per Sec: 15577.825186349586
Epoch Step: 690 / 730 Loss: 7.185572624206543 Tokens per Sec: 17445.910511792037
Epoch Step: 695 / 730 Loss: 8.807446479797363 Tokens per Sec: 15619.598728194926
Epoch Step: 700 / 730 Loss: 8.414764404296875 Tokens per Sec: 18342.80519182386
Epoch Step: 705 / 730 Loss: 12.117154121398926 Tokens per Sec: 13508.454843671328
Epoch Step: 710 / 730 Loss: 19.84873390197754 Tokens per Sec: 15542.01672526838
Epoch Step: 715 / 730 Loss: 9.590139389038086 Tokens per Sec: 14737.356095330313
Epoch Step: 720 / 730 Loss: 9.04148006439209 Tokens per Sec: 13907.50477407318
Epoch Step: 725 / 730 Loss: 10.503329277038574 Tokens per Sec: 18336.690037670214
Epoch Step: 730 / 730 Loss: 9.576325416564941 Tokens per Sec: 14537.728358490951
Epoch ended with duration 0:01:20.394413
Train perplexity: 1.5734413526207172
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 , VAR_1 ) . METHOD_1 ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.302002
Validation perplexity: 1.4453722287931257
Model saved best_on_validation!
Epoch 12 / 1000
Epoch Step: 5 / 730 Loss: 12.254618644714355 Tokens per Sec: 18389.123666536132
Epoch Step: 10 / 730 Loss: 8.8093900680542 Tokens per Sec: 14433.725399750421
Epoch Step: 15 / 730 Loss: 5.607562065124512 Tokens per Sec: 17203.574273115293
Epoch Step: 20 / 730 Loss: 9.052090644836426 Tokens per Sec: 15788.598110894905
Epoch Step: 25 / 730 Loss: 5.931488513946533 Tokens per Sec: 17044.42510840039
Epoch Step: 30 / 730 Loss: 13.01242733001709 Tokens per Sec: 16836.83173637026
Epoch Step: 35 / 730 Loss: 5.806393623352051 Tokens per Sec: 19846.059581955826
Epoch Step: 40 / 730 Loss: 12.469307899475098 Tokens per Sec: 17058.17299659619
Epoch Step: 45 / 730 Loss: 12.851312637329102 Tokens per Sec: 19777.97124550879
Epoch Step: 50 / 730 Loss: 7.604620456695557 Tokens per Sec: 20622.760449869587
Epoch Step: 55 / 730 Loss: 11.596312522888184 Tokens per Sec: 21008.003364621767
Epoch Step: 60 / 730 Loss: 59.38462448120117 Tokens per Sec: 17411.14158038603
Epoch Step: 65 / 730 Loss: 8.514420509338379 Tokens per Sec: 18125.646989279965
Epoch Step: 70 / 730 Loss: 12.488493919372559 Tokens per Sec: 17953.218585519844
Epoch Step: 75 / 730 Loss: 11.61733627319336 Tokens per Sec: 16828.705338584215
Epoch Step: 80 / 730 Loss: 9.126276969909668 Tokens per Sec: 16786.0959190581
Epoch Step: 85 / 730 Loss: 6.934139251708984 Tokens per Sec: 20019.919243319488
Epoch Step: 90 / 730 Loss: 2.706608295440674 Tokens per Sec: 16230.734923000593
Epoch Step: 95 / 730 Loss: 8.685688018798828 Tokens per Sec: 19475.03883360057
Epoch Step: 100 / 730 Loss: 10.20030689239502 Tokens per Sec: 16017.252051193847
Epoch Step: 105 / 730 Loss: 10.716796875 Tokens per Sec: 20666.486026039092
Epoch Step: 110 / 730 Loss: 9.178624153137207 Tokens per Sec: 18248.10505761617
Epoch Step: 115 / 730 Loss: 6.180859565734863 Tokens per Sec: 14281.993594945903
Epoch Step: 120 / 730 Loss: 8.344223976135254 Tokens per Sec: 16382.581617835622
Epoch Step: 125 / 730 Loss: 73.60236358642578 Tokens per Sec: 19970.88355288928
Epoch Step: 130 / 730 Loss: 14.442296981811523 Tokens per Sec: 15100.845629468893
Epoch Step: 135 / 730 Loss: 13.561317443847656 Tokens per Sec: 19375.909235451698
Epoch Step: 140 / 730 Loss: 9.653417587280273 Tokens per Sec: 16765.067713114517
Epoch Step: 145 / 730 Loss: 11.808732032775879 Tokens per Sec: 15294.676866268619
Epoch Step: 150 / 730 Loss: 12.208541870117188 Tokens per Sec: 18141.59541858122
Epoch Step: 155 / 730 Loss: 13.359045028686523 Tokens per Sec: 19388.913173410543
Epoch Step: 160 / 730 Loss: 7.590903282165527 Tokens per Sec: 18606.995140349838
Epoch Step: 165 / 730 Loss: 7.939268112182617 Tokens per Sec: 16757.800872414977
Epoch Step: 170 / 730 Loss: 9.70764446258545 Tokens per Sec: 18743.749283584457
Epoch Step: 175 / 730 Loss: 6.977005481719971 Tokens per Sec: 19513.144350183575
Epoch Step: 180 / 730 Loss: 13.419798851013184 Tokens per Sec: 14087.924594490858
Epoch Step: 185 / 730 Loss: 5.432164192199707 Tokens per Sec: 18683.951683360865
Epoch Step: 190 / 730 Loss: 9.419568061828613 Tokens per Sec: 18923.614724306488
Epoch Step: 195 / 730 Loss: 8.181734085083008 Tokens per Sec: 17824.63432955888
Epoch Step: 200 / 730 Loss: 5.944749355316162 Tokens per Sec: 14417.811508285698
Epoch Step: 205 / 730 Loss: 4.657589912414551 Tokens per Sec: 13885.362166465344
Epoch Step: 210 / 730 Loss: 13.599042892456055 Tokens per Sec: 18268.708283393113
Epoch Step: 215 / 730 Loss: 9.585610389709473 Tokens per Sec: 21238.96660745939
Epoch Step: 220 / 730 Loss: 12.171282768249512 Tokens per Sec: 19173.286948160163
Epoch Step: 225 / 730 Loss: 11.054741859436035 Tokens per Sec: 17249.10651711134
Epoch Step: 230 / 730 Loss: 4.243649482727051 Tokens per Sec: 16822.088939791836
Epoch Step: 235 / 730 Loss: 5.635360240936279 Tokens per Sec: 16652.288373264088
Epoch Step: 240 / 730 Loss: 4.172821521759033 Tokens per Sec: 17403.8389972708
Epoch Step: 245 / 730 Loss: 3.6288928985595703 Tokens per Sec: 15969.276493710837
Epoch Step: 250 / 730 Loss: 7.053452014923096 Tokens per Sec: 14678.561453924727
Epoch Step: 255 / 730 Loss: 15.75317668914795 Tokens per Sec: 17231.88113559384
Epoch Step: 260 / 730 Loss: 5.56122350692749 Tokens per Sec: 17165.465527870692
Epoch Step: 265 / 730 Loss: 17.037395477294922 Tokens per Sec: 19281.326183247358
Epoch Step: 270 / 730 Loss: 7.759763717651367 Tokens per Sec: 19423.10372364751
Epoch Step: 275 / 730 Loss: 8.397610664367676 Tokens per Sec: 19147.32093836776
Epoch Step: 280 / 730 Loss: 12.526524543762207 Tokens per Sec: 15082.09642050609
Epoch Step: 285 / 730 Loss: 9.06057071685791 Tokens per Sec: 15833.068372866315
Epoch Step: 290 / 730 Loss: 6.964591026306152 Tokens per Sec: 17789.45131417915
Epoch Step: 295 / 730 Loss: 18.15973663330078 Tokens per Sec: 21213.293743384835
Epoch Step: 300 / 730 Loss: 10.809703826904297 Tokens per Sec: 18917.392054875454
Epoch Step: 305 / 730 Loss: 2.7313499450683594 Tokens per Sec: 19726.69025219561
Epoch Step: 310 / 730 Loss: 14.58269214630127 Tokens per Sec: 16883.254687334487
Epoch Step: 315 / 730 Loss: 12.045877456665039 Tokens per Sec: 17297.59361678926
Epoch Step: 320 / 730 Loss: 2.386045217514038 Tokens per Sec: 13933.29068765549
Epoch Step: 325 / 730 Loss: 7.169541358947754 Tokens per Sec: 16290.58684018673
Epoch Step: 330 / 730 Loss: 13.119757652282715 Tokens per Sec: 18425.49047814074
Epoch Step: 335 / 730 Loss: 42.537010192871094 Tokens per Sec: 15214.555178787814
Epoch Step: 340 / 730 Loss: 9.327775001525879 Tokens per Sec: 18205.765910207065
Epoch Step: 345 / 730 Loss: 17.80583381652832 Tokens per Sec: 18477.487988373516
Epoch Step: 350 / 730 Loss: 8.978232383728027 Tokens per Sec: 18403.311233433797
Epoch Step: 355 / 730 Loss: 11.434318542480469 Tokens per Sec: 13779.624404538523
Epoch Step: 360 / 730 Loss: 8.719152450561523 Tokens per Sec: 18473.85143346343
Epoch Step: 365 / 730 Loss: 11.493403434753418 Tokens per Sec: 16694.33824754888
Epoch Step: 370 / 730 Loss: 1.9277173280715942 Tokens per Sec: 17456.439269303017
Epoch Step: 375 / 730 Loss: 6.730414867401123 Tokens per Sec: 20639.61379155874
Epoch Step: 380 / 730 Loss: 5.682703971862793 Tokens per Sec: 17858.191059101482
Epoch Step: 385 / 730 Loss: 7.2936625480651855 Tokens per Sec: 17356.53007780999
Epoch Step: 390 / 730 Loss: 12.857550621032715 Tokens per Sec: 18442.059438681397
Epoch Step: 395 / 730 Loss: 8.586977005004883 Tokens per Sec: 19043.049480083075
Epoch Step: 400 / 730 Loss: 9.753442764282227 Tokens per Sec: 13964.688953480923
Epoch Step: 405 / 730 Loss: 12.219462394714355 Tokens per Sec: 18946.836806052805
Epoch Step: 410 / 730 Loss: 9.946115493774414 Tokens per Sec: 16755.64900381145
Epoch Step: 415 / 730 Loss: 12.03962516784668 Tokens per Sec: 20121.79778226515
Epoch Step: 420 / 730 Loss: 3.9919869899749756 Tokens per Sec: 20940.30325020769
Epoch Step: 425 / 730 Loss: 14.065096855163574 Tokens per Sec: 14491.904380696744
Epoch Step: 430 / 730 Loss: 8.630541801452637 Tokens per Sec: 18952.31761173929
Epoch Step: 435 / 730 Loss: 9.477806091308594 Tokens per Sec: 13926.662617314885
Epoch Step: 440 / 730 Loss: 4.624155521392822 Tokens per Sec: 19370.19098624892
Epoch Step: 445 / 730 Loss: 11.249519348144531 Tokens per Sec: 17007.324096553326
Epoch Step: 450 / 730 Loss: 4.391742706298828 Tokens per Sec: 18700.452953804564
Epoch Step: 455 / 730 Loss: 3.6691243648529053 Tokens per Sec: 19295.65968758014
Epoch Step: 460 / 730 Loss: 7.858006477355957 Tokens per Sec: 18791.803541347963
Epoch Step: 465 / 730 Loss: 10.629199028015137 Tokens per Sec: 17179.70054579807
Epoch Step: 470 / 730 Loss: 7.5446648597717285 Tokens per Sec: 17798.87880599054
Epoch Step: 475 / 730 Loss: 7.372199058532715 Tokens per Sec: 18103.58822651085
Epoch Step: 480 / 730 Loss: 4.199925899505615 Tokens per Sec: 19231.321701546305
Epoch Step: 485 / 730 Loss: 9.400738716125488 Tokens per Sec: 18013.784224043047
Epoch Step: 490 / 730 Loss: 10.856634140014648 Tokens per Sec: 15507.410941816337
Epoch Step: 495 / 730 Loss: 12.337031364440918 Tokens per Sec: 17377.64170192381
Epoch Step: 500 / 730 Loss: 12.73560619354248 Tokens per Sec: 19309.065334147464
Epoch Step: 505 / 730 Loss: 9.535755157470703 Tokens per Sec: 18428.918425730306
Epoch Step: 510 / 730 Loss: 11.687007904052734 Tokens per Sec: 18035.599581824892
Epoch Step: 515 / 730 Loss: 14.273439407348633 Tokens per Sec: 18196.86173094875
Epoch Step: 520 / 730 Loss: 82.2953872680664 Tokens per Sec: 20508.92951133022
Epoch Step: 525 / 730 Loss: 8.753737449645996 Tokens per Sec: 17905.344463400044
Epoch Step: 530 / 730 Loss: 10.046639442443848 Tokens per Sec: 17345.27902420257
Epoch Step: 535 / 730 Loss: 15.528168678283691 Tokens per Sec: 18341.290925822217
Epoch Step: 540 / 730 Loss: 7.347778797149658 Tokens per Sec: 14684.038783421993
Epoch Step: 545 / 730 Loss: 7.790550708770752 Tokens per Sec: 16152.03176519078
Epoch Step: 550 / 730 Loss: 10.798442840576172 Tokens per Sec: 18856.94943339376
Epoch Step: 555 / 730 Loss: 5.0792765617370605 Tokens per Sec: 17453.348601505186
Epoch Step: 560 / 730 Loss: 7.170923709869385 Tokens per Sec: 16913.74844225306
Epoch Step: 565 / 730 Loss: 4.503122329711914 Tokens per Sec: 14694.634738798844
Epoch Step: 570 / 730 Loss: 9.091012954711914 Tokens per Sec: 16175.23566667264
Epoch Step: 575 / 730 Loss: 12.579729080200195 Tokens per Sec: 19836.93364314943
Epoch Step: 580 / 730 Loss: 12.060091018676758 Tokens per Sec: 16971.27537876628
Epoch Step: 585 / 730 Loss: 8.538081169128418 Tokens per Sec: 19964.637348042295
Epoch Step: 590 / 730 Loss: 13.702162742614746 Tokens per Sec: 16339.559425748303
Epoch Step: 595 / 730 Loss: 3.565392017364502 Tokens per Sec: 14991.16315070032
Epoch Step: 600 / 730 Loss: 7.687443256378174 Tokens per Sec: 17998.66592906841
Epoch Step: 605 / 730 Loss: 8.761741638183594 Tokens per Sec: 16488.65504949062
Epoch Step: 610 / 730 Loss: 11.092105865478516 Tokens per Sec: 18407.87251470993
Epoch Step: 615 / 730 Loss: 32.1950798034668 Tokens per Sec: 15230.505474084383
Epoch Step: 620 / 730 Loss: 6.933874130249023 Tokens per Sec: 16669.91869420988
Epoch Step: 625 / 730 Loss: 3.4286129474639893 Tokens per Sec: 18006.658452810247
Epoch Step: 630 / 730 Loss: 13.596442222595215 Tokens per Sec: 16012.906940994202
Epoch Step: 635 / 730 Loss: 10.848044395446777 Tokens per Sec: 14733.21735995976
Epoch Step: 640 / 730 Loss: 11.504650115966797 Tokens per Sec: 19556.13157902073
Epoch Step: 645 / 730 Loss: 2.938477039337158 Tokens per Sec: 16044.755652058115
Epoch Step: 650 / 730 Loss: 5.844367027282715 Tokens per Sec: 18150.3206231129
Epoch Step: 655 / 730 Loss: 4.569906234741211 Tokens per Sec: 19070.186668759354
Epoch Step: 660 / 730 Loss: 9.973493576049805 Tokens per Sec: 18948.0837983798
Epoch Step: 665 / 730 Loss: 8.822465896606445 Tokens per Sec: 21074.984594196474
Epoch Step: 670 / 730 Loss: 11.295839309692383 Tokens per Sec: 16142.189331290832
Epoch Step: 675 / 730 Loss: 12.363913536071777 Tokens per Sec: 18032.22627247997
Epoch Step: 680 / 730 Loss: 5.132308006286621 Tokens per Sec: 21864.11396716011
Epoch Step: 685 / 730 Loss: 8.474752426147461 Tokens per Sec: 17342.141048304806
Epoch Step: 690 / 730 Loss: 9.453822135925293 Tokens per Sec: 16920.671091367654
Epoch Step: 695 / 730 Loss: 9.848082542419434 Tokens per Sec: 18273.416855498042
Epoch Step: 700 / 730 Loss: 13.864577293395996 Tokens per Sec: 18405.279261429503
Epoch Step: 705 / 730 Loss: 6.428447246551514 Tokens per Sec: 12750.460549927871
Epoch Step: 710 / 730 Loss: 7.46890926361084 Tokens per Sec: 15147.726411497768
Epoch Step: 715 / 730 Loss: 4.754397392272949 Tokens per Sec: 15125.356077348544
Epoch Step: 720 / 730 Loss: 9.4114990234375 Tokens per Sec: 15619.326138834529
Epoch Step: 725 / 730 Loss: 4.755120754241943 Tokens per Sec: 15914.710439453058
Epoch Step: 730 / 730 Loss: 12.552379608154297 Tokens per Sec: 16101.775499486883
Epoch ended with duration 0:01:19.920007
Train perplexity: 1.4819162147199094
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 , VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.301418
Validation perplexity: 1.5398171609140128
Epoch 13 / 1000
Epoch Step: 5 / 730 Loss: 10.991798400878906 Tokens per Sec: 16642.81803077007
Epoch Step: 10 / 730 Loss: 79.46561431884766 Tokens per Sec: 18148.85902730995
Epoch Step: 15 / 730 Loss: 11.656705856323242 Tokens per Sec: 19053.74353154769
Epoch Step: 20 / 730 Loss: 10.080142974853516 Tokens per Sec: 18205.253376869478
Epoch Step: 25 / 730 Loss: 6.0966973304748535 Tokens per Sec: 13502.078394120386
Epoch Step: 30 / 730 Loss: 6.786164283752441 Tokens per Sec: 18942.753052561013
Epoch Step: 35 / 730 Loss: 14.908406257629395 Tokens per Sec: 19600.72051147667
Epoch Step: 40 / 730 Loss: 13.538189888000488 Tokens per Sec: 18418.725519194526
Epoch Step: 45 / 730 Loss: 5.8582563400268555 Tokens per Sec: 15040.069399665183
Epoch Step: 50 / 730 Loss: 3.5288329124450684 Tokens per Sec: 20743.5267074883
Epoch Step: 55 / 730 Loss: 40.550785064697266 Tokens per Sec: 17617.614617857762
Epoch Step: 60 / 730 Loss: 16.68285369873047 Tokens per Sec: 19826.038163255413
Epoch Step: 65 / 730 Loss: 22.46055793762207 Tokens per Sec: 15123.676590983894
Epoch Step: 70 / 730 Loss: 12.762331008911133 Tokens per Sec: 17477.630547831883
Epoch Step: 75 / 730 Loss: 12.364640235900879 Tokens per Sec: 18010.037948456786
Epoch Step: 80 / 730 Loss: 4.290184020996094 Tokens per Sec: 16789.823178448743
Epoch Step: 85 / 730 Loss: 17.169410705566406 Tokens per Sec: 17810.62866174156
Epoch Step: 90 / 730 Loss: 3.532444477081299 Tokens per Sec: 17918.203809538303
Epoch Step: 95 / 730 Loss: 3.5432286262512207 Tokens per Sec: 14748.21929748781
Epoch Step: 100 / 730 Loss: 41.87830352783203 Tokens per Sec: 18558.591527941215
Epoch Step: 105 / 730 Loss: 11.35334300994873 Tokens per Sec: 18513.113328905794
Epoch Step: 110 / 730 Loss: 9.002348899841309 Tokens per Sec: 21523.378261984624
Epoch Step: 115 / 730 Loss: 7.321247577667236 Tokens per Sec: 20890.826584571012
Epoch Step: 120 / 730 Loss: 8.06783676147461 Tokens per Sec: 17839.296896817967
Epoch Step: 125 / 730 Loss: 77.51508331298828 Tokens per Sec: 17767.12971912072
Epoch Step: 130 / 730 Loss: 11.513903617858887 Tokens per Sec: 17766.71275272045
Epoch Step: 135 / 730 Loss: 4.632428169250488 Tokens per Sec: 16172.379241273673
Epoch Step: 140 / 730 Loss: 6.265375137329102 Tokens per Sec: 17400.24184109965
Epoch Step: 145 / 730 Loss: 13.559098243713379 Tokens per Sec: 20320.380559713743
Epoch Step: 150 / 730 Loss: 8.44970989227295 Tokens per Sec: 18576.43599972953
Epoch Step: 155 / 730 Loss: 11.909371376037598 Tokens per Sec: 15469.914447423525
Epoch Step: 160 / 730 Loss: 35.79248809814453 Tokens per Sec: 15846.163115443615
Epoch Step: 165 / 730 Loss: 17.49394989013672 Tokens per Sec: 14975.589623884975
Epoch Step: 170 / 730 Loss: 64.17558288574219 Tokens per Sec: 17869.020863528218
Epoch Step: 175 / 730 Loss: 2.2029242515563965 Tokens per Sec: 15856.644698751614
Epoch Step: 180 / 730 Loss: 53.200069427490234 Tokens per Sec: 20265.64823413359
Epoch Step: 185 / 730 Loss: 11.451494216918945 Tokens per Sec: 19655.972378992534
Epoch Step: 190 / 730 Loss: 7.199792861938477 Tokens per Sec: 14855.211677587162
Epoch Step: 195 / 730 Loss: 7.938738822937012 Tokens per Sec: 16050.648504759618
Epoch Step: 200 / 730 Loss: 15.849843978881836 Tokens per Sec: 19514.855364132876
Epoch Step: 205 / 730 Loss: 12.247106552124023 Tokens per Sec: 19890.41564426774
Epoch Step: 210 / 730 Loss: 7.662815093994141 Tokens per Sec: 15151.721282857672
Epoch Step: 215 / 730 Loss: 6.83705997467041 Tokens per Sec: 17177.103555704343
Epoch Step: 220 / 730 Loss: 4.411036014556885 Tokens per Sec: 16961.276117734098
Epoch Step: 225 / 730 Loss: 27.386926651000977 Tokens per Sec: 19797.73423179818
Epoch Step: 230 / 730 Loss: 5.651525020599365 Tokens per Sec: 17646.473532684045
Epoch Step: 235 / 730 Loss: 9.024806022644043 Tokens per Sec: 17942.996003451113
Epoch Step: 240 / 730 Loss: 8.696152687072754 Tokens per Sec: 20064.604185759952
Epoch Step: 245 / 730 Loss: 106.85625457763672 Tokens per Sec: 21163.070331073868
Epoch Step: 250 / 730 Loss: 8.497303009033203 Tokens per Sec: 15713.46622375967
Epoch Step: 255 / 730 Loss: 16.183643341064453 Tokens per Sec: 18052.794318542485
Epoch Step: 260 / 730 Loss: 11.888387680053711 Tokens per Sec: 15910.724559238464
Epoch Step: 265 / 730 Loss: 7.63564395904541 Tokens per Sec: 18944.129211449635
Epoch Step: 270 / 730 Loss: 74.45233917236328 Tokens per Sec: 19561.44967006181
Epoch Step: 275 / 730 Loss: 10.374039649963379 Tokens per Sec: 15250.732069282163
Epoch Step: 280 / 730 Loss: 14.465410232543945 Tokens per Sec: 19262.302574599646
Epoch Step: 285 / 730 Loss: 52.673362731933594 Tokens per Sec: 17233.1792128025
Epoch Step: 290 / 730 Loss: 12.397369384765625 Tokens per Sec: 19235.076338754374
Epoch Step: 295 / 730 Loss: 9.185259819030762 Tokens per Sec: 13604.83409652307
Epoch Step: 300 / 730 Loss: 13.148523330688477 Tokens per Sec: 17555.090441378525
Epoch Step: 305 / 730 Loss: 12.221790313720703 Tokens per Sec: 16048.11939333531
Epoch Step: 310 / 730 Loss: 7.054678916931152 Tokens per Sec: 15878.447659322486
Epoch Step: 315 / 730 Loss: 12.017756462097168 Tokens per Sec: 17084.69773142962
Epoch Step: 320 / 730 Loss: 8.039639472961426 Tokens per Sec: 17519.968735675815
Epoch Step: 325 / 730 Loss: 7.873401165008545 Tokens per Sec: 19677.248950294386
Epoch Step: 330 / 730 Loss: 9.470913887023926 Tokens per Sec: 19127.850909650693
Epoch Step: 335 / 730 Loss: 7.266337871551514 Tokens per Sec: 18788.024773107936
Epoch Step: 340 / 730 Loss: 5.382781505584717 Tokens per Sec: 19128.428551987876
Epoch Step: 345 / 730 Loss: 9.152284622192383 Tokens per Sec: 21289.216451262957
Epoch Step: 350 / 730 Loss: 3.852648973464966 Tokens per Sec: 15263.23455196571
Epoch Step: 355 / 730 Loss: 75.84031677246094 Tokens per Sec: 19562.335735723067
Epoch Step: 360 / 730 Loss: 10.624245643615723 Tokens per Sec: 18544.161528466342
Epoch Step: 365 / 730 Loss: 4.512024879455566 Tokens per Sec: 15260.663849605042
Epoch Step: 370 / 730 Loss: 9.397492408752441 Tokens per Sec: 16282.368093947927
Epoch Step: 375 / 730 Loss: 13.700165748596191 Tokens per Sec: 18585.297060084973
Epoch Step: 380 / 730 Loss: 10.268470764160156 Tokens per Sec: 17041.884957815008
Epoch Step: 385 / 730 Loss: 9.698533058166504 Tokens per Sec: 19965.539936104808
Epoch Step: 390 / 730 Loss: 5.447624683380127 Tokens per Sec: 16700.209956781368
Epoch Step: 395 / 730 Loss: 44.91179275512695 Tokens per Sec: 15697.935193803074
Epoch Step: 400 / 730 Loss: 6.230294704437256 Tokens per Sec: 16341.418350127675
Epoch Step: 405 / 730 Loss: 44.81103515625 Tokens per Sec: 18825.869050747424
Epoch Step: 410 / 730 Loss: 2.7898213863372803 Tokens per Sec: 19208.328743900212
Epoch Step: 415 / 730 Loss: 25.035417556762695 Tokens per Sec: 19405.687776820258
Epoch Step: 420 / 730 Loss: 8.470060348510742 Tokens per Sec: 15697.005023108059
Epoch Step: 425 / 730 Loss: 7.120357513427734 Tokens per Sec: 20113.320944075134
Epoch Step: 430 / 730 Loss: 10.362809181213379 Tokens per Sec: 15679.057002725916
Epoch Step: 435 / 730 Loss: 2.382812261581421 Tokens per Sec: 17495.358612553067
Epoch Step: 440 / 730 Loss: 9.294292449951172 Tokens per Sec: 13618.893121608555
Epoch Step: 445 / 730 Loss: 13.004323959350586 Tokens per Sec: 16158.962627503035
Epoch Step: 450 / 730 Loss: 13.114584922790527 Tokens per Sec: 16348.990353304096
Epoch Step: 455 / 730 Loss: 4.64069938659668 Tokens per Sec: 16575.96793899591
Epoch Step: 460 / 730 Loss: 7.735456943511963 Tokens per Sec: 17852.665470262375
Epoch Step: 465 / 730 Loss: 7.40418004989624 Tokens per Sec: 22381.926380540815
Epoch Step: 470 / 730 Loss: 8.911561012268066 Tokens per Sec: 17906.662411332087
Epoch Step: 475 / 730 Loss: 4.814818382263184 Tokens per Sec: 21653.89623145839
Epoch Step: 480 / 730 Loss: 8.529427528381348 Tokens per Sec: 19709.763942863738
Epoch Step: 485 / 730 Loss: 5.794648170471191 Tokens per Sec: 14024.594144523662
Epoch Step: 490 / 730 Loss: 6.660141944885254 Tokens per Sec: 19092.002720601537
Epoch Step: 495 / 730 Loss: 7.617040157318115 Tokens per Sec: 18946.767415001454
Epoch Step: 500 / 730 Loss: 13.125515937805176 Tokens per Sec: 16896.034597382888
Epoch Step: 505 / 730 Loss: 9.561412811279297 Tokens per Sec: 15376.00539870924
Epoch Step: 510 / 730 Loss: 11.764632225036621 Tokens per Sec: 21319.22512072639
Epoch Step: 515 / 730 Loss: 7.040848255157471 Tokens per Sec: 17615.36566247698
Epoch Step: 520 / 730 Loss: 18.958215713500977 Tokens per Sec: 18400.01259548861
Epoch Step: 525 / 730 Loss: 5.473508834838867 Tokens per Sec: 19652.73260982092
Epoch Step: 530 / 730 Loss: 12.962427139282227 Tokens per Sec: 17711.29660800401
Epoch Step: 535 / 730 Loss: 8.912005424499512 Tokens per Sec: 16471.00167567857
Epoch Step: 540 / 730 Loss: 11.583480834960938 Tokens per Sec: 18161.53839798498
Epoch Step: 545 / 730 Loss: 12.035343170166016 Tokens per Sec: 18813.936675141806
Epoch Step: 550 / 730 Loss: 13.2070951461792 Tokens per Sec: 19161.987023608057
Epoch Step: 555 / 730 Loss: 12.103021621704102 Tokens per Sec: 16586.479958538534
Epoch Step: 560 / 730 Loss: 10.991155624389648 Tokens per Sec: 15804.804770771681
Epoch Step: 565 / 730 Loss: 15.353675842285156 Tokens per Sec: 14592.075499734223
Epoch Step: 570 / 730 Loss: 2.848987340927124 Tokens per Sec: 15951.440418836153
Epoch Step: 575 / 730 Loss: 6.180325984954834 Tokens per Sec: 15106.622221444162
Epoch Step: 580 / 730 Loss: 11.12160873413086 Tokens per Sec: 16903.890246815543
Epoch Step: 585 / 730 Loss: 8.933530807495117 Tokens per Sec: 18386.079594004223
Epoch Step: 590 / 730 Loss: 4.389716148376465 Tokens per Sec: 18842.004014360344
Epoch Step: 595 / 730 Loss: 8.354451179504395 Tokens per Sec: 19266.36410896863
Epoch Step: 600 / 730 Loss: 6.487304210662842 Tokens per Sec: 18792.140131182514
Epoch Step: 605 / 730 Loss: 16.071252822875977 Tokens per Sec: 18718.54571831157
Epoch Step: 610 / 730 Loss: 13.593002319335938 Tokens per Sec: 21052.406773156283
Epoch Step: 615 / 730 Loss: 8.732460021972656 Tokens per Sec: 18699.162675048825
Epoch Step: 620 / 730 Loss: 3.1702375411987305 Tokens per Sec: 14461.11338872403
Epoch Step: 625 / 730 Loss: 10.706220626831055 Tokens per Sec: 19526.055199438557
Epoch Step: 630 / 730 Loss: 6.380449295043945 Tokens per Sec: 15084.183304050948
Epoch Step: 635 / 730 Loss: 10.467727661132812 Tokens per Sec: 14826.474023044479
Epoch Step: 640 / 730 Loss: 7.997142314910889 Tokens per Sec: 15400.562099214481
Epoch Step: 645 / 730 Loss: 62.878318786621094 Tokens per Sec: 14479.799276438067
Epoch Step: 650 / 730 Loss: 7.342006683349609 Tokens per Sec: 16057.82824864328
Epoch Step: 655 / 730 Loss: 35.3703727722168 Tokens per Sec: 19404.111101548177
Epoch Step: 660 / 730 Loss: 5.362055778503418 Tokens per Sec: 18330.632786532737
Epoch Step: 665 / 730 Loss: 77.79708099365234 Tokens per Sec: 15052.72690568582
Epoch Step: 670 / 730 Loss: 13.600664138793945 Tokens per Sec: 18557.95302262885
Epoch Step: 675 / 730 Loss: 2.683748245239258 Tokens per Sec: 17083.025959290702
Epoch Step: 680 / 730 Loss: 5.497898101806641 Tokens per Sec: 19366.191655448238
Epoch Step: 685 / 730 Loss: 10.046311378479004 Tokens per Sec: 18162.98878081514
Epoch Step: 690 / 730 Loss: 9.033007621765137 Tokens per Sec: 15731.546062263018
Epoch Step: 695 / 730 Loss: 11.08437728881836 Tokens per Sec: 21703.440901180904
Epoch Step: 700 / 730 Loss: 5.76241397857666 Tokens per Sec: 19304.19084337007
Epoch Step: 705 / 730 Loss: 4.666228294372559 Tokens per Sec: 13822.405117310265
Epoch Step: 710 / 730 Loss: 5.806528091430664 Tokens per Sec: 15669.274868357215
Epoch Step: 715 / 730 Loss: 8.758238792419434 Tokens per Sec: 14695.458109729496
Epoch Step: 720 / 730 Loss: 4.148937702178955 Tokens per Sec: 15507.204531358102
Epoch Step: 725 / 730 Loss: 8.59228515625 Tokens per Sec: 16381.842842950675
Epoch Step: 730 / 730 Loss: 6.879851341247559 Tokens per Sec: 14395.558984391822
Epoch ended with duration 0:01:19.588083
Train perplexity: 1.4756001051705954
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 , java.lang.String , java.lang.String > VAR_2 , java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.279309
Validation perplexity: 1.3863330153459728
Model saved best_on_validation!
Epoch 14 / 1000
Epoch Step: 5 / 730 Loss: 52.336822509765625 Tokens per Sec: 14527.776859606676
Epoch Step: 10 / 730 Loss: 2.351166009902954 Tokens per Sec: 17390.100181312173
Epoch Step: 15 / 730 Loss: 10.937533378601074 Tokens per Sec: 18676.27775962287
Epoch Step: 20 / 730 Loss: 4.17592191696167 Tokens per Sec: 14851.029232437495
Epoch Step: 25 / 730 Loss: 6.145561218261719 Tokens per Sec: 19922.063735779317
Epoch Step: 30 / 730 Loss: 10.211465835571289 Tokens per Sec: 15497.156572464313
Epoch Step: 35 / 730 Loss: 11.57808780670166 Tokens per Sec: 17417.757749224802
Epoch Step: 40 / 730 Loss: 9.177262306213379 Tokens per Sec: 16899.177041858697
Epoch Step: 45 / 730 Loss: 7.302727222442627 Tokens per Sec: 19926.179522445505
Epoch Step: 50 / 730 Loss: 10.57217025756836 Tokens per Sec: 17588.62640673995
Epoch Step: 55 / 730 Loss: 11.570635795593262 Tokens per Sec: 21878.74861863401
Epoch Step: 60 / 730 Loss: 8.125297546386719 Tokens per Sec: 20439.439475958356
Epoch Step: 65 / 730 Loss: 9.832928657531738 Tokens per Sec: 15691.754644187664
Epoch Step: 70 / 730 Loss: 5.514261722564697 Tokens per Sec: 14274.733519109865
Epoch Step: 75 / 730 Loss: 12.27579116821289 Tokens per Sec: 18934.64290578827
Epoch Step: 80 / 730 Loss: 23.21155548095703 Tokens per Sec: 15868.567930910578
Epoch Step: 85 / 730 Loss: 12.191523551940918 Tokens per Sec: 16316.681720209948
Epoch Step: 90 / 730 Loss: 12.913040161132812 Tokens per Sec: 15910.901129375292
Epoch Step: 95 / 730 Loss: 3.828305721282959 Tokens per Sec: 19306.814198525888
Epoch Step: 100 / 730 Loss: 6.950467586517334 Tokens per Sec: 17046.509104320736
Epoch Step: 105 / 730 Loss: 7.401548862457275 Tokens per Sec: 16659.716645157852
Epoch Step: 110 / 730 Loss: 3.28069806098938 Tokens per Sec: 20800.808626939444
Epoch Step: 115 / 730 Loss: 8.538590431213379 Tokens per Sec: 17477.61763763223
Epoch Step: 120 / 730 Loss: 3.3051202297210693 Tokens per Sec: 16952.920495583086
Epoch Step: 125 / 730 Loss: 8.481351852416992 Tokens per Sec: 16965.407964857564
Epoch Step: 130 / 730 Loss: 12.348337173461914 Tokens per Sec: 17002.98796242316
Epoch Step: 135 / 730 Loss: 3.0313713550567627 Tokens per Sec: 19414.283414202193
Epoch Step: 140 / 730 Loss: 7.606645107269287 Tokens per Sec: 16931.10431550024
Epoch Step: 145 / 730 Loss: 9.650848388671875 Tokens per Sec: 19022.436442790262
Epoch Step: 150 / 730 Loss: 11.326096534729004 Tokens per Sec: 15461.024436893986
Epoch Step: 155 / 730 Loss: 8.80614185333252 Tokens per Sec: 18990.987598453215
Epoch Step: 160 / 730 Loss: 9.161539077758789 Tokens per Sec: 15563.772220510955
Epoch Step: 165 / 730 Loss: 9.416343688964844 Tokens per Sec: 17149.08969159404
Epoch Step: 170 / 730 Loss: 7.910714626312256 Tokens per Sec: 19532.802097529817
Epoch Step: 175 / 730 Loss: 12.105840682983398 Tokens per Sec: 17834.145810034286
Epoch Step: 180 / 730 Loss: 9.597024917602539 Tokens per Sec: 16847.47227999605
Epoch Step: 185 / 730 Loss: 9.87388801574707 Tokens per Sec: 16880.47750229888
Epoch Step: 190 / 730 Loss: 11.725050926208496 Tokens per Sec: 18958.022376501634
Epoch Step: 195 / 730 Loss: 8.887978553771973 Tokens per Sec: 19547.022242191975
Epoch Step: 200 / 730 Loss: 12.398587226867676 Tokens per Sec: 15940.882642691997
Epoch Step: 205 / 730 Loss: 8.662997245788574 Tokens per Sec: 17966.059605842776
Epoch Step: 210 / 730 Loss: 6.700959205627441 Tokens per Sec: 18952.900486727023
Epoch Step: 215 / 730 Loss: 2.876434803009033 Tokens per Sec: 20125.595765099217
Epoch Step: 220 / 730 Loss: 4.345875263214111 Tokens per Sec: 19534.96688492925
Epoch Step: 225 / 730 Loss: 3.6451609134674072 Tokens per Sec: 16997.346728860186
Epoch Step: 230 / 730 Loss: 4.860323429107666 Tokens per Sec: 18092.435606247054
Epoch Step: 235 / 730 Loss: 6.578959941864014 Tokens per Sec: 18867.60204113461
Epoch Step: 240 / 730 Loss: 6.3672661781311035 Tokens per Sec: 15967.132411475024
Epoch Step: 245 / 730 Loss: 10.414009094238281 Tokens per Sec: 19462.001727634608
Epoch Step: 250 / 730 Loss: 9.87842082977295 Tokens per Sec: 16099.511911422302
Epoch Step: 255 / 730 Loss: 12.621969223022461 Tokens per Sec: 16232.667521963975
Epoch Step: 260 / 730 Loss: 2.9271442890167236 Tokens per Sec: 14872.020162053448
Epoch Step: 265 / 730 Loss: 7.044483184814453 Tokens per Sec: 19185.993689148596
Epoch Step: 270 / 730 Loss: 7.546941757202148 Tokens per Sec: 13776.043863933975
Epoch Step: 275 / 730 Loss: 4.674863815307617 Tokens per Sec: 19114.651898214503
Epoch Step: 280 / 730 Loss: 3.284116268157959 Tokens per Sec: 19119.131570782916
Epoch Step: 285 / 730 Loss: 5.033682823181152 Tokens per Sec: 18071.466363877593
Epoch Step: 290 / 730 Loss: 11.230473518371582 Tokens per Sec: 18058.709342244572
Epoch Step: 295 / 730 Loss: 4.45158052444458 Tokens per Sec: 16295.988577777234
Epoch Step: 300 / 730 Loss: 9.372210502624512 Tokens per Sec: 20279.055210766368
Epoch Step: 305 / 730 Loss: 37.325408935546875 Tokens per Sec: 11449.438631204901
Epoch Step: 310 / 730 Loss: 6.070693492889404 Tokens per Sec: 20889.536451579774
Epoch Step: 315 / 730 Loss: 6.755240440368652 Tokens per Sec: 17485.96912616753
Epoch Step: 320 / 730 Loss: 4.728791236877441 Tokens per Sec: 15324.892710552898
Epoch Step: 325 / 730 Loss: 13.163050651550293 Tokens per Sec: 19505.213444586305
Epoch Step: 330 / 730 Loss: 1.9697514772415161 Tokens per Sec: 14792.867205815708
Epoch Step: 335 / 730 Loss: 7.901782035827637 Tokens per Sec: 18478.47341514208
Epoch Step: 340 / 730 Loss: 5.978775501251221 Tokens per Sec: 18939.482262450445
Epoch Step: 345 / 730 Loss: 5.702655792236328 Tokens per Sec: 17505.407663418748
Epoch Step: 350 / 730 Loss: 8.400629997253418 Tokens per Sec: 16770.803491795818
Epoch Step: 355 / 730 Loss: 5.379964828491211 Tokens per Sec: 20550.126847248965
Epoch Step: 360 / 730 Loss: 4.384332180023193 Tokens per Sec: 18029.68507300484
Epoch Step: 365 / 730 Loss: 3.5749223232269287 Tokens per Sec: 17155.561609128275
Epoch Step: 370 / 730 Loss: 8.869573593139648 Tokens per Sec: 17022.67428982142
Epoch Step: 375 / 730 Loss: 9.957901000976562 Tokens per Sec: 12661.832104790123
Epoch Step: 380 / 730 Loss: 9.010942459106445 Tokens per Sec: 17084.855710802403
Epoch Step: 385 / 730 Loss: 57.904380798339844 Tokens per Sec: 20155.14467273704
Epoch Step: 390 / 730 Loss: 6.575559616088867 Tokens per Sec: 18327.412408045948
Epoch Step: 395 / 730 Loss: 10.826719284057617 Tokens per Sec: 18331.591061001935
Epoch Step: 400 / 730 Loss: 5.172183513641357 Tokens per Sec: 19992.33219482245
Epoch Step: 405 / 730 Loss: 8.530729293823242 Tokens per Sec: 16473.40287756438
Epoch Step: 410 / 730 Loss: 4.273576736450195 Tokens per Sec: 19568.289482254353
Epoch Step: 415 / 730 Loss: 5.261059284210205 Tokens per Sec: 17501.590484713313
Epoch Step: 420 / 730 Loss: 6.87813663482666 Tokens per Sec: 18631.541095502143
Epoch Step: 425 / 730 Loss: 6.30967903137207 Tokens per Sec: 18478.439368024578
Epoch Step: 430 / 730 Loss: 4.334819316864014 Tokens per Sec: 17206.24222534818
Epoch Step: 435 / 730 Loss: 4.770045280456543 Tokens per Sec: 17640.8282504639
Epoch Step: 440 / 730 Loss: 8.350030899047852 Tokens per Sec: 17291.58783176849
Epoch Step: 445 / 730 Loss: 7.57017707824707 Tokens per Sec: 17204.79776938712
Epoch Step: 450 / 730 Loss: 12.874017715454102 Tokens per Sec: 16162.742829587116
Epoch Step: 455 / 730 Loss: 10.240479469299316 Tokens per Sec: 14952.923206911119
Epoch Step: 460 / 730 Loss: 5.125280857086182 Tokens per Sec: 14458.569291646623
Epoch Step: 465 / 730 Loss: 8.922513008117676 Tokens per Sec: 18807.80754922186
Epoch Step: 470 / 730 Loss: 15.410173416137695 Tokens per Sec: 17533.50234394609
Epoch Step: 475 / 730 Loss: 1.9054944515228271 Tokens per Sec: 17002.44180477197
Epoch Step: 480 / 730 Loss: 13.789739608764648 Tokens per Sec: 21177.620748580706
Epoch Step: 485 / 730 Loss: 7.991605281829834 Tokens per Sec: 19758.87060649585
Epoch Step: 490 / 730 Loss: 8.996352195739746 Tokens per Sec: 15261.10945760772
Epoch Step: 495 / 730 Loss: 10.799317359924316 Tokens per Sec: 18928.821721160748
Epoch Step: 500 / 730 Loss: 6.190569877624512 Tokens per Sec: 16631.756966595956
Epoch Step: 505 / 730 Loss: 3.7894415855407715 Tokens per Sec: 16901.159080900215
Epoch Step: 510 / 730 Loss: 2.8017852306365967 Tokens per Sec: 18422.257527833328
Epoch Step: 515 / 730 Loss: 73.8291015625 Tokens per Sec: 16474.713631918174
Epoch Step: 520 / 730 Loss: 6.793015956878662 Tokens per Sec: 18688.06186496168
Epoch Step: 525 / 730 Loss: 11.009334564208984 Tokens per Sec: 16454.449087063214
Epoch Step: 530 / 730 Loss: 40.70680236816406 Tokens per Sec: 21057.34193983884
Epoch Step: 535 / 730 Loss: 5.7677693367004395 Tokens per Sec: 15447.337831622895
Epoch Step: 540 / 730 Loss: 13.488064765930176 Tokens per Sec: 18143.462075259333
Epoch Step: 545 / 730 Loss: 9.540389060974121 Tokens per Sec: 18474.5025031568
Epoch Step: 550 / 730 Loss: 10.37802791595459 Tokens per Sec: 17797.1419280644
Epoch Step: 555 / 730 Loss: 3.658902883529663 Tokens per Sec: 15782.505878555865
Epoch Step: 560 / 730 Loss: 6.072362422943115 Tokens per Sec: 21989.398583229533
Epoch Step: 565 / 730 Loss: 8.488693237304688 Tokens per Sec: 19205.608923674892
Epoch Step: 570 / 730 Loss: 11.705700874328613 Tokens per Sec: 20255.21596603443
Epoch Step: 575 / 730 Loss: 6.908001899719238 Tokens per Sec: 18786.28774143384
Epoch Step: 580 / 730 Loss: 4.498310089111328 Tokens per Sec: 11796.396759297062
Epoch Step: 585 / 730 Loss: 12.832358360290527 Tokens per Sec: 16258.124836957993
Epoch Step: 590 / 730 Loss: 14.780130386352539 Tokens per Sec: 17403.920901523525
Epoch Step: 595 / 730 Loss: 7.812347888946533 Tokens per Sec: 19407.365737858952
Epoch Step: 600 / 730 Loss: 10.927833557128906 Tokens per Sec: 16962.63747573028
Epoch Step: 605 / 730 Loss: 7.972015380859375 Tokens per Sec: 17343.21856905796
Epoch Step: 610 / 730 Loss: 40.562042236328125 Tokens per Sec: 20381.926574352023
Epoch Step: 615 / 730 Loss: 6.689064025878906 Tokens per Sec: 15996.7808669606
Epoch Step: 620 / 730 Loss: 8.654814720153809 Tokens per Sec: 18864.27064422738
Epoch Step: 625 / 730 Loss: 10.362096786499023 Tokens per Sec: 16901.8988123607
Epoch Step: 630 / 730 Loss: 4.191329479217529 Tokens per Sec: 19403.108364208987
Epoch Step: 635 / 730 Loss: 6.354119777679443 Tokens per Sec: 14650.552821629119
Epoch Step: 640 / 730 Loss: 5.01617431640625 Tokens per Sec: 18565.5014630033
Epoch Step: 645 / 730 Loss: 9.060338973999023 Tokens per Sec: 16725.887566681067
Epoch Step: 650 / 730 Loss: 8.488780975341797 Tokens per Sec: 16430.94997766662
Epoch Step: 655 / 730 Loss: 4.360939979553223 Tokens per Sec: 19991.04214343887
Epoch Step: 660 / 730 Loss: 3.534813404083252 Tokens per Sec: 16491.756903060395
Epoch Step: 665 / 730 Loss: 4.388310432434082 Tokens per Sec: 16108.323076099781
Epoch Step: 670 / 730 Loss: 4.729125022888184 Tokens per Sec: 17399.73176406186
Epoch Step: 675 / 730 Loss: 7.130035400390625 Tokens per Sec: 15294.376089956793
Epoch Step: 680 / 730 Loss: 11.90536117553711 Tokens per Sec: 18926.044876175147
Epoch Step: 685 / 730 Loss: 7.781847953796387 Tokens per Sec: 17760.52921870059
Epoch Step: 690 / 730 Loss: 11.76195240020752 Tokens per Sec: 20007.304673959756
Epoch Step: 695 / 730 Loss: 12.856396675109863 Tokens per Sec: 20322.26898770961
Epoch Step: 700 / 730 Loss: 5.722346782684326 Tokens per Sec: 15957.45405040297
Epoch Step: 705 / 730 Loss: 8.632170677185059 Tokens per Sec: 16667.91358556428
Epoch Step: 710 / 730 Loss: 7.55474853515625 Tokens per Sec: 13740.59085517535
Epoch Step: 715 / 730 Loss: 6.432158470153809 Tokens per Sec: 13597.449601336943
Epoch Step: 720 / 730 Loss: 11.501065254211426 Tokens per Sec: 15940.600944559737
Epoch Step: 725 / 730 Loss: 9.716917991638184 Tokens per Sec: 15885.258798936611
Epoch Step: 730 / 730 Loss: 9.685604095458984 Tokens per Sec: 15252.974723361393
Epoch ended with duration 0:01:20.049328
Train perplexity: 1.481731038533221
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.285053
Validation perplexity: 1.3464093663737424
Model saved best_on_validation!
Epoch 15 / 1000
Epoch Step: 5 / 730 Loss: 12.53665828704834 Tokens per Sec: 18870.481863647463
Epoch Step: 10 / 730 Loss: 7.3906121253967285 Tokens per Sec: 18168.698291019766
Epoch Step: 15 / 730 Loss: 9.852188110351562 Tokens per Sec: 18167.636929384975
Epoch Step: 20 / 730 Loss: 6.172116279602051 Tokens per Sec: 17981.820238049382
Epoch Step: 25 / 730 Loss: 5.438432216644287 Tokens per Sec: 15778.002892214381
Epoch Step: 30 / 730 Loss: 4.922851085662842 Tokens per Sec: 19242.331446590637
Epoch Step: 35 / 730 Loss: 9.849493980407715 Tokens per Sec: 18684.728779944147
Epoch Step: 40 / 730 Loss: 9.343714714050293 Tokens per Sec: 18396.844629638454
Epoch Step: 45 / 730 Loss: 8.802475929260254 Tokens per Sec: 15725.918694944363
Epoch Step: 50 / 730 Loss: 4.529795169830322 Tokens per Sec: 19284.63676327844
Epoch Step: 55 / 730 Loss: 12.16454029083252 Tokens per Sec: 19528.111967499644
Epoch Step: 60 / 730 Loss: 7.927746772766113 Tokens per Sec: 17598.233602333257
Epoch Step: 65 / 730 Loss: 7.972376346588135 Tokens per Sec: 16100.274449455357
Epoch Step: 70 / 730 Loss: 11.680849075317383 Tokens per Sec: 17901.26761480838
Epoch Step: 75 / 730 Loss: 10.29465389251709 Tokens per Sec: 18420.70789618167
Epoch Step: 80 / 730 Loss: 6.932963848114014 Tokens per Sec: 20170.442380096294
Epoch Step: 85 / 730 Loss: 6.735167026519775 Tokens per Sec: 17579.687546236353
Epoch Step: 90 / 730 Loss: 2.776324510574341 Tokens per Sec: 15833.355370714587
Epoch Step: 95 / 730 Loss: 1.771498203277588 Tokens per Sec: 13548.98430867951
Epoch Step: 100 / 730 Loss: 7.15430212020874 Tokens per Sec: 18633.01283505803
Epoch Step: 105 / 730 Loss: 1.8759769201278687 Tokens per Sec: 16137.978924840023
Epoch Step: 110 / 730 Loss: 7.562228202819824 Tokens per Sec: 15249.49901598331
Epoch Step: 115 / 730 Loss: 10.264062881469727 Tokens per Sec: 17938.453656739483
Epoch Step: 120 / 730 Loss: 9.813617706298828 Tokens per Sec: 17467.07209397034
Epoch Step: 125 / 730 Loss: 6.955940246582031 Tokens per Sec: 19915.726052001777
Epoch Step: 130 / 730 Loss: 8.118451118469238 Tokens per Sec: 17018.38176762291
Epoch Step: 135 / 730 Loss: 5.659165859222412 Tokens per Sec: 17890.727607324996
Epoch Step: 140 / 730 Loss: 5.866572856903076 Tokens per Sec: 18139.84140543457
Epoch Step: 145 / 730 Loss: 10.000297546386719 Tokens per Sec: 15371.114610852579
Epoch Step: 150 / 730 Loss: 6.056218147277832 Tokens per Sec: 17155.489639893345
Epoch Step: 155 / 730 Loss: 5.686044216156006 Tokens per Sec: 19563.078307066822
Epoch Step: 160 / 730 Loss: 8.173561096191406 Tokens per Sec: 20633.14422870699
Epoch Step: 165 / 730 Loss: 6.986172676086426 Tokens per Sec: 15575.53952624768
Epoch Step: 170 / 730 Loss: 43.137916564941406 Tokens per Sec: 16671.278141363982
Epoch Step: 175 / 730 Loss: 9.232131004333496 Tokens per Sec: 17934.167543157382
Epoch Step: 180 / 730 Loss: 4.754054546356201 Tokens per Sec: 17843.210348288576
Epoch Step: 185 / 730 Loss: 9.433513641357422 Tokens per Sec: 18771.859247227745
Epoch Step: 190 / 730 Loss: 13.626378059387207 Tokens per Sec: 19143.366682215717
Epoch Step: 195 / 730 Loss: 3.577410936355591 Tokens per Sec: 18882.189541402277
Epoch Step: 200 / 730 Loss: 3.4058289527893066 Tokens per Sec: 16686.30291431781
Epoch Step: 205 / 730 Loss: 11.352036476135254 Tokens per Sec: 16543.835581556334
Epoch Step: 210 / 730 Loss: 6.029822826385498 Tokens per Sec: 18844.321066147422
Epoch Step: 215 / 730 Loss: 12.420284271240234 Tokens per Sec: 20281.30421549885
Epoch Step: 220 / 730 Loss: 2.071726083755493 Tokens per Sec: 14874.68650617367
Epoch Step: 225 / 730 Loss: 7.059488296508789 Tokens per Sec: 14516.494768624629
Epoch Step: 230 / 730 Loss: 4.044599533081055 Tokens per Sec: 16710.86986784611
Epoch Step: 235 / 730 Loss: 5.3844218254089355 Tokens per Sec: 17989.048785401388
Epoch Step: 240 / 730 Loss: 8.633877754211426 Tokens per Sec: 19077.388759526588
Epoch Step: 245 / 730 Loss: 4.707780361175537 Tokens per Sec: 17624.412965637766
Epoch Step: 250 / 730 Loss: 4.859347343444824 Tokens per Sec: 18360.29318821282
Epoch Step: 255 / 730 Loss: 53.010196685791016 Tokens per Sec: 14356.784714951082
Epoch Step: 260 / 730 Loss: 11.034361839294434 Tokens per Sec: 20652.305724898924
Epoch Step: 265 / 730 Loss: 26.71769905090332 Tokens per Sec: 17131.739629135693
Epoch Step: 270 / 730 Loss: 9.48533821105957 Tokens per Sec: 18522.004592944202
Epoch Step: 275 / 730 Loss: 99.94303131103516 Tokens per Sec: 18755.656017432673
Epoch Step: 280 / 730 Loss: 3.6298744678497314 Tokens per Sec: 16013.920193351405
Epoch Step: 285 / 730 Loss: 11.164466857910156 Tokens per Sec: 19847.65809257279
Epoch Step: 290 / 730 Loss: 10.515942573547363 Tokens per Sec: 17230.242023873343
Epoch Step: 295 / 730 Loss: 3.9177134037017822 Tokens per Sec: 17716.442204194813
Epoch Step: 300 / 730 Loss: 11.405341148376465 Tokens per Sec: 17738.679593039124
Epoch Step: 305 / 730 Loss: 13.815940856933594 Tokens per Sec: 19162.08951608911
Epoch Step: 310 / 730 Loss: 8.583208084106445 Tokens per Sec: 19978.554797057426
Epoch Step: 315 / 730 Loss: 12.687278747558594 Tokens per Sec: 16507.41423316455
Epoch Step: 320 / 730 Loss: 3.641510248184204 Tokens per Sec: 13605.445803312065
Epoch Step: 325 / 730 Loss: 6.2220940589904785 Tokens per Sec: 18414.4009758735
Epoch Step: 330 / 730 Loss: 8.4358549118042 Tokens per Sec: 17835.870364068473
Epoch Step: 335 / 730 Loss: 8.182947158813477 Tokens per Sec: 17051.861155618975
Epoch Step: 340 / 730 Loss: 9.69560718536377 Tokens per Sec: 18355.74354760652
Epoch Step: 345 / 730 Loss: 2.39456844329834 Tokens per Sec: 14975.330989784474
Epoch Step: 350 / 730 Loss: 5.782352447509766 Tokens per Sec: 19329.45450771528
Epoch Step: 355 / 730 Loss: 8.681150436401367 Tokens per Sec: 17473.193985944432
Epoch Step: 360 / 730 Loss: 4.966184139251709 Tokens per Sec: 19760.286273535243
Epoch Step: 365 / 730 Loss: 7.9927473068237305 Tokens per Sec: 16166.930347195816
Epoch Step: 370 / 730 Loss: 7.305476665496826 Tokens per Sec: 18460.97577438197
Epoch Step: 375 / 730 Loss: 14.556303977966309 Tokens per Sec: 14577.77766841729
Epoch Step: 380 / 730 Loss: 10.641596794128418 Tokens per Sec: 17197.81366313809
Epoch Step: 385 / 730 Loss: 3.133727550506592 Tokens per Sec: 16193.55093453108
Epoch Step: 390 / 730 Loss: 58.36530303955078 Tokens per Sec: 15328.425712641321
Epoch Step: 395 / 730 Loss: 35.60357666015625 Tokens per Sec: 17830.47130272905
Epoch Step: 400 / 730 Loss: 3.2569124698638916 Tokens per Sec: 19607.69394470408
Epoch Step: 405 / 730 Loss: 13.080697059631348 Tokens per Sec: 16974.330885379866
Epoch Step: 410 / 730 Loss: 8.941664695739746 Tokens per Sec: 14444.042203985931
Epoch Step: 415 / 730 Loss: 4.6496992111206055 Tokens per Sec: 19279.015093628965
Epoch Step: 420 / 730 Loss: 4.267594814300537 Tokens per Sec: 16441.37595691425
Epoch Step: 425 / 730 Loss: 7.627598762512207 Tokens per Sec: 16092.697476612997
Epoch Step: 430 / 730 Loss: 5.761111736297607 Tokens per Sec: 20622.172904980453
Epoch Step: 435 / 730 Loss: 4.748074531555176 Tokens per Sec: 14404.795944522171
Epoch Step: 440 / 730 Loss: 9.535355567932129 Tokens per Sec: 17009.807780978656
Epoch Step: 445 / 730 Loss: 4.096470355987549 Tokens per Sec: 17940.235942033494
Epoch Step: 450 / 730 Loss: 3.5681872367858887 Tokens per Sec: 18496.682237700636
Epoch Step: 455 / 730 Loss: 3.5231857299804688 Tokens per Sec: 19084.87173462006
Epoch Step: 460 / 730 Loss: 10.067808151245117 Tokens per Sec: 17234.30950913975
Epoch Step: 465 / 730 Loss: 4.4079203605651855 Tokens per Sec: 14613.38133799213
Epoch Step: 470 / 730 Loss: 10.883527755737305 Tokens per Sec: 18817.129305391085
Epoch Step: 475 / 730 Loss: 6.474784851074219 Tokens per Sec: 17745.361472944343
Epoch Step: 480 / 730 Loss: 6.585084438323975 Tokens per Sec: 17063.115320448043
Epoch Step: 485 / 730 Loss: 5.926048755645752 Tokens per Sec: 19376.022054826964
Epoch Step: 490 / 730 Loss: 46.24082946777344 Tokens per Sec: 15448.231990738826
Epoch Step: 495 / 730 Loss: 12.919684410095215 Tokens per Sec: 17570.198557459906
Epoch Step: 500 / 730 Loss: 4.2720136642456055 Tokens per Sec: 20101.102042585397
Epoch Step: 505 / 730 Loss: 6.599429130554199 Tokens per Sec: 13988.439116249232
Epoch Step: 510 / 730 Loss: 6.7730207443237305 Tokens per Sec: 12423.44614893469
Epoch Step: 515 / 730 Loss: 4.231620788574219 Tokens per Sec: 19659.21006647366
Epoch Step: 520 / 730 Loss: 5.124587535858154 Tokens per Sec: 18546.271989714533
Epoch Step: 525 / 730 Loss: 6.285243511199951 Tokens per Sec: 17898.354519207962
Epoch Step: 530 / 730 Loss: 7.312623500823975 Tokens per Sec: 19408.522532793737
Epoch Step: 535 / 730 Loss: 11.00740909576416 Tokens per Sec: 17799.17329446352
Epoch Step: 540 / 730 Loss: 4.008227825164795 Tokens per Sec: 18979.355479476104
Epoch Step: 545 / 730 Loss: 6.917966842651367 Tokens per Sec: 19298.151027812142
Epoch Step: 550 / 730 Loss: 10.68162727355957 Tokens per Sec: 14787.969242160332
Epoch Step: 555 / 730 Loss: 11.008065223693848 Tokens per Sec: 21049.609143799276
Epoch Step: 560 / 730 Loss: 9.20988941192627 Tokens per Sec: 17467.055281539382
Epoch Step: 565 / 730 Loss: 7.3937273025512695 Tokens per Sec: 17087.310755959377
Epoch Step: 570 / 730 Loss: 6.737217426300049 Tokens per Sec: 18016.69586673859
Epoch Step: 575 / 730 Loss: 5.855685710906982 Tokens per Sec: 17394.975959613403
Epoch Step: 580 / 730 Loss: 62.3343620300293 Tokens per Sec: 17526.132956688947
Epoch Step: 585 / 730 Loss: 7.090482711791992 Tokens per Sec: 17929.509801285534
Epoch Step: 590 / 730 Loss: 3.6944353580474854 Tokens per Sec: 16275.579455355435
Epoch Step: 595 / 730 Loss: 2.1304757595062256 Tokens per Sec: 18397.297607251443
Epoch Step: 600 / 730 Loss: 3.748297929763794 Tokens per Sec: 18806.59268415037
Epoch Step: 605 / 730 Loss: 11.70387077331543 Tokens per Sec: 20039.264775139407
Epoch Step: 610 / 730 Loss: 2.805478572845459 Tokens per Sec: 18666.743111712334
Epoch Step: 615 / 730 Loss: 9.500860214233398 Tokens per Sec: 16180.376130831495
Epoch Step: 620 / 730 Loss: 2.671353578567505 Tokens per Sec: 17344.99374762391
Epoch Step: 625 / 730 Loss: 3.897878885269165 Tokens per Sec: 13422.16473734664
Epoch Step: 630 / 730 Loss: 54.79387283325195 Tokens per Sec: 16835.870424230267
Epoch Step: 635 / 730 Loss: 14.28436279296875 Tokens per Sec: 14537.709392453085
Epoch Step: 640 / 730 Loss: 5.40875768661499 Tokens per Sec: 21912.074231071856
Epoch Step: 645 / 730 Loss: 7.065281391143799 Tokens per Sec: 18918.2242897395
Epoch Step: 650 / 730 Loss: 12.446077346801758 Tokens per Sec: 16523.34432743632
Epoch Step: 655 / 730 Loss: 9.060694694519043 Tokens per Sec: 17174.85638071648
Epoch Step: 660 / 730 Loss: 4.284122943878174 Tokens per Sec: 18526.505338265117
Epoch Step: 665 / 730 Loss: 3.597574234008789 Tokens per Sec: 18624.667582872287
Epoch Step: 670 / 730 Loss: 60.551979064941406 Tokens per Sec: 16842.776577969013
Epoch Step: 675 / 730 Loss: 6.523213863372803 Tokens per Sec: 14542.038404401917
Epoch Step: 680 / 730 Loss: 6.699771881103516 Tokens per Sec: 18296.209030046153
Epoch Step: 685 / 730 Loss: 4.622657775878906 Tokens per Sec: 17661.26896184368
Epoch Step: 690 / 730 Loss: 10.327889442443848 Tokens per Sec: 19405.43600469391
Epoch Step: 695 / 730 Loss: 6.2304768562316895 Tokens per Sec: 19154.34061194459
Epoch Step: 700 / 730 Loss: 42.51743698120117 Tokens per Sec: 17261.710752182593
Epoch Step: 705 / 730 Loss: 9.155501365661621 Tokens per Sec: 15358.572493968926
Epoch Step: 710 / 730 Loss: 11.43115234375 Tokens per Sec: 12054.30705229993
Epoch Step: 715 / 730 Loss: 8.320856094360352 Tokens per Sec: 16866.064509362488
Epoch Step: 720 / 730 Loss: 5.0265045166015625 Tokens per Sec: 15124.757026367533
Epoch Step: 725 / 730 Loss: 4.438539028167725 Tokens per Sec: 14057.770858859942
Epoch Step: 730 / 730 Loss: 3.2228641510009766 Tokens per Sec: 17077.143258903678
Epoch ended with duration 0:01:20.178679
Train perplexity: 1.4360897777849062
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_2 ) { java.lang.String > METHOD_1 ( VAR_1 , VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.364991
Validation perplexity: 1.420587043552548
Model saved checkpoint!
Epoch 16 / 1000
Epoch Step: 5 / 730 Loss: 2.333465337753296 Tokens per Sec: 15481.696653390938
Epoch Step: 10 / 730 Loss: 2.8775227069854736 Tokens per Sec: 17704.71923503451
Epoch Step: 15 / 730 Loss: 6.388557434082031 Tokens per Sec: 17552.13403971398
Epoch Step: 20 / 730 Loss: 10.196333885192871 Tokens per Sec: 14278.708769146435
Epoch Step: 25 / 730 Loss: 10.500770568847656 Tokens per Sec: 17021.675663977767
Epoch Step: 30 / 730 Loss: 9.076615333557129 Tokens per Sec: 19843.91518084265
Epoch Step: 35 / 730 Loss: 4.45252799987793 Tokens per Sec: 15384.55974194333
Epoch Step: 40 / 730 Loss: 2.5612242221832275 Tokens per Sec: 18631.820547533232
Epoch Step: 45 / 730 Loss: 2.3261423110961914 Tokens per Sec: 15767.13293638753
Epoch Step: 50 / 730 Loss: 3.4989020824432373 Tokens per Sec: 18588.837729685267
Epoch Step: 55 / 730 Loss: 8.921248435974121 Tokens per Sec: 16702.37245759508
Epoch Step: 60 / 730 Loss: 8.263511657714844 Tokens per Sec: 17633.9680089762
Epoch Step: 65 / 730 Loss: 5.236836910247803 Tokens per Sec: 17148.086405167876
Epoch Step: 70 / 730 Loss: 10.656759262084961 Tokens per Sec: 21661.95093433572
Epoch Step: 75 / 730 Loss: 6.303481578826904 Tokens per Sec: 16846.057793579086
Epoch Step: 80 / 730 Loss: 9.444780349731445 Tokens per Sec: 16712.465129023603
Epoch Step: 85 / 730 Loss: 11.262580871582031 Tokens per Sec: 21620.9381654169
Epoch Step: 90 / 730 Loss: 6.625795364379883 Tokens per Sec: 13738.742936076576
Epoch Step: 95 / 730 Loss: 4.743615627288818 Tokens per Sec: 18054.22447556442
Epoch Step: 100 / 730 Loss: 9.388519287109375 Tokens per Sec: 20184.472373592605
Epoch Step: 105 / 730 Loss: 6.325443267822266 Tokens per Sec: 17692.85719661798
Epoch Step: 110 / 730 Loss: 3.9502575397491455 Tokens per Sec: 16335.13631181626
Epoch Step: 115 / 730 Loss: 11.544280052185059 Tokens per Sec: 20693.661405235667
Epoch Step: 120 / 730 Loss: 3.921724796295166 Tokens per Sec: 18019.87472895751
Epoch Step: 125 / 730 Loss: 11.46973991394043 Tokens per Sec: 18516.057926745263
Epoch Step: 130 / 730 Loss: 3.391160726547241 Tokens per Sec: 17944.36342119258
Epoch Step: 135 / 730 Loss: 5.029106140136719 Tokens per Sec: 18644.797502773185
Epoch Step: 140 / 730 Loss: 14.097967147827148 Tokens per Sec: 19359.70116572623
Epoch Step: 145 / 730 Loss: 4.258782386779785 Tokens per Sec: 18614.703247638427
Epoch Step: 150 / 730 Loss: 2.106379508972168 Tokens per Sec: 16922.505933004304
Epoch Step: 155 / 730 Loss: 7.276933670043945 Tokens per Sec: 18169.137908711014
Epoch Step: 160 / 730 Loss: 13.871184349060059 Tokens per Sec: 14489.93147251165
Epoch Step: 165 / 730 Loss: 73.16134643554688 Tokens per Sec: 17059.187666685095
Epoch Step: 170 / 730 Loss: 4.741705894470215 Tokens per Sec: 17076.77267939378
Epoch Step: 175 / 730 Loss: 3.631533145904541 Tokens per Sec: 14868.830949300413
Epoch Step: 180 / 730 Loss: 7.094696044921875 Tokens per Sec: 19682.80849537195
Epoch Step: 185 / 730 Loss: 2.5709946155548096 Tokens per Sec: 17828.266609306578
Epoch Step: 190 / 730 Loss: 37.805274963378906 Tokens per Sec: 19169.40952184731
Epoch Step: 195 / 730 Loss: 6.37520170211792 Tokens per Sec: 17573.232982689515
Epoch Step: 200 / 730 Loss: 4.0948262214660645 Tokens per Sec: 19500.83319670919
Epoch Step: 205 / 730 Loss: 3.931819438934326 Tokens per Sec: 19104.490269151138
Epoch Step: 210 / 730 Loss: 5.277189254760742 Tokens per Sec: 21131.9454598994
Epoch Step: 215 / 730 Loss: 11.681559562683105 Tokens per Sec: 19321.26137681069
Epoch Step: 220 / 730 Loss: 12.604893684387207 Tokens per Sec: 19052.845909109605
Epoch Step: 225 / 730 Loss: 7.102867126464844 Tokens per Sec: 16160.803019311687
Epoch Step: 230 / 730 Loss: 9.132288932800293 Tokens per Sec: 19464.883692355164
Epoch Step: 235 / 730 Loss: 4.388150691986084 Tokens per Sec: 19526.974281288025
Epoch Step: 240 / 730 Loss: 5.212005615234375 Tokens per Sec: 17839.332843762284
Epoch Step: 245 / 730 Loss: 6.1011223793029785 Tokens per Sec: 15697.92678712176
Epoch Step: 250 / 730 Loss: 7.464615345001221 Tokens per Sec: 17901.952723507544
Epoch Step: 255 / 730 Loss: 7.835931301116943 Tokens per Sec: 15190.942245129825
Epoch Step: 260 / 730 Loss: 8.172473907470703 Tokens per Sec: 17152.731884565015
Epoch Step: 265 / 730 Loss: 50.979949951171875 Tokens per Sec: 20087.46075208875
Epoch Step: 270 / 730 Loss: 7.227812767028809 Tokens per Sec: 19669.051157911494
Epoch Step: 275 / 730 Loss: 11.2718505859375 Tokens per Sec: 16319.646954877357
Epoch Step: 280 / 730 Loss: 5.630486965179443 Tokens per Sec: 17614.936435678093
Epoch Step: 285 / 730 Loss: 8.231637954711914 Tokens per Sec: 16457.21790965567
Epoch Step: 290 / 730 Loss: 6.563842296600342 Tokens per Sec: 16403.435691249157
Epoch Step: 295 / 730 Loss: 13.56451416015625 Tokens per Sec: 17070.46734064197
Epoch Step: 300 / 730 Loss: 6.775811195373535 Tokens per Sec: 15326.711764918495
Epoch Step: 305 / 730 Loss: 2.6959569454193115 Tokens per Sec: 15734.313741735059
Epoch Step: 310 / 730 Loss: 11.669466018676758 Tokens per Sec: 20269.939961871733
Epoch Step: 315 / 730 Loss: 14.436135292053223 Tokens per Sec: 19646.096685982488
Epoch Step: 320 / 730 Loss: 8.08474349975586 Tokens per Sec: 13692.009239051167
Epoch Step: 325 / 730 Loss: 3.5836989879608154 Tokens per Sec: 16922.790146477426
Epoch Step: 330 / 730 Loss: 8.680354118347168 Tokens per Sec: 19519.486332833712
Epoch Step: 335 / 730 Loss: 5.36053466796875 Tokens per Sec: 16804.80274107043
Epoch Step: 340 / 730 Loss: 8.45732593536377 Tokens per Sec: 19381.908950777244
Epoch Step: 345 / 730 Loss: 2.7937848567962646 Tokens per Sec: 14419.87707182373
Epoch Step: 350 / 730 Loss: 3.556722640991211 Tokens per Sec: 19122.31395739692
Epoch Step: 355 / 730 Loss: 5.218262672424316 Tokens per Sec: 18762.945326760586
Epoch Step: 360 / 730 Loss: 7.355165958404541 Tokens per Sec: 18839.477325170847
Epoch Step: 365 / 730 Loss: 6.076237201690674 Tokens per Sec: 17884.27782372699
Epoch Step: 370 / 730 Loss: 5.562221050262451 Tokens per Sec: 18952.852517032647
Epoch Step: 375 / 730 Loss: 5.569052696228027 Tokens per Sec: 17072.22875845045
Epoch Step: 380 / 730 Loss: 37.72124481201172 Tokens per Sec: 13591.36445528475
Epoch Step: 385 / 730 Loss: 8.145277976989746 Tokens per Sec: 18780.285231913593
Epoch Step: 390 / 730 Loss: 7.622040271759033 Tokens per Sec: 19104.257982063114
Epoch Step: 395 / 730 Loss: 6.7487969398498535 Tokens per Sec: 17944.603645985804
Epoch Step: 400 / 730 Loss: 7.867929458618164 Tokens per Sec: 17167.07731595206
Epoch Step: 405 / 730 Loss: 3.146559476852417 Tokens per Sec: 18800.212126065526
Epoch Step: 410 / 730 Loss: 9.927367210388184 Tokens per Sec: 16703.9836736476
Epoch Step: 415 / 730 Loss: 7.974001407623291 Tokens per Sec: 17580.371067948963
Epoch Step: 420 / 730 Loss: 5.927104949951172 Tokens per Sec: 19668.850657433035
Epoch Step: 425 / 730 Loss: 7.193774223327637 Tokens per Sec: 18016.382498779843
Epoch Step: 430 / 730 Loss: 5.955932140350342 Tokens per Sec: 19464.086643616905
Epoch Step: 435 / 730 Loss: 9.625892639160156 Tokens per Sec: 15778.88607610883
Epoch Step: 440 / 730 Loss: 8.30872631072998 Tokens per Sec: 17568.857711309323
Epoch Step: 445 / 730 Loss: 22.858591079711914 Tokens per Sec: 19765.745693412253
Epoch Step: 450 / 730 Loss: 51.17218017578125 Tokens per Sec: 19094.33984749117
Epoch Step: 455 / 730 Loss: 2.348641872406006 Tokens per Sec: 18640.259013582567
Epoch Step: 460 / 730 Loss: 6.217015266418457 Tokens per Sec: 16410.499632406998
Epoch Step: 465 / 730 Loss: 71.6534194946289 Tokens per Sec: 16380.478779555811
Epoch Step: 470 / 730 Loss: 6.579431533813477 Tokens per Sec: 14700.294624384693
Epoch Step: 475 / 730 Loss: 9.699919700622559 Tokens per Sec: 14945.92560180658
Epoch Step: 480 / 730 Loss: 11.544398307800293 Tokens per Sec: 18704.364137119985
Epoch Step: 485 / 730 Loss: 7.053382873535156 Tokens per Sec: 19531.683898791744
Epoch Step: 490 / 730 Loss: 8.321422576904297 Tokens per Sec: 14797.330628435682
Epoch Step: 495 / 730 Loss: 3.9069437980651855 Tokens per Sec: 12940.635678033204
Epoch Step: 500 / 730 Loss: 11.357612609863281 Tokens per Sec: 20351.349776929168
Epoch Step: 505 / 730 Loss: 1.794360637664795 Tokens per Sec: 17697.5490212422
Epoch Step: 510 / 730 Loss: 9.18448257446289 Tokens per Sec: 19102.998350489226
Epoch Step: 515 / 730 Loss: 12.879886627197266 Tokens per Sec: 15364.671957660788
Epoch Step: 520 / 730 Loss: 7.7518486976623535 Tokens per Sec: 14538.47902004046
Epoch Step: 525 / 730 Loss: 3.409651279449463 Tokens per Sec: 18753.52475250724
Epoch Step: 530 / 730 Loss: 11.559928894042969 Tokens per Sec: 17302.68709805242
Epoch Step: 535 / 730 Loss: 7.291717052459717 Tokens per Sec: 20660.786958937046
Epoch Step: 540 / 730 Loss: 8.798416137695312 Tokens per Sec: 19534.292478418913
Epoch Step: 545 / 730 Loss: 2.0575485229492188 Tokens per Sec: 17479.181990344943
Epoch Step: 550 / 730 Loss: 3.4738173484802246 Tokens per Sec: 19167.51609280784
Epoch Step: 555 / 730 Loss: 9.00540542602539 Tokens per Sec: 17398.8495895037
Epoch Step: 560 / 730 Loss: 8.272798538208008 Tokens per Sec: 18311.604726416164
Epoch Step: 565 / 730 Loss: 11.55764389038086 Tokens per Sec: 17438.334076229497
Epoch Step: 570 / 730 Loss: 7.299445152282715 Tokens per Sec: 14434.871091266785
Epoch Step: 575 / 730 Loss: 3.120098352432251 Tokens per Sec: 18750.367867238492
Epoch Step: 580 / 730 Loss: 9.97743034362793 Tokens per Sec: 19141.679707203082
Epoch Step: 585 / 730 Loss: 5.883554935455322 Tokens per Sec: 16632.036000089898
Epoch Step: 590 / 730 Loss: 1.523951768875122 Tokens per Sec: 15836.546491076982
Epoch Step: 595 / 730 Loss: 6.793571472167969 Tokens per Sec: 18657.987013434427
Epoch Step: 600 / 730 Loss: 7.226291179656982 Tokens per Sec: 20665.329936857797
Epoch Step: 605 / 730 Loss: 6.397910118103027 Tokens per Sec: 16742.8234573869
Epoch Step: 610 / 730 Loss: 7.607037544250488 Tokens per Sec: 17596.891023209235
Epoch Step: 615 / 730 Loss: 1.6048123836517334 Tokens per Sec: 16620.616655707792
Epoch Step: 620 / 730 Loss: 9.029969215393066 Tokens per Sec: 18888.3558660508
Epoch Step: 625 / 730 Loss: 1.7811191082000732 Tokens per Sec: 19484.292017537755
Epoch Step: 630 / 730 Loss: 4.734954357147217 Tokens per Sec: 18147.651946931506
Epoch Step: 635 / 730 Loss: 3.7808730602264404 Tokens per Sec: 17258.295972757034
Epoch Step: 640 / 730 Loss: 48.754432678222656 Tokens per Sec: 17202.90427781969
Epoch Step: 645 / 730 Loss: 8.880049705505371 Tokens per Sec: 18895.439357339274
Epoch Step: 650 / 730 Loss: 10.352362632751465 Tokens per Sec: 18939.950159041724
Epoch Step: 655 / 730 Loss: 6.406644344329834 Tokens per Sec: 17313.497337794248
Epoch Step: 660 / 730 Loss: 8.636091232299805 Tokens per Sec: 17204.57240639832
Epoch Step: 665 / 730 Loss: 5.543805122375488 Tokens per Sec: 18613.4352768583
Epoch Step: 670 / 730 Loss: 6.803100109100342 Tokens per Sec: 18224.51632404211
Epoch Step: 675 / 730 Loss: 15.007372856140137 Tokens per Sec: 15756.005760727347
Epoch Step: 680 / 730 Loss: 4.263320446014404 Tokens per Sec: 17687.059011984533
Epoch Step: 685 / 730 Loss: 2.210165500640869 Tokens per Sec: 18705.42924028963
Epoch Step: 690 / 730 Loss: 12.964313507080078 Tokens per Sec: 15963.38035801455
Epoch Step: 695 / 730 Loss: 12.081891059875488 Tokens per Sec: 17271.612328837986
Epoch Step: 700 / 730 Loss: 82.70977020263672 Tokens per Sec: 18066.116653469788
Epoch Step: 705 / 730 Loss: 9.198617935180664 Tokens per Sec: 14803.064231281813
Epoch Step: 710 / 730 Loss: 49.153072357177734 Tokens per Sec: 16972.622707123563
Epoch Step: 715 / 730 Loss: 7.46391487121582 Tokens per Sec: 14695.968486659838
Epoch Step: 720 / 730 Loss: 11.22736644744873 Tokens per Sec: 15456.827743369682
Epoch Step: 725 / 730 Loss: 8.034036636352539 Tokens per Sec: 15456.764157048094
Epoch Step: 730 / 730 Loss: 18.72367286682129 Tokens per Sec: 13811.20623528882
Epoch ended with duration 0:01:19.714312
Train perplexity: 1.3973498520682441
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; } , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.339862
Validation perplexity: 1.362032462521172
Epoch 17 / 1000
Epoch Step: 5 / 730 Loss: 69.07991027832031 Tokens per Sec: 16796.196425651393
Epoch Step: 10 / 730 Loss: 24.490297317504883 Tokens per Sec: 19862.93645404032
Epoch Step: 15 / 730 Loss: 2.714210271835327 Tokens per Sec: 14626.217322084383
Epoch Step: 20 / 730 Loss: 5.308021545410156 Tokens per Sec: 17999.068257125913
Epoch Step: 25 / 730 Loss: 3.715101718902588 Tokens per Sec: 16408.037856714815
Epoch Step: 30 / 730 Loss: 3.75815749168396 Tokens per Sec: 14550.570078759958
Epoch Step: 35 / 730 Loss: 4.231623649597168 Tokens per Sec: 19923.41390172144
Epoch Step: 40 / 730 Loss: 6.7942328453063965 Tokens per Sec: 21647.851414608653
Epoch Step: 45 / 730 Loss: 2.617445707321167 Tokens per Sec: 16000.62060052126
Epoch Step: 50 / 730 Loss: 5.81243371963501 Tokens per Sec: 18725.52138399878
Epoch Step: 55 / 730 Loss: 9.389835357666016 Tokens per Sec: 16023.847212302902
Epoch Step: 60 / 730 Loss: 2.25019907951355 Tokens per Sec: 16279.118468686172
Epoch Step: 65 / 730 Loss: 2.87058424949646 Tokens per Sec: 17470.20415237909
Epoch Step: 70 / 730 Loss: 6.4803361892700195 Tokens per Sec: 16205.787603040992
Epoch Step: 75 / 730 Loss: 11.984701156616211 Tokens per Sec: 16665.055516107488
Epoch Step: 80 / 730 Loss: 7.463824272155762 Tokens per Sec: 19518.240810515512
Epoch Step: 85 / 730 Loss: 6.152653217315674 Tokens per Sec: 18756.104576383776
Epoch Step: 90 / 730 Loss: 6.219584941864014 Tokens per Sec: 18945.481750379124
Epoch Step: 95 / 730 Loss: 2.216294527053833 Tokens per Sec: 20993.07688855819
Epoch Step: 100 / 730 Loss: 4.660778522491455 Tokens per Sec: 18851.777010835867
Epoch Step: 105 / 730 Loss: 3.0330498218536377 Tokens per Sec: 16688.927724403537
Epoch Step: 110 / 730 Loss: 41.116432189941406 Tokens per Sec: 18422.14735578168
Epoch Step: 115 / 730 Loss: 9.473244667053223 Tokens per Sec: 18017.541748445623
Epoch Step: 120 / 730 Loss: 9.260400772094727 Tokens per Sec: 18630.295981916475
Epoch Step: 125 / 730 Loss: 6.376791000366211 Tokens per Sec: 20362.282625095642
Epoch Step: 130 / 730 Loss: 8.993361473083496 Tokens per Sec: 19165.127288767948
Epoch Step: 135 / 730 Loss: 8.23298454284668 Tokens per Sec: 17528.2058817444
Epoch Step: 140 / 730 Loss: 6.217612266540527 Tokens per Sec: 16016.752516833092
Epoch Step: 145 / 730 Loss: 4.623211860656738 Tokens per Sec: 13924.998874958912
Epoch Step: 150 / 730 Loss: 6.426119804382324 Tokens per Sec: 16672.018450260188
Epoch Step: 155 / 730 Loss: 9.743619918823242 Tokens per Sec: 20397.70426263585
Epoch Step: 160 / 730 Loss: 5.675386428833008 Tokens per Sec: 17933.444113083744
Epoch Step: 165 / 730 Loss: 7.584397792816162 Tokens per Sec: 17808.785042037896
Epoch Step: 170 / 730 Loss: 4.750314235687256 Tokens per Sec: 19789.515829473235
Epoch Step: 175 / 730 Loss: 7.348945140838623 Tokens per Sec: 13872.523332715842
Epoch Step: 180 / 730 Loss: 6.2246599197387695 Tokens per Sec: 18435.43814743739
Epoch Step: 185 / 730 Loss: 3.5251576900482178 Tokens per Sec: 20131.59574046628
Epoch Step: 190 / 730 Loss: 2.685633420944214 Tokens per Sec: 17821.25707684156
Epoch Step: 195 / 730 Loss: 2.9448282718658447 Tokens per Sec: 17453.40731381057
Epoch Step: 200 / 730 Loss: 6.011429786682129 Tokens per Sec: 17165.780390099848
Epoch Step: 205 / 730 Loss: 3.376588821411133 Tokens per Sec: 17543.414611056647
Epoch Step: 210 / 730 Loss: 3.4187088012695312 Tokens per Sec: 12682.627274988226
Epoch Step: 215 / 730 Loss: 10.672954559326172 Tokens per Sec: 18230.512493521685
Epoch Step: 220 / 730 Loss: 6.062933444976807 Tokens per Sec: 17924.50916475136
Epoch Step: 225 / 730 Loss: 8.687885284423828 Tokens per Sec: 18950.846618488384
Epoch Step: 230 / 730 Loss: 3.6848418712615967 Tokens per Sec: 17620.20264594421
Epoch Step: 235 / 730 Loss: 8.043676376342773 Tokens per Sec: 20751.607580371285
Epoch Step: 240 / 730 Loss: 5.559143543243408 Tokens per Sec: 16764.536223871284
Epoch Step: 245 / 730 Loss: 11.17957878112793 Tokens per Sec: 16099.29699336038
Epoch Step: 250 / 730 Loss: 6.2099151611328125 Tokens per Sec: 16597.59507722557
Epoch Step: 255 / 730 Loss: 4.545182228088379 Tokens per Sec: 17219.676216809796
Epoch Step: 260 / 730 Loss: 7.821915149688721 Tokens per Sec: 19699.922022495834
Epoch Step: 265 / 730 Loss: 8.378907203674316 Tokens per Sec: 17675.534968248314
Epoch Step: 270 / 730 Loss: 2.7306792736053467 Tokens per Sec: 16037.1031139994
Epoch Step: 275 / 730 Loss: 8.75554370880127 Tokens per Sec: 21823.312431755905
Epoch Step: 280 / 730 Loss: 4.3024396896362305 Tokens per Sec: 18632.18707315359
Epoch Step: 285 / 730 Loss: 2.83512806892395 Tokens per Sec: 18691.826344095884
Epoch Step: 290 / 730 Loss: 9.732142448425293 Tokens per Sec: 16897.969481605523
Epoch Step: 295 / 730 Loss: 12.788555145263672 Tokens per Sec: 17815.551396436884
Epoch Step: 300 / 730 Loss: 8.881451606750488 Tokens per Sec: 17448.378362126783
Epoch Step: 305 / 730 Loss: 8.317780494689941 Tokens per Sec: 17865.64678129325
Epoch Step: 310 / 730 Loss: 10.714982986450195 Tokens per Sec: 17617.876955928416
Epoch Step: 315 / 730 Loss: 4.893386363983154 Tokens per Sec: 16102.117988337575
Epoch Step: 320 / 730 Loss: 4.014289379119873 Tokens per Sec: 18624.93439436377
Epoch Step: 325 / 730 Loss: 6.63546895980835 Tokens per Sec: 17150.229967112402
Epoch Step: 330 / 730 Loss: 3.06388258934021 Tokens per Sec: 18717.62445438386
Epoch Step: 335 / 730 Loss: 10.13192367553711 Tokens per Sec: 19752.026430635746
Epoch Step: 340 / 730 Loss: 9.081665992736816 Tokens per Sec: 18035.41231847885
Epoch Step: 345 / 730 Loss: 4.8584465980529785 Tokens per Sec: 20387.28144739621
Epoch Step: 350 / 730 Loss: 7.724400520324707 Tokens per Sec: 13746.138001256675
Epoch Step: 355 / 730 Loss: 3.8430309295654297 Tokens per Sec: 17487.274028474232
Epoch Step: 360 / 730 Loss: 7.084720611572266 Tokens per Sec: 19966.5694149776
Epoch Step: 365 / 730 Loss: 6.951817035675049 Tokens per Sec: 17276.52046105507
Epoch Step: 370 / 730 Loss: 7.154511451721191 Tokens per Sec: 18258.28320736648
Epoch Step: 375 / 730 Loss: 4.844646453857422 Tokens per Sec: 14071.584886079378
Epoch Step: 380 / 730 Loss: 7.717953205108643 Tokens per Sec: 18787.705953488723
Epoch Step: 385 / 730 Loss: 10.116397857666016 Tokens per Sec: 19506.875943926803
Epoch Step: 390 / 730 Loss: 3.015876293182373 Tokens per Sec: 17268.491203341597
Epoch Step: 395 / 730 Loss: 8.172480583190918 Tokens per Sec: 17178.6459597075
Epoch Step: 400 / 730 Loss: 8.727657318115234 Tokens per Sec: 14955.771763159468
Epoch Step: 405 / 730 Loss: 1.1029237508773804 Tokens per Sec: 16704.14093958309
Epoch Step: 410 / 730 Loss: 4.220332622528076 Tokens per Sec: 17484.185551643408
Epoch Step: 415 / 730 Loss: 5.548596382141113 Tokens per Sec: 16384.686908325577
Epoch Step: 420 / 730 Loss: 6.577984809875488 Tokens per Sec: 16275.53398090032
Epoch Step: 425 / 730 Loss: 24.911352157592773 Tokens per Sec: 13495.899275642105
Epoch Step: 430 / 730 Loss: 4.620161533355713 Tokens per Sec: 16945.264406778275
Epoch Step: 435 / 730 Loss: 3.3742263317108154 Tokens per Sec: 20024.4787735314
Epoch Step: 440 / 730 Loss: 9.75949478149414 Tokens per Sec: 16664.59707029425
Epoch Step: 445 / 730 Loss: 7.215639114379883 Tokens per Sec: 17529.72959540235
Epoch Step: 450 / 730 Loss: 8.94667911529541 Tokens per Sec: 18508.1264613679
Epoch Step: 455 / 730 Loss: 7.030620098114014 Tokens per Sec: 19529.78489798716
Epoch Step: 460 / 730 Loss: 6.65678596496582 Tokens per Sec: 19764.187770397915
Epoch Step: 465 / 730 Loss: 3.02822208404541 Tokens per Sec: 14755.052831204845
Epoch Step: 470 / 730 Loss: 67.28169250488281 Tokens per Sec: 18576.557169141575
Epoch Step: 475 / 730 Loss: 4.54077672958374 Tokens per Sec: 19718.811824127573
Epoch Step: 480 / 730 Loss: 14.74262523651123 Tokens per Sec: 19287.985162324832
Epoch Step: 485 / 730 Loss: 10.679455757141113 Tokens per Sec: 18485.541180582506
Epoch Step: 490 / 730 Loss: 6.633459091186523 Tokens per Sec: 18453.42886311452
Epoch Step: 495 / 730 Loss: 5.830345153808594 Tokens per Sec: 16873.44765018867
Epoch Step: 500 / 730 Loss: 4.984607219696045 Tokens per Sec: 19239.09086187571
Epoch Step: 505 / 730 Loss: 6.4657816886901855 Tokens per Sec: 16620.90623616637
Epoch Step: 510 / 730 Loss: 5.580837726593018 Tokens per Sec: 17863.35009900136
Epoch Step: 515 / 730 Loss: 2.2111260890960693 Tokens per Sec: 17419.68824345574
Epoch Step: 520 / 730 Loss: 17.384742736816406 Tokens per Sec: 19159.155642059133
Epoch Step: 525 / 730 Loss: 8.829292297363281 Tokens per Sec: 17329.484539316225
Epoch Step: 530 / 730 Loss: 6.435997009277344 Tokens per Sec: 17608.623518191434
Epoch Step: 535 / 730 Loss: 2.669278860092163 Tokens per Sec: 18532.97766092338
Epoch Step: 540 / 730 Loss: 6.616238594055176 Tokens per Sec: 19283.721019184963
Epoch Step: 545 / 730 Loss: 2.8676857948303223 Tokens per Sec: 17505.43127513152
Epoch Step: 550 / 730 Loss: 6.367137908935547 Tokens per Sec: 18399.569512096245
Epoch Step: 555 / 730 Loss: 30.361082077026367 Tokens per Sec: 17964.77504891435
Epoch Step: 560 / 730 Loss: 5.937296390533447 Tokens per Sec: 17804.84118706071
Epoch Step: 565 / 730 Loss: 3.7271811962127686 Tokens per Sec: 16876.06494379305
Epoch Step: 570 / 730 Loss: 7.556471824645996 Tokens per Sec: 15273.923793909822
Epoch Step: 575 / 730 Loss: 2.017784833908081 Tokens per Sec: 17464.838711639648
Epoch Step: 580 / 730 Loss: 5.825345993041992 Tokens per Sec: 17995.925834149362
Epoch Step: 585 / 730 Loss: 17.706806182861328 Tokens per Sec: 17727.45689559846
Epoch Step: 590 / 730 Loss: 3.2260782718658447 Tokens per Sec: 18119.647338988943
Epoch Step: 595 / 730 Loss: 10.119255065917969 Tokens per Sec: 18429.807651245806
Epoch Step: 600 / 730 Loss: 5.227153778076172 Tokens per Sec: 15958.583605160457
Epoch Step: 605 / 730 Loss: 8.759224891662598 Tokens per Sec: 19034.3047880052
Epoch Step: 610 / 730 Loss: 2.251361608505249 Tokens per Sec: 17160.842533377046
Epoch Step: 615 / 730 Loss: 3.8008856773376465 Tokens per Sec: 19872.697838563687
Epoch Step: 620 / 730 Loss: 7.285956859588623 Tokens per Sec: 16651.688378655213
Epoch Step: 625 / 730 Loss: 10.373723983764648 Tokens per Sec: 19939.342393259503
Epoch Step: 630 / 730 Loss: 7.99455451965332 Tokens per Sec: 19149.454146172215
Epoch Step: 635 / 730 Loss: 5.457676887512207 Tokens per Sec: 17631.34375618335
Epoch Step: 640 / 730 Loss: 10.168778419494629 Tokens per Sec: 16665.725446407618
Epoch Step: 645 / 730 Loss: 9.901871681213379 Tokens per Sec: 19321.808970757334
Epoch Step: 650 / 730 Loss: 11.468701362609863 Tokens per Sec: 17639.824670883172
Epoch Step: 655 / 730 Loss: 5.248480796813965 Tokens per Sec: 20318.314451580416
Epoch Step: 660 / 730 Loss: 12.108575820922852 Tokens per Sec: 17285.356605295256
Epoch Step: 665 / 730 Loss: 12.51305866241455 Tokens per Sec: 18282.631360790685
Epoch Step: 670 / 730 Loss: 4.121220588684082 Tokens per Sec: 18314.290126531494
Epoch Step: 675 / 730 Loss: 6.377176284790039 Tokens per Sec: 15901.284171162832
Epoch Step: 680 / 730 Loss: 3.841745615005493 Tokens per Sec: 19921.890357626122
Epoch Step: 685 / 730 Loss: 8.220027923583984 Tokens per Sec: 15450.770496740774
Epoch Step: 690 / 730 Loss: 52.097110748291016 Tokens per Sec: 13209.558345825995
Epoch Step: 695 / 730 Loss: 3.7426745891571045 Tokens per Sec: 17601.957353290927
Epoch Step: 700 / 730 Loss: 1.3366196155548096 Tokens per Sec: 19269.01972509805
Epoch Step: 705 / 730 Loss: 9.62515926361084 Tokens per Sec: 15877.042666252624
Epoch Step: 710 / 730 Loss: 6.402296543121338 Tokens per Sec: 12717.491945444845
Epoch Step: 715 / 730 Loss: 3.9348020553588867 Tokens per Sec: 15841.812355978554
Epoch Step: 720 / 730 Loss: 4.121276378631592 Tokens per Sec: 14072.063067629444
Epoch Step: 725 / 730 Loss: 4.953347682952881 Tokens per Sec: 14370.610237158817
Epoch Step: 730 / 730 Loss: 10.31109619140625 Tokens per Sec: 16578.64542157683
Epoch ended with duration 0:01:19.463378
Train perplexity: 1.3866405012528773
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String > VAR_1 , java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.284948
Validation perplexity: 1.3473087732203637
Epoch 18 / 1000
Epoch Step: 5 / 730 Loss: 4.291679859161377 Tokens per Sec: 13332.25214120423
Epoch Step: 10 / 730 Loss: 49.697879791259766 Tokens per Sec: 17659.859430453285
Epoch Step: 15 / 730 Loss: 3.662285804748535 Tokens per Sec: 18210.353890459908
Epoch Step: 20 / 730 Loss: 3.2181129455566406 Tokens per Sec: 16423.37330185176
Epoch Step: 25 / 730 Loss: 4.613945960998535 Tokens per Sec: 19812.639563581164
Epoch Step: 30 / 730 Loss: 4.814426422119141 Tokens per Sec: 14750.785251168543
Epoch Step: 35 / 730 Loss: 48.2197380065918 Tokens per Sec: 19394.44788474995
Epoch Step: 40 / 730 Loss: 1.4142539501190186 Tokens per Sec: 17134.515135794747
Epoch Step: 45 / 730 Loss: 4.111880302429199 Tokens per Sec: 16005.006853268775
Epoch Step: 50 / 730 Loss: 3.4392852783203125 Tokens per Sec: 16593.146311142624
Epoch Step: 55 / 730 Loss: 4.630349159240723 Tokens per Sec: 17380.559238090613
Epoch Step: 60 / 730 Loss: 3.7831342220306396 Tokens per Sec: 18437.471354829933
Epoch Step: 65 / 730 Loss: 4.091515064239502 Tokens per Sec: 20644.22600777705
Epoch Step: 70 / 730 Loss: 6.103708744049072 Tokens per Sec: 18713.146968107976
Epoch Step: 75 / 730 Loss: 11.876849174499512 Tokens per Sec: 18584.945035016422
Epoch Step: 80 / 730 Loss: 4.913226127624512 Tokens per Sec: 18952.856010889776
Epoch Step: 85 / 730 Loss: 32.01528549194336 Tokens per Sec: 18165.97418596247
Epoch Step: 90 / 730 Loss: 5.055736541748047 Tokens per Sec: 18607.559311971752
Epoch Step: 95 / 730 Loss: 4.686611652374268 Tokens per Sec: 14048.783114051961
Epoch Step: 100 / 730 Loss: 2.4130265712738037 Tokens per Sec: 18064.71967108646
Epoch Step: 105 / 730 Loss: 8.18628215789795 Tokens per Sec: 18080.866731087608
Epoch Step: 110 / 730 Loss: 5.325702667236328 Tokens per Sec: 18927.70447701604
Epoch Step: 115 / 730 Loss: 4.953921794891357 Tokens per Sec: 19198.899034063346
Epoch Step: 120 / 730 Loss: 7.929418087005615 Tokens per Sec: 18026.44045147947
Epoch Step: 125 / 730 Loss: 12.164055824279785 Tokens per Sec: 16580.133048272055
Epoch Step: 130 / 730 Loss: 7.104759216308594 Tokens per Sec: 16579.733292270346
Epoch Step: 135 / 730 Loss: 3.4437782764434814 Tokens per Sec: 19719.74371152936
Epoch Step: 140 / 730 Loss: 2.688934564590454 Tokens per Sec: 20520.882592566668
Epoch Step: 145 / 730 Loss: 9.511263847351074 Tokens per Sec: 18431.900054713125
Epoch Step: 150 / 730 Loss: 7.243914604187012 Tokens per Sec: 19185.4704588484
Epoch Step: 155 / 730 Loss: 2.209000587463379 Tokens per Sec: 12379.528166708442
Epoch Step: 160 / 730 Loss: 4.135544300079346 Tokens per Sec: 16927.304386491716
Epoch Step: 165 / 730 Loss: 3.653729200363159 Tokens per Sec: 18288.062989661306
Epoch Step: 170 / 730 Loss: 3.887086868286133 Tokens per Sec: 18140.999975718758
Epoch Step: 175 / 730 Loss: 5.784530162811279 Tokens per Sec: 16759.013266401536
Epoch Step: 180 / 730 Loss: 8.110754013061523 Tokens per Sec: 17971.126176867685
Epoch Step: 185 / 730 Loss: 3.8399500846862793 Tokens per Sec: 11402.955160941923
Epoch Step: 190 / 730 Loss: 7.2636332511901855 Tokens per Sec: 16800.87092101691
Epoch Step: 195 / 730 Loss: 39.806880950927734 Tokens per Sec: 17139.175927146196
Epoch Step: 200 / 730 Loss: 10.090394020080566 Tokens per Sec: 17792.87474984689
Epoch Step: 205 / 730 Loss: 2.7158620357513428 Tokens per Sec: 19013.038649744045
Epoch Step: 210 / 730 Loss: 9.563363075256348 Tokens per Sec: 16183.388234639731
Epoch Step: 215 / 730 Loss: 35.37348556518555 Tokens per Sec: 18447.980274256326
Epoch Step: 220 / 730 Loss: 57.58537673950195 Tokens per Sec: 19509.92817165437
Epoch Step: 225 / 730 Loss: 32.27815628051758 Tokens per Sec: 16477.909011252745
Epoch Step: 230 / 730 Loss: 4.242217540740967 Tokens per Sec: 14521.104943567327
Epoch Step: 235 / 730 Loss: 2.8952090740203857 Tokens per Sec: 19218.52347793265
Epoch Step: 240 / 730 Loss: 13.037837982177734 Tokens per Sec: 17410.545744285788
Epoch Step: 245 / 730 Loss: 2.9546680450439453 Tokens per Sec: 14333.26451564813
Epoch Step: 250 / 730 Loss: 3.342909336090088 Tokens per Sec: 20594.979534561942
Epoch Step: 255 / 730 Loss: 7.260563850402832 Tokens per Sec: 16719.70779510022
Epoch Step: 260 / 730 Loss: 10.73879623413086 Tokens per Sec: 18820.291019610995
Epoch Step: 265 / 730 Loss: 9.094990730285645 Tokens per Sec: 18135.883721319144
Epoch Step: 270 / 730 Loss: 14.459321975708008 Tokens per Sec: 18440.084077424573
Epoch Step: 275 / 730 Loss: 18.280601501464844 Tokens per Sec: 20010.60711363527
Epoch Step: 280 / 730 Loss: 6.674925327301025 Tokens per Sec: 16531.2553545129
Epoch Step: 285 / 730 Loss: 2.0037477016448975 Tokens per Sec: 14132.685189624744
Epoch Step: 290 / 730 Loss: 7.439630508422852 Tokens per Sec: 17177.891254595877
Epoch Step: 295 / 730 Loss: 12.393425941467285 Tokens per Sec: 16461.621447597732
Epoch Step: 300 / 730 Loss: 6.351553916931152 Tokens per Sec: 17366.12020039051
Epoch Step: 305 / 730 Loss: 7.840085029602051 Tokens per Sec: 16515.47994224408
Epoch Step: 310 / 730 Loss: 5.892622470855713 Tokens per Sec: 18318.663629540646
Epoch Step: 315 / 730 Loss: 11.56809139251709 Tokens per Sec: 18658.353041993323
Epoch Step: 320 / 730 Loss: 3.551607608795166 Tokens per Sec: 18953.456401743177
Epoch Step: 325 / 730 Loss: 63.534393310546875 Tokens per Sec: 19626.201414973057
Epoch Step: 330 / 730 Loss: 6.588452339172363 Tokens per Sec: 18368.8687186201
Epoch Step: 335 / 730 Loss: 4.270884990692139 Tokens per Sec: 19617.23719628112
Epoch Step: 340 / 730 Loss: 35.96403503417969 Tokens per Sec: 17726.573764177803
Epoch Step: 345 / 730 Loss: 5.032258033752441 Tokens per Sec: 18967.340069888025
Epoch Step: 350 / 730 Loss: 12.982502937316895 Tokens per Sec: 17723.948597416653
Epoch Step: 355 / 730 Loss: 9.713479042053223 Tokens per Sec: 17875.873093195914
Epoch Step: 360 / 730 Loss: 9.165583610534668 Tokens per Sec: 13395.339637323508
Epoch Step: 365 / 730 Loss: 12.25423526763916 Tokens per Sec: 17746.887529004412
Epoch Step: 370 / 730 Loss: 9.362824440002441 Tokens per Sec: 18754.56829474011
Epoch Step: 375 / 730 Loss: 26.485454559326172 Tokens per Sec: 18594.56474986527
Epoch Step: 380 / 730 Loss: 46.88626480102539 Tokens per Sec: 16849.386954167556
Epoch Step: 385 / 730 Loss: 3.8191802501678467 Tokens per Sec: 14426.436451301272
Epoch Step: 390 / 730 Loss: 7.966869354248047 Tokens per Sec: 16489.53751632329
Epoch Step: 395 / 730 Loss: 43.430641174316406 Tokens per Sec: 16476.5442619748
Epoch Step: 400 / 730 Loss: 2.8479785919189453 Tokens per Sec: 19542.74239547988
Epoch Step: 405 / 730 Loss: 5.734523773193359 Tokens per Sec: 15671.599345874522
Epoch Step: 410 / 730 Loss: 9.34278392791748 Tokens per Sec: 14670.424320254844
Epoch Step: 415 / 730 Loss: 5.171977996826172 Tokens per Sec: 19937.743279073515
Epoch Step: 420 / 730 Loss: 58.086753845214844 Tokens per Sec: 17125.479539043157
Epoch Step: 425 / 730 Loss: 9.100046157836914 Tokens per Sec: 18267.50280371021
Epoch Step: 430 / 730 Loss: 10.530072212219238 Tokens per Sec: 18247.722714038166
Epoch Step: 435 / 730 Loss: 3.748044013977051 Tokens per Sec: 21129.500451545166
Epoch Step: 440 / 730 Loss: 8.695857048034668 Tokens per Sec: 15948.10565889478
Epoch Step: 445 / 730 Loss: 7.95477294921875 Tokens per Sec: 20736.029631113324
Epoch Step: 450 / 730 Loss: 3.2321484088897705 Tokens per Sec: 17707.338279867927
Epoch Step: 455 / 730 Loss: 8.460531234741211 Tokens per Sec: 18047.415192365494
Epoch Step: 460 / 730 Loss: 2.6739864349365234 Tokens per Sec: 17483.72916118674
Epoch Step: 465 / 730 Loss: 3.016144275665283 Tokens per Sec: 13841.064789352107
Epoch Step: 470 / 730 Loss: 14.51137924194336 Tokens per Sec: 17244.163787406134
Epoch Step: 475 / 730 Loss: 3.882321834564209 Tokens per Sec: 20026.11768720098
Epoch Step: 480 / 730 Loss: 3.534313917160034 Tokens per Sec: 14422.501270744377
Epoch Step: 485 / 730 Loss: 7.63197135925293 Tokens per Sec: 17427.63545440096
Epoch Step: 490 / 730 Loss: 11.323330879211426 Tokens per Sec: 20631.775779453856
Epoch Step: 495 / 730 Loss: 3.1514482498168945 Tokens per Sec: 17189.087995853373
Epoch Step: 500 / 730 Loss: 3.10778546333313 Tokens per Sec: 16835.046311757946
Epoch Step: 505 / 730 Loss: 12.130675315856934 Tokens per Sec: 17116.23096107748
Epoch Step: 510 / 730 Loss: 7.069743633270264 Tokens per Sec: 18460.0778339487
Epoch Step: 515 / 730 Loss: 33.604949951171875 Tokens per Sec: 15716.509673108592
Epoch Step: 520 / 730 Loss: 5.975573539733887 Tokens per Sec: 15641.358748940826
Epoch Step: 525 / 730 Loss: 9.857428550720215 Tokens per Sec: 15374.371760199092
Epoch Step: 530 / 730 Loss: 2.5861716270446777 Tokens per Sec: 18050.34991916109
Epoch Step: 535 / 730 Loss: 8.176813125610352 Tokens per Sec: 19722.247337930814
Epoch Step: 540 / 730 Loss: 2.4360976219177246 Tokens per Sec: 13131.767289878066
Epoch Step: 545 / 730 Loss: 6.335919380187988 Tokens per Sec: 15289.655817592846
Epoch Step: 550 / 730 Loss: 5.680509090423584 Tokens per Sec: 18842.929453859007
Epoch Step: 555 / 730 Loss: 1.0924955606460571 Tokens per Sec: 19055.137897337514
Epoch Step: 560 / 730 Loss: 6.566315174102783 Tokens per Sec: 20143.03253791406
Epoch Step: 565 / 730 Loss: 7.282200336456299 Tokens per Sec: 17431.83748675077
Epoch Step: 570 / 730 Loss: 11.24604606628418 Tokens per Sec: 20211.550946621
Epoch Step: 575 / 730 Loss: 4.989304065704346 Tokens per Sec: 19635.762146054018
Epoch Step: 580 / 730 Loss: 7.875042915344238 Tokens per Sec: 17252.284115841223
Epoch Step: 585 / 730 Loss: 57.34178924560547 Tokens per Sec: 17339.130711202986
Epoch Step: 590 / 730 Loss: 5.591797351837158 Tokens per Sec: 19512.33508767946
Epoch Step: 595 / 730 Loss: 12.243407249450684 Tokens per Sec: 17692.24029698504
Epoch Step: 600 / 730 Loss: 11.66776180267334 Tokens per Sec: 16773.234644370765
Epoch Step: 605 / 730 Loss: 2.5824732780456543 Tokens per Sec: 16374.48376098364
Epoch Step: 610 / 730 Loss: 5.657675743103027 Tokens per Sec: 21853.785081576418
Epoch Step: 615 / 730 Loss: 3.7327027320861816 Tokens per Sec: 18298.618557400845
Epoch Step: 620 / 730 Loss: 9.868833541870117 Tokens per Sec: 17661.572968263004
Epoch Step: 625 / 730 Loss: 6.588158130645752 Tokens per Sec: 17987.47684635576
Epoch Step: 630 / 730 Loss: 5.4031500816345215 Tokens per Sec: 17254.352434445977
Epoch Step: 635 / 730 Loss: 5.861023426055908 Tokens per Sec: 13184.27749317318
Epoch Step: 640 / 730 Loss: 9.700201988220215 Tokens per Sec: 19172.910246126863
Epoch Step: 645 / 730 Loss: 7.114171981811523 Tokens per Sec: 19633.838213827952
Epoch Step: 650 / 730 Loss: 56.65584182739258 Tokens per Sec: 17233.496875882323
Epoch Step: 655 / 730 Loss: 4.018229007720947 Tokens per Sec: 17005.442756201675
Epoch Step: 660 / 730 Loss: 5.490265369415283 Tokens per Sec: 18490.43526353945
Epoch Step: 665 / 730 Loss: 4.757846355438232 Tokens per Sec: 15702.405215363102
Epoch Step: 670 / 730 Loss: 7.943591117858887 Tokens per Sec: 21279.517343233252
Epoch Step: 675 / 730 Loss: 8.827840805053711 Tokens per Sec: 18982.49732109468
Epoch Step: 680 / 730 Loss: 2.6315529346466064 Tokens per Sec: 18678.5913516917
Epoch Step: 685 / 730 Loss: 5.541304588317871 Tokens per Sec: 14336.135059154327
Epoch Step: 690 / 730 Loss: 75.68818664550781 Tokens per Sec: 17040.698187739326
Epoch Step: 695 / 730 Loss: 5.989485740661621 Tokens per Sec: 16116.796162732162
Epoch Step: 700 / 730 Loss: 3.147986650466919 Tokens per Sec: 16107.824259706274
Epoch Step: 705 / 730 Loss: 6.556214332580566 Tokens per Sec: 14319.636945228875
Epoch Step: 710 / 730 Loss: 5.055669784545898 Tokens per Sec: 14883.606942715784
Epoch Step: 715 / 730 Loss: 6.592373371124268 Tokens per Sec: 17392.36308378019
Epoch Step: 720 / 730 Loss: 6.863985061645508 Tokens per Sec: 16189.301141734071
Epoch Step: 725 / 730 Loss: 6.342947483062744 Tokens per Sec: 15254.387450169017
Epoch Step: 730 / 730 Loss: 8.684118270874023 Tokens per Sec: 12939.486331423244
Epoch ended with duration 0:01:20.189765
Train perplexity: 1.3694801076707948
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String > VAR_2 ) { java.lang.String > METHOD_1 ( VAR_1 , VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.380320
Validation perplexity: 1.3696235609714662
Epoch 19 / 1000
Epoch Step: 5 / 730 Loss: 8.384329795837402 Tokens per Sec: 16023.401360584541
Epoch Step: 10 / 730 Loss: 5.26611852645874 Tokens per Sec: 16327.908773621326
Epoch Step: 15 / 730 Loss: 7.611610412597656 Tokens per Sec: 16510.892920050286
Epoch Step: 20 / 730 Loss: 5.432008743286133 Tokens per Sec: 14414.998881040705
Epoch Step: 25 / 730 Loss: 8.309657096862793 Tokens per Sec: 20074.97241097159
Epoch Step: 30 / 730 Loss: 2.516234874725342 Tokens per Sec: 15839.195318211216
Epoch Step: 35 / 730 Loss: 5.16249418258667 Tokens per Sec: 15585.859943322002
Epoch Step: 40 / 730 Loss: 6.242252349853516 Tokens per Sec: 17160.994217854644
Epoch Step: 45 / 730 Loss: 10.758869171142578 Tokens per Sec: 16811.287354403266
Epoch Step: 50 / 730 Loss: 4.554142951965332 Tokens per Sec: 19904.89431913197
Epoch Step: 55 / 730 Loss: 4.172658920288086 Tokens per Sec: 18697.397848073404
Epoch Step: 60 / 730 Loss: 3.866724967956543 Tokens per Sec: 17099.79202938633
Epoch Step: 65 / 730 Loss: 7.636318683624268 Tokens per Sec: 17331.57541284294
Epoch Step: 70 / 730 Loss: 17.673690795898438 Tokens per Sec: 21142.760422669537
Epoch Step: 75 / 730 Loss: 36.58590316772461 Tokens per Sec: 16064.914678770918
Epoch Step: 80 / 730 Loss: 4.571858882904053 Tokens per Sec: 17458.578647773826
Epoch Step: 85 / 730 Loss: 5.361134052276611 Tokens per Sec: 18640.66024216158
Epoch Step: 90 / 730 Loss: 10.444540023803711 Tokens per Sec: 17711.878482751432
Epoch Step: 95 / 730 Loss: 13.023408889770508 Tokens per Sec: 17398.34301851313
Epoch Step: 100 / 730 Loss: 5.612464427947998 Tokens per Sec: 20360.939000743463
Epoch Step: 105 / 730 Loss: 40.32410430908203 Tokens per Sec: 15313.606295177338
Epoch Step: 110 / 730 Loss: 2.9036240577697754 Tokens per Sec: 15401.048414178656
Epoch Step: 115 / 730 Loss: 9.122221946716309 Tokens per Sec: 18353.916352152813
Epoch Step: 120 / 730 Loss: 11.167463302612305 Tokens per Sec: 18877.723843855663
Epoch Step: 125 / 730 Loss: 8.523908615112305 Tokens per Sec: 17873.88801696272
Epoch Step: 130 / 730 Loss: 4.360851287841797 Tokens per Sec: 13458.567668278103
Epoch Step: 135 / 730 Loss: 5.962693214416504 Tokens per Sec: 17611.852262094144
Epoch Step: 140 / 730 Loss: 5.540935039520264 Tokens per Sec: 19152.94494621131
Epoch Step: 145 / 730 Loss: 7.152377128601074 Tokens per Sec: 18511.860231180784
Epoch Step: 150 / 730 Loss: 11.056087493896484 Tokens per Sec: 19852.933778341874
Epoch Step: 155 / 730 Loss: 2.8552842140197754 Tokens per Sec: 15909.06910611187
Epoch Step: 160 / 730 Loss: 7.767838954925537 Tokens per Sec: 15904.142776137876
Epoch Step: 165 / 730 Loss: 11.981242179870605 Tokens per Sec: 20619.90618032641
Epoch Step: 170 / 730 Loss: 4.876918315887451 Tokens per Sec: 19144.702747336767
Epoch Step: 175 / 730 Loss: 2.937051296234131 Tokens per Sec: 18648.914396684075
Epoch Step: 180 / 730 Loss: 2.628021478652954 Tokens per Sec: 16914.04540264882
Epoch Step: 185 / 730 Loss: 2.825363874435425 Tokens per Sec: 17653.372370490117
Epoch Step: 190 / 730 Loss: 6.280866622924805 Tokens per Sec: 14323.619702880707
Epoch Step: 195 / 730 Loss: 4.750483989715576 Tokens per Sec: 19069.908383259182
Epoch Step: 200 / 730 Loss: 3.2718539237976074 Tokens per Sec: 15686.185794429633
Epoch Step: 205 / 730 Loss: 4.391038417816162 Tokens per Sec: 20262.23293022515
Epoch Step: 210 / 730 Loss: 4.793703079223633 Tokens per Sec: 17705.486544061663
Epoch Step: 215 / 730 Loss: 7.375906467437744 Tokens per Sec: 15959.548536556307
Epoch Step: 220 / 730 Loss: 64.09412384033203 Tokens per Sec: 20266.30699586382
Epoch Step: 225 / 730 Loss: 1.5218724012374878 Tokens per Sec: 17393.39836383146
Epoch Step: 230 / 730 Loss: 23.072494506835938 Tokens per Sec: 18710.906775564017
Epoch Step: 235 / 730 Loss: 7.870919704437256 Tokens per Sec: 19549.051380390832
Epoch Step: 240 / 730 Loss: 6.59257698059082 Tokens per Sec: 16053.473209520716
Epoch Step: 245 / 730 Loss: 10.534721374511719 Tokens per Sec: 18851.472001436636
Epoch Step: 250 / 730 Loss: 19.270692825317383 Tokens per Sec: 17949.432405059342
Epoch Step: 255 / 730 Loss: 12.309982299804688 Tokens per Sec: 18043.56608542333
Epoch Step: 260 / 730 Loss: 3.1943678855895996 Tokens per Sec: 16257.390598525626
Epoch Step: 265 / 730 Loss: 5.756811141967773 Tokens per Sec: 18536.6087484424
Epoch Step: 270 / 730 Loss: 5.188085556030273 Tokens per Sec: 17798.757875018488
Epoch Step: 275 / 730 Loss: 4.068667411804199 Tokens per Sec: 17491.826476054863
Epoch Step: 280 / 730 Loss: 2.7544198036193848 Tokens per Sec: 15598.108591582173
Epoch Step: 285 / 730 Loss: 4.399112701416016 Tokens per Sec: 13145.352619903933
Epoch Step: 290 / 730 Loss: 4.645461559295654 Tokens per Sec: 13849.914902198023
Epoch Step: 295 / 730 Loss: 7.49090051651001 Tokens per Sec: 18702.2049672729
Epoch Step: 300 / 730 Loss: 2.426161050796509 Tokens per Sec: 17477.440962811983
Epoch Step: 305 / 730 Loss: 2.1360936164855957 Tokens per Sec: 16116.070595950043
Epoch Step: 310 / 730 Loss: 50.76582336425781 Tokens per Sec: 19315.73021938981
Epoch Step: 315 / 730 Loss: 4.488417625427246 Tokens per Sec: 19321.741901716425
Epoch Step: 320 / 730 Loss: 11.785531997680664 Tokens per Sec: 16039.697711320074
Epoch Step: 325 / 730 Loss: 1.2223176956176758 Tokens per Sec: 18128.78119372482
Epoch Step: 330 / 730 Loss: 6.724073886871338 Tokens per Sec: 18324.11295455127
Epoch Step: 335 / 730 Loss: 3.854677200317383 Tokens per Sec: 16807.9745217601
Epoch Step: 340 / 730 Loss: 2.413761615753174 Tokens per Sec: 16691.083991797284
Epoch Step: 345 / 730 Loss: 25.16926383972168 Tokens per Sec: 20802.26012418307
Epoch Step: 350 / 730 Loss: 11.292071342468262 Tokens per Sec: 16656.025300286277
Epoch Step: 355 / 730 Loss: 2.2613637447357178 Tokens per Sec: 15334.7903038971
Epoch Step: 360 / 730 Loss: 5.85463809967041 Tokens per Sec: 13348.570056425104
Epoch Step: 365 / 730 Loss: 8.79813289642334 Tokens per Sec: 17293.005405267144
Epoch Step: 370 / 730 Loss: 4.914754390716553 Tokens per Sec: 12634.380416984948
Epoch Step: 375 / 730 Loss: 8.14326000213623 Tokens per Sec: 20870.220703317693
Epoch Step: 380 / 730 Loss: 9.15700912475586 Tokens per Sec: 17578.090644481053
Epoch Step: 385 / 730 Loss: 27.107540130615234 Tokens per Sec: 17190.504691431957
Epoch Step: 390 / 730 Loss: 4.805757522583008 Tokens per Sec: 18278.260336293242
Epoch Step: 395 / 730 Loss: 8.43073558807373 Tokens per Sec: 18080.349268460042
Epoch Step: 400 / 730 Loss: 5.164119243621826 Tokens per Sec: 17905.541075414294
Epoch Step: 405 / 730 Loss: 4.987082481384277 Tokens per Sec: 18970.52422822196
Epoch Step: 410 / 730 Loss: 2.491459369659424 Tokens per Sec: 16746.179555729046
Epoch Step: 415 / 730 Loss: 1.6591105461120605 Tokens per Sec: 19075.3568743855
Epoch Step: 420 / 730 Loss: 9.009265899658203 Tokens per Sec: 19093.211253606598
Epoch Step: 425 / 730 Loss: 39.6630973815918 Tokens per Sec: 20449.239831513427
Epoch Step: 430 / 730 Loss: 2.2259602546691895 Tokens per Sec: 18281.475465515454
Epoch Step: 435 / 730 Loss: 3.580371379852295 Tokens per Sec: 17105.104693657937
Epoch Step: 440 / 730 Loss: 1.5394229888916016 Tokens per Sec: 19028.70532533103
Epoch Step: 445 / 730 Loss: 2.0718483924865723 Tokens per Sec: 17306.011612326933
Epoch Step: 450 / 730 Loss: 4.175392150878906 Tokens per Sec: 14914.664609355625
Epoch Step: 455 / 730 Loss: 8.790493965148926 Tokens per Sec: 17981.722241065836
Epoch Step: 460 / 730 Loss: 4.737814426422119 Tokens per Sec: 15147.243495526483
Epoch Step: 465 / 730 Loss: 4.534082412719727 Tokens per Sec: 17766.862706195643
Epoch Step: 470 / 730 Loss: 8.711544036865234 Tokens per Sec: 15325.02122044798
Epoch Step: 475 / 730 Loss: 3.1466479301452637 Tokens per Sec: 18440.410048557012
Epoch Step: 480 / 730 Loss: 3.0182487964630127 Tokens per Sec: 18252.12911979666
Epoch Step: 485 / 730 Loss: 6.2558512687683105 Tokens per Sec: 14054.274259595742
Epoch Step: 490 / 730 Loss: 2.862379312515259 Tokens per Sec: 19021.480805229814
Epoch Step: 495 / 730 Loss: 8.829802513122559 Tokens per Sec: 20949.875058992788
Epoch Step: 500 / 730 Loss: 50.246578216552734 Tokens per Sec: 18187.758934894522
Epoch Step: 505 / 730 Loss: 9.073403358459473 Tokens per Sec: 17764.30019164431
Epoch Step: 510 / 730 Loss: 5.8654866218566895 Tokens per Sec: 18733.950661558916
Epoch Step: 515 / 730 Loss: 7.877650737762451 Tokens per Sec: 18485.58991267428
Epoch Step: 520 / 730 Loss: 7.694879531860352 Tokens per Sec: 17225.81979076808
Epoch Step: 525 / 730 Loss: 5.570040702819824 Tokens per Sec: 18206.784392899724
Epoch Step: 530 / 730 Loss: 28.037248611450195 Tokens per Sec: 19470.02321092903
Epoch Step: 535 / 730 Loss: 4.167160987854004 Tokens per Sec: 18467.255702490555
Epoch Step: 540 / 730 Loss: 47.848575592041016 Tokens per Sec: 16810.074312745306
Epoch Step: 545 / 730 Loss: 5.411204814910889 Tokens per Sec: 19929.647481941047
Epoch Step: 550 / 730 Loss: 7.673410892486572 Tokens per Sec: 17077.62196567664
Epoch Step: 555 / 730 Loss: 4.972790241241455 Tokens per Sec: 17469.35489269414
Epoch Step: 560 / 730 Loss: 1.333815574645996 Tokens per Sec: 18090.387723599382
Epoch Step: 565 / 730 Loss: 7.952603816986084 Tokens per Sec: 16388.370410216918
Epoch Step: 570 / 730 Loss: 4.103506565093994 Tokens per Sec: 18563.059378418788
Epoch Step: 575 / 730 Loss: 4.868895530700684 Tokens per Sec: 16952.15194374799
Epoch Step: 580 / 730 Loss: 5.132148742675781 Tokens per Sec: 16785.109586618666
Epoch Step: 585 / 730 Loss: 10.969136238098145 Tokens per Sec: 17185.572472050928
Epoch Step: 590 / 730 Loss: 4.739330291748047 Tokens per Sec: 13393.32327560023
Epoch Step: 595 / 730 Loss: 67.7710952758789 Tokens per Sec: 18281.644872334666
Epoch Step: 600 / 730 Loss: 9.651522636413574 Tokens per Sec: 16299.27142481817
Epoch Step: 605 / 730 Loss: 5.776301383972168 Tokens per Sec: 15840.061938820698
Epoch Step: 610 / 730 Loss: 3.6108760833740234 Tokens per Sec: 17835.71801794089
Epoch Step: 615 / 730 Loss: 4.12623405456543 Tokens per Sec: 16037.39989887153
Epoch Step: 620 / 730 Loss: 8.96833324432373 Tokens per Sec: 17610.355799297777
Epoch Step: 625 / 730 Loss: 10.091184616088867 Tokens per Sec: 17500.226802882407
Epoch Step: 630 / 730 Loss: 10.700303077697754 Tokens per Sec: 21226.616198216434
Epoch Step: 635 / 730 Loss: 2.5330934524536133 Tokens per Sec: 17647.90061332043
Epoch Step: 640 / 730 Loss: 6.430306434631348 Tokens per Sec: 19771.843630446598
Epoch Step: 645 / 730 Loss: 51.928131103515625 Tokens per Sec: 14570.51096499813
Epoch Step: 650 / 730 Loss: 5.618879318237305 Tokens per Sec: 16590.511505420873
Epoch Step: 655 / 730 Loss: 5.755680084228516 Tokens per Sec: 18814.603032091472
Epoch Step: 660 / 730 Loss: 4.426791667938232 Tokens per Sec: 15326.12221470632
Epoch Step: 665 / 730 Loss: 3.8686702251434326 Tokens per Sec: 19360.29360198643
Epoch Step: 670 / 730 Loss: 10.15516471862793 Tokens per Sec: 19435.891765706016
Epoch Step: 675 / 730 Loss: 7.2777838706970215 Tokens per Sec: 15382.479496372269
Epoch Step: 680 / 730 Loss: 8.02822494506836 Tokens per Sec: 16683.62857567258
Epoch Step: 685 / 730 Loss: 9.100455284118652 Tokens per Sec: 16864.285922010316
Epoch Step: 690 / 730 Loss: 2.3642001152038574 Tokens per Sec: 17186.921986109413
Epoch Step: 695 / 730 Loss: 1.5125880241394043 Tokens per Sec: 19897.147165917195
Epoch Step: 700 / 730 Loss: 4.558408260345459 Tokens per Sec: 17040.70420494196
Epoch Step: 705 / 730 Loss: 5.124529838562012 Tokens per Sec: 15394.535295279169
Epoch Step: 710 / 730 Loss: 15.2320556640625 Tokens per Sec: 12997.380292953829
Epoch Step: 715 / 730 Loss: 3.3071448802948 Tokens per Sec: 16380.085988147013
Epoch Step: 720 / 730 Loss: 9.720077514648438 Tokens per Sec: 14115.92774719378
Epoch Step: 725 / 730 Loss: 5.94935417175293 Tokens per Sec: 15361.91360103622
Epoch Step: 730 / 730 Loss: 8.213216781616211 Tokens per Sec: 16469.09022171229
Epoch ended with duration 0:01:20.480020
Train perplexity: 1.3286227713681436
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String > VAR_1 , java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.354851
Validation perplexity: 1.3445421159394946
Model saved best_on_validation!
Epoch 20 / 1000
Epoch Step: 5 / 730 Loss: 3.6966707706451416 Tokens per Sec: 14369.425536503908
Epoch Step: 10 / 730 Loss: 4.073495864868164 Tokens per Sec: 17704.58004908853
Epoch Step: 15 / 730 Loss: 4.269296646118164 Tokens per Sec: 17147.92167358938
Epoch Step: 20 / 730 Loss: 44.300926208496094 Tokens per Sec: 21344.637569191065
Epoch Step: 25 / 730 Loss: 2.2678399085998535 Tokens per Sec: 18582.526310143774
Epoch Step: 30 / 730 Loss: 4.903797149658203 Tokens per Sec: 16734.39780622565
Epoch Step: 35 / 730 Loss: 5.957469940185547 Tokens per Sec: 20093.97117095259
Epoch Step: 40 / 730 Loss: 9.286177635192871 Tokens per Sec: 16432.9431980486
Epoch Step: 45 / 730 Loss: 4.481566905975342 Tokens per Sec: 14991.989970721907
Epoch Step: 50 / 730 Loss: 3.4427199363708496 Tokens per Sec: 19957.3533070424
Epoch Step: 55 / 730 Loss: 12.338056564331055 Tokens per Sec: 19276.3483887924
Epoch Step: 60 / 730 Loss: 4.654179096221924 Tokens per Sec: 17895.162147365507
Epoch Step: 65 / 730 Loss: 2.53348708152771 Tokens per Sec: 18786.739850135193
Epoch Step: 70 / 730 Loss: 25.92156982421875 Tokens per Sec: 17702.45827641032
Epoch Step: 75 / 730 Loss: 1.8245617151260376 Tokens per Sec: 16460.526640181874
Epoch Step: 80 / 730 Loss: 4.456877708435059 Tokens per Sec: 17051.222294141586
Epoch Step: 85 / 730 Loss: 2.4135375022888184 Tokens per Sec: 20833.84205910762
Epoch Step: 90 / 730 Loss: 4.233771800994873 Tokens per Sec: 18830.32280501343
Epoch Step: 95 / 730 Loss: 9.041346549987793 Tokens per Sec: 14812.768373677432
Epoch Step: 100 / 730 Loss: 4.439758777618408 Tokens per Sec: 14969.25875338998
Epoch Step: 105 / 730 Loss: 8.970433235168457 Tokens per Sec: 18424.32266079352
Epoch Step: 110 / 730 Loss: 7.7864203453063965 Tokens per Sec: 18802.65873285878
Epoch Step: 115 / 730 Loss: 2.6148061752319336 Tokens per Sec: 16220.64286127052
Epoch Step: 120 / 730 Loss: 6.625630855560303 Tokens per Sec: 19458.95283632634
Epoch Step: 125 / 730 Loss: 49.772315979003906 Tokens per Sec: 17405.186187891486
Epoch Step: 130 / 730 Loss: 6.534534931182861 Tokens per Sec: 17952.872900635404
Epoch Step: 135 / 730 Loss: 8.064760208129883 Tokens per Sec: 16952.55081455178
Epoch Step: 140 / 730 Loss: 6.116236686706543 Tokens per Sec: 17189.68107855316
Epoch Step: 145 / 730 Loss: 8.141186714172363 Tokens per Sec: 16153.923970335758
Epoch Step: 150 / 730 Loss: 7.594480991363525 Tokens per Sec: 16645.15282026733
Epoch Step: 155 / 730 Loss: 4.0498528480529785 Tokens per Sec: 17752.975145436016
Epoch Step: 160 / 730 Loss: 5.811357021331787 Tokens per Sec: 18103.065190609777
Epoch Step: 165 / 730 Loss: 6.7407331466674805 Tokens per Sec: 20066.79084632626
Epoch Step: 170 / 730 Loss: 13.34897232055664 Tokens per Sec: 14820.747532613215
Epoch Step: 175 / 730 Loss: 77.91072845458984 Tokens per Sec: 17451.25077676621
Epoch Step: 180 / 730 Loss: 13.659912109375 Tokens per Sec: 15471.873319800012
Epoch Step: 185 / 730 Loss: 22.032310485839844 Tokens per Sec: 19781.2909942578
Epoch Step: 190 / 730 Loss: 2.614673614501953 Tokens per Sec: 20454.55346812035
Epoch Step: 195 / 730 Loss: 7.537081241607666 Tokens per Sec: 18736.85475363488
Epoch Step: 200 / 730 Loss: 18.151691436767578 Tokens per Sec: 15174.605707198258
Epoch Step: 205 / 730 Loss: 33.375240325927734 Tokens per Sec: 16869.535728243376
Epoch Step: 210 / 730 Loss: 5.630344390869141 Tokens per Sec: 15237.366058155518
Epoch Step: 215 / 730 Loss: 2.411796808242798 Tokens per Sec: 18571.87359836901
Epoch Step: 220 / 730 Loss: 5.247772693634033 Tokens per Sec: 16815.95106766935
Epoch Step: 225 / 730 Loss: 4.234457492828369 Tokens per Sec: 16373.291717045116
Epoch Step: 230 / 730 Loss: 6.106626510620117 Tokens per Sec: 13800.352687921128
Epoch Step: 235 / 730 Loss: 5.939963340759277 Tokens per Sec: 18740.41898889196
Epoch Step: 240 / 730 Loss: 8.715523719787598 Tokens per Sec: 18288.595108618978
Epoch Step: 245 / 730 Loss: 9.516578674316406 Tokens per Sec: 17121.54424070469
Epoch Step: 250 / 730 Loss: 5.920046806335449 Tokens per Sec: 18419.435752293557
Epoch Step: 255 / 730 Loss: 10.518852233886719 Tokens per Sec: 21572.04838762662
Epoch Step: 260 / 730 Loss: 8.484850883483887 Tokens per Sec: 16799.204795578535
Epoch Step: 265 / 730 Loss: 8.218255043029785 Tokens per Sec: 16071.48145821984
Epoch Step: 270 / 730 Loss: 8.386920928955078 Tokens per Sec: 20191.381816099452
Epoch Step: 275 / 730 Loss: 1.5834287405014038 Tokens per Sec: 17858.89909045225
Epoch Step: 280 / 730 Loss: 2.632581949234009 Tokens per Sec: 13674.752421878939
Epoch Step: 285 / 730 Loss: 2.6565163135528564 Tokens per Sec: 16618.20867626283
Epoch Step: 290 / 730 Loss: 51.836238861083984 Tokens per Sec: 15132.65484838771
Epoch Step: 295 / 730 Loss: 3.6759307384490967 Tokens per Sec: 20452.385596696808
Epoch Step: 300 / 730 Loss: 5.499018669128418 Tokens per Sec: 21584.74876418934
Epoch Step: 305 / 730 Loss: 3.687673807144165 Tokens per Sec: 15974.719070650233
Epoch Step: 310 / 730 Loss: 1.7460713386535645 Tokens per Sec: 18812.979994498186
Epoch Step: 315 / 730 Loss: 8.06100082397461 Tokens per Sec: 19202.05348451446
Epoch Step: 320 / 730 Loss: 4.480541706085205 Tokens per Sec: 17716.987214160592
Epoch Step: 325 / 730 Loss: 4.886764049530029 Tokens per Sec: 18305.933387994795
Epoch Step: 330 / 730 Loss: 10.901787757873535 Tokens per Sec: 20063.369681313496
Epoch Step: 335 / 730 Loss: 2.0473415851593018 Tokens per Sec: 18119.552136347498
Epoch Step: 340 / 730 Loss: 8.01619815826416 Tokens per Sec: 19683.528948255018
Epoch Step: 345 / 730 Loss: 7.846678733825684 Tokens per Sec: 17036.74055491727
Epoch Step: 350 / 730 Loss: 7.722404956817627 Tokens per Sec: 19662.896431615445
Epoch Step: 355 / 730 Loss: 4.384033203125 Tokens per Sec: 18222.333535293674
Epoch Step: 360 / 730 Loss: 4.285445213317871 Tokens per Sec: 17953.5715811007
Epoch Step: 365 / 730 Loss: 3.074986696243286 Tokens per Sec: 17277.344490981915
Epoch Step: 370 / 730 Loss: 9.461701393127441 Tokens per Sec: 18841.156560979176
Epoch Step: 375 / 730 Loss: 6.709290504455566 Tokens per Sec: 16582.84558618883
Epoch Step: 380 / 730 Loss: 5.516302108764648 Tokens per Sec: 15625.639137310267
Epoch Step: 385 / 730 Loss: 0.9053913354873657 Tokens per Sec: 17528.27333462158
Epoch Step: 390 / 730 Loss: 4.212142467498779 Tokens per Sec: 14282.498305603802
Epoch Step: 395 / 730 Loss: 6.159912586212158 Tokens per Sec: 19082.119257585757
Epoch Step: 400 / 730 Loss: 8.125875473022461 Tokens per Sec: 20420.577603048234
Epoch Step: 405 / 730 Loss: 11.548723220825195 Tokens per Sec: 17329.909757258367
Epoch Step: 410 / 730 Loss: 1.4650776386260986 Tokens per Sec: 13688.056540568075
Epoch Step: 415 / 730 Loss: 7.981668472290039 Tokens per Sec: 15877.882284463047
Epoch Step: 420 / 730 Loss: 9.750092506408691 Tokens per Sec: 18695.28745165896
Epoch Step: 425 / 730 Loss: 2.969442367553711 Tokens per Sec: 19899.198745672966
Epoch Step: 430 / 730 Loss: 2.1007349491119385 Tokens per Sec: 14939.87228777187
Epoch Step: 435 / 730 Loss: 2.8994221687316895 Tokens per Sec: 19143.593763412235
Epoch Step: 440 / 730 Loss: 2.311249256134033 Tokens per Sec: 17584.877967945176
Epoch Step: 445 / 730 Loss: 7.261870384216309 Tokens per Sec: 17744.981085696403
Epoch Step: 450 / 730 Loss: 9.674956321716309 Tokens per Sec: 16956.485331660166
Epoch Step: 455 / 730 Loss: 3.3398423194885254 Tokens per Sec: 17773.671312542632
Epoch Step: 460 / 730 Loss: 3.046074390411377 Tokens per Sec: 18701.871802778605
Epoch Step: 465 / 730 Loss: 8.572985649108887 Tokens per Sec: 15041.332481061712
Epoch Step: 470 / 730 Loss: 5.8159074783325195 Tokens per Sec: 16141.778179518447
Epoch Step: 475 / 730 Loss: 8.760594367980957 Tokens per Sec: 19600.764804914434
Epoch Step: 480 / 730 Loss: 4.711280345916748 Tokens per Sec: 17950.450073338703
Epoch Step: 485 / 730 Loss: 2.8798367977142334 Tokens per Sec: 18476.04671548358
Epoch Step: 490 / 730 Loss: 6.141650676727295 Tokens per Sec: 19881.736131724425
Epoch Step: 495 / 730 Loss: 59.83711242675781 Tokens per Sec: 18785.405034111638
Epoch Step: 500 / 730 Loss: 9.351767539978027 Tokens per Sec: 19479.307836754335
Epoch Step: 505 / 730 Loss: 9.883399963378906 Tokens per Sec: 16504.215687219235
Epoch Step: 510 / 730 Loss: 54.766971588134766 Tokens per Sec: 17225.68900475288
Epoch Step: 515 / 730 Loss: 6.228264808654785 Tokens per Sec: 17439.203296738186
Epoch Step: 520 / 730 Loss: 1.0350596904754639 Tokens per Sec: 16497.812387484337
Epoch Step: 525 / 730 Loss: 26.923192977905273 Tokens per Sec: 19864.070733276334
Epoch Step: 530 / 730 Loss: 4.983639240264893 Tokens per Sec: 15597.892636617287
Epoch Step: 535 / 730 Loss: 4.348487377166748 Tokens per Sec: 15020.600095390117
Epoch Step: 540 / 730 Loss: 6.310419082641602 Tokens per Sec: 17838.746227716052
Epoch Step: 545 / 730 Loss: 6.613265514373779 Tokens per Sec: 20544.847056210496
Epoch Step: 550 / 730 Loss: 7.089906215667725 Tokens per Sec: 18257.833736149576
Epoch Step: 555 / 730 Loss: 8.128880500793457 Tokens per Sec: 18211.61151602359
Epoch Step: 560 / 730 Loss: 3.9104487895965576 Tokens per Sec: 16311.206472332942
Epoch Step: 565 / 730 Loss: 7.223459243774414 Tokens per Sec: 15824.545179479683
Epoch Step: 570 / 730 Loss: 12.463729858398438 Tokens per Sec: 18718.48733376918
Epoch Step: 575 / 730 Loss: 7.004755973815918 Tokens per Sec: 17916.738696401502
Epoch Step: 580 / 730 Loss: 5.616238117218018 Tokens per Sec: 18667.81559165773
Epoch Step: 585 / 730 Loss: 4.303971767425537 Tokens per Sec: 20261.739263764015
Epoch Step: 590 / 730 Loss: 5.130000591278076 Tokens per Sec: 18704.281042049475
Epoch Step: 595 / 730 Loss: 5.769095420837402 Tokens per Sec: 18395.3515214128
Epoch Step: 600 / 730 Loss: 2.9918200969696045 Tokens per Sec: 19719.244403648707
Epoch Step: 605 / 730 Loss: 6.439582347869873 Tokens per Sec: 17730.665311182333
Epoch Step: 610 / 730 Loss: 6.167926788330078 Tokens per Sec: 15107.545903538734
Epoch Step: 615 / 730 Loss: 5.5599212646484375 Tokens per Sec: 17905.851150926435
Epoch Step: 620 / 730 Loss: 2.966695547103882 Tokens per Sec: 19708.456610267607
Epoch Step: 625 / 730 Loss: 7.253863334655762 Tokens per Sec: 14324.333456873064
Epoch Step: 630 / 730 Loss: 10.926258087158203 Tokens per Sec: 17367.92579927213
Epoch Step: 635 / 730 Loss: 5.519828796386719 Tokens per Sec: 17766.67116675475
Epoch Step: 640 / 730 Loss: 3.8664779663085938 Tokens per Sec: 17002.185152498256
Epoch Step: 645 / 730 Loss: 49.86724090576172 Tokens per Sec: 17251.941686540988
Epoch Step: 650 / 730 Loss: 16.733673095703125 Tokens per Sec: 14346.006740975994
Epoch Step: 655 / 730 Loss: 7.724911212921143 Tokens per Sec: 17298.543133082338
Epoch Step: 660 / 730 Loss: 8.332798957824707 Tokens per Sec: 16866.81281135206
Epoch Step: 665 / 730 Loss: 2.6156506538391113 Tokens per Sec: 20969.39214170199
Epoch Step: 670 / 730 Loss: 8.061264991760254 Tokens per Sec: 17767.421744178526
Epoch Step: 675 / 730 Loss: 4.19491720199585 Tokens per Sec: 16396.61321546273
Epoch Step: 680 / 730 Loss: 3.408630132675171 Tokens per Sec: 18645.77050869709
Epoch Step: 685 / 730 Loss: 6.2429680824279785 Tokens per Sec: 20344.98600795002
Epoch Step: 690 / 730 Loss: 4.880136489868164 Tokens per Sec: 20359.90491203323
Epoch Step: 695 / 730 Loss: 5.526131629943848 Tokens per Sec: 18130.025533950742
Epoch Step: 700 / 730 Loss: 4.274134635925293 Tokens per Sec: 17547.968484910736
Epoch Step: 705 / 730 Loss: 5.103821277618408 Tokens per Sec: 15451.170443002704
Epoch Step: 710 / 730 Loss: 18.98919677734375 Tokens per Sec: 13577.798831422335
Epoch Step: 715 / 730 Loss: 6.7653398513793945 Tokens per Sec: 14817.081228093446
Epoch Step: 720 / 730 Loss: 5.223987102508545 Tokens per Sec: 15580.265168789098
Epoch Step: 725 / 730 Loss: 2.732056140899658 Tokens per Sec: 14147.481274762391
Epoch Step: 730 / 730 Loss: 7.131821632385254 Tokens per Sec: 17231.96982548847
Epoch ended with duration 0:01:19.577726
Train perplexity: 1.351923890575441
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String > VAR_1 , java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.352297
Validation perplexity: 1.354817775267696
Model saved checkpoint!
Epoch 21 / 1000
Epoch Step: 5 / 730 Loss: 7.59351110458374 Tokens per Sec: 15929.074867716314
Epoch Step: 10 / 730 Loss: 4.37406063079834 Tokens per Sec: 18802.9315804522
Epoch Step: 15 / 730 Loss: 2.833212375640869 Tokens per Sec: 18371.041258603345
Epoch Step: 20 / 730 Loss: 5.078798294067383 Tokens per Sec: 16848.004779673953
Epoch Step: 25 / 730 Loss: 2.7525594234466553 Tokens per Sec: 16453.04923354726
Epoch Step: 30 / 730 Loss: 8.56466293334961 Tokens per Sec: 21824.24050679756
Epoch Step: 35 / 730 Loss: 6.717455863952637 Tokens per Sec: 15514.786549422372
Epoch Step: 40 / 730 Loss: 3.0337343215942383 Tokens per Sec: 18352.554631072864
Epoch Step: 45 / 730 Loss: 4.268582820892334 Tokens per Sec: 13443.306757429791
Epoch Step: 50 / 730 Loss: 1.4919624328613281 Tokens per Sec: 19629.23804045
Epoch Step: 55 / 730 Loss: 5.167744159698486 Tokens per Sec: 15684.676412670675
Epoch Step: 60 / 730 Loss: 8.738770484924316 Tokens per Sec: 15431.143148050547
Epoch Step: 65 / 730 Loss: 3.065244197845459 Tokens per Sec: 13477.811815151621
Epoch Step: 70 / 730 Loss: 20.498870849609375 Tokens per Sec: 17176.687862445684
Epoch Step: 75 / 730 Loss: 4.826310157775879 Tokens per Sec: 20784.74511437772
Epoch Step: 80 / 730 Loss: 6.4629716873168945 Tokens per Sec: 16277.548767107663
Epoch Step: 85 / 730 Loss: 2.235365629196167 Tokens per Sec: 15535.82045618352
Epoch Step: 90 / 730 Loss: 6.536973476409912 Tokens per Sec: 19003.509694300967
Epoch Step: 95 / 730 Loss: 3.3603556156158447 Tokens per Sec: 19364.17199209737
Epoch Step: 100 / 730 Loss: 6.620693206787109 Tokens per Sec: 20722.89973710146
Epoch Step: 105 / 730 Loss: 5.676205635070801 Tokens per Sec: 16355.545866666766
Epoch Step: 110 / 730 Loss: 6.3395209312438965 Tokens per Sec: 19199.280824454603
Epoch Step: 115 / 730 Loss: 2.5243921279907227 Tokens per Sec: 17052.187186635478
Epoch Step: 120 / 730 Loss: 5.009559154510498 Tokens per Sec: 17989.78854533451
Epoch Step: 125 / 730 Loss: 3.727513313293457 Tokens per Sec: 17317.117286900047
Epoch Step: 130 / 730 Loss: 61.2706413269043 Tokens per Sec: 17663.71211790862
Epoch Step: 135 / 730 Loss: 2.8712351322174072 Tokens per Sec: 18385.227627393197
Epoch Step: 140 / 730 Loss: 2.2532544136047363 Tokens per Sec: 14930.48942180395
Epoch Step: 145 / 730 Loss: 4.284074783325195 Tokens per Sec: 17238.58268105818
Epoch Step: 150 / 730 Loss: 7.978428363800049 Tokens per Sec: 19484.103864292796
Epoch Step: 155 / 730 Loss: 8.303264617919922 Tokens per Sec: 17518.79565336744
Epoch Step: 160 / 730 Loss: 10.232404708862305 Tokens per Sec: 20222.424890009785
Epoch Step: 165 / 730 Loss: 3.965477705001831 Tokens per Sec: 18282.068638483754
Epoch Step: 170 / 730 Loss: 6.685412406921387 Tokens per Sec: 17032.110466686903
Epoch Step: 175 / 730 Loss: 32.002925872802734 Tokens per Sec: 19148.365310561847
Epoch Step: 180 / 730 Loss: 11.364080429077148 Tokens per Sec: 18444.399052835917
Epoch Step: 185 / 730 Loss: 9.120450019836426 Tokens per Sec: 16405.344929515824
Epoch Step: 190 / 730 Loss: 7.752042770385742 Tokens per Sec: 17668.658406273
Epoch Step: 195 / 730 Loss: 3.3003616333007812 Tokens per Sec: 12316.992260952875
Epoch Step: 200 / 730 Loss: 6.336708068847656 Tokens per Sec: 17350.12713639826
Epoch Step: 205 / 730 Loss: 3.768993616104126 Tokens per Sec: 18987.543873301096
Epoch Step: 210 / 730 Loss: 2.752225399017334 Tokens per Sec: 17929.81250512617
Epoch Step: 215 / 730 Loss: 11.778858184814453 Tokens per Sec: 19320.866215007543
Epoch Step: 220 / 730 Loss: 7.353274345397949 Tokens per Sec: 16719.156441809042
Epoch Step: 225 / 730 Loss: 3.1915907859802246 Tokens per Sec: 17866.71328733388
Epoch Step: 230 / 730 Loss: 11.141580581665039 Tokens per Sec: 17050.14284681564
Epoch Step: 235 / 730 Loss: 7.043965816497803 Tokens per Sec: 17567.77280031351
Epoch Step: 240 / 730 Loss: 7.429235458374023 Tokens per Sec: 18271.47147621577
Epoch Step: 245 / 730 Loss: 7.317069053649902 Tokens per Sec: 19170.2800628734
Epoch Step: 250 / 730 Loss: 2.63515043258667 Tokens per Sec: 18691.458725330693
Epoch Step: 255 / 730 Loss: 4.968837738037109 Tokens per Sec: 19945.22916718903
Epoch Step: 260 / 730 Loss: 5.562422752380371 Tokens per Sec: 16346.125387323162
Epoch Step: 265 / 730 Loss: 2.050304889678955 Tokens per Sec: 16136.936286911538
Epoch Step: 270 / 730 Loss: 3.0296080112457275 Tokens per Sec: 16744.313949218114
Epoch Step: 275 / 730 Loss: 42.89521026611328 Tokens per Sec: 18621.61711171399
Epoch Step: 280 / 730 Loss: 6.131360054016113 Tokens per Sec: 16142.522303060161
Epoch Step: 285 / 730 Loss: 3.099712610244751 Tokens per Sec: 18018.871978838346
Epoch Step: 290 / 730 Loss: 3.37316632270813 Tokens per Sec: 18086.541260658443
Epoch Step: 295 / 730 Loss: 2.534320831298828 Tokens per Sec: 14136.942822658775
Epoch Step: 300 / 730 Loss: 3.6745781898498535 Tokens per Sec: 17861.362295070157
Epoch Step: 305 / 730 Loss: 2.0020406246185303 Tokens per Sec: 16001.557696150996
Epoch Step: 310 / 730 Loss: 4.947957515716553 Tokens per Sec: 19054.69324510641
Epoch Step: 315 / 730 Loss: 4.198157787322998 Tokens per Sec: 15173.403446804492
Epoch Step: 320 / 730 Loss: 1.7345893383026123 Tokens per Sec: 16267.815333148006
Epoch Step: 325 / 730 Loss: 3.610874652862549 Tokens per Sec: 20937.48015681516
Epoch Step: 330 / 730 Loss: 5.6490278244018555 Tokens per Sec: 20525.421008499416
Epoch Step: 335 / 730 Loss: 7.452693939208984 Tokens per Sec: 15558.762252757204
Epoch Step: 340 / 730 Loss: 5.724845886230469 Tokens per Sec: 18166.405444802804
Epoch Step: 345 / 730 Loss: 6.740901470184326 Tokens per Sec: 18885.6388896243
Epoch Step: 350 / 730 Loss: 4.510685920715332 Tokens per Sec: 16471.77634685241
Epoch Step: 355 / 730 Loss: 7.666118144989014 Tokens per Sec: 18516.070210080183
Epoch Step: 360 / 730 Loss: 9.571393013000488 Tokens per Sec: 17334.444192349925
Epoch Step: 365 / 730 Loss: 8.703103065490723 Tokens per Sec: 18039.821248963824
Epoch Step: 370 / 730 Loss: 4.0880866050720215 Tokens per Sec: 16703.645364062573
Epoch Step: 375 / 730 Loss: 4.670435428619385 Tokens per Sec: 13203.667901838897
Epoch Step: 380 / 730 Loss: 8.971967697143555 Tokens per Sec: 16572.08383083612
Epoch Step: 385 / 730 Loss: 2.2627196311950684 Tokens per Sec: 18738.27506230362
Epoch Step: 390 / 730 Loss: 3.5632123947143555 Tokens per Sec: 19036.041543527823
Epoch Step: 395 / 730 Loss: 2.9952926635742188 Tokens per Sec: 17167.950658587997
Epoch Step: 400 / 730 Loss: 2.4006290435791016 Tokens per Sec: 16491.35140471804
Epoch Step: 405 / 730 Loss: 2.0813076496124268 Tokens per Sec: 18018.94040118948
Epoch Step: 410 / 730 Loss: 3.890800714492798 Tokens per Sec: 16633.3164767153
Epoch Step: 415 / 730 Loss: 4.596029758453369 Tokens per Sec: 17853.736729282293
Epoch Step: 420 / 730 Loss: 1.0898792743682861 Tokens per Sec: 18524.451982974253
Epoch Step: 425 / 730 Loss: 6.973911285400391 Tokens per Sec: 19402.78171485363
Epoch Step: 430 / 730 Loss: 6.3727498054504395 Tokens per Sec: 19687.31934870967
Epoch Step: 435 / 730 Loss: 4.401269435882568 Tokens per Sec: 16127.599860781522
Epoch Step: 440 / 730 Loss: 2.2445783615112305 Tokens per Sec: 14794.37721088712
Epoch Step: 445 / 730 Loss: 6.354414463043213 Tokens per Sec: 19101.286238102835
Epoch Step: 450 / 730 Loss: 3.847184658050537 Tokens per Sec: 18278.90551893621
Epoch Step: 455 / 730 Loss: 4.608439922332764 Tokens per Sec: 15881.575315985629
Epoch Step: 460 / 730 Loss: 1.8580641746520996 Tokens per Sec: 16972.494319428704
Epoch Step: 465 / 730 Loss: 5.5794148445129395 Tokens per Sec: 20324.172092024237
Epoch Step: 470 / 730 Loss: 3.0877315998077393 Tokens per Sec: 16058.968999763787
Epoch Step: 475 / 730 Loss: 4.033841133117676 Tokens per Sec: 16634.280657334733
Epoch Step: 480 / 730 Loss: 7.3143792152404785 Tokens per Sec: 18162.975103843688
Epoch Step: 485 / 730 Loss: 29.684520721435547 Tokens per Sec: 15445.978132539703
Epoch Step: 490 / 730 Loss: 2.3638370037078857 Tokens per Sec: 18915.44692477568
Epoch Step: 495 / 730 Loss: 3.231642484664917 Tokens per Sec: 18388.873294137877
Epoch Step: 500 / 730 Loss: 4.339349746704102 Tokens per Sec: 16325.789633470908
Epoch Step: 505 / 730 Loss: 58.39093780517578 Tokens per Sec: 19432.32782953855
Epoch Step: 510 / 730 Loss: 5.350709438323975 Tokens per Sec: 19987.21123477403
Epoch Step: 515 / 730 Loss: 52.38515090942383 Tokens per Sec: 14982.02839371964
Epoch Step: 520 / 730 Loss: 2.609408140182495 Tokens per Sec: 18340.000047199213
Epoch Step: 525 / 730 Loss: 8.892180442810059 Tokens per Sec: 18121.358014591362
Epoch Step: 530 / 730 Loss: 7.734283447265625 Tokens per Sec: 17656.649485963593
Epoch Step: 535 / 730 Loss: 1.7780303955078125 Tokens per Sec: 17162.51464059616
Epoch Step: 540 / 730 Loss: 4.238438606262207 Tokens per Sec: 18664.224286475637
Epoch Step: 545 / 730 Loss: 3.300692081451416 Tokens per Sec: 21648.74303138468
Epoch Step: 550 / 730 Loss: 6.70543909072876 Tokens per Sec: 20093.559259931833
Epoch Step: 555 / 730 Loss: 4.368307590484619 Tokens per Sec: 17286.623557361105
Epoch Step: 560 / 730 Loss: 10.152769088745117 Tokens per Sec: 19669.042054679052
Epoch Step: 565 / 730 Loss: 48.120361328125 Tokens per Sec: 11924.828815407944
Epoch Step: 570 / 730 Loss: 4.083649158477783 Tokens per Sec: 14607.422272827815
Epoch Step: 575 / 730 Loss: 6.061790943145752 Tokens per Sec: 17551.570981174715
Epoch Step: 580 / 730 Loss: 2.941180944442749 Tokens per Sec: 15951.663084711789
Epoch Step: 585 / 730 Loss: 3.480170965194702 Tokens per Sec: 15026.055009150637
Epoch Step: 590 / 730 Loss: 2.433969497680664 Tokens per Sec: 16573.105315817986
Epoch Step: 595 / 730 Loss: 0.5644118785858154 Tokens per Sec: 15949.435409768183
Epoch Step: 600 / 730 Loss: 4.9324750900268555 Tokens per Sec: 18117.62004189723
Epoch Step: 605 / 730 Loss: 1.1117974519729614 Tokens per Sec: 19208.21537403093
Epoch Step: 610 / 730 Loss: 2.762503147125244 Tokens per Sec: 18829.092977338652
Epoch Step: 615 / 730 Loss: 4.642042636871338 Tokens per Sec: 20724.3404229618
Epoch Step: 620 / 730 Loss: 8.723664283752441 Tokens per Sec: 19055.646351304276
Epoch Step: 625 / 730 Loss: 8.497193336486816 Tokens per Sec: 16833.840364866424
Epoch Step: 630 / 730 Loss: 4.065065860748291 Tokens per Sec: 16398.920554663408
Epoch Step: 635 / 730 Loss: 8.119906425476074 Tokens per Sec: 16085.508743659499
Epoch Step: 640 / 730 Loss: 4.638296127319336 Tokens per Sec: 17486.757245080305
Epoch Step: 645 / 730 Loss: 19.545133590698242 Tokens per Sec: 17209.43654710423
Epoch Step: 650 / 730 Loss: 9.01331615447998 Tokens per Sec: 17766.540461318913
Epoch Step: 655 / 730 Loss: 3.3656740188598633 Tokens per Sec: 19846.466685744435
Epoch Step: 660 / 730 Loss: 2.18511700630188 Tokens per Sec: 17845.396479573257
Epoch Step: 665 / 730 Loss: 1.420201063156128 Tokens per Sec: 16649.273652215517
Epoch Step: 670 / 730 Loss: 1.6270904541015625 Tokens per Sec: 15915.435369721656
Epoch Step: 675 / 730 Loss: 5.869405269622803 Tokens per Sec: 17709.366761076286
Epoch Step: 680 / 730 Loss: 4.196573734283447 Tokens per Sec: 19098.87036153264
Epoch Step: 685 / 730 Loss: 4.274292469024658 Tokens per Sec: 18070.15682977761
Epoch Step: 690 / 730 Loss: 9.85409927368164 Tokens per Sec: 16224.002496524914
Epoch Step: 695 / 730 Loss: 5.137673854827881 Tokens per Sec: 15751.297729745149
Epoch Step: 700 / 730 Loss: 2.1472699642181396 Tokens per Sec: 16374.857396626443
Epoch Step: 705 / 730 Loss: 3.162353515625 Tokens per Sec: 15538.386760844622
Epoch Step: 710 / 730 Loss: 5.0303168296813965 Tokens per Sec: 15287.29597551069
Epoch Step: 715 / 730 Loss: 4.168640613555908 Tokens per Sec: 15269.235953952611
Epoch Step: 720 / 730 Loss: 5.017025470733643 Tokens per Sec: 14640.455967566499
Epoch Step: 725 / 730 Loss: 33.694271087646484 Tokens per Sec: 13407.627597381817
Epoch Step: 730 / 730 Loss: 5.612441539764404 Tokens per Sec: 14169.607213949801
Epoch ended with duration 0:01:20.455914
Train perplexity: 1.2717631958217295
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String [ ] , java.lang.String > VAR_1 , java.lang.String > VAR_2 ) { return new java.util.ArrayList < java.lang.String > ( VAR_1 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.372467
Validation perplexity: 1.3504997726550207
Epoch 22 / 1000
Epoch Step: 5 / 730 Loss: 10.229865074157715 Tokens per Sec: 17867.200124774296
Epoch Step: 10 / 730 Loss: 5.606637001037598 Tokens per Sec: 16478.000521775353
Epoch Step: 15 / 730 Loss: 5.321625232696533 Tokens per Sec: 16907.467511261428
Epoch Step: 20 / 730 Loss: 6.153967380523682 Tokens per Sec: 17505.708568752547
Epoch Step: 25 / 730 Loss: 6.283873558044434 Tokens per Sec: 19106.077712209586
Epoch Step: 30 / 730 Loss: 6.0744757652282715 Tokens per Sec: 16520.205479343495
Epoch Step: 35 / 730 Loss: 4.1624836921691895 Tokens per Sec: 14399.29685092428
Epoch Step: 40 / 730 Loss: 8.399430274963379 Tokens per Sec: 17998.83301943938
Epoch Step: 45 / 730 Loss: 3.5009443759918213 Tokens per Sec: 15605.676991927798
Epoch Step: 50 / 730 Loss: 2.3821849822998047 Tokens per Sec: 19682.9748002677
Epoch Step: 55 / 730 Loss: 5.007784366607666 Tokens per Sec: 15307.44259552641
Epoch Step: 60 / 730 Loss: 6.641121864318848 Tokens per Sec: 19774.20778094586
Epoch Step: 65 / 730 Loss: 3.1814754009246826 Tokens per Sec: 15607.544769701672
Epoch Step: 70 / 730 Loss: 8.548138618469238 Tokens per Sec: 18808.846877304102
Epoch Step: 75 / 730 Loss: 15.5768461227417 Tokens per Sec: 18068.694257441482
Epoch Step: 80 / 730 Loss: 3.552539825439453 Tokens per Sec: 14678.995732211042
Epoch Step: 85 / 730 Loss: 6.835947513580322 Tokens per Sec: 16383.510084135285
Epoch Step: 90 / 730 Loss: 5.659785270690918 Tokens per Sec: 20409.53672690089
Epoch Step: 95 / 730 Loss: 3.950836658477783 Tokens per Sec: 17672.84887204027
Epoch Step: 100 / 730 Loss: 7.876460075378418 Tokens per Sec: 18614.41228671037
Epoch Step: 105 / 730 Loss: 3.2735543251037598 Tokens per Sec: 14400.32180415976
Epoch Step: 110 / 730 Loss: 1.629706859588623 Tokens per Sec: 17724.19166814066
Epoch Step: 115 / 730 Loss: 8.798588752746582 Tokens per Sec: 17435.33093004399
Epoch Step: 120 / 730 Loss: 4.087230205535889 Tokens per Sec: 19788.05938377463
Epoch Step: 125 / 730 Loss: 6.798244953155518 Tokens per Sec: 19589.70208992285
Epoch Step: 130 / 730 Loss: 1.5825444459915161 Tokens per Sec: 17850.58092040084
Epoch Step: 135 / 730 Loss: 5.026821136474609 Tokens per Sec: 16770.398884386766
Epoch Step: 140 / 730 Loss: 2.961829900741577 Tokens per Sec: 17952.387838179508
Epoch Step: 145 / 730 Loss: 54.326576232910156 Tokens per Sec: 15255.650360901205
Epoch Step: 150 / 730 Loss: 8.076120376586914 Tokens per Sec: 18501.81518852444
Epoch Step: 155 / 730 Loss: 5.69533109664917 Tokens per Sec: 14777.743330587513
Epoch Step: 160 / 730 Loss: 5.241345405578613 Tokens per Sec: 16973.391396847517
Epoch Step: 165 / 730 Loss: 35.964813232421875 Tokens per Sec: 18185.888280474443
Epoch Step: 170 / 730 Loss: 5.687795162200928 Tokens per Sec: 15209.071479943392
Epoch Step: 175 / 730 Loss: 4.388662815093994 Tokens per Sec: 18097.866195837294
Epoch Step: 180 / 730 Loss: 6.8436360359191895 Tokens per Sec: 20355.709290877694
Epoch Step: 185 / 730 Loss: 3.4946606159210205 Tokens per Sec: 19663.402357847295
Epoch Step: 190 / 730 Loss: 7.065698623657227 Tokens per Sec: 15582.76797754355
Epoch Step: 195 / 730 Loss: 2.671135425567627 Tokens per Sec: 18187.661762123964
Epoch Step: 200 / 730 Loss: 6.4191694259643555 Tokens per Sec: 18328.68930762713
Epoch Step: 205 / 730 Loss: 2.6983392238616943 Tokens per Sec: 15206.660901265284
Epoch Step: 210 / 730 Loss: 4.839633464813232 Tokens per Sec: 13893.074994599401
Epoch Step: 215 / 730 Loss: 6.479664325714111 Tokens per Sec: 15149.042081849064
Epoch Step: 220 / 730 Loss: 4.5272321701049805 Tokens per Sec: 15827.707821907226
Epoch Step: 225 / 730 Loss: 5.334047794342041 Tokens per Sec: 20340.134103471835
Epoch Step: 230 / 730 Loss: 12.126606941223145 Tokens per Sec: 16453.878829690664
Epoch Step: 235 / 730 Loss: 5.716437339782715 Tokens per Sec: 18277.275474667156
Epoch Step: 240 / 730 Loss: 4.492525100708008 Tokens per Sec: 17401.75990364075
Epoch Step: 245 / 730 Loss: 5.280903339385986 Tokens per Sec: 19152.53294273491
Epoch Step: 250 / 730 Loss: 1.7840443849563599 Tokens per Sec: 18515.59947802061
Epoch Step: 255 / 730 Loss: 4.809597015380859 Tokens per Sec: 17110.372894643904
Epoch Step: 260 / 730 Loss: 8.749265670776367 Tokens per Sec: 16624.676085056166
Epoch Step: 265 / 730 Loss: 11.457056045532227 Tokens per Sec: 19074.89801826272
Epoch Step: 270 / 730 Loss: 2.024311065673828 Tokens per Sec: 15565.421616973057
Epoch Step: 275 / 730 Loss: 7.295775890350342 Tokens per Sec: 16763.493583690633
Epoch Step: 280 / 730 Loss: 7.2396464347839355 Tokens per Sec: 17603.92269265782
Epoch Step: 285 / 730 Loss: 5.620241641998291 Tokens per Sec: 15042.264068997942
Epoch Step: 290 / 730 Loss: 5.183684825897217 Tokens per Sec: 20183.591776360285
Epoch Step: 295 / 730 Loss: 4.854315757751465 Tokens per Sec: 19637.970327322357
Epoch Step: 300 / 730 Loss: 7.252910614013672 Tokens per Sec: 20429.336556542356
Epoch Step: 305 / 730 Loss: 4.955492973327637 Tokens per Sec: 19062.559804033448
Epoch Step: 310 / 730 Loss: 5.554919242858887 Tokens per Sec: 19050.477684581605
Epoch Step: 315 / 730 Loss: 4.054167747497559 Tokens per Sec: 18982.568448859816
Epoch Step: 320 / 730 Loss: 4.840421199798584 Tokens per Sec: 17305.132634018377
Epoch Step: 325 / 730 Loss: 2.415109157562256 Tokens per Sec: 17423.347028304972
Epoch Step: 330 / 730 Loss: 2.1079182624816895 Tokens per Sec: 17691.972750181867
Epoch Step: 335 / 730 Loss: 6.435193061828613 Tokens per Sec: 17469.685832747688
Epoch Step: 340 / 730 Loss: 6.176156044006348 Tokens per Sec: 16822.44888343826
Epoch Step: 345 / 730 Loss: 8.48254108428955 Tokens per Sec: 19448.050029860166
Epoch Step: 350 / 730 Loss: 0.9463877081871033 Tokens per Sec: 14698.402280027463
Epoch Step: 355 / 730 Loss: 2.150514602661133 Tokens per Sec: 15767.64952764297
Epoch Step: 360 / 730 Loss: 1.9301623106002808 Tokens per Sec: 16155.990008309018
Epoch Step: 365 / 730 Loss: 3.9151318073272705 Tokens per Sec: 19928.360140895904
Epoch Step: 370 / 730 Loss: 6.177313804626465 Tokens per Sec: 18847.560519273724
Epoch Step: 375 / 730 Loss: 7.848289489746094 Tokens per Sec: 14630.964984858547
Epoch Step: 380 / 730 Loss: 6.5930328369140625 Tokens per Sec: 17534.346094179724
Epoch Step: 385 / 730 Loss: 4.930914878845215 Tokens per Sec: 18125.2337983232
Epoch Step: 390 / 730 Loss: 5.539584636688232 Tokens per Sec: 19260.54132570142
Epoch Step: 395 / 730 Loss: 4.831181526184082 Tokens per Sec: 15259.075832111916
Epoch Step: 400 / 730 Loss: 6.749253749847412 Tokens per Sec: 18472.357010678894
Epoch Step: 405 / 730 Loss: 1.6469364166259766 Tokens per Sec: 17139.51940365948
Epoch Step: 410 / 730 Loss: 2.078629493713379 Tokens per Sec: 19441.95833191486
Epoch Step: 415 / 730 Loss: 4.01369571685791 Tokens per Sec: 18618.710996075515
Epoch Step: 420 / 730 Loss: 2.2486767768859863 Tokens per Sec: 17104.432117489974
Epoch Step: 425 / 730 Loss: 4.550394058227539 Tokens per Sec: 18157.299581428262
Epoch Step: 430 / 730 Loss: 4.5848774909973145 Tokens per Sec: 17093.427524350518
Epoch Step: 435 / 730 Loss: 2.931820869445801 Tokens per Sec: 17492.45083036571
Epoch Step: 440 / 730 Loss: 5.157232761383057 Tokens per Sec: 20277.18426505739
Epoch Step: 445 / 730 Loss: 6.136695384979248 Tokens per Sec: 17567.365507268176
Epoch Step: 450 / 730 Loss: 4.777791500091553 Tokens per Sec: 18242.56054197389
Epoch Step: 455 / 730 Loss: 5.283551216125488 Tokens per Sec: 17604.351950724766
Epoch Step: 460 / 730 Loss: 3.32871675491333 Tokens per Sec: 15876.861922759106
Epoch Step: 465 / 730 Loss: 2.3830201625823975 Tokens per Sec: 17815.967841131398
Epoch Step: 470 / 730 Loss: 1.471811056137085 Tokens per Sec: 16612.368557661768
Epoch Step: 475 / 730 Loss: 5.850619792938232 Tokens per Sec: 17464.646906661874
Epoch Step: 480 / 730 Loss: 4.762216091156006 Tokens per Sec: 17661.933397894296
Epoch Step: 485 / 730 Loss: 9.882309913635254 Tokens per Sec: 17710.365164058465
Epoch Step: 490 / 730 Loss: 4.015560626983643 Tokens per Sec: 19174.103169008868
Epoch Step: 495 / 730 Loss: 5.677863121032715 Tokens per Sec: 18803.952990123467
Epoch Step: 500 / 730 Loss: 4.625605583190918 Tokens per Sec: 13038.19414300291
Epoch Step: 505 / 730 Loss: 6.012673854827881 Tokens per Sec: 17012.988078143168
Epoch Step: 510 / 730 Loss: 6.115492820739746 Tokens per Sec: 20652.74859348237
Epoch Step: 515 / 730 Loss: 5.627118110656738 Tokens per Sec: 19191.41824026603
Epoch Step: 520 / 730 Loss: 3.783478021621704 Tokens per Sec: 16323.584201855138
Epoch Step: 525 / 730 Loss: 2.9084792137145996 Tokens per Sec: 17579.590856712482
Epoch Step: 530 / 730 Loss: 5.076989650726318 Tokens per Sec: 16299.502520685333
Epoch Step: 535 / 730 Loss: 5.906609535217285 Tokens per Sec: 17539.89167330293
Epoch Step: 540 / 730 Loss: 5.300797939300537 Tokens per Sec: 18219.580758370554
Epoch Step: 545 / 730 Loss: 2.2771575450897217 Tokens per Sec: 17774.918827057136
Epoch Step: 550 / 730 Loss: 35.537052154541016 Tokens per Sec: 14746.63384284528
Epoch Step: 555 / 730 Loss: 6.2541961669921875 Tokens per Sec: 18254.87817738979
Epoch Step: 560 / 730 Loss: 7.16105318069458 Tokens per Sec: 16553.579343107314
Epoch Step: 565 / 730 Loss: 2.4488391876220703 Tokens per Sec: 16795.12098965378
Epoch Step: 570 / 730 Loss: 5.808454990386963 Tokens per Sec: 18537.32537913975
Epoch Step: 575 / 730 Loss: 2.342695713043213 Tokens per Sec: 16133.059181215593
Epoch Step: 580 / 730 Loss: 5.119088172912598 Tokens per Sec: 19494.764969769545
Epoch Step: 585 / 730 Loss: 41.79063034057617 Tokens per Sec: 15113.674669875933
Epoch Step: 590 / 730 Loss: 3.808445692062378 Tokens per Sec: 19583.652058072188
Epoch Step: 595 / 730 Loss: 3.0959272384643555 Tokens per Sec: 17156.565012586583
Epoch Step: 600 / 730 Loss: 1.4164289236068726 Tokens per Sec: 17907.51711901163
Epoch Step: 605 / 730 Loss: 5.217308044433594 Tokens per Sec: 15865.57298617288
Epoch Step: 610 / 730 Loss: 3.0099854469299316 Tokens per Sec: 16113.676773902505
Epoch Step: 615 / 730 Loss: 5.287967681884766 Tokens per Sec: 17444.380610700307
Epoch Step: 620 / 730 Loss: 3.7453689575195312 Tokens per Sec: 18023.102944894777
Epoch Step: 625 / 730 Loss: 32.62193298339844 Tokens per Sec: 20205.258565470405
Epoch Step: 630 / 730 Loss: 2.3529608249664307 Tokens per Sec: 17655.907029339913
Epoch Step: 635 / 730 Loss: 8.302239418029785 Tokens per Sec: 16560.59243352751
Epoch Step: 640 / 730 Loss: 3.3467154502868652 Tokens per Sec: 16703.272160923018
Epoch Step: 645 / 730 Loss: 4.335310935974121 Tokens per Sec: 18654.375684915376
Epoch Step: 650 / 730 Loss: 19.290319442749023 Tokens per Sec: 17323.311575413907
Epoch Step: 655 / 730 Loss: 5.791399955749512 Tokens per Sec: 15752.434217451586
Epoch Step: 660 / 730 Loss: 4.254182815551758 Tokens per Sec: 17144.883378894956
Epoch Step: 665 / 730 Loss: 3.0367398262023926 Tokens per Sec: 15130.12011703526
Epoch Step: 670 / 730 Loss: 17.516576766967773 Tokens per Sec: 15603.693006962358
Epoch Step: 675 / 730 Loss: 25.11635398864746 Tokens per Sec: 15937.608452640523
Epoch Step: 680 / 730 Loss: 4.043330669403076 Tokens per Sec: 16897.99892560318
Epoch Step: 685 / 730 Loss: 2.580153226852417 Tokens per Sec: 17300.686898099284
Epoch Step: 690 / 730 Loss: 5.606344223022461 Tokens per Sec: 20091.591081774226
Epoch Step: 695 / 730 Loss: 5.901706695556641 Tokens per Sec: 17383.073842286787
Epoch Step: 700 / 730 Loss: 4.443422794342041 Tokens per Sec: 19812.649125627566
Epoch Step: 705 / 730 Loss: 4.0568084716796875 Tokens per Sec: 14396.180897035185
Epoch Step: 710 / 730 Loss: 2.674440860748291 Tokens per Sec: 14257.865137809298
Epoch Step: 715 / 730 Loss: 6.67625093460083 Tokens per Sec: 16278.657710142412
Epoch Step: 720 / 730 Loss: 6.140897750854492 Tokens per Sec: 14973.436920282076
Epoch Step: 725 / 730 Loss: 4.98097562789917 Tokens per Sec: 15820.936558803085
Epoch Step: 730 / 730 Loss: 5.9062981605529785 Tokens per Sec: 14859.994412288557
Epoch ended with duration 0:01:20.722663
Train perplexity: 1.2733174420711855
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String > VAR_1 , java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.393728
Validation perplexity: 1.2847937287522553
Model saved best_on_validation!
Epoch 23 / 1000
Epoch Step: 5 / 730 Loss: 1.7213464975357056 Tokens per Sec: 14933.08213991175
Epoch Step: 10 / 730 Loss: 2.315319776535034 Tokens per Sec: 14346.355652655251
Epoch Step: 15 / 730 Loss: 1.4473050832748413 Tokens per Sec: 18661.52773842129
Epoch Step: 20 / 730 Loss: 5.655105113983154 Tokens per Sec: 20390.937999388192
Epoch Step: 25 / 730 Loss: 7.869133472442627 Tokens per Sec: 18843.749150222426
Epoch Step: 30 / 730 Loss: 5.402600288391113 Tokens per Sec: 19204.29289912844
Epoch Step: 35 / 730 Loss: 3.3110694885253906 Tokens per Sec: 20574.83357337903
Epoch Step: 40 / 730 Loss: 9.118345260620117 Tokens per Sec: 17722.736323715748
Epoch Step: 45 / 730 Loss: 5.408535003662109 Tokens per Sec: 18520.294168031618
Epoch Step: 50 / 730 Loss: 2.9019291400909424 Tokens per Sec: 18740.767763901782
Epoch Step: 55 / 730 Loss: 1.0417276620864868 Tokens per Sec: 18785.299400026383
Epoch Step: 60 / 730 Loss: 0.7870928645133972 Tokens per Sec: 19589.589865732225
Epoch Step: 65 / 730 Loss: 3.811774730682373 Tokens per Sec: 17108.01730161738
Epoch Step: 70 / 730 Loss: 7.6079630851745605 Tokens per Sec: 18819.957699947736
Epoch Step: 75 / 730 Loss: 1.5376222133636475 Tokens per Sec: 16715.059858559838
Epoch Step: 80 / 730 Loss: 2.5702743530273438 Tokens per Sec: 19243.80787022825
Epoch Step: 85 / 730 Loss: 11.614897727966309 Tokens per Sec: 19404.274511247328
Epoch Step: 90 / 730 Loss: 3.677469253540039 Tokens per Sec: 15124.641603299164
Epoch Step: 95 / 730 Loss: 4.201259136199951 Tokens per Sec: 16419.27547794262
Epoch Step: 100 / 730 Loss: 1.077406644821167 Tokens per Sec: 14841.465943311736
Epoch Step: 105 / 730 Loss: 6.152842044830322 Tokens per Sec: 17754.194070860165
Epoch Step: 110 / 730 Loss: 23.91781234741211 Tokens per Sec: 18615.309725164167
Epoch Step: 115 / 730 Loss: 7.278883934020996 Tokens per Sec: 20230.58554994103
Epoch Step: 120 / 730 Loss: 8.966562271118164 Tokens per Sec: 18714.31570634441
Epoch Step: 125 / 730 Loss: 5.505065441131592 Tokens per Sec: 21532.894391940838
Epoch Step: 130 / 730 Loss: 2.7571330070495605 Tokens per Sec: 16647.812721815368
Epoch Step: 135 / 730 Loss: 7.692943096160889 Tokens per Sec: 14877.187159794077
Epoch Step: 140 / 730 Loss: 3.0343775749206543 Tokens per Sec: 17065.04317340214
Epoch Step: 145 / 730 Loss: 3.817612648010254 Tokens per Sec: 17880.861675719214
Epoch Step: 150 / 730 Loss: 41.09282302856445 Tokens per Sec: 19198.372948401287
Epoch Step: 155 / 730 Loss: 2.8382911682128906 Tokens per Sec: 17631.411294423768
Epoch Step: 160 / 730 Loss: 2.1358160972595215 Tokens per Sec: 15320.933436907706
Epoch Step: 165 / 730 Loss: 4.107709884643555 Tokens per Sec: 14002.653079208703
Epoch Step: 170 / 730 Loss: 10.15677261352539 Tokens per Sec: 17586.10179498167
Epoch Step: 175 / 730 Loss: 3.236186981201172 Tokens per Sec: 17702.900261219766
Epoch Step: 180 / 730 Loss: 5.504539489746094 Tokens per Sec: 17373.99488058581
Epoch Step: 185 / 730 Loss: 7.0922393798828125 Tokens per Sec: 18085.71124988068
Epoch Step: 190 / 730 Loss: 5.429124355316162 Tokens per Sec: 16526.959113827987
Epoch Step: 195 / 730 Loss: 7.304686546325684 Tokens per Sec: 18341.154488520897
Epoch Step: 200 / 730 Loss: 5.784728050231934 Tokens per Sec: 15372.320522779699
Epoch Step: 205 / 730 Loss: 6.785237789154053 Tokens per Sec: 16456.044723546758
Epoch Step: 210 / 730 Loss: 3.3982934951782227 Tokens per Sec: 18986.148175644023
Epoch Step: 215 / 730 Loss: 26.4941463470459 Tokens per Sec: 16791.969277919805
Epoch Step: 220 / 730 Loss: 5.53554105758667 Tokens per Sec: 14777.471823844186
Epoch Step: 225 / 730 Loss: 7.486972332000732 Tokens per Sec: 16508.539056262434
Epoch Step: 230 / 730 Loss: 10.5143404006958 Tokens per Sec: 17879.170190376604
Epoch Step: 235 / 730 Loss: 5.100979328155518 Tokens per Sec: 19027.26763346144
Epoch Step: 240 / 730 Loss: 9.30998706817627 Tokens per Sec: 14928.877373030147
Epoch Step: 245 / 730 Loss: 6.044492721557617 Tokens per Sec: 17802.17763830273
Epoch Step: 250 / 730 Loss: 7.751526355743408 Tokens per Sec: 18363.773012542042
Epoch Step: 255 / 730 Loss: 4.722691059112549 Tokens per Sec: 20270.73752748665
Epoch Step: 260 / 730 Loss: 6.327896595001221 Tokens per Sec: 16119.429269440208
Epoch Step: 265 / 730 Loss: 8.964337348937988 Tokens per Sec: 20743.15864703545
Epoch Step: 270 / 730 Loss: 2.392962694168091 Tokens per Sec: 18972.981421923323
Epoch Step: 275 / 730 Loss: 6.0786590576171875 Tokens per Sec: 18980.28625628289
Epoch Step: 280 / 730 Loss: 6.232869625091553 Tokens per Sec: 16931.943961834528
Epoch Step: 285 / 730 Loss: 6.545481204986572 Tokens per Sec: 17633.357490340535
Epoch Step: 290 / 730 Loss: 1.7731578350067139 Tokens per Sec: 17895.78739240745
Epoch Step: 295 / 730 Loss: 7.231889724731445 Tokens per Sec: 17910.55894357276
Epoch Step: 300 / 730 Loss: 3.6936211585998535 Tokens per Sec: 15941.140763960382
Epoch Step: 305 / 730 Loss: 11.737824440002441 Tokens per Sec: 18114.398221968182
Epoch Step: 310 / 730 Loss: 40.42826843261719 Tokens per Sec: 15482.783498813302
Epoch Step: 315 / 730 Loss: 5.089752674102783 Tokens per Sec: 18586.750267732023
Epoch Step: 320 / 730 Loss: 6.971330165863037 Tokens per Sec: 19116.26203271406
Epoch Step: 325 / 730 Loss: 5.641036033630371 Tokens per Sec: 16138.017514826382
Epoch Step: 330 / 730 Loss: 1.8244749307632446 Tokens per Sec: 14245.038277593694
Epoch Step: 335 / 730 Loss: 6.556086540222168 Tokens per Sec: 20004.828725694653
Epoch Step: 340 / 730 Loss: 2.921469211578369 Tokens per Sec: 18687.86279734884
Epoch Step: 345 / 730 Loss: 3.8713042736053467 Tokens per Sec: 17400.203801572206
Epoch Step: 350 / 730 Loss: 33.6757698059082 Tokens per Sec: 19885.526224592228
Epoch Step: 355 / 730 Loss: 3.861595869064331 Tokens per Sec: 20084.2629487325
Epoch Step: 360 / 730 Loss: 1.0113236904144287 Tokens per Sec: 17129.436955713605
Epoch Step: 365 / 730 Loss: 3.8084795475006104 Tokens per Sec: 16643.246239625263
Epoch Step: 370 / 730 Loss: 3.6634304523468018 Tokens per Sec: 18486.23387253985
Epoch Step: 375 / 730 Loss: 7.978106498718262 Tokens per Sec: 16806.068017932317
Epoch Step: 380 / 730 Loss: 57.15266799926758 Tokens per Sec: 17008.364444006515
Epoch Step: 385 / 730 Loss: 4.204353332519531 Tokens per Sec: 20243.560467683536
Epoch Step: 390 / 730 Loss: 8.352800369262695 Tokens per Sec: 15728.11670625811
Epoch Step: 395 / 730 Loss: 9.91328239440918 Tokens per Sec: 18186.396359420763
Epoch Step: 400 / 730 Loss: 9.53559684753418 Tokens per Sec: 16982.251715565875
Epoch Step: 405 / 730 Loss: 2.8707997798919678 Tokens per Sec: 19441.711603204283
Epoch Step: 410 / 730 Loss: 6.015781402587891 Tokens per Sec: 18120.595606784744
Epoch Step: 415 / 730 Loss: 6.220782279968262 Tokens per Sec: 14953.017050726943
Epoch Step: 420 / 730 Loss: 9.475306510925293 Tokens per Sec: 16542.138964856265
Epoch Step: 425 / 730 Loss: 6.932861328125 Tokens per Sec: 13261.36030138359
Epoch Step: 430 / 730 Loss: 5.3769025802612305 Tokens per Sec: 14771.232804165676
Epoch Step: 435 / 730 Loss: 1.9076669216156006 Tokens per Sec: 14811.771370040853
Epoch Step: 440 / 730 Loss: 4.326418399810791 Tokens per Sec: 15329.94844015915
Epoch Step: 445 / 730 Loss: 4.563701629638672 Tokens per Sec: 18573.060233780765
Epoch Step: 450 / 730 Loss: 9.1182861328125 Tokens per Sec: 18027.6215498174
Epoch Step: 455 / 730 Loss: 1.6843103170394897 Tokens per Sec: 18800.260895389183
Epoch Step: 460 / 730 Loss: 8.978751182556152 Tokens per Sec: 19969.636467480486
Epoch Step: 465 / 730 Loss: 3.5175466537475586 Tokens per Sec: 20059.875228280373
Epoch Step: 470 / 730 Loss: 17.534954071044922 Tokens per Sec: 16784.655016095596
Epoch Step: 475 / 730 Loss: 15.634562492370605 Tokens per Sec: 17801.363194095593
Epoch Step: 480 / 730 Loss: 9.413446426391602 Tokens per Sec: 19265.774733436145
Epoch Step: 485 / 730 Loss: 4.020005702972412 Tokens per Sec: 18535.543716291213
Epoch Step: 490 / 730 Loss: 10.73984432220459 Tokens per Sec: 17383.90447641753
Epoch Step: 495 / 730 Loss: 6.739864349365234 Tokens per Sec: 19631.18277036581
Epoch Step: 500 / 730 Loss: 8.124058723449707 Tokens per Sec: 18194.83683866298
Epoch Step: 505 / 730 Loss: 5.9744391441345215 Tokens per Sec: 15239.244901505457
Epoch Step: 510 / 730 Loss: 11.752260208129883 Tokens per Sec: 17461.690047159667
Epoch Step: 515 / 730 Loss: 6.577352523803711 Tokens per Sec: 19935.290648814665
Epoch Step: 520 / 730 Loss: 10.887534141540527 Tokens per Sec: 18692.034325043038
Epoch Step: 525 / 730 Loss: 3.066195011138916 Tokens per Sec: 13937.22444147639
Epoch Step: 530 / 730 Loss: 2.577747344970703 Tokens per Sec: 19443.04740546405
Epoch Step: 535 / 730 Loss: 58.042755126953125 Tokens per Sec: 18101.625878074898
Epoch Step: 540 / 730 Loss: 3.804638385772705 Tokens per Sec: 17158.761647596864
Epoch Step: 545 / 730 Loss: 7.226841926574707 Tokens per Sec: 14453.140855887314
Epoch Step: 550 / 730 Loss: 3.269538402557373 Tokens per Sec: 17431.231413408434
Epoch Step: 555 / 730 Loss: 6.583550930023193 Tokens per Sec: 19539.377938550726
Epoch Step: 560 / 730 Loss: 7.193028450012207 Tokens per Sec: 18562.254752189398
Epoch Step: 565 / 730 Loss: 5.009665012359619 Tokens per Sec: 19404.351581720315
Epoch Step: 570 / 730 Loss: 3.15259051322937 Tokens per Sec: 18330.728851109354
Epoch Step: 575 / 730 Loss: 1.5624991655349731 Tokens per Sec: 16671.533840730925
Epoch Step: 580 / 730 Loss: 6.471717357635498 Tokens per Sec: 18845.383186311818
Epoch Step: 585 / 730 Loss: 7.90459680557251 Tokens per Sec: 20208.497971076846
Epoch Step: 590 / 730 Loss: 7.878459453582764 Tokens per Sec: 20033.39302736205
Epoch Step: 595 / 730 Loss: 4.328840732574463 Tokens per Sec: 18066.270782970074
Epoch Step: 600 / 730 Loss: 4.708200931549072 Tokens per Sec: 16817.630547774486
Epoch Step: 605 / 730 Loss: 2.8532280921936035 Tokens per Sec: 18323.207525947135
Epoch Step: 610 / 730 Loss: 4.325137615203857 Tokens per Sec: 18986.635212335084
Epoch Step: 615 / 730 Loss: 7.556243419647217 Tokens per Sec: 18299.619798144115
Epoch Step: 620 / 730 Loss: 3.5927367210388184 Tokens per Sec: 18934.911827994765
Epoch Step: 625 / 730 Loss: 2.4043428897857666 Tokens per Sec: 16703.63110146473
Epoch Step: 630 / 730 Loss: 2.7740328311920166 Tokens per Sec: 15318.467181568936
Epoch Step: 635 / 730 Loss: 2.2905430793762207 Tokens per Sec: 17934.66981272626
Epoch Step: 640 / 730 Loss: 3.77329158782959 Tokens per Sec: 17077.840416674175
Epoch Step: 645 / 730 Loss: 9.65473461151123 Tokens per Sec: 18082.618262592074
Epoch Step: 650 / 730 Loss: 3.738579034805298 Tokens per Sec: 17919.604876500853
Epoch Step: 655 / 730 Loss: 1.4691355228424072 Tokens per Sec: 14384.747388136799
Epoch Step: 660 / 730 Loss: 5.652506351470947 Tokens per Sec: 21782.15461188191
Epoch Step: 665 / 730 Loss: 6.090665817260742 Tokens per Sec: 16542.192441961517
Epoch Step: 670 / 730 Loss: 3.8327949047088623 Tokens per Sec: 16989.719096737754
Epoch Step: 675 / 730 Loss: 47.90486526489258 Tokens per Sec: 15263.84804052047
Epoch Step: 680 / 730 Loss: 11.422061920166016 Tokens per Sec: 17848.191729469145
Epoch Step: 685 / 730 Loss: 36.47328186035156 Tokens per Sec: 19512.379384730455
Epoch Step: 690 / 730 Loss: 4.619015693664551 Tokens per Sec: 16175.719140663241
Epoch Step: 695 / 730 Loss: 2.7881858348846436 Tokens per Sec: 16088.477260171147
Epoch Step: 700 / 730 Loss: 6.322747707366943 Tokens per Sec: 20180.355906503115
Epoch Step: 705 / 730 Loss: 64.61468505859375 Tokens per Sec: 15503.600833318986
Epoch Step: 710 / 730 Loss: 28.004104614257812 Tokens per Sec: 13963.252022255967
Epoch Step: 715 / 730 Loss: 5.418773174285889 Tokens per Sec: 13520.072572509434
Epoch Step: 720 / 730 Loss: 7.327755451202393 Tokens per Sec: 16243.602851138821
Epoch Step: 725 / 730 Loss: 4.433494567871094 Tokens per Sec: 16575.13445873854
Epoch Step: 730 / 730 Loss: 6.5928263664245605 Tokens per Sec: 15629.227667806663
Epoch ended with duration 0:01:19.745023
Train perplexity: 1.3203186841951842
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String > VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.281876
Validation perplexity: 1.2523341759085527
Model saved best_on_validation!
Epoch 24 / 1000
Epoch Step: 5 / 730 Loss: 3.5922017097473145 Tokens per Sec: 15176.365967188955
Epoch Step: 10 / 730 Loss: 4.995448112487793 Tokens per Sec: 17104.463636080465
Epoch Step: 15 / 730 Loss: 8.656341552734375 Tokens per Sec: 20039.71622112508
Epoch Step: 20 / 730 Loss: 3.9451096057891846 Tokens per Sec: 18767.232788308826
Epoch Step: 25 / 730 Loss: 3.615171432495117 Tokens per Sec: 18705.972322300415
Epoch Step: 30 / 730 Loss: 3.2223029136657715 Tokens per Sec: 17680.74228114727
Epoch Step: 35 / 730 Loss: 7.0797600746154785 Tokens per Sec: 17527.891667145395
Epoch Step: 40 / 730 Loss: 4.383301734924316 Tokens per Sec: 16632.24434401079
Epoch Step: 45 / 730 Loss: 32.28402328491211 Tokens per Sec: 18977.502590037027
Epoch Step: 50 / 730 Loss: 5.868847370147705 Tokens per Sec: 19794.273259629754
Epoch Step: 55 / 730 Loss: 3.7213618755340576 Tokens per Sec: 18280.047243753444
Epoch Step: 60 / 730 Loss: 5.079101085662842 Tokens per Sec: 20383.98851696558
Epoch Step: 65 / 730 Loss: 2.855746269226074 Tokens per Sec: 15970.77647727021
Epoch Step: 70 / 730 Loss: 5.780767440795898 Tokens per Sec: 11514.285468490489
Epoch Step: 75 / 730 Loss: 24.01857566833496 Tokens per Sec: 18535.149712756935
Epoch Step: 80 / 730 Loss: 7.001528263092041 Tokens per Sec: 16645.679472289587
Epoch Step: 85 / 730 Loss: 5.529616355895996 Tokens per Sec: 16057.510644270442
Epoch Step: 90 / 730 Loss: 5.234198093414307 Tokens per Sec: 19954.73828646425
Epoch Step: 95 / 730 Loss: 4.638697624206543 Tokens per Sec: 14516.346603956004
Epoch Step: 100 / 730 Loss: 3.8637213706970215 Tokens per Sec: 15273.201943646714
Epoch Step: 105 / 730 Loss: 3.142378330230713 Tokens per Sec: 16097.608864656455
Epoch Step: 110 / 730 Loss: 63.270511627197266 Tokens per Sec: 19652.297214664773
Epoch Step: 115 / 730 Loss: 4.885273456573486 Tokens per Sec: 18227.976840093495
Epoch Step: 120 / 730 Loss: 6.95579719543457 Tokens per Sec: 19645.10342232918
Epoch Step: 125 / 730 Loss: 8.705286979675293 Tokens per Sec: 13021.904412711354
Epoch Step: 130 / 730 Loss: 6.473460674285889 Tokens per Sec: 18416.192681208613
Epoch Step: 135 / 730 Loss: 4.329028129577637 Tokens per Sec: 17029.29023821295
Epoch Step: 140 / 730 Loss: 5.0701470375061035 Tokens per Sec: 17697.280588757538
Epoch Step: 145 / 730 Loss: 6.884109973907471 Tokens per Sec: 16375.122156943102
Epoch Step: 150 / 730 Loss: 4.040502548217773 Tokens per Sec: 19652.80244539912
Epoch Step: 155 / 730 Loss: 6.393768787384033 Tokens per Sec: 15517.586891089702
Epoch Step: 160 / 730 Loss: 5.778467655181885 Tokens per Sec: 19073.799197270342
Epoch Step: 165 / 730 Loss: 2.5028436183929443 Tokens per Sec: 16861.30553361974
Epoch Step: 170 / 730 Loss: 1.5671882629394531 Tokens per Sec: 16729.560693583477
Epoch Step: 175 / 730 Loss: 6.364086151123047 Tokens per Sec: 17903.04452909771
Epoch Step: 180 / 730 Loss: 5.128819942474365 Tokens per Sec: 15841.611953658063
Epoch Step: 185 / 730 Loss: 10.38043212890625 Tokens per Sec: 17479.905158812777
Epoch Step: 190 / 730 Loss: 7.1230149269104 Tokens per Sec: 19825.249563594116
Epoch Step: 195 / 730 Loss: 0.8345721364021301 Tokens per Sec: 19531.018368911697
Epoch Step: 200 / 730 Loss: 3.222527027130127 Tokens per Sec: 17758.546601032325
Epoch Step: 205 / 730 Loss: 3.5533502101898193 Tokens per Sec: 16796.76392863137
Epoch Step: 210 / 730 Loss: 2.220785140991211 Tokens per Sec: 19215.617706367982
Epoch Step: 215 / 730 Loss: 4.485259056091309 Tokens per Sec: 17154.109598149058
Epoch Step: 220 / 730 Loss: 6.493561267852783 Tokens per Sec: 21248.734913452336
Epoch Step: 225 / 730 Loss: 3.582292079925537 Tokens per Sec: 20541.388173356427
Epoch Step: 230 / 730 Loss: 5.28056526184082 Tokens per Sec: 18002.280108863484
Epoch Step: 235 / 730 Loss: 5.529613971710205 Tokens per Sec: 15964.310613249827
Epoch Step: 240 / 730 Loss: 8.089305877685547 Tokens per Sec: 18701.12955456118
Epoch Step: 245 / 730 Loss: 7.515921592712402 Tokens per Sec: 18800.853042314655
Epoch Step: 250 / 730 Loss: 6.773549556732178 Tokens per Sec: 16984.21975709046
Epoch Step: 255 / 730 Loss: 4.250423908233643 Tokens per Sec: 16048.264688425461
Epoch Step: 260 / 730 Loss: 5.073986053466797 Tokens per Sec: 20214.75963971737
Epoch Step: 265 / 730 Loss: 1.4352481365203857 Tokens per Sec: 14777.844325983331
Epoch Step: 270 / 730 Loss: 8.973456382751465 Tokens per Sec: 17133.712462173862
Epoch Step: 275 / 730 Loss: 2.196058750152588 Tokens per Sec: 13129.643656867976
Epoch Step: 280 / 730 Loss: 5.251668453216553 Tokens per Sec: 16951.61172153583
Epoch Step: 285 / 730 Loss: 48.13371276855469 Tokens per Sec: 17036.049148005644
Epoch Step: 290 / 730 Loss: 9.848434448242188 Tokens per Sec: 19356.765857708477
Epoch Step: 295 / 730 Loss: 2.2522215843200684 Tokens per Sec: 18284.782683757294
Epoch Step: 300 / 730 Loss: 3.6398820877075195 Tokens per Sec: 16810.58940979914
Epoch Step: 305 / 730 Loss: 2.7996864318847656 Tokens per Sec: 16207.201944677372
Epoch Step: 310 / 730 Loss: 5.127281665802002 Tokens per Sec: 13121.60035599811
Epoch Step: 315 / 730 Loss: 3.828139066696167 Tokens per Sec: 18165.697209210575
Epoch Step: 320 / 730 Loss: 5.156346321105957 Tokens per Sec: 15195.644479045024
Epoch Step: 325 / 730 Loss: 2.4813711643218994 Tokens per Sec: 17848.017954975796
Epoch Step: 330 / 730 Loss: 5.159524440765381 Tokens per Sec: 18957.21241438314
Epoch Step: 335 / 730 Loss: 3.865734338760376 Tokens per Sec: 17974.781885050877
Epoch Step: 340 / 730 Loss: 0.9654085636138916 Tokens per Sec: 17662.15781467785
Epoch Step: 345 / 730 Loss: 48.21784210205078 Tokens per Sec: 19087.78380151625
Epoch Step: 350 / 730 Loss: 6.55366325378418 Tokens per Sec: 18191.56455884944
Epoch Step: 355 / 730 Loss: 28.13095474243164 Tokens per Sec: 16268.480977834666
Epoch Step: 360 / 730 Loss: 4.86423397064209 Tokens per Sec: 20398.664851788308
Epoch Step: 365 / 730 Loss: 5.533316612243652 Tokens per Sec: 18148.904669147018
Epoch Step: 370 / 730 Loss: 6.981165885925293 Tokens per Sec: 20198.933798319344
Epoch Step: 375 / 730 Loss: 5.03525972366333 Tokens per Sec: 19358.941237263392
Epoch Step: 380 / 730 Loss: 1.036588191986084 Tokens per Sec: 17009.426166104673
Epoch Step: 385 / 730 Loss: 1.2470866441726685 Tokens per Sec: 15633.342511549548
Epoch Step: 390 / 730 Loss: 5.546223163604736 Tokens per Sec: 18226.153690445284
Epoch Step: 395 / 730 Loss: 6.984760761260986 Tokens per Sec: 20393.45896538041
Epoch Step: 400 / 730 Loss: 2.058457136154175 Tokens per Sec: 18962.297586924466
Epoch Step: 405 / 730 Loss: 7.200985431671143 Tokens per Sec: 15941.45233883643
Epoch Step: 410 / 730 Loss: 3.925882339477539 Tokens per Sec: 18671.730008549916
Epoch Step: 415 / 730 Loss: 2.9037630558013916 Tokens per Sec: 17487.96412451024
Epoch Step: 420 / 730 Loss: 31.665843963623047 Tokens per Sec: 20109.17694071202
Epoch Step: 425 / 730 Loss: 3.2395150661468506 Tokens per Sec: 20522.701952415948
Epoch Step: 430 / 730 Loss: 7.505980014801025 Tokens per Sec: 17226.052832533805
Epoch Step: 435 / 730 Loss: 1.3258507251739502 Tokens per Sec: 21105.37430763202
Epoch Step: 440 / 730 Loss: 7.8568115234375 Tokens per Sec: 18464.282976765713
Epoch Step: 445 / 730 Loss: 39.18327713012695 Tokens per Sec: 14602.86118699838
Epoch Step: 450 / 730 Loss: 8.018505096435547 Tokens per Sec: 16569.93214735458
Epoch Step: 455 / 730 Loss: 2.2417752742767334 Tokens per Sec: 15382.794712320177
Epoch Step: 460 / 730 Loss: 6.424312114715576 Tokens per Sec: 15942.350540375279
Epoch Step: 465 / 730 Loss: 1.4550060033798218 Tokens per Sec: 20653.81651866048
Epoch Step: 470 / 730 Loss: 2.3114399909973145 Tokens per Sec: 17206.56212564415
Epoch Step: 475 / 730 Loss: 5.448482990264893 Tokens per Sec: 19646.67446843008
Epoch Step: 480 / 730 Loss: 38.44215393066406 Tokens per Sec: 18195.787160573414
Epoch Step: 485 / 730 Loss: 57.68979263305664 Tokens per Sec: 14537.513524387212
Epoch Step: 490 / 730 Loss: 25.79657745361328 Tokens per Sec: 19440.352575012006
Epoch Step: 495 / 730 Loss: 3.2683701515197754 Tokens per Sec: 18160.364026578925
Epoch Step: 500 / 730 Loss: 3.674262523651123 Tokens per Sec: 17769.039462895238
Epoch Step: 505 / 730 Loss: 4.364450454711914 Tokens per Sec: 18679.13791890321
Epoch Step: 510 / 730 Loss: 2.572967290878296 Tokens per Sec: 19606.21009160942
Epoch Step: 515 / 730 Loss: 5.9991960525512695 Tokens per Sec: 17458.711740426654
Epoch Step: 520 / 730 Loss: 2.349306583404541 Tokens per Sec: 17972.257232130527
Epoch Step: 525 / 730 Loss: 3.195728063583374 Tokens per Sec: 22242.10131595565
Epoch Step: 530 / 730 Loss: 5.5150675773620605 Tokens per Sec: 17030.5969799876
Epoch Step: 535 / 730 Loss: 2.937796115875244 Tokens per Sec: 14948.327941173095
Epoch Step: 540 / 730 Loss: 4.805264949798584 Tokens per Sec: 16373.747202996034
Epoch Step: 545 / 730 Loss: 4.186906814575195 Tokens per Sec: 17883.72059767773
Epoch Step: 550 / 730 Loss: 4.492687702178955 Tokens per Sec: 18661.529230534557
Epoch Step: 555 / 730 Loss: 8.094100952148438 Tokens per Sec: 17641.941581138235
Epoch Step: 560 / 730 Loss: 9.226886749267578 Tokens per Sec: 17782.1000082322
Epoch Step: 565 / 730 Loss: 4.829105377197266 Tokens per Sec: 19504.58321964937
Epoch Step: 570 / 730 Loss: 5.802125930786133 Tokens per Sec: 16959.740591931284
Epoch Step: 575 / 730 Loss: 2.4955058097839355 Tokens per Sec: 16667.431780574636
Epoch Step: 580 / 730 Loss: 0.9458969235420227 Tokens per Sec: 14467.02879717186
Epoch Step: 585 / 730 Loss: 23.06144142150879 Tokens per Sec: 16523.903231454333
Epoch Step: 590 / 730 Loss: 1.1026208400726318 Tokens per Sec: 19194.498164431614
Epoch Step: 595 / 730 Loss: 2.6674952507019043 Tokens per Sec: 19827.705792970457
Epoch Step: 600 / 730 Loss: 9.220743179321289 Tokens per Sec: 16759.222285262826
Epoch Step: 605 / 730 Loss: 4.781496524810791 Tokens per Sec: 19148.461616990582
Epoch Step: 610 / 730 Loss: 6.215120792388916 Tokens per Sec: 16592.288089487338
Epoch Step: 615 / 730 Loss: 1.762136459350586 Tokens per Sec: 15007.0149239013
Epoch Step: 620 / 730 Loss: 6.898995876312256 Tokens per Sec: 16800.05660138655
Epoch Step: 625 / 730 Loss: 1.3922524452209473 Tokens per Sec: 17184.850185615087
Epoch Step: 630 / 730 Loss: 1.9690008163452148 Tokens per Sec: 15601.977135074601
Epoch Step: 635 / 730 Loss: 18.49765968322754 Tokens per Sec: 16321.15535173901
Epoch Step: 640 / 730 Loss: 5.947884559631348 Tokens per Sec: 19486.065903754123
Epoch Step: 645 / 730 Loss: 4.97731876373291 Tokens per Sec: 18747.717587201492
Epoch Step: 650 / 730 Loss: 2.432737350463867 Tokens per Sec: 16803.545190100995
Epoch Step: 655 / 730 Loss: 7.5141472816467285 Tokens per Sec: 15971.037058926519
Epoch Step: 660 / 730 Loss: 8.317578315734863 Tokens per Sec: 20811.592348453836
Epoch Step: 665 / 730 Loss: 4.04021692276001 Tokens per Sec: 16305.738332096797
Epoch Step: 670 / 730 Loss: 7.070075035095215 Tokens per Sec: 18500.802171119245
Epoch Step: 675 / 730 Loss: 3.322296142578125 Tokens per Sec: 17505.69273454006
Epoch Step: 680 / 730 Loss: 4.900082588195801 Tokens per Sec: 17654.422900069138
Epoch Step: 685 / 730 Loss: 0.851951539516449 Tokens per Sec: 18527.52442758145
Epoch Step: 690 / 730 Loss: 5.041440010070801 Tokens per Sec: 18816.187862874376
Epoch Step: 695 / 730 Loss: 6.193855285644531 Tokens per Sec: 20165.045099996973
Epoch Step: 700 / 730 Loss: 5.697902679443359 Tokens per Sec: 15104.721913514613
Epoch Step: 705 / 730 Loss: 6.84319543838501 Tokens per Sec: 14313.55052991984
Epoch Step: 710 / 730 Loss: 7.752826690673828 Tokens per Sec: 16480.07350737338
Epoch Step: 715 / 730 Loss: 7.147562026977539 Tokens per Sec: 14984.541648894903
Epoch Step: 720 / 730 Loss: 3.7112975120544434 Tokens per Sec: 14694.9929218975
Epoch Step: 725 / 730 Loss: 46.17752456665039 Tokens per Sec: 16757.875529333196
Epoch Step: 730 / 730 Loss: 5.022464752197266 Tokens per Sec: 12261.630186054155
Epoch ended with duration 0:01:19.905102
Train perplexity: 1.276549213621485
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] , java.lang.String > VAR_1 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.391584
Validation perplexity: 1.4108668029040874
Epoch 25 / 1000
Epoch Step: 5 / 730 Loss: 4.521631240844727 Tokens per Sec: 14998.392470161773
Epoch Step: 10 / 730 Loss: 2.132115364074707 Tokens per Sec: 16176.656203987139
Epoch Step: 15 / 730 Loss: 8.768387794494629 Tokens per Sec: 16271.058715622627
Epoch Step: 20 / 730 Loss: 7.737222671508789 Tokens per Sec: 16179.278553584076
Epoch Step: 25 / 730 Loss: 0.3400506377220154 Tokens per Sec: 19091.020467123515
Epoch Step: 30 / 730 Loss: 3.169044017791748 Tokens per Sec: 14484.937483003825
Epoch Step: 35 / 730 Loss: 12.443832397460938 Tokens per Sec: 18250.210342152644
Epoch Step: 40 / 730 Loss: 3.1887426376342773 Tokens per Sec: 20137.00590920393
Epoch Step: 45 / 730 Loss: 6.945306301116943 Tokens per Sec: 16121.698037015913
Epoch Step: 50 / 730 Loss: 1.1503033638000488 Tokens per Sec: 16911.612181821794
Epoch Step: 55 / 730 Loss: 4.4807538986206055 Tokens per Sec: 17752.115523147586
Epoch Step: 60 / 730 Loss: 6.004897594451904 Tokens per Sec: 20269.22869868171
Epoch Step: 65 / 730 Loss: 9.695296287536621 Tokens per Sec: 16372.682602501463
Epoch Step: 70 / 730 Loss: 5.478672981262207 Tokens per Sec: 16458.988419183814
Epoch Step: 75 / 730 Loss: 2.9382364749908447 Tokens per Sec: 18002.481025809004
Epoch Step: 80 / 730 Loss: 3.0215156078338623 Tokens per Sec: 14771.468510812521
Epoch Step: 85 / 730 Loss: 3.062939405441284 Tokens per Sec: 16464.743797068673
Epoch Step: 90 / 730 Loss: 2.4617371559143066 Tokens per Sec: 21307.629497754184
Epoch Step: 95 / 730 Loss: 6.2911458015441895 Tokens per Sec: 20205.528616807755
Epoch Step: 100 / 730 Loss: 3.3549046516418457 Tokens per Sec: 18139.31644336775
Epoch Step: 105 / 730 Loss: 3.029475212097168 Tokens per Sec: 11983.09265708544
Epoch Step: 110 / 730 Loss: 7.034041881561279 Tokens per Sec: 18206.812523072054
Epoch Step: 115 / 730 Loss: 26.338464736938477 Tokens per Sec: 18101.683809689253
Epoch Step: 120 / 730 Loss: 7.559541702270508 Tokens per Sec: 16118.407766486262
Epoch Step: 125 / 730 Loss: 1.7827012538909912 Tokens per Sec: 17516.992596796044
Epoch Step: 130 / 730 Loss: 3.1005282402038574 Tokens per Sec: 20305.28972656944
Epoch Step: 135 / 730 Loss: 5.490350246429443 Tokens per Sec: 18118.392478593905
Epoch Step: 140 / 730 Loss: 3.416062116622925 Tokens per Sec: 15986.723542291786
Epoch Step: 145 / 730 Loss: 1.9674174785614014 Tokens per Sec: 17451.121473752937
Epoch Step: 150 / 730 Loss: 5.359976291656494 Tokens per Sec: 19308.22160598125
Epoch Step: 155 / 730 Loss: 31.15786361694336 Tokens per Sec: 18478.114022424503
Epoch Step: 160 / 730 Loss: 5.542086601257324 Tokens per Sec: 18320.249212024588
Epoch Step: 165 / 730 Loss: 7.187106609344482 Tokens per Sec: 15039.286996550365
Epoch Step: 170 / 730 Loss: 4.690526485443115 Tokens per Sec: 19979.49159043905
Epoch Step: 175 / 730 Loss: 3.2275078296661377 Tokens per Sec: 16287.838280715205
Epoch Step: 180 / 730 Loss: 6.508681297302246 Tokens per Sec: 16068.138060921961
Epoch Step: 185 / 730 Loss: 7.618541240692139 Tokens per Sec: 16410.479855509067
Epoch Step: 190 / 730 Loss: 6.409296989440918 Tokens per Sec: 19729.998331583072
Epoch Step: 195 / 730 Loss: 3.5257017612457275 Tokens per Sec: 19118.904311260467
Epoch Step: 200 / 730 Loss: 2.3157060146331787 Tokens per Sec: 16237.014803044549
Epoch Step: 205 / 730 Loss: 2.487260341644287 Tokens per Sec: 14932.93751402045
Epoch Step: 210 / 730 Loss: 3.318098306655884 Tokens per Sec: 18536.336897068613
Epoch Step: 215 / 730 Loss: 1.279380202293396 Tokens per Sec: 18281.03880365611
Epoch Step: 220 / 730 Loss: 82.35629272460938 Tokens per Sec: 21321.182742790472
Epoch Step: 225 / 730 Loss: 9.30495834350586 Tokens per Sec: 16289.738873672244
Epoch Step: 230 / 730 Loss: 3.6177501678466797 Tokens per Sec: 16136.294271034938
Epoch Step: 235 / 730 Loss: 10.63420581817627 Tokens per Sec: 18355.286113616177
Epoch Step: 240 / 730 Loss: 6.257705211639404 Tokens per Sec: 17509.105568841816
Epoch Step: 245 / 730 Loss: 4.2930474281311035 Tokens per Sec: 15257.890996141232
Epoch Step: 250 / 730 Loss: 3.3747286796569824 Tokens per Sec: 14006.146131037465
Epoch Step: 255 / 730 Loss: 3.6319386959075928 Tokens per Sec: 19766.739070451833
Epoch Step: 260 / 730 Loss: 2.022855281829834 Tokens per Sec: 18700.34364818308
Epoch Step: 265 / 730 Loss: 2.36511492729187 Tokens per Sec: 16357.692192565473
Epoch Step: 270 / 730 Loss: 1.1027936935424805 Tokens per Sec: 18536.07474378436
Epoch Step: 275 / 730 Loss: 3.243027925491333 Tokens per Sec: 16794.426336754306
Epoch Step: 280 / 730 Loss: 2.318789005279541 Tokens per Sec: 17798.558866696447
Epoch Step: 285 / 730 Loss: 21.058691024780273 Tokens per Sec: 20176.089373941562
Epoch Step: 290 / 730 Loss: 11.350303649902344 Tokens per Sec: 18004.976955923496
Epoch Step: 295 / 730 Loss: 4.177726745605469 Tokens per Sec: 17090.08064733543
Epoch Step: 300 / 730 Loss: 3.511474609375 Tokens per Sec: 17247.96433184222
Epoch Step: 305 / 730 Loss: 6.6242241859436035 Tokens per Sec: 17149.25186625146
Epoch Step: 310 / 730 Loss: 5.319207668304443 Tokens per Sec: 18065.562302392
Epoch Step: 315 / 730 Loss: 60.57072067260742 Tokens per Sec: 14426.299340928383
Epoch Step: 320 / 730 Loss: 92.27584838867188 Tokens per Sec: 17740.988555135697
Epoch Step: 325 / 730 Loss: 7.1783952713012695 Tokens per Sec: 15173.057269629178
Epoch Step: 330 / 730 Loss: 2.8526058197021484 Tokens per Sec: 17959.39353189326
Epoch Step: 335 / 730 Loss: 4.55089807510376 Tokens per Sec: 19894.180854816317
Epoch Step: 340 / 730 Loss: 7.872932434082031 Tokens per Sec: 19798.437998809564
Epoch Step: 345 / 730 Loss: 3.303109645843506 Tokens per Sec: 19345.25889421096
Epoch Step: 350 / 730 Loss: 8.5704345703125 Tokens per Sec: 14856.173673304162
Epoch Step: 355 / 730 Loss: 7.226441383361816 Tokens per Sec: 19508.60427258034
Epoch Step: 360 / 730 Loss: 3.1414036750793457 Tokens per Sec: 14978.66937832088
Epoch Step: 365 / 730 Loss: 8.144760131835938 Tokens per Sec: 16618.23913212837
Epoch Step: 370 / 730 Loss: 29.031591415405273 Tokens per Sec: 14507.610235000058
Epoch Step: 375 / 730 Loss: 6.0876336097717285 Tokens per Sec: 19346.581864492207
Epoch Step: 380 / 730 Loss: 3.016770601272583 Tokens per Sec: 19354.880417481632
Epoch Step: 385 / 730 Loss: 1.5538753271102905 Tokens per Sec: 18852.8532801298
Epoch Step: 390 / 730 Loss: 1.1204332113265991 Tokens per Sec: 20273.671388958188
Epoch Step: 395 / 730 Loss: 1.2530708312988281 Tokens per Sec: 17467.396762996606
Epoch Step: 400 / 730 Loss: 2.800091028213501 Tokens per Sec: 20209.157461974653
Epoch Step: 405 / 730 Loss: 2.968873977661133 Tokens per Sec: 18607.131458656822
Epoch Step: 410 / 730 Loss: 3.1001288890838623 Tokens per Sec: 16403.81453220845
Epoch Step: 415 / 730 Loss: 3.570641279220581 Tokens per Sec: 18687.89099011668
Epoch Step: 420 / 730 Loss: 4.569113731384277 Tokens per Sec: 16444.815586244695
Epoch Step: 425 / 730 Loss: 5.14393949508667 Tokens per Sec: 18747.103745952667
Epoch Step: 430 / 730 Loss: 5.155430316925049 Tokens per Sec: 18332.524524727178
Epoch Step: 435 / 730 Loss: 1.6162630319595337 Tokens per Sec: 16116.190138863629
Epoch Step: 440 / 730 Loss: 7.245245933532715 Tokens per Sec: 17264.63049222482
Epoch Step: 445 / 730 Loss: 2.14123797416687 Tokens per Sec: 17066.388638342232
Epoch Step: 450 / 730 Loss: 1.8420660495758057 Tokens per Sec: 16210.795331227097
Epoch Step: 455 / 730 Loss: 1.9299685955047607 Tokens per Sec: 14815.829867990495
Epoch Step: 460 / 730 Loss: 14.409443855285645 Tokens per Sec: 18381.23930174579
Epoch Step: 465 / 730 Loss: 3.7869861125946045 Tokens per Sec: 17675.429546884006
Epoch Step: 470 / 730 Loss: 5.861962795257568 Tokens per Sec: 19405.708439417886
Epoch Step: 475 / 730 Loss: 3.684955596923828 Tokens per Sec: 17360.111906067374
Epoch Step: 480 / 730 Loss: 4.54444694519043 Tokens per Sec: 18124.39922682023
Epoch Step: 485 / 730 Loss: 5.434661865234375 Tokens per Sec: 15989.659444721407
Epoch Step: 490 / 730 Loss: 1.6041597127914429 Tokens per Sec: 19258.213662786435
Epoch Step: 495 / 730 Loss: 2.4738149642944336 Tokens per Sec: 18502.339229896985
Epoch Step: 500 / 730 Loss: 4.246159553527832 Tokens per Sec: 19246.0685309649
Epoch Step: 505 / 730 Loss: 2.247185707092285 Tokens per Sec: 16477.54808071625
Epoch Step: 510 / 730 Loss: 2.160386323928833 Tokens per Sec: 17683.67098485781
Epoch Step: 515 / 730 Loss: 6.443288326263428 Tokens per Sec: 19194.90043975113
Epoch Step: 520 / 730 Loss: 7.329464435577393 Tokens per Sec: 17651.337395064846
Epoch Step: 525 / 730 Loss: 0.9751630425453186 Tokens per Sec: 14613.576892357376
Epoch Step: 530 / 730 Loss: 4.434745788574219 Tokens per Sec: 19394.259657936538
Epoch Step: 535 / 730 Loss: 4.912447452545166 Tokens per Sec: 19204.598897910702
Epoch Step: 540 / 730 Loss: 4.66595458984375 Tokens per Sec: 17748.588250910754
Epoch Step: 545 / 730 Loss: 4.631167888641357 Tokens per Sec: 13645.649877050391
Epoch Step: 550 / 730 Loss: 6.5496110916137695 Tokens per Sec: 21186.41100881243
Epoch Step: 555 / 730 Loss: 3.721393585205078 Tokens per Sec: 15402.89578682347
Epoch Step: 560 / 730 Loss: 7.612091064453125 Tokens per Sec: 19948.509188493925
Epoch Step: 565 / 730 Loss: 3.4034910202026367 Tokens per Sec: 16754.182256431282
Epoch Step: 570 / 730 Loss: 3.645143747329712 Tokens per Sec: 18727.482319128878
Epoch Step: 575 / 730 Loss: 6.985886096954346 Tokens per Sec: 18738.788773599823
Epoch Step: 580 / 730 Loss: 1.5626672506332397 Tokens per Sec: 20159.19950044468
Epoch Step: 585 / 730 Loss: 3.4858593940734863 Tokens per Sec: 17828.27182686877
Epoch Step: 590 / 730 Loss: 72.56329345703125 Tokens per Sec: 17679.72548867524
Epoch Step: 595 / 730 Loss: 57.60306930541992 Tokens per Sec: 18489.351170517722
Epoch Step: 600 / 730 Loss: 11.161416053771973 Tokens per Sec: 14806.665682478155
Epoch Step: 605 / 730 Loss: 4.525192737579346 Tokens per Sec: 18263.967615080335
Epoch Step: 610 / 730 Loss: 1.7060083150863647 Tokens per Sec: 16871.88479380198
Epoch Step: 615 / 730 Loss: 7.048749923706055 Tokens per Sec: 17408.638967393796
Epoch Step: 620 / 730 Loss: 1.7328212261199951 Tokens per Sec: 18143.1809091622
Epoch Step: 625 / 730 Loss: 4.662716388702393 Tokens per Sec: 16275.563547886955
Epoch Step: 630 / 730 Loss: 2.4557008743286133 Tokens per Sec: 18238.50275518624
Epoch Step: 635 / 730 Loss: 8.373190879821777 Tokens per Sec: 20439.67754669303
Epoch Step: 640 / 730 Loss: 51.22588348388672 Tokens per Sec: 15743.357347948135
Epoch Step: 645 / 730 Loss: 3.8685405254364014 Tokens per Sec: 19852.08603320374
Epoch Step: 650 / 730 Loss: 1.434657096862793 Tokens per Sec: 19489.694401743258
Epoch Step: 655 / 730 Loss: 2.708649158477783 Tokens per Sec: 17195.236928776125
Epoch Step: 660 / 730 Loss: 3.768688201904297 Tokens per Sec: 15184.313663043127
Epoch Step: 665 / 730 Loss: 3.827894449234009 Tokens per Sec: 19806.323208353773
Epoch Step: 670 / 730 Loss: 6.741114616394043 Tokens per Sec: 18566.619927706917
Epoch Step: 675 / 730 Loss: 2.8762049674987793 Tokens per Sec: 14188.452411005743
Epoch Step: 680 / 730 Loss: 6.519575119018555 Tokens per Sec: 20655.67764745927
Epoch Step: 685 / 730 Loss: 28.767698287963867 Tokens per Sec: 17998.9732114295
Epoch Step: 690 / 730 Loss: 5.627782344818115 Tokens per Sec: 17434.606356264947
Epoch Step: 695 / 730 Loss: 24.603740692138672 Tokens per Sec: 15901.37748204066
Epoch Step: 700 / 730 Loss: 6.340761661529541 Tokens per Sec: 15838.034045929953
Epoch Step: 705 / 730 Loss: 6.1493821144104 Tokens per Sec: 15849.927468415228
Epoch Step: 710 / 730 Loss: 4.895961284637451 Tokens per Sec: 14956.867135235041
Epoch Step: 715 / 730 Loss: 2.453110694885254 Tokens per Sec: 14936.118815707101
Epoch Step: 720 / 730 Loss: 6.477083206176758 Tokens per Sec: 14110.2175437183
Epoch Step: 725 / 730 Loss: 3.847987651824951 Tokens per Sec: 14807.940648018617
Epoch Step: 730 / 730 Loss: 3.382939100265503 Tokens per Sec: 15140.824555884012
Epoch ended with duration 0:01:20.142208
Train perplexity: 1.272929806790174
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.307003
Validation perplexity: 1.279746859930183
Model saved checkpoint!
Epoch 26 / 1000
Epoch Step: 5 / 730 Loss: 2.4717636108398438 Tokens per Sec: 17880.010567402853
Epoch Step: 10 / 730 Loss: 2.847327947616577 Tokens per Sec: 19489.12288605092
Epoch Step: 15 / 730 Loss: 3.385977029800415 Tokens per Sec: 20308.58302487245
Epoch Step: 20 / 730 Loss: 3.0931813716888428 Tokens per Sec: 14541.114243041146
Epoch Step: 25 / 730 Loss: 6.324516296386719 Tokens per Sec: 21782.732228441353
Epoch Step: 30 / 730 Loss: 38.606468200683594 Tokens per Sec: 19026.423850698586
Epoch Step: 35 / 730 Loss: 5.12259578704834 Tokens per Sec: 19319.14263457813
Epoch Step: 40 / 730 Loss: 0.6628298163414001 Tokens per Sec: 19364.365102339292
Epoch Step: 45 / 730 Loss: 6.701827049255371 Tokens per Sec: 14592.319071087533
Epoch Step: 50 / 730 Loss: 2.654470443725586 Tokens per Sec: 16771.06450011543
Epoch Step: 55 / 730 Loss: 3.0652945041656494 Tokens per Sec: 19027.654091887092
Epoch Step: 60 / 730 Loss: 2.2283542156219482 Tokens per Sec: 16988.792024955546
Epoch Step: 65 / 730 Loss: 5.8802170753479 Tokens per Sec: 17102.587314316675
Epoch Step: 70 / 730 Loss: 2.545478582382202 Tokens per Sec: 16462.039858247914
Epoch Step: 75 / 730 Loss: 4.057915210723877 Tokens per Sec: 16798.35825012192
Epoch Step: 80 / 730 Loss: 1.9037158489227295 Tokens per Sec: 18341.83461502535
Epoch Step: 85 / 730 Loss: 2.4288036823272705 Tokens per Sec: 17300.614986102206
Epoch Step: 90 / 730 Loss: 5.032707691192627 Tokens per Sec: 14198.555944585096
Epoch Step: 95 / 730 Loss: 6.806981086730957 Tokens per Sec: 19269.493246214053
Epoch Step: 100 / 730 Loss: 23.24040412902832 Tokens per Sec: 13892.32289014068
Epoch Step: 105 / 730 Loss: 3.865525484085083 Tokens per Sec: 16975.33705776653
Epoch Step: 110 / 730 Loss: 4.934285640716553 Tokens per Sec: 18926.74238511893
Epoch Step: 115 / 730 Loss: 6.958564281463623 Tokens per Sec: 17503.004442539914
Epoch Step: 120 / 730 Loss: 3.172466993331909 Tokens per Sec: 14963.484024411724
Epoch Step: 125 / 730 Loss: 4.084698677062988 Tokens per Sec: 19234.335366165757
Epoch Step: 130 / 730 Loss: 2.060007333755493 Tokens per Sec: 16143.32722096041
Epoch Step: 135 / 730 Loss: 3.2150514125823975 Tokens per Sec: 18782.563272076313
Epoch Step: 140 / 730 Loss: 16.403751373291016 Tokens per Sec: 17361.087172183965
Epoch Step: 145 / 730 Loss: 3.147324562072754 Tokens per Sec: 16362.572930908302
Epoch Step: 150 / 730 Loss: 7.382818222045898 Tokens per Sec: 17992.806818791523
Epoch Step: 155 / 730 Loss: 2.492398262023926 Tokens per Sec: 20451.064345502007
Epoch Step: 160 / 730 Loss: 2.921743392944336 Tokens per Sec: 15570.499526915793
Epoch Step: 165 / 730 Loss: 6.472360134124756 Tokens per Sec: 21175.28083480137
Epoch Step: 170 / 730 Loss: 4.493401527404785 Tokens per Sec: 16238.34587196278
Epoch Step: 175 / 730 Loss: 4.466863632202148 Tokens per Sec: 16457.19419377399
Epoch Step: 180 / 730 Loss: 6.216421604156494 Tokens per Sec: 17246.531799213204
Epoch Step: 185 / 730 Loss: 0.6148617267608643 Tokens per Sec: 20515.478233718197
Epoch Step: 190 / 730 Loss: 3.0024683475494385 Tokens per Sec: 16962.29278941751
Epoch Step: 195 / 730 Loss: 3.8960113525390625 Tokens per Sec: 17355.521583802092
Epoch Step: 200 / 730 Loss: 6.06850528717041 Tokens per Sec: 14829.428748574386
Epoch Step: 205 / 730 Loss: 4.119576930999756 Tokens per Sec: 18620.35447878866
Epoch Step: 210 / 730 Loss: 6.6636481285095215 Tokens per Sec: 19481.05736147235
Epoch Step: 215 / 730 Loss: 3.9833037853240967 Tokens per Sec: 18943.05968554807
Epoch Step: 220 / 730 Loss: 1.617659091949463 Tokens per Sec: 16075.253869977347
Epoch Step: 225 / 730 Loss: 3.0541954040527344 Tokens per Sec: 17368.85744266227
Epoch Step: 230 / 730 Loss: 4.639058589935303 Tokens per Sec: 16842.812272803625
Epoch Step: 235 / 730 Loss: 8.085677146911621 Tokens per Sec: 18917.787291135006
Epoch Step: 240 / 730 Loss: 4.64171028137207 Tokens per Sec: 17236.37945871104
Epoch Step: 245 / 730 Loss: 1.4811569452285767 Tokens per Sec: 20221.476108156938
Epoch Step: 250 / 730 Loss: 3.6468892097473145 Tokens per Sec: 20953.593921550004
Epoch Step: 255 / 730 Loss: 1.4203099012374878 Tokens per Sec: 13564.65382023986
Epoch Step: 260 / 730 Loss: 1.1831843852996826 Tokens per Sec: 17470.975908492394
Epoch Step: 265 / 730 Loss: 2.2251453399658203 Tokens per Sec: 16806.85474922665
Epoch Step: 270 / 730 Loss: 5.391181945800781 Tokens per Sec: 19799.839202062303
Epoch Step: 275 / 730 Loss: 3.0831568241119385 Tokens per Sec: 16589.159171705276
Epoch Step: 280 / 730 Loss: 3.807609796524048 Tokens per Sec: 16064.232990524275
Epoch Step: 285 / 730 Loss: 3.919844388961792 Tokens per Sec: 19438.83901268973
Epoch Step: 290 / 730 Loss: 3.8005828857421875 Tokens per Sec: 18702.30932555812
Epoch Step: 295 / 730 Loss: 6.589345455169678 Tokens per Sec: 14229.197001972387
Epoch Step: 300 / 730 Loss: 4.617146015167236 Tokens per Sec: 18551.15052717655
Epoch Step: 305 / 730 Loss: 1.9714634418487549 Tokens per Sec: 14173.902356601911
Epoch Step: 310 / 730 Loss: 5.907249450683594 Tokens per Sec: 17472.709164528227
Epoch Step: 315 / 730 Loss: 4.30082368850708 Tokens per Sec: 15261.132567081186
Epoch Step: 320 / 730 Loss: 5.775664329528809 Tokens per Sec: 19783.87188980687
Epoch Step: 325 / 730 Loss: 9.495279312133789 Tokens per Sec: 19303.400979761886
Epoch Step: 330 / 730 Loss: 1.692073106765747 Tokens per Sec: 15679.308763935509
Epoch Step: 335 / 730 Loss: 3.3755154609680176 Tokens per Sec: 20402.182989698424
Epoch Step: 340 / 730 Loss: 2.998687982559204 Tokens per Sec: 19688.636126639325
Epoch Step: 345 / 730 Loss: 2.615440607070923 Tokens per Sec: 17987.48198624715
Epoch Step: 350 / 730 Loss: 2.3598248958587646 Tokens per Sec: 18866.40833677149
Epoch Step: 355 / 730 Loss: 1.190217137336731 Tokens per Sec: 15288.357222070454
Epoch Step: 360 / 730 Loss: 3.274435520172119 Tokens per Sec: 18382.58903848076
Epoch Step: 365 / 730 Loss: 1.90389883518219 Tokens per Sec: 15586.01763904807
Epoch Step: 370 / 730 Loss: 0.7106989622116089 Tokens per Sec: 16956.902911568362
Epoch Step: 375 / 730 Loss: 6.112864971160889 Tokens per Sec: 16336.882639909167
Epoch Step: 380 / 730 Loss: 5.655015468597412 Tokens per Sec: 18795.161785662825
Epoch Step: 385 / 730 Loss: 2.0756616592407227 Tokens per Sec: 17018.552429356732
Epoch Step: 390 / 730 Loss: 3.4356305599212646 Tokens per Sec: 14079.636779715318
Epoch Step: 395 / 730 Loss: 1.4512805938720703 Tokens per Sec: 18771.179242199483
Epoch Step: 400 / 730 Loss: 4.5513224601745605 Tokens per Sec: 21759.705285563738
Epoch Step: 405 / 730 Loss: 5.49904727935791 Tokens per Sec: 18587.187571931765
Epoch Step: 410 / 730 Loss: 1.4051053524017334 Tokens per Sec: 16569.250303646793
Epoch Step: 415 / 730 Loss: 8.287561416625977 Tokens per Sec: 19638.14432146246
Epoch Step: 420 / 730 Loss: 3.3424272537231445 Tokens per Sec: 14295.550158159882
Epoch Step: 425 / 730 Loss: 2.196106433868408 Tokens per Sec: 17922.371582563886
Epoch Step: 430 / 730 Loss: 7.863212585449219 Tokens per Sec: 19092.200687958422
Epoch Step: 435 / 730 Loss: 3.539745330810547 Tokens per Sec: 19335.5946737043
Epoch Step: 440 / 730 Loss: 6.25192928314209 Tokens per Sec: 13857.31896712219
Epoch Step: 445 / 730 Loss: 2.07724928855896 Tokens per Sec: 15666.776709904138
Epoch Step: 450 / 730 Loss: 4.457787036895752 Tokens per Sec: 16980.525380660187
Epoch Step: 455 / 730 Loss: 6.877850532531738 Tokens per Sec: 18381.38745199449
Epoch Step: 460 / 730 Loss: 1.5870792865753174 Tokens per Sec: 15303.648880661402
Epoch Step: 465 / 730 Loss: 1.6066685914993286 Tokens per Sec: 21247.946958461787
Epoch Step: 470 / 730 Loss: 1.8834962844848633 Tokens per Sec: 18352.54877055943
Epoch Step: 475 / 730 Loss: 7.478865146636963 Tokens per Sec: 19648.524915449652
Epoch Step: 480 / 730 Loss: 2.7953388690948486 Tokens per Sec: 19828.350799850174
Epoch Step: 485 / 730 Loss: 2.815117835998535 Tokens per Sec: 19022.004595557628
Epoch Step: 490 / 730 Loss: 6.687499046325684 Tokens per Sec: 17742.153459048815
Epoch Step: 495 / 730 Loss: 2.0214529037475586 Tokens per Sec: 17325.839582821347
Epoch Step: 500 / 730 Loss: 2.4308483600616455 Tokens per Sec: 17149.711486236956
Epoch Step: 505 / 730 Loss: 6.08228874206543 Tokens per Sec: 18086.449075836204
Epoch Step: 510 / 730 Loss: 6.9659647941589355 Tokens per Sec: 20568.848769657292
Epoch Step: 515 / 730 Loss: 42.8359260559082 Tokens per Sec: 16961.27497125223
Epoch Step: 520 / 730 Loss: 3.5157723426818848 Tokens per Sec: 18023.868073306512
Epoch Step: 525 / 730 Loss: 1.6807668209075928 Tokens per Sec: 15959.227975339702
Epoch Step: 530 / 730 Loss: 1.2831699848175049 Tokens per Sec: 15683.03712470591
Epoch Step: 535 / 730 Loss: 1.055344820022583 Tokens per Sec: 16449.625270279164
Epoch Step: 540 / 730 Loss: 4.913788795471191 Tokens per Sec: 18685.285717351362
Epoch Step: 545 / 730 Loss: 7.1365203857421875 Tokens per Sec: 17941.18053410414
Epoch Step: 550 / 730 Loss: 3.8168864250183105 Tokens per Sec: 19824.07321158248
Epoch Step: 555 / 730 Loss: 3.1372761726379395 Tokens per Sec: 17811.17414871395
Epoch Step: 560 / 730 Loss: 2.435154676437378 Tokens per Sec: 14720.996868066497
Epoch Step: 565 / 730 Loss: 4.987960338592529 Tokens per Sec: 19101.303003251414
Epoch Step: 570 / 730 Loss: 3.3431363105773926 Tokens per Sec: 20436.426933476858
Epoch Step: 575 / 730 Loss: 2.6518337726593018 Tokens per Sec: 14122.205068447942
Epoch Step: 580 / 730 Loss: 27.82176971435547 Tokens per Sec: 18801.038068329828
Epoch Step: 585 / 730 Loss: 46.958187103271484 Tokens per Sec: 16281.342687661247
Epoch Step: 590 / 730 Loss: 1.9121419191360474 Tokens per Sec: 16372.676236640818
Epoch Step: 595 / 730 Loss: 1.1578691005706787 Tokens per Sec: 14916.708555058935
Epoch Step: 600 / 730 Loss: 4.298543930053711 Tokens per Sec: 20313.665466180166
Epoch Step: 605 / 730 Loss: 4.814385414123535 Tokens per Sec: 19119.556991645994
Epoch Step: 610 / 730 Loss: 2.9409220218658447 Tokens per Sec: 17972.82247917377
Epoch Step: 615 / 730 Loss: 3.1591997146606445 Tokens per Sec: 19912.698425853952
Epoch Step: 620 / 730 Loss: 4.230400085449219 Tokens per Sec: 17838.675640148682
Epoch Step: 625 / 730 Loss: 5.031100273132324 Tokens per Sec: 14376.641292998971
Epoch Step: 630 / 730 Loss: 4.739874362945557 Tokens per Sec: 20048.900629662763
Epoch Step: 635 / 730 Loss: 6.107413291931152 Tokens per Sec: 12693.712350994041
Epoch Step: 640 / 730 Loss: 7.523157596588135 Tokens per Sec: 17591.05348552432
Epoch Step: 645 / 730 Loss: 14.208748817443848 Tokens per Sec: 17370.69466002436
Epoch Step: 650 / 730 Loss: 3.9758095741271973 Tokens per Sec: 18075.61360747434
Epoch Step: 655 / 730 Loss: 12.972477912902832 Tokens per Sec: 16541.965643595973
Epoch Step: 660 / 730 Loss: 2.1387321949005127 Tokens per Sec: 20132.898051215358
Epoch Step: 665 / 730 Loss: 3.2181715965270996 Tokens per Sec: 18759.253340054056
Epoch Step: 670 / 730 Loss: 2.2671921253204346 Tokens per Sec: 17028.866074015114
Epoch Step: 675 / 730 Loss: 6.643661022186279 Tokens per Sec: 16369.671488412592
Epoch Step: 680 / 730 Loss: 1.3649629354476929 Tokens per Sec: 18336.42896720454
Epoch Step: 685 / 730 Loss: 2.6409249305725098 Tokens per Sec: 17110.942430588806
Epoch Step: 690 / 730 Loss: 1.7068623304367065 Tokens per Sec: 18671.660729842955
Epoch Step: 695 / 730 Loss: 7.326907157897949 Tokens per Sec: 18381.518945994532
Epoch Step: 700 / 730 Loss: 4.02460241317749 Tokens per Sec: 19001.645238822406
Epoch Step: 705 / 730 Loss: 2.829490900039673 Tokens per Sec: 12342.320490901535
Epoch Step: 710 / 730 Loss: 5.148099899291992 Tokens per Sec: 15234.80091510012
Epoch Step: 715 / 730 Loss: 5.301620006561279 Tokens per Sec: 17261.376562107904
Epoch Step: 720 / 730 Loss: 1.961427927017212 Tokens per Sec: 16129.983896575544
Epoch Step: 725 / 730 Loss: 5.031782150268555 Tokens per Sec: 15552.308287356851
Epoch Step: 730 / 730 Loss: 4.622727870941162 Tokens per Sec: 16118.423664510716
Epoch ended with duration 0:01:19.736419
Train perplexity: 1.2320321947977309
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] , java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.298068
Validation perplexity: 1.3584776428910017
Epoch 27 / 1000
Epoch Step: 5 / 730 Loss: 2.2265102863311768 Tokens per Sec: 15852.02869481493
Epoch Step: 10 / 730 Loss: 5.84342098236084 Tokens per Sec: 19083.57093553939
Epoch Step: 15 / 730 Loss: 5.198720932006836 Tokens per Sec: 16303.655510483604
Epoch Step: 20 / 730 Loss: 2.3974435329437256 Tokens per Sec: 13240.932976259717
Epoch Step: 25 / 730 Loss: 5.306271553039551 Tokens per Sec: 18556.502468281287
Epoch Step: 30 / 730 Loss: 2.4468586444854736 Tokens per Sec: 16573.526916895134
Epoch Step: 35 / 730 Loss: 0.940588116645813 Tokens per Sec: 17523.584501115947
Epoch Step: 40 / 730 Loss: 1.8315194845199585 Tokens per Sec: 17498.404736519384
Epoch Step: 45 / 730 Loss: 0.9238377809524536 Tokens per Sec: 17667.880415195817
Epoch Step: 50 / 730 Loss: 5.2111945152282715 Tokens per Sec: 17709.67912950994
Epoch Step: 55 / 730 Loss: 4.443111419677734 Tokens per Sec: 18189.96727723095
Epoch Step: 60 / 730 Loss: 5.311145782470703 Tokens per Sec: 18799.947898771825
Epoch Step: 65 / 730 Loss: 5.4796142578125 Tokens per Sec: 17771.304391696318
Epoch Step: 70 / 730 Loss: 3.9968252182006836 Tokens per Sec: 19454.613256989178
Epoch Step: 75 / 730 Loss: 4.03107213973999 Tokens per Sec: 20919.832327059317
Epoch Step: 80 / 730 Loss: 4.632628440856934 Tokens per Sec: 18474.196398564232
Epoch Step: 85 / 730 Loss: 9.298543930053711 Tokens per Sec: 16823.297629597324
Epoch Step: 90 / 730 Loss: 7.688855171203613 Tokens per Sec: 16980.184984899795
Epoch Step: 95 / 730 Loss: 3.372673988342285 Tokens per Sec: 20164.75682449646
Epoch Step: 100 / 730 Loss: 1.9463582038879395 Tokens per Sec: 16776.36845686845
Epoch Step: 105 / 730 Loss: 4.933047771453857 Tokens per Sec: 13484.096348472318
Epoch Step: 110 / 730 Loss: 6.200496673583984 Tokens per Sec: 17504.57990908982
Epoch Step: 115 / 730 Loss: 9.893513679504395 Tokens per Sec: 19447.963697696992
Epoch Step: 120 / 730 Loss: 7.7789130210876465 Tokens per Sec: 21298.559959985465
Epoch Step: 125 / 730 Loss: 2.1552443504333496 Tokens per Sec: 20857.769836736818
Epoch Step: 130 / 730 Loss: 7.734030246734619 Tokens per Sec: 18375.93653062683
Epoch Step: 135 / 730 Loss: 0.7575282454490662 Tokens per Sec: 17445.81883541152
Epoch Step: 140 / 730 Loss: 1.4121158123016357 Tokens per Sec: 16689.588062676386
Epoch Step: 145 / 730 Loss: 4.823520660400391 Tokens per Sec: 18096.425211165595
Epoch Step: 150 / 730 Loss: 3.5285744667053223 Tokens per Sec: 20873.327595916897
Epoch Step: 155 / 730 Loss: 6.968808174133301 Tokens per Sec: 16694.838352120638
Epoch Step: 160 / 730 Loss: 5.927104949951172 Tokens per Sec: 18414.687591038728
Epoch Step: 165 / 730 Loss: 2.769876718521118 Tokens per Sec: 19239.759486062325
Epoch Step: 170 / 730 Loss: 2.4478235244750977 Tokens per Sec: 17529.30404814567
Epoch Step: 175 / 730 Loss: 2.883772850036621 Tokens per Sec: 15744.54393752069
Epoch Step: 180 / 730 Loss: 32.89579391479492 Tokens per Sec: 16005.846878466164
Epoch Step: 185 / 730 Loss: 1.4731985330581665 Tokens per Sec: 18825.255837039145
Epoch Step: 190 / 730 Loss: 1.5623763799667358 Tokens per Sec: 18609.7612222219
Epoch Step: 195 / 730 Loss: 2.731443405151367 Tokens per Sec: 16533.96692374266
Epoch Step: 200 / 730 Loss: 3.7507145404815674 Tokens per Sec: 14788.311836775269
Epoch Step: 205 / 730 Loss: 1.2323622703552246 Tokens per Sec: 15225.380291607347
Epoch Step: 210 / 730 Loss: 2.382631540298462 Tokens per Sec: 18923.542768143907
Epoch Step: 215 / 730 Loss: 2.825312614440918 Tokens per Sec: 20411.327757676852
Epoch Step: 220 / 730 Loss: 7.565108776092529 Tokens per Sec: 18661.157959309337
Epoch Step: 225 / 730 Loss: 1.5348432064056396 Tokens per Sec: 17549.524617005987
Epoch Step: 230 / 730 Loss: 4.061749458312988 Tokens per Sec: 14785.422781363417
Epoch Step: 235 / 730 Loss: 7.82366943359375 Tokens per Sec: 21091.89999166321
Epoch Step: 240 / 730 Loss: 0.6030364036560059 Tokens per Sec: 17607.666376596015
Epoch Step: 245 / 730 Loss: 5.924172401428223 Tokens per Sec: 17871.022267698143
Epoch Step: 250 / 730 Loss: 2.261739730834961 Tokens per Sec: 18991.636467561086
Epoch Step: 255 / 730 Loss: 5.190032482147217 Tokens per Sec: 15841.818584113304
Epoch Step: 260 / 730 Loss: 7.0323405265808105 Tokens per Sec: 16483.66494379759
Epoch Step: 265 / 730 Loss: 5.114588737487793 Tokens per Sec: 14254.93572422108
Epoch Step: 270 / 730 Loss: 44.96000671386719 Tokens per Sec: 16343.466715719964
Epoch Step: 275 / 730 Loss: 5.3340840339660645 Tokens per Sec: 18107.285236848864
Epoch Step: 280 / 730 Loss: 0.9337776899337769 Tokens per Sec: 20210.786321635747
Epoch Step: 285 / 730 Loss: 56.01531219482422 Tokens per Sec: 18553.473251441465
Epoch Step: 290 / 730 Loss: 1.904000997543335 Tokens per Sec: 17284.756217973663
Epoch Step: 295 / 730 Loss: 7.581892967224121 Tokens per Sec: 20728.91774655361
Epoch Step: 300 / 730 Loss: 6.929413795471191 Tokens per Sec: 19615.06014493551
Epoch Step: 305 / 730 Loss: 4.242580890655518 Tokens per Sec: 16911.19641174909
Epoch Step: 310 / 730 Loss: 7.972616672515869 Tokens per Sec: 18334.8789120598
Epoch Step: 315 / 730 Loss: 1.6594740152359009 Tokens per Sec: 16382.580028337577
Epoch Step: 320 / 730 Loss: 4.962465763092041 Tokens per Sec: 16171.186879521976
Epoch Step: 325 / 730 Loss: 20.05011749267578 Tokens per Sec: 19943.414530575978
Epoch Step: 330 / 730 Loss: 28.138715744018555 Tokens per Sec: 15197.807290203826
Epoch Step: 335 / 730 Loss: 2.2477262020111084 Tokens per Sec: 18947.460265034824
Epoch Step: 340 / 730 Loss: 8.843182563781738 Tokens per Sec: 19621.797269948413
Epoch Step: 345 / 730 Loss: 8.040611267089844 Tokens per Sec: 16304.760483519169
Epoch Step: 350 / 730 Loss: 4.850672245025635 Tokens per Sec: 18767.735967562017
Epoch Step: 355 / 730 Loss: 4.868826866149902 Tokens per Sec: 17626.136239430416
Epoch Step: 360 / 730 Loss: 2.4890387058258057 Tokens per Sec: 15342.669724125828
Epoch Step: 365 / 730 Loss: 1.90549635887146 Tokens per Sec: 13572.998047594569
Epoch Step: 370 / 730 Loss: 1.6405526399612427 Tokens per Sec: 15297.387635326992
Epoch Step: 375 / 730 Loss: 1.996964454650879 Tokens per Sec: 20199.634579413916
Epoch Step: 380 / 730 Loss: 8.62118911743164 Tokens per Sec: 17416.00910721452
Epoch Step: 385 / 730 Loss: 4.983150482177734 Tokens per Sec: 15999.141103441289
Epoch Step: 390 / 730 Loss: 0.9261856079101562 Tokens per Sec: 18593.074161806584
Epoch Step: 395 / 730 Loss: 2.5045392513275146 Tokens per Sec: 20253.909206387216
Epoch Step: 400 / 730 Loss: 3.124871253967285 Tokens per Sec: 22206.07673607695
Epoch Step: 405 / 730 Loss: 2.5790202617645264 Tokens per Sec: 15169.555791822204
Epoch Step: 410 / 730 Loss: 6.007383823394775 Tokens per Sec: 18420.209119960822
Epoch Step: 415 / 730 Loss: 6.5490217208862305 Tokens per Sec: 19256.14633103753
Epoch Step: 420 / 730 Loss: 6.581339359283447 Tokens per Sec: 14845.371753320554
Epoch Step: 425 / 730 Loss: 1.147521734237671 Tokens per Sec: 18702.361645927296
Epoch Step: 430 / 730 Loss: 6.715331554412842 Tokens per Sec: 19574.435903908896
Epoch Step: 435 / 730 Loss: 1.9698749780654907 Tokens per Sec: 17026.3553271023
Epoch Step: 440 / 730 Loss: 4.12535285949707 Tokens per Sec: 17735.300128075585
Epoch Step: 445 / 730 Loss: 3.1548452377319336 Tokens per Sec: 18942.563200893757
Epoch Step: 450 / 730 Loss: 3.249328374862671 Tokens per Sec: 18966.499345158663
Epoch Step: 455 / 730 Loss: 6.239684104919434 Tokens per Sec: 18019.363041864868
Epoch Step: 460 / 730 Loss: 0.8212419152259827 Tokens per Sec: 20097.728867685946
Epoch Step: 465 / 730 Loss: 4.939576148986816 Tokens per Sec: 19151.20797003466
Epoch Step: 470 / 730 Loss: 3.5364761352539062 Tokens per Sec: 15887.667547972433
Epoch Step: 475 / 730 Loss: 4.316500186920166 Tokens per Sec: 13919.594947139145
Epoch Step: 480 / 730 Loss: 5.419732093811035 Tokens per Sec: 17810.0796967708
Epoch Step: 485 / 730 Loss: 23.004371643066406 Tokens per Sec: 19109.93665758795
Epoch Step: 490 / 730 Loss: 1.3570959568023682 Tokens per Sec: 18470.642533581005
Epoch Step: 495 / 730 Loss: 3.3735270500183105 Tokens per Sec: 16923.499049455077
Epoch Step: 500 / 730 Loss: 2.2003955841064453 Tokens per Sec: 19573.684926129856
Epoch Step: 505 / 730 Loss: 3.85434627532959 Tokens per Sec: 18134.878765578564
Epoch Step: 510 / 730 Loss: 6.246333122253418 Tokens per Sec: 17500.35015936994
Epoch Step: 515 / 730 Loss: 3.717446804046631 Tokens per Sec: 20147.32271856312
Epoch Step: 520 / 730 Loss: 39.207889556884766 Tokens per Sec: 19905.495028034024
Epoch Step: 525 / 730 Loss: 3.2440273761749268 Tokens per Sec: 18182.258799606872
Epoch Step: 530 / 730 Loss: 6.911012172698975 Tokens per Sec: 18632.412936390403
Epoch Step: 535 / 730 Loss: 4.107760906219482 Tokens per Sec: 16778.73790005508
Epoch Step: 540 / 730 Loss: 1.3301806449890137 Tokens per Sec: 17412.403600204616
Epoch Step: 545 / 730 Loss: 4.413233757019043 Tokens per Sec: 18249.16332949143
Epoch Step: 550 / 730 Loss: 3.4087936878204346 Tokens per Sec: 17546.109273193222
Epoch Step: 555 / 730 Loss: 4.224269866943359 Tokens per Sec: 17703.63671508882
Epoch Step: 560 / 730 Loss: 2.7387733459472656 Tokens per Sec: 17910.546908144122
Epoch Step: 565 / 730 Loss: 1.9068071842193604 Tokens per Sec: 18089.542289514004
Epoch Step: 570 / 730 Loss: 1.370617389678955 Tokens per Sec: 14369.524068146022
Epoch Step: 575 / 730 Loss: 2.656454563140869 Tokens per Sec: 18727.51274440908
Epoch Step: 580 / 730 Loss: 2.0967960357666016 Tokens per Sec: 16614.255596668372
Epoch Step: 585 / 730 Loss: 3.824373245239258 Tokens per Sec: 16668.6731563892
Epoch Step: 590 / 730 Loss: 1.0932283401489258 Tokens per Sec: 18606.108543031292
Epoch Step: 595 / 730 Loss: 1.6004204750061035 Tokens per Sec: 17833.914878913794
Epoch Step: 600 / 730 Loss: 2.714214324951172 Tokens per Sec: 18130.697814598116
Epoch Step: 605 / 730 Loss: 0.7094272971153259 Tokens per Sec: 14489.916502286473
Epoch Step: 610 / 730 Loss: 6.1575188636779785 Tokens per Sec: 19162.2593378306
Epoch Step: 615 / 730 Loss: 54.53899002075195 Tokens per Sec: 17380.993231074102
Epoch Step: 620 / 730 Loss: 2.9832048416137695 Tokens per Sec: 17059.44732747096
Epoch Step: 625 / 730 Loss: 4.228433132171631 Tokens per Sec: 18542.68614249979
Epoch Step: 630 / 730 Loss: 0.6745465993881226 Tokens per Sec: 15426.818934704177
Epoch Step: 635 / 730 Loss: 3.612433910369873 Tokens per Sec: 21575.809675148274
Epoch Step: 640 / 730 Loss: 8.837454795837402 Tokens per Sec: 19697.66734949413
Epoch Step: 645 / 730 Loss: 5.381786823272705 Tokens per Sec: 18192.347805854475
Epoch Step: 650 / 730 Loss: 1.5944817066192627 Tokens per Sec: 16465.827300133584
Epoch Step: 655 / 730 Loss: 3.7346017360687256 Tokens per Sec: 16473.428785991804
Epoch Step: 660 / 730 Loss: 0.6947208046913147 Tokens per Sec: 17436.59350159141
Epoch Step: 665 / 730 Loss: 3.2516627311706543 Tokens per Sec: 19512.15466130941
Epoch Step: 670 / 730 Loss: 1.605409860610962 Tokens per Sec: 14858.585862243617
Epoch Step: 675 / 730 Loss: 4.703955173492432 Tokens per Sec: 17534.253140793855
Epoch Step: 680 / 730 Loss: 4.574159145355225 Tokens per Sec: 17608.634675319543
Epoch Step: 685 / 730 Loss: 1.4301071166992188 Tokens per Sec: 16875.471159276192
Epoch Step: 690 / 730 Loss: 2.076763868331909 Tokens per Sec: 18412.392738966533
Epoch Step: 695 / 730 Loss: 2.8017091751098633 Tokens per Sec: 17851.178404955466
Epoch Step: 700 / 730 Loss: 3.7759182453155518 Tokens per Sec: 18935.065343379923
Epoch Step: 705 / 730 Loss: 3.18660306930542 Tokens per Sec: 14910.229208512314
Epoch Step: 710 / 730 Loss: 5.04730224609375 Tokens per Sec: 16151.422103586881
Epoch Step: 715 / 730 Loss: 1.8766158819198608 Tokens per Sec: 15079.397977464478
Epoch Step: 720 / 730 Loss: 3.1808671951293945 Tokens per Sec: 13994.21253383516
Epoch Step: 725 / 730 Loss: 3.6670947074890137 Tokens per Sec: 16809.68757710379
Epoch Step: 730 / 730 Loss: 3.9294915199279785 Tokens per Sec: 15232.10035988098
Epoch ended with duration 0:01:19.285112
Train perplexity: 1.225122602982727
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] , java.lang.String > VAR_1 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.281327
Validation perplexity: 1.2956748756851664
Epoch 28 / 1000
Epoch Step: 5 / 730 Loss: 1.884018898010254 Tokens per Sec: 14174.754652951022
Epoch Step: 10 / 730 Loss: 1.3177886009216309 Tokens per Sec: 13733.894124085984
Epoch Step: 15 / 730 Loss: 4.525827407836914 Tokens per Sec: 19559.865815572983
Epoch Step: 20 / 730 Loss: 0.9220519065856934 Tokens per Sec: 21083.415108838708
Epoch Step: 25 / 730 Loss: 34.72761917114258 Tokens per Sec: 19515.884311682592
Epoch Step: 30 / 730 Loss: 2.3276238441467285 Tokens per Sec: 17426.033573497596
Epoch Step: 35 / 730 Loss: 46.77839279174805 Tokens per Sec: 19194.490070441392
Epoch Step: 40 / 730 Loss: 3.8426873683929443 Tokens per Sec: 19598.663256998454
Epoch Step: 45 / 730 Loss: 7.499266624450684 Tokens per Sec: 14938.386675016038
Epoch Step: 50 / 730 Loss: 9.023959159851074 Tokens per Sec: 18723.967398447345
Epoch Step: 55 / 730 Loss: 5.593349933624268 Tokens per Sec: 16522.225475648258
Epoch Step: 60 / 730 Loss: 4.969427108764648 Tokens per Sec: 19863.428784826832
Epoch Step: 65 / 730 Loss: 6.2016825675964355 Tokens per Sec: 18003.48372902439
Epoch Step: 70 / 730 Loss: 5.5612359046936035 Tokens per Sec: 19008.515629599806
Epoch Step: 75 / 730 Loss: 2.9057188034057617 Tokens per Sec: 17407.103326331246
Epoch Step: 80 / 730 Loss: 2.8123157024383545 Tokens per Sec: 17663.296176582404
Epoch Step: 85 / 730 Loss: 3.718883514404297 Tokens per Sec: 14721.555140746563
Epoch Step: 90 / 730 Loss: 1.294209361076355 Tokens per Sec: 17615.276877539924
Epoch Step: 95 / 730 Loss: 5.412130832672119 Tokens per Sec: 19592.429216878252
Epoch Step: 100 / 730 Loss: 3.0943684577941895 Tokens per Sec: 15375.92168884238
Epoch Step: 105 / 730 Loss: 7.788914680480957 Tokens per Sec: 20373.12192934262
Epoch Step: 110 / 730 Loss: 1.9808903932571411 Tokens per Sec: 15330.433934400306
Epoch Step: 115 / 730 Loss: 5.066780090332031 Tokens per Sec: 18880.18284733871
Epoch Step: 120 / 730 Loss: 3.3034472465515137 Tokens per Sec: 20426.82521317558
Epoch Step: 125 / 730 Loss: 5.469296932220459 Tokens per Sec: 17669.836823126196
Epoch Step: 130 / 730 Loss: 3.115060567855835 Tokens per Sec: 16472.369912462847
Epoch Step: 135 / 730 Loss: 1.45896577835083 Tokens per Sec: 19877.7795606041
Epoch Step: 140 / 730 Loss: 7.143714904785156 Tokens per Sec: 17447.614729654968
Epoch Step: 145 / 730 Loss: 4.136722087860107 Tokens per Sec: 16492.208544994628
Epoch Step: 150 / 730 Loss: 5.527729034423828 Tokens per Sec: 16968.923673894224
Epoch Step: 155 / 730 Loss: 5.567233562469482 Tokens per Sec: 17191.590225520435
Epoch Step: 160 / 730 Loss: 11.590460777282715 Tokens per Sec: 16050.35900616329
Epoch Step: 165 / 730 Loss: 5.111055374145508 Tokens per Sec: 21124.762080616834
Epoch Step: 170 / 730 Loss: 4.352964401245117 Tokens per Sec: 16115.72853555075
Epoch Step: 175 / 730 Loss: 5.664389133453369 Tokens per Sec: 16184.778239617754
Epoch Step: 180 / 730 Loss: 1.9142091274261475 Tokens per Sec: 16727.40357582751
Epoch Step: 185 / 730 Loss: 2.9883668422698975 Tokens per Sec: 16590.139997697963
Epoch Step: 190 / 730 Loss: 2.2245852947235107 Tokens per Sec: 15518.02011800302
Epoch Step: 195 / 730 Loss: 10.92943286895752 Tokens per Sec: 17488.771708560627
Epoch Step: 200 / 730 Loss: 27.96430778503418 Tokens per Sec: 20829.977024725613
Epoch Step: 205 / 730 Loss: 8.736581802368164 Tokens per Sec: 17659.398064826662
Epoch Step: 210 / 730 Loss: 1.5210657119750977 Tokens per Sec: 16752.457787207702
Epoch Step: 215 / 730 Loss: 0.7131510972976685 Tokens per Sec: 16982.692544505422
Epoch Step: 220 / 730 Loss: 6.680908203125 Tokens per Sec: 17734.159930247202
Epoch Step: 225 / 730 Loss: 2.2513532638549805 Tokens per Sec: 17820.071318090577
Epoch Step: 230 / 730 Loss: 2.046396017074585 Tokens per Sec: 14420.404745055905
Epoch Step: 235 / 730 Loss: 2.631448745727539 Tokens per Sec: 19384.663906332557
Epoch Step: 240 / 730 Loss: 53.080909729003906 Tokens per Sec: 19210.377914530698
Epoch Step: 245 / 730 Loss: 3.6984798908233643 Tokens per Sec: 20594.825419099947
Epoch Step: 250 / 730 Loss: 2.495232582092285 Tokens per Sec: 18582.79709792525
Epoch Step: 255 / 730 Loss: 4.465857982635498 Tokens per Sec: 17166.80951976883
Epoch Step: 260 / 730 Loss: 5.215769290924072 Tokens per Sec: 16562.588354563573
Epoch Step: 265 / 730 Loss: 27.721935272216797 Tokens per Sec: 17956.50216653056
Epoch Step: 270 / 730 Loss: 5.382155895233154 Tokens per Sec: 19818.93353431835
Epoch Step: 275 / 730 Loss: 3.197366714477539 Tokens per Sec: 17829.1669902215
Epoch Step: 280 / 730 Loss: 7.286979675292969 Tokens per Sec: 13315.144446903883
Epoch Step: 285 / 730 Loss: 61.04923629760742 Tokens per Sec: 17794.58959434325
Epoch Step: 290 / 730 Loss: 5.598625659942627 Tokens per Sec: 16497.47042638404
Epoch Step: 295 / 730 Loss: 4.7056121826171875 Tokens per Sec: 14292.418070437549
Epoch Step: 300 / 730 Loss: 2.4294300079345703 Tokens per Sec: 13535.759593402016
Epoch Step: 305 / 730 Loss: 1.7588043212890625 Tokens per Sec: 15569.353820371924
Epoch Step: 310 / 730 Loss: 4.414410591125488 Tokens per Sec: 19798.212461539395
Epoch Step: 315 / 730 Loss: 19.129886627197266 Tokens per Sec: 17708.68256091991
Epoch Step: 320 / 730 Loss: 7.717606544494629 Tokens per Sec: 16560.37275903881
Epoch Step: 325 / 730 Loss: 1.850313425064087 Tokens per Sec: 18419.025688365626
Epoch Step: 330 / 730 Loss: 7.5971784591674805 Tokens per Sec: 16662.037281919595
Epoch Step: 335 / 730 Loss: 4.922593116760254 Tokens per Sec: 18208.73115424855
Epoch Step: 340 / 730 Loss: 1.9271001815795898 Tokens per Sec: 19147.087652580463
Epoch Step: 345 / 730 Loss: 4.3948774337768555 Tokens per Sec: 16784.1200110269
Epoch Step: 350 / 730 Loss: 3.818067789077759 Tokens per Sec: 16462.043808526294
Epoch Step: 355 / 730 Loss: 1.741797685623169 Tokens per Sec: 17584.441857452453
Epoch Step: 360 / 730 Loss: 5.328214645385742 Tokens per Sec: 19790.737709611938
Epoch Step: 365 / 730 Loss: 4.198554039001465 Tokens per Sec: 14523.036963522136
Epoch Step: 370 / 730 Loss: 1.2053649425506592 Tokens per Sec: 19420.183298620082
Epoch Step: 375 / 730 Loss: 9.103829383850098 Tokens per Sec: 15153.552365372236
Epoch Step: 380 / 730 Loss: 3.884084939956665 Tokens per Sec: 17228.517813815295
Epoch Step: 385 / 730 Loss: 4.383593559265137 Tokens per Sec: 15482.381377760648
Epoch Step: 390 / 730 Loss: 5.164915084838867 Tokens per Sec: 17114.567973690788
Epoch Step: 395 / 730 Loss: 8.795072555541992 Tokens per Sec: 18199.892988820997
Epoch Step: 400 / 730 Loss: 2.4299135208129883 Tokens per Sec: 21487.803899312985
Epoch Step: 405 / 730 Loss: 72.48656463623047 Tokens per Sec: 17369.28070675784
Epoch Step: 410 / 730 Loss: 1.3021355867385864 Tokens per Sec: 16031.21972246591
Epoch Step: 415 / 730 Loss: 0.6325139999389648 Tokens per Sec: 19488.978650773664
Epoch Step: 420 / 730 Loss: 4.9700751304626465 Tokens per Sec: 17315.492271236588
Epoch Step: 425 / 730 Loss: 43.42138671875 Tokens per Sec: 14955.386782423418
Epoch Step: 430 / 730 Loss: 4.343502998352051 Tokens per Sec: 16255.347581967335
Epoch Step: 435 / 730 Loss: 2.8789377212524414 Tokens per Sec: 17433.73662455883
Epoch Step: 440 / 730 Loss: 10.54181957244873 Tokens per Sec: 18074.16339879811
Epoch Step: 445 / 730 Loss: 3.9120290279388428 Tokens per Sec: 17390.770362874835
Epoch Step: 450 / 730 Loss: 5.223104953765869 Tokens per Sec: 18457.6202679386
Epoch Step: 455 / 730 Loss: 8.184499740600586 Tokens per Sec: 20552.26800510421
Epoch Step: 460 / 730 Loss: 3.8982388973236084 Tokens per Sec: 19759.487505253826
Epoch Step: 465 / 730 Loss: 4.126762390136719 Tokens per Sec: 20832.655059651537
Epoch Step: 470 / 730 Loss: 1.5101985931396484 Tokens per Sec: 17894.410004776586
Epoch Step: 475 / 730 Loss: 11.447535514831543 Tokens per Sec: 19454.297536590453
Epoch Step: 480 / 730 Loss: 3.329540729522705 Tokens per Sec: 19727.020806853863
Epoch Step: 485 / 730 Loss: 3.9202780723571777 Tokens per Sec: 18341.102588241716
Epoch Step: 490 / 730 Loss: 7.905911445617676 Tokens per Sec: 14729.100769203478
Epoch Step: 495 / 730 Loss: 1.8118486404418945 Tokens per Sec: 18543.36710383417
Epoch Step: 500 / 730 Loss: 1.8291006088256836 Tokens per Sec: 18122.837727473132
Epoch Step: 505 / 730 Loss: 5.299779415130615 Tokens per Sec: 16751.0359497586
Epoch Step: 510 / 730 Loss: 4.046993732452393 Tokens per Sec: 18460.35894307019
Epoch Step: 515 / 730 Loss: 0.8575944900512695 Tokens per Sec: 14716.870047741268
Epoch Step: 520 / 730 Loss: 5.972260475158691 Tokens per Sec: 18822.06898363067
Epoch Step: 525 / 730 Loss: 4.040266990661621 Tokens per Sec: 15033.728100160099
Epoch Step: 530 / 730 Loss: 4.729844570159912 Tokens per Sec: 15993.89476206345
Epoch Step: 535 / 730 Loss: 3.3397810459136963 Tokens per Sec: 18356.112009845783
Epoch Step: 540 / 730 Loss: 5.693545818328857 Tokens per Sec: 19367.713345899163
Epoch Step: 545 / 730 Loss: 35.82393264770508 Tokens per Sec: 19883.851572793854
Epoch Step: 550 / 730 Loss: 4.58329963684082 Tokens per Sec: 14075.309643308206
Epoch Step: 555 / 730 Loss: 2.2170238494873047 Tokens per Sec: 18135.934762994817
Epoch Step: 560 / 730 Loss: 6.868747234344482 Tokens per Sec: 18028.416613666337
Epoch Step: 565 / 730 Loss: 3.0827221870422363 Tokens per Sec: 17158.336615436736
Epoch Step: 570 / 730 Loss: 3.461454153060913 Tokens per Sec: 21864.872075445197
Epoch Step: 575 / 730 Loss: 5.305642127990723 Tokens per Sec: 16461.897826976827
Epoch Step: 580 / 730 Loss: 1.1284115314483643 Tokens per Sec: 17578.069728933322
Epoch Step: 585 / 730 Loss: 1.2075484991073608 Tokens per Sec: 16480.259921159
Epoch Step: 590 / 730 Loss: 4.698492050170898 Tokens per Sec: 17569.368556408175
Epoch Step: 595 / 730 Loss: 1.711168646812439 Tokens per Sec: 17549.733721728382
Epoch Step: 600 / 730 Loss: 1.6840835809707642 Tokens per Sec: 17680.616624102226
Epoch Step: 605 / 730 Loss: 5.206017017364502 Tokens per Sec: 13323.596885856366
Epoch Step: 610 / 730 Loss: 3.532827615737915 Tokens per Sec: 18468.602345437972
Epoch Step: 615 / 730 Loss: 35.2768440246582 Tokens per Sec: 18071.157522723064
Epoch Step: 620 / 730 Loss: 5.143871307373047 Tokens per Sec: 18226.334206453044
Epoch Step: 625 / 730 Loss: 4.269024848937988 Tokens per Sec: 16443.299247414463
Epoch Step: 630 / 730 Loss: 2.708367109298706 Tokens per Sec: 17135.160226237167
Epoch Step: 635 / 730 Loss: 2.5580954551696777 Tokens per Sec: 15777.908313688744
Epoch Step: 640 / 730 Loss: 36.93923568725586 Tokens per Sec: 16526.395064912234
Epoch Step: 645 / 730 Loss: 6.942691326141357 Tokens per Sec: 19147.538601770553
Epoch Step: 650 / 730 Loss: 6.049660682678223 Tokens per Sec: 19950.79494113191
Epoch Step: 655 / 730 Loss: 3.0078790187835693 Tokens per Sec: 17155.416019644097
Epoch Step: 660 / 730 Loss: 5.44636869430542 Tokens per Sec: 17607.007813471893
Epoch Step: 665 / 730 Loss: 7.996613025665283 Tokens per Sec: 19707.048366858766
Epoch Step: 670 / 730 Loss: 3.67803955078125 Tokens per Sec: 18240.51075790013
Epoch Step: 675 / 730 Loss: 1.268955945968628 Tokens per Sec: 15506.061896662219
Epoch Step: 680 / 730 Loss: 2.132049560546875 Tokens per Sec: 16203.967877040026
Epoch Step: 685 / 730 Loss: 2.740771532058716 Tokens per Sec: 20642.87776256823
Epoch Step: 690 / 730 Loss: 2.2219531536102295 Tokens per Sec: 14871.814144770813
Epoch Step: 695 / 730 Loss: 1.382908582687378 Tokens per Sec: 18988.726795524424
Epoch Step: 700 / 730 Loss: 40.847023010253906 Tokens per Sec: 19218.560104010547
Epoch Step: 705 / 730 Loss: 1.746350884437561 Tokens per Sec: 13673.09539601279
Epoch Step: 710 / 730 Loss: 3.2932095527648926 Tokens per Sec: 15155.876533680885
Epoch Step: 715 / 730 Loss: 38.77175521850586 Tokens per Sec: 15433.188631944298
Epoch Step: 720 / 730 Loss: 5.6881513595581055 Tokens per Sec: 16051.649122807017
Epoch Step: 725 / 730 Loss: 3.5086748600006104 Tokens per Sec: 11624.268770592436
Epoch Step: 730 / 730 Loss: 4.1275410652160645 Tokens per Sec: 17066.801383229184
Epoch ended with duration 0:01:20.114241
Train perplexity: 1.2506482612851983
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] args < java.lang.String , java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.301477
Validation perplexity: 1.2872176124691792
Epoch 29 / 1000
Epoch Step: 5 / 730 Loss: 26.895843505859375 Tokens per Sec: 16584.51599157401
Epoch Step: 10 / 730 Loss: 2.545546770095825 Tokens per Sec: 13076.84207207535
Epoch Step: 15 / 730 Loss: 5.126670837402344 Tokens per Sec: 18763.494599246013
Epoch Step: 20 / 730 Loss: 7.701791763305664 Tokens per Sec: 20288.679373808023
Epoch Step: 25 / 730 Loss: 3.3611645698547363 Tokens per Sec: 15224.763631633587
Epoch Step: 30 / 730 Loss: 0.423473060131073 Tokens per Sec: 18461.98772926949
Epoch Step: 35 / 730 Loss: 2.948693037033081 Tokens per Sec: 18452.323098218887
Epoch Step: 40 / 730 Loss: 1.5124200582504272 Tokens per Sec: 19025.031200101894
Epoch Step: 45 / 730 Loss: 4.57621431350708 Tokens per Sec: 19297.088407246516
Epoch Step: 50 / 730 Loss: 4.294796943664551 Tokens per Sec: 17801.644014093134
Epoch Step: 55 / 730 Loss: 4.222056865692139 Tokens per Sec: 18018.688297994508
Epoch Step: 60 / 730 Loss: 1.7564715147018433 Tokens per Sec: 19747.478509215252
Epoch Step: 65 / 730 Loss: 1.2004929780960083 Tokens per Sec: 14856.871858123935
Epoch Step: 70 / 730 Loss: 3.8784494400024414 Tokens per Sec: 18899.328168571523
Epoch Step: 75 / 730 Loss: 6.814940452575684 Tokens per Sec: 16978.971703462397
Epoch Step: 80 / 730 Loss: 3.8392717838287354 Tokens per Sec: 18719.75035267426
Epoch Step: 85 / 730 Loss: 34.35901641845703 Tokens per Sec: 16178.601190836445
Epoch Step: 90 / 730 Loss: 1.2127866744995117 Tokens per Sec: 20031.08020329117
Epoch Step: 95 / 730 Loss: 1.783754825592041 Tokens per Sec: 14810.791289308321
Epoch Step: 100 / 730 Loss: 1.3192399740219116 Tokens per Sec: 18673.06355420612
Epoch Step: 105 / 730 Loss: 4.477011680603027 Tokens per Sec: 14241.643644185891
Epoch Step: 110 / 730 Loss: 1.1825097799301147 Tokens per Sec: 19253.22978930687
Epoch Step: 115 / 730 Loss: 3.3233096599578857 Tokens per Sec: 20777.430510273898
Epoch Step: 120 / 730 Loss: 4.334007740020752 Tokens per Sec: 19421.09943168995
Epoch Step: 125 / 730 Loss: 15.175853729248047 Tokens per Sec: 18963.111750260512
Epoch Step: 130 / 730 Loss: 7.691973686218262 Tokens per Sec: 17360.174961676035
Epoch Step: 135 / 730 Loss: 3.811908006668091 Tokens per Sec: 19409.47351189316
Epoch Step: 140 / 730 Loss: 3.970438003540039 Tokens per Sec: 17703.4992113502
Epoch Step: 145 / 730 Loss: 4.5280866622924805 Tokens per Sec: 22825.02725318785
Epoch Step: 150 / 730 Loss: 1.5405874252319336 Tokens per Sec: 19032.600207187214
Epoch Step: 155 / 730 Loss: 2.6608266830444336 Tokens per Sec: 18827.37932870928
Epoch Step: 160 / 730 Loss: 1.8591476678848267 Tokens per Sec: 16790.717466648395
Epoch Step: 165 / 730 Loss: 4.487682342529297 Tokens per Sec: 15724.28936296363
Epoch Step: 170 / 730 Loss: 5.6575541496276855 Tokens per Sec: 18132.923469217047
Epoch Step: 175 / 730 Loss: 4.459789752960205 Tokens per Sec: 15305.053600946552
Epoch Step: 180 / 730 Loss: 1.196380853652954 Tokens per Sec: 15085.52491685369
Epoch Step: 185 / 730 Loss: 2.792606830596924 Tokens per Sec: 14920.552024109113
Epoch Step: 190 / 730 Loss: 6.099532604217529 Tokens per Sec: 17140.736192839293
Epoch Step: 195 / 730 Loss: 4.330963611602783 Tokens per Sec: 15146.681916788757
Epoch Step: 200 / 730 Loss: 1.8520044088363647 Tokens per Sec: 16946.60071221568
Epoch Step: 205 / 730 Loss: 5.150611877441406 Tokens per Sec: 17555.555985912742
Epoch Step: 210 / 730 Loss: 3.8367106914520264 Tokens per Sec: 17440.616166975262
Epoch Step: 215 / 730 Loss: 2.4524099826812744 Tokens per Sec: 19917.806569612145
Epoch Step: 220 / 730 Loss: 6.324065208435059 Tokens per Sec: 17110.4893170369
Epoch Step: 225 / 730 Loss: 5.102505207061768 Tokens per Sec: 20726.511828616713
Epoch Step: 230 / 730 Loss: 2.4432425498962402 Tokens per Sec: 19591.802584812456
Epoch Step: 235 / 730 Loss: 1.0030943155288696 Tokens per Sec: 15747.032562594839
Epoch Step: 240 / 730 Loss: 4.362576007843018 Tokens per Sec: 16177.29907633977
Epoch Step: 245 / 730 Loss: 5.661077499389648 Tokens per Sec: 17834.519441482964
Epoch Step: 250 / 730 Loss: 0.9671671390533447 Tokens per Sec: 15778.194555321172
Epoch Step: 255 / 730 Loss: 2.737478494644165 Tokens per Sec: 13409.160959024408
Epoch Step: 260 / 730 Loss: 0.6686065793037415 Tokens per Sec: 19718.89467165886
Epoch Step: 265 / 730 Loss: 4.18994140625 Tokens per Sec: 17762.9362232541
Epoch Step: 270 / 730 Loss: 4.8485894203186035 Tokens per Sec: 16214.512851582196
Epoch Step: 275 / 730 Loss: 6.311923027038574 Tokens per Sec: 17541.72424655823
Epoch Step: 280 / 730 Loss: 1.061965823173523 Tokens per Sec: 18545.89292005362
Epoch Step: 285 / 730 Loss: 1.3389506340026855 Tokens per Sec: 18718.027761857502
Epoch Step: 290 / 730 Loss: 2.200202465057373 Tokens per Sec: 19308.28941602323
Epoch Step: 295 / 730 Loss: 4.180715560913086 Tokens per Sec: 16060.01022948949
Epoch Step: 300 / 730 Loss: 8.747279167175293 Tokens per Sec: 18299.438053767448
Epoch Step: 305 / 730 Loss: 16.513240814208984 Tokens per Sec: 16965.20643369346
Epoch Step: 310 / 730 Loss: 3.1927640438079834 Tokens per Sec: 16723.135059477747
Epoch Step: 315 / 730 Loss: 2.88210129737854 Tokens per Sec: 16623.22297846324
Epoch Step: 320 / 730 Loss: 4.591776371002197 Tokens per Sec: 18414.10140552005
Epoch Step: 325 / 730 Loss: 3.663661479949951 Tokens per Sec: 17484.29818571053
Epoch Step: 330 / 730 Loss: 3.2200334072113037 Tokens per Sec: 17944.86613042827
Epoch Step: 335 / 730 Loss: 0.5798448324203491 Tokens per Sec: 14882.050434963678
Epoch Step: 340 / 730 Loss: 1.4552263021469116 Tokens per Sec: 15102.043024202247
Epoch Step: 345 / 730 Loss: 2.160536050796509 Tokens per Sec: 19001.97173853233
Epoch Step: 350 / 730 Loss: 6.317625045776367 Tokens per Sec: 19276.44991710017
Epoch Step: 355 / 730 Loss: 60.33725357055664 Tokens per Sec: 19037.887021036535
Epoch Step: 360 / 730 Loss: 2.1794726848602295 Tokens per Sec: 15524.91874124383
Epoch Step: 365 / 730 Loss: 3.866763114929199 Tokens per Sec: 15814.404304357256
Epoch Step: 370 / 730 Loss: 7.28865385055542 Tokens per Sec: 11534.069046510336
Epoch Step: 375 / 730 Loss: 1.5432356595993042 Tokens per Sec: 20400.667425751602
Epoch Step: 380 / 730 Loss: 3.341787576675415 Tokens per Sec: 16545.059230247487
Epoch Step: 385 / 730 Loss: 5.420984745025635 Tokens per Sec: 19523.399205363665
Epoch Step: 390 / 730 Loss: 2.0657708644866943 Tokens per Sec: 18637.316596215762
Epoch Step: 395 / 730 Loss: 4.938252925872803 Tokens per Sec: 19909.494060651276
Epoch Step: 400 / 730 Loss: 3.5144879817962646 Tokens per Sec: 19812.176525846968
Epoch Step: 405 / 730 Loss: 5.183812141418457 Tokens per Sec: 19209.907422765
Epoch Step: 410 / 730 Loss: 3.6860618591308594 Tokens per Sec: 19571.515017220445
Epoch Step: 415 / 730 Loss: 0.6312237977981567 Tokens per Sec: 16253.976657850759
Epoch Step: 420 / 730 Loss: 38.14591598510742 Tokens per Sec: 15351.018632927988
Epoch Step: 425 / 730 Loss: 2.462498903274536 Tokens per Sec: 14544.640113186393
Epoch Step: 430 / 730 Loss: 4.745038986206055 Tokens per Sec: 19120.125271201945
Epoch Step: 435 / 730 Loss: 1.3704079389572144 Tokens per Sec: 18926.467724958577
Epoch Step: 440 / 730 Loss: 6.317498683929443 Tokens per Sec: 16380.348093494875
Epoch Step: 445 / 730 Loss: 3.624396800994873 Tokens per Sec: 16015.543847111958
Epoch Step: 450 / 730 Loss: 4.926479339599609 Tokens per Sec: 16321.147343752333
Epoch Step: 455 / 730 Loss: 3.0473806858062744 Tokens per Sec: 17952.322064650507
Epoch Step: 460 / 730 Loss: 3.5007026195526123 Tokens per Sec: 17658.975917393385
Epoch Step: 465 / 730 Loss: 6.70263671875 Tokens per Sec: 15495.103278303763
Epoch Step: 470 / 730 Loss: 5.0761027336120605 Tokens per Sec: 15864.155150429697
Epoch Step: 475 / 730 Loss: 3.943692684173584 Tokens per Sec: 19546.72116851677
Epoch Step: 480 / 730 Loss: 0.8684247732162476 Tokens per Sec: 13895.441698502078
Epoch Step: 485 / 730 Loss: 7.155322551727295 Tokens per Sec: 20135.603068866723
Epoch Step: 490 / 730 Loss: 0.8134989738464355 Tokens per Sec: 19613.82223591513
Epoch Step: 495 / 730 Loss: 5.063210487365723 Tokens per Sec: 17491.472594417424
Epoch Step: 500 / 730 Loss: 4.9342827796936035 Tokens per Sec: 18557.872609468115
Epoch Step: 505 / 730 Loss: 2.9900479316711426 Tokens per Sec: 15781.38687662844
Epoch Step: 510 / 730 Loss: 2.7429890632629395 Tokens per Sec: 17115.4566285645
Epoch Step: 515 / 730 Loss: 5.766590595245361 Tokens per Sec: 18519.278866003027
Epoch Step: 520 / 730 Loss: 2.6779136657714844 Tokens per Sec: 17728.52268856182
Epoch Step: 525 / 730 Loss: 1.6636004447937012 Tokens per Sec: 16263.984354447372
Epoch Step: 530 / 730 Loss: 2.915938377380371 Tokens per Sec: 18746.14098060025
Epoch Step: 535 / 730 Loss: 21.833534240722656 Tokens per Sec: 16096.907168908736
Epoch Step: 540 / 730 Loss: 1.2024790048599243 Tokens per Sec: 19737.708472458165
Epoch Step: 545 / 730 Loss: 79.54578399658203 Tokens per Sec: 18431.410399118882
Epoch Step: 550 / 730 Loss: 1.779289722442627 Tokens per Sec: 19020.214368969093
Epoch Step: 555 / 730 Loss: 7.5170440673828125 Tokens per Sec: 21211.475119716357
Epoch Step: 560 / 730 Loss: 2.2382588386535645 Tokens per Sec: 15713.735883740896
Epoch Step: 565 / 730 Loss: 7.703620910644531 Tokens per Sec: 15987.739703521427
Epoch Step: 570 / 730 Loss: 7.3749494552612305 Tokens per Sec: 20503.999037727182
Epoch Step: 575 / 730 Loss: 4.831184387207031 Tokens per Sec: 18700.200655448443
Epoch Step: 580 / 730 Loss: 38.74384307861328 Tokens per Sec: 18312.51907291633
Epoch Step: 585 / 730 Loss: 5.767969608306885 Tokens per Sec: 17139.432998869423
Epoch Step: 590 / 730 Loss: 1.8779864311218262 Tokens per Sec: 17766.130264018353
Epoch Step: 595 / 730 Loss: 1.8193830251693726 Tokens per Sec: 12950.974963905017
Epoch Step: 600 / 730 Loss: 0.9416751861572266 Tokens per Sec: 17126.579480555352
Epoch Step: 605 / 730 Loss: 7.02235746383667 Tokens per Sec: 18195.443083996317
Epoch Step: 610 / 730 Loss: 3.9352099895477295 Tokens per Sec: 16311.616213377361
Epoch Step: 615 / 730 Loss: 1.8079968690872192 Tokens per Sec: 16858.30979608422
Epoch Step: 620 / 730 Loss: 4.434656143188477 Tokens per Sec: 19626.984836047057
Epoch Step: 625 / 730 Loss: 2.3803603649139404 Tokens per Sec: 15581.730080556417
Epoch Step: 630 / 730 Loss: 2.695836305618286 Tokens per Sec: 18152.0015954417
Epoch Step: 635 / 730 Loss: 4.5138397216796875 Tokens per Sec: 20179.529246100155
Epoch Step: 640 / 730 Loss: 19.800167083740234 Tokens per Sec: 16760.56200591738
Epoch Step: 645 / 730 Loss: 21.437063217163086 Tokens per Sec: 18110.604324983084
Epoch Step: 650 / 730 Loss: 1.9345862865447998 Tokens per Sec: 17578.543609887678
Epoch Step: 655 / 730 Loss: 6.2527313232421875 Tokens per Sec: 18456.43811058904
Epoch Step: 660 / 730 Loss: 6.591058731079102 Tokens per Sec: 20300.07096922178
Epoch Step: 665 / 730 Loss: 4.500838279724121 Tokens per Sec: 16868.442263758257
Epoch Step: 670 / 730 Loss: 50.70219039916992 Tokens per Sec: 15102.30270447646
Epoch Step: 675 / 730 Loss: 4.402243137359619 Tokens per Sec: 18534.812507903247
Epoch Step: 680 / 730 Loss: 3.9501118659973145 Tokens per Sec: 15031.022370807106
Epoch Step: 685 / 730 Loss: 4.399890422821045 Tokens per Sec: 22092.13014295647
Epoch Step: 690 / 730 Loss: 4.890316009521484 Tokens per Sec: 18815.376028224404
Epoch Step: 695 / 730 Loss: 67.57130432128906 Tokens per Sec: 15697.36527710342
Epoch Step: 700 / 730 Loss: 3.1538615226745605 Tokens per Sec: 14004.814290331582
Epoch Step: 705 / 730 Loss: 8.278963088989258 Tokens per Sec: 13709.77967432214
Epoch Step: 710 / 730 Loss: 3.2972705364227295 Tokens per Sec: 16433.756203126915
Epoch Step: 715 / 730 Loss: 3.9331793785095215 Tokens per Sec: 13275.009670653064
Epoch Step: 720 / 730 Loss: 58.83672332763672 Tokens per Sec: 16350.566240882732
Epoch Step: 725 / 730 Loss: 2.839369058609009 Tokens per Sec: 15761.911229958507
Epoch Step: 730 / 730 Loss: 3.755805492401123 Tokens per Sec: 14875.067717932443
Epoch ended with duration 0:01:20.059932
Train perplexity: 1.2235187744390168
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] args < java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.415774
Validation perplexity: 1.3005808672174664
Epoch 30 / 1000
Epoch Step: 5 / 730 Loss: 16.804304122924805 Tokens per Sec: 18298.78563008211
Epoch Step: 10 / 730 Loss: 1.1428641080856323 Tokens per Sec: 19956.557422579062
Epoch Step: 15 / 730 Loss: 2.724212169647217 Tokens per Sec: 14099.816646938836
Epoch Step: 20 / 730 Loss: 3.8624558448791504 Tokens per Sec: 19744.07057108932
Epoch Step: 25 / 730 Loss: 1.7880810499191284 Tokens per Sec: 20185.011288874826
Epoch Step: 30 / 730 Loss: 3.2507951259613037 Tokens per Sec: 15224.806319402553
Epoch Step: 35 / 730 Loss: 2.8169896602630615 Tokens per Sec: 19162.855776898123
Epoch Step: 40 / 730 Loss: 1.3797056674957275 Tokens per Sec: 16686.463368040866
Epoch Step: 45 / 730 Loss: 1.1348114013671875 Tokens per Sec: 16096.112809053415
Epoch Step: 50 / 730 Loss: 4.982842445373535 Tokens per Sec: 18757.53220589392
Epoch Step: 55 / 730 Loss: 1.234803318977356 Tokens per Sec: 17943.922007203128
Epoch Step: 60 / 730 Loss: 2.222435474395752 Tokens per Sec: 16704.754239969097
Epoch Step: 65 / 730 Loss: 4.513089179992676 Tokens per Sec: 16233.378178035593
Epoch Step: 70 / 730 Loss: 0.8929714560508728 Tokens per Sec: 18360.39903108423
Epoch Step: 75 / 730 Loss: 4.906018257141113 Tokens per Sec: 16982.45923316429
Epoch Step: 80 / 730 Loss: 4.0329413414001465 Tokens per Sec: 16113.581181267382
Epoch Step: 85 / 730 Loss: 1.230918526649475 Tokens per Sec: 13488.936285221078
Epoch Step: 90 / 730 Loss: 4.720174789428711 Tokens per Sec: 15750.465202826745
Epoch Step: 95 / 730 Loss: 4.044064998626709 Tokens per Sec: 18685.176660851597
Epoch Step: 100 / 730 Loss: 1.9735218286514282 Tokens per Sec: 19289.035114680308
Epoch Step: 105 / 730 Loss: 3.569934129714966 Tokens per Sec: 17031.418648267943
Epoch Step: 110 / 730 Loss: 4.247188091278076 Tokens per Sec: 17828.49146191244
Epoch Step: 115 / 730 Loss: 2.305250406265259 Tokens per Sec: 13581.962532959997
Epoch Step: 120 / 730 Loss: 7.092423439025879 Tokens per Sec: 19833.086332908308
Epoch Step: 125 / 730 Loss: 4.684713363647461 Tokens per Sec: 18868.110874186623
Epoch Step: 130 / 730 Loss: 4.4660797119140625 Tokens per Sec: 17303.033191041584
Epoch Step: 135 / 730 Loss: 3.7534284591674805 Tokens per Sec: 19596.359297041075
Epoch Step: 140 / 730 Loss: 1.573033332824707 Tokens per Sec: 18944.141139549185
Epoch Step: 145 / 730 Loss: 3.6076276302337646 Tokens per Sec: 16299.617061559311
Epoch Step: 150 / 730 Loss: 3.0245862007141113 Tokens per Sec: 13173.949257102393
Epoch Step: 155 / 730 Loss: 2.289337158203125 Tokens per Sec: 17511.048930147004
Epoch Step: 160 / 730 Loss: 3.643211841583252 Tokens per Sec: 18400.819324449385
Epoch Step: 165 / 730 Loss: 1.3242480754852295 Tokens per Sec: 17301.257946103182
Epoch Step: 170 / 730 Loss: 4.208803653717041 Tokens per Sec: 17925.321204118063
Epoch Step: 175 / 730 Loss: 4.101578712463379 Tokens per Sec: 18825.253525918703
Epoch Step: 180 / 730 Loss: 5.08998441696167 Tokens per Sec: 13956.982715709866
Epoch Step: 185 / 730 Loss: 5.584628582000732 Tokens per Sec: 18174.20484097626
Epoch Step: 190 / 730 Loss: 3.8663551807403564 Tokens per Sec: 18944.441425791334
Epoch Step: 195 / 730 Loss: 7.553427696228027 Tokens per Sec: 18794.67918423997
Epoch Step: 200 / 730 Loss: 3.4760401248931885 Tokens per Sec: 18010.934680845698
Epoch Step: 205 / 730 Loss: 0.9644924402236938 Tokens per Sec: 16464.449144847014
Epoch Step: 210 / 730 Loss: 2.7176122665405273 Tokens per Sec: 15074.238212469227
Epoch Step: 215 / 730 Loss: 5.381592273712158 Tokens per Sec: 20078.30142542985
Epoch Step: 220 / 730 Loss: 5.010193347930908 Tokens per Sec: 20502.488753152556
Epoch Step: 225 / 730 Loss: 1.6510142087936401 Tokens per Sec: 19858.994027314064
Epoch Step: 230 / 730 Loss: 5.782893180847168 Tokens per Sec: 16952.468012972273
Epoch Step: 235 / 730 Loss: 1.3895375728607178 Tokens per Sec: 20272.91399319766
Epoch Step: 240 / 730 Loss: 4.577211380004883 Tokens per Sec: 17504.518540948564
Epoch Step: 245 / 730 Loss: 0.8666337132453918 Tokens per Sec: 17802.70458321257
Epoch Step: 250 / 730 Loss: 2.257045269012451 Tokens per Sec: 16522.84970355301
Epoch Step: 255 / 730 Loss: 5.390014171600342 Tokens per Sec: 17389.394125854444
Epoch Step: 260 / 730 Loss: 4.705044269561768 Tokens per Sec: 19616.213809702927
Epoch Step: 265 / 730 Loss: 8.406004905700684 Tokens per Sec: 20085.69972419022
Epoch Step: 270 / 730 Loss: 4.431258201599121 Tokens per Sec: 14875.045419216664
Epoch Step: 275 / 730 Loss: 4.949294090270996 Tokens per Sec: 17510.201165048544
Epoch Step: 280 / 730 Loss: 2.762315511703491 Tokens per Sec: 17394.281774268926
Epoch Step: 285 / 730 Loss: 5.383438587188721 Tokens per Sec: 17116.584676174003
Epoch Step: 290 / 730 Loss: 1.2281287908554077 Tokens per Sec: 18562.08417093972
Epoch Step: 295 / 730 Loss: 2.577692985534668 Tokens per Sec: 16176.872293515258
Epoch Step: 300 / 730 Loss: 1.1830730438232422 Tokens per Sec: 12946.940865289795
Epoch Step: 305 / 730 Loss: 2.4567291736602783 Tokens per Sec: 17327.385931142275
Epoch Step: 310 / 730 Loss: 31.2840633392334 Tokens per Sec: 17023.87497172355
Epoch Step: 315 / 730 Loss: 5.626829624176025 Tokens per Sec: 18370.10692757367
Epoch Step: 320 / 730 Loss: 2.163266658782959 Tokens per Sec: 20939.12767197119
Epoch Step: 325 / 730 Loss: 2.352620840072632 Tokens per Sec: 17103.4772981803
Epoch Step: 330 / 730 Loss: 1.101970911026001 Tokens per Sec: 17716.047356371804
Epoch Step: 335 / 730 Loss: 1.9562323093414307 Tokens per Sec: 18155.354591340816
Epoch Step: 340 / 730 Loss: 1.204131841659546 Tokens per Sec: 18026.582910240402
Epoch Step: 345 / 730 Loss: 3.124077081680298 Tokens per Sec: 15673.626439965365
Epoch Step: 350 / 730 Loss: 36.28095626831055 Tokens per Sec: 15966.02067662368
Epoch Step: 355 / 730 Loss: 6.772446632385254 Tokens per Sec: 20513.014744472945
Epoch Step: 360 / 730 Loss: 8.14838981628418 Tokens per Sec: 19213.1455366275
Epoch Step: 365 / 730 Loss: 1.7296682596206665 Tokens per Sec: 18962.61656173041
Epoch Step: 370 / 730 Loss: 1.0449824333190918 Tokens per Sec: 12884.728430668214
Epoch Step: 375 / 730 Loss: 4.568272590637207 Tokens per Sec: 16690.32544214747
Epoch Step: 380 / 730 Loss: 1.935056447982788 Tokens per Sec: 17348.14928781061
Epoch Step: 385 / 730 Loss: 4.745156288146973 Tokens per Sec: 19489.34391144306
Epoch Step: 390 / 730 Loss: 3.079815149307251 Tokens per Sec: 19444.763937884785
Epoch Step: 395 / 730 Loss: 1.0498785972595215 Tokens per Sec: 19006.18236133887
Epoch Step: 400 / 730 Loss: 2.485382318496704 Tokens per Sec: 17806.1356890931
Epoch Step: 405 / 730 Loss: 1.2902674674987793 Tokens per Sec: 17283.364538185655
Epoch Step: 410 / 730 Loss: 1.7290400266647339 Tokens per Sec: 20406.446721021985
Epoch Step: 415 / 730 Loss: 6.585341453552246 Tokens per Sec: 17138.246431048523
Epoch Step: 420 / 730 Loss: 1.2872103452682495 Tokens per Sec: 20663.433288242693
Epoch Step: 425 / 730 Loss: 2.1717917919158936 Tokens per Sec: 18895.783337036803
Epoch Step: 430 / 730 Loss: 1.1788718700408936 Tokens per Sec: 15581.749916476738
Epoch Step: 435 / 730 Loss: 6.695154190063477 Tokens per Sec: 19203.69401884714
Epoch Step: 440 / 730 Loss: 6.733497142791748 Tokens per Sec: 14080.059191123848
Epoch Step: 445 / 730 Loss: 1.4766241312026978 Tokens per Sec: 18399.445116126484
Epoch Step: 450 / 730 Loss: 5.289167404174805 Tokens per Sec: 16823.145516342593
Epoch Step: 455 / 730 Loss: 1.6978659629821777 Tokens per Sec: 18592.4466125595
Epoch Step: 460 / 730 Loss: 1.6500545740127563 Tokens per Sec: 20306.21475202423
Epoch Step: 465 / 730 Loss: 0.7340049743652344 Tokens per Sec: 13303.845689880241
Epoch Step: 470 / 730 Loss: 4.668162822723389 Tokens per Sec: 18813.759679532428
Epoch Step: 475 / 730 Loss: 6.070931434631348 Tokens per Sec: 17392.78177761718
Epoch Step: 480 / 730 Loss: 1.697379469871521 Tokens per Sec: 19252.455884880113
Epoch Step: 485 / 730 Loss: 2.342456817626953 Tokens per Sec: 17986.331671021915
Epoch Step: 490 / 730 Loss: 1.5318974256515503 Tokens per Sec: 18020.163303325502
Epoch Step: 495 / 730 Loss: 3.332017660140991 Tokens per Sec: 16477.8685898173
Epoch Step: 500 / 730 Loss: 7.796383380889893 Tokens per Sec: 15603.469334767751
Epoch Step: 505 / 730 Loss: 22.17855453491211 Tokens per Sec: 14462.690569771346
Epoch Step: 510 / 730 Loss: 4.444676876068115 Tokens per Sec: 16856.723869400037
Epoch Step: 515 / 730 Loss: 1.0238150358200073 Tokens per Sec: 17400.66228296558
Epoch Step: 520 / 730 Loss: 2.3078043460845947 Tokens per Sec: 19277.96572796221
Epoch Step: 525 / 730 Loss: 3.19425368309021 Tokens per Sec: 20699.869493845945
Epoch Step: 530 / 730 Loss: 1.0901230573654175 Tokens per Sec: 16408.254514415712
Epoch Step: 535 / 730 Loss: 4.640463829040527 Tokens per Sec: 16925.014821272885
Epoch Step: 540 / 730 Loss: 6.022449016571045 Tokens per Sec: 19442.470197127044
Epoch Step: 545 / 730 Loss: 4.87872838973999 Tokens per Sec: 17232.407901930124
Epoch Step: 550 / 730 Loss: 1.2529265880584717 Tokens per Sec: 16741.56344174785
Epoch Step: 555 / 730 Loss: 2.7934162616729736 Tokens per Sec: 15000.332274998678
Epoch Step: 560 / 730 Loss: 1.5941442251205444 Tokens per Sec: 15406.617373532024
Epoch Step: 565 / 730 Loss: 2.4317562580108643 Tokens per Sec: 20823.774749411667
Epoch Step: 570 / 730 Loss: 5.328567981719971 Tokens per Sec: 16000.27818897518
Epoch Step: 575 / 730 Loss: 8.466166496276855 Tokens per Sec: 19312.960120813026
Epoch Step: 580 / 730 Loss: 3.7014827728271484 Tokens per Sec: 16873.63580097497
Epoch Step: 585 / 730 Loss: 2.6509108543395996 Tokens per Sec: 17563.270958462585
Epoch Step: 590 / 730 Loss: 2.4041099548339844 Tokens per Sec: 20734.168336151946
Epoch Step: 595 / 730 Loss: 5.189472675323486 Tokens per Sec: 17879.765689633325
Epoch Step: 600 / 730 Loss: 3.355583906173706 Tokens per Sec: 19709.580133411455
Epoch Step: 605 / 730 Loss: 2.2639896869659424 Tokens per Sec: 20479.45854296766
Epoch Step: 610 / 730 Loss: 1.7995834350585938 Tokens per Sec: 18942.486816905355
Epoch Step: 615 / 730 Loss: 5.0153045654296875 Tokens per Sec: 17311.88723936937
Epoch Step: 620 / 730 Loss: 2.743039846420288 Tokens per Sec: 15485.801421480379
Epoch Step: 625 / 730 Loss: 3.7645328044891357 Tokens per Sec: 20319.34499402087
Epoch Step: 630 / 730 Loss: 6.793091297149658 Tokens per Sec: 19558.834931395013
Epoch Step: 635 / 730 Loss: 1.6868062019348145 Tokens per Sec: 18810.26162424727
Epoch Step: 640 / 730 Loss: 5.226898193359375 Tokens per Sec: 18463.504006959938
Epoch Step: 645 / 730 Loss: 1.4701380729675293 Tokens per Sec: 16730.634401720978
Epoch Step: 650 / 730 Loss: 8.286507606506348 Tokens per Sec: 18318.129515653814
Epoch Step: 655 / 730 Loss: 3.258991003036499 Tokens per Sec: 13316.97194400272
Epoch Step: 660 / 730 Loss: 1.6742721796035767 Tokens per Sec: 15118.48572859289
Epoch Step: 665 / 730 Loss: 1.3077075481414795 Tokens per Sec: 17289.862564596013
Epoch Step: 670 / 730 Loss: 2.034926414489746 Tokens per Sec: 16260.260439544869
Epoch Step: 675 / 730 Loss: 4.367446422576904 Tokens per Sec: 16829.416372354168
Epoch Step: 680 / 730 Loss: 1.9634050130844116 Tokens per Sec: 17003.089493861935
Epoch Step: 685 / 730 Loss: 4.2452874183654785 Tokens per Sec: 17808.729967305957
Epoch Step: 690 / 730 Loss: 35.678871154785156 Tokens per Sec: 16763.922050727415
Epoch Step: 695 / 730 Loss: 2.7428035736083984 Tokens per Sec: 21550.64948577077
Epoch Step: 700 / 730 Loss: 8.80164909362793 Tokens per Sec: 16883.524679137037
Epoch Step: 705 / 730 Loss: 29.190876007080078 Tokens per Sec: 14195.501754620393
Epoch Step: 710 / 730 Loss: 1.896247148513794 Tokens per Sec: 15168.756198419991
Epoch Step: 715 / 730 Loss: 4.534374713897705 Tokens per Sec: 16523.753259234938
Epoch Step: 720 / 730 Loss: 16.699111938476562 Tokens per Sec: 14710.389370767263
Epoch Step: 725 / 730 Loss: 4.404438495635986 Tokens per Sec: 17757.38675428055
Epoch Step: 730 / 730 Loss: 1.7136034965515137 Tokens per Sec: 14746.323051159914
Epoch ended with duration 0:01:19.927661
Train perplexity: 1.2152113780168556
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] args < java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.290751
Validation perplexity: 1.2204041906500787
Model saved best_on_validation!
Model saved checkpoint!
Epoch 31 / 1000
Epoch Step: 5 / 730 Loss: 0.7542575597763062 Tokens per Sec: 16680.547456083874
Epoch Step: 10 / 730 Loss: 0.5913140773773193 Tokens per Sec: 15929.345128063895
Epoch Step: 15 / 730 Loss: 1.838223934173584 Tokens per Sec: 17260.769555129133
Epoch Step: 20 / 730 Loss: 1.8753340244293213 Tokens per Sec: 18453.053032881748
Epoch Step: 25 / 730 Loss: 3.80966854095459 Tokens per Sec: 18672.35017932915
Epoch Step: 30 / 730 Loss: 1.957690715789795 Tokens per Sec: 16976.93364127348
Epoch Step: 35 / 730 Loss: 1.895772933959961 Tokens per Sec: 16722.425119531523
Epoch Step: 40 / 730 Loss: 2.4973888397216797 Tokens per Sec: 18872.660173787444
Epoch Step: 45 / 730 Loss: 2.4905202388763428 Tokens per Sec: 16591.63284319324
Epoch Step: 50 / 730 Loss: 4.346495151519775 Tokens per Sec: 16299.253445940145
Epoch Step: 55 / 730 Loss: 2.97659969329834 Tokens per Sec: 17796.699579691936
Epoch Step: 60 / 730 Loss: 3.785097360610962 Tokens per Sec: 17216.217920093946
Epoch Step: 65 / 730 Loss: 4.060671329498291 Tokens per Sec: 18551.84754358005
Epoch Step: 70 / 730 Loss: 2.356328010559082 Tokens per Sec: 15897.2898246016
Epoch Step: 75 / 730 Loss: 2.196230888366699 Tokens per Sec: 17038.213787489305
Epoch Step: 80 / 730 Loss: 2.757049560546875 Tokens per Sec: 18804.905805215505
Epoch Step: 85 / 730 Loss: 3.1044232845306396 Tokens per Sec: 17571.536528858338
Epoch Step: 90 / 730 Loss: 2.0120744705200195 Tokens per Sec: 17682.643877993105
Epoch Step: 95 / 730 Loss: 34.01530456542969 Tokens per Sec: 19307.14370150307
Epoch Step: 100 / 730 Loss: 5.759744167327881 Tokens per Sec: 17895.072883934507
Epoch Step: 105 / 730 Loss: 3.942471742630005 Tokens per Sec: 17933.570977312786
Epoch Step: 110 / 730 Loss: 5.10282039642334 Tokens per Sec: 18833.200692269747
Epoch Step: 115 / 730 Loss: 3.3329555988311768 Tokens per Sec: 14814.332432645646
Epoch Step: 120 / 730 Loss: 2.400099277496338 Tokens per Sec: 20781.10288461256
Epoch Step: 125 / 730 Loss: 3.0913479328155518 Tokens per Sec: 20966.5805971729
Epoch Step: 130 / 730 Loss: 2.215879201889038 Tokens per Sec: 19397.921239116215
Epoch Step: 135 / 730 Loss: 6.307692527770996 Tokens per Sec: 16882.253836124368
Epoch Step: 140 / 730 Loss: 1.8865735530853271 Tokens per Sec: 19489.157801040157
Epoch Step: 145 / 730 Loss: 7.346807956695557 Tokens per Sec: 19605.85888297102
Epoch Step: 150 / 730 Loss: 2.332994222640991 Tokens per Sec: 19513.927384702565
Epoch Step: 155 / 730 Loss: 6.112415313720703 Tokens per Sec: 17148.90188755417
Epoch Step: 160 / 730 Loss: 1.8808741569519043 Tokens per Sec: 14634.30915308554
Epoch Step: 165 / 730 Loss: 32.875885009765625 Tokens per Sec: 15162.007085116802
Epoch Step: 170 / 730 Loss: 8.548507690429688 Tokens per Sec: 18226.225816487768
Epoch Step: 175 / 730 Loss: 31.837377548217773 Tokens per Sec: 19138.80784945638
Epoch Step: 180 / 730 Loss: 4.085358619689941 Tokens per Sec: 15946.202809173634
Epoch Step: 185 / 730 Loss: 4.454046249389648 Tokens per Sec: 16804.5839420705
Epoch Step: 190 / 730 Loss: 5.0904388427734375 Tokens per Sec: 16507.681413225673
Epoch Step: 195 / 730 Loss: 2.723201036453247 Tokens per Sec: 18004.742628133557
Epoch Step: 200 / 730 Loss: 4.227182388305664 Tokens per Sec: 18292.202497477858
Epoch Step: 205 / 730 Loss: 39.943546295166016 Tokens per Sec: 17436.6394677222
Epoch Step: 210 / 730 Loss: 5.312684059143066 Tokens per Sec: 18207.474524576333
Epoch Step: 215 / 730 Loss: 4.821612358093262 Tokens per Sec: 17444.70006654625
Epoch Step: 220 / 730 Loss: 3.334094524383545 Tokens per Sec: 19388.82994004029
Epoch Step: 225 / 730 Loss: 3.206737756729126 Tokens per Sec: 17419.00778910431
Epoch Step: 230 / 730 Loss: 2.90643310546875 Tokens per Sec: 17016.702132719613
Epoch Step: 235 / 730 Loss: 19.523788452148438 Tokens per Sec: 17334.280620922942
Epoch Step: 240 / 730 Loss: 5.151519298553467 Tokens per Sec: 16096.65462449784
Epoch Step: 245 / 730 Loss: 3.7405412197113037 Tokens per Sec: 20281.577528249858
Epoch Step: 250 / 730 Loss: 1.1767666339874268 Tokens per Sec: 18855.975042126563
Epoch Step: 255 / 730 Loss: 3.2389893531799316 Tokens per Sec: 19817.40178305107
Epoch Step: 260 / 730 Loss: 3.9193038940429688 Tokens per Sec: 14580.593715716419
Epoch Step: 265 / 730 Loss: 2.4725468158721924 Tokens per Sec: 18199.915726748557
Epoch Step: 270 / 730 Loss: 1.1296449899673462 Tokens per Sec: 21542.85259072445
Epoch Step: 275 / 730 Loss: 4.554098606109619 Tokens per Sec: 14560.220830983057
Epoch Step: 280 / 730 Loss: 1.0189791917800903 Tokens per Sec: 15959.036110471518
Epoch Step: 285 / 730 Loss: 1.579239845275879 Tokens per Sec: 19155.251062289914
Epoch Step: 290 / 730 Loss: 5.442145347595215 Tokens per Sec: 18947.76789678322
Epoch Step: 295 / 730 Loss: 5.412848472595215 Tokens per Sec: 15213.6239692726
Epoch Step: 300 / 730 Loss: 35.9365119934082 Tokens per Sec: 19153.454272009516
Epoch Step: 305 / 730 Loss: 1.3717710971832275 Tokens per Sec: 16946.730444164717
Epoch Step: 310 / 730 Loss: 4.549242973327637 Tokens per Sec: 18001.753461584747
Epoch Step: 315 / 730 Loss: 5.8465986251831055 Tokens per Sec: 21635.525749394466
Epoch Step: 320 / 730 Loss: 7.649803161621094 Tokens per Sec: 16661.117320068992
Epoch Step: 325 / 730 Loss: 1.037653923034668 Tokens per Sec: 17021.178653859217
Epoch Step: 330 / 730 Loss: 4.043196201324463 Tokens per Sec: 17146.360001094366
Epoch Step: 335 / 730 Loss: 0.9049360752105713 Tokens per Sec: 18911.463261208948
Epoch Step: 340 / 730 Loss: 5.152593612670898 Tokens per Sec: 15521.346915155771
Epoch Step: 345 / 730 Loss: 3.955155372619629 Tokens per Sec: 19039.886353544545
Epoch Step: 350 / 730 Loss: 1.440127968788147 Tokens per Sec: 17032.33409571528
Epoch Step: 355 / 730 Loss: 1.1533857583999634 Tokens per Sec: 13242.039690660808
Epoch Step: 360 / 730 Loss: 5.7775678634643555 Tokens per Sec: 20073.089208952395
Epoch Step: 365 / 730 Loss: 3.879115581512451 Tokens per Sec: 19170.490736305564
Epoch Step: 370 / 730 Loss: 10.928749084472656 Tokens per Sec: 15213.305190659297
Epoch Step: 375 / 730 Loss: 2.012357473373413 Tokens per Sec: 16036.71359651634
Epoch Step: 380 / 730 Loss: 4.731605529785156 Tokens per Sec: 17667.734205225937
Epoch Step: 385 / 730 Loss: 5.562613010406494 Tokens per Sec: 17659.732726122093
Epoch Step: 390 / 730 Loss: 2.433223247528076 Tokens per Sec: 16445.178885342222
Epoch Step: 395 / 730 Loss: 3.8209095001220703 Tokens per Sec: 19727.659410512315
Epoch Step: 400 / 730 Loss: 3.225703001022339 Tokens per Sec: 17755.214638018766
Epoch Step: 405 / 730 Loss: 2.214240074157715 Tokens per Sec: 17373.02004408518
Epoch Step: 410 / 730 Loss: 4.890495300292969 Tokens per Sec: 16454.807604138146
Epoch Step: 415 / 730 Loss: 3.77984619140625 Tokens per Sec: 18713.290094229164
Epoch Step: 420 / 730 Loss: 1.232134461402893 Tokens per Sec: 16491.561324976894
Epoch Step: 425 / 730 Loss: 3.951749563217163 Tokens per Sec: 21153.41854152594
Epoch Step: 430 / 730 Loss: 1.6046792268753052 Tokens per Sec: 15076.13615049374
Epoch Step: 435 / 730 Loss: 1.7036325931549072 Tokens per Sec: 16159.932512107576
Epoch Step: 440 / 730 Loss: 1.8585888147354126 Tokens per Sec: 17191.65645386799
Epoch Step: 445 / 730 Loss: 5.652429103851318 Tokens per Sec: 21462.022732792655
Epoch Step: 450 / 730 Loss: 3.957796335220337 Tokens per Sec: 18582.530647751733
Epoch Step: 455 / 730 Loss: 4.2884955406188965 Tokens per Sec: 16858.782430956948
Epoch Step: 460 / 730 Loss: 1.600427269935608 Tokens per Sec: 18714.12950498585
Epoch Step: 465 / 730 Loss: 2.1978588104248047 Tokens per Sec: 16469.1991554836
Epoch Step: 470 / 730 Loss: 5.475155830383301 Tokens per Sec: 18514.282022615538
Epoch Step: 475 / 730 Loss: 4.896561622619629 Tokens per Sec: 19187.652446975233
Epoch Step: 480 / 730 Loss: 1.819858193397522 Tokens per Sec: 18371.992237087525
Epoch Step: 485 / 730 Loss: 1.2514172792434692 Tokens per Sec: 17755.003851079902
Epoch Step: 490 / 730 Loss: 3.5707600116729736 Tokens per Sec: 18758.80697457494
Epoch Step: 495 / 730 Loss: 3.2433156967163086 Tokens per Sec: 18334.592510748862
Epoch Step: 500 / 730 Loss: 2.644439220428467 Tokens per Sec: 16639.645158640466
Epoch Step: 505 / 730 Loss: 5.004208087921143 Tokens per Sec: 18329.135403975375
Epoch Step: 510 / 730 Loss: 4.249619483947754 Tokens per Sec: 20014.99937369116
Epoch Step: 515 / 730 Loss: 2.0386366844177246 Tokens per Sec: 21044.968849966797
Epoch Step: 520 / 730 Loss: 1.4533307552337646 Tokens per Sec: 18410.563421496903
Epoch Step: 525 / 730 Loss: 2.316887140274048 Tokens per Sec: 18088.893460908064
Epoch Step: 530 / 730 Loss: 7.083085536956787 Tokens per Sec: 17792.745933178277
Epoch Step: 535 / 730 Loss: 2.3846023082733154 Tokens per Sec: 16566.734190725227
Epoch Step: 540 / 730 Loss: 3.498440742492676 Tokens per Sec: 16205.602757468354
Epoch Step: 545 / 730 Loss: 3.4538187980651855 Tokens per Sec: 15909.575370957853
Epoch Step: 550 / 730 Loss: 0.8368532657623291 Tokens per Sec: 17574.563730381928
Epoch Step: 555 / 730 Loss: 15.489725112915039 Tokens per Sec: 12331.442535574544
Epoch Step: 560 / 730 Loss: 5.545151233673096 Tokens per Sec: 18872.83539500238
Epoch Step: 565 / 730 Loss: 3.9189887046813965 Tokens per Sec: 15415.077916012571
Epoch Step: 570 / 730 Loss: 1.0664558410644531 Tokens per Sec: 19823.216725071456
Epoch Step: 575 / 730 Loss: 5.846315383911133 Tokens per Sec: 19461.294550280643
Epoch Step: 580 / 730 Loss: 5.082990646362305 Tokens per Sec: 17894.140904725555
Epoch Step: 585 / 730 Loss: 2.4338760375976562 Tokens per Sec: 20144.287309739222
Epoch Step: 590 / 730 Loss: 4.724104881286621 Tokens per Sec: 16647.952607479812
Epoch Step: 595 / 730 Loss: 4.405171871185303 Tokens per Sec: 16204.27859703154
Epoch Step: 600 / 730 Loss: 3.0702602863311768 Tokens per Sec: 16955.081567641642
Epoch Step: 605 / 730 Loss: 2.619126319885254 Tokens per Sec: 17517.48237071291
Epoch Step: 610 / 730 Loss: 2.562953472137451 Tokens per Sec: 19342.527433101168
Epoch Step: 615 / 730 Loss: 3.221665143966675 Tokens per Sec: 16322.074185440899
Epoch Step: 620 / 730 Loss: 0.4862388074398041 Tokens per Sec: 15723.195006221289
Epoch Step: 625 / 730 Loss: 2.323620080947876 Tokens per Sec: 20543.74433931974
Epoch Step: 630 / 730 Loss: 3.8493382930755615 Tokens per Sec: 16461.704561001374
Epoch Step: 635 / 730 Loss: 4.1292924880981445 Tokens per Sec: 16964.104085032497
Epoch Step: 640 / 730 Loss: 1.928147554397583 Tokens per Sec: 14691.37190930425
Epoch Step: 645 / 730 Loss: 1.5871542692184448 Tokens per Sec: 19998.02026711106
Epoch Step: 650 / 730 Loss: 7.014135360717773 Tokens per Sec: 15923.75147647528
Epoch Step: 655 / 730 Loss: 6.175968170166016 Tokens per Sec: 16412.879780676736
Epoch Step: 660 / 730 Loss: 1.738498330116272 Tokens per Sec: 16019.715686509926
Epoch Step: 665 / 730 Loss: 1.5681813955307007 Tokens per Sec: 15776.196465294735
Epoch Step: 670 / 730 Loss: 3.3592264652252197 Tokens per Sec: 17896.43262326042
Epoch Step: 675 / 730 Loss: 1.3261241912841797 Tokens per Sec: 16370.215998463906
Epoch Step: 680 / 730 Loss: 2.804039239883423 Tokens per Sec: 21072.500663800514
Epoch Step: 685 / 730 Loss: 7.053870677947998 Tokens per Sec: 17219.561015829844
Epoch Step: 690 / 730 Loss: 8.049369812011719 Tokens per Sec: 19565.222818120088
Epoch Step: 695 / 730 Loss: 2.3514022827148438 Tokens per Sec: 18542.804259998637
Epoch Step: 700 / 730 Loss: 1.4432849884033203 Tokens per Sec: 19000.153327750126
Epoch Step: 705 / 730 Loss: 2.7747323513031006 Tokens per Sec: 13308.849391273063
Epoch Step: 710 / 730 Loss: 33.03685760498047 Tokens per Sec: 16794.27401161254
Epoch Step: 715 / 730 Loss: 3.798433303833008 Tokens per Sec: 16128.342917819651
Epoch Step: 720 / 730 Loss: 4.8650665283203125 Tokens per Sec: 15085.751081393691
Epoch Step: 725 / 730 Loss: 5.322446823120117 Tokens per Sec: 15827.457123185217
Epoch Step: 730 / 730 Loss: 5.058262348175049 Tokens per Sec: 13870.318903930689
Epoch ended with duration 0:01:19.643996
Train perplexity: 1.1806058571177254
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] , java.lang.String message ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , true ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.280014
Validation perplexity: 1.2015994913046404
Model saved best_on_validation!
Epoch 32 / 1000
Epoch Step: 5 / 730 Loss: 3.7467641830444336 Tokens per Sec: 16299.852460189324
Epoch Step: 10 / 730 Loss: 3.495496988296509 Tokens per Sec: 14569.350511283263
Epoch Step: 15 / 730 Loss: 1.8282569646835327 Tokens per Sec: 18789.885662659974
Epoch Step: 20 / 730 Loss: 3.9303433895111084 Tokens per Sec: 18274.84633725494
Epoch Step: 25 / 730 Loss: 1.6450440883636475 Tokens per Sec: 16875.292475959828
Epoch Step: 30 / 730 Loss: 1.0282766819000244 Tokens per Sec: 18239.147554263734
Epoch Step: 35 / 730 Loss: 1.0139981508255005 Tokens per Sec: 19956.253630468447
Epoch Step: 40 / 730 Loss: 2.913393974304199 Tokens per Sec: 16012.735381256281
Epoch Step: 45 / 730 Loss: 6.475785255432129 Tokens per Sec: 19664.09684385503
Epoch Step: 50 / 730 Loss: 3.4657340049743652 Tokens per Sec: 18234.1692034076
Epoch Step: 55 / 730 Loss: 1.027106761932373 Tokens per Sec: 17666.65359446287
Epoch Step: 60 / 730 Loss: 0.37602499127388 Tokens per Sec: 18175.506380205043
Epoch Step: 65 / 730 Loss: 4.245290756225586 Tokens per Sec: 18313.30409856294
Epoch Step: 70 / 730 Loss: 11.036308288574219 Tokens per Sec: 20650.342444538932
Epoch Step: 75 / 730 Loss: 2.385802745819092 Tokens per Sec: 17641.125580490847
Epoch Step: 80 / 730 Loss: 5.126016139984131 Tokens per Sec: 15254.222537827642
Epoch Step: 85 / 730 Loss: 9.711231231689453 Tokens per Sec: 17613.96406218488
Epoch Step: 90 / 730 Loss: 4.0425262451171875 Tokens per Sec: 18503.553179759347
Epoch Step: 95 / 730 Loss: 1.4000909328460693 Tokens per Sec: 16187.593886833525
Epoch Step: 100 / 730 Loss: 1.567163109779358 Tokens per Sec: 17614.232702365058
Epoch Step: 105 / 730 Loss: 3.314718246459961 Tokens per Sec: 16548.15936110764
Epoch Step: 110 / 730 Loss: 2.0267488956451416 Tokens per Sec: 20641.453488547046
Epoch Step: 115 / 730 Loss: 1.2615760564804077 Tokens per Sec: 16570.342182164914
Epoch Step: 120 / 730 Loss: 3.1172845363616943 Tokens per Sec: 15096.893542092354
Epoch Step: 125 / 730 Loss: 1.273344874382019 Tokens per Sec: 16059.881233404201
Epoch Step: 130 / 730 Loss: 5.132691383361816 Tokens per Sec: 18430.620752528048
Epoch Step: 135 / 730 Loss: 4.05910062789917 Tokens per Sec: 17802.18561788225
Epoch Step: 140 / 730 Loss: 3.6587491035461426 Tokens per Sec: 14986.807521687606
Epoch Step: 145 / 730 Loss: 5.306644439697266 Tokens per Sec: 17492.28410136014
Epoch Step: 150 / 730 Loss: 0.7893886566162109 Tokens per Sec: 17777.74179114105
Epoch Step: 155 / 730 Loss: 4.153027057647705 Tokens per Sec: 17740.443128136634
Epoch Step: 160 / 730 Loss: 3.0556020736694336 Tokens per Sec: 18216.27188459299
Epoch Step: 165 / 730 Loss: 3.1378345489501953 Tokens per Sec: 17629.69792021821
Epoch Step: 170 / 730 Loss: 3.1262853145599365 Tokens per Sec: 16202.987065913776
Epoch Step: 175 / 730 Loss: 5.4923834800720215 Tokens per Sec: 16634.768200005023
Epoch Step: 180 / 730 Loss: 2.4356067180633545 Tokens per Sec: 18847.59922573396
Epoch Step: 185 / 730 Loss: 1.2180429697036743 Tokens per Sec: 19530.624633619485
Epoch Step: 190 / 730 Loss: 1.933455228805542 Tokens per Sec: 16956.202156395455
Epoch Step: 195 / 730 Loss: 3.525118350982666 Tokens per Sec: 17066.90369590669
Epoch Step: 200 / 730 Loss: 2.4588570594787598 Tokens per Sec: 15040.317810416931
Epoch Step: 205 / 730 Loss: 3.366332530975342 Tokens per Sec: 19466.214628958653
Epoch Step: 210 / 730 Loss: 1.7412049770355225 Tokens per Sec: 19228.215121641253
Epoch Step: 215 / 730 Loss: 55.38581848144531 Tokens per Sec: 16492.183435264957
Epoch Step: 220 / 730 Loss: 17.017065048217773 Tokens per Sec: 17675.567642075202
Epoch Step: 225 / 730 Loss: 1.967523455619812 Tokens per Sec: 14926.722409403917
Epoch Step: 230 / 730 Loss: 1.140899658203125 Tokens per Sec: 16517.618537844985
Epoch Step: 235 / 730 Loss: 0.8602718114852905 Tokens per Sec: 17703.656304805805
Epoch Step: 240 / 730 Loss: 5.294122695922852 Tokens per Sec: 15474.314734828826
Epoch Step: 245 / 730 Loss: 3.2468087673187256 Tokens per Sec: 18419.05148907715
Epoch Step: 250 / 730 Loss: 17.12314796447754 Tokens per Sec: 20917.029308458572
Epoch Step: 255 / 730 Loss: 1.9205392599105835 Tokens per Sec: 20792.4132358576
Epoch Step: 260 / 730 Loss: 3.485619306564331 Tokens per Sec: 16469.380948795795
Epoch Step: 265 / 730 Loss: 5.130733489990234 Tokens per Sec: 16029.766458798487
Epoch Step: 270 / 730 Loss: 3.386103391647339 Tokens per Sec: 17517.043763691057
Epoch Step: 275 / 730 Loss: 1.0290756225585938 Tokens per Sec: 16750.723492978475
Epoch Step: 280 / 730 Loss: 2.696577787399292 Tokens per Sec: 12812.140561151977
Epoch Step: 285 / 730 Loss: 3.7077786922454834 Tokens per Sec: 21264.87617527046
Epoch Step: 290 / 730 Loss: 0.8720846772193909 Tokens per Sec: 17775.05013883376
Epoch Step: 295 / 730 Loss: 3.6355702877044678 Tokens per Sec: 15472.375324734567
Epoch Step: 300 / 730 Loss: 2.854269027709961 Tokens per Sec: 19129.898391430703
Epoch Step: 305 / 730 Loss: 50.46067428588867 Tokens per Sec: 16435.400627449064
Epoch Step: 310 / 730 Loss: 0.9799757599830627 Tokens per Sec: 15724.176564653017
Epoch Step: 315 / 730 Loss: 2.240300178527832 Tokens per Sec: 15355.577742169768
Epoch Step: 320 / 730 Loss: 2.0987093448638916 Tokens per Sec: 18130.80547845361
Epoch Step: 325 / 730 Loss: 2.9732043743133545 Tokens per Sec: 16368.07824532043
Epoch Step: 330 / 730 Loss: 3.2688512802124023 Tokens per Sec: 20153.660244336956
Epoch Step: 335 / 730 Loss: 5.64931583404541 Tokens per Sec: 18950.173856617716
Epoch Step: 340 / 730 Loss: 1.6161471605300903 Tokens per Sec: 15481.433012713924
Epoch Step: 345 / 730 Loss: 3.5312633514404297 Tokens per Sec: 18088.515566632093
Epoch Step: 350 / 730 Loss: 3.5758352279663086 Tokens per Sec: 19475.92276965999
Epoch Step: 355 / 730 Loss: 2.0655598640441895 Tokens per Sec: 19191.43625422718
Epoch Step: 360 / 730 Loss: 6.832238674163818 Tokens per Sec: 18262.969783158587
Epoch Step: 365 / 730 Loss: 6.353646755218506 Tokens per Sec: 15189.31392241898
Epoch Step: 370 / 730 Loss: 3.1614186763763428 Tokens per Sec: 15944.562095353727
Epoch Step: 375 / 730 Loss: 1.9757506847381592 Tokens per Sec: 15361.69090912586
Epoch Step: 380 / 730 Loss: 1.6283563375473022 Tokens per Sec: 17507.763728767364
Epoch Step: 385 / 730 Loss: 1.5219475030899048 Tokens per Sec: 19937.673236126688
Epoch Step: 390 / 730 Loss: 3.8627445697784424 Tokens per Sec: 17677.964894136956
Epoch Step: 395 / 730 Loss: 1.2750471830368042 Tokens per Sec: 20270.235093254134
Epoch Step: 400 / 730 Loss: 3.098778247833252 Tokens per Sec: 16810.195946471445
Epoch Step: 405 / 730 Loss: 3.499863624572754 Tokens per Sec: 18302.042911816126
Epoch Step: 410 / 730 Loss: 1.1100358963012695 Tokens per Sec: 17687.176419257186
Epoch Step: 415 / 730 Loss: 52.149131774902344 Tokens per Sec: 17323.493056643805
Epoch Step: 420 / 730 Loss: 1.4828256368637085 Tokens per Sec: 19117.558797667498
Epoch Step: 425 / 730 Loss: 4.064377307891846 Tokens per Sec: 14678.17901071758
Epoch Step: 430 / 730 Loss: 4.2082014083862305 Tokens per Sec: 16247.102345772431
Epoch Step: 435 / 730 Loss: 3.005598783493042 Tokens per Sec: 16944.507171234614
Epoch Step: 440 / 730 Loss: 3.169111967086792 Tokens per Sec: 12348.616258735217
Epoch Step: 445 / 730 Loss: 2.7551052570343018 Tokens per Sec: 18574.89422126786
Epoch Step: 450 / 730 Loss: 4.274018287658691 Tokens per Sec: 17712.13348256412
Epoch Step: 455 / 730 Loss: 4.030499458312988 Tokens per Sec: 18059.51631601756
Epoch Step: 460 / 730 Loss: 2.839994192123413 Tokens per Sec: 18990.92132356535
Epoch Step: 465 / 730 Loss: 1.1209570169448853 Tokens per Sec: 19412.69185755313
Epoch Step: 470 / 730 Loss: 6.433313846588135 Tokens per Sec: 17795.076065487032
Epoch Step: 475 / 730 Loss: 1.9408934116363525 Tokens per Sec: 16144.187977316942
Epoch Step: 480 / 730 Loss: 0.8456774950027466 Tokens per Sec: 18417.292495887643
Epoch Step: 485 / 730 Loss: 4.4280571937561035 Tokens per Sec: 16983.06909208884
Epoch Step: 490 / 730 Loss: 16.477331161499023 Tokens per Sec: 18261.213100130946
Epoch Step: 495 / 730 Loss: 5.450654029846191 Tokens per Sec: 17230.054690049714
Epoch Step: 500 / 730 Loss: 5.376630783081055 Tokens per Sec: 19123.819985639388
Epoch Step: 505 / 730 Loss: 24.846359252929688 Tokens per Sec: 14708.543844037858
Epoch Step: 510 / 730 Loss: 4.823086261749268 Tokens per Sec: 19981.428229588244
Epoch Step: 515 / 730 Loss: 5.444607257843018 Tokens per Sec: 20393.589067025416
Epoch Step: 520 / 730 Loss: 3.143977642059326 Tokens per Sec: 18600.06274580657
Epoch Step: 525 / 730 Loss: 0.3193359375 Tokens per Sec: 16313.15946289115
Epoch Step: 530 / 730 Loss: 5.8222856521606445 Tokens per Sec: 18223.468804358108
Epoch Step: 535 / 730 Loss: 10.65206527709961 Tokens per Sec: 19574.050365749543
Epoch Step: 540 / 730 Loss: 2.6848976612091064 Tokens per Sec: 18689.119734405074
Epoch Step: 545 / 730 Loss: 17.420228958129883 Tokens per Sec: 19334.12457973812
Epoch Step: 550 / 730 Loss: 6.836367607116699 Tokens per Sec: 15775.07240082239
Epoch Step: 555 / 730 Loss: 3.201143741607666 Tokens per Sec: 15412.431016790655
Epoch Step: 560 / 730 Loss: 1.921013355255127 Tokens per Sec: 16173.062136191822
Epoch Step: 565 / 730 Loss: 11.459190368652344 Tokens per Sec: 17853.115239188788
Epoch Step: 570 / 730 Loss: 2.5883021354675293 Tokens per Sec: 17238.203191008826
Epoch Step: 575 / 730 Loss: 13.691568374633789 Tokens per Sec: 17312.010416066194
Epoch Step: 580 / 730 Loss: 7.18838357925415 Tokens per Sec: 14624.726000183293
Epoch Step: 585 / 730 Loss: 0.6516385078430176 Tokens per Sec: 16685.80575488904
Epoch Step: 590 / 730 Loss: 3.0734574794769287 Tokens per Sec: 20968.424554974914
Epoch Step: 595 / 730 Loss: 1.6790318489074707 Tokens per Sec: 19639.145699463705
Epoch Step: 600 / 730 Loss: 4.732282638549805 Tokens per Sec: 16317.478156107793
Epoch Step: 605 / 730 Loss: 2.121811866760254 Tokens per Sec: 15497.031672324805
Epoch Step: 610 / 730 Loss: 6.75036096572876 Tokens per Sec: 19456.387202564703
Epoch Step: 615 / 730 Loss: 2.5783064365386963 Tokens per Sec: 18124.421290890976
Epoch Step: 620 / 730 Loss: 3.256331443786621 Tokens per Sec: 15059.84218647054
Epoch Step: 625 / 730 Loss: 1.4624714851379395 Tokens per Sec: 16490.40819372767
Epoch Step: 630 / 730 Loss: 1.5286320447921753 Tokens per Sec: 15389.935957212276
Epoch Step: 635 / 730 Loss: 3.9546709060668945 Tokens per Sec: 16868.972139500955
Epoch Step: 640 / 730 Loss: 3.545319080352783 Tokens per Sec: 19228.676928033758
Epoch Step: 645 / 730 Loss: 2.218531370162964 Tokens per Sec: 18341.186398363247
Epoch Step: 650 / 730 Loss: 8.302876472473145 Tokens per Sec: 14775.733577652602
Epoch Step: 655 / 730 Loss: 39.25538635253906 Tokens per Sec: 16937.06145030335
Epoch Step: 660 / 730 Loss: 6.6152849197387695 Tokens per Sec: 16412.97614458365
Epoch Step: 665 / 730 Loss: 1.2686773538589478 Tokens per Sec: 18422.215838981974
Epoch Step: 670 / 730 Loss: 4.840542793273926 Tokens per Sec: 19788.364604952443
Epoch Step: 675 / 730 Loss: 2.068075656890869 Tokens per Sec: 20371.034290302625
Epoch Step: 680 / 730 Loss: 3.306419849395752 Tokens per Sec: 20322.703944999183
Epoch Step: 685 / 730 Loss: 5.4096808433532715 Tokens per Sec: 19132.60529017942
Epoch Step: 690 / 730 Loss: 4.803213596343994 Tokens per Sec: 17142.397352041735
Epoch Step: 695 / 730 Loss: 4.457909107208252 Tokens per Sec: 18769.24995317399
Epoch Step: 700 / 730 Loss: 5.470658779144287 Tokens per Sec: 18120.024133940184
Epoch Step: 705 / 730 Loss: 3.4951722621917725 Tokens per Sec: 15104.201955688397
Epoch Step: 710 / 730 Loss: 26.331331253051758 Tokens per Sec: 14113.954352812749
Epoch Step: 715 / 730 Loss: 4.8291778564453125 Tokens per Sec: 13035.158642658156
Epoch Step: 720 / 730 Loss: 3.433244466781616 Tokens per Sec: 15783.973807796472
Epoch Step: 725 / 730 Loss: 4.562658786773682 Tokens per Sec: 17856.62150222654
Epoch Step: 730 / 730 Loss: 2.5036401748657227 Tokens per Sec: 14564.657602892335
Epoch ended with duration 0:01:20.226426
Train perplexity: 1.188446852554345
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] args < java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.337348
Validation perplexity: 1.226986236471531
Epoch 33 / 1000
Epoch Step: 5 / 730 Loss: 6.658603191375732 Tokens per Sec: 17312.673248458264
Epoch Step: 10 / 730 Loss: 1.6460115909576416 Tokens per Sec: 18074.263133957138
Epoch Step: 15 / 730 Loss: 2.695543050765991 Tokens per Sec: 16691.33185278903
Epoch Step: 20 / 730 Loss: 3.9894938468933105 Tokens per Sec: 15500.277830771121
Epoch Step: 25 / 730 Loss: 6.2791218757629395 Tokens per Sec: 17792.113483629993
Epoch Step: 30 / 730 Loss: 4.637161731719971 Tokens per Sec: 16892.512837620896
Epoch Step: 35 / 730 Loss: 1.7634183168411255 Tokens per Sec: 16918.682709788292
Epoch Step: 40 / 730 Loss: 1.554682970046997 Tokens per Sec: 19524.278720205148
Epoch Step: 45 / 730 Loss: 2.9804961681365967 Tokens per Sec: 16514.886221875804
Epoch Step: 50 / 730 Loss: 5.292232990264893 Tokens per Sec: 15463.402969119554
Epoch Step: 55 / 730 Loss: 0.7347320318222046 Tokens per Sec: 19077.485671579045
Epoch Step: 60 / 730 Loss: 1.0300872325897217 Tokens per Sec: 16687.94718638171
Epoch Step: 65 / 730 Loss: 1.4205330610275269 Tokens per Sec: 18043.27221336377
Epoch Step: 70 / 730 Loss: 4.350831985473633 Tokens per Sec: 16200.536518875782
Epoch Step: 75 / 730 Loss: 1.6768157482147217 Tokens per Sec: 18732.802721186483
Epoch Step: 80 / 730 Loss: 2.632455825805664 Tokens per Sec: 19970.990581058468
Epoch Step: 85 / 730 Loss: 4.6789937019348145 Tokens per Sec: 18198.952514955356
Epoch Step: 90 / 730 Loss: 1.5399746894836426 Tokens per Sec: 18600.125046153848
Epoch Step: 95 / 730 Loss: 1.397277593612671 Tokens per Sec: 16636.221440031535
Epoch Step: 100 / 730 Loss: 2.448408365249634 Tokens per Sec: 17462.68584942217
Epoch Step: 105 / 730 Loss: 3.3776912689208984 Tokens per Sec: 17001.500269914766
Epoch Step: 110 / 730 Loss: 4.952635765075684 Tokens per Sec: 17720.623584414414
Epoch Step: 115 / 730 Loss: 2.8803741931915283 Tokens per Sec: 14824.854885014598
Epoch Step: 120 / 730 Loss: 4.212048053741455 Tokens per Sec: 19103.834666549858
Epoch Step: 125 / 730 Loss: 3.732724666595459 Tokens per Sec: 16720.705655604037
Epoch Step: 130 / 730 Loss: 40.84476089477539 Tokens per Sec: 17524.168907036747
Epoch Step: 135 / 730 Loss: 3.35849928855896 Tokens per Sec: 16620.27424111971
Epoch Step: 140 / 730 Loss: 4.518106460571289 Tokens per Sec: 19042.335863646622
Epoch Step: 145 / 730 Loss: 4.33579158782959 Tokens per Sec: 19189.817257999763
Epoch Step: 150 / 730 Loss: 20.507579803466797 Tokens per Sec: 17569.999804675434
Epoch Step: 155 / 730 Loss: 5.049615859985352 Tokens per Sec: 18516.897308476084
Epoch Step: 160 / 730 Loss: 4.322816371917725 Tokens per Sec: 13853.16556083599
Epoch Step: 165 / 730 Loss: 5.958613395690918 Tokens per Sec: 19059.260001903192
Epoch Step: 170 / 730 Loss: 2.4089722633361816 Tokens per Sec: 17182.221367861326
Epoch Step: 175 / 730 Loss: 2.6825428009033203 Tokens per Sec: 15081.567402325942
Epoch Step: 180 / 730 Loss: 1.6628999710083008 Tokens per Sec: 15477.917119673213
Epoch Step: 185 / 730 Loss: 1.7738525867462158 Tokens per Sec: 16170.491415738306
Epoch Step: 190 / 730 Loss: 3.561475992202759 Tokens per Sec: 17196.476427650196
Epoch Step: 195 / 730 Loss: 1.4865199327468872 Tokens per Sec: 19461.009732402457
Epoch Step: 200 / 730 Loss: 0.9976218938827515 Tokens per Sec: 18202.44802115924
Epoch Step: 205 / 730 Loss: 5.474224090576172 Tokens per Sec: 15444.714177961263
Epoch Step: 210 / 730 Loss: 5.414911270141602 Tokens per Sec: 14882.333893624935
Epoch Step: 215 / 730 Loss: 1.207977294921875 Tokens per Sec: 20637.10824156176
Epoch Step: 220 / 730 Loss: 2.895679473876953 Tokens per Sec: 20799.45227396657
Epoch Step: 225 / 730 Loss: 6.537482261657715 Tokens per Sec: 18507.17789830824
Epoch Step: 230 / 730 Loss: 5.948904514312744 Tokens per Sec: 17365.600156772325
Epoch Step: 235 / 730 Loss: 1.647091269493103 Tokens per Sec: 16996.257178763284
Epoch Step: 240 / 730 Loss: 3.9473938941955566 Tokens per Sec: 18712.459533952988
Epoch Step: 245 / 730 Loss: 0.9034326076507568 Tokens per Sec: 17732.238702172635
Epoch Step: 250 / 730 Loss: 2.365137815475464 Tokens per Sec: 18651.247376041087
Epoch Step: 255 / 730 Loss: 1.2905800342559814 Tokens per Sec: 20217.95950440729
Epoch Step: 260 / 730 Loss: 1.9665480852127075 Tokens per Sec: 16095.259306391668
Epoch Step: 265 / 730 Loss: 1.7239370346069336 Tokens per Sec: 17270.356513567433
Epoch Step: 270 / 730 Loss: 3.6784350872039795 Tokens per Sec: 20499.191935503604
Epoch Step: 275 / 730 Loss: 3.2768640518188477 Tokens per Sec: 15227.244527127741
Epoch Step: 280 / 730 Loss: 3.4086101055145264 Tokens per Sec: 17389.138338527868
Epoch Step: 285 / 730 Loss: 2.537919044494629 Tokens per Sec: 16675.80727556465
Epoch Step: 290 / 730 Loss: 0.5731731653213501 Tokens per Sec: 18780.18438588214
Epoch Step: 295 / 730 Loss: 19.23398780822754 Tokens per Sec: 13644.90153066126
Epoch Step: 300 / 730 Loss: 4.775635242462158 Tokens per Sec: 18587.28609262556
Epoch Step: 305 / 730 Loss: 0.6444017291069031 Tokens per Sec: 16047.903000250612
Epoch Step: 310 / 730 Loss: 2.2351720333099365 Tokens per Sec: 15613.29233476714
Epoch Step: 315 / 730 Loss: 1.5347778797149658 Tokens per Sec: 16329.723007625125
Epoch Step: 320 / 730 Loss: 3.0199520587921143 Tokens per Sec: 17143.83222990045
Epoch Step: 325 / 730 Loss: 1.3775633573532104 Tokens per Sec: 16750.938763999984
Epoch Step: 330 / 730 Loss: 6.729454517364502 Tokens per Sec: 18332.072015736096
Epoch Step: 335 / 730 Loss: 4.263622760772705 Tokens per Sec: 18162.871649335964
Epoch Step: 340 / 730 Loss: 6.317121982574463 Tokens per Sec: 18139.56898743925
Epoch Step: 345 / 730 Loss: 3.131086826324463 Tokens per Sec: 18521.79542217349
Epoch Step: 350 / 730 Loss: 0.8319816589355469 Tokens per Sec: 14827.371654120672
Epoch Step: 355 / 730 Loss: 4.444033145904541 Tokens per Sec: 16494.415972305505
Epoch Step: 360 / 730 Loss: 2.922400712966919 Tokens per Sec: 19049.321769274495
Epoch Step: 365 / 730 Loss: 3.900421142578125 Tokens per Sec: 17028.868859978615
Epoch Step: 370 / 730 Loss: 2.774892568588257 Tokens per Sec: 21097.548226795305
Epoch Step: 375 / 730 Loss: 3.016798973083496 Tokens per Sec: 17755.786837097465
Epoch Step: 380 / 730 Loss: 2.8930671215057373 Tokens per Sec: 17835.318883963813
Epoch Step: 385 / 730 Loss: 2.3280861377716064 Tokens per Sec: 18996.145171247328
Epoch Step: 390 / 730 Loss: 6.550628662109375 Tokens per Sec: 16657.558154593346
Epoch Step: 395 / 730 Loss: 3.249704599380493 Tokens per Sec: 17374.01202217324
Epoch Step: 400 / 730 Loss: 2.4348318576812744 Tokens per Sec: 18875.542289656805
Epoch Step: 405 / 730 Loss: 2.6120030879974365 Tokens per Sec: 17347.997991371347
Epoch Step: 410 / 730 Loss: 4.358489036560059 Tokens per Sec: 17503.472932716544
Epoch Step: 415 / 730 Loss: 2.9185752868652344 Tokens per Sec: 19436.86974838383
Epoch Step: 420 / 730 Loss: 2.7487525939941406 Tokens per Sec: 16863.25604594976
Epoch Step: 425 / 730 Loss: 4.502654552459717 Tokens per Sec: 18029.511264064608
Epoch Step: 430 / 730 Loss: 3.326014518737793 Tokens per Sec: 15456.186667334685
Epoch Step: 435 / 730 Loss: 5.151492595672607 Tokens per Sec: 16852.290915951326
Epoch Step: 440 / 730 Loss: 59.0660400390625 Tokens per Sec: 17001.021443183483
Epoch Step: 445 / 730 Loss: 6.315124034881592 Tokens per Sec: 18541.682865251456
Epoch Step: 450 / 730 Loss: 1.1888760328292847 Tokens per Sec: 18489.471300167093
Epoch Step: 455 / 730 Loss: 1.1253104209899902 Tokens per Sec: 17296.343366060028
Epoch Step: 460 / 730 Loss: 2.373347282409668 Tokens per Sec: 16419.618127520294
Epoch Step: 465 / 730 Loss: 3.541008710861206 Tokens per Sec: 17555.479717996604
Epoch Step: 470 / 730 Loss: 1.0611714124679565 Tokens per Sec: 15355.320890184978
Epoch Step: 475 / 730 Loss: 2.600989818572998 Tokens per Sec: 13343.073945336308
Epoch Step: 480 / 730 Loss: 1.7910611629486084 Tokens per Sec: 19308.87674244385
Epoch Step: 485 / 730 Loss: 4.902850151062012 Tokens per Sec: 19814.67248598576
Epoch Step: 490 / 730 Loss: 4.633635520935059 Tokens per Sec: 18279.174807929092
Epoch Step: 495 / 730 Loss: 0.7640968561172485 Tokens per Sec: 19259.315245931004
Epoch Step: 500 / 730 Loss: 4.490326404571533 Tokens per Sec: 18245.79984815479
Epoch Step: 505 / 730 Loss: 14.588600158691406 Tokens per Sec: 15191.136222938347
Epoch Step: 510 / 730 Loss: 2.4490714073181152 Tokens per Sec: 18888.313629548487
Epoch Step: 515 / 730 Loss: 3.913884162902832 Tokens per Sec: 17975.843622648215
Epoch Step: 520 / 730 Loss: 3.8118033409118652 Tokens per Sec: 19729.389617485638
Epoch Step: 525 / 730 Loss: 1.3182299137115479 Tokens per Sec: 14318.905068566097
Epoch Step: 530 / 730 Loss: 2.4632794857025146 Tokens per Sec: 18916.47466514887
Epoch Step: 535 / 730 Loss: 4.303886890411377 Tokens per Sec: 18403.09392908446
Epoch Step: 540 / 730 Loss: 2.9285778999328613 Tokens per Sec: 20775.96180968559
Epoch Step: 545 / 730 Loss: 29.65651512145996 Tokens per Sec: 15556.347467283324
Epoch Step: 550 / 730 Loss: 3.9481568336486816 Tokens per Sec: 18151.88498968249
Epoch Step: 555 / 730 Loss: 2.729249954223633 Tokens per Sec: 16127.787388847713
Epoch Step: 560 / 730 Loss: 1.8895397186279297 Tokens per Sec: 16837.77264773912
Epoch Step: 565 / 730 Loss: 2.9778308868408203 Tokens per Sec: 15957.017879937646
Epoch Step: 570 / 730 Loss: 3.60555100440979 Tokens per Sec: 17662.46216173672
Epoch Step: 575 / 730 Loss: 3.2496261596679688 Tokens per Sec: 16499.89351376085
Epoch Step: 580 / 730 Loss: 4.586723804473877 Tokens per Sec: 19437.096678219856
Epoch Step: 585 / 730 Loss: 5.105080604553223 Tokens per Sec: 20104.10522645328
Epoch Step: 590 / 730 Loss: 2.2536134719848633 Tokens per Sec: 16370.78800071503
Epoch Step: 595 / 730 Loss: 1.0045130252838135 Tokens per Sec: 18284.470078956194
Epoch Step: 600 / 730 Loss: 19.573362350463867 Tokens per Sec: 17580.21273033711
Epoch Step: 605 / 730 Loss: 3.8647594451904297 Tokens per Sec: 17599.903366835308
Epoch Step: 610 / 730 Loss: 0.3759436011314392 Tokens per Sec: 18850.256225124223
Epoch Step: 615 / 730 Loss: 20.79435920715332 Tokens per Sec: 18975.625716777355
Epoch Step: 620 / 730 Loss: 5.464270114898682 Tokens per Sec: 20386.687606580144
Epoch Step: 625 / 730 Loss: 48.509727478027344 Tokens per Sec: 16967.1912825676
Epoch Step: 630 / 730 Loss: 4.97285795211792 Tokens per Sec: 18581.032216773263
Epoch Step: 635 / 730 Loss: 6.368371486663818 Tokens per Sec: 19096.477907675482
Epoch Step: 640 / 730 Loss: 5.79669713973999 Tokens per Sec: 18162.228054581734
Epoch Step: 645 / 730 Loss: 1.2715520858764648 Tokens per Sec: 15131.436773993884
Epoch Step: 650 / 730 Loss: 5.530544281005859 Tokens per Sec: 16718.04348476512
Epoch Step: 655 / 730 Loss: 1.7145893573760986 Tokens per Sec: 14650.182992908298
Epoch Step: 660 / 730 Loss: 3.950305938720703 Tokens per Sec: 17750.952402901334
Epoch Step: 665 / 730 Loss: 0.805821418762207 Tokens per Sec: 20062.024958707683
Epoch Step: 670 / 730 Loss: 3.2858498096466064 Tokens per Sec: 21088.081892940147
Epoch Step: 675 / 730 Loss: 1.801159381866455 Tokens per Sec: 16761.694172357966
Epoch Step: 680 / 730 Loss: 21.57073402404785 Tokens per Sec: 19263.702537060293
Epoch Step: 685 / 730 Loss: 18.647390365600586 Tokens per Sec: 14955.821714230187
Epoch Step: 690 / 730 Loss: 2.3134076595306396 Tokens per Sec: 15920.54218065938
Epoch Step: 695 / 730 Loss: 4.266269207000732 Tokens per Sec: 16213.6498419715
Epoch Step: 700 / 730 Loss: 1.6928224563598633 Tokens per Sec: 16196.808817599354
Epoch Step: 705 / 730 Loss: 3.8683416843414307 Tokens per Sec: 17261.130202761262
Epoch Step: 710 / 730 Loss: 3.0507030487060547 Tokens per Sec: 13957.031296517476
Epoch Step: 715 / 730 Loss: 0.7623047828674316 Tokens per Sec: 15211.261217361563
Epoch Step: 720 / 730 Loss: 1.061332106590271 Tokens per Sec: 15490.00883648016
Epoch Step: 725 / 730 Loss: 1.257450819015503 Tokens per Sec: 14757.884279865242
Epoch Step: 730 / 730 Loss: 4.887094497680664 Tokens per Sec: 14959.752033478157
Epoch ended with duration 0:01:20.266327
Train perplexity: 1.1707871369911513
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > , java.lang.Object > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.287340
Validation perplexity: 1.2138324784124903
Epoch 34 / 1000
Epoch Step: 5 / 730 Loss: 2.6143951416015625 Tokens per Sec: 15348.098208805159
Epoch Step: 10 / 730 Loss: 1.742034912109375 Tokens per Sec: 13065.033573145358
Epoch Step: 15 / 730 Loss: 3.4498345851898193 Tokens per Sec: 18647.0925891502
Epoch Step: 20 / 730 Loss: 3.2174506187438965 Tokens per Sec: 18963.532108464256
Epoch Step: 25 / 730 Loss: 5.060452461242676 Tokens per Sec: 18585.127393333692
Epoch Step: 30 / 730 Loss: 5.1515984535217285 Tokens per Sec: 20571.264161618576
Epoch Step: 35 / 730 Loss: 0.9428161382675171 Tokens per Sec: 15789.539493903625
Epoch Step: 40 / 730 Loss: 2.222872734069824 Tokens per Sec: 20504.651904378003
Epoch Step: 45 / 730 Loss: 3.407466411590576 Tokens per Sec: 15911.317081185558
Epoch Step: 50 / 730 Loss: 3.27238130569458 Tokens per Sec: 19416.172838669772
Epoch Step: 55 / 730 Loss: 3.179403066635132 Tokens per Sec: 16201.945829384857
Epoch Step: 60 / 730 Loss: 5.4609856605529785 Tokens per Sec: 16162.82923192738
Epoch Step: 65 / 730 Loss: 2.2278311252593994 Tokens per Sec: 16534.52223985691
Epoch Step: 70 / 730 Loss: 2.079533576965332 Tokens per Sec: 16306.612787800295
Epoch Step: 75 / 730 Loss: 1.151920199394226 Tokens per Sec: 19284.275837217527
Epoch Step: 80 / 730 Loss: 1.368788242340088 Tokens per Sec: 17989.672116175676
Epoch Step: 85 / 730 Loss: 1.7182965278625488 Tokens per Sec: 17294.813558127495
Epoch Step: 90 / 730 Loss: 1.3279483318328857 Tokens per Sec: 18527.544294474555
Epoch Step: 95 / 730 Loss: 0.8168956637382507 Tokens per Sec: 18194.78761441561
Epoch Step: 100 / 730 Loss: 5.183147430419922 Tokens per Sec: 15663.836417060478
Epoch Step: 105 / 730 Loss: 1.3228362798690796 Tokens per Sec: 18944.04697941417
Epoch Step: 110 / 730 Loss: 4.34292459487915 Tokens per Sec: 17958.355404515616
Epoch Step: 115 / 730 Loss: 2.598217248916626 Tokens per Sec: 18409.209781250614
Epoch Step: 120 / 730 Loss: 4.38790225982666 Tokens per Sec: 18066.548716121688
Epoch Step: 125 / 730 Loss: 28.17563819885254 Tokens per Sec: 16771.813584454234
Epoch Step: 130 / 730 Loss: 1.325417399406433 Tokens per Sec: 18899.54823309646
Epoch Step: 135 / 730 Loss: 3.844142436981201 Tokens per Sec: 18643.268049541464
Epoch Step: 140 / 730 Loss: 2.4382622241973877 Tokens per Sec: 17597.987524492917
Epoch Step: 145 / 730 Loss: 0.4845219552516937 Tokens per Sec: 18194.16693653406
Epoch Step: 150 / 730 Loss: 0.7027145624160767 Tokens per Sec: 14337.444747353378
Epoch Step: 155 / 730 Loss: 4.72485876083374 Tokens per Sec: 14708.557044892541
Epoch Step: 160 / 730 Loss: 1.9872806072235107 Tokens per Sec: 19028.197478727005
Epoch Step: 165 / 730 Loss: 1.9774471521377563 Tokens per Sec: 18475.431063941858
Epoch Step: 170 / 730 Loss: 0.3139687180519104 Tokens per Sec: 17312.306312988152
Epoch Step: 175 / 730 Loss: 2.0262651443481445 Tokens per Sec: 18276.29931284164
Epoch Step: 180 / 730 Loss: 2.584500789642334 Tokens per Sec: 18605.771007048283
Epoch Step: 185 / 730 Loss: 2.498215913772583 Tokens per Sec: 17465.93432470129
Epoch Step: 190 / 730 Loss: 3.3752694129943848 Tokens per Sec: 18949.732891162846
Epoch Step: 195 / 730 Loss: 5.493668556213379 Tokens per Sec: 19191.58811684503
Epoch Step: 200 / 730 Loss: 0.5908336043357849 Tokens per Sec: 18213.270831667287
Epoch Step: 205 / 730 Loss: 2.0996570587158203 Tokens per Sec: 18192.64239102133
Epoch Step: 210 / 730 Loss: 4.11417818069458 Tokens per Sec: 16196.66777988276
Epoch Step: 215 / 730 Loss: 3.970794439315796 Tokens per Sec: 16977.681506868503
Epoch Step: 220 / 730 Loss: 4.870094299316406 Tokens per Sec: 18176.375833179023
Epoch Step: 225 / 730 Loss: 3.4078738689422607 Tokens per Sec: 17442.008143263236
Epoch Step: 230 / 730 Loss: 1.6883656978607178 Tokens per Sec: 20050.37828345255
Epoch Step: 235 / 730 Loss: 2.1457059383392334 Tokens per Sec: 19263.345317329222
Epoch Step: 240 / 730 Loss: 1.09092116355896 Tokens per Sec: 19994.95326813353
Epoch Step: 245 / 730 Loss: 4.462181091308594 Tokens per Sec: 18291.774235637735
Epoch Step: 250 / 730 Loss: 1.2719093561172485 Tokens per Sec: 17713.62523054339
Epoch Step: 255 / 730 Loss: 1.891197919845581 Tokens per Sec: 18240.753585105707
Epoch Step: 260 / 730 Loss: 3.847184181213379 Tokens per Sec: 19925.523740607103
Epoch Step: 265 / 730 Loss: 1.7992502450942993 Tokens per Sec: 18056.293703347896
Epoch Step: 270 / 730 Loss: 2.4995899200439453 Tokens per Sec: 16913.456311925114
Epoch Step: 275 / 730 Loss: 57.43994903564453 Tokens per Sec: 17473.075469472376
Epoch Step: 280 / 730 Loss: 3.2894105911254883 Tokens per Sec: 16105.412184714782
Epoch Step: 285 / 730 Loss: 2.247549057006836 Tokens per Sec: 20059.330600412915
Epoch Step: 290 / 730 Loss: 0.9426348805427551 Tokens per Sec: 16846.034394127055
Epoch Step: 295 / 730 Loss: 3.0570476055145264 Tokens per Sec: 18472.555545503295
Epoch Step: 300 / 730 Loss: 4.653179168701172 Tokens per Sec: 15577.290193407023
Epoch Step: 305 / 730 Loss: 2.5106587409973145 Tokens per Sec: 18743.578747289175
Epoch Step: 310 / 730 Loss: 3.372164726257324 Tokens per Sec: 16361.273573312063
Epoch Step: 315 / 730 Loss: 0.8899098634719849 Tokens per Sec: 18945.63876566716
Epoch Step: 320 / 730 Loss: 6.385885238647461 Tokens per Sec: 18385.371040904476
Epoch Step: 325 / 730 Loss: 2.819732904434204 Tokens per Sec: 18041.702254443382
Epoch Step: 330 / 730 Loss: 2.654829740524292 Tokens per Sec: 16548.86972851578
Epoch Step: 335 / 730 Loss: 2.4507110118865967 Tokens per Sec: 18469.79529498101
Epoch Step: 340 / 730 Loss: 0.7528001070022583 Tokens per Sec: 18924.520502039202
Epoch Step: 345 / 730 Loss: 1.6857283115386963 Tokens per Sec: 16610.388750648457
Epoch Step: 350 / 730 Loss: 3.8630754947662354 Tokens per Sec: 13778.832403746672
Epoch Step: 355 / 730 Loss: 2.592998743057251 Tokens per Sec: 18064.135053488713
Epoch Step: 360 / 730 Loss: 1.0511893033981323 Tokens per Sec: 16988.23931326109
Epoch Step: 365 / 730 Loss: 4.335944652557373 Tokens per Sec: 18412.35039105526
Epoch Step: 370 / 730 Loss: 5.119131565093994 Tokens per Sec: 19727.18760271018
Epoch Step: 375 / 730 Loss: 2.7052433490753174 Tokens per Sec: 16535.179110921894
Epoch Step: 380 / 730 Loss: 3.2239174842834473 Tokens per Sec: 18945.119858857568
Epoch Step: 385 / 730 Loss: 4.537875652313232 Tokens per Sec: 18877.97978987445
Epoch Step: 390 / 730 Loss: 2.0886831283569336 Tokens per Sec: 18638.270340648076
Epoch Step: 395 / 730 Loss: 5.825501918792725 Tokens per Sec: 17241.587244628885
Epoch Step: 400 / 730 Loss: 24.101266860961914 Tokens per Sec: 17639.803145103066
Epoch Step: 405 / 730 Loss: 2.6653923988342285 Tokens per Sec: 16495.226259493164
Epoch Step: 410 / 730 Loss: 2.775404930114746 Tokens per Sec: 13338.998343758756
Epoch Step: 415 / 730 Loss: 0.6838778257369995 Tokens per Sec: 18354.23585224945
Epoch Step: 420 / 730 Loss: 2.344231128692627 Tokens per Sec: 14453.074302349074
Epoch Step: 425 / 730 Loss: 1.1596527099609375 Tokens per Sec: 19117.160856851388
Epoch Step: 430 / 730 Loss: 4.76200532913208 Tokens per Sec: 19349.68455746709
Epoch Step: 435 / 730 Loss: 3.3580758571624756 Tokens per Sec: 14932.978494653726
Epoch Step: 440 / 730 Loss: 1.9534389972686768 Tokens per Sec: 18789.417022840273
Epoch Step: 445 / 730 Loss: 2.857917070388794 Tokens per Sec: 19747.8740672662
Epoch Step: 450 / 730 Loss: 3.207498073577881 Tokens per Sec: 18262.66816109624
Epoch Step: 455 / 730 Loss: 3.7461905479431152 Tokens per Sec: 20685.975523489837
Epoch Step: 460 / 730 Loss: 4.852970600128174 Tokens per Sec: 16145.539296809133
Epoch Step: 465 / 730 Loss: 2.922344923019409 Tokens per Sec: 16990.67472192059
Epoch Step: 470 / 730 Loss: 3.2505807876586914 Tokens per Sec: 18344.701758565978
Epoch Step: 475 / 730 Loss: 1.2684714794158936 Tokens per Sec: 17016.494026221528
Epoch Step: 480 / 730 Loss: 5.401663303375244 Tokens per Sec: 18556.54504240486
Epoch Step: 485 / 730 Loss: 1.4528417587280273 Tokens per Sec: 16099.655270799163
Epoch Step: 490 / 730 Loss: 0.8992986679077148 Tokens per Sec: 19287.608748926374
Epoch Step: 495 / 730 Loss: 2.4260146617889404 Tokens per Sec: 19175.279000710332
Epoch Step: 500 / 730 Loss: 32.899505615234375 Tokens per Sec: 18076.16138044309
Epoch Step: 505 / 730 Loss: 0.5784130096435547 Tokens per Sec: 18379.039573730097
Epoch Step: 510 / 730 Loss: 2.073181390762329 Tokens per Sec: 17954.140408861196
Epoch Step: 515 / 730 Loss: 4.634884834289551 Tokens per Sec: 13649.224046140369
Epoch Step: 520 / 730 Loss: 3.818528890609741 Tokens per Sec: 15358.64263719078
Epoch Step: 525 / 730 Loss: 2.1723642349243164 Tokens per Sec: 16487.575806043114
Epoch Step: 530 / 730 Loss: 2.895616054534912 Tokens per Sec: 17859.22359538893
Epoch Step: 535 / 730 Loss: 4.833708763122559 Tokens per Sec: 16298.029528398412
Epoch Step: 540 / 730 Loss: 4.327275276184082 Tokens per Sec: 17329.053549504857
Epoch Step: 545 / 730 Loss: 3.110745668411255 Tokens per Sec: 21586.794119391925
Epoch Step: 550 / 730 Loss: 2.4346044063568115 Tokens per Sec: 17811.463131817753
Epoch Step: 555 / 730 Loss: 0.9662664532661438 Tokens per Sec: 18185.032988675124
Epoch Step: 560 / 730 Loss: 1.2184065580368042 Tokens per Sec: 15703.442835513664
Epoch Step: 565 / 730 Loss: 0.9283521771430969 Tokens per Sec: 21173.342820927952
Epoch Step: 570 / 730 Loss: 5.356954574584961 Tokens per Sec: 17851.639256008126
Epoch Step: 575 / 730 Loss: 1.8626378774642944 Tokens per Sec: 17975.14721736743
Epoch Step: 580 / 730 Loss: 0.668158769607544 Tokens per Sec: 18122.150386100817
Epoch Step: 585 / 730 Loss: 3.0746235847473145 Tokens per Sec: 17239.147166240014
Epoch Step: 590 / 730 Loss: 1.4501209259033203 Tokens per Sec: 18802.434258614456
Epoch Step: 595 / 730 Loss: 7.119228839874268 Tokens per Sec: 19168.5119250986
Epoch Step: 600 / 730 Loss: 2.2018940448760986 Tokens per Sec: 14110.196364049094
Epoch Step: 605 / 730 Loss: 3.2393341064453125 Tokens per Sec: 16518.610180843203
Epoch Step: 610 / 730 Loss: 4.938108444213867 Tokens per Sec: 19981.038303976777
Epoch Step: 615 / 730 Loss: 5.260946273803711 Tokens per Sec: 16935.747502666836
Epoch Step: 620 / 730 Loss: 5.072755336761475 Tokens per Sec: 13689.263531885414
Epoch Step: 625 / 730 Loss: 8.16071605682373 Tokens per Sec: 20449.577895957937
Epoch Step: 630 / 730 Loss: 52.33854675292969 Tokens per Sec: 18400.480462723503
Epoch Step: 635 / 730 Loss: 2.7528092861175537 Tokens per Sec: 16781.318565237176
Epoch Step: 640 / 730 Loss: 7.662981033325195 Tokens per Sec: 17641.281068985336
Epoch Step: 645 / 730 Loss: 4.0574517250061035 Tokens per Sec: 17379.22081274305
Epoch Step: 650 / 730 Loss: 5.434924125671387 Tokens per Sec: 14236.232179577479
Epoch Step: 655 / 730 Loss: 5.932032585144043 Tokens per Sec: 17388.105689101125
Epoch Step: 660 / 730 Loss: 3.384185791015625 Tokens per Sec: 20185.256114076954
Epoch Step: 665 / 730 Loss: 3.2435033321380615 Tokens per Sec: 17653.792946876376
Epoch Step: 670 / 730 Loss: 0.7347770929336548 Tokens per Sec: 16976.439920934114
Epoch Step: 675 / 730 Loss: 2.8216593265533447 Tokens per Sec: 19401.413339603187
Epoch Step: 680 / 730 Loss: 4.114487171173096 Tokens per Sec: 18782.96539936183
Epoch Step: 685 / 730 Loss: 4.461837291717529 Tokens per Sec: 17818.34196733983
Epoch Step: 690 / 730 Loss: 4.15748405456543 Tokens per Sec: 19015.902879323065
Epoch Step: 695 / 730 Loss: 3.3476603031158447 Tokens per Sec: 17161.751645855933
Epoch Step: 700 / 730 Loss: 4.585812568664551 Tokens per Sec: 18476.06588076097
Epoch Step: 705 / 730 Loss: 4.2123589515686035 Tokens per Sec: 14582.327178529096
Epoch Step: 710 / 730 Loss: 2.9617018699645996 Tokens per Sec: 13437.521266053047
Epoch Step: 715 / 730 Loss: 2.4435744285583496 Tokens per Sec: 14715.575121571905
Epoch Step: 720 / 730 Loss: 27.395498275756836 Tokens per Sec: 14978.232786385965
Epoch Step: 725 / 730 Loss: 1.5912065505981445 Tokens per Sec: 17771.61567570734
Epoch Step: 730 / 730 Loss: 2.1846227645874023 Tokens per Sec: 14696.887064462973
Epoch ended with duration 0:01:19.654781
Train perplexity: 1.1803078777992475
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ ] args < java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.324482
Validation perplexity: 1.1685857504334431
Model saved best_on_validation!
Epoch 35 / 1000
Epoch Step: 5 / 730 Loss: 5.237245559692383 Tokens per Sec: 17158.189299088393
Epoch Step: 10 / 730 Loss: 1.391204595565796 Tokens per Sec: 18509.32906715951
Epoch Step: 15 / 730 Loss: 0.8631948232650757 Tokens per Sec: 16300.013626641532
Epoch Step: 20 / 730 Loss: 1.8790061473846436 Tokens per Sec: 13439.404676560902
Epoch Step: 25 / 730 Loss: 1.4464207887649536 Tokens per Sec: 14762.45066037071
Epoch Step: 30 / 730 Loss: 4.181228160858154 Tokens per Sec: 17238.8019593448
Epoch Step: 35 / 730 Loss: 3.7268781661987305 Tokens per Sec: 20780.591949318
Epoch Step: 40 / 730 Loss: 1.6919896602630615 Tokens per Sec: 15682.817472196954
Epoch Step: 45 / 730 Loss: 2.8191754817962646 Tokens per Sec: 17115.913635393044
Epoch Step: 50 / 730 Loss: 1.0945082902908325 Tokens per Sec: 13440.263187811845
Epoch Step: 55 / 730 Loss: 4.696933746337891 Tokens per Sec: 16327.637684272444
Epoch Step: 60 / 730 Loss: 1.4004747867584229 Tokens per Sec: 19533.86063178027
Epoch Step: 65 / 730 Loss: 5.290095329284668 Tokens per Sec: 19456.531739989125
Epoch Step: 70 / 730 Loss: 1.6215194463729858 Tokens per Sec: 16531.18322384141
Epoch Step: 75 / 730 Loss: 3.243124485015869 Tokens per Sec: 19638.655213009642
Epoch Step: 80 / 730 Loss: 3.1344614028930664 Tokens per Sec: 20276.989947295184
Epoch Step: 85 / 730 Loss: 1.6242034435272217 Tokens per Sec: 20188.14176437704
Epoch Step: 90 / 730 Loss: 2.2407517433166504 Tokens per Sec: 15718.877706123081
Epoch Step: 95 / 730 Loss: 1.0290324687957764 Tokens per Sec: 17146.282708127397
Epoch Step: 100 / 730 Loss: 2.3414177894592285 Tokens per Sec: 20129.855013384265
Epoch Step: 105 / 730 Loss: 7.431422710418701 Tokens per Sec: 15366.02502314654
Epoch Step: 110 / 730 Loss: 1.4932399988174438 Tokens per Sec: 16598.99603213098
Epoch Step: 115 / 730 Loss: 2.9231226444244385 Tokens per Sec: 21995.29345779226
Epoch Step: 120 / 730 Loss: 1.969549298286438 Tokens per Sec: 18073.50370345671
Epoch Step: 125 / 730 Loss: 25.53373908996582 Tokens per Sec: 20871.033207641467
Epoch Step: 130 / 730 Loss: 2.1937379837036133 Tokens per Sec: 17724.476735511285
Epoch Step: 135 / 730 Loss: 2.5161287784576416 Tokens per Sec: 19054.35815878433
Epoch Step: 140 / 730 Loss: 3.3978960514068604 Tokens per Sec: 20230.433570512803
Epoch Step: 145 / 730 Loss: 5.411118030548096 Tokens per Sec: 19612.038544584455
Epoch Step: 150 / 730 Loss: 0.7194156646728516 Tokens per Sec: 18778.328473048303
Epoch Step: 155 / 730 Loss: 5.795618057250977 Tokens per Sec: 19616.905167661673
Epoch Step: 160 / 730 Loss: 18.980627059936523 Tokens per Sec: 15806.539135145631
Epoch Step: 165 / 730 Loss: 2.451171636581421 Tokens per Sec: 17641.211540939596
Epoch Step: 170 / 730 Loss: 2.3086814880371094 Tokens per Sec: 17345.51083854614
Epoch Step: 175 / 730 Loss: 2.3161044120788574 Tokens per Sec: 17099.87570790526
Epoch Step: 180 / 730 Loss: 0.7746580243110657 Tokens per Sec: 12486.31911113646
Epoch Step: 185 / 730 Loss: 1.2434715032577515 Tokens per Sec: 18519.01248603515
Epoch Step: 190 / 730 Loss: 1.1622005701065063 Tokens per Sec: 17743.39986396993
Epoch Step: 195 / 730 Loss: 3.9419095516204834 Tokens per Sec: 16696.801423249497
Epoch Step: 200 / 730 Loss: 2.132741689682007 Tokens per Sec: 14467.538698979793
Epoch Step: 205 / 730 Loss: 3.6790668964385986 Tokens per Sec: 21312.598800366737
Epoch Step: 210 / 730 Loss: 2.1725621223449707 Tokens per Sec: 20259.182545637894
Epoch Step: 215 / 730 Loss: 4.014827251434326 Tokens per Sec: 17999.367479283777
Epoch Step: 220 / 730 Loss: 2.6556966304779053 Tokens per Sec: 17491.32360711695
Epoch Step: 225 / 730 Loss: 3.749202013015747 Tokens per Sec: 16916.602975204314
Epoch Step: 230 / 730 Loss: 3.5367789268493652 Tokens per Sec: 20267.90905379623
Epoch Step: 235 / 730 Loss: 5.445820331573486 Tokens per Sec: 18389.70865758141
Epoch Step: 240 / 730 Loss: 3.002396821975708 Tokens per Sec: 19776.185787119844
Epoch Step: 245 / 730 Loss: 1.7204692363739014 Tokens per Sec: 19585.524854878407
Epoch Step: 250 / 730 Loss: 3.2433927059173584 Tokens per Sec: 16848.341634471548
Epoch Step: 255 / 730 Loss: 46.13549041748047 Tokens per Sec: 16506.10903869892
Epoch Step: 260 / 730 Loss: 1.6725393533706665 Tokens per Sec: 16630.903069767443
Epoch Step: 265 / 730 Loss: 2.685624837875366 Tokens per Sec: 16321.019929907336
Epoch Step: 270 / 730 Loss: 6.621250629425049 Tokens per Sec: 16301.019823922124
Epoch Step: 275 / 730 Loss: 3.807288885116577 Tokens per Sec: 18004.327506659753
Epoch Step: 280 / 730 Loss: 22.25499725341797 Tokens per Sec: 17157.189757687705
Epoch Step: 285 / 730 Loss: 3.3847599029541016 Tokens per Sec: 15102.927936981372
Epoch Step: 290 / 730 Loss: 3.026005268096924 Tokens per Sec: 17799.144541319984
Epoch Step: 295 / 730 Loss: 17.93092155456543 Tokens per Sec: 15778.795990210621
Epoch Step: 300 / 730 Loss: 0.39117997884750366 Tokens per Sec: 14876.86244642952
Epoch Step: 305 / 730 Loss: 1.3268834352493286 Tokens per Sec: 17486.976440636838
Epoch Step: 310 / 730 Loss: 12.800254821777344 Tokens per Sec: 20062.712767769863
Epoch Step: 315 / 730 Loss: 3.607588529586792 Tokens per Sec: 20985.044727999033
Epoch Step: 320 / 730 Loss: 0.7808170914649963 Tokens per Sec: 18201.24823648804
Epoch Step: 325 / 730 Loss: 1.193603754043579 Tokens per Sec: 16787.58143533422
Epoch Step: 330 / 730 Loss: 4.287530422210693 Tokens per Sec: 16084.09134405637
Epoch Step: 335 / 730 Loss: 1.948244333267212 Tokens per Sec: 17947.45227696466
Epoch Step: 340 / 730 Loss: 3.336886167526245 Tokens per Sec: 19024.190026931396
Epoch Step: 345 / 730 Loss: 3.8075952529907227 Tokens per Sec: 14612.696247399226
Epoch Step: 350 / 730 Loss: 3.461150884628296 Tokens per Sec: 17123.243485453037
Epoch Step: 355 / 730 Loss: 2.7016286849975586 Tokens per Sec: 16675.70885412093
Epoch Step: 360 / 730 Loss: 4.602970123291016 Tokens per Sec: 19423.648002228107
Epoch Step: 365 / 730 Loss: 22.856224060058594 Tokens per Sec: 13870.36674110212
Epoch Step: 370 / 730 Loss: 3.458570957183838 Tokens per Sec: 14904.139516598729
Epoch Step: 375 / 730 Loss: 0.760895848274231 Tokens per Sec: 18023.6512624933
Epoch Step: 380 / 730 Loss: 1.440854549407959 Tokens per Sec: 19872.874222924158
Epoch Step: 385 / 730 Loss: 2.6523752212524414 Tokens per Sec: 18679.41729674942
Epoch Step: 390 / 730 Loss: 3.794707775115967 Tokens per Sec: 14933.965573958645
Epoch Step: 395 / 730 Loss: 1.7170907258987427 Tokens per Sec: 17307.62479227526
Epoch Step: 400 / 730 Loss: 4.6320037841796875 Tokens per Sec: 18209.222876502645
Epoch Step: 405 / 730 Loss: 5.6689839363098145 Tokens per Sec: 16090.34759920135
Epoch Step: 410 / 730 Loss: 2.810800552368164 Tokens per Sec: 14293.789016094437
Epoch Step: 415 / 730 Loss: 1.3444627523422241 Tokens per Sec: 19370.390984642174
Epoch Step: 420 / 730 Loss: 5.600002288818359 Tokens per Sec: 20729.74232322355
Epoch Step: 425 / 730 Loss: 23.100330352783203 Tokens per Sec: 17428.68599457225
Epoch Step: 430 / 730 Loss: 4.093164920806885 Tokens per Sec: 18847.854867948434
Epoch Step: 435 / 730 Loss: 4.836169719696045 Tokens per Sec: 17495.86735333383
Epoch Step: 440 / 730 Loss: 1.183633804321289 Tokens per Sec: 16714.203095615132
Epoch Step: 445 / 730 Loss: 2.6556971073150635 Tokens per Sec: 18970.814878759822
Epoch Step: 450 / 730 Loss: 1.0128499269485474 Tokens per Sec: 18421.695920237915
Epoch Step: 455 / 730 Loss: 5.000463962554932 Tokens per Sec: 14111.008311439595
Epoch Step: 460 / 730 Loss: 2.200010061264038 Tokens per Sec: 15528.21182460069
Epoch Step: 465 / 730 Loss: 3.258742094039917 Tokens per Sec: 19310.670808675924
Epoch Step: 470 / 730 Loss: 19.431137084960938 Tokens per Sec: 19545.447900074007
Epoch Step: 475 / 730 Loss: 2.8218791484832764 Tokens per Sec: 19320.86843009616
Epoch Step: 480 / 730 Loss: 0.5375847816467285 Tokens per Sec: 14982.46016013461
Epoch Step: 485 / 730 Loss: 0.7371520400047302 Tokens per Sec: 18388.0245398773
Epoch Step: 490 / 730 Loss: 1.79736328125 Tokens per Sec: 18288.17571061826
Epoch Step: 495 / 730 Loss: 6.6666412353515625 Tokens per Sec: 15865.433562132273
Epoch Step: 500 / 730 Loss: 4.8056960105896 Tokens per Sec: 18924.262856415102
Epoch Step: 505 / 730 Loss: 1.8057032823562622 Tokens per Sec: 16367.153368482988
Epoch Step: 510 / 730 Loss: 2.53378963470459 Tokens per Sec: 16728.86298510642
Epoch Step: 515 / 730 Loss: 1.6392385959625244 Tokens per Sec: 21570.248667156146
Epoch Step: 520 / 730 Loss: 5.629730224609375 Tokens per Sec: 16598.092699018078
Epoch Step: 525 / 730 Loss: 3.7683260440826416 Tokens per Sec: 19560.450318776
Epoch Step: 530 / 730 Loss: 1.034076452255249 Tokens per Sec: 18816.221328888212
Epoch Step: 535 / 730 Loss: 5.148812770843506 Tokens per Sec: 18658.786344044613
Epoch Step: 540 / 730 Loss: 1.6458804607391357 Tokens per Sec: 17005.813119186965
Epoch Step: 545 / 730 Loss: 4.372174263000488 Tokens per Sec: 15851.552570238402
Epoch Step: 550 / 730 Loss: 0.6533064842224121 Tokens per Sec: 15639.904528615902
Epoch Step: 555 / 730 Loss: 3.024954319000244 Tokens per Sec: 19410.078603455753
Epoch Step: 560 / 730 Loss: 0.7363908290863037 Tokens per Sec: 18043.87019391896
Epoch Step: 565 / 730 Loss: 1.1419941186904907 Tokens per Sec: 17227.37462407197
Epoch Step: 570 / 730 Loss: 2.986785888671875 Tokens per Sec: 18487.142897795842
Epoch Step: 575 / 730 Loss: 1.1622267961502075 Tokens per Sec: 20681.832165301636
Epoch Step: 580 / 730 Loss: 4.252708911895752 Tokens per Sec: 16789.317155469045
Epoch Step: 585 / 730 Loss: 62.193031311035156 Tokens per Sec: 17397.896074985772
Epoch Step: 590 / 730 Loss: 4.1082377433776855 Tokens per Sec: 18633.78622924722
Epoch Step: 595 / 730 Loss: 0.7916795611381531 Tokens per Sec: 15537.46588499231
Epoch Step: 600 / 730 Loss: 4.1182026863098145 Tokens per Sec: 13310.487224864004
Epoch Step: 605 / 730 Loss: 2.7148914337158203 Tokens per Sec: 14326.736144897804
Epoch Step: 610 / 730 Loss: 3.2626876831054688 Tokens per Sec: 19367.150697334568
Epoch Step: 615 / 730 Loss: 6.59554386138916 Tokens per Sec: 18099.899699656864
Epoch Step: 620 / 730 Loss: 4.48283052444458 Tokens per Sec: 20900.353920342917
Epoch Step: 625 / 730 Loss: 1.0954558849334717 Tokens per Sec: 18109.603871923333
Epoch Step: 630 / 730 Loss: 1.3541874885559082 Tokens per Sec: 16405.449435518527
Epoch Step: 635 / 730 Loss: 3.9411330223083496 Tokens per Sec: 13880.03361991925
Epoch Step: 640 / 730 Loss: 1.477467656135559 Tokens per Sec: 18762.5601652194
Epoch Step: 645 / 730 Loss: 3.068963050842285 Tokens per Sec: 17856.801024973433
Epoch Step: 650 / 730 Loss: 2.91394305229187 Tokens per Sec: 18415.044989723207
Epoch Step: 655 / 730 Loss: 4.831398010253906 Tokens per Sec: 16746.84593900289
Epoch Step: 660 / 730 Loss: 3.0534374713897705 Tokens per Sec: 16221.336413737654
Epoch Step: 665 / 730 Loss: 3.864708662033081 Tokens per Sec: 17757.730330405713
Epoch Step: 670 / 730 Loss: 3.4768948554992676 Tokens per Sec: 19033.330944343088
Epoch Step: 675 / 730 Loss: 1.4607927799224854 Tokens per Sec: 19468.953546684512
Epoch Step: 680 / 730 Loss: 56.77935791015625 Tokens per Sec: 19653.880080148323
Epoch Step: 685 / 730 Loss: 3.188882827758789 Tokens per Sec: 20617.117628390453
Epoch Step: 690 / 730 Loss: 2.9706833362579346 Tokens per Sec: 16564.85181571384
Epoch Step: 695 / 730 Loss: 34.922882080078125 Tokens per Sec: 18158.971876916487
Epoch Step: 700 / 730 Loss: 6.766819000244141 Tokens per Sec: 16437.1601919829
Epoch Step: 705 / 730 Loss: 2.50869083404541 Tokens per Sec: 14575.668576831631
Epoch Step: 710 / 730 Loss: 3.785820960998535 Tokens per Sec: 14916.484748670196
Epoch Step: 715 / 730 Loss: 3.0099782943725586 Tokens per Sec: 13732.886115422465
Epoch Step: 720 / 730 Loss: 1.8835341930389404 Tokens per Sec: 16513.16362977817
Epoch Step: 725 / 730 Loss: 3.094594717025757 Tokens per Sec: 14336.872750496705
Epoch Step: 730 / 730 Loss: 2.042330503463745 Tokens per Sec: 15389.720048659161
Epoch ended with duration 0:01:19.970920
Train perplexity: 1.189619268973933
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String time , java.lang.String < java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.292951
Validation perplexity: 1.1593577369841424
Model saved best_on_validation!
Model saved checkpoint!
Epoch 36 / 1000
Epoch Step: 5 / 730 Loss: 0.90892493724823 Tokens per Sec: 14210.961076552152
Epoch Step: 10 / 730 Loss: 21.950885772705078 Tokens per Sec: 17128.517059427624
Epoch Step: 15 / 730 Loss: 1.6610840559005737 Tokens per Sec: 17606.853272305132
Epoch Step: 20 / 730 Loss: 2.238438367843628 Tokens per Sec: 18921.290634804824
Epoch Step: 25 / 730 Loss: 1.9599860906600952 Tokens per Sec: 18955.863645496815
Epoch Step: 30 / 730 Loss: 0.9569939374923706 Tokens per Sec: 19667.896701373586
Epoch Step: 35 / 730 Loss: 1.9533028602600098 Tokens per Sec: 18956.991912396676
Epoch Step: 40 / 730 Loss: 2.1117098331451416 Tokens per Sec: 13928.841285421682
Epoch Step: 45 / 730 Loss: 4.177019119262695 Tokens per Sec: 17895.139667809286
Epoch Step: 50 / 730 Loss: 3.0086686611175537 Tokens per Sec: 15497.437103849314
Epoch Step: 55 / 730 Loss: 4.400127410888672 Tokens per Sec: 19832.082425575143
Epoch Step: 60 / 730 Loss: 1.8448913097381592 Tokens per Sec: 18667.14257574481
Epoch Step: 65 / 730 Loss: 3.2935032844543457 Tokens per Sec: 16498.019302814075
Epoch Step: 70 / 730 Loss: 2.6041479110717773 Tokens per Sec: 14094.4016239264
Epoch Step: 75 / 730 Loss: 0.7546229362487793 Tokens per Sec: 18928.760876874418
Epoch Step: 80 / 730 Loss: 5.611728668212891 Tokens per Sec: 16010.68507087619
Epoch Step: 85 / 730 Loss: 2.591841697692871 Tokens per Sec: 17633.13390481255
Epoch Step: 90 / 730 Loss: 6.821627616882324 Tokens per Sec: 20235.752137532585
Epoch Step: 95 / 730 Loss: 2.519679546356201 Tokens per Sec: 16455.580708158985
Epoch Step: 100 / 730 Loss: 1.0909887552261353 Tokens per Sec: 16912.219699324833
Epoch Step: 105 / 730 Loss: 1.2287079095840454 Tokens per Sec: 18087.766981857087
Epoch Step: 110 / 730 Loss: 3.608316659927368 Tokens per Sec: 18738.437466873664
Epoch Step: 115 / 730 Loss: 3.81038498878479 Tokens per Sec: 16003.125401934249
Epoch Step: 120 / 730 Loss: 3.3708255290985107 Tokens per Sec: 18867.73976730168
Epoch Step: 125 / 730 Loss: 4.955384731292725 Tokens per Sec: 17211.78855226289
Epoch Step: 130 / 730 Loss: 2.520317554473877 Tokens per Sec: 16286.839579521255
Epoch Step: 135 / 730 Loss: 2.250467538833618 Tokens per Sec: 17402.403772856895
Epoch Step: 140 / 730 Loss: 6.986361026763916 Tokens per Sec: 16792.462691966455
Epoch Step: 145 / 730 Loss: 4.354101181030273 Tokens per Sec: 17298.11574353963
Epoch Step: 150 / 730 Loss: 0.662787914276123 Tokens per Sec: 16227.414169946112
Epoch Step: 155 / 730 Loss: 2.168081283569336 Tokens per Sec: 12917.076278323626
Epoch Step: 160 / 730 Loss: 3.24635910987854 Tokens per Sec: 16906.010663073455
Epoch Step: 165 / 730 Loss: 3.3263943195343018 Tokens per Sec: 21167.90020882795
Epoch Step: 170 / 730 Loss: 0.6685383319854736 Tokens per Sec: 16085.368900969786
Epoch Step: 175 / 730 Loss: 2.2019221782684326 Tokens per Sec: 16483.09397577388
Epoch Step: 180 / 730 Loss: 0.9492839574813843 Tokens per Sec: 19545.766622520314
Epoch Step: 185 / 730 Loss: 1.3238354921340942 Tokens per Sec: 18703.394577826606
Epoch Step: 190 / 730 Loss: 2.171640157699585 Tokens per Sec: 19920.16974410306
Epoch Step: 195 / 730 Loss: 6.695135593414307 Tokens per Sec: 18222.717880432927
Epoch Step: 200 / 730 Loss: 18.253435134887695 Tokens per Sec: 13782.674701790056
Epoch Step: 205 / 730 Loss: 3.4605965614318848 Tokens per Sec: 19433.08400010461
Epoch Step: 210 / 730 Loss: 1.2062427997589111 Tokens per Sec: 15655.889911606131
Epoch Step: 215 / 730 Loss: 0.8173425197601318 Tokens per Sec: 20526.304104493604
Epoch Step: 220 / 730 Loss: 13.034541130065918 Tokens per Sec: 16347.750744548872
Epoch Step: 225 / 730 Loss: 25.36307716369629 Tokens per Sec: 16543.837120090335
Epoch Step: 230 / 730 Loss: 3.8049864768981934 Tokens per Sec: 15719.408940843334
Epoch Step: 235 / 730 Loss: 19.954721450805664 Tokens per Sec: 20775.4590150876
Epoch Step: 240 / 730 Loss: 3.7408883571624756 Tokens per Sec: 17170.40246375723
Epoch Step: 245 / 730 Loss: 1.7719922065734863 Tokens per Sec: 18102.41084201999
Epoch Step: 250 / 730 Loss: 4.651394367218018 Tokens per Sec: 19141.023584070525
Epoch Step: 255 / 730 Loss: 1.9267809391021729 Tokens per Sec: 16772.089545217248
Epoch Step: 260 / 730 Loss: 5.727125644683838 Tokens per Sec: 15607.62197235106
Epoch Step: 265 / 730 Loss: 4.707531929016113 Tokens per Sec: 21070.696348902256
Epoch Step: 270 / 730 Loss: 2.5839054584503174 Tokens per Sec: 18430.12598519843
Epoch Step: 275 / 730 Loss: 3.5720884799957275 Tokens per Sec: 17912.887837636765
Epoch Step: 280 / 730 Loss: 4.963094711303711 Tokens per Sec: 17291.392871049986
Epoch Step: 285 / 730 Loss: 2.117305278778076 Tokens per Sec: 16521.41103374239
Epoch Step: 290 / 730 Loss: 1.5980579853057861 Tokens per Sec: 15837.156322675166
Epoch Step: 295 / 730 Loss: 4.364514350891113 Tokens per Sec: 13984.602675170938
Epoch Step: 300 / 730 Loss: 36.751991271972656 Tokens per Sec: 16695.771855963463
Epoch Step: 305 / 730 Loss: 4.642513275146484 Tokens per Sec: 16629.65243051776
Epoch Step: 310 / 730 Loss: 0.8617249727249146 Tokens per Sec: 17768.206939502208
Epoch Step: 315 / 730 Loss: 1.9838474988937378 Tokens per Sec: 16172.590183204724
Epoch Step: 320 / 730 Loss: 4.158791542053223 Tokens per Sec: 18706.153206729407
Epoch Step: 325 / 730 Loss: 5.095223426818848 Tokens per Sec: 17123.464445213045
Epoch Step: 330 / 730 Loss: 2.5997447967529297 Tokens per Sec: 18174.07041775519
Epoch Step: 335 / 730 Loss: 1.5795748233795166 Tokens per Sec: 17628.5933275603
Epoch Step: 340 / 730 Loss: 0.8680965304374695 Tokens per Sec: 16694.927548892916
Epoch Step: 345 / 730 Loss: 3.826728105545044 Tokens per Sec: 17285.01874528956
Epoch Step: 350 / 730 Loss: 1.01774263381958 Tokens per Sec: 18667.88012989123
Epoch Step: 355 / 730 Loss: 3.041306495666504 Tokens per Sec: 19260.733444581256
Epoch Step: 360 / 730 Loss: 5.380074977874756 Tokens per Sec: 18853.37205636112
Epoch Step: 365 / 730 Loss: 5.639150619506836 Tokens per Sec: 17518.98338066877
Epoch Step: 370 / 730 Loss: 1.3455462455749512 Tokens per Sec: 16028.054217806013
Epoch Step: 375 / 730 Loss: 4.057743549346924 Tokens per Sec: 20330.66011374531
Epoch Step: 380 / 730 Loss: 4.707005500793457 Tokens per Sec: 16119.487160236331
Epoch Step: 385 / 730 Loss: 4.812766075134277 Tokens per Sec: 18680.655515575272
Epoch Step: 390 / 730 Loss: 3.3951873779296875 Tokens per Sec: 17699.61009091792
Epoch Step: 395 / 730 Loss: 4.596709251403809 Tokens per Sec: 17988.343018031752
Epoch Step: 400 / 730 Loss: 3.3396852016448975 Tokens per Sec: 16640.324152762707
Epoch Step: 405 / 730 Loss: 2.5673274993896484 Tokens per Sec: 16291.686070734213
Epoch Step: 410 / 730 Loss: 1.4781181812286377 Tokens per Sec: 17090.909390579294
Epoch Step: 415 / 730 Loss: 3.4739556312561035 Tokens per Sec: 15890.61725705399
Epoch Step: 420 / 730 Loss: 4.68839693069458 Tokens per Sec: 18020.18953544387
Epoch Step: 425 / 730 Loss: 3.7445030212402344 Tokens per Sec: 19899.55943584817
Epoch Step: 430 / 730 Loss: 3.556290626525879 Tokens per Sec: 16235.041563351877
Epoch Step: 435 / 730 Loss: 3.228520393371582 Tokens per Sec: 18527.133152650244
Epoch Step: 440 / 730 Loss: 3.359731912612915 Tokens per Sec: 17174.251619044204
Epoch Step: 445 / 730 Loss: 2.447117567062378 Tokens per Sec: 16175.226045191976
Epoch Step: 450 / 730 Loss: 0.9429395198822021 Tokens per Sec: 20435.327225608155
Epoch Step: 455 / 730 Loss: 5.851504325866699 Tokens per Sec: 20376.315611381327
Epoch Step: 460 / 730 Loss: 2.0754454135894775 Tokens per Sec: 20863.858389705016
Epoch Step: 465 / 730 Loss: 13.55810260772705 Tokens per Sec: 19743.48293424267
Epoch Step: 470 / 730 Loss: 24.71660804748535 Tokens per Sec: 16507.519871730365
Epoch Step: 475 / 730 Loss: 35.00192642211914 Tokens per Sec: 17032.172406299767
Epoch Step: 480 / 730 Loss: 2.0809812545776367 Tokens per Sec: 18427.57549981267
Epoch Step: 485 / 730 Loss: 1.5574820041656494 Tokens per Sec: 18591.21522132577
Epoch Step: 490 / 730 Loss: 3.271155595779419 Tokens per Sec: 15020.75133400244
Epoch Step: 495 / 730 Loss: 3.9144034385681152 Tokens per Sec: 19817.00919765118
Epoch Step: 500 / 730 Loss: 3.6708390712738037 Tokens per Sec: 16118.06210280743
Epoch Step: 505 / 730 Loss: 21.081003189086914 Tokens per Sec: 16668.28138196617
Epoch Step: 510 / 730 Loss: 1.31387197971344 Tokens per Sec: 16844.34116256008
Epoch Step: 515 / 730 Loss: 6.209826469421387 Tokens per Sec: 13644.30742723546
Epoch Step: 520 / 730 Loss: 4.11240816116333 Tokens per Sec: 21739.101241731285
Epoch Step: 525 / 730 Loss: 12.11540699005127 Tokens per Sec: 16960.564379472173
Epoch Step: 530 / 730 Loss: 0.7063665986061096 Tokens per Sec: 18623.645199788283
Epoch Step: 535 / 730 Loss: 1.4112809896469116 Tokens per Sec: 15925.022833122326
Epoch Step: 540 / 730 Loss: 2.843658208847046 Tokens per Sec: 18314.17002396566
Epoch Step: 545 / 730 Loss: 3.0036613941192627 Tokens per Sec: 19645.405056781063
Epoch Step: 550 / 730 Loss: 1.6288870573043823 Tokens per Sec: 18146.640866820457
Epoch Step: 555 / 730 Loss: 1.0080784559249878 Tokens per Sec: 20062.826484656915
Epoch Step: 560 / 730 Loss: 43.69408416748047 Tokens per Sec: 20733.529618841334
Epoch Step: 565 / 730 Loss: 4.823299407958984 Tokens per Sec: 18851.658926153694
Epoch Step: 570 / 730 Loss: 5.03574275970459 Tokens per Sec: 15766.879029647576
Epoch Step: 575 / 730 Loss: 9.973922729492188 Tokens per Sec: 12627.090346093484
Epoch Step: 580 / 730 Loss: 3.4736287593841553 Tokens per Sec: 15698.195792633684
Epoch Step: 585 / 730 Loss: 5.72861385345459 Tokens per Sec: 17514.17901321415
Epoch Step: 590 / 730 Loss: 5.094347953796387 Tokens per Sec: 17934.98659932683
Epoch Step: 595 / 730 Loss: 2.6942055225372314 Tokens per Sec: 15267.043460057777
Epoch Step: 600 / 730 Loss: 4.319937705993652 Tokens per Sec: 19572.676643231964
Epoch Step: 605 / 730 Loss: 27.68642234802246 Tokens per Sec: 15388.155883486783
Epoch Step: 610 / 730 Loss: 2.326237916946411 Tokens per Sec: 17931.10856196651
Epoch Step: 615 / 730 Loss: 1.0490156412124634 Tokens per Sec: 17568.674069896788
Epoch Step: 620 / 730 Loss: 4.208625793457031 Tokens per Sec: 20202.874881477837
Epoch Step: 625 / 730 Loss: 3.0714166164398193 Tokens per Sec: 18836.46200580487
Epoch Step: 630 / 730 Loss: 5.198251724243164 Tokens per Sec: 14282.803497763287
Epoch Step: 635 / 730 Loss: 2.26769757270813 Tokens per Sec: 16377.708122876498
Epoch Step: 640 / 730 Loss: 7.88673210144043 Tokens per Sec: 19888.944632735747
Epoch Step: 645 / 730 Loss: 1.5113643407821655 Tokens per Sec: 16375.40009241771
Epoch Step: 650 / 730 Loss: 2.003103017807007 Tokens per Sec: 17536.08899683002
Epoch Step: 655 / 730 Loss: 2.731938362121582 Tokens per Sec: 18701.542294497147
Epoch Step: 660 / 730 Loss: 3.489719867706299 Tokens per Sec: 20328.442342668826
Epoch Step: 665 / 730 Loss: 1.621742844581604 Tokens per Sec: 20089.925384762057
Epoch Step: 670 / 730 Loss: 2.993218421936035 Tokens per Sec: 17254.546831855936
Epoch Step: 675 / 730 Loss: 6.508591651916504 Tokens per Sec: 14672.801248157451
Epoch Step: 680 / 730 Loss: 6.0620880126953125 Tokens per Sec: 20010.431547628745
Epoch Step: 685 / 730 Loss: 0.6346114277839661 Tokens per Sec: 18166.960558071496
Epoch Step: 690 / 730 Loss: 5.414705753326416 Tokens per Sec: 15605.586634474972
Epoch Step: 695 / 730 Loss: 1.1623284816741943 Tokens per Sec: 19120.639474938904
Epoch Step: 700 / 730 Loss: 2.860996961593628 Tokens per Sec: 16892.291650428586
Epoch Step: 705 / 730 Loss: 3.425696611404419 Tokens per Sec: 14327.713062567376
Epoch Step: 710 / 730 Loss: 2.3647966384887695 Tokens per Sec: 13966.578601259405
Epoch Step: 715 / 730 Loss: 3.836517095565796 Tokens per Sec: 17009.33980489012
Epoch Step: 720 / 730 Loss: 2.2299513816833496 Tokens per Sec: 16839.32822554303
Epoch Step: 725 / 730 Loss: 1.5195502042770386 Tokens per Sec: 13872.105212746954
Epoch Step: 730 / 730 Loss: 2.679447889328003 Tokens per Sec: 13997.744413190214
Epoch ended with duration 0:01:20.238955
Train perplexity: 1.1858819103120344
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > type , java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.320153
Validation perplexity: 1.212796594548598
Epoch 37 / 1000
Epoch Step: 5 / 730 Loss: 4.939627647399902 Tokens per Sec: 15096.852328975685
Epoch Step: 10 / 730 Loss: 32.20037078857422 Tokens per Sec: 17518.761161948954
Epoch Step: 15 / 730 Loss: 1.821030616760254 Tokens per Sec: 20978.590163845998
Epoch Step: 20 / 730 Loss: 2.8691046237945557 Tokens per Sec: 18512.473712991174
Epoch Step: 25 / 730 Loss: 0.4447277784347534 Tokens per Sec: 14966.922799944134
Epoch Step: 30 / 730 Loss: 1.158705711364746 Tokens per Sec: 16894.942092998375
Epoch Step: 35 / 730 Loss: 4.409627437591553 Tokens per Sec: 19886.51268661451
Epoch Step: 40 / 730 Loss: 3.6772890090942383 Tokens per Sec: 19415.685672876316
Epoch Step: 45 / 730 Loss: 2.6877589225769043 Tokens per Sec: 17360.50295027707
Epoch Step: 50 / 730 Loss: 1.6422619819641113 Tokens per Sec: 18655.1709571549
Epoch Step: 55 / 730 Loss: 1.4669790267944336 Tokens per Sec: 17471.059957569927
Epoch Step: 60 / 730 Loss: 1.6084537506103516 Tokens per Sec: 17838.77550062934
Epoch Step: 65 / 730 Loss: 2.185382604598999 Tokens per Sec: 18829.837464567452
Epoch Step: 70 / 730 Loss: 1.3843071460723877 Tokens per Sec: 18171.379741287175
Epoch Step: 75 / 730 Loss: 2.2991344928741455 Tokens per Sec: 16944.766531495097
Epoch Step: 80 / 730 Loss: 1.052348017692566 Tokens per Sec: 15555.363200833204
Epoch Step: 85 / 730 Loss: 1.6860709190368652 Tokens per Sec: 17271.838915869528
Epoch Step: 90 / 730 Loss: 2.6219966411590576 Tokens per Sec: 16115.658057569237
Epoch Step: 95 / 730 Loss: 0.43865376710891724 Tokens per Sec: 17590.87902218116
Epoch Step: 100 / 730 Loss: 1.8083508014678955 Tokens per Sec: 15829.653427694995
Epoch Step: 105 / 730 Loss: 3.168206214904785 Tokens per Sec: 16263.230954446892
Epoch Step: 110 / 730 Loss: 1.7716631889343262 Tokens per Sec: 20780.228440040093
Epoch Step: 115 / 730 Loss: 26.16089630126953 Tokens per Sec: 16103.655721423416
Epoch Step: 120 / 730 Loss: 0.7683590650558472 Tokens per Sec: 17842.757961767184
Epoch Step: 125 / 730 Loss: 0.747105598449707 Tokens per Sec: 16970.737726316645
Epoch Step: 130 / 730 Loss: 5.418251037597656 Tokens per Sec: 20292.534182114126
Epoch Step: 135 / 730 Loss: 5.019650936126709 Tokens per Sec: 15921.596587195798
Epoch Step: 140 / 730 Loss: 2.172158718109131 Tokens per Sec: 21070.174148727376
Epoch Step: 145 / 730 Loss: 0.9413102865219116 Tokens per Sec: 18853.594898047293
Epoch Step: 150 / 730 Loss: 1.1980006694793701 Tokens per Sec: 16770.158281669323
Epoch Step: 155 / 730 Loss: 1.3620575666427612 Tokens per Sec: 16225.173021099794
Epoch Step: 160 / 730 Loss: 32.95883560180664 Tokens per Sec: 15167.297045281475
Epoch Step: 165 / 730 Loss: 1.7934938669204712 Tokens per Sec: 15907.976055900193
Epoch Step: 170 / 730 Loss: 2.8696839809417725 Tokens per Sec: 14276.437345225448
Epoch Step: 175 / 730 Loss: 3.9757440090179443 Tokens per Sec: 19837.703054363184
Epoch Step: 180 / 730 Loss: 2.9381515979766846 Tokens per Sec: 18112.86903540866
Epoch Step: 185 / 730 Loss: 1.2193338871002197 Tokens per Sec: 16343.591331111096
Epoch Step: 190 / 730 Loss: 1.1606508493423462 Tokens per Sec: 17538.087052057734
Epoch Step: 195 / 730 Loss: 1.356870412826538 Tokens per Sec: 18658.310002347876
Epoch Step: 200 / 730 Loss: 2.136309862136841 Tokens per Sec: 18292.55536357347
Epoch Step: 205 / 730 Loss: 0.6821106672286987 Tokens per Sec: 18111.915165338858
Epoch Step: 210 / 730 Loss: 2.7512693405151367 Tokens per Sec: 18858.721213391902
Epoch Step: 215 / 730 Loss: 1.0711669921875 Tokens per Sec: 20556.525851619786
Epoch Step: 220 / 730 Loss: 1.3338508605957031 Tokens per Sec: 15884.309996539621
Epoch Step: 225 / 730 Loss: 0.5395346879959106 Tokens per Sec: 17638.651254036533
Epoch Step: 230 / 730 Loss: 2.9371914863586426 Tokens per Sec: 21261.159901496205
Epoch Step: 235 / 730 Loss: 3.03501033782959 Tokens per Sec: 17863.84053529843
Epoch Step: 240 / 730 Loss: 42.54610061645508 Tokens per Sec: 18133.52782453608
Epoch Step: 245 / 730 Loss: 4.019143581390381 Tokens per Sec: 14953.241644121072
Epoch Step: 250 / 730 Loss: 1.3873653411865234 Tokens per Sec: 17321.86648661192
Epoch Step: 255 / 730 Loss: 3.4978582859039307 Tokens per Sec: 18499.300673141897
Epoch Step: 260 / 730 Loss: 1.7670153379440308 Tokens per Sec: 18981.18108901096
Epoch Step: 265 / 730 Loss: 0.9615570306777954 Tokens per Sec: 14870.211026096085
Epoch Step: 270 / 730 Loss: 3.4036941528320312 Tokens per Sec: 18154.858868274998
Epoch Step: 275 / 730 Loss: 2.395500659942627 Tokens per Sec: 20539.784310985855
Epoch Step: 280 / 730 Loss: 0.5908869504928589 Tokens per Sec: 16640.31047752139
Epoch Step: 285 / 730 Loss: 1.1590979099273682 Tokens per Sec: 16934.496757265977
Epoch Step: 290 / 730 Loss: 1.4344896078109741 Tokens per Sec: 17312.432449260134
Epoch Step: 295 / 730 Loss: 1.0878185033798218 Tokens per Sec: 16201.246713704366
Epoch Step: 300 / 730 Loss: 2.1740474700927734 Tokens per Sec: 21221.537795248765
Epoch Step: 305 / 730 Loss: 3.394932508468628 Tokens per Sec: 18968.931163781534
Epoch Step: 310 / 730 Loss: 1.2901897430419922 Tokens per Sec: 17581.608323270233
Epoch Step: 315 / 730 Loss: 3.709733247756958 Tokens per Sec: 16631.19356703077
Epoch Step: 320 / 730 Loss: 2.286595344543457 Tokens per Sec: 19601.134097004204
Epoch Step: 325 / 730 Loss: 0.3290751278400421 Tokens per Sec: 19695.760733099552
Epoch Step: 330 / 730 Loss: 3.355332374572754 Tokens per Sec: 15524.337968033049
Epoch Step: 335 / 730 Loss: 2.945777177810669 Tokens per Sec: 17736.32615973887
Epoch Step: 340 / 730 Loss: 2.0410752296447754 Tokens per Sec: 18175.501929252536
Epoch Step: 345 / 730 Loss: 0.32411280274391174 Tokens per Sec: 15909.426866546728
Epoch Step: 350 / 730 Loss: 2.014892339706421 Tokens per Sec: 17892.159630070564
Epoch Step: 355 / 730 Loss: 6.224011421203613 Tokens per Sec: 19244.662955135926
Epoch Step: 360 / 730 Loss: 3.786377191543579 Tokens per Sec: 16901.07677573604
Epoch Step: 365 / 730 Loss: 6.090957164764404 Tokens per Sec: 17131.57418506584
Epoch Step: 370 / 730 Loss: 5.54781436920166 Tokens per Sec: 17236.95219999527
Epoch Step: 375 / 730 Loss: 3.0403976440429688 Tokens per Sec: 17737.266747577585
Epoch Step: 380 / 730 Loss: 3.234966516494751 Tokens per Sec: 20306.25007573974
Epoch Step: 385 / 730 Loss: 45.68138122558594 Tokens per Sec: 18901.904211630972
Epoch Step: 390 / 730 Loss: 1.727001428604126 Tokens per Sec: 17232.49645506049
Epoch Step: 395 / 730 Loss: 4.82546329498291 Tokens per Sec: 14250.944126104423
Epoch Step: 400 / 730 Loss: 2.195538282394409 Tokens per Sec: 19069.422649623757
Epoch Step: 405 / 730 Loss: 2.3153297901153564 Tokens per Sec: 19639.25203885955
Epoch Step: 410 / 730 Loss: 25.77246856689453 Tokens per Sec: 16404.564787140353
Epoch Step: 415 / 730 Loss: 0.9993480443954468 Tokens per Sec: 16712.91398019811
Epoch Step: 420 / 730 Loss: 6.343018531799316 Tokens per Sec: 17339.8763633991
Epoch Step: 425 / 730 Loss: 7.115884780883789 Tokens per Sec: 18208.069971563786
Epoch Step: 430 / 730 Loss: 7.8006510734558105 Tokens per Sec: 15808.316325020698
Epoch Step: 435 / 730 Loss: 1.8207218647003174 Tokens per Sec: 21808.62541015275
Epoch Step: 440 / 730 Loss: 6.842021942138672 Tokens per Sec: 14847.149244424198
Epoch Step: 445 / 730 Loss: 4.729101657867432 Tokens per Sec: 16083.647140932333
Epoch Step: 450 / 730 Loss: 1.662563443183899 Tokens per Sec: 18684.558033343757
Epoch Step: 455 / 730 Loss: 2.0912132263183594 Tokens per Sec: 18188.876057006408
Epoch Step: 460 / 730 Loss: 2.2180566787719727 Tokens per Sec: 16298.918810187812
Epoch Step: 465 / 730 Loss: 3.0370731353759766 Tokens per Sec: 20084.876244112358
Epoch Step: 470 / 730 Loss: 2.2992093563079834 Tokens per Sec: 19921.13467068945
Epoch Step: 475 / 730 Loss: 20.103124618530273 Tokens per Sec: 17091.867018810106
Epoch Step: 480 / 730 Loss: 2.777456045150757 Tokens per Sec: 17418.996996896174
Epoch Step: 485 / 730 Loss: 4.252064228057861 Tokens per Sec: 19218.821990207518
Epoch Step: 490 / 730 Loss: 3.318742036819458 Tokens per Sec: 18294.723319460278
Epoch Step: 495 / 730 Loss: 1.8667430877685547 Tokens per Sec: 15493.184105982064
Epoch Step: 500 / 730 Loss: 1.3658299446105957 Tokens per Sec: 19589.040157258605
Epoch Step: 505 / 730 Loss: 2.1382532119750977 Tokens per Sec: 16367.149259137735
Epoch Step: 510 / 730 Loss: 1.567284345626831 Tokens per Sec: 13067.105437742814
Epoch Step: 515 / 730 Loss: 1.1342518329620361 Tokens per Sec: 21599.854839555122
Epoch Step: 520 / 730 Loss: 2.793468952178955 Tokens per Sec: 19065.958715370034
Epoch Step: 525 / 730 Loss: 2.023007392883301 Tokens per Sec: 19263.81666838116
Epoch Step: 530 / 730 Loss: 4.580320835113525 Tokens per Sec: 18411.794591160415
Epoch Step: 535 / 730 Loss: 2.1546449661254883 Tokens per Sec: 17286.794603989074
Epoch Step: 540 / 730 Loss: 1.0878431797027588 Tokens per Sec: 21435.597300547823
Epoch Step: 545 / 730 Loss: 5.106423854827881 Tokens per Sec: 19230.236140979716
Epoch Step: 550 / 730 Loss: 1.7563344240188599 Tokens per Sec: 15405.200534060989
Epoch Step: 555 / 730 Loss: 3.596346616744995 Tokens per Sec: 16010.564323310053
Epoch Step: 560 / 730 Loss: 0.6081258058547974 Tokens per Sec: 19964.395658089186
Epoch Step: 565 / 730 Loss: 23.700748443603516 Tokens per Sec: 14944.53775810248
Epoch Step: 570 / 730 Loss: 5.535737991333008 Tokens per Sec: 18324.842882613528
Epoch Step: 575 / 730 Loss: 2.9708807468414307 Tokens per Sec: 18177.937155420692
Epoch Step: 580 / 730 Loss: 2.4065282344818115 Tokens per Sec: 17627.549658018153
Epoch Step: 585 / 730 Loss: 1.9112882614135742 Tokens per Sec: 17516.811268372647
Epoch Step: 590 / 730 Loss: 1.9622581005096436 Tokens per Sec: 17671.419690594365
Epoch Step: 595 / 730 Loss: 14.990522384643555 Tokens per Sec: 15683.075944735932
Epoch Step: 600 / 730 Loss: 3.5496714115142822 Tokens per Sec: 17204.23347111738
Epoch Step: 605 / 730 Loss: 4.48863410949707 Tokens per Sec: 20049.780709190305
Epoch Step: 610 / 730 Loss: 1.3125205039978027 Tokens per Sec: 21256.198902324308
Epoch Step: 615 / 730 Loss: 3.4902074337005615 Tokens per Sec: 16831.811859934096
Epoch Step: 620 / 730 Loss: 2.498563766479492 Tokens per Sec: 16568.118559443632
Epoch Step: 625 / 730 Loss: 1.2614614963531494 Tokens per Sec: 19429.034274703674
Epoch Step: 630 / 730 Loss: 2.0387508869171143 Tokens per Sec: 18596.24024270762
Epoch Step: 635 / 730 Loss: 3.9494504928588867 Tokens per Sec: 18368.20695044776
Epoch Step: 640 / 730 Loss: 4.369199275970459 Tokens per Sec: 17357.448362918083
Epoch Step: 645 / 730 Loss: 4.855205535888672 Tokens per Sec: 17706.697714055783
Epoch Step: 650 / 730 Loss: 2.6569485664367676 Tokens per Sec: 17401.198994281138
Epoch Step: 655 / 730 Loss: 0.9712185263633728 Tokens per Sec: 13980.202756269031
Epoch Step: 660 / 730 Loss: 1.9317209720611572 Tokens per Sec: 18245.94721828774
Epoch Step: 665 / 730 Loss: 4.763237476348877 Tokens per Sec: 20845.89005046009
Epoch Step: 670 / 730 Loss: 3.556751251220703 Tokens per Sec: 19482.317844817382
Epoch Step: 675 / 730 Loss: 3.0746307373046875 Tokens per Sec: 15542.984001666035
Epoch Step: 680 / 730 Loss: 4.30751895904541 Tokens per Sec: 18136.433295936626
Epoch Step: 685 / 730 Loss: 2.7380588054656982 Tokens per Sec: 16330.713478879428
Epoch Step: 690 / 730 Loss: 1.9541988372802734 Tokens per Sec: 18076.870087654403
Epoch Step: 695 / 730 Loss: 2.5111961364746094 Tokens per Sec: 15464.497128114233
Epoch Step: 700 / 730 Loss: 0.631420910358429 Tokens per Sec: 14315.873845097949
Epoch Step: 705 / 730 Loss: 3.332206964492798 Tokens per Sec: 16706.22254141947
Epoch Step: 710 / 730 Loss: 2.2477684020996094 Tokens per Sec: 16206.860380407728
Epoch Step: 715 / 730 Loss: 1.5296647548675537 Tokens per Sec: 14792.308082856194
Epoch Step: 720 / 730 Loss: 2.8843905925750732 Tokens per Sec: 15670.265863593
Epoch Step: 725 / 730 Loss: 9.859964370727539 Tokens per Sec: 13770.673888424453
Epoch Step: 730 / 730 Loss: 2.844914436340332 Tokens per Sec: 14489.7127752782
Epoch ended with duration 0:01:19.454304
Train perplexity: 1.1661705923541923
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > , java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.307595
Validation perplexity: 1.2640740437105895
Epoch 38 / 1000
Epoch Step: 5 / 730 Loss: 38.906314849853516 Tokens per Sec: 14634.8497109515
Epoch Step: 10 / 730 Loss: 0.6319340467453003 Tokens per Sec: 18286.866343477308
Epoch Step: 15 / 730 Loss: 1.492959976196289 Tokens per Sec: 16265.343489474424
Epoch Step: 20 / 730 Loss: 3.5974626541137695 Tokens per Sec: 17441.06156092332
Epoch Step: 25 / 730 Loss: 12.424202919006348 Tokens per Sec: 15978.127739460475
Epoch Step: 30 / 730 Loss: 0.5752686858177185 Tokens per Sec: 17579.61412824845
Epoch Step: 35 / 730 Loss: 3.7008042335510254 Tokens per Sec: 19835.947981708112
Epoch Step: 40 / 730 Loss: 3.1275343894958496 Tokens per Sec: 18291.491132312374
Epoch Step: 45 / 730 Loss: 3.280177116394043 Tokens per Sec: 20121.11587393308
Epoch Step: 50 / 730 Loss: 3.679635524749756 Tokens per Sec: 18904.549726491274
Epoch Step: 55 / 730 Loss: 0.6745637059211731 Tokens per Sec: 18852.321689924593
Epoch Step: 60 / 730 Loss: 3.0832324028015137 Tokens per Sec: 15431.932959663163
Epoch Step: 65 / 730 Loss: 1.607892394065857 Tokens per Sec: 18157.475851037936
Epoch Step: 70 / 730 Loss: 3.5926685333251953 Tokens per Sec: 20046.661419065436
Epoch Step: 75 / 730 Loss: 1.245923638343811 Tokens per Sec: 19544.995495181163
Epoch Step: 80 / 730 Loss: 4.47520112991333 Tokens per Sec: 16488.20539855163
Epoch Step: 85 / 730 Loss: 1.9126702547073364 Tokens per Sec: 17694.33623800247
Epoch Step: 90 / 730 Loss: 2.099980592727661 Tokens per Sec: 16851.501312791872
Epoch Step: 95 / 730 Loss: 1.810645580291748 Tokens per Sec: 16708.303825259885
Epoch Step: 100 / 730 Loss: 1.2946805953979492 Tokens per Sec: 17095.415914076697
Epoch Step: 105 / 730 Loss: 3.1273751258850098 Tokens per Sec: 15577.932193066217
Epoch Step: 110 / 730 Loss: 0.944231390953064 Tokens per Sec: 17249.75955590615
Epoch Step: 115 / 730 Loss: 0.5048787593841553 Tokens per Sec: 17911.786295162125
Epoch Step: 120 / 730 Loss: 2.636625051498413 Tokens per Sec: 17826.723182090416
Epoch Step: 125 / 730 Loss: 1.3090620040893555 Tokens per Sec: 16885.519167410428
Epoch Step: 130 / 730 Loss: 0.93889981508255 Tokens per Sec: 19192.42868176265
Epoch Step: 135 / 730 Loss: 1.5214285850524902 Tokens per Sec: 16605.879238218327
Epoch Step: 140 / 730 Loss: 5.264735698699951 Tokens per Sec: 20551.318149863946
Epoch Step: 145 / 730 Loss: 5.511366844177246 Tokens per Sec: 18844.124719427808
Epoch Step: 150 / 730 Loss: 0.9061712026596069 Tokens per Sec: 17711.481713557125
Epoch Step: 155 / 730 Loss: 3.449657917022705 Tokens per Sec: 18095.796772926336
Epoch Step: 160 / 730 Loss: 0.4942654073238373 Tokens per Sec: 17748.957728938294
Epoch Step: 165 / 730 Loss: 1.793177843093872 Tokens per Sec: 13461.147004446651
Epoch Step: 170 / 730 Loss: 0.8776165843009949 Tokens per Sec: 16493.44176118315
Epoch Step: 175 / 730 Loss: 2.264017343521118 Tokens per Sec: 19856.27397729372
Epoch Step: 180 / 730 Loss: 3.628901958465576 Tokens per Sec: 16250.638489898745
Epoch Step: 185 / 730 Loss: 2.0064291954040527 Tokens per Sec: 18476.778015548418
Epoch Step: 190 / 730 Loss: 3.0643556118011475 Tokens per Sec: 18015.945845059334
Epoch Step: 195 / 730 Loss: 2.331251859664917 Tokens per Sec: 16037.234407420943
Epoch Step: 200 / 730 Loss: 1.0114223957061768 Tokens per Sec: 18551.587451546355
Epoch Step: 205 / 730 Loss: 2.688506841659546 Tokens per Sec: 15702.610833806815
Epoch Step: 210 / 730 Loss: 1.1647268533706665 Tokens per Sec: 14884.589507840012
Epoch Step: 215 / 730 Loss: 1.2449220418930054 Tokens per Sec: 17294.023543932028
Epoch Step: 220 / 730 Loss: 1.1662157773971558 Tokens per Sec: 13993.426497852219
Epoch Step: 225 / 730 Loss: 0.8248322010040283 Tokens per Sec: 16241.658528802558
Epoch Step: 230 / 730 Loss: 40.629730224609375 Tokens per Sec: 18155.709194164207
Epoch Step: 235 / 730 Loss: 1.3555912971496582 Tokens per Sec: 18028.17866954335
Epoch Step: 240 / 730 Loss: 3.7221736907958984 Tokens per Sec: 18979.930640186383
Epoch Step: 245 / 730 Loss: 1.7043170928955078 Tokens per Sec: 15645.72539101699
Epoch Step: 250 / 730 Loss: 1.6670525074005127 Tokens per Sec: 16001.280584953363
Epoch Step: 255 / 730 Loss: 1.0136388540267944 Tokens per Sec: 15918.154338923494
Epoch Step: 260 / 730 Loss: 0.4085206687450409 Tokens per Sec: 20207.921881630045
Epoch Step: 265 / 730 Loss: 0.8653342723846436 Tokens per Sec: 18782.46894088736
Epoch Step: 270 / 730 Loss: 3.7230889797210693 Tokens per Sec: 19716.678362954906
Epoch Step: 275 / 730 Loss: 1.308440089225769 Tokens per Sec: 20387.70164947721
Epoch Step: 280 / 730 Loss: 1.8233680725097656 Tokens per Sec: 18679.764121927044
Epoch Step: 285 / 730 Loss: 4.6890764236450195 Tokens per Sec: 17076.76831531202
Epoch Step: 290 / 730 Loss: 1.8874759674072266 Tokens per Sec: 17102.33793819492
Epoch Step: 295 / 730 Loss: 4.982738971710205 Tokens per Sec: 18721.26688493693
Epoch Step: 300 / 730 Loss: 2.8117306232452393 Tokens per Sec: 19389.742589939055
Epoch Step: 305 / 730 Loss: 3.0210700035095215 Tokens per Sec: 15876.352736970033
Epoch Step: 310 / 730 Loss: 2.014312744140625 Tokens per Sec: 18984.715931168535
Epoch Step: 315 / 730 Loss: 2.693610429763794 Tokens per Sec: 19057.70581411571
Epoch Step: 320 / 730 Loss: 0.7227003574371338 Tokens per Sec: 19461.485725206494
Epoch Step: 325 / 730 Loss: 1.4386494159698486 Tokens per Sec: 15460.458733298748
Epoch Step: 330 / 730 Loss: 4.221466541290283 Tokens per Sec: 18230.868588324858
Epoch Step: 335 / 730 Loss: 1.731542944908142 Tokens per Sec: 19676.378670688955
Epoch Step: 340 / 730 Loss: 4.61378812789917 Tokens per Sec: 16047.898049449374
Epoch Step: 345 / 730 Loss: 0.6709721088409424 Tokens per Sec: 19047.011909782654
Epoch Step: 350 / 730 Loss: 0.8891893625259399 Tokens per Sec: 14994.945605400855
Epoch Step: 355 / 730 Loss: 1.4931696653366089 Tokens per Sec: 16457.508109936352
Epoch Step: 360 / 730 Loss: 0.967767059803009 Tokens per Sec: 18950.72795518999
Epoch Step: 365 / 730 Loss: 1.3076889514923096 Tokens per Sec: 18633.681822200986
Epoch Step: 370 / 730 Loss: 0.8430624008178711 Tokens per Sec: 15014.37183048601
Epoch Step: 375 / 730 Loss: 2.050077438354492 Tokens per Sec: 18849.540702579787
Epoch Step: 380 / 730 Loss: 3.0501928329467773 Tokens per Sec: 20402.29124716362
Epoch Step: 385 / 730 Loss: 1.0442924499511719 Tokens per Sec: 16001.892577842596
Epoch Step: 390 / 730 Loss: 1.7137601375579834 Tokens per Sec: 21903.157844938523
Epoch Step: 395 / 730 Loss: 2.602786064147949 Tokens per Sec: 15959.124543884891
Epoch Step: 400 / 730 Loss: 1.1309645175933838 Tokens per Sec: 15477.717322953169
Epoch Step: 405 / 730 Loss: 3.1839773654937744 Tokens per Sec: 17980.82397427079
Epoch Step: 410 / 730 Loss: 1.0435268878936768 Tokens per Sec: 19168.980778030214
Epoch Step: 415 / 730 Loss: 1.1752405166625977 Tokens per Sec: 17354.2284602045
Epoch Step: 420 / 730 Loss: 1.159385085105896 Tokens per Sec: 14190.977839163867
Epoch Step: 425 / 730 Loss: 0.5838882923126221 Tokens per Sec: 17548.310610336535
Epoch Step: 430 / 730 Loss: 1.1237609386444092 Tokens per Sec: 19833.367720733488
Epoch Step: 435 / 730 Loss: 2.5215251445770264 Tokens per Sec: 18521.86856871102
Epoch Step: 440 / 730 Loss: 47.64696502685547 Tokens per Sec: 18372.644882091354
Epoch Step: 445 / 730 Loss: 3.469404458999634 Tokens per Sec: 17192.8491483348
Epoch Step: 450 / 730 Loss: 0.5426660180091858 Tokens per Sec: 15895.739268796811
Epoch Step: 455 / 730 Loss: 3.50132155418396 Tokens per Sec: 15915.979810228988
Epoch Step: 460 / 730 Loss: 5.323576927185059 Tokens per Sec: 17094.774545084685
Epoch Step: 465 / 730 Loss: 3.65213942527771 Tokens per Sec: 17809.423399125495
Epoch Step: 470 / 730 Loss: 1.2241510152816772 Tokens per Sec: 18313.84311922714
Epoch Step: 475 / 730 Loss: 14.726431846618652 Tokens per Sec: 18735.950462971286
Epoch Step: 480 / 730 Loss: 8.572991371154785 Tokens per Sec: 17695.98947406893
Epoch Step: 485 / 730 Loss: 4.223262786865234 Tokens per Sec: 17327.950123010563
Epoch Step: 490 / 730 Loss: 4.055408477783203 Tokens per Sec: 15761.82487869765
Epoch Step: 495 / 730 Loss: 1.9941930770874023 Tokens per Sec: 18773.375476733276
Epoch Step: 500 / 730 Loss: 2.8591527938842773 Tokens per Sec: 19538.979524790695
Epoch Step: 505 / 730 Loss: 2.8749969005584717 Tokens per Sec: 13634.821976473158
Epoch Step: 510 / 730 Loss: 0.49847209453582764 Tokens per Sec: 15493.089470430112
Epoch Step: 515 / 730 Loss: 1.938499093055725 Tokens per Sec: 16835.567431335043
Epoch Step: 520 / 730 Loss: 2.7045559883117676 Tokens per Sec: 19061.22613859655
Epoch Step: 525 / 730 Loss: 2.136119842529297 Tokens per Sec: 18100.25029444451
Epoch Step: 530 / 730 Loss: 3.1661269664764404 Tokens per Sec: 16895.060550458715
Epoch Step: 535 / 730 Loss: 2.4564177989959717 Tokens per Sec: 15199.112996597973
Epoch Step: 540 / 730 Loss: 4.531918048858643 Tokens per Sec: 18747.1791460721
Epoch Step: 545 / 730 Loss: 2.5873420238494873 Tokens per Sec: 19864.61141093614
Epoch Step: 550 / 730 Loss: 0.8990364074707031 Tokens per Sec: 17916.007367484253
Epoch Step: 555 / 730 Loss: 2.2598671913146973 Tokens per Sec: 18113.207448776928
Epoch Step: 560 / 730 Loss: 13.521302223205566 Tokens per Sec: 19284.46234183911
Epoch Step: 565 / 730 Loss: 1.350115418434143 Tokens per Sec: 15523.478783194903
Epoch Step: 570 / 730 Loss: 4.230528354644775 Tokens per Sec: 19762.065140711104
Epoch Step: 575 / 730 Loss: 49.957489013671875 Tokens per Sec: 15983.868001468029
Epoch Step: 580 / 730 Loss: 6.0749077796936035 Tokens per Sec: 17838.603129823765
Epoch Step: 585 / 730 Loss: 0.9463382363319397 Tokens per Sec: 17605.824838438653
Epoch Step: 590 / 730 Loss: 2.1399927139282227 Tokens per Sec: 17795.9160227744
Epoch Step: 595 / 730 Loss: 18.900285720825195 Tokens per Sec: 18612.653803426827
Epoch Step: 600 / 730 Loss: 4.5666184425354 Tokens per Sec: 20627.383451372436
Epoch Step: 605 / 730 Loss: 1.0173090696334839 Tokens per Sec: 20247.405598147066
Epoch Step: 610 / 730 Loss: 2.238738536834717 Tokens per Sec: 16243.31647465556
Epoch Step: 615 / 730 Loss: 0.3905264139175415 Tokens per Sec: 16040.313046325722
Epoch Step: 620 / 730 Loss: 2.6728525161743164 Tokens per Sec: 20533.87791148631
Epoch Step: 625 / 730 Loss: 1.4497240781784058 Tokens per Sec: 16042.883904391898
Epoch Step: 630 / 730 Loss: 1.8951276540756226 Tokens per Sec: 14613.79556245039
Epoch Step: 635 / 730 Loss: 0.7510726451873779 Tokens per Sec: 19967.75769308386
Epoch Step: 640 / 730 Loss: 0.6769956350326538 Tokens per Sec: 20136.815846624988
Epoch Step: 645 / 730 Loss: 14.141839027404785 Tokens per Sec: 19296.649054031022
Epoch Step: 650 / 730 Loss: 3.848613739013672 Tokens per Sec: 16552.171587284713
Epoch Step: 655 / 730 Loss: 5.130329608917236 Tokens per Sec: 18134.065302912546
Epoch Step: 660 / 730 Loss: 3.0723671913146973 Tokens per Sec: 15392.167412426343
Epoch Step: 665 / 730 Loss: 3.765066146850586 Tokens per Sec: 18517.92226741542
Epoch Step: 670 / 730 Loss: 4.594004154205322 Tokens per Sec: 18539.365813951023
Epoch Step: 675 / 730 Loss: 28.84723663330078 Tokens per Sec: 19425.933328427403
Epoch Step: 680 / 730 Loss: 41.238033294677734 Tokens per Sec: 16630.222512254793
Epoch Step: 685 / 730 Loss: 1.4766113758087158 Tokens per Sec: 16166.365263272868
Epoch Step: 690 / 730 Loss: 1.6329517364501953 Tokens per Sec: 18469.5934141892
Epoch Step: 695 / 730 Loss: 2.733927011489868 Tokens per Sec: 17717.157847932416
Epoch Step: 700 / 730 Loss: 23.53181266784668 Tokens per Sec: 14726.62923080591
Epoch Step: 705 / 730 Loss: 4.026622772216797 Tokens per Sec: 14481.079670348008
Epoch Step: 710 / 730 Loss: 1.7160470485687256 Tokens per Sec: 14660.710297207299
Epoch Step: 715 / 730 Loss: 0.5430905818939209 Tokens per Sec: 16478.024219144685
Epoch Step: 720 / 730 Loss: 1.0263383388519287 Tokens per Sec: 16089.542362924816
Epoch Step: 725 / 730 Loss: 3.149190664291382 Tokens per Sec: 16397.4969576281
Epoch Step: 730 / 730 Loss: 3.0762245655059814 Tokens per Sec: 13966.841666798651
Epoch ended with duration 0:01:19.909832
Train perplexity: 1.1522199561470352
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > , java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.275538
Validation perplexity: 1.177533915496252
Epoch 39 / 1000
Epoch Step: 5 / 730 Loss: 0.5380034446716309 Tokens per Sec: 15044.968825410848
Epoch Step: 10 / 730 Loss: 1.6660219430923462 Tokens per Sec: 17278.129604680104
Epoch Step: 15 / 730 Loss: 4.129761695861816 Tokens per Sec: 17176.350493162194
Epoch Step: 20 / 730 Loss: 0.6052336692810059 Tokens per Sec: 13828.281322815896
Epoch Step: 25 / 730 Loss: 3.3775346279144287 Tokens per Sec: 17139.85388595903
Epoch Step: 30 / 730 Loss: 1.6412838697433472 Tokens per Sec: 16734.318509801913
Epoch Step: 35 / 730 Loss: 2.5192110538482666 Tokens per Sec: 18366.62917512159
Epoch Step: 40 / 730 Loss: 1.0754610300064087 Tokens per Sec: 17399.15744730607
Epoch Step: 45 / 730 Loss: 2.943589687347412 Tokens per Sec: 19968.507276400273
Epoch Step: 50 / 730 Loss: 6.624194622039795 Tokens per Sec: 20057.97716771839
Epoch Step: 55 / 730 Loss: 2.727944850921631 Tokens per Sec: 19408.484412852056
Epoch Step: 60 / 730 Loss: 4.930753231048584 Tokens per Sec: 17860.0493513387
Epoch Step: 65 / 730 Loss: 2.3069982528686523 Tokens per Sec: 19414.65601416779
Epoch Step: 70 / 730 Loss: 1.940956711769104 Tokens per Sec: 17533.71392612587
Epoch Step: 75 / 730 Loss: 4.172756671905518 Tokens per Sec: 18197.487389466543
Epoch Step: 80 / 730 Loss: 4.790778636932373 Tokens per Sec: 18298.008718726483
Epoch Step: 85 / 730 Loss: 0.9972746968269348 Tokens per Sec: 15608.291964009306
Epoch Step: 90 / 730 Loss: 5.78247594833374 Tokens per Sec: 17897.60682375261
Epoch Step: 95 / 730 Loss: 0.7878193855285645 Tokens per Sec: 18518.917042097233
Epoch Step: 100 / 730 Loss: 2.001723051071167 Tokens per Sec: 19748.77609641315
Epoch Step: 105 / 730 Loss: 2.17221999168396 Tokens per Sec: 18387.52983337465
Epoch Step: 110 / 730 Loss: 8.745805740356445 Tokens per Sec: 16835.996948341075
Epoch Step: 115 / 730 Loss: 4.24086332321167 Tokens per Sec: 16882.650538855512
Epoch Step: 120 / 730 Loss: 2.3304193019866943 Tokens per Sec: 17757.711548297506
Epoch Step: 125 / 730 Loss: 1.1365171670913696 Tokens per Sec: 17443.380187220213
Epoch Step: 130 / 730 Loss: 1.9304732084274292 Tokens per Sec: 16660.234003819318
Epoch Step: 135 / 730 Loss: 0.8482711315155029 Tokens per Sec: 14711.816091703524
Epoch Step: 140 / 730 Loss: 3.4707186222076416 Tokens per Sec: 17923.413657583063
Epoch Step: 145 / 730 Loss: 3.412388324737549 Tokens per Sec: 19010.057514873624
Epoch Step: 150 / 730 Loss: 3.7988245487213135 Tokens per Sec: 20179.719296358475
Epoch Step: 155 / 730 Loss: 2.5689656734466553 Tokens per Sec: 20386.508364685156
Epoch Step: 160 / 730 Loss: 3.3174376487731934 Tokens per Sec: 14322.581316161988
Epoch Step: 165 / 730 Loss: 2.120623826980591 Tokens per Sec: 17681.381394007713
Epoch Step: 170 / 730 Loss: 3.2039828300476074 Tokens per Sec: 16862.041673548152
Epoch Step: 175 / 730 Loss: 3.606417417526245 Tokens per Sec: 17042.105385381565
Epoch Step: 180 / 730 Loss: 1.0723474025726318 Tokens per Sec: 17498.67113537621
Epoch Step: 185 / 730 Loss: 1.9098248481750488 Tokens per Sec: 18010.21547216621
Epoch Step: 190 / 730 Loss: 3.1556544303894043 Tokens per Sec: 18300.759405540262
Epoch Step: 195 / 730 Loss: 0.5719584822654724 Tokens per Sec: 17723.110230080805
Epoch Step: 200 / 730 Loss: 2.2105631828308105 Tokens per Sec: 15552.784673614311
Epoch Step: 205 / 730 Loss: 2.4868950843811035 Tokens per Sec: 17413.149243639302
Epoch Step: 210 / 730 Loss: 0.8596377968788147 Tokens per Sec: 15492.761096789278
Epoch Step: 215 / 730 Loss: 2.2669436931610107 Tokens per Sec: 18252.87553790416
Epoch Step: 220 / 730 Loss: 2.1262073516845703 Tokens per Sec: 16456.727831563465
Epoch Step: 225 / 730 Loss: 1.193684458732605 Tokens per Sec: 15330.650395767663
Epoch Step: 230 / 730 Loss: 1.7684557437896729 Tokens per Sec: 20878.32725674462
Epoch Step: 235 / 730 Loss: 2.7237508296966553 Tokens per Sec: 18441.609213828142
Epoch Step: 240 / 730 Loss: 3.190402030944824 Tokens per Sec: 17925.07721970055
Epoch Step: 245 / 730 Loss: 1.7061131000518799 Tokens per Sec: 19300.275260088238
Epoch Step: 250 / 730 Loss: 0.5621110200881958 Tokens per Sec: 13645.997649570529
Epoch Step: 255 / 730 Loss: 3.659874439239502 Tokens per Sec: 17534.842050504576
Epoch Step: 260 / 730 Loss: 1.3884127140045166 Tokens per Sec: 19561.890227413125
Epoch Step: 265 / 730 Loss: 3.045409679412842 Tokens per Sec: 16228.66532013287
Epoch Step: 270 / 730 Loss: 0.9722407460212708 Tokens per Sec: 18439.99819590073
Epoch Step: 275 / 730 Loss: 67.58960723876953 Tokens per Sec: 17729.4792701406
Epoch Step: 280 / 730 Loss: 3.4976725578308105 Tokens per Sec: 18485.486430632413
Epoch Step: 285 / 730 Loss: 2.7151942253112793 Tokens per Sec: 16350.804045479394
Epoch Step: 290 / 730 Loss: 2.200467824935913 Tokens per Sec: 18120.666692979128
Epoch Step: 295 / 730 Loss: 0.7861196994781494 Tokens per Sec: 18474.87196296467
Epoch Step: 300 / 730 Loss: 2.119688034057617 Tokens per Sec: 17959.694900484894
Epoch Step: 305 / 730 Loss: 0.24500079452991486 Tokens per Sec: 20065.339940361635
Epoch Step: 310 / 730 Loss: 1.3385850191116333 Tokens per Sec: 19430.654815605532
Epoch Step: 315 / 730 Loss: 3.1994659900665283 Tokens per Sec: 20553.65042317083
Epoch Step: 320 / 730 Loss: 0.7741421461105347 Tokens per Sec: 17901.483663833085
Epoch Step: 325 / 730 Loss: 0.7373062372207642 Tokens per Sec: 17351.530550415886
Epoch Step: 330 / 730 Loss: 2.2650017738342285 Tokens per Sec: 14470.869716869023
Epoch Step: 335 / 730 Loss: 3.424609422683716 Tokens per Sec: 20672.34463332236
Epoch Step: 340 / 730 Loss: 0.8499951958656311 Tokens per Sec: 19663.123742798754
Epoch Step: 345 / 730 Loss: 0.8692348003387451 Tokens per Sec: 18104.878368058038
Epoch Step: 350 / 730 Loss: 1.8500657081604004 Tokens per Sec: 15473.664238004687
Epoch Step: 355 / 730 Loss: 3.0153884887695312 Tokens per Sec: 16663.586732279546
Epoch Step: 360 / 730 Loss: 2.3638112545013428 Tokens per Sec: 17600.577687582423
Epoch Step: 365 / 730 Loss: 3.1637065410614014 Tokens per Sec: 18238.216576740055
Epoch Step: 370 / 730 Loss: 5.445708274841309 Tokens per Sec: 16161.081170567197
Epoch Step: 375 / 730 Loss: 0.9059497117996216 Tokens per Sec: 17380.941561073312
Epoch Step: 380 / 730 Loss: 1.0765266418457031 Tokens per Sec: 17545.548974088568
Epoch Step: 385 / 730 Loss: 5.6177849769592285 Tokens per Sec: 17364.10168103293
Epoch Step: 390 / 730 Loss: 0.5690025687217712 Tokens per Sec: 15960.644344372622
Epoch Step: 395 / 730 Loss: 1.2934389114379883 Tokens per Sec: 18826.053693042228
Epoch Step: 400 / 730 Loss: 2.1491851806640625 Tokens per Sec: 18694.7840735701
Epoch Step: 405 / 730 Loss: 3.2989561557769775 Tokens per Sec: 16131.13948836585
Epoch Step: 410 / 730 Loss: 3.766049861907959 Tokens per Sec: 20768.57621735269
Epoch Step: 415 / 730 Loss: 3.037179708480835 Tokens per Sec: 20400.479241542882
Epoch Step: 420 / 730 Loss: 3.828489303588867 Tokens per Sec: 12972.908594893588
Epoch Step: 425 / 730 Loss: 1.56624436378479 Tokens per Sec: 15653.73884080415
Epoch Step: 430 / 730 Loss: 5.075341701507568 Tokens per Sec: 18475.81055538098
Epoch Step: 435 / 730 Loss: 5.802410125732422 Tokens per Sec: 18777.78400818855
Epoch Step: 440 / 730 Loss: 1.2194857597351074 Tokens per Sec: 18015.457058000462
Epoch Step: 445 / 730 Loss: 1.5409749746322632 Tokens per Sec: 18214.69125748503
Epoch Step: 450 / 730 Loss: 1.9705156087875366 Tokens per Sec: 19823.033534674185
Epoch Step: 455 / 730 Loss: 4.354705333709717 Tokens per Sec: 16311.310529716062
Epoch Step: 460 / 730 Loss: 4.697417259216309 Tokens per Sec: 18296.33650718385
Epoch Step: 465 / 730 Loss: 3.3663246631622314 Tokens per Sec: 15856.99881445007
Epoch Step: 470 / 730 Loss: 3.978799819946289 Tokens per Sec: 17743.364363821336
Epoch Step: 475 / 730 Loss: 0.6644213199615479 Tokens per Sec: 17974.697984162096
Epoch Step: 480 / 730 Loss: 1.9565186500549316 Tokens per Sec: 15877.514069705163
Epoch Step: 485 / 730 Loss: 1.0738246440887451 Tokens per Sec: 17746.226200896206
Epoch Step: 490 / 730 Loss: 4.434774398803711 Tokens per Sec: 17046.87077545191
Epoch Step: 495 / 730 Loss: 1.9463576078414917 Tokens per Sec: 19800.6346340743
Epoch Step: 500 / 730 Loss: 1.0571211576461792 Tokens per Sec: 15579.036713071699
Epoch Step: 505 / 730 Loss: 3.2883646488189697 Tokens per Sec: 17003.313785956554
Epoch Step: 510 / 730 Loss: 1.2333800792694092 Tokens per Sec: 14797.586953079233
Epoch Step: 515 / 730 Loss: 1.6423546075820923 Tokens per Sec: 18482.539204494482
Epoch Step: 520 / 730 Loss: 2.2683985233306885 Tokens per Sec: 20118.98225639713
Epoch Step: 525 / 730 Loss: 5.409407615661621 Tokens per Sec: 18255.007315329927
Epoch Step: 530 / 730 Loss: 1.130861759185791 Tokens per Sec: 19004.01904357212
Epoch Step: 535 / 730 Loss: 3.6956968307495117 Tokens per Sec: 16377.729371378418
Epoch Step: 540 / 730 Loss: 3.89089298248291 Tokens per Sec: 19546.116019843972
Epoch Step: 545 / 730 Loss: 1.3591747283935547 Tokens per Sec: 18970.43498248044
Epoch Step: 550 / 730 Loss: 2.508141040802002 Tokens per Sec: 17572.94887381516
Epoch Step: 555 / 730 Loss: 6.967833995819092 Tokens per Sec: 15951.780813365547
Epoch Step: 560 / 730 Loss: 2.2503461837768555 Tokens per Sec: 14773.537984999275
Epoch Step: 565 / 730 Loss: 0.7464355230331421 Tokens per Sec: 14774.428063758734
Epoch Step: 570 / 730 Loss: 16.56777000427246 Tokens per Sec: 16656.10775534848
Epoch Step: 575 / 730 Loss: 5.500486373901367 Tokens per Sec: 20984.357033660308
Epoch Step: 580 / 730 Loss: 2.79235577583313 Tokens per Sec: 18261.0231120059
Epoch Step: 585 / 730 Loss: 2.015329599380493 Tokens per Sec: 17118.545755691808
Epoch Step: 590 / 730 Loss: 4.019558906555176 Tokens per Sec: 15746.32199304241
Epoch Step: 595 / 730 Loss: 1.0491433143615723 Tokens per Sec: 16285.297247302591
Epoch Step: 600 / 730 Loss: 2.6859140396118164 Tokens per Sec: 20369.99735927231
Epoch Step: 605 / 730 Loss: 0.46210533380508423 Tokens per Sec: 18205.75370527568
Epoch Step: 610 / 730 Loss: 5.156260967254639 Tokens per Sec: 15823.259601995018
Epoch Step: 615 / 730 Loss: 21.07569694519043 Tokens per Sec: 18779.124706413102
Epoch Step: 620 / 730 Loss: 2.0232317447662354 Tokens per Sec: 19983.978580274637
Epoch Step: 625 / 730 Loss: 2.1742842197418213 Tokens per Sec: 18762.940981175467
Epoch Step: 630 / 730 Loss: 1.1061077117919922 Tokens per Sec: 18894.705083937526
Epoch Step: 635 / 730 Loss: 1.880348801612854 Tokens per Sec: 15034.027859114833
Epoch Step: 640 / 730 Loss: 5.200636863708496 Tokens per Sec: 16516.698993027614
Epoch Step: 645 / 730 Loss: 5.3998212814331055 Tokens per Sec: 17275.330516908278
Epoch Step: 650 / 730 Loss: 2.674060821533203 Tokens per Sec: 14893.660555239549
Epoch Step: 655 / 730 Loss: 3.5356175899505615 Tokens per Sec: 16109.880738351852
Epoch Step: 660 / 730 Loss: 0.7317442297935486 Tokens per Sec: 16170.824414432693
Epoch Step: 665 / 730 Loss: 3.8880813121795654 Tokens per Sec: 19760.776835315544
Epoch Step: 670 / 730 Loss: 1.3109709024429321 Tokens per Sec: 17437.454964671935
Epoch Step: 675 / 730 Loss: 1.4860225915908813 Tokens per Sec: 15681.841799090815
Epoch Step: 680 / 730 Loss: 1.1913899183273315 Tokens per Sec: 20703.90250613474
Epoch Step: 685 / 730 Loss: 4.0977325439453125 Tokens per Sec: 17490.686758064152
Epoch Step: 690 / 730 Loss: 3.302410364151001 Tokens per Sec: 18619.855217337594
Epoch Step: 695 / 730 Loss: 0.7644999623298645 Tokens per Sec: 15459.722694412867
Epoch Step: 700 / 730 Loss: 3.60213565826416 Tokens per Sec: 17430.230909497568
Epoch Step: 705 / 730 Loss: 1.9820059537887573 Tokens per Sec: 14319.935753239724
Epoch Step: 710 / 730 Loss: 31.776609420776367 Tokens per Sec: 16203.597739012139
Epoch Step: 715 / 730 Loss: 2.1156156063079834 Tokens per Sec: 16126.03347978751
Epoch Step: 720 / 730 Loss: 3.311042547225952 Tokens per Sec: 15992.335210871695
Epoch Step: 725 / 730 Loss: 3.256923198699951 Tokens per Sec: 14259.271134312625
Epoch Step: 730 / 730 Loss: 3.437086820602417 Tokens per Sec: 12459.065097252711
Epoch ended with duration 0:01:20.120968
Train perplexity: 1.1457015313746468
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.333416
Validation perplexity: 1.2727145472546688
Epoch 40 / 1000
Epoch Step: 5 / 730 Loss: 4.671921253204346 Tokens per Sec: 16362.814981174055
Epoch Step: 10 / 730 Loss: 2.6786909103393555 Tokens per Sec: 16271.739861679653
Epoch Step: 15 / 730 Loss: 37.53350830078125 Tokens per Sec: 19963.276828204256
Epoch Step: 20 / 730 Loss: 6.832180023193359 Tokens per Sec: 17139.487985322037
Epoch Step: 25 / 730 Loss: 1.877877950668335 Tokens per Sec: 15826.165155578006
Epoch Step: 30 / 730 Loss: 2.786165714263916 Tokens per Sec: 16606.50624575177
Epoch Step: 35 / 730 Loss: 1.0482393503189087 Tokens per Sec: 18739.946319673807
Epoch Step: 40 / 730 Loss: 0.8062212467193604 Tokens per Sec: 16769.403717116136
Epoch Step: 45 / 730 Loss: 4.635257720947266 Tokens per Sec: 20443.19486619307
Epoch Step: 50 / 730 Loss: 1.3046931028366089 Tokens per Sec: 18282.195981056593
Epoch Step: 55 / 730 Loss: 1.967860221862793 Tokens per Sec: 14429.85655883547
Epoch Step: 60 / 730 Loss: 27.741792678833008 Tokens per Sec: 15844.77947202613
Epoch Step: 65 / 730 Loss: 2.4423744678497314 Tokens per Sec: 17322.853159794726
Epoch Step: 70 / 730 Loss: 4.96552848815918 Tokens per Sec: 19475.57027599611
Epoch Step: 75 / 730 Loss: 3.372885227203369 Tokens per Sec: 16890.627985621613
Epoch Step: 80 / 730 Loss: 2.998687267303467 Tokens per Sec: 16482.243538873743
Epoch Step: 85 / 730 Loss: 0.8023616075515747 Tokens per Sec: 18026.826002747188
Epoch Step: 90 / 730 Loss: 3.1581168174743652 Tokens per Sec: 16104.010892185517
Epoch Step: 95 / 730 Loss: 2.7860805988311768 Tokens per Sec: 15690.443609944059
Epoch Step: 100 / 730 Loss: 2.6672797203063965 Tokens per Sec: 17769.686495642592
Epoch Step: 105 / 730 Loss: 1.4115818738937378 Tokens per Sec: 17852.563333957904
Epoch Step: 110 / 730 Loss: 4.023406982421875 Tokens per Sec: 12358.888427757902
Epoch Step: 115 / 730 Loss: 2.583460569381714 Tokens per Sec: 20354.78577007056
Epoch Step: 120 / 730 Loss: 2.946570873260498 Tokens per Sec: 18922.492414260007
Epoch Step: 125 / 730 Loss: 0.80170077085495 Tokens per Sec: 17632.722364440306
Epoch Step: 130 / 730 Loss: 3.2149150371551514 Tokens per Sec: 15966.892334784161
Epoch Step: 135 / 730 Loss: 3.270003318786621 Tokens per Sec: 16290.28356267224
Epoch Step: 140 / 730 Loss: 3.074690818786621 Tokens per Sec: 19836.93265084112
Epoch Step: 145 / 730 Loss: 1.9958397150039673 Tokens per Sec: 16174.15196541768
Epoch Step: 150 / 730 Loss: 5.187774181365967 Tokens per Sec: 16269.705241376807
Epoch Step: 155 / 730 Loss: 1.465345025062561 Tokens per Sec: 17653.690577092748
Epoch Step: 160 / 730 Loss: 1.149125337600708 Tokens per Sec: 17214.939198027783
Epoch Step: 165 / 730 Loss: 0.798851728439331 Tokens per Sec: 16334.944258425852
Epoch Step: 170 / 730 Loss: 1.4526134729385376 Tokens per Sec: 16188.523666932957
Epoch Step: 175 / 730 Loss: 2.2626583576202393 Tokens per Sec: 16338.40453450129
Epoch Step: 180 / 730 Loss: 1.7958894968032837 Tokens per Sec: 18955.691454644555
Epoch Step: 185 / 730 Loss: 1.425612449645996 Tokens per Sec: 20482.58505550929
Epoch Step: 190 / 730 Loss: 1.9353539943695068 Tokens per Sec: 18182.191710680952
Epoch Step: 195 / 730 Loss: 2.6923747062683105 Tokens per Sec: 18136.875427229235
Epoch Step: 200 / 730 Loss: 0.8436462879180908 Tokens per Sec: 17951.53980533287
Epoch Step: 205 / 730 Loss: 1.9620484113693237 Tokens per Sec: 19399.26298084784
Epoch Step: 210 / 730 Loss: 2.1781883239746094 Tokens per Sec: 18558.51544782582
Epoch Step: 215 / 730 Loss: 2.5600969791412354 Tokens per Sec: 16969.3423802062
Epoch Step: 220 / 730 Loss: 0.676996111869812 Tokens per Sec: 16499.376796473087
Epoch Step: 225 / 730 Loss: 2.6024935245513916 Tokens per Sec: 15942.544794259593
Epoch Step: 230 / 730 Loss: 2.361056327819824 Tokens per Sec: 16594.79932055015
Epoch Step: 235 / 730 Loss: 5.519608497619629 Tokens per Sec: 19725.509830466373
Epoch Step: 240 / 730 Loss: 1.045357584953308 Tokens per Sec: 17577.95027501277
Epoch Step: 245 / 730 Loss: 0.9203231930732727 Tokens per Sec: 17121.075622245182
Epoch Step: 250 / 730 Loss: 1.0042095184326172 Tokens per Sec: 18681.83746274579
Epoch Step: 255 / 730 Loss: 0.18899737298488617 Tokens per Sec: 19325.453900519235
Epoch Step: 260 / 730 Loss: 2.245009422302246 Tokens per Sec: 14414.08230949577
Epoch Step: 265 / 730 Loss: 1.136655569076538 Tokens per Sec: 20267.358108918455
Epoch Step: 270 / 730 Loss: 0.4876677393913269 Tokens per Sec: 19567.85776010414
Epoch Step: 275 / 730 Loss: 1.1845306158065796 Tokens per Sec: 17763.100813895202
Epoch Step: 280 / 730 Loss: 2.137700080871582 Tokens per Sec: 18736.461406951308
Epoch Step: 285 / 730 Loss: 0.9384431838989258 Tokens per Sec: 15349.040481193451
Epoch Step: 290 / 730 Loss: 3.3098580837249756 Tokens per Sec: 15831.592218162197
Epoch Step: 295 / 730 Loss: 0.6852289438247681 Tokens per Sec: 15614.451049954649
Epoch Step: 300 / 730 Loss: 41.9332389831543 Tokens per Sec: 16016.766577242752
Epoch Step: 305 / 730 Loss: 4.977049827575684 Tokens per Sec: 15609.091574584478
Epoch Step: 310 / 730 Loss: 0.6658074855804443 Tokens per Sec: 20427.981021790987
Epoch Step: 315 / 730 Loss: 4.497527599334717 Tokens per Sec: 20562.465259303564
Epoch Step: 320 / 730 Loss: 4.348143577575684 Tokens per Sec: 16859.099489239692
Epoch Step: 325 / 730 Loss: 39.768577575683594 Tokens per Sec: 15628.76620593622
Epoch Step: 330 / 730 Loss: 3.3945538997650146 Tokens per Sec: 19457.313994882006
Epoch Step: 335 / 730 Loss: 0.48397666215896606 Tokens per Sec: 15879.874564694655
Epoch Step: 340 / 730 Loss: 0.8998442888259888 Tokens per Sec: 14179.258232159389
Epoch Step: 345 / 730 Loss: 1.7088570594787598 Tokens per Sec: 17827.149573433075
Epoch Step: 350 / 730 Loss: 2.317788600921631 Tokens per Sec: 20840.92324602052
Epoch Step: 355 / 730 Loss: 0.8846637010574341 Tokens per Sec: 16686.330314254068
Epoch Step: 360 / 730 Loss: 4.488927841186523 Tokens per Sec: 15363.225774963494
Epoch Step: 365 / 730 Loss: 2.4861128330230713 Tokens per Sec: 14740.588421273504
Epoch Step: 370 / 730 Loss: 3.8151557445526123 Tokens per Sec: 18926.828894491653
Epoch Step: 375 / 730 Loss: 2.2855210304260254 Tokens per Sec: 17118.53730957395
Epoch Step: 380 / 730 Loss: 29.608877182006836 Tokens per Sec: 17219.420601468897
Epoch Step: 385 / 730 Loss: 0.5998537540435791 Tokens per Sec: 17980.813683950364
Epoch Step: 390 / 730 Loss: 1.5894469022750854 Tokens per Sec: 16666.790469322943
Epoch Step: 395 / 730 Loss: 2.8508787155151367 Tokens per Sec: 18834.09915595737
Epoch Step: 400 / 730 Loss: 14.967451095581055 Tokens per Sec: 18484.36058410462
Epoch Step: 405 / 730 Loss: 2.1286730766296387 Tokens per Sec: 17297.52184223915
Epoch Step: 410 / 730 Loss: 2.0331552028656006 Tokens per Sec: 16402.489336559334
Epoch Step: 415 / 730 Loss: 2.303236246109009 Tokens per Sec: 17952.440596111916
Epoch Step: 420 / 730 Loss: 2.7161426544189453 Tokens per Sec: 13851.078175630118
Epoch Step: 425 / 730 Loss: 23.300006866455078 Tokens per Sec: 20214.700361629613
Epoch Step: 430 / 730 Loss: 2.0951831340789795 Tokens per Sec: 19240.85391688977
Epoch Step: 435 / 730 Loss: 4.958008766174316 Tokens per Sec: 20790.435715793614
Epoch Step: 440 / 730 Loss: 2.7080838680267334 Tokens per Sec: 15903.233444196523
Epoch Step: 445 / 730 Loss: 2.12772274017334 Tokens per Sec: 16113.268728989458
Epoch Step: 450 / 730 Loss: 0.6462411880493164 Tokens per Sec: 20311.737416853375
Epoch Step: 455 / 730 Loss: 7.237119674682617 Tokens per Sec: 19970.497380931298
Epoch Step: 460 / 730 Loss: 2.580214738845825 Tokens per Sec: 16862.347159994926
Epoch Step: 465 / 730 Loss: 0.9611345529556274 Tokens per Sec: 14970.32077059544
Epoch Step: 470 / 730 Loss: 0.8682008981704712 Tokens per Sec: 19261.325081602794
Epoch Step: 475 / 730 Loss: 2.863556385040283 Tokens per Sec: 18330.012081435234
Epoch Step: 480 / 730 Loss: 0.7253936529159546 Tokens per Sec: 15503.826753373838
Epoch Step: 485 / 730 Loss: 2.9453794956207275 Tokens per Sec: 21130.0372792711
Epoch Step: 490 / 730 Loss: 2.0977251529693604 Tokens per Sec: 15816.1481089101
Epoch Step: 495 / 730 Loss: 0.8320005536079407 Tokens per Sec: 16777.411654946412
Epoch Step: 500 / 730 Loss: 3.168438196182251 Tokens per Sec: 18906.61237467484
Epoch Step: 505 / 730 Loss: 2.3173022270202637 Tokens per Sec: 16503.495356131018
Epoch Step: 510 / 730 Loss: 1.8403139114379883 Tokens per Sec: 14850.399801737058
Epoch Step: 515 / 730 Loss: 3.559722900390625 Tokens per Sec: 18840.168433262363
Epoch Step: 520 / 730 Loss: 3.128093957901001 Tokens per Sec: 19040.103654536946
Epoch Step: 525 / 730 Loss: 1.7567001581192017 Tokens per Sec: 15027.447865869673
Epoch Step: 530 / 730 Loss: 0.8168772459030151 Tokens per Sec: 19137.604908508714
Epoch Step: 535 / 730 Loss: 2.1794958114624023 Tokens per Sec: 18399.692250881235
Epoch Step: 540 / 730 Loss: 2.8396289348602295 Tokens per Sec: 20087.48215920605
Epoch Step: 545 / 730 Loss: 2.5599758625030518 Tokens per Sec: 14812.43088681271
Epoch Step: 550 / 730 Loss: 1.6625665426254272 Tokens per Sec: 18535.75515487482
Epoch Step: 555 / 730 Loss: 3.091357946395874 Tokens per Sec: 18045.135599690482
Epoch Step: 560 / 730 Loss: 1.6674270629882812 Tokens per Sec: 15877.055381855353
Epoch Step: 565 / 730 Loss: 4.225291728973389 Tokens per Sec: 17266.295202917914
Epoch Step: 570 / 730 Loss: 1.2623480558395386 Tokens per Sec: 19620.333350355686
Epoch Step: 575 / 730 Loss: 39.284751892089844 Tokens per Sec: 19226.51697774324
Epoch Step: 580 / 730 Loss: 3.4699418544769287 Tokens per Sec: 18757.67298868305
Epoch Step: 585 / 730 Loss: 2.9965152740478516 Tokens per Sec: 19798.67948956706
Epoch Step: 590 / 730 Loss: 0.6834310293197632 Tokens per Sec: 16035.874167721804
Epoch Step: 595 / 730 Loss: 4.054391860961914 Tokens per Sec: 19349.952564331696
Epoch Step: 600 / 730 Loss: 0.7304815053939819 Tokens per Sec: 16675.508042607118
Epoch Step: 605 / 730 Loss: 3.547070026397705 Tokens per Sec: 18253.50300277389
Epoch Step: 610 / 730 Loss: 1.0242295265197754 Tokens per Sec: 16535.474638018175
Epoch Step: 615 / 730 Loss: 2.0017552375793457 Tokens per Sec: 20390.988773624573
Epoch Step: 620 / 730 Loss: 4.233366012573242 Tokens per Sec: 16060.623911560782
Epoch Step: 625 / 730 Loss: 3.2344937324523926 Tokens per Sec: 15765.274783108101
Epoch Step: 630 / 730 Loss: 2.061741352081299 Tokens per Sec: 12541.243242709123
Epoch Step: 635 / 730 Loss: 4.46535587310791 Tokens per Sec: 22284.66012897645
Epoch Step: 640 / 730 Loss: 7.861865997314453 Tokens per Sec: 17783.71249560361
Epoch Step: 645 / 730 Loss: 50.140201568603516 Tokens per Sec: 19307.21608992929
Epoch Step: 650 / 730 Loss: 0.8691920638084412 Tokens per Sec: 17830.69924276311
Epoch Step: 655 / 730 Loss: 2.30547833442688 Tokens per Sec: 18693.880272469523
Epoch Step: 660 / 730 Loss: 1.5264779329299927 Tokens per Sec: 17932.35046758077
Epoch Step: 665 / 730 Loss: 2.752281904220581 Tokens per Sec: 17411.236867402407
Epoch Step: 670 / 730 Loss: 2.120225191116333 Tokens per Sec: 21931.672280336763
Epoch Step: 675 / 730 Loss: 1.24420166015625 Tokens per Sec: 20162.66539834012
Epoch Step: 680 / 730 Loss: 1.2607080936431885 Tokens per Sec: 19584.488591182628
Epoch Step: 685 / 730 Loss: 1.072389841079712 Tokens per Sec: 17557.462041532464
Epoch Step: 690 / 730 Loss: 1.1226392984390259 Tokens per Sec: 14001.88774904871
Epoch Step: 695 / 730 Loss: 0.7802312970161438 Tokens per Sec: 15683.25967050033
Epoch Step: 700 / 730 Loss: 1.60535728931427 Tokens per Sec: 15837.962071686847
Epoch Step: 705 / 730 Loss: 2.8711657524108887 Tokens per Sec: 15970.72456677848
Epoch Step: 710 / 730 Loss: 0.9302136301994324 Tokens per Sec: 14256.397683190698
Epoch Step: 715 / 730 Loss: 1.5654728412628174 Tokens per Sec: 15217.018663358012
Epoch Step: 720 / 730 Loss: 2.54160737991333 Tokens per Sec: 16483.98035542235
Epoch Step: 725 / 730 Loss: 46.62889099121094 Tokens per Sec: 15322.802790859605
Epoch Step: 730 / 730 Loss: 2.6360461711883545 Tokens per Sec: 15191.236109038491
Epoch ended with duration 0:01:20.213473
Train perplexity: 1.1321427642428834
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > , java.lang.Object > message ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , message ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.296656
Validation perplexity: 1.2342145796597772
Model saved checkpoint!
Epoch 41 / 1000
Epoch Step: 5 / 730 Loss: 5.253763198852539 Tokens per Sec: 16268.444753130823
Epoch Step: 10 / 730 Loss: 5.111809253692627 Tokens per Sec: 17507.418506878028
Epoch Step: 15 / 730 Loss: 1.9190988540649414 Tokens per Sec: 18968.313568593694
Epoch Step: 20 / 730 Loss: 0.8378900289535522 Tokens per Sec: 17030.681766711885
Epoch Step: 25 / 730 Loss: 3.618861198425293 Tokens per Sec: 15940.932801786157
Epoch Step: 30 / 730 Loss: 3.912574052810669 Tokens per Sec: 14978.435783749612
Epoch Step: 35 / 730 Loss: 8.086108207702637 Tokens per Sec: 16972.170111763266
Epoch Step: 40 / 730 Loss: 0.662066638469696 Tokens per Sec: 18694.752463995217
Epoch Step: 45 / 730 Loss: 0.5697715878486633 Tokens per Sec: 20501.48969214603
Epoch Step: 50 / 730 Loss: 2.3101727962493896 Tokens per Sec: 19160.93350234977
Epoch Step: 55 / 730 Loss: 1.1393276453018188 Tokens per Sec: 17562.228367188916
Epoch Step: 60 / 730 Loss: 1.2021092176437378 Tokens per Sec: 15904.044662825743
Epoch Step: 65 / 730 Loss: 1.6173815727233887 Tokens per Sec: 17011.7218752542
Epoch Step: 70 / 730 Loss: 3.9850027561187744 Tokens per Sec: 17830.458419638682
Epoch Step: 75 / 730 Loss: 2.5342843532562256 Tokens per Sec: 15943.426238151877
Epoch Step: 80 / 730 Loss: 1.924858570098877 Tokens per Sec: 15411.86973635634
Epoch Step: 85 / 730 Loss: 3.3181886672973633 Tokens per Sec: 21648.691127998743
Epoch Step: 90 / 730 Loss: 1.7207529544830322 Tokens per Sec: 21335.104533568672
Epoch Step: 95 / 730 Loss: 40.79829025268555 Tokens per Sec: 15888.153150012931
Epoch Step: 100 / 730 Loss: 1.2355350255966187 Tokens per Sec: 14274.565035112186
Epoch Step: 105 / 730 Loss: 3.9431796073913574 Tokens per Sec: 14934.889502152302
Epoch Step: 110 / 730 Loss: 3.3510937690734863 Tokens per Sec: 19062.395336005495
Epoch Step: 115 / 730 Loss: 3.468930959701538 Tokens per Sec: 21908.802955015497
Epoch Step: 120 / 730 Loss: 2.984602451324463 Tokens per Sec: 18126.040626783626
Epoch Step: 125 / 730 Loss: 2.6612424850463867 Tokens per Sec: 17902.7108864177
Epoch Step: 130 / 730 Loss: 4.5961809158325195 Tokens per Sec: 17172.52181032031
Epoch Step: 135 / 730 Loss: 3.9562158584594727 Tokens per Sec: 18619.2556980756
Epoch Step: 140 / 730 Loss: 1.4424190521240234 Tokens per Sec: 19403.490781995824
Epoch Step: 145 / 730 Loss: 4.159449577331543 Tokens per Sec: 15382.762412398422
Epoch Step: 150 / 730 Loss: 4.1129631996154785 Tokens per Sec: 19478.924705233458
Epoch Step: 155 / 730 Loss: 3.620980978012085 Tokens per Sec: 18592.021928356742
Epoch Step: 160 / 730 Loss: 0.9962221384048462 Tokens per Sec: 19446.75032890412
Epoch Step: 165 / 730 Loss: 2.684387683868408 Tokens per Sec: 17929.405672784033
Epoch Step: 170 / 730 Loss: 2.0347867012023926 Tokens per Sec: 20681.36692371613
Epoch Step: 175 / 730 Loss: 1.3331564664840698 Tokens per Sec: 16970.295908492008
Epoch Step: 180 / 730 Loss: 0.644969642162323 Tokens per Sec: 15790.835814281132
Epoch Step: 185 / 730 Loss: 14.690266609191895 Tokens per Sec: 18366.483658527846
Epoch Step: 190 / 730 Loss: 0.6865255236625671 Tokens per Sec: 16273.985157702564
Epoch Step: 195 / 730 Loss: 6.744596004486084 Tokens per Sec: 15164.475499143393
Epoch Step: 200 / 730 Loss: 3.301819324493408 Tokens per Sec: 14465.99476628514
Epoch Step: 205 / 730 Loss: 1.3602654933929443 Tokens per Sec: 17248.202638650204
Epoch Step: 210 / 730 Loss: 3.1276865005493164 Tokens per Sec: 18955.21256302956
Epoch Step: 215 / 730 Loss: 2.2454190254211426 Tokens per Sec: 16715.018414046477
Epoch Step: 220 / 730 Loss: 3.5538034439086914 Tokens per Sec: 19021.215458088278
Epoch Step: 225 / 730 Loss: 3.6579768657684326 Tokens per Sec: 16916.972361908804
Epoch Step: 230 / 730 Loss: 7.213499069213867 Tokens per Sec: 15137.953249963575
Epoch Step: 235 / 730 Loss: 1.2560302019119263 Tokens per Sec: 16339.64442673352
Epoch Step: 240 / 730 Loss: 18.35807991027832 Tokens per Sec: 17434.49347635175
Epoch Step: 245 / 730 Loss: 4.745309352874756 Tokens per Sec: 15059.318813168422
Epoch Step: 250 / 730 Loss: 0.5917026996612549 Tokens per Sec: 19147.21582551357
Epoch Step: 255 / 730 Loss: 25.062776565551758 Tokens per Sec: 16163.46147143892
Epoch Step: 260 / 730 Loss: 5.484910488128662 Tokens per Sec: 17492.085091092224
Epoch Step: 265 / 730 Loss: 2.055457830429077 Tokens per Sec: 19443.141630002825
Epoch Step: 270 / 730 Loss: 1.6956895589828491 Tokens per Sec: 18099.294622883026
Epoch Step: 275 / 730 Loss: 5.448350429534912 Tokens per Sec: 18574.366879132802
Epoch Step: 280 / 730 Loss: 1.373652696609497 Tokens per Sec: 17126.581810486703
Epoch Step: 285 / 730 Loss: 1.3013120889663696 Tokens per Sec: 18718.859143572947
Epoch Step: 290 / 730 Loss: 1.2570915222167969 Tokens per Sec: 18507.56007955708
Epoch Step: 295 / 730 Loss: 0.8298925161361694 Tokens per Sec: 22380.144939858463
Epoch Step: 300 / 730 Loss: 2.575486660003662 Tokens per Sec: 15387.22285810071
Epoch Step: 305 / 730 Loss: 1.5754843950271606 Tokens per Sec: 17997.480324428696
Epoch Step: 310 / 730 Loss: 18.05845832824707 Tokens per Sec: 18980.302538660373
Epoch Step: 315 / 730 Loss: 2.8846194744110107 Tokens per Sec: 17513.14391576888
Epoch Step: 320 / 730 Loss: 0.9669626355171204 Tokens per Sec: 19879.7656829568
Epoch Step: 325 / 730 Loss: 3.022242546081543 Tokens per Sec: 16470.51246451796
Epoch Step: 330 / 730 Loss: 2.0985031127929688 Tokens per Sec: 16131.242485307379
Epoch Step: 335 / 730 Loss: 1.5393667221069336 Tokens per Sec: 15074.264840950409
Epoch Step: 340 / 730 Loss: 3.0304040908813477 Tokens per Sec: 18027.824545144817
Epoch Step: 345 / 730 Loss: 37.313621520996094 Tokens per Sec: 14158.676845625341
Epoch Step: 350 / 730 Loss: 1.0049718618392944 Tokens per Sec: 18396.645513415657
Epoch Step: 355 / 730 Loss: 33.5073127746582 Tokens per Sec: 17833.386351660054
Epoch Step: 360 / 730 Loss: 1.1252955198287964 Tokens per Sec: 14292.39019826757
Epoch Step: 365 / 730 Loss: 3.8108856678009033 Tokens per Sec: 18240.23133692229
Epoch Step: 370 / 730 Loss: 1.084995985031128 Tokens per Sec: 18849.32162913436
Epoch Step: 375 / 730 Loss: 2.5298101902008057 Tokens per Sec: 18155.042657693768
Epoch Step: 380 / 730 Loss: 3.110151529312134 Tokens per Sec: 17444.597396449703
Epoch Step: 385 / 730 Loss: 2.0260536670684814 Tokens per Sec: 17888.402809991734
Epoch Step: 390 / 730 Loss: 1.237697720527649 Tokens per Sec: 16955.69058049802
Epoch Step: 395 / 730 Loss: 0.6676580309867859 Tokens per Sec: 18104.152738474764
Epoch Step: 400 / 730 Loss: 4.142607688903809 Tokens per Sec: 20192.87766024405
Epoch Step: 405 / 730 Loss: 3.6401050090789795 Tokens per Sec: 20343.009850155962
Epoch Step: 410 / 730 Loss: 2.9226760864257812 Tokens per Sec: 16160.39070044033
Epoch Step: 415 / 730 Loss: 3.709873914718628 Tokens per Sec: 20060.421895770458
Epoch Step: 420 / 730 Loss: 1.995552897453308 Tokens per Sec: 18996.631201980188
Epoch Step: 425 / 730 Loss: 1.7982995510101318 Tokens per Sec: 19785.501351429422
Epoch Step: 430 / 730 Loss: 2.2389872074127197 Tokens per Sec: 15825.547148466427
Epoch Step: 435 / 730 Loss: 35.8481559753418 Tokens per Sec: 19232.28844885145
Epoch Step: 440 / 730 Loss: 0.42176011204719543 Tokens per Sec: 18892.363208173945
Epoch Step: 445 / 730 Loss: 3.666609048843384 Tokens per Sec: 17297.087781275775
Epoch Step: 450 / 730 Loss: 0.8723883628845215 Tokens per Sec: 16313.096692972376
Epoch Step: 455 / 730 Loss: 3.24835205078125 Tokens per Sec: 19934.253260877766
Epoch Step: 460 / 730 Loss: 0.96794593334198 Tokens per Sec: 14131.679697295896
Epoch Step: 465 / 730 Loss: 1.653342366218567 Tokens per Sec: 16321.312244241444
Epoch Step: 470 / 730 Loss: 1.5609405040740967 Tokens per Sec: 18596.891285901518
Epoch Step: 475 / 730 Loss: 3.1687753200531006 Tokens per Sec: 17561.189407967788
Epoch Step: 480 / 730 Loss: 11.065021514892578 Tokens per Sec: 12526.88362167354
Epoch Step: 485 / 730 Loss: 0.46187055110931396 Tokens per Sec: 16739.331295481054
Epoch Step: 490 / 730 Loss: 4.482175350189209 Tokens per Sec: 18499.93746486827
Epoch Step: 495 / 730 Loss: 3.669080972671509 Tokens per Sec: 19721.19834122045
Epoch Step: 500 / 730 Loss: 3.301004409790039 Tokens per Sec: 17658.930153830886
Epoch Step: 505 / 730 Loss: 2.291151762008667 Tokens per Sec: 15403.459613714647
Epoch Step: 510 / 730 Loss: 0.37889522314071655 Tokens per Sec: 19356.10908098237
Epoch Step: 515 / 730 Loss: 2.2405240535736084 Tokens per Sec: 18059.894917264894
Epoch Step: 520 / 730 Loss: 2.946598529815674 Tokens per Sec: 18049.475770962254
Epoch Step: 525 / 730 Loss: 5.25557279586792 Tokens per Sec: 17301.916166065737
Epoch Step: 530 / 730 Loss: 4.828481674194336 Tokens per Sec: 19067.72447820809
Epoch Step: 535 / 730 Loss: 0.6566365361213684 Tokens per Sec: 15710.41772102911
Epoch Step: 540 / 730 Loss: 2.2802958488464355 Tokens per Sec: 19401.098297582997
Epoch Step: 545 / 730 Loss: 3.324632406234741 Tokens per Sec: 16048.51638921485
Epoch Step: 550 / 730 Loss: 3.0735864639282227 Tokens per Sec: 20537.283774610594
Epoch Step: 555 / 730 Loss: 1.2556281089782715 Tokens per Sec: 16723.63708456149
Epoch Step: 560 / 730 Loss: 1.7850818634033203 Tokens per Sec: 20858.87615415241
Epoch Step: 565 / 730 Loss: 37.127479553222656 Tokens per Sec: 16523.096499545514
Epoch Step: 570 / 730 Loss: 0.5673493146896362 Tokens per Sec: 15850.880475865442
Epoch Step: 575 / 730 Loss: 3.019717216491699 Tokens per Sec: 20171.07753596058
Epoch Step: 580 / 730 Loss: 2.8550338745117188 Tokens per Sec: 14135.07883570896
Epoch Step: 585 / 730 Loss: 5.011724948883057 Tokens per Sec: 18613.255630913507
Epoch Step: 590 / 730 Loss: 0.9624897837638855 Tokens per Sec: 16825.932477183655
Epoch Step: 595 / 730 Loss: 1.7718948125839233 Tokens per Sec: 17390.16675974156
Epoch Step: 600 / 730 Loss: 2.163524627685547 Tokens per Sec: 16808.785837541625
Epoch Step: 605 / 730 Loss: 14.809237480163574 Tokens per Sec: 16520.33994674127
Epoch Step: 610 / 730 Loss: 1.9858030080795288 Tokens per Sec: 17749.674018848
Epoch Step: 615 / 730 Loss: 2.0566141605377197 Tokens per Sec: 19713.287562599842
Epoch Step: 620 / 730 Loss: 0.6802613735198975 Tokens per Sec: 16182.177377730117
Epoch Step: 625 / 730 Loss: 2.3143527507781982 Tokens per Sec: 13162.258701718576
Epoch Step: 630 / 730 Loss: 11.866737365722656 Tokens per Sec: 19460.756025643157
Epoch Step: 635 / 730 Loss: 4.222118377685547 Tokens per Sec: 16948.439181058704
Epoch Step: 640 / 730 Loss: 0.4689432382583618 Tokens per Sec: 18839.66228942345
Epoch Step: 645 / 730 Loss: 2.4618353843688965 Tokens per Sec: 19241.935827036872
Epoch Step: 650 / 730 Loss: 3.531742811203003 Tokens per Sec: 20081.236115554635
Epoch Step: 655 / 730 Loss: 0.723638653755188 Tokens per Sec: 16682.861395738364
Epoch Step: 660 / 730 Loss: 0.5340240001678467 Tokens per Sec: 16142.242575658347
Epoch Step: 665 / 730 Loss: 4.216803073883057 Tokens per Sec: 19953.6252132176
Epoch Step: 670 / 730 Loss: 2.9099411964416504 Tokens per Sec: 19317.44560024754
Epoch Step: 675 / 730 Loss: 2.3250834941864014 Tokens per Sec: 14786.773408563167
Epoch Step: 680 / 730 Loss: 5.685766696929932 Tokens per Sec: 19490.315376333805
Epoch Step: 685 / 730 Loss: 2.1219472885131836 Tokens per Sec: 16448.284116668212
Epoch Step: 690 / 730 Loss: 3.0519120693206787 Tokens per Sec: 17217.117470293626
Epoch Step: 695 / 730 Loss: 2.1487205028533936 Tokens per Sec: 17706.255629645184
Epoch Step: 700 / 730 Loss: 1.1773179769515991 Tokens per Sec: 18545.755820369188
Epoch Step: 705 / 730 Loss: 3.020914316177368 Tokens per Sec: 16584.803560424512
Epoch Step: 710 / 730 Loss: 1.933656930923462 Tokens per Sec: 14776.773046979955
Epoch Step: 715 / 730 Loss: 1.4939093589782715 Tokens per Sec: 16393.278618938693
Epoch Step: 720 / 730 Loss: 3.1131820678710938 Tokens per Sec: 15615.317208474129
Epoch Step: 725 / 730 Loss: 3.217771291732788 Tokens per Sec: 14700.789166018016
Epoch Step: 730 / 730 Loss: 2.889129877090454 Tokens per Sec: 14344.663281153422
Epoch ended with duration 0:01:19.835311
Train perplexity: 1.1534952933778906
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.304268
Validation perplexity: 1.2568326992170837
Epoch 42 / 1000
Epoch Step: 5 / 730 Loss: 2.2390167713165283 Tokens per Sec: 12550.569554267067
Epoch Step: 10 / 730 Loss: 0.4959278404712677 Tokens per Sec: 16552.51815892592
Epoch Step: 15 / 730 Loss: 2.327066421508789 Tokens per Sec: 21529.71897037802
Epoch Step: 20 / 730 Loss: 1.5030587911605835 Tokens per Sec: 14923.38343061877
Epoch Step: 25 / 730 Loss: 1.3765082359313965 Tokens per Sec: 16638.960904713713
Epoch Step: 30 / 730 Loss: 2.8914430141448975 Tokens per Sec: 18114.389056829437
Epoch Step: 35 / 730 Loss: 3.1925220489501953 Tokens per Sec: 20960.603382667894
Epoch Step: 40 / 730 Loss: 1.5749504566192627 Tokens per Sec: 20058.98739473578
Epoch Step: 45 / 730 Loss: 2.844528913497925 Tokens per Sec: 18190.622700138767
Epoch Step: 50 / 730 Loss: 2.139420747756958 Tokens per Sec: 18507.794684071978
Epoch Step: 55 / 730 Loss: 4.608518123626709 Tokens per Sec: 19163.315450047674
Epoch Step: 60 / 730 Loss: 0.3977015018463135 Tokens per Sec: 18297.06048327963
Epoch Step: 65 / 730 Loss: 2.2129268646240234 Tokens per Sec: 19506.785747222635
Epoch Step: 70 / 730 Loss: 3.093743085861206 Tokens per Sec: 19363.71115302529
Epoch Step: 75 / 730 Loss: 2.2002196311950684 Tokens per Sec: 15517.189719146298
Epoch Step: 80 / 730 Loss: 0.21785850822925568 Tokens per Sec: 16665.910457982594
Epoch Step: 85 / 730 Loss: 4.595077991485596 Tokens per Sec: 14812.491107415572
Epoch Step: 90 / 730 Loss: 0.46780267357826233 Tokens per Sec: 17440.183464476217
Epoch Step: 95 / 730 Loss: 1.9838484525680542 Tokens per Sec: 17293.21321011073
Epoch Step: 100 / 730 Loss: 1.8791402578353882 Tokens per Sec: 18841.486549725047
Epoch Step: 105 / 730 Loss: 0.7521848678588867 Tokens per Sec: 13932.297680220183
Epoch Step: 110 / 730 Loss: 1.6834248304367065 Tokens per Sec: 18904.294456254494
Epoch Step: 115 / 730 Loss: 2.305070161819458 Tokens per Sec: 19675.659097015192
Epoch Step: 120 / 730 Loss: 5.070155620574951 Tokens per Sec: 16489.63406018016
Epoch Step: 125 / 730 Loss: 2.769399881362915 Tokens per Sec: 18899.20693100994
Epoch Step: 130 / 730 Loss: 0.7343630194664001 Tokens per Sec: 19071.632000145062
Epoch Step: 135 / 730 Loss: 0.7688522338867188 Tokens per Sec: 16909.803537319745
Epoch Step: 140 / 730 Loss: 0.3834889531135559 Tokens per Sec: 17518.770811832885
Epoch Step: 145 / 730 Loss: 2.572385549545288 Tokens per Sec: 21107.47010084514
Epoch Step: 150 / 730 Loss: 0.6347917318344116 Tokens per Sec: 20706.540060971438
Epoch Step: 155 / 730 Loss: 2.050809860229492 Tokens per Sec: 15579.848657673676
Epoch Step: 160 / 730 Loss: 2.7005789279937744 Tokens per Sec: 18776.738800880757
Epoch Step: 165 / 730 Loss: 3.5812582969665527 Tokens per Sec: 17554.10293237527
Epoch Step: 170 / 730 Loss: 2.4286141395568848 Tokens per Sec: 13018.247681592833
Epoch Step: 175 / 730 Loss: 1.3443683385849 Tokens per Sec: 16886.99099291947
Epoch Step: 180 / 730 Loss: 10.607820510864258 Tokens per Sec: 18320.640960334527
Epoch Step: 185 / 730 Loss: 5.815095901489258 Tokens per Sec: 18266.068071241098
Epoch Step: 190 / 730 Loss: 3.273066997528076 Tokens per Sec: 21830.667147652606
Epoch Step: 195 / 730 Loss: 3.836915969848633 Tokens per Sec: 15592.995563336082
Epoch Step: 200 / 730 Loss: 6.284576892852783 Tokens per Sec: 19589.778039522498
Epoch Step: 205 / 730 Loss: 2.5032432079315186 Tokens per Sec: 18949.65253358397
Epoch Step: 210 / 730 Loss: 2.297593355178833 Tokens per Sec: 17731.6869703568
Epoch Step: 215 / 730 Loss: 3.5733377933502197 Tokens per Sec: 16305.429923979438
Epoch Step: 220 / 730 Loss: 1.6928352117538452 Tokens per Sec: 20432.838440156298
Epoch Step: 225 / 730 Loss: 1.7685866355895996 Tokens per Sec: 17050.14669990248
Epoch Step: 230 / 730 Loss: 16.88932991027832 Tokens per Sec: 17313.449002810656
Epoch Step: 235 / 730 Loss: 4.108497142791748 Tokens per Sec: 19129.97662870882
Epoch Step: 240 / 730 Loss: 0.6838636994361877 Tokens per Sec: 15291.93519747177
Epoch Step: 245 / 730 Loss: 1.811964511871338 Tokens per Sec: 21223.165839183406
Epoch Step: 250 / 730 Loss: 1.7440850734710693 Tokens per Sec: 16050.641356220127
Epoch Step: 255 / 730 Loss: 4.188958168029785 Tokens per Sec: 19817.84293445663
Epoch Step: 260 / 730 Loss: 3.0793302059173584 Tokens per Sec: 21049.68849402172
Epoch Step: 265 / 730 Loss: 3.1292879581451416 Tokens per Sec: 13985.020661318948
Epoch Step: 270 / 730 Loss: 2.84295916557312 Tokens per Sec: 16737.83913764722
Epoch Step: 275 / 730 Loss: 3.194105625152588 Tokens per Sec: 14617.351036043536
Epoch Step: 280 / 730 Loss: 14.03757381439209 Tokens per Sec: 19377.725702801574
Epoch Step: 285 / 730 Loss: 3.159822463989258 Tokens per Sec: 20499.498183788444
Epoch Step: 290 / 730 Loss: 3.576361894607544 Tokens per Sec: 16262.995246292345
Epoch Step: 295 / 730 Loss: 6.194618225097656 Tokens per Sec: 15690.738309622833
Epoch Step: 300 / 730 Loss: 2.5215024948120117 Tokens per Sec: 18106.911362410952
Epoch Step: 305 / 730 Loss: 2.9040684700012207 Tokens per Sec: 11750.273460618457
Epoch Step: 310 / 730 Loss: 0.6708813905715942 Tokens per Sec: 20353.863835552384
Epoch Step: 315 / 730 Loss: 2.608994722366333 Tokens per Sec: 20055.130500447078
Epoch Step: 320 / 730 Loss: 2.2943191528320312 Tokens per Sec: 18491.049948791006
Epoch Step: 325 / 730 Loss: 1.1172140836715698 Tokens per Sec: 16304.774353174162
Epoch Step: 330 / 730 Loss: 1.5961871147155762 Tokens per Sec: 15931.290972065306
Epoch Step: 335 / 730 Loss: 18.030704498291016 Tokens per Sec: 18612.890725400885
Epoch Step: 340 / 730 Loss: 4.313406467437744 Tokens per Sec: 17480.43994548441
Epoch Step: 345 / 730 Loss: 8.044341087341309 Tokens per Sec: 17127.165450459248
Epoch Step: 350 / 730 Loss: 1.269412636756897 Tokens per Sec: 16104.217655579645
Epoch Step: 355 / 730 Loss: 0.9544901847839355 Tokens per Sec: 17358.887048413013
Epoch Step: 360 / 730 Loss: 2.010690212249756 Tokens per Sec: 17466.588158892417
Epoch Step: 365 / 730 Loss: 2.258981227874756 Tokens per Sec: 15305.020411789888
Epoch Step: 370 / 730 Loss: 2.6671738624572754 Tokens per Sec: 16967.911550565645
Epoch Step: 375 / 730 Loss: 1.248194932937622 Tokens per Sec: 17103.34185834752
Epoch Step: 380 / 730 Loss: 2.740786075592041 Tokens per Sec: 17529.68300856864
Epoch Step: 385 / 730 Loss: 2.1242823600769043 Tokens per Sec: 20249.263681648008
Epoch Step: 390 / 730 Loss: 3.256676197052002 Tokens per Sec: 19212.26951345611
Epoch Step: 395 / 730 Loss: 2.789764404296875 Tokens per Sec: 18928.87106532062
Epoch Step: 400 / 730 Loss: 1.2232286930084229 Tokens per Sec: 20988.134810996875
Epoch Step: 405 / 730 Loss: 1.3677468299865723 Tokens per Sec: 16791.58630361373
Epoch Step: 410 / 730 Loss: 1.4021824598312378 Tokens per Sec: 20231.78691677155
Epoch Step: 415 / 730 Loss: 3.128141403198242 Tokens per Sec: 17980.43662440303
Epoch Step: 420 / 730 Loss: 2.1114401817321777 Tokens per Sec: 19033.121013370772
Epoch Step: 425 / 730 Loss: 5.0474114418029785 Tokens per Sec: 17928.67725757004
Epoch Step: 430 / 730 Loss: 2.8349907398223877 Tokens per Sec: 16122.35111905523
Epoch Step: 435 / 730 Loss: 0.6427125930786133 Tokens per Sec: 17422.88100211789
Epoch Step: 440 / 730 Loss: 4.268823623657227 Tokens per Sec: 18836.149183098965
Epoch Step: 445 / 730 Loss: 41.312477111816406 Tokens per Sec: 16126.25158005904
Epoch Step: 450 / 730 Loss: 1.4437532424926758 Tokens per Sec: 17749.328638135546
Epoch Step: 455 / 730 Loss: 1.0047969818115234 Tokens per Sec: 18562.072294554015
Epoch Step: 460 / 730 Loss: 5.50975227355957 Tokens per Sec: 19977.414314863538
Epoch Step: 465 / 730 Loss: 2.677061080932617 Tokens per Sec: 19227.804166764614
Epoch Step: 470 / 730 Loss: 2.4360992908477783 Tokens per Sec: 15757.313833076352
Epoch Step: 475 / 730 Loss: 1.05222749710083 Tokens per Sec: 15409.54978644504
Epoch Step: 480 / 730 Loss: 13.447417259216309 Tokens per Sec: 19047.110134219274
Epoch Step: 485 / 730 Loss: 0.7008485198020935 Tokens per Sec: 19239.40780884245
Epoch Step: 490 / 730 Loss: 1.5018672943115234 Tokens per Sec: 17659.254740241242
Epoch Step: 495 / 730 Loss: 2.102114677429199 Tokens per Sec: 15572.305997051548
Epoch Step: 500 / 730 Loss: 1.0490901470184326 Tokens per Sec: 16670.55688097515
Epoch Step: 505 / 730 Loss: 3.277747869491577 Tokens per Sec: 17835.48872760912
Epoch Step: 510 / 730 Loss: 2.0254716873168945 Tokens per Sec: 17501.3677712112
Epoch Step: 515 / 730 Loss: 1.0607366561889648 Tokens per Sec: 19716.396176353403
Epoch Step: 520 / 730 Loss: 10.966554641723633 Tokens per Sec: 17207.03166487441
Epoch Step: 525 / 730 Loss: 1.0592925548553467 Tokens per Sec: 16931.43406077951
Epoch Step: 530 / 730 Loss: 5.279726028442383 Tokens per Sec: 18672.9598938123
Epoch Step: 535 / 730 Loss: 3.8936984539031982 Tokens per Sec: 15717.342471225102
Epoch Step: 540 / 730 Loss: 1.1687346696853638 Tokens per Sec: 16973.245885278728
Epoch Step: 545 / 730 Loss: 1.8446440696716309 Tokens per Sec: 19714.126237858247
Epoch Step: 550 / 730 Loss: 3.9648804664611816 Tokens per Sec: 19256.249690247947
Epoch Step: 555 / 730 Loss: 2.6713216304779053 Tokens per Sec: 18675.27383394785
Epoch Step: 560 / 730 Loss: 1.436937689781189 Tokens per Sec: 20269.57977672477
Epoch Step: 565 / 730 Loss: 1.6061196327209473 Tokens per Sec: 16430.555365660508
Epoch Step: 570 / 730 Loss: 2.5665340423583984 Tokens per Sec: 13619.028501650215
Epoch Step: 575 / 730 Loss: 23.414304733276367 Tokens per Sec: 17179.478998913917
Epoch Step: 580 / 730 Loss: 2.210587978363037 Tokens per Sec: 17469.78468015229
Epoch Step: 585 / 730 Loss: 3.1680657863616943 Tokens per Sec: 16578.42172163262
Epoch Step: 590 / 730 Loss: 4.293905258178711 Tokens per Sec: 17668.423115760925
Epoch Step: 595 / 730 Loss: 2.4094810485839844 Tokens per Sec: 20109.329098913782
Epoch Step: 600 / 730 Loss: 0.8574880361557007 Tokens per Sec: 18142.566880280036
Epoch Step: 605 / 730 Loss: 4.177096366882324 Tokens per Sec: 17234.71540686223
Epoch Step: 610 / 730 Loss: 1.8155913352966309 Tokens per Sec: 19290.13623992652
Epoch Step: 615 / 730 Loss: 5.5447258949279785 Tokens per Sec: 17824.884708430698
Epoch Step: 620 / 730 Loss: 2.9645707607269287 Tokens per Sec: 15803.633139278036
Epoch Step: 625 / 730 Loss: 0.5576266646385193 Tokens per Sec: 16314.26266266896
Epoch Step: 630 / 730 Loss: 2.774306297302246 Tokens per Sec: 20078.40241253158
Epoch Step: 635 / 730 Loss: 0.8229674696922302 Tokens per Sec: 20664.488718920704
Epoch Step: 640 / 730 Loss: 8.400965690612793 Tokens per Sec: 17756.30076934784
Epoch Step: 645 / 730 Loss: 0.5787121057510376 Tokens per Sec: 18713.987003638016
Epoch Step: 650 / 730 Loss: 3.576901912689209 Tokens per Sec: 18896.014419119987
Epoch Step: 655 / 730 Loss: 1.2168364524841309 Tokens per Sec: 19063.007578080367
Epoch Step: 660 / 730 Loss: 5.9121856689453125 Tokens per Sec: 18013.467345530134
Epoch Step: 665 / 730 Loss: 12.124113082885742 Tokens per Sec: 16262.868700413963
Epoch Step: 670 / 730 Loss: 4.418234825134277 Tokens per Sec: 15629.268877526998
Epoch Step: 675 / 730 Loss: 2.33436918258667 Tokens per Sec: 17732.6629774777
Epoch Step: 680 / 730 Loss: 4.505664825439453 Tokens per Sec: 17903.972251143277
Epoch Step: 685 / 730 Loss: 0.4071250557899475 Tokens per Sec: 18118.430327323033
Epoch Step: 690 / 730 Loss: 3.817577362060547 Tokens per Sec: 15423.759113883214
Epoch Step: 695 / 730 Loss: 2.0812134742736816 Tokens per Sec: 16854.518733489283
Epoch Step: 700 / 730 Loss: 0.6631200909614563 Tokens per Sec: 15448.256598735588
Epoch Step: 705 / 730 Loss: 2.974644660949707 Tokens per Sec: 12726.16756594202
Epoch Step: 710 / 730 Loss: 1.8207004070281982 Tokens per Sec: 13836.648332354709
Epoch Step: 715 / 730 Loss: 1.9517337083816528 Tokens per Sec: 14782.704154774598
Epoch Step: 720 / 730 Loss: 2.5109755992889404 Tokens per Sec: 15544.594033597079
Epoch Step: 725 / 730 Loss: 3.377148389816284 Tokens per Sec: 16688.24528213526
Epoch Step: 730 / 730 Loss: 1.6623573303222656 Tokens per Sec: 15773.053859891961
Epoch ended with duration 0:01:19.564609
Train perplexity: 1.1389933786766593
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > , java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.309802
Validation perplexity: 1.2915727143046107
Epoch 43 / 1000
Epoch Step: 5 / 730 Loss: 3.574861764907837 Tokens per Sec: 16299.17112849226
Epoch Step: 10 / 730 Loss: 2.556640148162842 Tokens per Sec: 18554.63333452589
Epoch Step: 15 / 730 Loss: 1.458648443222046 Tokens per Sec: 14063.3288919447
Epoch Step: 20 / 730 Loss: 0.6106747984886169 Tokens per Sec: 18097.76576676514
Epoch Step: 25 / 730 Loss: 4.705094337463379 Tokens per Sec: 16708.186134456413
Epoch Step: 30 / 730 Loss: 1.2178263664245605 Tokens per Sec: 21006.746629636673
Epoch Step: 35 / 730 Loss: 1.660386323928833 Tokens per Sec: 18128.45316401125
Epoch Step: 40 / 730 Loss: 0.7793472409248352 Tokens per Sec: 15273.817213654558
Epoch Step: 45 / 730 Loss: 0.5465723872184753 Tokens per Sec: 17759.281630260622
Epoch Step: 50 / 730 Loss: 2.671839475631714 Tokens per Sec: 20328.71676088479
Epoch Step: 55 / 730 Loss: 0.4248148202896118 Tokens per Sec: 18326.08006073176
Epoch Step: 60 / 730 Loss: 0.4737139940261841 Tokens per Sec: 18571.797674081176
Epoch Step: 65 / 730 Loss: 45.49471664428711 Tokens per Sec: 19661.20201185975
Epoch Step: 70 / 730 Loss: 1.040089726448059 Tokens per Sec: 18643.00662992969
Epoch Step: 75 / 730 Loss: 2.0646114349365234 Tokens per Sec: 17045.79205188054
Epoch Step: 80 / 730 Loss: 2.3844621181488037 Tokens per Sec: 16699.993926483854
Epoch Step: 85 / 730 Loss: 2.535703659057617 Tokens per Sec: 16371.66503514911
Epoch Step: 90 / 730 Loss: 56.494415283203125 Tokens per Sec: 19284.233756899088
Epoch Step: 95 / 730 Loss: 0.7915538549423218 Tokens per Sec: 15006.114864650846
Epoch Step: 100 / 730 Loss: 1.2924909591674805 Tokens per Sec: 18572.20352156942
Epoch Step: 105 / 730 Loss: 0.9836655855178833 Tokens per Sec: 13829.45777104065
Epoch Step: 110 / 730 Loss: 2.0091795921325684 Tokens per Sec: 17268.241383753997
Epoch Step: 115 / 730 Loss: 1.5893012285232544 Tokens per Sec: 20760.31602804643
Epoch Step: 120 / 730 Loss: 3.468674898147583 Tokens per Sec: 15445.899253006308
Epoch Step: 125 / 730 Loss: 1.8216462135314941 Tokens per Sec: 14462.67517223532
Epoch Step: 130 / 730 Loss: 3.1084165573120117 Tokens per Sec: 17728.42084782721
Epoch Step: 135 / 730 Loss: 3.3811326026916504 Tokens per Sec: 19269.69213550567
Epoch Step: 140 / 730 Loss: 37.646217346191406 Tokens per Sec: 20685.769497993053
Epoch Step: 145 / 730 Loss: 2.9862303733825684 Tokens per Sec: 15202.623683379312
Epoch Step: 150 / 730 Loss: 0.48867958784103394 Tokens per Sec: 18715.416205273876
Epoch Step: 155 / 730 Loss: 3.4732346534729004 Tokens per Sec: 19361.89797921944
Epoch Step: 160 / 730 Loss: 3.2021498680114746 Tokens per Sec: 18380.662455915055
Epoch Step: 165 / 730 Loss: 1.3369914293289185 Tokens per Sec: 19868.147972510647
Epoch Step: 170 / 730 Loss: 0.7696607708930969 Tokens per Sec: 13289.834188656727
Epoch Step: 175 / 730 Loss: 0.9113807082176208 Tokens per Sec: 17629.71362269508
Epoch Step: 180 / 730 Loss: 0.31123054027557373 Tokens per Sec: 19758.872286233574
Epoch Step: 185 / 730 Loss: 0.5937398076057434 Tokens per Sec: 20351.13884586421
Epoch Step: 190 / 730 Loss: 0.9270044565200806 Tokens per Sec: 17582.784761962146
Epoch Step: 195 / 730 Loss: 0.6864413022994995 Tokens per Sec: 15844.398222489084
Epoch Step: 200 / 730 Loss: 1.7990552186965942 Tokens per Sec: 16967.414642196123
Epoch Step: 205 / 730 Loss: 1.7303543090820312 Tokens per Sec: 16271.171575672912
Epoch Step: 210 / 730 Loss: 1.2422066926956177 Tokens per Sec: 18099.283080558293
Epoch Step: 215 / 730 Loss: 4.125694274902344 Tokens per Sec: 17058.85400583455
Epoch Step: 220 / 730 Loss: 0.7786418199539185 Tokens per Sec: 17093.09750511055
Epoch Step: 225 / 730 Loss: 3.557965040206909 Tokens per Sec: 16161.340986968402
Epoch Step: 230 / 730 Loss: 46.32380294799805 Tokens per Sec: 17930.154890564463
Epoch Step: 235 / 730 Loss: 1.454270362854004 Tokens per Sec: 12967.08857905241
Epoch Step: 240 / 730 Loss: 3.9555068016052246 Tokens per Sec: 16417.64305366704
Epoch Step: 245 / 730 Loss: 1.6165961027145386 Tokens per Sec: 17408.100792933317
Epoch Step: 250 / 730 Loss: 0.4737294018268585 Tokens per Sec: 15732.855736832586
Epoch Step: 255 / 730 Loss: 1.1197654008865356 Tokens per Sec: 21845.537494182274
Epoch Step: 260 / 730 Loss: 5.787322044372559 Tokens per Sec: 21387.669133425406
Epoch Step: 265 / 730 Loss: 2.3710811138153076 Tokens per Sec: 19583.683217870515
Epoch Step: 270 / 730 Loss: 11.921056747436523 Tokens per Sec: 14238.291644429224
Epoch Step: 275 / 730 Loss: 1.4705629348754883 Tokens per Sec: 16259.718246115852
Epoch Step: 280 / 730 Loss: 1.0947128534317017 Tokens per Sec: 13930.328251942254
Epoch Step: 285 / 730 Loss: 2.9701457023620605 Tokens per Sec: 18312.674418182323
Epoch Step: 290 / 730 Loss: 2.312591314315796 Tokens per Sec: 18061.00879881928
Epoch Step: 295 / 730 Loss: 1.2341487407684326 Tokens per Sec: 21062.87751792715
Epoch Step: 300 / 730 Loss: 1.6588096618652344 Tokens per Sec: 18815.41382459808
Epoch Step: 305 / 730 Loss: 3.731705904006958 Tokens per Sec: 17998.136985819252
Epoch Step: 310 / 730 Loss: 1.7918189764022827 Tokens per Sec: 17461.732222497823
Epoch Step: 315 / 730 Loss: 1.9773249626159668 Tokens per Sec: 14864.387787492355
Epoch Step: 320 / 730 Loss: 0.8346171975135803 Tokens per Sec: 19521.81046944327
Epoch Step: 325 / 730 Loss: 3.2312138080596924 Tokens per Sec: 15104.194075321015
Epoch Step: 330 / 730 Loss: 1.8092544078826904 Tokens per Sec: 16683.16079895939
Epoch Step: 335 / 730 Loss: 1.5434414148330688 Tokens per Sec: 18594.944457192338
Epoch Step: 340 / 730 Loss: 1.0749834775924683 Tokens per Sec: 20860.62392773456
Epoch Step: 345 / 730 Loss: 2.1505024433135986 Tokens per Sec: 16586.207047334025
Epoch Step: 350 / 730 Loss: 3.603414535522461 Tokens per Sec: 18619.867046399006
Epoch Step: 355 / 730 Loss: 1.0415452718734741 Tokens per Sec: 19689.20301599578
Epoch Step: 360 / 730 Loss: 11.660216331481934 Tokens per Sec: 17361.665910269883
Epoch Step: 365 / 730 Loss: 3.615954637527466 Tokens per Sec: 17725.256560446218
Epoch Step: 370 / 730 Loss: 2.4348180294036865 Tokens per Sec: 16809.76653289477
Epoch Step: 375 / 730 Loss: 3.2621817588806152 Tokens per Sec: 14707.207931950541
Epoch Step: 380 / 730 Loss: 1.5370675325393677 Tokens per Sec: 19772.718313122135
Epoch Step: 385 / 730 Loss: 0.7010710835456848 Tokens per Sec: 17572.898930033312
Epoch Step: 390 / 730 Loss: 4.091179847717285 Tokens per Sec: 19248.399653484714
Epoch Step: 395 / 730 Loss: 3.7312397956848145 Tokens per Sec: 17086.734354974324
Epoch Step: 400 / 730 Loss: 2.2473654747009277 Tokens per Sec: 17447.923464484724
Epoch Step: 405 / 730 Loss: 5.1825079917907715 Tokens per Sec: 18497.501015314236
Epoch Step: 410 / 730 Loss: 2.5105772018432617 Tokens per Sec: 16909.882968000984
Epoch Step: 415 / 730 Loss: 1.1004135608673096 Tokens per Sec: 19613.1582269393
Epoch Step: 420 / 730 Loss: 1.2984304428100586 Tokens per Sec: 17568.014428515304
Epoch Step: 425 / 730 Loss: 0.9221240282058716 Tokens per Sec: 16858.109591371696
Epoch Step: 430 / 730 Loss: 0.5544049143791199 Tokens per Sec: 17686.252168454557
Epoch Step: 435 / 730 Loss: 1.8685444593429565 Tokens per Sec: 16444.621963191523
Epoch Step: 440 / 730 Loss: 0.588882327079773 Tokens per Sec: 20067.283476587283
Epoch Step: 445 / 730 Loss: 1.8435205221176147 Tokens per Sec: 13271.580416348674
Epoch Step: 450 / 730 Loss: 2.1400938034057617 Tokens per Sec: 16785.28623123654
Epoch Step: 455 / 730 Loss: 0.6888832449913025 Tokens per Sec: 18172.10228941603
Epoch Step: 460 / 730 Loss: 0.7048484683036804 Tokens per Sec: 17525.425400739827
Epoch Step: 465 / 730 Loss: 4.956322193145752 Tokens per Sec: 17948.04706906152
Epoch Step: 470 / 730 Loss: 1.581987738609314 Tokens per Sec: 19818.801116221588
Epoch Step: 475 / 730 Loss: 0.6042748689651489 Tokens per Sec: 15360.771855970595
Epoch Step: 480 / 730 Loss: 2.06158185005188 Tokens per Sec: 17630.739092851756
Epoch Step: 485 / 730 Loss: 0.3630930781364441 Tokens per Sec: 18595.63966720236
Epoch Step: 490 / 730 Loss: 2.033855438232422 Tokens per Sec: 20110.565561499498
Epoch Step: 495 / 730 Loss: 2.3970131874084473 Tokens per Sec: 15933.159896546214
Epoch Step: 500 / 730 Loss: 3.20352840423584 Tokens per Sec: 19278.841578700958
Epoch Step: 505 / 730 Loss: 3.6017544269561768 Tokens per Sec: 17067.420945537087
Epoch Step: 510 / 730 Loss: 1.2733476161956787 Tokens per Sec: 16625.075366953522
Epoch Step: 515 / 730 Loss: 0.7147265672683716 Tokens per Sec: 19952.559593721286
Epoch Step: 520 / 730 Loss: 0.5428299307823181 Tokens per Sec: 16812.101254719622
Epoch Step: 525 / 730 Loss: 1.4288520812988281 Tokens per Sec: 18027.63608737531
Epoch Step: 530 / 730 Loss: 0.32548660039901733 Tokens per Sec: 18619.01885489802
Epoch Step: 535 / 730 Loss: 3.0178940296173096 Tokens per Sec: 19034.243153574145
Epoch Step: 540 / 730 Loss: 1.9774330854415894 Tokens per Sec: 16514.33651869546
Epoch Step: 545 / 730 Loss: 3.2803735733032227 Tokens per Sec: 19964.865718298748
Epoch Step: 550 / 730 Loss: 0.8759605884552002 Tokens per Sec: 14409.039319434329
Epoch Step: 555 / 730 Loss: 2.823521137237549 Tokens per Sec: 17645.035462180644
Epoch Step: 560 / 730 Loss: 0.9964739084243774 Tokens per Sec: 15669.318465552824
Epoch Step: 565 / 730 Loss: 1.0723991394042969 Tokens per Sec: 15437.694275500991
Epoch Step: 570 / 730 Loss: 9.681622505187988 Tokens per Sec: 18463.89806995814
Epoch Step: 575 / 730 Loss: 3.106261968612671 Tokens per Sec: 18110.024906973606
Epoch Step: 580 / 730 Loss: 3.155806064605713 Tokens per Sec: 19174.70243558311
Epoch Step: 585 / 730 Loss: 1.379865050315857 Tokens per Sec: 16544.432684144776
Epoch Step: 590 / 730 Loss: 2.729586124420166 Tokens per Sec: 16069.832162763021
Epoch Step: 595 / 730 Loss: 3.055185556411743 Tokens per Sec: 17185.922030304184
Epoch Step: 600 / 730 Loss: 1.9881975650787354 Tokens per Sec: 20344.903079326054
Epoch Step: 605 / 730 Loss: 0.7249208688735962 Tokens per Sec: 16428.44588278967
Epoch Step: 610 / 730 Loss: 0.8511375188827515 Tokens per Sec: 17332.98686024707
Epoch Step: 615 / 730 Loss: 0.6539406776428223 Tokens per Sec: 18611.913239248894
Epoch Step: 620 / 730 Loss: 1.4575726985931396 Tokens per Sec: 19301.686845857283
Epoch Step: 625 / 730 Loss: 1.9312220811843872 Tokens per Sec: 20116.446174244593
Epoch Step: 630 / 730 Loss: 1.0766898393630981 Tokens per Sec: 14876.195612531643
Epoch Step: 635 / 730 Loss: 1.1249057054519653 Tokens per Sec: 17995.848248431532
Epoch Step: 640 / 730 Loss: 2.510383367538452 Tokens per Sec: 17052.34438418256
Epoch Step: 645 / 730 Loss: 0.6990572810173035 Tokens per Sec: 20495.23772950918
Epoch Step: 650 / 730 Loss: 0.8011781573295593 Tokens per Sec: 18883.48296854842
Epoch Step: 655 / 730 Loss: 1.0115329027175903 Tokens per Sec: 18010.324636069814
Epoch Step: 660 / 730 Loss: 1.537871241569519 Tokens per Sec: 18836.832330930683
Epoch Step: 665 / 730 Loss: 3.986541509628296 Tokens per Sec: 16282.492735436686
Epoch Step: 670 / 730 Loss: 4.323606491088867 Tokens per Sec: 16170.369411653888
Epoch Step: 675 / 730 Loss: 3.5848710536956787 Tokens per Sec: 18676.975001371542
Epoch Step: 680 / 730 Loss: 1.8525538444519043 Tokens per Sec: 17155.61828448448
Epoch Step: 685 / 730 Loss: 1.1195440292358398 Tokens per Sec: 15734.539670963239
Epoch Step: 690 / 730 Loss: 1.0107672214508057 Tokens per Sec: 18478.514707615803
Epoch Step: 695 / 730 Loss: 47.063777923583984 Tokens per Sec: 14719.446947749513
Epoch Step: 700 / 730 Loss: 1.291472315788269 Tokens per Sec: 17812.20620739616
Epoch Step: 705 / 730 Loss: 3.2951979637145996 Tokens per Sec: 16230.456495761699
Epoch Step: 710 / 730 Loss: 1.912394642829895 Tokens per Sec: 14490.260218150543
Epoch Step: 715 / 730 Loss: 2.594989776611328 Tokens per Sec: 16075.829074141175
Epoch Step: 720 / 730 Loss: 1.4253965616226196 Tokens per Sec: 14950.5065074066
Epoch Step: 725 / 730 Loss: 0.6304861903190613 Tokens per Sec: 12944.082060648661
Epoch Step: 730 / 730 Loss: 44.88576126098633 Tokens per Sec: 15247.810798803517
Epoch ended with duration 0:01:20.108803
Train perplexity: 1.1223218836018911
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String time , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.282778
Validation perplexity: 1.213448318203703
Epoch 44 / 1000
Epoch Step: 5 / 730 Loss: 4.198757171630859 Tokens per Sec: 15151.925190586477
Epoch Step: 10 / 730 Loss: 2.095289945602417 Tokens per Sec: 17171.344165407685
Epoch Step: 15 / 730 Loss: 22.908138275146484 Tokens per Sec: 16960.67237956911
Epoch Step: 20 / 730 Loss: 0.6938063502311707 Tokens per Sec: 17670.29157728755
Epoch Step: 25 / 730 Loss: 0.8995116949081421 Tokens per Sec: 18615.932272877093
Epoch Step: 30 / 730 Loss: 1.4257032871246338 Tokens per Sec: 17572.221679903236
Epoch Step: 35 / 730 Loss: 2.063843011856079 Tokens per Sec: 20804.63345513124
Epoch Step: 40 / 730 Loss: 1.6099597215652466 Tokens per Sec: 19818.863380694864
Epoch Step: 45 / 730 Loss: 3.14609694480896 Tokens per Sec: 16483.608167761533
Epoch Step: 50 / 730 Loss: 1.4163873195648193 Tokens per Sec: 14799.714011521055
Epoch Step: 55 / 730 Loss: 4.7155280113220215 Tokens per Sec: 15521.294936145852
Epoch Step: 60 / 730 Loss: 1.0491312742233276 Tokens per Sec: 18795.610930884697
Epoch Step: 65 / 730 Loss: 0.5203027129173279 Tokens per Sec: 20214.36191401506
Epoch Step: 70 / 730 Loss: 2.0484941005706787 Tokens per Sec: 20117.4247192013
Epoch Step: 75 / 730 Loss: 1.4649893045425415 Tokens per Sec: 19608.51008246682
Epoch Step: 80 / 730 Loss: 0.681906521320343 Tokens per Sec: 13812.62649167431
Epoch Step: 85 / 730 Loss: 3.5493998527526855 Tokens per Sec: 15052.432267620281
Epoch Step: 90 / 730 Loss: 3.3929460048675537 Tokens per Sec: 17450.345500724132
Epoch Step: 95 / 730 Loss: 2.024308204650879 Tokens per Sec: 18370.19561177165
Epoch Step: 100 / 730 Loss: 20.686016082763672 Tokens per Sec: 15416.505962573832
Epoch Step: 105 / 730 Loss: 1.1464450359344482 Tokens per Sec: 15412.04106888364
Epoch Step: 110 / 730 Loss: 1.0570459365844727 Tokens per Sec: 16271.796991605199
Epoch Step: 115 / 730 Loss: 2.9536898136138916 Tokens per Sec: 14962.550123009663
Epoch Step: 120 / 730 Loss: 2.148064136505127 Tokens per Sec: 18793.075633123124
Epoch Step: 125 / 730 Loss: 4.176095962524414 Tokens per Sec: 17742.73445559402
Epoch Step: 130 / 730 Loss: 0.830329418182373 Tokens per Sec: 20487.794105595636
Epoch Step: 135 / 730 Loss: 0.6679739356040955 Tokens per Sec: 16299.791038252126
Epoch Step: 140 / 730 Loss: 3.2343411445617676 Tokens per Sec: 21060.890592632823
Epoch Step: 145 / 730 Loss: 2.4463486671447754 Tokens per Sec: 14397.029919524479
Epoch Step: 150 / 730 Loss: 3.7417056560516357 Tokens per Sec: 20049.96642970986
Epoch Step: 155 / 730 Loss: 13.557451248168945 Tokens per Sec: 20428.474886284497
Epoch Step: 160 / 730 Loss: 2.4943158626556396 Tokens per Sec: 11320.013076367506
Epoch Step: 165 / 730 Loss: 2.1898818016052246 Tokens per Sec: 15858.731153997636
Epoch Step: 170 / 730 Loss: 3.899557590484619 Tokens per Sec: 20888.234717988573
Epoch Step: 175 / 730 Loss: 0.20286698639392853 Tokens per Sec: 17620.96211058097
Epoch Step: 180 / 730 Loss: 61.358978271484375 Tokens per Sec: 17546.090171683572
Epoch Step: 185 / 730 Loss: 3.6804850101470947 Tokens per Sec: 16920.321037012785
Epoch Step: 190 / 730 Loss: 2.2321348190307617 Tokens per Sec: 17669.64781957426
Epoch Step: 195 / 730 Loss: 3.5303187370300293 Tokens per Sec: 20614.741139657985
Epoch Step: 200 / 730 Loss: 0.45309361815452576 Tokens per Sec: 18007.71877513134
Epoch Step: 205 / 730 Loss: 4.860692501068115 Tokens per Sec: 20258.17459244035
Epoch Step: 210 / 730 Loss: 3.41432785987854 Tokens per Sec: 19135.992698083643
Epoch Step: 215 / 730 Loss: 4.497291564941406 Tokens per Sec: 16380.64843781963
Epoch Step: 220 / 730 Loss: 1.989782452583313 Tokens per Sec: 17671.5334830022
Epoch Step: 225 / 730 Loss: 0.617769718170166 Tokens per Sec: 14948.850935177741
Epoch Step: 230 / 730 Loss: 3.9703402519226074 Tokens per Sec: 20450.010901701913
Epoch Step: 235 / 730 Loss: 1.6729832887649536 Tokens per Sec: 17582.00487953814
Epoch Step: 240 / 730 Loss: 2.4742610454559326 Tokens per Sec: 18263.05791546234
Epoch Step: 245 / 730 Loss: 1.7354215383529663 Tokens per Sec: 18879.778668276886
Epoch Step: 250 / 730 Loss: 1.8462727069854736 Tokens per Sec: 17368.68914417567
Epoch Step: 255 / 730 Loss: 0.7763590216636658 Tokens per Sec: 15279.520525274946
Epoch Step: 260 / 730 Loss: 1.661222219467163 Tokens per Sec: 15383.157716674656
Epoch Step: 265 / 730 Loss: 3.5167465209960938 Tokens per Sec: 19055.09601402714
Epoch Step: 270 / 730 Loss: 2.0678796768188477 Tokens per Sec: 17028.52814104394
Epoch Step: 275 / 730 Loss: 36.113773345947266 Tokens per Sec: 16536.274663023665
Epoch Step: 280 / 730 Loss: 1.3311012983322144 Tokens per Sec: 21009.676675521085
Epoch Step: 285 / 730 Loss: 2.1342649459838867 Tokens per Sec: 16649.85150609935
Epoch Step: 290 / 730 Loss: 0.2956013083457947 Tokens per Sec: 18041.559008596854
Epoch Step: 295 / 730 Loss: 1.7059364318847656 Tokens per Sec: 14477.577265304875
Epoch Step: 300 / 730 Loss: 3.4945907592773438 Tokens per Sec: 17602.685158393615
Epoch Step: 305 / 730 Loss: 2.3206489086151123 Tokens per Sec: 17189.32517068864
Epoch Step: 310 / 730 Loss: 1.0207606554031372 Tokens per Sec: 18385.1010803587
Epoch Step: 315 / 730 Loss: 1.143540382385254 Tokens per Sec: 16657.83187952863
Epoch Step: 320 / 730 Loss: 2.059424638748169 Tokens per Sec: 21397.65097362048
Epoch Step: 325 / 730 Loss: 3.991611957550049 Tokens per Sec: 18108.324184318953
Epoch Step: 330 / 730 Loss: 2.0705394744873047 Tokens per Sec: 16825.73251300651
Epoch Step: 335 / 730 Loss: 2.7653162479400635 Tokens per Sec: 16222.11287451489
Epoch Step: 340 / 730 Loss: 2.7987024784088135 Tokens per Sec: 15427.648454357426
Epoch Step: 345 / 730 Loss: 1.213496446609497 Tokens per Sec: 16322.104622984125
Epoch Step: 350 / 730 Loss: 2.000009536743164 Tokens per Sec: 18860.479305671255
Epoch Step: 355 / 730 Loss: 2.3164191246032715 Tokens per Sec: 15081.019622971837
Epoch Step: 360 / 730 Loss: 0.8902379870414734 Tokens per Sec: 18311.781615200227
Epoch Step: 365 / 730 Loss: 3.4576802253723145 Tokens per Sec: 20226.91673744571
Epoch Step: 370 / 730 Loss: 1.2329750061035156 Tokens per Sec: 17652.943303565706
Epoch Step: 375 / 730 Loss: 3.649132251739502 Tokens per Sec: 17684.495664143473
Epoch Step: 380 / 730 Loss: 2.28235125541687 Tokens per Sec: 19970.569029703394
Epoch Step: 385 / 730 Loss: 3.36434268951416 Tokens per Sec: 18073.446137592367
Epoch Step: 390 / 730 Loss: 3.4477884769439697 Tokens per Sec: 13621.108635711922
Epoch Step: 395 / 730 Loss: 1.4364806413650513 Tokens per Sec: 16502.566628403107
Epoch Step: 400 / 730 Loss: 1.4107950925827026 Tokens per Sec: 19590.49380251971
Epoch Step: 405 / 730 Loss: 0.721831202507019 Tokens per Sec: 17196.372641653925
Epoch Step: 410 / 730 Loss: 39.77524185180664 Tokens per Sec: 16119.8587871388
Epoch Step: 415 / 730 Loss: 1.3628122806549072 Tokens per Sec: 16238.28211830593
Epoch Step: 420 / 730 Loss: 2.5526962280273438 Tokens per Sec: 18907.641723972203
Epoch Step: 425 / 730 Loss: 3.0205953121185303 Tokens per Sec: 22109.21502734519
Epoch Step: 430 / 730 Loss: 3.9415690898895264 Tokens per Sec: 14402.169542245289
Epoch Step: 435 / 730 Loss: 3.462127923965454 Tokens per Sec: 17079.266433879584
Epoch Step: 440 / 730 Loss: 1.7909598350524902 Tokens per Sec: 14116.093859881012
Epoch Step: 445 / 730 Loss: 1.440828561782837 Tokens per Sec: 15358.518167003454
Epoch Step: 450 / 730 Loss: 4.3084893226623535 Tokens per Sec: 14744.67930636128
Epoch Step: 455 / 730 Loss: 0.7490984201431274 Tokens per Sec: 19104.842815224474
Epoch Step: 460 / 730 Loss: 1.7339361906051636 Tokens per Sec: 18203.479690892942
Epoch Step: 465 / 730 Loss: 1.1568772792816162 Tokens per Sec: 19103.309479885218
Epoch Step: 470 / 730 Loss: 0.9059367775917053 Tokens per Sec: 19853.252540942314
Epoch Step: 475 / 730 Loss: 1.3173925876617432 Tokens per Sec: 20138.60750343679
Epoch Step: 480 / 730 Loss: 2.68542742729187 Tokens per Sec: 19911.977641319216
Epoch Step: 485 / 730 Loss: 2.090566873550415 Tokens per Sec: 17558.829218320338
Epoch Step: 490 / 730 Loss: 13.259364128112793 Tokens per Sec: 17517.17107475693
Epoch Step: 495 / 730 Loss: 4.336128234863281 Tokens per Sec: 16847.05515454524
Epoch Step: 500 / 730 Loss: 3.568225145339966 Tokens per Sec: 18976.24090740378
Epoch Step: 505 / 730 Loss: 1.4240199327468872 Tokens per Sec: 17270.724236012007
Epoch Step: 510 / 730 Loss: 1.9699788093566895 Tokens per Sec: 17357.9968976536
Epoch Step: 515 / 730 Loss: 1.1432819366455078 Tokens per Sec: 19406.16134883447
Epoch Step: 520 / 730 Loss: 1.20160973072052 Tokens per Sec: 18562.029451796527
Epoch Step: 525 / 730 Loss: 0.7140201926231384 Tokens per Sec: 20662.699731188848
Epoch Step: 530 / 730 Loss: 2.2776196002960205 Tokens per Sec: 16373.955766905363
Epoch Step: 535 / 730 Loss: 2.69411563873291 Tokens per Sec: 16314.625641828632
Epoch Step: 540 / 730 Loss: 0.4554848372936249 Tokens per Sec: 18991.79042694646
Epoch Step: 545 / 730 Loss: 3.7161145210266113 Tokens per Sec: 15198.798914092537
Epoch Step: 550 / 730 Loss: 0.9606832265853882 Tokens per Sec: 19394.696312685966
Epoch Step: 555 / 730 Loss: 2.407386541366577 Tokens per Sec: 18034.69905420526
Epoch Step: 560 / 730 Loss: 9.811483383178711 Tokens per Sec: 14916.798226343122
Epoch Step: 565 / 730 Loss: 1.0065672397613525 Tokens per Sec: 20047.665925961082
Epoch Step: 570 / 730 Loss: 0.9213413596153259 Tokens per Sec: 18315.698088445402
Epoch Step: 575 / 730 Loss: 1.7251408100128174 Tokens per Sec: 19584.477349093657
Epoch Step: 580 / 730 Loss: 0.49556446075439453 Tokens per Sec: 15940.589168502996
Epoch Step: 585 / 730 Loss: 1.995671272277832 Tokens per Sec: 17239.53756189929
Epoch Step: 590 / 730 Loss: 4.1797261238098145 Tokens per Sec: 17231.523389400623
Epoch Step: 595 / 730 Loss: 2.4085264205932617 Tokens per Sec: 14602.95536411883
Epoch Step: 600 / 730 Loss: 2.4194958209991455 Tokens per Sec: 17972.161907356043
Epoch Step: 605 / 730 Loss: 1.9539353847503662 Tokens per Sec: 17896.725246325062
Epoch Step: 610 / 730 Loss: 1.18061101436615 Tokens per Sec: 16970.494789970526
Epoch Step: 615 / 730 Loss: 2.4029459953308105 Tokens per Sec: 18363.847075538528
Epoch Step: 620 / 730 Loss: 0.5687269568443298 Tokens per Sec: 19654.652263741576
Epoch Step: 625 / 730 Loss: 0.3629249632358551 Tokens per Sec: 19083.862550174697
Epoch Step: 630 / 730 Loss: 2.607018232345581 Tokens per Sec: 16772.08337490769
Epoch Step: 635 / 730 Loss: 22.908536911010742 Tokens per Sec: 16320.729588703929
Epoch Step: 640 / 730 Loss: 3.264132022857666 Tokens per Sec: 19121.88921407403
Epoch Step: 645 / 730 Loss: 1.2502593994140625 Tokens per Sec: 18239.803350823324
Epoch Step: 650 / 730 Loss: 37.83769226074219 Tokens per Sec: 19679.279967773495
Epoch Step: 655 / 730 Loss: 3.2064156532287598 Tokens per Sec: 14860.279138357233
Epoch Step: 660 / 730 Loss: 1.254622220993042 Tokens per Sec: 16998.475255073132
Epoch Step: 665 / 730 Loss: 4.1666693687438965 Tokens per Sec: 17641.412786286895
Epoch Step: 670 / 730 Loss: 0.8164092302322388 Tokens per Sec: 17783.58963176132
Epoch Step: 675 / 730 Loss: 0.9515984058380127 Tokens per Sec: 21585.359762680313
Epoch Step: 680 / 730 Loss: 1.692044734954834 Tokens per Sec: 13669.736683112602
Epoch Step: 685 / 730 Loss: 2.9726383686065674 Tokens per Sec: 18285.336631162518
Epoch Step: 690 / 730 Loss: 2.9993865489959717 Tokens per Sec: 16010.233640355938
Epoch Step: 695 / 730 Loss: 2.89422607421875 Tokens per Sec: 16891.969484476038
Epoch Step: 700 / 730 Loss: 0.5939443707466125 Tokens per Sec: 17224.69993975958
Epoch Step: 705 / 730 Loss: 17.391408920288086 Tokens per Sec: 15355.959583282409
Epoch Step: 710 / 730 Loss: 0.9479093551635742 Tokens per Sec: 14839.327803278074
Epoch Step: 715 / 730 Loss: 1.5630443096160889 Tokens per Sec: 16494.28691544793
Epoch Step: 720 / 730 Loss: 2.0972518920898438 Tokens per Sec: 16113.707848782296
Epoch Step: 725 / 730 Loss: 25.598230361938477 Tokens per Sec: 14489.876832322014
Epoch Step: 730 / 730 Loss: 1.0074223279953003 Tokens per Sec: 12687.304027878508
Epoch ended with duration 0:01:20.094425
Train perplexity: 1.1334359221783223
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > , java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , message ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; }[0m
Epoch ended with duration 0:00:03.350095
Validation perplexity: 1.241080042890869
Epoch 45 / 1000
Epoch Step: 5 / 730 Loss: 0.6845489144325256 Tokens per Sec: 14144.038025108517
Epoch Step: 10 / 730 Loss: 4.9658098220825195 Tokens per Sec: 16737.896754923942
Epoch Step: 15 / 730 Loss: 0.6236504316329956 Tokens per Sec: 17626.404542609405
Epoch Step: 20 / 730 Loss: 1.4841822385787964 Tokens per Sec: 14346.848064602727
Epoch Step: 25 / 730 Loss: 0.9223314523696899 Tokens per Sec: 18399.162679586705
Epoch Step: 30 / 730 Loss: 2.979095935821533 Tokens per Sec: 19061.209585483568
Epoch Step: 35 / 730 Loss: 2.462524652481079 Tokens per Sec: 17879.675197367927
Epoch Step: 40 / 730 Loss: 3.282684326171875 Tokens per Sec: 18466.637139160208
Epoch Step: 45 / 730 Loss: 3.1634902954101562 Tokens per Sec: 19900.558173702364
Epoch Step: 50 / 730 Loss: 3.321446180343628 Tokens per Sec: 16455.555178932274
Epoch Step: 55 / 730 Loss: 0.7386839389801025 Tokens per Sec: 19176.760449674985
Epoch Step: 60 / 730 Loss: 1.8497871160507202 Tokens per Sec: 19157.313316005737
Epoch Step: 65 / 730 Loss: 1.7965272665023804 Tokens per Sec: 15640.555798157651
Epoch Step: 70 / 730 Loss: 3.730356216430664 Tokens per Sec: 15126.779510242335
Epoch Step: 75 / 730 Loss: 3.0852599143981934 Tokens per Sec: 18277.768976070427
Epoch Step: 80 / 730 Loss: 0.7843706607818604 Tokens per Sec: 20173.13544046038
Epoch Step: 85 / 730 Loss: 1.4310836791992188 Tokens per Sec: 16582.160330815244
Epoch Step: 90 / 730 Loss: 2.535348892211914 Tokens per Sec: 18774.773177887215
Epoch Step: 95 / 730 Loss: 3.2434616088867188 Tokens per Sec: 16628.32669127127
Epoch Step: 100 / 730 Loss: 3.46111798286438 Tokens per Sec: 17310.960085654322
Epoch Step: 105 / 730 Loss: 0.9500545263290405 Tokens per Sec: 11826.772611448709
Epoch Step: 110 / 730 Loss: 2.182281494140625 Tokens per Sec: 19030.03939247631
Epoch Step: 115 / 730 Loss: 1.1703879833221436 Tokens per Sec: 19954.865661129632
Epoch Step: 120 / 730 Loss: 2.077185869216919 Tokens per Sec: 19720.191887740446
Epoch Step: 125 / 730 Loss: 0.7242550253868103 Tokens per Sec: 14819.776831768277
Epoch Step: 130 / 730 Loss: 2.6250369548797607 Tokens per Sec: 18106.82378903233
Epoch Step: 135 / 730 Loss: 0.8714994788169861 Tokens per Sec: 18096.964054132757
Epoch Step: 140 / 730 Loss: 2.3904781341552734 Tokens per Sec: 16617.95092567724
Epoch Step: 145 / 730 Loss: 3.8009703159332275 Tokens per Sec: 20227.317035612698
Epoch Step: 150 / 730 Loss: 2.525728225708008 Tokens per Sec: 19007.9601939475
Epoch Step: 155 / 730 Loss: 0.5721915364265442 Tokens per Sec: 17341.556277913576
Epoch Step: 160 / 730 Loss: 2.0651628971099854 Tokens per Sec: 20299.824535673753
Epoch Step: 165 / 730 Loss: 6.273656368255615 Tokens per Sec: 17826.017060267724
Epoch Step: 170 / 730 Loss: 4.099432468414307 Tokens per Sec: 18434.93354221654
Epoch Step: 175 / 730 Loss: 3.59059476852417 Tokens per Sec: 15114.7387911781
Epoch Step: 180 / 730 Loss: 1.6609996557235718 Tokens per Sec: 17070.82799804501
Epoch Step: 185 / 730 Loss: 0.3913593888282776 Tokens per Sec: 18882.981364442
Epoch Step: 190 / 730 Loss: 2.6024787425994873 Tokens per Sec: 16717.11025981499
Epoch Step: 195 / 730 Loss: 3.917764663696289 Tokens per Sec: 16863.501778968075
Epoch Step: 200 / 730 Loss: 1.161993145942688 Tokens per Sec: 16773.520443624184
Epoch Step: 205 / 730 Loss: 1.6163761615753174 Tokens per Sec: 17107.92421224672
Epoch Step: 210 / 730 Loss: 2.9130496978759766 Tokens per Sec: 16874.12015956342
Epoch Step: 215 / 730 Loss: 0.45765602588653564 Tokens per Sec: 18776.58784013579
Epoch Step: 220 / 730 Loss: 0.8263468146324158 Tokens per Sec: 16302.982965883191
Epoch Step: 225 / 730 Loss: 1.962449073791504 Tokens per Sec: 17291.44654567304
Epoch Step: 230 / 730 Loss: 10.216499328613281 Tokens per Sec: 15484.51779850887
Epoch Step: 235 / 730 Loss: 1.681908130645752 Tokens per Sec: 16126.961804194276
Epoch Step: 240 / 730 Loss: 0.9578251242637634 Tokens per Sec: 18174.73547762873
Epoch Step: 245 / 730 Loss: 1.8254252672195435 Tokens per Sec: 21151.602092118294
Epoch Step: 250 / 730 Loss: 1.5543040037155151 Tokens per Sec: 17366.8649155189
Epoch Step: 255 / 730 Loss: 3.427180528640747 Tokens per Sec: 20185.278229167205
Epoch Step: 260 / 730 Loss: 1.9140582084655762 Tokens per Sec: 19968.20595573736
Epoch Step: 265 / 730 Loss: 2.0401201248168945 Tokens per Sec: 19281.283255134855
Epoch Step: 270 / 730 Loss: 0.9579159021377563 Tokens per Sec: 16349.418573693947
Epoch Step: 275 / 730 Loss: 0.4307876527309418 Tokens per Sec: 15026.953999086685
Epoch Step: 280 / 730 Loss: 3.069382667541504 Tokens per Sec: 17625.949942697087
Epoch Step: 285 / 730 Loss: 2.404143810272217 Tokens per Sec: 17774.867916100087
Epoch Step: 290 / 730 Loss: 0.7327221035957336 Tokens per Sec: 16151.341657583162
Epoch Step: 295 / 730 Loss: 2.385566473007202 Tokens per Sec: 17772.474576271186
Epoch Step: 300 / 730 Loss: 1.9228214025497437 Tokens per Sec: 18581.589185581124
Epoch Step: 305 / 730 Loss: 2.982174873352051 Tokens per Sec: 18606.35571904863
Epoch Step: 310 / 730 Loss: 0.6838129162788391 Tokens per Sec: 17851.579885593397
Epoch Step: 315 / 730 Loss: 2.3270952701568604 Tokens per Sec: 16939.688790108125
Epoch Step: 320 / 730 Loss: 1.6647496223449707 Tokens per Sec: 16510.94742858523
Epoch Step: 325 / 730 Loss: 1.872780442237854 Tokens per Sec: 16501.664877154268
Epoch Step: 330 / 730 Loss: 1.23152756690979 Tokens per Sec: 16440.53603803826
Epoch Step: 335 / 730 Loss: 2.3155112266540527 Tokens per Sec: 14300.741357039135
Epoch Step: 340 / 730 Loss: 2.0345523357391357 Tokens per Sec: 19037.196808827135
Epoch Step: 345 / 730 Loss: 2.902369737625122 Tokens per Sec: 18057.843469291554
Epoch Step: 350 / 730 Loss: 18.85959815979004 Tokens per Sec: 17890.19638758455
Epoch Step: 355 / 730 Loss: 0.9651091694831848 Tokens per Sec: 20517.194158294675
Epoch Step: 360 / 730 Loss: 14.269437789916992 Tokens per Sec: 16243.961488319865
Epoch Step: 365 / 730 Loss: 0.4995187819004059 Tokens per Sec: 15541.505284052708
Epoch Step: 370 / 730 Loss: 2.091590166091919 Tokens per Sec: 19400.579672060045
Epoch Step: 375 / 730 Loss: 2.6012349128723145 Tokens per Sec: 16832.566052785925
Epoch Step: 380 / 730 Loss: 3.122523546218872 Tokens per Sec: 16564.902745730382
Epoch Step: 385 / 730 Loss: 0.926398515701294 Tokens per Sec: 18192.770610431595
Epoch Step: 390 / 730 Loss: 1.4884144067764282 Tokens per Sec: 19153.518662490093
Epoch Step: 395 / 730 Loss: 2.355231285095215 Tokens per Sec: 19596.626139491706
Epoch Step: 400 / 730 Loss: 1.2937268018722534 Tokens per Sec: 19406.675800014335
Epoch Step: 405 / 730 Loss: 1.3105995655059814 Tokens per Sec: 17868.458142185955
Epoch Step: 410 / 730 Loss: 0.986041784286499 Tokens per Sec: 17110.315048643442
Epoch Step: 415 / 730 Loss: 1.1493566036224365 Tokens per Sec: 19961.875580787753
Epoch Step: 420 / 730 Loss: 1.553702712059021 Tokens per Sec: 16551.885006508917
Epoch Step: 425 / 730 Loss: 2.6979458332061768 Tokens per Sec: 15615.225161385388
Epoch Step: 430 / 730 Loss: 0.25556308031082153 Tokens per Sec: 13006.40147749794
Epoch Step: 435 / 730 Loss: 0.960192084312439 Tokens per Sec: 18551.422338614037
Epoch Step: 440 / 730 Loss: 1.198318600654602 Tokens per Sec: 17456.757371761792
Epoch Step: 445 / 730 Loss: 2.691289186477661 Tokens per Sec: 17722.774242004085
Epoch Step: 450 / 730 Loss: 0.996570885181427 Tokens per Sec: 18410.50423797456
Epoch Step: 455 / 730 Loss: 2.253922939300537 Tokens per Sec: 16750.370504332932
Epoch Step: 460 / 730 Loss: 1.3116202354431152 Tokens per Sec: 15975.084352428237
Epoch Step: 465 / 730 Loss: 1.6805516481399536 Tokens per Sec: 16383.986738510526
Epoch Step: 470 / 730 Loss: 3.2879650592803955 Tokens per Sec: 18646.44344887594
Epoch Step: 475 / 730 Loss: 3.1620514392852783 Tokens per Sec: 19664.680144457892
Epoch Step: 480 / 730 Loss: 0.6422280669212341 Tokens per Sec: 18839.93991536762
Epoch Step: 485 / 730 Loss: 0.8893454074859619 Tokens per Sec: 16193.127310902984
Epoch Step: 490 / 730 Loss: 1.1951570510864258 Tokens per Sec: 18116.04967800722
Epoch Step: 495 / 730 Loss: 2.2599680423736572 Tokens per Sec: 19199.468410996225
Epoch Step: 500 / 730 Loss: 3.394792318344116 Tokens per Sec: 20128.3282197579
Epoch Step: 505 / 730 Loss: 0.6669709086418152 Tokens per Sec: 19092.00472117963
Epoch Step: 510 / 730 Loss: 1.9138762950897217 Tokens per Sec: 15112.67219342863
Epoch Step: 515 / 730 Loss: 1.8194669485092163 Tokens per Sec: 17360.807020416247
Epoch Step: 520 / 730 Loss: 0.7028493285179138 Tokens per Sec: 19309.93751454598
Epoch Step: 525 / 730 Loss: 1.7852261066436768 Tokens per Sec: 17341.15775877048
Epoch Step: 530 / 730 Loss: 0.5659062266349792 Tokens per Sec: 20837.97606657545
Epoch Step: 535 / 730 Loss: 17.734642028808594 Tokens per Sec: 18041.480296435715
Epoch Step: 540 / 730 Loss: 18.749465942382812 Tokens per Sec: 13254.730169451896
Epoch Step: 545 / 730 Loss: 9.678234100341797 Tokens per Sec: 15620.48523558659
Epoch Step: 550 / 730 Loss: 2.09482479095459 Tokens per Sec: 17675.31102871252
Epoch Step: 555 / 730 Loss: 24.676090240478516 Tokens per Sec: 16899.157925020674
Epoch Step: 560 / 730 Loss: 3.7205305099487305 Tokens per Sec: 20563.220801534913
Epoch Step: 565 / 730 Loss: 2.0546321868896484 Tokens per Sec: 19364.173125884015
Epoch Step: 570 / 730 Loss: 1.280316710472107 Tokens per Sec: 16256.295290634656
Epoch Step: 575 / 730 Loss: 0.8381391763687134 Tokens per Sec: 20643.420095792546
Epoch Step: 580 / 730 Loss: 3.4722487926483154 Tokens per Sec: 17714.30176125544
Epoch Step: 585 / 730 Loss: 1.566030740737915 Tokens per Sec: 17371.28481035516
Epoch Step: 590 / 730 Loss: 1.0905380249023438 Tokens per Sec: 18103.07877480605
Epoch Step: 595 / 730 Loss: 1.4144675731658936 Tokens per Sec: 14977.949028186044
Epoch Step: 600 / 730 Loss: 0.45680660009384155 Tokens per Sec: 16105.430815044763
Epoch Step: 605 / 730 Loss: 0.6035822033882141 Tokens per Sec: 16098.023923122071
Epoch Step: 610 / 730 Loss: 3.1038382053375244 Tokens per Sec: 16646.574881453238
Epoch Step: 615 / 730 Loss: 5.225135803222656 Tokens per Sec: 16704.591629683793
Epoch Step: 620 / 730 Loss: 4.129965782165527 Tokens per Sec: 18142.80700148829
Epoch Step: 625 / 730 Loss: 2.253920555114746 Tokens per Sec: 19320.81961133663
Epoch Step: 630 / 730 Loss: 2.1362411975860596 Tokens per Sec: 18311.40806699608
Epoch Step: 635 / 730 Loss: 0.6639364957809448 Tokens per Sec: 17482.531079677578
Epoch Step: 640 / 730 Loss: 1.6960699558258057 Tokens per Sec: 15665.173429537857
Epoch Step: 645 / 730 Loss: 1.2970621585845947 Tokens per Sec: 19262.782206571774
Epoch Step: 650 / 730 Loss: 1.26167893409729 Tokens per Sec: 17154.570556698804
Epoch Step: 655 / 730 Loss: 0.571946918964386 Tokens per Sec: 16364.507438423589
Epoch Step: 660 / 730 Loss: 0.725788414478302 Tokens per Sec: 19880.96549481284
Epoch Step: 665 / 730 Loss: 1.1968940496444702 Tokens per Sec: 16149.258847681509
Epoch Step: 670 / 730 Loss: 3.817528009414673 Tokens per Sec: 19710.874785034037
Epoch Step: 675 / 730 Loss: 3.703594923019409 Tokens per Sec: 18619.16102051903
Epoch Step: 680 / 730 Loss: 3.19431209564209 Tokens per Sec: 17679.477596320474
Epoch Step: 685 / 730 Loss: 3.2539050579071045 Tokens per Sec: 18594.331900381392
Epoch Step: 690 / 730 Loss: 1.6943074464797974 Tokens per Sec: 16889.823896468937
Epoch Step: 695 / 730 Loss: 1.5020642280578613 Tokens per Sec: 15370.503772763448
Epoch Step: 700 / 730 Loss: 0.7443121671676636 Tokens per Sec: 19472.55435446147
Epoch Step: 705 / 730 Loss: 3.176110029220581 Tokens per Sec: 15146.30488852598
Epoch Step: 710 / 730 Loss: 2.7390756607055664 Tokens per Sec: 16125.302635668362
Epoch Step: 715 / 730 Loss: 0.986009955406189 Tokens per Sec: 12523.519778000431
Epoch Step: 720 / 730 Loss: 22.925260543823242 Tokens per Sec: 16570.957542472206
Epoch Step: 725 / 730 Loss: 12.514128684997559 Tokens per Sec: 16168.882948565144
Epoch Step: 730 / 730 Loss: 2.5734200477600098 Tokens per Sec: 15261.577362375265
Epoch ended with duration 0:01:19.949622
Train perplexity: 1.1156915961618938
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ java.util.Map < java.lang.String > , java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.291662
Validation perplexity: 1.2012150765249172
Model saved checkpoint!
Epoch 46 / 1000
Epoch Step: 5 / 730 Loss: 1.7901513576507568 Tokens per Sec: 13918.181463885221
Epoch Step: 10 / 730 Loss: 2.717388153076172 Tokens per Sec: 14369.952905736936
Epoch Step: 15 / 730 Loss: 2.774341583251953 Tokens per Sec: 17081.375532250557
Epoch Step: 20 / 730 Loss: 0.7596147656440735 Tokens per Sec: 19831.889577559134
Epoch Step: 25 / 730 Loss: 3.0407586097717285 Tokens per Sec: 16222.062513152254
Epoch Step: 30 / 730 Loss: 0.42753446102142334 Tokens per Sec: 17609.746963652
Epoch Step: 35 / 730 Loss: 4.906828880310059 Tokens per Sec: 18505.505620052496
Epoch Step: 40 / 730 Loss: 1.3454174995422363 Tokens per Sec: 15971.103599288786
Epoch Step: 45 / 730 Loss: 1.802913784980774 Tokens per Sec: 19049.59994818105
Epoch Step: 50 / 730 Loss: 1.7338017225265503 Tokens per Sec: 18777.75654204961
Epoch Step: 55 / 730 Loss: 1.7147468328475952 Tokens per Sec: 19517.662861849552
Epoch Step: 60 / 730 Loss: 0.7125887274742126 Tokens per Sec: 17879.72793667411
Epoch Step: 65 / 730 Loss: 35.67890548706055 Tokens per Sec: 21438.72251826946
Epoch Step: 70 / 730 Loss: 2.926086902618408 Tokens per Sec: 16210.029731247101
Epoch Step: 75 / 730 Loss: 0.752676248550415 Tokens per Sec: 17176.366574203646
Epoch Step: 80 / 730 Loss: 1.8840984106063843 Tokens per Sec: 18198.442367003794
Epoch Step: 85 / 730 Loss: 0.603769063949585 Tokens per Sec: 14185.227640263272
Epoch Step: 90 / 730 Loss: 0.4208410084247589 Tokens per Sec: 20475.36038987416
Epoch Step: 95 / 730 Loss: 2.22743821144104 Tokens per Sec: 17217.742084889713
Epoch Step: 100 / 730 Loss: 4.904906272888184 Tokens per Sec: 16929.60597175368
Epoch Step: 105 / 730 Loss: 3.1614201068878174 Tokens per Sec: 20159.0312408693
Epoch Step: 110 / 730 Loss: 0.9502244591712952 Tokens per Sec: 18978.931973591276
Epoch Step: 115 / 730 Loss: 1.4275084733963013 Tokens per Sec: 14583.280783780947
Epoch Step: 120 / 730 Loss: 3.1342809200286865 Tokens per Sec: 13653.768795245973
Epoch Step: 125 / 730 Loss: 2.755981206893921 Tokens per Sec: 17908.631244079683
Epoch Step: 130 / 730 Loss: 1.3122738599777222 Tokens per Sec: 18038.25455037411
Epoch Step: 135 / 730 Loss: 1.4154651165008545 Tokens per Sec: 18137.476192196966
Epoch Step: 140 / 730 Loss: 4.456353187561035 Tokens per Sec: 18610.02349994935
Epoch Step: 145 / 730 Loss: 0.32201504707336426 Tokens per Sec: 18832.83605513349
Epoch Step: 150 / 730 Loss: 2.458760976791382 Tokens per Sec: 17159.866039716664
Epoch Step: 155 / 730 Loss: 0.7416073679924011 Tokens per Sec: 17132.52195163998
Epoch Step: 160 / 730 Loss: 23.730587005615234 Tokens per Sec: 20213.893825294777
Epoch Step: 165 / 730 Loss: 0.33897536993026733 Tokens per Sec: 16647.460002329535
Epoch Step: 170 / 730 Loss: 1.505967378616333 Tokens per Sec: 15191.403536062984
Epoch Step: 175 / 730 Loss: 2.706824541091919 Tokens per Sec: 16886.948641228384
Epoch Step: 180 / 730 Loss: 0.9684064984321594 Tokens per Sec: 19599.43605407346
Epoch Step: 185 / 730 Loss: 3.4036948680877686 Tokens per Sec: 18338.982405762657
Epoch Step: 190 / 730 Loss: 0.7422325611114502 Tokens per Sec: 16981.002202366795
Epoch Step: 195 / 730 Loss: 2.079533576965332 Tokens per Sec: 15899.203720242194
Epoch Step: 200 / 730 Loss: 3.0168533325195312 Tokens per Sec: 16161.487877601745
Epoch Step: 205 / 730 Loss: 0.9999844431877136 Tokens per Sec: 18382.95229316312
Epoch Step: 210 / 730 Loss: 0.366318941116333 Tokens per Sec: 15772.393113559869
Epoch Step: 215 / 730 Loss: 1.1830682754516602 Tokens per Sec: 16329.89295482563
Epoch Step: 220 / 730 Loss: 14.271429061889648 Tokens per Sec: 20483.63233044564
Epoch Step: 225 / 730 Loss: 6.210763931274414 Tokens per Sec: 15248.145460521968
Epoch Step: 230 / 730 Loss: 0.8452876806259155 Tokens per Sec: 16379.175835773245
Epoch Step: 235 / 730 Loss: 2.3170528411865234 Tokens per Sec: 16632.067095154973
Epoch Step: 240 / 730 Loss: 1.267545461654663 Tokens per Sec: 20399.328220034466
Epoch Step: 245 / 730 Loss: 1.8459627628326416 Tokens per Sec: 17384.05806570779
Epoch Step: 250 / 730 Loss: 2.997831344604492 Tokens per Sec: 17879.439709590806
Epoch Step: 255 / 730 Loss: 0.4268369674682617 Tokens per Sec: 16699.535782324027
Epoch Step: 260 / 730 Loss: 1.7837473154067993 Tokens per Sec: 14244.995714199233
Epoch Step: 265 / 730 Loss: 1.8989284038543701 Tokens per Sec: 15921.936641426042
Epoch Step: 270 / 730 Loss: 24.686342239379883 Tokens per Sec: 20289.375508061494
Epoch Step: 275 / 730 Loss: 0.9207805395126343 Tokens per Sec: 18018.42233951811
Epoch Step: 280 / 730 Loss: 0.8521435856819153 Tokens per Sec: 18380.236815172248
Epoch Step: 285 / 730 Loss: 2.2023394107818604 Tokens per Sec: 16900.0415473431
Epoch Step: 290 / 730 Loss: 0.23064756393432617 Tokens per Sec: 18518.113308939555
Epoch Step: 295 / 730 Loss: 44.06157302856445 Tokens per Sec: 18650.278961260112
Epoch Step: 300 / 730 Loss: 2.5379111766815186 Tokens per Sec: 16518.72010538426
Epoch Step: 305 / 730 Loss: 4.301815032958984 Tokens per Sec: 18514.02035165187
Epoch Step: 310 / 730 Loss: 1.9181925058364868 Tokens per Sec: 16477.558619151765
Epoch Step: 315 / 730 Loss: 3.2379496097564697 Tokens per Sec: 15724.647863733911
Epoch Step: 320 / 730 Loss: 3.0175280570983887 Tokens per Sec: 19786.252396993234
Epoch Step: 325 / 730 Loss: 1.8753340244293213 Tokens per Sec: 19790.894071896902
Epoch Step: 330 / 730 Loss: 1.0508756637573242 Tokens per Sec: 18936.22384848468
Epoch Step: 335 / 730 Loss: 0.7718732357025146 Tokens per Sec: 19244.094979703317
Epoch Step: 340 / 730 Loss: 0.17624153196811676 Tokens per Sec: 19836.49022382115
Epoch Step: 345 / 730 Loss: 1.4326728582382202 Tokens per Sec: 15636.795509733833
Epoch Step: 350 / 730 Loss: 10.820422172546387 Tokens per Sec: 16644.1721122291
Epoch Step: 355 / 730 Loss: 0.31948691606521606 Tokens per Sec: 17862.70553605655
Epoch Step: 360 / 730 Loss: 2.8663060665130615 Tokens per Sec: 19123.710671198514
Epoch Step: 365 / 730 Loss: 1.3309519290924072 Tokens per Sec: 17986.87420323989
Epoch Step: 370 / 730 Loss: 1.8337693214416504 Tokens per Sec: 16619.71067062662
Epoch Step: 375 / 730 Loss: 0.8981719017028809 Tokens per Sec: 14665.962472577165
Epoch Step: 380 / 730 Loss: 19.941646575927734 Tokens per Sec: 13142.87358179924
Epoch Step: 385 / 730 Loss: 3.620291233062744 Tokens per Sec: 18155.366880115886
Epoch Step: 390 / 730 Loss: 0.6880481839179993 Tokens per Sec: 17207.236633144174
Epoch Step: 395 / 730 Loss: 1.1480207443237305 Tokens per Sec: 16830.269851696492
Epoch Step: 400 / 730 Loss: 1.3544076681137085 Tokens per Sec: 17678.821808674966
Epoch Step: 405 / 730 Loss: 1.0480979681015015 Tokens per Sec: 17150.75146329854
Epoch Step: 410 / 730 Loss: 2.22989559173584 Tokens per Sec: 18448.53980380056
Epoch Step: 415 / 730 Loss: 0.6801624298095703 Tokens per Sec: 15653.152509033254
Epoch Step: 420 / 730 Loss: 0.6527157425880432 Tokens per Sec: 16731.643315734902
Epoch Step: 425 / 730 Loss: 0.6937474608421326 Tokens per Sec: 17743.88749829021
Epoch Step: 430 / 730 Loss: 0.5145261287689209 Tokens per Sec: 20549.50979599357
Epoch Step: 435 / 730 Loss: 1.4425770044326782 Tokens per Sec: 20860.530209918536
Epoch Step: 440 / 730 Loss: 2.436601161956787 Tokens per Sec: 20183.589873843823
Epoch Step: 445 / 730 Loss: 0.9246796369552612 Tokens per Sec: 15444.165929195504
Epoch Step: 450 / 730 Loss: 1.7372978925704956 Tokens per Sec: 19184.526549202565
Epoch Step: 455 / 730 Loss: 0.7449222803115845 Tokens per Sec: 15709.607530163334
Epoch Step: 460 / 730 Loss: 0.6186617612838745 Tokens per Sec: 15351.880626833989
Epoch Step: 465 / 730 Loss: 1.5906250476837158 Tokens per Sec: 19133.85139241507
Epoch Step: 470 / 730 Loss: 0.6602379083633423 Tokens per Sec: 21054.214913378284
Epoch Step: 475 / 730 Loss: 1.6344022750854492 Tokens per Sec: 16953.967619845134
Epoch Step: 480 / 730 Loss: 44.25722885131836 Tokens per Sec: 17054.124243281007
Epoch Step: 485 / 730 Loss: 2.084366798400879 Tokens per Sec: 16322.392341935494
Epoch Step: 490 / 730 Loss: 1.6750694513320923 Tokens per Sec: 16674.158177126872
Epoch Step: 495 / 730 Loss: 2.9676120281219482 Tokens per Sec: 14841.250536842344
Epoch Step: 500 / 730 Loss: 1.693843126296997 Tokens per Sec: 14998.152436774706
Epoch Step: 505 / 730 Loss: 33.15264892578125 Tokens per Sec: 17466.052461879644
Epoch Step: 510 / 730 Loss: 1.1544169187545776 Tokens per Sec: 17721.712206575696
Epoch Step: 515 / 730 Loss: 1.8858217000961304 Tokens per Sec: 16614.213796023236
Epoch Step: 520 / 730 Loss: 5.040332794189453 Tokens per Sec: 20371.286189176495
Epoch Step: 525 / 730 Loss: 0.26320379972457886 Tokens per Sec: 17235.707792063527
Epoch Step: 530 / 730 Loss: 2.0341882705688477 Tokens per Sec: 17985.299295265962
Epoch Step: 535 / 730 Loss: 0.24021171033382416 Tokens per Sec: 18733.17106372002
Epoch Step: 540 / 730 Loss: 0.9949936270713806 Tokens per Sec: 16325.623227958456
Epoch Step: 545 / 730 Loss: 2.2055068016052246 Tokens per Sec: 20342.870741409395
Epoch Step: 550 / 730 Loss: 2.1671178340911865 Tokens per Sec: 17101.53898502259
Epoch Step: 555 / 730 Loss: 0.5691673755645752 Tokens per Sec: 15347.835781679763
Epoch Step: 560 / 730 Loss: 2.413255453109741 Tokens per Sec: 18923.920112940355
Epoch Step: 565 / 730 Loss: 2.699463129043579 Tokens per Sec: 17727.796390879565
Epoch Step: 570 / 730 Loss: 0.831656813621521 Tokens per Sec: 17461.17749219778
Epoch Step: 575 / 730 Loss: 1.6783535480499268 Tokens per Sec: 16082.615662736222
Epoch Step: 580 / 730 Loss: 21.6627140045166 Tokens per Sec: 20576.08347079212
Epoch Step: 585 / 730 Loss: 3.8213396072387695 Tokens per Sec: 16503.805972247985
Epoch Step: 590 / 730 Loss: 1.5276706218719482 Tokens per Sec: 13862.274563694755
Epoch Step: 595 / 730 Loss: 0.6592909693717957 Tokens per Sec: 18167.63636241299
Epoch Step: 600 / 730 Loss: 1.0371055603027344 Tokens per Sec: 14984.773076296371
Epoch Step: 605 / 730 Loss: 1.5881470441818237 Tokens per Sec: 15343.087790739306
Epoch Step: 610 / 730 Loss: 1.979565143585205 Tokens per Sec: 15580.38490635358
Epoch Step: 615 / 730 Loss: 1.4699896574020386 Tokens per Sec: 14759.858115504252
Epoch Step: 620 / 730 Loss: 1.8172625303268433 Tokens per Sec: 17096.112439122386
Epoch Step: 625 / 730 Loss: 1.9443827867507935 Tokens per Sec: 21309.192837249608
Epoch Step: 630 / 730 Loss: 4.48182487487793 Tokens per Sec: 18410.11625940582
Epoch Step: 635 / 730 Loss: 1.3594940900802612 Tokens per Sec: 15873.906304495045
Epoch Step: 640 / 730 Loss: 1.6029919385910034 Tokens per Sec: 18368.791285290492
Epoch Step: 645 / 730 Loss: 9.637591361999512 Tokens per Sec: 17535.77324180937
Epoch Step: 650 / 730 Loss: 0.8681164979934692 Tokens per Sec: 19644.70594192258
Epoch Step: 655 / 730 Loss: 0.3745304346084595 Tokens per Sec: 20828.095620616503
Epoch Step: 660 / 730 Loss: 11.193984031677246 Tokens per Sec: 17257.170471134028
Epoch Step: 665 / 730 Loss: 2.620229721069336 Tokens per Sec: 19546.20826025026
Epoch Step: 670 / 730 Loss: 1.9385337829589844 Tokens per Sec: 14376.784364785892
Epoch Step: 675 / 730 Loss: 10.920146942138672 Tokens per Sec: 15150.515387155321
Epoch Step: 680 / 730 Loss: 3.576032876968384 Tokens per Sec: 15590.132760724033
Epoch Step: 685 / 730 Loss: 3.3056085109710693 Tokens per Sec: 16406.845617763327
Epoch Step: 690 / 730 Loss: 2.4593186378479004 Tokens per Sec: 19729.68338787341
Epoch Step: 695 / 730 Loss: 1.4797295331954956 Tokens per Sec: 21520.222489560758
Epoch Step: 700 / 730 Loss: 3.4995059967041016 Tokens per Sec: 17597.15395258604
Epoch Step: 705 / 730 Loss: 2.8568029403686523 Tokens per Sec: 15079.206551290483
Epoch Step: 710 / 730 Loss: 1.8272099494934082 Tokens per Sec: 15459.331762041613
Epoch Step: 715 / 730 Loss: 0.7895613312721252 Tokens per Sec: 14850.254839444966
Epoch Step: 720 / 730 Loss: 1.240922451019287 Tokens per Sec: 13839.820340156908
Epoch Step: 725 / 730 Loss: 1.0594536066055298 Tokens per Sec: 15662.534787321389
Epoch Step: 730 / 730 Loss: 1.9395203590393066 Tokens per Sec: 16759.77038835902
Epoch ended with duration 0:01:20.627281
Train perplexity: 1.1231144619372257
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.Map < java.lang.String > , java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.285785
Validation perplexity: 1.162093529659622
Epoch 47 / 1000
Epoch Step: 5 / 730 Loss: 2.648690700531006 Tokens per Sec: 14649.815364915916
Epoch Step: 10 / 730 Loss: 3.699385643005371 Tokens per Sec: 18657.19849533882
Epoch Step: 15 / 730 Loss: 0.4390926659107208 Tokens per Sec: 16935.814464353105
Epoch Step: 20 / 730 Loss: 29.72585678100586 Tokens per Sec: 19434.04817433748
Epoch Step: 25 / 730 Loss: 4.109015941619873 Tokens per Sec: 17017.85062113876
Epoch Step: 30 / 730 Loss: 0.7958298921585083 Tokens per Sec: 17557.7274058251
Epoch Step: 35 / 730 Loss: 1.9116722345352173 Tokens per Sec: 18051.517860178003
Epoch Step: 40 / 730 Loss: 2.0191779136657715 Tokens per Sec: 17276.085428217873
Epoch Step: 45 / 730 Loss: 4.813776016235352 Tokens per Sec: 17084.502271519665
Epoch Step: 50 / 730 Loss: 1.0779987573623657 Tokens per Sec: 19642.216213569325
Epoch Step: 55 / 730 Loss: 1.4574354887008667 Tokens per Sec: 15502.740661106402
Epoch Step: 60 / 730 Loss: 1.7876813411712646 Tokens per Sec: 14775.0318412913
Epoch Step: 65 / 730 Loss: 1.2346681356430054 Tokens per Sec: 17817.676687775278
Epoch Step: 70 / 730 Loss: 0.6918773651123047 Tokens per Sec: 20381.41114950356
Epoch Step: 75 / 730 Loss: 0.5839412212371826 Tokens per Sec: 18530.753955689448
Epoch Step: 80 / 730 Loss: 0.748065173625946 Tokens per Sec: 16711.169942449673
Epoch Step: 85 / 730 Loss: 0.8321622610092163 Tokens per Sec: 18507.07153152644
Epoch Step: 90 / 730 Loss: 0.9509865641593933 Tokens per Sec: 19480.906402909994
Epoch Step: 95 / 730 Loss: 3.7184956073760986 Tokens per Sec: 19210.243673313493
Epoch Step: 100 / 730 Loss: 2.1122846603393555 Tokens per Sec: 17099.633781455635
Epoch Step: 105 / 730 Loss: 1.6332318782806396 Tokens per Sec: 17325.075907063423
Epoch Step: 110 / 730 Loss: 1.3154760599136353 Tokens per Sec: 17181.17320711796
Epoch Step: 115 / 730 Loss: 1.1635973453521729 Tokens per Sec: 16670.244457417994
Epoch Step: 120 / 730 Loss: 1.1855734586715698 Tokens per Sec: 16575.697169145256
Epoch Step: 125 / 730 Loss: 2.7498533725738525 Tokens per Sec: 18456.71719233921
Epoch Step: 130 / 730 Loss: 0.34945982694625854 Tokens per Sec: 20077.894201429048
Epoch Step: 135 / 730 Loss: 0.6327171325683594 Tokens per Sec: 18594.88278756367
Epoch Step: 140 / 730 Loss: 2.7628414630889893 Tokens per Sec: 15425.330065729537
Epoch Step: 145 / 730 Loss: 1.0757745504379272 Tokens per Sec: 17812.310688574897
Epoch Step: 150 / 730 Loss: 0.713831901550293 Tokens per Sec: 16952.838543076974
Epoch Step: 155 / 730 Loss: 2.4912633895874023 Tokens per Sec: 17980.47904640231
Epoch Step: 160 / 730 Loss: 0.42995160818099976 Tokens per Sec: 15136.379335174372
Epoch Step: 165 / 730 Loss: 0.8249574899673462 Tokens per Sec: 17670.811849262405
Epoch Step: 170 / 730 Loss: 3.1480162143707275 Tokens per Sec: 16737.632941300413
Epoch Step: 175 / 730 Loss: 1.7718310356140137 Tokens per Sec: 15897.808130081301
Epoch Step: 180 / 730 Loss: 1.2220945358276367 Tokens per Sec: 19452.785226572214
Epoch Step: 185 / 730 Loss: 0.4450122117996216 Tokens per Sec: 19060.599726321994
Epoch Step: 190 / 730 Loss: 0.854023814201355 Tokens per Sec: 14837.653499903878
Epoch Step: 195 / 730 Loss: 1.9222040176391602 Tokens per Sec: 20577.903154066174
Epoch Step: 200 / 730 Loss: 1.381199836730957 Tokens per Sec: 19751.151393325843
Epoch Step: 205 / 730 Loss: 30.67697525024414 Tokens per Sec: 17228.22606786265
Epoch Step: 210 / 730 Loss: 0.6798833608627319 Tokens per Sec: 17321.731305241025
Epoch Step: 215 / 730 Loss: 0.9675684571266174 Tokens per Sec: 14337.940827561099
Epoch Step: 220 / 730 Loss: 2.843201160430908 Tokens per Sec: 17982.700236339857
Epoch Step: 225 / 730 Loss: 2.6585283279418945 Tokens per Sec: 18714.63915222701
Epoch Step: 230 / 730 Loss: 1.088889241218567 Tokens per Sec: 19160.87240913721
Epoch Step: 235 / 730 Loss: 0.6317388415336609 Tokens per Sec: 17208.826100867765
Epoch Step: 240 / 730 Loss: 1.8458466529846191 Tokens per Sec: 18868.975799270145
Epoch Step: 245 / 730 Loss: 1.288759708404541 Tokens per Sec: 15588.37475302621
Epoch Step: 250 / 730 Loss: 2.573747396469116 Tokens per Sec: 14927.897725333718
Epoch Step: 255 / 730 Loss: 0.8437601327896118 Tokens per Sec: 18506.072021095777
Epoch Step: 260 / 730 Loss: 2.256406784057617 Tokens per Sec: 20990.76016994582
Epoch Step: 265 / 730 Loss: 1.2415307760238647 Tokens per Sec: 16567.673576667657
Epoch Step: 270 / 730 Loss: 1.2245997190475464 Tokens per Sec: 20855.411591770826
Epoch Step: 275 / 730 Loss: 2.873826265335083 Tokens per Sec: 16394.634731682418
Epoch Step: 280 / 730 Loss: 1.0040390491485596 Tokens per Sec: 15988.391765192604
Epoch Step: 285 / 730 Loss: 0.2293495237827301 Tokens per Sec: 14991.91123379365
Epoch Step: 290 / 730 Loss: 3.677978515625 Tokens per Sec: 18277.974669926505
Epoch Step: 295 / 730 Loss: 13.526388168334961 Tokens per Sec: 19955.44942483778
Epoch Step: 300 / 730 Loss: 1.7662538290023804 Tokens per Sec: 18048.636793791447
Epoch Step: 305 / 730 Loss: 15.569873809814453 Tokens per Sec: 17389.833308982994
Epoch Step: 310 / 730 Loss: 3.6793267726898193 Tokens per Sec: 20716.71517849175
Epoch Step: 315 / 730 Loss: 1.3630800247192383 Tokens per Sec: 18062.547734135547
Epoch Step: 320 / 730 Loss: 0.6076602935791016 Tokens per Sec: 17808.25216045078
Epoch Step: 325 / 730 Loss: 3.1657931804656982 Tokens per Sec: 15770.24378442967
Epoch Step: 330 / 730 Loss: 0.9927391409873962 Tokens per Sec: 18059.3145518143
Epoch Step: 335 / 730 Loss: 0.34912383556365967 Tokens per Sec: 18835.30463932197
Epoch Step: 340 / 730 Loss: 1.441109299659729 Tokens per Sec: 16898.269118180757
Epoch Step: 345 / 730 Loss: 1.1651932001113892 Tokens per Sec: 21037.557510844974
Epoch Step: 350 / 730 Loss: 4.027903079986572 Tokens per Sec: 18105.72894739395
Epoch Step: 355 / 730 Loss: 1.4133059978485107 Tokens per Sec: 18078.044079266318
Epoch Step: 360 / 730 Loss: 1.4967694282531738 Tokens per Sec: 19726.548617955348
Epoch Step: 365 / 730 Loss: 1.7380415201187134 Tokens per Sec: 17923.605915070046
Epoch Step: 370 / 730 Loss: 1.065769910812378 Tokens per Sec: 16352.124718285893
Epoch Step: 375 / 730 Loss: 0.44274818897247314 Tokens per Sec: 14563.518676178008
Epoch Step: 380 / 730 Loss: 1.0288528203964233 Tokens per Sec: 18764.330759626486
Epoch Step: 385 / 730 Loss: 2.780763864517212 Tokens per Sec: 13973.934358255314
Epoch Step: 390 / 730 Loss: 0.46813902258872986 Tokens per Sec: 16564.963054438176
Epoch Step: 395 / 730 Loss: 1.3110871315002441 Tokens per Sec: 15443.31447548736
Epoch Step: 400 / 730 Loss: 1.2971222400665283 Tokens per Sec: 17915.064375807902
Epoch Step: 405 / 730 Loss: 0.6614766120910645 Tokens per Sec: 17104.052090329962
Epoch Step: 410 / 730 Loss: 1.1787077188491821 Tokens per Sec: 21630.461018889477
Epoch Step: 415 / 730 Loss: 1.5405710935592651 Tokens per Sec: 16513.308677010868
Epoch Step: 420 / 730 Loss: 1.4261797666549683 Tokens per Sec: 16116.111135287392
Epoch Step: 425 / 730 Loss: 2.336231231689453 Tokens per Sec: 19436.757914097958
Epoch Step: 430 / 730 Loss: 0.5240538716316223 Tokens per Sec: 16896.75016029416
Epoch Step: 435 / 730 Loss: 2.505300998687744 Tokens per Sec: 14941.066532882021
Epoch Step: 440 / 730 Loss: 1.3614543676376343 Tokens per Sec: 18842.116856161414
Epoch Step: 445 / 730 Loss: 1.4682432413101196 Tokens per Sec: 13396.188403188362
Epoch Step: 450 / 730 Loss: 1.9994852542877197 Tokens per Sec: 19907.71398042279
Epoch Step: 455 / 730 Loss: 2.2473437786102295 Tokens per Sec: 21500.64574354054
Epoch Step: 460 / 730 Loss: 1.0316120386123657 Tokens per Sec: 17352.712115628285
Epoch Step: 465 / 730 Loss: 0.6521395444869995 Tokens per Sec: 18916.57337361188
Epoch Step: 470 / 730 Loss: 0.4317356050014496 Tokens per Sec: 18054.232501283124
Epoch Step: 475 / 730 Loss: 0.2891033887863159 Tokens per Sec: 18783.786429963886
Epoch Step: 480 / 730 Loss: 0.6928513646125793 Tokens per Sec: 16442.777824132405
Epoch Step: 485 / 730 Loss: 11.57924747467041 Tokens per Sec: 19182.18751533496
Epoch Step: 490 / 730 Loss: 1.8746389150619507 Tokens per Sec: 20232.574903924098
Epoch Step: 495 / 730 Loss: 2.0312085151672363 Tokens per Sec: 18777.38253054432
Epoch Step: 500 / 730 Loss: 1.4418565034866333 Tokens per Sec: 14210.061272181729
Epoch Step: 505 / 730 Loss: 2.081395387649536 Tokens per Sec: 15292.803725110225
Epoch Step: 510 / 730 Loss: 2.3337864875793457 Tokens per Sec: 15719.701598605883
Epoch Step: 515 / 730 Loss: 2.3991379737854004 Tokens per Sec: 17694.030812854126
Epoch Step: 520 / 730 Loss: 0.5459514856338501 Tokens per Sec: 14482.795551180503
Epoch Step: 525 / 730 Loss: 0.9326987266540527 Tokens per Sec: 19756.48547921801
Epoch Step: 530 / 730 Loss: 4.076406002044678 Tokens per Sec: 18341.796278235088
Epoch Step: 535 / 730 Loss: 0.5461908578872681 Tokens per Sec: 15011.802672483933
Epoch Step: 540 / 730 Loss: 22.930330276489258 Tokens per Sec: 20398.165283851507
Epoch Step: 545 / 730 Loss: 1.963578462600708 Tokens per Sec: 17613.953984787768
Epoch Step: 550 / 730 Loss: 1.5852633714675903 Tokens per Sec: 17078.857242688977
Epoch Step: 555 / 730 Loss: 0.9612622261047363 Tokens per Sec: 20645.184417769833
Epoch Step: 560 / 730 Loss: 1.5953162908554077 Tokens per Sec: 19113.951311880144
Epoch Step: 565 / 730 Loss: 2.674654006958008 Tokens per Sec: 17923.958596212746
Epoch Step: 570 / 730 Loss: 2.339141368865967 Tokens per Sec: 15697.192015354483
Epoch Step: 575 / 730 Loss: 3.362980604171753 Tokens per Sec: 19202.03045717728
Epoch Step: 580 / 730 Loss: 3.5230820178985596 Tokens per Sec: 17275.52447407925
Epoch Step: 585 / 730 Loss: 13.300134658813477 Tokens per Sec: 18716.739669594495
Epoch Step: 590 / 730 Loss: 0.4500367045402527 Tokens per Sec: 19140.01467946632
Epoch Step: 595 / 730 Loss: 2.725234031677246 Tokens per Sec: 19287.50435185662
Epoch Step: 600 / 730 Loss: 1.113341212272644 Tokens per Sec: 15509.518613659531
Epoch Step: 605 / 730 Loss: 4.040112495422363 Tokens per Sec: 14507.253609675716
Epoch Step: 610 / 730 Loss: 29.672527313232422 Tokens per Sec: 18619.591333787303
Epoch Step: 615 / 730 Loss: 5.017717361450195 Tokens per Sec: 18019.016948508022
Epoch Step: 620 / 730 Loss: 0.3641815781593323 Tokens per Sec: 19777.32119463833
Epoch Step: 625 / 730 Loss: 2.076313018798828 Tokens per Sec: 15477.261257990373
Epoch Step: 630 / 730 Loss: 0.9368504285812378 Tokens per Sec: 17813.62068758017
Epoch Step: 635 / 730 Loss: 1.5346235036849976 Tokens per Sec: 19862.913193211807
Epoch Step: 640 / 730 Loss: 1.3811458349227905 Tokens per Sec: 17548.367174772036
Epoch Step: 645 / 730 Loss: 1.8216747045516968 Tokens per Sec: 14688.330020144676
Epoch Step: 650 / 730 Loss: 2.7698397636413574 Tokens per Sec: 20922.368678853036
Epoch Step: 655 / 730 Loss: 0.9597600102424622 Tokens per Sec: 18055.616906787378
Epoch Step: 660 / 730 Loss: 11.381494522094727 Tokens per Sec: 18610.780205994608
Epoch Step: 665 / 730 Loss: 2.637296676635742 Tokens per Sec: 21772.513582120562
Epoch Step: 670 / 730 Loss: 5.297966003417969 Tokens per Sec: 18597.6735675631
Epoch Step: 675 / 730 Loss: 3.1589462757110596 Tokens per Sec: 17016.10516437295
Epoch Step: 680 / 730 Loss: 1.954123854637146 Tokens per Sec: 19899.671628862056
Epoch Step: 685 / 730 Loss: 0.6803641319274902 Tokens per Sec: 17743.580853350795
Epoch Step: 690 / 730 Loss: 3.8233766555786133 Tokens per Sec: 15047.02856062541
Epoch Step: 695 / 730 Loss: 1.5919698476791382 Tokens per Sec: 15510.232657890514
Epoch Step: 700 / 730 Loss: 0.6906600594520569 Tokens per Sec: 14461.775904076558
Epoch Step: 705 / 730 Loss: 1.352022647857666 Tokens per Sec: 14561.34017273531
Epoch Step: 710 / 730 Loss: 2.5603063106536865 Tokens per Sec: 14573.291662660731
Epoch Step: 715 / 730 Loss: 1.4900271892547607 Tokens per Sec: 14721.245538362991
Epoch Step: 720 / 730 Loss: 2.372872829437256 Tokens per Sec: 16721.006537775247
Epoch Step: 725 / 730 Loss: 0.9115807414054871 Tokens per Sec: 14846.673413382312
Epoch Step: 730 / 730 Loss: 1.7999285459518433 Tokens per Sec: 15249.21018682679
Epoch ended with duration 0:01:19.830272
Train perplexity: 1.1115176569992178
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ java.util.Map < java.lang.String > , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.284633
Validation perplexity: 1.2056510502283653
Epoch 48 / 1000
Epoch Step: 5 / 730 Loss: 4.783573150634766 Tokens per Sec: 17338.66484694251
Epoch Step: 10 / 730 Loss: 2.679063081741333 Tokens per Sec: 17575.486259230398
Epoch Step: 15 / 730 Loss: 0.878191351890564 Tokens per Sec: 15876.640472510546
Epoch Step: 20 / 730 Loss: 3.817760705947876 Tokens per Sec: 21209.84578699956
Epoch Step: 25 / 730 Loss: 1.821035623550415 Tokens per Sec: 17235.28344887555
Epoch Step: 30 / 730 Loss: 1.811470866203308 Tokens per Sec: 16407.364401236227
Epoch Step: 35 / 730 Loss: 2.4852495193481445 Tokens per Sec: 14981.923715462673
Epoch Step: 40 / 730 Loss: 0.7090679407119751 Tokens per Sec: 15941.887789646673
Epoch Step: 45 / 730 Loss: 3.2568392753601074 Tokens per Sec: 15485.341462029271
Epoch Step: 50 / 730 Loss: 0.6857352256774902 Tokens per Sec: 16996.035834429822
Epoch Step: 55 / 730 Loss: 0.8514128923416138 Tokens per Sec: 19208.61622875385
Epoch Step: 60 / 730 Loss: 2.2182559967041016 Tokens per Sec: 17652.492907195352
Epoch Step: 65 / 730 Loss: 1.0708645582199097 Tokens per Sec: 19775.57298021745
Epoch Step: 70 / 730 Loss: 1.684585452079773 Tokens per Sec: 16230.862200793212
Epoch Step: 75 / 730 Loss: 2.180220127105713 Tokens per Sec: 20513.730821186407
Epoch Step: 80 / 730 Loss: 0.910929799079895 Tokens per Sec: 18050.83337261689
Epoch Step: 85 / 730 Loss: 0.6201085448265076 Tokens per Sec: 17580.092818278896
Epoch Step: 90 / 730 Loss: 2.647090196609497 Tokens per Sec: 14295.815924701208
Epoch Step: 95 / 730 Loss: 0.473082572221756 Tokens per Sec: 20915.97260083462
Epoch Step: 100 / 730 Loss: 2.1103453636169434 Tokens per Sec: 18601.739087931786
Epoch Step: 105 / 730 Loss: 1.0384509563446045 Tokens per Sec: 19745.529953692585
Epoch Step: 110 / 730 Loss: 1.0865741968154907 Tokens per Sec: 15353.785234481838
Epoch Step: 115 / 730 Loss: 1.5493522882461548 Tokens per Sec: 16172.599719382328
Epoch Step: 120 / 730 Loss: 1.646418809890747 Tokens per Sec: 13828.476097912693
Epoch Step: 125 / 730 Loss: 2.270904302597046 Tokens per Sec: 17595.302064429146
Epoch Step: 130 / 730 Loss: 0.8424215316772461 Tokens per Sec: 19027.273353131284
Epoch Step: 135 / 730 Loss: 1.8837337493896484 Tokens per Sec: 14411.39521030942
Epoch Step: 140 / 730 Loss: 0.34852364659309387 Tokens per Sec: 17269.10609123079
Epoch Step: 145 / 730 Loss: 2.1739697456359863 Tokens per Sec: 22486.00104575247
Epoch Step: 150 / 730 Loss: 32.173309326171875 Tokens per Sec: 17030.16163399086
Epoch Step: 155 / 730 Loss: 1.2185641527175903 Tokens per Sec: 16687.966829285506
Epoch Step: 160 / 730 Loss: 3.051201343536377 Tokens per Sec: 17505.273768005572
Epoch Step: 165 / 730 Loss: 1.1082806587219238 Tokens per Sec: 18076.591526583357
Epoch Step: 170 / 730 Loss: 1.5803505182266235 Tokens per Sec: 17253.074469982603
Epoch Step: 175 / 730 Loss: 3.731750011444092 Tokens per Sec: 21169.53120598295
Epoch Step: 180 / 730 Loss: 0.18373852968215942 Tokens per Sec: 17836.382065335954
Epoch Step: 185 / 730 Loss: 3.5708556175231934 Tokens per Sec: 20375.55678633072
Epoch Step: 190 / 730 Loss: 2.7969515323638916 Tokens per Sec: 15310.083992486983
Epoch Step: 195 / 730 Loss: 2.6520867347717285 Tokens per Sec: 18662.922952653673
Epoch Step: 200 / 730 Loss: 1.9905136823654175 Tokens per Sec: 16833.606298355513
Epoch Step: 205 / 730 Loss: 3.827816963195801 Tokens per Sec: 17354.318568168233
Epoch Step: 210 / 730 Loss: 10.844002723693848 Tokens per Sec: 18462.681946589488
Epoch Step: 215 / 730 Loss: 3.056684970855713 Tokens per Sec: 17455.51755611997
Epoch Step: 220 / 730 Loss: 2.64145565032959 Tokens per Sec: 17482.75987769591
Epoch Step: 225 / 730 Loss: 2.3876359462738037 Tokens per Sec: 16791.048684483812
Epoch Step: 230 / 730 Loss: 3.4349167346954346 Tokens per Sec: 14982.076917156706
Epoch Step: 235 / 730 Loss: 11.50489616394043 Tokens per Sec: 17030.286050713603
Epoch Step: 240 / 730 Loss: 1.7329415082931519 Tokens per Sec: 16838.277932793026
Epoch Step: 245 / 730 Loss: 1.4547983407974243 Tokens per Sec: 19408.791035326733
Epoch Step: 250 / 730 Loss: 4.106050968170166 Tokens per Sec: 16079.836592922386
Epoch Step: 255 / 730 Loss: 13.577614784240723 Tokens per Sec: 18961.369246300837
Epoch Step: 260 / 730 Loss: 0.9462719559669495 Tokens per Sec: 19471.154514540267
Epoch Step: 265 / 730 Loss: 1.8784716129302979 Tokens per Sec: 15027.81399616695
Epoch Step: 270 / 730 Loss: 0.4172971248626709 Tokens per Sec: 14905.391216392489
Epoch Step: 275 / 730 Loss: 0.7607535123825073 Tokens per Sec: 20727.717995950632
Epoch Step: 280 / 730 Loss: 3.4020309448242188 Tokens per Sec: 19445.760099320083
Epoch Step: 285 / 730 Loss: 0.9182682037353516 Tokens per Sec: 18841.363987323537
Epoch Step: 290 / 730 Loss: 0.10095679759979248 Tokens per Sec: 19518.23391063184
Epoch Step: 295 / 730 Loss: 2.0257179737091064 Tokens per Sec: 20584.470069684092
Epoch Step: 300 / 730 Loss: 1.9240776300430298 Tokens per Sec: 18377.012474458083
Epoch Step: 305 / 730 Loss: 2.488460063934326 Tokens per Sec: 16912.291151294914
Epoch Step: 310 / 730 Loss: 0.3451736569404602 Tokens per Sec: 15540.80468812819
Epoch Step: 315 / 730 Loss: 1.2586833238601685 Tokens per Sec: 18664.435904414568
Epoch Step: 320 / 730 Loss: 1.7594770193099976 Tokens per Sec: 17845.470489468873
Epoch Step: 325 / 730 Loss: 0.5068795680999756 Tokens per Sec: 17366.434444536208
Epoch Step: 330 / 730 Loss: 2.4739885330200195 Tokens per Sec: 16995.415068614122
Epoch Step: 335 / 730 Loss: 0.31350627541542053 Tokens per Sec: 20027.08255260634
Epoch Step: 340 / 730 Loss: 22.558351516723633 Tokens per Sec: 21491.977613933028
Epoch Step: 345 / 730 Loss: 4.210301876068115 Tokens per Sec: 16761.744160766273
Epoch Step: 350 / 730 Loss: 0.9566920399665833 Tokens per Sec: 16878.951301738463
Epoch Step: 355 / 730 Loss: 1.1741925477981567 Tokens per Sec: 14640.008273401476
Epoch Step: 360 / 730 Loss: 1.211427927017212 Tokens per Sec: 18920.931429009925
Epoch Step: 365 / 730 Loss: 3.73796010017395 Tokens per Sec: 20662.552844085272
Epoch Step: 370 / 730 Loss: 1.451110601425171 Tokens per Sec: 16529.71743687695
Epoch Step: 375 / 730 Loss: 0.3108736276626587 Tokens per Sec: 15858.457120559533
Epoch Step: 380 / 730 Loss: 0.24708831310272217 Tokens per Sec: 16659.54436402975
Epoch Step: 385 / 730 Loss: 1.8829811811447144 Tokens per Sec: 16743.731774770116
Epoch Step: 390 / 730 Loss: 0.5796532034873962 Tokens per Sec: 17369.523290957262
Epoch Step: 395 / 730 Loss: 0.37964731454849243 Tokens per Sec: 19392.95550302978
Epoch Step: 400 / 730 Loss: 2.791146755218506 Tokens per Sec: 16833.475374393627
Epoch Step: 405 / 730 Loss: 2.7712299823760986 Tokens per Sec: 15698.585300894483
Epoch Step: 410 / 730 Loss: 2.154453754425049 Tokens per Sec: 16739.092449618358
Epoch Step: 415 / 730 Loss: 0.17389239370822906 Tokens per Sec: 17122.304740422147
Epoch Step: 420 / 730 Loss: 0.47871774435043335 Tokens per Sec: 19735.056362579897
Epoch Step: 425 / 730 Loss: 0.3762262761592865 Tokens per Sec: 19228.67336578651
Epoch Step: 430 / 730 Loss: 1.2386407852172852 Tokens per Sec: 16119.492051743253
Epoch Step: 435 / 730 Loss: 0.6554344892501831 Tokens per Sec: 18458.243750516187
Epoch Step: 440 / 730 Loss: 37.812564849853516 Tokens per Sec: 12885.016181152918
Epoch Step: 445 / 730 Loss: 1.500585675239563 Tokens per Sec: 18774.215686547577
Epoch Step: 450 / 730 Loss: 1.5349012613296509 Tokens per Sec: 18683.863170196357
Epoch Step: 455 / 730 Loss: 2.865189552307129 Tokens per Sec: 18671.192892546056
Epoch Step: 460 / 730 Loss: 1.1922810077667236 Tokens per Sec: 14884.422198921131
Epoch Step: 465 / 730 Loss: 0.6596768498420715 Tokens per Sec: 17702.397631350443
Epoch Step: 470 / 730 Loss: 3.2596242427825928 Tokens per Sec: 14381.415937547075
Epoch Step: 475 / 730 Loss: 1.634772777557373 Tokens per Sec: 19959.47667248632
Epoch Step: 480 / 730 Loss: 2.10476016998291 Tokens per Sec: 20393.678614471202
Epoch Step: 485 / 730 Loss: 2.259275436401367 Tokens per Sec: 19112.84959024376
Epoch Step: 490 / 730 Loss: 0.4449516534805298 Tokens per Sec: 17983.44340176401
Epoch Step: 495 / 730 Loss: 1.9579260349273682 Tokens per Sec: 17554.33300885355
Epoch Step: 500 / 730 Loss: 19.719409942626953 Tokens per Sec: 19497.379592937054
Epoch Step: 505 / 730 Loss: 2.881687641143799 Tokens per Sec: 19731.0801641277
Epoch Step: 510 / 730 Loss: 2.9074764251708984 Tokens per Sec: 19322.291075156656
Epoch Step: 515 / 730 Loss: 1.8741047382354736 Tokens per Sec: 18980.891759478534
Epoch Step: 520 / 730 Loss: 2.4085891246795654 Tokens per Sec: 16054.68329262163
Epoch Step: 525 / 730 Loss: 1.354932188987732 Tokens per Sec: 16707.692905139287
Epoch Step: 530 / 730 Loss: 2.6177306175231934 Tokens per Sec: 18426.318283216922
Epoch Step: 535 / 730 Loss: 0.4206743538379669 Tokens per Sec: 16438.432748721734
Epoch Step: 540 / 730 Loss: 3.4022982120513916 Tokens per Sec: 21016.497545843817
Epoch Step: 545 / 730 Loss: 0.7061566114425659 Tokens per Sec: 18305.360245710854
Epoch Step: 550 / 730 Loss: 2.439692974090576 Tokens per Sec: 16492.102730523093
Epoch Step: 555 / 730 Loss: 2.632338523864746 Tokens per Sec: 20173.419441482663
Epoch Step: 560 / 730 Loss: 0.9758810997009277 Tokens per Sec: 15743.8973520478
Epoch Step: 565 / 730 Loss: 0.3707531690597534 Tokens per Sec: 19295.321854572838
Epoch Step: 570 / 730 Loss: 2.0422699451446533 Tokens per Sec: 19245.71398263379
Epoch Step: 575 / 730 Loss: 1.7707481384277344 Tokens per Sec: 16827.405604257496
Epoch Step: 580 / 730 Loss: 2.860994815826416 Tokens per Sec: 17350.192989634917
Epoch Step: 585 / 730 Loss: 2.052140951156616 Tokens per Sec: 17870.841627362825
Epoch Step: 590 / 730 Loss: 0.8613975644111633 Tokens per Sec: 18765.80710090077
Epoch Step: 595 / 730 Loss: 0.9503777027130127 Tokens per Sec: 13854.848806592134
Epoch Step: 600 / 730 Loss: 1.855222225189209 Tokens per Sec: 16662.959706421527
Epoch Step: 605 / 730 Loss: 0.2458532303571701 Tokens per Sec: 17505.146034247533
Epoch Step: 610 / 730 Loss: 1.38943612575531 Tokens per Sec: 16557.33020729253
Epoch Step: 615 / 730 Loss: 2.4299793243408203 Tokens per Sec: 17431.57709553279
Epoch Step: 620 / 730 Loss: 1.5758130550384521 Tokens per Sec: 20159.28523990252
Epoch Step: 625 / 730 Loss: 1.331892490386963 Tokens per Sec: 16696.77953579801
Epoch Step: 630 / 730 Loss: 0.6255174875259399 Tokens per Sec: 18530.292920102824
Epoch Step: 635 / 730 Loss: 1.5052757263183594 Tokens per Sec: 17017.042176108986
Epoch Step: 640 / 730 Loss: 1.316684365272522 Tokens per Sec: 18549.013585853223
Epoch Step: 645 / 730 Loss: 2.201950788497925 Tokens per Sec: 18030.373701328186
Epoch Step: 650 / 730 Loss: 0.41144609451293945 Tokens per Sec: 19812.368357578027
Epoch Step: 655 / 730 Loss: 0.6121112704277039 Tokens per Sec: 18097.451113708892
Epoch Step: 660 / 730 Loss: 0.929289698600769 Tokens per Sec: 16370.5595806016
Epoch Step: 665 / 730 Loss: 0.8824769854545593 Tokens per Sec: 17128.402834980585
Epoch Step: 670 / 730 Loss: 0.7744054794311523 Tokens per Sec: 21787.288195694287
Epoch Step: 675 / 730 Loss: 0.5391739010810852 Tokens per Sec: 20002.089556569084
Epoch Step: 680 / 730 Loss: 3.3005383014678955 Tokens per Sec: 16462.337656434753
Epoch Step: 685 / 730 Loss: 4.269754409790039 Tokens per Sec: 17251.868914808503
Epoch Step: 690 / 730 Loss: 1.1343084573745728 Tokens per Sec: 16436.534370478086
Epoch Step: 695 / 730 Loss: 2.7630858421325684 Tokens per Sec: 17790.46501068888
Epoch Step: 700 / 730 Loss: 1.4884922504425049 Tokens per Sec: 14811.360001280587
Epoch Step: 705 / 730 Loss: 1.6932806968688965 Tokens per Sec: 16691.735284386847
Epoch Step: 710 / 730 Loss: 1.9709827899932861 Tokens per Sec: 16887.38521787872
Epoch Step: 715 / 730 Loss: 1.9771909713745117 Tokens per Sec: 16103.939896402504
Epoch Step: 720 / 730 Loss: 1.904316782951355 Tokens per Sec: 14631.016098544853
Epoch Step: 725 / 730 Loss: 2.0543713569641113 Tokens per Sec: 14549.490325878127
Epoch Step: 730 / 730 Loss: 1.6239396333694458 Tokens per Sec: 14706.680112180722
Epoch ended with duration 0:01:19.525740
Train perplexity: 1.0883295649780549
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String [ java.util.Map < java.lang.String > , java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.290477
Validation perplexity: 1.296447644891412
Epoch 49 / 1000
Epoch Step: 5 / 730 Loss: 3.254739999771118 Tokens per Sec: 16604.489986466197
Epoch Step: 10 / 730 Loss: 0.39174026250839233 Tokens per Sec: 16617.41797756328
Epoch Step: 15 / 730 Loss: 0.8289667963981628 Tokens per Sec: 17528.99573187133
Epoch Step: 20 / 730 Loss: 2.880366086959839 Tokens per Sec: 17713.949300152435
Epoch Step: 25 / 730 Loss: 0.899761438369751 Tokens per Sec: 18628.766407082127
Epoch Step: 30 / 730 Loss: 0.5500932931900024 Tokens per Sec: 17679.079237454414
Epoch Step: 35 / 730 Loss: 21.49713706970215 Tokens per Sec: 17094.140421590368
Epoch Step: 40 / 730 Loss: 1.2311861515045166 Tokens per Sec: 16991.172755988842
Epoch Step: 45 / 730 Loss: 18.114212036132812 Tokens per Sec: 19372.89141592579
Epoch Step: 50 / 730 Loss: 1.8275072574615479 Tokens per Sec: 18307.82822246014
Epoch Step: 55 / 730 Loss: 35.495975494384766 Tokens per Sec: 15180.873943954863
Epoch Step: 60 / 730 Loss: 1.1643950939178467 Tokens per Sec: 17867.687525199184
Epoch Step: 65 / 730 Loss: 0.436280220746994 Tokens per Sec: 19782.667366637586
Epoch Step: 70 / 730 Loss: 2.422407388687134 Tokens per Sec: 16170.438831978501
Epoch Step: 75 / 730 Loss: 0.36684465408325195 Tokens per Sec: 20696.636757510943
Epoch Step: 80 / 730 Loss: 2.730539560317993 Tokens per Sec: 19514.768365423246
Epoch Step: 85 / 730 Loss: 2.6867542266845703 Tokens per Sec: 17562.40543651275
Epoch Step: 90 / 730 Loss: 2.865565776824951 Tokens per Sec: 18130.08288478008
Epoch Step: 95 / 730 Loss: 1.826635479927063 Tokens per Sec: 17957.93735746981
Epoch Step: 100 / 730 Loss: 6.6268696784973145 Tokens per Sec: 18364.87994820337
Epoch Step: 105 / 730 Loss: 4.575189590454102 Tokens per Sec: 17872.994816883463
Epoch Step: 110 / 730 Loss: 0.17203280329704285 Tokens per Sec: 14118.614525139665
Epoch Step: 115 / 730 Loss: 22.516353607177734 Tokens per Sec: 18985.264120176034
Epoch Step: 120 / 730 Loss: 0.8484221696853638 Tokens per Sec: 18042.055034188368
Epoch Step: 125 / 730 Loss: 0.4475090503692627 Tokens per Sec: 18648.892287465296
Epoch Step: 130 / 730 Loss: 4.601459980010986 Tokens per Sec: 15672.50791055959
Epoch Step: 135 / 730 Loss: 0.9880353212356567 Tokens per Sec: 16179.740102525606
Epoch Step: 140 / 730 Loss: 2.7767767906188965 Tokens per Sec: 20004.98640543801
Epoch Step: 145 / 730 Loss: 1.521019697189331 Tokens per Sec: 18046.567240871384
Epoch Step: 150 / 730 Loss: 1.5272955894470215 Tokens per Sec: 20571.83004147452
Epoch Step: 155 / 730 Loss: 0.6037688255310059 Tokens per Sec: 12949.782715197747
Epoch Step: 160 / 730 Loss: 3.4486584663391113 Tokens per Sec: 21550.943756089913
Epoch Step: 165 / 730 Loss: 0.969551146030426 Tokens per Sec: 17970.23249287951
Epoch Step: 170 / 730 Loss: 0.7264729738235474 Tokens per Sec: 14967.638820810676
Epoch Step: 175 / 730 Loss: 0.8935783505439758 Tokens per Sec: 13163.669808146862
Epoch Step: 180 / 730 Loss: 3.135599374771118 Tokens per Sec: 20430.247269560357
Epoch Step: 185 / 730 Loss: 0.7147635817527771 Tokens per Sec: 14844.939668147686
Epoch Step: 190 / 730 Loss: 3.05959153175354 Tokens per Sec: 21298.998943209775
Epoch Step: 195 / 730 Loss: 3.8362839221954346 Tokens per Sec: 17300.41571055268
Epoch Step: 200 / 730 Loss: 3.4042749404907227 Tokens per Sec: 14730.880404066322
Epoch Step: 205 / 730 Loss: 0.7643364667892456 Tokens per Sec: 17830.235335608522
Epoch Step: 210 / 730 Loss: 1.5118721723556519 Tokens per Sec: 19047.143818441407
Epoch Step: 215 / 730 Loss: 2.799558162689209 Tokens per Sec: 18652.658670998146
Epoch Step: 220 / 730 Loss: 1.3923149108886719 Tokens per Sec: 19818.106549988715
Epoch Step: 225 / 730 Loss: 0.996322512626648 Tokens per Sec: 16836.685134505544
Epoch Step: 230 / 730 Loss: 2.0431926250457764 Tokens per Sec: 16995.510237994047
Epoch Step: 235 / 730 Loss: 1.1280360221862793 Tokens per Sec: 17426.182266238633
Epoch Step: 240 / 730 Loss: 1.4003002643585205 Tokens per Sec: 17010.70956183597
Epoch Step: 245 / 730 Loss: 4.437127113342285 Tokens per Sec: 18195.255104131542
Epoch Step: 250 / 730 Loss: 0.589670717716217 Tokens per Sec: 14910.897929053646
Epoch Step: 255 / 730 Loss: 2.9756972789764404 Tokens per Sec: 17954.277817003906
Epoch Step: 260 / 730 Loss: 2.8212356567382812 Tokens per Sec: 18591.50263771872
Epoch Step: 265 / 730 Loss: 19.888103485107422 Tokens per Sec: 17489.11221060561
Epoch Step: 270 / 730 Loss: 1.2130731344223022 Tokens per Sec: 16919.28101135759
Epoch Step: 275 / 730 Loss: 1.5408803224563599 Tokens per Sec: 14605.28340609014
Epoch Step: 280 / 730 Loss: 3.9733164310455322 Tokens per Sec: 19228.76957263868
Epoch Step: 285 / 730 Loss: 0.35601019859313965 Tokens per Sec: 16022.07486094203
Epoch Step: 290 / 730 Loss: 3.8585071563720703 Tokens per Sec: 19724.705834064847
Epoch Step: 295 / 730 Loss: 1.0921849012374878 Tokens per Sec: 16606.72199629017
Epoch Step: 300 / 730 Loss: 0.6655261516571045 Tokens per Sec: 15049.248557288352
Epoch Step: 305 / 730 Loss: 1.481750249862671 Tokens per Sec: 16320.53827360481
Epoch Step: 310 / 730 Loss: 1.3746001720428467 Tokens per Sec: 16189.833193336242
Epoch Step: 315 / 730 Loss: 0.5550771951675415 Tokens per Sec: 16510.63821245449
Epoch Step: 320 / 730 Loss: 30.838809967041016 Tokens per Sec: 15355.926439051285
Epoch Step: 325 / 730 Loss: 2.7711470127105713 Tokens per Sec: 15106.80424669134
Epoch Step: 330 / 730 Loss: 1.5271083116531372 Tokens per Sec: 16211.84928890704
Epoch Step: 335 / 730 Loss: 2.8510680198669434 Tokens per Sec: 20603.01860259611
Epoch Step: 340 / 730 Loss: 1.315478801727295 Tokens per Sec: 18090.43779572649
Epoch Step: 345 / 730 Loss: 2.5842912197113037 Tokens per Sec: 17978.51131254827
Epoch Step: 350 / 730 Loss: 2.315840005874634 Tokens per Sec: 19108.06829850159
Epoch Step: 355 / 730 Loss: 2.959294319152832 Tokens per Sec: 18412.35239867761
Epoch Step: 360 / 730 Loss: 0.6870307922363281 Tokens per Sec: 20008.795610823116
Epoch Step: 365 / 730 Loss: 1.779699683189392 Tokens per Sec: 19060.75563784168
Epoch Step: 370 / 730 Loss: 2.078547716140747 Tokens per Sec: 18150.032609333997
Epoch Step: 375 / 730 Loss: 1.907060146331787 Tokens per Sec: 19614.261725899123
Epoch Step: 380 / 730 Loss: 48.94895935058594 Tokens per Sec: 16064.389219367917
Epoch Step: 385 / 730 Loss: 20.521303176879883 Tokens per Sec: 18508.67037850681
Epoch Step: 390 / 730 Loss: 0.9231034517288208 Tokens per Sec: 17945.21178380475
Epoch Step: 395 / 730 Loss: 0.38537558913230896 Tokens per Sec: 17252.45775336904
Epoch Step: 400 / 730 Loss: 1.6744288206100464 Tokens per Sec: 16338.380778880957
Epoch Step: 405 / 730 Loss: 2.919816732406616 Tokens per Sec: 18836.259186042636
Epoch Step: 410 / 730 Loss: 0.7652612328529358 Tokens per Sec: 17890.556674779564
Epoch Step: 415 / 730 Loss: 2.9031643867492676 Tokens per Sec: 18390.037215005774
Epoch Step: 420 / 730 Loss: 0.527812123298645 Tokens per Sec: 20653.28020078009
Epoch Step: 425 / 730 Loss: 0.8765628337860107 Tokens per Sec: 17508.383777470077
Epoch Step: 430 / 730 Loss: 0.840146005153656 Tokens per Sec: 20159.735788201942
Epoch Step: 435 / 730 Loss: 0.5197533369064331 Tokens per Sec: 17353.474133774194
Epoch Step: 440 / 730 Loss: 4.803241729736328 Tokens per Sec: 18263.32991375469
Epoch Step: 445 / 730 Loss: 1.6407535076141357 Tokens per Sec: 14574.000447266095
Epoch Step: 450 / 730 Loss: 5.4054107666015625 Tokens per Sec: 16861.68820972921
Epoch Step: 455 / 730 Loss: 22.109453201293945 Tokens per Sec: 20475.795445568012
Epoch Step: 460 / 730 Loss: 0.9836217761039734 Tokens per Sec: 17054.141071511942
Epoch Step: 465 / 730 Loss: 1.6192625761032104 Tokens per Sec: 17003.261386870832
Epoch Step: 470 / 730 Loss: 1.1772552728652954 Tokens per Sec: 15618.046102114933
Epoch Step: 475 / 730 Loss: 0.9028772711753845 Tokens per Sec: 15597.881413714655
Epoch Step: 480 / 730 Loss: 0.9586846828460693 Tokens per Sec: 18995.025855201173
Epoch Step: 485 / 730 Loss: 2.1911416053771973 Tokens per Sec: 17941.03808595897
Epoch Step: 490 / 730 Loss: 1.1837166547775269 Tokens per Sec: 15212.147890259868
Epoch Step: 495 / 730 Loss: 3.476823568344116 Tokens per Sec: 18117.438799690193
Epoch Step: 500 / 730 Loss: 1.5779881477355957 Tokens per Sec: 17319.827979190155
Epoch Step: 505 / 730 Loss: 0.30383217334747314 Tokens per Sec: 20283.080913086815
Epoch Step: 510 / 730 Loss: 1.366979956626892 Tokens per Sec: 20766.76725368683
Epoch Step: 515 / 730 Loss: 0.20691007375717163 Tokens per Sec: 19264.348465110066
Epoch Step: 520 / 730 Loss: 21.451509475708008 Tokens per Sec: 17531.142025903817
Epoch Step: 525 / 730 Loss: 1.52500581741333 Tokens per Sec: 14991.23164295795
Epoch Step: 530 / 730 Loss: 0.4587048888206482 Tokens per Sec: 18857.766116185565
Epoch Step: 535 / 730 Loss: 1.1982545852661133 Tokens per Sec: 16465.0646687618
Epoch Step: 540 / 730 Loss: 0.31606510281562805 Tokens per Sec: 17839.857009243948
Epoch Step: 545 / 730 Loss: 3.4357941150665283 Tokens per Sec: 17154.66891551002
Epoch Step: 550 / 730 Loss: 2.0376486778259277 Tokens per Sec: 15416.19458622137
Epoch Step: 555 / 730 Loss: 1.1406625509262085 Tokens per Sec: 17730.01656023186
Epoch Step: 560 / 730 Loss: 1.17475426197052 Tokens per Sec: 18211.87032211469
Epoch Step: 565 / 730 Loss: 1.5457638502120972 Tokens per Sec: 16370.402099549136
Epoch Step: 570 / 730 Loss: 0.6788507699966431 Tokens per Sec: 16180.731860578664
Epoch Step: 575 / 730 Loss: 0.8095318675041199 Tokens per Sec: 17149.64288026971
Epoch Step: 580 / 730 Loss: 2.2137317657470703 Tokens per Sec: 19066.55802965701
Epoch Step: 585 / 730 Loss: 3.581186532974243 Tokens per Sec: 16794.7322119
Epoch Step: 590 / 730 Loss: 0.8510181307792664 Tokens per Sec: 18088.457133638785
Epoch Step: 595 / 730 Loss: 0.4820447266101837 Tokens per Sec: 17924.439039740468
Epoch Step: 600 / 730 Loss: 1.6899964809417725 Tokens per Sec: 15619.37696434596
Epoch Step: 605 / 730 Loss: 1.1282265186309814 Tokens per Sec: 14731.89521670155
Epoch Step: 610 / 730 Loss: 0.8991680145263672 Tokens per Sec: 20881.726756859593
Epoch Step: 615 / 730 Loss: 2.5373284816741943 Tokens per Sec: 17602.723876602176
Epoch Step: 620 / 730 Loss: 1.9051393270492554 Tokens per Sec: 16940.29762058959
Epoch Step: 625 / 730 Loss: 0.30747318267822266 Tokens per Sec: 16815.49710527894
Epoch Step: 630 / 730 Loss: 0.7713773250579834 Tokens per Sec: 14714.79953797993
Epoch Step: 635 / 730 Loss: 3.193430185317993 Tokens per Sec: 21279.802101049612
Epoch Step: 640 / 730 Loss: 1.1748161315917969 Tokens per Sec: 19522.35749496984
Epoch Step: 645 / 730 Loss: 2.198787212371826 Tokens per Sec: 18259.29180996857
Epoch Step: 650 / 730 Loss: 2.1331045627593994 Tokens per Sec: 19418.98474725465
Epoch Step: 655 / 730 Loss: 1.8438138961791992 Tokens per Sec: 19091.303659428853
Epoch Step: 660 / 730 Loss: 0.2017216980457306 Tokens per Sec: 17457.318303171396
Epoch Step: 665 / 730 Loss: 3.7191004753112793 Tokens per Sec: 18706.002602488094
Epoch Step: 670 / 730 Loss: 1.9883008003234863 Tokens per Sec: 20110.716062645024
Epoch Step: 675 / 730 Loss: 0.7272229790687561 Tokens per Sec: 14853.999054656884
Epoch Step: 680 / 730 Loss: 2.4643948078155518 Tokens per Sec: 17119.53308467366
Epoch Step: 685 / 730 Loss: 1.661320686340332 Tokens per Sec: 20117.440735317356
Epoch Step: 690 / 730 Loss: 2.802719831466675 Tokens per Sec: 15856.587454078823
Epoch Step: 695 / 730 Loss: 0.4978422522544861 Tokens per Sec: 17128.40896256784
Epoch Step: 700 / 730 Loss: 21.58359718322754 Tokens per Sec: 14021.84096250438
Epoch Step: 705 / 730 Loss: 1.955432653427124 Tokens per Sec: 14679.339024366693
Epoch Step: 710 / 730 Loss: 0.51749187707901 Tokens per Sec: 15607.209474327066
Epoch Step: 715 / 730 Loss: 2.567600727081299 Tokens per Sec: 15387.686468534379
Epoch Step: 720 / 730 Loss: 1.7681653499603271 Tokens per Sec: 14624.649199943551
Epoch Step: 725 / 730 Loss: 1.9885636568069458 Tokens per Sec: 13926.662423126714
Epoch Step: 730 / 730 Loss: 1.7261136770248413 Tokens per Sec: 15651.045181311145
Epoch ended with duration 0:01:20.095148
Train perplexity: 1.1207695346539497
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > , java.util.List < java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , message ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.316815
Validation perplexity: 1.2278494731579477
Epoch 50 / 1000
Epoch Step: 5 / 730 Loss: 0.8381773233413696 Tokens per Sec: 16303.21039837723
Epoch Step: 10 / 730 Loss: 3.3803884983062744 Tokens per Sec: 18272.85207369864
Epoch Step: 15 / 730 Loss: 1.3961211442947388 Tokens per Sec: 21017.939934902835
Epoch Step: 20 / 730 Loss: 2.0568437576293945 Tokens per Sec: 18692.596556277043
Epoch Step: 25 / 730 Loss: 1.3620786666870117 Tokens per Sec: 20212.68740061359
Epoch Step: 30 / 730 Loss: 0.8023565411567688 Tokens per Sec: 17809.84428649786
Epoch Step: 35 / 730 Loss: 1.7020014524459839 Tokens per Sec: 16919.208225460978
Epoch Step: 40 / 730 Loss: 1.054112195968628 Tokens per Sec: 18464.466960860827
Epoch Step: 45 / 730 Loss: 0.5973703861236572 Tokens per Sec: 15435.26518476965
Epoch Step: 50 / 730 Loss: 1.7513483762741089 Tokens per Sec: 17106.545066733303
Epoch Step: 55 / 730 Loss: 2.4789130687713623 Tokens per Sec: 18748.145236544133
Epoch Step: 60 / 730 Loss: 0.45413845777511597 Tokens per Sec: 20633.99905478618
Epoch Step: 65 / 730 Loss: 1.1601884365081787 Tokens per Sec: 17319.63442358443
Epoch Step: 70 / 730 Loss: 0.4199850857257843 Tokens per Sec: 17684.611633615143
Epoch Step: 75 / 730 Loss: 0.8876562118530273 Tokens per Sec: 17961.988779923773
Epoch Step: 80 / 730 Loss: 2.7027971744537354 Tokens per Sec: 16381.535698525618
Epoch Step: 85 / 730 Loss: 0.9767122268676758 Tokens per Sec: 15234.59750590784
Epoch Step: 90 / 730 Loss: 1.828993797302246 Tokens per Sec: 16931.46547296754
Epoch Step: 95 / 730 Loss: 2.66504168510437 Tokens per Sec: 18435.503381678653
Epoch Step: 100 / 730 Loss: 0.9523962736129761 Tokens per Sec: 16940.508224756803
Epoch Step: 105 / 730 Loss: 0.9137211441993713 Tokens per Sec: 17970.17823619028
Epoch Step: 110 / 730 Loss: 0.7363895177841187 Tokens per Sec: 14480.276549746233
Epoch Step: 115 / 730 Loss: 2.279418468475342 Tokens per Sec: 19938.296021713057
Epoch Step: 120 / 730 Loss: 0.32399502396583557 Tokens per Sec: 20565.80742258994
Epoch Step: 125 / 730 Loss: 1.1341522932052612 Tokens per Sec: 20271.79744610737
Epoch Step: 130 / 730 Loss: 2.5492422580718994 Tokens per Sec: 17097.501362120955
Epoch Step: 135 / 730 Loss: 1.3061906099319458 Tokens per Sec: 16856.35742898627
Epoch Step: 140 / 730 Loss: 1.8391379117965698 Tokens per Sec: 17966.17973227847
Epoch Step: 145 / 730 Loss: 0.950203001499176 Tokens per Sec: 16814.54421156327
Epoch Step: 150 / 730 Loss: 5.142743110656738 Tokens per Sec: 17967.398946275076
Epoch Step: 155 / 730 Loss: 1.0895167589187622 Tokens per Sec: 17532.2241147126
Epoch Step: 160 / 730 Loss: 1.2586514949798584 Tokens per Sec: 15447.04883216906
Epoch Step: 165 / 730 Loss: 2.008058786392212 Tokens per Sec: 20013.64999357884
Epoch Step: 170 / 730 Loss: 0.810340940952301 Tokens per Sec: 20112.088779953825
Epoch Step: 175 / 730 Loss: 2.3309614658355713 Tokens per Sec: 16712.585257647945
Epoch Step: 180 / 730 Loss: 1.017760157585144 Tokens per Sec: 16877.787978088974
Epoch Step: 185 / 730 Loss: 1.660384178161621 Tokens per Sec: 13227.607325488842
Epoch Step: 190 / 730 Loss: 0.6404702663421631 Tokens per Sec: 16494.873443839544
Epoch Step: 195 / 730 Loss: 1.3028907775878906 Tokens per Sec: 19163.046426153855
Epoch Step: 200 / 730 Loss: 21.466171264648438 Tokens per Sec: 18967.19444366775
Epoch Step: 205 / 730 Loss: 3.2136030197143555 Tokens per Sec: 17766.49583141826
Epoch Step: 210 / 730 Loss: 2.3681859970092773 Tokens per Sec: 17124.780352549533
Epoch Step: 215 / 730 Loss: 0.48745784163475037 Tokens per Sec: 18037.037841477762
Epoch Step: 220 / 730 Loss: 2.9318675994873047 Tokens per Sec: 20706.332195699735
Epoch Step: 225 / 730 Loss: 1.433837652206421 Tokens per Sec: 18099.581311845504
Epoch Step: 230 / 730 Loss: 2.001427173614502 Tokens per Sec: 15431.173989534069
Epoch Step: 235 / 730 Loss: 0.8257037997245789 Tokens per Sec: 16565.72116363108
Epoch Step: 240 / 730 Loss: 1.5049223899841309 Tokens per Sec: 18201.78185338144
Epoch Step: 245 / 730 Loss: 1.4630773067474365 Tokens per Sec: 17572.318639712663
Epoch Step: 250 / 730 Loss: 0.7526980042457581 Tokens per Sec: 18885.707285227447
Epoch Step: 255 / 730 Loss: 0.5886152982711792 Tokens per Sec: 19117.27774590425
Epoch Step: 260 / 730 Loss: 1.188589096069336 Tokens per Sec: 20269.976945880142
Epoch Step: 265 / 730 Loss: 1.2576509714126587 Tokens per Sec: 17763.438966438687
Epoch Step: 270 / 730 Loss: 0.38289451599121094 Tokens per Sec: 18064.808651096457
Epoch Step: 275 / 730 Loss: 2.7753844261169434 Tokens per Sec: 18226.104420163334
Epoch Step: 280 / 730 Loss: 1.6615941524505615 Tokens per Sec: 17787.740536030138
Epoch Step: 285 / 730 Loss: 3.2426037788391113 Tokens per Sec: 16374.950402951452
Epoch Step: 290 / 730 Loss: 0.6150303483009338 Tokens per Sec: 14410.079140513608
Epoch Step: 295 / 730 Loss: 2.956592559814453 Tokens per Sec: 16246.177510729614
Epoch Step: 300 / 730 Loss: 1.2680000066757202 Tokens per Sec: 16667.95557473096
Epoch Step: 305 / 730 Loss: 3.629167079925537 Tokens per Sec: 18948.08163052119
Epoch Step: 310 / 730 Loss: 14.156814575195312 Tokens per Sec: 17955.334052084832
Epoch Step: 315 / 730 Loss: 0.6924652457237244 Tokens per Sec: 15791.636540505486
Epoch Step: 320 / 730 Loss: 44.97153091430664 Tokens per Sec: 16530.321383404476
Epoch Step: 325 / 730 Loss: 0.6306153535842896 Tokens per Sec: 17358.32262268045
Epoch Step: 330 / 730 Loss: 1.1702260971069336 Tokens per Sec: 17672.897900895463
Epoch Step: 335 / 730 Loss: 1.9169139862060547 Tokens per Sec: 20240.538085249333
Epoch Step: 340 / 730 Loss: 1.2798413038253784 Tokens per Sec: 18994.45359046903
Epoch Step: 345 / 730 Loss: 3.198429584503174 Tokens per Sec: 18811.18169939119
Epoch Step: 350 / 730 Loss: 2.41182017326355 Tokens per Sec: 19245.10227603489
Epoch Step: 355 / 730 Loss: 0.7730711102485657 Tokens per Sec: 19419.97613763149
Epoch Step: 360 / 730 Loss: 3.0851447582244873 Tokens per Sec: 18002.875056795758
Epoch Step: 365 / 730 Loss: 17.77617645263672 Tokens per Sec: 16914.84051809317
Epoch Step: 370 / 730 Loss: 3.0403642654418945 Tokens per Sec: 17185.56567285497
Epoch Step: 375 / 730 Loss: 0.6382174491882324 Tokens per Sec: 18059.384609219524
Epoch Step: 380 / 730 Loss: 4.818913459777832 Tokens per Sec: 16846.47821672647
Epoch Step: 385 / 730 Loss: 1.4500929117202759 Tokens per Sec: 16340.746771866096
Epoch Step: 390 / 730 Loss: 2.6256649494171143 Tokens per Sec: 17386.942650174973
Epoch Step: 395 / 730 Loss: 0.27241095900535583 Tokens per Sec: 16074.043534555765
Epoch Step: 400 / 730 Loss: 1.2754695415496826 Tokens per Sec: 18169.293894851333
Epoch Step: 405 / 730 Loss: 0.8114470839500427 Tokens per Sec: 16208.00022802042
Epoch Step: 410 / 730 Loss: 1.7428505420684814 Tokens per Sec: 18693.96108936457
Epoch Step: 415 / 730 Loss: 0.38232555985450745 Tokens per Sec: 16025.579427142155
Epoch Step: 420 / 730 Loss: 0.7101774215698242 Tokens per Sec: 17714.697745116093
Epoch Step: 425 / 730 Loss: 2.539949417114258 Tokens per Sec: 18743.238458670447
Epoch Step: 430 / 730 Loss: 1.8042939901351929 Tokens per Sec: 18170.892305176574
Epoch Step: 435 / 730 Loss: 1.5737171173095703 Tokens per Sec: 16691.788640495663
Epoch Step: 440 / 730 Loss: 1.7935221195220947 Tokens per Sec: 14726.144153061732
Epoch Step: 445 / 730 Loss: 10.319859504699707 Tokens per Sec: 16616.807805803128
Epoch Step: 450 / 730 Loss: 41.175621032714844 Tokens per Sec: 14681.97595111374
Epoch Step: 455 / 730 Loss: 0.8436912298202515 Tokens per Sec: 15586.639809372282
Epoch Step: 460 / 730 Loss: 3.7005903720855713 Tokens per Sec: 18509.726390114738
Epoch Step: 465 / 730 Loss: 1.61714506149292 Tokens per Sec: 17545.421495279134
Epoch Step: 470 / 730 Loss: 0.7256590127944946 Tokens per Sec: 17705.504602909612
Epoch Step: 475 / 730 Loss: 3.3095569610595703 Tokens per Sec: 18409.584089418342
Epoch Step: 480 / 730 Loss: 2.4663827419281006 Tokens per Sec: 18082.013796811712
Epoch Step: 485 / 730 Loss: 2.163567304611206 Tokens per Sec: 19320.182938392412
Epoch Step: 490 / 730 Loss: 0.9122490882873535 Tokens per Sec: 19793.455604463416
Epoch Step: 495 / 730 Loss: 0.6073044538497925 Tokens per Sec: 21670.92069396222
Epoch Step: 500 / 730 Loss: 1.1713811159133911 Tokens per Sec: 18093.86404938034
Epoch Step: 505 / 730 Loss: 1.7945421934127808 Tokens per Sec: 21404.748464668795
Epoch Step: 510 / 730 Loss: 0.5101830959320068 Tokens per Sec: 15839.304068371539
Epoch Step: 515 / 730 Loss: 2.9125640392303467 Tokens per Sec: 16691.460497253916
Epoch Step: 520 / 730 Loss: 0.6441454887390137 Tokens per Sec: 14803.662925326504
Epoch Step: 525 / 730 Loss: 1.48846435546875 Tokens per Sec: 19166.404114227716
Epoch Step: 530 / 730 Loss: 1.124812126159668 Tokens per Sec: 19784.618266814014
Epoch Step: 535 / 730 Loss: 0.42737525701522827 Tokens per Sec: 12348.76971866814
Epoch Step: 540 / 730 Loss: 2.532458782196045 Tokens per Sec: 19378.873551921217
Epoch Step: 545 / 730 Loss: 0.9247868061065674 Tokens per Sec: 20914.629943824693
Epoch Step: 550 / 730 Loss: 0.9240137934684753 Tokens per Sec: 18853.546183079274
Epoch Step: 555 / 730 Loss: 0.7452924251556396 Tokens per Sec: 18232.46076709179
Epoch Step: 560 / 730 Loss: 0.48989564180374146 Tokens per Sec: 19386.68351099372
Epoch Step: 565 / 730 Loss: 0.4977550506591797 Tokens per Sec: 17527.01034370456
Epoch Step: 570 / 730 Loss: 5.623895645141602 Tokens per Sec: 16790.00670072015
Epoch Step: 575 / 730 Loss: 2.558957099914551 Tokens per Sec: 15944.803064377902
Epoch Step: 580 / 730 Loss: 3.980476140975952 Tokens per Sec: 14788.16169903018
Epoch Step: 585 / 730 Loss: 2.2905161380767822 Tokens per Sec: 17267.259625326504
Epoch Step: 590 / 730 Loss: 1.270224928855896 Tokens per Sec: 16135.96879764726
Epoch Step: 595 / 730 Loss: 1.9693734645843506 Tokens per Sec: 18843.386381759705
Epoch Step: 600 / 730 Loss: 13.116678237915039 Tokens per Sec: 16478.957063850994
Epoch Step: 605 / 730 Loss: 4.814202785491943 Tokens per Sec: 17135.241606043543
Epoch Step: 610 / 730 Loss: 1.825232744216919 Tokens per Sec: 18426.936955730078
Epoch Step: 615 / 730 Loss: 0.7663503289222717 Tokens per Sec: 17660.140276125276
Epoch Step: 620 / 730 Loss: 1.044903039932251 Tokens per Sec: 19939.52940052101
Epoch Step: 625 / 730 Loss: 1.3091530799865723 Tokens per Sec: 17831.436401319777
Epoch Step: 630 / 730 Loss: 29.129417419433594 Tokens per Sec: 18024.68926582256
Epoch Step: 635 / 730 Loss: 2.710254192352295 Tokens per Sec: 18373.535895971796
Epoch Step: 640 / 730 Loss: 2.499168634414673 Tokens per Sec: 16738.19637427423
Epoch Step: 645 / 730 Loss: 2.2791202068328857 Tokens per Sec: 18787.19531284145
Epoch Step: 650 / 730 Loss: 23.206897735595703 Tokens per Sec: 17777.570532661837
Epoch Step: 655 / 730 Loss: 30.959970474243164 Tokens per Sec: 16348.670256212996
Epoch Step: 660 / 730 Loss: 3.270395040512085 Tokens per Sec: 20409.812979985996
Epoch Step: 665 / 730 Loss: 3.821324348449707 Tokens per Sec: 18365.509603385897
Epoch Step: 670 / 730 Loss: 0.6874240636825562 Tokens per Sec: 11032.762511052166
Epoch Step: 675 / 730 Loss: 4.943452835083008 Tokens per Sec: 14766.777990275057
Epoch Step: 680 / 730 Loss: 0.9603937268257141 Tokens per Sec: 18451.676696734467
Epoch Step: 685 / 730 Loss: 0.5051677823066711 Tokens per Sec: 15346.4795462696
Epoch Step: 690 / 730 Loss: 0.948957622051239 Tokens per Sec: 15153.07384324174
Epoch Step: 695 / 730 Loss: 2.133505344390869 Tokens per Sec: 20233.932859932236
Epoch Step: 700 / 730 Loss: 1.168046474456787 Tokens per Sec: 19652.308870444056
Epoch Step: 705 / 730 Loss: 2.58882737159729 Tokens per Sec: 15550.70245575294
Epoch Step: 710 / 730 Loss: 2.1583728790283203 Tokens per Sec: 14835.151148661369
Epoch Step: 715 / 730 Loss: 2.104597806930542 Tokens per Sec: 12124.760538005157
Epoch Step: 720 / 730 Loss: 2.6176936626434326 Tokens per Sec: 14396.3838469432
Epoch Step: 725 / 730 Loss: 2.7288427352905273 Tokens per Sec: 15497.373602283555
Epoch Step: 730 / 730 Loss: 1.7865327596664429 Tokens per Sec: 16793.70794967444
Epoch ended with duration 0:01:19.772516
Train perplexity: 1.095835035616719
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > parameters ) { return METHOD_1 ( VAR_1 , VAR_1 . toString ( ) , VAR_2 , message ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.305108
Validation perplexity: 1.2213900564827962
Model saved checkpoint!
Epoch 51 / 1000
Epoch Step: 5 / 730 Loss: 0.9183414578437805 Tokens per Sec: 15836.534274972544
Epoch Step: 10 / 730 Loss: 0.2154778242111206 Tokens per Sec: 17769.65815385503
Epoch Step: 15 / 730 Loss: 0.8345747590065002 Tokens per Sec: 16121.56102727032
Epoch Step: 20 / 730 Loss: 3.6483640670776367 Tokens per Sec: 20092.21717725594
Epoch Step: 25 / 730 Loss: 1.4533030986785889 Tokens per Sec: 21410.78459431762
Epoch Step: 30 / 730 Loss: 0.3301417827606201 Tokens per Sec: 15688.054422170791
Epoch Step: 35 / 730 Loss: 1.4568525552749634 Tokens per Sec: 19032.28547204573
Epoch Step: 40 / 730 Loss: 0.8681927919387817 Tokens per Sec: 15884.754147803307
Epoch Step: 45 / 730 Loss: 1.8946034908294678 Tokens per Sec: 17609.560157869273
Epoch Step: 50 / 730 Loss: 0.3650577664375305 Tokens per Sec: 13459.83399382103
Epoch Step: 55 / 730 Loss: 0.713760256767273 Tokens per Sec: 20087.301728483835
Epoch Step: 60 / 730 Loss: 1.041567325592041 Tokens per Sec: 19025.089063262185
Epoch Step: 65 / 730 Loss: 37.78324890136719 Tokens per Sec: 19976.92705935277
Epoch Step: 70 / 730 Loss: 2.4075980186462402 Tokens per Sec: 18812.361727859952
Epoch Step: 75 / 730 Loss: 1.418474793434143 Tokens per Sec: 18866.36290454633
Epoch Step: 80 / 730 Loss: 0.5460789799690247 Tokens per Sec: 17494.45729852998
Epoch Step: 85 / 730 Loss: 1.906963586807251 Tokens per Sec: 18246.15526767598
Epoch Step: 90 / 730 Loss: 0.8533554077148438 Tokens per Sec: 15634.999073496068
Epoch Step: 95 / 730 Loss: 0.7925673127174377 Tokens per Sec: 17727.548826252343
Epoch Step: 100 / 730 Loss: 0.8400846719741821 Tokens per Sec: 15183.146943741262
Epoch Step: 105 / 730 Loss: 4.208293914794922 Tokens per Sec: 18330.297641211775
Epoch Step: 110 / 730 Loss: 0.23629625141620636 Tokens per Sec: 15140.486074863373
Epoch Step: 115 / 730 Loss: 2.8721818923950195 Tokens per Sec: 16806.07632323957
Epoch Step: 120 / 730 Loss: 0.8794891238212585 Tokens per Sec: 17908.387213349597
Epoch Step: 125 / 730 Loss: 0.9642712473869324 Tokens per Sec: 17658.96980297386
Epoch Step: 130 / 730 Loss: 4.0361433029174805 Tokens per Sec: 16739.47570082456
Epoch Step: 135 / 730 Loss: 3.0199427604675293 Tokens per Sec: 17906.471055453403
Epoch Step: 140 / 730 Loss: 0.47312089800834656 Tokens per Sec: 17035.82859308321
Epoch Step: 145 / 730 Loss: 1.4582546949386597 Tokens per Sec: 17535.339619284823
Epoch Step: 150 / 730 Loss: 1.5211687088012695 Tokens per Sec: 16817.86308520784
Epoch Step: 155 / 730 Loss: 1.4064130783081055 Tokens per Sec: 17485.680164224563
Epoch Step: 160 / 730 Loss: 2.3714396953582764 Tokens per Sec: 18161.81659830242
Epoch Step: 165 / 730 Loss: 2.8431599140167236 Tokens per Sec: 20137.089952347338
Epoch Step: 170 / 730 Loss: 0.7553220987319946 Tokens per Sec: 17205.139826055783
Epoch Step: 175 / 730 Loss: 1.248403549194336 Tokens per Sec: 16435.144272349335
Epoch Step: 180 / 730 Loss: 16.842348098754883 Tokens per Sec: 16514.338165331552
Epoch Step: 185 / 730 Loss: 1.1630569696426392 Tokens per Sec: 18953.81895589127
Epoch Step: 190 / 730 Loss: 2.3591525554656982 Tokens per Sec: 16893.396312484205
Epoch Step: 195 / 730 Loss: 0.7804858684539795 Tokens per Sec: 20642.808500921532
Epoch Step: 200 / 730 Loss: 2.6733524799346924 Tokens per Sec: 18756.5752152755
Epoch Step: 205 / 730 Loss: 0.9869701862335205 Tokens per Sec: 19118.320557923562
Epoch Step: 210 / 730 Loss: 0.33932778239250183 Tokens per Sec: 19023.200295816554
Epoch Step: 215 / 730 Loss: 3.523538112640381 Tokens per Sec: 19556.888696317827
Epoch Step: 220 / 730 Loss: 0.41146165132522583 Tokens per Sec: 21420.169205879367
Epoch Step: 225 / 730 Loss: 0.4978206157684326 Tokens per Sec: 16967.363472115907
Epoch Step: 230 / 730 Loss: 1.5687952041625977 Tokens per Sec: 19462.879128043503
Epoch Step: 235 / 730 Loss: 3.3924901485443115 Tokens per Sec: 18953.709292133604
Epoch Step: 240 / 730 Loss: 2.0996177196502686 Tokens per Sec: 15297.361422247057
Epoch Step: 245 / 730 Loss: 3.118713140487671 Tokens per Sec: 16320.515682505345
Epoch Step: 250 / 730 Loss: 3.47003436088562 Tokens per Sec: 19497.537419119195
Epoch Step: 255 / 730 Loss: 0.611972451210022 Tokens per Sec: 17950.52962987957
Epoch Step: 260 / 730 Loss: 0.6151705384254456 Tokens per Sec: 15957.862733920376
Epoch Step: 265 / 730 Loss: 0.47463682293891907 Tokens per Sec: 18622.690945886385
Epoch Step: 270 / 730 Loss: 0.777388334274292 Tokens per Sec: 13472.480961097219
Epoch Step: 275 / 730 Loss: 0.9753233790397644 Tokens per Sec: 18993.105494048745
Epoch Step: 280 / 730 Loss: 2.6394848823547363 Tokens per Sec: 18416.872379147087
Epoch Step: 285 / 730 Loss: 30.403974533081055 Tokens per Sec: 16887.10881569256
Epoch Step: 290 / 730 Loss: 2.5207438468933105 Tokens per Sec: 16784.637410832005
Epoch Step: 295 / 730 Loss: 4.148420333862305 Tokens per Sec: 14556.384743686926
Epoch Step: 300 / 730 Loss: 1.7776824235916138 Tokens per Sec: 16783.480483534826
Epoch Step: 305 / 730 Loss: 0.09598240256309509 Tokens per Sec: 16173.601674848052
Epoch Step: 310 / 730 Loss: 2.828212261199951 Tokens per Sec: 16665.31617005906
Epoch Step: 315 / 730 Loss: 0.8564204573631287 Tokens per Sec: 20356.517503246323
Epoch Step: 320 / 730 Loss: 0.5629658102989197 Tokens per Sec: 17406.70957918972
Epoch Step: 325 / 730 Loss: 2.4579036235809326 Tokens per Sec: 19633.823747928647
Epoch Step: 330 / 730 Loss: 0.4253780245780945 Tokens per Sec: 20327.91866868783
Epoch Step: 335 / 730 Loss: 1.3594470024108887 Tokens per Sec: 14926.162968059058
Epoch Step: 340 / 730 Loss: 1.2605291604995728 Tokens per Sec: 17664.988513809578
Epoch Step: 345 / 730 Loss: 1.1685819625854492 Tokens per Sec: 20163.35213952776
Epoch Step: 350 / 730 Loss: 4.531175136566162 Tokens per Sec: 17143.516708343173
Epoch Step: 355 / 730 Loss: 5.926959037780762 Tokens per Sec: 16769.800734533772
Epoch Step: 360 / 730 Loss: 1.545546293258667 Tokens per Sec: 18067.670363309255
Epoch Step: 365 / 730 Loss: 2.8432233333587646 Tokens per Sec: 16870.811797072212
Epoch Step: 370 / 730 Loss: 0.9648702144622803 Tokens per Sec: 17493.798301708222
Epoch Step: 375 / 730 Loss: 0.965913712978363 Tokens per Sec: 16160.11842851135
Epoch Step: 380 / 730 Loss: 1.9175735712051392 Tokens per Sec: 14554.379941917781
Epoch Step: 385 / 730 Loss: 0.6294248104095459 Tokens per Sec: 18651.451839528476
Epoch Step: 390 / 730 Loss: 1.165464997291565 Tokens per Sec: 20528.35859367821
Epoch Step: 395 / 730 Loss: 1.1415756940841675 Tokens per Sec: 16744.808414022827
Epoch Step: 400 / 730 Loss: 3.730109453201294 Tokens per Sec: 19755.102539761818
Epoch Step: 405 / 730 Loss: 2.4115469455718994 Tokens per Sec: 17978.108135420935
Epoch Step: 410 / 730 Loss: 0.7585427761077881 Tokens per Sec: 16836.044988716265
Epoch Step: 415 / 730 Loss: 2.761004686355591 Tokens per Sec: 19082.24127089661
Epoch Step: 420 / 730 Loss: 1.538352370262146 Tokens per Sec: 14465.851300849872
Epoch Step: 425 / 730 Loss: 0.8105392456054688 Tokens per Sec: 16426.840278713295
Epoch Step: 430 / 730 Loss: 1.1821142435073853 Tokens per Sec: 16181.681472789289
Epoch Step: 435 / 730 Loss: 9.679624557495117 Tokens per Sec: 20000.227056893506
Epoch Step: 440 / 730 Loss: 1.279687762260437 Tokens per Sec: 17460.503294620055
Epoch Step: 445 / 730 Loss: 2.1609270572662354 Tokens per Sec: 14443.994070121662
Epoch Step: 450 / 730 Loss: 1.3045697212219238 Tokens per Sec: 12880.694786585567
Epoch Step: 455 / 730 Loss: 2.9514029026031494 Tokens per Sec: 19888.550471573813
Epoch Step: 460 / 730 Loss: 0.5978589057922363 Tokens per Sec: 17648.34439715026
Epoch Step: 465 / 730 Loss: 0.3824012577533722 Tokens per Sec: 20258.626116278727
Epoch Step: 470 / 730 Loss: 1.5558303594589233 Tokens per Sec: 17318.42002694575
Epoch Step: 475 / 730 Loss: 1.4444278478622437 Tokens per Sec: 18640.232178469905
Epoch Step: 480 / 730 Loss: 4.006631851196289 Tokens per Sec: 19846.609717304615
Epoch Step: 485 / 730 Loss: 1.2276474237442017 Tokens per Sec: 19584.217956665438
Epoch Step: 490 / 730 Loss: 1.788513422012329 Tokens per Sec: 16799.48142665127
Epoch Step: 495 / 730 Loss: 0.519965410232544 Tokens per Sec: 17478.63255891912
Epoch Step: 500 / 730 Loss: 0.8722671270370483 Tokens per Sec: 18770.579705950535
Epoch Step: 505 / 730 Loss: 1.1976374387741089 Tokens per Sec: 18396.68394994435
Epoch Step: 510 / 730 Loss: 3.408087730407715 Tokens per Sec: 20246.792110226655
Epoch Step: 515 / 730 Loss: 3.7138407230377197 Tokens per Sec: 17180.420977693597
Epoch Step: 520 / 730 Loss: 17.579626083374023 Tokens per Sec: 15786.495623868672
Epoch Step: 525 / 730 Loss: 2.4961447715759277 Tokens per Sec: 14767.988986606384
Epoch Step: 530 / 730 Loss: 0.3074165880680084 Tokens per Sec: 19794.237132026192
Epoch Step: 535 / 730 Loss: 0.9422292709350586 Tokens per Sec: 18943.89029582861
Epoch Step: 540 / 730 Loss: 1.1462233066558838 Tokens per Sec: 17145.378542165035
Epoch Step: 545 / 730 Loss: 1.2376296520233154 Tokens per Sec: 19418.166554024654
Epoch Step: 550 / 730 Loss: 1.253036379814148 Tokens per Sec: 17435.338336482568
Epoch Step: 555 / 730 Loss: 1.17023503780365 Tokens per Sec: 16613.570099204975
Epoch Step: 560 / 730 Loss: 0.4286336898803711 Tokens per Sec: 17003.808436196512
Epoch Step: 565 / 730 Loss: 2.3038852214813232 Tokens per Sec: 19335.277887818513
Epoch Step: 570 / 730 Loss: 1.3848209381103516 Tokens per Sec: 14149.442350892079
Epoch Step: 575 / 730 Loss: 1.7912253141403198 Tokens per Sec: 16352.790886849421
Epoch Step: 580 / 730 Loss: 1.6973289251327515 Tokens per Sec: 17879.515810732613
Epoch Step: 585 / 730 Loss: 0.8840216398239136 Tokens per Sec: 20148.36726933322
Epoch Step: 590 / 730 Loss: 0.4757869839668274 Tokens per Sec: 19418.975483753926
Epoch Step: 595 / 730 Loss: 1.4990946054458618 Tokens per Sec: 17408.369521841687
Epoch Step: 600 / 730 Loss: 1.7660685777664185 Tokens per Sec: 17267.763857727456
Epoch Step: 605 / 730 Loss: 1.9611896276474 Tokens per Sec: 13381.09957405643
Epoch Step: 610 / 730 Loss: 1.6167635917663574 Tokens per Sec: 19066.407914728064
Epoch Step: 615 / 730 Loss: 1.2558324337005615 Tokens per Sec: 17361.98629683144
Epoch Step: 620 / 730 Loss: 1.218113899230957 Tokens per Sec: 16815.09199008865
Epoch Step: 625 / 730 Loss: 16.386789321899414 Tokens per Sec: 15749.521495429317
Epoch Step: 630 / 730 Loss: 2.239694118499756 Tokens per Sec: 17712.562002414015
Epoch Step: 635 / 730 Loss: 4.7450432777404785 Tokens per Sec: 15848.308432697557
Epoch Step: 640 / 730 Loss: 1.4040930271148682 Tokens per Sec: 14529.34030567134
Epoch Step: 645 / 730 Loss: 3.018152952194214 Tokens per Sec: 19122.89623781025
Epoch Step: 650 / 730 Loss: 1.524284839630127 Tokens per Sec: 18853.141855817063
Epoch Step: 655 / 730 Loss: 1.2260205745697021 Tokens per Sec: 18980.18197550791
Epoch Step: 660 / 730 Loss: 0.7480670809745789 Tokens per Sec: 19734.182195018384
Epoch Step: 665 / 730 Loss: 1.5128276348114014 Tokens per Sec: 17562.256875067942
Epoch Step: 670 / 730 Loss: 3.09200119972229 Tokens per Sec: 19529.305652593648
Epoch Step: 675 / 730 Loss: 0.09563836455345154 Tokens per Sec: 17968.936482238303
Epoch Step: 680 / 730 Loss: 1.3226169347763062 Tokens per Sec: 16876.614262906398
Epoch Step: 685 / 730 Loss: 0.24512068927288055 Tokens per Sec: 16380.435743571756
Epoch Step: 690 / 730 Loss: 0.8910641670227051 Tokens per Sec: 19827.841306503353
Epoch Step: 695 / 730 Loss: 1.7546982765197754 Tokens per Sec: 16133.679292892572
Epoch Step: 700 / 730 Loss: 1.4043116569519043 Tokens per Sec: 18405.553318844988
Epoch Step: 705 / 730 Loss: 1.0990813970565796 Tokens per Sec: 15645.939797272364
Epoch Step: 710 / 730 Loss: 3.525144100189209 Tokens per Sec: 12617.979503827315
Epoch Step: 715 / 730 Loss: 1.4859341382980347 Tokens per Sec: 14929.086817636713
Epoch Step: 720 / 730 Loss: 2.5958008766174316 Tokens per Sec: 15340.616143077274
Epoch Step: 725 / 730 Loss: 2.019521713256836 Tokens per Sec: 15314.940528212352
Epoch Step: 730 / 730 Loss: 2.0664291381835938 Tokens per Sec: 17372.93770178489
Epoch ended with duration 0:01:19.863672
Train perplexity: 1.1003491756869939
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > , java.lang.String > ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , message ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.287430
Validation perplexity: 1.2176427177675753
Epoch 52 / 1000
Epoch Step: 5 / 730 Loss: 1.6107524633407593 Tokens per Sec: 12960.677086646274
Epoch Step: 10 / 730 Loss: 1.3650782108306885 Tokens per Sec: 16816.596998724595
Epoch Step: 15 / 730 Loss: 1.2289484739303589 Tokens per Sec: 13554.682355958712
Epoch Step: 20 / 730 Loss: 2.7318639755249023 Tokens per Sec: 16328.996771214486
Epoch Step: 25 / 730 Loss: 1.5767107009887695 Tokens per Sec: 17189.11390437858
Epoch Step: 30 / 730 Loss: 2.2522010803222656 Tokens per Sec: 20056.62346185398
Epoch Step: 35 / 730 Loss: 0.4576049745082855 Tokens per Sec: 15721.998306015275
Epoch Step: 40 / 730 Loss: 0.2759038805961609 Tokens per Sec: 18631.804137257364
Epoch Step: 45 / 730 Loss: 1.0536481142044067 Tokens per Sec: 19420.406406349568
Epoch Step: 50 / 730 Loss: 0.5784529447555542 Tokens per Sec: 18835.09808319483
Epoch Step: 55 / 730 Loss: 24.79848289489746 Tokens per Sec: 17433.525686788318
Epoch Step: 60 / 730 Loss: 3.6302428245544434 Tokens per Sec: 16568.435180609235
Epoch Step: 65 / 730 Loss: 0.7400217652320862 Tokens per Sec: 16656.48256720196
Epoch Step: 70 / 730 Loss: 1.76066255569458 Tokens per Sec: 20504.459267291215
Epoch Step: 75 / 730 Loss: 1.0384280681610107 Tokens per Sec: 17180.985133831382
Epoch Step: 80 / 730 Loss: 2.2851064205169678 Tokens per Sec: 20443.832759168447
Epoch Step: 85 / 730 Loss: 1.2055718898773193 Tokens per Sec: 15946.134902840635
Epoch Step: 90 / 730 Loss: 0.3026278614997864 Tokens per Sec: 16656.409457082776
Epoch Step: 95 / 730 Loss: 1.9818906784057617 Tokens per Sec: 19619.198304633017
Epoch Step: 100 / 730 Loss: 0.8260679244995117 Tokens per Sec: 18378.430909068054
Epoch Step: 105 / 730 Loss: 1.6543879508972168 Tokens per Sec: 16668.480967722255
Epoch Step: 110 / 730 Loss: 40.86847686767578 Tokens per Sec: 16660.336754988275
Epoch Step: 115 / 730 Loss: 1.3343126773834229 Tokens per Sec: 17334.6293090793
Epoch Step: 120 / 730 Loss: 0.5251212120056152 Tokens per Sec: 19149.93883674776
Epoch Step: 125 / 730 Loss: 0.4243153929710388 Tokens per Sec: 18166.666845964544
Epoch Step: 130 / 730 Loss: 0.46383821964263916 Tokens per Sec: 19045.606736089037
Epoch Step: 135 / 730 Loss: 1.672900915145874 Tokens per Sec: 17924.059970725782
Epoch Step: 140 / 730 Loss: 1.329406499862671 Tokens per Sec: 18687.13511783272
Epoch Step: 145 / 730 Loss: 2.9868826866149902 Tokens per Sec: 19164.60648277941
Epoch Step: 150 / 730 Loss: 1.0055272579193115 Tokens per Sec: 15665.453660331043
Epoch Step: 155 / 730 Loss: 1.102541208267212 Tokens per Sec: 15595.360956442655
Epoch Step: 160 / 730 Loss: 1.5095746517181396 Tokens per Sec: 18312.31195603304
Epoch Step: 165 / 730 Loss: 1.3276301622390747 Tokens per Sec: 20877.731663774564
Epoch Step: 170 / 730 Loss: 2.652855396270752 Tokens per Sec: 20645.91161026404
Epoch Step: 175 / 730 Loss: 2.163814067840576 Tokens per Sec: 12495.866391373278
Epoch Step: 180 / 730 Loss: 1.0454049110412598 Tokens per Sec: 15614.851945669718
Epoch Step: 185 / 730 Loss: 1.6642050743103027 Tokens per Sec: 18592.506844862117
Epoch Step: 190 / 730 Loss: 2.035755157470703 Tokens per Sec: 15898.42935579367
Epoch Step: 195 / 730 Loss: 1.033683180809021 Tokens per Sec: 16617.418790629305
Epoch Step: 200 / 730 Loss: 1.9739357233047485 Tokens per Sec: 17979.23591045575
Epoch Step: 205 / 730 Loss: 0.9414814710617065 Tokens per Sec: 16049.491965694926
Epoch Step: 210 / 730 Loss: 0.6681006550788879 Tokens per Sec: 18230.806411104822
Epoch Step: 215 / 730 Loss: 1.983666181564331 Tokens per Sec: 16265.459536930435
Epoch Step: 220 / 730 Loss: 1.5212374925613403 Tokens per Sec: 17380.79867554283
Epoch Step: 225 / 730 Loss: 0.1675073802471161 Tokens per Sec: 15518.399805314426
Epoch Step: 230 / 730 Loss: 0.4874464273452759 Tokens per Sec: 19570.99404327176
Epoch Step: 235 / 730 Loss: 2.228860378265381 Tokens per Sec: 14991.295266048222
Epoch Step: 240 / 730 Loss: 0.43873536586761475 Tokens per Sec: 17112.456357213934
Epoch Step: 245 / 730 Loss: 1.2956904172897339 Tokens per Sec: 18754.748997950555
Epoch Step: 250 / 730 Loss: 2.6417596340179443 Tokens per Sec: 17058.47055619767
Epoch Step: 255 / 730 Loss: 2.4448723793029785 Tokens per Sec: 17620.279166943383
Epoch Step: 260 / 730 Loss: 1.4407542943954468 Tokens per Sec: 19063.157670517172
Epoch Step: 265 / 730 Loss: 0.44020533561706543 Tokens per Sec: 18683.328069352967
Epoch Step: 270 / 730 Loss: 1.56855309009552 Tokens per Sec: 16827.863803837106
Epoch Step: 275 / 730 Loss: 1.1116328239440918 Tokens per Sec: 17491.36417945414
Epoch Step: 280 / 730 Loss: 1.239714503288269 Tokens per Sec: 17402.59777242867
Epoch Step: 285 / 730 Loss: 1.8372787237167358 Tokens per Sec: 20499.2861713724
Epoch Step: 290 / 730 Loss: 1.74893057346344 Tokens per Sec: 19506.630140635036
Epoch Step: 295 / 730 Loss: 0.6276398301124573 Tokens per Sec: 16120.47915215847
Epoch Step: 300 / 730 Loss: 1.4639365673065186 Tokens per Sec: 19965.065791542056
Epoch Step: 305 / 730 Loss: 0.715146005153656 Tokens per Sec: 15062.308256487171
Epoch Step: 310 / 730 Loss: 2.608672618865967 Tokens per Sec: 17635.145734782145
Epoch Step: 315 / 730 Loss: 1.6951265335083008 Tokens per Sec: 16909.374209528174
Epoch Step: 320 / 730 Loss: 0.9493687748908997 Tokens per Sec: 14844.17921685411
Epoch Step: 325 / 730 Loss: 2.0851407051086426 Tokens per Sec: 19963.332063036964
Epoch Step: 330 / 730 Loss: 0.5245075821876526 Tokens per Sec: 18735.448321646403
Epoch Step: 335 / 730 Loss: 1.4001545906066895 Tokens per Sec: 19389.537278536274
Epoch Step: 340 / 730 Loss: 3.71567440032959 Tokens per Sec: 17630.21530668649
Epoch Step: 345 / 730 Loss: 2.2231764793395996 Tokens per Sec: 20948.094117309967
Epoch Step: 350 / 730 Loss: 0.20381604135036469 Tokens per Sec: 19488.980084603296
Epoch Step: 355 / 730 Loss: 9.278149604797363 Tokens per Sec: 17592.515147347454
Epoch Step: 360 / 730 Loss: 0.44804561138153076 Tokens per Sec: 15306.046923562648
Epoch Step: 365 / 730 Loss: 0.14845341444015503 Tokens per Sec: 15941.641815511693
Epoch Step: 370 / 730 Loss: 0.5866279006004333 Tokens per Sec: 17911.748498095694
Epoch Step: 375 / 730 Loss: 0.818825364112854 Tokens per Sec: 18334.823778504975
Epoch Step: 380 / 730 Loss: 0.5677195191383362 Tokens per Sec: 19122.434689465943
Epoch Step: 385 / 730 Loss: 1.2165069580078125 Tokens per Sec: 17155.40389628248
Epoch Step: 390 / 730 Loss: 1.295357584953308 Tokens per Sec: 16108.473466117066
Epoch Step: 395 / 730 Loss: 1.1190094947814941 Tokens per Sec: 16438.83310618463
Epoch Step: 400 / 730 Loss: 2.2282307147979736 Tokens per Sec: 19805.10724419548
Epoch Step: 405 / 730 Loss: 27.697023391723633 Tokens per Sec: 17408.534699911477
Epoch Step: 410 / 730 Loss: 32.60893249511719 Tokens per Sec: 17220.141386992087
Epoch Step: 415 / 730 Loss: 0.8753494620323181 Tokens per Sec: 17944.860814202835
Epoch Step: 420 / 730 Loss: 1.139597773551941 Tokens per Sec: 14567.932362575459
Epoch Step: 425 / 730 Loss: 0.7151175737380981 Tokens per Sec: 19219.805647113208
Epoch Step: 430 / 730 Loss: 2.617809772491455 Tokens per Sec: 17135.04357823866
Epoch Step: 435 / 730 Loss: 2.7472641468048096 Tokens per Sec: 16531.0020368584
Epoch Step: 440 / 730 Loss: 2.661226272583008 Tokens per Sec: 16208.171632860773
Epoch Step: 445 / 730 Loss: 10.587562561035156 Tokens per Sec: 14553.556859318438
Epoch Step: 450 / 730 Loss: 4.196859359741211 Tokens per Sec: 19254.766055091983
Epoch Step: 455 / 730 Loss: 1.560512900352478 Tokens per Sec: 19543.577018497228
Epoch Step: 460 / 730 Loss: 5.22743558883667 Tokens per Sec: 19630.15444728725
Epoch Step: 465 / 730 Loss: 11.069940567016602 Tokens per Sec: 17297.858123421498
Epoch Step: 470 / 730 Loss: 2.0297434329986572 Tokens per Sec: 16725.759920877448
Epoch Step: 475 / 730 Loss: 1.0995432138442993 Tokens per Sec: 17265.502917012134
Epoch Step: 480 / 730 Loss: 0.5545743703842163 Tokens per Sec: 17979.177630031234
Epoch Step: 485 / 730 Loss: 0.4710472822189331 Tokens per Sec: 16407.641077483666
Epoch Step: 490 / 730 Loss: 1.0010013580322266 Tokens per Sec: 21151.22475297073
Epoch Step: 495 / 730 Loss: 12.91843032836914 Tokens per Sec: 17851.32886598443
Epoch Step: 500 / 730 Loss: 2.157536029815674 Tokens per Sec: 17830.110179320567
Epoch Step: 505 / 730 Loss: 2.3493497371673584 Tokens per Sec: 20951.117796515773
Epoch Step: 510 / 730 Loss: 12.665204048156738 Tokens per Sec: 15861.350394336527
Epoch Step: 515 / 730 Loss: 0.7457825541496277 Tokens per Sec: 15528.948400657566
Epoch Step: 520 / 730 Loss: 0.6543055176734924 Tokens per Sec: 17316.342895118618
Epoch Step: 525 / 730 Loss: 0.38363975286483765 Tokens per Sec: 19238.530432277916
Epoch Step: 530 / 730 Loss: 3.627987861633301 Tokens per Sec: 16030.186533780176
Epoch Step: 535 / 730 Loss: 1.0249046087265015 Tokens per Sec: 15776.351880799966
Epoch Step: 540 / 730 Loss: 0.43671464920043945 Tokens per Sec: 17520.869960725668
Epoch Step: 545 / 730 Loss: 0.6836449503898621 Tokens per Sec: 17126.25109387755
Epoch Step: 550 / 730 Loss: 0.7750241756439209 Tokens per Sec: 18923.425665016428
Epoch Step: 555 / 730 Loss: 1.1297998428344727 Tokens per Sec: 17869.222244993798
Epoch Step: 560 / 730 Loss: 2.2268054485321045 Tokens per Sec: 18803.969329138443
Epoch Step: 565 / 730 Loss: 2.092923641204834 Tokens per Sec: 20030.86102482218
Epoch Step: 570 / 730 Loss: 3.0504016876220703 Tokens per Sec: 18302.007395995868
Epoch Step: 575 / 730 Loss: 0.48990535736083984 Tokens per Sec: 17671.290393408395
Epoch Step: 580 / 730 Loss: 2.2712905406951904 Tokens per Sec: 19398.09390947426
Epoch Step: 585 / 730 Loss: 0.4043014645576477 Tokens per Sec: 15874.909042404508
Epoch Step: 590 / 730 Loss: 2.311112403869629 Tokens per Sec: 16484.303039359045
Epoch Step: 595 / 730 Loss: 3.465040922164917 Tokens per Sec: 20980.07761886479
Epoch Step: 600 / 730 Loss: 1.35221529006958 Tokens per Sec: 19705.656802854468
Epoch Step: 605 / 730 Loss: 0.377791166305542 Tokens per Sec: 16289.308672180021
Epoch Step: 610 / 730 Loss: 0.990511953830719 Tokens per Sec: 17577.01705912534
Epoch Step: 615 / 730 Loss: 1.076651692390442 Tokens per Sec: 14898.222807362208
Epoch Step: 620 / 730 Loss: 0.4919654130935669 Tokens per Sec: 16952.022935300858
Epoch Step: 625 / 730 Loss: 1.527658462524414 Tokens per Sec: 18473.73911245201
Epoch Step: 630 / 730 Loss: 1.3351715803146362 Tokens per Sec: 15447.441797685693
Epoch Step: 635 / 730 Loss: 0.7172051668167114 Tokens per Sec: 19873.948909822546
Epoch Step: 640 / 730 Loss: 2.1987762451171875 Tokens per Sec: 20497.820370701473
Epoch Step: 645 / 730 Loss: 0.935969352722168 Tokens per Sec: 19271.150153246697
Epoch Step: 650 / 730 Loss: 1.6368950605392456 Tokens per Sec: 18480.283471317056
Epoch Step: 655 / 730 Loss: 2.7626049518585205 Tokens per Sec: 18787.380506121954
Epoch Step: 660 / 730 Loss: 0.17717714607715607 Tokens per Sec: 18217.82213266959
Epoch Step: 665 / 730 Loss: 0.8673579096794128 Tokens per Sec: 16777.57261396456
Epoch Step: 670 / 730 Loss: 0.351692795753479 Tokens per Sec: 12770.715257060481
Epoch Step: 675 / 730 Loss: 0.5560958385467529 Tokens per Sec: 18252.349064566864
Epoch Step: 680 / 730 Loss: 2.1273350715637207 Tokens per Sec: 17168.45655196953
Epoch Step: 685 / 730 Loss: 1.7571102380752563 Tokens per Sec: 18679.831492078047
Epoch Step: 690 / 730 Loss: 1.4356650114059448 Tokens per Sec: 17938.537608804712
Epoch Step: 695 / 730 Loss: 13.66366195678711 Tokens per Sec: 17510.797140400435
Epoch Step: 700 / 730 Loss: 1.7571642398834229 Tokens per Sec: 18156.171331611473
Epoch Step: 705 / 730 Loss: 1.178699254989624 Tokens per Sec: 15985.597130550672
Epoch Step: 710 / 730 Loss: 1.6427297592163086 Tokens per Sec: 14500.160118113148
Epoch Step: 715 / 730 Loss: 0.9616592526435852 Tokens per Sec: 16127.902028245766
Epoch Step: 720 / 730 Loss: 0.6669626235961914 Tokens per Sec: 15856.473912563702
Epoch Step: 725 / 730 Loss: 0.4627768397331238 Tokens per Sec: 15169.792677614498
Epoch Step: 730 / 730 Loss: 0.585054337978363 Tokens per Sec: 14221.58716187809
Epoch ended with duration 0:01:19.808681
Train perplexity: 1.0998377243031803
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String time , java.lang.String time ) { VAR_2 . METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.301629
Validation perplexity: 1.2061949149195974
Epoch 53 / 1000
Epoch Step: 5 / 730 Loss: 3.4995319843292236 Tokens per Sec: 16245.097553280752
Epoch Step: 10 / 730 Loss: 9.161019325256348 Tokens per Sec: 19716.985728070485
Epoch Step: 15 / 730 Loss: 2.106792449951172 Tokens per Sec: 16534.375157042563
Epoch Step: 20 / 730 Loss: 1.532651662826538 Tokens per Sec: 19107.696382866816
Epoch Step: 25 / 730 Loss: 2.352726697921753 Tokens per Sec: 16703.71773785339
Epoch Step: 30 / 730 Loss: 0.5848701596260071 Tokens per Sec: 16359.749388808299
Epoch Step: 35 / 730 Loss: 1.3676412105560303 Tokens per Sec: 16835.785244002607
Epoch Step: 40 / 730 Loss: 1.1514791250228882 Tokens per Sec: 16679.463562846213
Epoch Step: 45 / 730 Loss: 0.4853721261024475 Tokens per Sec: 14914.657566926813
Epoch Step: 50 / 730 Loss: 1.0092082023620605 Tokens per Sec: 18273.550343667914
Epoch Step: 55 / 730 Loss: 0.4541650116443634 Tokens per Sec: 17726.893424435995
Epoch Step: 60 / 730 Loss: 0.26860499382019043 Tokens per Sec: 19280.79496598524
Epoch Step: 65 / 730 Loss: 1.626598834991455 Tokens per Sec: 20429.880008922886
Epoch Step: 70 / 730 Loss: 0.49535489082336426 Tokens per Sec: 21053.201681957864
Epoch Step: 75 / 730 Loss: 1.2275346517562866 Tokens per Sec: 13467.041031977473
Epoch Step: 80 / 730 Loss: 2.2119522094726562 Tokens per Sec: 15033.160746437776
Epoch Step: 85 / 730 Loss: 1.2862434387207031 Tokens per Sec: 17123.617378714232
Epoch Step: 90 / 730 Loss: 0.10714690387248993 Tokens per Sec: 19773.32834533431
Epoch Step: 95 / 730 Loss: 0.5285244584083557 Tokens per Sec: 17691.33983775347
Epoch Step: 100 / 730 Loss: 2.980844497680664 Tokens per Sec: 17231.068229867386
Epoch Step: 105 / 730 Loss: 0.7203052043914795 Tokens per Sec: 19025.725468041022
Epoch Step: 110 / 730 Loss: 0.5656571388244629 Tokens per Sec: 19227.60416805079
Epoch Step: 115 / 730 Loss: 0.30899500846862793 Tokens per Sec: 17729.745580569695
Epoch Step: 120 / 730 Loss: 0.39603811502456665 Tokens per Sec: 14382.384460522666
Epoch Step: 125 / 730 Loss: 1.024976134300232 Tokens per Sec: 17195.215719699754
Epoch Step: 130 / 730 Loss: 1.2213348150253296 Tokens per Sec: 17298.029443829706
Epoch Step: 135 / 730 Loss: 2.9974400997161865 Tokens per Sec: 17759.350559429662
Epoch Step: 140 / 730 Loss: 0.37921077013015747 Tokens per Sec: 14650.929184600956
Epoch Step: 145 / 730 Loss: 0.315019428730011 Tokens per Sec: 16621.051337914083
Epoch Step: 150 / 730 Loss: 5.8444366455078125 Tokens per Sec: 16698.467280805606
Epoch Step: 155 / 730 Loss: 2.588844060897827 Tokens per Sec: 17209.794360787873
Epoch Step: 160 / 730 Loss: 1.632112979888916 Tokens per Sec: 17436.545788083935
Epoch Step: 165 / 730 Loss: 1.3928074836730957 Tokens per Sec: 17438.18488563293
Epoch Step: 170 / 730 Loss: 1.3479565382003784 Tokens per Sec: 18844.189319272118
Epoch Step: 175 / 730 Loss: 0.24228070676326752 Tokens per Sec: 20476.753296976764
Epoch Step: 180 / 730 Loss: 1.1251263618469238 Tokens per Sec: 19933.427251103676
Epoch Step: 185 / 730 Loss: 1.0304368734359741 Tokens per Sec: 17526.40080842996
Epoch Step: 190 / 730 Loss: 0.6496158838272095 Tokens per Sec: 17006.173941900855
Epoch Step: 195 / 730 Loss: 1.9767098426818848 Tokens per Sec: 17503.71304539559
Epoch Step: 200 / 730 Loss: 0.3459869623184204 Tokens per Sec: 16803.296317369168
Epoch Step: 205 / 730 Loss: 1.2959539890289307 Tokens per Sec: 18162.404970379408
Epoch Step: 210 / 730 Loss: 0.9235605001449585 Tokens per Sec: 16576.5925545576
Epoch Step: 215 / 730 Loss: 1.1394739151000977 Tokens per Sec: 17890.42232848185
Epoch Step: 220 / 730 Loss: 3.019834280014038 Tokens per Sec: 14100.729428950708
Epoch Step: 225 / 730 Loss: 3.1863315105438232 Tokens per Sec: 15656.025876115664
Epoch Step: 230 / 730 Loss: 0.9202304482460022 Tokens per Sec: 18107.812326239768
Epoch Step: 235 / 730 Loss: 2.3189706802368164 Tokens per Sec: 16641.71674739944
Epoch Step: 240 / 730 Loss: 2.9021923542022705 Tokens per Sec: 19444.779503003796
Epoch Step: 245 / 730 Loss: 3.1443963050842285 Tokens per Sec: 18332.188182451515
Epoch Step: 250 / 730 Loss: 0.9036675691604614 Tokens per Sec: 16227.441406993077
Epoch Step: 255 / 730 Loss: 2.0010194778442383 Tokens per Sec: 16345.117975797348
Epoch Step: 260 / 730 Loss: 0.35722827911376953 Tokens per Sec: 18716.943788024884
Epoch Step: 265 / 730 Loss: 0.7034444212913513 Tokens per Sec: 17688.02802760543
Epoch Step: 270 / 730 Loss: 0.294574499130249 Tokens per Sec: 17441.066479724905
Epoch Step: 275 / 730 Loss: 0.4648644030094147 Tokens per Sec: 19419.01494661196
Epoch Step: 280 / 730 Loss: 0.7742564678192139 Tokens per Sec: 17599.575332660883
Epoch Step: 285 / 730 Loss: 1.4961603879928589 Tokens per Sec: 19670.521615036963
Epoch Step: 290 / 730 Loss: 1.3304686546325684 Tokens per Sec: 19526.739976429955
Epoch Step: 295 / 730 Loss: 0.4456649422645569 Tokens per Sec: 17800.11696218282
Epoch Step: 300 / 730 Loss: 2.4069595336914062 Tokens per Sec: 19155.84748420382
Epoch Step: 305 / 730 Loss: 1.3597525358200073 Tokens per Sec: 15447.370460499673
Epoch Step: 310 / 730 Loss: 2.9011640548706055 Tokens per Sec: 19209.00455809747
Epoch Step: 315 / 730 Loss: 18.8697509765625 Tokens per Sec: 15521.521457203247
Epoch Step: 320 / 730 Loss: 0.954107403755188 Tokens per Sec: 19519.15285273191
Epoch Step: 325 / 730 Loss: 0.7113128900527954 Tokens per Sec: 17475.89115704726
Epoch Step: 330 / 730 Loss: 7.803038597106934 Tokens per Sec: 20030.134930901688
Epoch Step: 335 / 730 Loss: 1.6606303453445435 Tokens per Sec: 17464.899431040994
Epoch Step: 340 / 730 Loss: 1.2660281658172607 Tokens per Sec: 16536.813787379044
Epoch Step: 345 / 730 Loss: 1.0689371824264526 Tokens per Sec: 17919.583703442768
Epoch Step: 350 / 730 Loss: 1.7004244327545166 Tokens per Sec: 18680.868462809613
Epoch Step: 355 / 730 Loss: 0.5562426447868347 Tokens per Sec: 18573.740568619636
Epoch Step: 360 / 730 Loss: 2.486006498336792 Tokens per Sec: 18401.012146786412
Epoch Step: 365 / 730 Loss: 1.7845304012298584 Tokens per Sec: 14401.036565644023
Epoch Step: 370 / 730 Loss: 3.3471646308898926 Tokens per Sec: 18714.40240418843
Epoch Step: 375 / 730 Loss: 3.2362937927246094 Tokens per Sec: 16730.071025895133
Epoch Step: 380 / 730 Loss: 0.39434748888015747 Tokens per Sec: 17653.42447871522
Epoch Step: 385 / 730 Loss: 1.9247974157333374 Tokens per Sec: 16559.84946529793
Epoch Step: 390 / 730 Loss: 0.4138970971107483 Tokens per Sec: 17596.253675802513
Epoch Step: 395 / 730 Loss: 0.9100834727287292 Tokens per Sec: 16533.076172883877
Epoch Step: 400 / 730 Loss: 4.689847946166992 Tokens per Sec: 18256.447213496624
Epoch Step: 405 / 730 Loss: 1.0749205350875854 Tokens per Sec: 16228.828935025425
Epoch Step: 410 / 730 Loss: 1.8591943979263306 Tokens per Sec: 20643.620120469914
Epoch Step: 415 / 730 Loss: 1.502549409866333 Tokens per Sec: 16983.663443667545
Epoch Step: 420 / 730 Loss: 1.3207987546920776 Tokens per Sec: 13309.927586652902
Epoch Step: 425 / 730 Loss: 0.41134971380233765 Tokens per Sec: 17268.709176616703
Epoch Step: 430 / 730 Loss: 1.3177677392959595 Tokens per Sec: 12713.032037656609
Epoch Step: 435 / 730 Loss: 1.1345326900482178 Tokens per Sec: 18121.247600536226
Epoch Step: 440 / 730 Loss: 1.1541671752929688 Tokens per Sec: 18148.50169791316
Epoch Step: 445 / 730 Loss: 0.721977949142456 Tokens per Sec: 17166.423047918102
Epoch Step: 450 / 730 Loss: 2.4811360836029053 Tokens per Sec: 17802.238642989665
Epoch Step: 455 / 730 Loss: 2.0225954055786133 Tokens per Sec: 15708.99726995012
Epoch Step: 460 / 730 Loss: 1.2251049280166626 Tokens per Sec: 18809.488460244113
Epoch Step: 465 / 730 Loss: 1.9460172653198242 Tokens per Sec: 19004.257614813694
Epoch Step: 470 / 730 Loss: 1.7156016826629639 Tokens per Sec: 17092.717337595637
Epoch Step: 475 / 730 Loss: 2.221825122833252 Tokens per Sec: 17145.250113611994
Epoch Step: 480 / 730 Loss: 1.4897360801696777 Tokens per Sec: 16255.379876241996
Epoch Step: 485 / 730 Loss: 0.9000170230865479 Tokens per Sec: 20032.72898407959
Epoch Step: 490 / 730 Loss: 1.0161824226379395 Tokens per Sec: 20280.23495566065
Epoch Step: 495 / 730 Loss: 1.528241515159607 Tokens per Sec: 13646.194999959533
Epoch Step: 500 / 730 Loss: 2.815168857574463 Tokens per Sec: 18251.2399535088
Epoch Step: 505 / 730 Loss: 39.644954681396484 Tokens per Sec: 19523.65855929172
Epoch Step: 510 / 730 Loss: 1.1256670951843262 Tokens per Sec: 18398.256725473882
Epoch Step: 515 / 730 Loss: 0.676820695400238 Tokens per Sec: 18306.06793143501
Epoch Step: 520 / 730 Loss: 1.8546775579452515 Tokens per Sec: 19015.16641080869
Epoch Step: 525 / 730 Loss: 3.52709698677063 Tokens per Sec: 18857.96730623967
Epoch Step: 530 / 730 Loss: 0.5923755168914795 Tokens per Sec: 18132.347634763475
Epoch Step: 535 / 730 Loss: 2.2709577083587646 Tokens per Sec: 19568.85617689547
Epoch Step: 540 / 730 Loss: 2.222989797592163 Tokens per Sec: 14518.7131623665
Epoch Step: 545 / 730 Loss: 1.2720388174057007 Tokens per Sec: 20614.515726655325
Epoch Step: 550 / 730 Loss: 1.2623317241668701 Tokens per Sec: 20304.853814773756
Epoch Step: 555 / 730 Loss: 1.694229245185852 Tokens per Sec: 15376.837928692814
Epoch Step: 560 / 730 Loss: 1.6468632221221924 Tokens per Sec: 16764.48167571658
Epoch Step: 565 / 730 Loss: 2.149613857269287 Tokens per Sec: 17767.990358560983
Epoch Step: 570 / 730 Loss: 0.5914795398712158 Tokens per Sec: 19230.65267720277
Epoch Step: 575 / 730 Loss: 0.4375297427177429 Tokens per Sec: 19662.53725658123
Epoch Step: 580 / 730 Loss: 3.019164562225342 Tokens per Sec: 15997.878340446005
Epoch Step: 585 / 730 Loss: 2.825349807739258 Tokens per Sec: 16704.11178857971
Epoch Step: 590 / 730 Loss: 0.9826421141624451 Tokens per Sec: 16936.57791813589
Epoch Step: 595 / 730 Loss: 4.508330821990967 Tokens per Sec: 14904.362422340602
Epoch Step: 600 / 730 Loss: 2.1960537433624268 Tokens per Sec: 16171.818171539819
Epoch Step: 605 / 730 Loss: 0.8345760107040405 Tokens per Sec: 19096.72597208142
Epoch Step: 610 / 730 Loss: 1.574514389038086 Tokens per Sec: 16844.78562392496
Epoch Step: 615 / 730 Loss: 1.5291434526443481 Tokens per Sec: 16878.90458890688
Epoch Step: 620 / 730 Loss: 0.6717071533203125 Tokens per Sec: 13596.413586465194
Epoch Step: 625 / 730 Loss: 45.906925201416016 Tokens per Sec: 15955.773264975436
Epoch Step: 630 / 730 Loss: 0.4609374403953552 Tokens per Sec: 17492.53879577902
Epoch Step: 635 / 730 Loss: 0.717282235622406 Tokens per Sec: 20755.591940513128
Epoch Step: 640 / 730 Loss: 2.3543825149536133 Tokens per Sec: 15246.528198561538
Epoch Step: 645 / 730 Loss: 1.2609161138534546 Tokens per Sec: 19390.553773254025
Epoch Step: 650 / 730 Loss: 0.9668667912483215 Tokens per Sec: 19465.897533739368
Epoch Step: 655 / 730 Loss: 0.7265924215316772 Tokens per Sec: 19861.994887391647
Epoch Step: 660 / 730 Loss: 2.2993812561035156 Tokens per Sec: 17973.35570821848
Epoch Step: 665 / 730 Loss: 1.4659234285354614 Tokens per Sec: 18448.905749460937
Epoch Step: 670 / 730 Loss: 0.6258189678192139 Tokens per Sec: 19510.636198312586
Epoch Step: 675 / 730 Loss: 8.709819793701172 Tokens per Sec: 18577.01821084158
Epoch Step: 680 / 730 Loss: 2.2310166358947754 Tokens per Sec: 21145.528567354828
Epoch Step: 685 / 730 Loss: 12.048880577087402 Tokens per Sec: 16760.0779273501
Epoch Step: 690 / 730 Loss: 2.0492897033691406 Tokens per Sec: 15762.547806327566
Epoch Step: 695 / 730 Loss: 2.553889036178589 Tokens per Sec: 16792.34050162392
Epoch Step: 700 / 730 Loss: 2.599658250808716 Tokens per Sec: 16353.239907808624
Epoch Step: 705 / 730 Loss: 1.4345494508743286 Tokens per Sec: 17513.23375086952
Epoch Step: 710 / 730 Loss: 1.4429124593734741 Tokens per Sec: 14186.922895455626
Epoch Step: 715 / 730 Loss: 1.5025842189788818 Tokens per Sec: 14697.664552879747
Epoch Step: 720 / 730 Loss: 1.2154697179794312 Tokens per Sec: 12796.10285949393
Epoch Step: 725 / 730 Loss: 1.7171852588653564 Tokens per Sec: 14015.099631883093
Epoch Step: 730 / 730 Loss: 1.3541923761367798 Tokens per Sec: 15366.052464549808
Epoch ended with duration 0:01:20.256913
Train perplexity: 1.0991367131756808
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > , java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , message ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.356417
Validation perplexity: 1.2164235894267956
Epoch 54 / 1000
Epoch Step: 5 / 730 Loss: 1.9383825063705444 Tokens per Sec: 14030.388388836864
Epoch Step: 10 / 730 Loss: 0.2447585016489029 Tokens per Sec: 16991.671991747622
Epoch Step: 15 / 730 Loss: 1.457227110862732 Tokens per Sec: 15776.982791625152
Epoch Step: 20 / 730 Loss: 1.071303367614746 Tokens per Sec: 19899.78623167913
Epoch Step: 25 / 730 Loss: 1.060476303100586 Tokens per Sec: 19381.394899407205
Epoch Step: 30 / 730 Loss: 2.4958276748657227 Tokens per Sec: 15776.45657528375
Epoch Step: 35 / 730 Loss: 0.8972128033638 Tokens per Sec: 16737.90725204181
Epoch Step: 40 / 730 Loss: 0.4390912652015686 Tokens per Sec: 15999.472729350435
Epoch Step: 45 / 730 Loss: 0.9014296531677246 Tokens per Sec: 16064.358211756891
Epoch Step: 50 / 730 Loss: 1.7302104234695435 Tokens per Sec: 18023.23884445672
Epoch Step: 55 / 730 Loss: 2.949486255645752 Tokens per Sec: 17969.334859605413
Epoch Step: 60 / 730 Loss: 0.8172615170478821 Tokens per Sec: 13426.971498711393
Epoch Step: 65 / 730 Loss: 0.6641198396682739 Tokens per Sec: 16440.4032834605
Epoch Step: 70 / 730 Loss: 2.777080774307251 Tokens per Sec: 19382.163413302373
Epoch Step: 75 / 730 Loss: 1.4350882768630981 Tokens per Sec: 17279.14431849132
Epoch Step: 80 / 730 Loss: 1.0470612049102783 Tokens per Sec: 15512.718617408764
Epoch Step: 85 / 730 Loss: 1.637152910232544 Tokens per Sec: 19011.395046500413
Epoch Step: 90 / 730 Loss: 1.9746876955032349 Tokens per Sec: 17089.743041850914
Epoch Step: 95 / 730 Loss: 10.174760818481445 Tokens per Sec: 21037.467864926784
Epoch Step: 100 / 730 Loss: 2.7754313945770264 Tokens per Sec: 18129.79997840039
Epoch Step: 105 / 730 Loss: 2.7988226413726807 Tokens per Sec: 15996.725541541175
Epoch Step: 110 / 730 Loss: 22.476314544677734 Tokens per Sec: 18088.684471410612
Epoch Step: 115 / 730 Loss: 0.3645806312561035 Tokens per Sec: 14772.5387282955
Epoch Step: 120 / 730 Loss: 2.084591865539551 Tokens per Sec: 15537.110187618957
Epoch Step: 125 / 730 Loss: 3.157952308654785 Tokens per Sec: 17689.84041482702
Epoch Step: 130 / 730 Loss: 13.77099323272705 Tokens per Sec: 18107.705868101173
Epoch Step: 135 / 730 Loss: 0.8389877676963806 Tokens per Sec: 20647.415142120088
Epoch Step: 140 / 730 Loss: 2.992891550064087 Tokens per Sec: 18862.776502004985
Epoch Step: 145 / 730 Loss: 1.6796550750732422 Tokens per Sec: 16112.916636701348
Epoch Step: 150 / 730 Loss: 0.47585248947143555 Tokens per Sec: 13937.24275200553
Epoch Step: 155 / 730 Loss: 1.1538503170013428 Tokens per Sec: 17084.326055754736
Epoch Step: 160 / 730 Loss: 1.570945143699646 Tokens per Sec: 19994.431088775484
Epoch Step: 165 / 730 Loss: 1.8549699783325195 Tokens per Sec: 20513.48143859462
Epoch Step: 170 / 730 Loss: 2.044952869415283 Tokens per Sec: 19334.52013602217
Epoch Step: 175 / 730 Loss: 2.3572487831115723 Tokens per Sec: 14285.088703804662
Epoch Step: 180 / 730 Loss: 25.08008575439453 Tokens per Sec: 18448.217276256935
Epoch Step: 185 / 730 Loss: 15.034387588500977 Tokens per Sec: 18312.1184643132
Epoch Step: 190 / 730 Loss: 2.327302932739258 Tokens per Sec: 19330.030350196554
Epoch Step: 195 / 730 Loss: 0.6154197454452515 Tokens per Sec: 18442.760952943507
Epoch Step: 200 / 730 Loss: 1.4092481136322021 Tokens per Sec: 19884.089266419658
Epoch Step: 205 / 730 Loss: 0.6003345251083374 Tokens per Sec: 18209.65889333506
Epoch Step: 210 / 730 Loss: 2.8386118412017822 Tokens per Sec: 17375.097666106216
Epoch Step: 215 / 730 Loss: 0.10345776379108429 Tokens per Sec: 17242.164810638704
Epoch Step: 220 / 730 Loss: 3.5952935218811035 Tokens per Sec: 19466.93926912
Epoch Step: 225 / 730 Loss: 3.1471292972564697 Tokens per Sec: 17406.383373659835
Epoch Step: 230 / 730 Loss: 0.4028252363204956 Tokens per Sec: 18121.433253269806
Epoch Step: 235 / 730 Loss: 1.5092570781707764 Tokens per Sec: 16481.386081999306
Epoch Step: 240 / 730 Loss: 1.732769250869751 Tokens per Sec: 19674.3638707744
Epoch Step: 245 / 730 Loss: 0.7805851101875305 Tokens per Sec: 17042.457182769504
Epoch Step: 250 / 730 Loss: 2.6242165565490723 Tokens per Sec: 15854.730270560869
Epoch Step: 255 / 730 Loss: 0.722994863986969 Tokens per Sec: 19272.787752621247
Epoch Step: 260 / 730 Loss: 2.964655637741089 Tokens per Sec: 16387.170108725768
Epoch Step: 265 / 730 Loss: 0.9115477204322815 Tokens per Sec: 17491.661120414352
Epoch Step: 270 / 730 Loss: 0.4930172860622406 Tokens per Sec: 20367.299381329914
Epoch Step: 275 / 730 Loss: 1.4290685653686523 Tokens per Sec: 15131.282962898522
Epoch Step: 280 / 730 Loss: 2.7646963596343994 Tokens per Sec: 17089.55418357438
Epoch Step: 285 / 730 Loss: 1.146677851676941 Tokens per Sec: 17022.129487161485
Epoch Step: 290 / 730 Loss: 0.6000978350639343 Tokens per Sec: 17934.052624952332
Epoch Step: 295 / 730 Loss: 2.8789639472961426 Tokens per Sec: 15502.24272819941
Epoch Step: 300 / 730 Loss: 0.2601999044418335 Tokens per Sec: 21371.96228357041
Epoch Step: 305 / 730 Loss: 1.9846389293670654 Tokens per Sec: 18542.60759262708
Epoch Step: 310 / 730 Loss: 1.4992902278900146 Tokens per Sec: 12776.383787025823
Epoch Step: 315 / 730 Loss: 19.876386642456055 Tokens per Sec: 16268.157633067258
Epoch Step: 320 / 730 Loss: 1.3882026672363281 Tokens per Sec: 17387.70715514243
Epoch Step: 325 / 730 Loss: 13.791275978088379 Tokens per Sec: 15161.981969876553
Epoch Step: 330 / 730 Loss: 1.9886575937271118 Tokens per Sec: 16214.807997147434
Epoch Step: 335 / 730 Loss: 2.0765039920806885 Tokens per Sec: 16025.567915485883
Epoch Step: 340 / 730 Loss: 1.7373114824295044 Tokens per Sec: 16139.508587517597
Epoch Step: 345 / 730 Loss: 2.573608636856079 Tokens per Sec: 15410.828583307106
Epoch Step: 350 / 730 Loss: 0.8749229907989502 Tokens per Sec: 20014.077410604095
Epoch Step: 355 / 730 Loss: 1.2858633995056152 Tokens per Sec: 20005.050549497708
Epoch Step: 360 / 730 Loss: 4.91718053817749 Tokens per Sec: 19545.349968708804
Epoch Step: 365 / 730 Loss: 2.323338270187378 Tokens per Sec: 16292.635260070821
Epoch Step: 370 / 730 Loss: 1.5847104787826538 Tokens per Sec: 21437.272443685484
Epoch Step: 375 / 730 Loss: 0.22771944105625153 Tokens per Sec: 19294.327731294827
Epoch Step: 380 / 730 Loss: 5.437049865722656 Tokens per Sec: 14899.960114987554
Epoch Step: 385 / 730 Loss: 0.2452564537525177 Tokens per Sec: 15588.177571239285
Epoch Step: 390 / 730 Loss: 3.852814197540283 Tokens per Sec: 18330.38307758948
Epoch Step: 395 / 730 Loss: 2.5439341068267822 Tokens per Sec: 19446.575517412908
Epoch Step: 400 / 730 Loss: 11.918580055236816 Tokens per Sec: 20430.123606689507
Epoch Step: 405 / 730 Loss: 2.7190022468566895 Tokens per Sec: 16004.973136184006
Epoch Step: 410 / 730 Loss: 1.5279912948608398 Tokens per Sec: 16582.988736232423
Epoch Step: 415 / 730 Loss: 1.718611478805542 Tokens per Sec: 16827.585633610215
Epoch Step: 420 / 730 Loss: 0.8168721199035645 Tokens per Sec: 16687.8474306052
Epoch Step: 425 / 730 Loss: 1.7597333192825317 Tokens per Sec: 16084.751005053162
Epoch Step: 430 / 730 Loss: 1.2787564992904663 Tokens per Sec: 17076.263657604577
Epoch Step: 435 / 730 Loss: 1.0396863222122192 Tokens per Sec: 19982.819770482918
Epoch Step: 440 / 730 Loss: 1.92793607711792 Tokens per Sec: 19705.236787282884
Epoch Step: 445 / 730 Loss: 1.5714787244796753 Tokens per Sec: 16712.30318148403
Epoch Step: 450 / 730 Loss: 1.9499156475067139 Tokens per Sec: 17344.37281553398
Epoch Step: 455 / 730 Loss: 0.9715080857276917 Tokens per Sec: 17987.251991476023
Epoch Step: 460 / 730 Loss: 0.5378527045249939 Tokens per Sec: 17425.259287739522
Epoch Step: 465 / 730 Loss: 1.874697208404541 Tokens per Sec: 17367.84826581973
Epoch Step: 470 / 730 Loss: 1.5595202445983887 Tokens per Sec: 15187.185973414698
Epoch Step: 475 / 730 Loss: 0.6542821526527405 Tokens per Sec: 19118.78295596404
Epoch Step: 480 / 730 Loss: 0.8040841817855835 Tokens per Sec: 16967.626359684054
Epoch Step: 485 / 730 Loss: 0.824428915977478 Tokens per Sec: 14861.345902480725
Epoch Step: 490 / 730 Loss: 2.121711254119873 Tokens per Sec: 20596.488852449886
Epoch Step: 495 / 730 Loss: 0.6663132905960083 Tokens per Sec: 14082.86061353974
Epoch Step: 500 / 730 Loss: 0.8951505422592163 Tokens per Sec: 18410.653565395496
Epoch Step: 505 / 730 Loss: 1.4620362520217896 Tokens per Sec: 20684.49038228352
Epoch Step: 510 / 730 Loss: 1.0850439071655273 Tokens per Sec: 18831.893999669443
Epoch Step: 515 / 730 Loss: 1.160535454750061 Tokens per Sec: 20993.423561736032
Epoch Step: 520 / 730 Loss: 1.1175954341888428 Tokens per Sec: 14866.917861782365
Epoch Step: 525 / 730 Loss: 0.4099622070789337 Tokens per Sec: 15426.579858434654
Epoch Step: 530 / 730 Loss: 0.5691304206848145 Tokens per Sec: 16846.645041422205
Epoch Step: 535 / 730 Loss: 1.1994760036468506 Tokens per Sec: 20023.41137160725
Epoch Step: 540 / 730 Loss: 0.31345653533935547 Tokens per Sec: 16917.917266088403
Epoch Step: 545 / 730 Loss: 46.059722900390625 Tokens per Sec: 19352.727181180235
Epoch Step: 550 / 730 Loss: 1.8972760438919067 Tokens per Sec: 15638.139626886623
Epoch Step: 555 / 730 Loss: 0.27950605750083923 Tokens per Sec: 16845.392717422994
Epoch Step: 560 / 730 Loss: 1.1115034818649292 Tokens per Sec: 16578.08698193264
Epoch Step: 565 / 730 Loss: 2.1085875034332275 Tokens per Sec: 19080.63106980455
Epoch Step: 570 / 730 Loss: 1.2914859056472778 Tokens per Sec: 16271.388219197817
Epoch Step: 575 / 730 Loss: 1.6272307634353638 Tokens per Sec: 20523.74379326777
Epoch Step: 580 / 730 Loss: 1.3243345022201538 Tokens per Sec: 15817.45990100158
Epoch Step: 585 / 730 Loss: 2.281076431274414 Tokens per Sec: 19811.11310794703
Epoch Step: 590 / 730 Loss: 0.7083287239074707 Tokens per Sec: 16016.132086912228
Epoch Step: 595 / 730 Loss: 1.3206359148025513 Tokens per Sec: 20502.63925150793
Epoch Step: 600 / 730 Loss: 1.3975740671157837 Tokens per Sec: 15701.217810883945
Epoch Step: 605 / 730 Loss: 1.0955241918563843 Tokens per Sec: 16603.069193829117
Epoch Step: 610 / 730 Loss: 1.0036746263504028 Tokens per Sec: 19211.579000997917
Epoch Step: 615 / 730 Loss: 19.95920753479004 Tokens per Sec: 20975.186130795533
Epoch Step: 620 / 730 Loss: 0.3535233438014984 Tokens per Sec: 16327.86682038348
Epoch Step: 625 / 730 Loss: 2.124389886856079 Tokens per Sec: 13488.769177705977
Epoch Step: 630 / 730 Loss: 0.4037593901157379 Tokens per Sec: 16150.295378384148
Epoch Step: 635 / 730 Loss: 1.2334786653518677 Tokens per Sec: 17851.676549183107
Epoch Step: 640 / 730 Loss: 1.0383352041244507 Tokens per Sec: 15784.456583170164
Epoch Step: 645 / 730 Loss: 1.536040186882019 Tokens per Sec: 17889.638685348436
Epoch Step: 650 / 730 Loss: 0.7225980758666992 Tokens per Sec: 20494.655055432264
Epoch Step: 655 / 730 Loss: 1.3160037994384766 Tokens per Sec: 15857.943656595548
Epoch Step: 660 / 730 Loss: 0.8445435166358948 Tokens per Sec: 16415.852569469935
Epoch Step: 665 / 730 Loss: 1.6073954105377197 Tokens per Sec: 19174.533473992764
Epoch Step: 670 / 730 Loss: 2.1455166339874268 Tokens per Sec: 17151.81279424159
Epoch Step: 675 / 730 Loss: 2.1953752040863037 Tokens per Sec: 15812.778911389185
Epoch Step: 680 / 730 Loss: 2.101435661315918 Tokens per Sec: 21624.91625962446
Epoch Step: 685 / 730 Loss: 1.0611969232559204 Tokens per Sec: 20378.40345328184
Epoch Step: 690 / 730 Loss: 20.426162719726562 Tokens per Sec: 17483.48358291365
Epoch Step: 695 / 730 Loss: 0.40887919068336487 Tokens per Sec: 18943.966618161903
Epoch Step: 700 / 730 Loss: 4.346302032470703 Tokens per Sec: 15644.054648827887
Epoch Step: 705 / 730 Loss: 1.0589077472686768 Tokens per Sec: 15563.396514757336
Epoch Step: 710 / 730 Loss: 17.544164657592773 Tokens per Sec: 13560.1123893972
Epoch Step: 715 / 730 Loss: 2.3682689666748047 Tokens per Sec: 14153.632451111813
Epoch Step: 720 / 730 Loss: 0.5524705648422241 Tokens per Sec: 15568.590809112644
Epoch Step: 725 / 730 Loss: 2.620661497116089 Tokens per Sec: 16793.1227154854
Epoch Step: 730 / 730 Loss: 7.9706645011901855 Tokens per Sec: 15853.554706480521
Epoch ended with duration 0:01:20.315059
Train perplexity: 1.094934896129458
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String time , java.lang.String fileName ) { VAR_2 . METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.294258
Validation perplexity: 1.2374541835662034
Epoch 55 / 1000
Epoch Step: 5 / 730 Loss: 1.6529513597488403 Tokens per Sec: 16728.597562753785
Epoch Step: 10 / 730 Loss: 0.6469032764434814 Tokens per Sec: 16501.584281828917
Epoch Step: 15 / 730 Loss: 2.4327762126922607 Tokens per Sec: 16187.610849014567
Epoch Step: 20 / 730 Loss: 0.6139402389526367 Tokens per Sec: 14832.985769403953
Epoch Step: 25 / 730 Loss: 2.172224521636963 Tokens per Sec: 19390.514415596954
Epoch Step: 30 / 730 Loss: 1.571363925933838 Tokens per Sec: 19157.023794797366
Epoch Step: 35 / 730 Loss: 1.164227843284607 Tokens per Sec: 19863.53425284374
Epoch Step: 40 / 730 Loss: 2.211179256439209 Tokens per Sec: 16273.980100984616
Epoch Step: 45 / 730 Loss: 1.3505650758743286 Tokens per Sec: 17575.297573564098
Epoch Step: 50 / 730 Loss: 3.479771614074707 Tokens per Sec: 16561.783322181855
Epoch Step: 55 / 730 Loss: 0.8265813589096069 Tokens per Sec: 17068.9852414856
Epoch Step: 60 / 730 Loss: 1.4474434852600098 Tokens per Sec: 19502.527310647627
Epoch Step: 65 / 730 Loss: 0.36439985036849976 Tokens per Sec: 19842.557505233646
Epoch Step: 70 / 730 Loss: 0.4576669931411743 Tokens per Sec: 19851.13578581594
Epoch Step: 75 / 730 Loss: 1.116930603981018 Tokens per Sec: 18250.524248691603
Epoch Step: 80 / 730 Loss: 0.22654585540294647 Tokens per Sec: 19527.837419123905
Epoch Step: 85 / 730 Loss: 1.5164527893066406 Tokens per Sec: 15958.219686113573
Epoch Step: 90 / 730 Loss: 1.931016206741333 Tokens per Sec: 15589.945605843173
Epoch Step: 95 / 730 Loss: 0.3639720678329468 Tokens per Sec: 18725.79806076105
Epoch Step: 100 / 730 Loss: 0.33868208527565 Tokens per Sec: 15141.278518034625
Epoch Step: 105 / 730 Loss: 0.43833842873573303 Tokens per Sec: 16773.95762183909
Epoch Step: 110 / 730 Loss: 1.2266478538513184 Tokens per Sec: 15913.443798279286
Epoch Step: 115 / 730 Loss: 0.7363083362579346 Tokens per Sec: 19028.653665457263
Epoch Step: 120 / 730 Loss: 0.5502381920814514 Tokens per Sec: 17520.15023384784
Epoch Step: 125 / 730 Loss: 0.2965436577796936 Tokens per Sec: 18258.373884841585
Epoch Step: 130 / 730 Loss: 1.5082406997680664 Tokens per Sec: 17522.226138080074
Epoch Step: 135 / 730 Loss: 34.09333419799805 Tokens per Sec: 18221.045833963468
Epoch Step: 140 / 730 Loss: 1.3550803661346436 Tokens per Sec: 16042.832819514306
Epoch Step: 145 / 730 Loss: 0.6010830998420715 Tokens per Sec: 19339.697647312758
Epoch Step: 150 / 730 Loss: 1.9413560628890991 Tokens per Sec: 17791.717238823432
Epoch Step: 155 / 730 Loss: 1.9846434593200684 Tokens per Sec: 17559.663525074266
Epoch Step: 160 / 730 Loss: 41.927188873291016 Tokens per Sec: 14902.567194720801
Epoch Step: 165 / 730 Loss: 1.094415307044983 Tokens per Sec: 14918.963433133391
Epoch Step: 170 / 730 Loss: 2.811213493347168 Tokens per Sec: 18725.69787970383
Epoch Step: 175 / 730 Loss: 1.1920682191848755 Tokens per Sec: 21055.021962151917
Epoch Step: 180 / 730 Loss: 1.1780668497085571 Tokens per Sec: 17831.37092584623
Epoch Step: 185 / 730 Loss: 1.1465643644332886 Tokens per Sec: 17362.254295532646
Epoch Step: 190 / 730 Loss: 1.6427416801452637 Tokens per Sec: 19365.84253240401
Epoch Step: 195 / 730 Loss: 0.583725094795227 Tokens per Sec: 17578.81589639322
Epoch Step: 200 / 730 Loss: 2.734856128692627 Tokens per Sec: 19177.35558507955
Epoch Step: 205 / 730 Loss: 0.5141900181770325 Tokens per Sec: 15314.070294857123
Epoch Step: 210 / 730 Loss: 2.133908271789551 Tokens per Sec: 15969.07177780851
Epoch Step: 215 / 730 Loss: 2.2811777591705322 Tokens per Sec: 18461.479461447783
Epoch Step: 220 / 730 Loss: 1.1130452156066895 Tokens per Sec: 19467.834276762125
Epoch Step: 225 / 730 Loss: 3.2541420459747314 Tokens per Sec: 19439.00302280078
Epoch Step: 230 / 730 Loss: 0.2503139078617096 Tokens per Sec: 19661.439610813733
Epoch Step: 235 / 730 Loss: 0.13768453896045685 Tokens per Sec: 18536.36554068185
Epoch Step: 240 / 730 Loss: 2.3401830196380615 Tokens per Sec: 15567.680342487896
Epoch Step: 245 / 730 Loss: 1.2850868701934814 Tokens per Sec: 18070.64354279285
Epoch Step: 250 / 730 Loss: 1.840673565864563 Tokens per Sec: 16186.807313973779
Epoch Step: 255 / 730 Loss: 21.115957260131836 Tokens per Sec: 18267.939089383843
Epoch Step: 260 / 730 Loss: 2.2135660648345947 Tokens per Sec: 17289.078435208325
Epoch Step: 265 / 730 Loss: 1.128675103187561 Tokens per Sec: 16441.4367484218
Epoch Step: 270 / 730 Loss: 7.063334941864014 Tokens per Sec: 17186.99757290104
Epoch Step: 275 / 730 Loss: 0.41703513264656067 Tokens per Sec: 19292.102201486792
Epoch Step: 280 / 730 Loss: 0.13182832300662994 Tokens per Sec: 16653.80067034225
Epoch Step: 285 / 730 Loss: 0.6112583875656128 Tokens per Sec: 17856.911414789538
Epoch Step: 290 / 730 Loss: 1.2175166606903076 Tokens per Sec: 20243.97020776166
Epoch Step: 295 / 730 Loss: 0.2698044776916504 Tokens per Sec: 19722.257798319635
Epoch Step: 300 / 730 Loss: 0.998047947883606 Tokens per Sec: 16802.019585138514
Epoch Step: 305 / 730 Loss: 2.0488579273223877 Tokens per Sec: 14393.177563572404
Epoch Step: 310 / 730 Loss: 1.6947710514068604 Tokens per Sec: 16135.704381971775
Epoch Step: 315 / 730 Loss: 1.4136565923690796 Tokens per Sec: 18315.021960152473
Epoch Step: 320 / 730 Loss: 1.8638852834701538 Tokens per Sec: 16296.290209393612
Epoch Step: 325 / 730 Loss: 0.28387969732284546 Tokens per Sec: 19100.77544686386
Epoch Step: 330 / 730 Loss: 1.9654039144515991 Tokens per Sec: 14800.982989914302
Epoch Step: 335 / 730 Loss: 0.7953802943229675 Tokens per Sec: 18283.998326077122
Epoch Step: 340 / 730 Loss: 3.5091302394866943 Tokens per Sec: 15373.072849930724
Epoch Step: 345 / 730 Loss: 3.0013861656188965 Tokens per Sec: 20017.14187796951
Epoch Step: 350 / 730 Loss: 1.5911786556243896 Tokens per Sec: 20976.72245260786
Epoch Step: 355 / 730 Loss: 1.867126226425171 Tokens per Sec: 16392.96429044938
Epoch Step: 360 / 730 Loss: 0.8958063721656799 Tokens per Sec: 16433.868841935164
Epoch Step: 365 / 730 Loss: 1.1276346445083618 Tokens per Sec: 18548.604525691266
Epoch Step: 370 / 730 Loss: 1.781254768371582 Tokens per Sec: 18108.81364557524
Epoch Step: 375 / 730 Loss: 0.6125805974006653 Tokens per Sec: 18617.565082405006
Epoch Step: 380 / 730 Loss: 1.0195523500442505 Tokens per Sec: 19463.218414241866
Epoch Step: 385 / 730 Loss: 3.4334518909454346 Tokens per Sec: 18280.053574174704
Epoch Step: 390 / 730 Loss: 2.4956820011138916 Tokens per Sec: 17261.963078360823
Epoch Step: 395 / 730 Loss: 1.4884568452835083 Tokens per Sec: 19623.863495374047
Epoch Step: 400 / 730 Loss: 2.0112855434417725 Tokens per Sec: 18625.267497269142
Epoch Step: 405 / 730 Loss: 9.156682968139648 Tokens per Sec: 17128.61847623605
Epoch Step: 410 / 730 Loss: 1.3278826475143433 Tokens per Sec: 18372.550111226683
Epoch Step: 415 / 730 Loss: 3.1129982471466064 Tokens per Sec: 17503.17862824405
Epoch Step: 420 / 730 Loss: 0.5226454734802246 Tokens per Sec: 15598.391545215714
Epoch Step: 425 / 730 Loss: 1.8855262994766235 Tokens per Sec: 21644.90128596487
Epoch Step: 430 / 730 Loss: 1.162388563156128 Tokens per Sec: 19492.491007984856
Epoch Step: 435 / 730 Loss: 0.15265262126922607 Tokens per Sec: 19787.983113045484
Epoch Step: 440 / 730 Loss: 3.548306465148926 Tokens per Sec: 16214.430493535196
Epoch Step: 445 / 730 Loss: 0.1767807900905609 Tokens per Sec: 20196.225046653642
Epoch Step: 450 / 730 Loss: 0.29845988750457764 Tokens per Sec: 15755.09585063488
Epoch Step: 455 / 730 Loss: 1.4380488395690918 Tokens per Sec: 15931.79106415913
Epoch Step: 460 / 730 Loss: 2.6365184783935547 Tokens per Sec: 18170.1512610635
Epoch Step: 465 / 730 Loss: 1.9335346221923828 Tokens per Sec: 17630.160559152664
Epoch Step: 470 / 730 Loss: 0.5451167821884155 Tokens per Sec: 15718.798460836953
Epoch Step: 475 / 730 Loss: 2.7255053520202637 Tokens per Sec: 17402.71866534218
Epoch Step: 480 / 730 Loss: 1.5521817207336426 Tokens per Sec: 18007.87998856476
Epoch Step: 485 / 730 Loss: 1.3067455291748047 Tokens per Sec: 16622.90631397904
Epoch Step: 490 / 730 Loss: 10.415146827697754 Tokens per Sec: 15558.56261350617
Epoch Step: 495 / 730 Loss: 1.629008412361145 Tokens per Sec: 20053.22495988933
Epoch Step: 500 / 730 Loss: 0.5250738859176636 Tokens per Sec: 16403.048776448493
Epoch Step: 505 / 730 Loss: 1.038412094116211 Tokens per Sec: 18366.09239584831
Epoch Step: 510 / 730 Loss: 0.4930250644683838 Tokens per Sec: 16938.833955659695
Epoch Step: 515 / 730 Loss: 0.5391263961791992 Tokens per Sec: 13280.522090609242
Epoch Step: 520 / 730 Loss: 1.4281418323516846 Tokens per Sec: 15523.34090245436
Epoch Step: 525 / 730 Loss: 2.1962780952453613 Tokens per Sec: 19644.60727157253
Epoch Step: 530 / 730 Loss: 1.9927341938018799 Tokens per Sec: 16719.76753764774
Epoch Step: 535 / 730 Loss: 0.5884628295898438 Tokens per Sec: 16333.342193239043
Epoch Step: 540 / 730 Loss: 2.3964579105377197 Tokens per Sec: 19264.75934050248
Epoch Step: 545 / 730 Loss: 0.17405425012111664 Tokens per Sec: 20441.87010214998
Epoch Step: 550 / 730 Loss: 0.4955793619155884 Tokens per Sec: 19889.119628942044
Epoch Step: 555 / 730 Loss: 0.4544323980808258 Tokens per Sec: 18749.777765161973
Epoch Step: 560 / 730 Loss: 2.3177683353424072 Tokens per Sec: 20047.405054789215
Epoch Step: 565 / 730 Loss: 0.1546410769224167 Tokens per Sec: 17061.450789537263
Epoch Step: 570 / 730 Loss: 2.405958890914917 Tokens per Sec: 17817.071519513607
Epoch Step: 575 / 730 Loss: 0.9484370350837708 Tokens per Sec: 15132.05421515566
Epoch Step: 580 / 730 Loss: 0.40327656269073486 Tokens per Sec: 17458.85913526705
Epoch Step: 585 / 730 Loss: 3.1748015880584717 Tokens per Sec: 16201.845938075618
Epoch Step: 590 / 730 Loss: 1.0475530624389648 Tokens per Sec: 17568.447779790018
Epoch Step: 595 / 730 Loss: 0.7414523363113403 Tokens per Sec: 19578.998181019884
Epoch Step: 600 / 730 Loss: 1.8736276626586914 Tokens per Sec: 16178.175778286854
Epoch Step: 605 / 730 Loss: 0.4964766502380371 Tokens per Sec: 19645.126730464428
Epoch Step: 610 / 730 Loss: 1.6907730102539062 Tokens per Sec: 18001.141619733826
Epoch Step: 615 / 730 Loss: 0.9726642370223999 Tokens per Sec: 12204.20380709212
Epoch Step: 620 / 730 Loss: 6.791996955871582 Tokens per Sec: 14474.641116191156
Epoch Step: 625 / 730 Loss: 0.4010445475578308 Tokens per Sec: 19569.622800815014
Epoch Step: 630 / 730 Loss: 2.9823691844940186 Tokens per Sec: 13336.644618977292
Epoch Step: 635 / 730 Loss: 0.750131368637085 Tokens per Sec: 16903.21220103358
Epoch Step: 640 / 730 Loss: 2.591567039489746 Tokens per Sec: 15825.426160935129
Epoch Step: 645 / 730 Loss: 2.22381329536438 Tokens per Sec: 19987.312815904457
Epoch Step: 650 / 730 Loss: 1.099053144454956 Tokens per Sec: 17239.12427739438
Epoch Step: 655 / 730 Loss: 13.002046585083008 Tokens per Sec: 20080.64363051245
Epoch Step: 660 / 730 Loss: 0.3325479030609131 Tokens per Sec: 20602.603193642834
Epoch Step: 665 / 730 Loss: 1.063981533050537 Tokens per Sec: 19547.766632246185
Epoch Step: 670 / 730 Loss: 0.8969612717628479 Tokens per Sec: 17884.59802135017
Epoch Step: 675 / 730 Loss: 2.446845531463623 Tokens per Sec: 17007.08654832047
Epoch Step: 680 / 730 Loss: 1.369713306427002 Tokens per Sec: 19479.11407362521
Epoch Step: 685 / 730 Loss: 1.3018550872802734 Tokens per Sec: 15776.732740303358
Epoch Step: 690 / 730 Loss: 3.091248035430908 Tokens per Sec: 18362.048242691195
Epoch Step: 695 / 730 Loss: 0.801091730594635 Tokens per Sec: 21169.712818729357
Epoch Step: 700 / 730 Loss: 2.573200225830078 Tokens per Sec: 17421.5343489469
Epoch Step: 705 / 730 Loss: 1.9102107286453247 Tokens per Sec: 16182.94134226305
Epoch Step: 710 / 730 Loss: 1.607659101486206 Tokens per Sec: 17020.379847797085
Epoch Step: 715 / 730 Loss: 0.9810636639595032 Tokens per Sec: 15353.400362521794
Epoch Step: 720 / 730 Loss: 0.9727789163589478 Tokens per Sec: 12965.811085717834
Epoch Step: 725 / 730 Loss: 1.3343837261199951 Tokens per Sec: 15858.012211803725
Epoch Step: 730 / 730 Loss: 1.1314597129821777 Tokens per Sec: 13528.012352711257
Epoch ended with duration 0:01:19.805979
Train perplexity: 1.0878162991892897
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > > , java.lang.String [ VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , message ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.359373
Validation perplexity: 1.2734159136342067
Model saved checkpoint!
Epoch 56 / 1000
Epoch Step: 5 / 730 Loss: 1.4131231307983398 Tokens per Sec: 14809.012001253097
Epoch Step: 10 / 730 Loss: 1.3054221868515015 Tokens per Sec: 15535.576454758253
Epoch Step: 15 / 730 Loss: 3.339219331741333 Tokens per Sec: 17003.729619150436
Epoch Step: 20 / 730 Loss: 0.8449007272720337 Tokens per Sec: 21031.052222350914
Epoch Step: 25 / 730 Loss: 0.3867405652999878 Tokens per Sec: 18946.37408475515
Epoch Step: 30 / 730 Loss: 0.9464767575263977 Tokens per Sec: 18439.020450262375
Epoch Step: 35 / 730 Loss: 1.0444488525390625 Tokens per Sec: 18298.536839478344
Epoch Step: 40 / 730 Loss: 0.2099110633134842 Tokens per Sec: 20114.759984555876
Epoch Step: 45 / 730 Loss: 2.3302786350250244 Tokens per Sec: 18230.774591884743
Epoch Step: 50 / 730 Loss: 10.928178787231445 Tokens per Sec: 19067.65774004386
Epoch Step: 55 / 730 Loss: 2.175522565841675 Tokens per Sec: 18756.169343891783
Epoch Step: 60 / 730 Loss: 0.34226441383361816 Tokens per Sec: 18663.34768140807
Epoch Step: 65 / 730 Loss: 0.7449544072151184 Tokens per Sec: 16109.446091004802
Epoch Step: 70 / 730 Loss: 5.766479015350342 Tokens per Sec: 15724.124302881039
Epoch Step: 75 / 730 Loss: 1.1726444959640503 Tokens per Sec: 17581.946808911656
Epoch Step: 80 / 730 Loss: 0.9221987724304199 Tokens per Sec: 16973.718556194257
Epoch Step: 85 / 730 Loss: 0.5505070686340332 Tokens per Sec: 15683.851224182641
Epoch Step: 90 / 730 Loss: 0.4509432017803192 Tokens per Sec: 17646.040009658784
Epoch Step: 95 / 730 Loss: 2.128173828125 Tokens per Sec: 20912.817016186862
Epoch Step: 100 / 730 Loss: 1.678924798965454 Tokens per Sec: 18943.91089001387
Epoch Step: 105 / 730 Loss: 1.2311725616455078 Tokens per Sec: 18829.164517501962
Epoch Step: 110 / 730 Loss: 1.258527159690857 Tokens per Sec: 18039.163289081993
Epoch Step: 115 / 730 Loss: 1.99876868724823 Tokens per Sec: 17665.725648533866
Epoch Step: 120 / 730 Loss: 1.9869893789291382 Tokens per Sec: 16692.248124812606
Epoch Step: 125 / 730 Loss: 0.9371705055236816 Tokens per Sec: 17459.539359731833
Epoch Step: 130 / 730 Loss: 1.382278561592102 Tokens per Sec: 19255.685862170812
Epoch Step: 135 / 730 Loss: 15.970808982849121 Tokens per Sec: 18152.427687169322
Epoch Step: 140 / 730 Loss: 1.467339277267456 Tokens per Sec: 18424.37819845991
Epoch Step: 145 / 730 Loss: 0.796589732170105 Tokens per Sec: 15049.558614195907
Epoch Step: 150 / 730 Loss: 0.2001132220029831 Tokens per Sec: 20323.41975449197
Epoch Step: 155 / 730 Loss: 0.6739789247512817 Tokens per Sec: 15993.772746266013
Epoch Step: 160 / 730 Loss: 0.7139908671379089 Tokens per Sec: 17709.37548769898
Epoch Step: 165 / 730 Loss: 0.37699222564697266 Tokens per Sec: 19372.869787612384
Epoch Step: 170 / 730 Loss: 2.4840173721313477 Tokens per Sec: 17397.474737865283
Epoch Step: 175 / 730 Loss: 0.5352040529251099 Tokens per Sec: 17761.003437024305
Epoch Step: 180 / 730 Loss: 2.167949676513672 Tokens per Sec: 19691.62410477765
Epoch Step: 185 / 730 Loss: 0.6244959831237793 Tokens per Sec: 18908.906251803295
Epoch Step: 190 / 730 Loss: 1.2526421546936035 Tokens per Sec: 15985.398076091697
Epoch Step: 195 / 730 Loss: 0.1939171701669693 Tokens per Sec: 15656.374060162561
Epoch Step: 200 / 730 Loss: 0.41003918647766113 Tokens per Sec: 15049.881765098917
Epoch Step: 205 / 730 Loss: 3.273775577545166 Tokens per Sec: 19652.271842563277
Epoch Step: 210 / 730 Loss: 0.49236443638801575 Tokens per Sec: 20054.697349894657
Epoch Step: 215 / 730 Loss: 0.8050504922866821 Tokens per Sec: 17578.29970085125
Epoch Step: 220 / 730 Loss: 0.8096262216567993 Tokens per Sec: 17881.83062337146
Epoch Step: 225 / 730 Loss: 1.8359137773513794 Tokens per Sec: 17420.72619705896
Epoch Step: 230 / 730 Loss: 1.321832537651062 Tokens per Sec: 17386.98233533098
Epoch Step: 235 / 730 Loss: 1.1822880506515503 Tokens per Sec: 17390.79942849212
Epoch Step: 240 / 730 Loss: 0.8157541751861572 Tokens per Sec: 18204.47320821165
Epoch Step: 245 / 730 Loss: 1.1750679016113281 Tokens per Sec: 17863.710635915882
Epoch Step: 250 / 730 Loss: 1.6280059814453125 Tokens per Sec: 15963.351084381367
Epoch Step: 255 / 730 Loss: 2.535400629043579 Tokens per Sec: 19145.58047350047
Epoch Step: 260 / 730 Loss: 0.489986777305603 Tokens per Sec: 16121.659977168747
Epoch Step: 265 / 730 Loss: 1.6473957300186157 Tokens per Sec: 17749.734618877883
Epoch Step: 270 / 730 Loss: 0.5443848967552185 Tokens per Sec: 16004.682160295222
Epoch Step: 275 / 730 Loss: 1.4757252931594849 Tokens per Sec: 16851.477796471438
Epoch Step: 280 / 730 Loss: 4.037011623382568 Tokens per Sec: 17528.647079379585
Epoch Step: 285 / 730 Loss: 1.2736470699310303 Tokens per Sec: 17351.17175469128
Epoch Step: 290 / 730 Loss: 0.9106952548027039 Tokens per Sec: 14864.876209430931
Epoch Step: 295 / 730 Loss: 0.36981260776519775 Tokens per Sec: 17994.822211608884
Epoch Step: 300 / 730 Loss: 0.3581823408603668 Tokens per Sec: 16785.265467306323
Epoch Step: 305 / 730 Loss: 1.011731743812561 Tokens per Sec: 18353.190858099944
Epoch Step: 310 / 730 Loss: 0.5656883120536804 Tokens per Sec: 16267.845393516427
Epoch Step: 315 / 730 Loss: 0.7820723056793213 Tokens per Sec: 18537.472412286086
Epoch Step: 320 / 730 Loss: 14.345502853393555 Tokens per Sec: 17453.460592300613
Epoch Step: 325 / 730 Loss: 0.340376079082489 Tokens per Sec: 17732.288422481004
Epoch Step: 330 / 730 Loss: 1.814401388168335 Tokens per Sec: 18396.17352937321
Epoch Step: 335 / 730 Loss: 0.9159144163131714 Tokens per Sec: 15636.788092847188
Epoch Step: 340 / 730 Loss: 21.29853057861328 Tokens per Sec: 18866.946902600434
Epoch Step: 345 / 730 Loss: 14.561062812805176 Tokens per Sec: 18991.681562452057
Epoch Step: 350 / 730 Loss: 1.7097351551055908 Tokens per Sec: 15752.860987579328
Epoch Step: 355 / 730 Loss: 1.3572348356246948 Tokens per Sec: 15862.960272046132
Epoch Step: 360 / 730 Loss: 1.774379014968872 Tokens per Sec: 16211.504605100248
Epoch Step: 365 / 730 Loss: 1.5605026483535767 Tokens per Sec: 19331.925906293975
Epoch Step: 370 / 730 Loss: 1.47372305393219 Tokens per Sec: 17409.176418781786
Epoch Step: 375 / 730 Loss: 0.3137979507446289 Tokens per Sec: 19823.027957910464
Epoch Step: 380 / 730 Loss: 1.1076557636260986 Tokens per Sec: 18884.34574641548
Epoch Step: 385 / 730 Loss: 2.1000728607177734 Tokens per Sec: 16793.839881219064
Epoch Step: 390 / 730 Loss: 0.6789382696151733 Tokens per Sec: 18254.54949720015
Epoch Step: 395 / 730 Loss: 0.5273069739341736 Tokens per Sec: 18944.93176518432
Epoch Step: 400 / 730 Loss: 1.6166645288467407 Tokens per Sec: 16667.7451062697
Epoch Step: 405 / 730 Loss: 0.9782015085220337 Tokens per Sec: 19120.93910611681
Epoch Step: 410 / 730 Loss: 0.8158671855926514 Tokens per Sec: 17060.24490730387
Epoch Step: 415 / 730 Loss: 1.8390493392944336 Tokens per Sec: 17885.83560106181
Epoch Step: 420 / 730 Loss: 0.4196092486381531 Tokens per Sec: 14635.015231671521
Epoch Step: 425 / 730 Loss: 1.346632480621338 Tokens per Sec: 17751.354839029256
Epoch Step: 430 / 730 Loss: 1.5389379262924194 Tokens per Sec: 16795.697136539657
Epoch Step: 435 / 730 Loss: 11.859125137329102 Tokens per Sec: 20054.576386735924
Epoch Step: 440 / 730 Loss: 0.3956289291381836 Tokens per Sec: 19760.759572193372
Epoch Step: 445 / 730 Loss: 0.6702740788459778 Tokens per Sec: 17869.70890830305
Epoch Step: 450 / 730 Loss: 1.5849988460540771 Tokens per Sec: 18382.252195991037
Epoch Step: 455 / 730 Loss: 0.560997486114502 Tokens per Sec: 18961.243593341464
Epoch Step: 460 / 730 Loss: 0.6137803792953491 Tokens per Sec: 15362.383227864082
Epoch Step: 465 / 730 Loss: 0.6077297925949097 Tokens per Sec: 15254.197385147707
Epoch Step: 470 / 730 Loss: 0.9449293613433838 Tokens per Sec: 17700.241764541315
Epoch Step: 475 / 730 Loss: 2.2780532836914062 Tokens per Sec: 16811.172602437906
Epoch Step: 480 / 730 Loss: 24.015235900878906 Tokens per Sec: 19704.849068803414
Epoch Step: 485 / 730 Loss: 0.8684285283088684 Tokens per Sec: 12873.035485741959
Epoch Step: 490 / 730 Loss: 1.397092342376709 Tokens per Sec: 20015.943770732156
Epoch Step: 495 / 730 Loss: 0.7607853412628174 Tokens per Sec: 17170.877847857606
Epoch Step: 500 / 730 Loss: 1.066300630569458 Tokens per Sec: 19507.605809696237
Epoch Step: 505 / 730 Loss: 0.6980547308921814 Tokens per Sec: 19055.83879683502
Epoch Step: 510 / 730 Loss: 3.0490097999572754 Tokens per Sec: 15283.480077870245
Epoch Step: 515 / 730 Loss: 0.8640486001968384 Tokens per Sec: 18380.986573018617
Epoch Step: 520 / 730 Loss: 1.9865057468414307 Tokens per Sec: 17272.75338645144
Epoch Step: 525 / 730 Loss: 1.0085697174072266 Tokens per Sec: 17796.8887687461
Epoch Step: 530 / 730 Loss: 1.3050328493118286 Tokens per Sec: 19833.430693348542
Epoch Step: 535 / 730 Loss: 3.0530309677124023 Tokens per Sec: 14675.179324594044
Epoch Step: 540 / 730 Loss: 1.9293935298919678 Tokens per Sec: 15484.598097571092
Epoch Step: 545 / 730 Loss: 0.19726528227329254 Tokens per Sec: 16075.686874614366
Epoch Step: 550 / 730 Loss: 0.15249516069889069 Tokens per Sec: 14875.484001825229
Epoch Step: 555 / 730 Loss: 0.5720399618148804 Tokens per Sec: 17881.34533326937
Epoch Step: 560 / 730 Loss: 0.10649041831493378 Tokens per Sec: 15824.115467903894
Epoch Step: 565 / 730 Loss: 1.1656564474105835 Tokens per Sec: 18470.748838761603
Epoch Step: 570 / 730 Loss: 0.6849544644355774 Tokens per Sec: 17394.18028466196
Epoch Step: 575 / 730 Loss: 0.8695416450500488 Tokens per Sec: 19400.68915525301
Epoch Step: 580 / 730 Loss: 2.404181480407715 Tokens per Sec: 19947.82892905327
Epoch Step: 585 / 730 Loss: 0.7064366340637207 Tokens per Sec: 19010.124278075327
Epoch Step: 590 / 730 Loss: 2.10440993309021 Tokens per Sec: 16787.61270003281
Epoch Step: 595 / 730 Loss: 1.3209807872772217 Tokens per Sec: 17742.388853578283
Epoch Step: 600 / 730 Loss: 0.24743543565273285 Tokens per Sec: 19150.44496488712
Epoch Step: 605 / 730 Loss: 0.7950537204742432 Tokens per Sec: 18821.40560475321
Epoch Step: 610 / 730 Loss: 0.35103482007980347 Tokens per Sec: 17880.566897280114
Epoch Step: 615 / 730 Loss: 0.23476098477840424 Tokens per Sec: 18479.93605794181
Epoch Step: 620 / 730 Loss: 2.744173049926758 Tokens per Sec: 18371.660224267547
Epoch Step: 625 / 730 Loss: 0.8350518941879272 Tokens per Sec: 18276.961204839794
Epoch Step: 630 / 730 Loss: 2.044701337814331 Tokens per Sec: 16942.320678205615
Epoch Step: 635 / 730 Loss: 1.8113715648651123 Tokens per Sec: 17754.7186482914
Epoch Step: 640 / 730 Loss: 0.45400649309158325 Tokens per Sec: 18691.581507912844
Epoch Step: 645 / 730 Loss: 0.7196544408798218 Tokens per Sec: 19217.455286302025
Epoch Step: 650 / 730 Loss: 2.8583052158355713 Tokens per Sec: 20712.880758234878
Epoch Step: 655 / 730 Loss: 0.450869083404541 Tokens per Sec: 16472.180711081637
Epoch Step: 660 / 730 Loss: 0.9763123989105225 Tokens per Sec: 18705.47026980388
Epoch Step: 665 / 730 Loss: 1.5241607427597046 Tokens per Sec: 19494.250037546648
Epoch Step: 670 / 730 Loss: 1.8056683540344238 Tokens per Sec: 14141.545672135207
Epoch Step: 675 / 730 Loss: 2.3080270290374756 Tokens per Sec: 15164.473951483975
Epoch Step: 680 / 730 Loss: 1.798762321472168 Tokens per Sec: 18545.435982306444
Epoch Step: 685 / 730 Loss: 1.8708077669143677 Tokens per Sec: 15722.492626482568
Epoch Step: 690 / 730 Loss: 0.11574743688106537 Tokens per Sec: 17696.29950035796
Epoch Step: 695 / 730 Loss: 0.9587755799293518 Tokens per Sec: 17801.568646419408
Epoch Step: 700 / 730 Loss: 7.688694000244141 Tokens per Sec: 16296.012303799387
Epoch Step: 705 / 730 Loss: 1.301016092300415 Tokens per Sec: 15828.015315923267
Epoch Step: 710 / 730 Loss: 0.9755606651306152 Tokens per Sec: 16065.763540033378
Epoch Step: 715 / 730 Loss: 6.56581449508667 Tokens per Sec: 15582.690616122081
Epoch Step: 720 / 730 Loss: 0.7439268231391907 Tokens per Sec: 15095.441650928253
Epoch Step: 725 / 730 Loss: 1.4263259172439575 Tokens per Sec: 14577.122632861416
Epoch Step: 730 / 730 Loss: 0.9307699799537659 Tokens per Sec: 13953.226225832845
Epoch ended with duration 0:01:19.873940
Train perplexity: 1.0894888970517824
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String time , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.310660
Validation perplexity: 1.2158217948094114
Epoch 57 / 1000
Epoch Step: 5 / 730 Loss: 0.19008056819438934 Tokens per Sec: 16809.17832805474
Epoch Step: 10 / 730 Loss: 0.6480289697647095 Tokens per Sec: 17916.044867364086
Epoch Step: 15 / 730 Loss: 0.9606921672821045 Tokens per Sec: 19267.409191566054
Epoch Step: 20 / 730 Loss: 1.279848575592041 Tokens per Sec: 17847.126356664954
Epoch Step: 25 / 730 Loss: 2.4647114276885986 Tokens per Sec: 21310.038347972677
Epoch Step: 30 / 730 Loss: 0.2883951663970947 Tokens per Sec: 16067.862061225158
Epoch Step: 35 / 730 Loss: 0.296312153339386 Tokens per Sec: 15369.301696713337
Epoch Step: 40 / 730 Loss: 7.146884918212891 Tokens per Sec: 18763.753390494996
Epoch Step: 45 / 730 Loss: 1.95887291431427 Tokens per Sec: 18834.926176503508
Epoch Step: 50 / 730 Loss: 0.5899879932403564 Tokens per Sec: 19827.605267248953
Epoch Step: 55 / 730 Loss: 1.0671617984771729 Tokens per Sec: 16132.667152464743
Epoch Step: 60 / 730 Loss: 1.4299461841583252 Tokens per Sec: 16472.128811602928
Epoch Step: 65 / 730 Loss: 0.06541800498962402 Tokens per Sec: 15910.21777808647
Epoch Step: 70 / 730 Loss: 16.785757064819336 Tokens per Sec: 15485.943709835232
Epoch Step: 75 / 730 Loss: 1.6486001014709473 Tokens per Sec: 19006.71587018088
Epoch Step: 80 / 730 Loss: 0.24029850959777832 Tokens per Sec: 13829.480406983446
Epoch Step: 85 / 730 Loss: 13.444311141967773 Tokens per Sec: 15464.115893727241
Epoch Step: 90 / 730 Loss: 0.875622034072876 Tokens per Sec: 18389.54140140412
Epoch Step: 95 / 730 Loss: 0.31075912714004517 Tokens per Sec: 17820.249939510715
Epoch Step: 100 / 730 Loss: 3.390730857849121 Tokens per Sec: 17220.665714249804
Epoch Step: 105 / 730 Loss: 0.41066691279411316 Tokens per Sec: 16406.81427925167
Epoch Step: 110 / 730 Loss: 1.7623822689056396 Tokens per Sec: 19109.11764412865
Epoch Step: 115 / 730 Loss: 1.503243327140808 Tokens per Sec: 17079.0029059402
Epoch Step: 120 / 730 Loss: 1.034254789352417 Tokens per Sec: 15767.062450890158
Epoch Step: 125 / 730 Loss: 0.48957526683807373 Tokens per Sec: 17297.524977978574
Epoch Step: 130 / 730 Loss: 1.8120592832565308 Tokens per Sec: 18263.84724523164
Epoch Step: 135 / 730 Loss: 1.3871383666992188 Tokens per Sec: 13597.789112995488
Epoch Step: 140 / 730 Loss: 0.8557004928588867 Tokens per Sec: 18242.958275593963
Epoch Step: 145 / 730 Loss: 13.18375301361084 Tokens per Sec: 17700.769246388754
Epoch Step: 150 / 730 Loss: 1.741626262664795 Tokens per Sec: 18204.855797838285
Epoch Step: 155 / 730 Loss: 2.651686191558838 Tokens per Sec: 17071.745525343063
Epoch Step: 160 / 730 Loss: 0.13568712770938873 Tokens per Sec: 16455.412350664326
Epoch Step: 165 / 730 Loss: 1.8899109363555908 Tokens per Sec: 20274.815179717763
Epoch Step: 170 / 730 Loss: 2.3458592891693115 Tokens per Sec: 18424.5267333016
Epoch Step: 175 / 730 Loss: 1.6290010213851929 Tokens per Sec: 19627.64757146093
Epoch Step: 180 / 730 Loss: 0.325048565864563 Tokens per Sec: 17560.043323088645
Epoch Step: 185 / 730 Loss: 0.18626771867275238 Tokens per Sec: 19762.72153634199
Epoch Step: 190 / 730 Loss: 2.0878965854644775 Tokens per Sec: 18365.639778145374
Epoch Step: 195 / 730 Loss: 2.814969778060913 Tokens per Sec: 19052.071593284112
Epoch Step: 200 / 730 Loss: 25.703447341918945 Tokens per Sec: 16248.206689501127
Epoch Step: 205 / 730 Loss: 2.452223300933838 Tokens per Sec: 12755.726839814457
Epoch Step: 210 / 730 Loss: 2.6563169956207275 Tokens per Sec: 19012.55186745408
Epoch Step: 215 / 730 Loss: 2.229968309402466 Tokens per Sec: 19168.084052117298
Epoch Step: 220 / 730 Loss: 1.6764699220657349 Tokens per Sec: 19733.992945307
Epoch Step: 225 / 730 Loss: 0.3867262601852417 Tokens per Sec: 17940.707322661143
Epoch Step: 230 / 730 Loss: 0.2111707329750061 Tokens per Sec: 16021.286608086048
Epoch Step: 235 / 730 Loss: 0.47636765241622925 Tokens per Sec: 18879.741719589387
Epoch Step: 240 / 730 Loss: 2.2395455837249756 Tokens per Sec: 17271.620936337284
Epoch Step: 245 / 730 Loss: 1.733892798423767 Tokens per Sec: 19467.344215375793
Epoch Step: 250 / 730 Loss: 2.50455641746521 Tokens per Sec: 18118.922276334004
Epoch Step: 255 / 730 Loss: 13.061999320983887 Tokens per Sec: 19042.2558166296
Epoch Step: 260 / 730 Loss: 22.01987075805664 Tokens per Sec: 15132.588691060688
Epoch Step: 265 / 730 Loss: 2.82757306098938 Tokens per Sec: 15736.877112001855
Epoch Step: 270 / 730 Loss: 0.38336992263793945 Tokens per Sec: 17036.819391245095
Epoch Step: 275 / 730 Loss: 39.03927230834961 Tokens per Sec: 14584.339010037467
Epoch Step: 280 / 730 Loss: 2.0636401176452637 Tokens per Sec: 18638.5672147916
Epoch Step: 285 / 730 Loss: 0.5554525256156921 Tokens per Sec: 18220.738210448693
Epoch Step: 290 / 730 Loss: 1.1556835174560547 Tokens per Sec: 17361.035118713135
Epoch Step: 295 / 730 Loss: 2.9803969860076904 Tokens per Sec: 18258.16891122473
Epoch Step: 300 / 730 Loss: 2.0943405628204346 Tokens per Sec: 16901.211157320056
Epoch Step: 305 / 730 Loss: 3.146296262741089 Tokens per Sec: 16733.85231386467
Epoch Step: 310 / 730 Loss: 1.6675633192062378 Tokens per Sec: 19950.68771797858
Epoch Step: 315 / 730 Loss: 2.635305404663086 Tokens per Sec: 14292.201217050117
Epoch Step: 320 / 730 Loss: 1.339215636253357 Tokens per Sec: 19295.64891174214
Epoch Step: 325 / 730 Loss: 0.4095149338245392 Tokens per Sec: 18000.001791061684
Epoch Step: 330 / 730 Loss: 1.055027723312378 Tokens per Sec: 18845.83550824254
Epoch Step: 335 / 730 Loss: 0.8956167101860046 Tokens per Sec: 12752.111092957173
Epoch Step: 340 / 730 Loss: 2.444122076034546 Tokens per Sec: 16770.53000521837
Epoch Step: 345 / 730 Loss: 3.1827287673950195 Tokens per Sec: 20588.8252824296
Epoch Step: 350 / 730 Loss: 0.3820963501930237 Tokens per Sec: 19213.34940414003
Epoch Step: 355 / 730 Loss: 1.3524107933044434 Tokens per Sec: 17193.542359019368
Epoch Step: 360 / 730 Loss: 0.36768969893455505 Tokens per Sec: 15141.590389278641
Epoch Step: 365 / 730 Loss: 0.2586641013622284 Tokens per Sec: 19135.512524849528
Epoch Step: 370 / 730 Loss: 0.6795839071273804 Tokens per Sec: 17992.66540193049
Epoch Step: 375 / 730 Loss: 0.3641756772994995 Tokens per Sec: 17951.95541091942
Epoch Step: 380 / 730 Loss: 0.6038867235183716 Tokens per Sec: 16976.939597565328
Epoch Step: 385 / 730 Loss: 0.6892366409301758 Tokens per Sec: 17757.80126923642
Epoch Step: 390 / 730 Loss: 1.460323691368103 Tokens per Sec: 18974.25088086549
Epoch Step: 395 / 730 Loss: 0.21821236610412598 Tokens per Sec: 14321.163242460329
Epoch Step: 400 / 730 Loss: 12.483198165893555 Tokens per Sec: 20161.31165514234
Epoch Step: 405 / 730 Loss: 0.872570276260376 Tokens per Sec: 19109.867121260955
Epoch Step: 410 / 730 Loss: 1.2645765542984009 Tokens per Sec: 20086.86123943771
Epoch Step: 415 / 730 Loss: 0.7943283915519714 Tokens per Sec: 19369.737968289086
Epoch Step: 420 / 730 Loss: 0.2469322383403778 Tokens per Sec: 18462.476107749902
Epoch Step: 425 / 730 Loss: 0.28956595063209534 Tokens per Sec: 15708.539854300248
Epoch Step: 430 / 730 Loss: 1.928875207901001 Tokens per Sec: 16329.604068911123
Epoch Step: 435 / 730 Loss: 2.0005252361297607 Tokens per Sec: 20394.237867975804
Epoch Step: 440 / 730 Loss: 0.7843643426895142 Tokens per Sec: 18657.529574545122
Epoch Step: 445 / 730 Loss: 0.536776065826416 Tokens per Sec: 13024.901185169269
Epoch Step: 450 / 730 Loss: 1.1342500448226929 Tokens per Sec: 20337.48882483962
Epoch Step: 455 / 730 Loss: 1.4141535758972168 Tokens per Sec: 15812.666269711515
Epoch Step: 460 / 730 Loss: 1.966563105583191 Tokens per Sec: 16733.8566353619
Epoch Step: 465 / 730 Loss: 0.7671027183532715 Tokens per Sec: 18973.975731255166
Epoch Step: 470 / 730 Loss: 0.4233521521091461 Tokens per Sec: 15271.644315280344
Epoch Step: 475 / 730 Loss: 1.5719534158706665 Tokens per Sec: 16796.08146705276
Epoch Step: 480 / 730 Loss: 1.2201077938079834 Tokens per Sec: 19116.66828456653
Epoch Step: 485 / 730 Loss: 1.9066929817199707 Tokens per Sec: 16522.335460913386
Epoch Step: 490 / 730 Loss: 4.778086185455322 Tokens per Sec: 18957.007344781498
Epoch Step: 495 / 730 Loss: 1.2935160398483276 Tokens per Sec: 18080.352176861375
Epoch Step: 500 / 730 Loss: 0.1840646117925644 Tokens per Sec: 17222.965142107678
Epoch Step: 505 / 730 Loss: 17.34620475769043 Tokens per Sec: 16324.340116048073
Epoch Step: 510 / 730 Loss: 0.8558015823364258 Tokens per Sec: 16160.447185810695
Epoch Step: 515 / 730 Loss: 2.7834982872009277 Tokens per Sec: 17031.01062316769
Epoch Step: 520 / 730 Loss: 1.0641992092132568 Tokens per Sec: 17198.966352123625
Epoch Step: 525 / 730 Loss: 2.1137635707855225 Tokens per Sec: 17981.68526985132
Epoch Step: 530 / 730 Loss: 1.1975147724151611 Tokens per Sec: 20729.87948206256
Epoch Step: 535 / 730 Loss: 1.190232276916504 Tokens per Sec: 17142.716823018465
Epoch Step: 540 / 730 Loss: 0.7153350710868835 Tokens per Sec: 16880.59839416579
Epoch Step: 545 / 730 Loss: 0.5465509295463562 Tokens per Sec: 20029.874231685142
Epoch Step: 550 / 730 Loss: 0.7530291080474854 Tokens per Sec: 18548.541537735564
Epoch Step: 555 / 730 Loss: 3.2978317737579346 Tokens per Sec: 18223.954722192873
Epoch Step: 560 / 730 Loss: 16.126344680786133 Tokens per Sec: 13326.882505522593
Epoch Step: 565 / 730 Loss: 0.3045830726623535 Tokens per Sec: 17173.780361133126
Epoch Step: 570 / 730 Loss: 0.27598923444747925 Tokens per Sec: 18362.065825925478
Epoch Step: 575 / 730 Loss: 1.3181540966033936 Tokens per Sec: 18981.46771336027
Epoch Step: 580 / 730 Loss: 1.0535355806350708 Tokens per Sec: 18579.05511699845
Epoch Step: 585 / 730 Loss: 1.1699037551879883 Tokens per Sec: 16727.775230915566
Epoch Step: 590 / 730 Loss: 0.972869336605072 Tokens per Sec: 18351.495752770243
Epoch Step: 595 / 730 Loss: 0.9377303123474121 Tokens per Sec: 17590.51629738716
Epoch Step: 600 / 730 Loss: 0.5183258652687073 Tokens per Sec: 16539.799674330716
Epoch Step: 605 / 730 Loss: 1.124922513961792 Tokens per Sec: 15915.118604305722
Epoch Step: 610 / 730 Loss: 39.606483459472656 Tokens per Sec: 17820.271376953584
Epoch Step: 615 / 730 Loss: 0.3743477463722229 Tokens per Sec: 19548.910081383758
Epoch Step: 620 / 730 Loss: 2.426124095916748 Tokens per Sec: 16162.702148546106
Epoch Step: 625 / 730 Loss: 2.2059340476989746 Tokens per Sec: 16416.391989937263
Epoch Step: 630 / 730 Loss: 1.1833025217056274 Tokens per Sec: 19001.270103541417
Epoch Step: 635 / 730 Loss: 0.5901178121566772 Tokens per Sec: 20609.904038274657
Epoch Step: 640 / 730 Loss: 1.8583697080612183 Tokens per Sec: 17856.17037573981
Epoch Step: 645 / 730 Loss: 2.291271209716797 Tokens per Sec: 20009.923697541693
Epoch Step: 650 / 730 Loss: 2.335045337677002 Tokens per Sec: 18877.768212088948
Epoch Step: 655 / 730 Loss: 1.976210117340088 Tokens per Sec: 15835.137161264984
Epoch Step: 660 / 730 Loss: 0.29174691438674927 Tokens per Sec: 17111.011080815235
Epoch Step: 665 / 730 Loss: 0.6607992649078369 Tokens per Sec: 17687.99184063644
Epoch Step: 670 / 730 Loss: 12.986512184143066 Tokens per Sec: 18832.841166188857
Epoch Step: 675 / 730 Loss: 0.9304242134094238 Tokens per Sec: 18614.577843035993
Epoch Step: 680 / 730 Loss: 1.2175307273864746 Tokens per Sec: 19772.213759752663
Epoch Step: 685 / 730 Loss: 1.0852701663970947 Tokens per Sec: 17666.136166321336
Epoch Step: 690 / 730 Loss: 1.5779155492782593 Tokens per Sec: 16326.241954242103
Epoch Step: 695 / 730 Loss: 22.319631576538086 Tokens per Sec: 13417.680113174645
Epoch Step: 700 / 730 Loss: 1.793402910232544 Tokens per Sec: 14779.384666268079
Epoch Step: 705 / 730 Loss: 12.664826393127441 Tokens per Sec: 16316.823075450964
Epoch Step: 710 / 730 Loss: 2.2656636238098145 Tokens per Sec: 13345.17509133322
Epoch Step: 715 / 730 Loss: 1.237615942955017 Tokens per Sec: 15378.353154027562
Epoch Step: 720 / 730 Loss: 2.8223934173583984 Tokens per Sec: 13800.87564298258
Epoch Step: 725 / 730 Loss: 2.087059497833252 Tokens per Sec: 14375.756173268232
Epoch Step: 730 / 730 Loss: 1.534105896949768 Tokens per Sec: 17037.009574855616
Epoch ended with duration 0:01:20.281431
Train perplexity: 1.0801557127983494
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > , java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.329276
Validation perplexity: 1.198275499244811
Epoch 58 / 1000
Epoch Step: 5 / 730 Loss: 0.28387880325317383 Tokens per Sec: 15545.080013991796
Epoch Step: 10 / 730 Loss: 1.2553774118423462 Tokens per Sec: 14971.873537308198
Epoch Step: 15 / 730 Loss: 14.340161323547363 Tokens per Sec: 15531.166218393339
Epoch Step: 20 / 730 Loss: 5.117660045623779 Tokens per Sec: 18416.141299914107
Epoch Step: 25 / 730 Loss: 3.0906741619110107 Tokens per Sec: 16942.072855339225
Epoch Step: 30 / 730 Loss: 0.4787987470626831 Tokens per Sec: 18315.81652449613
Epoch Step: 35 / 730 Loss: 0.9293116331100464 Tokens per Sec: 17168.14642778594
Epoch Step: 40 / 730 Loss: 0.10352995991706848 Tokens per Sec: 17894.11359482369
Epoch Step: 45 / 730 Loss: 1.3480117321014404 Tokens per Sec: 17957.390317601537
Epoch Step: 50 / 730 Loss: 1.5100127458572388 Tokens per Sec: 14270.684690171744
Epoch Step: 55 / 730 Loss: 0.602849006652832 Tokens per Sec: 17075.922192908252
Epoch Step: 60 / 730 Loss: 2.5830512046813965 Tokens per Sec: 20520.114570380025
Epoch Step: 65 / 730 Loss: 1.0773420333862305 Tokens per Sec: 16519.72409573636
Epoch Step: 70 / 730 Loss: 0.9852795004844666 Tokens per Sec: 17248.668057545587
Epoch Step: 75 / 730 Loss: 1.439232349395752 Tokens per Sec: 15570.939470739617
Epoch Step: 80 / 730 Loss: 1.6057766675949097 Tokens per Sec: 21306.414134831914
Epoch Step: 85 / 730 Loss: 21.73215675354004 Tokens per Sec: 20336.414024948695
Epoch Step: 90 / 730 Loss: 0.18225671350955963 Tokens per Sec: 19712.75556850702
Epoch Step: 95 / 730 Loss: 0.5828437805175781 Tokens per Sec: 14162.00770238336
Epoch Step: 100 / 730 Loss: 0.5997369289398193 Tokens per Sec: 20261.235700961868
Epoch Step: 105 / 730 Loss: 0.6547852754592896 Tokens per Sec: 17095.517581462303
Epoch Step: 110 / 730 Loss: 0.5223877429962158 Tokens per Sec: 20765.904587954574
Epoch Step: 115 / 730 Loss: 0.29130035638809204 Tokens per Sec: 17263.67865261033
Epoch Step: 120 / 730 Loss: 1.8337185382843018 Tokens per Sec: 16787.340608445145
Epoch Step: 125 / 730 Loss: 0.05433057248592377 Tokens per Sec: 18494.540334535417
Epoch Step: 130 / 730 Loss: 0.6939022541046143 Tokens per Sec: 18322.86390308474
Epoch Step: 135 / 730 Loss: 3.187753200531006 Tokens per Sec: 18903.30417504838
Epoch Step: 140 / 730 Loss: 0.6884275078773499 Tokens per Sec: 17617.043651698303
Epoch Step: 145 / 730 Loss: 0.2425084412097931 Tokens per Sec: 19395.407921621136
Epoch Step: 150 / 730 Loss: 0.10215219855308533 Tokens per Sec: 18843.240082702752
Epoch Step: 155 / 730 Loss: 1.5039018392562866 Tokens per Sec: 16292.542734733292
Epoch Step: 160 / 730 Loss: 2.0559041500091553 Tokens per Sec: 14497.357194451111
Epoch Step: 165 / 730 Loss: 0.7953706383705139 Tokens per Sec: 19897.04931145319
Epoch Step: 170 / 730 Loss: 0.27776673436164856 Tokens per Sec: 17228.047693361263
Epoch Step: 175 / 730 Loss: 2.0365099906921387 Tokens per Sec: 15195.374551021665
Epoch Step: 180 / 730 Loss: 1.3724247217178345 Tokens per Sec: 20565.50414840239
Epoch Step: 185 / 730 Loss: 1.1996619701385498 Tokens per Sec: 17187.140666030158
Epoch Step: 190 / 730 Loss: 1.9614372253417969 Tokens per Sec: 17126.307109942674
Epoch Step: 195 / 730 Loss: 2.5130887031555176 Tokens per Sec: 13677.320388762017
Epoch Step: 200 / 730 Loss: 1.0741703510284424 Tokens per Sec: 16716.72948822349
Epoch Step: 205 / 730 Loss: 1.4377385377883911 Tokens per Sec: 18985.34542927586
Epoch Step: 210 / 730 Loss: 0.2733044922351837 Tokens per Sec: 19607.61865038878
Epoch Step: 215 / 730 Loss: 1.864474892616272 Tokens per Sec: 16191.600206601503
Epoch Step: 220 / 730 Loss: 1.1628894805908203 Tokens per Sec: 16547.320699792206
Epoch Step: 225 / 730 Loss: 0.5431138873100281 Tokens per Sec: 19351.751096692074
Epoch Step: 230 / 730 Loss: 1.8013265132904053 Tokens per Sec: 19515.496799789344
Epoch Step: 235 / 730 Loss: 0.9842529296875 Tokens per Sec: 16839.324768409846
Epoch Step: 240 / 730 Loss: 1.8999756574630737 Tokens per Sec: 17475.502145638155
Epoch Step: 245 / 730 Loss: 0.8166036605834961 Tokens per Sec: 14833.596296939275
Epoch Step: 250 / 730 Loss: 1.2376785278320312 Tokens per Sec: 17247.72055215147
Epoch Step: 255 / 730 Loss: 1.7243592739105225 Tokens per Sec: 17003.895653627627
Epoch Step: 260 / 730 Loss: 2.1620099544525146 Tokens per Sec: 16995.256332283385
Epoch Step: 265 / 730 Loss: 1.3528889417648315 Tokens per Sec: 16716.01222454814
Epoch Step: 270 / 730 Loss: 1.0332140922546387 Tokens per Sec: 17102.343234601696
Epoch Step: 275 / 730 Loss: 1.9045361280441284 Tokens per Sec: 18722.89599511818
Epoch Step: 280 / 730 Loss: 32.12077331542969 Tokens per Sec: 18078.14061666671
Epoch Step: 285 / 730 Loss: 0.8726038932800293 Tokens per Sec: 18289.47850084366
Epoch Step: 290 / 730 Loss: 3.167144536972046 Tokens per Sec: 18317.438392087584
Epoch Step: 295 / 730 Loss: 1.438994288444519 Tokens per Sec: 12639.997853497964
Epoch Step: 300 / 730 Loss: 3.0965442657470703 Tokens per Sec: 18257.962499121775
Epoch Step: 305 / 730 Loss: 1.3280143737792969 Tokens per Sec: 18577.857036143065
Epoch Step: 310 / 730 Loss: 3.388343334197998 Tokens per Sec: 17480.750603954246
Epoch Step: 315 / 730 Loss: 0.42840397357940674 Tokens per Sec: 17231.194619163452
Epoch Step: 320 / 730 Loss: 0.2972174286842346 Tokens per Sec: 17904.514757698227
Epoch Step: 325 / 730 Loss: 1.892142415046692 Tokens per Sec: 19483.585251869597
Epoch Step: 330 / 730 Loss: 0.572418749332428 Tokens per Sec: 16591.97891118559
Epoch Step: 335 / 730 Loss: 0.49605631828308105 Tokens per Sec: 16463.487965693665
Epoch Step: 340 / 730 Loss: 1.6794397830963135 Tokens per Sec: 17018.544941093267
Epoch Step: 345 / 730 Loss: 0.2682183086872101 Tokens per Sec: 16907.237305560153
Epoch Step: 350 / 730 Loss: 0.8960548639297485 Tokens per Sec: 15676.506304417015
Epoch Step: 355 / 730 Loss: 0.4752926230430603 Tokens per Sec: 20540.606901683634
Epoch Step: 360 / 730 Loss: 2.5995922088623047 Tokens per Sec: 17955.8058489448
Epoch Step: 365 / 730 Loss: 1.2094837427139282 Tokens per Sec: 15368.120729462942
Epoch Step: 370 / 730 Loss: 0.654411792755127 Tokens per Sec: 18183.509405281387
Epoch Step: 375 / 730 Loss: 1.3266013860702515 Tokens per Sec: 18527.44825896739
Epoch Step: 380 / 730 Loss: 2.3347156047821045 Tokens per Sec: 19728.045374308076
Epoch Step: 385 / 730 Loss: 2.397233009338379 Tokens per Sec: 14520.192008215658
Epoch Step: 390 / 730 Loss: 1.5562689304351807 Tokens per Sec: 17373.41024346344
Epoch Step: 395 / 730 Loss: 0.8664781451225281 Tokens per Sec: 19855.53034093026
Epoch Step: 400 / 730 Loss: 11.528538703918457 Tokens per Sec: 19352.56874832846
Epoch Step: 405 / 730 Loss: 44.600975036621094 Tokens per Sec: 17636.586645132884
Epoch Step: 410 / 730 Loss: 2.1780917644500732 Tokens per Sec: 15764.569898747932
Epoch Step: 415 / 730 Loss: 0.3898465037345886 Tokens per Sec: 17735.07422161755
Epoch Step: 420 / 730 Loss: 1.2098431587219238 Tokens per Sec: 20464.328409441874
Epoch Step: 425 / 730 Loss: 1.3881731033325195 Tokens per Sec: 18939.35279268276
Epoch Step: 430 / 730 Loss: 0.4733634293079376 Tokens per Sec: 18987.829983463384
Epoch Step: 435 / 730 Loss: 2.6563169956207275 Tokens per Sec: 15968.016286801792
Epoch Step: 440 / 730 Loss: 0.3887332081794739 Tokens per Sec: 16886.156713081524
Epoch Step: 445 / 730 Loss: 2.056013345718384 Tokens per Sec: 14194.872295578589
Epoch Step: 450 / 730 Loss: 2.626927614212036 Tokens per Sec: 18787.07888433497
Epoch Step: 455 / 730 Loss: 1.8401700258255005 Tokens per Sec: 16272.10736531235
Epoch Step: 460 / 730 Loss: 0.2673785090446472 Tokens per Sec: 18247.945013678578
Epoch Step: 465 / 730 Loss: 1.709021806716919 Tokens per Sec: 19574.54869983054
Epoch Step: 470 / 730 Loss: 0.5546880960464478 Tokens per Sec: 19506.21884716816
Epoch Step: 475 / 730 Loss: 1.559356927871704 Tokens per Sec: 19259.86127321591
Epoch Step: 480 / 730 Loss: 1.038083553314209 Tokens per Sec: 16533.270534967913
Epoch Step: 485 / 730 Loss: 0.8334352970123291 Tokens per Sec: 18781.101240926102
Epoch Step: 490 / 730 Loss: 1.4379411935806274 Tokens per Sec: 15649.745772913817
Epoch Step: 495 / 730 Loss: 0.6744498014450073 Tokens per Sec: 16257.818188086358
Epoch Step: 500 / 730 Loss: 2.023174524307251 Tokens per Sec: 20710.76255776167
Epoch Step: 505 / 730 Loss: 1.3834127187728882 Tokens per Sec: 19629.492093659017
Epoch Step: 510 / 730 Loss: 2.2169277667999268 Tokens per Sec: 20023.718072477444
Epoch Step: 515 / 730 Loss: 1.4401084184646606 Tokens per Sec: 18130.54142125633
Epoch Step: 520 / 730 Loss: 1.0631004571914673 Tokens per Sec: 14005.407694030519
Epoch Step: 525 / 730 Loss: 1.3140281438827515 Tokens per Sec: 17721.143800234357
Epoch Step: 530 / 730 Loss: 0.18787416815757751 Tokens per Sec: 18525.605698825126
Epoch Step: 535 / 730 Loss: 0.6981840133666992 Tokens per Sec: 19748.37185814208
Epoch Step: 540 / 730 Loss: 0.615835428237915 Tokens per Sec: 18324.661830136047
Epoch Step: 545 / 730 Loss: 0.70237135887146 Tokens per Sec: 14570.272135133451
Epoch Step: 550 / 730 Loss: 0.7346625328063965 Tokens per Sec: 19431.373834524577
Epoch Step: 555 / 730 Loss: 0.37137851119041443 Tokens per Sec: 18502.40293966501
Epoch Step: 560 / 730 Loss: 2.37563419342041 Tokens per Sec: 19828.434264742373
Epoch Step: 565 / 730 Loss: 3.204423666000366 Tokens per Sec: 19712.48379452144
Epoch Step: 570 / 730 Loss: 1.746119737625122 Tokens per Sec: 17130.44646771335
Epoch Step: 575 / 730 Loss: 0.3533778786659241 Tokens per Sec: 14875.474432025007
Epoch Step: 580 / 730 Loss: 23.107940673828125 Tokens per Sec: 19533.139664769067
Epoch Step: 585 / 730 Loss: 2.51755428314209 Tokens per Sec: 16966.22570744256
Epoch Step: 590 / 730 Loss: 3.0347530841827393 Tokens per Sec: 15946.12289349608
Epoch Step: 595 / 730 Loss: 0.9297162294387817 Tokens per Sec: 16818.82244473733
Epoch Step: 600 / 730 Loss: 1.141132116317749 Tokens per Sec: 15660.097746334046
Epoch Step: 605 / 730 Loss: 0.20179103314876556 Tokens per Sec: 19128.942067392865
Epoch Step: 610 / 730 Loss: 0.4272526800632477 Tokens per Sec: 21162.853104282472
Epoch Step: 615 / 730 Loss: 2.6113593578338623 Tokens per Sec: 18854.006996510052
Epoch Step: 620 / 730 Loss: 0.39115023612976074 Tokens per Sec: 16067.068687019888
Epoch Step: 625 / 730 Loss: 1.407386302947998 Tokens per Sec: 19039.88633607363
Epoch Step: 630 / 730 Loss: 1.130143642425537 Tokens per Sec: 21033.96118756246
Epoch Step: 635 / 730 Loss: 2.166239023208618 Tokens per Sec: 16308.444840246226
Epoch Step: 640 / 730 Loss: 1.9755921363830566 Tokens per Sec: 17862.03479028787
Epoch Step: 645 / 730 Loss: 0.7668379545211792 Tokens per Sec: 14930.103468980416
Epoch Step: 650 / 730 Loss: 0.2947799563407898 Tokens per Sec: 15234.769993773281
Epoch Step: 655 / 730 Loss: 2.8279309272766113 Tokens per Sec: 18543.521715354596
Epoch Step: 660 / 730 Loss: 0.28611230850219727 Tokens per Sec: 16184.456046195988
Epoch Step: 665 / 730 Loss: 2.2275071144104004 Tokens per Sec: 19038.402009449197
Epoch Step: 670 / 730 Loss: 0.9577616453170776 Tokens per Sec: 18845.563935835657
Epoch Step: 675 / 730 Loss: 1.8000670671463013 Tokens per Sec: 16104.848659234274
Epoch Step: 680 / 730 Loss: 2.5067524909973145 Tokens per Sec: 18428.993436006906
Epoch Step: 685 / 730 Loss: 1.1322472095489502 Tokens per Sec: 14874.901265048771
Epoch Step: 690 / 730 Loss: 0.5974775552749634 Tokens per Sec: 14866.95742513899
Epoch Step: 695 / 730 Loss: 0.599506139755249 Tokens per Sec: 21831.608349440918
Epoch Step: 700 / 730 Loss: 1.7583155632019043 Tokens per Sec: 16967.091133582562
Epoch Step: 705 / 730 Loss: 1.617761492729187 Tokens per Sec: 16202.463368690089
Epoch Step: 710 / 730 Loss: 1.4398442506790161 Tokens per Sec: 15530.835804105627
Epoch Step: 715 / 730 Loss: 1.1727850437164307 Tokens per Sec: 15710.670877547378
Epoch Step: 720 / 730 Loss: 1.4499906301498413 Tokens per Sec: 15226.91338412915
Epoch Step: 725 / 730 Loss: 2.5190532207489014 Tokens per Sec: 14165.443900144543
Epoch Step: 730 / 730 Loss: 2.1167848110198975 Tokens per Sec: 15298.792776994034
Epoch ended with duration 0:01:19.956882
Train perplexity: 1.0803844914761644
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.Map < java.lang.String , java.lang.String > > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , VAR_2 ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.340196
Validation perplexity: 1.2013628973080022
Epoch 59 / 1000
Epoch Step: 5 / 730 Loss: 1.101740837097168 Tokens per Sec: 15275.65812936026
Epoch Step: 10 / 730 Loss: 0.8669763803482056 Tokens per Sec: 14362.875805456584
Epoch Step: 15 / 730 Loss: 3.0039548873901367 Tokens per Sec: 19332.321519078145
Epoch Step: 20 / 730 Loss: 1.46174156665802 Tokens per Sec: 16923.607663736773
Epoch Step: 25 / 730 Loss: 0.22694812715053558 Tokens per Sec: 16202.717555096071
Epoch Step: 30 / 730 Loss: 0.5803225040435791 Tokens per Sec: 21939.67930145804
Epoch Step: 35 / 730 Loss: 1.910689115524292 Tokens per Sec: 20485.81747864506
Epoch Step: 40 / 730 Loss: 1.0037789344787598 Tokens per Sec: 13538.479089748858
Epoch Step: 45 / 730 Loss: 0.10802657902240753 Tokens per Sec: 16072.772800169669
Epoch Step: 50 / 730 Loss: 2.490687608718872 Tokens per Sec: 16306.714384652882
Epoch Step: 55 / 730 Loss: 0.9880140423774719 Tokens per Sec: 17034.646673433745
Epoch Step: 60 / 730 Loss: 1.152186393737793 Tokens per Sec: 16037.223159108078
Epoch Step: 65 / 730 Loss: 1.3617548942565918 Tokens per Sec: 19203.267834536764
Epoch Step: 70 / 730 Loss: 1.1204102039337158 Tokens per Sec: 18343.71211303221
Epoch Step: 75 / 730 Loss: 0.3206632137298584 Tokens per Sec: 19073.01074663381
Epoch Step: 80 / 730 Loss: 1.3835495710372925 Tokens per Sec: 16193.94679534958
Epoch Step: 85 / 730 Loss: 1.7054980993270874 Tokens per Sec: 20986.94964006143
Epoch Step: 90 / 730 Loss: 0.5155617594718933 Tokens per Sec: 18825.175679350163
Epoch Step: 95 / 730 Loss: 2.193671703338623 Tokens per Sec: 16946.55576315604
Epoch Step: 100 / 730 Loss: 1.928288459777832 Tokens per Sec: 19965.32523842689
Epoch Step: 105 / 730 Loss: 11.607993125915527 Tokens per Sec: 18744.25517868297
Epoch Step: 110 / 730 Loss: 0.8363929986953735 Tokens per Sec: 18658.638210831712
Epoch Step: 115 / 730 Loss: 0.559349536895752 Tokens per Sec: 16094.434647262307
Epoch Step: 120 / 730 Loss: 16.707727432250977 Tokens per Sec: 17630.18774847169
Epoch Step: 125 / 730 Loss: 16.50348472595215 Tokens per Sec: 20564.20915474722
Epoch Step: 130 / 730 Loss: 0.6443076729774475 Tokens per Sec: 16904.08212831632
Epoch Step: 135 / 730 Loss: 0.22185677289962769 Tokens per Sec: 15646.483677167906
Epoch Step: 140 / 730 Loss: 0.9769994020462036 Tokens per Sec: 16000.530762676633
Epoch Step: 145 / 730 Loss: 1.9120384454727173 Tokens per Sec: 21349.77444770555
Epoch Step: 150 / 730 Loss: 2.3201816082000732 Tokens per Sec: 16808.96488252088
Epoch Step: 155 / 730 Loss: 0.34406232833862305 Tokens per Sec: 18195.538883375048
Epoch Step: 160 / 730 Loss: 1.5439695119857788 Tokens per Sec: 17279.79430942238
Epoch Step: 165 / 730 Loss: 1.301836371421814 Tokens per Sec: 18184.01140158195
Epoch Step: 170 / 730 Loss: 2.226071357727051 Tokens per Sec: 18891.52829163883
Epoch Step: 175 / 730 Loss: 2.330125570297241 Tokens per Sec: 15058.2329618439
Epoch Step: 180 / 730 Loss: 0.557567834854126 Tokens per Sec: 17900.69789655523
Epoch Step: 185 / 730 Loss: 2.529231548309326 Tokens per Sec: 17569.722359610252
Epoch Step: 190 / 730 Loss: 1.6016477346420288 Tokens per Sec: 18058.98159445794
Epoch Step: 195 / 730 Loss: 0.44974496960639954 Tokens per Sec: 18001.36601343909
Epoch Step: 200 / 730 Loss: 0.1589193195104599 Tokens per Sec: 18222.866720994225
Epoch Step: 205 / 730 Loss: 0.41491156816482544 Tokens per Sec: 19332.811466120103
Epoch Step: 210 / 730 Loss: 0.33606648445129395 Tokens per Sec: 15436.497814949644
Epoch Step: 215 / 730 Loss: 1.7840855121612549 Tokens per Sec: 19101.44918626331
Epoch Step: 220 / 730 Loss: 0.7290392518043518 Tokens per Sec: 17627.3218727515
Epoch Step: 225 / 730 Loss: 1.2836601734161377 Tokens per Sec: 20145.702832768835
Epoch Step: 230 / 730 Loss: 2.3557047843933105 Tokens per Sec: 14185.262497039432
Epoch Step: 235 / 730 Loss: 1.2724865674972534 Tokens per Sec: 15909.02960436509
Epoch Step: 240 / 730 Loss: 0.4599679410457611 Tokens per Sec: 17601.12284126173
Epoch Step: 245 / 730 Loss: 2.3404922485351562 Tokens per Sec: 20442.29983531852
Epoch Step: 250 / 730 Loss: 2.559286117553711 Tokens per Sec: 19679.265458551636
Epoch Step: 255 / 730 Loss: 0.6178072690963745 Tokens per Sec: 16649.72556202454
Epoch Step: 260 / 730 Loss: 2.1864521503448486 Tokens per Sec: 20143.09892821128
Epoch Step: 265 / 730 Loss: 1.90503990650177 Tokens per Sec: 17539.625179942257
Epoch Step: 270 / 730 Loss: 1.332462191581726 Tokens per Sec: 16631.3860841337
Epoch Step: 275 / 730 Loss: 0.9267374277114868 Tokens per Sec: 14630.172138499825
Epoch Step: 280 / 730 Loss: 0.866773247718811 Tokens per Sec: 15941.052640234908
Epoch Step: 285 / 730 Loss: 0.844308078289032 Tokens per Sec: 15768.847738058992
Epoch Step: 290 / 730 Loss: 1.8888922929763794 Tokens per Sec: 19890.4716761984
Epoch Step: 295 / 730 Loss: 1.1758052110671997 Tokens per Sec: 18032.268985975927
Epoch Step: 300 / 730 Loss: 0.2646246552467346 Tokens per Sec: 14461.522168378971
Epoch Step: 305 / 730 Loss: 1.056700348854065 Tokens per Sec: 16626.31392175187
Epoch Step: 310 / 730 Loss: 0.8437427878379822 Tokens per Sec: 17102.515933669318
Epoch Step: 315 / 730 Loss: 1.2398903369903564 Tokens per Sec: 17844.945976583636
Epoch Step: 320 / 730 Loss: 0.41867566108703613 Tokens per Sec: 19717.74515158519
Epoch Step: 325 / 730 Loss: 0.08929064869880676 Tokens per Sec: 15713.666058948804
Epoch Step: 330 / 730 Loss: 1.6986632347106934 Tokens per Sec: 17125.198519102058
Epoch Step: 335 / 730 Loss: 1.7414785623550415 Tokens per Sec: 17771.487652696684
Epoch Step: 340 / 730 Loss: 0.6063739061355591 Tokens per Sec: 21598.52014201428
Epoch Step: 345 / 730 Loss: 21.287080764770508 Tokens per Sec: 16420.531090081946
Epoch Step: 350 / 730 Loss: 0.7316533923149109 Tokens per Sec: 14951.55198185912
Epoch Step: 355 / 730 Loss: 0.6558179259300232 Tokens per Sec: 21001.79938631993
Epoch Step: 360 / 730 Loss: 0.24697495996952057 Tokens per Sec: 18822.70776631926
Epoch Step: 365 / 730 Loss: 0.3661203384399414 Tokens per Sec: 18295.051285296508
Epoch Step: 370 / 730 Loss: 22.64336585998535 Tokens per Sec: 18565.982872353463
Epoch Step: 375 / 730 Loss: 0.8877185583114624 Tokens per Sec: 18375.15730536931
Epoch Step: 380 / 730 Loss: 0.5995513200759888 Tokens per Sec: 17148.371469434293
Epoch Step: 385 / 730 Loss: 0.32286590337753296 Tokens per Sec: 18120.856712618064
Epoch Step: 390 / 730 Loss: 0.24926252663135529 Tokens per Sec: 16383.59615497517
Epoch Step: 395 / 730 Loss: 1.272188663482666 Tokens per Sec: 18094.745375304217
Epoch Step: 400 / 730 Loss: 1.5573304891586304 Tokens per Sec: 16610.864231253603
Epoch Step: 405 / 730 Loss: 0.14297214150428772 Tokens per Sec: 17553.524492094053
Epoch Step: 410 / 730 Loss: 0.9563760161399841 Tokens per Sec: 20528.309725886873
Epoch Step: 415 / 730 Loss: 1.060669183731079 Tokens per Sec: 16405.168712751878
Epoch Step: 420 / 730 Loss: 1.4213706254959106 Tokens per Sec: 17734.196056899844
Epoch Step: 425 / 730 Loss: 1.9908461570739746 Tokens per Sec: 17564.930789279682
Epoch Step: 430 / 730 Loss: 0.6035270094871521 Tokens per Sec: 17565.95895642753
Epoch Step: 435 / 730 Loss: 1.033197045326233 Tokens per Sec: 16924.250343636464
Epoch Step: 440 / 730 Loss: 1.4936825037002563 Tokens per Sec: 19868.248289709674
Epoch Step: 445 / 730 Loss: 0.41790324449539185 Tokens per Sec: 15777.489845473088
Epoch Step: 450 / 730 Loss: 0.8136478066444397 Tokens per Sec: 17939.17216560735
Epoch Step: 455 / 730 Loss: 0.4322524666786194 Tokens per Sec: 20188.13839996291
Epoch Step: 460 / 730 Loss: 0.1860664188861847 Tokens per Sec: 18854.034860515792
Epoch Step: 465 / 730 Loss: 1.29110848903656 Tokens per Sec: 14997.279632596597
Epoch Step: 470 / 730 Loss: 23.61459732055664 Tokens per Sec: 14239.214574009813
Epoch Step: 475 / 730 Loss: 1.7073020935058594 Tokens per Sec: 19383.623163520184
Epoch Step: 480 / 730 Loss: 18.431367874145508 Tokens per Sec: 19377.991664907542
Epoch Step: 485 / 730 Loss: 0.48286569118499756 Tokens per Sec: 20723.837868519495
Epoch Step: 490 / 730 Loss: 0.4033709168434143 Tokens per Sec: 14274.15105341328
Epoch Step: 495 / 730 Loss: 2.205709218978882 Tokens per Sec: 18502.883129255646
Epoch Step: 500 / 730 Loss: 3.114586591720581 Tokens per Sec: 17232.69401993397
Epoch Step: 505 / 730 Loss: 1.9882574081420898 Tokens per Sec: 18291.250632087424
Epoch Step: 510 / 730 Loss: 1.0258029699325562 Tokens per Sec: 21177.80134451984
Epoch Step: 515 / 730 Loss: 1.1160601377487183 Tokens per Sec: 20868.974476881136
Epoch Step: 520 / 730 Loss: 20.845123291015625 Tokens per Sec: 16966.973980610062
Epoch Step: 525 / 730 Loss: 0.885154664516449 Tokens per Sec: 20900.290126507505
Epoch Step: 530 / 730 Loss: 1.447352409362793 Tokens per Sec: 18733.459319692665
Epoch Step: 535 / 730 Loss: 1.1246929168701172 Tokens per Sec: 16901.70317352462
Epoch Step: 540 / 730 Loss: 0.2579267919063568 Tokens per Sec: 14973.884046851961
Epoch Step: 545 / 730 Loss: 1.0736558437347412 Tokens per Sec: 15124.38853413185
Epoch Step: 550 / 730 Loss: 0.44616779685020447 Tokens per Sec: 18489.837994564612
Epoch Step: 555 / 730 Loss: 0.2657495439052582 Tokens per Sec: 16339.230703525714
Epoch Step: 560 / 730 Loss: 1.1370840072631836 Tokens per Sec: 14948.89367420889
Epoch Step: 565 / 730 Loss: 2.6734838485717773 Tokens per Sec: 17671.226691522817
Epoch Step: 570 / 730 Loss: 1.0091898441314697 Tokens per Sec: 19265.694555966944
Epoch Step: 575 / 730 Loss: 28.42591094970703 Tokens per Sec: 18104.817302705836
Epoch Step: 580 / 730 Loss: 0.8544870018959045 Tokens per Sec: 19736.291927274422
Epoch Step: 585 / 730 Loss: 0.8283946514129639 Tokens per Sec: 12946.79578454596
Epoch Step: 590 / 730 Loss: 0.3112007677555084 Tokens per Sec: 16709.42102406819
Epoch Step: 595 / 730 Loss: 0.20153729617595673 Tokens per Sec: 15251.5294101377
Epoch Step: 600 / 730 Loss: 1.4094940423965454 Tokens per Sec: 17960.13938188401
Epoch Step: 605 / 730 Loss: 0.24912598729133606 Tokens per Sec: 18685.7713572647
Epoch Step: 610 / 730 Loss: 0.13887687027454376 Tokens per Sec: 12772.113072427219
Epoch Step: 615 / 730 Loss: 0.29826653003692627 Tokens per Sec: 17382.258383932047
Epoch Step: 620 / 730 Loss: 0.9882160425186157 Tokens per Sec: 14323.656998326745
Epoch Step: 625 / 730 Loss: 2.6507914066314697 Tokens per Sec: 17232.37175815539
Epoch Step: 630 / 730 Loss: 0.6982550621032715 Tokens per Sec: 14714.730302933367
Epoch Step: 635 / 730 Loss: 2.9682414531707764 Tokens per Sec: 17940.26113231406
Epoch Step: 640 / 730 Loss: 2.0076024532318115 Tokens per Sec: 17545.816110800435
Epoch Step: 645 / 730 Loss: 1.043557047843933 Tokens per Sec: 17911.867050201407
Epoch Step: 650 / 730 Loss: 1.142356514930725 Tokens per Sec: 18967.87628803162
Epoch Step: 655 / 730 Loss: 1.066159725189209 Tokens per Sec: 20349.895615262518
Epoch Step: 660 / 730 Loss: 24.44478988647461 Tokens per Sec: 17491.435416238055
Epoch Step: 665 / 730 Loss: 1.7833173274993896 Tokens per Sec: 17504.01881909651
Epoch Step: 670 / 730 Loss: 1.430181622505188 Tokens per Sec: 18573.268510853166
Epoch Step: 675 / 730 Loss: 0.6400948166847229 Tokens per Sec: 17799.29003472103
Epoch Step: 680 / 730 Loss: 16.425901412963867 Tokens per Sec: 17170.47641686434
Epoch Step: 685 / 730 Loss: 1.3007311820983887 Tokens per Sec: 17592.068493361105
Epoch Step: 690 / 730 Loss: 2.3818700313568115 Tokens per Sec: 18585.067297727364
Epoch Step: 695 / 730 Loss: 1.6990410089492798 Tokens per Sec: 16604.62725585436
Epoch Step: 700 / 730 Loss: 1.6358973979949951 Tokens per Sec: 17661.436597104173
Epoch Step: 705 / 730 Loss: 10.503209114074707 Tokens per Sec: 14233.257935450272
Epoch Step: 710 / 730 Loss: 1.5874850749969482 Tokens per Sec: 15528.660842090145
Epoch Step: 715 / 730 Loss: 1.611524224281311 Tokens per Sec: 14912.505060910864
Epoch Step: 720 / 730 Loss: 2.1595489978790283 Tokens per Sec: 14304.558372956537
Epoch Step: 725 / 730 Loss: 1.3569082021713257 Tokens per Sec: 15014.83793477623
Epoch Step: 730 / 730 Loss: 1.2662289142608643 Tokens per Sec: 16318.59076255734
Epoch ended with duration 0:01:20.083251
Train perplexity: 1.0812489179444835
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.lang.String < java.lang.String > > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.342676
Validation perplexity: 1.1963580837109475
Epoch 60 / 1000
Epoch Step: 5 / 730 Loss: 0.21499758958816528 Tokens per Sec: 16066.974011468687
Epoch Step: 10 / 730 Loss: 0.5282923579216003 Tokens per Sec: 17117.404018374054
Epoch Step: 15 / 730 Loss: 1.0566895008087158 Tokens per Sec: 20794.055849407414
Epoch Step: 20 / 730 Loss: 1.2357674837112427 Tokens per Sec: 17965.03498876133
Epoch Step: 25 / 730 Loss: 1.476012945175171 Tokens per Sec: 18447.40960024246
Epoch Step: 30 / 730 Loss: 0.9254709482192993 Tokens per Sec: 14167.183164920973
Epoch Step: 35 / 730 Loss: 2.1547770500183105 Tokens per Sec: 18343.204720076792
Epoch Step: 40 / 730 Loss: 0.9177912473678589 Tokens per Sec: 16985.000250894456
Epoch Step: 45 / 730 Loss: 1.1686536073684692 Tokens per Sec: 21170.512327368553
Epoch Step: 50 / 730 Loss: 2.1271021366119385 Tokens per Sec: 18066.398941417614
Epoch Step: 55 / 730 Loss: 0.7549926042556763 Tokens per Sec: 17358.798077653548
Epoch Step: 60 / 730 Loss: 1.2189817428588867 Tokens per Sec: 19563.09342802681
Epoch Step: 65 / 730 Loss: 1.896173119544983 Tokens per Sec: 15908.751193030042
Epoch Step: 70 / 730 Loss: 0.6951980590820312 Tokens per Sec: 19479.694273783953
Epoch Step: 75 / 730 Loss: 4.934386253356934 Tokens per Sec: 17039.324158926636
Epoch Step: 80 / 730 Loss: 9.85850715637207 Tokens per Sec: 14471.308737416437
Epoch Step: 85 / 730 Loss: 0.20275913178920746 Tokens per Sec: 18414.912114085415
Epoch Step: 90 / 730 Loss: 0.1346820443868637 Tokens per Sec: 15395.157980081067
Epoch Step: 95 / 730 Loss: 1.688891053199768 Tokens per Sec: 16409.420758139007
Epoch Step: 100 / 730 Loss: 0.5546245574951172 Tokens per Sec: 10709.32707215176
Epoch Step: 105 / 730 Loss: 0.9092174172401428 Tokens per Sec: 18775.94325348428
Epoch Step: 110 / 730 Loss: 0.46002495288848877 Tokens per Sec: 19755.807238071808
Epoch Step: 115 / 730 Loss: 1.8025314807891846 Tokens per Sec: 19441.63869744272
Epoch Step: 120 / 730 Loss: 0.7224531173706055 Tokens per Sec: 16789.02173482899
Epoch Step: 125 / 730 Loss: 0.32649901509284973 Tokens per Sec: 16390.316610583133
Epoch Step: 130 / 730 Loss: 2.4418857097625732 Tokens per Sec: 17030.75082775098
Epoch Step: 135 / 730 Loss: 0.23576109111309052 Tokens per Sec: 18966.353843325185
Epoch Step: 140 / 730 Loss: 1.1823217868804932 Tokens per Sec: 18599.44603959564
Epoch Step: 145 / 730 Loss: 1.8807429075241089 Tokens per Sec: 15764.27834186145
Epoch Step: 150 / 730 Loss: 12.561945915222168 Tokens per Sec: 19799.860124300547
Epoch Step: 155 / 730 Loss: 0.6316105723381042 Tokens per Sec: 15732.03221944732
Epoch Step: 160 / 730 Loss: 0.5846216678619385 Tokens per Sec: 16640.473744611394
Epoch Step: 165 / 730 Loss: 1.282383680343628 Tokens per Sec: 17051.841259522247
Epoch Step: 170 / 730 Loss: 5.921935558319092 Tokens per Sec: 17096.2772994971
Epoch Step: 175 / 730 Loss: 0.3363507390022278 Tokens per Sec: 16059.138825829654
Epoch Step: 180 / 730 Loss: 0.7668823003768921 Tokens per Sec: 15531.108797211791
Epoch Step: 185 / 730 Loss: 0.2770951986312866 Tokens per Sec: 15176.353248471081
Epoch Step: 190 / 730 Loss: 0.7314074635505676 Tokens per Sec: 19047.517300976004
Epoch Step: 195 / 730 Loss: 0.6012697815895081 Tokens per Sec: 18214.817382080677
Epoch Step: 200 / 730 Loss: 0.6948291659355164 Tokens per Sec: 17484.771341428
Epoch Step: 205 / 730 Loss: 0.3039337396621704 Tokens per Sec: 15828.761474803046
Epoch Step: 210 / 730 Loss: 1.9718753099441528 Tokens per Sec: 18928.125690851113
Epoch Step: 215 / 730 Loss: 1.1390445232391357 Tokens per Sec: 18033.723981517785
Epoch Step: 220 / 730 Loss: 1.0482122898101807 Tokens per Sec: 15030.531193542663
Epoch Step: 225 / 730 Loss: 0.6204460859298706 Tokens per Sec: 19403.64996419547
Epoch Step: 230 / 730 Loss: 0.6160613298416138 Tokens per Sec: 18475.450820552487
Epoch Step: 235 / 730 Loss: 0.46230366826057434 Tokens per Sec: 16790.52568945874
Epoch Step: 240 / 730 Loss: 1.1295243501663208 Tokens per Sec: 17771.184255054184
Epoch Step: 245 / 730 Loss: 2.311046600341797 Tokens per Sec: 16889.07284121747
Epoch Step: 250 / 730 Loss: 4.144173622131348 Tokens per Sec: 17733.357520832404
Epoch Step: 255 / 730 Loss: 0.6134158372879028 Tokens per Sec: 17322.547669155563
Epoch Step: 260 / 730 Loss: 0.129619762301445 Tokens per Sec: 15923.075026781018
Epoch Step: 265 / 730 Loss: 1.0117509365081787 Tokens per Sec: 21142.908367344593
Epoch Step: 270 / 730 Loss: 0.7705264091491699 Tokens per Sec: 19550.80735764856
Epoch Step: 275 / 730 Loss: 1.4941201210021973 Tokens per Sec: 13777.30530491461
Epoch Step: 280 / 730 Loss: 0.4551445245742798 Tokens per Sec: 17171.36373136318
Epoch Step: 285 / 730 Loss: 0.26041173934936523 Tokens per Sec: 19482.06467523294
Epoch Step: 290 / 730 Loss: 0.2687590718269348 Tokens per Sec: 18997.131924476398
Epoch Step: 295 / 730 Loss: 2.5529515743255615 Tokens per Sec: 17924.634540218143
Epoch Step: 300 / 730 Loss: 0.3260456919670105 Tokens per Sec: 17397.332047627107
Epoch Step: 305 / 730 Loss: 1.9690685272216797 Tokens per Sec: 15446.781328395558
Epoch Step: 310 / 730 Loss: 0.20770496129989624 Tokens per Sec: 14543.882631675244
Epoch Step: 315 / 730 Loss: 0.7947795391082764 Tokens per Sec: 18530.79291161118
Epoch Step: 320 / 730 Loss: 12.502554893493652 Tokens per Sec: 18222.7551913333
Epoch Step: 325 / 730 Loss: 0.25164180994033813 Tokens per Sec: 19215.588346976896
Epoch Step: 330 / 730 Loss: 1.7065200805664062 Tokens per Sec: 16700.06180797871
Epoch Step: 335 / 730 Loss: 1.1495407819747925 Tokens per Sec: 17705.7692709478
Epoch Step: 340 / 730 Loss: 0.38463255763053894 Tokens per Sec: 18089.284035737885
Epoch Step: 345 / 730 Loss: 0.5693897008895874 Tokens per Sec: 17111.860485907833
Epoch Step: 350 / 730 Loss: 1.2429152727127075 Tokens per Sec: 17327.29485972553
Epoch Step: 355 / 730 Loss: 0.532861590385437 Tokens per Sec: 17000.54752638328
Epoch Step: 360 / 730 Loss: 2.3955085277557373 Tokens per Sec: 15913.680289251672
Epoch Step: 365 / 730 Loss: 10.086341857910156 Tokens per Sec: 20029.141389440556
Epoch Step: 370 / 730 Loss: 1.425049901008606 Tokens per Sec: 16502.935524737077
Epoch Step: 375 / 730 Loss: 0.5569032430648804 Tokens per Sec: 13859.34055322303
Epoch Step: 380 / 730 Loss: 0.9318044185638428 Tokens per Sec: 16069.595895442057
Epoch Step: 385 / 730 Loss: 1.3501325845718384 Tokens per Sec: 20335.25172384784
Epoch Step: 390 / 730 Loss: 2.0977563858032227 Tokens per Sec: 19179.864384501347
Epoch Step: 395 / 730 Loss: 0.5011710524559021 Tokens per Sec: 19753.228206850235
Epoch Step: 400 / 730 Loss: 1.4984618425369263 Tokens per Sec: 16111.145881858512
Epoch Step: 405 / 730 Loss: 24.223058700561523 Tokens per Sec: 16633.509029004028
Epoch Step: 410 / 730 Loss: 1.2565428018569946 Tokens per Sec: 18326.786580893942
Epoch Step: 415 / 730 Loss: 1.5799005031585693 Tokens per Sec: 13991.702669895922
Epoch Step: 420 / 730 Loss: 1.8993206024169922 Tokens per Sec: 21049.65927309518
Epoch Step: 425 / 730 Loss: 0.3270221948623657 Tokens per Sec: 16730.13729900022
Epoch Step: 430 / 730 Loss: 1.9723920822143555 Tokens per Sec: 19208.12687958168
Epoch Step: 435 / 730 Loss: 3.455185651779175 Tokens per Sec: 18082.84647270616
Epoch Step: 440 / 730 Loss: 1.0110440254211426 Tokens per Sec: 18506.11677851106
Epoch Step: 445 / 730 Loss: 0.891694188117981 Tokens per Sec: 13741.50690778176
Epoch Step: 450 / 730 Loss: 0.646194577217102 Tokens per Sec: 15042.735535872249
Epoch Step: 455 / 730 Loss: 2.021688938140869 Tokens per Sec: 21704.527578174308
Epoch Step: 460 / 730 Loss: 0.5184932947158813 Tokens per Sec: 15648.096584498184
Epoch Step: 465 / 730 Loss: 0.9508073329925537 Tokens per Sec: 14679.24695967253
Epoch Step: 470 / 730 Loss: 0.2908360958099365 Tokens per Sec: 17388.167529072027
Epoch Step: 475 / 730 Loss: 0.40284091234207153 Tokens per Sec: 18227.685628224004
Epoch Step: 480 / 730 Loss: 1.138627529144287 Tokens per Sec: 20792.898129922785
Epoch Step: 485 / 730 Loss: 1.8665190935134888 Tokens per Sec: 17344.81636631678
Epoch Step: 490 / 730 Loss: 14.93985366821289 Tokens per Sec: 18006.49257157622
Epoch Step: 495 / 730 Loss: 0.6325588226318359 Tokens per Sec: 17455.18184483048
Epoch Step: 500 / 730 Loss: 1.2820003032684326 Tokens per Sec: 16210.269659857619
Epoch Step: 505 / 730 Loss: 0.9271811842918396 Tokens per Sec: 16136.043924884625
Epoch Step: 510 / 730 Loss: 1.608264446258545 Tokens per Sec: 21022.120326744676
Epoch Step: 515 / 730 Loss: 0.8962299227714539 Tokens per Sec: 18652.489213895737
Epoch Step: 520 / 730 Loss: 1.3192449808120728 Tokens per Sec: 16399.310266977696
Epoch Step: 525 / 730 Loss: 3.182983160018921 Tokens per Sec: 19663.976469960664
Epoch Step: 530 / 730 Loss: 0.2556955814361572 Tokens per Sec: 18110.629334173293
Epoch Step: 535 / 730 Loss: 2.0227556228637695 Tokens per Sec: 17010.4425083125
Epoch Step: 540 / 730 Loss: 0.6879338026046753 Tokens per Sec: 14415.812490284141
Epoch Step: 545 / 730 Loss: 1.8498954772949219 Tokens per Sec: 17605.1104890079
Epoch Step: 550 / 730 Loss: 1.231007695198059 Tokens per Sec: 16496.701805921097
Epoch Step: 555 / 730 Loss: 1.461674690246582 Tokens per Sec: 15529.148867997115
Epoch Step: 560 / 730 Loss: 0.4076572060585022 Tokens per Sec: 18913.753609428153
Epoch Step: 565 / 730 Loss: 1.5302479267120361 Tokens per Sec: 18788.16368665772
Epoch Step: 570 / 730 Loss: 2.0823092460632324 Tokens per Sec: 21177.767120532502
Epoch Step: 575 / 730 Loss: 0.4996697008609772 Tokens per Sec: 17967.368604806437
Epoch Step: 580 / 730 Loss: 0.3699750602245331 Tokens per Sec: 14623.47005432376
Epoch Step: 585 / 730 Loss: 0.8965275287628174 Tokens per Sec: 17705.3486256203
Epoch Step: 590 / 730 Loss: 2.1691153049468994 Tokens per Sec: 16034.224402557606
Epoch Step: 595 / 730 Loss: 1.6740458011627197 Tokens per Sec: 19506.86173607409
Epoch Step: 600 / 730 Loss: 0.21607597172260284 Tokens per Sec: 18914.772441290563
Epoch Step: 605 / 730 Loss: 0.5898652076721191 Tokens per Sec: 15087.243825834319
Epoch Step: 610 / 730 Loss: 2.383584976196289 Tokens per Sec: 17803.71963271939
Epoch Step: 615 / 730 Loss: 0.31326955556869507 Tokens per Sec: 12973.307801262255
Epoch Step: 620 / 730 Loss: 12.262008666992188 Tokens per Sec: 19979.68048106273
Epoch Step: 625 / 730 Loss: 1.5381333827972412 Tokens per Sec: 17769.230958011518
Epoch Step: 630 / 730 Loss: 1.213599443435669 Tokens per Sec: 17408.5549592687
Epoch Step: 635 / 730 Loss: 2.8185348510742188 Tokens per Sec: 19306.61387329324
Epoch Step: 640 / 730 Loss: 2.748814105987549 Tokens per Sec: 17104.92537537302
Epoch Step: 645 / 730 Loss: 0.9399168491363525 Tokens per Sec: 18506.20205070922
Epoch Step: 650 / 730 Loss: 0.42678606510162354 Tokens per Sec: 20750.932011376455
Epoch Step: 655 / 730 Loss: 0.3419058322906494 Tokens per Sec: 16665.293021915193
Epoch Step: 660 / 730 Loss: 0.43779945373535156 Tokens per Sec: 15605.424544267356
Epoch Step: 665 / 730 Loss: 2.6257407665252686 Tokens per Sec: 12907.689947224933
Epoch Step: 670 / 730 Loss: 0.4493038058280945 Tokens per Sec: 19889.637673379853
Epoch Step: 675 / 730 Loss: 0.4040791392326355 Tokens per Sec: 19261.060768064992
Epoch Step: 680 / 730 Loss: 0.7283254861831665 Tokens per Sec: 18939.911653796404
Epoch Step: 685 / 730 Loss: 0.4855360984802246 Tokens per Sec: 18514.226841462423
Epoch Step: 690 / 730 Loss: 0.2974018454551697 Tokens per Sec: 16331.075127012637
Epoch Step: 695 / 730 Loss: 7.136504650115967 Tokens per Sec: 17365.84790527079
Epoch Step: 700 / 730 Loss: 0.17945745587348938 Tokens per Sec: 18662.036201892268
Epoch Step: 705 / 730 Loss: 1.0477181673049927 Tokens per Sec: 13488.168710323465
Epoch Step: 710 / 730 Loss: 0.6701310873031616 Tokens per Sec: 15732.81391261333
Epoch Step: 715 / 730 Loss: 1.5839996337890625 Tokens per Sec: 16811.316235550486
Epoch Step: 720 / 730 Loss: 2.1694228649139404 Tokens per Sec: 16203.163621068707
Epoch Step: 725 / 730 Loss: 0.4760427176952362 Tokens per Sec: 13145.843278809894
Epoch Step: 730 / 730 Loss: 1.1948668956756592 Tokens per Sec: 15571.05240767169
Epoch ended with duration 0:01:20.537633
Train perplexity: 1.0809232470793595
Example #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_2 : VAR_3 ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_1 ( ) ) ; } return VAR_1 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { return VAR_1 ; }[0m
Example #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > parameters ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , parameters ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , java.lang.String VAR_2 , java.util.Map < java.lang.String > , java.lang.String > VAR_2 ) { return METHOD_1 ( VAR_1 . toString ( ) , VAR_2 , message ) ; }[0m
Example #3[0m
Src : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Trg : public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Pred: public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . init ( STRING_1 ) ; }[0m
Epoch ended with duration 0:00:03.291184
Validation perplexity: 1.2352350417003792
Model saved checkpoint!
Training was early stopped on epoch 61 with early stopping rounds 25
[13.746622883703223, 5.728484178616122, 3.90722026819466, 3.1428579849662155, 2.588957720952794, 2.232913470891447, 1.9962839225604208, 1.925957556137678, 1.781759780578116, 1.7406729959425098, 1.562306825451958, 1.5734413526207172, 1.4819162147199094, 1.4756001051705954, 1.481731038533221, 1.4360897777849062, 1.3973498520682441, 1.3866405012528773, 1.3694801076707948, 1.3286227713681436, 1.351923890575441, 1.2717631958217295, 1.2733174420711855, 1.3203186841951842, 1.276549213621485, 1.272929806790174, 1.2320321947977309, 1.225122602982727, 1.2506482612851983, 1.2235187744390168, 1.2152113780168556, 1.1806058571177254, 1.188446852554345, 1.1707871369911513, 1.1803078777992475, 1.189619268973933, 1.1858819103120344, 1.1661705923541923, 1.1522199561470352, 1.1457015313746468, 1.1321427642428834, 1.1534952933778906, 1.1389933786766593, 1.1223218836018911, 1.1334359221783223, 1.1156915961618938, 1.1231144619372257, 1.1115176569992178, 1.0883295649780549, 1.1207695346539497, 1.095835035616719, 1.1003491756869939, 1.0998377243031803, 1.0991367131756808, 1.094934896129458, 1.0878162991892897, 1.0894888970517824, 1.0801557127983494, 1.0803844914761644, 1.0812489179444835, 1.0809232470793595]
[6.7226331144810825, 4.304788938727805, 3.043149857354015, 2.7340282956567874, 2.0677406119976918, 2.065619505790046, 1.6382389231981962, 1.8611044897360396, 1.6725802311626972, 1.5100249468993547, 1.539437253689586, 1.4453722287931257, 1.5398171609140128, 1.3863330153459728, 1.3464093663737424, 1.420587043552548, 1.362032462521172, 1.3473087732203637, 1.3696235609714662, 1.3445421159394946, 1.354817775267696, 1.3504997726550207, 1.2847937287522553, 1.2523341759085527, 1.4108668029040874, 1.279746859930183, 1.3584776428910017, 1.2956748756851664, 1.2872176124691792, 1.3005808672174664, 1.2204041906500787, 1.2015994913046404, 1.226986236471531, 1.2138324784124903, 1.1685857504334431, 1.1593577369841424, 1.212796594548598, 1.2640740437105895, 1.177533915496252, 1.2727145472546688, 1.2342145796597772, 1.2568326992170837, 1.2915727143046107, 1.213448318203703, 1.241080042890869, 1.2012150765249172, 1.162093529659622, 1.2056510502283653, 1.296447644891412, 1.2278494731579477, 1.2213900564827962, 1.2176427177675753, 1.2061949149195974, 1.2164235894267956, 1.2374541835662034, 1.2734159136342067, 1.2158217948094114, 1.198275499244811, 1.2013628973080022, 1.1963580837109475, 1.2352350417003792]
Model saved checkpoint!

====STARTING EVALUATION====
Data set sizes (number of sentence pairs):
train 46680
valid 5835
test 5835 

First training example:
src: public java.lang.String METHOD_1 ( ) { return new TYPE_1 ( STRING_1 ) . format ( VAR_1 [ ( ( VAR_1 . length ) - 1 ) ] . getTime ( ) ) ; }
trg: public java.lang.String METHOD_1 ( ) { return new TYPE_1 ( STRING_1 ) . format ( VAR_1 [ ( ( type ) - 1 ) ] . getTime ( ) ) ; }
diff_alignment: удаление удаление замена
diff_prev: VAR_1 . length
diff_updated: паддинг паддинг type 

Most common words:
         (     430398
         )     430228
   паддинг     303839
  удаление     217186
         ;     212760
         .     170394
     VAR_1     168782
         {     129358
         }     129328
  METHOD_1     107650 

First 10 words:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 паддинг
07 удаление
08 ;
09 . 

Special words frequency and ids: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 33822 25
удаление 217186 7
добавление 86653 16
равенство 0 0
паддинг 303839 6
Number of words (types): 437
Start conducting accuracy calculation experiment for Tufano Labeled 0 50 Code Changes...
BUG FIXING ACCURACY
Top-1 accuracy: 16 / 388 = 0.041237113402061855
Top-3 accuracy: 23 / 388 = 0.059278350515463915
Top-5 accuracy: 23 / 388 = 0.059278350515463915
Top-10 accuracy: 26 / 388 = 0.06701030927835051
Top-50 accuracy: 29 / 388 = 0.07474226804123711
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 129 / 388 = 0.3324742268041237
Top-3 accuracy: 141 / 388 = 0.3634020618556701
Top-5 accuracy: 142 / 388 = 0.36597938144329895
Top-10 accuracy: 148 / 388 = 0.38144329896907214
Top-50 accuracy: 154 / 388 = 0.39690721649484534
Duration: 0:05:24.982886

Start conducting accuracy calculation experiment for Tufano Labeled 50 100 Code Changes...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 244 = 0.0
Top-3 accuracy: 0 / 244 = 0.0
Top-5 accuracy: 0 / 244 = 0.0
Top-10 accuracy: 1 / 244 = 0.004098360655737705
Top-50 accuracy: 1 / 244 = 0.004098360655737705
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 4 / 244 = 0.01639344262295082
Top-3 accuracy: 6 / 244 = 0.02459016393442623
Top-5 accuracy: 6 / 244 = 0.02459016393442623
Top-10 accuracy: 6 / 244 = 0.02459016393442623
Top-50 accuracy: 7 / 244 = 0.028688524590163935
Duration: 0:02:44.309385

Start conducting accuracy calculation experiment for Defects4J...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 20 = 0.0
Top-3 accuracy: 0 / 20 = 0.0
Top-5 accuracy: 0 / 20 = 0.0
Top-10 accuracy: 0 / 20 = 0.0
Top-50 accuracy: 0 / 20 = 0.0
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 0 / 20 = 0.0
Top-3 accuracy: 0 / 20 = 0.0
Top-5 accuracy: 0 / 20 = 0.0
Top-10 accuracy: 0 / 20 = 0.0
Top-50 accuracy: 0 / 20 = 0.0
Duration: 0:00:19.564552

Start conducting accuracy calculation experiment for Test dataset 300...
BUG FIXING ACCURACY
Top-1 accuracy: 24 / 300 = 0.08
Top-3 accuracy: 31 / 300 = 0.10333333333333333
Top-5 accuracy: 32 / 300 = 0.10666666666666667
Top-10 accuracy: 32 / 300 = 0.10666666666666667
Top-50 accuracy: 35 / 300 = 0.11666666666666667
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 187 / 300 = 0.6233333333333333
Top-3 accuracy: 215 / 300 = 0.7166666666666667
Top-5 accuracy: 222 / 300 = 0.74
Top-10 accuracy: 224 / 300 = 0.7466666666666667
Top-50 accuracy: 238 / 300 = 0.7933333333333333
Duration: 0:04:07.686394

Start conducting accuracy calculation experiment for Validation dataset 300...
BUG FIXING ACCURACY
Top-1 accuracy: 29 / 300 = 0.09666666666666666
Top-3 accuracy: 33 / 300 = 0.11
Top-5 accuracy: 33 / 300 = 0.11
Top-10 accuracy: 34 / 300 = 0.11333333333333333
Top-50 accuracy: 41 / 300 = 0.13666666666666666
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 192 / 300 = 0.64
Top-3 accuracy: 228 / 300 = 0.76
Top-5 accuracy: 237 / 300 = 0.79
Top-10 accuracy: 246 / 300 = 0.82
Top-50 accuracy: 257 / 300 = 0.8566666666666667
Duration: 0:04:10.613413

Start conducting accuracy calculation experiment for Train dataset 300...
BUG FIXING ACCURACY
Top-1 accuracy: 222 / 300 = 0.74
Top-3 accuracy: 259 / 300 = 0.8633333333333333
Top-5 accuracy: 266 / 300 = 0.8866666666666667
Top-10 accuracy: 273 / 300 = 0.91
Top-50 accuracy: 280 / 300 = 0.9333333333333333
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 222 / 300 = 0.74
Top-3 accuracy: 259 / 300 = 0.8633333333333333
Top-5 accuracy: 266 / 300 = 0.8866666666666667
Top-10 accuracy: 273 / 300 = 0.91
Top-50 accuracy: 280 / 300 = 0.9333333333333333
Duration: 0:04:09.179955

Start conducting one shot learning experiment for Tufano Labeled 0 50 Code Changes...
Top-1 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 24 / 64 = 0.375
Top-3 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 27 / 64 = 0.421875
Top-5 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 27 / 64 = 0.421875
Top-10 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 28 / 64 = 0.4375
Top-50 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 30 / 64 = 0.46875

Top-1 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 27 / 324 = 0.08333333333333333
Top-3 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 40 / 324 = 0.12345679012345678
Top-5 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 42 / 324 = 0.12962962962962962
Top-10 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 47 / 324 = 0.14506172839506173
Top-50 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 52 / 324 = 0.16049382716049382
================
Correct Examples
Class: Abstract an existing method using the abstract keyword
Golden example (False):
[31mExample #1[0m
Src : void METHOD_1 ( int index , short value ) { throw new TYPE_1 ( ) ; }[0m
Trg : abstract void METHOD_1 ( int index , short value ) ;[0m
Pred: protected void METHOD_1 ( int index , short value ) ;[0m
+++++++++++++++
[32mExample #1[0m
Src : public java.lang.String METHOD_1 ( ) { throw new TYPE_1 ( ) ; }[0m
Trg : public abstract java.lang.String METHOD_1 ( ) ;[0m
Pred: public abstract java.lang.String METHOD_1 ( ) ;[0m
[32mExample #2[0m
Src : public java.lang.String METHOD_1 ( java.lang.String url ) { throw new TYPE_1 ( ) ; }[0m
Trg : public abstract java.lang.String METHOD_1 ( java.lang.String url ) ;[0m
Pred: public abstract java.lang.String METHOD_1 ( java.lang.String url ) ;[0m
---------------
Class: Add/Remove parameter
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( int VAR_1 , int type , int arg , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( <unk> , type , arg ) ; }[0m
Trg : protected void METHOD_1 ( int type , int arg , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( <unk> , type , arg ) ; }[0m
Pred: protected void METHOD_1 ( int type , int type , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( false , type , arg ) ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) ;[0m
Trg : void METHOD_1 ( int type , int VAR_2 ) ;[0m
Pred: void METHOD_1 ( int type , int VAR_2 ) ;[0m
[32mExample #2[0m
Src : void METHOD_1 ( boolean VAR_1 ) ;[0m
Trg : void METHOD_1 ( ) ;[0m
Pred: void METHOD_1 ( ) ;[0m
---------------
Class: Add/Remove this qualifier
Golden example (True):
[32mExample #1[0m
Src : public void METHOD_1 ( java.lang.Boolean value ) { this . VAR_1 = value ; }[0m
Trg : public void METHOD_1 ( java.lang.Boolean value ) { VAR_1 = value ; }[0m
Pred: public void METHOD_1 ( java.lang.Boolean value ) { VAR_1 = value ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; }[0m
Trg : public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; }[0m
Pred: public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; }[0m
[32mExample #2[0m
Src : public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return this . VAR_1 ; }[0m
Trg : public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return VAR_1 ; }[0m
---------------
Class: Change method invocation as result of a move method
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( ) { TYPE_1 . <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) . VAR_2 ( VAR_2 ) ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true , false , null , true ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( true , false , null , true ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( true , false , null , true ) ; }[0m
---------------
Class: Change method return value
Golden example (True):
[32mExample #1[0m
Src : public TYPE_1 METHOD_1 ( ) { return false ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return true ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return true ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : public boolean METHOD_1 ( ) { return false ; }[0m
Trg : public boolean METHOD_1 ( ) { return true ; }[0m
Pred: public boolean METHOD_1 ( ) { return true ; }[0m
---------------
Class: Change parameter type
Golden example (False):
[31mExample #1[0m
Src : synchronized long METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
Trg : synchronized long METHOD_1 ( long [ ] VAR_1 , long [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
Pred: synchronized long METHOD_1 ( long [ ] VAR_1 , long [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( true , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : static java.lang.String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return STRING_1 ; } return VAR_4 . toString ( ) ; }[0m
Trg : static java.lang.String METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return STRING_1 ; } return VAR_4 . toString ( ) ; }[0m
Pred: static java.lang.String METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return STRING_1 ; } return VAR_4 . toString ( ) ; }[0m
[32mExample #2[0m
Src : static boolean METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; }[0m
Trg : static boolean METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; }[0m
Pred: static boolean METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; }[0m
[32mExample #3[0m
Src : public static native byte [ ] METHOD_1 ( int VAR_1 ) ;[0m
Trg : public static native byte [ ] METHOD_1 ( long VAR_1 ) ;[0m
Pred: public static native byte [ ] METHOD_1 ( long VAR_1 ) ;[0m
[32mExample #4[0m
Src : native void METHOD_1 ( int VAR_1 , int VAR_2 ) ;[0m
Trg : native void METHOD_1 ( long VAR_1 , long VAR_2 ) ;[0m
Pred: native void METHOD_1 ( long VAR_1 , long VAR_2 ) ;[0m
[32mExample #5[0m
Src : final void METHOD_1 ( int VAR_1 ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } }[0m
Trg : final void METHOD_1 ( long VAR_1 ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } }[0m
Pred: final void METHOD_1 ( long VAR_1 ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } }[0m
[32mExample #6[0m
Src : public static native void METHOD_1 ( int VAR_1 ) throws TYPE_1 ;[0m
Trg : public static native void METHOD_1 ( long VAR_1 ) throws TYPE_1 ;[0m
Pred: public static native void METHOD_1 ( long VAR_1 ) throws TYPE_1 ;[0m
[32mExample #7[0m
Src : native void METHOD_1 ( int VAR_1 , int id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , TYPE_1 b ) ;[0m
Trg : native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , TYPE_1 b ) ;[0m
Pred: native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , TYPE_1 b ) ;[0m
---------------
Class: Narrow method visibility
Golden example (True):
[32mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { return null ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return null ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return null ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : protected synchronized void METHOD_1 ( ) { }[0m
Trg : public synchronized void METHOD_1 ( ) { }[0m
Pred: public synchronized void METHOD_1 ( ) { }[0m
---------------
Class: Remove invoked method
Golden example (False):
[31mExample #1[0m
Src : void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( a , a . length , this . VAR_1 ) ) ; }[0m
Trg : void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( a , a . length , this . VAR_1 ) ; }[0m
Pred: void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_1 . METHOD_4 ( a , a , this . VAR_1 ) ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_3 ( ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_3 ( ) ; }[0m
[32mExample #2[0m
Src : public void METHOD_1 ( TYPE_1 value ) { status = value . getValue ( ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { status = value ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { status = value ; }[0m
---------------
Class: Remove parameter from the method invocation
Golden example (True):
[32mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , <unk> ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }[0m
[32mExample #2[0m
Src : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 ) ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 ) ; }[0m
---------------
Class: Remove statement
Golden example (True):
[32mExample #1[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { }[0m
Pred: public void METHOD_1 ( ) { }[0m
+++++++++++++++
[32mExample #1[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . assertEquals ( ( STRING_2 + ( value ) ) , value . METHOD_3 ( ) , value . getValue ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . assertEquals ( ( STRING_2 + ( value ) ) , value . METHOD_3 ( ) , value . getValue ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . assertEquals ( ( STRING_2 + ( value ) ) , value . METHOD_3 ( ) , value . getValue ( ) ) ; }[0m
[32mExample #2[0m
Src : protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; }[0m
Trg : protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
Pred: protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
[32mExample #3[0m
Src : void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; }[0m
Trg : void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; }[0m
Pred: void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; }[0m
[32mExample #4[0m
Src : private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; }[0m
Trg : private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; }[0m
Pred: private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; }[0m
[32mExample #5[0m
Src : public void METHOD_1 ( ) { <unk> ( STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( ) { }[0m
Pred: public void METHOD_1 ( ) { }[0m
[32mExample #6[0m
Src : public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; }[0m
[32mExample #7[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) ; super . METHOD_1 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) ; }[0m
---------------
================
================
Incorrect Examples
Class: Abstract an existing method using the abstract keyword
Golden example (False):
[31mExample #1[0m
Src : void METHOD_1 ( int index , short value ) { throw new TYPE_1 ( ) ; }[0m
Trg : abstract void METHOD_1 ( int index , short value ) ;[0m
Pred: protected void METHOD_1 ( int index , short value ) ;[0m
+++++++++++++++
[31mExample #1[0m
Src : public synchronized boolean METHOD_1 ( ) { throw new TYPE_1 ( ) ; }[0m
Trg : public abstract boolean METHOD_1 ( ) ;[0m
Pred: public abstract synchronized boolean METHOD_1 ( ) ;[0m
[31mExample #2[0m
Src : float METHOD_1 ( int index ) { throw new TYPE_1 ( ) ; }[0m
Trg : abstract float METHOD_1 ( int index ) ;[0m
Pred: protected abstract METHOD_1 ( int index ) ;[0m
[31mExample #3[0m
Src : public void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) { throw new TYPE_3 ( ) ; }[0m
Trg : public abstract void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) ;[0m
Pred: public abstract void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) ;[0m
---------------
Class: Add invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; } catch ( <unk> <unk> ) { } }[0m
Trg : public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; fail ( ) ; } catch ( <unk> <unk> ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; java.lang.System.out.println ( ) ; } catch ( ! ( ) ) { } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public <unk> . <unk> METHOD_1 ( ) { return new <unk> ( <unk> . <unk> ) ; }[0m
Trg : public <unk> . <unk> METHOD_1 ( ) { return new <unk> ( <unk> . get ( ) . <unk> ) ; }[0m
Pred: public java.lang.Boolean init ( ) { return new java.util.HashMap ( ) ; return new java.lang.Thread ( true ) ; }[0m
[31mExample #2[0m
Src : final void METHOD_1 ( int offset , int value ) { VAR_1 . METHOD_2 ( ( offset + ( <unk> ) ) , value ) ; }[0m
Trg : final void METHOD_1 ( int offset , int value ) { VAR_1 . METHOD_1 ( ( offset + ( <unk> ) ) , value ) ; }[0m
Pred: final void METHOD_1 ( int offset , int value ) { java.util.Collections.sort ( ) ; VAR_1 . METHOD_2 ( ( offset + ( ) ) , value ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . name = STRING_1 ; VAR_1 = STRING_2 ; METHOD_2 ( <unk> , VAR_2 class ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . name = name ( STRING_1 ) ; VAR_1 = STRING_2 ; METHOD_2 ( <unk> , VAR_2 class ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 ( new TYPE_1 ( ) ) ; TYPE_1 . name = STRING_1 ; VAR_1 = STRING_2 ; METHOD_2 ( ) ; METHOD_2 ( false , VAR_2 class ) ; }[0m
[31mExample #4[0m
Src : static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 <unk> ) { TYPE_1 <unk> = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) ; return <unk> ; }[0m
Trg : static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 <unk> ) { TYPE_1 <unk> = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ; return <unk> ; }[0m
Pred: static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 ) { TYPE_1 TYPE_1 = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) ; return ; }[0m
[31mExample #5[0m
Src : private TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . <unk> ( ( ( java.lang.String ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) ; } catch ( java.lang.Exception <unk> ) { return VAR_2 ; } }[0m
Trg : private TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . <unk> ( ( ( java.lang.String ) ( TYPE_2 . <unk> ( ) . METHOD_2 ( VAR_1 ) ) ) ) ; } catch ( java.lang.Exception <unk> ) { return VAR_2 ; } }[0m
Pred: private TYPE_1 METHOD_1 ( ) { try { throw new TYPE_1 ( ) ; if ( TYPE_1 . ( ( ( java.lang.String ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) ) ; } catch ( java.lang.Exception ) { return VAR_2 ; } }[0m
---------------
Class: Add null check
Golden example (True):
[32mExample #1[0m
Src : public void METHOD_1 ( final java.lang.String name ) { if ( ( name != null ) && ( ! ( name . isEmpty ( ) ) ) ) { this . name = name ; } }[0m
Trg : public void METHOD_1 ( final java.lang.String name ) { this . name = name ; }[0m
Pred: public void METHOD_1 ( final java.lang.String name ) { this . name = name ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( ) { VAR_1 . METHOD_1 ( this , status ) ; }[0m
Trg : public void <unk> ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( this , status ) ; } }[0m
Pred: public void init ( ) { }[0m
[31mExample #2[0m
Src : void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) { VAR_1 . METHOD_2 ( <unk> . getValue ( ) ) ; view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; }[0m
Trg : void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) { VAR_1 . METHOD_2 ( <unk> . getValue ( ) ) ; if ( ( view ) != null ) { view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; } }[0m
Pred: void METHOD_1 ( TYPE_1 < TYPE_2 > ) { VAR_1 . METHOD_2 ( ) . METHOD_2 ( ) ; }[0m
[31mExample #3[0m
Src : void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; }[0m
Trg : void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } }[0m
Pred: void METHOD_1 ( TYPE_1 VAR_1 ) ; }[0m
[31mExample #4[0m
Src : public int [ ] METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public int [ ] METHOD_1 ( ) { return ( VAR_1 ) == null ? null : VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public int [ ] METHOD_1 ( ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { VAR_1 . <unk> ( ) ; }[0m
Trg : public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . <unk> ( ) ; } }[0m
Pred: public void METHOD_1 ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_1 ( ) ; } VAR_2 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { }[0m
---------------
Class: Add parameter in the method/constructor invocation
Golden example (False):
[31mExample #1[0m
Src : public void <unk> ( TYPE_1 result ) { TYPE_2 . <unk> ( TYPE_3 . METHOD_1 ( VAR_1 . <unk> ( ) ) ) ; }[0m
Trg : public void <unk> ( TYPE_1 result ) { TYPE_2 . <unk> ( TYPE_3 . METHOD_1 ( <unk> , VAR_1 . <unk> ( ) ) ) ; }[0m
Pred: public void init ( TYPE_1 result ) { TYPE_2 . context ( TYPE_3 . METHOD_1 ( VAR_1 . VAR_1 . ( ) ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , <unk> <unk> ) { TYPE_1 params = new TYPE_1 ( VAR_1 , <unk> ) ; params . METHOD_2 ( TYPE_2 . <unk> ( ) . METHOD_3 ( ) ) ; return params ; }[0m
Trg : private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , <unk> <unk> ) { TYPE_1 params = new TYPE_1 ( VAR_1 , <unk> , true ) ; params . METHOD_2 ( TYPE_2 . <unk> ( ) . METHOD_3 ( ) ) ; return params ; }[0m
Pred: private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_1 ) ) { TYPE_1 params = new TYPE_1 ( VAR_1 , VAR_1 , false ) ; params . METHOD_2 ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; return params ; }[0m
[31mExample #2[0m
Src : public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) ) ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . <unk> ) ) ; }[0m
Trg : public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_2 . <unk> ) ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . <unk> ) ) ; }[0m
Pred: public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) ) , ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , null ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , null ) , null ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = context . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , null , null ) ) ) ; METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( TYPE_1 . METHOD_2 ( ) ) ; }[0m
[31mExample #4[0m
Src : private <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , VAR_1 , true , null , false , null ) ; }[0m
Trg : private <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , null , VAR_1 , true , null , false , null ) ; }[0m
Pred: private java.util.Vector METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( context . METHOD_3 ( ) , name , true , true , null , null , VAR_1 , true , null , false , null ) ; }[0m
[31mExample #5[0m
Src : private <unk> METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , VAR_1 , false , null , null , VAR_2 , true ) ; }[0m
Trg : private <unk> METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , VAR_1 , false , null , null , VAR_2 , true , null ) ; }[0m
Pred: private java.util.Vector METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( context . METHOD_3 ( ) , VAR_1 , false , false , null , null , VAR_2 , true ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( boolean VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; } } catch ( <unk> VAR_5 ) { } }[0m
Trg : public void METHOD_1 ( boolean VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , null ) ; } } catch ( <unk> VAR_5 ) { } }[0m
Pred: public void METHOD_1 ( boolean VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , VAR_1 ) ; } } catch ( java.io.IOException VAR_5 ) { } }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_1 . METHOD_6 ( VAR_2 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_1 . METHOD_6 ( VAR_2 , false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_1 . METHOD_6 ( VAR_2 ) ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , null ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 <unk> ) { } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , null , true ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 <unk> ) { } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , null , null ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 ) { } }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { java.util.List < <unk> . <unk> > result = <unk> . METHOD_2 ( null , null , false ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < <unk> . <unk> > result = <unk> . METHOD_2 ( null , null , null , false ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 . java.util.Vector > > result = METHOD_2 ( null , null , null , false ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
[31mExample #10[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , int VAR_3 , <unk> VAR_4 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , int VAR_3 , <unk> VAR_4 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , VAR_3 , VAR_4 , null ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , int VAR_3 , TYPE_1 VAR_4 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , VAR_3 , VAR_3 , VAR_4 ) ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , 1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , 1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) , false ) ; METHOD_4 ( 1 , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) . get ( ) , 1 ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = context . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( TYPE_1 . . METHOD_2 ( ) ) ; }[0m
[31mExample #13[0m
Src : private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 . METHOD_4 ( ) ) ) + STRING_2 ) + msg ) , args ) ; } }[0m
Trg : private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( VAR_2 . METHOD_4 ( ) ) + msg ) , args ) ; } }[0m
Pred: private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 . METHOD_4 ( ) ) ) + STRING_2 ) + msg ) , args ) ; } }[0m
[31mExample #14[0m
Src : public void METHOD_1 ( int VAR_1 , <unk> <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; }[0m
Trg : public void METHOD_1 ( int VAR_1 , <unk> <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( true ) ; }[0m
Pred: public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_1 , java.lang.String value , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( true , null ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 <unk> ) { } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( true , null , true ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 <unk> ) { } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( true , null , null ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 ) { } }[0m
[31mExample #16[0m
Src : private TYPE_1 . <unk> METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true ) ; }[0m
Trg : private TYPE_1 . <unk> METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true , true ) ; }[0m
Pred: private TYPE_1 . METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , , true ) ; }[0m
[31mExample #17[0m
Src : public void METHOD_1 ( TYPE_1 state ) { try { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , state ) ; } } catch ( <unk> VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( TYPE_1 state ) { try { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , state , null ) ; } } catch ( <unk> VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( TYPE_1 state ) { try { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , state , state ) ; } } catch ( TYPE_1 VAR_4 ) { } }[0m
[31mExample #18[0m
Src : public static void METHOD_1 ( short [ ] a ) { TYPE_1 . METHOD_1 ( a ) ; }[0m
Trg : public static void METHOD_1 ( short [ ] a ) { TYPE_1 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) , null , 0 , 0 ) ; }[0m
Pred: public static void METHOD_1 ( short [ ] a ) { TYPE_1 . METHOD_1 ( a , a ) ; }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , true , true , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , true , true , true , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , false , true , true , true ) ; }[0m
[31mExample #20[0m
Src : protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( <unk> ) ; }[0m
Trg : protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( context , TYPE_1 ) ; }[0m
[31mExample #21[0m
Src : private java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 , TYPE_2 VAR_2 ) { return <unk> ( VAR_3 . <unk> class , VAR_4 , new TYPE_3 ( VAR_1 , VAR_2 , false , null ) , STRING_1 , true ) ; }[0m
Trg : private java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 , TYPE_2 VAR_2 ) { return <unk> ( VAR_3 . <unk> class , VAR_4 , new TYPE_3 ( VAR_1 , VAR_2 , false , null , false ) , STRING_1 , true ) ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( android.content.Context VAR_1 , TYPE_2 VAR_2 ) { return ( ( VAR_3 . class ) , class , VAR_4 , new TYPE_3 ( VAR_1 , VAR_2 , false , null , null , true ) ) ; }[0m
---------------
Class: Add statement,Remove thrown exception
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String <unk> ) throws TYPE_2 { try { return TYPE_1 . METHOD_2 ( <unk> ) ; } catch ( TYPE_3 <unk> ) { throw new TYPE_2 ( <unk> ( ) ) ; } }[0m
Trg : public java.lang.String METHOD_1 ( java.lang.String <unk> ) { return <unk> ; }[0m
Pred: public java.lang.String METHOD_1 ( java.lang.String ) { return VAR_1 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.String VAR_1 ) throws <unk> { }[0m
Trg : public void METHOD_1 ( java.lang.String VAR_1 ) { this . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String VAR_1 )[0m
---------------
Class: Add/Remove parameter
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( int VAR_1 , int type , int arg , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( <unk> , type , arg ) ; }[0m
Trg : protected void METHOD_1 ( int type , int arg , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( <unk> , type , arg ) ; }[0m
Pred: protected void METHOD_1 ( int type , int type , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( false , type , arg ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( java.lang.Object VAR_1 , java.lang.Object <unk> ) { this . <unk> ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> ) { this . <unk> ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ; }[0m
Pred: public void init ( java.lang.Object VAR_1 , java.lang.Object ) { this . METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . ) ( ) ) . . ( ) ) ) ) ; }[0m
[31mExample #2[0m
Src : TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 ;[0m
Trg : TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 , int <unk> ) throws TYPE_2 ;[0m
Pred: TYPE_1 [ ] METHOD_1 ( ) throws TYPE_2 ;[0m
[31mExample #3[0m
Src : public void METHOD_1 ( <unk> <unk> , TYPE_1 event , <unk> <unk> ) { }[0m
Trg : public void METHOD_1 ( TYPE_1 event , <unk> <unk> ) { }[0m
Pred: public void METHOD_1 ( TYPE_1 event , TYPE_1 event ) { }[0m
[31mExample #4[0m
Src : public static native void METHOD_1 ( long <unk> , int VAR_1 , boolean VAR_2 , long VAR_3 , long VAR_4 , long VAR_5 ) ;[0m
Trg : public static native void METHOD_1 ( long <unk> , int VAR_1 , boolean VAR_2 , long VAR_3 , long VAR_4 ) ;[0m
Pred: public static native void METHOD_1 ( long VAR_2 , int VAR_2 , long VAR_3 , long VAR_4 , long VAR_5 ) ;[0m
[31mExample #5[0m
Src : public TYPE_1 METHOD_1 ( int VAR_1 ) throws <unk> { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) throws <unk> { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) throws TYPE_2 { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 <unk> , java.lang.String VAR_2 , java.lang.Object data ) { throw new TYPE_4 ( STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 <unk> , java.lang.String VAR_2 ) { throw new TYPE_4 ( STRING_1 ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 context , TYPE_3 VAR_2 , java.lang.String VAR_2 , java.lang.Object data ) { throw new TYPE_4 ( STRING_1 ) ; }[0m
[31mExample #7[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 listener ) { return null ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return null ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_3 listener ) { return null ; }[0m
[31mExample #8[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object VAR_1 ) { <unk> ( ( ( TYPE_1 < <unk> > ) ( ( ( TYPE_2 . <unk> ) ( VAR_1 ) ) . <unk> ( ) ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object VAR_1 ) { <unk> ( ( ( TYPE_1 < <unk> > ) ( ( ( TYPE_2 . <unk> ) ( VAR_1 ) ) . <unk> ( ) ) ) ) ; }[0m
Pred: public void init ( java.lang.Object ... , java.lang.Object VAR_1 ) { if ( ( ( TYPE_1 < > > ( ( TYPE_2 . METHOD_2 ( ) ) ( VAR_1 ) ) . ) ( ) ) ) ; }[0m
[31mExample #9[0m
Src : void METHOD_1 ( TYPE_1 . <unk> <unk> , java.util.List < TYPE_2 > VAR_1 , java.util.List < TYPE_3 > VAR_2 ) ;[0m
Trg : void METHOD_1 ( TYPE_1 . <unk> <unk> , java.util.List < TYPE_2 > VAR_1 ) ;[0m
Pred: void METHOD_1 ( TYPE_1 . context , java.util.List < TYPE_2 > VAR_1 , java.util.List < TYPE_3 > VAR_2 ) ;[0m
[31mExample #10[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 . <unk> ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 . <unk> ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 . ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; TYPE_2 . METHOD_6 ( METHOD_6 . METHOD_8 ( ) ) ; }[0m
[31mExample #11[0m
Src : void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) ;[0m
Trg : void METHOD_1 ( TYPE_1 VAR_1 ) ;[0m
Pred: void METHOD_1 ( TYPE_2 VAR_2 ) ;[0m
[31mExample #12[0m
Src : public void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( int type , int VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; }[0m
Pred: public void METHOD_1 ( long type , int VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) ; }[0m
[31mExample #14[0m
Src : native boolean METHOD_1 ( int VAR_1 , int VAR_2 , byte [ ] <unk> , byte [ ] output , float [ ] VAR_3 , int VAR_4 ) ;[0m
Trg : native boolean METHOD_1 ( java.lang.String path , int VAR_1 , int VAR_2 , byte [ ] <unk> , byte [ ] output , float [ ] VAR_3 , int VAR_4 ) ;[0m
Pred: static boolean METHOD_1 ( int VAR_1 , int VAR_2 , byte [ ] , byte [ ] output , float [ ] VAR_3 , int VAR_4 ) ;[0m
[31mExample #15[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { return TYPE_4 . METHOD_2 ( null ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return TYPE_4 . METHOD_2 ( null ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 ) { return TYPE_4 . METHOD_2 ( null ) ; }[0m
[31mExample #16[0m
Src : private TYPE_1 METHOD_1 ( TYPE_2 <unk> , java.lang.String VAR_1 , java.lang.String path ) { if ( TYPE_3 . METHOD_2 ( path ) ) { return null ; } return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( path ) ; }[0m
Trg : private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String path ) { if ( TYPE_3 . METHOD_2 ( path ) ) { return null ; } return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( path ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( TYPE_2 < java.lang.String , java.lang.String path ) { if ( TYPE_3 . METHOD_2 ( path ) ) { return null ; } return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( path ) ; }[0m
[31mExample #17[0m
Src : protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
Pred: protected void METHOD_1 ( TYPE_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
---------------
Class: Add/Remove parameter,Add parameter in the method/constructor invocation
Golden example (False):
[31mExample #1[0m
Src : public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 <unk> = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . <unk> ( id ) . view ( STRING_1 ) . METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String <unk> , int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 <unk> = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . <unk> ( <unk> , id ) . view ( STRING_1 ) . METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Pred: public static void METHOD_1 ( int id , java.lang.String id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 TYPE_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . context ( id ) . view , ( STRING_1 ) . METHOD_3 ( VAR_1 , VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , <unk> <unk> , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , <unk> , VAR_2 , null , 0 ) ; }[0m
Trg : public static java.lang.String METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 , <unk> <unk> , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( STRING_1 , <unk> , VAR_1 , <unk> , VAR_2 , null , 0 ) ; }[0m
Pred: public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_1 , java.lang.String time , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , context , VAR_2 , VAR_2 , null , 0 ) ; }[0m
[31mExample #2[0m
Src : private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , <unk> , STRING_1 , true , VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( <unk> , STRING_1 , VAR_1 , true , VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( ) throws java.lang.Exception { java.lang.String METHOD_2 ( , VAR_1 , context , STRING_1 , STRING_1 , true , VAR_2 ) ; }[0m
[31mExample #3[0m
Src : public static TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 ) { return TYPE_2 . <unk> ( id ) . view ( STRING_1 ) . id ( VAR_1 ) ; }[0m
Trg : public static TYPE_1 METHOD_1 ( java.lang.String <unk> , int id , java.lang.String VAR_1 ) { return TYPE_2 . <unk> ( <unk> , id ) . view ( STRING_1 ) . id ( VAR_1 ) ; }[0m
Pred: public static TYPE_1 METHOD_1 ( int id , java.lang.String id , java.lang.String VAR_1 ) { return TYPE_2 . METHOD_2 ( id ) . view , ( STRING_1 ) . id ( VAR_1 ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( <unk> id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . <unk> ( id , STRING_1 ) . id ( VAR_1 ) . delete ( VAR_2 ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String <unk> , <unk> id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . <unk> ( <unk> , id , STRING_1 ) . id ( VAR_1 ) . delete ( VAR_2 ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.String id , java.lang.String id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . context ( id , STRING_1 ) . id ( VAR_1 ) . delete ( VAR_2 ) ; }[0m
---------------
Class: Add/Remove parameter,Remove type casting in method body
Golden example (False):
[31mExample #1[0m
Src : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_1 ( ) ; METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Integer <unk> ) { VAR_1 = <unk> ; METHOD_1 ( ) ; METHOD_2 ( ) ; }[0m
Pred: public void init ( ) { VAR_1 = ( ( java.lang.Integer ) ( VAR_1 ) ) ; METHOD_2 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { METHOD_1 ( ( ( java.lang.Boolean ) ( <unk> ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Boolean <unk> ) { METHOD_1 ( <unk> ) ; }[0m
Pred: public void init ( ) { METHOD_1 ( ( VAR_1 ) ) ; }[0m
---------------
Class: Broad method visibility
Golden example (True):
[32mExample #1[0m
Src : abstract TYPE_1 id ( java.lang.String VAR_1 ) ;[0m
Trg : public abstract TYPE_1 id ( java.lang.String VAR_1 ) ;[0m
Pred: public abstract TYPE_1 id ( java.lang.String VAR_1 ) ;[0m
+++++++++++++++
[31mExample #1[0m
Src : private TYPE_1 METHOD_1 ( ) { return VAR_1 ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; }[0m
[31mExample #2[0m
Src : private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; }[0m
Trg : protected void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; }[0m
Pred: public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; }[0m
[31mExample #3[0m
Src : protected java.lang.String METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Pred: public synchronized java.lang.String METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
[31mExample #4[0m
Src : protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ; }[0m
Pred: public synchronized void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ; }[0m
[31mExample #5[0m
Src : private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( METHOD_2 ( TYPE_2 . <unk> ( ) ) ) && ( <unk> ( VAR_1 . METHOD_3 ( ) ) ) ; }[0m
Trg : protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( METHOD_2 ( TYPE_2 . <unk> ( ) ) ) && ( <unk> ( VAR_1 . METHOD_3 ( ) ) ) ; }[0m
Pred: public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( METHOD_2 ( TYPE_2 . METHOD_2 ( ) ) ) && ( ! ( VAR_1 . METHOD_3 ( ) ) ) ; }[0m
[31mExample #6[0m
Src : private boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { return <unk> ( METHOD_2 ( <unk> ) . METHOD_3 ( TYPE_2 . <unk> ( ) . METHOD_4 ( ) ) ) ; }[0m
Trg : protected boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { return <unk> ( METHOD_2 ( <unk> ) . METHOD_3 ( TYPE_2 . <unk> ( ) . METHOD_4 ( ) ) ) ; }[0m
Pred: public static boolean METHOD_1 ( TYPE_1 . state ) { return ! ( METHOD_2 ( state ) . METHOD_3 ( TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) ) ) ; }[0m
[31mExample #7[0m
Src : protected TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Pred: public synchronized TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
[31mExample #8[0m
Src : protected <unk> <unk> ( ) { if ( ( TYPE_1 . METHOD_1 ( ) ) != null ) { METHOD_2 ( TYPE_1 . METHOD_1 ( ) . METHOD_3 ( ) ) ; } return super . <unk> ( ) ; }[0m
Trg : public <unk> <unk> ( ) { if ( ( TYPE_1 . METHOD_1 ( ) ) != null ) { METHOD_2 ( TYPE_1 . METHOD_1 ( ) . METHOD_3 ( ) ) ; } return super . <unk> ( ) ; }[0m
Pred: public synchronized while ( ) { if ( ( TYPE_1 . METHOD_1 ( ) ) != null ) { METHOD_2 ( TYPE_1 . METHOD_1 ( ) . METHOD_3 ( ) ) ; } return super . build ( ) ; }[0m
[31mExample #9[0m
Src : private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }[0m
Trg : public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }[0m
Pred: public static void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }[0m
[31mExample #10[0m
Src : private boolean METHOD_1 ( java.util.List < <unk> > VAR_1 ) { for ( <unk> <unk> : VAR_1 ) { if ( ( <unk> . <unk> ( ) ) != ( VAR_2 ) ) { return true ; } } return false ; }[0m
Trg : protected boolean METHOD_1 ( java.util.List < <unk> > VAR_1 ) { for ( <unk> <unk> : VAR_1 ) { if ( ( <unk> . <unk> ( ) ) != ( VAR_2 ) ) { return true ; } } return false ; }[0m
Pred: public static boolean METHOD_1 ( java.util.List < > > VAR_1 ) { for ( for ( VAR_1 : VAR_1 ) { if ( ( ! . ( ) ) != ( VAR_2 ) ) { return true ; } } return false ; }[0m
[31mExample #11[0m
Src : private static TYPE_1 <unk> ( java.io.File VAR_1 , TYPE_2 VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; }[0m
Trg : public static TYPE_1 <unk> ( java.io.File VAR_1 , TYPE_2 VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; }[0m
Pred: public static static TYPE_1 ( java.io.File VAR_1 , TYPE_2 VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; }[0m
[31mExample #12[0m
Src : protected TYPE_1 . <unk> METHOD_1 ( ) { return <unk> ( ) ; }[0m
Trg : public TYPE_1 . <unk> METHOD_1 ( ) { return <unk> ( ) ; }[0m
Pred: public abstract TYPE_1 . METHOD_1 ( ) { return ! ( ) ; }[0m
[31mExample #13[0m
Src : protected void METHOD_1 ( final <unk> value ) { <unk> = value ; }[0m
Trg : public void METHOD_1 ( final <unk> value ) { <unk> = value ; }[0m
Pred: public synchronized void METHOD_1 ( final boolean value ) { java.util.Vector = value ; }[0m
[31mExample #14[0m
Src : private static native void METHOD_1 ( java.lang.Object VAR_1 , long VAR_2 ) ;[0m
Trg : public static native void METHOD_1 ( java.lang.Object VAR_1 , long VAR_2 ) ;[0m
Pred: public static native native void METHOD_1 ( java.lang.Object VAR_1 , long VAR_2 ) ;[0m
[31mExample #15[0m
Src : protected java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
Pred: public java.lang.String java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
---------------
Class: Change method invocation as result of a move method
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( ) { TYPE_1 . <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) . VAR_2 ( VAR_2 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected void METHOD_1 ( ) { <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { if ( ) . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_4 , STRING_5 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( null , STRING_1 ) ; METHOD_2 ( STRING_2 , STRING_3 ) ; METHOD_2 ( STRING_4 , STRING_5 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) ; METHOD_2 ( STRING_4 , STRING_5 ) ; }[0m
[31mExample #3[0m
Src : protected boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . getId ( ) ) ) != null ; }[0m
Trg : protected boolean METHOD_1 ( ) { return ( TYPE_1 . METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . getId ( ) ) ) != null ; }[0m
Pred: protected boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . getId ( ) ) ) != null ; }[0m
[31mExample #4[0m
Src : public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . get ( key . METHOD_2 ( ) , <unk> ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . get ( key . METHOD_2 ( ) , <unk> ) ; return METHOD_3 ( VAR_1 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . get ( key . METHOD_2 ( ) , ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( <unk> <unk> ) { TYPE_1 . <unk> ( VAR_1 . get ( VAR_2 . <unk> < <unk> > <unk> ( VAR_3 . <unk> class ) ) ) . <unk> ( <unk> ) ; }[0m
Trg : private void METHOD_1 ( <unk> <unk> ) { <unk> ( VAR_1 . get ( VAR_2 . <unk> < <unk> > <unk> ( VAR_3 . <unk> class ) ) ) . <unk> ( <unk> ) ; }[0m
Pred: private void METHOD_1 ( java.lang.Thread ) ) { if ( VAR_1 . get ( VAR_2 . java.util.Vector < < > > ( VAR_3 . class ) ) ) . METHOD_6 ( ) ; }[0m
---------------
Class: Change method return value
Golden example (True):
[32mExample #1[0m
Src : public TYPE_1 METHOD_1 ( ) { return false ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return true ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return true ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public final TYPE_1 METHOD_1 ( ) { return this . <unk> ; }[0m
Trg : public final TYPE_1 METHOD_1 ( ) { return null ; }[0m
Pred: public final TYPE_1 METHOD_1 ( ) { return this . VAR_1 ; }[0m
[31mExample #2[0m
Src : protected java.lang.String <unk> ( ) { return STRING_1 ; }[0m
Trg : protected java.lang.String <unk> ( ) { return <unk> ; }[0m
Pred: protected java.lang.String ( ) { { return STRING_1 ; }[0m
---------------
Class: Change method return value,Change return type
Golden example (False):
[31mExample #1[0m
Src : public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , java.lang.Integer . toString ( VAR_3 . METHOD_4 ( ) ) ) ; return null ; }[0m
Trg : public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , java.lang.Integer . toString ( VAR_3 . METHOD_4 ( ) ) ) ; return true ; }[0m
Pred: public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , java.lang.Long . toString ( VAR_3 . METHOD_4 ( ) ) ) ; return true ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; return null ; }[0m
Trg : public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; return true ; }[0m
Pred: public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; return true ; }[0m
---------------
Class: Change parameter type
Golden example (False):
[31mExample #1[0m
Src : synchronized long METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
Trg : synchronized long METHOD_1 ( long [ ] VAR_1 , long [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
Pred: synchronized long METHOD_1 ( long [ ] VAR_1 , long [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( true , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int count , float [ ] <unk> , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , count , <unk> , VAR_3 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int count , float [ ] <unk> , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , count , <unk> , VAR_3 ) ; }[0m
Pred: synchronized void METHOD_1 ( long id , long VAR_1 , int VAR_2 , int count , float [ ] VAR_8 , long VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( start , id , VAR_1 , VAR_2 , count , size , VAR_3 ) ; }[0m
[31mExample #2[0m
Src : public boolean METHOD_1 ( <unk> . <unk> <unk> ) { return <unk> . getId ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> <unk> ) { return <unk> . getId ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.Thread . equals ( ) ) { return ! . getId ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ; }[0m
[31mExample #3[0m
Src : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.Thread VAR_1 ) { return ! . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
[31mExample #4[0m
Src : private TYPE_1 METHOD_1 ( final TYPE_2 . <unk> VAR_1 ) { if ( VAR_1 != null ) { return VAR_2 . <unk> ( VAR_1 . <unk> ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; } return VAR_3 ; }[0m
Trg : private TYPE_1 METHOD_1 ( final <unk> . <unk> VAR_1 ) { if ( VAR_1 != null ) { return VAR_2 . <unk> ( VAR_1 . <unk> ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; } return VAR_3 ; }[0m
Pred: private TYPE_1 METHOD_1 ( final TYPE_2 state ) { if ( VAR_1 != null ) { return VAR_2 . equals ( VAR_1 . METHOD_2 ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; } return VAR_3 ; }[0m
[31mExample #5[0m
Src : static int METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 . METHOD_3 ( ) ; }[0m
Trg : static int METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 . METHOD_3 ( ) ; }[0m
Pred: static long METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 . METHOD_3 ( ) ; }[0m
[31mExample #6[0m
Src : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getName ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getName ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.Thread . state VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getName ( ) ) ; }[0m
[31mExample #7[0m
Src : private static TYPE_1 METHOD_1 ( ) { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . <unk> ( <unk> . METHOD_2 ( ) ) ; <unk> . METHOD_3 ( STRING_1 ) ; return <unk> ; }[0m
Trg : private static <unk> METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . <unk> ( <unk> . METHOD_2 ( ) ) ; <unk> . METHOD_3 ( STRING_1 ) ; return <unk> ; }[0m
Pred: private static TYPE_1 METHOD_1 ( ) { TYPE_1 init = new TYPE_1 ( ) ; java.lang.Thread . init ( ) . METHOD_2 ( ) ; if . METHOD_3 ( STRING_1 ) ; return answer ; }[0m
[31mExample #8[0m
Src : synchronized TYPE_1 METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Trg : synchronized TYPE_1 METHOD_1 ( long VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Pred: synchronized TYPE_1 METHOD_1 ( long VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( start , VAR_1 ) ; }[0m
[31mExample #9[0m
Src : private static void METHOD_1 ( final TYPE_1 <unk> , final TYPE_2 . <unk> <unk> ) { TYPE_3 . METHOD_2 ( <unk> , STRING_1 , <unk> . get ( ) ) ; }[0m
Trg : private static void METHOD_1 ( final java.lang.StringBuilder <unk> , final TYPE_2 . <unk> <unk> ) { TYPE_3 . METHOD_2 ( <unk> , STRING_1 , <unk> . get ( ) ) ; }[0m
Pred: private static void METHOD_1 ( final TYPE_1 start , final TYPE_2 state ) { TYPE_3 . METHOD_2 ( java.lang.Thread , STRING_1 , list . get ( ) ) ; }[0m
[31mExample #10[0m
Src : public java.lang.String getValue ( <unk> . <unk> <unk> ) { return <unk> . METHOD_1 ( ) ; }[0m
Trg : public java.lang.String getValue ( <unk> . <unk> <unk> ) { return <unk> . METHOD_1 ( ) ; }[0m
Pred: public java.lang.String getValue ( java.lang.Thread . equals ( ) ) { return ! . METHOD_1 ( ) ; }[0m
[31mExample #11[0m
Src : public java.lang.String getValue ( <unk> <unk> ) { return <unk> ( <unk> . METHOD_1 ( ) . size ( ) ) ; }[0m
Trg : public java.lang.String getValue ( java.lang.Object <unk> ) { return <unk> ( ( ( <unk> ) ( <unk> ) ) . METHOD_1 ( ) . size ( ) ) ; }[0m
Pred: public java.lang.String getValue ( java.lang.Thread ) ) { return ! ( java.lang.Thread . METHOD_1 ( ) . size ( ) ) ; }[0m
[31mExample #12[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Pred: synchronized void METHOD_1 ( long id , long VAR_1 , long VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( start , id , VAR_1 , VAR_2 ) ; }[0m
[31mExample #13[0m
Src : public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > <unk> , TYPE_2 . <unk> VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , <unk> . METHOD_3 ( ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , <unk> , VAR_2 ) ; }[0m
Trg : public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > <unk> , TYPE_2 . <unk> VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , <unk> . METHOD_3 ( ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , <unk> , VAR_2 ) ; }[0m
Pred: public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > > , TYPE_2 . VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , java.lang.Thread . METHOD_3 ( ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , start , VAR_2 ) ; }[0m
[31mExample #14[0m
Src : public java.lang.String getValue ( <unk> <unk> ) { return ( <unk> ( <unk> . METHOD_1 ( ) ) ) + STRING_1 ; }[0m
Trg : public java.lang.String getValue ( java.lang.Object <unk> ) { return ( <unk> ( ( ( <unk> ) ( <unk> ) ) . METHOD_1 ( ) ) ) + STRING_1 ; }[0m
Pred: public java.lang.String getValue ( java.lang.Thread ) ) { return ( ! ( java.lang.Thread . METHOD_1 ( ) ) ) + STRING_1 ; }[0m
[31mExample #15[0m
Src : synchronized int METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Trg : synchronized long METHOD_1 ( long VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Pred: synchronized long METHOD_1 ( long VAR_1 , long VAR_2 , int VAR_3 , long VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
[31mExample #16[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , float VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , float VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Pred: synchronized void METHOD_1 ( long id , long VAR_1 , float VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( start , id , VAR_1 , VAR_2 ) ; }[0m
[31mExample #17[0m
Src : public boolean METHOD_1 ( TYPE_1 <unk> ) { return ( <unk> . METHOD_2 ( ) ) == ( VAR_1 ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> <unk> ) { return ( <unk> . METHOD_2 ( ) ) == ( VAR_1 ) ; }[0m
Pred: public boolean METHOD_1 ( TYPE_1 init ) { return ( getView . METHOD_2 ( ) ) == ( VAR_1 ) ; }[0m
[31mExample #18[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , byte [ ] VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , byte [ ] VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Pred: synchronized void METHOD_1 ( long id , long VAR_1 , byte [ ] VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( start , id , VAR_1 , VAR_2 ) ; }[0m
[31mExample #19[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> . <unk> <unk> ) { return VAR_1 . METHOD_2 ( <unk> , <unk> , VAR_2 , VAR_3 ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> <unk> ) { return VAR_1 . METHOD_2 ( <unk> , <unk> , VAR_2 , VAR_3 ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_1 start , java.lang.Thread . state ) { synchronized ( VAR_1 . METHOD_2 ( ) , , , VAR_2 , VAR_3 ) ; }[0m
[31mExample #20[0m
Src : synchronized void METHOD_1 ( int VAR_1 , int VAR_2 , int <unk> ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , VAR_1 , VAR_2 , <unk> ) ; }[0m
Trg : synchronized void METHOD_1 ( long VAR_1 , int VAR_2 , long <unk> ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , VAR_1 , VAR_2 , <unk> ) ; }[0m
Pred: synchronized void METHOD_1 ( long VAR_1 , long VAR_2 , long state ) { METHOD_2 ( ) ; METHOD_3 ( start , VAR_1 , VAR_2 , time ) ; }[0m
[31mExample #21[0m
Src : public static native void METHOD_1 ( int VAR_1 , int VAR_2 ) throws TYPE_1 ;[0m
Trg : public static native void METHOD_1 ( long VAR_1 , long VAR_2 ) throws TYPE_1 ;[0m
Pred: public static native void METHOD_1 ( long VAR_1 , int VAR_2 ) throws TYPE_1 ;[0m
[31mExample #22[0m
Src : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.Thread VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( ! ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; }[0m
---------------
Class: Change parameter value of invoked method
Golden example (False):
[31mExample #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_4 ( ) , VAR_1 ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_4 . <unk> , VAR_1 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_4 ( VAR_1 , ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 ) ) ; }[0m
Trg : protected java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new <unk> ( VAR_2 ) ) ; }[0m
Pred: protected java.util.List < > > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 ) ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( <unk> id ) { return <unk> ( VAR_1 class , VAR_2 , new TYPE_2 ( id ) , id . toString ( ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( <unk> id ) { return <unk> ( VAR_1 class , VAR_2 , new <unk> ( id ) , id . toString ( ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.Thread id ) { return VAR_1 . class , VAR_2 , new TYPE_2 ( id ) , id . toString ( ) ) ; }[0m
[31mExample #3[0m
Src : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , VAR_1 , true ) ; <unk> = TYPE_3 . METHOD_3 ( args . <unk> , t ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , VAR_1 , true ) ; <unk> = TYPE_3 . METHOD_3 ( args . <unk> , t ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , VAR_1 , true ) ; VAR_1 = TYPE_3 . METHOD_3 ( args . context , t ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , INT_1 , false ) ; <unk> = TYPE_3 . METHOD_3 ( VAR_1 , t ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , INT_1 , false ) ; <unk> = TYPE_3 . METHOD_3 ( args . <unk> , t ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , INT_1 , false ) ; TYPE_1 . TYPE_3 . METHOD_3 ( VAR_1 , t ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , null ) ; assertEquals ( STRING_2 , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , null ) ; assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , null ) ; assertEquals ( STRING_2 , VAR_2 ) ; }[0m
[31mExample #6[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_2 ( ) , METHOD_4 ( ) . <unk> ( STRING_2 , VAR_1 ) ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_2 . <unk> , METHOD_4 ( ) . <unk> ( STRING_2 , VAR_1 ) ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_2 ( ) , METHOD_4 ( ) . equals ( STRING_2 , VAR_1 ) ) ; }[0m
---------------
Class: Change parameters order in method invocation
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = <unk> . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = <unk> . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( <unk> , VAR_1 . size ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_1 . size ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { long VAR_1 = INT_1 ; long VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_2 , INT_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { long VAR_1 = INT_1 ; long VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( INT_2 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { long VAR_1 = INT_1 ; long VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_2 , INT_2 ) ; }[0m
---------------
Class: Change return type
Golden example (True):
[32mExample #1[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; }[0m
Trg : public boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected <unk> . <unk> METHOD_1 ( java.lang.String name ) { for ( <unk> . <unk> <unk> : METHOD_2 ( ) ) { if ( <unk> . getName ( ) . equals ( name ) ) { return <unk> ; } } return null ; }[0m
Trg : protected <unk> METHOD_1 ( java.lang.String name ) { for ( <unk> <unk> : METHOD_2 ( ) ) { if ( <unk> . getName ( ) . equals ( name ) ) { return <unk> ; } } return null ; }[0m
Pred: protected boolean isEmpty ( ( java.lang.String name ) { for ( state . state ) : METHOD_2 ( ) ) { if ( if . getName ( ) . equals ( name ) ) { return return ; } } return null ; }[0m
---------------
Class: Class is not static anymore. Add object instance to invoke its methods
Golden example (False):
[31mExample #1[0m
Src : public static boolean METHOD_1 ( <unk> <unk> ) { return ! ( TYPE_1 . METHOD_2 ( <unk> ) . isEmpty ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> <unk> ) { return ! ( METHOD_2 ( <unk> ) . isEmpty ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.Thread ) { return ! ( METHOD_2 ( VAR_1 ) . isEmpty ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { final java.util.List < TYPE_1 > result = METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 ) + STRING_1 ) ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { final java.util.List < TYPE_1 > result = <unk> . METHOD_3 ( ( ( VAR_1 ) + STRING_1 ) ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; }[0m
Pred: public METHOD_1 ( ) { final java.util.List < TYPE_1 > result = METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 ) + STRING_1 ) ) ; METHOD_4 ( result . isEmpty ( ) ) ; }[0m
[31mExample #2[0m
Src : public static TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 , boolean VAR_4 ) { return TYPE_2 . METHOD_1 ( <unk> , VAR_1 , VAR_2 , VAR_3 , STRING_1 , VAR_4 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 , boolean VAR_4 ) { return METHOD_1 ( <unk> , VAR_1 , VAR_2 , VAR_3 , STRING_1 , VAR_4 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.Thread VAR_1 , java.util.Vector VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 , boolean VAR_4 ) { return METHOD_1 ( VAR_1 , VAR_1 , VAR_2 , VAR_3 , STRING_1 , VAR_4 ) ; }[0m
[31mExample #3[0m
Src : public static TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_1 ( <unk> , VAR_1 , true , false , VAR_2 , false ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( <unk> , VAR_1 , true , false , VAR_2 , false ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.Thread VAR_1 , java.util.Vector VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( VAR_1 , VAR_1 , true , false , VAR_2 , false ) ; }[0m
[31mExample #4[0m
Src : public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) + STRING_1 ) + ( METHOD_4 ( VAR_1 ) ) ; }[0m
Trg : public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_4 ( ) ) ; }[0m
Pred: public METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) + STRING_1 ) + ( METHOD_4 ( VAR_1 ) ) ; }[0m
---------------
Class: Forbid overriding: add final to method
Golden example (False):
[31mExample #1[0m
Src : public long METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; }[0m
Trg : public final long METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; }[0m
Pred: public long METHOD_1 ( final int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public double METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; }[0m
Trg : public final double METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; }[0m
Pred: public double METHOD_1 ( ) { if if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; }[0m
---------------
Class: Merge variable definition & initialization
Golden example (False):
[31mExample #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) ; java.util.List < TYPE_1 > VAR_3 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_4 , VAR_2 ) ; return VAR_3 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_4 , VAR_2 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( VAR_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . equals ( STRING_1 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_4 , VAR_2 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( <unk> <unk> ) { TYPE_2 VAR_1 = METHOD_2 ( ) . <unk> ( STRING_1 , <unk> ) ; java.util.List < TYPE_1 > VAR_2 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 , VAR_1 ) ; return VAR_2 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( <unk> <unk> ) { TYPE_2 VAR_1 = METHOD_2 ( ) . <unk> ( STRING_1 , <unk> ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 , VAR_1 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.util.Vector ) { TYPE_2 VAR_1 = METHOD_2 ( ) . equals ( STRING_1 , false ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 , VAR_1 ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 ; VAR_3 = super . METHOD_1 ( VAR_4 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; return VAR_3 == null ? null : METHOD_3 ( VAR_3 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 = super . METHOD_1 ( VAR_4 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; return VAR_3 == null ? null : METHOD_3 ( VAR_3 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 = super . METHOD_1 ( VAR_4 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; return VAR_3 == null ? null : METHOD_3 ( ) ; }[0m
[31mExample #3[0m
Src : private TYPE_1 METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) . <unk> ( STRING_2 , VAR_2 ) ; return VAR_3 ; }[0m
Trg : private TYPE_1 METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { return METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) . <unk> ( STRING_2 , VAR_2 ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( java.lang.Thread VAR_1 , java.util.Vector VAR_2 ) { return METHOD_2 ( ) . equals ( STRING_1 , VAR_1 ) . ( STRING_2 , VAR_2 ) ; }[0m
[31mExample #4[0m
Src : public static java.io.File METHOD_1 ( java.lang.String name ) throws TYPE_1 { java.lang.String VAR_1 ; VAR_1 = TYPE_2 . METHOD_2 ( ) ; return new java.io.File ( VAR_1 , ( name + ( VAR_2 ) ) ) ; }[0m
Trg : public static java.io.File METHOD_1 ( java.lang.String name ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( ) ; return new java.io.File ( VAR_1 , ( name + ( VAR_2 ) ) ) ; }[0m
Pred: public static java.io.File METHOD_1 ( java.lang.String name ) throws TYPE_1 { java.lang.String VAR_1 = METHOD_2 ( ) ; return new java.io.File ( VAR_1 , ( name + ( VAR_2 ) ) ) ; }[0m
---------------
Class: Move existing statements out of try block
Golden example (False):
[31mExample #1[0m
Src : public static long METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; return TYPE_1 . METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } }[0m
Trg : public static long METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { return TYPE_1 . METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } }[0m
Pred: public static long METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; return TYPE_1 . METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( <unk> ) ; c . METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( <unk> ) ; try { c . METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( ) ; c . METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( <unk> ) ; c . get ( null ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( <unk> ) ; try { c . get ( null ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( ) ; c . get ( null ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
---------------
Class: Narrow method visibility
Golden example (True):
[32mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { return null ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return null ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return null ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; return VAR_1 ; }[0m
Trg : private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; return VAR_1 ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; return VAR_1 ; }[0m
[31mExample #2[0m
Src : protected TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( id ) ) ; return VAR_1 ; }[0m
Trg : private TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( id ) ) ; return VAR_1 ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( id ) ) ; return VAR_1 ; }[0m
[31mExample #3[0m
Src : public TYPE_1 METHOD_1 ( ) { return <unk> ; }[0m
Trg : private TYPE_1 METHOD_1 ( ) { return <unk> ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return true ; }[0m
[31mExample #4[0m
Src : protected static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) ; }[0m
Trg : private static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) ; }[0m
Pred: public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) ; }[0m
---------------
Class: Remove condition
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_4 ( new TYPE_2 ( STRING_1 ) ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String value ) { METHOD_4 ( new TYPE_2 ( STRING_1 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 value ) { if ( ( this . VAR_1 . METHOD_2 ( ) ) != value ) { this . VAR_1 . METHOD_1 ( value ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( java.lang.String line ) { if ( line != null ) { METHOD_2 ( line ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String line ) { METHOD_2 ( line ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String line ) { }[0m
[31mExample #3[0m
Src : public static TYPE_1 <unk> ( ) { if ( ( VAR_1 ) == null ) { synchronized ( VAR_2 class ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } } } return VAR_1 ; }[0m
Trg : public static TYPE_1 <unk> ( ) { return VAR_1 ; }[0m
Pred: public static TYPE_1 > ( ) { VAR_1 = VAR_1 ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String value ) { }[0m
---------------
Class: Remove invoked method
Golden example (False):
[31mExample #1[0m
Src : void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( a , a . length , this . VAR_1 ) ) ; }[0m
Trg : void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( a , a . length , this . VAR_1 ) ; }[0m
Pred: void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_1 . METHOD_4 ( a , a , this . VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static void METHOD_1 ( TYPE_1 args ) { VAR_1 = <unk> ; VAR_2 = <unk> ; <unk> = ( ( float ) ( TYPE_2 . METHOD_2 ( FLOAT_1 , args . <unk> ) ) ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args ) { VAR_1 = <unk> ; VAR_2 = <unk> ; <unk> = ( ( float ) ( TYPE_2 . METHOD_2 ( FLOAT_1 , args . <unk> ) ) ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args ) { VAR_1 = VAR_1 ; VAR_2 = startTime ; ( ( float ) ( TYPE_2 . METHOD_2 ( FLOAT_1 , VAR_1 ) ) ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 1 ] ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) [ 1 ] ; }[0m
[31mExample #3[0m
Src : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = <unk> . METHOD_2 ( FLOAT_1 ) ; b = <unk> . METHOD_2 ( FLOAT_2 ) ; c = a % b ; return c ; }[0m
Trg : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a % b ; return c ; }[0m
Pred: public static float METHOD_1 ( ) { float a ; float b ; float c ; a = METHOD_2 ( FLOAT_1 ) ; b = METHOD_2 ( FLOAT_2 ) ; c = a % b ; return c ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = <unk> . get ( VAR_3 ) ; VAR_4 = <unk> . get ( VAR_5 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = VAR_1 . METHOD_3 ( ) ; VAR_2 = <unk> . get ( VAR_3 ) ; VAR_4 = <unk> . get ( VAR_5 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; VAR_2 = VAR_1 . get ( VAR_3 ) ; VAR_4 = VAR_2 . get ( VAR_5 ) ; }[0m
[31mExample #5[0m
Src : public static synchronized boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { TYPE_2 type = TYPE_2 . METHOD_2 ( <unk> . METHOD_3 ( ) ) ; return ( type != null ) && ( type == ( VAR_1 ) ) ; }[0m
Trg : public static synchronized boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { TYPE_2 type = <unk> . METHOD_3 ( ) ; return ( type != null ) && ( type == ( VAR_1 ) ) ; }[0m
Pred: public static synchronized boolean METHOD_1 ( TYPE_1 . state ) { TYPE_2 type = TYPE_2 . METHOD_2 ( ) ; return ( type != null ) && ( type == ( VAR_1 ) ) ; }[0m
[31mExample #6[0m
Src : public long METHOD_1 ( TYPE_1 element , TYPE_2 VAR_1 ) { return element . METHOD_1 ( VAR_1 ) ; }[0m
Trg : public long METHOD_1 ( TYPE_1 element , TYPE_2 VAR_1 ) { return element . METHOD_1 ( VAR_1 ) . METHOD_1 ( ) ; }[0m
Pred: public long METHOD_1 ( TYPE_1 element , TYPE_2 VAR_1 ) { return element ; }[0m
[31mExample #7[0m
Src : public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return INT_1 ; } return ( ( java.lang.Integer ) ( source ) ) . METHOD_1 ( ) ; }[0m
Trg : public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return INT_1 ; } return source ; }[0m
Pred: public java.lang.Object [ ( java.lang.Object source , java.lang.Thread ) { if ( source == null ) { return INT_1 ; } return ( ( java.lang.Integer ) ( source ) ) ; }[0m
[31mExample #8[0m
Src : public TYPE_1 get ( ) { TYPE_1 <unk> = METHOD_1 ( METHOD_2 ( ) : : get ) ; TYPE_2 . METHOD_3 ( <unk> , <unk> ) ; TYPE_2 . METHOD_4 ( <unk> , TYPE_3 . METHOD_5 ( <unk> ) ) ; return <unk> ; }[0m
Trg : public TYPE_1 get ( ) { TYPE_1 <unk> = METHOD_1 ( METHOD_2 ( ) : : get ) ; TYPE_2 . METHOD_3 ( <unk> , <unk> ) ; TYPE_2 . METHOD_4 ( <unk> , <unk> ) ; return <unk> ; }[0m
Pred: public TYPE_1 get ( ) { TYPE_1 { = METHOD_1 ( METHOD_2 ( ) : : get ) ; TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ; return ; }[0m
[31mExample #9[0m
Src : private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 ; }[0m
[31mExample #10[0m
Src : public java.lang.Object METHOD_1 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 1 ; }[0m
Trg : public java.lang.Object METHOD_1 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : 1 ; }[0m
Pred: public java.lang.Object METHOD_1 ( java.lang.Object source , java.util.Vector ( ) { { return source != null ? ( ( java.lang.Integer ) ( source ) ) : 1 ; }[0m
[31mExample #11[0m
Src : protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . <unk> ( ) . METHOD_3 ( ) , TYPE_4 . <unk> ( ) . METHOD_4 ( ) ) ; }[0m
Trg : protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) , TYPE_4 . METHOD_4 ( ) ) ; }[0m
Pred: protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) , TYPE_4 . METHOD_6 ( ) . METHOD_4 ( ) ) ; }[0m
[31mExample #12[0m
Src : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = <unk> . METHOD_2 ( FLOAT_1 ) ; b = <unk> . METHOD_2 ( FLOAT_2 ) ; c = a - b ; return c ; }[0m
Trg : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a - b ; return c ; }[0m
Pred: public static float METHOD_1 ( ) { float a ; float b ; float c ; a = METHOD_2 ( FLOAT_1 ) ; b = METHOD_2 ( FLOAT_2 ) ; c = a - b ; return c ; }[0m
[31mExample #13[0m
Src : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_6 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; }[0m
[31mExample #14[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = <unk> . get ( STRING_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = VAR_1 . METHOD_3 ( ) ; VAR_2 = <unk> . get ( STRING_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; METHOD_2 ( VAR_1 ) ; VAR_2 = VAR_2 . get ( STRING_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; }[0m
---------------
Class: Remove parameter from the method invocation
Golden example (True):
[32mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private <unk> . <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , VAR_1 ) ; }[0m
Trg : private <unk> . <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , VAR_1 , true ) ; }[0m
Pred: private java.lang.Thread . METHOD_1 ( java.lang.String name ) { return METHOD_2 ( METHOD_2 . METHOD_3 ( ) , name , true , null , null , VAR_1 ) ; }[0m
[31mExample #2[0m
Src : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) , TYPE_1 . <unk> ( VAR_3 class ) ) ; <unk> . METHOD_3 ( VAR_4 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) , TYPE_1 . <unk> ( ) ) ; <unk> . METHOD_3 ( VAR_4 ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( VAR_1 ) . METHOD_2 ( ) ) . METHOD_2 ( TYPE_1 . equals ( VAR_2 . class ) , TYPE_1 . equals ( VAR_3 class ) ) ; . METHOD_3 ( VAR_4 ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( int VAR_1 , TYPE_1 <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; }[0m
Trg : public void METHOD_1 ( int VAR_1 , TYPE_1 <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( true ) ; }[0m
Pred: public void METHOD_1 ( int VAR_1 , TYPE_1 item ) { VAR_2 . METHOD_2 ( ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , false , false ) ; METHOD_3 ( 0 , false , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( 0 , false , true ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , false , false ) ; METHOD_3 ( 0 , false ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( <unk> , VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( <unk> ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( <unk> ) ; VAR_1 . METHOD_2 ( <unk> ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) , VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }[0m
[31mExample #6[0m
Src : public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_1 ( null ) ; }[0m
Trg : public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_1 ( null , null ) ; }[0m
Pred: public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_1 ( null ) ; }[0m
[31mExample #7[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > <unk> , java.lang.String <unk> ) throws java.lang.Exception { return METHOD_2 ( <unk> , null , null , <unk> , null , null ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > <unk> , java.lang.String <unk> ) throws java.lang.Exception { return METHOD_2 ( <unk> , null , <unk> , null , null ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > > ) throws java.lang.Exception { return METHOD_2 ( false , null , null , null , null , null ) ; }[0m
[31mExample #8[0m
Src : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( true ) ; add ( VAR_1 ) ; }[0m
Trg : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; add ( VAR_1 ) ; }[0m
Pred: protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( true ) ; add ( VAR_1 ) ; }[0m
[31mExample #9[0m
Src : public TYPE_1 <unk> ( ) { return new TYPE_1 ( this , null ) ; }[0m
Trg : public TYPE_1 <unk> ( ) { return new TYPE_1 ( this ) ; }[0m
Pred: public TYPE_1 init ( ) { return new TYPE_1 ( this ) ; }[0m
[31mExample #10[0m
Src : public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class < ? > [ ] VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; }[0m
Trg : public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class < ? > [ ] VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; }[0m
Pred: public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class < ? > [ ] VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_3 , STRING_4 , result ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_4 , result ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_3 , STRING_4 , result ) ; }[0m
[31mExample #12[0m
Src : public TYPE_1 <unk> ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Trg : public TYPE_1 <unk> ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 ) ; }[0m
Pred: public TYPE_1 init ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( false ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( false ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 , true ) ; METHOD_5 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( false ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; }[0m
[31mExample #14[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new <unk> ( ) , null , new java.util.ArrayList < <unk> . <unk> > ( ) ) , false , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new <unk> ( ) , null , new java.util.ArrayList < <unk> . <unk> > ( ) , null ) , false , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new TYPE_2 ( ) , null , new java.util.ArrayList < java.util.Vector . > ( ) ) , false , VAR_2 ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_2 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( <unk> ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_2 , 0 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( <unk> ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_2 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; }[0m
[31mExample #16[0m
Src : public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) throws <unk> { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_5 , VAR_6 , VAR_1 , VAR_2 ) ; } }[0m
Trg : public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) throws <unk> { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_1 , VAR_2 ) ; } }[0m
Pred: public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_5 , VAR_6 , VAR_2 ) ; } }[0m
[31mExample #17[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , true , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , true , true , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , true ) ; }[0m
[31mExample #18[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 1 , 0 ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 1 , 0 , 0 ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 1 , 0 ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) { <unk> ( null ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( VAR_1 . <unk> class ) ) ; TYPE_2 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( null ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) ) ; TYPE_2 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { if ( null ) . ( ( ) . . METHOD_2 ( TYPE_1 . VAR_1 class ) ) ; TYPE_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ; }[0m
[31mExample #20[0m
Src : protected TYPE_1 < TYPE_2 > <unk> ( ) { return new TYPE_3 ( METHOD_1 ( ) , METHOD_1 ( ) . getId ( ) ) ; }[0m
Trg : protected TYPE_1 < TYPE_2 > <unk> ( ) { return new TYPE_3 ( METHOD_1 ( ) ) ; }[0m
Pred: protected TYPE_1 < TYPE_2 > init ( ) { return new TYPE_3 ( METHOD_1 ( ) , METHOD_1 ( ) . getId ( ) ) ; }[0m
[31mExample #21[0m
Src : public final void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . <unk> { METHOD_2 ( VAR_1 , null ) ; }[0m
Trg : public final void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . <unk> { METHOD_2 ( VAR_1 ) ; }[0m
Pred: public final void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 { METHOD_2 ( VAR_1 , null ) ; }[0m
[31mExample #22[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( new java.util.HashMap < > ( ) , true , true ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( new java.util.HashMap < > ( ) , true , true , true ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( new java.util.HashMap < > ( ) , true ) ; }[0m
[31mExample #23[0m
Src : public boolean METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( VAR_1 ) ; }[0m
Trg : public boolean METHOD_1 ( int VAR_1 ) { return VAR_2 . METHOD_3 ( VAR_1 ) ; }[0m
Pred: public boolean METHOD_1 ( ) { METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( VAR_1 ) ; }[0m
[31mExample #24[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . <unk> ( 1 , 0 ) , VAR_1 . METHOD_3 ( INT_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . <unk> ( 1 ) , VAR_1 . METHOD_3 ( INT_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . ( 1 , 0 ) , VAR_1 . METHOD_3 ( INT_1 ) ) ; }[0m
[31mExample #25[0m
Src : private java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true , null ) ; }[0m
Trg : private java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true ) ; }[0m
Pred: private java.util.List < > > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true ) ; }[0m
[31mExample #26[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) ) ) . <unk> ( null ) ; TYPE_2 . METHOD_2 ( <unk> , VAR_3 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( null ) ; TYPE_2 . METHOD_2 ( <unk> , VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) { if ( VAR_1 . get ( TYPE_1 . equals ( VAR_2 . class ) ) ) . ) ( null ) ; TYPE_2 . METHOD_2 ( ) , VAR_3 ; }[0m
[31mExample #27[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , new java.io.File ( VAR_2 , STRING_1 ) , false ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , new java.io.File ( VAR_2 , STRING_1 ) , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , new java.io.File ( VAR_2 , STRING_1 ) ) ; }[0m
[31mExample #28[0m
Src : public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 <unk> = METHOD_2 ( VAR_1 , false , false ) ; return new TYPE_1 ( <unk> . METHOD_3 ( ) ) ; }[0m
Trg : public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 <unk> = METHOD_2 ( VAR_1 , false , false , false ) ; return new TYPE_1 ( <unk> . METHOD_3 ( ) ) ; }[0m
Pred: public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 = METHOD_2 ( VAR_1 , false , false ) ; return new TYPE_1 ( TYPE_1 . METHOD_3 ( ) ) ; }[0m
---------------
Class: Remove redundant initialization
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { int [ ] a = null ; TYPE_1 VAR_1 = new TYPE_1 ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Trg : public void METHOD_1 ( ) { try { int [ ] a = null ; new TYPE_1 ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { int [ ] a = new TYPE_1 ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 [ ] VAR_1 = new TYPE_1 [ VAR_2 ] ; TYPE_2 VAR_3 = new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( ) { try { TYPE_1 [ ] VAR_1 = new TYPE_1 [ VAR_2 ] ; new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { new TYPE_1 ( VAR_2 , VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
---------------
Class: Remove statement
Golden example (True):
[32mExample #1[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { }[0m
Pred: public void METHOD_1 ( ) { }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( VAR_2 ) ; return METHOD_2 ( VAR_1 ) ; }[0m
Trg : private java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( VAR_2 ) ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( VAR_2 ) ; }[0m
[31mExample #2[0m
Src : public void info ( java.lang.String msg ) { if ( ( TYPE_1 . METHOD_1 ( ) ) < ( VAR_1 ) ) { return ; } <unk> ( TYPE_1 , msg ) ; }[0m
Trg : public void info ( java.lang.String msg ) { <unk> ( TYPE_1 , msg ) ; }[0m
Pred: public void info ( java.lang.String msg ) { if ( ( TYPE_1 . METHOD_1 ( ) ) < ( VAR_1 ) ) { return ; } }[0m
[31mExample #3[0m
Src : public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg > > 0 ; }[0m
Trg : public static long METHOD_1 ( long arg ) { return arg > > 0 ; }[0m
Pred: public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , 0 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; METHOD_6 ( <unk> . get ( ) , 0 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; METHOD_6 ( METHOD_6 . get ( ) , 0 ) ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; <unk> ( VAR_1 ) . <unk> ( VAR_2 ) . METHOD_6 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; if ( VAR_1 ) . METHOD_6 ( VAR_2 ) . METHOD_6 ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( <unk> , VAR_2 , VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_2 ( <unk> , <unk> ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 0 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_2 VAR_4 = new TYPE_2 ( <unk> , <unk> ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 0 ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_2 , VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) , ; VAR_5 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 0 ) ; }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
[31mExample #8[0m
Src : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { assert ( VAR_1 . METHOD_2 ( VAR_2 class ) ) == null ; return METHOD_3 ( METHOD_4 ( VAR_1 ) , VAR_1 , null ) ; }[0m
Trg : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_3 ( METHOD_4 ( VAR_1 ) , VAR_1 , null ) ; }[0m
Pred: TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { assert ( VAR_1 . METHOD_2 ( VAR_2 class ) ) == null ; return METHOD_3 ( METHOD_4 ( VAR_1 ) , null ) ; }[0m
[31mExample #9[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; }[0m
[31mExample #10[0m
Src : public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x + y ; return VAR_2 - y ; }[0m
Trg : public static int METHOD_1 ( int x , int y ) { int VAR_2 = x + y ; return VAR_2 - y ; }[0m
Pred: public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x + y ; return[0m
[31mExample #11[0m
Src : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) ) ; <unk> ( VAR_1 . METHOD_3 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( VAR_1 ) . METHOD_2 ( TYPE_1 . METHOD_2 ( ) ) ; if ( VAR_1 . METHOD_3 ( ) ) . equals ( VAR_2 ) ; }[0m
[31mExample #12[0m
Src : public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return INT_1 - ( INT_2 - arg ) ; }[0m
Trg : public static long METHOD_1 ( long arg ) { return INT_1 - ( INT_2 - arg ) ; }[0m
Pred: public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return INT_1 - ( INT_2 ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; <unk> VAR_2 = <unk> . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; <unk> VAR_2 = <unk> . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 VAR_2 ) . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }[0m
[31mExample #14[0m
Src : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( INT_1 , INT_1 ) ; }[0m
Trg : private void METHOD_1 ( ) { METHOD_3 ( INT_1 , INT_1 ) ; }[0m
Pred: private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( INT_1 , INT_1 ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( <unk> ( 1 ) ) ) ; VAR_1 . METHOD_6 ( ) ; METHOD_7 ( <unk> . get ( ) , 1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( <unk> ( 1 ) ) ) ; METHOD_7 ( <unk> . get ( ) , 1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( ( 1 ) ) ) ; METHOD_7 ( TYPE_1 . get ( ) , 1 ) ; }[0m
[31mExample #16[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; c . METHOD_3 ( null , VAR_1 , STRING_1 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; try { c . METHOD_3 ( null , VAR_1 , STRING_1 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; c . METHOD_3 ( null , VAR_1 , STRING_1 ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
[31mExample #17[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> <unk> ) { VAR_1 . METHOD_2 ( <unk> , <unk> ) ; VAR_1 . METHOD_3 ( <unk> ) ; return <unk> ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> <unk> ) { VAR_1 . METHOD_2 ( <unk> , <unk> ) ; return <unk> ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_1 TYPE_1 , java.util.Vector ( ) ) { VAR_1 . METHOD_2 ( INT_1 , ) ; return VAR_1 ; }[0m
[31mExample #18[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( true ) ; METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( <unk> . METHOD_5 ( new TYPE_2 ( VAR_3 ) ) , TYPE_3 . METHOD_6 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( true ) ; TYPE_1 . METHOD_4 ( <unk> . METHOD_5 ( new TYPE_2 ( VAR_3 ) ) , TYPE_3 . METHOD_6 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) . METHOD_3 ( true ) ; TYPE_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( new TYPE_2 ( VAR_3 ) ) , TYPE_3 . METHOD_6 ( ) ) ; }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) { protected TYPE_3 METHOD_2 ( ) { return null ; } protected TYPE_4 METHOD_3 ( ) { return null ; } } ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) { protected TYPE_3 METHOD_2 ( ) { return null ; } finally TYPE_4 METHOD_3 ( ) ; } }[0m
[31mExample #20[0m
Src : public boolean METHOD_1 ( int id , java.lang.String response ) { if ( VAR_1 ) { return VAR_2 . METHOD_2 ( response ) ; } else { return METHOD_3 ( ( ( ( STRING_1 + id ) + STRING_2 ) + response ) ) ; } }[0m
Trg : public boolean METHOD_1 ( int id , java.lang.String response ) { return VAR_2 . METHOD_2 ( response ) ; }[0m
Pred: public boolean METHOD_1 ( int id , java.lang.String response ) { if ( VAR_1 ) { return VAR_2 . METHOD_2 ( response ) ; } else { return METHOD_3 ( ( ( ( STRING_1 + id ) + STRING_2 ) ) ) ; } }[0m
[31mExample #21[0m
Src : public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x - y ; return y + VAR_2 ; }[0m
Trg : public static int METHOD_1 ( int x , int y ) { int VAR_2 = x - y ; return y + VAR_2 ; }[0m
Pred: public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x - y ; }[0m
[31mExample #22[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; <unk> . METHOD_7 ( new TYPE_1 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; <unk> . METHOD_7 ( new TYPE_1 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; ) . METHOD_7 ( new TYPE_1 ( ) ) ; }[0m
[31mExample #23[0m
Src : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) ; <unk> VAR_2 = VAR_3 ; java.util.List < TYPE_1 > VAR_4 = <unk> . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> VAR_2 = VAR_3 ; java.util.List < TYPE_1 > VAR_4 = <unk> . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) ; VAR_2 < VAR_3 ; java.util.List < TYPE_1 > VAR_4 = METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; }[0m
[31mExample #24[0m
Src : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; return VAR_2 ; }[0m
Trg : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; return VAR_2 ; }[0m
Pred: TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; return VAR_2 ; }[0m
[31mExample #25[0m
Src : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true ) ; METHOD_4 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { METHOD_3 ( true ) ; METHOD_4 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_4 ( ) ; }[0m
[31mExample #26[0m
Src : public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 class ) ; TYPE_2 . METHOD_3 ( new TYPE_3 ( ) ) ; }[0m
Trg : public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 class ) ; }[0m
Pred: public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 class ) ; TYPE_2 . METHOD_3 ( new TYPE_3 ( ) ) ; }[0m
[31mExample #27[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , INT_1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_6 ( <unk> . get ( ) , INT_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_6 ( TYPE_1 . get ( ) , INT_1 ) ; }[0m
[31mExample #28[0m
Src : public void METHOD_1 ( int VAR_1 ) { <unk> ( VAR_2 . <unk> , ( STRING_1 + VAR_1 ) ) ; }[0m
Trg : public void METHOD_1 ( int VAR_1 ) { }[0m
Pred: public void METHOD_1 ( int VAR_1 ) { if ( VAR_2 . ( STRING_1 + VAR_1 ) ) ; }[0m
[31mExample #29[0m
Src : public void METHOD_1 ( ) { if ( ( <unk> ( ) ) != null ) { super . METHOD_1 ( ) ; } else { <unk> ( null ) ; } }[0m
Trg : public void METHOD_1 ( ) { if ( ( <unk> ( ) ) != null ) { super . METHOD_1 ( ) ; } }[0m
Pred: public void METHOD_1 ( ) { if ( ( ( ( ) ) != null ) ) { super . METHOD_1 ( ) ; } } }[0m
[31mExample #30[0m
Src : public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; <unk> . METHOD_3 ( ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { <unk> . METHOD_3 ( ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; }[0m
[31mExample #31[0m
Src : public static int METHOD_1 ( int <unk> , int VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } return ( - <unk> ) - VAR_1 ; }[0m
Trg : public static int METHOD_1 ( int <unk> , int VAR_1 ) { return ( - <unk> ) - VAR_1 ; }[0m
Pred: public static int METHOD_1 ( int n , int VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } return ( - ) ; }[0m
[31mExample #32[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; <unk> . METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; TYPE_1 VAR_2 = <unk> . get ( ) ; assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; <unk> . METHOD_4 ( METHOD_5 ( ) ) ; TYPE_1 VAR_2 = <unk> . get ( ) ; assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) ) ; TYPE_1 VAR_2 = TYPE_1 . get ( ) ; assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; }[0m
[31mExample #33[0m
Src : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { METHOD_3 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { METHOD_2 ( ) ; }[0m
[31mExample #34[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; parameters . <unk> ( VAR_1 ) ; parameters . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { parameters . <unk> ( VAR_1 ) ; parameters . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; parameters . METHOD_2 ( VAR_2 ) ; parameters . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( ) . ; }[0m
[31mExample #35[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( null ) ; <unk> . METHOD_4 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_3 ( null ) ; <unk> . METHOD_4 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( null ) ; }[0m
[31mExample #36[0m
Src : public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) == ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Trg : public static int METHOD_1 ( int i ) { return ( i > INT_1 ) == ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Pred: public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) == ( METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
[31mExample #37[0m
Src : public static byte METHOD_1 ( short value ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( ( byte ) ( ( char ) ( value ) ) ) ; }[0m
Trg : public static byte METHOD_1 ( short value ) { return ( ( byte ) ( ( char ) ( value ) ) ) ; }[0m
Pred: public static byte METHOD_1 ( short value ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( ( byte ) ( value ) ) ; }[0m
[31mExample #38[0m
Src : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( <unk> ( ) ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } METHOD_7 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( <unk> ( ) ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; } METHOD_7 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( ( ( ) ) != null ) ) { METHOD_2 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_6 ( ) ; } METHOD_7 ( ) ; }[0m
[31mExample #39[0m
Src : public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
[31mExample #40[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> <unk> = new <unk> ( ) ; <unk> ( VAR_1 . METHOD_2 ( <unk> , VAR_2 ) ) . <unk> ( true ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( <unk> ) , VAR_3 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_1 . METHOD_2 ( <unk> , VAR_2 ) ) . <unk> ( true ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( <unk> ) , VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { while ( VAR_1 . METHOD_2 ( ) , VAR_2 ) . METHOD_6 ( true ) ; TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) , VAR_3 ) ; }[0m
[31mExample #41[0m
Src : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_2 ( STRING_1 ) ) ; METHOD_2 ( new TYPE_2 ( STRING_2 ) ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_2 ( STRING_1 ) ) ; }[0m
[31mExample #42[0m
Src : public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg - 0 ; }[0m
Trg : public static long METHOD_1 ( long arg ) { return arg - 0 ; }[0m
Pred: public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } }[0m
[31mExample #43[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_2 ( ) ; TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 ) ) ; }[0m
[31mExample #44[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , true ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) ; METHOD_7 ( <unk> . get ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , true ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; METHOD_7 ( <unk> . get ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) ; METHOD_7 ( METHOD_7 . get ( ) ) ; }[0m
[31mExample #45[0m
Src : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; }[0m
Trg : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; }[0m
[31mExample #46[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; }[0m
[31mExample #47[0m
Src : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( <unk> , VAR_2 , VAR_3 ) ; METHOD_2 ( INT_1 , <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( INT_1 , <unk> ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( n , VAR_2 , VAR_3 ) ; METHOD_2 ( INT_1 , INT_1 ) ; }[0m
[31mExample #48[0m
Src : public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; METHOD_3 ( ( ! VAR_1 ) ) ; }[0m
Trg : public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; }[0m
Pred: public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; METHOD_3 ( ) ; }[0m
[31mExample #49[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; return METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_3 , new TYPE_3 ( ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_3 , new TYPE_3 ( ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; return METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_3 , ; }[0m
[31mExample #50[0m
Src : public static float METHOD_1 ( float arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg / FLOAT_1 ; }[0m
Trg : public static float METHOD_1 ( float arg ) { return arg / FLOAT_1 ; }[0m
Pred: public static float METHOD_1 ( float arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } }[0m
[31mExample #51[0m
Src : public static long METHOD_1 ( long <unk> , long VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } long VAR_3 = - VAR_1 ; return ( <unk> + VAR_3 ) | ( <unk> + VAR_3 ) ; }[0m
Trg : public static long METHOD_1 ( long <unk> , long VAR_1 ) { long VAR_3 = - VAR_1 ; return ( <unk> + VAR_3 ) | ( <unk> + VAR_3 ) ; }[0m
Pred: public static long METHOD_1 ( long position , long VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } long VAR_3 = - VAR_1 ; return ( VAR_1 + VAR_3 ) | ( VAR_3 ) ; }[0m
[31mExample #52[0m
Src : public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) != ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Trg : public static int METHOD_1 ( int i ) { return ( i > INT_1 ) != ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Pred: public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) != ( METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
[31mExample #53[0m
Src : public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { file = VAR_1 ; } }[0m
Trg : public void METHOD_1 ( final java.lang.String VAR_1 ) { file = VAR_1 ; }[0m
Pred: public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { } }[0m
[31mExample #54[0m
Src : public static void METHOD_1 ( java.lang.String [ ] args ) { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; <unk> . METHOD_3 ( new TYPE_2 ( ) ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String [ ] args ) { <unk> . METHOD_3 ( new TYPE_2 ( ) ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.String [ ] args ) { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; METHOD_3 ( new TYPE_2 ( ) ) ; }[0m
[31mExample #55[0m
Src : protected void METHOD_1 ( <unk> VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this ) ; }[0m
Trg : protected void METHOD_1 ( <unk> VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; }[0m
Pred: protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; }[0m
[31mExample #56[0m
Src : public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . <unk> ( ) . equals ( VAR_2 ) ) ; }[0m
Trg : private static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . <unk> ( ) . equals ( VAR_2 ) ) ; }[0m
Pred: public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . equals ( VAR_2 ) ) ; }[0m
[31mExample #57[0m
Src : public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; }[0m
Trg : public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; return METHOD_2 ( ) ; }[0m
---------------
Class: Rename method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object ) ) { TYPE_1 TYPE_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( ) ) ; METHOD_2 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object result ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( result ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_2 ( ) . <unk> ( VAR_1 ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object result ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( result ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_2 ( ) . <unk> ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object position , java.lang.Object result ) { java.util.List < java.util.Vector > VAR_1 = ( ( java.util.List < < > ) ( result ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_2 ( ) . equals ( VAR_1 ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; }[0m
Pred: public void METHOD_2 ( java.lang.Object VAR_1 , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( ( ( TYPE_1 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ; VAR_2 = VAR_1 ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( ( ( TYPE_1 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ; VAR_2 = VAR_1 ; }[0m
Pred: public void METHOD_1 ( java.lang.Object position , java.lang.Object ) ) { java.util.List < java.util.Vector > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_1 . java.lang.Math.random ( ) ) ) . ( ) ) ) ; VAR_2 = VAR_1 ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 . METHOD_2 ( target ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 . METHOD_2 ( target ) ; }[0m
Pred: public void METHOD_2 ( java.lang.Object target , java.lang.Object ) ) { TYPE_1 . METHOD_2 ( target ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object ) ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( ) ) ) ; VAR_1 . METHOD_3 ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 ) ( <unk> ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 ) ( <unk> ) ) ) ; }[0m
Pred: public void METHOD_2 ( java.lang.Object target , java.lang.Object ) ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 ) ( ) ) ) ; }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ( ( TYPE_2 . METHOD_3 ( ) . size ( ) ) == 0 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . assertEquals ( 0 , TYPE_2 . METHOD_3 ( ) . size ( ) ) ; }[0m
Pred: public void METHOD_2 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ( ( TYPE_2 . METHOD_3 ( ) . size ( ) ) == 0 ) ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object ) ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < java.util.Vector > > = ( ( java.util.ArrayList < TYPE_1 > ) ( ) ) ; VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #9[0m
Src : boolean METHOD_1 ( ) ;[0m
Trg : boolean <unk> ( ) ;[0m
Pred: boolean init ( ) ;[0m
[31mExample #10[0m
Src : public void METHOD_1 ( ) { <unk> . <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Pred: public void METHOD_2 ( ) { if . size = VAR_1 . METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( TYPE_1 ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( TYPE_1 ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Pred: public void METHOD_2 ( java.lang.Object target , java.lang.Object ) ) { VAR_1 = ( ( TYPE_1 ) ( TYPE_1 ) ) ; METHOD_2 ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object ) ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_2 VAR_2 = ( ( java.lang.Math.random ) ( ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; }[0m
---------------
Class: Rename parameter
Golden example (False):
[31mExample #1[0m
Src : public native float METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , <unk> ;[0m
Trg : public native float METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , <unk> ;[0m
Pred: public native float METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , TYPE_1 ;[0m
+++++++++++++++
[31mExample #1[0m
Src : public native boolean METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , <unk> ;[0m
Trg : public native boolean METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , <unk> ;[0m
Pred: public native boolean METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , TYPE_1 ;[0m
[31mExample #2[0m
Src : public void METHOD_1 ( <unk> type ) { }[0m
Trg : public void METHOD_1 ( <unk> method ) { }[0m
Pred: public void METHOD_1 ( TYPE_2 type ) { }[0m
[31mExample #3[0m
Src : TYPE_1 id ( java.lang.String VAR_1 ) throws TYPE_2 ;[0m
Trg : TYPE_1 id ( java.lang.String id ) throws TYPE_2 ;[0m
Pred: TYPE_1 id ( java.lang.String name ) throws TYPE_2 ;[0m
[31mExample #4[0m
Src : public int METHOD_1 ( int VAR_1 , <unk> . <unk> <unk> ) ;[0m
Trg : public int METHOD_1 ( int VAR_1 , <unk> . <unk> <unk> ) ;[0m
Pred: public int METHOD_1 ( int VAR_1 , java.util.Vector . f ) ;[0m
---------------
Class: Rename variable
Golden example (True):
[32mExample #1[0m
Src : public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_2 = VAR_1 ; }[0m
Trg : public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_1 = VAR_1 ; }[0m
Pred: public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_1 = VAR_1 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( this ) ; }[0m
Trg : private native java.lang.String METHOD_1 ( ) ;[0m
Pred: private java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( this ) ; }[0m
---------------
Class: Replace fully qualified name with import or vice versa
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_3 ) ; METHOD_3 ( STRING_4 ) ; } catch ( TYPE_2 VAR_1 ) { } }[0m
Trg : public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_3 ) ; <unk> . METHOD_3 ( STRING_4 ) ; } catch ( TYPE_2 VAR_1 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_3 ) ; METHOD_3 ( STRING_4 ) ; } catch ( TYPE_2 TYPE_2 VAR_1 ) { } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) ) ; assertEquals ( VAR_2 , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) ) ; <unk> ( VAR_2 , true ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; while ( VAR_5 ) . METHOD_4 ( ) . METHOD_4 ( VAR_1 ) ; assertEquals ( VAR_2 , true ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_4 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_4 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_4 ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { TYPE_1 key = new TYPE_1 ( ) ; assertEquals ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 key = new TYPE_1 ( ) ; <unk> ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 key = new TYPE_1 ( ) ; assertEquals ( STRING_1 , key . . METHOD_2 ( ) , ( - INT_1 ) ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( long VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 <unk> ) { VAR_2 . <unk> ( STRING_1 ) ; } }[0m
Trg : public static void METHOD_1 ( long VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 <unk> ) { java.lang.System.out.println ( STRING_1 ) ; } }[0m
Pred: public static void METHOD_1 ( long VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 TYPE_2 ) { VAR_2 . VAR_2 . equals ( STRING_1 ) ; } }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( TYPE_1 <unk> ) throws java.lang.Exception { TYPE_2 <unk> = new TYPE_2 ( ) ; <unk> . METHOD_2 ( <unk> , <unk> ) ; assertEquals ( VAR_1 , <unk> . <unk> ( ) ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 <unk> ) throws java.lang.Exception { TYPE_2 <unk> = new TYPE_2 ( ) ; <unk> . METHOD_2 ( <unk> , <unk> ) ; <unk> ( VAR_1 , <unk> . <unk> ( ) ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { TYPE_2 . = new TYPE_2 ( ) ; ) . METHOD_2 ( context , TYPE_1 ) ; assertEquals ( VAR_1 , VAR_1 . . METHOD_2 ( ) ) ; }[0m
[31mExample #6[0m
Src : private static < TYPE_1 > void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { int length = VAR_1 . length ; assertEquals ( ( STRING_1 + length ) , 0 , length ) ; }[0m
Trg : private static < TYPE_1 > void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { int length = VAR_1 . length ; <unk> ( ( STRING_1 + length ) , 0 , length ) ; }[0m
Pred: private static < TYPE_1 > void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { int length = VAR_1 . length . length ; assertEquals ( ( STRING_1 + length ) , 0 , length ) ; }[0m
---------------
Class: Replace generic specification with diamond operator
Golden example (True):
[32mExample #1[0m
Src : public TYPE_1 < TYPE_2 > get ( ) { return new TYPE_1 < TYPE_2 > ( key , TYPE_3 . METHOD_1 ( VAR_1 , type ) , STRING_1 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > get ( ) { return new TYPE_1 ( key , TYPE_3 . METHOD_1 ( VAR_1 , type ) , STRING_1 ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > get ( ) { return new TYPE_1 ( key , TYPE_3 . METHOD_1 ( VAR_1 , type ) , STRING_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { return <unk> ( new TYPE_2 < <unk> > ( VAR_1 , VAR_2 . <unk> class ) , false ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return <unk> ( new TYPE_2 ( VAR_1 , VAR_2 . <unk> class ) , false ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return ( new TYPE_2 < > ( VAR_1 , VAR_2 . class ) , false ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = METHOD_2 ( VAR_2 class , VAR_3 , new <unk> ( VAR_4 ) ) ; return new TYPE_1 < TYPE_2 > ( VAR_1 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = METHOD_2 ( VAR_2 class , VAR_3 , new <unk> ( VAR_4 ) ) ; return new TYPE_1 ( VAR_1 ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = METHOD_2 ( VAR_2 class , VAR_3 , new ( VAR_4 ) ) ; return new TYPE_1 ( VAR_1 ) ; }[0m
[31mExample #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 < <unk> > ( VAR_3 , VAR_4 . <unk> class ) ; return METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , new TYPE_3 ( ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 , VAR_4 . <unk> class ) ; return METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , new TYPE_3 ( ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 , VAR_4 . class ) ; return METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , new TYPE_3 ( ) ) ; }[0m
[31mExample #4[0m
Src : public TYPE_1 < java.lang.String > METHOD_1 ( <unk> id ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_3 < java.lang.String > ( ) , METHOD_4 ( id ) ) ) ; }[0m
Trg : public TYPE_1 < java.lang.String > METHOD_1 ( <unk> id ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_3 ( ) , METHOD_4 ( id ) ) ) ; }[0m
Pred: public TYPE_1 < java.lang.String > METHOD_1 ( java.lang.Thread id ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , new java.lang.String ( ) , METHOD_4 ( id ) ) ) ; }[0m
[31mExample #5[0m
Src : protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( TYPE_2 . <unk> ( ) . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; }[0m
Trg : protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList ( TYPE_2 . <unk> ( ) . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; }[0m
Pred: protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList ( TYPE_2 . METHOD_2 ( ) . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; }[0m
[31mExample #6[0m
Src : public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 value , <unk> . <unk> <unk> , TYPE_1 <unk> ) { return new TYPE_2 < TYPE_1 > ( value , <unk> . toString ( ) , <unk> ) ; }[0m
Trg : public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 value , <unk> . <unk> <unk> , TYPE_1 <unk> ) { return new TYPE_2 ( value , <unk> . toString ( ) , <unk> ) ; }[0m
Pred: public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 , TYPE_1 . status , TYPE_1 ) { TYPE_1 { new TYPE_2 < TYPE_1 > ( value , . toString ( ) , VAR_1 ) ; }[0m
[31mExample #7[0m
Src : protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > value = new TYPE_1 < java.lang.String > ( ) ; value . <unk> ( VAR_1 ) ; value . <unk> ( STRING_1 ) ; return value ; }[0m
Trg : protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > value = new TYPE_1 ( ) ; value . <unk> ( VAR_1 ) ; value . <unk> ( STRING_1 ) ; return value ; }[0m
Pred: protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > value = new TYPE_1 ( ) ; value . VAR_1 ( VAR_1 ) ; value . ( STRING_1 ) ; return value ; }[0m
---------------
Class: Replace invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . get ( STRING_1 ) ; <unk> ( VAR_2 , <unk> . METHOD_2 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . get ( STRING_1 ) ; <unk> ( <unk> . METHOD_2 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 TYPE_1 VAR_1 . get ( STRING_1 ) ; if ( VAR_1 . METHOD_2 ( ) ) . METHOD_2 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . METHOD_2 ( STRING_1 ) ; <unk> ( VAR_2 , <unk> . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . METHOD_2 ( STRING_1 ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 TYPE_1 VAR_1 = METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ; java.lang.System.out.println ( VAR_1 . METHOD_2 ( ) ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_1 , VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) . <unk> ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { while ( VAR_1 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 . get ( ) ) ) + STRING_2 ) ) . METHOD_2 ( ) ) . METHOD_3 ( ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , false ) ; METHOD_4 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 . getName ( ) , VAR_2 , false ) ; METHOD_4 ( result ) ; }[0m
Pred: public void METHOD_1 ( ) { for result = METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , false ) ; METHOD_4 ( ) . METHOD_2 ( ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; VAR_1 = STRING_1 ; TYPE_2 <unk> = VAR_2 . put ( STRING_2 , <unk> ) ; <unk> ( VAR_3 , <unk> . METHOD_2 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; VAR_1 = STRING_1 ; TYPE_2 <unk> = VAR_2 . put ( STRING_2 , <unk> ) ; <unk> ( <unk> . METHOD_2 ( ) ) . <unk> ( VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 TYPE_1 = new TYPE_1 ( ) ; VAR_1 = STRING_1 ; TYPE_2 VAR_1 = VAR_2 . put ( STRING_2 ) ; if ( VAR_3 . METHOD_2 ( ) , TYPE_1 . METHOD_2 ( ) ) ; }[0m
[31mExample #5[0m
Src : final byte METHOD_1 ( int offset ) { return VAR_1 . METHOD_2 ( ( offset + ( <unk> ) ) ) ; }[0m
Trg : final byte METHOD_1 ( int offset ) { return VAR_1 . METHOD_1 ( ( offset + ( <unk> ) ) ) ; }[0m
Pred: final byte METHOD_1 ( int offset ) { return ( offset . METHOD_2 ( ) ) && ( VAR_1 . METHOD_2 ( offset ) ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 <unk> = METHOD_3 ( STRING_1 ) ; <unk> ( STRING_2 , <unk> . METHOD_4 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 <unk> = METHOD_3 ( STRING_1 ) ; <unk> ( <unk> . METHOD_4 ( ) ) . <unk> ( STRING_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; if ( TYPE_1 . METHOD_4 ( ) ) . METHOD_2 ( ) ; }[0m
[31mExample #7[0m
Src : public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 < java.lang.String > METHOD_5 ( VAR_2 ) ) ; }[0m
Trg : public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 < java.lang.String > getValue ( VAR_2 ) ) ; }[0m
Pred: public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) . METHOD_4 ( ) , VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . delete ( METHOD_2 ( ) ) ; <unk> ( VAR_2 , <unk> . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . delete ( METHOD_2 ( ) ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 TYPE_1 VAR_1 . delete ( METHOD_2 ( ) ) ; if ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { <unk> ( STRING_1 , VAR_1 . METHOD_2 ( STRING_2 , null , STRING_3 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( STRING_2 , null , STRING_3 ) ) . <unk> ( STRING_1 ) ; }[0m
Pred: public void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( STRING_2 , null ) , VAR_1 . METHOD_2 ( STRING_2 ) ) ) ; }[0m
[31mExample #10[0m
Src : public boolean METHOD_1 ( java.lang.String VAR_1 , <unk> . <unk> VAR_2 ) { final TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } return false ; }[0m
Trg : public boolean METHOD_1 ( java.lang.String VAR_1 , <unk> . <unk> VAR_2 ) { final TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; } return false ; }[0m
Pred: public boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 . VAR_2 ) { final TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_2 ( VAR_1 . METHOD_2 ( ) ) ; } return false ; }[0m
[31mExample #11[0m
Src : protected void METHOD_1 ( ) { VAR_1 . add ( STRING_1 , TYPE_1 . <unk> ( ) . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . add ( STRING_2 , METHOD_3 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { VAR_1 . put ( STRING_1 , TYPE_1 . <unk> ( ) . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . put ( STRING_2 , METHOD_3 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { VAR_1 . add ( STRING_1 TYPE_1 . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . add ( STRING_2 , METHOD_3 ( ) . METHOD_2 ( ) ) ; VAR_1 . add ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . METHOD_4 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . getName ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.Vector result = TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 . get ( ) , VAR_2 . METHOD_4 ( ) ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . METHOD_4 ( ) ) ; }[0m
Trg : public void METHOD_1 ( <unk> item , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . METHOD_4 ( ) ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( ) . METHOD_4 ( METHOD_4 ( ) , VAR_1 . METHOD_3 ( ) ) ; }[0m
[31mExample #14[0m
Src : public TYPE_1 . <unk> METHOD_1 ( ) { if ( ( TYPE_2 . METHOD_2 ( <unk> . METHOD_3 ( ) ) ) && ( VAR_1 < java.lang.Boolean > METHOD_4 ( VAR_2 ) ) ) { return new TYPE_1 . <unk> ( VAR_3 ) ; } return VAR_4 ; }[0m
Trg : public TYPE_1 . <unk> METHOD_1 ( ) { if ( ( TYPE_2 . METHOD_2 ( <unk> . METHOD_3 ( ) ) ) && ( VAR_1 < java.lang.Boolean > getValue ( VAR_2 ) ) ) { return new TYPE_1 . <unk> ( VAR_3 ) ; } return VAR_4 ; }[0m
Pred: public TYPE_1 . init ( ) { if ( ( TYPE_2 . METHOD_2 ( . METHOD_3 ( ) ) ) && ( VAR_1 < > ( VAR_2 . METHOD_4 ( ) ) ) ) { return new TYPE_1 ( VAR_3 . METHOD_2 ( ) ) ; } return VAR_4 ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_2 ( value ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { this . METHOD_2 ( value ) ; this . VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #16[0m
Src : public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . getName ( ) ; } return VAR_1 ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; METHOD_2 ( ) ; } return VAR_1 ; }[0m
[31mExample #17[0m
Src : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? VAR_1 . METHOD_3 ( ) : null ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? VAR_1 . METHOD_1 ( ) : null ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { return ( TYPE_1 . METHOD_3 ( ) ) : VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #18[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < <unk> > <unk> = ( ( TYPE_2 < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < <unk> > <unk> = ( ( TYPE_2 < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object TYPE_1 ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < TYPE_1 > > ( ( ( TYPE_2 < TYPE_2 > ( ) ) ) ) ; VAR_1 . METHOD_2 ( METHOD_2 ( ) ) ; }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 . <unk> ( ) , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( result ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( ) . METHOD_2 ( ) ; }[0m
[31mExample #20[0m
Src : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } super . METHOD_1 ( VAR_1 , new <unk> ( METHOD_2 ( ) . getId ( ) ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } super . METHOD_1 ( VAR_1 , new <unk> ( <unk> ( ) . getId ( ) ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { if ( ( ( ( ) ) == null ) ) { return ; } super . METHOD_1 ( VAR_1 , ( METHOD_2 ( ) . getId ( ) ) ) ; }[0m
[31mExample #21[0m
Src : private TYPE_1 METHOD_1 ( TYPE_2 <unk> ) { TYPE_3 params = new TYPE_3 ( true ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( <unk> ( ) . METHOD_4 ( ) ) ; return METHOD_5 ( VAR_2 , params , <unk> ) ; }[0m
Trg : private TYPE_1 METHOD_1 ( TYPE_2 <unk> ) { TYPE_3 params = new TYPE_3 ( true ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( <unk> ( ) . <unk> ( ) ) ; return METHOD_5 ( VAR_2 , params , <unk> ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( TYPE_2 state ) { TYPE_3 params = new TYPE_3 ( true ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( ( ) . METHOD_4 ( ) ) ; return METHOD_5 ( VAR_2 . METHOD_4 ( ) , VAR_1 ) ; }[0m
[31mExample #22[0m
Src : public int METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; }[0m
Trg : public int METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { return VAR_1 . getName ( ) . METHOD_3 ( VAR_2 . getName ( ) ) ; }[0m
Pred: public int METHOD_1 ( android.content.Context VAR_1 , TYPE_1 VAR_2 ) { return METHOD_3 ( VAR_2 . METHOD_2 ( ) . METHOD_2 ( VAR_1 . METHOD_2 ( ) ) ) ; }[0m
[31mExample #23[0m
Src : protected int METHOD_1 ( ) { return VAR_1 < java.lang.Integer > METHOD_2 ( VAR_2 ) ; }[0m
Trg : protected int METHOD_1 ( ) { return VAR_1 < java.lang.Integer > getValue ( VAR_2 ) ; }[0m
Pred: protected int METHOD_1 ( ) { return VAR_1 < TYPE_1 > ( METHOD_2 ( VAR_2 ) ) ; }[0m
[31mExample #24[0m
Src : protected TYPE_1 < ? > METHOD_1 ( TYPE_2 . <unk> VAR_1 , TYPE_3 parameters ) { return TYPE_4 . METHOD_2 ( VAR_1 , parameters ) ; }[0m
Trg : protected TYPE_1 < ? > METHOD_1 ( TYPE_2 . <unk> VAR_1 , TYPE_3 parameters ) { return TYPE_4 . METHOD_1 ( VAR_1 , parameters ) ; }[0m
Pred: protected TYPE_1 < ? > METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 parameters ) { return TYPE_4 . METHOD_2 ( VAR_1 . getId ( ) , VAR_2 ) ; }[0m
[31mExample #25[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; <unk> ( VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; <unk> ( VAR_1 . getValue ( VAR_2 , VAR_3 ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 . METHOD_3 ( VAR_3 ) ) . METHOD_2 ( VAR_4 ) ; TYPE_2 . METHOD_4 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
[31mExample #26[0m
Src : public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) . get ( VAR_1 ) ; }[0m
[31mExample #27[0m
Src : protected java.lang.String METHOD_1 ( <unk> <unk> ) { return <unk> . METHOD_2 ( ) ; }[0m
Trg : protected java.lang.String METHOD_1 ( <unk> <unk> ) { return <unk> . getName ( ) ; }[0m
Pred: protected java.lang.String METHOD_1 ( java.lang.Thread ) { return TYPE_1 . METHOD_2 ( ) ; METHOD_2 ( ) ; }[0m
[31mExample #28[0m
Src : public java.lang.Boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public java.lang.Boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public java.lang.Boolean METHOD_1 ( ) { return this . METHOD_2 ( ) ; return this . VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #29[0m
Src : public void METHOD_1 ( java.lang.String <unk> ) { METHOD_2 ( ) . METHOD_3 ( <unk> ) ; }[0m
Trg : public void METHOD_1 ( java.lang.String <unk> ) { METHOD_2 ( ) . METHOD_1 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String state ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_2 ( ) ; }[0m
[31mExample #30[0m
Src : public boolean METHOD_1 ( <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . getName ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.Thread VAR_1 ) { return METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) . equals ( ) ) ; }[0m
[31mExample #31[0m
Src : public void METHOD_1 ( ) { <unk> . METHOD_2 ( VAR_1 ) ; <unk> result = <unk> . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_5 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> . METHOD_2 ( VAR_1 ) ; <unk> result = <unk> . METHOD_3 ( VAR_1 . getName ( ) ) ; TYPE_1 . METHOD_5 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; }[0m
Pred: public void METHOD_1 ( ) { if ( METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_1 ) ) ; TYPE_1 . METHOD_2 ( VAR_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_5 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; }[0m
---------------
Class: Replace statement
Golden example (True):
[32mExample #1[0m
Src : public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( java.lang.Integer . METHOD_2 ( VAR_1 ) ) ; }[0m
Trg : public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( VAR_1 ) ; }[0m
Pred: public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; new TYPE_2 ( VAR_1 . <unk> ( ) ) . METHOD_3 ( ) ; }[0m
Trg : public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; super . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( final TYPE_1 VAR_1 ) { new ( true ) ; new TYPE_2 ( ) . METHOD_3 ( ) ; }[0m
[31mExample #2[0m
Src : public static long METHOD_1 ( ) { long VAR_1 = <unk> . METHOD_2 ( INT_1 ) ; int VAR_2 = <unk> . METHOD_3 ( <unk> ) ; return VAR_1 & VAR_2 ; }[0m
Trg : public static long METHOD_1 ( ) { long VAR_1 = <unk> ; int VAR_2 = <unk> ; return VAR_1 & VAR_2 ; }[0m
Pred: public static long METHOD_1 ( ) { long VAR_1 = INT_1 ; int VAR_2 = VAR_1 . METHOD_3 ( ) ; return VAR_1 & VAR_2 ; }[0m
[31mExample #3[0m
Src : public boolean METHOD_1 ( ) { return ( ! ( METHOD_2 ( ) ) ) && ( ! ( TYPE_1 . equals ( METHOD_3 ( ) ) ) ) ; }[0m
Trg : public boolean METHOD_1 ( ) { return ! ( METHOD_2 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( ) { return ( ! ( METHOD_2 ( ) ) ) && ( ! ( METHOD_3 ( ) ) ) ; }[0m
---------------
Class: unclear
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { <unk> = METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 , STRING_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 , STRING_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { if ( METHOD_2 ( VAR_1 ) ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 , STRING_1 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected byte METHOD_1 ( ) throws java.io.IOException { return ( ( byte ) ( METHOD_2 ( ) ) ) ; }[0m
Trg : protected native byte METHOD_1 ( ) throws java.io.IOException ;[0m
Pred: protected byte METHOD_1 ( ) throws java.io.IOException { return ( ( byte ) ( METHOD_2 ( ) ) ) ; }[0m
[31mExample #2[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_2 ( VAR_2 ) . METHOD_2 ( VAR_1 , VAR_3 . <unk> ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 . <unk> ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_2 ( VAR_2 ) . METHOD_2 ( VAR_1 , VAR_3 . ) ; }[0m
[31mExample #3[0m
Src : public TYPE_1 < java.lang.String > METHOD_1 ( ) { METHOD_2 ( ) ; }[0m
Trg : public TYPE_1 < java.lang.String > METHOD_1 ( ) { return METHOD_2 ( ) ; }[0m
Pred: public TYPE_1 < java.lang.String > METHOD_1 ( ) { METHOD_2 ( ) ; }[0m
---------------
================
Duration: 0:04:55.378906

Start conducting one shot learning experiment for Tufano Labeled 50 100 Code Changes...
Top-1 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 1 / 56 = 0.017857142857142856
Top-3 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 1 / 56 = 0.017857142857142856
Top-5 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 1 / 56 = 0.017857142857142856
Top-10 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 1 / 56 = 0.017857142857142856
Top-50 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 1 / 56 = 0.017857142857142856

Top-1 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 1 / 188 = 0.005319148936170213
Top-3 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 3 / 188 = 0.015957446808510637
Top-5 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 3 / 188 = 0.015957446808510637
Top-10 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 4 / 188 = 0.02127659574468085
Top-50 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 5 / 188 = 0.026595744680851064
================
Correct Examples
Class: Change parameter type
Golden example (False):
[31mExample #1[0m
Src : static boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
Trg : static boolean METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
Pred: static boolean METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; return true ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : static int METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return 0 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }[0m
Trg : static long METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return 0 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }[0m
Pred: static long METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return 0 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }[0m
---------------
================
================
Incorrect Examples
Class: Add braces to if statement
Golden example (False):
[31mExample #1[0m
Src : public int METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return VAR_2 ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) return VAR_2 ; return <unk> . METHOD_1 ( ) ; }[0m
Trg : public int METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return VAR_2 ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) { return VAR_2 ; } return <unk> . METHOD_1 ( ) ; }[0m
Pred: public int METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { if ( TYPE_2 . context , STRING_1 ) ; } return VAR_2 ; } TYPE_2 { METHOD_3 ( ) ; if ( VAR_2 == null ) return return ; } return METHOD_1 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return false ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) return false ; return <unk> . METHOD_1 ( VAR_1 , VAR_2 ) ; }[0m
Trg : public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return false ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) { return false ; } return <unk> . METHOD_1 ( VAR_1 , VAR_2 ) ; }[0m
Pred: public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { if ( TYPE_2 . METHOD_2 ( STRING_1 ) ) ; } return false ; } TYPE_2 { METHOD_3 ( ) ; return false . METHOD_1 ( VAR_1 , VAR_2 ) ; }[0m
[31mExample #2[0m
Src : private synchronized void METHOD_1 ( byte [ ] <unk> , boolean VAR_1 ) { if ( VAR_2 ) <unk> ( VAR_3 . <unk> , ( STRING_1 + VAR_1 ) ) ; <unk> msg = VAR_4 . METHOD_2 ( VAR_5 ) ; <unk> = <unk> ; <unk> = ( VAR_1 ) ? 1 : 0 ; VAR_4 . METHOD_3 ( msg ) ; }[0m
Trg : private synchronized void METHOD_1 ( byte [ ] <unk> , boolean VAR_1 ) { if ( VAR_2 ) { <unk> ( VAR_3 . <unk> , ( STRING_1 + VAR_1 ) ) ; } <unk> msg = VAR_4 . METHOD_2 ( VAR_5 ) ; <unk> = <unk> ; <unk> = ( VAR_1 ) ? 1 : 0 ; VAR_4 . METHOD_3 ( msg ) ; }[0m
Pred: private synchronized void METHOD_1 ( byte [ ] VAR_1 , boolean VAR_1 ) { if ( VAR_2 ) { ( VAR_3 . VAR_3 , ( STRING_1 + VAR_1 ) ) ; ) { msg = VAR_4 . METHOD_2 ( VAR_5 ) ; } = ( VAR_1 ) ? 1 : 0 ; VAR_4 . METHOD_3 ( msg ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( TYPE_1 <unk> , java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( <unk> ) ) ; TYPE_4 <unk> = METHOD_2 ( ) ; if ( <unk> == null ) return ; <unk> . METHOD_1 ( <unk> , VAR_1 , args ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 <unk> , java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( <unk> ) ) ; TYPE_4 <unk> = METHOD_2 ( ) ; if ( <unk> == null ) { return ; } <unk> . METHOD_1 ( <unk> , VAR_1 , args ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( ) ) ; TYPE_4 = METHOD_2 ( ) ; if ( if == null ) { return ; } . METHOD_1 ( VAR_1 , VAR_1 , args ) ; }[0m
---------------
Class: Add parameter in the method/constructor invocation
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( <unk> ) ; <unk> ( VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , TYPE_3 . <unk> ( VAR_4 class ) ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( <unk> ) ; <unk> ( VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , TYPE_3 . <unk> ( ) ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object ) ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , . ( ( VAR_4 class ) ) ) . . ( VAR_2 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( java.lang.String name ) { TYPE_3 < TYPE_1 < TYPE_2 > . VAR_1 > i = VAR_2 . METHOD_2 ( ) ; while ( i . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 > . VAR_1 <unk> = i . METHOD_4 ( ) ; if ( VAR_3 . equals ( name ) ) return <unk> ; } <unk> ( TYPE_1 . <unk> , ( STRING_1 + name ) ) ; return null ; }[0m
Trg : TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( java.lang.String name ) { synchronized ( VAR_2 ) { TYPE_3 < TYPE_1 < TYPE_2 > . VAR_1 > i = VAR_2 . METHOD_2 ( ) ; while ( i . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 > . VAR_1 <unk> = i . METHOD_4 ( ) ; if ( VAR_3 . equals ( name ) ) return <unk> ; } } <unk> ( TYPE_1 . <unk> , ( STRING_1 + name ) ) ; return null ; }[0m
Pred: TYPE_1 < TYPE_2 > . VAR_1 ( java.lang.String name ) { TYPE_3 < TYPE_1 < TYPE_2 > . VAR_1 > VAR_1 = VAR_2 . METHOD_2 ( ) ; while ( i . METHOD_3 ( ) ) ; if ( VAR_3 . METHOD_4 ( ) ) return ; } TYPE_1 . METHOD_3 ( ) ; return null ; }[0m
[31mExample #2[0m
Src : public java.lang.String METHOD_1 ( int <unk> , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } final TYPE_2 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } else { return null ; } }[0m
Trg : public java.lang.String METHOD_1 ( int <unk> , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , <unk> , VAR_1 , STRING_1 ) ) ) { return null ; } final TYPE_2 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } else { return null ; } }[0m
Pred: public java.lang.String METHOD_1 ( int VAR_1 , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } final TYPE_2 VAR_3 = METHOD_3 ( ) ; if ( VAR_3 != null ) { return VAR_3 ; } return null ; }[0m
[31mExample #3[0m
Src : private void METHOD_1 ( <unk> VAR_1 ) { <unk> ( VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_2 . METHOD_4 ( TYPE_1 . <unk> ( VAR_4 . <unk> class ) ) ) . <unk> ( TYPE_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Trg : private void METHOD_1 ( <unk> VAR_1 ) { <unk> ( VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_2 . METHOD_4 ( TYPE_1 . <unk> ( ) ) ) . <unk> ( TYPE_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Pred: private void METHOD_1 ( ) VAR_1 ) { if ( VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) . ( VAR_3 ) ; if ( VAR_2 . METHOD_4 ( TYPE_1 . METHOD_2 ( ) . class ) ) . ) ( TYPE_2 . METHOD_5 ( VAR_1 ) ; }[0m
[31mExample #4[0m
Src : protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . <unk> ( ) . <unk> ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_3 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . METHOD_5 ( ) . get ( METHOD_2 ( ) . <unk> ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_8 ( ) , null ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . <unk> ( ) . <unk> ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_3 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . METHOD_5 ( ) . get ( METHOD_2 ( ) . <unk> ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_8 ( ) ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_2 ( ) . METHOD_2 ( ) , ( ( ) . METHOD_2 ( ) . METHOD_6 ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) . METHOD_2 ( ) . METHOD_7 ( ) ) . METHOD_7 ( ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_5 ( VAR_2 , <unk> . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . <unk> ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( <unk> . METHOD_8 ( ) , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_5 ( VAR_2 , <unk> . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . <unk> ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( <unk> . METHOD_8 ( ) , VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) { if = METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; . METHOD_7 ( VAR_2 . METHOD_6 ( ) ) ; TYPE_4 . assertEquals ( ) . METHOD_7 ( ) ; }[0m
[31mExample #6[0m
Src : public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { synchronized ( VAR_4 ) { long VAR_5 = TYPE_2 . METHOD_2 ( ) ; try { return VAR_6 . METHOD_3 ( METHOD_4 ( this , VAR_1 ) , VAR_2 , VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( VAR_5 ) ; } } }[0m
Trg : public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { synchronized ( VAR_4 ) { long VAR_5 = TYPE_2 . METHOD_2 ( ) ; try { return VAR_6 . METHOD_3 ( METHOD_4 ( this , VAR_1 , true ) , VAR_2 , VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( VAR_5 ) ; } } }[0m
Pred: public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { synchronized ( VAR_4 ) { long VAR_5 = METHOD_2 ( ) ; try { return VAR_6 . METHOD_3 ( METHOD_4 ( ) , VAR_1 , VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( ) ; } } }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) { if = METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_7 ( ) ; }[0m
[31mExample #8[0m
Src : private void METHOD_1 ( TYPE_1 <unk> , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = TYPE_5 . METHOD_2 ( <unk> , VAR_2 , VAR_3 , VAR_1 ) . METHOD_3 ( ) ; TYPE_6 <unk> = new TYPE_6 ( <unk> , VAR_4 ) ; VAR_5 . METHOD_4 ( <unk> . METHOD_5 ( ) , <unk> ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 <unk> , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = TYPE_5 . METHOD_2 ( <unk> , VAR_2 , VAR_3 , VAR_1 ) . METHOD_3 ( ) ; TYPE_6 <unk> = new TYPE_6 ( <unk> , VAR_4 , 0 ) ; VAR_5 . METHOD_4 ( <unk> . METHOD_5 ( ) , <unk> ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 TYPE_4 = TYPE_5 . METHOD_2 ( VAR_1 , VAR_2 , VAR_1 ) . METHOD_3 ( ) ; TYPE_6 = new TYPE_6 ( ) ; VAR_5 . METHOD_4 ( ) . METHOD_5 ( ) ; }[0m
[31mExample #9[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int <unk> ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } TYPE_3 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( ) ; } return null ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int <unk> ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 , <unk> , VAR_1 , STRING_1 ) ) ) { return null ; } TYPE_3 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( ) ; } return null ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , ) ) ) { return null ; } TYPE_3 VAR_3 = METHOD_3 ( ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( ) ; } return null ; }[0m
---------------
Class: Add statement
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) . <unk> ( new <unk> ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = <unk> . METHOD_3 ( STRING_2 ) ; if ( node != null ) { if ( TYPE_3 . equals ( <unk> ( VAR_2 ) ) ) { TYPE_3 = <unk> ( VAR_3 ) ; } VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 . METHOD_5 ( TYPE_3 ) ) ; } }[0m
Trg : protected void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) . <unk> ( new <unk> ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = <unk> . METHOD_3 ( STRING_2 ) ; if ( node != null ) { VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 . METHOD_5 ( TYPE_3 ) ) ; } }[0m
Pred: protected void METHOD_1 ( TYPE_1 ) { VAR_1 . METHOD_2 ( ) . METHOD_6 ( new TYPE_2 ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = TYPE_1 . METHOD_3 ( STRING_2 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , <unk> ) ; <unk> . METHOD_4 ( VAR_4 , VAR_5 ) ; <unk> . METHOD_5 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_6 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_7 ( VAR_5 ) ; VAR_1 . METHOD_8 ( ) ; METHOD_9 ( ) ; VAR_1 . METHOD_10 ( ) ; }[0m
Trg : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , <unk> ) ; <unk> . METHOD_4 ( VAR_4 , VAR_5 ) ; <unk> . METHOD_5 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_6 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_7 ( VAR_5 ) ; VAR_1 . METHOD_8 ( ) ; METHOD_9 ( ) ; <unk> . METHOD_10 ( ) ; VAR_1 . METHOD_10 ( ) ; }[0m
Pred: public void init ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_6 ( VAR_5 , VAR_5 ) ; METHOD_7 ( ) ; VAR_1 . METHOD_7 ( ) ; }[0m
---------------
Class: Add/Remove parameter
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = METHOD_2 ( key ) ; int VAR_3 = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; java.lang.String VAR_4 = key . METHOD_4 ( 0 , VAR_3 ) ; VAR_5 = TYPE_4 . METHOD_5 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) { return null ; } return VAR_6 ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = METHOD_2 ( key ) ; int VAR_3 = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; java.lang.String VAR_4 = key . METHOD_4 ( 0 , VAR_3 ) ; VAR_5 = TYPE_4 . METHOD_5 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) { return null ; } return VAR_6 ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = METHOD_2 ( key ) ; int VAR_3 = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; java.lang.String VAR_4 = key . METHOD_4 ( ) ; if ( ( VAR_5 ) == null ) { return null ; } return VAR_6 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( <unk> ) ; <unk> . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; }[0m
Trg : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( <unk> ) ; <unk> . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; }[0m
Pred: public void init ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; }[0m
[31mExample #2[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . <unk> ( VAR_1 ) ; METHOD_1 ( ) . <unk> ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . <unk> ( VAR_1 ) ; METHOD_1 ( ) . <unk> ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; }[0m
Pred: public void init ( java.lang.Object item , java.lang.Object ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . equals ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; }[0m
---------------
Class: Broad method visibility
Golden example (False):
[31mExample #1[0m
Src : private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . <unk> > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 . <unk> <unk> : VAR_1 ) { if ( ( <unk> . METHOD_2 ( ) ) == ( VAR_4 ) ) { if ( ( ! VAR_2 ) || ( <unk> . METHOD_3 ( ) ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( <unk> ) ) ) ; } } } return VAR_3 ; }[0m
Trg : public static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . <unk> > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 . <unk> <unk> : VAR_1 ) { if ( ( <unk> . METHOD_2 ( ) ) == ( VAR_4 ) ) { if ( ( ! VAR_2 ) || ( <unk> . METHOD_3 ( ) ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( <unk> ) ) ) ; } } } return VAR_3 ; }[0m
Pred: public static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . VAR_1 > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_4 ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( ) ) ) ; } } } return VAR_3 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }[0m
Trg : protected java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }[0m
Pred: public java.util.List < > > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }[0m
[31mExample #2[0m
Src : private static boolean METHOD_1 ( TYPE_1 node , TYPE_2 <unk> ) throws java.io.IOException { if ( ! ( TYPE_3 . METHOD_2 ( node , <unk> ) ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ! ( TYPE_3 . METHOD_1 ( VAR_1 . get ( i ) , <unk> ) ) ) { return false ; } } return true ; }[0m
Trg : public static boolean METHOD_1 ( TYPE_1 node , TYPE_2 <unk> ) throws java.io.IOException { if ( ! ( TYPE_3 . METHOD_2 ( node , <unk> ) ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ! ( TYPE_3 . METHOD_1 ( VAR_1 . get ( i ) , <unk> ) ) ) { return false ; } } return true ; }[0m
Pred: public static boolean METHOD_1 ( TYPE_1 node , TYPE_2 ) ) throws java.io.IOException { if ( ! ( TYPE_3 . METHOD_2 ( node , false ) ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . get ( i ) , ) ) { return false ; } } return true ; }[0m
[31mExample #3[0m
Src : private boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( <unk> ( ) . METHOD_4 ( ) ) ) . <unk> ( ) ) ) ; if ( VAR_1 ) { <unk> ( VAR_3 ) ; } return ! VAR_1 ; }[0m
Trg : protected boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( <unk> ( ) . METHOD_4 ( ) ) ) . <unk> ( ) ) ) ; if ( VAR_1 ) { <unk> ( VAR_3 ) ; } return ! VAR_1 ; }[0m
Pred: public boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( java.lang.Math.random ( ) . METHOD_4 ( ) ) ) . ) ( ) ) ; if ( VAR_1 ) { if ( VAR_3 ) ; } return ! VAR_1 ; }[0m
[31mExample #4[0m
Src : private static boolean METHOD_1 ( java.lang.String VAR_1 , char [ ] VAR_2 ) { int length = VAR_1 . length ( ) ; if ( ( VAR_2 . length ) != length ) { return false ; } for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) ) ) { return false ; } } return true ; }[0m
Trg : public static boolean METHOD_1 ( java.lang.String VAR_1 , char [ ] VAR_2 ) { int length = VAR_1 . length ( ) ; if ( ( VAR_2 . length ) != length ) { return false ; } for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) ) ) { return false ; } } return true ; }[0m
Pred: public static boolean METHOD_1 ( java.lang.String VAR_1 , char [ ] VAR_2 ) { int length = VAR_1 . length ( ) ; if ( ( VAR_2 . length ) != length ) { return false ; } for ( ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) ) ) { return false ; } } return true ; }[0m
---------------
Class: Change comparison operator (e.g. >) in condition
Golden example (False):
[31mExample #1[0m
Src : private static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; for ( int i = 0 ; i <= ( ( VAR_3 ) - 1 ) ; i ++ ) { VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + ( i + 1 ) ) + STRING_1 ) ) ; } return VAR_2 ; }[0m
Trg : private static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; for ( int i = 0 ; i < ( VAR_3 ) ; i ++ ) { VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + ( i + 1 ) ) + STRING_1 ) ) ; } return VAR_2 ; }[0m
Pred: private static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; for ( int i = 0 ; i ++ ) { VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + 1 ) ) ) ; } return VAR_2 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private static long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 { long VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 >= VAR_2 ) { throw new TYPE_2 ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_2 ) ) ; } long VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 + VAR_4 ) != VAR_2 ) { throw new TYPE_2 ( ( STRING_3 + STRING_4 ) ) ; } return VAR_3 ; }[0m
Trg : private static long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 { long VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 > VAR_2 ) { throw new TYPE_2 ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_2 ) ) ; } long VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 + VAR_4 ) != VAR_2 ) { throw new TYPE_2 ( ( STRING_3 + STRING_4 ) ) ; } return VAR_3 ; }[0m
Pred: private static long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 { long VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 >= VAR_2 ) { throw new TYPE_2 ( VAR_1 . METHOD_3 ( ) ) ; } VAR_4 = new TYPE_2 ( VAR_1 ) ; } return VAR_3 ; }[0m
---------------
Class: Change exception type in catch clause
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { TYPE_3 info = METHOD_2 ( x ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_3 ) ; TYPE_4 VAR_4 = METHOD_3 ( VAR_5 ) ; TYPE_4 VAR_6 = METHOD_3 ( VAR_7 ) ; METHOD_4 ( new TYPE_5 ( info , VAR_6 , VAR_4 , VAR_2 ) ) ; } catch ( java.lang.Throwable <unk> ) { throw METHOD_5 ( x , <unk> ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { TYPE_3 info = METHOD_2 ( x ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_3 ) ; TYPE_4 VAR_4 = METHOD_3 ( VAR_5 ) ; TYPE_4 VAR_6 = METHOD_3 ( VAR_7 ) ; METHOD_4 ( new TYPE_5 ( info , VAR_6 , VAR_4 , VAR_2 ) ) ; } catch ( <unk> <unk> ) { throw METHOD_5 ( x , <unk> ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { TYPE_3 info = METHOD_2 ( x ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_3 ) ; TYPE_4 VAR_4 = METHOD_3 ( VAR_5 ) ; METHOD_4 ( new TYPE_5 ( VAR_6 , VAR_6 , VAR_2 ) ) ; } catch ( java.lang.Throwable ( ) , VAR_4 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { assert METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( VAR_3 . type ) ; METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) ; } catch ( java.lang.Throwable <unk> ) { throw METHOD_7 ( x , <unk> ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { assert METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( VAR_3 . type ) ; METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) ; } catch ( <unk> <unk> ) { throw METHOD_7 ( x , <unk> ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { assert METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( VAR_3 . type ) ; METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) ; } catch ( java.lang.Throwable ( ) , VAR_1 ) ; } }[0m
---------------
Class: Change parameter type
Golden example (False):
[31mExample #1[0m
Src : static boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
Trg : static boolean METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
Pred: static boolean METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; return true ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 . append ( new TYPE_3 . <unk> ( VAR_7 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false ) ; }[0m
Trg : static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 . append ( new TYPE_3 . <unk> ( VAR_7 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false ) ; }[0m
Pred: static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , long VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 . append ( new TYPE_3 ( VAR_7 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false ) ; }[0m
[31mExample #2[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int [ ] <unk> , int VAR_5 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , <unk> , VAR_5 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int [ ] <unk> , int VAR_5 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , <unk> , VAR_5 ) ; }[0m
Pred: synchronized void METHOD_1 ( long id , long VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_8 , int length , int [ ] VAR_8 , int VAR_5 ) { METHOD_2 ( ) ; METHOD_3 ( ) , VAR_2 , VAR_3 , VAR_4 , true , , , VAR_8 , VAR_5 ) ; }[0m
[31mExample #3[0m
Src : static boolean METHOD_1 ( int VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 <unk> = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( <unk> == null ) { return false ; } <unk> . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return true ; }[0m
Trg : static boolean METHOD_1 ( long VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 <unk> = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( <unk> == null ) { return false ; } <unk> . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return true ; }[0m
Pred: static boolean METHOD_1 ( long VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 start = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( == == null ) { return false ; } finally . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return true ; }[0m
[31mExample #4[0m
Src : public final TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 ) throws java.io.IOException { synchronized ( this ) { if ( ! ( VAR_4 ) ) { throw new <unk> ( STRING_1 ) ; } int VAR_5 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_5 != 0 ) { TYPE_2 <unk> = new TYPE_2 ( VAR_5 ) ; METHOD_3 ( <unk> . METHOD_4 ( ) ) ; return <unk> ; } } throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; }[0m
Trg : public final TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 ) throws java.io.IOException { synchronized ( this ) { if ( ! ( VAR_4 ) ) { throw new <unk> ( STRING_1 ) ; } long VAR_5 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_5 != 0 ) { TYPE_2 <unk> = new TYPE_2 ( VAR_5 ) ; METHOD_3 ( <unk> . METHOD_4 ( ) ) ; return <unk> ; } } throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; }[0m
Pred: public final TYPE_1 METHOD_1 ( long VAR_1 , java.lang.String VAR_2 , long VAR_3 ) throws java.io.IOException { synchronized ( synchronized ) { if ( ! ( VAR_4 ) ) { throw new java.lang.Thread ( STRING_1 ) ; } int VAR_5 = new TYPE_2 ( VAR_5 ) ; } return new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; }[0m
[31mExample #5[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } }[0m
Trg : public TYPE_1 METHOD_1 ( java.util.Map VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } }[0m
[31mExample #6[0m
Src : private <unk> METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 != null ) { for ( TYPE_2 <unk> : VAR_2 ) { if ( METHOD_4 ( <unk> . METHOD_5 ( ) ) ) { return <unk> . METHOD_5 ( ) ; } } } return VAR_4 ; }[0m
Trg : private <unk> METHOD_1 ( <unk> VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 != null ) { for ( TYPE_2 <unk> : VAR_2 ) { if ( METHOD_4 ( <unk> . METHOD_5 ( ) ) ) { return <unk> . METHOD_5 ( ) ; } } } return VAR_4 ; }[0m
Pred: private synchronized METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 != null ) { for ( TYPE_2 | : VAR_2 ) { if ( METHOD_4 . METHOD_5 ( ) ) { } } return VAR_4 ; }[0m
[31mExample #7[0m
Src : static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; }[0m
Trg : static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; }[0m
Pred: static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , long VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; }[0m
[31mExample #8[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int VAR_5 , int [ ] <unk> , int VAR_6 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , VAR_5 , <unk> , VAR_6 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int VAR_5 , byte [ ] <unk> , int VAR_6 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , VAR_5 , <unk> , VAR_6 ) ; }[0m
Pred: synchronized void METHOD_1 ( long id , long VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_8 , int VAR_8 , int VAR_5 , int [ ] , int VAR_6 ) { METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_4 , true , , , VAR_8 , VAR_6 ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( int <unk> , int VAR_1 , int c , TYPE_1 VAR_2 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { byte [ ] VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) ) ; super . METHOD_1 ( <unk> , VAR_1 , c , VAR_2 , <unk> , <unk> ) ; }[0m
Trg : public void METHOD_1 ( long <unk> , long VAR_1 , long c , TYPE_1 VAR_2 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { byte [ ] VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) ) ; super . METHOD_1 ( <unk> , VAR_1 , c , VAR_2 , <unk> , <unk> ) ; }[0m
Pred: public void METHOD_1 ( int start , long VAR_1 , long c , TYPE_1 VAR_2 , TYPE_2 > ) throws java.lang.Exception { byte [ ] VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , 0 , ( ( VAR_4 ) ) & ( VAR_4 ) ) ; ) . METHOD_1 ( ( , VAR_1 , c , VAR_2 , ) ; }[0m
---------------
Class: Change parameter value of invoked method
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( TYPE_1 . <unk> <unk> , int VAR_1 ) { METHOD_2 ( <unk> . METHOD_3 ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ <unk> ] . toString ( ) , <unk> . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( <unk> , VAR_1 ) ; }[0m
Trg : protected void METHOD_1 ( TYPE_1 . <unk> <unk> , int VAR_1 ) { METHOD_2 ( <unk> . METHOD_3 ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ 1 ] . toString ( ) , <unk> . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( <unk> , VAR_1 ) ; }[0m
Pred: protected void METHOD_1 ( TYPE_1 . state , int VAR_1 ) { METHOD_2 ( state . METHOD_3 ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ 1 ] . toString ( ) , . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( 1 , VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , false , true ) ; } return VAR_1 ; }[0m
Trg : private java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }[0m
Pred: private java.util.List < > > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( 1 ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , false , true ) ; } return VAR_1 ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new <unk> ( ) , true ) ; <unk> ( VAR_1 . METHOD_3 ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ) . <unk> ( false ) ; TYPE_2 . METHOD_5 ( <unk> . <unk> ( ) ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_3 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new <unk> ( ) , true ) ; <unk> ( VAR_1 . METHOD_3 ( TYPE_1 . <unk> ( ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ) . <unk> ( false ) ; TYPE_2 . METHOD_5 ( <unk> . <unk> ( ) ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_3 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new ( 1 ) , true ) ; while ( VAR_1 . METHOD_3 ( TYPE_1 . METHOD_6 ( VAR_2 ) ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ; TYPE_2 . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_3 . toString ( ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { VAR_1 = <unk> . METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; <unk> ( VAR_3 ) . <unk> ( VAR_1 ) . METHOD_3 ( ) ; <unk> ( VAR_4 ) . <unk> ( VAR_1 ) . METHOD_4 ( ) ; <unk> ( VAR_5 ) . <unk> ( VAR_1 ) . METHOD_5 ( ) ; <unk> . METHOD_6 ( ) . <unk> ( VAR_1 ) . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; VAR_6 . METHOD_9 ( VAR_7 class , VAR_8 ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 = <unk> . METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; <unk> ( VAR_3 ) . <unk> ( VAR_1 ) . METHOD_3 ( ) ; <unk> ( VAR_4 ) . <unk> ( VAR_1 ) . METHOD_4 ( ) ; <unk> ( VAR_5 ) . <unk> ( VAR_1 ) . METHOD_5 ( ) ; <unk> . METHOD_6 ( ) . <unk> ( VAR_1 ) . METHOD_7 ( TYPE_2 . <unk> ( ) ) ; VAR_6 . METHOD_9 ( VAR_7 class , VAR_8 ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; while ( VAR_3 ) . setEnabled ( VAR_1 ) . METHOD_3 ( ) ; METHOD_6 ( VAR_5 ) . METHOD_6 ( VAR_1 ) . METHOD_7 ( VAR_1 ) . METHOD_7 ( 1 ) ; VAR_6 . METHOD_9 ( VAR_7 class , VAR_8 ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { java.util.ArrayList < <unk> > list = VAR_2 . <unk> < <unk> > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_3 , new TYPE_2 ( VAR_1 ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { java.util.ArrayList < <unk> > list = VAR_2 . <unk> < <unk> > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_3 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Thread VAR_1 , java.util.Vector VAR_1 ) { while = new java.util.Vector ( ) { public java.lang.Object [ ( source , source ) != { if ( source != null ) { java.util.ArrayList < > > VAR_2 . METHOD_2 ( 1 , ( ) ) ; } } return - 1 ; } ; }[0m
[31mExample #5[0m
Src : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , <unk> , false ) ; TYPE_3 <unk> = t . METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_2 = t . METHOD_3 ( ( ( float ) ( FLOAT_1 / ( VAR_3 ) ) ) ) ; <unk> = t . METHOD_4 ( <unk> , VAR_2 ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , <unk> , false ) ; TYPE_3 <unk> = t . METHOD_3 ( args . <unk> ) ; TYPE_3 VAR_2 = t . METHOD_3 ( ( ( float ) ( FLOAT_1 / ( VAR_3 ) ) ) ) ; <unk> = t . METHOD_4 ( <unk> , VAR_2 ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( 1 , false , false ) ; TYPE_3 { = t t . METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_2 = t . METHOD_3 ( ( ( float ) ( 1 ) ) ) ; ) = t . METHOD_4 ( 1 , VAR_2 ) ; }[0m
[31mExample #6[0m
Src : private void METHOD_1 ( TYPE_1 . <unk> VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , null , VAR_2 ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , <unk> . METHOD_4 ( ) ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 . <unk> VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , <unk> , VAR_2 ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , <unk> . METHOD_4 ( ) ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 . VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , null , VAR_2 ) ; if ( ( . METHOD_3 ( ) ) . ) != ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , 1 . METHOD_4 ( ) ) ; }[0m
[31mExample #7[0m
Src : protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( ( ( VAR_2 . length ) * <unk> ) , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } }[0m
Trg : protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( VAR_2 . length , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } }[0m
Pred: protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( ( ( VAR_2 . length ) * 1 ) , VAR_1 . size ( ) ) ; for ( int i = 0 ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } }[0m
---------------
Class: Change parameters order in method invocation
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( VAR_2 , result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = first . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , java.lang.String value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , java.lang.String value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_1 , VAR_2 ) ; }[0m
Pred: static void METHOD_1 ( TYPE_1 TYPE_1 , TYPE_2 , TYPE_2 , java.lang.String value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( VAR_1 == null ) { java.lang.Thread . METHOD_2 ( value ) ; } } catch ( TYPE_3 ) { VAR_2 = false ; } TYPE_4 . METHOD_2 ( ) ; }[0m
[31mExample #2[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final long VAR_3 = ( <unk> == null ) ? ( ( long ) ( <unk> . METHOD_2 ( ) ) ) : ( ( long ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final long VAR_3 = ( <unk> == null ) ? ( ( long ) ( <unk> . METHOD_2 ( ) ) ) : ( ( long ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_1 , VAR_2 ) ; }[0m
Pred: static void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_2 , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final long VAR_3 = ( ( ) == null ) ? ( ( long ) ( VAR_1 . METHOD_2 ( ) ) ) ; } catch ( TYPE_4 VAR_2 ) { TYPE_3 . assertEquals ( VAR_2 , VAR_1 ) ; } }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( false ) ; java.util.List < java.lang.String > VAR_2 = new TYPE_1 < > ( ) ; boolean result = <unk> . METHOD_2 ( new <unk> ( ) , VAR_2 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_2 . size ( ) , 1 ) ; TYPE_2 . assertEquals ( VAR_2 . get ( 0 ) , STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( false ) ; java.util.List < java.lang.String > VAR_2 = new TYPE_1 < > ( ) ; boolean result = <unk> . METHOD_2 ( new <unk> ( ) , VAR_2 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( 1 , VAR_2 . size ( ) ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_2 . get ( 0 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) . false ( false ) ; java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < > ( ) ; TYPE_2 . = ( VAR_2 . METHOD_2 ( ) , VAR_2 ) ; TYPE_2 . assertEquals ( VAR_2 . get ( 0 ) ) ; }[0m
[31mExample #4[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_1 , VAR_2 ) ; }[0m
Pred: static void METHOD_1 ( TYPE_1 state , TYPE_2 , TYPE_2 , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( VAR_1 == null ) { java.lang.Thread . METHOD_2 ( value ) ; } } catch ( TYPE_3 ) ) { TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; } }[0m
---------------
Class: Change qualified name in response to a move class refactoring
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_8 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_8 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_7 ( METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_7 ( METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public java.lang.String toString ( ) { TYPE_1 <unk> = new TYPE_1 ( ( ( ( size ) * <unk> ) + <unk> ) ) ; <unk> ( CHAR_1 ) ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( i != 0 ) { <unk> ( STRING_1 ) ; } <unk> ( values [ i ] ) ; } <unk> ( CHAR_2 ) ; return <unk> . toString ( ) ; }[0m
Trg : public java.lang.String toString ( ) { java.lang.StringBuilder <unk> = new java.lang.StringBuilder ( ( ( ( size ) * <unk> ) + <unk> ) ) ; <unk> ( CHAR_1 ) ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( i != 0 ) { <unk> ( STRING_1 ) ; } <unk> ( values [ i ] ) ; } <unk> ( CHAR_2 ) ; return <unk> . toString ( ) ; }[0m
Pred: public java.lang.String toString ( ) { TYPE_1 = new TYPE_1 ( ( ( ( size ) * ~ ) ) ) ; while ( CHAR_1 ) ; for ( i = 0 ; i ++ ) { if ( i ++ ) ; } } ( ) ; return VAR_1 . toString ( ) ; }[0m
---------------
Class: Change type of a variable
Golden example (False):
[31mExample #1[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> . <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> . <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_2 , new TYPE_1 ( VAR_1 ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> . <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> . <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_2 , new TYPE_1 ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Thread VAR_1 , float VAR_1 ) { while ( new java.lang.Thread ( ) { public java.lang.Object [ java.lang.Object source , TYPE_1 ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 . ) > ( ) ) : } ; TYPE_1 . METHOD_6 ( VAR_2 , new TYPE_1 ( VAR_1 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( TYPE_1 . <unk> ( ) , TYPE_2 . METHOD_3 ( ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( VAR_2 class ) ) ) ; <unk> ( VAR_3 . METHOD_6 ( ) ) . <unk> ( VAR_1 ) ; <unk> = new TYPE_4 ( VAR_3 , <unk> , VAR_4 ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) , TYPE_6 . METHOD_9 ( VAR_5 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( TYPE_2 . <unk> ( ) , TYPE_2 . METHOD_3 ( ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( VAR_2 class ) ) ) ; <unk> ( VAR_3 . METHOD_6 ( ) ) . <unk> ( VAR_1 ) ; <unk> = new TYPE_4 ( VAR_3 , <unk> , VAR_4 ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) , TYPE_6 . METHOD_9 ( VAR_5 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( TYPE_1 . getSelection ( ) , TYPE_2 . METHOD_3 ( ) ) ) . METHOD_6 ( TYPE_3 . METHOD_4 ( ) ) . METHOD_6 ( VAR_1 ) ; TYPE_1 . METHOD_7 ( TYPE_4 . METHOD_8 ( ) , TYPE_6 . METHOD_9 ( VAR_5 ) ) ; }[0m
[31mExample #2[0m
Src : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> . <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> . <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Trg : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Pred: protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( for id : VAR_1 ) { java.util.List < TYPE_1 . VAR_2 > ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( VAR_2 , VAR_3 ) ; } TYPE_2 . METHOD_7 ( true ) ; }[0m
[31mExample #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 <unk> ) { METHOD_2 ( <unk> , VAR_1 ) ; <unk> . <unk> <unk> = METHOD_3 ( <unk> ) ; if ( <unk> != null ) { <unk> . METHOD_4 ( ) . METHOD_5 ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_4 ( ) . <unk> ( null ) ; } return METHOD_7 ( <unk> , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 <unk> ) { METHOD_2 ( <unk> , VAR_1 ) ; <unk> . <unk> <unk> = METHOD_3 ( <unk> ) ; if ( <unk> != null ) { <unk> . METHOD_4 ( ) . METHOD_5 ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_4 ( ) . <unk> ( null ) ; } return METHOD_7 ( <unk> , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 state ) { METHOD_2 ( VAR_1 , VAR_1 ) ; TYPE_1 . state = METHOD_3 ( ) ; if ( != != null ) { TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ; } return METHOD_7 ( false , VAR_2 , VAR_3 ) ; }[0m
[31mExample #4[0m
Src : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> . <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> . <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Trg : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> . <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> . <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Pred: protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( for id : VAR_1 ) { java.util.List < TYPE_1 . VAR_2 > ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( VAR_2 , VAR_3 ) ; } TYPE_2 . METHOD_7 ( true ) ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . <unk> ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; <unk> ( VAR_4 . get ( VAR_2 ) ) . <unk> ( VAR_1 ) ; <unk> ( VAR_4 ) . <unk> ( VAR_5 ) . METHOD_3 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_1 . <unk> ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; <unk> ( VAR_4 . get ( VAR_2 ) ) . <unk> ( VAR_1 ) ; <unk> ( VAR_4 ) . <unk> ( VAR_5 ) . METHOD_3 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; if ( VAR_4 . get ( VAR_2 ) ) . setEnabled ( VAR_1 ) ; if ( VAR_4 ) . . ( VAR_5 ) . METHOD_3 ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { <unk> . <unk> VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < <unk> . <unk> > VAR_3 = METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < <unk> > VAR_3 = METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; }[0m
Pred: public void METHOD_1[0m
---------------
Class: Class becomes static. Delete object instance to invoke its methods
Golden example (False):
[31mExample #1[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( <unk> ) ( source ) ) : null ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( <unk> ) ( source ) ) : null ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Thread VAR_1 , java.util.Vector VAR_1 ) { for = new java.lang.Thread ( ) { public java.lang.Object [ java.lang.Object source , VAR_1 ) { return source != null ? ( ( ( ) ) ( source ) ) : null ; } } ( ) . METHOD_6 ( VAR_2 , VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_2 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( VAR_1 , <unk> . METHOD_5 ( ) , VAR_2 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Trg : public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_2 ) ; return ; } try { TYPE_2 . METHOD_4 ( ) . METHOD_1 ( VAR_1 , <unk> . METHOD_5 ( ) , VAR_2 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Pred: public METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_2 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( VAR_1 , . METHOD_5 ( ) , VAR_2 ) ; } catch ( ) { ) . METHOD_6 ( ) ; } }[0m
[31mExample #2[0m
Src : public static void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . <unk> ) ; VAR_1 . METHOD_2 ( INT_1 ) ; <unk> ( ) . <unk> ( VAR_3 , VAR_1 , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . <unk> ) ; VAR_1 . METHOD_2 ( INT_1 ) ; <unk> ( ) . <unk> ( VAR_3 , VAR_1 , <unk> ) ; }[0m
Pred: public void METHOD_1[0m
[31mExample #3[0m
Src : public static java.lang.String METHOD_1 ( TYPE_1 . <unk> <unk> ) throws TYPE_2 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , <unk> . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( <unk> . METHOD_3 ( ) ) != null ? <unk> . METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; }[0m
Trg : public java.lang.String METHOD_1 ( TYPE_1 . <unk> <unk> ) throws TYPE_2 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , <unk> . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( <unk> . METHOD_3 ( ) ) != null ? <unk> . METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; }[0m
Pred: public java.lang.String METHOD_1 ( TYPE_1 . state ) throws TYPE_2 { TYPE_2 < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( ) ) != null ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_2 , new TYPE_3 ( VAR_1 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_2 , new TYPE_3 ( VAR_1 ) , <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Thread VAR_1 , TYPE_1 VAR_1 ) { for = new java.lang.Thread ( ) { public java.lang.Object [ java.lang.Object source , TYPE_1 ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } } catch ( ) . METHOD_6 ( VAR_2 , VAR_1 ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( <unk> . METHOD_5 ( ) , VAR_1 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; return ; } try { TYPE_2 . METHOD_4 ( ) . METHOD_1 ( <unk> . METHOD_5 ( ) , VAR_1 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Pred: public METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( ) . METHOD_1 ( ) ; } catch ( VAR_1 ) ) { throw . METHOD_6 ( ) ; } }[0m
---------------
Class: Class is not static anymore. Add object instance to invoke its methods
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( <unk> id ) { TYPE_1 . METHOD_2 ( new <unk> ( <unk> ( ) , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ) . METHOD_3 ( ) . <unk> ( ( ( java.lang.Boolean ) ( <unk> ) ) ) ; } } ) , id ) ; }[0m
Trg : protected void METHOD_1 ( <unk> id ) { TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( <unk> ( ) , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ) . METHOD_3 ( ) . <unk> ( ( ( java.lang.Boolean ) ( <unk> ) ) ) ; } } ) , id ) ; }[0m
Pred: protected void METHOD_1 ( ) id { TYPE_1 . METHOD_2 ( new java.lang.Thread ( ) ( ( ) ) , new java.util.ArrayList ( ) { public void ( java.lang.Object ) , java.lang.Object ) { if ( ) . METHOD_3 ( ) . ) ( ( ( ) . equals ( ) ) ; } } ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_2 ( id ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_2 ( id ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Thread ) , java.lang.Thread id ) { TYPE_1 = new java.lang.Thread ( ) { public java.lang.Object ( ( source , source ) != null ) { return source != null ) new java.util.ArrayList < TYPE_1 > ( ( TYPE_1 > ( ) ) ; } } ) . ( ( VAR_1 , new TYPE_2 ( ) ) ; }[0m
[31mExample #2[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> <unk> , boolean VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> params = new <unk> ( <unk> ) ; params . METHOD_2 ( VAR_1 ) ; <unk> . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> <unk> , boolean VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> params = new <unk> ( <unk> ) ; params . METHOD_2 ( VAR_1 ) ; <unk> ( ) . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Thread VAR_1 , TYPE_1 ) , boolean VAR_1 ) { TYPE_1 = new java.lang.Thread ( ) { public java.lang.Object ( ( source , source ) != null ) { if ( source != null ) { return ; } } catch ( new java.util.ArrayList < TYPE_1 > ( ) ) ; } . METHOD_2 ( VAR_1 ) ; }[0m
[31mExample #3[0m
Src : public static void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; <unk> ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; <unk> ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , METHOD_3 ( ) ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( ) { { VAR_1 = new java.lang.Thread ( ) { public java.lang.Object ( ( source , source ) != null ) { return source != null ? ( ) != null ) ; } ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) ) ; }[0m
[31mExample #4[0m
Src : private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , <unk> . METHOD_4 ( ) ) ) ; } else { METHOD_3 ( ) ; } }[0m
Trg : private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , <unk> . METHOD_4 ( ) ) ) ; } else { METHOD_3 ( ) ; } }[0m
Pred: private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( new java.lang.Thread ( this , new TYPE_1 ( ) ) { public void ( ( target ) , java.lang.Object ) ) { VAR_1 = ( ( java.lang.Integer ) ( ) ) ; } } , TYPE_1 . METHOD_4 ( ) ; } }[0m
[31mExample #5[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Thread ) , VAR_1 VAR_1 ) { TYPE_1 = new java.lang.Thread ( ) { public java.lang.Object ( ( source , source ) != null ) { return source != null ? ( ( TYPE_1 < TYPE_1 > ( ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } ( ) . METHOD_6 ( VAR_2 , VAR_1 ) ; }[0m
[31mExample #6[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> . <unk> ( VAR_1 , new <unk> ( id ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_1 , new <unk> ( id ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Thread ) , java.lang.Thread id ) { TYPE_1 = new java.lang.Thread ( ) { public java.lang.Object ( ( source , source ) != null ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } } ; VAR_1 . ( VAR_1 , new TYPE_1 ( id ) , ) ; }[0m
[31mExample #7[0m
Src : private void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ) ; } } ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ) ; } } ; TYPE_2 . <unk> ( ) . METHOD_4 ( VAR_1 ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new java.lang.Thread ( ) { public void ( ) != { public void ( ( java.util.List < TYPE_1 > ( ) ) ) ; } } TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
[31mExample #8[0m
Src : public static void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return STRING_1 ; } } ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; <unk> . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return STRING_1 ; } } ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; <unk> ( ) . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Thread ) , TYPE_1 VAR_1 ) { TYPE_1 = new java.lang.Thread ( ) { public java.lang.Object ( ( source , source ) != ( ) != null ) { if ( source != null ) { return ; } } catch ( VAR_2 ) ; } . METHOD_2 ( VAR_1 ) ; }[0m
[31mExample #9[0m
Src : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } TYPE_1 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ( ( java.util.List < TYPE_2 > ) ( <unk> ) ) ) ; METHOD_3 ( ) ; } } ) , <unk> ( ) . getId ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ( ( java.util.List < TYPE_2 > ) ( <unk> ) ) ) ; METHOD_3 ( ) ; } } ) , <unk> ( ) . getId ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { if ( ( ( ( ( ) ) != null ) == null ) ) { return ; } TYPE_1 . METHOD_2 ( new java.lang.Thread ( this , new TYPE_1 ( ) ) { public void ( ( java.util.List < TYPE_2 > ( ) ) ) ) ; } ) . ) ( ) ; }[0m
[31mExample #10[0m
Src : private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( <unk> ) ) ) ; } } ) ) ; }[0m
Trg : private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( <unk> ) ) ) ; } } ) ) ; }[0m
Pred: private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new java.lang.Thread ( this , new TYPE_1 ( ) ) public void ) { public void ( java.lang.Object target , java.lang.Object ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ( ) ) ) ) ; } } ) ; }[0m
[31mExample #11[0m
Src : public static void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { VAR_3 = ( ( java.util.Map < TYPE_1 < java.lang.Integer , <unk> . <unk> > , java.lang.Boolean > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ; } } ; <unk> . <unk> ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; }[0m
Trg : public static void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { VAR_3 = ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ; } } ; <unk> ( ) . <unk> ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; }[0m
Pred: public static void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) ; VAR_2 = new java.lang.Thread ( ) { public void ( ( VAR_1 < TYPE_1 , java.lang.Object ) ) { VAR_3 = ( ( java.util.Map < TYPE_1 > 0 ) . ) > ( ) ; } ) . METHOD_6 ( VAR_4 , new TYPE_3 ( ) ) ; }[0m
[31mExample #12[0m
Src : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ; <unk> . <unk> ( VAR_1 , new TYPE_1 ( name ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_1 ( name ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Thread ) , java.lang.String name ) { TYPE_1 = new java.lang.Thread ( ) { public java.lang.Object ( ( source , source ) != null ) { return source != null ? ! ( ( ( ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ) . METHOD_7 ( VAR_1 , TYPE_1 ) ; }[0m
[31mExample #13[0m
Src : private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ) ; }[0m
Trg : private void METHOD_1 ( ) { TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new java.lang.Thread ( this , new TYPE_1 ( ) ) public void ) { public void ( java.lang.Object target , java.lang.Object ) { VAR_1 = ( ( java.util.ArrayList < > > ) ( ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ; }[0m
[31mExample #14[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 , boolean VAR_2 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> VAR_1 , boolean VAR_2 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Thread ) , VAR_1 VAR_1 , boolean VAR_2 ) { TYPE_1 = new java.lang.Thread ( ) { public java.lang.Object ( ( source , source ) != ( ) != null ) { if ( source != null ) { return ; } } ) . METHOD_5 ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) ; }[0m
[31mExample #15[0m
Src : public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( <unk> . <unk> VAR_3 : VAR_4 < TYPE_1 < <unk> . <unk> > > getValue ( VAR_5 ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( <unk> . <unk> VAR_3 : VAR_4 < TYPE_1 < <unk> . <unk> > > getValue ( VAR_5 ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
Pred: public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_1 . VAR_3 . VAR_3 < TYPE_1 < TYPE_1 < TYPE_1 > . > ( ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
[31mExample #16[0m
Src : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> . <unk> ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 . <unk> ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 . <unk> ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.Thread ) , java.lang.String name ) { TYPE_1 = new java.lang.Thread ( ) { public java.lang.Object ( ( source , source ) != null ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } ; } . METHOD_6 ( VAR_1 , new TYPE_1 ( ) . VAR_2 ) ; }[0m
---------------
Class: Merge variable definition & initialization
Golden example (False):
[31mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { TYPE_1 <unk> = METHOD_2 ( obj . getId ( ) ) . <unk> ( STRING_1 , obj . getName ( ) ) . <unk> ( STRING_2 , obj . METHOD_3 ( ) ) . <unk> ( STRING_3 , obj . METHOD_4 ( ) ) ; return <unk> ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { return METHOD_2 ( obj . getId ( ) ) . <unk> ( STRING_1 , obj . getName ( ) ) . <unk> ( STRING_2 , obj . METHOD_3 ( ) ) . <unk> ( STRING_3 , obj . METHOD_4 ( ) ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { return METHOD_2 ( obj . getId ( ) ) . equals ( STRING_1 , obj . getName ( ) ) . ( STRING_2 , obj . METHOD_3 ( ) ) . METHOD_6 ( STRING_3 , obj . METHOD_4 ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public boolean METHOD_1 ( TYPE_1 VAR_1 , long time , TYPE_2 VAR_2 ) throws TYPE_3 { if ( ( VAR_3 ) != ( this ) ) { throw new TYPE_4 ( ) ; } final TYPE_5 VAR_4 = this . VAR_4 ; if ( ! ( VAR_4 . METHOD_2 ( time , VAR_2 ) ) ) { return false ; } boolean VAR_5 = false ; try { VAR_5 = VAR_1 . METHOD_3 ( ) ; } finally { if ( ! VAR_5 ) { VAR_4 . METHOD_4 ( ) ; } } return VAR_5 ; }[0m
Trg : public boolean METHOD_1 ( TYPE_1 VAR_1 , long time , TYPE_2 VAR_2 ) throws TYPE_3 { if ( ( VAR_3 ) != ( this ) ) { throw new TYPE_4 ( ) ; } final TYPE_5 VAR_4 = this . VAR_4 ; if ( ! ( VAR_4 . METHOD_2 ( time , VAR_2 ) ) ) { return false ; } boolean VAR_5 = false ; try { return VAR_5 = VAR_1 . METHOD_3 ( ) ; } finally { if ( ! VAR_5 ) { VAR_4 . METHOD_4 ( ) ; } } }[0m
Pred: public boolean METHOD_1 ( TYPE_1 VAR_1 , long time , TYPE_2 VAR_2 ) throws TYPE_3 { if ( ( VAR_3 ) != ( this ) ) { throw new TYPE_4 ( ) ; VAR_4 ; } return ! ( VAR_4 . METHOD_2 ( time , VAR_2 ) ) ; } return VAR_5 . METHOD_3 ( ) ; } }[0m
---------------
Class: Move existing statements out of try block
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_3 ] ; VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; METHOD_5 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_3 ] ; try { VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; METHOD_5 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_3 ] ; VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; METHOD_5 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static void METHOD_1 ( int id , int <unk> , final boolean VAR_1 ) { try { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 ) { TYPE_1 . METHOD_3 ( id ) ; } TYPE_1 . METHOD_4 ( id , VAR_3 , <unk> ) ; } catch ( java.lang.Throwable <unk> ) { throw TYPE_2 . METHOD_5 ( <unk> ) ; } finally { VAR_2 . METHOD_6 ( ) ; } }[0m
Trg : public static void METHOD_1 ( int id , int <unk> , final boolean VAR_1 ) { VAR_2 . METHOD_2 ( ) ; try { if ( VAR_1 ) { TYPE_1 . METHOD_3 ( id ) ; } TYPE_1 . METHOD_4 ( id , VAR_3 , <unk> ) ; } catch ( java.lang.Throwable <unk> ) { throw TYPE_2 . METHOD_5 ( <unk> ) ; } finally { VAR_2 . METHOD_6 ( ) ; } }[0m
Pred: public static void METHOD_1 ( int id , int VAR_1 , final boolean VAR_1 ) { try { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 ) { TYPE_1 . METHOD_3 ( id ) ; } TYPE_1 . METHOD_4 ( id , VAR_3 ) ; } catch ( java.lang.Throwable ) { } finally { VAR_2 . METHOD_6 ( ) ; } }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; java.lang.Integer [ ] VAR_3 = new java.lang.Integer [ VAR_2 ] ; for ( int i = 0 ; i < ( ( VAR_2 ) - 1 ) ; ++ i ) VAR_3 [ i ] = new java.lang.Integer ( i ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; java.lang.Integer [ ] VAR_3 = new java.lang.Integer [ VAR_2 ] ; for ( int i = 0 ; i < ( ( VAR_2 ) - 1 ) ; ++ i ) VAR_3 [ i ] = new java.lang.Integer ( i ) ; try { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; java.lang.Integer [ ] VAR_3 = new java.lang.Integer [ VAR_2 ] ; for i = ( ( VAR_2 ) - 1 ) ; VAR_1 . METHOD_2 ( i ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
---------------
Class: Remove invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = <unk> . get ( new <unk> ( STRING_1 ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; <unk> = new <unk> ( STRING_2 ) ; VAR_4 = new <unk> ( STRING_3 ) ; <unk> = new <unk> ( STRING_4 ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_5 ( STRING_5 ) ; VAR_5 . METHOD_6 ( new <unk> . <unk> ( STRING_6 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = VAR_1 . METHOD_3 ( ) ; VAR_2 = <unk> . get ( new <unk> ( STRING_1 ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; <unk> = new <unk> ( STRING_2 ) ; VAR_4 = new <unk> ( STRING_3 ) ; <unk> = new <unk> ( STRING_4 ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_5 ( STRING_5 ) ; VAR_5 . METHOD_6 ( new <unk> . <unk> ( STRING_6 ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; TYPE_1 = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = VAR_2 . get ( STRING_3 ) ; VAR_3 = new TYPE_1 ( STRING_4 ) ; VAR_5 . METHOD_6 ( ) ; VAR_5 . METHOD_6 ( ) . METHOD_6 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_3 ( TYPE_4 . <unk> ( ) . METHOD_4 ( ) . getValue ( ) , TYPE_4 . <unk> ( ) . METHOD_5 ( ) ) ) ; METHOD_6 ( VAR_1 . <unk> ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_3 ( TYPE_4 . <unk> ( ) . METHOD_4 ( ) , TYPE_4 . <unk> ( ) . METHOD_5 ( ) ) ) ; METHOD_6 ( VAR_1 . <unk> ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_3 ( TYPE_4 . METHOD_6 ( ) . METHOD_4 ( ) . TYPE_4 ( ) . METHOD_5 ( ) ) ) ; METHOD_6 ( VAR_1 . METHOD_6 ( ) ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : 1 ; } } ; METHOD_4 ( new TYPE_1 ( VAR_1 , METHOD_5 ( ) ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : 1 ; } } ; METHOD_4 ( new TYPE_1 ( VAR_1 , METHOD_5 ( ) ) , <unk> ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 state ) { java.util.Vector = new java.util.Vector ( ) { public java.lang.Object [ java.lang.Object source , ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : break ; } } METHOD_4 ( new TYPE_1 ( ) , VAR_1 ) ; }[0m
---------------
Class: Remove parameter from the method invocation
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( <unk> ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { METHOD_4 ( result . <unk> ( ) ) ; } } ; <unk> ( ) . METHOD_5 ( null ) ; <unk> ( ) . METHOD_6 ( VAR_3 , parameters , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( <unk> ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { METHOD_4 ( result . <unk> ( ) ) ; } } ; <unk> ( ) . METHOD_5 ( ) ; <unk> ( ) . METHOD_6 ( VAR_3 , parameters , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( java.lang.Math.random ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; METHOD_5 ( ) . METHOD_6 ( ) ; METHOD_6 ( ) . METHOD_6 ( VAR_3 , parameters ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static TYPE_1 <unk> ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 <unk> ) { TYPE_3 VAR_2 = <unk> . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_3 ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; } TYPE_4 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( VAR_3 == null ) { VAR_3 = new TYPE_4 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( type . value ( ) ) ; return <unk> ; }[0m
Trg : public static TYPE_1 <unk> ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 <unk> ) { TYPE_3 VAR_2 = <unk> . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_3 ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; } TYPE_4 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( VAR_3 == null ) { VAR_3 = new TYPE_4 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( type ) ; return <unk> ; }[0m
Pred: public static TYPE_1 < ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 ) { TYPE_3 VAR_2 = super . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_3 . METHOD_5 ( ) ; VAR_3 . METHOD_6 ( VAR_1 ) ; VAR_3 . METHOD_6 ( ) ; return ; }[0m
[31mExample #2[0m
Src : protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( response , VAR_3 , VAR_2 ) ; } }[0m
Trg : protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( VAR_1 , response , VAR_3 , VAR_2 ) ; } }[0m
Pred: protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( response , VAR_3 ) ; } }[0m
[31mExample #3[0m
Src : public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , METHOD_4 ( ) . <unk> ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( METHOD_4 ( ) . getId ( ) , METHOD_4 ( ) . <unk> ( ) ) ; METHOD_2 ( ) . METHOD_8 ( ) ; return null ; }[0m
Trg : public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( METHOD_4 ( ) . getId ( ) , METHOD_4 ( ) . <unk> ( ) ) ; METHOD_2 ( ) . METHOD_8 ( ) ; return null ; }[0m
Pred: public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , METHOD_4 ( ) . METHOD_5 ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( ) . METHOD_7 ( ) . METHOD_2 ( ) ; return null ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , false , STRING_1 , VAR_1 , false ) ) ; METHOD_5 ( false ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_2 response = VAR_3 . add ( METHOD_7 ( ) ) ; assertEquals ( INT_1 , response . <unk> ( ) ) ; METHOD_8 ( ( ( response . <unk> ( ) ) instanceof TYPE_3 ) ) ; METHOD_9 ( ( ( TYPE_3 ) ( response . <unk> ( ) ) ) , 1 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , false , STRING_1 , VAR_1 ) ) ; METHOD_5 ( false ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_2 response = VAR_3 . add ( METHOD_7 ( ) ) ; assertEquals ( INT_1 , response . <unk> ( ) ) ; METHOD_8 ( ( ( response . <unk> ( ) ) instanceof TYPE_3 ) ) ; METHOD_9 ( ( ( TYPE_3 ) ( response . <unk> ( ) ) ) , 1 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , false , STRING_1 , VAR_1 ) ) ; METHOD_5 ( ) ; VAR_3 . METHOD_6 ( ) ; . ( ( ( TYPE_3 ) ( response . ) ( ) ) , 1 ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) , null ) ) ; METHOD_5 ( <unk> , VAR_3 ) ; TYPE_4 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) , null ) ) ; METHOD_5 ( VAR_3 ) ; TYPE_4 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.Vector = METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( ) , null ) ) ) ; METHOD_5 ( ) , TYPE_4 . METHOD_6 ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; <unk> VAR_4 = new <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; <unk> ( VAR_6 . get ( TYPE_1 . <unk> ( VAR_7 . <unk> class ) ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_5 ( <unk> . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; <unk> VAR_4 = new <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; <unk> ( VAR_6 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_5 ( <unk> . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 = new java.lang.Thread ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) . METHOD_6 ( ) ; TYPE_2 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ; }[0m
[31mExample #7[0m
Src : private void METHOD_1 ( boolean VAR_1 ) { <unk> <unk> = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_1 ) ; <unk> ( VAR_4 . METHOD_3 ( TYPE_2 . <unk> ( VAR_5 . <unk> class ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> ) ) ; <unk> ( VAR_6 . METHOD_5 ( <unk> . getId ( ) ) ) . <unk> ( <unk> . METHOD_6 ( ) ) ; }[0m
Trg : private void METHOD_1 ( boolean VAR_1 ) { <unk> <unk> = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_1 ) ; <unk> ( VAR_4 . METHOD_3 ( TYPE_2 . <unk> ( ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> ) ) ; <unk> ( VAR_6 . METHOD_5 ( <unk> . getId ( ) ) ) . <unk> ( <unk> . METHOD_6 ( ) ) ; }[0m
Pred: private void METHOD_1 ( boolean VAR_1 ) { java.lang.Thread = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_1 ) ; if ( VAR_4 . METHOD_3 ( TYPE_2 . METHOD_6 ( ) . class ) ) . METHOD_6 ( ( METHOD_5 . getId ( ) ) ) . METHOD_6 ( ) . METHOD_6 ( ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = <unk> . METHOD_2 ( ) . METHOD_3 ( ) ; <unk> ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . <unk> ( <unk> ) . METHOD_4 ( TYPE_3 . <unk> ( VAR_2 class ) ) ; TYPE_4 . METHOD_5 ( <unk> ) ; <unk> . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . <unk> ( ) . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = <unk> . METHOD_2 ( ) . METHOD_3 ( ) ; <unk> ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . <unk> ( <unk> ) . METHOD_4 ( TYPE_3 . <unk> ( ) ) ; TYPE_4 . METHOD_5 ( <unk> ) ; <unk> . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . <unk> ( ) . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = . METHOD_2 ( ) . METHOD_3 ( ) ; for ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . METHOD_6 ( ) . METHOD_4 ( ) ; TYPE_4 . METHOD_7 ( ) . METHOD_7 ( ) . METHOD_6 ( ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , null ) ) ; METHOD_4 ( <unk> , VAR_3 ) ; TYPE_4 . METHOD_5 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , null ) ) ; METHOD_4 ( VAR_3 ) ; TYPE_4 . METHOD_5 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.Vector = METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , false ) ; METHOD_4 ( ) . METHOD_5 ( ) . METHOD_5 ( ) ; }[0m
[31mExample #10[0m
Src : protected <unk> METHOD_1 ( boolean VAR_1 ) { <unk> VAR_2 = null ; java.util.List < <unk> > VAR_3 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 = new <unk> ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_3 = TYPE_1 . METHOD_5 ( VAR_2 ) ; } <unk> ( METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_4 ) . METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_5 ) , TYPE_3 . <unk> ( VAR_6 class ) ) ; return VAR_2 ; }[0m
Trg : protected <unk> METHOD_1 ( boolean VAR_1 ) { <unk> VAR_2 = null ; java.util.List < <unk> > VAR_3 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 = new <unk> ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_3 = TYPE_1 . METHOD_5 ( VAR_2 ) ; } <unk> ( METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_4 ) . METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_5 ) , TYPE_3 . <unk> ( ) ) ; return VAR_2 ; }[0m
Pred: protected java.lang.Boolean METHOD_1 ( boolean VAR_1 ) { java.lang.Thread VAR_2 = ; java.util.List < > > VAR_3 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 = new java.lang.Thread ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_7 ( ) . METHOD_7 ( VAR_3 ) . METHOD_7 ( VAR_6 ) ; } return VAR_2 ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) , true ) ; METHOD_6 ( ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> . METHOD_8 ( ) ; TYPE_2 . METHOD_9 ( <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> . METHOD_8 ( ) ; TYPE_2 . METHOD_9 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) . METHOD_4 ( ) ; METHOD_6 ( ) ; METHOD_6 ( true ) . METHOD_7 ( ) . METHOD_7 ( ) ; METHOD_8 . METHOD_8 ( ) ; TYPE_2 . METHOD_9 ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = METHOD_2 ( ) ; TYPE_2 p = new TYPE_3 ( null , <unk> , ( - 1 ) , null , null , null , VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; p . METHOD_3 ( VAR_4 ) ; assertEquals ( <unk> , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = METHOD_2 ( ) ; TYPE_2 p = new TYPE_3 ( null , <unk> , ( - 1 ) , null , null , null , VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; p . METHOD_3 ( VAR_4 ) ; assertEquals ( <unk> , VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; TYPE_2 p = new TYPE_3 ( , , ( ) , ( - 1 ) , null , null , VAR_1 , VAR_2 ) ; p . METHOD_3 ( ) ; assertEquals ( VAR_4 , VAR_4 ) ; }[0m
[31mExample #13[0m
Src : public boolean METHOD_1 ( TYPE_1 node ) { java.lang.String VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 . equals ( STRING_1 ) ) { TYPE_2 <unk> = <unk> . METHOD_3 ( node ) ; <unk> . METHOD_4 ( VAR_2 , node , <unk> , ( STRING_2 + STRING_3 ) , null ) ; } return false ; }[0m
Trg : public boolean METHOD_1 ( TYPE_1 node ) { java.lang.String VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 . equals ( STRING_1 ) ) { TYPE_2 <unk> = <unk> . METHOD_3 ( node ) ; <unk> . METHOD_4 ( VAR_2 , node , <unk> , ( STRING_2 + STRING_3 ) ) ; } return false ; }[0m
Pred: public boolean METHOD_1 ( TYPE_1 node ) { java.lang.String VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 . equals ( STRING_1 ) ) { TYPE_2 . init ( node ) ; ) . METHOD_4 ( VAR_2 , node , , ( STRING_2 + STRING_3 ) ; } return false ; }[0m
[31mExample #14[0m
Src : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , byte [ ] VAR_3 ) throws <unk> { TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_5 , 0 , 0 , true ) ; int VAR_6 = METHOD_3 ( ) ; TYPE_2 VAR_7 = TYPE_3 . METHOD_4 ( VAR_8 class ) ; VAR_9 . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; <unk> ( VAR_10 ) . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; }[0m
Trg : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , byte [ ] VAR_3 ) throws <unk> { TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_5 , 0 , true ) ; int VAR_6 = METHOD_3 ( ) ; TYPE_2 VAR_7 = TYPE_3 . METHOD_4 ( VAR_8 class ) ; VAR_9 . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; <unk> ( VAR_10 ) . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; }[0m
Pred: private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , byte [ ] VAR_3 ) throws TYPE_1 { TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_5 , 0 , true ) ; VAR_7 . METHOD_5 ( VAR_6 , VAR_4 ) ; METHOD_5 ( ) . METHOD_5 ( VAR_6 , VAR_7 ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 node ) { if ( ( ( node . METHOD_2 ( ) . size ( ) ) == 1 ) && ( ! ( node . METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) . equals ( STRING_1 ) ) ) ) { context . METHOD_4 ( VAR_2 , node , context . METHOD_5 ( node ) , ( STRING_2 + STRING_3 ) , null ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 node ) { if ( ( ( node . METHOD_2 ( ) . size ( ) ) == 1 ) && ( ! ( node . METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) . equals ( STRING_1 ) ) ) ) { context . METHOD_4 ( VAR_2 , node , context . METHOD_5 ( node ) , ( STRING_2 + STRING_3 ) ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 node ) { if ( ( ( node . METHOD_2 ( ) . size ( ) ) == 1 ) && ( ! ( node . METHOD_2 ( ) . toString ( ) . toString ( ) ) , ( STRING_2 + STRING_3 ) , null ) ; } }[0m
[31mExample #16[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { this . METHOD_1 ( ( <unk> == null ? new java.util.ArrayList < TYPE_1 > ( ) : ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> ) { this . METHOD_1 ( ( <unk> == null ? new java.util.ArrayList < TYPE_1 > ( ) : ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ) ; }[0m
Pred: public void init ( java.lang.Object VAR_1 , java.lang.Object ) { { this . METHOD_1 ( ( ) == null ? new java.util.ArrayList < TYPE_1 > ( ) : ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . ) ( ) ) . ) ( ) ) ) ) ; }[0m
[31mExample #17[0m
Src : protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_2 . <unk> ( VAR_4 class ) ) ; }[0m
Trg : protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_2 . <unk> ( ) ) ; }[0m
Pred: protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ! ( ) ) ; VAR_1 ( VAR_2 ) . METHOD_6 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_2 . ( VAR_4 class ) ) ; }[0m
[31mExample #18[0m
Src : private static void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { if ( ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) ) ) { context . METHOD_4 ( VAR_1 , element , context . METHOD_5 ( element ) , STRING_1 , null ) ; } }[0m
Trg : private static void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { if ( ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) ) ) { context . METHOD_4 ( VAR_1 , element , context . METHOD_5 ( element ) , STRING_1 ) ; } }[0m
Pred: private static void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { if ( ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) ) ) { context . METHOD_4 ( VAR_1 , element , context . METHOD_5 ( element ) , STRING_1 , null ) ; } }[0m
[31mExample #19[0m
Src : private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 , STRING_3 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } protected void METHOD_3 ( ) { } } ; VAR_2 . METHOD_4 ( VAR_6 , new TYPE_2 ( STRING_4 ) ) ; return VAR_2 ; }[0m
Trg : private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } protected void METHOD_3 ( ) { } } ; VAR_2 . METHOD_4 ( VAR_6 , new TYPE_2 ( STRING_4 ) ) ; return VAR_2 ; }[0m
Pred: private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 ) { return VAR_1 ; } finally { VAR_2 . METHOD_4 ( ) ; } VAR_2 . METHOD_4 ( ) ; return VAR_2 ; }[0m
[31mExample #20[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_3 ) + STRING_5 ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = TYPE_3 . METHOD_3 ( VAR_2 , true ) ; assertEquals ( ( STRING_1 + ( STRING_2 + STRING_6 ) ) , VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_3 ) + STRING_5 ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = TYPE_3 . METHOD_3 ( VAR_2 ) ; assertEquals ( ( STRING_1 + ( STRING_2 + STRING_6 ) ) , VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_3 ) + STRING_5 ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , ( STRING_2 + STRING_6 ) ) ; }[0m
[31mExample #21[0m
Src : private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int index = METHOD_2 ( VAR_1 , true ) ; if ( index >= 0 ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( VAR_2 . get ( index ) ) ) ; if ( <unk> != null ) { return VAR_3 ; } } return null ; }[0m
Trg : private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int index = METHOD_2 ( VAR_1 ) ; if ( index >= 0 ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( VAR_2 . get ( index ) ) ) ; if ( <unk> != null ) { return VAR_3 ; } } return null ; }[0m
Pred: private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int index = METHOD_2 ( VAR_1 , true ) ; if ( index >= 0 ) { TYPE_1 = ( ( TYPE_1 ) ( VAR_2 . get ( index ) ) ) ; if ( ) != { return VAR_3 ; } } return null ; }[0m
[31mExample #22[0m
Src : public void METHOD_1 ( ) { <unk> . <unk> ( ) . <unk> ( ) . METHOD_2 ( <unk> . getId ( ) ) ; <unk> . METHOD_3 ( ) ; <unk> ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , TYPE_1 . <unk> ( VAR_2 . <unk> class ) ) ) . <unk> ( new java.util.ArrayList < > ( TYPE_2 . METHOD_6 ( STRING_1 ) ) ) ; TYPE_3 . METHOD_7 ( STRING_2 , <unk> . METHOD_8 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> . <unk> ( ) . <unk> ( ) . METHOD_2 ( <unk> . getId ( ) ) ; <unk> . METHOD_3 ( ) ; <unk> ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , TYPE_1 . <unk> ( ) ) ) . <unk> ( new java.util.ArrayList < > ( TYPE_2 . METHOD_6 ( STRING_1 ) ) ) ; TYPE_3 . METHOD_7 ( STRING_2 , <unk> . METHOD_8 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { if . ( ) . METHOD_2 ( ) . METHOD_2 ( ) . getId ( ) ; VAR_1 . METHOD_3 ( ) ; METHOD_6 ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) . ) . METHOD_7 ( STRING_2 , TYPE_1 . METHOD_8 ( ) ) ; }[0m
[31mExample #23[0m
Src : private static void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = VAR_2 . METHOD_2 ( ) ; java.lang.Object VAR_4 = VAR_2 . METHOD_3 ( ) ; if ( VAR_4 instanceof TYPE_5 ) { if ( context . METHOD_4 ( ) . METHOD_5 ( null , VAR_1 , ( ( TYPE_5 ) ( VAR_4 ) ) ) ) { return ; } } context . METHOD_1 ( VAR_1 , <unk> , VAR_3 , null ) ; }[0m
Trg : private static void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = VAR_2 . METHOD_2 ( ) ; java.lang.Object VAR_4 = VAR_2 . METHOD_3 ( ) ; if ( VAR_4 instanceof TYPE_5 ) { if ( context . METHOD_4 ( ) . METHOD_5 ( null , VAR_1 , ( ( TYPE_5 ) ( VAR_4 ) ) ) ) { return ; } } context . METHOD_1 ( VAR_1 , <unk> , VAR_3 ) ; }[0m
Pred: private static void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 tmp = VAR_2 . METHOD_2 ( ) ; java.lang.Object VAR_4 = VAR_2 . METHOD_3 ( ) ; if ( context . METHOD_4 ( ) . METHOD_5 ( ) , VAR_1 ) ; } context . METHOD_1 ( VAR_1 , VAR_3 , null ) ; }[0m
[31mExample #24[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_4 ( VAR_1 , <unk> . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) ) ; TYPE_2 . assertEquals ( VAR_3 , <unk> . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_4 ( VAR_1 , <unk> . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . <unk> ( ) ) ; TYPE_2 . assertEquals ( VAR_3 , <unk> . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true ) ; super . METHOD_1 ( ) ; if . METHOD_4 ( VAR_1 , . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . METHOD_6 ( VAR_2 . ) ) ; TYPE_2 . assertEquals ( VAR_3 , . METHOD_7 ( ) ) ; }[0m
[31mExample #25[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { assert TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { new TYPE_4 ( VAR_2 , VAR_5 , VAR_1 , VAR_3 , VAR_6 ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { assert TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { new TYPE_4 ( VAR_2 , VAR_5 , VAR_1 , VAR_3 , VAR_6 , <unk> ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { assert TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { new TYPE_4 ( VAR_2 , VAR_5 , VAR_1 , VAR_6 ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; }[0m
[31mExample #26[0m
Src : void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) ; for ( final TYPE_2 VAR_2 : ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> . METHOD_3 ( ) ) ) ) { TYPE_3 VAR_3 = new TYPE_3 ( <unk> ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; } }[0m
Trg : void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) ; for ( final TYPE_2 VAR_2 : ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> . METHOD_3 ( ) ) ) ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; } }[0m
Pred: void METHOD_1 ( TYPE_1 ) { VAR_1 . METHOD_2 ( ) ; for ( final TYPE_2 VAR_2 : ( ( java.util.ArrayList < TYPE_2 > ( ) . ( ) ) ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; } }[0m
---------------
Class: Remove redundant initialization,Replace statement
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > <unk> ) { TYPE_3 <unk> = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { java.util.ArrayList < TYPE_4 > <unk> = null ; if ( ( VAR_1 . error ) == ( VAR_3 ) ) { <unk> = TYPE_5 . METHOD_3 ( <unk> , VAR_2 ) ; TYPE_6 . METHOD_4 ( VAR_4 , <unk> ) ; } VAR_2 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > <unk> ) { TYPE_3 <unk> = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { java.util.ArrayList < TYPE_4 > <unk> = TYPE_5 . METHOD_3 ( <unk> , VAR_2 ) ; if ( ( VAR_1 . error ) == ( VAR_3 ) ) { TYPE_6 . METHOD_4 ( VAR_4 , <unk> ) ; } VAR_2 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > ) { TYPE_3 < = TYPE_2 . METHOD_2 ( VAR_1 , false ) ; if ( ( VAR_2 . METHOD_2 ( VAR_1 ) ) != null ) { java.util.ArrayList < TYPE_4 > ( VAR_2 . METHOD_5 ( ) , VAR_1 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 <unk> = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { TYPE_4 <unk> = null ; if ( ( VAR_1 . error ) == ( VAR_4 ) ) { <unk> = TYPE_5 . METHOD_3 ( VAR_2 , VAR_3 ) ; TYPE_6 . METHOD_4 ( VAR_5 , <unk> ) ; } VAR_3 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 <unk> = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { TYPE_4 <unk> = TYPE_5 . METHOD_3 ( VAR_2 , VAR_3 ) ; if ( ( VAR_1 . error ) == ( VAR_4 ) ) { TYPE_6 . METHOD_4 ( VAR_5 , <unk> ) ; } VAR_3 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 -= = VAR_3 . METHOD_3 ( VAR_1 , false ) ; if ( ( VAR_3 . METHOD_2 ( VAR_1 ) ) != null ) { TYPE_4 = TYPE_5 . METHOD_3 ( VAR_2 , VAR_3 ) ; TYPE_6 . METHOD_4 ( VAR_5 , VAR_3 ) ; } }[0m
---------------
Class: Remove statement
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String path , int <unk> ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( <unk> ) ) ) ) { throw new <unk> ( STRING_2 ) ; } else if ( ( VAR_1 ) == ( METHOD_3 ( ) ) ) { throw new TYPE_3 ( STRING_3 ) ; } return METHOD_4 ( VAR_2 , path , <unk> ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( java.lang.String path , int <unk> ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( <unk> ) ) ) ) { throw new <unk> ( STRING_2 ) ; } return METHOD_4 ( VAR_2 , path , <unk> ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String path , int ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( ) ) ) ) { }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 <unk> ) { <unk> . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) ) ; <unk> . METHOD_2 ( STRING_3 , ( ( VAR_1 ) + STRING_4 ) ) ; <unk> . METHOD_2 ( STRING_5 , ( ( VAR_1 ) + STRING_6 ) ) ; <unk> . METHOD_2 ( STRING_7 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_9 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_10 , STRING_8 ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 <unk> ) { <unk> . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) ) ; <unk> . METHOD_2 ( STRING_5 , ( ( VAR_1 ) + STRING_6 ) ) ; <unk> . METHOD_2 ( STRING_7 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_9 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_10 , STRING_8 ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 ) { TYPE_1 . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) ) ; METHOD_2 ( STRING_3 , ( ( VAR_1 ) + STRING_4 ) ) ; . METHOD_2 ( STRING_7 , STRING_8 ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_1 < ? > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( true ) ; } } if ( ( VAR_4 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_5 : VAR_4 ) { VAR_5 . METHOD_4 ( ) ; } } VAR_1 . METHOD_2 ( STRING_2 ) ; TYPE_3 . METHOD_5 ( 0 ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_1 < ? > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( true ) ; } } if ( ( VAR_4 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_5 : VAR_4 ) { VAR_5 . METHOD_4 ( ) ; } } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_1 < ? > VAR_3 : VAR_2 ) { VAR_5 . METHOD_4 ( ) ; } }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; try { <unk> . METHOD_5 ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . <unk> ( ) ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; try { <unk> . METHOD_5 ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . <unk> ( ) ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_4 ( ) ; METHOD_6 ( STRING_1 ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_1 VAR_4 = METHOD_4 ( VAR_2 ) ; TYPE_2 . assertNotNull ( VAR_4 ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_5 ( ) ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_1 VAR_4 = METHOD_4 ( VAR_2 ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_5 ( ) ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_1 . METHOD_4 ( VAR_2 ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_6 ( ) ) ; }[0m
[31mExample #5[0m
Src : public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 <unk> = <unk> ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = <unk> . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; if ( VAR_2 != null ) { <unk> . METHOD_5 ( VAR_2 ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . <unk> ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_7 ( VAR_2 ) ; } return VAR_2 ; }[0m
Trg : public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 <unk> = <unk> ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = <unk> . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; if ( VAR_2 != null ) { <unk> . METHOD_5 ( VAR_2 ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; <unk> . METHOD_7 ( VAR_2 ) ; } return VAR_2 ; }[0m
Pred: public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 TYPE_1 = METHOD_2 ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; }[0m
[31mExample #6[0m
Src : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . <unk> class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; }[0m
Trg : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . <unk> class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; }[0m
Pred: protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . class , VAR_6 , VAR_2 ) ; }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_2 <unk> = <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; TYPE_2 <unk> = <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( ) ; } }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final <unk> <unk> = null ; final <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( <unk> ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( <unk> ) ; final <unk> VAR_4 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { final <unk> <unk> = null ; final <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( <unk> ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( <unk> ) ; final <unk> VAR_4 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final TYPE_1 VAR_1 = null ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_7 ( VAR_3 ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , <unk> ( 1 ) ) ; VAR_4 . METHOD_5 ( ) ; TYPE_1 . <unk> <unk> = <unk> . get ( ) ; TYPE_2 . METHOD_6 ( <unk> , 1 ) ; METHOD_7 ( <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , <unk> ( 1 ) ) ; TYPE_1 . <unk> <unk> = <unk> . get ( ) ; TYPE_2 . METHOD_6 ( <unk> , 1 ) ; METHOD_7 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . VAR_2 class , new java.lang.String [ ] { STRING_1 } , TYPE_1 . METHOD_2 ( ) , VAR_3 ) ; METHOD_7 ( ) ; }[0m
[31mExample #10[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( <unk> ( ) ) ; VAR_2 . METHOD_6 ( ) ; TYPE_2 VAR_3 = <unk> . get ( ) ; METHOD_7 ( VAR_3 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( <unk> ( ) ) ; TYPE_2 VAR_3 = <unk> . get ( ) ; METHOD_7 ( VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_4 ( ) ; }[0m
[31mExample #11[0m
Src : private void METHOD_1 ( ) { <unk> <unk> = ( ( <unk> ) ( METHOD_2 ( ) . <unk> ( ) ) ) ; if ( <unk> == null ) { <unk> = new <unk> ( ) ; } METHOD_3 ( <unk> , null , false , null ) ; getName ( ) . <unk> ( false ) ; METHOD_4 ( ) . <unk> ( false ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> <unk> = ( ( <unk> ) ( METHOD_2 ( ) . <unk> ( ) ) ) ; if ( <unk> == null ) { <unk> = new <unk> ( ) ; } METHOD_3 ( <unk> , null , false , null ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 = ( ( java.lang.Math.random ) ( METHOD_2 ( ) . METHOD_2 ( ) . METHOD_2 ( ) ) ) ; if ( ) == null ; METHOD_4 ( ) . METHOD_6 ( false ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( false ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_1 . <unk> ( ) , TYPE_1 . <unk> ( ) ) ; VAR_1 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( false ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_1 . <unk> ( ) ) ; VAR_1 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_6 ( ) , TYPE_1 . METHOD_2 ( ) , TYPE_1 . METHOD_2 ( ) ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_2 ( VAR_1 . get ( TYPE_1 . METHOD_2 ( ) ) ) . METHOD_6 ( ) ; METHOD_7 ( ) ; }[0m
[31mExample #14[0m
Src : public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 . <unk> class . METHOD_2 ( ) . METHOD_3 ( true ) ; TYPE_3 <unk> = new TYPE_3 ( ) ; TYPE_4 VAR_2 = new TYPE_4 ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_2 ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) ) ; }[0m
Trg : public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { TYPE_3 <unk> = new TYPE_3 ( ) ; TYPE_4 VAR_2 = new TYPE_4 ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_2 ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) ) ; }[0m
Pred: public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 . METHOD_2 ( ) . METHOD_2 ( ) . METHOD_3 ( true ) ; TYPE_3 VAR_2 = new TYPE_4 ( ) ; TYPE_4 . METHOD_4 ( VAR_2 ) ; }[0m
[31mExample #15[0m
Src : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , new java.lang.Object [ ] { TYPE_2 . toString ( ) } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; }[0m
Trg : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , new java.lang.Object [ ] { TYPE_2 . toString ( ) } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; }[0m
Pred: protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , TYPE_1 . METHOD_3 ( ) ) ; }[0m
[31mExample #16[0m
Src : public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , <unk> VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == ( <unk> ( ) . METHOD_2 ( ) ) ) { return VAR_3 . get ( ) ; } else if ( VAR_1 == ( <unk> ( ) . METHOD_3 ( ) ) ) { return VAR_4 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } }[0m
Trg : public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , <unk> VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == ( <unk> ( ) . METHOD_2 ( ) ) ) { return VAR_3 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } }[0m
Pred: public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , java.awt.Color VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == ( METHOD_2 ( ) . METHOD_2 ( ) ) ) { return VAR_3 . get ( ) ; } }[0m
[31mExample #17[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( null ) ; METHOD_3 ( false ) ; <unk> . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , <unk> , VAR_2 ) ; <unk> . METHOD_6 ( VAR_3 , <unk> . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_2 . METHOD_9 ( VAR_4 ) , TYPE_2 . <unk> ( VAR_5 class ) ) ; <unk> . METHOD_6 ( <unk> , <unk> . METHOD_7 ( 0 ) ) . METHOD_10 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_3 ( false ) ; <unk> . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , <unk> , VAR_2 ) ; <unk> . METHOD_6 ( VAR_3 , <unk> . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_2 . METHOD_9 ( VAR_4 ) , TYPE_2 . <unk> ( VAR_5 class ) ) ; <unk> . METHOD_6 ( <unk> , <unk> . METHOD_7 ( 0 ) ) . METHOD_10 ( ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { if ( VAR_1 . METHOD_2 ( ) ) . ( null ) . METHOD_2 ( ) ; TYPE_1 . METHOD_6 ( STRING_1 , context , TYPE_2 . METHOD_7 ( VAR_5 ) ) . METHOD_7 ( ) ; }[0m
[31mExample #18[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( ) ; } catch ( java.lang.NullPointerException <unk> ) { } int c = TYPE_1 . METHOD_3 ( ) ; int <unk> = TYPE_1 . METHOD_4 ( c ) ; METHOD_5 ( TYPE_1 . METHOD_2 ( <unk> ) ) ; TYPE_1 . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( c ) ; TYPE_2 . METHOD_8 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( ) ; } catch ( java.lang.NullPointerException <unk> ) { } int c = TYPE_1 . METHOD_3 ( ) ; int <unk> = TYPE_1 . METHOD_4 ( c ) ; METHOD_5 ( TYPE_1 . METHOD_2 ( <unk> ) ) ; TYPE_1 . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( c ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( TYPE_1 . METHOD_2 ( ) ) ; } TYPE_1 c = TYPE_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_2 ( c ) ; }[0m
[31mExample #19[0m
Src : protected void METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 ) ; <unk> . METHOD_3 ( VAR_2 ) ; <unk> . METHOD_4 ( true ) ; <unk> . METHOD_5 ( <unk> ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_3 . get ( VAR_1 ) ) . <unk> ( <unk> ) ; METHOD_7 ( false ) ; }[0m
Trg : protected void METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 ) ; <unk> . METHOD_3 ( VAR_2 ) ; <unk> . METHOD_4 ( true ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_3 . get ( VAR_1 ) ) . <unk> ( <unk> ) ; METHOD_7 ( false ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 VAR_1 = new java.lang.Thread ( ) ; VAR_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( VAR_2 ) ; METHOD_6 ( ) . METHOD_6 ( ) ; METHOD_7 ( ) ; }[0m
[31mExample #20[0m
Src : public boolean METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) ) ) { throw new <unk> ( STRING_2 ) ; } else if ( ( VAR_2 ) == ( METHOD_2 ( ) ) ) { throw new TYPE_1 ( STRING_3 ) ; } return METHOD_3 ( VAR_3 , path , VAR_1 ) ; }[0m
Trg : public boolean METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) ) ) { throw new <unk> ( STRING_2 ) ; } return METHOD_3 ( VAR_3 , path , VAR_1 ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( VAR_2 == VAR_1 ) ) ) { throw new TYPE_1 ( STRING_3 ) ; } }[0m
[31mExample #21[0m
Src : protected TYPE_1 METHOD_1 ( int index ) { for ( TYPE_1 <unk> = this ; <unk> != null ; <unk> = <unk> . METHOD_2 ( ) ) { TYPE_1 obj = <unk> . METHOD_3 ( index , null , this ) ; if ( obj != null ) { ( ( TYPE_2 ) ( obj ) ) . METHOD_4 ( METHOD_5 ( ) ) ; return obj ; } } return null ; }[0m
Trg : protected TYPE_1 METHOD_1 ( int index ) { for ( TYPE_1 <unk> = this ; <unk> != null ; <unk> = <unk> . METHOD_2 ( ) ) { TYPE_1 obj = <unk> . METHOD_3 ( index , null , this ) ; if ( obj != null ) { return obj ; } } return null ; }[0m
Pred: protected TYPE_1 METHOD_1 ( int index ) { for ( TYPE_1 VAR_1 = this ; ; != null . METHOD_2 ( ) ) { TYPE_1 obj = TYPE_1 . METHOD_3 ( index , null , this ) ; } return null ; }[0m
[31mExample #22[0m
Src : private static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } if ( ( VAR_5 ) != null ) { VAR_2 . METHOD_2 ( STRING_4 ) ; VAR_2 . METHOD_2 ( VAR_5 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } return VAR_2 ; }[0m
Trg : private static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } return VAR_2 ; }[0m
Pred: private static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_3 ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( STRING_2 , STRING_3 ) ; } return VAR_2 ; }[0m
[31mExample #23[0m
Src : public void METHOD_1 ( ) { TYPE_1 . <unk> <unk> = new TYPE_1 . <unk> ( ) ; <unk> . METHOD_2 ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_3 ) ; <unk> ( METHOD_6 ( false ) ) . <unk> ( VAR_4 ) . METHOD_7 ( VAR_3 ) ; TYPE_3 . assertEquals ( false , VAR_5 . METHOD_8 ( <unk> , <unk> ) . METHOD_9 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_3 ) ; <unk> ( METHOD_6 ( false ) ) . <unk> ( VAR_4 ) . METHOD_7 ( VAR_3 ) ; TYPE_3 . assertEquals ( false , VAR_5 . METHOD_8 ( <unk> , VAR_1 ) . METHOD_9 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_2 ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; TYPE_1 . METHOD_6 ( VAR_2 ) ; METHOD_7 ( VAR_3 ) . METHOD_7 ( ) ; }[0m
[31mExample #24[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . <unk> <unk> = new TYPE_1 . <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( <unk> ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . <unk> <unk> = new TYPE_1 . <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; try { VAR_3 . add ( <unk> ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . TYPE_1 . = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . add ( ) ; }[0m
[31mExample #25[0m
Src : public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ( METHOD_2 ( ) ) == false ) { <unk> ( <unk> . <unk> , STRING_1 ) ; throw new java.io.IOException ( ) ; } return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , this , VAR_1 , null ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ! ( METHOD_2 ( ) ) ) { <unk> ( <unk> . <unk> , STRING_1 ) ; throw new java.io.IOException ( ) ; } return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , this , VAR_1 , null ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ( METHOD_2 ( ) ) == false ) { return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , null ) ; }[0m
[31mExample #26[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 <unk> = TYPE_2 . <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; TYPE_1 <unk> = TYPE_2 . <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( VAR_2 1 ] . toString ( ) ) ; }[0m
---------------
Class: Remove statement,Add try block
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ; final int VAR_2 = <unk> ; VAR_1 . METHOD_4 ( VAR_2 ) ; int VAR_3 = VAR_1 . METHOD_5 ( ) ; assertTrue ( STRING_1 , ( ( TYPE_4 . METHOD_6 ( ( VAR_2 - VAR_3 ) ) ) <= <unk> ) ) ; VAR_1 . METHOD_7 ( ) ; <unk> . METHOD_7 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { try ( TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ) { final int VAR_2 = <unk> ; VAR_1 . METHOD_4 ( VAR_2 ) ; int VAR_3 = VAR_1 . METHOD_5 ( ) ; assertTrue ( STRING_1 , ( ( TYPE_4 . METHOD_6 ( ( VAR_2 - VAR_3 ) ) ) <= <unk> ) ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 ( ! ( VAR_2 ) ) { TYPE_1 VAR_1 = new TYPE_2 ( ( TYPE_3 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ) ; final int VAR_2 = VAR_1 . METHOD_5 ( ) ; } VAR_1 . METHOD_7 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( INT_1 ) ; assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_5 ( ) ) >= INT_1 ) ) ; VAR_1 . METHOD_6 ( ) ; <unk> . METHOD_6 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { try ( TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ) { VAR_1 . METHOD_4 ( INT_1 ) ; assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_5 ( ) ) >= INT_1 ) ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 ( ! ( VAR_2 ) ) { TYPE_1 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_5 ( ) ) ) ) ; } }[0m
---------------
Class: Remove statement,Move existing statements in try block
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; try { VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; try { VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_4 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < <unk> > ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < <unk> > ( ) ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { METHOD_5 ( ) ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 > ( ) , null ) ; VAR_4 . METHOD_5 ( ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 > ( ) , null ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { null ) { . METHOD_5 ( ) ; } catch ( TYPE_2 VAR_5 ) { } }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; VAR_4 . METHOD_5 ( ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; VAR_1 . METHOD_5 ( ) ; try { <unk> . METHOD_6 ( <unk> ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; try { <unk> . METHOD_6 ( <unk> ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; try { . METHOD_6 ( METHOD_6 ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { } }[0m
---------------
Class: Remove type casting in method body
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> , TYPE_2 args ) { if ( ( METHOD_2 ( ) . <unk> ( ) ) == null ) { METHOD_3 ( ) . <unk> ( false ) ; } else { METHOD_3 ( ) . <unk> ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . <unk> ( ) ) ) ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> , TYPE_2 args ) { if ( ( METHOD_2 ( ) . <unk> ( ) ) == null ) { METHOD_3 ( ) . <unk> ( false ) ; } else { METHOD_3 ( ) . <unk> ( METHOD_2 ( ) . <unk> ( ) ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_1 , TYPE_2 args ) { if ( ( METHOD_2 ( ) . METHOD_2 ( ) ) == null ) { METHOD_3 ( false ) ; } else { METHOD_3 ( ) . METHOD_6 ( ( ) . METHOD_2 ( ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( final float value ) { int VAR_1 = TYPE_1 . METHOD_2 ( value ) ; if ( ( ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 ) ) || ( VAR_1 == INT_3 ) ) { VAR_2 . METHOD_3 ( ( ( VAR_3 ) + ( ( int ) ( value ) ) ) ) ; } else { VAR_2 . METHOD_4 ( new TYPE_2 . <unk> ( value ) ) ; } }[0m
Trg : public void METHOD_1 ( final float value ) { int VAR_1 = TYPE_1 . METHOD_2 ( value ) ; if ( ( ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 ) ) || ( VAR_1 == INT_3 ) ) { VAR_2 . METHOD_3 ( ( ( VAR_3 ) + ( ( int ) ( value ) ) ) ) ; } else { VAR_2 . METHOD_4 ( value ) ; } }[0m
Pred: public void METHOD_1 ( final float value ) { int VAR_1 = TYPE_1 . METHOD_2 ( value ) ; if ( ( VAR_1 == INT_1 ) || ( VAR_1 == INT_3 ) ) { VAR_2 . METHOD_3 ( new TYPE_2 ( value ) ) ; } else { VAR_2 . METHOD_4 ( value ) ; } }[0m
---------------
Class: Rename method
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 . <unk> METHOD_1 ( java.lang.Object value ) { TYPE_1 . <unk> result = super . METHOD_1 ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ( ( java.lang.String ) ( value ) ) ) ) ; } return result ; }[0m
Trg : public TYPE_1 . <unk> <unk> ( java.lang.Object value ) { TYPE_1 . <unk> result = super . <unk> ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ( ( java.lang.String ) ( value ) ) ) ) ; } return result ; }[0m
Pred: public TYPE_1 < TYPE_2 < java.lang.Object value ) { TYPE_1 . result = super . METHOD_1 ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ( java.lang.String ) ( value ) ) ) ; } return result ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public boolean METHOD_1 ( ) { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . METHOD_2 ( 1 ) ; <unk> . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) , <unk> } ) ; return METHOD_4 ( ) . METHOD_6 ( ) ; }[0m
Trg : public boolean <unk> ( ) { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . METHOD_2 ( 1 ) ; <unk> . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) , <unk> } ) ; return METHOD_4 ( ) . METHOD_6 ( ) ; }[0m
Pred: public boolean METHOD_2 ( ) { TYPE_1 TYPE_1 = new TYPE_1 ( ) ; if . METHOD_2 ( 1 ) ; ) . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) , } ) ; return METHOD_4 ( ) . METHOD_6 ( ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_1 ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_1 ) ; }[0m
Pred: public void METHOD_2 ( java.lang.Object target , java.lang.Object ) ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_2 > ) ( ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_1 ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( <unk> != null ) { <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; } else { VAR_4 = true ; } VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( <unk> != null ) { <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; } else { VAR_4 = true ; } VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_3 ( java.lang.Object target , java.lang.Object ) ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( != != null ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( ) ) ; VAR_3 = VAR_2 ; } else { VAR_4 = true ; } VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #4[0m
Src : protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( METHOD_3 ( ) ) ; return ( ( <unk> ( VAR_1 . METHOD_4 ( ) ) ) && ( ( METHOD_5 ( ) ) || ( <unk> ( VAR_2 . METHOD_6 ( ) ) ) ) ) && ( <unk> ( METHOD_7 ( METHOD_2 ( ) , METHOD_3 ( ) ) ) ) ; }[0m
Trg : protected boolean <unk> ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( METHOD_3 ( ) ) ; return ( ( <unk> ( VAR_1 . METHOD_4 ( ) ) ) && ( ( METHOD_5 ( ) ) || ( <unk> ( VAR_2 . METHOD_6 ( ) ) ) ) ) && ( <unk> ( METHOD_7 ( METHOD_2 ( ) , METHOD_3 ( ) ) ) ) ; }[0m
Pred: protected boolean METHOD_2 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( METHOD_3 ( ) ) ; return ( ( ( VAR_1 . METHOD_4 ( ) ) ) && ( ( VAR_2 . METHOD_6 ( ) ) ) ) && ( ( METHOD_7 ( ) , METHOD_3 ( ) ) ) ; }[0m
[31mExample #5[0m
Src : public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; if ( ( ( java.lang.Boolean ) ( METHOD_6 ( ) . <unk> ( ) ) ) ) { METHOD_4 ( ) . METHOD_7 ( new TYPE_2 [ ] { VAR_1 , new TYPE_3 ( ) } ) ; } return METHOD_4 ( ) . METHOD_8 ( ) ; }[0m
Trg : public boolean <unk> ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; if ( ( ( java.lang.Boolean ) ( METHOD_6 ( ) . <unk> ( ) ) ) ) { METHOD_4 ( ) . METHOD_7 ( new TYPE_2 [ ] { VAR_1 , new TYPE_3 ( ) } ) ; } return METHOD_4 ( ) . METHOD_8 ( ) ; }[0m
Pred: public boolean METHOD_3 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( ) ; METHOD_4 ( ) . METHOD_7 ( new TYPE_2 ( ) ) ; } return METHOD_4 ( ) . METHOD_8 ( ) ; }[0m
[31mExample #6[0m
Src : protected boolean METHOD_1 ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( TYPE_1 . <unk> ( ) . METHOD_5 ( ) , TYPE_1 . <unk> ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; }[0m
Trg : protected boolean <unk> ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( TYPE_1 . <unk> ( ) . METHOD_5 ( ) , TYPE_1 . <unk> ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; }[0m
Pred: protected boolean METHOD_2 ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( TYPE_1 . METHOD_5 ( ) . METHOD_5 ( ) , TYPE_1 . METHOD_6 ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; }[0m
[31mExample #7[0m
Src : public TYPE_1 . <unk> METHOD_1 ( java.lang.Object value ) { int VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( ( ( VAR_3 . length ( ) ) + VAR_1 ) + 1 ) <= ( METHOD_3 ( ) ) ; TYPE_1 . <unk> VAR_4 = new TYPE_1 . <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; if ( ! VAR_2 ) { VAR_4 . METHOD_5 ( TYPE_2 . METHOD_6 ( METHOD_7 ( ) ) ) ; } return VAR_4 ; }[0m
Trg : public TYPE_1 . <unk> <unk> ( java.lang.Object value ) { int VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( ( ( VAR_3 . length ( ) ) + VAR_1 ) + 1 ) <= ( METHOD_3 ( ) ) ; TYPE_1 . <unk> VAR_4 = new TYPE_1 . <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; if ( ! VAR_2 ) { VAR_4 . METHOD_5 ( TYPE_2 . METHOD_6 ( METHOD_7 ( ) ) ) ; } return VAR_4 ; }[0m
Pred: public TYPE_1 METHOD_2 ( java.lang.Object value value ) { int VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( ( ( VAR_3 . length ( ) ) + VAR_1 ) + 1 ) <= ( VAR_2 . ) ; if ( ! VAR_2 ) { VAR_4 . METHOD_5 ( ) . METHOD_6 ( METHOD_7 ( ) ) ; } return VAR_4 ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . <unk> ( false ) ; if ( ! VAR_4 ) { VAR_3 . METHOD_3 ( ) . <unk> ( false ) ; } } }[0m
Trg : public void <unk> ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . <unk> ( false ) ; if ( ! VAR_4 ) { VAR_3 . METHOD_3 ( ) . <unk> ( false ) ; } } }[0m
Pred: public void METHOD_2 ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . equals ( false ) ; VAR_3 . METHOD_3 ( ) . equals ( false ) ; } } }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ; <unk> . METHOD_2 ( ( result != null ? ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ; <unk> . METHOD_2 ( ( result != null ? ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ) ) ; }[0m
Pred: public void delete ( java.lang.Object target , java.lang.Object ) ) { TYPE_1 TYPE_1 = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . METHOD_2 ( ) ) ( VAR_1 ) ) . ( ( java.util.ArrayList < TYPE_3 > ( ) ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ; }[0m
[31mExample #10[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } else { VAR_1 . METHOD_6 ( ) ; } }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } else { VAR_1 . METHOD_6 ( ) ; } }[0m
Pred: public void METHOD_2 ( target target , java.lang.Object ) { { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_5 ( ) ; } else { VAR_1 . METHOD_6 ( ) ; } }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . <unk> = <unk> ; VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . <unk> = <unk> ; VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_2 ( target target , java.lang.Object ) ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < > > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( ) ) ; VAR_1 . init ( ) ; VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( <unk> ) ) ; TYPE_1 <unk> = VAR_1 . get ( 0 ) ; if ( <unk> != null ) { TYPE_2 . METHOD_2 ( ( ( <unk> ) ( <unk> ) ) , <unk> . getId ( ) ) ; } }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( <unk> ) ) ; TYPE_1 <unk> = VAR_1 . get ( 0 ) ; if ( <unk> != null ) { TYPE_2 . METHOD_2 ( ( ( <unk> ) ( <unk> ) ) , <unk> . getId ( ) ) ; } }[0m
Pred: public void METHOD_2 ( java.lang.Object position , java.lang.Object ) ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( ) ) ; TYPE_1 TYPE_1 VAR_1 . get ( 0 ) ; if ( != != null ) { TYPE_2 . METHOD_2 ( ( ( ) ) ( ) ) != . getId ( ) ; } }[0m
---------------
Class: Rename variable
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( <unk> ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . <unk> ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_7 ( VAR_4 ) ; <unk> . <unk> result = <unk> . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_4 , result ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( <unk> ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . <unk> ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_7 ( VAR_4 ) ; <unk> . <unk> result = <unk> . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_4 , result ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_7 ( VAR_3 ) ; VAR_4 . METHOD_6 ( VAR_4 ) ; TYPE_2 . assertEquals ( VAR_4 ) ; TYPE_2 . assertEquals ( VAR_4 , result ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < <unk> . <unk> > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( <unk> . <unk> VAR_3 : VAR_1 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( VAR_3 . getName ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; }[0m
Trg : public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < <unk> . <unk> > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( <unk> . <unk> VAR_3 : VAR_1 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( VAR_3 . getName ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; }[0m
Pred: public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < TYPE_1 . VAR_1 > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; }[0m
[31mExample #2[0m
Src : byte [ ] METHOD_1 ( java.lang.Object VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 . METHOD_5 ( ) ; } catch ( java.lang.Throwable t ) { METHOD_6 ( t ) ; return new byte [ 0 ] ; } }[0m
Trg : byte [ ] METHOD_1 ( java.lang.Object VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 . METHOD_5 ( ) ; } catch ( java.lang.Throwable fail ) { METHOD_6 ( fail ) ; return new byte [ 0 ] ; } }[0m
Pred: byte [ ] METHOD_1 ( java.lang.Object VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; } catch ( java.lang.Throwable t ) { METHOD_6 ( t ) ; return new byte [ 0 ] ; } }[0m
---------------
Class: Replace fully qualified name with import or vice versa
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws <unk> { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } } ; TYPE_2 . <unk> ( VAR_4 . METHOD_4 ( <unk> . METHOD_5 ( VAR_5 class ) ) ) . <unk> ( VAR_1 ) ; assertEquals ( <unk> , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws <unk> { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } } ; TYPE_2 . <unk> ( VAR_4 . METHOD_4 ( <unk> . METHOD_5 ( VAR_5 class ) ) ) . <unk> ( VAR_1 ) ; <unk> ( <unk> , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 . . METHOD_5 ( ) ) ) ) . ; ( VAR_1 , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static int METHOD_1 ( int a , int b , int c ) { int [ ] values = new int [ ] { a , b , c } ; VAR_1 . <unk> ( ( ( STRING_1 + ( TYPE_1 . toString ( values ) ) ) + STRING_2 ) ) ; return a > b ? a : b ; }[0m
Trg : public static int METHOD_1 ( int a , int b , int c ) { int [ ] values = new int [ ] { a , b , c } ; java.lang.System.out.println ( ( ( STRING_1 + ( TYPE_1 . toString ( values ) ) ) + STRING_2 ) ) ; return a > b ? a : b ; }[0m
Pred: public static int METHOD_1 ( int a , int b , int c ) { int [ ] values = new int [ ] { a , b , c } ; VAR_1 . ( ( ( STRING_1 + ( TYPE_1 . toString ( ) ) ) + STRING_2 ) ) ; return a > b b ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , true ) ; VAR_1 . METHOD_2 ( null , new TYPE_2 ( ) ) ; <unk> ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( null , new TYPE_3 ( ) , new TYPE_2 ( ) ) ; <unk> ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , true ) ; VAR_1 . METHOD_2 ( null , new TYPE_2 ( ) ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( null , new TYPE_3 ( ) , new TYPE_2 ( ) ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , true ) ; VAR_1 . METHOD_2 ( null , new TYPE_2 ( ) ) ; VAR_1 ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( null , new TYPE_2 ( ) ) ; ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; }[0m
[31mExample #3[0m
Src : private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( <unk> . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; }[0m
Trg : private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( <unk> . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; <unk> ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; }[0m
Pred: private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) , <unk> . METHOD_5 ( int . class ) ) ; assertEquals ( VAR_2 , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) , <unk> . METHOD_5 ( int . class ) ) ; <unk> ( VAR_2 , true ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; if ( VAR_5 ) . METHOD_4 ( VAR_1 ( VAR_1 ) , TYPE_1 . METHOD_5 ( int . class ) ) ; assertEquals ( VAR_2 , true ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) ) ; <unk> . METHOD_4 ( ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( <unk> . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) ) ; TYPE_3 <unk> = ( ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) ) ; assertEquals ( STRING_1 , METHOD_8 ( <unk> , VAR_2 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { <unk> . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) ) ; <unk> . METHOD_4 ( ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( <unk> . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) ) ; TYPE_3 <unk> = ( ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) ) ; <unk> ( STRING_1 , METHOD_8 ( <unk> , VAR_2 ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { if . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) ) ; VAR_1 . METHOD_4 ( ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( . METHOD_5 ( ) ) . METHOD_6 ( ) ) ; assertEquals ( STRING_1 , METHOD_8 ( VAR_1 , VAR_2 ) ) ; }[0m
[31mExample #6[0m
Src : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , java.lang.String VAR_3 , byte [ ] VAR_4 ) throws java.lang.Exception { TYPE_1 VAR_5 = new TYPE_2 ( VAR_6 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) . build ( ) ; TYPE_3 VAR_7 = TYPE_3 . METHOD_4 ( VAR_5 , VAR_8 ) ; assertEquals ( VAR_1 , VAR_9 ) ; assertEquals ( VAR_3 , VAR_10 ) ; }[0m
Trg : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , java.lang.String VAR_3 , byte [ ] VAR_4 ) throws java.lang.Exception { TYPE_1 VAR_5 = new TYPE_2 ( VAR_6 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) . build ( ) ; TYPE_3 VAR_7 = TYPE_3 . METHOD_4 ( VAR_5 , VAR_8 ) ; <unk> ( VAR_1 , VAR_9 ) ; <unk> ( VAR_3 , VAR_10 ) ; }[0m
Pred: private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , java.lang.String VAR_3 , byte [ ] VAR_4 ) throws java.lang.Exception { TYPE_1 VAR_5 = new TYPE_2 ( VAR_6 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) . METHOD_5 ( ) ; assertEquals ( VAR_1 , VAR_9 ) ; assertEquals ( VAR_3 , VAR_10 ) ; }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( long <unk> , long <unk> , long c , TYPE_1 VAR_1 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { assertEquals ( VAR_2 , TYPE_4 . METHOD_2 ( <unk> ) ) ; super . METHOD_1 ( <unk> , <unk> , c , VAR_1 , <unk> , <unk> ) ; }[0m
Trg : public void METHOD_1 ( long <unk> , long <unk> , long c , TYPE_1 VAR_1 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { <unk> ( VAR_2 , TYPE_4 . METHOD_2 ( <unk> ) ) ; super . METHOD_1 ( <unk> , <unk> , c , VAR_1 , <unk> , <unk> ) ; }[0m
Pred: public void METHOD_1 ( long VAR_1 , long start , long c , TYPE_1 VAR_1 , TYPE_2 VAR_1 , TYPE_3 ) throws java.lang.Exception { assertEquals ( VAR_2 , TYPE_4 . METHOD_2 ( ) ) ; super . METHOD_1 ( TYPE_1 , VAR_1 , c , c , VAR_1 , TYPE_1 ) ; }[0m
---------------
Class: Replace generic specification with diamond operator
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( <unk> . METHOD_3 ( ) ) ; params . METHOD_4 ( <unk> . METHOD_3 ( ) ) ; <unk> = <unk> . METHOD_5 ( new TYPE_2 < TYPE_1 > ( params ) ) ; <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_8 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( <unk> . METHOD_3 ( ) ) ; params . METHOD_4 ( <unk> . METHOD_3 ( ) ) ; <unk> = <unk> . METHOD_5 ( new TYPE_2 ( params ) ) ; <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_8 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( . METHOD_3 ( ) ) ; params . METHOD_4 ( ) . METHOD_6 ( ) ; METHOD_6 ( VAR_1 ) . METHOD_6 ( ) . METHOD_6 ( ) ; METHOD_8 ( VAR_3 ) . METHOD_8 ( ) . METHOD_8 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( ) { TYPE_2 < <unk> > VAR_1 = new TYPE_2 < <unk> > ( ) { public TYPE_3 METHOD_2 ( <unk> VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return <unk> ( new TYPE_6 < TYPE_7 , TYPE_3 > ( VAR_5 , VAR_2 , VAR_4 ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { TYPE_2 < <unk> > VAR_1 = new TYPE_2 < <unk> > ( ) { public TYPE_3 METHOD_2 ( <unk> VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return <unk> ( new TYPE_6 ( VAR_5 , VAR_2 , VAR_4 ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { TYPE_2 < java.util.Vector > VAR_1 = new TYPE_2 ( ) > { public TYPE_3 METHOD_2 ( VAR_2 VAR_2 ) ; } return VAR_3 . METHOD_2 ( VAR_1 , METHOD_3 ( id ) ) ; return ( new TYPE_6 ( TYPE_7 , VAR_2 , VAR_2 , VAR_4 ) ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 < <unk> > ( VAR_2 , VAR_3 . <unk> class ) , VAR_4 , new TYPE_3 < TYPE_1 , TYPE_1 > ( ) { public TYPE_4 . <unk> <unk> ( TYPE_1 VAR_5 , TYPE_1 <unk> ) { return new TYPE_5 ( METHOD_3 ( VAR_6 , VAR_7 class ) . <unk> ( VAR_5 , <unk> ) ) ; } } ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 ( VAR_2 , VAR_3 . <unk> class ) , VAR_4 , new TYPE_3 < TYPE_1 , TYPE_1 > ( ) { public TYPE_4 . <unk> <unk> ( TYPE_1 VAR_5 , TYPE_1 <unk> ) { return new TYPE_5 ( METHOD_3 ( VAR_6 , VAR_7 class ) . <unk> ( VAR_5 , <unk> ) ) ; } } ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 VAR_2 , VAR_3 . class ) , VAR_4 , new TYPE_3 ( TYPE_1 , TYPE_1 ) { public TYPE_4 . METHOD_2 ( METHOD_3 ( VAR_6 , VAR_7 class ) ) . METHOD_6 ( VAR_5 , ) ; } } ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , null ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , null ) ) ) ; METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_7 ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( <unk> . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( <unk> . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) { state = METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ; }[0m
---------------
Class: Replace if statement with assert statement
Golden example (False):
[31mExample #1[0m
Src : public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 <unk> = VAR_2 . get ( VAR_1 ) ; if ( <unk> == null ) { throw new <unk> ( STRING_2 ) ; } return <unk> . METHOD_3 ( ) ; }[0m
Trg : public int METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; METHOD_2 ( ) ; TYPE_2 <unk> = VAR_2 . get ( VAR_1 ) ; if ( <unk> == null ) { throw new <unk> ( STRING_2 ) ; } return <unk> . METHOD_3 ( ) ; }[0m
Pred: public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE_2 . VAR_2 . get ( VAR_1 ) ; throw new TYPE_1 ( STRING_2 ) ; } return false . METHOD_3 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 value = VAR_1 . METHOD_3 ( ) ; TYPE_1 VAR_2 = VAR_3 . get ( value ) ; if ( VAR_2 != null ) { return VAR_2 ; } VAR_3 . METHOD_4 ( value , VAR_1 ) ; return VAR_1 ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; METHOD_2 ( ) ; TYPE_2 value = VAR_1 . METHOD_3 ( ) ; TYPE_1 VAR_2 = VAR_3 . get ( value ) ; if ( VAR_2 != null ) { return VAR_2 ; } VAR_3 . METHOD_4 ( value , VAR_1 ) ; return VAR_1 ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE_2 . set ( VAR_1 ) ; TYPE_1 VAR_2 = VAR_3 . get ( value ) ; VAR_3 . METHOD_4 ( value , VAR_1 ) ; return VAR_1 ; }[0m
---------------
Class: Replace invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( <unk> ) . METHOD_2 ( 1 , <unk> ) . METHOD_2 ( <unk> , <unk> ) . METHOD_2 ( <unk> , 1 ) . METHOD_3 ( 1 ) . METHOD_4 ( ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( 1 ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( <unk> ) . METHOD_2 ( 1 , <unk> ) . METHOD_2 ( <unk> , <unk> ) . METHOD_2 ( <unk> , 1 ) . METHOD_3 ( 1 ) . build ( ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( 1 ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; }[0m
Pred: public void METHOD_1[0m
+++++++++++++++
[31mExample #1[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , double value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final double VAR_3 = ( <unk> == null ) ? ( ( double ) ( <unk> . METHOD_2 ( ) ) ) : ( ( double ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , double value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final double VAR_3 = ( <unk> == null ) ? ( ( double ) ( <unk> . METHOD_2 ( ) ) ) : ( ( double ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Pred: static void METHOD_1[0m
[31mExample #2[0m
Src : void METHOD_1 ( ) { if ( VAR_1 ) <unk> ( VAR_2 . <unk> , ( ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) ) ; VAR_5 . METHOD_2 ( ) ; }[0m
Trg : void METHOD_1 ( ) { if ( VAR_1 ) <unk> ( VAR_2 . <unk> , ( ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) ) ; VAR_5 . METHOD_2 ( ) ; }[0m
Pred: void METHOD_1 ( ) { if ( VAR_1 ) / ( VAR_2 . get ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) ; VAR_5 . METHOD_2 ( ) ; }[0m
[31mExample #3[0m
Src : public void <unk> ( ) { TYPE_1 <unk> = new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( <unk> ) ; try { while ( true ) { java.lang.String line = VAR_2 . METHOD_2 ( ) ; if ( line != null ) { VAR_3 . METHOD_3 ( STRING_1 , VAR_4 , line ) ; } else { break ; } } } catch ( java.io.IOException <unk> ) { } }[0m
Trg : public void <unk> ( ) { TYPE_1 <unk> = new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( <unk> ) ; try { while ( true ) { java.lang.String line = VAR_2 . METHOD_2 ( ) ; if ( line != null ) { VAR_3 . <unk> ( STRING_1 , VAR_4 , line ) ; } else { break ; } } } catch ( java.io.IOException <unk> ) { } }[0m
Pred: public void init ( ) { TYPE_1 TYPE_1 = new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; try { while ( true ) { if ( line != null ) { VAR_3 . METHOD_3 ( STRING_1 , line ) ; } else { break ; } } }[0m
[31mExample #4[0m
Src : boolean METHOD_1 ( ) { if ( VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) <unk> ( VAR_4 . <unk> , ( STRING_1 + ( VAR_5 ) ) ) ; VAR_6 = true ; VAR_1 = false ; return true ; } return false ; }[0m
Trg : boolean METHOD_1 ( ) { if ( VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) <unk> ( VAR_4 . <unk> , ( STRING_1 + ( VAR_5 ) ) ) ; VAR_6 = true ; VAR_1 = false ; return true ; } return false ; }[0m
Pred: boolean METHOD_1 ( ) { if ( VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) - ( VAR_4 . VAR_1 , ( STRING_1 + ( VAR_5 ) ) ) ; VAR_6 = true ; return true ; return true ; } return false ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String <unk> , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , <unk> ) ; java.lang.Object value = VAR_4 < java.lang.Object > METHOD_2 ( TYPE_3 . <unk> ( VAR_1 . toString ( ) ) , <unk> ) ; VAR_2 . put ( VAR_3 , value ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String <unk> , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , <unk> ) ; java.lang.Object value = VAR_4 < java.lang.Object > getValue ( TYPE_3 . <unk> ( VAR_1 . toString ( ) ) , <unk> ) ; VAR_2 . put ( VAR_3 , value ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_1 , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , TYPE_1 > VAR_1 . METHOD_2 ( VAR_1 ) ) ; VAR_2 . put ( VAR_3 , value ) ; }[0m
[31mExample #6[0m
Src : protected boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . info ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( VAR_1 , 0 , VAR_6 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( STRING_2 ) ; VAR_4 . info ( STRING_3 ) ; return true ; }[0m
Trg : protected boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . info ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( VAR_1 , 0 , VAR_6 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( STRING_2 ) ; VAR_4 . METHOD_5 ( STRING_3 ) ; return true ; }[0m
Pred: protected boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . info ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( VAR_1 , 0 , VAR_6 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( STRING_3 ) ; VAR_4 . METHOD_5 ( STRING_3 ) ; return true ; }[0m
[31mExample #7[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , false ) ; int VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 >= 0 ) { if ( VAR_4 ) <unk> ( TYPE_2 . <unk> , ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_1 ) ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; } }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , false ) ; int VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 >= 0 ) { if ( VAR_4 ) <unk> ( TYPE_2 . <unk> , ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_1 ) ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; } }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , false ) ; int VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 >= 0 ) { if ( VAR_4 . equals ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_4 ( <unk> . getName ( ) , STRING_1 ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_4 ( <unk> . getName ( ) , STRING_2 ) ) { METHOD_6 ( ) ; } }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( STRING_1 . equals ( <unk> . getName ( ) ) ) { METHOD_5 ( ) ; } else if ( STRING_2 . equals ( <unk> . getName ( ) ) ) { METHOD_6 ( ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 state ) { super . METHOD_1 ( ) ; if ( if == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_4 ( super . getName ( ) , STRING_1 ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_4 ( ) . STRING_2 ) ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . <unk> ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . <unk> ( ) ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . <unk> ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . assertEquals ( VAR_5 , VAR_4 . METHOD_5 ( ) . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( VAR_5 ) == ( VAR_4 . ) ( ) ) ) ; }[0m
[31mExample #10[0m
Src : public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . put ( VAR_2 . METHOD_5 ( ) , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . add ( VAR_2 ) ; return null ; }[0m
Trg : public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . put ( VAR_2 . getId ( ) , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . add ( VAR_2 ) ; return null ; }[0m
Pred: public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . put ( VAR_2 . METHOD_5 ( ) , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . add ( VAR_2 ) ; return null ; }[0m
[31mExample #11[0m
Src : protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . <unk> ( ) . <unk> ( ) , TYPE_1 . METHOD_6 ( ) , TYPE_1 . <unk> ( ) . METHOD_7 ( ) ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . <unk> ( ) . getId ( ) , TYPE_1 . METHOD_6 ( ) , TYPE_1 . <unk> ( ) . METHOD_7 ( ) ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . . ( ) . build ( ) , TYPE_1 . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { <unk> ( VAR_1 ) . <unk> ( VAR_2 ) . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 . <unk> class ) ) ; <unk> ( VAR_4 ) . <unk> ( VAR_2 ) . METHOD_4 ( TYPE_3 . <unk> ( ) ) ; VAR_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_1 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_8 , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { <unk> ( VAR_1 ) . <unk> ( VAR_2 ) . METHOD_2 ( TYPE_3 . <unk> ( ) ) ; <unk> ( VAR_4 ) . <unk> ( VAR_2 ) . METHOD_4 ( TYPE_3 . <unk> ( ) ) ; VAR_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_1 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_8 , VAR_4 ) ; }[0m
Pred: public void METHOD_1[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) , new java.lang.Object ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) , new java.lang.Object ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . <unk> ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 TYPE_1 = TYPE_1 . METHOD_2 ( VAR_1 class ) ; if ( state . METHOD_3 ( ) ) . METHOD_6 ( true ) ; METHOD_6 . METHOD_6 ( TYPE_4 ) . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( ) , TYPE_4 . METHOD_7 ( id ) } ; }[0m
[31mExample #14[0m
Src : protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_4 ( ) ; } } , VAR_2 . METHOD_5 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_6 ( ) ; } } , VAR_2 . METHOD_7 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { VAR_1 . <unk> ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_4 ( ) ; } } , VAR_2 . METHOD_5 ( ) ) ; VAR_1 . <unk> ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_6 ( ) ; } } , VAR_2 . METHOD_7 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 ) ) { return super . METHOD_4 ( ) ; } } TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) { return VAR_1 . METHOD_6 ( ) ; } } , VAR_2 . METHOD_7 ( ) ) ; }[0m
[31mExample #15[0m
Src : public boolean METHOD_1 ( ) { try { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( <unk> . getId ( ) ) ) ; TYPE_2 <unk> = VAR_1 . get ( VAR_3 < java.lang.Integer > METHOD_4 ( VAR_4 ) , VAR_5 ) ; if ( <unk> . <unk> ( ) ) { return true ; } } catch ( java.lang.Exception <unk> ) { } return false ; }[0m
Trg : public boolean METHOD_1 ( ) { try { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( <unk> . getId ( ) ) ) ; TYPE_2 <unk> = VAR_1 . get ( VAR_3 < java.lang.Integer > getValue ( VAR_4 ) , VAR_5 ) ; if ( <unk> . <unk> ( ) ) { return true ; } } catch ( java.lang.Exception <unk> ) { } return false ; }[0m
Pred: public boolean METHOD_1 ( ) { try { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . getConfig ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( VAR_3 ) ) ; if ( VAR_1 . get ( VAR_4 ) ) VAR_5 ; } catch ( java.lang.Exception ) ) { return true ; } return false ; }[0m
[31mExample #16[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( METHOD_3 ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . <unk> ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( getName ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . <unk> ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( METHOD_3 ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; }[0m
[31mExample #17[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( <unk> . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( VAR_1 , null ) ; TYPE_2 . METHOD_8 ( <unk> , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . <unk> ( <unk> . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( VAR_1 , null ) ; TYPE_2 . METHOD_8 ( <unk> , VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( super . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_6 ( VAR_1 ) ; VAR_7 . METHOD_8 ( VAR_1 ) ; ) . METHOD_8 ( 0 , VAR_4 ) ; }[0m
[31mExample #18[0m
Src : public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . METHOD_5 ( ) ) ; METHOD_6 ( <unk> ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . <unk> ( ) ) ; METHOD_6 ( <unk> ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ( this . METHOD_4 ( ) , METHOD_6 ( ) . METHOD_5 ( ) ) ; METHOD_6 ( METHOD_6 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; }[0m
[31mExample #19[0m
Src : private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { <unk> ( VAR_1 ) ; TYPE_1 . <unk> ( ) . METHOD_3 ( ) . add ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 < java.lang.Integer > METHOD_5 ( VAR_3 ) ) ) ; return false ; } return true ; }[0m
Trg : private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { <unk> ( VAR_1 ) ; TYPE_1 . <unk> ( ) . METHOD_3 ( ) . add ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 < java.lang.Integer > getValue ( VAR_3 ) ) ) ; return false ; } return true ; }[0m
Pred: private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { init ( VAR_1 ) ; TYPE_1 . build ( ) . METHOD_3 ( ) . add ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 < > METHOD_5 ( VAR_3 ) ) ) ; return false ; } return true ; }[0m
[31mExample #20[0m
Src : private void METHOD_1 ( ) { <unk> ( METHOD_2 ( ) . METHOD_3 ( ) ) . <unk> ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < <unk> > ( ) ; <unk> ( METHOD_4 ( ) . METHOD_5 ( ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_1 . METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( METHOD_2 ( ) . METHOD_3 ( ) ) . <unk> ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < <unk> > ( ) ; <unk> ( METHOD_4 ( ) . getId ( ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_1 . METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( METHOD_2 ( ) . METHOD_3 ( ) ) . VAR_1 ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < > > ( ) ; if ( METHOD_4 ( ) . METHOD_5 ( ) ) . setEnabled ( VAR_3 ) . setEnabled ( VAR_3 ) ; java.lang.System.out.println ( VAR_1 ) ; }[0m
[31mExample #21[0m
Src : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : VAR_3 . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . <unk> ( ) . METHOD_5 ( ) ) ) ; return ; case VAR_4 : METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( false ) ; return ; } super . METHOD_1 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : <unk> . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . <unk> ( ) . METHOD_5 ( ) ) ) ; return ; case VAR_4 : METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( false ) ; return ; } super . METHOD_1 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : VAR_3 . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . METHOD_6 ( ) ) ) ; return ; case VAR_4 : METHOD_6 ( VAR_1 ) ; return super . METHOD_1 ( ) ; }[0m
[31mExample #22[0m
Src : protected void METHOD_1 ( ) { if ( ( TYPE_1 . <unk> ( ) . METHOD_2 ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . <unk> ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { if ( ( TYPE_1 . <unk> ( ) . <unk> ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . <unk> ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . build ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; TYPE_1 . METHOD_7 ( METHOD_8 ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; }[0m
[31mExample #23[0m
Src : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( <unk> == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_6 ( <unk> . getName ( ) , STRING_1 ) ) { METHOD_7 ( ) ; } else if ( TYPE_1 . METHOD_6 ( <unk> . getName ( ) , STRING_2 ) ) { METHOD_8 ( ) ; } }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( <unk> == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( STRING_1 . equals ( <unk> . getName ( ) ) ) { METHOD_7 ( ) ; } else if ( STRING_2 . equals ( <unk> . getName ( ) ) ) { METHOD_8 ( ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 state ) { super . METHOD_1 ( ) ; if ( if == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( ( VAR_1 . getName ( ) ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_6 ( VAR_1 . getName ( ) , STRING_2 ) ) { METHOD_8 ( ) ; } }[0m
[31mExample #24[0m
Src : private void METHOD_1 ( <unk> <unk> ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } VAR_1 . put ( <unk> . METHOD_2 ( ) . toString ( ) , TYPE_1 . name ( ) ) ; }[0m
Trg : private void METHOD_1 ( <unk> <unk> ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } VAR_1 . put ( <unk> . <unk> ( ) . toString ( ) , TYPE_1 . name ( ) ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 state ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } VAR_1 . put ( VAR_1 . METHOD_2 ( ) . toString ( ) , TYPE_1 . name ( ) ) ; }[0m
[31mExample #25[0m
Src : protected boolean METHOD_1 ( ) { boolean <unk> = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { <unk> ( VAR_1 ) ; <unk> = false ; } else if ( ( METHOD_3 ( ) ) && ( ( TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ) != ( VAR_2 ) ) ) { <unk> ( VAR_3 ) ; <unk> = false ; } return <unk> ; }[0m
Trg : protected boolean METHOD_1 ( ) { boolean <unk> = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { <unk> ( VAR_1 ) ; <unk> = false ; } else if ( ( METHOD_3 ( ) ) && ( ( TYPE_1 . METHOD_2 ( ) . <unk> ( ) ) != ( VAR_2 ) ) ) { <unk> ( VAR_3 ) ; <unk> = false ; } return <unk> ; }[0m
Pred: protected boolean METHOD_1 ( ) { boolean init = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { if ( VAR_1 ) ; VAR_1 = false ; } else if ( ( METHOD_3 ( ) . METHOD_4 ( ) ) != ) ) { return false ; } return VAR_1 ; }[0m
[31mExample #26[0m
Src : protected void METHOD_1 ( ) { <unk> <unk> = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . <unk> ( ) . METHOD_4 ( ) ) ; if ( <unk> != null ) { <unk> . METHOD_5 ( TYPE_2 . METHOD_6 ( <unk> . METHOD_7 ( ) , <unk> . METHOD_8 ( ) ) ) ; } TYPE_1 . METHOD_9 ( ) . METHOD_10 ( <unk> ) ; }[0m
Trg : protected void METHOD_1 ( ) { <unk> <unk> = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . <unk> ( ) . getId ( ) ) ; if ( <unk> != null ) { <unk> . METHOD_5 ( TYPE_2 . METHOD_6 ( <unk> . METHOD_7 ( ) , <unk> . METHOD_8 ( ) ) ) ; } TYPE_1 . METHOD_9 ( ) . METHOD_10 ( <unk> ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . build ( ) ) ; if ( != != null ) { TYPE_1 . METHOD_5 ( TYPE_2 . METHOD_6 ( ) , METHOD_8 . METHOD_8 ( ) ) ; } TYPE_1 . METHOD_9 ( ) . trim ( ) ; }[0m
[31mExample #27[0m
Src : protected TYPE_1 . <unk> METHOD_1 ( <unk> VAR_1 , <unk> id , java.lang.String name , java.util.List < TYPE_1 . <unk> > VAR_2 ) { for ( TYPE_1 . <unk> <unk> : VAR_2 ) { if ( ( ( id != null ) && ( id . equals ( <unk> . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( <unk> . METHOD_2 ( ) ) ) ) ) { return <unk> ; } } return null ; }[0m
Trg : protected TYPE_1 . <unk> METHOD_1 ( <unk> VAR_1 , <unk> id , java.lang.String name , java.util.List < TYPE_1 . <unk> > VAR_2 ) { for ( TYPE_1 . <unk> <unk> : VAR_2 ) { if ( ( ( id != null ) && ( id . equals ( <unk> . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( <unk> . getName ( ) ) ) ) ) { return <unk> ; } } return null ; }[0m
Pred: protected TYPE_1[0m
[31mExample #28[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . <unk> ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 TYPE_1 = TYPE_1 . METHOD_2 ( VAR_1 class ) ; if ( state . METHOD_3 ( ) ) . METHOD_6 ( true ) ; METHOD_6 . METHOD_6 ( TYPE_4 ) . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( ) , TYPE_4 . METHOD_7 ( id ) } ; }[0m
---------------
================
Duration: 0:02:17.950787

Start conducting one shot learning experiment for Defects4J...
Top-1 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-3 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-5 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-10 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-50 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0

Top-1 accuracy on Defects4J for other edit representations: 0 / 12 = 0.0
Top-3 accuracy on Defects4J for other edit representations: 0 / 12 = 0.0
Top-5 accuracy on Defects4J for other edit representations: 0 / 12 = 0.0
Top-10 accuracy on Defects4J for other edit representations: 0 / 12 = 0.0
Top-50 accuracy on Defects4J for other edit representations: 0 / 12 = 0.0
================
Correct Examples
================
================
Incorrect Examples
Class: ['condBlockExcAdd']
Golden example (False):
[31mExample #1[0m
Src : public static long METHOD_1 ( long VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case - 1 : return - VAR_1 ; case 0 : return 0L ; case 1 : return VAR_1 ; } long VAR_3 = VAR_1 * VAR_2 ; if ( VAR_3 / VAR_2 != VAR_1 ) { throw new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_2 ) ; } return VAR_3 ; }[0m
Trg : public static long METHOD_1 ( long VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case - 1 : if ( VAR_1 == VAR_4 ) { throw new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_2 ) ; } return - VAR_1 ; case 0 : return 0L ; case 1 : return VAR_1 ; } long VAR_3 = VAR_1 * VAR_2 ; if ( VAR_3 / VAR_2 != VAR_1 ) { throw new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_2 ) ; } return VAR_3 ; }[0m
Pred: public static long METHOD_1 ( long VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case 1 : return ; VAR_1 case 1 : return - VAR_1 ; case 1 : return - 1 ; case 1 : return VAR_1 ; } case 1 : return VAR_1 VAR_2 ; if ( VAR_3 != VAR_2 ) { throw new TYPE_1 ( VAR_1 + VAR_2 ) ; } return VAR_3 ; } return VAR_3 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public VAR_1 ( int VAR_2 , int VAR_3 ) { super ( VAR_2 , VAR_3 ) ; this . rows = VAR_2 ; this . VAR_4 = VAR_3 ; this . VAR_5 = new TYPE_1 ( 0.0 ) ; }[0m
Trg : public VAR_1 ( int VAR_2 , int VAR_3 ) { super ( VAR_2 , VAR_3 ) ; long VAR_6 = ( long ) VAR_2 ; long VAR_7 = ( long ) VAR_3 ; if ( VAR_6 * VAR_7 >= ( long ) VAR_8 ) { throw new TYPE_2 ( VAR_6 * VAR_7 , VAR_8 , false ) ; } this . rows = VAR_2 ; this . VAR_4 = VAR_3 ; this . VAR_5 = new TYPE_1 ( 0.0 ) ; }[0m
Pred: public VAR_1 ( int VAR_2 , int VAR_3 ) { TYPE_1 ( VAR_2 , VAR_3 ) ; this . VAR_1 = VAR_3 ; if ( VAR_2 == null ) ; this . VAR_5 = new TYPE_1 ( VAR_2 ) ; this . VAR_2 = VAR_3 ; this . VAR_5 = new TYPE_1 ( 0.0 ) ; } }[0m
---------------
Class: ['condBlockOthersAdd']
Golden example (False):
[31mExample #1[0m
Src : void add ( String VAR_1 ) { METHOD_1 ( ) ; if ( VAR_1 . length ( ) == 0 ) { return ; } char c = VAR_1 . METHOD_2 ( 0 ) ; if ( ( METHOD_3 ( c ) || c == CHAR_1 ) && METHOD_3 ( METHOD_4 ( ) ) ) { append ( STRING_1 ) ; } append ( VAR_1 ) ; }[0m
Trg : void add ( String VAR_1 ) { METHOD_1 ( ) ; if ( VAR_1 . length ( ) == 0 ) { return ; } char c = VAR_1 . METHOD_2 ( 0 ) ; if ( ( METHOD_3 ( c ) || c == CHAR_1 ) && METHOD_3 ( METHOD_4 ( ) ) ) { append ( STRING_1 ) ; } else if ( c == CHAR_2 && METHOD_4 ( ) == CHAR_2 ) { append ( STRING_1 ) ; } append ( VAR_1 ) ; }[0m
Pred: void add ( char VAR_1 ) { METHOD_1 ( ) ; if ( VAR_1 . length ( ) == 0 ) { return ; } char c = VAR_1 . METHOD_2 ( 0 ) ; if ( ( METHOD_3 ( c ) || c == CHAR_1 ) ) { switch ( STRING_1 ) ; } else { java.lang.System.out.println ( VAR_1 ) ; } append ( VAR_1 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( ) throws TYPE_2 { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( this . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) { new TYPE_3 ( ) . METHOD_6 ( ) ; } return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) throws TYPE_2 { return null . METHOD_2 ( VAR_2 , VAR_3 ) ; if ( ( VAR_3 ) != null ) { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; } }[0m
---------------
Class: ['condBlockRetAdd']
Golden example (False):
[31mExample #1[0m
Src : public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == null || VAR_2 == null ) { return VAR_1 == null && VAR_2 == null ; } else if ( METHOD_2 ( VAR_1 ) ) { return METHOD_2 ( VAR_2 ) && METHOD_3 ( VAR_1 , VAR_2 ) ; } else { return VAR_1 . equals ( VAR_2 ) ; } }[0m
Trg : public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } else if ( VAR_1 == null || VAR_2 == null ) { return VAR_1 == null && VAR_2 == null ; } else if ( METHOD_2 ( VAR_1 ) ) { return METHOD_2 ( VAR_2 ) && METHOD_3 ( VAR_1 , VAR_2 ) ; } else { return VAR_1 . equals ( VAR_2 ) ; } }[0m
Pred: public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == null ) { return false == null ; } if ( VAR_1 == null ) { return VAR_1 == null ; } else if ( METHOD_2 ( VAR_1 ) ) { return METHOD_2 ( VAR_1 , VAR_2 ) ; } else { return VAR_1 . equals ( VAR_2 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 answer ( TYPE_2 VAR_1 ) throws TYPE_3 { return VAR_1 . METHOD_1 ( ) ; }[0m
Trg : public TYPE_1 answer ( TYPE_2 VAR_1 ) throws TYPE_3 { if ( TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { return new TYPE_5 ( ) . answer ( VAR_1 ) ; } return VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public TYPE_1 answer ( TYPE_2 VAR_1 ) throws TYPE_3 { if ( VAR_1 == null ) { return true ; } return VAR_1 . METHOD_1 ( ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 add ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_1 ( VAR_1 ) ; return METHOD_2 ( VAR_2 + VAR_1 . METHOD_3 ( ) , VAR_3 + VAR_1 . METHOD_4 ( ) ) ; }[0m
Trg : public TYPE_1 add ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_1 ( VAR_1 ) ; if ( VAR_4 || VAR_5 ) { return VAR_6 ; } return METHOD_2 ( VAR_2 + VAR_1 . METHOD_3 ( ) , VAR_3 + VAR_1 . METHOD_4 ( ) ) ; }[0m
Pred: public TYPE_1 add ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_1 ( VAR_1 ) ; if ( VAR_2 == VAR_1 ) { return true ; } return METHOD_2 ( VAR_2 + VAR_1 . METHOD_3 ( ) , VAR_3 + VAR_1 . METHOD_4 ( ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { for ( String VAR_2 : VAR_1 . METHOD_3 ( ) ) { TYPE_2 VAR_3 = VAR_1 . METHOD_4 ( VAR_2 ) ; if ( ! METHOD_5 ( VAR_2 ) ) { TYPE_2 VAR_4 = VAR_3 ; if ( ! METHOD_6 ( VAR_2 ) ) { VAR_4 = METHOD_7 ( VAR_5 ) . METHOD_8 ( VAR_3 ) ; } METHOD_9 ( VAR_2 , VAR_4 , null ) ; } } } }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( METHOD_10 ( ) ) { return ; } if ( VAR_1 . METHOD_2 ( ) ) { for ( String VAR_2 : VAR_1 . METHOD_3 ( ) ) { TYPE_2 VAR_3 = VAR_1 . METHOD_4 ( VAR_2 ) ; if ( ! METHOD_5 ( VAR_2 ) ) { TYPE_2 VAR_4 = VAR_3 ; if ( ! METHOD_6 ( VAR_2 ) ) { VAR_4 = METHOD_7 ( VAR_5 ) . METHOD_8 ( VAR_3 ) ; } METHOD_9 ( VAR_2 , VAR_4 , null ) ; } } } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { for ( = VAR_2 : VAR_1 ) { TYPE_2 VAR_3 = VAR_1 . METHOD_4 ( VAR_2 ) ; if ( ! ( VAR_2 ) ) { VAR_4 = true ; } if ( ! ( VAR_2 ) ) { VAR_4 = VAR_3 ; VAR_1 . METHOD_3 ( VAR_5 ) ; break ; } VAR_4 = VAR_3 ; } }[0m
[31mExample #4[0m
Src : boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) { return false ; } for ( TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 != null ; VAR_2 = VAR_2 . METHOD_4 ( ) ) { if ( VAR_3 ) { break ; } else if ( VAR_4 ) { return false ; } } return true ; }[0m
Trg : boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) { return false ; } for ( TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 != null ; VAR_2 = VAR_2 . METHOD_4 ( ) ) { if ( VAR_3 ) { if ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) != VAR_5 ) { return false ; } break ; } else if ( VAR_4 ) { return false ; } } return true ; }[0m
Pred: boolean METHOD_1[0m
---------------
Class: ['notClassified']
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 [ ] METHOD_1 ( int VAR_1 ) throws TYPE_2 { if ( VAR_1 <= 0 ) { throw new TYPE_2 ( VAR_2 , VAR_1 ) ; } final TYPE_1 [ ] out = ( TYPE_1 [ ] ) TYPE_3 . METHOD_2 ( VAR_3 . get ( 0 ) . getClass ( ) , VAR_1 ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { out [ i ] = METHOD_1 ( ) ; } return out ; }[0m
Trg : public TYPE_4 [ ] METHOD_1 ( int VAR_1 ) throws TYPE_2 { if ( VAR_1 <= 0 ) { throw new TYPE_2 ( VAR_2 , VAR_1 ) ; } final TYPE_4 [ ] out = new TYPE_4 [ VAR_1 ] ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { out [ i ] = METHOD_1 ( ) ; } return out ; }[0m
Pred: public TYPE_1 [ ] METHOD_1 ( int index ) throws TYPE_2 { if ( VAR_1 <= 0 ) { throw new TYPE_1 ( VAR_2 , VAR_1 ) ; for ( int i = 0 ; VAR_1 [ i ] ; } return out ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static double METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 ) { int sum = 0 ; for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { final int VAR_3 = VAR_1 [ i ] - VAR_2 [ i ] ; sum += VAR_3 * VAR_3 ; } return TYPE_1 . METHOD_2 ( sum ) ; }[0m
Trg : public static double METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 ) { double sum = 0 ; for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { final double VAR_3 = VAR_1 [ i ] - VAR_2 [ i ] ; sum += VAR_3 * VAR_3 ; } return TYPE_1 . METHOD_2 ( sum ) ; }[0m
Pred: public static double METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 ) { int sum += 0 ; final int VAR_3 = VAR_1 [ index ] ; break += VAR_3 ; } return TYPE_1 . METHOD_2 ( sum ) ; }[0m
---------------
Class: ['singleLine']
Golden example (False):
[31mExample #1[0m
Src : static float METHOD_1 ( String VAR_1 ) { return METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 ) ) ; }[0m
Trg : static int METHOD_1 ( String VAR_1 ) { return METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 ) ) ; }[0m
Pred: static int METHOD_1 ( int VAR_1 ) { return METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 data ) { TYPE_2 error = null ; VAR_1 . start ( ) ; while ( VAR_1 . METHOD_2 ( ) ) { try { VAR_2 . METHOD_1 ( data ) ; if ( VAR_3 ) { return ; } else { error = null ; } } catch ( TYPE_3 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } catch ( TYPE_4 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } } if ( error != null ) { throw error ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 data ) { TYPE_2 error = null ; VAR_1 . start ( ) ; while ( VAR_1 . METHOD_2 ( ) ) { try { VAR_2 . METHOD_1 ( data ) ; if ( VAR_3 ) { return ; } else { error = null ; } } catch ( TYPE_3 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } catch ( TYPE_2 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } } if ( error != null ) { throw error ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 data ) { TYPE_2 error = null ; VAR_1 . start ( ) ; while ( VAR_1 . METHOD_2 ( ) ) { try { VAR_2 . METHOD_1 ( VAR_4 ) ; } catch ( VAR_4 VAR_4 ) { } } catch ( error != null ) { throw error = ; } }[0m
[31mExample #2[0m
Src : private double METHOD_1 ( final double VAR_1 , final int VAR_2 , final int VAR_3 ) throws TYPE_1 , TYPE_2 { final int VAR_4 = VAR_2 * VAR_3 ; final double VAR_5 = VAR_4 / FLOAT_1 ; final double VAR_6 = VAR_4 * ( VAR_2 + VAR_3 + 1 ) / FLOAT_2 ; final double VAR_7 = ( VAR_1 - VAR_5 ) / TYPE_3 . METHOD_2 ( VAR_6 ) ; final TYPE_4 VAR_8 = new TYPE_4 ( 0 , 1 ) ; return INT_1 * VAR_8 . METHOD_3 ( VAR_7 ) ; }[0m
Trg : private double METHOD_1 ( final double VAR_1 , final int VAR_2 , final int VAR_3 ) throws TYPE_1 , TYPE_2 { final double VAR_4 = VAR_2 * VAR_3 ; final double VAR_5 = VAR_4 / FLOAT_1 ; final double VAR_6 = VAR_4 * ( VAR_2 + VAR_3 + 1 ) / FLOAT_2 ; final double VAR_7 = ( VAR_1 - VAR_5 ) / TYPE_3 . METHOD_2 ( VAR_6 ) ; final TYPE_4 VAR_8 = new TYPE_4 ( 0 , 1 ) ; return INT_1 * VAR_8 . METHOD_3 ( VAR_7 ) ; }[0m
Pred: private double METHOD_1 ( final double VAR_1 , final int VAR_2 , final int VAR_3 ) throws TYPE_1 , TYPE_2 { final int VAR_4 = VAR_2 * VAR_3 ; final double VAR_5 = VAR_4 * ( VAR_2 - 1 ) / ; final double VAR_8 = new TYPE_4 ( 0 , 1 ) ; return INT_1 * VAR_8 . METHOD_3 ( VAR_7 ) ; }[0m
---------------
Class: ['wrapsIf']
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { if ( this . VAR_1 != VAR_2 && this . VAR_1 != VAR_3 ) { throw new TYPE_1 ( STRING_1 ) ; } VAR_4 = TYPE_2 . METHOD_2 ( ) ; this . VAR_1 = VAR_5 ; }[0m
Trg : public void METHOD_1 ( ) { if ( this . VAR_1 != VAR_2 && this . VAR_1 != VAR_3 ) { throw new TYPE_1 ( STRING_1 ) ; } if ( this . VAR_1 == VAR_2 ) { VAR_4 = TYPE_2 . METHOD_2 ( ) ; } this . VAR_1 = VAR_5 ; }[0m
Pred: public void METHOD_1 ( ) { if ( this . VAR_1 != null ) { if ( this . VAR_1 != VAR_2 . equals ( VAR_3 VAR_3 ) ) { throw new TYPE_1 ( STRING_1 ) ; } } VAR_4 = TYPE_2 . METHOD_2 ( ) ; this . VAR_1 = VAR_5 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static boolean equals ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } if ( VAR_1 == null || VAR_2 == null ) { return false ; } return VAR_1 . equals ( VAR_2 ) ; }[0m
Trg : public static boolean equals ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } if ( VAR_1 == null || VAR_2 == null ) { return false ; } if ( VAR_1 instanceof String && VAR_2 instanceof String ) { return VAR_1 . equals ( VAR_2 ) ; } return TYPE_2 . METHOD_1 ( VAR_1 , false , 0 , VAR_2 , 0 , TYPE_3 . METHOD_2 ( VAR_1 . length ( ) , VAR_2 . length ( ) ) ) ; }[0m
Pred: public static boolean equals ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } if ( VAR_1 == VAR_2 ) { return true == null ; } if ( VAR_1 == null ) { return false ; } return VAR_1 . equals ( VAR_2 ) ; }[0m
---------------
Class: ['wrapsIfElse']
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_1 ( ( TYPE_2 < ? > ) VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 < ? > ) { METHOD_1 ( ( TYPE_2 < ? > ) VAR_1 ) ; } else { throw new TYPE_3 ( STRING_1 ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( index < TYPE_1 > VAR_1 ) { METHOD_1 ( ) ; } else { METHOD_1 ( ( TYPE_2 < ? > ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 field ) { TYPE_3 VAR_1 = field . METHOD_1 ( ) ; if ( VAR_1 != null && VAR_1 instanceof TYPE_4 ) { TYPE_3 VAR_2 = ( ( TYPE_4 ) VAR_1 ) . METHOD_2 ( ) [ 0 ] ; return ( TYPE_1 ) VAR_2 ; } return VAR_3 class ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 field ) { TYPE_3 VAR_1 = field . METHOD_1 ( ) ; if ( VAR_1 != null && VAR_1 instanceof TYPE_4 ) { TYPE_3 VAR_2 = ( ( TYPE_4 ) VAR_1 ) . METHOD_2 ( ) [ 0 ] ; if ( VAR_2 instanceof TYPE_1 ) { return ( TYPE_1 ) VAR_2 ; } else if ( VAR_2 instanceof TYPE_4 ) { return ( TYPE_1 ) ( ( TYPE_4 ) VAR_2 ) . METHOD_3 ( ) ; } } return VAR_3 class ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 field ) { TYPE_3 VAR_1 = field . METHOD_1 ( ) ; if ( VAR_1 != null ) { if ( VAR_1 instanceof TYPE_4 ) { TYPE_3 VAR_2 = ( ( TYPE_4 ) ) ; } else { VAR_2 = new TYPE_1 ( ) [ 0 ] ; } return ( TYPE_1 ) ; } return VAR_3 class ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( final int x ) { return METHOD_2 ( x ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( final int x ) { if ( x >= 0 && x < VAR_1 ) { return METHOD_2 ( x ) ; } else { return METHOD_1 ( METHOD_3 ( x ) ) ; } }[0m
Pred: public TYPE_1 METHOD_1 ( final int x ) { if ( x < TYPE_1 > ) { return METHOD_2 ( x ) ; } else { return METHOD_2 ( x ) ; } }[0m
---------------
================
Duration: 0:00:12.187794

Starting long experiments
Start conducting accuracy calculation experiment for Test dataset all...
BUG FIXING ACCURACY
Top-1 accuracy: 558 / 5835 = 0.09562982005141388
Top-3 accuracy: 651 / 5835 = 0.11156812339331619
Top-5 accuracy: 684 / 5835 = 0.11722365038560412
Top-10 accuracy: 718 / 5835 = 0.12305055698371893
Top-50 accuracy: 803 / 5835 = 0.137617823479006
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 3680 / 5835 = 0.6306769494430163
Top-3 accuracy: 4275 / 5835 = 0.7326478149100257
Top-5 accuracy: 4456 / 5835 = 0.7636675235646958
Top-10 accuracy: 4613 / 5835 = 0.7905741216795201
Top-50 accuracy: 4840 / 5835 = 0.829477292202228
Duration: 1:17:31.967931

Starting all Tufano variations experiments
Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 222 / 300 = 0.74
Top-3 accuracy: 259 / 300 = 0.8633333333333333
Top-5 accuracy: 266 / 300 = 0.8866666666666667
Top-10 accuracy: 273 / 300 = 0.91
Top-50 accuracy: 280 / 300 = 0.9333333333333333
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 222 / 300 = 0.74
Top-3 accuracy: 259 / 300 = 0.8633333333333333
Top-5 accuracy: 266 / 300 = 0.8866666666666667
Top-10 accuracy: 273 / 300 = 0.91
Top-50 accuracy: 280 / 300 = 0.9333333333333333
Duration: 0:04:03.855773

Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 29 / 300 = 0.09666666666666666
Top-3 accuracy: 33 / 300 = 0.11
Top-5 accuracy: 33 / 300 = 0.11
Top-10 accuracy: 34 / 300 = 0.11333333333333333
Top-50 accuracy: 41 / 300 = 0.13666666666666666
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 192 / 300 = 0.64
Top-3 accuracy: 228 / 300 = 0.76
Top-5 accuracy: 237 / 300 = 0.79
Top-10 accuracy: 246 / 300 = 0.82
Top-50 accuracy: 257 / 300 = 0.8566666666666667
Duration: 0:04:02.598533

Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 24 / 300 = 0.08
Top-3 accuracy: 31 / 300 = 0.10333333333333333
Top-5 accuracy: 32 / 300 = 0.10666666666666667
Top-10 accuracy: 32 / 300 = 0.10666666666666667
Top-50 accuracy: 35 / 300 = 0.11666666666666667
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 187 / 300 = 0.6233333333333333
Top-3 accuracy: 215 / 300 = 0.7166666666666667
Top-5 accuracy: 222 / 300 = 0.74
Top-10 accuracy: 224 / 300 = 0.7466666666666667
Top-50 accuracy: 238 / 300 = 0.7933333333333333
Duration: 0:04:00.332697

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 300 = 0.0
Top-3 accuracy: 2 / 300 = 0.006666666666666667
Top-5 accuracy: 3 / 300 = 0.01
Top-10 accuracy: 3 / 300 = 0.01
Top-50 accuracy: 5 / 300 = 0.016666666666666666
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 15 / 300 = 0.05
Top-3 accuracy: 27 / 300 = 0.09
Top-5 accuracy: 32 / 300 = 0.10666666666666667
Top-10 accuracy: 32 / 300 = 0.10666666666666667
Top-50 accuracy: 37 / 300 = 0.12333333333333334
Duration: 0:03:11.740906

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 2 / 300 = 0.006666666666666667
Top-5 accuracy: 3 / 300 = 0.01
Top-10 accuracy: 3 / 300 = 0.01
Top-50 accuracy: 3 / 300 = 0.01
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 14 / 300 = 0.04666666666666667
Top-3 accuracy: 25 / 300 = 0.08333333333333333
Top-5 accuracy: 27 / 300 = 0.09
Top-10 accuracy: 30 / 300 = 0.1
Top-50 accuracy: 35 / 300 = 0.11666666666666667
Duration: 0:03:12.280191

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 1 / 300 = 0.0033333333333333335
Top-5 accuracy: 2 / 300 = 0.006666666666666667
Top-10 accuracy: 2 / 300 = 0.006666666666666667
Top-50 accuracy: 4 / 300 = 0.013333333333333334
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 16 / 300 = 0.05333333333333334
Top-3 accuracy: 24 / 300 = 0.08
Top-5 accuracy: 25 / 300 = 0.08333333333333333
Top-10 accuracy: 29 / 300 = 0.09666666666666666
Top-50 accuracy: 30 / 300 = 0.1
Duration: 0:03:14.338771

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 9 / 300 = 0.03
Top-3 accuracy: 12 / 300 = 0.04
Top-5 accuracy: 12 / 300 = 0.04
Top-10 accuracy: 13 / 300 = 0.043333333333333335
Top-50 accuracy: 13 / 300 = 0.043333333333333335
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 112 / 300 = 0.37333333333333335
Top-3 accuracy: 130 / 300 = 0.43333333333333335
Top-5 accuracy: 134 / 300 = 0.44666666666666666
Top-10 accuracy: 138 / 300 = 0.46
Top-50 accuracy: 146 / 300 = 0.4866666666666667
Duration: 0:04:09.089430

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 6 / 300 = 0.02
Top-3 accuracy: 6 / 300 = 0.02
Top-5 accuracy: 6 / 300 = 0.02
Top-10 accuracy: 7 / 300 = 0.023333333333333334
Top-50 accuracy: 9 / 300 = 0.03
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 120 / 300 = 0.4
Top-3 accuracy: 140 / 300 = 0.4666666666666667
Top-5 accuracy: 145 / 300 = 0.48333333333333334
Top-10 accuracy: 157 / 300 = 0.5233333333333333
Top-50 accuracy: 166 / 300 = 0.5533333333333333
Duration: 0:04:08.934102

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 9 / 300 = 0.03
Top-3 accuracy: 9 / 300 = 0.03
Top-5 accuracy: 9 / 300 = 0.03
Top-10 accuracy: 11 / 300 = 0.03666666666666667
Top-50 accuracy: 13 / 300 = 0.043333333333333335
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 112 / 300 = 0.37333333333333335
Top-3 accuracy: 128 / 300 = 0.4266666666666667
Top-5 accuracy: 131 / 300 = 0.43666666666666665
Top-10 accuracy: 138 / 300 = 0.46
Top-50 accuracy: 147 / 300 = 0.49
Duration: 0:04:07.159801

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 1 / 300 = 0.0033333333333333335
Top-5 accuracy: 2 / 300 = 0.006666666666666667
Top-10 accuracy: 3 / 300 = 0.01
Top-50 accuracy: 3 / 300 = 0.01
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 6 / 300 = 0.02
Top-3 accuracy: 11 / 300 = 0.03666666666666667
Top-5 accuracy: 14 / 300 = 0.04666666666666667
Top-10 accuracy: 17 / 300 = 0.056666666666666664
Top-50 accuracy: 20 / 300 = 0.06666666666666667
Duration: 0:03:15.197332

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 300 = 0.0
Top-3 accuracy: 0 / 300 = 0.0
Top-5 accuracy: 0 / 300 = 0.0
Top-10 accuracy: 0 / 300 = 0.0
Top-50 accuracy: 0 / 300 = 0.0
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 5 / 300 = 0.016666666666666666
Top-5 accuracy: 5 / 300 = 0.016666666666666666
Top-10 accuracy: 8 / 300 = 0.02666666666666667
Top-50 accuracy: 9 / 300 = 0.03
Duration: 0:03:14.509984

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 300 = 0.0
Top-3 accuracy: 0 / 300 = 0.0
Top-5 accuracy: 0 / 300 = 0.0
Top-10 accuracy: 0 / 300 = 0.0
Top-50 accuracy: 0 / 300 = 0.0
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 4 / 300 = 0.013333333333333334
Top-3 accuracy: 8 / 300 = 0.02666666666666667
Top-5 accuracy: 10 / 300 = 0.03333333333333333
Top-10 accuracy: 12 / 300 = 0.04
Top-50 accuracy: 15 / 300 = 0.05
Duration: 0:03:13.791036

Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 558 / 5835 = 0.09562982005141388
Top-3 accuracy: 651 / 5835 = 0.11156812339331619
Top-5 accuracy: 684 / 5835 = 0.11722365038560412
Top-10 accuracy: 718 / 5835 = 0.12305055698371893
Top-50 accuracy: 803 / 5835 = 0.137617823479006
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 3680 / 5835 = 0.6306769494430163
Top-3 accuracy: 4275 / 5835 = 0.7326478149100257
Top-5 accuracy: 4456 / 5835 = 0.7636675235646958
Top-10 accuracy: 4613 / 5835 = 0.7905741216795201
Top-50 accuracy: 4840 / 5835 = 0.829477292202228
Duration: 1:15:35.125879

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 39 / 6545 = 0.005958747135217724
Top-3 accuracy: 56 / 6545 = 0.008556149732620321
Top-5 accuracy: 63 / 6545 = 0.009625668449197862
Top-10 accuracy: 73 / 6545 = 0.011153552330022918
Top-50 accuracy: 96 / 6545 = 0.01466768525592055
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 327 / 6545 = 0.04996180290297937
Top-3 accuracy: 482 / 6545 = 0.07364400305576776
Top-5 accuracy: 539 / 6545 = 0.08235294117647059
Top-10 accuracy: 616 / 6545 = 0.09411764705882353
Top-50 accuracy: 743 / 6545 = 0.11352177234530175
Duration: 1:07:59.638086

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 27 / 1077 = 0.025069637883008356
Top-3 accuracy: 34 / 1077 = 0.031569173630454965
Top-5 accuracy: 34 / 1077 = 0.031569173630454965
Top-10 accuracy: 37 / 1077 = 0.034354688950789226
Top-50 accuracy: 46 / 1077 = 0.04271123491179202
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 304 / 1077 = 0.2822655524605385
Top-3 accuracy: 344 / 1077 = 0.31940575673166205
Top-5 accuracy: 354 / 1077 = 0.3286908077994429
Top-10 accuracy: 368 / 1077 = 0.34168987929433614
Top-50 accuracy: 391 / 1077 = 0.3630454967502321
Duration: 0:14:12.787373

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 1098 = 0.0
Top-3 accuracy: 0 / 1098 = 0.0
Top-5 accuracy: 0 / 1098 = 0.0
Top-10 accuracy: 1 / 1098 = 0.0009107468123861566
Top-50 accuracy: 2 / 1098 = 0.0018214936247723133
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 11 / 1098 = 0.010018214936247723
Top-3 accuracy: 22 / 1098 = 0.020036429872495445
Top-5 accuracy: 25 / 1098 = 0.022768670309653915
Top-10 accuracy: 30 / 1098 = 0.0273224043715847
Top-50 accuracy: 36 / 1098 = 0.03278688524590164
Duration: 0:11:25.242325

