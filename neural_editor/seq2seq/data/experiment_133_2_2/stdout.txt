
====STARTING TRAINING====
{'ADDITION_TOKEN': 'добавление',
 'ADD_REVERSE_EXAMPLES_FOR_TRAIN_RATIO': 0.0,
 'BATCH_SIZE': 64,
 'BEAM_SIZE': 50,
 'DATASET_ROOT': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/50_100',
 'DECODER_HIDDEN_SIZE': 256,
 'DEFECTS4J_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/Defects4J',
 'DELETION_TOKEN': 'удаление',
 'DEVICE': device(type='cuda', index=0),
 'DIVERSITY_STRENGTH': None,
 'DROPOUT': 0.2,
 'EARLY_STOPPING_ROUNDS': 25,
 'EDIT_REPRESENTATION_SIZE': 16,
 'ENCODER_HIDDEN_SIZE': 128,
 'EOS_TOKEN': '</s>',
 'IS_TEST': False,
 'LEARNING_RATE': 0.0001,
 'LEAVE_ONLY_CHANGED': True,
 'LOSS_FUNCTION_PARAMS': {'bug_fixing_loss_period': 1.0,
                          'default_loss_period': 0.0,
                          'measure': 'batches'},
 'LOWER': False,
 'MAKE_CUDA_REPRODUCIBLE': False,
 'MAX_NUM_OF_EPOCHS': 1000,
 'NUM_GROUPS': 1,
 'NUM_LAYERS': 2,
 'OUTPUT_PATH': '../../../embeddings-for-code-diffs-data/experiment_133_2_2/',
 'PADDING_TOKEN': 'паддинг',
 'PAD_TOKEN': '<pad>',
 'PRINT_EVERY_iTH_BATCH': 5,
 'REPLACEMENT_TOKEN': 'замена',
 'SAVE_MODEL_EVERY': 5,
 'SEED': 9382,
 'SOS_TOKEN': '<s>',
 'TEACHER_FORCING_RATIO': 0.9,
 'TEST_BATCH_SIZE': 64,
 'TOKENS_CODE_CHUNK_MAX_LEN': 100,
 'TOKEN_MIN_FREQ': 1,
 'TOP_K': [1, 3, 5, 10, 50],
 'TSNE_BATCH_SIZE': 1024,
 'TUFANO_BUG_FIXES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_50',
 'TUFANO_BUG_FIXES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/50_100',
 'TUFANO_CODE_CHANGES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/0_50',
 'TUFANO_CODE_CHANGES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/50_100',
 'TUFANO_LABELED_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/0_50',
 'TUFANO_LABELED_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/50_100',
 'UNCHANGED_TOKEN': 'равенство',
 'UNK_TOKEN': '<unk>',
 'UPDATE_TRAIN_VECTORS_EVERY_iTH_EPOCH': 5,
 'USE_BRIDGE': True,
 'USE_EDIT_REPRESENTATION': True,
 'VAL_BATCH_SIZE': 64,
 'VERBOSE': True,
 'WORD_EMBEDDING_SIZE': 128}
Data set sizes (number of sentence pairs):
train 52364
valid 6546
test 6545 

First training example:
src: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
trg: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = null ; if ( date != null ) { VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; } VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
diff_alignment: добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг
diff_updated: null ; if ( date != null ) { VAR_2 = } 

Most common words:
         (    1161894
         )    1161834
         ;     560486
         .     507926
   паддинг     402443
     VAR_1     294376
         }     265934
         {     265752
         ,     245004
  удаление     239732 

First 10 words:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 .
08 паддинг
09 VAR_1 

Special words frequency and ids: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 58185 33
удаление 239732 13
добавление 162711 17
равенство 0 0
паддинг 402443 8
Number of words (types): 497
Epoch 0 / 1000
Epoch Step: 5 / 819 Loss: 370.5318298339844 Tokens per Sec: 12404.241149340687
Epoch Step: 10 / 819 Loss: 539.3093872070312 Tokens per Sec: 14299.234360080096
Epoch Step: 15 / 819 Loss: 365.4696960449219 Tokens per Sec: 12776.100506962983
Epoch Step: 20 / 819 Loss: 329.5482482910156 Tokens per Sec: 12256.31738839481
Epoch Step: 25 / 819 Loss: 426.0796203613281 Tokens per Sec: 13677.851243965193
Epoch Step: 30 / 819 Loss: 375.4634704589844 Tokens per Sec: 14029.075908204033
Epoch Step: 35 / 819 Loss: 255.89926147460938 Tokens per Sec: 13686.047789672682
Epoch Step: 40 / 819 Loss: 387.1574401855469 Tokens per Sec: 14532.43696513551
Epoch Step: 45 / 819 Loss: 243.90121459960938 Tokens per Sec: 13229.286139195556
Epoch Step: 50 / 819 Loss: 229.3831787109375 Tokens per Sec: 13009.423500779967
Epoch Step: 55 / 819 Loss: 351.71923828125 Tokens per Sec: 15596.87974297173
Epoch Step: 60 / 819 Loss: 283.7806091308594 Tokens per Sec: 13441.56907856479
Epoch Step: 65 / 819 Loss: 207.1812744140625 Tokens per Sec: 14320.757641469512
Epoch Step: 70 / 819 Loss: 278.2613525390625 Tokens per Sec: 13019.26760668607
Epoch Step: 75 / 819 Loss: 279.11474609375 Tokens per Sec: 14024.219056804377
Epoch Step: 80 / 819 Loss: 239.57492065429688 Tokens per Sec: 13106.702863255074
Epoch Step: 85 / 819 Loss: 281.0350341796875 Tokens per Sec: 14482.378044060548
Epoch Step: 90 / 819 Loss: 384.7150573730469 Tokens per Sec: 14106.171290027147
Epoch Step: 95 / 819 Loss: 229.8072509765625 Tokens per Sec: 13866.091381198039
Epoch Step: 100 / 819 Loss: 241.8485870361328 Tokens per Sec: 13008.220244168886
Epoch Step: 105 / 819 Loss: 186.6762237548828 Tokens per Sec: 13800.88317783615
Epoch Step: 110 / 819 Loss: 211.34677124023438 Tokens per Sec: 14175.4754765699
Epoch Step: 115 / 819 Loss: 235.92083740234375 Tokens per Sec: 12362.564890403553
Epoch Step: 120 / 819 Loss: 270.0237731933594 Tokens per Sec: 12940.199781619045
Epoch Step: 125 / 819 Loss: 281.0345764160156 Tokens per Sec: 13607.66121098929
Epoch Step: 130 / 819 Loss: 182.54788208007812 Tokens per Sec: 12338.708941333802
Epoch Step: 135 / 819 Loss: 290.07305908203125 Tokens per Sec: 13234.487164571987
Epoch Step: 140 / 819 Loss: 173.62994384765625 Tokens per Sec: 15245.687082547272
Epoch Step: 145 / 819 Loss: 267.84820556640625 Tokens per Sec: 16334.120514020342
Epoch Step: 150 / 819 Loss: 245.37594604492188 Tokens per Sec: 13025.474348933421
Epoch Step: 155 / 819 Loss: 264.2994384765625 Tokens per Sec: 13839.747772278039
Epoch Step: 160 / 819 Loss: 178.4310760498047 Tokens per Sec: 12795.280450015287
Epoch Step: 165 / 819 Loss: 285.6380920410156 Tokens per Sec: 14214.050028295535
Epoch Step: 170 / 819 Loss: 187.29263305664062 Tokens per Sec: 13992.155339584635
Epoch Step: 175 / 819 Loss: 282.53076171875 Tokens per Sec: 14971.646367898975
Epoch Step: 180 / 819 Loss: 242.56739807128906 Tokens per Sec: 13818.273767891262
Epoch Step: 185 / 819 Loss: 268.8697814941406 Tokens per Sec: 12100.1674321457
Epoch Step: 190 / 819 Loss: 231.4276885986328 Tokens per Sec: 14336.139309213611
Epoch Step: 195 / 819 Loss: 254.68544006347656 Tokens per Sec: 13738.505462610417
Epoch Step: 200 / 819 Loss: 275.5580139160156 Tokens per Sec: 13268.619034147525
Epoch Step: 205 / 819 Loss: 188.80560302734375 Tokens per Sec: 13696.378083419919
Epoch Step: 210 / 819 Loss: 223.39906311035156 Tokens per Sec: 11939.551826014796
Epoch Step: 215 / 819 Loss: 162.29776000976562 Tokens per Sec: 13890.365139049474
Epoch Step: 220 / 819 Loss: 326.620849609375 Tokens per Sec: 13064.221620847562
Epoch Step: 225 / 819 Loss: 215.20423889160156 Tokens per Sec: 14828.621219304903
Epoch Step: 230 / 819 Loss: 180.74293518066406 Tokens per Sec: 14997.367503535195
Epoch Step: 235 / 819 Loss: 182.2739715576172 Tokens per Sec: 13688.402490548388
Epoch Step: 240 / 819 Loss: 224.90350341796875 Tokens per Sec: 15548.614259561373
Epoch Step: 245 / 819 Loss: 160.05975341796875 Tokens per Sec: 12328.716736322245
Epoch Step: 250 / 819 Loss: 190.9326934814453 Tokens per Sec: 14129.541800549128
Epoch Step: 255 / 819 Loss: 262.37115478515625 Tokens per Sec: 15599.591007615634
Epoch Step: 260 / 819 Loss: 178.6078338623047 Tokens per Sec: 12169.941675797494
Epoch Step: 265 / 819 Loss: 404.14056396484375 Tokens per Sec: 14912.086986399912
Epoch Step: 270 / 819 Loss: 267.2225646972656 Tokens per Sec: 13339.009339389582
Epoch Step: 275 / 819 Loss: 180.51766967773438 Tokens per Sec: 14232.640277665181
Epoch Step: 280 / 819 Loss: 213.55604553222656 Tokens per Sec: 13092.606942156519
Epoch Step: 285 / 819 Loss: 204.9113006591797 Tokens per Sec: 14495.213692363213
Epoch Step: 290 / 819 Loss: 221.2490234375 Tokens per Sec: 13637.168769788113
Epoch Step: 295 / 819 Loss: 349.3644104003906 Tokens per Sec: 13887.315065897921
Epoch Step: 300 / 819 Loss: 343.7435302734375 Tokens per Sec: 14583.777526759046
Epoch Step: 305 / 819 Loss: 259.22283935546875 Tokens per Sec: 14360.988633044188
Epoch Step: 310 / 819 Loss: 205.40704345703125 Tokens per Sec: 12403.15100222361
Epoch Step: 315 / 819 Loss: 289.46099853515625 Tokens per Sec: 12895.972691249002
Epoch Step: 320 / 819 Loss: 205.21841430664062 Tokens per Sec: 15872.127460359996
Epoch Step: 325 / 819 Loss: 223.64259338378906 Tokens per Sec: 16990.53879688596
Epoch Step: 330 / 819 Loss: 142.3016815185547 Tokens per Sec: 15353.811751506482
Epoch Step: 335 / 819 Loss: 239.3594512939453 Tokens per Sec: 13942.343368701031
Epoch Step: 340 / 819 Loss: 238.27931213378906 Tokens per Sec: 13275.24945821911
Epoch Step: 345 / 819 Loss: 218.48887634277344 Tokens per Sec: 13425.658208635281
Epoch Step: 350 / 819 Loss: 160.2712860107422 Tokens per Sec: 12342.076627412664
Epoch Step: 355 / 819 Loss: 315.18475341796875 Tokens per Sec: 15176.333445602579
Epoch Step: 360 / 819 Loss: 139.39877319335938 Tokens per Sec: 12835.36743068657
Epoch Step: 365 / 819 Loss: 182.78553771972656 Tokens per Sec: 13274.540002518152
Epoch Step: 370 / 819 Loss: 207.5032501220703 Tokens per Sec: 14261.418191850542
Epoch Step: 375 / 819 Loss: 146.1788330078125 Tokens per Sec: 13495.440692463613
Epoch Step: 380 / 819 Loss: 298.81842041015625 Tokens per Sec: 13333.47650018488
Epoch Step: 385 / 819 Loss: 184.8907928466797 Tokens per Sec: 13052.32498719584
Epoch Step: 390 / 819 Loss: 184.91600036621094 Tokens per Sec: 12593.277084493948
Epoch Step: 395 / 819 Loss: 156.65689086914062 Tokens per Sec: 13339.068135465775
Epoch Step: 400 / 819 Loss: 188.75364685058594 Tokens per Sec: 13723.161025632127
Epoch Step: 405 / 819 Loss: 228.47268676757812 Tokens per Sec: 14177.074436955738
Epoch Step: 410 / 819 Loss: 192.8057861328125 Tokens per Sec: 12958.457907751203
Epoch Step: 415 / 819 Loss: 135.0670623779297 Tokens per Sec: 12695.238316490824
Epoch Step: 420 / 819 Loss: 173.61337280273438 Tokens per Sec: 14469.187014490872
Epoch Step: 425 / 819 Loss: 179.67654418945312 Tokens per Sec: 13884.25259858971
Epoch Step: 430 / 819 Loss: 273.0774230957031 Tokens per Sec: 13521.311079085064
Epoch Step: 435 / 819 Loss: 206.58961486816406 Tokens per Sec: 13889.28638966652
Epoch Step: 440 / 819 Loss: 310.1588439941406 Tokens per Sec: 14429.842960500408
Epoch Step: 445 / 819 Loss: 186.83724975585938 Tokens per Sec: 13513.03835450512
Epoch Step: 450 / 819 Loss: 208.2860565185547 Tokens per Sec: 13468.172986691843
Epoch Step: 455 / 819 Loss: 206.244140625 Tokens per Sec: 13421.003917567992
Epoch Step: 460 / 819 Loss: 131.4644012451172 Tokens per Sec: 12144.936613098198
Epoch Step: 465 / 819 Loss: 170.578369140625 Tokens per Sec: 14893.709434501698
Epoch Step: 470 / 819 Loss: 226.6049041748047 Tokens per Sec: 12534.765406057311
Epoch Step: 475 / 819 Loss: 152.79364013671875 Tokens per Sec: 13396.248074392603
Epoch Step: 480 / 819 Loss: 210.7023162841797 Tokens per Sec: 13257.146421792439
Epoch Step: 485 / 819 Loss: 204.93826293945312 Tokens per Sec: 14442.011209682423
Epoch Step: 490 / 819 Loss: 146.6066131591797 Tokens per Sec: 13333.664647008649
Epoch Step: 495 / 819 Loss: 197.8043212890625 Tokens per Sec: 14160.38964216568
Epoch Step: 500 / 819 Loss: 133.62393188476562 Tokens per Sec: 12675.402646300055
Epoch Step: 505 / 819 Loss: 222.20510864257812 Tokens per Sec: 14959.822238894449
Epoch Step: 510 / 819 Loss: 160.00613403320312 Tokens per Sec: 13357.549503558896
Epoch Step: 515 / 819 Loss: 195.39259338378906 Tokens per Sec: 12693.8362565927
Epoch Step: 520 / 819 Loss: 173.21951293945312 Tokens per Sec: 13370.219552360168
Epoch Step: 525 / 819 Loss: 137.41213989257812 Tokens per Sec: 12676.836180119872
Epoch Step: 530 / 819 Loss: 207.25448608398438 Tokens per Sec: 15144.684614743846
Epoch Step: 535 / 819 Loss: 221.927978515625 Tokens per Sec: 13914.377452160337
Epoch Step: 540 / 819 Loss: 205.56715393066406 Tokens per Sec: 15041.588705117467
Epoch Step: 545 / 819 Loss: 138.9197540283203 Tokens per Sec: 13957.490427222718
Epoch Step: 550 / 819 Loss: 132.0928192138672 Tokens per Sec: 12887.565280903218
Epoch Step: 555 / 819 Loss: 157.46351623535156 Tokens per Sec: 14858.0064151688
Epoch Step: 560 / 819 Loss: 175.6188507080078 Tokens per Sec: 13043.762893496878
Epoch Step: 565 / 819 Loss: 142.02542114257812 Tokens per Sec: 12779.686980716126
Epoch Step: 570 / 819 Loss: 292.41448974609375 Tokens per Sec: 14588.499304257713
Epoch Step: 575 / 819 Loss: 201.2342529296875 Tokens per Sec: 14257.509824362127
Epoch Step: 580 / 819 Loss: 210.47715759277344 Tokens per Sec: 14243.567767752429
Epoch Step: 585 / 819 Loss: 144.43569946289062 Tokens per Sec: 14548.967630158111
Epoch Step: 590 / 819 Loss: 166.77919006347656 Tokens per Sec: 13767.98276552405
Epoch Step: 595 / 819 Loss: 194.5762481689453 Tokens per Sec: 14584.79509705199
Epoch Step: 600 / 819 Loss: 198.72488403320312 Tokens per Sec: 13146.07094533976
Epoch Step: 605 / 819 Loss: 186.42530822753906 Tokens per Sec: 13397.038260355692
Epoch Step: 610 / 819 Loss: 179.50469970703125 Tokens per Sec: 14543.985089129144
Epoch Step: 615 / 819 Loss: 129.49237060546875 Tokens per Sec: 13188.354657285929
Epoch Step: 620 / 819 Loss: 173.03533935546875 Tokens per Sec: 12880.923434017617
Epoch Step: 625 / 819 Loss: 171.79595947265625 Tokens per Sec: 14831.887297788553
Epoch Step: 630 / 819 Loss: 144.3712158203125 Tokens per Sec: 14459.775950475003
Epoch Step: 635 / 819 Loss: 143.1299285888672 Tokens per Sec: 14238.661904602199
Epoch Step: 640 / 819 Loss: 142.83560180664062 Tokens per Sec: 14915.212049060183
Epoch Step: 645 / 819 Loss: 380.5167541503906 Tokens per Sec: 13569.017351485456
Epoch Step: 650 / 819 Loss: 217.4938507080078 Tokens per Sec: 14302.332896016842
Epoch Step: 655 / 819 Loss: 163.1214141845703 Tokens per Sec: 13483.00747224811
Epoch Step: 660 / 819 Loss: 219.80227661132812 Tokens per Sec: 13327.828654946215
Epoch Step: 665 / 819 Loss: 195.51339721679688 Tokens per Sec: 14780.753612965562
Epoch Step: 670 / 819 Loss: 167.63641357421875 Tokens per Sec: 13200.159669511148
Epoch Step: 675 / 819 Loss: 130.15072631835938 Tokens per Sec: 13877.037905565163
Epoch Step: 680 / 819 Loss: 197.56134033203125 Tokens per Sec: 13595.01375460483
Epoch Step: 685 / 819 Loss: 152.23155212402344 Tokens per Sec: 13632.956241218884
Epoch Step: 690 / 819 Loss: 344.07867431640625 Tokens per Sec: 13578.358636939689
Epoch Step: 695 / 819 Loss: 129.41607666015625 Tokens per Sec: 12409.680229208006
Epoch Step: 700 / 819 Loss: 158.38064575195312 Tokens per Sec: 16995.46659982355
Epoch Step: 705 / 819 Loss: 387.2442932128906 Tokens per Sec: 15696.07156336146
Epoch Step: 710 / 819 Loss: 131.15325927734375 Tokens per Sec: 12270.283377894944
Epoch Step: 715 / 819 Loss: 187.96823120117188 Tokens per Sec: 16245.758925488028
Epoch Step: 720 / 819 Loss: 187.24368286132812 Tokens per Sec: 13482.37066950372
Epoch Step: 725 / 819 Loss: 134.40390014648438 Tokens per Sec: 13475.216693382468
Epoch Step: 730 / 819 Loss: 131.02845764160156 Tokens per Sec: 13040.54251801116
Epoch Step: 735 / 819 Loss: 123.7614974975586 Tokens per Sec: 13742.039673551439
Epoch Step: 740 / 819 Loss: 166.91079711914062 Tokens per Sec: 12576.923639496232
Epoch Step: 745 / 819 Loss: 140.25257873535156 Tokens per Sec: 14624.448831694324
Epoch Step: 750 / 819 Loss: 180.8179473876953 Tokens per Sec: 14226.659014745836
Epoch Step: 755 / 819 Loss: 329.13116455078125 Tokens per Sec: 14842.252483152348
Epoch Step: 760 / 819 Loss: 110.9381103515625 Tokens per Sec: 13612.036228292238
Epoch Step: 765 / 819 Loss: 152.0335235595703 Tokens per Sec: 12899.27523683213
Epoch Step: 770 / 819 Loss: 144.78086853027344 Tokens per Sec: 13219.16514448544
Epoch Step: 775 / 819 Loss: 234.80386352539062 Tokens per Sec: 14291.120548420651
Epoch Step: 780 / 819 Loss: 129.04400634765625 Tokens per Sec: 14607.794155492236
Epoch Step: 785 / 819 Loss: 174.1240234375 Tokens per Sec: 13794.921275691955
Epoch Step: 790 / 819 Loss: 200.68817138671875 Tokens per Sec: 13693.166868893619
Epoch Step: 795 / 819 Loss: 171.9738006591797 Tokens per Sec: 13536.061544426275
Epoch Step: 800 / 819 Loss: 166.70742797851562 Tokens per Sec: 13644.185269774365
Epoch Step: 805 / 819 Loss: 109.22100830078125 Tokens per Sec: 10411.06178606271
Epoch Step: 810 / 819 Loss: 138.85055541992188 Tokens per Sec: 13056.573642155352
Epoch Step: 815 / 819 Loss: 172.7993621826172 Tokens per Sec: 13926.542139217943
Epoch ended with duration 0:04:42.672728
Train perplexity: 17.368388984050977
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) ) { VAR_2 . METHOD_2 ( ) ; }[0m
Epoch ended with duration 0:00:26.172002
Validation perplexity: 9.453654545136049
Model saved best_on_validation!
Model saved checkpoint!
Epoch 1 / 1000
Epoch Step: 5 / 819 Loss: 142.1194305419922 Tokens per Sec: 11937.199297632329
Epoch Step: 10 / 819 Loss: 179.05308532714844 Tokens per Sec: 13462.992172094282
Epoch Step: 15 / 819 Loss: 315.4904479980469 Tokens per Sec: 13337.580581520147
Epoch Step: 20 / 819 Loss: 122.80194854736328 Tokens per Sec: 12473.357034159184
Epoch Step: 25 / 819 Loss: 156.07821655273438 Tokens per Sec: 14081.418451647636
Epoch Step: 30 / 819 Loss: 114.14830017089844 Tokens per Sec: 12282.546182470622
Epoch Step: 35 / 819 Loss: 131.868896484375 Tokens per Sec: 13887.59899889078
Epoch Step: 40 / 819 Loss: 146.24635314941406 Tokens per Sec: 14069.6811148918
Epoch Step: 45 / 819 Loss: 124.41123962402344 Tokens per Sec: 15292.1117048304
Epoch Step: 50 / 819 Loss: 160.63685607910156 Tokens per Sec: 13220.293552266903
Epoch Step: 55 / 819 Loss: 126.44801330566406 Tokens per Sec: 13766.572798170691
Epoch Step: 60 / 819 Loss: 143.47384643554688 Tokens per Sec: 14148.860397800172
Epoch Step: 65 / 819 Loss: 184.881103515625 Tokens per Sec: 13483.837609387214
Epoch Step: 70 / 819 Loss: 128.25111389160156 Tokens per Sec: 12735.623737095662
Epoch Step: 75 / 819 Loss: 143.46380615234375 Tokens per Sec: 13778.879084778673
Epoch Step: 80 / 819 Loss: 114.94820404052734 Tokens per Sec: 12942.019485990444
Epoch Step: 85 / 819 Loss: 321.19647216796875 Tokens per Sec: 13855.972843289133
Epoch Step: 90 / 819 Loss: 199.29258728027344 Tokens per Sec: 14584.633759450648
Epoch Step: 95 / 819 Loss: 182.32374572753906 Tokens per Sec: 12483.200245048041
Epoch Step: 100 / 819 Loss: 136.76808166503906 Tokens per Sec: 14293.917951730165
Epoch Step: 105 / 819 Loss: 108.02591705322266 Tokens per Sec: 13156.66386100582
Epoch Step: 110 / 819 Loss: 135.43759155273438 Tokens per Sec: 12773.090060057095
Epoch Step: 115 / 819 Loss: 158.51754760742188 Tokens per Sec: 14376.9886912893
Epoch Step: 120 / 819 Loss: 154.57032775878906 Tokens per Sec: 13687.78576404618
Epoch Step: 125 / 819 Loss: 164.83740234375 Tokens per Sec: 13112.265815432067
Epoch Step: 130 / 819 Loss: 132.2095184326172 Tokens per Sec: 14913.29806508943
Epoch Step: 135 / 819 Loss: 192.1768341064453 Tokens per Sec: 14661.82131079215
Epoch Step: 140 / 819 Loss: 142.44708251953125 Tokens per Sec: 14667.938579986632
Epoch Step: 145 / 819 Loss: 128.2794189453125 Tokens per Sec: 14318.244673399096
Epoch Step: 150 / 819 Loss: 167.66262817382812 Tokens per Sec: 14724.384698793729
Epoch Step: 155 / 819 Loss: 165.02589416503906 Tokens per Sec: 14342.703973157977
Epoch Step: 160 / 819 Loss: 133.59718322753906 Tokens per Sec: 14762.251380744623
Epoch Step: 165 / 819 Loss: 132.4159698486328 Tokens per Sec: 12607.184934972896
Epoch Step: 170 / 819 Loss: 168.54173278808594 Tokens per Sec: 15319.480609970076
Epoch Step: 175 / 819 Loss: 113.06742095947266 Tokens per Sec: 13302.907494513256
Epoch Step: 180 / 819 Loss: 159.94737243652344 Tokens per Sec: 13975.808680778036
Epoch Step: 185 / 819 Loss: 180.18939208984375 Tokens per Sec: 16306.813067467758
Epoch Step: 190 / 819 Loss: 183.4123077392578 Tokens per Sec: 13939.363113056397
Epoch Step: 195 / 819 Loss: 136.81954956054688 Tokens per Sec: 11968.581626744588
Epoch Step: 200 / 819 Loss: 126.52808380126953 Tokens per Sec: 13407.601988183895
Epoch Step: 205 / 819 Loss: 185.23423767089844 Tokens per Sec: 13770.13230919756
Epoch Step: 210 / 819 Loss: 145.17852783203125 Tokens per Sec: 13853.0144981175
Epoch Step: 215 / 819 Loss: 128.8512725830078 Tokens per Sec: 13440.199418081582
Epoch Step: 220 / 819 Loss: 109.13727569580078 Tokens per Sec: 14783.229755794817
Epoch Step: 225 / 819 Loss: 176.671630859375 Tokens per Sec: 14470.889926781714
Epoch Step: 230 / 819 Loss: 123.40995788574219 Tokens per Sec: 14153.637154512926
Epoch Step: 235 / 819 Loss: 119.01683044433594 Tokens per Sec: 15458.121348733668
Epoch Step: 240 / 819 Loss: 158.81982421875 Tokens per Sec: 15695.319087109046
Epoch Step: 245 / 819 Loss: 169.49041748046875 Tokens per Sec: 13338.655419306073
Epoch Step: 250 / 819 Loss: 150.20831298828125 Tokens per Sec: 13685.119135681109
Epoch Step: 255 / 819 Loss: 139.87850952148438 Tokens per Sec: 12503.447629376145
Epoch Step: 260 / 819 Loss: 146.3885040283203 Tokens per Sec: 12464.021077062289
Epoch Step: 265 / 819 Loss: 170.88433837890625 Tokens per Sec: 13166.715964409072
Epoch Step: 270 / 819 Loss: 135.96258544921875 Tokens per Sec: 12048.567968108573
Epoch Step: 275 / 819 Loss: 196.984130859375 Tokens per Sec: 13187.020649252143
Epoch Step: 280 / 819 Loss: 135.76036071777344 Tokens per Sec: 12944.607075210206
Epoch Step: 285 / 819 Loss: 126.11692810058594 Tokens per Sec: 15678.254242688692
Epoch Step: 290 / 819 Loss: 114.60287475585938 Tokens per Sec: 14261.439996543642
Epoch Step: 295 / 819 Loss: 106.24820709228516 Tokens per Sec: 13929.499706165403
Epoch Step: 300 / 819 Loss: 97.56693267822266 Tokens per Sec: 13696.709807391733
Epoch Step: 305 / 819 Loss: 158.1073760986328 Tokens per Sec: 13791.316780022436
Epoch Step: 310 / 819 Loss: 124.94227600097656 Tokens per Sec: 12902.61222120782
Epoch Step: 315 / 819 Loss: 116.24385833740234 Tokens per Sec: 15748.619287763155
Epoch Step: 320 / 819 Loss: 374.8796691894531 Tokens per Sec: 13147.363222699252
Epoch Step: 325 / 819 Loss: 179.88552856445312 Tokens per Sec: 14895.010303818419
Epoch Step: 330 / 819 Loss: 175.49781799316406 Tokens per Sec: 12408.924510808281
Epoch Step: 335 / 819 Loss: 118.73825073242188 Tokens per Sec: 13365.162092547715
Epoch Step: 340 / 819 Loss: 138.50262451171875 Tokens per Sec: 13047.306996764282
Epoch Step: 345 / 819 Loss: 157.0742950439453 Tokens per Sec: 15564.228206164358
Epoch Step: 350 / 819 Loss: 117.72261047363281 Tokens per Sec: 11719.900816862497
Epoch Step: 355 / 819 Loss: 149.373046875 Tokens per Sec: 13308.63939736254
Epoch Step: 360 / 819 Loss: 169.65843200683594 Tokens per Sec: 12447.764689849182
Epoch Step: 365 / 819 Loss: 313.6917419433594 Tokens per Sec: 13982.876920517956
Epoch Step: 370 / 819 Loss: 168.71206665039062 Tokens per Sec: 13644.942823958285
Epoch Step: 375 / 819 Loss: 181.08261108398438 Tokens per Sec: 14374.760560991112
Epoch Step: 380 / 819 Loss: 116.4521713256836 Tokens per Sec: 12851.394614622928
Epoch Step: 385 / 819 Loss: 136.34136962890625 Tokens per Sec: 12662.287394490804
Epoch Step: 390 / 819 Loss: 124.33507537841797 Tokens per Sec: 13784.448915219906
Epoch Step: 395 / 819 Loss: 151.74290466308594 Tokens per Sec: 15764.547413842705
Epoch Step: 400 / 819 Loss: 122.71922302246094 Tokens per Sec: 13840.860411492395
Epoch Step: 405 / 819 Loss: 173.3263397216797 Tokens per Sec: 14201.294831891137
Epoch Step: 410 / 819 Loss: 136.76089477539062 Tokens per Sec: 13497.526425934326
Epoch Step: 415 / 819 Loss: 325.7324523925781 Tokens per Sec: 14590.485028051211
Epoch Step: 420 / 819 Loss: 134.19512939453125 Tokens per Sec: 12999.269313399143
Epoch Step: 425 / 819 Loss: 115.58779907226562 Tokens per Sec: 12770.649288166223
Epoch Step: 430 / 819 Loss: 320.3943786621094 Tokens per Sec: 12717.196714915564
Epoch Step: 435 / 819 Loss: 115.99791717529297 Tokens per Sec: 13153.031513026557
Epoch Step: 440 / 819 Loss: 165.6320037841797 Tokens per Sec: 15022.618358205234
Epoch Step: 445 / 819 Loss: 144.705322265625 Tokens per Sec: 14104.175232995047
Epoch Step: 450 / 819 Loss: 163.38580322265625 Tokens per Sec: 15610.63408156428
Epoch Step: 455 / 819 Loss: 104.44364166259766 Tokens per Sec: 11451.46436583994
Epoch Step: 460 / 819 Loss: 141.92184448242188 Tokens per Sec: 15491.3718483337
Epoch Step: 465 / 819 Loss: 163.895263671875 Tokens per Sec: 15643.143776413608
Epoch Step: 470 / 819 Loss: 112.7099609375 Tokens per Sec: 13507.786990393428
Epoch Step: 475 / 819 Loss: 175.0229949951172 Tokens per Sec: 14152.619307661012
Epoch Step: 480 / 819 Loss: 150.2497100830078 Tokens per Sec: 14879.918329943357
Epoch Step: 485 / 819 Loss: 173.931640625 Tokens per Sec: 14197.08069043408
Epoch Step: 490 / 819 Loss: 147.3643035888672 Tokens per Sec: 14298.929261243666
Epoch Step: 495 / 819 Loss: 132.35638427734375 Tokens per Sec: 13754.235495009269
Epoch Step: 500 / 819 Loss: 118.50926208496094 Tokens per Sec: 13652.573141743582
Epoch Step: 505 / 819 Loss: 161.30335998535156 Tokens per Sec: 14670.794049841377
Epoch Step: 510 / 819 Loss: 125.78662109375 Tokens per Sec: 12933.776921242408
Epoch Step: 515 / 819 Loss: 86.04158782958984 Tokens per Sec: 14177.214586914932
Epoch Step: 520 / 819 Loss: 89.658447265625 Tokens per Sec: 12446.978118314411
Epoch Step: 525 / 819 Loss: 124.15066528320312 Tokens per Sec: 13739.922164151474
Epoch Step: 530 / 819 Loss: 171.4006805419922 Tokens per Sec: 13440.710464970753
Epoch Step: 535 / 819 Loss: 96.34109497070312 Tokens per Sec: 13483.772806768684
Epoch Step: 540 / 819 Loss: 112.41730499267578 Tokens per Sec: 14069.01490281726
Epoch Step: 545 / 819 Loss: 153.37107849121094 Tokens per Sec: 14585.50633792404
Epoch Step: 550 / 819 Loss: 143.9143829345703 Tokens per Sec: 13766.223997946001
Epoch Step: 555 / 819 Loss: 286.3372497558594 Tokens per Sec: 13745.048433351683
Epoch Step: 560 / 819 Loss: 142.7242431640625 Tokens per Sec: 13632.643092316961
Epoch Step: 565 / 819 Loss: 122.4025650024414 Tokens per Sec: 12181.481911292476
Epoch Step: 570 / 819 Loss: 150.48300170898438 Tokens per Sec: 13049.877467983884
Epoch Step: 575 / 819 Loss: 103.09622955322266 Tokens per Sec: 14218.092294146763
Epoch Step: 580 / 819 Loss: 108.20807647705078 Tokens per Sec: 13124.655710550107
Epoch Step: 585 / 819 Loss: 105.17789459228516 Tokens per Sec: 14049.787939838083
Epoch Step: 590 / 819 Loss: 120.78242492675781 Tokens per Sec: 12973.474440855724
Epoch Step: 595 / 819 Loss: 118.81696319580078 Tokens per Sec: 12983.95100890002
Epoch Step: 600 / 819 Loss: 160.7955780029297 Tokens per Sec: 15530.801635870377
Epoch Step: 605 / 819 Loss: 129.86656188964844 Tokens per Sec: 14950.288364416947
Epoch Step: 610 / 819 Loss: 129.2471160888672 Tokens per Sec: 13643.058945671559
Epoch Step: 615 / 819 Loss: 111.11286163330078 Tokens per Sec: 13382.401992377867
Epoch Step: 620 / 819 Loss: 105.4771957397461 Tokens per Sec: 14755.795072406909
Epoch Step: 625 / 819 Loss: 373.43890380859375 Tokens per Sec: 14946.079316888265
Epoch Step: 630 / 819 Loss: 138.31802368164062 Tokens per Sec: 14428.98725191498
Epoch Step: 635 / 819 Loss: 115.8025131225586 Tokens per Sec: 13948.805240817435
Epoch Step: 640 / 819 Loss: 97.30477905273438 Tokens per Sec: 14464.234485255014
Epoch Step: 645 / 819 Loss: 135.4668731689453 Tokens per Sec: 13492.058957698331
Epoch Step: 650 / 819 Loss: 230.03182983398438 Tokens per Sec: 12108.777607782096
Epoch Step: 655 / 819 Loss: 160.5823211669922 Tokens per Sec: 14463.81291692851
Epoch Step: 660 / 819 Loss: 106.7890625 Tokens per Sec: 13071.86357414421
Epoch Step: 665 / 819 Loss: 144.0210723876953 Tokens per Sec: 14165.684970930688
Epoch Step: 670 / 819 Loss: 112.81626892089844 Tokens per Sec: 12069.447997053498
Epoch Step: 675 / 819 Loss: 148.8295135498047 Tokens per Sec: 12783.299279582407
Epoch Step: 680 / 819 Loss: 158.08200073242188 Tokens per Sec: 14677.183861879537
Epoch Step: 685 / 819 Loss: 107.97756958007812 Tokens per Sec: 12933.983226335926
Epoch Step: 690 / 819 Loss: 144.08338928222656 Tokens per Sec: 13069.083577107132
Epoch Step: 695 / 819 Loss: 158.76031494140625 Tokens per Sec: 14104.043745719016
Epoch Step: 700 / 819 Loss: 173.44508361816406 Tokens per Sec: 13599.587881238906
Epoch Step: 705 / 819 Loss: 351.56561279296875 Tokens per Sec: 14637.12222287059
Epoch Step: 710 / 819 Loss: 156.72998046875 Tokens per Sec: 15138.267513042452
Epoch Step: 715 / 819 Loss: 135.22727966308594 Tokens per Sec: 13508.78620342862
Epoch Step: 720 / 819 Loss: 111.86319732666016 Tokens per Sec: 13584.472331224542
Epoch Step: 725 / 819 Loss: 143.99147033691406 Tokens per Sec: 13792.998674483722
Epoch Step: 730 / 819 Loss: 113.26603698730469 Tokens per Sec: 13339.363940899253
Epoch Step: 735 / 819 Loss: 132.59178161621094 Tokens per Sec: 14405.094034337591
Epoch Step: 740 / 819 Loss: 143.67835998535156 Tokens per Sec: 15722.091509806742
Epoch Step: 745 / 819 Loss: 162.85952758789062 Tokens per Sec: 15635.802977583442
Epoch Step: 750 / 819 Loss: 84.50736236572266 Tokens per Sec: 12934.010981198522
Epoch Step: 755 / 819 Loss: 159.40115356445312 Tokens per Sec: 15323.537758792621
Epoch Step: 760 / 819 Loss: 110.9183578491211 Tokens per Sec: 13910.335291024163
Epoch Step: 765 / 819 Loss: 131.8145751953125 Tokens per Sec: 12263.946246025082
Epoch Step: 770 / 819 Loss: 338.5010681152344 Tokens per Sec: 14305.359292718247
Epoch Step: 775 / 819 Loss: 166.22657775878906 Tokens per Sec: 14346.638320507725
Epoch Step: 780 / 819 Loss: 83.84701538085938 Tokens per Sec: 12804.229451737769
Epoch Step: 785 / 819 Loss: 109.98009490966797 Tokens per Sec: 14288.762838552877
Epoch Step: 790 / 819 Loss: 87.20488739013672 Tokens per Sec: 13212.999917870711
Epoch Step: 795 / 819 Loss: 98.42506408691406 Tokens per Sec: 14051.005779464957
Epoch Step: 800 / 819 Loss: 118.20167541503906 Tokens per Sec: 12995.6555799175
Epoch Step: 805 / 819 Loss: 135.17774963378906 Tokens per Sec: 13167.396250462793
Epoch Step: 810 / 819 Loss: 114.99413299560547 Tokens per Sec: 13466.477165162325
Epoch Step: 815 / 819 Loss: 118.23241424560547 Tokens per Sec: 10516.260596952236
Epoch ended with duration 0:04:42.748948
Train perplexity: 7.884312056291502
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_4 ( ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 = new TYPE_2 ( ) ; TYPE_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { if ( ( ( VAR_2 . METHOD_2 ( ) ) ) ) { VAR_2 . METHOD_3 ( ) . METHOD_3 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_4 ( ) ) ; } ) ; } ) { ( ( ( ) ; } } } } } } } } } } }[0m
Epoch ended with duration 0:00:26.269702
Validation perplexity: 5.695917429349712
Model saved best_on_validation!
Epoch 2 / 1000
Epoch Step: 5 / 819 Loss: 96.11394500732422 Tokens per Sec: 13413.403491389794
Epoch Step: 10 / 819 Loss: 282.8447570800781 Tokens per Sec: 13099.08606510329
Epoch Step: 15 / 819 Loss: 128.9758758544922 Tokens per Sec: 12467.357226847253
Epoch Step: 20 / 819 Loss: 120.09050750732422 Tokens per Sec: 13892.864731160447
Epoch Step: 25 / 819 Loss: 170.74615478515625 Tokens per Sec: 13615.038538598843
Epoch Step: 30 / 819 Loss: 142.89512634277344 Tokens per Sec: 13639.681483160624
Epoch Step: 35 / 819 Loss: 144.16978454589844 Tokens per Sec: 12747.895477520413
Epoch Step: 40 / 819 Loss: 157.8836669921875 Tokens per Sec: 15990.081329466593
Epoch Step: 45 / 819 Loss: 155.3819580078125 Tokens per Sec: 13305.372757747828
Epoch Step: 50 / 819 Loss: 116.6214828491211 Tokens per Sec: 13477.671188457509
Epoch Step: 55 / 819 Loss: 110.55575561523438 Tokens per Sec: 13260.437312295915
Epoch Step: 60 / 819 Loss: 149.63998413085938 Tokens per Sec: 13326.086862754019
Epoch Step: 65 / 819 Loss: 126.34002685546875 Tokens per Sec: 12366.556564655313
Epoch Step: 70 / 819 Loss: 140.25 Tokens per Sec: 12873.41311716482
Epoch Step: 75 / 819 Loss: 85.13228607177734 Tokens per Sec: 12802.234656162067
Epoch Step: 80 / 819 Loss: 80.47203063964844 Tokens per Sec: 12903.164926899015
Epoch Step: 85 / 819 Loss: 147.69390869140625 Tokens per Sec: 16555.475454655596
Epoch Step: 90 / 819 Loss: 131.52947998046875 Tokens per Sec: 15096.343036950217
Epoch Step: 95 / 819 Loss: 117.6590576171875 Tokens per Sec: 13364.997330663724
Epoch Step: 100 / 819 Loss: 258.3944091796875 Tokens per Sec: 12940.934314266662
Epoch Step: 105 / 819 Loss: 103.01704406738281 Tokens per Sec: 15036.060694319456
Epoch Step: 110 / 819 Loss: 128.40098571777344 Tokens per Sec: 13767.82020834992
Epoch Step: 115 / 819 Loss: 88.37800598144531 Tokens per Sec: 13081.78288996399
Epoch Step: 120 / 819 Loss: 104.61410522460938 Tokens per Sec: 13767.624338582638
Epoch Step: 125 / 819 Loss: 83.65413665771484 Tokens per Sec: 15142.510645886136
Epoch Step: 130 / 819 Loss: 90.49234008789062 Tokens per Sec: 14677.621149371871
Epoch Step: 135 / 819 Loss: 142.0782470703125 Tokens per Sec: 13095.103849369354
Epoch Step: 140 / 819 Loss: 123.439453125 Tokens per Sec: 14693.500749048668
Epoch Step: 145 / 819 Loss: 79.66895294189453 Tokens per Sec: 12705.176531865065
Epoch Step: 150 / 819 Loss: 90.70543670654297 Tokens per Sec: 13829.47903269388
Epoch Step: 155 / 819 Loss: 102.78070831298828 Tokens per Sec: 14072.895179606998
Epoch Step: 160 / 819 Loss: 84.64678955078125 Tokens per Sec: 13121.777740444235
Epoch Step: 165 / 819 Loss: 107.86349487304688 Tokens per Sec: 12575.49781554167
Epoch Step: 170 / 819 Loss: 353.5024719238281 Tokens per Sec: 14046.570341027884
Epoch Step: 175 / 819 Loss: 117.73176574707031 Tokens per Sec: 12145.951553293467
Epoch Step: 180 / 819 Loss: 127.18240356445312 Tokens per Sec: 13660.24984744772
Epoch Step: 185 / 819 Loss: 123.33573913574219 Tokens per Sec: 14200.229078996574
Epoch Step: 190 / 819 Loss: 116.91619873046875 Tokens per Sec: 12766.052491577488
Epoch Step: 195 / 819 Loss: 139.25270080566406 Tokens per Sec: 12375.958206290561
Epoch Step: 200 / 819 Loss: 365.4271545410156 Tokens per Sec: 15724.649192480805
Epoch Step: 205 / 819 Loss: 138.7786102294922 Tokens per Sec: 14739.643529424467
Epoch Step: 210 / 819 Loss: 86.66011810302734 Tokens per Sec: 13136.00057081856
Epoch Step: 215 / 819 Loss: 88.81756591796875 Tokens per Sec: 12151.233845950901
Epoch Step: 220 / 819 Loss: 152.97756958007812 Tokens per Sec: 14056.957404723895
Epoch Step: 225 / 819 Loss: 260.1042175292969 Tokens per Sec: 13495.62671898198
Epoch Step: 230 / 819 Loss: 105.47805786132812 Tokens per Sec: 14535.1928294205
Epoch Step: 235 / 819 Loss: 142.5099334716797 Tokens per Sec: 14997.705892435248
Epoch Step: 240 / 819 Loss: 102.09124755859375 Tokens per Sec: 13754.715313895984
Epoch Step: 245 / 819 Loss: 92.38867950439453 Tokens per Sec: 12817.093060648895
Epoch Step: 250 / 819 Loss: 101.30677795410156 Tokens per Sec: 14900.688948144125
Epoch Step: 255 / 819 Loss: 152.21165466308594 Tokens per Sec: 14950.533480431157
Epoch Step: 260 / 819 Loss: 129.36297607421875 Tokens per Sec: 13790.924896510292
Epoch Step: 265 / 819 Loss: 98.15607452392578 Tokens per Sec: 14392.83099807712
Epoch Step: 270 / 819 Loss: 115.35126495361328 Tokens per Sec: 13661.50826806499
Epoch Step: 275 / 819 Loss: 134.32455444335938 Tokens per Sec: 13667.877287576777
Epoch Step: 280 / 819 Loss: 100.69805908203125 Tokens per Sec: 13524.662057794605
Epoch Step: 285 / 819 Loss: 83.92584228515625 Tokens per Sec: 14061.573961940721
Epoch Step: 290 / 819 Loss: 112.86988067626953 Tokens per Sec: 13683.282002117661
Epoch Step: 295 / 819 Loss: 100.24182891845703 Tokens per Sec: 13947.50422165177
Epoch Step: 300 / 819 Loss: 140.68402099609375 Tokens per Sec: 13810.018009181418
Epoch Step: 305 / 819 Loss: 131.1001739501953 Tokens per Sec: 13370.639976830684
Epoch Step: 310 / 819 Loss: 154.2149658203125 Tokens per Sec: 13742.152670993677
Epoch Step: 315 / 819 Loss: 108.71339416503906 Tokens per Sec: 12546.216524866632
Epoch Step: 320 / 819 Loss: 97.95440673828125 Tokens per Sec: 14116.293177011119
Epoch Step: 325 / 819 Loss: 126.40377044677734 Tokens per Sec: 13081.286447934317
Epoch Step: 330 / 819 Loss: 141.10874938964844 Tokens per Sec: 13891.35737427738
Epoch Step: 335 / 819 Loss: 90.4301528930664 Tokens per Sec: 12707.886730394559
Epoch Step: 340 / 819 Loss: 86.82484436035156 Tokens per Sec: 14006.21370544134
Epoch Step: 345 / 819 Loss: 315.1018981933594 Tokens per Sec: 13727.962683686294
Epoch Step: 350 / 819 Loss: 113.67699432373047 Tokens per Sec: 15208.200723129177
Epoch Step: 355 / 819 Loss: 118.18229675292969 Tokens per Sec: 13663.508080760348
Epoch Step: 360 / 819 Loss: 126.0908432006836 Tokens per Sec: 14031.551862117803
Epoch Step: 365 / 819 Loss: 120.04193115234375 Tokens per Sec: 12675.913857822683
Epoch Step: 370 / 819 Loss: 110.11903381347656 Tokens per Sec: 13302.203835934475
Epoch Step: 375 / 819 Loss: 89.8790054321289 Tokens per Sec: 15755.752077920602
Epoch Step: 380 / 819 Loss: 99.713623046875 Tokens per Sec: 13968.200259232774
Epoch Step: 385 / 819 Loss: 95.6758041381836 Tokens per Sec: 11762.324038673409
Epoch Step: 390 / 819 Loss: 98.70816802978516 Tokens per Sec: 14229.688926306499
Epoch Step: 395 / 819 Loss: 108.93687438964844 Tokens per Sec: 13402.817977381646
Epoch Step: 400 / 819 Loss: 108.73776245117188 Tokens per Sec: 13798.703452385762
Epoch Step: 405 / 819 Loss: 108.31098937988281 Tokens per Sec: 12692.617388544655
Epoch Step: 410 / 819 Loss: 134.7886505126953 Tokens per Sec: 14706.733594950252
Epoch Step: 415 / 819 Loss: 234.9090576171875 Tokens per Sec: 13321.022334620298
Epoch Step: 420 / 819 Loss: 114.70503234863281 Tokens per Sec: 14521.183864840788
Epoch Step: 425 / 819 Loss: 103.03933715820312 Tokens per Sec: 13591.618111502636
Epoch Step: 430 / 819 Loss: 248.39466857910156 Tokens per Sec: 12982.163244979953
Epoch Step: 435 / 819 Loss: 147.72134399414062 Tokens per Sec: 14264.808382235778
Epoch Step: 440 / 819 Loss: 96.83580780029297 Tokens per Sec: 16444.472858806766
Epoch Step: 445 / 819 Loss: 97.86332702636719 Tokens per Sec: 13422.453521260915
Epoch Step: 450 / 819 Loss: 229.88330078125 Tokens per Sec: 12692.869966651233
Epoch Step: 455 / 819 Loss: 219.41937255859375 Tokens per Sec: 11816.17243411575
Epoch Step: 460 / 819 Loss: 111.32823181152344 Tokens per Sec: 14849.488388230773
Epoch Step: 465 / 819 Loss: 136.6319580078125 Tokens per Sec: 15729.268017319235
Epoch Step: 470 / 819 Loss: 116.52102661132812 Tokens per Sec: 13478.953366836906
Epoch Step: 475 / 819 Loss: 141.8470458984375 Tokens per Sec: 16222.362725090394
Epoch Step: 480 / 819 Loss: 89.4173355102539 Tokens per Sec: 14548.949032424001
Epoch Step: 485 / 819 Loss: 136.25357055664062 Tokens per Sec: 13836.872395938808
Epoch Step: 490 / 819 Loss: 138.79281616210938 Tokens per Sec: 13974.784402840933
Epoch Step: 495 / 819 Loss: 67.5844955444336 Tokens per Sec: 13610.384117537596
Epoch Step: 500 / 819 Loss: 343.1444091796875 Tokens per Sec: 14832.208260684672
Epoch Step: 505 / 819 Loss: 137.15948486328125 Tokens per Sec: 14790.596400794175
Epoch Step: 510 / 819 Loss: 111.07621765136719 Tokens per Sec: 14600.543085463765
Epoch Step: 515 / 819 Loss: 87.7900161743164 Tokens per Sec: 13968.001185941808
Epoch Step: 520 / 819 Loss: 136.20245361328125 Tokens per Sec: 14112.355259064376
Epoch Step: 525 / 819 Loss: 96.0236587524414 Tokens per Sec: 14004.336704821255
Epoch Step: 530 / 819 Loss: 121.0357666015625 Tokens per Sec: 13650.000622751282
Epoch Step: 535 / 819 Loss: 102.03636932373047 Tokens per Sec: 14148.912243650444
Epoch Step: 540 / 819 Loss: 101.7964859008789 Tokens per Sec: 14464.13419506086
Epoch Step: 545 / 819 Loss: 292.3910827636719 Tokens per Sec: 12114.886182842964
Epoch Step: 550 / 819 Loss: 97.28398895263672 Tokens per Sec: 13439.515430929358
Epoch Step: 555 / 819 Loss: 354.0325622558594 Tokens per Sec: 14074.839186729718
Epoch Step: 560 / 819 Loss: 112.807373046875 Tokens per Sec: 14295.251141442774
Epoch Step: 565 / 819 Loss: 131.02256774902344 Tokens per Sec: 13578.96670383428
Epoch Step: 570 / 819 Loss: 94.074462890625 Tokens per Sec: 13880.833477653647
Epoch Step: 575 / 819 Loss: 119.22284698486328 Tokens per Sec: 13310.71108209881
Epoch Step: 580 / 819 Loss: 98.79635620117188 Tokens per Sec: 15102.145097092463
Epoch Step: 585 / 819 Loss: 130.35174560546875 Tokens per Sec: 13674.830755765823
Epoch Step: 590 / 819 Loss: 292.2485046386719 Tokens per Sec: 13431.8833894757
Epoch Step: 595 / 819 Loss: 77.45590209960938 Tokens per Sec: 13223.444391863883
Epoch Step: 600 / 819 Loss: 83.6474838256836 Tokens per Sec: 14367.469879192287
Epoch Step: 605 / 819 Loss: 90.126708984375 Tokens per Sec: 14493.220094632466
Epoch Step: 610 / 819 Loss: 124.64972686767578 Tokens per Sec: 13290.780477693635
Epoch Step: 615 / 819 Loss: 80.4296875 Tokens per Sec: 14564.860676036677
Epoch Step: 620 / 819 Loss: 83.59027099609375 Tokens per Sec: 14710.55033905236
Epoch Step: 625 / 819 Loss: 67.68563842773438 Tokens per Sec: 14232.822324642477
Epoch Step: 630 / 819 Loss: 99.34539794921875 Tokens per Sec: 13086.473042140246
Epoch Step: 635 / 819 Loss: 81.41751861572266 Tokens per Sec: 15168.021744657091
Epoch Step: 640 / 819 Loss: 76.0740737915039 Tokens per Sec: 13342.102139139419
Epoch Step: 645 / 819 Loss: 82.45115661621094 Tokens per Sec: 12348.728882849664
Epoch Step: 650 / 819 Loss: 110.83991241455078 Tokens per Sec: 13383.653560824963
Epoch Step: 655 / 819 Loss: 111.0658950805664 Tokens per Sec: 13209.122037546394
Epoch Step: 660 / 819 Loss: 85.18513488769531 Tokens per Sec: 14314.338046271669
Epoch Step: 665 / 819 Loss: 85.65692138671875 Tokens per Sec: 13690.208376834828
Epoch Step: 670 / 819 Loss: 103.69619750976562 Tokens per Sec: 14859.498670748853
Epoch Step: 675 / 819 Loss: 122.38907623291016 Tokens per Sec: 14262.758615486016
Epoch Step: 680 / 819 Loss: 97.59931182861328 Tokens per Sec: 14115.69545205235
Epoch Step: 685 / 819 Loss: 280.4311828613281 Tokens per Sec: 13710.508095661402
Epoch Step: 690 / 819 Loss: 122.5704574584961 Tokens per Sec: 13920.154500256464
Epoch Step: 695 / 819 Loss: 370.63348388671875 Tokens per Sec: 14333.746494571835
Epoch Step: 700 / 819 Loss: 109.38766479492188 Tokens per Sec: 13684.621334724261
Epoch Step: 705 / 819 Loss: 111.36972045898438 Tokens per Sec: 13566.364155279975
Epoch Step: 710 / 819 Loss: 67.68951416015625 Tokens per Sec: 13204.438489477667
Epoch Step: 715 / 819 Loss: 74.577392578125 Tokens per Sec: 12558.737183984364
Epoch Step: 720 / 819 Loss: 107.38164520263672 Tokens per Sec: 13741.19639005129
Epoch Step: 725 / 819 Loss: 103.96241760253906 Tokens per Sec: 13944.678026590604
Epoch Step: 730 / 819 Loss: 90.27442169189453 Tokens per Sec: 14181.047203681273
Epoch Step: 735 / 819 Loss: 61.44312286376953 Tokens per Sec: 13541.117444416417
Epoch Step: 740 / 819 Loss: 93.32145690917969 Tokens per Sec: 14391.452746419
Epoch Step: 745 / 819 Loss: 83.75127410888672 Tokens per Sec: 12373.485274756442
Epoch Step: 750 / 819 Loss: 100.07980346679688 Tokens per Sec: 14958.339010810208
Epoch Step: 755 / 819 Loss: 121.9803466796875 Tokens per Sec: 13856.405751336359
Epoch Step: 760 / 819 Loss: 122.11254119873047 Tokens per Sec: 13746.614767079396
Epoch Step: 765 / 819 Loss: 96.8547592163086 Tokens per Sec: 14638.2938102778
Epoch Step: 770 / 819 Loss: 67.96517944335938 Tokens per Sec: 14487.333828870656
Epoch Step: 775 / 819 Loss: 100.21481323242188 Tokens per Sec: 15487.412789396663
Epoch Step: 780 / 819 Loss: 77.23432159423828 Tokens per Sec: 14358.036273480513
Epoch Step: 785 / 819 Loss: 78.90223693847656 Tokens per Sec: 11272.48555431131
Epoch Step: 790 / 819 Loss: 77.75214385986328 Tokens per Sec: 15442.802142712988
Epoch Step: 795 / 819 Loss: 70.33845520019531 Tokens per Sec: 12660.724973085476
Epoch Step: 800 / 819 Loss: 69.09983825683594 Tokens per Sec: 12962.314965228876
Epoch Step: 805 / 819 Loss: 71.98554992675781 Tokens per Sec: 11718.510847731426
Epoch Step: 810 / 819 Loss: 66.31422424316406 Tokens per Sec: 12847.25798166538
Epoch Step: 815 / 819 Loss: 112.12857818603516 Tokens per Sec: 12659.182989415389
Epoch ended with duration 0:04:42.464415
Train perplexity: 5.243459634799661
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_1 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_3 ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_1 , ( VAR_2 . METHOD_4 ( ) , VAR_2 , VAR_3 , VAR_3 , VAR_3 , VAR_1 , VAR_3 ) , false ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String , java.lang.String java.lang.String name ) { VAR_1 . METHOD_1 ( STRING_1 + STRING_1 ) ; if ( ( VAR_2 . METHOD_3 ( ) ) != null ) { TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) . METHOD_3 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . get ( ) . get ( ) . METHOD_3 ( ) , VAR_3 ) ; } } } }[0m
Epoch ended with duration 0:00:25.974695
Validation perplexity: 3.916414656197157
Model saved best_on_validation!
Epoch 3 / 1000
Epoch Step: 5 / 819 Loss: 219.71958923339844 Tokens per Sec: 13028.827164243754
Epoch Step: 10 / 819 Loss: 72.12320709228516 Tokens per Sec: 12733.797588469768
Epoch Step: 15 / 819 Loss: 105.29846954345703 Tokens per Sec: 13552.888722903772
Epoch Step: 20 / 819 Loss: 100.96321868896484 Tokens per Sec: 14618.778761303096
Epoch Step: 25 / 819 Loss: 84.8026123046875 Tokens per Sec: 13756.89839391657
Epoch Step: 30 / 819 Loss: 83.52008819580078 Tokens per Sec: 11827.490640938382
Epoch Step: 35 / 819 Loss: 105.9029541015625 Tokens per Sec: 14979.427464881112
Epoch Step: 40 / 819 Loss: 104.90660095214844 Tokens per Sec: 14697.446960279565
Epoch Step: 45 / 819 Loss: 89.39563751220703 Tokens per Sec: 14816.96734424067
Epoch Step: 50 / 819 Loss: 63.01692199707031 Tokens per Sec: 15260.712312759542
Epoch Step: 55 / 819 Loss: 103.62662506103516 Tokens per Sec: 14159.745714498107
Epoch Step: 60 / 819 Loss: 90.14752197265625 Tokens per Sec: 12897.208266590347
Epoch Step: 65 / 819 Loss: 102.03370666503906 Tokens per Sec: 14424.126026835966
Epoch Step: 70 / 819 Loss: 70.67298126220703 Tokens per Sec: 13554.06331642977
Epoch Step: 75 / 819 Loss: 106.7245864868164 Tokens per Sec: 15295.38140782349
Epoch Step: 80 / 819 Loss: 96.52645874023438 Tokens per Sec: 13408.277159648971
Epoch Step: 85 / 819 Loss: 100.67666625976562 Tokens per Sec: 14455.994699601217
Epoch Step: 90 / 819 Loss: 96.45896911621094 Tokens per Sec: 14316.45462581284
Epoch Step: 95 / 819 Loss: 61.220821380615234 Tokens per Sec: 12265.385950541095
Epoch Step: 100 / 819 Loss: 109.9695816040039 Tokens per Sec: 13958.595031856361
Epoch Step: 105 / 819 Loss: 62.94856643676758 Tokens per Sec: 15946.902624501081
Epoch Step: 110 / 819 Loss: 77.01248168945312 Tokens per Sec: 13057.460018604983
Epoch Step: 115 / 819 Loss: 290.2218933105469 Tokens per Sec: 14838.626004697282
Epoch Step: 120 / 819 Loss: 114.61083221435547 Tokens per Sec: 15167.917754793809
Epoch Step: 125 / 819 Loss: 96.2580337524414 Tokens per Sec: 12772.790082947498
Epoch Step: 130 / 819 Loss: 67.0385971069336 Tokens per Sec: 12796.030803255282
Epoch Step: 135 / 819 Loss: 59.27855682373047 Tokens per Sec: 13139.981785316377
Epoch Step: 140 / 819 Loss: 81.22128295898438 Tokens per Sec: 13337.013943080688
Epoch Step: 145 / 819 Loss: 109.55177307128906 Tokens per Sec: 14323.191915525207
Epoch Step: 150 / 819 Loss: 105.21088409423828 Tokens per Sec: 13045.164796401534
Epoch Step: 155 / 819 Loss: 276.9097900390625 Tokens per Sec: 13261.324935155964
Epoch Step: 160 / 819 Loss: 78.95635986328125 Tokens per Sec: 12471.803762524492
Epoch Step: 165 / 819 Loss: 258.494873046875 Tokens per Sec: 13744.533296821635
Epoch Step: 170 / 819 Loss: 64.90386199951172 Tokens per Sec: 14142.449578303964
Epoch Step: 175 / 819 Loss: 91.73436737060547 Tokens per Sec: 14413.426093877188
Epoch Step: 180 / 819 Loss: 353.699951171875 Tokens per Sec: 12200.554335583165
Epoch Step: 185 / 819 Loss: 96.7179183959961 Tokens per Sec: 12947.7601802324
Epoch Step: 190 / 819 Loss: 64.15109252929688 Tokens per Sec: 13662.022405463033
Epoch Step: 195 / 819 Loss: 345.51934814453125 Tokens per Sec: 15556.65366432503
Epoch Step: 200 / 819 Loss: 64.64891052246094 Tokens per Sec: 14435.612141348782
Epoch Step: 205 / 819 Loss: 105.40487670898438 Tokens per Sec: 13394.14778614059
Epoch Step: 210 / 819 Loss: 79.64826965332031 Tokens per Sec: 12797.357579860634
Epoch Step: 215 / 819 Loss: 64.51232147216797 Tokens per Sec: 14454.760335304556
Epoch Step: 220 / 819 Loss: 88.94695281982422 Tokens per Sec: 13564.863699057316
Epoch Step: 225 / 819 Loss: 73.36398315429688 Tokens per Sec: 14412.407586910755
Epoch Step: 230 / 819 Loss: 86.36168670654297 Tokens per Sec: 13774.846130593687
Epoch Step: 235 / 819 Loss: 58.43647003173828 Tokens per Sec: 13319.12295478455
Epoch Step: 240 / 819 Loss: 360.3243103027344 Tokens per Sec: 14696.682013966674
Epoch Step: 245 / 819 Loss: 56.064125061035156 Tokens per Sec: 13736.551610757975
Epoch Step: 250 / 819 Loss: 85.0535659790039 Tokens per Sec: 13920.726253058814
Epoch Step: 255 / 819 Loss: 67.36849212646484 Tokens per Sec: 14631.815879414224
Epoch Step: 260 / 819 Loss: 76.22113800048828 Tokens per Sec: 13133.503984817302
Epoch Step: 265 / 819 Loss: 95.45918273925781 Tokens per Sec: 12988.392504415508
Epoch Step: 270 / 819 Loss: 73.76151275634766 Tokens per Sec: 14840.295410110897
Epoch Step: 275 / 819 Loss: 100.9296646118164 Tokens per Sec: 13770.633475145374
Epoch Step: 280 / 819 Loss: 291.59722900390625 Tokens per Sec: 14044.091122189648
Epoch Step: 285 / 819 Loss: 69.49964904785156 Tokens per Sec: 13343.671535774309
Epoch Step: 290 / 819 Loss: 76.03113555908203 Tokens per Sec: 13838.039522685775
Epoch Step: 295 / 819 Loss: 307.57379150390625 Tokens per Sec: 12750.52563606133
Epoch Step: 300 / 819 Loss: 329.3710021972656 Tokens per Sec: 14229.598589485837
Epoch Step: 305 / 819 Loss: 114.767578125 Tokens per Sec: 12547.296693349943
Epoch Step: 310 / 819 Loss: 55.92383575439453 Tokens per Sec: 14580.093437714602
Epoch Step: 315 / 819 Loss: 87.50469970703125 Tokens per Sec: 13778.502939347292
Epoch Step: 320 / 819 Loss: 73.42727661132812 Tokens per Sec: 13931.90857887142
Epoch Step: 325 / 819 Loss: 59.883644104003906 Tokens per Sec: 15732.106015213585
Epoch Step: 330 / 819 Loss: 64.76286315917969 Tokens per Sec: 13858.601965580572
Epoch Step: 335 / 819 Loss: 78.78854370117188 Tokens per Sec: 14561.204218404659
Epoch Step: 340 / 819 Loss: 61.631710052490234 Tokens per Sec: 13252.186084654828
Epoch Step: 345 / 819 Loss: 87.31498718261719 Tokens per Sec: 13805.916291495489
Epoch Step: 350 / 819 Loss: 336.3534851074219 Tokens per Sec: 14874.48691931519
Epoch Step: 355 / 819 Loss: 57.224788665771484 Tokens per Sec: 13965.731158581171
Epoch Step: 360 / 819 Loss: 77.46268463134766 Tokens per Sec: 15657.208439451271
Epoch Step: 365 / 819 Loss: 75.82402801513672 Tokens per Sec: 15042.347870268031
Epoch Step: 370 / 819 Loss: 68.6885757446289 Tokens per Sec: 12523.22052238364
Epoch Step: 375 / 819 Loss: 85.98873901367188 Tokens per Sec: 12790.607903160675
Epoch Step: 380 / 819 Loss: 87.2195053100586 Tokens per Sec: 12836.082556397323
Epoch Step: 385 / 819 Loss: 58.7298698425293 Tokens per Sec: 13142.24398945017
Epoch Step: 390 / 819 Loss: 72.9266128540039 Tokens per Sec: 13927.885984077575
Epoch Step: 395 / 819 Loss: 82.2403335571289 Tokens per Sec: 14089.530236092143
Epoch Step: 400 / 819 Loss: 99.19605255126953 Tokens per Sec: 14531.722729624853
Epoch Step: 405 / 819 Loss: 86.61231994628906 Tokens per Sec: 14197.567367010377
Epoch Step: 410 / 819 Loss: 72.37091064453125 Tokens per Sec: 14672.176277334305
Epoch Step: 415 / 819 Loss: 91.00611877441406 Tokens per Sec: 13322.397710058849
Epoch Step: 420 / 819 Loss: 77.10845184326172 Tokens per Sec: 13633.255220680523
Epoch Step: 425 / 819 Loss: 91.65625762939453 Tokens per Sec: 15443.394228069597
Epoch Step: 430 / 819 Loss: 59.64260482788086 Tokens per Sec: 13309.595350793723
Epoch Step: 435 / 819 Loss: 89.30611419677734 Tokens per Sec: 12178.501406647358
Epoch Step: 440 / 819 Loss: 77.84076690673828 Tokens per Sec: 13233.185102744346
Epoch Step: 445 / 819 Loss: 51.11017990112305 Tokens per Sec: 13273.949897521963
Epoch Step: 450 / 819 Loss: 53.77513122558594 Tokens per Sec: 14477.0774781612
Epoch Step: 455 / 819 Loss: 71.97559356689453 Tokens per Sec: 12360.553367645805
Epoch Step: 460 / 819 Loss: 58.91428756713867 Tokens per Sec: 14419.21599129996
Epoch Step: 465 / 819 Loss: 84.151123046875 Tokens per Sec: 14637.334572641825
Epoch Step: 470 / 819 Loss: 64.17684936523438 Tokens per Sec: 14954.866415728076
Epoch Step: 475 / 819 Loss: 338.0489807128906 Tokens per Sec: 14165.30106169899
Epoch Step: 480 / 819 Loss: 74.26980590820312 Tokens per Sec: 15175.418906199942
Epoch Step: 485 / 819 Loss: 74.73269653320312 Tokens per Sec: 15888.912006617646
Epoch Step: 490 / 819 Loss: 79.54833221435547 Tokens per Sec: 13192.192771391567
Epoch Step: 495 / 819 Loss: 51.76741409301758 Tokens per Sec: 13169.701556674227
Epoch Step: 500 / 819 Loss: 90.20474243164062 Tokens per Sec: 14932.33019784165
Epoch Step: 505 / 819 Loss: 65.7940673828125 Tokens per Sec: 13932.206093745699
Epoch Step: 510 / 819 Loss: 58.20514678955078 Tokens per Sec: 13712.48151956086
Epoch Step: 515 / 819 Loss: 356.88494873046875 Tokens per Sec: 14891.913954494114
Epoch Step: 520 / 819 Loss: 76.63927459716797 Tokens per Sec: 14512.07168169342
Epoch Step: 525 / 819 Loss: 50.79312515258789 Tokens per Sec: 13021.719523982769
Epoch Step: 530 / 819 Loss: 84.91423797607422 Tokens per Sec: 17122.5595401475
Epoch Step: 535 / 819 Loss: 60.54306411743164 Tokens per Sec: 13825.39086316032
Epoch Step: 540 / 819 Loss: 55.61138153076172 Tokens per Sec: 13543.19895998072
Epoch Step: 545 / 819 Loss: 69.32845306396484 Tokens per Sec: 14445.500615941863
Epoch Step: 550 / 819 Loss: 257.9469299316406 Tokens per Sec: 14986.344400963055
Epoch Step: 555 / 819 Loss: 51.026432037353516 Tokens per Sec: 13068.093599667034
Epoch Step: 560 / 819 Loss: 87.16905975341797 Tokens per Sec: 14141.979613222938
Epoch Step: 565 / 819 Loss: 76.05755615234375 Tokens per Sec: 15705.304764926907
Epoch Step: 570 / 819 Loss: 69.47180938720703 Tokens per Sec: 14789.889035524264
Epoch Step: 575 / 819 Loss: 85.95537567138672 Tokens per Sec: 13263.841235675169
Epoch Step: 580 / 819 Loss: 82.28828430175781 Tokens per Sec: 13195.246776662018
Epoch Step: 585 / 819 Loss: 57.770751953125 Tokens per Sec: 13078.129324685946
Epoch Step: 590 / 819 Loss: 60.01557922363281 Tokens per Sec: 12530.514232417987
Epoch Step: 595 / 819 Loss: 58.346920013427734 Tokens per Sec: 11244.377668603005
Epoch Step: 600 / 819 Loss: 42.14933395385742 Tokens per Sec: 12543.616282870704
Epoch Step: 605 / 819 Loss: 79.52385711669922 Tokens per Sec: 12848.37728097996
Epoch Step: 610 / 819 Loss: 54.105003356933594 Tokens per Sec: 12492.923220661061
Epoch Step: 615 / 819 Loss: 82.640869140625 Tokens per Sec: 14123.861016544313
Epoch Step: 620 / 819 Loss: 91.6292495727539 Tokens per Sec: 16424.6295247502
Epoch Step: 625 / 819 Loss: 53.232852935791016 Tokens per Sec: 12721.62838781862
Epoch Step: 630 / 819 Loss: 87.07160949707031 Tokens per Sec: 12788.56102059865
Epoch Step: 635 / 819 Loss: 87.59507751464844 Tokens per Sec: 13568.517971571282
Epoch Step: 640 / 819 Loss: 75.07927703857422 Tokens per Sec: 15093.515428907967
Epoch Step: 645 / 819 Loss: 70.61528015136719 Tokens per Sec: 13561.330104078303
Epoch Step: 650 / 819 Loss: 72.12173461914062 Tokens per Sec: 13441.41883689353
Epoch Step: 655 / 819 Loss: 63.962379455566406 Tokens per Sec: 14612.504761067552
Epoch Step: 660 / 819 Loss: 50.19812774658203 Tokens per Sec: 13818.796124000291
Epoch Step: 665 / 819 Loss: 62.058353424072266 Tokens per Sec: 13368.809825093382
Epoch Step: 670 / 819 Loss: 69.50153350830078 Tokens per Sec: 13896.398834198599
Epoch Step: 675 / 819 Loss: 59.4888801574707 Tokens per Sec: 13002.745528839498
Epoch Step: 680 / 819 Loss: 66.78900146484375 Tokens per Sec: 15214.48623969178
Epoch Step: 685 / 819 Loss: 74.33232879638672 Tokens per Sec: 14044.247849090623
Epoch Step: 690 / 819 Loss: 65.96565246582031 Tokens per Sec: 14445.203892999025
Epoch Step: 695 / 819 Loss: 49.59598922729492 Tokens per Sec: 13837.897064593217
Epoch Step: 700 / 819 Loss: 51.26973342895508 Tokens per Sec: 13497.457723849764
Epoch Step: 705 / 819 Loss: 77.57764434814453 Tokens per Sec: 14680.399874212218
Epoch Step: 710 / 819 Loss: 54.31386184692383 Tokens per Sec: 14633.664517535573
Epoch Step: 715 / 819 Loss: 72.73321533203125 Tokens per Sec: 14679.29880250923
Epoch Step: 720 / 819 Loss: 54.80095672607422 Tokens per Sec: 12867.692093446669
Epoch Step: 725 / 819 Loss: 39.365440368652344 Tokens per Sec: 14227.055054047725
Epoch Step: 730 / 819 Loss: 50.000057220458984 Tokens per Sec: 12761.056346598516
Epoch Step: 735 / 819 Loss: 75.25831604003906 Tokens per Sec: 12763.465481781946
Epoch Step: 740 / 819 Loss: 61.680362701416016 Tokens per Sec: 14743.05840306526
Epoch Step: 745 / 819 Loss: 59.33388900756836 Tokens per Sec: 15491.266300424368
Epoch Step: 750 / 819 Loss: 76.49559020996094 Tokens per Sec: 14881.949639941753
Epoch Step: 755 / 819 Loss: 57.95923614501953 Tokens per Sec: 13448.646866156154
Epoch Step: 760 / 819 Loss: 43.676334381103516 Tokens per Sec: 12688.45922730083
Epoch Step: 765 / 819 Loss: 63.32749938964844 Tokens per Sec: 12263.163231901854
Epoch Step: 770 / 819 Loss: 88.07389831542969 Tokens per Sec: 15512.808607192494
Epoch Step: 775 / 819 Loss: 41.51948165893555 Tokens per Sec: 13678.00215138827
Epoch Step: 780 / 819 Loss: 76.10157012939453 Tokens per Sec: 12805.618870876244
Epoch Step: 785 / 819 Loss: 83.40772247314453 Tokens per Sec: 14524.53924262266
Epoch Step: 790 / 819 Loss: 70.4669418334961 Tokens per Sec: 14813.581014278983
Epoch Step: 795 / 819 Loss: 57.631797790527344 Tokens per Sec: 12543.194593836008
Epoch Step: 800 / 819 Loss: 306.450927734375 Tokens per Sec: 13917.781887069928
Epoch Step: 805 / 819 Loss: 73.85704803466797 Tokens per Sec: 12714.739098526308
Epoch Step: 810 / 819 Loss: 65.82830810546875 Tokens per Sec: 11609.05492234532
Epoch Step: 815 / 819 Loss: 81.62166595458984 Tokens per Sec: 13594.262375306787
Epoch ended with duration 0:04:41.081646
Train perplexity: 3.6243606420309677
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_1 = VAR_1 . METHOD_3 ( ) . METHOD_3 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = VAR_3 . METHOD_4 ( VAR_5 ) ; } . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( ) , new TYPE_4 ( new TYPE_4 ( ) , new TYPE_4 ( ) , VAR_1 ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String , java.lang.String java.lang.String ) { VAR_1 . METHOD_1 ( ( STRING_1 + STRING_1 ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) . METHOD_4 ( ) . get ( STRING_2 , STRING_2 ) . add ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . METHOD_5 ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.922442
Validation perplexity: 2.6583027251847167
Model saved best_on_validation!
Epoch 4 / 1000
Epoch Step: 5 / 819 Loss: 72.85758972167969 Tokens per Sec: 13339.152692687145
Epoch Step: 10 / 819 Loss: 46.83418273925781 Tokens per Sec: 16301.652841160698
Epoch Step: 15 / 819 Loss: 69.55145263671875 Tokens per Sec: 13922.058593945376
Epoch Step: 20 / 819 Loss: 66.91234588623047 Tokens per Sec: 13054.337008985563
Epoch Step: 25 / 819 Loss: 58.8247184753418 Tokens per Sec: 15555.220314066155
Epoch Step: 30 / 819 Loss: 40.894981384277344 Tokens per Sec: 12714.172022825776
Epoch Step: 35 / 819 Loss: 65.79071044921875 Tokens per Sec: 14566.102645244442
Epoch Step: 40 / 819 Loss: 49.23666763305664 Tokens per Sec: 13054.710853431132
Epoch Step: 45 / 819 Loss: 84.20026397705078 Tokens per Sec: 15238.812404755234
Epoch Step: 50 / 819 Loss: 58.56257247924805 Tokens per Sec: 13164.797533794253
Epoch Step: 55 / 819 Loss: 65.87421417236328 Tokens per Sec: 14079.670295835644
Epoch Step: 60 / 819 Loss: 59.04313659667969 Tokens per Sec: 15552.914419083017
Epoch Step: 65 / 819 Loss: 54.093177795410156 Tokens per Sec: 13175.456528549825
Epoch Step: 70 / 819 Loss: 59.28973388671875 Tokens per Sec: 15101.435665484863
Epoch Step: 75 / 819 Loss: 58.02716064453125 Tokens per Sec: 14082.935034785796
Epoch Step: 80 / 819 Loss: 56.05951690673828 Tokens per Sec: 13674.193674116888
Epoch Step: 85 / 819 Loss: 46.31968688964844 Tokens per Sec: 13229.299293347714
Epoch Step: 90 / 819 Loss: 50.94536209106445 Tokens per Sec: 12295.907811081332
Epoch Step: 95 / 819 Loss: 48.04528045654297 Tokens per Sec: 13467.378971714044
Epoch Step: 100 / 819 Loss: 322.73406982421875 Tokens per Sec: 13204.186009462934
Epoch Step: 105 / 819 Loss: 58.32233428955078 Tokens per Sec: 11381.926494439327
Epoch Step: 110 / 819 Loss: 60.19276809692383 Tokens per Sec: 14015.04748457849
Epoch Step: 115 / 819 Loss: 57.309967041015625 Tokens per Sec: 12960.704386676778
Epoch Step: 120 / 819 Loss: 51.58271789550781 Tokens per Sec: 12821.937368624012
Epoch Step: 125 / 819 Loss: 60.04389953613281 Tokens per Sec: 13630.525638619045
Epoch Step: 130 / 819 Loss: 57.639957427978516 Tokens per Sec: 13411.278547902122
Epoch Step: 135 / 819 Loss: 60.881587982177734 Tokens per Sec: 13378.213642647148
Epoch Step: 140 / 819 Loss: 39.88224792480469 Tokens per Sec: 13338.317106372855
Epoch Step: 145 / 819 Loss: 53.43994140625 Tokens per Sec: 16698.731458715294
Epoch Step: 150 / 819 Loss: 64.35775756835938 Tokens per Sec: 15094.800197476541
Epoch Step: 155 / 819 Loss: 55.29567337036133 Tokens per Sec: 16352.767627293599
Epoch Step: 160 / 819 Loss: 59.5415153503418 Tokens per Sec: 15564.603517018902
Epoch Step: 165 / 819 Loss: 55.979225158691406 Tokens per Sec: 15260.911812422684
Epoch Step: 170 / 819 Loss: 60.23839569091797 Tokens per Sec: 14659.704561284598
Epoch Step: 175 / 819 Loss: 342.8843078613281 Tokens per Sec: 13490.145845423025
Epoch Step: 180 / 819 Loss: 44.55062484741211 Tokens per Sec: 13600.876955266649
Epoch Step: 185 / 819 Loss: 61.544002532958984 Tokens per Sec: 13387.119539178304
Epoch Step: 190 / 819 Loss: 73.60082244873047 Tokens per Sec: 15183.057858614573
Epoch Step: 195 / 819 Loss: 67.0052261352539 Tokens per Sec: 12578.271489709234
Epoch Step: 200 / 819 Loss: 58.76643753051758 Tokens per Sec: 14364.03488038393
Epoch Step: 205 / 819 Loss: 65.37232208251953 Tokens per Sec: 13092.027561850395
Epoch Step: 210 / 819 Loss: 53.88804244995117 Tokens per Sec: 12159.4506110672
Epoch Step: 215 / 819 Loss: 304.57275390625 Tokens per Sec: 13406.099249396077
Epoch Step: 220 / 819 Loss: 65.911376953125 Tokens per Sec: 14984.89841134793
Epoch Step: 225 / 819 Loss: 45.09712219238281 Tokens per Sec: 16235.772069653725
Epoch Step: 230 / 819 Loss: 54.81287384033203 Tokens per Sec: 13316.43853027594
Epoch Step: 235 / 819 Loss: 43.823726654052734 Tokens per Sec: 13486.257586931475
Epoch Step: 240 / 819 Loss: 53.99074935913086 Tokens per Sec: 13122.995977210194
Epoch Step: 245 / 819 Loss: 50.91421890258789 Tokens per Sec: 14810.550149908828
Epoch Step: 250 / 819 Loss: 56.597286224365234 Tokens per Sec: 13737.518821665255
Epoch Step: 255 / 819 Loss: 43.463985443115234 Tokens per Sec: 13315.949100765474
Epoch Step: 260 / 819 Loss: 67.28704833984375 Tokens per Sec: 14347.450206155369
Epoch Step: 265 / 819 Loss: 50.30730438232422 Tokens per Sec: 13458.86082222281
Epoch Step: 270 / 819 Loss: 73.4947280883789 Tokens per Sec: 14207.592241605618
Epoch Step: 275 / 819 Loss: 55.68178939819336 Tokens per Sec: 14678.366339794646
Epoch Step: 280 / 819 Loss: 47.44490432739258 Tokens per Sec: 13165.144456518941
Epoch Step: 285 / 819 Loss: 251.0155792236328 Tokens per Sec: 14295.37335183611
Epoch Step: 290 / 819 Loss: 58.1763801574707 Tokens per Sec: 14164.947382800981
Epoch Step: 295 / 819 Loss: 68.28691864013672 Tokens per Sec: 14127.099326092588
Epoch Step: 300 / 819 Loss: 43.45307159423828 Tokens per Sec: 13784.720502838303
Epoch Step: 305 / 819 Loss: 46.56048583984375 Tokens per Sec: 15263.933813587915
Epoch Step: 310 / 819 Loss: 36.953853607177734 Tokens per Sec: 14593.149042937657
Epoch Step: 315 / 819 Loss: 60.96868896484375 Tokens per Sec: 14111.730628106228
Epoch Step: 320 / 819 Loss: 69.38548278808594 Tokens per Sec: 13128.112409832329
Epoch Step: 325 / 819 Loss: 59.64219284057617 Tokens per Sec: 13066.18533416461
Epoch Step: 330 / 819 Loss: 54.75715637207031 Tokens per Sec: 15347.709407011178
Epoch Step: 335 / 819 Loss: 52.69261169433594 Tokens per Sec: 11294.564050287412
Epoch Step: 340 / 819 Loss: 46.297447204589844 Tokens per Sec: 13725.8228864149
Epoch Step: 345 / 819 Loss: 43.69655990600586 Tokens per Sec: 12146.95310842002
Epoch Step: 350 / 819 Loss: 52.86067199707031 Tokens per Sec: 12830.722170485391
Epoch Step: 355 / 819 Loss: 65.28439331054688 Tokens per Sec: 16573.417688018933
Epoch Step: 360 / 819 Loss: 306.5868835449219 Tokens per Sec: 15384.59898822812
Epoch Step: 365 / 819 Loss: 37.68505859375 Tokens per Sec: 15730.784339212478
Epoch Step: 370 / 819 Loss: 51.59953308105469 Tokens per Sec: 13438.109529462992
Epoch Step: 375 / 819 Loss: 58.650936126708984 Tokens per Sec: 14308.19076844588
Epoch Step: 380 / 819 Loss: 262.3260803222656 Tokens per Sec: 14526.13212941756
Epoch Step: 385 / 819 Loss: 40.48834991455078 Tokens per Sec: 15795.093157883866
Epoch Step: 390 / 819 Loss: 59.56019973754883 Tokens per Sec: 15895.871546148137
Epoch Step: 395 / 819 Loss: 60.85350036621094 Tokens per Sec: 13502.07614556199
Epoch Step: 400 / 819 Loss: 61.538387298583984 Tokens per Sec: 13975.837097371344
Epoch Step: 405 / 819 Loss: 37.919708251953125 Tokens per Sec: 12648.551919871687
Epoch Step: 410 / 819 Loss: 327.06298828125 Tokens per Sec: 13369.220976970302
Epoch Step: 415 / 819 Loss: 60.77009963989258 Tokens per Sec: 13411.99391709501
Epoch Step: 420 / 819 Loss: 44.611427307128906 Tokens per Sec: 14362.434863238463
Epoch Step: 425 / 819 Loss: 45.675559997558594 Tokens per Sec: 12234.391166239473
Epoch Step: 430 / 819 Loss: 43.1049919128418 Tokens per Sec: 14099.378337814363
Epoch Step: 435 / 819 Loss: 50.555946350097656 Tokens per Sec: 14125.268862657265
Epoch Step: 440 / 819 Loss: 60.65213394165039 Tokens per Sec: 14846.690173993806
Epoch Step: 445 / 819 Loss: 36.33290481567383 Tokens per Sec: 12837.887864592565
Epoch Step: 450 / 819 Loss: 64.31591033935547 Tokens per Sec: 12880.481326449175
Epoch Step: 455 / 819 Loss: 38.02769088745117 Tokens per Sec: 12705.578688856824
Epoch Step: 460 / 819 Loss: 69.58284759521484 Tokens per Sec: 15445.492098324889
Epoch Step: 465 / 819 Loss: 62.498374938964844 Tokens per Sec: 13139.222519468023
Epoch Step: 470 / 819 Loss: 42.48017501831055 Tokens per Sec: 13369.85388661503
Epoch Step: 475 / 819 Loss: 225.69183349609375 Tokens per Sec: 13451.203225528423
Epoch Step: 480 / 819 Loss: 48.18217468261719 Tokens per Sec: 12455.545985876837
Epoch Step: 485 / 819 Loss: 39.025691986083984 Tokens per Sec: 12879.148256277975
Epoch Step: 490 / 819 Loss: 54.88037109375 Tokens per Sec: 13836.303726224103
Epoch Step: 495 / 819 Loss: 29.168703079223633 Tokens per Sec: 13758.34436923815
Epoch Step: 500 / 819 Loss: 31.900915145874023 Tokens per Sec: 13893.080944368407
Epoch Step: 505 / 819 Loss: 35.41830062866211 Tokens per Sec: 13290.662484802446
Epoch Step: 510 / 819 Loss: 59.976600646972656 Tokens per Sec: 16016.825120299205
Epoch Step: 515 / 819 Loss: 57.40523910522461 Tokens per Sec: 14185.222653955789
Epoch Step: 520 / 819 Loss: 40.5765380859375 Tokens per Sec: 13284.028836493646
Epoch Step: 525 / 819 Loss: 53.798492431640625 Tokens per Sec: 13662.855107525742
Epoch Step: 530 / 819 Loss: 52.30454635620117 Tokens per Sec: 12505.433973019895
Epoch Step: 535 / 819 Loss: 45.11370086669922 Tokens per Sec: 12642.129656621066
Epoch Step: 540 / 819 Loss: 335.25982666015625 Tokens per Sec: 13997.591361475035
Epoch Step: 545 / 819 Loss: 57.549468994140625 Tokens per Sec: 14513.231549490909
Epoch Step: 550 / 819 Loss: 50.93682861328125 Tokens per Sec: 12359.861019254684
Epoch Step: 555 / 819 Loss: 46.174564361572266 Tokens per Sec: 13407.184926630698
Epoch Step: 560 / 819 Loss: 52.16579055786133 Tokens per Sec: 13726.309443109601
Epoch Step: 565 / 819 Loss: 59.03714370727539 Tokens per Sec: 14116.16789827339
Epoch Step: 570 / 819 Loss: 56.508419036865234 Tokens per Sec: 14841.184025980558
Epoch Step: 575 / 819 Loss: 65.55387115478516 Tokens per Sec: 13143.029449019537
Epoch Step: 580 / 819 Loss: 43.935184478759766 Tokens per Sec: 13369.176437193026
Epoch Step: 585 / 819 Loss: 30.758779525756836 Tokens per Sec: 12485.041119545438
Epoch Step: 590 / 819 Loss: 320.98187255859375 Tokens per Sec: 13370.075735951594
Epoch Step: 595 / 819 Loss: 294.9001159667969 Tokens per Sec: 12661.581165129466
Epoch Step: 600 / 819 Loss: 69.69255828857422 Tokens per Sec: 13043.52508272328
Epoch Step: 605 / 819 Loss: 41.00950622558594 Tokens per Sec: 12566.934658133874
Epoch Step: 610 / 819 Loss: 56.763919830322266 Tokens per Sec: 14286.067087373853
Epoch Step: 615 / 819 Loss: 66.77556610107422 Tokens per Sec: 12585.134523319786
Epoch Step: 620 / 819 Loss: 43.539493560791016 Tokens per Sec: 14446.206640769833
Epoch Step: 625 / 819 Loss: 61.62853240966797 Tokens per Sec: 13495.953343054774
Epoch Step: 630 / 819 Loss: 54.78601837158203 Tokens per Sec: 14590.222021235075
Epoch Step: 635 / 819 Loss: 196.1156463623047 Tokens per Sec: 15847.372911963039
Epoch Step: 640 / 819 Loss: 60.95686340332031 Tokens per Sec: 13904.324623755047
Epoch Step: 645 / 819 Loss: 62.31706619262695 Tokens per Sec: 14976.345482506142
Epoch Step: 650 / 819 Loss: 43.91773223876953 Tokens per Sec: 13691.7581589844
Epoch Step: 655 / 819 Loss: 33.37932586669922 Tokens per Sec: 14533.277074650641
Epoch Step: 660 / 819 Loss: 46.410396575927734 Tokens per Sec: 13932.450508024884
Epoch Step: 665 / 819 Loss: 44.549652099609375 Tokens per Sec: 13304.39964295401
Epoch Step: 670 / 819 Loss: 56.536155700683594 Tokens per Sec: 13931.604568203215
Epoch Step: 675 / 819 Loss: 54.02920150756836 Tokens per Sec: 14151.134712373992
Epoch Step: 680 / 819 Loss: 48.67555236816406 Tokens per Sec: 14326.226760017285
Epoch Step: 685 / 819 Loss: 56.0458869934082 Tokens per Sec: 13694.964707201267
Epoch Step: 690 / 819 Loss: 54.94523620605469 Tokens per Sec: 14048.19977126447
Epoch Step: 695 / 819 Loss: 35.315975189208984 Tokens per Sec: 12815.25392006635
Epoch Step: 700 / 819 Loss: 223.366943359375 Tokens per Sec: 14409.94903455941
Epoch Step: 705 / 819 Loss: 56.01560974121094 Tokens per Sec: 13741.098471101486
Epoch Step: 710 / 819 Loss: 39.36612319946289 Tokens per Sec: 13792.922484908087
Epoch Step: 715 / 819 Loss: 47.98069381713867 Tokens per Sec: 13299.5461701736
Epoch Step: 720 / 819 Loss: 55.8897705078125 Tokens per Sec: 14408.811388750426
Epoch Step: 725 / 819 Loss: 59.17106246948242 Tokens per Sec: 13700.63560258517
Epoch Step: 730 / 819 Loss: 46.799095153808594 Tokens per Sec: 14362.494589029828
Epoch Step: 735 / 819 Loss: 48.7340087890625 Tokens per Sec: 13739.268574239779
Epoch Step: 740 / 819 Loss: 43.099117279052734 Tokens per Sec: 11722.905560289351
Epoch Step: 745 / 819 Loss: 45.19944763183594 Tokens per Sec: 12795.88234030333
Epoch Step: 750 / 819 Loss: 56.91436004638672 Tokens per Sec: 13504.66630730369
Epoch Step: 755 / 819 Loss: 62.95164489746094 Tokens per Sec: 14178.496291922685
Epoch Step: 760 / 819 Loss: 35.80447769165039 Tokens per Sec: 11613.308371044952
Epoch Step: 765 / 819 Loss: 57.39439392089844 Tokens per Sec: 13755.23698348687
Epoch Step: 770 / 819 Loss: 47.192413330078125 Tokens per Sec: 13077.522607416066
Epoch Step: 775 / 819 Loss: 52.7314338684082 Tokens per Sec: 13045.615761184772
Epoch Step: 780 / 819 Loss: 283.1854553222656 Tokens per Sec: 13389.94262851909
Epoch Step: 785 / 819 Loss: 34.713844299316406 Tokens per Sec: 14428.357399422373
Epoch Step: 790 / 819 Loss: 44.600032806396484 Tokens per Sec: 14226.103666355255
Epoch Step: 795 / 819 Loss: 57.587318420410156 Tokens per Sec: 14220.26372716681
Epoch Step: 800 / 819 Loss: 47.36881637573242 Tokens per Sec: 14443.348214030037
Epoch Step: 805 / 819 Loss: 37.848514556884766 Tokens per Sec: 12918.723707537203
Epoch Step: 810 / 819 Loss: 43.1012077331543 Tokens per Sec: 11967.958346742811
Epoch Step: 815 / 819 Loss: 43.53606414794922 Tokens per Sec: 12745.33924504138
Epoch ended with duration 0:04:42.236584
Train perplexity: 2.6984925474715395
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 . = VAR_1 . METHOD_3 ( ) . VAR_4 = new TYPE_2 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; } . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( new , ( ( new , ( ( new , ( ( new , ( ( ( ) , , , VAR_3 ) ) ) ) ) ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String key , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + ( STRING_1 ) ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . get ( STRING_2 , STRING_2 ) . build ( ) , VAR_3 ) . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.001645
Validation perplexity: 2.490690377999227
Model saved best_on_validation!
Epoch 5 / 1000
Epoch Step: 5 / 819 Loss: 53.9298095703125 Tokens per Sec: 13798.38929513321
Epoch Step: 10 / 819 Loss: 54.85017013549805 Tokens per Sec: 15000.337837132347
Epoch Step: 15 / 819 Loss: 54.686161041259766 Tokens per Sec: 13264.201277568473
Epoch Step: 20 / 819 Loss: 44.58852005004883 Tokens per Sec: 12054.322995732691
Epoch Step: 25 / 819 Loss: 263.523681640625 Tokens per Sec: 13106.315687690172
Epoch Step: 30 / 819 Loss: 57.91740417480469 Tokens per Sec: 14279.389026218161
Epoch Step: 35 / 819 Loss: 43.025638580322266 Tokens per Sec: 11759.024336700173
Epoch Step: 40 / 819 Loss: 59.25773620605469 Tokens per Sec: 12675.878476844713
Epoch Step: 45 / 819 Loss: 41.60112762451172 Tokens per Sec: 14475.724888431481
Epoch Step: 50 / 819 Loss: 41.30256271362305 Tokens per Sec: 14183.09198653348
Epoch Step: 55 / 819 Loss: 39.097625732421875 Tokens per Sec: 13795.58027901565
Epoch Step: 60 / 819 Loss: 246.62144470214844 Tokens per Sec: 13026.146523907817
Epoch Step: 65 / 819 Loss: 43.57733917236328 Tokens per Sec: 12294.000009075071
Epoch Step: 70 / 819 Loss: 334.0364990234375 Tokens per Sec: 14356.634323171329
Epoch Step: 75 / 819 Loss: 41.597328186035156 Tokens per Sec: 14322.21820888756
Epoch Step: 80 / 819 Loss: 49.76004409790039 Tokens per Sec: 13177.87141011739
Epoch Step: 85 / 819 Loss: 49.4061393737793 Tokens per Sec: 15008.089314651164
Epoch Step: 90 / 819 Loss: 49.481651306152344 Tokens per Sec: 12752.39508884521
Epoch Step: 95 / 819 Loss: 28.1442813873291 Tokens per Sec: 12855.079052438274
Epoch Step: 100 / 819 Loss: 51.397377014160156 Tokens per Sec: 14056.010245864676
Epoch Step: 105 / 819 Loss: 49.82466506958008 Tokens per Sec: 14688.846095041368
Epoch Step: 110 / 819 Loss: 31.85711669921875 Tokens per Sec: 12930.84907853467
Epoch Step: 115 / 819 Loss: 34.60866928100586 Tokens per Sec: 14648.627529591393
Epoch Step: 120 / 819 Loss: 38.64902877807617 Tokens per Sec: 15062.819762149831
Epoch Step: 125 / 819 Loss: 32.142887115478516 Tokens per Sec: 15623.81322167878
Epoch Step: 130 / 819 Loss: 55.50450134277344 Tokens per Sec: 16127.323617212529
Epoch Step: 135 / 819 Loss: 339.851318359375 Tokens per Sec: 13297.960725390869
Epoch Step: 140 / 819 Loss: 58.2400016784668 Tokens per Sec: 13844.409983491774
Epoch Step: 145 / 819 Loss: 53.41865539550781 Tokens per Sec: 13409.490709344414
Epoch Step: 150 / 819 Loss: 51.188385009765625 Tokens per Sec: 12934.219874588849
Epoch Step: 155 / 819 Loss: 59.32271957397461 Tokens per Sec: 12839.647226458266
Epoch Step: 160 / 819 Loss: 29.127717971801758 Tokens per Sec: 14787.007662508518
Epoch Step: 165 / 819 Loss: 37.52885818481445 Tokens per Sec: 13623.642667190035
Epoch Step: 170 / 819 Loss: 35.96659469604492 Tokens per Sec: 15228.48690617219
Epoch Step: 175 / 819 Loss: 37.31197738647461 Tokens per Sec: 12085.463580390739
Epoch Step: 180 / 819 Loss: 41.26090621948242 Tokens per Sec: 11894.489294986028
Epoch Step: 185 / 819 Loss: 49.52519989013672 Tokens per Sec: 14310.048293312557
Epoch Step: 190 / 819 Loss: 52.423065185546875 Tokens per Sec: 13608.816848749415
Epoch Step: 195 / 819 Loss: 48.01799392700195 Tokens per Sec: 13451.65739360828
Epoch Step: 200 / 819 Loss: 55.64838409423828 Tokens per Sec: 14564.464171070598
Epoch Step: 205 / 819 Loss: 43.666080474853516 Tokens per Sec: 13023.902218108726
Epoch Step: 210 / 819 Loss: 35.36000061035156 Tokens per Sec: 13404.934293812932
Epoch Step: 215 / 819 Loss: 50.08218002319336 Tokens per Sec: 11264.635110326979
Epoch Step: 220 / 819 Loss: 49.0434455871582 Tokens per Sec: 14274.013451996972
Epoch Step: 225 / 819 Loss: 33.12295150756836 Tokens per Sec: 12492.543284842768
Epoch Step: 230 / 819 Loss: 41.3955078125 Tokens per Sec: 14049.390418473871
Epoch Step: 235 / 819 Loss: 39.76056671142578 Tokens per Sec: 12664.840377365488
Epoch Step: 240 / 819 Loss: 30.08407211303711 Tokens per Sec: 13053.87202819043
Epoch Step: 245 / 819 Loss: 52.286441802978516 Tokens per Sec: 14147.091695452966
Epoch Step: 250 / 819 Loss: 239.9176483154297 Tokens per Sec: 13103.786006472992
Epoch Step: 255 / 819 Loss: 48.360076904296875 Tokens per Sec: 14136.580394476476
Epoch Step: 260 / 819 Loss: 44.55960464477539 Tokens per Sec: 13995.147341738842
Epoch Step: 265 / 819 Loss: 57.43251419067383 Tokens per Sec: 13799.57377560917
Epoch Step: 270 / 819 Loss: 36.36810302734375 Tokens per Sec: 14162.894247142693
Epoch Step: 275 / 819 Loss: 54.363529205322266 Tokens per Sec: 15372.997634489373
Epoch Step: 280 / 819 Loss: 50.3166389465332 Tokens per Sec: 15554.47754550587
Epoch Step: 285 / 819 Loss: 31.642061233520508 Tokens per Sec: 12124.919495235643
Epoch Step: 290 / 819 Loss: 53.378231048583984 Tokens per Sec: 12789.447451564918
Epoch Step: 295 / 819 Loss: 300.62774658203125 Tokens per Sec: 13020.147843521949
Epoch Step: 300 / 819 Loss: 48.38582229614258 Tokens per Sec: 13063.21923754241
Epoch Step: 305 / 819 Loss: 53.05870819091797 Tokens per Sec: 14065.164049600418
Epoch Step: 310 / 819 Loss: 54.047157287597656 Tokens per Sec: 14360.084366675557
Epoch Step: 315 / 819 Loss: 53.15671920776367 Tokens per Sec: 14611.838212272365
Epoch Step: 320 / 819 Loss: 45.26484680175781 Tokens per Sec: 14328.227520402073
Epoch Step: 325 / 819 Loss: 46.642723083496094 Tokens per Sec: 13951.944065427027
Epoch Step: 330 / 819 Loss: 58.232017517089844 Tokens per Sec: 13575.946449936857
Epoch Step: 335 / 819 Loss: 49.83296203613281 Tokens per Sec: 12728.403637144042
Epoch Step: 340 / 819 Loss: 56.99812698364258 Tokens per Sec: 15085.694114842172
Epoch Step: 345 / 819 Loss: 41.472442626953125 Tokens per Sec: 13184.914491931471
Epoch Step: 350 / 819 Loss: 40.962459564208984 Tokens per Sec: 13027.907091035644
Epoch Step: 355 / 819 Loss: 308.4543151855469 Tokens per Sec: 11796.708969939305
Epoch Step: 360 / 819 Loss: 35.99993133544922 Tokens per Sec: 13169.845051319982
Epoch Step: 365 / 819 Loss: 300.2473449707031 Tokens per Sec: 14430.03106735241
Epoch Step: 370 / 819 Loss: 57.5108757019043 Tokens per Sec: 16236.744495688072
Epoch Step: 375 / 819 Loss: 51.42384719848633 Tokens per Sec: 12661.732847130961
Epoch Step: 380 / 819 Loss: 48.807212829589844 Tokens per Sec: 16250.540649083405
Epoch Step: 385 / 819 Loss: 50.289031982421875 Tokens per Sec: 14761.040512116559
Epoch Step: 390 / 819 Loss: 39.74782943725586 Tokens per Sec: 11507.669110089018
Epoch Step: 395 / 819 Loss: 55.72933578491211 Tokens per Sec: 13871.475760985853
Epoch Step: 400 / 819 Loss: 29.287784576416016 Tokens per Sec: 13121.103175633822
Epoch Step: 405 / 819 Loss: 47.84838104248047 Tokens per Sec: 14653.532581613636
Epoch Step: 410 / 819 Loss: 41.93645095825195 Tokens per Sec: 14752.504884673757
Epoch Step: 415 / 819 Loss: 51.090850830078125 Tokens per Sec: 15159.713380159
Epoch Step: 420 / 819 Loss: 216.2054443359375 Tokens per Sec: 14473.319584673614
Epoch Step: 425 / 819 Loss: 42.59189224243164 Tokens per Sec: 14397.934413340037
Epoch Step: 430 / 819 Loss: 52.106407165527344 Tokens per Sec: 13975.081749730618
Epoch Step: 435 / 819 Loss: 37.06039810180664 Tokens per Sec: 12885.563706749535
Epoch Step: 440 / 819 Loss: 38.101619720458984 Tokens per Sec: 12173.323897944969
Epoch Step: 445 / 819 Loss: 29.289714813232422 Tokens per Sec: 13787.986768145925
Epoch Step: 450 / 819 Loss: 48.58829116821289 Tokens per Sec: 14780.385759747109
Epoch Step: 455 / 819 Loss: 34.303733825683594 Tokens per Sec: 13452.037029116655
Epoch Step: 460 / 819 Loss: 50.718021392822266 Tokens per Sec: 13355.450019569782
Epoch Step: 465 / 819 Loss: 46.653926849365234 Tokens per Sec: 13673.541456860097
Epoch Step: 470 / 819 Loss: 51.007789611816406 Tokens per Sec: 15320.536342230538
Epoch Step: 475 / 819 Loss: 52.0169677734375 Tokens per Sec: 14010.830122492358
Epoch Step: 480 / 819 Loss: 47.62004470825195 Tokens per Sec: 16219.126457153223
Epoch Step: 485 / 819 Loss: 53.506019592285156 Tokens per Sec: 14879.646750985374
Epoch Step: 490 / 819 Loss: 50.01216506958008 Tokens per Sec: 13987.910565469054
Epoch Step: 495 / 819 Loss: 54.53107833862305 Tokens per Sec: 13097.649006573476
Epoch Step: 500 / 819 Loss: 45.25634002685547 Tokens per Sec: 12401.715835178098
Epoch Step: 505 / 819 Loss: 47.34053039550781 Tokens per Sec: 15827.970990341937
Epoch Step: 510 / 819 Loss: 45.25230026245117 Tokens per Sec: 13560.01414171239
Epoch Step: 515 / 819 Loss: 47.35148620605469 Tokens per Sec: 15946.030013515021
Epoch Step: 520 / 819 Loss: 39.89546203613281 Tokens per Sec: 13363.414361701552
Epoch Step: 525 / 819 Loss: 32.588958740234375 Tokens per Sec: 14233.368613770415
Epoch Step: 530 / 819 Loss: 36.33928298950195 Tokens per Sec: 14002.286648649877
Epoch Step: 535 / 819 Loss: 40.57988739013672 Tokens per Sec: 14596.655787748497
Epoch Step: 540 / 819 Loss: 46.94361877441406 Tokens per Sec: 13285.099802627617
Epoch Step: 545 / 819 Loss: 32.55345153808594 Tokens per Sec: 14760.084981946053
Epoch Step: 550 / 819 Loss: 50.02592468261719 Tokens per Sec: 13511.749403669362
Epoch Step: 555 / 819 Loss: 33.54683303833008 Tokens per Sec: 12203.74648713725
Epoch Step: 560 / 819 Loss: 32.51741027832031 Tokens per Sec: 12905.813631426327
Epoch Step: 565 / 819 Loss: 36.108909606933594 Tokens per Sec: 12717.467191769483
Epoch Step: 570 / 819 Loss: 42.75058364868164 Tokens per Sec: 13968.452510332372
Epoch Step: 575 / 819 Loss: 47.157691955566406 Tokens per Sec: 14798.226695211839
Epoch Step: 580 / 819 Loss: 296.0344543457031 Tokens per Sec: 13438.904225498743
Epoch Step: 585 / 819 Loss: 48.41883850097656 Tokens per Sec: 12694.27817937587
Epoch Step: 590 / 819 Loss: 45.357852935791016 Tokens per Sec: 13720.02380078087
Epoch Step: 595 / 819 Loss: 35.95511245727539 Tokens per Sec: 14485.773879086562
Epoch Step: 600 / 819 Loss: 299.17327880859375 Tokens per Sec: 13297.154857778009
Epoch Step: 605 / 819 Loss: 51.70050048828125 Tokens per Sec: 13735.027109578554
Epoch Step: 610 / 819 Loss: 46.03203201293945 Tokens per Sec: 13439.177642246808
Epoch Step: 615 / 819 Loss: 41.896846771240234 Tokens per Sec: 12903.963429164076
Epoch Step: 620 / 819 Loss: 45.71868133544922 Tokens per Sec: 15930.263494358858
Epoch Step: 625 / 819 Loss: 37.982173919677734 Tokens per Sec: 11352.397182510858
Epoch Step: 630 / 819 Loss: 49.356266021728516 Tokens per Sec: 13891.696687816486
Epoch Step: 635 / 819 Loss: 32.103538513183594 Tokens per Sec: 13386.751131387871
Epoch Step: 640 / 819 Loss: 31.223217010498047 Tokens per Sec: 13956.496959788232
Epoch Step: 645 / 819 Loss: 222.771484375 Tokens per Sec: 13065.152215604898
Epoch Step: 650 / 819 Loss: 35.56878662109375 Tokens per Sec: 12561.339612707447
Epoch Step: 655 / 819 Loss: 38.82372283935547 Tokens per Sec: 11934.907564198336
Epoch Step: 660 / 819 Loss: 36.89021682739258 Tokens per Sec: 13775.76122146324
Epoch Step: 665 / 819 Loss: 47.73224639892578 Tokens per Sec: 14704.16097484054
Epoch Step: 670 / 819 Loss: 45.41606140136719 Tokens per Sec: 15303.364802763848
Epoch Step: 675 / 819 Loss: 30.51970672607422 Tokens per Sec: 11849.397513771604
Epoch Step: 680 / 819 Loss: 40.20207214355469 Tokens per Sec: 13491.35990680376
Epoch Step: 685 / 819 Loss: 312.677490234375 Tokens per Sec: 14967.992356664967
Epoch Step: 690 / 819 Loss: 42.56026840209961 Tokens per Sec: 13599.17215983638
Epoch Step: 695 / 819 Loss: 38.76917266845703 Tokens per Sec: 14300.749533400363
Epoch Step: 700 / 819 Loss: 46.003047943115234 Tokens per Sec: 15005.288914036979
Epoch Step: 705 / 819 Loss: 47.729312896728516 Tokens per Sec: 13965.813017609831
Epoch Step: 710 / 819 Loss: 39.46052932739258 Tokens per Sec: 13746.518666223104
Epoch Step: 715 / 819 Loss: 28.368501663208008 Tokens per Sec: 12689.510897311842
Epoch Step: 720 / 819 Loss: 48.614112854003906 Tokens per Sec: 14627.412080362252
Epoch Step: 725 / 819 Loss: 36.36114501953125 Tokens per Sec: 12762.655187254266
Epoch Step: 730 / 819 Loss: 45.718177795410156 Tokens per Sec: 12692.466518319623
Epoch Step: 735 / 819 Loss: 28.14881134033203 Tokens per Sec: 14799.78512906127
Epoch Step: 740 / 819 Loss: 40.17168045043945 Tokens per Sec: 15264.688957272256
Epoch Step: 745 / 819 Loss: 29.3960018157959 Tokens per Sec: 13815.334383430154
Epoch Step: 750 / 819 Loss: 50.25757598876953 Tokens per Sec: 13280.713495383896
Epoch Step: 755 / 819 Loss: 44.731258392333984 Tokens per Sec: 13285.599800194086
Epoch Step: 760 / 819 Loss: 34.84252166748047 Tokens per Sec: 13987.431668588766
Epoch Step: 765 / 819 Loss: 37.455257415771484 Tokens per Sec: 13771.636946046005
Epoch Step: 770 / 819 Loss: 46.11909103393555 Tokens per Sec: 13853.240018687566
Epoch Step: 775 / 819 Loss: 236.94601440429688 Tokens per Sec: 13207.836884672139
Epoch Step: 780 / 819 Loss: 300.1920166015625 Tokens per Sec: 15643.094062686821
Epoch Step: 785 / 819 Loss: 32.7308235168457 Tokens per Sec: 12805.21209652197
Epoch Step: 790 / 819 Loss: 42.31560516357422 Tokens per Sec: 14885.76747649186
Epoch Step: 795 / 819 Loss: 31.206586837768555 Tokens per Sec: 13104.058033281693
Epoch Step: 800 / 819 Loss: 40.47389602661133 Tokens per Sec: 12983.428831115783
Epoch Step: 805 / 819 Loss: 38.63338088989258 Tokens per Sec: 12831.673213719685
Epoch Step: 810 / 819 Loss: 30.385713577270508 Tokens per Sec: 11831.464342910593
Epoch Step: 815 / 819 Loss: 39.55710220336914 Tokens per Sec: 14003.835378452279
Epoch ended with duration 0:04:43.561432
Train perplexity: 2.367452367958972
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . METHOD_3 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_2 , , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + ( STRING_1 ) ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , STRING_2 ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.929816
Validation perplexity: 2.355227679383066
Model saved best_on_validation!
Model saved checkpoint!
Epoch 6 / 1000
Epoch Step: 5 / 819 Loss: 47.93488693237305 Tokens per Sec: 13343.215449061057
Epoch Step: 10 / 819 Loss: 33.764259338378906 Tokens per Sec: 14628.736718290587
Epoch Step: 15 / 819 Loss: 29.69119644165039 Tokens per Sec: 13358.464123241822
Epoch Step: 20 / 819 Loss: 44.304298400878906 Tokens per Sec: 15053.1903064967
Epoch Step: 25 / 819 Loss: 178.4293670654297 Tokens per Sec: 14344.690291963501
Epoch Step: 30 / 819 Loss: 44.73965835571289 Tokens per Sec: 13807.553612162703
Epoch Step: 35 / 819 Loss: 27.394922256469727 Tokens per Sec: 13062.30572204742
Epoch Step: 40 / 819 Loss: 29.89378547668457 Tokens per Sec: 14619.539264496567
Epoch Step: 45 / 819 Loss: 32.44226837158203 Tokens per Sec: 13604.091748118473
Epoch Step: 50 / 819 Loss: 31.572843551635742 Tokens per Sec: 14429.950440446983
Epoch Step: 55 / 819 Loss: 35.67644119262695 Tokens per Sec: 13626.059006257974
Epoch Step: 60 / 819 Loss: 34.04343795776367 Tokens per Sec: 13720.496621074157
Epoch Step: 65 / 819 Loss: 33.85411834716797 Tokens per Sec: 15001.525025451381
Epoch Step: 70 / 819 Loss: 29.114959716796875 Tokens per Sec: 13877.608972810345
Epoch Step: 75 / 819 Loss: 32.28060531616211 Tokens per Sec: 14279.777215282224
Epoch Step: 80 / 819 Loss: 259.8414001464844 Tokens per Sec: 13963.016556438368
Epoch Step: 85 / 819 Loss: 44.24655532836914 Tokens per Sec: 13087.24251761958
Epoch Step: 90 / 819 Loss: 42.810428619384766 Tokens per Sec: 13631.438341093113
Epoch Step: 95 / 819 Loss: 51.512428283691406 Tokens per Sec: 12466.84068056306
Epoch Step: 100 / 819 Loss: 45.5002555847168 Tokens per Sec: 13230.835772356882
Epoch Step: 105 / 819 Loss: 27.495359420776367 Tokens per Sec: 12644.707520269796
Epoch Step: 110 / 819 Loss: 37.67555236816406 Tokens per Sec: 13353.272755463264
Epoch Step: 115 / 819 Loss: 26.33553123474121 Tokens per Sec: 14054.669104589811
Epoch Step: 120 / 819 Loss: 46.97801208496094 Tokens per Sec: 15765.802162150087
Epoch Step: 125 / 819 Loss: 29.075122833251953 Tokens per Sec: 13260.477231038252
Epoch Step: 130 / 819 Loss: 235.00428771972656 Tokens per Sec: 13831.431660530681
Epoch Step: 135 / 819 Loss: 26.445558547973633 Tokens per Sec: 14188.239327685547
Epoch Step: 140 / 819 Loss: 40.77566146850586 Tokens per Sec: 13498.867549334496
Epoch Step: 145 / 819 Loss: 27.445764541625977 Tokens per Sec: 13728.88442836809
Epoch Step: 150 / 819 Loss: 203.056884765625 Tokens per Sec: 12389.653642977142
Epoch Step: 155 / 819 Loss: 37.241615295410156 Tokens per Sec: 13636.745631106533
Epoch Step: 160 / 819 Loss: 34.28315353393555 Tokens per Sec: 13594.362844638314
Epoch Step: 165 / 819 Loss: 46.90798568725586 Tokens per Sec: 16824.256207250346
Epoch Step: 170 / 819 Loss: 42.56891632080078 Tokens per Sec: 14026.893534377072
Epoch Step: 175 / 819 Loss: 52.563720703125 Tokens per Sec: 14914.949602023875
Epoch Step: 180 / 819 Loss: 48.59048843383789 Tokens per Sec: 14229.208050196745
Epoch Step: 185 / 819 Loss: 265.0972900390625 Tokens per Sec: 12732.389249867589
Epoch Step: 190 / 819 Loss: 32.194549560546875 Tokens per Sec: 13676.746497705504
Epoch Step: 195 / 819 Loss: 37.09366989135742 Tokens per Sec: 14161.105714275855
Epoch Step: 200 / 819 Loss: 26.802608489990234 Tokens per Sec: 14050.039570121773
Epoch Step: 205 / 819 Loss: 187.437744140625 Tokens per Sec: 11060.821999285108
Epoch Step: 210 / 819 Loss: 47.64195251464844 Tokens per Sec: 12158.133857107985
Epoch Step: 215 / 819 Loss: 43.874603271484375 Tokens per Sec: 14562.369425177909
Epoch Step: 220 / 819 Loss: 37.5443229675293 Tokens per Sec: 14403.694241686822
Epoch Step: 225 / 819 Loss: 32.8931999206543 Tokens per Sec: 15394.12070198188
Epoch Step: 230 / 819 Loss: 26.982515335083008 Tokens per Sec: 14111.543065500717
Epoch Step: 235 / 819 Loss: 34.35183334350586 Tokens per Sec: 14889.79822762907
Epoch Step: 240 / 819 Loss: 40.471492767333984 Tokens per Sec: 15725.735178479908
Epoch Step: 245 / 819 Loss: 38.413333892822266 Tokens per Sec: 13611.91201602011
Epoch Step: 250 / 819 Loss: 42.73553466796875 Tokens per Sec: 15824.895341011865
Epoch Step: 255 / 819 Loss: 38.70098876953125 Tokens per Sec: 14209.42088263657
Epoch Step: 260 / 819 Loss: 45.22764587402344 Tokens per Sec: 13623.417428384659
Epoch Step: 265 / 819 Loss: 47.1141242980957 Tokens per Sec: 13811.096235829535
Epoch Step: 270 / 819 Loss: 37.97011184692383 Tokens per Sec: 12745.812978394923
Epoch Step: 275 / 819 Loss: 44.210750579833984 Tokens per Sec: 11660.933107783869
Epoch Step: 280 / 819 Loss: 272.9632873535156 Tokens per Sec: 13015.582106133552
Epoch Step: 285 / 819 Loss: 30.801416397094727 Tokens per Sec: 15490.666229913564
Epoch Step: 290 / 819 Loss: 38.24314498901367 Tokens per Sec: 12727.87187796509
Epoch Step: 295 / 819 Loss: 34.78645324707031 Tokens per Sec: 14347.653762697502
Epoch Step: 300 / 819 Loss: 38.27799606323242 Tokens per Sec: 11568.482919663984
Epoch Step: 305 / 819 Loss: 46.3690185546875 Tokens per Sec: 13466.505921213437
Epoch Step: 310 / 819 Loss: 34.83969497680664 Tokens per Sec: 13543.025731768686
Epoch Step: 315 / 819 Loss: 39.69886016845703 Tokens per Sec: 13757.019811197959
Epoch Step: 320 / 819 Loss: 30.473264694213867 Tokens per Sec: 13789.881008686874
Epoch Step: 325 / 819 Loss: 41.61968994140625 Tokens per Sec: 12896.224178376031
Epoch Step: 330 / 819 Loss: 240.3299560546875 Tokens per Sec: 13656.815002263918
Epoch Step: 335 / 819 Loss: 43.267635345458984 Tokens per Sec: 13262.152135528275
Epoch Step: 340 / 819 Loss: 42.287628173828125 Tokens per Sec: 14758.151403000336
Epoch Step: 345 / 819 Loss: 31.618162155151367 Tokens per Sec: 13787.812906420762
Epoch Step: 350 / 819 Loss: 39.07056427001953 Tokens per Sec: 13741.141251933566
Epoch Step: 355 / 819 Loss: 279.5898742675781 Tokens per Sec: 13819.891141524058
Epoch Step: 360 / 819 Loss: 37.569637298583984 Tokens per Sec: 13191.98574950913
Epoch Step: 365 / 819 Loss: 30.291757583618164 Tokens per Sec: 13492.583245919895
Epoch Step: 370 / 819 Loss: 317.94140625 Tokens per Sec: 15689.885429318765
Epoch Step: 375 / 819 Loss: 38.681419372558594 Tokens per Sec: 12577.888808501359
Epoch Step: 380 / 819 Loss: 31.00164031982422 Tokens per Sec: 13080.407066814827
Epoch Step: 385 / 819 Loss: 37.035911560058594 Tokens per Sec: 13799.63464564475
Epoch Step: 390 / 819 Loss: 45.641517639160156 Tokens per Sec: 12848.347914186039
Epoch Step: 395 / 819 Loss: 41.2802619934082 Tokens per Sec: 14888.61848518952
Epoch Step: 400 / 819 Loss: 39.52957534790039 Tokens per Sec: 14276.297965574578
Epoch Step: 405 / 819 Loss: 32.18427276611328 Tokens per Sec: 13547.826843754205
Epoch Step: 410 / 819 Loss: 41.455020904541016 Tokens per Sec: 13294.635417749878
Epoch Step: 415 / 819 Loss: 46.55754852294922 Tokens per Sec: 13977.93132234071
Epoch Step: 420 / 819 Loss: 43.13512420654297 Tokens per Sec: 12194.797728535734
Epoch Step: 425 / 819 Loss: 35.01166534423828 Tokens per Sec: 13314.957006381206
Epoch Step: 430 / 819 Loss: 27.27509880065918 Tokens per Sec: 13400.795560444069
Epoch Step: 435 / 819 Loss: 252.43344116210938 Tokens per Sec: 13088.683826986899
Epoch Step: 440 / 819 Loss: 23.362974166870117 Tokens per Sec: 13142.309065406915
Epoch Step: 445 / 819 Loss: 40.50495147705078 Tokens per Sec: 16921.807061289535
Epoch Step: 450 / 819 Loss: 41.315895080566406 Tokens per Sec: 14862.663280841749
Epoch Step: 455 / 819 Loss: 30.891782760620117 Tokens per Sec: 13669.050663008298
Epoch Step: 460 / 819 Loss: 36.19189453125 Tokens per Sec: 14026.396885327893
Epoch Step: 465 / 819 Loss: 42.18063735961914 Tokens per Sec: 13171.934245670007
Epoch Step: 470 / 819 Loss: 42.455562591552734 Tokens per Sec: 13442.09079105188
Epoch Step: 475 / 819 Loss: 38.748531341552734 Tokens per Sec: 13545.50749319246
Epoch Step: 480 / 819 Loss: 36.67341613769531 Tokens per Sec: 13320.904031961263
Epoch Step: 485 / 819 Loss: 39.06100082397461 Tokens per Sec: 14318.941247847179
Epoch Step: 490 / 819 Loss: 35.28807830810547 Tokens per Sec: 12693.570861684188
Epoch Step: 495 / 819 Loss: 40.05246353149414 Tokens per Sec: 13542.395986963913
Epoch Step: 500 / 819 Loss: 30.70876693725586 Tokens per Sec: 14125.956564840495
Epoch Step: 505 / 819 Loss: 39.58604049682617 Tokens per Sec: 14742.877356057485
Epoch Step: 510 / 819 Loss: 36.15770721435547 Tokens per Sec: 13102.773335751019
Epoch Step: 515 / 819 Loss: 23.05023956298828 Tokens per Sec: 13356.469658009493
Epoch Step: 520 / 819 Loss: 169.34873962402344 Tokens per Sec: 15640.117359215721
Epoch Step: 525 / 819 Loss: 40.20430374145508 Tokens per Sec: 13117.595470439875
Epoch Step: 530 / 819 Loss: 24.104969024658203 Tokens per Sec: 13087.136761766229
Epoch Step: 535 / 819 Loss: 324.78851318359375 Tokens per Sec: 14605.263230503488
Epoch Step: 540 / 819 Loss: 30.214630126953125 Tokens per Sec: 13597.224692160395
Epoch Step: 545 / 819 Loss: 46.150691986083984 Tokens per Sec: 14230.504459407211
Epoch Step: 550 / 819 Loss: 359.0890808105469 Tokens per Sec: 13565.03575710283
Epoch Step: 555 / 819 Loss: 30.569313049316406 Tokens per Sec: 12128.404097628289
Epoch Step: 560 / 819 Loss: 39.46910858154297 Tokens per Sec: 13425.424901706467
Epoch Step: 565 / 819 Loss: 28.660409927368164 Tokens per Sec: 14862.008672422198
Epoch Step: 570 / 819 Loss: 40.26237106323242 Tokens per Sec: 13128.39819782957
Epoch Step: 575 / 819 Loss: 42.051475524902344 Tokens per Sec: 12454.442315624481
Epoch Step: 580 / 819 Loss: 34.73793411254883 Tokens per Sec: 12460.775382141734
Epoch Step: 585 / 819 Loss: 34.70527267456055 Tokens per Sec: 15523.451354627154
Epoch Step: 590 / 819 Loss: 42.99690628051758 Tokens per Sec: 14871.395508971837
Epoch Step: 595 / 819 Loss: 40.36309051513672 Tokens per Sec: 13646.358208988493
Epoch Step: 600 / 819 Loss: 34.23663330078125 Tokens per Sec: 11984.89582411021
Epoch Step: 605 / 819 Loss: 237.4141387939453 Tokens per Sec: 15278.600220172664
Epoch Step: 610 / 819 Loss: 39.87388610839844 Tokens per Sec: 12841.439810444874
Epoch Step: 615 / 819 Loss: 43.071929931640625 Tokens per Sec: 12820.136302790634
Epoch Step: 620 / 819 Loss: 40.65800476074219 Tokens per Sec: 12276.510859901791
Epoch Step: 625 / 819 Loss: 40.14128875732422 Tokens per Sec: 14881.170050418636
Epoch Step: 630 / 819 Loss: 261.878173828125 Tokens per Sec: 17032.602005113724
Epoch Step: 635 / 819 Loss: 246.2747344970703 Tokens per Sec: 15598.516393059987
Epoch Step: 640 / 819 Loss: 247.16551208496094 Tokens per Sec: 14410.426749607394
Epoch Step: 645 / 819 Loss: 38.19758987426758 Tokens per Sec: 16232.265063177238
Epoch Step: 650 / 819 Loss: 35.45981216430664 Tokens per Sec: 13724.9725665968
Epoch Step: 655 / 819 Loss: 31.960264205932617 Tokens per Sec: 12778.257597954465
Epoch Step: 660 / 819 Loss: 38.100982666015625 Tokens per Sec: 13154.306485038636
Epoch Step: 665 / 819 Loss: 38.359031677246094 Tokens per Sec: 12874.119760485455
Epoch Step: 670 / 819 Loss: 30.286893844604492 Tokens per Sec: 13677.957534049936
Epoch Step: 675 / 819 Loss: 35.937686920166016 Tokens per Sec: 14719.473071287683
Epoch Step: 680 / 819 Loss: 35.44260025024414 Tokens per Sec: 13604.494652442067
Epoch Step: 685 / 819 Loss: 37.58317184448242 Tokens per Sec: 13416.10130942372
Epoch Step: 690 / 819 Loss: 26.655635833740234 Tokens per Sec: 13758.668089214843
Epoch Step: 695 / 819 Loss: 23.923709869384766 Tokens per Sec: 13425.627395532762
Epoch Step: 700 / 819 Loss: 23.975425720214844 Tokens per Sec: 13140.67613521967
Epoch Step: 705 / 819 Loss: 22.492467880249023 Tokens per Sec: 13887.56428324949
Epoch Step: 710 / 819 Loss: 306.7551574707031 Tokens per Sec: 14475.94094806048
Epoch Step: 715 / 819 Loss: 40.75053405761719 Tokens per Sec: 13429.016057532739
Epoch Step: 720 / 819 Loss: 31.62067413330078 Tokens per Sec: 13831.82245260137
Epoch Step: 725 / 819 Loss: 35.2785758972168 Tokens per Sec: 14495.544131324023
Epoch Step: 730 / 819 Loss: 36.260581970214844 Tokens per Sec: 13912.763230065662
Epoch Step: 735 / 819 Loss: 36.394840240478516 Tokens per Sec: 14499.798006757426
Epoch Step: 740 / 819 Loss: 31.5345401763916 Tokens per Sec: 13484.269181080102
Epoch Step: 745 / 819 Loss: 43.756561279296875 Tokens per Sec: 15368.909257639958
Epoch Step: 750 / 819 Loss: 40.04975891113281 Tokens per Sec: 15166.33509644831
Epoch Step: 755 / 819 Loss: 34.46437454223633 Tokens per Sec: 14128.37478924839
Epoch Step: 760 / 819 Loss: 44.22029495239258 Tokens per Sec: 13920.191975161397
Epoch Step: 765 / 819 Loss: 39.762760162353516 Tokens per Sec: 12732.18479168528
Epoch Step: 770 / 819 Loss: 32.69269943237305 Tokens per Sec: 13194.530339943634
Epoch Step: 775 / 819 Loss: 24.478979110717773 Tokens per Sec: 12889.096055662469
Epoch Step: 780 / 819 Loss: 23.34910011291504 Tokens per Sec: 12998.471319513128
Epoch Step: 785 / 819 Loss: 290.864013671875 Tokens per Sec: 14180.233980808849
Epoch Step: 790 / 819 Loss: 31.867063522338867 Tokens per Sec: 13489.815542953385
Epoch Step: 795 / 819 Loss: 37.22303009033203 Tokens per Sec: 14763.906955016697
Epoch Step: 800 / 819 Loss: 22.689069747924805 Tokens per Sec: 15831.631743649783
Epoch Step: 805 / 819 Loss: 37.77878189086914 Tokens per Sec: 13110.712475716431
Epoch Step: 810 / 819 Loss: 34.78268814086914 Tokens per Sec: 11420.131058765928
Epoch Step: 815 / 819 Loss: 191.31871032714844 Tokens per Sec: 12415.245159100463
Epoch ended with duration 0:04:42.286377
Train perplexity: 2.1442355264142043
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . METHOD_3 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 , , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + 1 ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.092385
Validation perplexity: 2.0720523254102567
Model saved best_on_validation!
Epoch 7 / 1000
Epoch Step: 5 / 819 Loss: 37.81219482421875 Tokens per Sec: 13613.90543272149
Epoch Step: 10 / 819 Loss: 36.01338195800781 Tokens per Sec: 13091.449767300352
Epoch Step: 15 / 819 Loss: 24.315160751342773 Tokens per Sec: 14830.387167785615
Epoch Step: 20 / 819 Loss: 34.262245178222656 Tokens per Sec: 14596.54118383267
Epoch Step: 25 / 819 Loss: 27.136743545532227 Tokens per Sec: 12646.2548605537
Epoch Step: 30 / 819 Loss: 27.5123233795166 Tokens per Sec: 13880.637439270302
Epoch Step: 35 / 819 Loss: 40.224300384521484 Tokens per Sec: 14095.803519096378
Epoch Step: 40 / 819 Loss: 29.229890823364258 Tokens per Sec: 11977.939552328691
Epoch Step: 45 / 819 Loss: 37.630558013916016 Tokens per Sec: 14505.274102064515
Epoch Step: 50 / 819 Loss: 36.5467414855957 Tokens per Sec: 14943.340844391183
Epoch Step: 55 / 819 Loss: 31.059406280517578 Tokens per Sec: 12919.736249265785
Epoch Step: 60 / 819 Loss: 35.178184509277344 Tokens per Sec: 12696.721882885828
Epoch Step: 65 / 819 Loss: 33.90933609008789 Tokens per Sec: 12959.556182094335
Epoch Step: 70 / 819 Loss: 33.431060791015625 Tokens per Sec: 13731.205649043084
Epoch Step: 75 / 819 Loss: 40.917972564697266 Tokens per Sec: 12593.246532994513
Epoch Step: 80 / 819 Loss: 42.862403869628906 Tokens per Sec: 13313.6023849208
Epoch Step: 85 / 819 Loss: 42.21311569213867 Tokens per Sec: 13867.465470516041
Epoch Step: 90 / 819 Loss: 24.68240737915039 Tokens per Sec: 12321.5229875042
Epoch Step: 95 / 819 Loss: 24.555686950683594 Tokens per Sec: 13776.212736066836
Epoch Step: 100 / 819 Loss: 27.404449462890625 Tokens per Sec: 13369.245978705576
Epoch Step: 105 / 819 Loss: 21.60658073425293 Tokens per Sec: 12585.349804904368
Epoch Step: 110 / 819 Loss: 29.389524459838867 Tokens per Sec: 13887.497940548974
Epoch Step: 115 / 819 Loss: 36.38698196411133 Tokens per Sec: 14907.209495862207
Epoch Step: 120 / 819 Loss: 39.146827697753906 Tokens per Sec: 13690.055855490178
Epoch Step: 125 / 819 Loss: 33.97675323486328 Tokens per Sec: 13153.147659255945
Epoch Step: 130 / 819 Loss: 25.7864990234375 Tokens per Sec: 12995.385138090262
Epoch Step: 135 / 819 Loss: 26.69301414489746 Tokens per Sec: 12724.310859864856
Epoch Step: 140 / 819 Loss: 37.70170211791992 Tokens per Sec: 14022.984031540063
Epoch Step: 145 / 819 Loss: 264.35968017578125 Tokens per Sec: 14058.040788480614
Epoch Step: 150 / 819 Loss: 32.516273498535156 Tokens per Sec: 15506.860034280646
Epoch Step: 155 / 819 Loss: 33.54169845581055 Tokens per Sec: 14515.145127808397
Epoch Step: 160 / 819 Loss: 38.90168380737305 Tokens per Sec: 14699.016797669303
Epoch Step: 165 / 819 Loss: 33.05011749267578 Tokens per Sec: 13637.984690110572
Epoch Step: 170 / 819 Loss: 32.930320739746094 Tokens per Sec: 14452.167084774132
Epoch Step: 175 / 819 Loss: 220.75006103515625 Tokens per Sec: 14516.658287699243
Epoch Step: 180 / 819 Loss: 34.050567626953125 Tokens per Sec: 13915.291327133917
Epoch Step: 185 / 819 Loss: 25.839208602905273 Tokens per Sec: 12607.76960723747
Epoch Step: 190 / 819 Loss: 35.287376403808594 Tokens per Sec: 13216.798271881513
Epoch Step: 195 / 819 Loss: 32.32328796386719 Tokens per Sec: 13789.656383313157
Epoch Step: 200 / 819 Loss: 28.1090087890625 Tokens per Sec: 13260.0320965286
Epoch Step: 205 / 819 Loss: 24.929927825927734 Tokens per Sec: 13897.390022607262
Epoch Step: 210 / 819 Loss: 41.49644470214844 Tokens per Sec: 12136.173549797968
Epoch Step: 215 / 819 Loss: 27.820484161376953 Tokens per Sec: 13737.895685124508
Epoch Step: 220 / 819 Loss: 29.846479415893555 Tokens per Sec: 14071.002445193855
Epoch Step: 225 / 819 Loss: 324.3819274902344 Tokens per Sec: 14950.584797101521
Epoch Step: 230 / 819 Loss: 32.70149230957031 Tokens per Sec: 14373.11185918708
Epoch Step: 235 / 819 Loss: 231.59652709960938 Tokens per Sec: 13999.141120352548
Epoch Step: 240 / 819 Loss: 43.84667205810547 Tokens per Sec: 12725.427787378221
Epoch Step: 245 / 819 Loss: 46.28574752807617 Tokens per Sec: 13088.588252706626
Epoch Step: 250 / 819 Loss: 29.558008193969727 Tokens per Sec: 15924.939903289374
Epoch Step: 255 / 819 Loss: 39.121158599853516 Tokens per Sec: 13575.187747705855
Epoch Step: 260 / 819 Loss: 34.760528564453125 Tokens per Sec: 16090.285367708682
Epoch Step: 265 / 819 Loss: 276.5837097167969 Tokens per Sec: 15083.004950636316
Epoch Step: 270 / 819 Loss: 24.173471450805664 Tokens per Sec: 13288.020700814339
Epoch Step: 275 / 819 Loss: 35.35761260986328 Tokens per Sec: 15314.976440293714
Epoch Step: 280 / 819 Loss: 35.54948806762695 Tokens per Sec: 14201.374110361805
Epoch Step: 285 / 819 Loss: 41.22206497192383 Tokens per Sec: 14268.389048009876
Epoch Step: 290 / 819 Loss: 36.29594421386719 Tokens per Sec: 13788.654276558724
Epoch Step: 295 / 819 Loss: 242.64427185058594 Tokens per Sec: 14374.794561570121
Epoch Step: 300 / 819 Loss: 38.74161911010742 Tokens per Sec: 14896.802802616518
Epoch Step: 305 / 819 Loss: 31.905170440673828 Tokens per Sec: 13862.452418321878
Epoch Step: 310 / 819 Loss: 229.77520751953125 Tokens per Sec: 12892.175739634946
Epoch Step: 315 / 819 Loss: 42.953311920166016 Tokens per Sec: 13410.500846284127
Epoch Step: 320 / 819 Loss: 28.75272560119629 Tokens per Sec: 14402.1943099944
Epoch Step: 325 / 819 Loss: 37.18447494506836 Tokens per Sec: 14407.43742656768
Epoch Step: 330 / 819 Loss: 35.841365814208984 Tokens per Sec: 13964.107490595756
Epoch Step: 335 / 819 Loss: 34.464046478271484 Tokens per Sec: 13042.271603904668
Epoch Step: 340 / 819 Loss: 37.458984375 Tokens per Sec: 15274.828105423865
Epoch Step: 345 / 819 Loss: 37.77720642089844 Tokens per Sec: 15289.821330062707
Epoch Step: 350 / 819 Loss: 31.31550407409668 Tokens per Sec: 15093.77528274022
Epoch Step: 355 / 819 Loss: 36.70791244506836 Tokens per Sec: 13270.82840013174
Epoch Step: 360 / 819 Loss: 32.91291427612305 Tokens per Sec: 12720.843132692271
Epoch Step: 365 / 819 Loss: 38.15254211425781 Tokens per Sec: 13449.671711616082
Epoch Step: 370 / 819 Loss: 39.345008850097656 Tokens per Sec: 14371.214808682778
Epoch Step: 375 / 819 Loss: 34.60687255859375 Tokens per Sec: 12514.466161155407
Epoch Step: 380 / 819 Loss: 27.794876098632812 Tokens per Sec: 14079.825146360208
Epoch Step: 385 / 819 Loss: 36.648006439208984 Tokens per Sec: 13781.67605235567
Epoch Step: 390 / 819 Loss: 31.22026252746582 Tokens per Sec: 15067.461197457143
Epoch Step: 395 / 819 Loss: 173.1087188720703 Tokens per Sec: 12703.216064863644
Epoch Step: 400 / 819 Loss: 36.739990234375 Tokens per Sec: 14108.372541886349
Epoch Step: 405 / 819 Loss: 33.47011184692383 Tokens per Sec: 15220.236602621504
Epoch Step: 410 / 819 Loss: 42.36138153076172 Tokens per Sec: 12475.720975705817
Epoch Step: 415 / 819 Loss: 30.036258697509766 Tokens per Sec: 13127.434211443653
Epoch Step: 420 / 819 Loss: 257.86181640625 Tokens per Sec: 13342.065940522527
Epoch Step: 425 / 819 Loss: 24.43950843811035 Tokens per Sec: 13548.25404787004
Epoch Step: 430 / 819 Loss: 37.5938835144043 Tokens per Sec: 14261.60970796598
Epoch Step: 435 / 819 Loss: 43.110774993896484 Tokens per Sec: 14712.292405463291
Epoch Step: 440 / 819 Loss: 34.20122528076172 Tokens per Sec: 14231.811012488211
Epoch Step: 445 / 819 Loss: 36.83125305175781 Tokens per Sec: 14767.454824826904
Epoch Step: 450 / 819 Loss: 40.265811920166016 Tokens per Sec: 13217.029500557877
Epoch Step: 455 / 819 Loss: 22.47275161743164 Tokens per Sec: 13035.444707607028
Epoch Step: 460 / 819 Loss: 25.108112335205078 Tokens per Sec: 13341.794891680769
Epoch Step: 465 / 819 Loss: 36.44916915893555 Tokens per Sec: 12999.300269073037
Epoch Step: 470 / 819 Loss: 39.377559661865234 Tokens per Sec: 15124.414192915692
Epoch Step: 475 / 819 Loss: 36.76140594482422 Tokens per Sec: 12846.346478441732
Epoch Step: 480 / 819 Loss: 26.910554885864258 Tokens per Sec: 14838.5477774153
Epoch Step: 485 / 819 Loss: 31.22808074951172 Tokens per Sec: 13511.609951622853
Epoch Step: 490 / 819 Loss: 30.356956481933594 Tokens per Sec: 14264.612117438204
Epoch Step: 495 / 819 Loss: 34.522621154785156 Tokens per Sec: 13557.873110729748
Epoch Step: 500 / 819 Loss: 25.174400329589844 Tokens per Sec: 14445.181973569372
Epoch Step: 505 / 819 Loss: 32.14955520629883 Tokens per Sec: 13465.562683155074
Epoch Step: 510 / 819 Loss: 28.188459396362305 Tokens per Sec: 12996.558169000202
Epoch Step: 515 / 819 Loss: 30.935094833374023 Tokens per Sec: 14816.216054500677
Epoch Step: 520 / 819 Loss: 24.0320987701416 Tokens per Sec: 12945.058880411403
Epoch Step: 525 / 819 Loss: 23.19964599609375 Tokens per Sec: 14434.707458905754
Epoch Step: 530 / 819 Loss: 36.34247970581055 Tokens per Sec: 13171.191577336169
Epoch Step: 535 / 819 Loss: 25.699872970581055 Tokens per Sec: 12819.18077014486
Epoch Step: 540 / 819 Loss: 44.5499267578125 Tokens per Sec: 13437.315707801974
Epoch Step: 545 / 819 Loss: 29.789472579956055 Tokens per Sec: 11900.997638094248
Epoch Step: 550 / 819 Loss: 33.332427978515625 Tokens per Sec: 13486.89087261709
Epoch Step: 555 / 819 Loss: 33.81150817871094 Tokens per Sec: 14089.137361370054
Epoch Step: 560 / 819 Loss: 153.65878295898438 Tokens per Sec: 12386.7499508835
Epoch Step: 565 / 819 Loss: 39.31979751586914 Tokens per Sec: 14632.406175941218
Epoch Step: 570 / 819 Loss: 20.582277297973633 Tokens per Sec: 14194.4756572474
Epoch Step: 575 / 819 Loss: 230.63201904296875 Tokens per Sec: 12643.524540871844
Epoch Step: 580 / 819 Loss: 37.85688781738281 Tokens per Sec: 16824.84488061316
Epoch Step: 585 / 819 Loss: 30.527484893798828 Tokens per Sec: 13144.10963203742
Epoch Step: 590 / 819 Loss: 41.089202880859375 Tokens per Sec: 13993.59521605008
Epoch Step: 595 / 819 Loss: 30.418949127197266 Tokens per Sec: 14865.094499613473
Epoch Step: 600 / 819 Loss: 34.296077728271484 Tokens per Sec: 15518.83559691599
Epoch Step: 605 / 819 Loss: 37.90610885620117 Tokens per Sec: 13692.125724878964
Epoch Step: 610 / 819 Loss: 168.18370056152344 Tokens per Sec: 12368.454035241175
Epoch Step: 615 / 819 Loss: 34.69961166381836 Tokens per Sec: 14158.042295878678
Epoch Step: 620 / 819 Loss: 34.809669494628906 Tokens per Sec: 14581.4984876431
Epoch Step: 625 / 819 Loss: 28.378101348876953 Tokens per Sec: 16083.727149155438
Epoch Step: 630 / 819 Loss: 34.65935516357422 Tokens per Sec: 14900.44474813227
Epoch Step: 635 / 819 Loss: 279.9365234375 Tokens per Sec: 14094.955125561359
Epoch Step: 640 / 819 Loss: 37.28478240966797 Tokens per Sec: 14409.654993194952
Epoch Step: 645 / 819 Loss: 26.23372459411621 Tokens per Sec: 12247.364432678183
Epoch Step: 650 / 819 Loss: 26.702428817749023 Tokens per Sec: 16068.453515988189
Epoch Step: 655 / 819 Loss: 21.18915557861328 Tokens per Sec: 15233.767817931826
Epoch Step: 660 / 819 Loss: 29.284099578857422 Tokens per Sec: 12581.54563181625
Epoch Step: 665 / 819 Loss: 23.1853084564209 Tokens per Sec: 12953.494240238033
Epoch Step: 670 / 819 Loss: 30.611238479614258 Tokens per Sec: 11833.930660455233
Epoch Step: 675 / 819 Loss: 22.72010612487793 Tokens per Sec: 14567.943771330034
Epoch Step: 680 / 819 Loss: 39.105594635009766 Tokens per Sec: 15278.292029842232
Epoch Step: 685 / 819 Loss: 35.97411346435547 Tokens per Sec: 13957.09454456823
Epoch Step: 690 / 819 Loss: 34.34865951538086 Tokens per Sec: 13935.368413649336
Epoch Step: 695 / 819 Loss: 35.46450424194336 Tokens per Sec: 13556.353744304879
Epoch Step: 700 / 819 Loss: 18.185874938964844 Tokens per Sec: 15375.073862747598
Epoch Step: 705 / 819 Loss: 308.6611022949219 Tokens per Sec: 15084.052499430076
Epoch Step: 710 / 819 Loss: 23.9262752532959 Tokens per Sec: 13908.968834242363
Epoch Step: 715 / 819 Loss: 25.051015853881836 Tokens per Sec: 12100.807072099547
Epoch Step: 720 / 819 Loss: 22.553743362426758 Tokens per Sec: 13967.595780498616
Epoch Step: 725 / 819 Loss: 41.16279220581055 Tokens per Sec: 12531.892538615657
Epoch Step: 730 / 819 Loss: 33.40744400024414 Tokens per Sec: 13766.620810861643
Epoch Step: 735 / 819 Loss: 29.2502498626709 Tokens per Sec: 13326.874581548633
Epoch Step: 740 / 819 Loss: 32.160064697265625 Tokens per Sec: 16178.504309029831
Epoch Step: 745 / 819 Loss: 37.29665756225586 Tokens per Sec: 15118.761786032483
Epoch Step: 750 / 819 Loss: 34.94101333618164 Tokens per Sec: 13922.966828745182
Epoch Step: 755 / 819 Loss: 33.42351531982422 Tokens per Sec: 13658.100136119065
Epoch Step: 760 / 819 Loss: 36.77766036987305 Tokens per Sec: 13632.533291956808
Epoch Step: 765 / 819 Loss: 171.3925018310547 Tokens per Sec: 14481.728000284715
Epoch Step: 770 / 819 Loss: 31.110055923461914 Tokens per Sec: 13768.13348350852
Epoch Step: 775 / 819 Loss: 28.332324981689453 Tokens per Sec: 13895.055577384897
Epoch Step: 780 / 819 Loss: 31.887039184570312 Tokens per Sec: 15130.309107311832
Epoch Step: 785 / 819 Loss: 24.303852081298828 Tokens per Sec: 12935.046425571749
Epoch Step: 790 / 819 Loss: 32.16379165649414 Tokens per Sec: 14253.93567042694
Epoch Step: 795 / 819 Loss: 29.94703483581543 Tokens per Sec: 13213.535551838591
Epoch Step: 800 / 819 Loss: 23.141965866088867 Tokens per Sec: 14294.014578046443
Epoch Step: 805 / 819 Loss: 32.736907958984375 Tokens per Sec: 13015.155044344508
Epoch Step: 810 / 819 Loss: 37.617431640625 Tokens per Sec: 10164.412837176502
Epoch Step: 815 / 819 Loss: 24.883695602416992 Tokens per Sec: 14296.834664197173
Epoch ended with duration 0:04:41.141723
Train perplexity: 1.966044039275168
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . METHOD_3 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + FLOAT_1 ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.384401
Validation perplexity: 2.043159084483221
Model saved best_on_validation!
Epoch 8 / 1000
Epoch Step: 5 / 819 Loss: 29.220630645751953 Tokens per Sec: 13971.62032229411
Epoch Step: 10 / 819 Loss: 21.631439208984375 Tokens per Sec: 15000.5417534019
Epoch Step: 15 / 819 Loss: 34.50469207763672 Tokens per Sec: 15265.848983030342
Epoch Step: 20 / 819 Loss: 31.56716537475586 Tokens per Sec: 14226.473555333774
Epoch Step: 25 / 819 Loss: 28.014060974121094 Tokens per Sec: 13344.187821888427
Epoch Step: 30 / 819 Loss: 35.25333023071289 Tokens per Sec: 13777.455916139621
Epoch Step: 35 / 819 Loss: 34.887149810791016 Tokens per Sec: 15333.783824344091
Epoch Step: 40 / 819 Loss: 36.36609649658203 Tokens per Sec: 14974.685012975584
Epoch Step: 45 / 819 Loss: 27.279979705810547 Tokens per Sec: 12617.877267534079
Epoch Step: 50 / 819 Loss: 23.897974014282227 Tokens per Sec: 11903.248409894148
Epoch Step: 55 / 819 Loss: 21.90627670288086 Tokens per Sec: 13185.77120248378
Epoch Step: 60 / 819 Loss: 30.213916778564453 Tokens per Sec: 15413.899014991093
Epoch Step: 65 / 819 Loss: 26.9240665435791 Tokens per Sec: 14094.307995910349
Epoch Step: 70 / 819 Loss: 23.467073440551758 Tokens per Sec: 12113.950620272843
Epoch Step: 75 / 819 Loss: 23.98885726928711 Tokens per Sec: 13395.570325669112
Epoch Step: 80 / 819 Loss: 23.121145248413086 Tokens per Sec: 13971.945463566462
Epoch Step: 85 / 819 Loss: 21.03190803527832 Tokens per Sec: 14021.091085168937
Epoch Step: 90 / 819 Loss: 28.70646095275879 Tokens per Sec: 13830.570981067169
Epoch Step: 95 / 819 Loss: 37.35740661621094 Tokens per Sec: 12819.067538009998
Epoch Step: 100 / 819 Loss: 25.36768913269043 Tokens per Sec: 12766.016089501692
Epoch Step: 105 / 819 Loss: 21.73842430114746 Tokens per Sec: 13518.612575110266
Epoch Step: 110 / 819 Loss: 28.83814811706543 Tokens per Sec: 12063.305191935122
Epoch Step: 115 / 819 Loss: 27.043420791625977 Tokens per Sec: 15856.259440230018
Epoch Step: 120 / 819 Loss: 29.237180709838867 Tokens per Sec: 13810.517535975061
Epoch Step: 125 / 819 Loss: 35.578895568847656 Tokens per Sec: 14558.712746177083
Epoch Step: 130 / 819 Loss: 29.8978214263916 Tokens per Sec: 12903.131461058727
Epoch Step: 135 / 819 Loss: 39.86646270751953 Tokens per Sec: 12967.236076930634
Epoch Step: 140 / 819 Loss: 30.786964416503906 Tokens per Sec: 14055.01985380247
Epoch Step: 145 / 819 Loss: 29.039569854736328 Tokens per Sec: 12546.210367647716
Epoch Step: 150 / 819 Loss: 23.223873138427734 Tokens per Sec: 12770.945898715538
Epoch Step: 155 / 819 Loss: 37.15590286254883 Tokens per Sec: 14569.247456632254
Epoch Step: 160 / 819 Loss: 37.36237716674805 Tokens per Sec: 13963.583822302242
Epoch Step: 165 / 819 Loss: 30.775426864624023 Tokens per Sec: 14064.079911330386
Epoch Step: 170 / 819 Loss: 33.103187561035156 Tokens per Sec: 12894.121096325003
Epoch Step: 175 / 819 Loss: 27.824724197387695 Tokens per Sec: 13640.399151394266
Epoch Step: 180 / 819 Loss: 28.39423942565918 Tokens per Sec: 13262.875028822733
Epoch Step: 185 / 819 Loss: 224.7889404296875 Tokens per Sec: 14282.63957500089
Epoch Step: 190 / 819 Loss: 26.068025588989258 Tokens per Sec: 13676.93729857307
Epoch Step: 195 / 819 Loss: 27.14377212524414 Tokens per Sec: 13755.257852233706
Epoch Step: 200 / 819 Loss: 29.21575355529785 Tokens per Sec: 14310.01594067713
Epoch Step: 205 / 819 Loss: 38.10751724243164 Tokens per Sec: 13149.030781532538
Epoch Step: 210 / 819 Loss: 32.12443542480469 Tokens per Sec: 14770.51461035008
Epoch Step: 215 / 819 Loss: 29.040239334106445 Tokens per Sec: 14856.938904418581
Epoch Step: 220 / 819 Loss: 29.172040939331055 Tokens per Sec: 14423.997060883894
Epoch Step: 225 / 819 Loss: 30.829017639160156 Tokens per Sec: 13271.54002790003
Epoch Step: 230 / 819 Loss: 37.14139938354492 Tokens per Sec: 13941.22821499909
Epoch Step: 235 / 819 Loss: 33.74514389038086 Tokens per Sec: 13420.939292548539
Epoch Step: 240 / 819 Loss: 22.857702255249023 Tokens per Sec: 14943.424208708595
Epoch Step: 245 / 819 Loss: 305.9261169433594 Tokens per Sec: 16578.79698598175
Epoch Step: 250 / 819 Loss: 41.32128143310547 Tokens per Sec: 14582.072620333905
Epoch Step: 255 / 819 Loss: 26.490324020385742 Tokens per Sec: 13363.26375682638
Epoch Step: 260 / 819 Loss: 32.15721893310547 Tokens per Sec: 12513.086101708692
Epoch Step: 265 / 819 Loss: 25.907724380493164 Tokens per Sec: 11872.045377234006
Epoch Step: 270 / 819 Loss: 27.61457633972168 Tokens per Sec: 14544.31517607042
Epoch Step: 275 / 819 Loss: 36.66447830200195 Tokens per Sec: 13752.31209828812
Epoch Step: 280 / 819 Loss: 30.52906036376953 Tokens per Sec: 13749.795637633059
Epoch Step: 285 / 819 Loss: 38.85302734375 Tokens per Sec: 13257.486830010728
Epoch Step: 290 / 819 Loss: 26.335601806640625 Tokens per Sec: 14359.054919237802
Epoch Step: 295 / 819 Loss: 35.21113967895508 Tokens per Sec: 12965.357648023435
Epoch Step: 300 / 819 Loss: 36.75196838378906 Tokens per Sec: 14527.499957239186
Epoch Step: 305 / 819 Loss: 24.39411735534668 Tokens per Sec: 15075.895955175787
Epoch Step: 310 / 819 Loss: 24.207237243652344 Tokens per Sec: 15138.45218828814
Epoch Step: 315 / 819 Loss: 37.740047454833984 Tokens per Sec: 12723.98850936958
Epoch Step: 320 / 819 Loss: 29.115095138549805 Tokens per Sec: 13492.274951712025
Epoch Step: 325 / 819 Loss: 24.521560668945312 Tokens per Sec: 12845.975313718925
Epoch Step: 330 / 819 Loss: 222.09100341796875 Tokens per Sec: 14348.961781154476
Epoch Step: 335 / 819 Loss: 31.61749839782715 Tokens per Sec: 14141.752713555003
Epoch Step: 340 / 819 Loss: 34.697486877441406 Tokens per Sec: 16298.708003780614
Epoch Step: 345 / 819 Loss: 25.572744369506836 Tokens per Sec: 12415.475996406925
Epoch Step: 350 / 819 Loss: 30.617748260498047 Tokens per Sec: 14794.669782104631
Epoch Step: 355 / 819 Loss: 29.404193878173828 Tokens per Sec: 14620.487200385722
Epoch Step: 360 / 819 Loss: 28.25476837158203 Tokens per Sec: 14353.717872851295
Epoch Step: 365 / 819 Loss: 25.172597885131836 Tokens per Sec: 14879.335070961599
Epoch Step: 370 / 819 Loss: 36.50464630126953 Tokens per Sec: 12761.48112300251
Epoch Step: 375 / 819 Loss: 32.014286041259766 Tokens per Sec: 11624.194751774792
Epoch Step: 380 / 819 Loss: 21.77118682861328 Tokens per Sec: 14085.114104637927
Epoch Step: 385 / 819 Loss: 22.386770248413086 Tokens per Sec: 12942.968053183726
Epoch Step: 390 / 819 Loss: 33.875247955322266 Tokens per Sec: 13222.094692466108
Epoch Step: 395 / 819 Loss: 28.481515884399414 Tokens per Sec: 13999.965561134348
Epoch Step: 400 / 819 Loss: 20.075042724609375 Tokens per Sec: 15407.557526643433
Epoch Step: 405 / 819 Loss: 27.879383087158203 Tokens per Sec: 14707.877298596053
Epoch Step: 410 / 819 Loss: 25.124553680419922 Tokens per Sec: 13419.71186969614
Epoch Step: 415 / 819 Loss: 32.05812454223633 Tokens per Sec: 13719.575174935444
Epoch Step: 420 / 819 Loss: 127.69847869873047 Tokens per Sec: 12561.10130302419
Epoch Step: 425 / 819 Loss: 207.36024475097656 Tokens per Sec: 13895.350955566595
Epoch Step: 430 / 819 Loss: 29.397310256958008 Tokens per Sec: 15025.072776290022
Epoch Step: 435 / 819 Loss: 29.76410675048828 Tokens per Sec: 13127.633179370374
Epoch Step: 440 / 819 Loss: 27.542329788208008 Tokens per Sec: 15270.515420654734
Epoch Step: 445 / 819 Loss: 28.20547866821289 Tokens per Sec: 13451.260698912693
Epoch Step: 450 / 819 Loss: 22.57024383544922 Tokens per Sec: 12680.160670133144
Epoch Step: 455 / 819 Loss: 31.92502784729004 Tokens per Sec: 13956.408066626333
Epoch Step: 460 / 819 Loss: 29.832866668701172 Tokens per Sec: 14419.470265361322
Epoch Step: 465 / 819 Loss: 27.8043270111084 Tokens per Sec: 13738.230107126268
Epoch Step: 470 / 819 Loss: 21.203283309936523 Tokens per Sec: 13521.217315380201
Epoch Step: 475 / 819 Loss: 24.80801010131836 Tokens per Sec: 13542.621107961562
Epoch Step: 480 / 819 Loss: 254.6627960205078 Tokens per Sec: 13374.12079223228
Epoch Step: 485 / 819 Loss: 30.770206451416016 Tokens per Sec: 14607.86737788558
Epoch Step: 490 / 819 Loss: 31.221426010131836 Tokens per Sec: 13933.199861515728
Epoch Step: 495 / 819 Loss: 267.129638671875 Tokens per Sec: 13385.78602816692
Epoch Step: 500 / 819 Loss: 36.4427604675293 Tokens per Sec: 13845.545226062426
Epoch Step: 505 / 819 Loss: 26.806915283203125 Tokens per Sec: 13545.732326397909
Epoch Step: 510 / 819 Loss: 36.03031921386719 Tokens per Sec: 13521.059543931133
Epoch Step: 515 / 819 Loss: 235.3521728515625 Tokens per Sec: 14227.550291905909
Epoch Step: 520 / 819 Loss: 111.78426361083984 Tokens per Sec: 14230.819320862773
Epoch Step: 525 / 819 Loss: 233.6677703857422 Tokens per Sec: 13977.68693746096
Epoch Step: 530 / 819 Loss: 32.041778564453125 Tokens per Sec: 12468.615525030667
Epoch Step: 535 / 819 Loss: 30.846284866333008 Tokens per Sec: 13747.726082339965
Epoch Step: 540 / 819 Loss: 25.373031616210938 Tokens per Sec: 13668.607890574987
Epoch Step: 545 / 819 Loss: 22.343324661254883 Tokens per Sec: 12150.940790400577
Epoch Step: 550 / 819 Loss: 26.516376495361328 Tokens per Sec: 13590.172303752215
Epoch Step: 555 / 819 Loss: 25.31429672241211 Tokens per Sec: 14854.087590158559
Epoch Step: 560 / 819 Loss: 26.03457260131836 Tokens per Sec: 13746.926713088835
Epoch Step: 565 / 819 Loss: 37.598941802978516 Tokens per Sec: 13589.27851729133
Epoch Step: 570 / 819 Loss: 32.57490921020508 Tokens per Sec: 11912.732233696841
Epoch Step: 575 / 819 Loss: 29.980117797851562 Tokens per Sec: 14702.380909683381
Epoch Step: 580 / 819 Loss: 26.40410804748535 Tokens per Sec: 12954.255438088254
Epoch Step: 585 / 819 Loss: 38.9405632019043 Tokens per Sec: 12974.952179015087
Epoch Step: 590 / 819 Loss: 35.708736419677734 Tokens per Sec: 12638.092020621085
Epoch Step: 595 / 819 Loss: 189.47537231445312 Tokens per Sec: 14107.721271694812
Epoch Step: 600 / 819 Loss: 29.33232879638672 Tokens per Sec: 13340.55191825715
Epoch Step: 605 / 819 Loss: 28.621662139892578 Tokens per Sec: 14625.343105258395
Epoch Step: 610 / 819 Loss: 30.502748489379883 Tokens per Sec: 12267.538443520998
Epoch Step: 615 / 819 Loss: 31.0272159576416 Tokens per Sec: 14017.863964115877
Epoch Step: 620 / 819 Loss: 32.345279693603516 Tokens per Sec: 14470.499821366873
Epoch Step: 625 / 819 Loss: 33.31996154785156 Tokens per Sec: 13110.512291153316
Epoch Step: 630 / 819 Loss: 24.6157169342041 Tokens per Sec: 12990.266315556388
Epoch Step: 635 / 819 Loss: 208.4774932861328 Tokens per Sec: 14265.918739448749
Epoch Step: 640 / 819 Loss: 32.56741714477539 Tokens per Sec: 14146.578033109545
Epoch Step: 645 / 819 Loss: 19.80303192138672 Tokens per Sec: 12127.401513407898
Epoch Step: 650 / 819 Loss: 18.858089447021484 Tokens per Sec: 12818.200592556666
Epoch Step: 655 / 819 Loss: 33.99516677856445 Tokens per Sec: 13395.310691222869
Epoch Step: 660 / 819 Loss: 204.8241729736328 Tokens per Sec: 13110.522927221495
Epoch Step: 665 / 819 Loss: 28.410728454589844 Tokens per Sec: 13619.946783403082
Epoch Step: 670 / 819 Loss: 32.0124626159668 Tokens per Sec: 12611.144519622052
Epoch Step: 675 / 819 Loss: 29.546077728271484 Tokens per Sec: 14405.154788664935
Epoch Step: 680 / 819 Loss: 30.414793014526367 Tokens per Sec: 12916.542136331902
Epoch Step: 685 / 819 Loss: 33.41987609863281 Tokens per Sec: 14032.730689224598
Epoch Step: 690 / 819 Loss: 191.2177734375 Tokens per Sec: 13084.456072000004
Epoch Step: 695 / 819 Loss: 24.425151824951172 Tokens per Sec: 13535.018552026671
Epoch Step: 700 / 819 Loss: 21.130935668945312 Tokens per Sec: 14498.859650905642
Epoch Step: 705 / 819 Loss: 33.32103729248047 Tokens per Sec: 12900.105814930399
Epoch Step: 710 / 819 Loss: 29.562610626220703 Tokens per Sec: 13637.699359968883
Epoch Step: 715 / 819 Loss: 40.90440368652344 Tokens per Sec: 12437.431480501336
Epoch Step: 720 / 819 Loss: 24.29832649230957 Tokens per Sec: 13742.97477419694
Epoch Step: 725 / 819 Loss: 25.837976455688477 Tokens per Sec: 13918.342877755551
Epoch Step: 730 / 819 Loss: 20.878948211669922 Tokens per Sec: 15038.679520569664
Epoch Step: 735 / 819 Loss: 26.82936668395996 Tokens per Sec: 14438.452997507497
Epoch Step: 740 / 819 Loss: 25.43255043029785 Tokens per Sec: 12934.638192881068
Epoch Step: 745 / 819 Loss: 258.072998046875 Tokens per Sec: 13438.050714911431
Epoch Step: 750 / 819 Loss: 32.44683837890625 Tokens per Sec: 13546.20536361232
Epoch Step: 755 / 819 Loss: 26.527610778808594 Tokens per Sec: 13593.627453259558
Epoch Step: 760 / 819 Loss: 32.11572265625 Tokens per Sec: 15391.733337114389
Epoch Step: 765 / 819 Loss: 276.1048278808594 Tokens per Sec: 12768.085517357464
Epoch Step: 770 / 819 Loss: 41.00740051269531 Tokens per Sec: 15261.287741104625
Epoch Step: 775 / 819 Loss: 25.47612953186035 Tokens per Sec: 13065.164307792487
Epoch Step: 780 / 819 Loss: 38.656982421875 Tokens per Sec: 15269.89566170986
Epoch Step: 785 / 819 Loss: 36.660945892333984 Tokens per Sec: 12499.912187508105
Epoch Step: 790 / 819 Loss: 22.703353881835938 Tokens per Sec: 14958.613861758598
Epoch Step: 795 / 819 Loss: 27.23375129699707 Tokens per Sec: 12921.237004709339
Epoch Step: 800 / 819 Loss: 23.203832626342773 Tokens per Sec: 13642.554041551706
Epoch Step: 805 / 819 Loss: 26.225080490112305 Tokens per Sec: 11845.865629468708
Epoch Step: 810 / 819 Loss: 278.413330078125 Tokens per Sec: 13341.636853592901
Epoch Step: 815 / 819 Loss: 27.722246170043945 Tokens per Sec: 12207.853502924769
Epoch ended with duration 0:04:43.734213
Train perplexity: 2.015756248003074
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.784351
Validation perplexity: 1.822988537734164
Model saved best_on_validation!
Epoch 9 / 1000
Epoch Step: 5 / 819 Loss: 34.265602111816406 Tokens per Sec: 12785.104608867045
Epoch Step: 10 / 819 Loss: 40.67741012573242 Tokens per Sec: 15228.288491669839
Epoch Step: 15 / 819 Loss: 37.033042907714844 Tokens per Sec: 13016.918704047217
Epoch Step: 20 / 819 Loss: 32.07652282714844 Tokens per Sec: 13026.174159481256
Epoch Step: 25 / 819 Loss: 29.272584915161133 Tokens per Sec: 14702.573996170564
Epoch Step: 30 / 819 Loss: 28.043790817260742 Tokens per Sec: 14388.03760487139
Epoch Step: 35 / 819 Loss: 30.462217330932617 Tokens per Sec: 14744.769781079029
Epoch Step: 40 / 819 Loss: 28.045259475708008 Tokens per Sec: 13905.29953451822
Epoch Step: 45 / 819 Loss: 27.574983596801758 Tokens per Sec: 14771.568077568967
Epoch Step: 50 / 819 Loss: 250.478759765625 Tokens per Sec: 14283.253450801869
Epoch Step: 55 / 819 Loss: 36.99694061279297 Tokens per Sec: 13979.374923228008
Epoch Step: 60 / 819 Loss: 26.611722946166992 Tokens per Sec: 12861.344321909532
Epoch Step: 65 / 819 Loss: 19.28165626525879 Tokens per Sec: 12499.10164380203
Epoch Step: 70 / 819 Loss: 180.153076171875 Tokens per Sec: 12861.317194294059
Epoch Step: 75 / 819 Loss: 34.392520904541016 Tokens per Sec: 12842.21034514308
Epoch Step: 80 / 819 Loss: 32.81329345703125 Tokens per Sec: 13895.800189008072
Epoch Step: 85 / 819 Loss: 24.67025375366211 Tokens per Sec: 13229.18249664521
Epoch Step: 90 / 819 Loss: 30.4732608795166 Tokens per Sec: 14952.584715179486
Epoch Step: 95 / 819 Loss: 34.222469329833984 Tokens per Sec: 14386.1568254261
Epoch Step: 100 / 819 Loss: 37.78730010986328 Tokens per Sec: 13510.765189638281
Epoch Step: 105 / 819 Loss: 21.219858169555664 Tokens per Sec: 15275.774469457594
Epoch Step: 110 / 819 Loss: 24.874053955078125 Tokens per Sec: 13415.671508775029
Epoch Step: 115 / 819 Loss: 24.616958618164062 Tokens per Sec: 12194.394707923597
Epoch Step: 120 / 819 Loss: 30.8502197265625 Tokens per Sec: 15467.390817058795
Epoch Step: 125 / 819 Loss: 33.415382385253906 Tokens per Sec: 14476.400697846593
Epoch Step: 130 / 819 Loss: 36.03186798095703 Tokens per Sec: 14469.317517307596
Epoch Step: 135 / 819 Loss: 25.80101203918457 Tokens per Sec: 14451.70311362015
Epoch Step: 140 / 819 Loss: 26.877492904663086 Tokens per Sec: 14578.926920789583
Epoch Step: 145 / 819 Loss: 37.88344192504883 Tokens per Sec: 14644.345197915567
Epoch Step: 150 / 819 Loss: 27.69923973083496 Tokens per Sec: 13289.186687778438
Epoch Step: 155 / 819 Loss: 18.252151489257812 Tokens per Sec: 13648.116912186315
Epoch Step: 160 / 819 Loss: 282.7388000488281 Tokens per Sec: 16875.69821527042
Epoch Step: 165 / 819 Loss: 33.623451232910156 Tokens per Sec: 15175.230102166528
Epoch Step: 170 / 819 Loss: 38.61024856567383 Tokens per Sec: 13946.452534664266
Epoch Step: 175 / 819 Loss: 29.29154396057129 Tokens per Sec: 12272.725730054171
Epoch Step: 180 / 819 Loss: 30.513032913208008 Tokens per Sec: 15169.77663275002
Epoch Step: 185 / 819 Loss: 34.82236862182617 Tokens per Sec: 12921.57708235311
Epoch Step: 190 / 819 Loss: 25.573402404785156 Tokens per Sec: 12687.199441439761
Epoch Step: 195 / 819 Loss: 31.588741302490234 Tokens per Sec: 13291.864535998893
Epoch Step: 200 / 819 Loss: 27.164325714111328 Tokens per Sec: 13712.474994520862
Epoch Step: 205 / 819 Loss: 22.619918823242188 Tokens per Sec: 13828.671051872774
Epoch Step: 210 / 819 Loss: 35.07069396972656 Tokens per Sec: 13149.842908822971
Epoch Step: 215 / 819 Loss: 149.0249481201172 Tokens per Sec: 14861.852265621226
Epoch Step: 220 / 819 Loss: 24.35633659362793 Tokens per Sec: 15842.153769696166
Epoch Step: 225 / 819 Loss: 23.179851531982422 Tokens per Sec: 13135.837448397151
Epoch Step: 230 / 819 Loss: 25.634017944335938 Tokens per Sec: 14303.34820780417
Epoch Step: 235 / 819 Loss: 30.947031021118164 Tokens per Sec: 13538.776086112217
Epoch Step: 240 / 819 Loss: 26.324832916259766 Tokens per Sec: 15102.149811525953
Epoch Step: 245 / 819 Loss: 177.10667419433594 Tokens per Sec: 14811.856983028378
Epoch Step: 250 / 819 Loss: 291.4172668457031 Tokens per Sec: 12989.50991275234
Epoch Step: 255 / 819 Loss: 233.71377563476562 Tokens per Sec: 14022.969948250275
Epoch Step: 260 / 819 Loss: 33.06563949584961 Tokens per Sec: 13019.871028786469
Epoch Step: 265 / 819 Loss: 32.42668151855469 Tokens per Sec: 12563.621121871449
Epoch Step: 270 / 819 Loss: 33.73779296875 Tokens per Sec: 13417.245166327368
Epoch Step: 275 / 819 Loss: 32.79111862182617 Tokens per Sec: 13995.869554112482
Epoch Step: 280 / 819 Loss: 280.399169921875 Tokens per Sec: 12664.513629176865
Epoch Step: 285 / 819 Loss: 31.860679626464844 Tokens per Sec: 13005.421550095525
Epoch Step: 290 / 819 Loss: 238.8629913330078 Tokens per Sec: 13472.433655003915
Epoch Step: 295 / 819 Loss: 30.490468978881836 Tokens per Sec: 12714.115344311109
Epoch Step: 300 / 819 Loss: 32.84600830078125 Tokens per Sec: 12842.814770817018
Epoch Step: 305 / 819 Loss: 34.757591247558594 Tokens per Sec: 13215.724305363172
Epoch Step: 310 / 819 Loss: 34.57505416870117 Tokens per Sec: 13450.022406383034
Epoch Step: 315 / 819 Loss: 29.63703155517578 Tokens per Sec: 14066.603945235802
Epoch Step: 320 / 819 Loss: 30.40216827392578 Tokens per Sec: 14048.98920275889
Epoch Step: 325 / 819 Loss: 31.459131240844727 Tokens per Sec: 13778.836272408453
Epoch Step: 330 / 819 Loss: 24.989669799804688 Tokens per Sec: 14018.537764131039
Epoch Step: 335 / 819 Loss: 127.3477783203125 Tokens per Sec: 14624.584650238525
Epoch Step: 340 / 819 Loss: 280.8049011230469 Tokens per Sec: 16011.973057006055
Epoch Step: 345 / 819 Loss: 29.990915298461914 Tokens per Sec: 13368.84040379185
Epoch Step: 350 / 819 Loss: 20.677024841308594 Tokens per Sec: 13737.37807035755
Epoch Step: 355 / 819 Loss: 24.171140670776367 Tokens per Sec: 16033.623999356972
Epoch Step: 360 / 819 Loss: 20.247665405273438 Tokens per Sec: 12860.46528606691
Epoch Step: 365 / 819 Loss: 117.60792541503906 Tokens per Sec: 13753.691157936566
Epoch Step: 370 / 819 Loss: 35.57317352294922 Tokens per Sec: 14859.905240067592
Epoch Step: 375 / 819 Loss: 29.623973846435547 Tokens per Sec: 14501.284715660482
Epoch Step: 380 / 819 Loss: 31.75068473815918 Tokens per Sec: 12705.847351995824
Epoch Step: 385 / 819 Loss: 33.280147552490234 Tokens per Sec: 15146.654015535503
Epoch Step: 390 / 819 Loss: 35.540714263916016 Tokens per Sec: 14684.350106157504
Epoch Step: 395 / 819 Loss: 21.82632827758789 Tokens per Sec: 13591.314811550854
Epoch Step: 400 / 819 Loss: 25.105134963989258 Tokens per Sec: 13688.022914032164
Epoch Step: 405 / 819 Loss: 223.4246063232422 Tokens per Sec: 13725.997679585706
Epoch Step: 410 / 819 Loss: 30.33378028869629 Tokens per Sec: 12815.559301598169
Epoch Step: 415 / 819 Loss: 30.95246124267578 Tokens per Sec: 14148.48264568045
Epoch Step: 420 / 819 Loss: 30.85561752319336 Tokens per Sec: 14177.183591425453
Epoch Step: 425 / 819 Loss: 227.57559204101562 Tokens per Sec: 13353.145142988376
Epoch Step: 430 / 819 Loss: 136.95745849609375 Tokens per Sec: 12864.860808036277
Epoch Step: 435 / 819 Loss: 34.41661071777344 Tokens per Sec: 13606.175815406492
Epoch Step: 440 / 819 Loss: 27.88336944580078 Tokens per Sec: 13351.555802656561
Epoch Step: 445 / 819 Loss: 23.976896286010742 Tokens per Sec: 14420.330760201496
Epoch Step: 450 / 819 Loss: 34.51496505737305 Tokens per Sec: 13599.038890611955
Epoch Step: 455 / 819 Loss: 28.218393325805664 Tokens per Sec: 12406.611548100305
Epoch Step: 460 / 819 Loss: 32.119232177734375 Tokens per Sec: 12817.716854908847
Epoch Step: 465 / 819 Loss: 22.09889793395996 Tokens per Sec: 14105.508939270418
Epoch Step: 470 / 819 Loss: 33.96257781982422 Tokens per Sec: 14273.625554816814
Epoch Step: 475 / 819 Loss: 211.54946899414062 Tokens per Sec: 14515.660506847775
Epoch Step: 480 / 819 Loss: 31.74294090270996 Tokens per Sec: 14143.645705886016
Epoch Step: 485 / 819 Loss: 186.3462677001953 Tokens per Sec: 14541.103016307545
Epoch Step: 490 / 819 Loss: 24.47247314453125 Tokens per Sec: 13584.835241983614
Epoch Step: 495 / 819 Loss: 26.657726287841797 Tokens per Sec: 13847.459571043524
Epoch Step: 500 / 819 Loss: 27.17141342163086 Tokens per Sec: 15861.322375376849
Epoch Step: 505 / 819 Loss: 25.186344146728516 Tokens per Sec: 14926.041576869995
Epoch Step: 510 / 819 Loss: 29.069019317626953 Tokens per Sec: 15411.787624172071
Epoch Step: 515 / 819 Loss: 34.13607406616211 Tokens per Sec: 12640.924622565324
Epoch Step: 520 / 819 Loss: 31.990537643432617 Tokens per Sec: 14250.315093915646
Epoch Step: 525 / 819 Loss: 36.43767166137695 Tokens per Sec: 15200.274319739327
Epoch Step: 530 / 819 Loss: 23.007633209228516 Tokens per Sec: 14267.351685961326
Epoch Step: 535 / 819 Loss: 29.55556297302246 Tokens per Sec: 14359.913892906981
Epoch Step: 540 / 819 Loss: 295.06878662109375 Tokens per Sec: 14402.437828190305
Epoch Step: 545 / 819 Loss: 27.393247604370117 Tokens per Sec: 13507.432269223724
Epoch Step: 550 / 819 Loss: 37.50661087036133 Tokens per Sec: 14204.962318440696
Epoch Step: 555 / 819 Loss: 36.646907806396484 Tokens per Sec: 14601.368511274115
Epoch Step: 560 / 819 Loss: 24.993885040283203 Tokens per Sec: 13582.214847511688
Epoch Step: 565 / 819 Loss: 150.6312255859375 Tokens per Sec: 13711.179299015539
Epoch Step: 570 / 819 Loss: 203.62828063964844 Tokens per Sec: 13836.145642652704
Epoch Step: 575 / 819 Loss: 32.95044708251953 Tokens per Sec: 13743.241009733278
Epoch Step: 580 / 819 Loss: 244.0753936767578 Tokens per Sec: 12859.663385343629
Epoch Step: 585 / 819 Loss: 41.414703369140625 Tokens per Sec: 13004.932340024934
Epoch Step: 590 / 819 Loss: 206.0207977294922 Tokens per Sec: 13144.55146093758
Epoch Step: 595 / 819 Loss: 32.02399444580078 Tokens per Sec: 14132.5844458294
Epoch Step: 600 / 819 Loss: 27.266754150390625 Tokens per Sec: 14238.596289423995
Epoch Step: 605 / 819 Loss: 23.17898178100586 Tokens per Sec: 13915.518479434815
Epoch Step: 610 / 819 Loss: 34.700828552246094 Tokens per Sec: 13866.49203349928
Epoch Step: 615 / 819 Loss: 33.04961395263672 Tokens per Sec: 13308.709235549104
Epoch Step: 620 / 819 Loss: 266.3964538574219 Tokens per Sec: 13452.977297202722
Epoch Step: 625 / 819 Loss: 31.0407772064209 Tokens per Sec: 14420.878922931295
Epoch Step: 630 / 819 Loss: 37.57329559326172 Tokens per Sec: 13951.436427682076
Epoch Step: 635 / 819 Loss: 25.19401741027832 Tokens per Sec: 14119.94039961492
Epoch Step: 640 / 819 Loss: 37.368309020996094 Tokens per Sec: 13387.665774479809
Epoch Step: 645 / 819 Loss: 31.13511848449707 Tokens per Sec: 14799.949641044619
Epoch Step: 650 / 819 Loss: 139.47645568847656 Tokens per Sec: 14720.976062655502
Epoch Step: 655 / 819 Loss: 30.97574806213379 Tokens per Sec: 14346.978789188224
Epoch Step: 660 / 819 Loss: 23.84440040588379 Tokens per Sec: 13918.824224556258
Epoch Step: 665 / 819 Loss: 30.869760513305664 Tokens per Sec: 13322.909072148992
Epoch Step: 670 / 819 Loss: 23.512178421020508 Tokens per Sec: 14778.119462027204
Epoch Step: 675 / 819 Loss: 31.19953155517578 Tokens per Sec: 13154.104991460763
Epoch Step: 680 / 819 Loss: 29.600811004638672 Tokens per Sec: 14455.57592794329
Epoch Step: 685 / 819 Loss: 23.294570922851562 Tokens per Sec: 12475.760956205313
Epoch Step: 690 / 819 Loss: 25.200637817382812 Tokens per Sec: 13781.646024467296
Epoch Step: 695 / 819 Loss: 23.409944534301758 Tokens per Sec: 14271.964121921003
Epoch Step: 700 / 819 Loss: 25.78862762451172 Tokens per Sec: 12744.503468266968
Epoch Step: 705 / 819 Loss: 21.233488082885742 Tokens per Sec: 12512.10081842756
Epoch Step: 710 / 819 Loss: 29.74159049987793 Tokens per Sec: 14285.837961883039
Epoch Step: 715 / 819 Loss: 31.250226974487305 Tokens per Sec: 13185.358640435825
Epoch Step: 720 / 819 Loss: 24.498695373535156 Tokens per Sec: 16034.751139700713
Epoch Step: 725 / 819 Loss: 17.234485626220703 Tokens per Sec: 14874.995297455212
Epoch Step: 730 / 819 Loss: 28.695011138916016 Tokens per Sec: 13684.015750352335
Epoch Step: 735 / 819 Loss: 33.428062438964844 Tokens per Sec: 13662.221953065859
Epoch Step: 740 / 819 Loss: 137.25843811035156 Tokens per Sec: 13445.742782104153
Epoch Step: 745 / 819 Loss: 23.83775520324707 Tokens per Sec: 14133.197687494736
Epoch Step: 750 / 819 Loss: 32.454246520996094 Tokens per Sec: 13533.91172883355
Epoch Step: 755 / 819 Loss: 30.538604736328125 Tokens per Sec: 13430.398943216833
Epoch Step: 760 / 819 Loss: 29.28586196899414 Tokens per Sec: 14473.453401105555
Epoch Step: 765 / 819 Loss: 25.33725929260254 Tokens per Sec: 14578.076886351377
Epoch Step: 770 / 819 Loss: 33.545597076416016 Tokens per Sec: 14806.162037004093
Epoch Step: 775 / 819 Loss: 35.429901123046875 Tokens per Sec: 14795.313324852737
Epoch Step: 780 / 819 Loss: 28.256372451782227 Tokens per Sec: 15286.41138359886
Epoch Step: 785 / 819 Loss: 20.480928421020508 Tokens per Sec: 12221.090811607643
Epoch Step: 790 / 819 Loss: 30.578596115112305 Tokens per Sec: 14325.591770505409
Epoch Step: 795 / 819 Loss: 24.437271118164062 Tokens per Sec: 16321.739303901943
Epoch Step: 800 / 819 Loss: 27.90936279296875 Tokens per Sec: 15615.204547732577
Epoch Step: 805 / 819 Loss: 25.43393898010254 Tokens per Sec: 14236.805766375654
Epoch Step: 810 / 819 Loss: 26.329885482788086 Tokens per Sec: 12593.929398418271
Epoch Step: 815 / 819 Loss: 24.773441314697266 Tokens per Sec: 12593.04051725223
Epoch ended with duration 0:04:39.636223
Train perplexity: 1.904526897557684
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.156102
Validation perplexity: 1.7728836269721115
Model saved best_on_validation!
Epoch 10 / 1000
Epoch Step: 5 / 819 Loss: 287.4557800292969 Tokens per Sec: 13623.955102788286
Epoch Step: 10 / 819 Loss: 29.185684204101562 Tokens per Sec: 13251.366123640008
Epoch Step: 15 / 819 Loss: 25.206951141357422 Tokens per Sec: 12898.41442114716
Epoch Step: 20 / 819 Loss: 19.18560028076172 Tokens per Sec: 13388.423485983927
Epoch Step: 25 / 819 Loss: 16.417051315307617 Tokens per Sec: 13213.610614992709
Epoch Step: 30 / 819 Loss: 25.811954498291016 Tokens per Sec: 14474.105074784353
Epoch Step: 35 / 819 Loss: 32.91996383666992 Tokens per Sec: 13181.953325836555
Epoch Step: 40 / 819 Loss: 32.93437194824219 Tokens per Sec: 14938.348813713743
Epoch Step: 45 / 819 Loss: 24.540563583374023 Tokens per Sec: 13356.582752929176
Epoch Step: 50 / 819 Loss: 26.56273078918457 Tokens per Sec: 15189.395941040284
Epoch Step: 55 / 819 Loss: 25.796184539794922 Tokens per Sec: 13248.555576676932
Epoch Step: 60 / 819 Loss: 19.50575065612793 Tokens per Sec: 13457.913638473752
Epoch Step: 65 / 819 Loss: 32.502437591552734 Tokens per Sec: 15227.685836711114
Epoch Step: 70 / 819 Loss: 24.221086502075195 Tokens per Sec: 14297.321520538071
Epoch Step: 75 / 819 Loss: 26.43526840209961 Tokens per Sec: 13240.839916367673
Epoch Step: 80 / 819 Loss: 27.59362030029297 Tokens per Sec: 13259.646006912579
Epoch Step: 85 / 819 Loss: 32.362579345703125 Tokens per Sec: 13628.390141036214
Epoch Step: 90 / 819 Loss: 18.84694480895996 Tokens per Sec: 14066.254774286983
Epoch Step: 95 / 819 Loss: 19.407325744628906 Tokens per Sec: 13646.568241288489
Epoch Step: 100 / 819 Loss: 31.04892349243164 Tokens per Sec: 13684.687214433783
Epoch Step: 105 / 819 Loss: 32.263336181640625 Tokens per Sec: 14344.558212433227
Epoch Step: 110 / 819 Loss: 23.418067932128906 Tokens per Sec: 13537.447415190089
Epoch Step: 115 / 819 Loss: 23.61592674255371 Tokens per Sec: 13760.814009891981
Epoch Step: 120 / 819 Loss: 30.019887924194336 Tokens per Sec: 13551.513450104307
Epoch Step: 125 / 819 Loss: 25.389022827148438 Tokens per Sec: 15331.409978354732
Epoch Step: 130 / 819 Loss: 27.455341339111328 Tokens per Sec: 13118.883870912907
Epoch Step: 135 / 819 Loss: 16.065622329711914 Tokens per Sec: 12313.129311429997
Epoch Step: 140 / 819 Loss: 27.5654296875 Tokens per Sec: 12753.406715589568
Epoch Step: 145 / 819 Loss: 21.55847930908203 Tokens per Sec: 13657.223817636812
Epoch Step: 150 / 819 Loss: 26.12969207763672 Tokens per Sec: 14086.531829625814
Epoch Step: 155 / 819 Loss: 30.56661605834961 Tokens per Sec: 14633.184044312562
Epoch Step: 160 / 819 Loss: 29.287155151367188 Tokens per Sec: 12865.473425324622
Epoch Step: 165 / 819 Loss: 28.00873565673828 Tokens per Sec: 14035.672782326312
Epoch Step: 170 / 819 Loss: 18.67897605895996 Tokens per Sec: 14410.046424644786
Epoch Step: 175 / 819 Loss: 30.714204788208008 Tokens per Sec: 12746.133655179163
Epoch Step: 180 / 819 Loss: 207.75022888183594 Tokens per Sec: 14708.174587153337
Epoch Step: 185 / 819 Loss: 32.91695022583008 Tokens per Sec: 14987.156524455539
Epoch Step: 190 / 819 Loss: 23.603654861450195 Tokens per Sec: 13610.135118601052
Epoch Step: 195 / 819 Loss: 21.607271194458008 Tokens per Sec: 13629.698729246287
Epoch Step: 200 / 819 Loss: 33.227474212646484 Tokens per Sec: 13646.83836238035
Epoch Step: 205 / 819 Loss: 28.70561408996582 Tokens per Sec: 12980.851480941992
Epoch Step: 210 / 819 Loss: 26.023645401000977 Tokens per Sec: 14342.491495720758
Epoch Step: 215 / 819 Loss: 152.9165496826172 Tokens per Sec: 13465.838076115559
Epoch Step: 220 / 819 Loss: 32.525150299072266 Tokens per Sec: 16774.074375517775
Epoch Step: 225 / 819 Loss: 26.043710708618164 Tokens per Sec: 15710.834112763172
Epoch Step: 230 / 819 Loss: 21.72820281982422 Tokens per Sec: 13699.067411036422
Epoch Step: 235 / 819 Loss: 26.98651885986328 Tokens per Sec: 14170.613203473147
Epoch Step: 240 / 819 Loss: 22.882444381713867 Tokens per Sec: 14291.975133566079
Epoch Step: 245 / 819 Loss: 16.808473587036133 Tokens per Sec: 15499.27919420647
Epoch Step: 250 / 819 Loss: 29.116178512573242 Tokens per Sec: 13243.754473666748
Epoch Step: 255 / 819 Loss: 16.803020477294922 Tokens per Sec: 13641.465093479888
Epoch Step: 260 / 819 Loss: 27.71164321899414 Tokens per Sec: 15808.257456265925
Epoch Step: 265 / 819 Loss: 22.057186126708984 Tokens per Sec: 15557.535299112496
Epoch Step: 270 / 819 Loss: 199.23907470703125 Tokens per Sec: 14301.967388078236
Epoch Step: 275 / 819 Loss: 136.5520477294922 Tokens per Sec: 15320.553439860778
Epoch Step: 280 / 819 Loss: 18.256385803222656 Tokens per Sec: 12391.222979260738
Epoch Step: 285 / 819 Loss: 27.503231048583984 Tokens per Sec: 13504.876102592101
Epoch Step: 290 / 819 Loss: 18.881511688232422 Tokens per Sec: 12668.316417669295
Epoch Step: 295 / 819 Loss: 29.140583038330078 Tokens per Sec: 14141.91200946923
Epoch Step: 300 / 819 Loss: 129.6012725830078 Tokens per Sec: 13872.7749041951
Epoch Step: 305 / 819 Loss: 29.036781311035156 Tokens per Sec: 14953.247295530968
Epoch Step: 310 / 819 Loss: 26.857351303100586 Tokens per Sec: 14949.424744329819
Epoch Step: 315 / 819 Loss: 27.411014556884766 Tokens per Sec: 15102.92803903945
Epoch Step: 320 / 819 Loss: 23.93227767944336 Tokens per Sec: 14516.650896629126
Epoch Step: 325 / 819 Loss: 20.928558349609375 Tokens per Sec: 14387.95749538549
Epoch Step: 330 / 819 Loss: 30.173656463623047 Tokens per Sec: 13505.881495711736
Epoch Step: 335 / 819 Loss: 27.766286849975586 Tokens per Sec: 13141.636878570382
Epoch Step: 340 / 819 Loss: 27.854236602783203 Tokens per Sec: 14734.635334237699
Epoch Step: 345 / 819 Loss: 22.59072494506836 Tokens per Sec: 13274.735044319219
Epoch Step: 350 / 819 Loss: 33.24967956542969 Tokens per Sec: 15626.743886803393
Epoch Step: 355 / 819 Loss: 30.812543869018555 Tokens per Sec: 15199.554426652498
Epoch Step: 360 / 819 Loss: 21.783363342285156 Tokens per Sec: 13834.316906954762
Epoch Step: 365 / 819 Loss: 20.95627212524414 Tokens per Sec: 13294.09321463046
Epoch Step: 370 / 819 Loss: 21.60498809814453 Tokens per Sec: 14535.228809728827
Epoch Step: 375 / 819 Loss: 17.277790069580078 Tokens per Sec: 13767.80875222057
Epoch Step: 380 / 819 Loss: 18.614240646362305 Tokens per Sec: 14535.402350175305
Epoch Step: 385 / 819 Loss: 26.674650192260742 Tokens per Sec: 14134.292691791787
Epoch Step: 390 / 819 Loss: 23.830799102783203 Tokens per Sec: 14764.478590056846
Epoch Step: 395 / 819 Loss: 26.13152503967285 Tokens per Sec: 13333.541345904328
Epoch Step: 400 / 819 Loss: 32.873897552490234 Tokens per Sec: 13491.571411287909
Epoch Step: 405 / 819 Loss: 16.272581100463867 Tokens per Sec: 13468.430836207745
Epoch Step: 410 / 819 Loss: 227.050537109375 Tokens per Sec: 13236.231898511418
Epoch Step: 415 / 819 Loss: 30.552997589111328 Tokens per Sec: 12671.337349047766
Epoch Step: 420 / 819 Loss: 22.966249465942383 Tokens per Sec: 13733.991930701097
Epoch Step: 425 / 819 Loss: 18.664104461669922 Tokens per Sec: 13934.782310254988
Epoch Step: 430 / 819 Loss: 24.183378219604492 Tokens per Sec: 12192.25359820594
Epoch Step: 435 / 819 Loss: 25.49081039428711 Tokens per Sec: 12299.873563608926
Epoch Step: 440 / 819 Loss: 32.95388412475586 Tokens per Sec: 14877.811605548068
Epoch Step: 445 / 819 Loss: 34.80029296875 Tokens per Sec: 13682.31175510734
Epoch Step: 450 / 819 Loss: 214.00621032714844 Tokens per Sec: 12342.711751369203
Epoch Step: 455 / 819 Loss: 29.037797927856445 Tokens per Sec: 13262.077008741377
Epoch Step: 460 / 819 Loss: 254.4759979248047 Tokens per Sec: 15260.681899759476
Epoch Step: 465 / 819 Loss: 38.77339172363281 Tokens per Sec: 13937.461789414172
Epoch Step: 470 / 819 Loss: 30.004301071166992 Tokens per Sec: 14201.332927425105
Epoch Step: 475 / 819 Loss: 28.005821228027344 Tokens per Sec: 14456.898855371683
Epoch Step: 480 / 819 Loss: 29.189123153686523 Tokens per Sec: 15100.548753661418
Epoch Step: 485 / 819 Loss: 30.86791229248047 Tokens per Sec: 14567.553692307201
Epoch Step: 490 / 819 Loss: 30.108688354492188 Tokens per Sec: 15475.260296185716
Epoch Step: 495 / 819 Loss: 28.937028884887695 Tokens per Sec: 15257.051989520589
Epoch Step: 500 / 819 Loss: 23.268234252929688 Tokens per Sec: 14126.816497519967
Epoch Step: 505 / 819 Loss: 23.93771743774414 Tokens per Sec: 14478.031544826914
Epoch Step: 510 / 819 Loss: 29.79156494140625 Tokens per Sec: 13265.301898825172
Epoch Step: 515 / 819 Loss: 20.55002784729004 Tokens per Sec: 13581.749507516346
Epoch Step: 520 / 819 Loss: 25.256908416748047 Tokens per Sec: 16057.10549387094
Epoch Step: 525 / 819 Loss: 32.87153625488281 Tokens per Sec: 13002.753265126832
Epoch Step: 530 / 819 Loss: 37.37063217163086 Tokens per Sec: 14513.25917301881
Epoch Step: 535 / 819 Loss: 28.107036590576172 Tokens per Sec: 16120.06944729574
Epoch Step: 540 / 819 Loss: 29.405771255493164 Tokens per Sec: 12661.284786185199
Epoch Step: 545 / 819 Loss: 25.302894592285156 Tokens per Sec: 13491.154516629658
Epoch Step: 550 / 819 Loss: 29.754751205444336 Tokens per Sec: 14268.167782243185
Epoch Step: 555 / 819 Loss: 152.50054931640625 Tokens per Sec: 16047.21058379327
Epoch Step: 560 / 819 Loss: 26.697568893432617 Tokens per Sec: 15156.45729711212
Epoch Step: 565 / 819 Loss: 15.31103229522705 Tokens per Sec: 12778.268078645066
Epoch Step: 570 / 819 Loss: 28.893535614013672 Tokens per Sec: 13554.79881715305
Epoch Step: 575 / 819 Loss: 33.02728271484375 Tokens per Sec: 14183.920160265168
Epoch Step: 580 / 819 Loss: 30.5114803314209 Tokens per Sec: 12867.971603832633
Epoch Step: 585 / 819 Loss: 24.967382431030273 Tokens per Sec: 12131.999051434443
Epoch Step: 590 / 819 Loss: 39.80939865112305 Tokens per Sec: 13655.163666688912
Epoch Step: 595 / 819 Loss: 234.72830200195312 Tokens per Sec: 14180.593170732269
Epoch Step: 600 / 819 Loss: 187.65199279785156 Tokens per Sec: 12957.203142550385
Epoch Step: 605 / 819 Loss: 201.5758819580078 Tokens per Sec: 15292.850192194373
Epoch Step: 610 / 819 Loss: 25.660863876342773 Tokens per Sec: 13560.534712270259
Epoch Step: 615 / 819 Loss: 28.240995407104492 Tokens per Sec: 13983.015476693716
Epoch Step: 620 / 819 Loss: 30.277141571044922 Tokens per Sec: 13385.752678634386
Epoch Step: 625 / 819 Loss: 29.875293731689453 Tokens per Sec: 15517.098126737592
Epoch Step: 630 / 819 Loss: 24.394460678100586 Tokens per Sec: 16262.583441172468
Epoch Step: 635 / 819 Loss: 35.35247802734375 Tokens per Sec: 14103.9820930529
Epoch Step: 640 / 819 Loss: 32.35033416748047 Tokens per Sec: 13019.70682948489
Epoch Step: 645 / 819 Loss: 28.7718505859375 Tokens per Sec: 14438.482751019148
Epoch Step: 650 / 819 Loss: 23.342182159423828 Tokens per Sec: 14862.919288200812
Epoch Step: 655 / 819 Loss: 24.22113609313965 Tokens per Sec: 13486.261063043787
Epoch Step: 660 / 819 Loss: 20.061086654663086 Tokens per Sec: 12561.425792801192
Epoch Step: 665 / 819 Loss: 21.489017486572266 Tokens per Sec: 12942.678848781361
Epoch Step: 670 / 819 Loss: 32.371524810791016 Tokens per Sec: 13858.055562100848
Epoch Step: 675 / 819 Loss: 23.174636840820312 Tokens per Sec: 12863.343866926825
Epoch Step: 680 / 819 Loss: 29.242692947387695 Tokens per Sec: 12659.990656685139
Epoch Step: 685 / 819 Loss: 18.3951473236084 Tokens per Sec: 14168.918286292954
Epoch Step: 690 / 819 Loss: 18.372926712036133 Tokens per Sec: 12757.588426488983
Epoch Step: 695 / 819 Loss: 27.264705657958984 Tokens per Sec: 13653.610789567017
Epoch Step: 700 / 819 Loss: 28.40854835510254 Tokens per Sec: 14482.87362037624
Epoch Step: 705 / 819 Loss: 25.62617301940918 Tokens per Sec: 13994.305483376804
Epoch Step: 710 / 819 Loss: 22.634077072143555 Tokens per Sec: 13745.216301573922
Epoch Step: 715 / 819 Loss: 26.372596740722656 Tokens per Sec: 14589.87306103658
Epoch Step: 720 / 819 Loss: 20.39629364013672 Tokens per Sec: 13736.397075582516
Epoch Step: 725 / 819 Loss: 17.761356353759766 Tokens per Sec: 11585.406278959143
Epoch Step: 730 / 819 Loss: 26.833158493041992 Tokens per Sec: 14505.631128436742
Epoch Step: 735 / 819 Loss: 26.232271194458008 Tokens per Sec: 11839.554268855707
Epoch Step: 740 / 819 Loss: 18.974517822265625 Tokens per Sec: 13228.203397055537
Epoch Step: 745 / 819 Loss: 24.763744354248047 Tokens per Sec: 13785.994690792284
Epoch Step: 750 / 819 Loss: 24.520328521728516 Tokens per Sec: 13738.30965062826
Epoch Step: 755 / 819 Loss: 21.31418800354004 Tokens per Sec: 14238.672738443987
Epoch Step: 760 / 819 Loss: 30.536785125732422 Tokens per Sec: 12516.012125962381
Epoch Step: 765 / 819 Loss: 20.324722290039062 Tokens per Sec: 13082.345773418076
Epoch Step: 770 / 819 Loss: 24.073110580444336 Tokens per Sec: 13879.44382083084
Epoch Step: 775 / 819 Loss: 21.685880661010742 Tokens per Sec: 13865.925421677552
Epoch Step: 780 / 819 Loss: 28.94078826904297 Tokens per Sec: 14463.977852053156
Epoch Step: 785 / 819 Loss: 29.160585403442383 Tokens per Sec: 14740.154518751015
Epoch Step: 790 / 819 Loss: 22.62228012084961 Tokens per Sec: 14186.098800061509
Epoch Step: 795 / 819 Loss: 18.908279418945312 Tokens per Sec: 14290.95449870744
Epoch Step: 800 / 819 Loss: 268.1673583984375 Tokens per Sec: 13530.294674139719
Epoch Step: 805 / 819 Loss: 20.19227409362793 Tokens per Sec: 10511.789324235162
Epoch Step: 810 / 819 Loss: 27.725019454956055 Tokens per Sec: 11958.879900692524
Epoch Step: 815 / 819 Loss: 29.3669490814209 Tokens per Sec: 13529.509577669678
Epoch ended with duration 0:04:40.068138
Train perplexity: 1.802207314611679
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.944860
Validation perplexity: 1.762160432369135
Model saved best_on_validation!
Model saved checkpoint!
Epoch 11 / 1000
Epoch Step: 5 / 819 Loss: 29.138065338134766 Tokens per Sec: 13767.08920365402
Epoch Step: 10 / 819 Loss: 16.92430877685547 Tokens per Sec: 13277.97010806255
Epoch Step: 15 / 819 Loss: 32.821510314941406 Tokens per Sec: 14128.295460019408
Epoch Step: 20 / 819 Loss: 211.12677001953125 Tokens per Sec: 13182.512955421262
Epoch Step: 25 / 819 Loss: 28.112695693969727 Tokens per Sec: 13491.768785887849
Epoch Step: 30 / 819 Loss: 20.847553253173828 Tokens per Sec: 13644.941451112172
Epoch Step: 35 / 819 Loss: 29.25214958190918 Tokens per Sec: 13918.225113392004
Epoch Step: 40 / 819 Loss: 271.2893981933594 Tokens per Sec: 13116.519081472321
Epoch Step: 45 / 819 Loss: 27.9161319732666 Tokens per Sec: 13556.832129146547
Epoch Step: 50 / 819 Loss: 29.93766975402832 Tokens per Sec: 14035.491389734087
Epoch Step: 55 / 819 Loss: 26.426054000854492 Tokens per Sec: 13334.088050538625
Epoch Step: 60 / 819 Loss: 36.1627082824707 Tokens per Sec: 14555.183085737379
Epoch Step: 65 / 819 Loss: 23.46550750732422 Tokens per Sec: 14776.67008765262
Epoch Step: 70 / 819 Loss: 30.30025863647461 Tokens per Sec: 15031.82550811743
Epoch Step: 75 / 819 Loss: 28.291658401489258 Tokens per Sec: 14899.140577179396
Epoch Step: 80 / 819 Loss: 18.9483642578125 Tokens per Sec: 13420.702668172804
Epoch Step: 85 / 819 Loss: 266.2027893066406 Tokens per Sec: 14264.772334744683
Epoch Step: 90 / 819 Loss: 28.501392364501953 Tokens per Sec: 15569.76685669022
Epoch Step: 95 / 819 Loss: 18.99382209777832 Tokens per Sec: 13831.099296061497
Epoch Step: 100 / 819 Loss: 18.31865692138672 Tokens per Sec: 15582.715714177299
Epoch Step: 105 / 819 Loss: 30.342588424682617 Tokens per Sec: 13807.883470741344
Epoch Step: 110 / 819 Loss: 145.11328125 Tokens per Sec: 12204.97498334197
Epoch Step: 115 / 819 Loss: 21.36818504333496 Tokens per Sec: 13706.263375956585
Epoch Step: 120 / 819 Loss: 20.861574172973633 Tokens per Sec: 14736.683936798583
Epoch Step: 125 / 819 Loss: 25.37786865234375 Tokens per Sec: 12921.254884525444
Epoch Step: 130 / 819 Loss: 29.86910629272461 Tokens per Sec: 14504.78873022171
Epoch Step: 135 / 819 Loss: 23.233314514160156 Tokens per Sec: 13578.121171696019
Epoch Step: 140 / 819 Loss: 29.44504737854004 Tokens per Sec: 13106.336636190215
Epoch Step: 145 / 819 Loss: 27.317829132080078 Tokens per Sec: 13798.69847995119
Epoch Step: 150 / 819 Loss: 199.39271545410156 Tokens per Sec: 15146.394258217942
Epoch Step: 155 / 819 Loss: 30.191091537475586 Tokens per Sec: 13380.272226802917
Epoch Step: 160 / 819 Loss: 211.92123413085938 Tokens per Sec: 12641.98570838566
Epoch Step: 165 / 819 Loss: 27.761947631835938 Tokens per Sec: 14160.558824736983
Epoch Step: 170 / 819 Loss: 21.785266876220703 Tokens per Sec: 13695.84468885337
Epoch Step: 175 / 819 Loss: 24.35535430908203 Tokens per Sec: 12307.972024305995
Epoch Step: 180 / 819 Loss: 20.910314559936523 Tokens per Sec: 14486.224267617588
Epoch Step: 185 / 819 Loss: 27.398956298828125 Tokens per Sec: 14124.21394238443
Epoch Step: 190 / 819 Loss: 24.562868118286133 Tokens per Sec: 14553.062728476514
Epoch Step: 195 / 819 Loss: 32.48488998413086 Tokens per Sec: 13689.43484591966
Epoch Step: 200 / 819 Loss: 26.336624145507812 Tokens per Sec: 13563.144519334563
Epoch Step: 205 / 819 Loss: 17.937084197998047 Tokens per Sec: 13395.148918827275
Epoch Step: 210 / 819 Loss: 197.77597045898438 Tokens per Sec: 11615.017383852684
Epoch Step: 215 / 819 Loss: 25.304399490356445 Tokens per Sec: 13068.560957674328
Epoch Step: 220 / 819 Loss: 25.145296096801758 Tokens per Sec: 13290.824824944317
Epoch Step: 225 / 819 Loss: 21.83587646484375 Tokens per Sec: 13546.590810814048
Epoch Step: 230 / 819 Loss: 16.59296417236328 Tokens per Sec: 14359.117242065606
Epoch Step: 235 / 819 Loss: 27.098846435546875 Tokens per Sec: 13411.661044361123
Epoch Step: 240 / 819 Loss: 30.791454315185547 Tokens per Sec: 16155.084624509636
Epoch Step: 245 / 819 Loss: 19.49761199951172 Tokens per Sec: 13371.369445459288
Epoch Step: 250 / 819 Loss: 24.377635955810547 Tokens per Sec: 13936.054748000104
Epoch Step: 255 / 819 Loss: 19.987295150756836 Tokens per Sec: 14467.591724212853
Epoch Step: 260 / 819 Loss: 16.562374114990234 Tokens per Sec: 14744.904999099515
Epoch Step: 265 / 819 Loss: 24.34834861755371 Tokens per Sec: 14341.912165597614
Epoch Step: 270 / 819 Loss: 153.71240234375 Tokens per Sec: 12538.492055217384
Epoch Step: 275 / 819 Loss: 27.066877365112305 Tokens per Sec: 14598.7280601675
Epoch Step: 280 / 819 Loss: 24.915302276611328 Tokens per Sec: 16241.276229541714
Epoch Step: 285 / 819 Loss: 21.147661209106445 Tokens per Sec: 14660.024656659903
Epoch Step: 290 / 819 Loss: 29.84383773803711 Tokens per Sec: 13188.412465751178
Epoch Step: 295 / 819 Loss: 18.652429580688477 Tokens per Sec: 14205.416779032395
Epoch Step: 300 / 819 Loss: 23.8552303314209 Tokens per Sec: 14898.191419043093
Epoch Step: 305 / 819 Loss: 17.35679054260254 Tokens per Sec: 13778.069979086355
Epoch Step: 310 / 819 Loss: 235.06954956054688 Tokens per Sec: 15576.155605397655
Epoch Step: 315 / 819 Loss: 19.4748477935791 Tokens per Sec: 13001.709508221042
Epoch Step: 320 / 819 Loss: 28.7758846282959 Tokens per Sec: 13700.786244190655
Epoch Step: 325 / 819 Loss: 24.994657516479492 Tokens per Sec: 13729.198320925309
Epoch Step: 330 / 819 Loss: 26.210119247436523 Tokens per Sec: 13691.506391838495
Epoch Step: 335 / 819 Loss: 30.532060623168945 Tokens per Sec: 12807.717111516624
Epoch Step: 340 / 819 Loss: 24.214580535888672 Tokens per Sec: 13931.745786419711
Epoch Step: 345 / 819 Loss: 25.51412582397461 Tokens per Sec: 13640.173159489292
Epoch Step: 350 / 819 Loss: 32.636409759521484 Tokens per Sec: 12924.706064811553
Epoch Step: 355 / 819 Loss: 20.063331604003906 Tokens per Sec: 15555.444685939907
Epoch Step: 360 / 819 Loss: 29.54142189025879 Tokens per Sec: 13545.765199496156
Epoch Step: 365 / 819 Loss: 29.458452224731445 Tokens per Sec: 16703.45103815976
Epoch Step: 370 / 819 Loss: 30.381587982177734 Tokens per Sec: 12658.657813766613
Epoch Step: 375 / 819 Loss: 22.9303035736084 Tokens per Sec: 14502.511516261231
Epoch Step: 380 / 819 Loss: 32.935791015625 Tokens per Sec: 13025.452314890521
Epoch Step: 385 / 819 Loss: 29.813690185546875 Tokens per Sec: 14090.484398115546
Epoch Step: 390 / 819 Loss: 36.36050033569336 Tokens per Sec: 14140.436602214175
Epoch Step: 395 / 819 Loss: 18.017362594604492 Tokens per Sec: 13511.041396857983
Epoch Step: 400 / 819 Loss: 31.70221519470215 Tokens per Sec: 13360.114960948224
Epoch Step: 405 / 819 Loss: 25.171554565429688 Tokens per Sec: 13283.419082334647
Epoch Step: 410 / 819 Loss: 24.621196746826172 Tokens per Sec: 13300.093342200482
Epoch Step: 415 / 819 Loss: 25.74763298034668 Tokens per Sec: 13720.306406973328
Epoch Step: 420 / 819 Loss: 28.785280227661133 Tokens per Sec: 14274.929266890425
Epoch Step: 425 / 819 Loss: 25.081817626953125 Tokens per Sec: 12885.525940027033
Epoch Step: 430 / 819 Loss: 22.690597534179688 Tokens per Sec: 13695.77081847342
Epoch Step: 435 / 819 Loss: 29.969131469726562 Tokens per Sec: 14957.030511695444
Epoch Step: 440 / 819 Loss: 157.76849365234375 Tokens per Sec: 13890.260699297072
Epoch Step: 445 / 819 Loss: 31.64112663269043 Tokens per Sec: 12425.488832760235
Epoch Step: 450 / 819 Loss: 29.453277587890625 Tokens per Sec: 12946.853781650265
Epoch Step: 455 / 819 Loss: 30.00432014465332 Tokens per Sec: 13466.45803279795
Epoch Step: 460 / 819 Loss: 27.92039680480957 Tokens per Sec: 13951.65777721634
Epoch Step: 465 / 819 Loss: 31.17560386657715 Tokens per Sec: 14726.913330566123
Epoch Step: 470 / 819 Loss: 201.35183715820312 Tokens per Sec: 13800.393240775325
Epoch Step: 475 / 819 Loss: 21.882041931152344 Tokens per Sec: 15519.692010905314
Epoch Step: 480 / 819 Loss: 23.451950073242188 Tokens per Sec: 13529.72358401479
Epoch Step: 485 / 819 Loss: 29.006643295288086 Tokens per Sec: 14356.562785239275
Epoch Step: 490 / 819 Loss: 197.6025390625 Tokens per Sec: 15346.176059407073
Epoch Step: 495 / 819 Loss: 17.69413185119629 Tokens per Sec: 13343.48041317372
Epoch Step: 500 / 819 Loss: 30.716323852539062 Tokens per Sec: 15330.287748790113
Epoch Step: 505 / 819 Loss: 26.256601333618164 Tokens per Sec: 12072.429158432122
Epoch Step: 510 / 819 Loss: 29.40756607055664 Tokens per Sec: 15801.109171125505
Epoch Step: 515 / 819 Loss: 23.75407600402832 Tokens per Sec: 12650.09345055259
Epoch Step: 520 / 819 Loss: 17.4329776763916 Tokens per Sec: 13545.53098175492
Epoch Step: 525 / 819 Loss: 202.60308837890625 Tokens per Sec: 14407.702046047169
Epoch Step: 530 / 819 Loss: 15.712693214416504 Tokens per Sec: 14136.498315025032
Epoch Step: 535 / 819 Loss: 27.251935958862305 Tokens per Sec: 13828.609285808468
Epoch Step: 540 / 819 Loss: 24.191104888916016 Tokens per Sec: 14987.366632932113
Epoch Step: 545 / 819 Loss: 21.35710334777832 Tokens per Sec: 14274.621171609602
Epoch Step: 550 / 819 Loss: 22.46895980834961 Tokens per Sec: 13521.99149941501
Epoch Step: 555 / 819 Loss: 19.106834411621094 Tokens per Sec: 14020.086429803958
Epoch Step: 560 / 819 Loss: 27.440860748291016 Tokens per Sec: 12882.88888920189
Epoch Step: 565 / 819 Loss: 167.19091796875 Tokens per Sec: 12870.946999089136
Epoch Step: 570 / 819 Loss: 29.162704467773438 Tokens per Sec: 14189.386524559017
Epoch Step: 575 / 819 Loss: 197.6447296142578 Tokens per Sec: 13929.707528210522
Epoch Step: 580 / 819 Loss: 158.53692626953125 Tokens per Sec: 14827.998026269634
Epoch Step: 585 / 819 Loss: 19.6922664642334 Tokens per Sec: 13620.308780211299
Epoch Step: 590 / 819 Loss: 25.03639793395996 Tokens per Sec: 13864.208238378218
Epoch Step: 595 / 819 Loss: 26.69373893737793 Tokens per Sec: 15378.618819287823
Epoch Step: 600 / 819 Loss: 24.5743408203125 Tokens per Sec: 12475.015019932925
Epoch Step: 605 / 819 Loss: 25.614463806152344 Tokens per Sec: 14463.561045032118
Epoch Step: 610 / 819 Loss: 122.88290405273438 Tokens per Sec: 14323.771425175237
Epoch Step: 615 / 819 Loss: 29.18656349182129 Tokens per Sec: 15128.547646095278
Epoch Step: 620 / 819 Loss: 20.62151527404785 Tokens per Sec: 12783.642313164237
Epoch Step: 625 / 819 Loss: 20.214988708496094 Tokens per Sec: 12929.809230162145
Epoch Step: 630 / 819 Loss: 27.78402328491211 Tokens per Sec: 14461.276280891318
Epoch Step: 635 / 819 Loss: 24.361270904541016 Tokens per Sec: 13661.29170817071
Epoch Step: 640 / 819 Loss: 23.909944534301758 Tokens per Sec: 13471.598935525697
Epoch Step: 645 / 819 Loss: 32.94830322265625 Tokens per Sec: 14246.367425484455
Epoch Step: 650 / 819 Loss: 21.85433578491211 Tokens per Sec: 14492.359983142524
Epoch Step: 655 / 819 Loss: 28.34532928466797 Tokens per Sec: 13336.027760292038
Epoch Step: 660 / 819 Loss: 29.111003875732422 Tokens per Sec: 14870.686892302429
Epoch Step: 665 / 819 Loss: 23.50594711303711 Tokens per Sec: 12278.141879410121
Epoch Step: 670 / 819 Loss: 20.04202651977539 Tokens per Sec: 15161.255172126153
Epoch Step: 675 / 819 Loss: 35.5311164855957 Tokens per Sec: 13964.527708525187
Epoch Step: 680 / 819 Loss: 32.8130989074707 Tokens per Sec: 12251.377971336478
Epoch Step: 685 / 819 Loss: 29.469045639038086 Tokens per Sec: 13988.540043440591
Epoch Step: 690 / 819 Loss: 28.817102432250977 Tokens per Sec: 13872.014511058678
Epoch Step: 695 / 819 Loss: 28.03327178955078 Tokens per Sec: 12580.48339283144
Epoch Step: 700 / 819 Loss: 27.628915786743164 Tokens per Sec: 14197.973431190345
Epoch Step: 705 / 819 Loss: 23.032934188842773 Tokens per Sec: 14320.662290275824
Epoch Step: 710 / 819 Loss: 26.613330841064453 Tokens per Sec: 14667.6594205121
Epoch Step: 715 / 819 Loss: 236.47825622558594 Tokens per Sec: 13099.220508657867
Epoch Step: 720 / 819 Loss: 30.9468936920166 Tokens per Sec: 13230.896236791632
Epoch Step: 725 / 819 Loss: 29.231889724731445 Tokens per Sec: 11964.055448818212
Epoch Step: 730 / 819 Loss: 20.579526901245117 Tokens per Sec: 13340.583111826969
Epoch Step: 735 / 819 Loss: 26.795530319213867 Tokens per Sec: 15222.200348896435
Epoch Step: 740 / 819 Loss: 27.66071891784668 Tokens per Sec: 13332.712874621822
Epoch Step: 745 / 819 Loss: 19.30629539489746 Tokens per Sec: 13081.803629506381
Epoch Step: 750 / 819 Loss: 25.199459075927734 Tokens per Sec: 13951.210524272643
Epoch Step: 755 / 819 Loss: 31.482973098754883 Tokens per Sec: 14541.505158987822
Epoch Step: 760 / 819 Loss: 259.291259765625 Tokens per Sec: 15559.171078677695
Epoch Step: 765 / 819 Loss: 25.033510208129883 Tokens per Sec: 15385.96447539841
Epoch Step: 770 / 819 Loss: 28.207876205444336 Tokens per Sec: 13063.735271366137
Epoch Step: 775 / 819 Loss: 24.83234977722168 Tokens per Sec: 14046.309287641474
Epoch Step: 780 / 819 Loss: 23.19341278076172 Tokens per Sec: 12169.640487855006
Epoch Step: 785 / 819 Loss: 24.250743865966797 Tokens per Sec: 13056.152545635787
Epoch Step: 790 / 819 Loss: 17.586048126220703 Tokens per Sec: 13443.084713139806
Epoch Step: 795 / 819 Loss: 25.8966121673584 Tokens per Sec: 14358.974819490226
Epoch Step: 800 / 819 Loss: 157.20347595214844 Tokens per Sec: 13410.708760946105
Epoch Step: 805 / 819 Loss: 28.94990348815918 Tokens per Sec: 14651.503097572106
Epoch Step: 810 / 819 Loss: 27.924816131591797 Tokens per Sec: 13839.446332569805
Epoch Step: 815 / 819 Loss: 27.950590133666992 Tokens per Sec: 11957.990565036709
Epoch ended with duration 0:04:40.655130
Train perplexity: 1.8337634165426693
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.288207
Validation perplexity: 1.6891066015667746
Model saved best_on_validation!
Epoch 12 / 1000
Epoch Step: 5 / 819 Loss: 103.45626831054688 Tokens per Sec: 12860.704560433584
Epoch Step: 10 / 819 Loss: 18.618844985961914 Tokens per Sec: 15518.347620764422
Epoch Step: 15 / 819 Loss: 27.18885040283203 Tokens per Sec: 12655.575061048517
Epoch Step: 20 / 819 Loss: 26.00189208984375 Tokens per Sec: 13382.71688825979
Epoch Step: 25 / 819 Loss: 200.8042755126953 Tokens per Sec: 13608.172614491032
Epoch Step: 30 / 819 Loss: 28.67251968383789 Tokens per Sec: 12670.690741422932
Epoch Step: 35 / 819 Loss: 31.46143913269043 Tokens per Sec: 14446.77665924639
Epoch Step: 40 / 819 Loss: 24.827295303344727 Tokens per Sec: 16228.821074407793
Epoch Step: 45 / 819 Loss: 27.427581787109375 Tokens per Sec: 13898.49134204205
Epoch Step: 50 / 819 Loss: 22.979780197143555 Tokens per Sec: 12850.28505359805
Epoch Step: 55 / 819 Loss: 27.782426834106445 Tokens per Sec: 14829.183827403645
Epoch Step: 60 / 819 Loss: 275.3130798339844 Tokens per Sec: 12938.772906241074
Epoch Step: 65 / 819 Loss: 22.901926040649414 Tokens per Sec: 13517.955139949021
Epoch Step: 70 / 819 Loss: 19.195100784301758 Tokens per Sec: 12163.414384914598
Epoch Step: 75 / 819 Loss: 22.48508644104004 Tokens per Sec: 13758.231306707528
Epoch Step: 80 / 819 Loss: 25.10117530822754 Tokens per Sec: 16064.994843080975
Epoch Step: 85 / 819 Loss: 25.713443756103516 Tokens per Sec: 15472.350295523458
Epoch Step: 90 / 819 Loss: 16.34575843811035 Tokens per Sec: 12467.382135438125
Epoch Step: 95 / 819 Loss: 24.13663101196289 Tokens per Sec: 13873.169617148229
Epoch Step: 100 / 819 Loss: 26.19599151611328 Tokens per Sec: 14347.508204090807
Epoch Step: 105 / 819 Loss: 16.864151000976562 Tokens per Sec: 14426.135642583833
Epoch Step: 110 / 819 Loss: 21.630699157714844 Tokens per Sec: 13713.000206673742
Epoch Step: 115 / 819 Loss: 13.328511238098145 Tokens per Sec: 14714.072607721935
Epoch Step: 120 / 819 Loss: 23.94550895690918 Tokens per Sec: 16404.621355772833
Epoch Step: 125 / 819 Loss: 21.47188377380371 Tokens per Sec: 15386.690311422046
Epoch Step: 130 / 819 Loss: 21.82374382019043 Tokens per Sec: 14071.880997142838
Epoch Step: 135 / 819 Loss: 23.210201263427734 Tokens per Sec: 13390.870888694415
Epoch Step: 140 / 819 Loss: 17.56548309326172 Tokens per Sec: 14461.533980596905
Epoch Step: 145 / 819 Loss: 25.604372024536133 Tokens per Sec: 14723.131537438803
Epoch Step: 150 / 819 Loss: 24.47113037109375 Tokens per Sec: 13922.805062092535
Epoch Step: 155 / 819 Loss: 23.219240188598633 Tokens per Sec: 16138.570812370537
Epoch Step: 160 / 819 Loss: 21.556644439697266 Tokens per Sec: 14537.93654144352
Epoch Step: 165 / 819 Loss: 19.811817169189453 Tokens per Sec: 12662.319415556123
Epoch Step: 170 / 819 Loss: 22.90522575378418 Tokens per Sec: 13256.347621587398
Epoch Step: 175 / 819 Loss: 18.276165008544922 Tokens per Sec: 13120.057047519067
Epoch Step: 180 / 819 Loss: 27.766677856445312 Tokens per Sec: 14109.620240089182
Epoch Step: 185 / 819 Loss: 15.090703010559082 Tokens per Sec: 13308.130430091389
Epoch Step: 190 / 819 Loss: 22.649763107299805 Tokens per Sec: 12647.609018537969
Epoch Step: 195 / 819 Loss: 14.19725227355957 Tokens per Sec: 13727.617666185162
Epoch Step: 200 / 819 Loss: 18.551025390625 Tokens per Sec: 13922.62978228104
Epoch Step: 205 / 819 Loss: 188.0098114013672 Tokens per Sec: 13356.704223566203
Epoch Step: 210 / 819 Loss: 23.3365478515625 Tokens per Sec: 14573.512270782814
Epoch Step: 215 / 819 Loss: 19.427248001098633 Tokens per Sec: 14497.179400681858
Epoch Step: 220 / 819 Loss: 24.567846298217773 Tokens per Sec: 14095.003577527248
Epoch Step: 225 / 819 Loss: 24.211408615112305 Tokens per Sec: 15249.601050629135
Epoch Step: 230 / 819 Loss: 26.91731071472168 Tokens per Sec: 12896.904408787548
Epoch Step: 235 / 819 Loss: 156.89215087890625 Tokens per Sec: 15256.709787398786
Epoch Step: 240 / 819 Loss: 25.935510635375977 Tokens per Sec: 12796.468490679157
Epoch Step: 245 / 819 Loss: 28.372600555419922 Tokens per Sec: 14465.820901157702
Epoch Step: 250 / 819 Loss: 26.907840728759766 Tokens per Sec: 13222.858924264585
Epoch Step: 255 / 819 Loss: 25.64093589782715 Tokens per Sec: 13331.521925184283
Epoch Step: 260 / 819 Loss: 234.453125 Tokens per Sec: 13210.21157361153
Epoch Step: 265 / 819 Loss: 273.79827880859375 Tokens per Sec: 14415.173702465498
Epoch Step: 270 / 819 Loss: 17.20999526977539 Tokens per Sec: 13700.646430719093
Epoch Step: 275 / 819 Loss: 31.524404525756836 Tokens per Sec: 13906.550974504304
Epoch Step: 280 / 819 Loss: 18.100345611572266 Tokens per Sec: 13016.925496603553
Epoch Step: 285 / 819 Loss: 22.762298583984375 Tokens per Sec: 13466.26921661942
Epoch Step: 290 / 819 Loss: 17.3914737701416 Tokens per Sec: 13012.263326016699
Epoch Step: 295 / 819 Loss: 29.69119644165039 Tokens per Sec: 15331.642448027658
Epoch Step: 300 / 819 Loss: 24.256620407104492 Tokens per Sec: 14470.920612522319
Epoch Step: 305 / 819 Loss: 26.749425888061523 Tokens per Sec: 13057.843142318441
Epoch Step: 310 / 819 Loss: 17.781391143798828 Tokens per Sec: 13458.769014336467
Epoch Step: 315 / 819 Loss: 29.00179672241211 Tokens per Sec: 14629.178269365402
Epoch Step: 320 / 819 Loss: 28.36310386657715 Tokens per Sec: 13894.07416274259
Epoch Step: 325 / 819 Loss: 189.02598571777344 Tokens per Sec: 14163.654660677113
Epoch Step: 330 / 819 Loss: 250.4030303955078 Tokens per Sec: 14855.806779953724
Epoch Step: 335 / 819 Loss: 25.389535903930664 Tokens per Sec: 13837.100303689911
Epoch Step: 340 / 819 Loss: 30.964599609375 Tokens per Sec: 14875.26255205482
Epoch Step: 345 / 819 Loss: 259.26141357421875 Tokens per Sec: 13281.655449522852
Epoch Step: 350 / 819 Loss: 23.077190399169922 Tokens per Sec: 14322.198883086168
Epoch Step: 355 / 819 Loss: 24.522192001342773 Tokens per Sec: 14000.848009030964
Epoch Step: 360 / 819 Loss: 36.011985778808594 Tokens per Sec: 12547.423169534042
Epoch Step: 365 / 819 Loss: 29.668760299682617 Tokens per Sec: 13622.237529645881
Epoch Step: 370 / 819 Loss: 25.320995330810547 Tokens per Sec: 13652.1028927395
Epoch Step: 375 / 819 Loss: 28.162864685058594 Tokens per Sec: 12687.824188903953
Epoch Step: 380 / 819 Loss: 29.36941909790039 Tokens per Sec: 13746.281578821188
Epoch Step: 385 / 819 Loss: 29.057674407958984 Tokens per Sec: 13813.109935651266
Epoch Step: 390 / 819 Loss: 25.254901885986328 Tokens per Sec: 13833.8679038612
Epoch Step: 395 / 819 Loss: 23.80067253112793 Tokens per Sec: 12698.753925797151
Epoch Step: 400 / 819 Loss: 25.576745986938477 Tokens per Sec: 16192.699993371274
Epoch Step: 405 / 819 Loss: 24.549598693847656 Tokens per Sec: 13614.458901626913
Epoch Step: 410 / 819 Loss: 27.930978775024414 Tokens per Sec: 14880.149512550743
Epoch Step: 415 / 819 Loss: 20.75196075439453 Tokens per Sec: 14417.99056929829
Epoch Step: 420 / 819 Loss: 23.956134796142578 Tokens per Sec: 14177.358655684997
Epoch Step: 425 / 819 Loss: 27.842182159423828 Tokens per Sec: 14168.08242198707
Epoch Step: 430 / 819 Loss: 26.23892593383789 Tokens per Sec: 13246.074022182293
Epoch Step: 435 / 819 Loss: 27.16939926147461 Tokens per Sec: 14318.770959964579
Epoch Step: 440 / 819 Loss: 21.09449005126953 Tokens per Sec: 14988.42865052056
Epoch Step: 445 / 819 Loss: 16.56148910522461 Tokens per Sec: 15534.427686700135
Epoch Step: 450 / 819 Loss: 18.919038772583008 Tokens per Sec: 13595.235777599182
Epoch Step: 455 / 819 Loss: 29.10457992553711 Tokens per Sec: 14322.463318535521
Epoch Step: 460 / 819 Loss: 28.39113998413086 Tokens per Sec: 14731.62559480645
Epoch Step: 465 / 819 Loss: 18.290639877319336 Tokens per Sec: 13417.306279508897
Epoch Step: 470 / 819 Loss: 23.533708572387695 Tokens per Sec: 13816.813984653063
Epoch Step: 475 / 819 Loss: 29.64036750793457 Tokens per Sec: 13616.33768864376
Epoch Step: 480 / 819 Loss: 29.75755500793457 Tokens per Sec: 13487.661200909839
Epoch Step: 485 / 819 Loss: 22.626928329467773 Tokens per Sec: 13539.413662229053
Epoch Step: 490 / 819 Loss: 30.071718215942383 Tokens per Sec: 12301.986747184155
Epoch Step: 495 / 819 Loss: 18.294891357421875 Tokens per Sec: 13091.496867888405
Epoch Step: 500 / 819 Loss: 175.12611389160156 Tokens per Sec: 14427.672508907244
Epoch Step: 505 / 819 Loss: 30.99894905090332 Tokens per Sec: 14568.217494524806
Epoch Step: 510 / 819 Loss: 24.632314682006836 Tokens per Sec: 14841.412305609752
Epoch Step: 515 / 819 Loss: 248.4525604248047 Tokens per Sec: 13279.05299412729
Epoch Step: 520 / 819 Loss: 24.581485748291016 Tokens per Sec: 14926.135066737568
Epoch Step: 525 / 819 Loss: 28.73581314086914 Tokens per Sec: 14349.611518034711
Epoch Step: 530 / 819 Loss: 18.159805297851562 Tokens per Sec: 13855.539823742676
Epoch Step: 535 / 819 Loss: 27.364103317260742 Tokens per Sec: 14435.550437545575
Epoch Step: 540 / 819 Loss: 21.467243194580078 Tokens per Sec: 14815.072914938897
Epoch Step: 545 / 819 Loss: 25.865062713623047 Tokens per Sec: 14826.503008293426
Epoch Step: 550 / 819 Loss: 22.790515899658203 Tokens per Sec: 12881.372428916808
Epoch Step: 555 / 819 Loss: 21.731372833251953 Tokens per Sec: 13223.881834946986
Epoch Step: 560 / 819 Loss: 18.3142032623291 Tokens per Sec: 13879.01872058485
Epoch Step: 565 / 819 Loss: 122.16343688964844 Tokens per Sec: 14357.214177278565
Epoch Step: 570 / 819 Loss: 30.284442901611328 Tokens per Sec: 13316.742773408972
Epoch Step: 575 / 819 Loss: 29.985136032104492 Tokens per Sec: 12937.745492144415
Epoch Step: 580 / 819 Loss: 26.942127227783203 Tokens per Sec: 13557.016617327281
Epoch Step: 585 / 819 Loss: 20.436582565307617 Tokens per Sec: 13127.395782946782
Epoch Step: 590 / 819 Loss: 30.909008026123047 Tokens per Sec: 14787.338285884955
Epoch Step: 595 / 819 Loss: 26.580638885498047 Tokens per Sec: 13721.917959791628
Epoch Step: 600 / 819 Loss: 19.50688362121582 Tokens per Sec: 15526.300746797062
Epoch Step: 605 / 819 Loss: 18.415136337280273 Tokens per Sec: 13144.487333660223
Epoch Step: 610 / 819 Loss: 29.047687530517578 Tokens per Sec: 12625.817452418698
Epoch Step: 615 / 819 Loss: 24.074230194091797 Tokens per Sec: 12682.303063996033
Epoch Step: 620 / 819 Loss: 25.157546997070312 Tokens per Sec: 13747.69519803133
Epoch Step: 625 / 819 Loss: 26.944971084594727 Tokens per Sec: 13357.354265343638
Epoch Step: 630 / 819 Loss: 24.592275619506836 Tokens per Sec: 14808.147381123421
Epoch Step: 635 / 819 Loss: 25.906057357788086 Tokens per Sec: 13716.408807446616
Epoch Step: 640 / 819 Loss: 28.66114616394043 Tokens per Sec: 13981.170379302583
Epoch Step: 645 / 819 Loss: 20.982057571411133 Tokens per Sec: 13292.297763842138
Epoch Step: 650 / 819 Loss: 125.99288940429688 Tokens per Sec: 16134.68477891726
Epoch Step: 655 / 819 Loss: 22.8055419921875 Tokens per Sec: 13081.392566276038
Epoch Step: 660 / 819 Loss: 23.7242431640625 Tokens per Sec: 13359.097860116912
Epoch Step: 665 / 819 Loss: 15.255517959594727 Tokens per Sec: 13619.058537219898
Epoch Step: 670 / 819 Loss: 24.10895347595215 Tokens per Sec: 15010.338536532252
Epoch Step: 675 / 819 Loss: 20.17357635498047 Tokens per Sec: 14311.381850726772
Epoch Step: 680 / 819 Loss: 23.878812789916992 Tokens per Sec: 14580.583597490811
Epoch Step: 685 / 819 Loss: 19.62163543701172 Tokens per Sec: 14845.660742388949
Epoch Step: 690 / 819 Loss: 31.05008316040039 Tokens per Sec: 13843.726845682007
Epoch Step: 695 / 819 Loss: 23.03803062438965 Tokens per Sec: 14079.797770084724
Epoch Step: 700 / 819 Loss: 28.55605697631836 Tokens per Sec: 13173.055339267748
Epoch Step: 705 / 819 Loss: 25.1971492767334 Tokens per Sec: 13255.566085994255
Epoch Step: 710 / 819 Loss: 27.917095184326172 Tokens per Sec: 12672.623546163792
Epoch Step: 715 / 819 Loss: 22.82565689086914 Tokens per Sec: 16215.385981813468
Epoch Step: 720 / 819 Loss: 20.407297134399414 Tokens per Sec: 14984.631016462246
Epoch Step: 725 / 819 Loss: 27.941980361938477 Tokens per Sec: 15354.54916489266
Epoch Step: 730 / 819 Loss: 16.714906692504883 Tokens per Sec: 13126.703097837168
Epoch Step: 735 / 819 Loss: 20.629749298095703 Tokens per Sec: 14211.418044437685
Epoch Step: 740 / 819 Loss: 19.273679733276367 Tokens per Sec: 14044.098813555624
Epoch Step: 745 / 819 Loss: 15.700121879577637 Tokens per Sec: 13322.12696659614
Epoch Step: 750 / 819 Loss: 22.261009216308594 Tokens per Sec: 15319.611300758548
Epoch Step: 755 / 819 Loss: 162.0994415283203 Tokens per Sec: 13121.613109905626
Epoch Step: 760 / 819 Loss: 21.63069725036621 Tokens per Sec: 14785.692606230828
Epoch Step: 765 / 819 Loss: 18.402437210083008 Tokens per Sec: 13253.44283947257
Epoch Step: 770 / 819 Loss: 33.17918014526367 Tokens per Sec: 14412.984920123607
Epoch Step: 775 / 819 Loss: 35.49241638183594 Tokens per Sec: 14440.67446605386
Epoch Step: 780 / 819 Loss: 22.422548294067383 Tokens per Sec: 12918.587829125292
Epoch Step: 785 / 819 Loss: 32.492618560791016 Tokens per Sec: 14388.734262175265
Epoch Step: 790 / 819 Loss: 33.45881271362305 Tokens per Sec: 16493.97260650551
Epoch Step: 795 / 819 Loss: 22.471996307373047 Tokens per Sec: 13602.71593441324
Epoch Step: 800 / 819 Loss: 20.224252700805664 Tokens per Sec: 16248.444272613395
Epoch Step: 805 / 819 Loss: 216.53509521484375 Tokens per Sec: 12269.493593328183
Epoch Step: 810 / 819 Loss: 23.287647247314453 Tokens per Sec: 14410.220621895585
Epoch Step: 815 / 819 Loss: 24.75431251525879 Tokens per Sec: 12606.78789011682
Epoch ended with duration 0:04:38.854514
Train perplexity: 1.6801470692483356
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.368414
Validation perplexity: 1.5237405679009541
Model saved best_on_validation!
Epoch 13 / 1000
Epoch Step: 5 / 819 Loss: 181.17111206054688 Tokens per Sec: 13083.909997117507
Epoch Step: 10 / 819 Loss: 227.156494140625 Tokens per Sec: 13731.179888239814
Epoch Step: 15 / 819 Loss: 33.17315673828125 Tokens per Sec: 14657.74866002591
Epoch Step: 20 / 819 Loss: 22.5086669921875 Tokens per Sec: 14256.093091409872
Epoch Step: 25 / 819 Loss: 22.196935653686523 Tokens per Sec: 14423.142723572177
Epoch Step: 30 / 819 Loss: 203.9152069091797 Tokens per Sec: 13769.675292201888
Epoch Step: 35 / 819 Loss: 32.4252815246582 Tokens per Sec: 14148.131216193708
Epoch Step: 40 / 819 Loss: 149.9540252685547 Tokens per Sec: 12362.56645548051
Epoch Step: 45 / 819 Loss: 28.852506637573242 Tokens per Sec: 13247.264454917704
Epoch Step: 50 / 819 Loss: 26.071765899658203 Tokens per Sec: 13835.4231392504
Epoch Step: 55 / 819 Loss: 20.72624969482422 Tokens per Sec: 14925.132536208153
Epoch Step: 60 / 819 Loss: 24.030536651611328 Tokens per Sec: 13911.533274284153
Epoch Step: 65 / 819 Loss: 136.77491760253906 Tokens per Sec: 15644.279016513143
Epoch Step: 70 / 819 Loss: 22.620529174804688 Tokens per Sec: 14011.591287800857
Epoch Step: 75 / 819 Loss: 20.046072006225586 Tokens per Sec: 14277.440742613182
Epoch Step: 80 / 819 Loss: 24.868431091308594 Tokens per Sec: 14994.268930908187
Epoch Step: 85 / 819 Loss: 17.2210693359375 Tokens per Sec: 14309.113591146242
Epoch Step: 90 / 819 Loss: 28.722679138183594 Tokens per Sec: 15631.612535944165
Epoch Step: 95 / 819 Loss: 17.566686630249023 Tokens per Sec: 15008.511724442715
Epoch Step: 100 / 819 Loss: 123.4739990234375 Tokens per Sec: 14550.99767203626
Epoch Step: 105 / 819 Loss: 33.83143615722656 Tokens per Sec: 15612.679477654126
Epoch Step: 110 / 819 Loss: 193.1866455078125 Tokens per Sec: 14626.193855976204
Epoch Step: 115 / 819 Loss: 26.429685592651367 Tokens per Sec: 13475.758275473194
Epoch Step: 120 / 819 Loss: 21.850189208984375 Tokens per Sec: 13100.604435188176
Epoch Step: 125 / 819 Loss: 28.145450592041016 Tokens per Sec: 13923.806321172906
Epoch Step: 130 / 819 Loss: 21.715030670166016 Tokens per Sec: 14927.270849149343
Epoch Step: 135 / 819 Loss: 281.03387451171875 Tokens per Sec: 14579.580065382235
Epoch Step: 140 / 819 Loss: 22.431867599487305 Tokens per Sec: 13587.182498220114
Epoch Step: 145 / 819 Loss: 26.877458572387695 Tokens per Sec: 14562.968206034428
Epoch Step: 150 / 819 Loss: 27.624643325805664 Tokens per Sec: 12758.35992836166
Epoch Step: 155 / 819 Loss: 16.20806884765625 Tokens per Sec: 13043.258794310917
Epoch Step: 160 / 819 Loss: 21.561073303222656 Tokens per Sec: 14364.58541501643
Epoch Step: 165 / 819 Loss: 263.5823669433594 Tokens per Sec: 14125.22863987024
Epoch Step: 170 / 819 Loss: 23.652751922607422 Tokens per Sec: 12749.80297774059
Epoch Step: 175 / 819 Loss: 22.165924072265625 Tokens per Sec: 13702.610301514998
Epoch Step: 180 / 819 Loss: 18.87975311279297 Tokens per Sec: 13523.384758847938
Epoch Step: 185 / 819 Loss: 20.245506286621094 Tokens per Sec: 11878.707049131805
Epoch Step: 190 / 819 Loss: 30.810287475585938 Tokens per Sec: 14910.396244758878
Epoch Step: 195 / 819 Loss: 20.732547760009766 Tokens per Sec: 13679.294652032893
Epoch Step: 200 / 819 Loss: 24.580175399780273 Tokens per Sec: 15388.438592080065
Epoch Step: 205 / 819 Loss: 182.7391357421875 Tokens per Sec: 14126.621822273008
Epoch Step: 210 / 819 Loss: 30.5671443939209 Tokens per Sec: 15108.079811016692
Epoch Step: 215 / 819 Loss: 23.860937118530273 Tokens per Sec: 15719.599038603305
Epoch Step: 220 / 819 Loss: 26.275909423828125 Tokens per Sec: 15817.759226653987
Epoch Step: 225 / 819 Loss: 22.123069763183594 Tokens per Sec: 15003.486130049874
Epoch Step: 230 / 819 Loss: 27.716236114501953 Tokens per Sec: 15530.49798352368
Epoch Step: 235 / 819 Loss: 136.553466796875 Tokens per Sec: 13155.660684968218
Epoch Step: 240 / 819 Loss: 29.563539505004883 Tokens per Sec: 12550.411990628367
Epoch Step: 245 / 819 Loss: 16.66351318359375 Tokens per Sec: 14059.29795139349
Epoch Step: 250 / 819 Loss: 21.391948699951172 Tokens per Sec: 15869.982949419773
Epoch Step: 255 / 819 Loss: 26.10601234436035 Tokens per Sec: 14777.455077599889
Epoch Step: 260 / 819 Loss: 182.20326232910156 Tokens per Sec: 12710.399503477322
Epoch Step: 265 / 819 Loss: 23.155353546142578 Tokens per Sec: 15166.120862652599
Epoch Step: 270 / 819 Loss: 144.15574645996094 Tokens per Sec: 14101.211324210257
Epoch Step: 275 / 819 Loss: 24.044570922851562 Tokens per Sec: 14480.50498735163
Epoch Step: 280 / 819 Loss: 29.602447509765625 Tokens per Sec: 14364.382260127522
Epoch Step: 285 / 819 Loss: 113.35076904296875 Tokens per Sec: 13794.290067687018
Epoch Step: 290 / 819 Loss: 21.691259384155273 Tokens per Sec: 13993.300302939437
Epoch Step: 295 / 819 Loss: 33.247215270996094 Tokens per Sec: 13706.511099487903
Epoch Step: 300 / 819 Loss: 25.35561752319336 Tokens per Sec: 13575.973534184395
Epoch Step: 305 / 819 Loss: 32.38920211791992 Tokens per Sec: 14544.009939658124
Epoch Step: 310 / 819 Loss: 29.46576499938965 Tokens per Sec: 14392.899817683216
Epoch Step: 315 / 819 Loss: 20.906709671020508 Tokens per Sec: 16267.768280901942
Epoch Step: 320 / 819 Loss: 29.812925338745117 Tokens per Sec: 14277.248710204422
Epoch Step: 325 / 819 Loss: 31.131376266479492 Tokens per Sec: 12899.74431497707
Epoch Step: 330 / 819 Loss: 30.24830436706543 Tokens per Sec: 16742.375565635124
Epoch Step: 335 / 819 Loss: 31.141138076782227 Tokens per Sec: 13841.386030508696
Epoch Step: 340 / 819 Loss: 26.41407585144043 Tokens per Sec: 14111.288980704925
Epoch Step: 345 / 819 Loss: 19.206052780151367 Tokens per Sec: 13176.702993499703
Epoch Step: 350 / 819 Loss: 264.0136413574219 Tokens per Sec: 13144.234110345731
Epoch Step: 355 / 819 Loss: 25.304244995117188 Tokens per Sec: 13988.522878409727
Epoch Step: 360 / 819 Loss: 23.847366333007812 Tokens per Sec: 14361.063458074685
Epoch Step: 365 / 819 Loss: 23.574541091918945 Tokens per Sec: 12685.909625009768
Epoch Step: 370 / 819 Loss: 34.718505859375 Tokens per Sec: 13718.664122300606
Epoch Step: 375 / 819 Loss: 20.726781845092773 Tokens per Sec: 14068.203544013477
Epoch Step: 380 / 819 Loss: 28.626815795898438 Tokens per Sec: 14075.891992411367
Epoch Step: 385 / 819 Loss: 27.303529739379883 Tokens per Sec: 14291.93757254228
Epoch Step: 390 / 819 Loss: 28.49723243713379 Tokens per Sec: 14816.353656787924
Epoch Step: 395 / 819 Loss: 22.84113883972168 Tokens per Sec: 12570.077342894345
Epoch Step: 400 / 819 Loss: 21.55165672302246 Tokens per Sec: 13178.68029214287
Epoch Step: 405 / 819 Loss: 23.615947723388672 Tokens per Sec: 15570.481152678234
Epoch Step: 410 / 819 Loss: 24.962556838989258 Tokens per Sec: 15972.861316112105
Epoch Step: 415 / 819 Loss: 27.086824417114258 Tokens per Sec: 13538.365711701932
Epoch Step: 420 / 819 Loss: 120.61396026611328 Tokens per Sec: 15420.748854905361
Epoch Step: 425 / 819 Loss: 23.6267032623291 Tokens per Sec: 13659.270444147402
Epoch Step: 430 / 819 Loss: 23.85261344909668 Tokens per Sec: 15279.936382659589
Epoch Step: 435 / 819 Loss: 26.170154571533203 Tokens per Sec: 14398.752615241445
Epoch Step: 440 / 819 Loss: 25.310632705688477 Tokens per Sec: 12946.977179143742
Epoch Step: 445 / 819 Loss: 33.50684356689453 Tokens per Sec: 12626.84645309062
Epoch Step: 450 / 819 Loss: 21.942138671875 Tokens per Sec: 13399.394561518253
Epoch Step: 455 / 819 Loss: 17.9226016998291 Tokens per Sec: 13550.515715732823
Epoch Step: 460 / 819 Loss: 25.061433792114258 Tokens per Sec: 13994.889835649225
Epoch Step: 465 / 819 Loss: 180.12168884277344 Tokens per Sec: 14890.324195519308
Epoch Step: 470 / 819 Loss: 25.8084774017334 Tokens per Sec: 15213.676823938165
Epoch Step: 475 / 819 Loss: 99.60037994384766 Tokens per Sec: 14224.347333857299
Epoch Step: 480 / 819 Loss: 25.121448516845703 Tokens per Sec: 12427.989681802324
Epoch Step: 485 / 819 Loss: 23.366193771362305 Tokens per Sec: 14318.92499288579
Epoch Step: 490 / 819 Loss: 17.924726486206055 Tokens per Sec: 13895.22105302262
Epoch Step: 495 / 819 Loss: 29.753908157348633 Tokens per Sec: 13940.548412673374
Epoch Step: 500 / 819 Loss: 28.630390167236328 Tokens per Sec: 12534.610438470167
Epoch Step: 505 / 819 Loss: 16.13593292236328 Tokens per Sec: 13069.850007200674
Epoch Step: 510 / 819 Loss: 24.613784790039062 Tokens per Sec: 13843.132339151782
Epoch Step: 515 / 819 Loss: 21.617183685302734 Tokens per Sec: 14271.841653149519
Epoch Step: 520 / 819 Loss: 251.47396850585938 Tokens per Sec: 14581.566823591284
Epoch Step: 525 / 819 Loss: 20.426921844482422 Tokens per Sec: 14201.808462789562
Epoch Step: 530 / 819 Loss: 27.594970703125 Tokens per Sec: 14355.639039380758
Epoch Step: 535 / 819 Loss: 26.218509674072266 Tokens per Sec: 13143.452230450737
Epoch Step: 540 / 819 Loss: 23.61615562438965 Tokens per Sec: 14316.220059774605
Epoch Step: 545 / 819 Loss: 23.5181827545166 Tokens per Sec: 14414.22245949524
Epoch Step: 550 / 819 Loss: 16.267913818359375 Tokens per Sec: 12726.593047553924
Epoch Step: 555 / 819 Loss: 22.71649932861328 Tokens per Sec: 14783.244964025145
Epoch Step: 560 / 819 Loss: 28.02215576171875 Tokens per Sec: 14964.815793559168
Epoch Step: 565 / 819 Loss: 23.63136863708496 Tokens per Sec: 14289.229113914831
Epoch Step: 570 / 819 Loss: 16.948495864868164 Tokens per Sec: 13203.2391506732
Epoch Step: 575 / 819 Loss: 21.29871940612793 Tokens per Sec: 14234.079552944917
Epoch Step: 580 / 819 Loss: 27.3626766204834 Tokens per Sec: 13327.041772176544
Epoch Step: 585 / 819 Loss: 17.994140625 Tokens per Sec: 13143.523537491168
Epoch Step: 590 / 819 Loss: 28.858217239379883 Tokens per Sec: 15204.618185174928
Epoch Step: 595 / 819 Loss: 260.13067626953125 Tokens per Sec: 13329.889721976542
Epoch Step: 600 / 819 Loss: 16.621036529541016 Tokens per Sec: 12625.849244533125
Epoch Step: 605 / 819 Loss: 25.852968215942383 Tokens per Sec: 15666.143765460612
Epoch Step: 610 / 819 Loss: 23.20827293395996 Tokens per Sec: 13313.679612182154
Epoch Step: 615 / 819 Loss: 25.909637451171875 Tokens per Sec: 13758.67980790859
Epoch Step: 620 / 819 Loss: 237.8625030517578 Tokens per Sec: 14441.998862901655
Epoch Step: 625 / 819 Loss: 27.2359676361084 Tokens per Sec: 12241.769288303822
Epoch Step: 630 / 819 Loss: 21.220935821533203 Tokens per Sec: 12417.978639577506
Epoch Step: 635 / 819 Loss: 20.248605728149414 Tokens per Sec: 13231.928383227516
Epoch Step: 640 / 819 Loss: 23.276607513427734 Tokens per Sec: 12938.391154875357
Epoch Step: 645 / 819 Loss: 18.731760025024414 Tokens per Sec: 13282.450341954474
Epoch Step: 650 / 819 Loss: 21.98063850402832 Tokens per Sec: 13464.042222240987
Epoch Step: 655 / 819 Loss: 23.709428787231445 Tokens per Sec: 13531.40605427646
Epoch Step: 660 / 819 Loss: 20.89776611328125 Tokens per Sec: 15584.824834961646
Epoch Step: 665 / 819 Loss: 23.660449981689453 Tokens per Sec: 15491.980418565301
Epoch Step: 670 / 819 Loss: 17.96782875061035 Tokens per Sec: 13944.238509707686
Epoch Step: 675 / 819 Loss: 280.0771179199219 Tokens per Sec: 14171.248889095521
Epoch Step: 680 / 819 Loss: 26.42096710205078 Tokens per Sec: 15093.37447565409
Epoch Step: 685 / 819 Loss: 27.204498291015625 Tokens per Sec: 14386.22943326028
Epoch Step: 690 / 819 Loss: 20.288211822509766 Tokens per Sec: 14103.919584424593
Epoch Step: 695 / 819 Loss: 22.83329963684082 Tokens per Sec: 13474.637045635754
Epoch Step: 700 / 819 Loss: 169.56396484375 Tokens per Sec: 14179.310528431817
Epoch Step: 705 / 819 Loss: 18.91915512084961 Tokens per Sec: 13616.712817847503
Epoch Step: 710 / 819 Loss: 15.680821418762207 Tokens per Sec: 13580.052975531104
Epoch Step: 715 / 819 Loss: 24.67869758605957 Tokens per Sec: 14003.950689510297
Epoch Step: 720 / 819 Loss: 28.795120239257812 Tokens per Sec: 13231.144136821695
Epoch Step: 725 / 819 Loss: 20.088464736938477 Tokens per Sec: 13835.38858884743
Epoch Step: 730 / 819 Loss: 213.78268432617188 Tokens per Sec: 15732.749698363137
Epoch Step: 735 / 819 Loss: 22.249422073364258 Tokens per Sec: 16077.852675182272
Epoch Step: 740 / 819 Loss: 21.764972686767578 Tokens per Sec: 14218.754884296623
Epoch Step: 745 / 819 Loss: 28.097089767456055 Tokens per Sec: 14181.634812908953
Epoch Step: 750 / 819 Loss: 20.370386123657227 Tokens per Sec: 14327.965954119321
Epoch Step: 755 / 819 Loss: 23.00860595703125 Tokens per Sec: 12967.899507115544
Epoch Step: 760 / 819 Loss: 15.149209976196289 Tokens per Sec: 12872.19278684601
Epoch Step: 765 / 819 Loss: 20.77625846862793 Tokens per Sec: 13949.839081814573
Epoch Step: 770 / 819 Loss: 131.3970947265625 Tokens per Sec: 12369.721139890795
Epoch Step: 775 / 819 Loss: 165.78443908691406 Tokens per Sec: 14550.230055772774
Epoch Step: 780 / 819 Loss: 19.667160034179688 Tokens per Sec: 14184.53866023207
Epoch Step: 785 / 819 Loss: 232.18411254882812 Tokens per Sec: 13455.007345502017
Epoch Step: 790 / 819 Loss: 28.933679580688477 Tokens per Sec: 14204.965602081502
Epoch Step: 795 / 819 Loss: 20.457983016967773 Tokens per Sec: 14219.792946791027
Epoch Step: 800 / 819 Loss: 18.628650665283203 Tokens per Sec: 15815.657873480879
Epoch Step: 805 / 819 Loss: 23.5466251373291 Tokens per Sec: 13198.532127810564
Epoch Step: 810 / 819 Loss: 23.280649185180664 Tokens per Sec: 12784.690063019649
Epoch Step: 815 / 819 Loss: 25.6794376373291 Tokens per Sec: 12124.442981238593
Epoch ended with duration 0:04:37.445301
Train perplexity: 1.7377330145708654
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.229546
Validation perplexity: 1.6214323934598867
Epoch 14 / 1000
Epoch Step: 5 / 819 Loss: 135.2233428955078 Tokens per Sec: 14500.096065852347
Epoch Step: 10 / 819 Loss: 18.287158966064453 Tokens per Sec: 14518.7508803079
Epoch Step: 15 / 819 Loss: 20.289140701293945 Tokens per Sec: 14756.980282666871
Epoch Step: 20 / 819 Loss: 24.154565811157227 Tokens per Sec: 13159.16751673032
Epoch Step: 25 / 819 Loss: 22.20850944519043 Tokens per Sec: 13674.939476271707
Epoch Step: 30 / 819 Loss: 228.99188232421875 Tokens per Sec: 14348.448482093501
Epoch Step: 35 / 819 Loss: 21.212432861328125 Tokens per Sec: 13722.874131448874
Epoch Step: 40 / 819 Loss: 24.307485580444336 Tokens per Sec: 15433.08104786049
Epoch Step: 45 / 819 Loss: 22.000659942626953 Tokens per Sec: 14540.857638718779
Epoch Step: 50 / 819 Loss: 25.381982803344727 Tokens per Sec: 14528.16838940376
Epoch Step: 55 / 819 Loss: 20.714412689208984 Tokens per Sec: 12677.718766710104
Epoch Step: 60 / 819 Loss: 24.17830467224121 Tokens per Sec: 13016.861108605171
Epoch Step: 65 / 819 Loss: 28.988040924072266 Tokens per Sec: 14769.260594802405
Epoch Step: 70 / 819 Loss: 22.358522415161133 Tokens per Sec: 13717.945313414994
Epoch Step: 75 / 819 Loss: 22.69814109802246 Tokens per Sec: 14891.351441840181
Epoch Step: 80 / 819 Loss: 240.74488830566406 Tokens per Sec: 14492.733453324532
Epoch Step: 85 / 819 Loss: 13.34868335723877 Tokens per Sec: 13789.656783779994
Epoch Step: 90 / 819 Loss: 21.44146156311035 Tokens per Sec: 12959.568652005015
Epoch Step: 95 / 819 Loss: 21.8902587890625 Tokens per Sec: 13901.949543946188
Epoch Step: 100 / 819 Loss: 20.817615509033203 Tokens per Sec: 13664.881336487355
Epoch Step: 105 / 819 Loss: 14.678335189819336 Tokens per Sec: 13853.398101523086
Epoch Step: 110 / 819 Loss: 116.85371398925781 Tokens per Sec: 14094.18217720408
Epoch Step: 115 / 819 Loss: 21.953622817993164 Tokens per Sec: 13798.361499622195
Epoch Step: 120 / 819 Loss: 26.098363876342773 Tokens per Sec: 13714.28891352489
Epoch Step: 125 / 819 Loss: 216.39503479003906 Tokens per Sec: 14236.278817714881
Epoch Step: 130 / 819 Loss: 270.76251220703125 Tokens per Sec: 14474.741868412239
Epoch Step: 135 / 819 Loss: 28.86079978942871 Tokens per Sec: 13762.686167414868
Epoch Step: 140 / 819 Loss: 28.362924575805664 Tokens per Sec: 13022.994337695878
Epoch Step: 145 / 819 Loss: 28.124601364135742 Tokens per Sec: 14684.324620709058
Epoch Step: 150 / 819 Loss: 25.77500343322754 Tokens per Sec: 13729.79478251087
Epoch Step: 155 / 819 Loss: 20.305118560791016 Tokens per Sec: 14083.276341730218
Epoch Step: 160 / 819 Loss: 18.842815399169922 Tokens per Sec: 13096.112097813259
Epoch Step: 165 / 819 Loss: 23.054019927978516 Tokens per Sec: 12179.45733720154
Epoch Step: 170 / 819 Loss: 21.636402130126953 Tokens per Sec: 13015.31672122067
Epoch Step: 175 / 819 Loss: 123.22139739990234 Tokens per Sec: 15953.49571250311
Epoch Step: 180 / 819 Loss: 242.0267333984375 Tokens per Sec: 15025.984726248169
Epoch Step: 185 / 819 Loss: 21.170839309692383 Tokens per Sec: 13898.97984407835
Epoch Step: 190 / 819 Loss: 27.379505157470703 Tokens per Sec: 12140.713436672931
Epoch Step: 195 / 819 Loss: 25.07159996032715 Tokens per Sec: 14634.099744533376
Epoch Step: 200 / 819 Loss: 25.913188934326172 Tokens per Sec: 14519.22962406482
Epoch Step: 205 / 819 Loss: 184.01673889160156 Tokens per Sec: 14392.78535654666
Epoch Step: 210 / 819 Loss: 22.89621925354004 Tokens per Sec: 16172.108650871922
Epoch Step: 215 / 819 Loss: 17.812767028808594 Tokens per Sec: 15715.549680072048
Epoch Step: 220 / 819 Loss: 24.822078704833984 Tokens per Sec: 13724.871646673802
Epoch Step: 225 / 819 Loss: 28.647607803344727 Tokens per Sec: 13673.94471204086
Epoch Step: 230 / 819 Loss: 25.226890563964844 Tokens per Sec: 12739.503111309034
Epoch Step: 235 / 819 Loss: 21.014442443847656 Tokens per Sec: 14859.706886843225
Epoch Step: 240 / 819 Loss: 26.54572868347168 Tokens per Sec: 13342.167946389913
Epoch Step: 245 / 819 Loss: 22.555599212646484 Tokens per Sec: 14908.708578799391
Epoch Step: 250 / 819 Loss: 210.66961669921875 Tokens per Sec: 13721.931741093444
Epoch Step: 255 / 819 Loss: 28.583829879760742 Tokens per Sec: 14806.942786735146
Epoch Step: 260 / 819 Loss: 15.632756233215332 Tokens per Sec: 14320.425959301421
Epoch Step: 265 / 819 Loss: 18.387235641479492 Tokens per Sec: 13264.915563623093
Epoch Step: 270 / 819 Loss: 25.137039184570312 Tokens per Sec: 13781.599603712832
Epoch Step: 275 / 819 Loss: 18.49162483215332 Tokens per Sec: 13411.113353463703
Epoch Step: 280 / 819 Loss: 16.71247100830078 Tokens per Sec: 15014.245768788995
Epoch Step: 285 / 819 Loss: 19.50309944152832 Tokens per Sec: 13686.447373610008
Epoch Step: 290 / 819 Loss: 17.849491119384766 Tokens per Sec: 13779.902066671648
Epoch Step: 295 / 819 Loss: 23.20897674560547 Tokens per Sec: 11742.242351683975
Epoch Step: 300 / 819 Loss: 116.94091796875 Tokens per Sec: 13172.62378111126
Epoch Step: 305 / 819 Loss: 18.284252166748047 Tokens per Sec: 14847.50000955509
Epoch Step: 310 / 819 Loss: 18.74466896057129 Tokens per Sec: 14171.933172443796
Epoch Step: 315 / 819 Loss: 27.699939727783203 Tokens per Sec: 14805.557674678355
Epoch Step: 320 / 819 Loss: 19.731515884399414 Tokens per Sec: 13957.27828936119
Epoch Step: 325 / 819 Loss: 19.76464080810547 Tokens per Sec: 12647.565453949917
Epoch Step: 330 / 819 Loss: 24.79347801208496 Tokens per Sec: 14600.65128859718
Epoch Step: 335 / 819 Loss: 307.3070373535156 Tokens per Sec: 14213.162810758455
Epoch Step: 340 / 819 Loss: 17.389711380004883 Tokens per Sec: 13393.304979337467
Epoch Step: 345 / 819 Loss: 23.240802764892578 Tokens per Sec: 12745.801669923376
Epoch Step: 350 / 819 Loss: 132.4374237060547 Tokens per Sec: 13479.678276490573
Epoch Step: 355 / 819 Loss: 25.553571701049805 Tokens per Sec: 13067.998377130205
Epoch Step: 360 / 819 Loss: 26.63199806213379 Tokens per Sec: 13804.715733610616
Epoch Step: 365 / 819 Loss: 22.980268478393555 Tokens per Sec: 13453.816160224587
Epoch Step: 370 / 819 Loss: 15.74604320526123 Tokens per Sec: 12194.232353462592
Epoch Step: 375 / 819 Loss: 26.02562713623047 Tokens per Sec: 15168.216907206297
Epoch Step: 380 / 819 Loss: 22.60077667236328 Tokens per Sec: 16661.79494959626
Epoch Step: 385 / 819 Loss: 22.991222381591797 Tokens per Sec: 12784.240329461312
Epoch Step: 390 / 819 Loss: 20.040353775024414 Tokens per Sec: 12252.16523142637
Epoch Step: 395 / 819 Loss: 20.74524688720703 Tokens per Sec: 13067.999046020483
Epoch Step: 400 / 819 Loss: 19.490570068359375 Tokens per Sec: 13994.306618779
Epoch Step: 405 / 819 Loss: 186.10702514648438 Tokens per Sec: 12890.854955122491
Epoch Step: 410 / 819 Loss: 27.982603073120117 Tokens per Sec: 13781.385213153406
Epoch Step: 415 / 819 Loss: 22.647132873535156 Tokens per Sec: 14421.584731416699
Epoch Step: 420 / 819 Loss: 27.38133430480957 Tokens per Sec: 13830.637961956601
Epoch Step: 425 / 819 Loss: 30.786951065063477 Tokens per Sec: 13171.429214965216
Epoch Step: 430 / 819 Loss: 22.224470138549805 Tokens per Sec: 14518.709815025519
Epoch Step: 435 / 819 Loss: 27.53713607788086 Tokens per Sec: 12792.001294318497
Epoch Step: 440 / 819 Loss: 20.49101448059082 Tokens per Sec: 14186.14795500289
Epoch Step: 445 / 819 Loss: 21.970958709716797 Tokens per Sec: 14192.492910878747
Epoch Step: 450 / 819 Loss: 22.417434692382812 Tokens per Sec: 13852.416980232392
Epoch Step: 455 / 819 Loss: 23.401443481445312 Tokens per Sec: 15556.544505000578
Epoch Step: 460 / 819 Loss: 21.30385971069336 Tokens per Sec: 13789.634437642255
Epoch Step: 465 / 819 Loss: 19.35829734802246 Tokens per Sec: 15148.847730824948
Epoch Step: 470 / 819 Loss: 23.92949867248535 Tokens per Sec: 15945.188652727915
Epoch Step: 475 / 819 Loss: 158.22811889648438 Tokens per Sec: 13180.499900402541
Epoch Step: 480 / 819 Loss: 27.643537521362305 Tokens per Sec: 14246.530319196674
Epoch Step: 485 / 819 Loss: 22.19329833984375 Tokens per Sec: 14642.869830330075
Epoch Step: 490 / 819 Loss: 20.424907684326172 Tokens per Sec: 13421.478756085437
Epoch Step: 495 / 819 Loss: 27.43524742126465 Tokens per Sec: 16466.334268480383
Epoch Step: 500 / 819 Loss: 26.579021453857422 Tokens per Sec: 14295.89912465418
Epoch Step: 505 / 819 Loss: 22.97811508178711 Tokens per Sec: 14199.539382160177
Epoch Step: 510 / 819 Loss: 22.692398071289062 Tokens per Sec: 14213.773476935112
Epoch Step: 515 / 819 Loss: 18.0181941986084 Tokens per Sec: 13654.42163602832
Epoch Step: 520 / 819 Loss: 226.98428344726562 Tokens per Sec: 14926.797884595346
Epoch Step: 525 / 819 Loss: 22.610078811645508 Tokens per Sec: 14201.373990090058
Epoch Step: 530 / 819 Loss: 19.944103240966797 Tokens per Sec: 13150.963404450962
Epoch Step: 535 / 819 Loss: 21.06570816040039 Tokens per Sec: 12584.058853674831
Epoch Step: 540 / 819 Loss: 181.3611602783203 Tokens per Sec: 13498.409325503859
Epoch Step: 545 / 819 Loss: 25.840185165405273 Tokens per Sec: 13284.138613842175
Epoch Step: 550 / 819 Loss: 28.969688415527344 Tokens per Sec: 13645.804712089295
Epoch Step: 555 / 819 Loss: 29.38726234436035 Tokens per Sec: 13883.479623303336
Epoch Step: 560 / 819 Loss: 19.0860538482666 Tokens per Sec: 14923.427906271521
Epoch Step: 565 / 819 Loss: 19.94736671447754 Tokens per Sec: 14136.714356867868
Epoch Step: 570 / 819 Loss: 259.06732177734375 Tokens per Sec: 14768.606821402556
Epoch Step: 575 / 819 Loss: 20.14151954650879 Tokens per Sec: 16567.38501251228
Epoch Step: 580 / 819 Loss: 17.699329376220703 Tokens per Sec: 13430.220496689259
Epoch Step: 585 / 819 Loss: 26.175765991210938 Tokens per Sec: 13144.838048028761
Epoch Step: 590 / 819 Loss: 22.22052001953125 Tokens per Sec: 15862.825206663983
Epoch Step: 595 / 819 Loss: 29.70260238647461 Tokens per Sec: 14100.198588384965
Epoch Step: 600 / 819 Loss: 22.642465591430664 Tokens per Sec: 14157.288011657676
Epoch Step: 605 / 819 Loss: 20.718236923217773 Tokens per Sec: 14394.453303969089
Epoch Step: 610 / 819 Loss: 25.447341918945312 Tokens per Sec: 13300.958530342368
Epoch Step: 615 / 819 Loss: 23.48764991760254 Tokens per Sec: 14322.875624720631
Epoch Step: 620 / 819 Loss: 23.651308059692383 Tokens per Sec: 12550.826472692377
Epoch Step: 625 / 819 Loss: 23.116226196289062 Tokens per Sec: 14834.005929457519
Epoch Step: 630 / 819 Loss: 24.12548828125 Tokens per Sec: 13425.43072739545
Epoch Step: 635 / 819 Loss: 22.444528579711914 Tokens per Sec: 13260.946468898674
Epoch Step: 640 / 819 Loss: 14.869956016540527 Tokens per Sec: 13782.032679512813
Epoch Step: 645 / 819 Loss: 28.220521926879883 Tokens per Sec: 14716.460262799714
Epoch Step: 650 / 819 Loss: 18.943693161010742 Tokens per Sec: 16499.813681215994
Epoch Step: 655 / 819 Loss: 16.18597984313965 Tokens per Sec: 13300.760853320817
Epoch Step: 660 / 819 Loss: 27.67953872680664 Tokens per Sec: 14276.896672934374
Epoch Step: 665 / 819 Loss: 22.667951583862305 Tokens per Sec: 13963.902845671813
Epoch Step: 670 / 819 Loss: 18.934953689575195 Tokens per Sec: 13629.420628688267
Epoch Step: 675 / 819 Loss: 18.78972816467285 Tokens per Sec: 17307.786409435652
Epoch Step: 680 / 819 Loss: 26.98520851135254 Tokens per Sec: 15667.016350278003
Epoch Step: 685 / 819 Loss: 25.90354347229004 Tokens per Sec: 13528.02380465918
Epoch Step: 690 / 819 Loss: 20.105670928955078 Tokens per Sec: 12383.036922435896
Epoch Step: 695 / 819 Loss: 22.689760208129883 Tokens per Sec: 16132.98767700279
Epoch Step: 700 / 819 Loss: 26.96451759338379 Tokens per Sec: 13657.793601217501
Epoch Step: 705 / 819 Loss: 27.38048553466797 Tokens per Sec: 14350.018729475132
Epoch Step: 710 / 819 Loss: 23.059547424316406 Tokens per Sec: 12848.201979392486
Epoch Step: 715 / 819 Loss: 19.07977294921875 Tokens per Sec: 14123.655195577421
Epoch Step: 720 / 819 Loss: 19.59504508972168 Tokens per Sec: 14527.383244218827
Epoch Step: 725 / 819 Loss: 15.352417945861816 Tokens per Sec: 14283.885064699045
Epoch Step: 730 / 819 Loss: 20.301837921142578 Tokens per Sec: 13889.293211673683
Epoch Step: 735 / 819 Loss: 25.066640853881836 Tokens per Sec: 13177.21230013818
Epoch Step: 740 / 819 Loss: 25.857881546020508 Tokens per Sec: 13507.875254346403
Epoch Step: 745 / 819 Loss: 21.3372859954834 Tokens per Sec: 14982.521928702303
Epoch Step: 750 / 819 Loss: 24.968570709228516 Tokens per Sec: 14040.80359123906
Epoch Step: 755 / 819 Loss: 25.484966278076172 Tokens per Sec: 13166.759698396465
Epoch Step: 760 / 819 Loss: 16.555950164794922 Tokens per Sec: 14744.378253158819
Epoch Step: 765 / 819 Loss: 17.15175437927246 Tokens per Sec: 14349.0946230314
Epoch Step: 770 / 819 Loss: 23.736034393310547 Tokens per Sec: 15072.98175852876
Epoch Step: 775 / 819 Loss: 26.501590728759766 Tokens per Sec: 12270.957345452965
Epoch Step: 780 / 819 Loss: 22.31272315979004 Tokens per Sec: 14031.274739876328
Epoch Step: 785 / 819 Loss: 16.987791061401367 Tokens per Sec: 16429.839723418954
Epoch Step: 790 / 819 Loss: 17.149063110351562 Tokens per Sec: 12632.876497560288
Epoch Step: 795 / 819 Loss: 27.594736099243164 Tokens per Sec: 14606.501611428357
Epoch Step: 800 / 819 Loss: 20.288894653320312 Tokens per Sec: 11834.107201176166
Epoch Step: 805 / 819 Loss: 23.123886108398438 Tokens per Sec: 14213.176657829417
Epoch Step: 810 / 819 Loss: 16.660581588745117 Tokens per Sec: 11686.500252342476
Epoch Step: 815 / 819 Loss: 21.78167152404785 Tokens per Sec: 13189.82669231047
Epoch ended with duration 0:04:37.917433
Train perplexity: 1.6694938822954768
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.509369
Validation perplexity: 1.8577502709354765
Epoch 15 / 1000
Epoch Step: 5 / 819 Loss: 26.326871871948242 Tokens per Sec: 13827.725703645076
Epoch Step: 10 / 819 Loss: 20.286893844604492 Tokens per Sec: 13805.225863830974
Epoch Step: 15 / 819 Loss: 23.695329666137695 Tokens per Sec: 13096.67809068485
Epoch Step: 20 / 819 Loss: 17.102344512939453 Tokens per Sec: 15787.135167437185
Epoch Step: 25 / 819 Loss: 20.6173152923584 Tokens per Sec: 16416.496014960936
Epoch Step: 30 / 819 Loss: 19.554832458496094 Tokens per Sec: 14789.58626493829
Epoch Step: 35 / 819 Loss: 16.781049728393555 Tokens per Sec: 12853.925081871583
Epoch Step: 40 / 819 Loss: 24.80014991760254 Tokens per Sec: 15092.409965646972
Epoch Step: 45 / 819 Loss: 22.263309478759766 Tokens per Sec: 14010.162005765262
Epoch Step: 50 / 819 Loss: 256.8756408691406 Tokens per Sec: 14360.40245928953
Epoch Step: 55 / 819 Loss: 26.80702781677246 Tokens per Sec: 15289.796409573375
Epoch Step: 60 / 819 Loss: 27.107738494873047 Tokens per Sec: 12716.189720416336
Epoch Step: 65 / 819 Loss: 25.308523178100586 Tokens per Sec: 12840.871899534064
Epoch Step: 70 / 819 Loss: 20.584903717041016 Tokens per Sec: 13577.921532981754
Epoch Step: 75 / 819 Loss: 22.785825729370117 Tokens per Sec: 13970.496563132017
Epoch Step: 80 / 819 Loss: 18.124025344848633 Tokens per Sec: 14765.609482420508
Epoch Step: 85 / 819 Loss: 21.584115982055664 Tokens per Sec: 13583.882048442856
Epoch Step: 90 / 819 Loss: 18.895919799804688 Tokens per Sec: 13862.040602857785
Epoch Step: 95 / 819 Loss: 22.31320571899414 Tokens per Sec: 13254.337171896386
Epoch Step: 100 / 819 Loss: 24.256319046020508 Tokens per Sec: 14167.248845972492
Epoch Step: 105 / 819 Loss: 21.476736068725586 Tokens per Sec: 14469.113842474988
Epoch Step: 110 / 819 Loss: 19.021276473999023 Tokens per Sec: 12809.991996832849
Epoch Step: 115 / 819 Loss: 19.656579971313477 Tokens per Sec: 13423.952392429059
Epoch Step: 120 / 819 Loss: 21.236738204956055 Tokens per Sec: 13719.183737428697
Epoch Step: 125 / 819 Loss: 25.46242904663086 Tokens per Sec: 13456.035988864482
Epoch Step: 130 / 819 Loss: 23.833471298217773 Tokens per Sec: 13309.300506792362
Epoch Step: 135 / 819 Loss: 20.229978561401367 Tokens per Sec: 14984.658211815497
Epoch Step: 140 / 819 Loss: 19.70597267150879 Tokens per Sec: 14825.335999376326
Epoch Step: 145 / 819 Loss: 19.60966682434082 Tokens per Sec: 11339.233729704694
Epoch Step: 150 / 819 Loss: 16.165130615234375 Tokens per Sec: 15388.280370618475
Epoch Step: 155 / 819 Loss: 229.66192626953125 Tokens per Sec: 14861.740540605144
Epoch Step: 160 / 819 Loss: 19.737606048583984 Tokens per Sec: 14676.986497771764
Epoch Step: 165 / 819 Loss: 23.954505920410156 Tokens per Sec: 13000.550276544973
Epoch Step: 170 / 819 Loss: 188.4359588623047 Tokens per Sec: 13651.750923006603
Epoch Step: 175 / 819 Loss: 31.093406677246094 Tokens per Sec: 15540.488553738194
Epoch Step: 180 / 819 Loss: 244.08917236328125 Tokens per Sec: 13492.819909500316
Epoch Step: 185 / 819 Loss: 25.769359588623047 Tokens per Sec: 12188.864241622847
Epoch Step: 190 / 819 Loss: 19.429468154907227 Tokens per Sec: 15164.305894774227
Epoch Step: 195 / 819 Loss: 27.806884765625 Tokens per Sec: 12610.268549189217
Epoch Step: 200 / 819 Loss: 25.518829345703125 Tokens per Sec: 14988.218456666964
Epoch Step: 205 / 819 Loss: 23.5828914642334 Tokens per Sec: 12733.837609318727
Epoch Step: 210 / 819 Loss: 26.966718673706055 Tokens per Sec: 13954.391610462751
Epoch Step: 215 / 819 Loss: 20.604446411132812 Tokens per Sec: 13317.119917016893
Epoch Step: 220 / 819 Loss: 20.10805320739746 Tokens per Sec: 16036.21076230206
Epoch Step: 225 / 819 Loss: 137.45755004882812 Tokens per Sec: 13202.630198391724
Epoch Step: 230 / 819 Loss: 25.28815269470215 Tokens per Sec: 14286.10922846443
Epoch Step: 235 / 819 Loss: 24.345672607421875 Tokens per Sec: 16905.89485310952
Epoch Step: 240 / 819 Loss: 18.377443313598633 Tokens per Sec: 12824.577949512654
Epoch Step: 245 / 819 Loss: 25.733577728271484 Tokens per Sec: 13402.476979910112
Epoch Step: 250 / 819 Loss: 19.433866500854492 Tokens per Sec: 14523.555958760146
Epoch Step: 255 / 819 Loss: 152.93133544921875 Tokens per Sec: 13272.310113800033
Epoch Step: 260 / 819 Loss: 28.545778274536133 Tokens per Sec: 12773.765391845267
Epoch Step: 265 / 819 Loss: 21.454057693481445 Tokens per Sec: 13158.12477101427
Epoch Step: 270 / 819 Loss: 21.310810089111328 Tokens per Sec: 15849.073659215088
Epoch Step: 275 / 819 Loss: 24.184961318969727 Tokens per Sec: 14256.25748240868
Epoch Step: 280 / 819 Loss: 22.310867309570312 Tokens per Sec: 14540.22727418653
Epoch Step: 285 / 819 Loss: 23.661659240722656 Tokens per Sec: 14400.385706308847
Epoch Step: 290 / 819 Loss: 237.54782104492188 Tokens per Sec: 13539.743890569944
Epoch Step: 295 / 819 Loss: 257.25494384765625 Tokens per Sec: 15843.989431824055
Epoch Step: 300 / 819 Loss: 240.70777893066406 Tokens per Sec: 13748.001589111256
Epoch Step: 305 / 819 Loss: 29.5969181060791 Tokens per Sec: 15662.071123817908
Epoch Step: 310 / 819 Loss: 213.9988250732422 Tokens per Sec: 13095.636266341817
Epoch Step: 315 / 819 Loss: 28.5305118560791 Tokens per Sec: 13311.383598461756
Epoch Step: 320 / 819 Loss: 23.686716079711914 Tokens per Sec: 14307.00941383617
Epoch Step: 325 / 819 Loss: 20.450899124145508 Tokens per Sec: 13894.96921072539
Epoch Step: 330 / 819 Loss: 16.019502639770508 Tokens per Sec: 13280.440955411364
Epoch Step: 335 / 819 Loss: 24.67487144470215 Tokens per Sec: 14325.534490033293
Epoch Step: 340 / 819 Loss: 17.829431533813477 Tokens per Sec: 13865.782795013394
Epoch Step: 345 / 819 Loss: 24.77466583251953 Tokens per Sec: 14205.541401680686
Epoch Step: 350 / 819 Loss: 30.11285972595215 Tokens per Sec: 13531.873478862644
Epoch Step: 355 / 819 Loss: 17.709001541137695 Tokens per Sec: 14433.597261039344
Epoch Step: 360 / 819 Loss: 20.4600830078125 Tokens per Sec: 13337.868205343912
Epoch Step: 365 / 819 Loss: 177.91851806640625 Tokens per Sec: 15170.201350649717
Epoch Step: 370 / 819 Loss: 15.395843505859375 Tokens per Sec: 14681.512846247724
Epoch Step: 375 / 819 Loss: 24.11404800415039 Tokens per Sec: 13916.950895353144
Epoch Step: 380 / 819 Loss: 26.471040725708008 Tokens per Sec: 14985.92824642937
Epoch Step: 385 / 819 Loss: 25.36330795288086 Tokens per Sec: 15087.128264269826
Epoch Step: 390 / 819 Loss: 26.36412239074707 Tokens per Sec: 13148.01124832299
Epoch Step: 395 / 819 Loss: 19.361482620239258 Tokens per Sec: 14753.122331020864
Epoch Step: 400 / 819 Loss: 20.405513763427734 Tokens per Sec: 12901.121340380083
Epoch Step: 405 / 819 Loss: 31.002168655395508 Tokens per Sec: 14918.54221438601
Epoch Step: 410 / 819 Loss: 17.42019271850586 Tokens per Sec: 13597.616871978771
Epoch Step: 415 / 819 Loss: 17.00554656982422 Tokens per Sec: 14158.257570005142
Epoch Step: 420 / 819 Loss: 19.15866470336914 Tokens per Sec: 14072.863199509236
Epoch Step: 425 / 819 Loss: 17.917068481445312 Tokens per Sec: 13753.061067421264
Epoch Step: 430 / 819 Loss: 22.40241813659668 Tokens per Sec: 15464.325897470466
Epoch Step: 435 / 819 Loss: 13.175174713134766 Tokens per Sec: 13707.63290657443
Epoch Step: 440 / 819 Loss: 23.755155563354492 Tokens per Sec: 14292.465633404325
Epoch Step: 445 / 819 Loss: 22.27392578125 Tokens per Sec: 14704.851979858404
Epoch Step: 450 / 819 Loss: 22.791059494018555 Tokens per Sec: 13661.999095201552
Epoch Step: 455 / 819 Loss: 24.70421600341797 Tokens per Sec: 12821.665081014262
Epoch Step: 460 / 819 Loss: 26.252674102783203 Tokens per Sec: 14108.283008214892
Epoch Step: 465 / 819 Loss: 16.47568702697754 Tokens per Sec: 13820.517497559005
Epoch Step: 470 / 819 Loss: 15.998924255371094 Tokens per Sec: 13837.97064516082
Epoch Step: 475 / 819 Loss: 21.23319435119629 Tokens per Sec: 14789.595678033407
Epoch Step: 480 / 819 Loss: 149.7905731201172 Tokens per Sec: 13050.358337500053
Epoch Step: 485 / 819 Loss: 23.782625198364258 Tokens per Sec: 13502.613594113374
Epoch Step: 490 / 819 Loss: 26.146995544433594 Tokens per Sec: 13142.254421428226
Epoch Step: 495 / 819 Loss: 29.355602264404297 Tokens per Sec: 16143.015992016506
Epoch Step: 500 / 819 Loss: 18.18071937561035 Tokens per Sec: 13564.108357094829
Epoch Step: 505 / 819 Loss: 20.02189826965332 Tokens per Sec: 12517.826295501878
Epoch Step: 510 / 819 Loss: 30.01454734802246 Tokens per Sec: 14378.883670191093
Epoch Step: 515 / 819 Loss: 30.654197692871094 Tokens per Sec: 14057.166974535143
Epoch Step: 520 / 819 Loss: 16.181852340698242 Tokens per Sec: 11596.2150636114
Epoch Step: 525 / 819 Loss: 29.281566619873047 Tokens per Sec: 14747.126910635818
Epoch Step: 530 / 819 Loss: 20.173412322998047 Tokens per Sec: 14761.620693927594
Epoch Step: 535 / 819 Loss: 18.287723541259766 Tokens per Sec: 14095.638759012403
Epoch Step: 540 / 819 Loss: 18.162731170654297 Tokens per Sec: 14576.370301083132
Epoch Step: 545 / 819 Loss: 217.9107666015625 Tokens per Sec: 14943.925727181268
Epoch Step: 550 / 819 Loss: 193.05738830566406 Tokens per Sec: 13326.84263344389
Epoch Step: 555 / 819 Loss: 22.874244689941406 Tokens per Sec: 14833.634533654747
Epoch Step: 560 / 819 Loss: 219.03143310546875 Tokens per Sec: 14543.80508501583
Epoch Step: 565 / 819 Loss: 25.093090057373047 Tokens per Sec: 14371.423784409477
Epoch Step: 570 / 819 Loss: 27.40876007080078 Tokens per Sec: 15378.223633750184
Epoch Step: 575 / 819 Loss: 24.031030654907227 Tokens per Sec: 14596.120521056293
Epoch Step: 580 / 819 Loss: 23.399497985839844 Tokens per Sec: 14065.150843193278
Epoch Step: 585 / 819 Loss: 21.199235916137695 Tokens per Sec: 15156.362983376683
Epoch Step: 590 / 819 Loss: 19.002779006958008 Tokens per Sec: 14618.571902010015
Epoch Step: 595 / 819 Loss: 27.906208038330078 Tokens per Sec: 14678.728325045311
Epoch Step: 600 / 819 Loss: 22.952777862548828 Tokens per Sec: 14800.619812041623
Epoch Step: 605 / 819 Loss: 19.805418014526367 Tokens per Sec: 12108.669382452057
Epoch Step: 610 / 819 Loss: 19.440547943115234 Tokens per Sec: 12873.748821963625
Epoch Step: 615 / 819 Loss: 265.1774597167969 Tokens per Sec: 15438.037240677408
Epoch Step: 620 / 819 Loss: 24.50605010986328 Tokens per Sec: 13468.724750712277
Epoch Step: 625 / 819 Loss: 13.70368766784668 Tokens per Sec: 15129.407070191688
Epoch Step: 630 / 819 Loss: 19.490699768066406 Tokens per Sec: 14158.404481309875
Epoch Step: 635 / 819 Loss: 25.482376098632812 Tokens per Sec: 13637.412506930545
Epoch Step: 640 / 819 Loss: 23.77458381652832 Tokens per Sec: 14367.747548955684
Epoch Step: 645 / 819 Loss: 24.745149612426758 Tokens per Sec: 13085.590750830417
Epoch Step: 650 / 819 Loss: 19.544212341308594 Tokens per Sec: 14443.571970015808
Epoch Step: 655 / 819 Loss: 21.42197608947754 Tokens per Sec: 14144.951298578177
Epoch Step: 660 / 819 Loss: 19.130035400390625 Tokens per Sec: 13618.271391107788
Epoch Step: 665 / 819 Loss: 229.2123260498047 Tokens per Sec: 14775.22310872991
Epoch Step: 670 / 819 Loss: 24.09078025817871 Tokens per Sec: 13851.293597363132
Epoch Step: 675 / 819 Loss: 25.610240936279297 Tokens per Sec: 14622.605144664341
Epoch Step: 680 / 819 Loss: 21.369400024414062 Tokens per Sec: 15031.90848094451
Epoch Step: 685 / 819 Loss: 20.344804763793945 Tokens per Sec: 14407.039525212838
Epoch Step: 690 / 819 Loss: 20.612253189086914 Tokens per Sec: 15011.852277927088
Epoch Step: 695 / 819 Loss: 22.13087272644043 Tokens per Sec: 15979.855205588929
Epoch Step: 700 / 819 Loss: 23.49175262451172 Tokens per Sec: 16319.94431905719
Epoch Step: 705 / 819 Loss: 190.12326049804688 Tokens per Sec: 15943.372091267925
Epoch Step: 710 / 819 Loss: 25.39056396484375 Tokens per Sec: 13306.302034813269
Epoch Step: 715 / 819 Loss: 25.19449806213379 Tokens per Sec: 14773.691369192878
Epoch Step: 720 / 819 Loss: 27.48865509033203 Tokens per Sec: 13385.561935103873
Epoch Step: 725 / 819 Loss: 27.70174789428711 Tokens per Sec: 13392.068424999103
Epoch Step: 730 / 819 Loss: 26.637176513671875 Tokens per Sec: 14917.46285722305
Epoch Step: 735 / 819 Loss: 18.719629287719727 Tokens per Sec: 17011.490576580316
Epoch Step: 740 / 819 Loss: 21.999780654907227 Tokens per Sec: 13561.845890721925
Epoch Step: 745 / 819 Loss: 27.74950408935547 Tokens per Sec: 13179.638403654388
Epoch Step: 750 / 819 Loss: 18.992977142333984 Tokens per Sec: 13430.944556019444
Epoch Step: 755 / 819 Loss: 132.31260681152344 Tokens per Sec: 13306.745831780541
Epoch Step: 760 / 819 Loss: 25.087669372558594 Tokens per Sec: 14740.876391031084
Epoch Step: 765 / 819 Loss: 29.041667938232422 Tokens per Sec: 14133.9748509924
Epoch Step: 770 / 819 Loss: 23.035511016845703 Tokens per Sec: 12373.943665874202
Epoch Step: 775 / 819 Loss: 26.967395782470703 Tokens per Sec: 14061.795240636504
Epoch Step: 780 / 819 Loss: 24.816328048706055 Tokens per Sec: 13863.497641382526
Epoch Step: 785 / 819 Loss: 25.939334869384766 Tokens per Sec: 14167.516010673064
Epoch Step: 790 / 819 Loss: 25.15142250061035 Tokens per Sec: 14800.62200401426
Epoch Step: 795 / 819 Loss: 27.9144229888916 Tokens per Sec: 13160.578975167891
Epoch Step: 800 / 819 Loss: 127.09321594238281 Tokens per Sec: 14268.502147660418
Epoch Step: 805 / 819 Loss: 21.57844352722168 Tokens per Sec: 13813.931560874877
Epoch Step: 810 / 819 Loss: 21.41832733154297 Tokens per Sec: 13056.375331198129
Epoch Step: 815 / 819 Loss: 20.797393798828125 Tokens per Sec: 11050.45837702402
Epoch ended with duration 0:04:36.549691
Train perplexity: 1.7234628044408427
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.803840
Validation perplexity: 1.4999755977477114
Model saved best_on_validation!
Model saved checkpoint!
Epoch 16 / 1000
Epoch Step: 5 / 819 Loss: 16.243816375732422 Tokens per Sec: 13735.20360878858
Epoch Step: 10 / 819 Loss: 20.502033233642578 Tokens per Sec: 14228.080327504373
Epoch Step: 15 / 819 Loss: 27.73891830444336 Tokens per Sec: 13701.096985036855
Epoch Step: 20 / 819 Loss: 20.977670669555664 Tokens per Sec: 14554.034785580696
Epoch Step: 25 / 819 Loss: 18.037151336669922 Tokens per Sec: 14188.557664925582
Epoch Step: 30 / 819 Loss: 24.887592315673828 Tokens per Sec: 12149.417595433968
Epoch Step: 35 / 819 Loss: 17.659954071044922 Tokens per Sec: 15464.544430660855
Epoch Step: 40 / 819 Loss: 24.14010238647461 Tokens per Sec: 13698.099343384412
Epoch Step: 45 / 819 Loss: 22.50606918334961 Tokens per Sec: 13383.57556508765
Epoch Step: 50 / 819 Loss: 27.583852767944336 Tokens per Sec: 13751.34806096808
Epoch Step: 55 / 819 Loss: 27.706546783447266 Tokens per Sec: 13670.597963278267
Epoch Step: 60 / 819 Loss: 23.04143714904785 Tokens per Sec: 13273.624561068813
Epoch Step: 65 / 819 Loss: 19.754535675048828 Tokens per Sec: 14180.616578691739
Epoch Step: 70 / 819 Loss: 15.87979793548584 Tokens per Sec: 14911.792484150672
Epoch Step: 75 / 819 Loss: 17.643329620361328 Tokens per Sec: 13206.946602275826
Epoch Step: 80 / 819 Loss: 28.46662139892578 Tokens per Sec: 14742.443644644574
Epoch Step: 85 / 819 Loss: 22.572250366210938 Tokens per Sec: 13201.272671269913
Epoch Step: 90 / 819 Loss: 23.96017074584961 Tokens per Sec: 14222.291864369414
Epoch Step: 95 / 819 Loss: 19.21044921875 Tokens per Sec: 13714.608841011162
Epoch Step: 100 / 819 Loss: 22.087745666503906 Tokens per Sec: 16579.578551824645
Epoch Step: 105 / 819 Loss: 21.558792114257812 Tokens per Sec: 14673.554504212992
Epoch Step: 110 / 819 Loss: 17.908599853515625 Tokens per Sec: 14971.810277571534
Epoch Step: 115 / 819 Loss: 15.313241958618164 Tokens per Sec: 14631.151875850137
Epoch Step: 120 / 819 Loss: 21.352588653564453 Tokens per Sec: 15137.787481568414
Epoch Step: 125 / 819 Loss: 15.789495468139648 Tokens per Sec: 13668.305376546075
Epoch Step: 130 / 819 Loss: 188.34686279296875 Tokens per Sec: 13791.839389778985
Epoch Step: 135 / 819 Loss: 21.47365379333496 Tokens per Sec: 12717.953398205276
Epoch Step: 140 / 819 Loss: 25.524200439453125 Tokens per Sec: 16091.619062287782
Epoch Step: 145 / 819 Loss: 15.171285629272461 Tokens per Sec: 12732.195424078243
Epoch Step: 150 / 819 Loss: 22.546579360961914 Tokens per Sec: 14265.02668637763
Epoch Step: 155 / 819 Loss: 22.136058807373047 Tokens per Sec: 12534.483614206163
Epoch Step: 160 / 819 Loss: 21.678977966308594 Tokens per Sec: 14810.48243965891
Epoch Step: 165 / 819 Loss: 22.596351623535156 Tokens per Sec: 14448.91868708054
Epoch Step: 170 / 819 Loss: 21.50908660888672 Tokens per Sec: 13676.704918213865
Epoch Step: 175 / 819 Loss: 176.05140686035156 Tokens per Sec: 14223.239031264566
Epoch Step: 180 / 819 Loss: 18.498666763305664 Tokens per Sec: 13416.347990150673
Epoch Step: 185 / 819 Loss: 24.258342742919922 Tokens per Sec: 14243.238095126177
Epoch Step: 190 / 819 Loss: 21.699363708496094 Tokens per Sec: 15097.342113682398
Epoch Step: 195 / 819 Loss: 25.119243621826172 Tokens per Sec: 13151.408731482834
Epoch Step: 200 / 819 Loss: 25.329376220703125 Tokens per Sec: 13574.762687653585
Epoch Step: 205 / 819 Loss: 16.34575080871582 Tokens per Sec: 14874.265552198754
Epoch Step: 210 / 819 Loss: 22.088191986083984 Tokens per Sec: 16584.080929721247
Epoch Step: 215 / 819 Loss: 19.42081642150879 Tokens per Sec: 14851.998148685027
Epoch Step: 220 / 819 Loss: 19.879642486572266 Tokens per Sec: 13689.936330060897
Epoch Step: 225 / 819 Loss: 26.63951301574707 Tokens per Sec: 15715.632916422734
Epoch Step: 230 / 819 Loss: 19.89944076538086 Tokens per Sec: 13818.623990342498
Epoch Step: 235 / 819 Loss: 28.228504180908203 Tokens per Sec: 14599.416852278624
Epoch Step: 240 / 819 Loss: 18.354822158813477 Tokens per Sec: 15498.16049960366
Epoch Step: 245 / 819 Loss: 25.843265533447266 Tokens per Sec: 15084.06043957643
Epoch Step: 250 / 819 Loss: 26.569250106811523 Tokens per Sec: 12901.581906710784
Epoch Step: 255 / 819 Loss: 31.47336769104004 Tokens per Sec: 13702.817754828433
Epoch Step: 260 / 819 Loss: 22.19285774230957 Tokens per Sec: 12788.026919493444
Epoch Step: 265 / 819 Loss: 258.7679138183594 Tokens per Sec: 14405.72156351329
Epoch Step: 270 / 819 Loss: 26.613605499267578 Tokens per Sec: 14621.199473709226
Epoch Step: 275 / 819 Loss: 23.869873046875 Tokens per Sec: 14400.277908807462
Epoch Step: 280 / 819 Loss: 26.78510093688965 Tokens per Sec: 14683.519802682637
Epoch Step: 285 / 819 Loss: 141.11605834960938 Tokens per Sec: 14338.839866348402
Epoch Step: 290 / 819 Loss: 23.850080490112305 Tokens per Sec: 13520.229013954331
Epoch Step: 295 / 819 Loss: 25.621673583984375 Tokens per Sec: 12697.920741980699
Epoch Step: 300 / 819 Loss: 17.02261734008789 Tokens per Sec: 16409.66263266567
Epoch Step: 305 / 819 Loss: 15.878061294555664 Tokens per Sec: 13254.10617879114
Epoch Step: 310 / 819 Loss: 27.638845443725586 Tokens per Sec: 13521.747084692046
Epoch Step: 315 / 819 Loss: 19.45064926147461 Tokens per Sec: 14017.735045996213
Epoch Step: 320 / 819 Loss: 17.968313217163086 Tokens per Sec: 13252.217226913144
Epoch Step: 325 / 819 Loss: 17.791515350341797 Tokens per Sec: 13994.211067693483
Epoch Step: 330 / 819 Loss: 25.253225326538086 Tokens per Sec: 12855.699710941313
Epoch Step: 335 / 819 Loss: 25.467559814453125 Tokens per Sec: 13833.604219681127
Epoch Step: 340 / 819 Loss: 22.24677276611328 Tokens per Sec: 14941.72217786241
Epoch Step: 345 / 819 Loss: 26.753337860107422 Tokens per Sec: 16237.946580024729
Epoch Step: 350 / 819 Loss: 22.22544288635254 Tokens per Sec: 15472.53185446047
Epoch Step: 355 / 819 Loss: 22.70172882080078 Tokens per Sec: 14606.118287688829
Epoch Step: 360 / 819 Loss: 21.351106643676758 Tokens per Sec: 15189.24943688949
Epoch Step: 365 / 819 Loss: 25.058788299560547 Tokens per Sec: 14544.926483183825
Epoch Step: 370 / 819 Loss: 243.6917724609375 Tokens per Sec: 12753.605176632314
Epoch Step: 375 / 819 Loss: 28.372264862060547 Tokens per Sec: 14087.319338529767
Epoch Step: 380 / 819 Loss: 21.672176361083984 Tokens per Sec: 14877.498356851145
Epoch Step: 385 / 819 Loss: 22.981473922729492 Tokens per Sec: 13811.697386881906
Epoch Step: 390 / 819 Loss: 20.5819149017334 Tokens per Sec: 14371.036577237033
Epoch Step: 395 / 819 Loss: 23.170724868774414 Tokens per Sec: 13894.03105244974
Epoch Step: 400 / 819 Loss: 25.964975357055664 Tokens per Sec: 15064.08414142267
Epoch Step: 405 / 819 Loss: 27.430511474609375 Tokens per Sec: 14047.599348209313
Epoch Step: 410 / 819 Loss: 28.086904525756836 Tokens per Sec: 13285.647748899948
Epoch Step: 415 / 819 Loss: 224.10971069335938 Tokens per Sec: 12847.003786804959
Epoch Step: 420 / 819 Loss: 251.09178161621094 Tokens per Sec: 14202.892831700641
Epoch Step: 425 / 819 Loss: 23.371728897094727 Tokens per Sec: 14513.291137142169
Epoch Step: 430 / 819 Loss: 20.255910873413086 Tokens per Sec: 14238.968540655207
Epoch Step: 435 / 819 Loss: 23.79047203063965 Tokens per Sec: 12612.237529685795
Epoch Step: 440 / 819 Loss: 22.138561248779297 Tokens per Sec: 13319.649756319932
Epoch Step: 445 / 819 Loss: 22.111644744873047 Tokens per Sec: 13552.59871371727
Epoch Step: 450 / 819 Loss: 18.775161743164062 Tokens per Sec: 14631.528183606493
Epoch Step: 455 / 819 Loss: 17.535179138183594 Tokens per Sec: 13232.32661912798
Epoch Step: 460 / 819 Loss: 15.95231819152832 Tokens per Sec: 11707.284404908647
Epoch Step: 465 / 819 Loss: 23.79925537109375 Tokens per Sec: 13264.679917806927
Epoch Step: 470 / 819 Loss: 22.629623413085938 Tokens per Sec: 14629.30616940464
Epoch Step: 475 / 819 Loss: 21.080514907836914 Tokens per Sec: 15324.713493129064
Epoch Step: 480 / 819 Loss: 26.10044288635254 Tokens per Sec: 12773.170251064552
Epoch Step: 485 / 819 Loss: 23.435657501220703 Tokens per Sec: 14936.029518937657
Epoch Step: 490 / 819 Loss: 23.419967651367188 Tokens per Sec: 13285.11354675703
Epoch Step: 495 / 819 Loss: 20.68520736694336 Tokens per Sec: 13628.288906968653
Epoch Step: 500 / 819 Loss: 18.202239990234375 Tokens per Sec: 15432.83017050356
Epoch Step: 505 / 819 Loss: 17.38697052001953 Tokens per Sec: 13067.956222406414
Epoch Step: 510 / 819 Loss: 272.5517883300781 Tokens per Sec: 17037.201441800786
Epoch Step: 515 / 819 Loss: 16.214765548706055 Tokens per Sec: 12889.668799369823
Epoch Step: 520 / 819 Loss: 18.150070190429688 Tokens per Sec: 13011.918897817097
Epoch Step: 525 / 819 Loss: 19.044063568115234 Tokens per Sec: 13326.340026800586
Epoch Step: 530 / 819 Loss: 24.123321533203125 Tokens per Sec: 14368.090194654167
Epoch Step: 535 / 819 Loss: 22.166135787963867 Tokens per Sec: 15134.06480979151
Epoch Step: 540 / 819 Loss: 19.685165405273438 Tokens per Sec: 15174.531315542205
Epoch Step: 545 / 819 Loss: 18.77910041809082 Tokens per Sec: 14469.405304194745
Epoch Step: 550 / 819 Loss: 18.009910583496094 Tokens per Sec: 12649.841983415816
Epoch Step: 555 / 819 Loss: 16.62312889099121 Tokens per Sec: 13020.583816060149
Epoch Step: 560 / 819 Loss: 225.13917541503906 Tokens per Sec: 15294.312899323653
Epoch Step: 565 / 819 Loss: 21.48458480834961 Tokens per Sec: 14145.78703254621
Epoch Step: 570 / 819 Loss: 25.37708854675293 Tokens per Sec: 14204.945408323749
Epoch Step: 575 / 819 Loss: 28.925859451293945 Tokens per Sec: 14116.179416813246
Epoch Step: 580 / 819 Loss: 18.838638305664062 Tokens per Sec: 12962.134287724675
Epoch Step: 585 / 819 Loss: 18.679851531982422 Tokens per Sec: 12944.030837582217
Epoch Step: 590 / 819 Loss: 25.772052764892578 Tokens per Sec: 14585.331444896514
Epoch Step: 595 / 819 Loss: 24.117645263671875 Tokens per Sec: 14252.448394376494
Epoch Step: 600 / 819 Loss: 27.191091537475586 Tokens per Sec: 13323.977241724753
Epoch Step: 605 / 819 Loss: 21.488845825195312 Tokens per Sec: 13938.731223188506
Epoch Step: 610 / 819 Loss: 18.451213836669922 Tokens per Sec: 14552.217399618263
Epoch Step: 615 / 819 Loss: 171.3057861328125 Tokens per Sec: 13500.600894647125
Epoch Step: 620 / 819 Loss: 16.88396453857422 Tokens per Sec: 15226.418276945478
Epoch Step: 625 / 819 Loss: 23.962255477905273 Tokens per Sec: 13075.988916353816
Epoch Step: 630 / 819 Loss: 21.03860855102539 Tokens per Sec: 12704.544778111269
Epoch Step: 635 / 819 Loss: 21.09027099609375 Tokens per Sec: 12672.832694871759
Epoch Step: 640 / 819 Loss: 25.518238067626953 Tokens per Sec: 14581.728594756709
Epoch Step: 645 / 819 Loss: 21.247360229492188 Tokens per Sec: 15129.158272776302
Epoch Step: 650 / 819 Loss: 275.5026550292969 Tokens per Sec: 13662.549561602864
Epoch Step: 655 / 819 Loss: 15.528463363647461 Tokens per Sec: 13052.83093156899
Epoch Step: 660 / 819 Loss: 22.395259857177734 Tokens per Sec: 13219.978253069963
Epoch Step: 665 / 819 Loss: 19.402742385864258 Tokens per Sec: 14307.786960137299
Epoch Step: 670 / 819 Loss: 25.01805877685547 Tokens per Sec: 14498.536523313505
Epoch Step: 675 / 819 Loss: 21.593156814575195 Tokens per Sec: 14879.444017121165
Epoch Step: 680 / 819 Loss: 26.07912826538086 Tokens per Sec: 12486.754487768818
Epoch Step: 685 / 819 Loss: 22.186098098754883 Tokens per Sec: 15800.640527602072
Epoch Step: 690 / 819 Loss: 24.625749588012695 Tokens per Sec: 15431.4216183165
Epoch Step: 695 / 819 Loss: 23.832155227661133 Tokens per Sec: 13602.151541867379
Epoch Step: 700 / 819 Loss: 26.0513973236084 Tokens per Sec: 13828.845724885914
Epoch Step: 705 / 819 Loss: 24.16387367248535 Tokens per Sec: 15920.231775211625
Epoch Step: 710 / 819 Loss: 23.586992263793945 Tokens per Sec: 15599.532827980402
Epoch Step: 715 / 819 Loss: 13.745421409606934 Tokens per Sec: 12710.073730409727
Epoch Step: 720 / 819 Loss: 21.062789916992188 Tokens per Sec: 13945.90900155393
Epoch Step: 725 / 819 Loss: 16.506437301635742 Tokens per Sec: 13018.2083414161
Epoch Step: 730 / 819 Loss: 16.347036361694336 Tokens per Sec: 14967.720190369586
Epoch Step: 735 / 819 Loss: 17.885616302490234 Tokens per Sec: 13715.621823764772
Epoch Step: 740 / 819 Loss: 22.767316818237305 Tokens per Sec: 13160.996740202458
Epoch Step: 745 / 819 Loss: 21.24169158935547 Tokens per Sec: 13761.381520008037
Epoch Step: 750 / 819 Loss: 217.91026306152344 Tokens per Sec: 16490.850439821308
Epoch Step: 755 / 819 Loss: 19.05490493774414 Tokens per Sec: 13927.26700806137
Epoch Step: 760 / 819 Loss: 24.517784118652344 Tokens per Sec: 14018.271974937586
Epoch Step: 765 / 819 Loss: 16.176555633544922 Tokens per Sec: 15718.077012581056
Epoch Step: 770 / 819 Loss: 22.27372932434082 Tokens per Sec: 13315.27989820701
Epoch Step: 775 / 819 Loss: 234.40464782714844 Tokens per Sec: 14891.568479998805
Epoch Step: 780 / 819 Loss: 184.52357482910156 Tokens per Sec: 14249.064738674564
Epoch Step: 785 / 819 Loss: 22.01237678527832 Tokens per Sec: 14862.563074467542
Epoch Step: 790 / 819 Loss: 22.693584442138672 Tokens per Sec: 13717.049324235568
Epoch Step: 795 / 819 Loss: 28.21706771850586 Tokens per Sec: 14904.014615634276
Epoch Step: 800 / 819 Loss: 25.945083618164062 Tokens per Sec: 15258.25298948229
Epoch Step: 805 / 819 Loss: 22.141725540161133 Tokens per Sec: 15704.310466542896
Epoch Step: 810 / 819 Loss: 24.61309051513672 Tokens per Sec: 14163.251546802516
Epoch Step: 815 / 819 Loss: 21.979814529418945 Tokens per Sec: 10590.357614951401
Epoch ended with duration 0:04:36.063319
Train perplexity: 1.6189174384066105
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.523246
Validation perplexity: 1.762345806404752
Epoch 17 / 1000
Epoch Step: 5 / 819 Loss: 20.89902114868164 Tokens per Sec: 12784.579717737379
Epoch Step: 10 / 819 Loss: 22.507909774780273 Tokens per Sec: 13184.139216580703
Epoch Step: 15 / 819 Loss: 16.860715866088867 Tokens per Sec: 13227.256857814946
Epoch Step: 20 / 819 Loss: 24.197328567504883 Tokens per Sec: 12903.28165326106
Epoch Step: 25 / 819 Loss: 21.310516357421875 Tokens per Sec: 12374.483743007797
Epoch Step: 30 / 819 Loss: 25.830078125 Tokens per Sec: 15693.006830216536
Epoch Step: 35 / 819 Loss: 18.699520111083984 Tokens per Sec: 13503.368365379689
Epoch Step: 40 / 819 Loss: 18.352876663208008 Tokens per Sec: 13902.49725367602
Epoch Step: 45 / 819 Loss: 222.7201690673828 Tokens per Sec: 13716.925855280784
Epoch Step: 50 / 819 Loss: 18.97286033630371 Tokens per Sec: 16126.058217532773
Epoch Step: 55 / 819 Loss: 14.746994018554688 Tokens per Sec: 13265.840517581764
Epoch Step: 60 / 819 Loss: 21.46556854248047 Tokens per Sec: 13387.24158028099
Epoch Step: 65 / 819 Loss: 21.336803436279297 Tokens per Sec: 14390.030989187022
Epoch Step: 70 / 819 Loss: 19.214126586914062 Tokens per Sec: 14580.361152265436
Epoch Step: 75 / 819 Loss: 23.827816009521484 Tokens per Sec: 13839.414086636263
Epoch Step: 80 / 819 Loss: 27.8656063079834 Tokens per Sec: 15715.058945995052
Epoch Step: 85 / 819 Loss: 22.4652042388916 Tokens per Sec: 14547.357969418652
Epoch Step: 90 / 819 Loss: 16.29392433166504 Tokens per Sec: 14273.233339757286
Epoch Step: 95 / 819 Loss: 22.201871871948242 Tokens per Sec: 14981.544393451324
Epoch Step: 100 / 819 Loss: 21.399917602539062 Tokens per Sec: 13419.691225556497
Epoch Step: 105 / 819 Loss: 18.551361083984375 Tokens per Sec: 15903.407127488503
Epoch Step: 110 / 819 Loss: 18.270437240600586 Tokens per Sec: 14370.874510291496
Epoch Step: 115 / 819 Loss: 24.613428115844727 Tokens per Sec: 13023.134716802886
Epoch Step: 120 / 819 Loss: 12.743788719177246 Tokens per Sec: 14937.104351651973
Epoch Step: 125 / 819 Loss: 20.898155212402344 Tokens per Sec: 14551.02909879301
Epoch Step: 130 / 819 Loss: 22.368066787719727 Tokens per Sec: 13189.125406915906
Epoch Step: 135 / 819 Loss: 16.959686279296875 Tokens per Sec: 11895.07100773547
Epoch Step: 140 / 819 Loss: 22.040678024291992 Tokens per Sec: 14155.299324487749
Epoch Step: 145 / 819 Loss: 25.691749572753906 Tokens per Sec: 15099.373934175106
Epoch Step: 150 / 819 Loss: 284.3141784667969 Tokens per Sec: 13326.827310089036
Epoch Step: 155 / 819 Loss: 19.554494857788086 Tokens per Sec: 13501.465170546418
Epoch Step: 160 / 819 Loss: 18.79828453063965 Tokens per Sec: 14511.636189249473
Epoch Step: 165 / 819 Loss: 21.295345306396484 Tokens per Sec: 14966.129011313298
Epoch Step: 170 / 819 Loss: 20.68880844116211 Tokens per Sec: 14262.448094796106
Epoch Step: 175 / 819 Loss: 23.91415023803711 Tokens per Sec: 12747.861737802625
Epoch Step: 180 / 819 Loss: 19.91779327392578 Tokens per Sec: 12781.257023431666
Epoch Step: 185 / 819 Loss: 20.551334381103516 Tokens per Sec: 15246.257226494103
Epoch Step: 190 / 819 Loss: 16.54353141784668 Tokens per Sec: 13604.42676654672
Epoch Step: 195 / 819 Loss: 24.038908004760742 Tokens per Sec: 15862.721553368301
Epoch Step: 200 / 819 Loss: 23.119062423706055 Tokens per Sec: 14460.536382058772
Epoch Step: 205 / 819 Loss: 18.927379608154297 Tokens per Sec: 14148.91848683445
Epoch Step: 210 / 819 Loss: 25.1499080657959 Tokens per Sec: 13832.641034109389
Epoch Step: 215 / 819 Loss: 20.890480041503906 Tokens per Sec: 13537.753789332317
Epoch Step: 220 / 819 Loss: 206.57937622070312 Tokens per Sec: 14095.983017896502
Epoch Step: 225 / 819 Loss: 19.158113479614258 Tokens per Sec: 11949.517821374899
Epoch Step: 230 / 819 Loss: 18.02881622314453 Tokens per Sec: 14888.28873137934
Epoch Step: 235 / 819 Loss: 16.822404861450195 Tokens per Sec: 13072.347687815754
Epoch Step: 240 / 819 Loss: 25.021446228027344 Tokens per Sec: 16348.53406369379
Epoch Step: 245 / 819 Loss: 23.688051223754883 Tokens per Sec: 15954.91201077922
Epoch Step: 250 / 819 Loss: 19.394052505493164 Tokens per Sec: 12834.46095759615
Epoch Step: 255 / 819 Loss: 24.779022216796875 Tokens per Sec: 13130.061609730024
Epoch Step: 260 / 819 Loss: 15.654221534729004 Tokens per Sec: 13864.389253276384
Epoch Step: 265 / 819 Loss: 17.691556930541992 Tokens per Sec: 12430.089586690368
Epoch Step: 270 / 819 Loss: 19.83781623840332 Tokens per Sec: 13598.274882741092
Epoch Step: 275 / 819 Loss: 25.534255981445312 Tokens per Sec: 13420.031915735006
Epoch Step: 280 / 819 Loss: 20.539915084838867 Tokens per Sec: 14886.508838923595
Epoch Step: 285 / 819 Loss: 14.316728591918945 Tokens per Sec: 13350.37998806498
Epoch Step: 290 / 819 Loss: 17.208660125732422 Tokens per Sec: 16838.480374833023
Epoch Step: 295 / 819 Loss: 19.332353591918945 Tokens per Sec: 12940.777698045425
Epoch Step: 300 / 819 Loss: 23.061418533325195 Tokens per Sec: 13131.305246934824
Epoch Step: 305 / 819 Loss: 268.9671936035156 Tokens per Sec: 15512.105944554707
Epoch Step: 310 / 819 Loss: 19.14261245727539 Tokens per Sec: 14194.850942331534
Epoch Step: 315 / 819 Loss: 19.54937744140625 Tokens per Sec: 13432.826070096742
Epoch Step: 320 / 819 Loss: 144.46087646484375 Tokens per Sec: 14267.917673979362
Epoch Step: 325 / 819 Loss: 24.923816680908203 Tokens per Sec: 12860.481419014319
Epoch Step: 330 / 819 Loss: 20.47456932067871 Tokens per Sec: 13420.165164353743
Epoch Step: 335 / 819 Loss: 147.8673553466797 Tokens per Sec: 14274.078585398103
Epoch Step: 340 / 819 Loss: 28.817031860351562 Tokens per Sec: 12921.712982582541
Epoch Step: 345 / 819 Loss: 18.21271324157715 Tokens per Sec: 13928.141149034576
Epoch Step: 350 / 819 Loss: 21.622337341308594 Tokens per Sec: 14112.000044009981
Epoch Step: 355 / 819 Loss: 21.380353927612305 Tokens per Sec: 12480.006297555445
Epoch Step: 360 / 819 Loss: 19.021915435791016 Tokens per Sec: 14717.373762158932
Epoch Step: 365 / 819 Loss: 22.008337020874023 Tokens per Sec: 15497.50695524807
Epoch Step: 370 / 819 Loss: 19.465248107910156 Tokens per Sec: 13234.71949415782
Epoch Step: 375 / 819 Loss: 24.880645751953125 Tokens per Sec: 15690.188313546196
Epoch Step: 380 / 819 Loss: 20.80016326904297 Tokens per Sec: 15161.403939026239
Epoch Step: 385 / 819 Loss: 14.566924095153809 Tokens per Sec: 14230.332052786172
Epoch Step: 390 / 819 Loss: 26.99346923828125 Tokens per Sec: 14052.742136074434
Epoch Step: 395 / 819 Loss: 16.0756893157959 Tokens per Sec: 13737.218991670688
Epoch Step: 400 / 819 Loss: 15.918038368225098 Tokens per Sec: 13340.039989384783
Epoch Step: 405 / 819 Loss: 17.782672882080078 Tokens per Sec: 14616.675075718806
Epoch Step: 410 / 819 Loss: 17.762205123901367 Tokens per Sec: 14103.864196053837
Epoch Step: 415 / 819 Loss: 21.56348419189453 Tokens per Sec: 14966.607213229288
Epoch Step: 420 / 819 Loss: 18.976686477661133 Tokens per Sec: 13507.711577385688
Epoch Step: 425 / 819 Loss: 12.980801582336426 Tokens per Sec: 13921.074220291204
Epoch Step: 430 / 819 Loss: 26.94660758972168 Tokens per Sec: 13475.487460230634
Epoch Step: 435 / 819 Loss: 19.011245727539062 Tokens per Sec: 14260.700934293402
Epoch Step: 440 / 819 Loss: 25.2543888092041 Tokens per Sec: 14761.248754036598
Epoch Step: 445 / 819 Loss: 19.526613235473633 Tokens per Sec: 14286.58888009099
Epoch Step: 450 / 819 Loss: 16.96074867248535 Tokens per Sec: 14324.3535675692
Epoch Step: 455 / 819 Loss: 17.86223793029785 Tokens per Sec: 14061.96666806866
Epoch Step: 460 / 819 Loss: 20.400638580322266 Tokens per Sec: 12491.444196040307
Epoch Step: 465 / 819 Loss: 16.9793758392334 Tokens per Sec: 12869.036115628163
Epoch Step: 470 / 819 Loss: 20.388906478881836 Tokens per Sec: 13176.082341502666
Epoch Step: 475 / 819 Loss: 19.726613998413086 Tokens per Sec: 13983.800223515831
Epoch Step: 480 / 819 Loss: 15.695834159851074 Tokens per Sec: 15700.789668617625
Epoch Step: 485 / 819 Loss: 16.417984008789062 Tokens per Sec: 14487.13274861908
Epoch Step: 490 / 819 Loss: 22.981857299804688 Tokens per Sec: 12756.538309150472
Epoch Step: 495 / 819 Loss: 18.7508544921875 Tokens per Sec: 13879.439932554662
Epoch Step: 500 / 819 Loss: 19.84198570251465 Tokens per Sec: 14112.897800442315
Epoch Step: 505 / 819 Loss: 24.994163513183594 Tokens per Sec: 13326.016940163185
Epoch Step: 510 / 819 Loss: 12.549086570739746 Tokens per Sec: 13001.640374381723
Epoch Step: 515 / 819 Loss: 18.9732608795166 Tokens per Sec: 13772.140268887833
Epoch Step: 520 / 819 Loss: 18.74344825744629 Tokens per Sec: 13108.959879106038
Epoch Step: 525 / 819 Loss: 13.593482971191406 Tokens per Sec: 13119.304999715006
Epoch Step: 530 / 819 Loss: 28.635541915893555 Tokens per Sec: 13507.218094718135
Epoch Step: 535 / 819 Loss: 16.399192810058594 Tokens per Sec: 12163.89884286644
Epoch Step: 540 / 819 Loss: 23.164602279663086 Tokens per Sec: 13071.656998040467
Epoch Step: 545 / 819 Loss: 20.886991500854492 Tokens per Sec: 13692.276279340569
Epoch Step: 550 / 819 Loss: 20.18990135192871 Tokens per Sec: 14272.534962756039
Epoch Step: 555 / 819 Loss: 16.89718246459961 Tokens per Sec: 13570.096362130937
Epoch Step: 560 / 819 Loss: 263.85003662109375 Tokens per Sec: 14985.601751836371
Epoch Step: 565 / 819 Loss: 20.198806762695312 Tokens per Sec: 15366.949664725564
Epoch Step: 570 / 819 Loss: 130.5487823486328 Tokens per Sec: 14089.192728348558
Epoch Step: 575 / 819 Loss: 19.10410499572754 Tokens per Sec: 14245.556234555432
Epoch Step: 580 / 819 Loss: 26.54117202758789 Tokens per Sec: 15491.821769243636
Epoch Step: 585 / 819 Loss: 22.42228889465332 Tokens per Sec: 15569.785885298224
Epoch Step: 590 / 819 Loss: 21.685976028442383 Tokens per Sec: 15335.142477048528
Epoch Step: 595 / 819 Loss: 21.1251277923584 Tokens per Sec: 14114.672247599641
Epoch Step: 600 / 819 Loss: 26.297189712524414 Tokens per Sec: 14182.107384602472
Epoch Step: 605 / 819 Loss: 99.01411437988281 Tokens per Sec: 13431.460760688817
Epoch Step: 610 / 819 Loss: 26.111787796020508 Tokens per Sec: 14027.57213486783
Epoch Step: 615 / 819 Loss: 23.4386043548584 Tokens per Sec: 12155.920756745374
Epoch Step: 620 / 819 Loss: 202.8448944091797 Tokens per Sec: 14773.48891327634
Epoch Step: 625 / 819 Loss: 19.945478439331055 Tokens per Sec: 14522.283670655484
Epoch Step: 630 / 819 Loss: 25.940397262573242 Tokens per Sec: 13303.12544239975
Epoch Step: 635 / 819 Loss: 20.625837326049805 Tokens per Sec: 14899.569227132759
Epoch Step: 640 / 819 Loss: 16.933090209960938 Tokens per Sec: 13871.419101315181
Epoch Step: 645 / 819 Loss: 22.339862823486328 Tokens per Sec: 12579.297203251228
Epoch Step: 650 / 819 Loss: 16.25168800354004 Tokens per Sec: 16256.31948111108
Epoch Step: 655 / 819 Loss: 24.781518936157227 Tokens per Sec: 13497.40558269486
Epoch Step: 660 / 819 Loss: 19.25992774963379 Tokens per Sec: 13025.579594314246
Epoch Step: 665 / 819 Loss: 18.978443145751953 Tokens per Sec: 13633.519921616433
Epoch Step: 670 / 819 Loss: 22.380937576293945 Tokens per Sec: 15513.39383932679
Epoch Step: 675 / 819 Loss: 22.28412628173828 Tokens per Sec: 13801.032003990198
Epoch Step: 680 / 819 Loss: 20.743793487548828 Tokens per Sec: 14326.978163866446
Epoch Step: 685 / 819 Loss: 19.63789176940918 Tokens per Sec: 14335.34188987392
Epoch Step: 690 / 819 Loss: 23.055007934570312 Tokens per Sec: 12946.583472215918
Epoch Step: 695 / 819 Loss: 21.717098236083984 Tokens per Sec: 12646.325988896035
Epoch Step: 700 / 819 Loss: 26.103181838989258 Tokens per Sec: 13796.69413243222
Epoch Step: 705 / 819 Loss: 28.22723388671875 Tokens per Sec: 16806.439517180996
Epoch Step: 710 / 819 Loss: 16.299781799316406 Tokens per Sec: 12427.837492966928
Epoch Step: 715 / 819 Loss: 24.769302368164062 Tokens per Sec: 13406.272972529901
Epoch Step: 720 / 819 Loss: 19.249492645263672 Tokens per Sec: 13940.400683483074
Epoch Step: 725 / 819 Loss: 25.976757049560547 Tokens per Sec: 15477.899055761412
Epoch Step: 730 / 819 Loss: 29.64338493347168 Tokens per Sec: 13489.895906250897
Epoch Step: 735 / 819 Loss: 17.048524856567383 Tokens per Sec: 13178.549362620211
Epoch Step: 740 / 819 Loss: 23.127676010131836 Tokens per Sec: 14504.54064991358
Epoch Step: 745 / 819 Loss: 19.4693660736084 Tokens per Sec: 16036.264746814208
Epoch Step: 750 / 819 Loss: 21.564939498901367 Tokens per Sec: 15594.834566307181
Epoch Step: 755 / 819 Loss: 14.94643783569336 Tokens per Sec: 14787.18664549539
Epoch Step: 760 / 819 Loss: 20.088741302490234 Tokens per Sec: 14551.489990884094
Epoch Step: 765 / 819 Loss: 16.550262451171875 Tokens per Sec: 15376.376397024433
Epoch Step: 770 / 819 Loss: 19.685693740844727 Tokens per Sec: 13923.978291331161
Epoch Step: 775 / 819 Loss: 20.084131240844727 Tokens per Sec: 15761.840867624162
Epoch Step: 780 / 819 Loss: 17.162582397460938 Tokens per Sec: 14618.360499351425
Epoch Step: 785 / 819 Loss: 26.326831817626953 Tokens per Sec: 13296.20249798944
Epoch Step: 790 / 819 Loss: 23.874940872192383 Tokens per Sec: 13416.11185667182
Epoch Step: 795 / 819 Loss: 196.88722229003906 Tokens per Sec: 12730.02443399965
Epoch Step: 800 / 819 Loss: 20.110929489135742 Tokens per Sec: 13764.670943039446
Epoch Step: 805 / 819 Loss: 162.24412536621094 Tokens per Sec: 10837.999031346406
Epoch Step: 810 / 819 Loss: 21.01443099975586 Tokens per Sec: 14120.378233753916
Epoch Step: 815 / 819 Loss: 19.059444427490234 Tokens per Sec: 11603.208767934628
Epoch ended with duration 0:04:38.174310
Train perplexity: 1.643483909848477
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.880213
Validation perplexity: 1.5706400343732367
Epoch 18 / 1000
Epoch Step: 5 / 819 Loss: 22.919157028198242 Tokens per Sec: 16131.892562928737
Epoch Step: 10 / 819 Loss: 173.57516479492188 Tokens per Sec: 13759.861457669293
Epoch Step: 15 / 819 Loss: 17.205936431884766 Tokens per Sec: 14256.525884694793
Epoch Step: 20 / 819 Loss: 19.533782958984375 Tokens per Sec: 12916.792398841812
Epoch Step: 25 / 819 Loss: 25.619686126708984 Tokens per Sec: 14567.174133566452
Epoch Step: 30 / 819 Loss: 20.350440979003906 Tokens per Sec: 15363.29903930723
Epoch Step: 35 / 819 Loss: 29.02882194519043 Tokens per Sec: 15993.7567732154
Epoch Step: 40 / 819 Loss: 20.30498695373535 Tokens per Sec: 13260.922325632042
Epoch Step: 45 / 819 Loss: 18.286806106567383 Tokens per Sec: 14902.739254491213
Epoch Step: 50 / 819 Loss: 25.86606788635254 Tokens per Sec: 14462.352157875317
Epoch Step: 55 / 819 Loss: 20.43868064880371 Tokens per Sec: 13563.376169543517
Epoch Step: 60 / 819 Loss: 19.14089584350586 Tokens per Sec: 15466.803814932222
Epoch Step: 65 / 819 Loss: 18.23447036743164 Tokens per Sec: 14069.008265091861
Epoch Step: 70 / 819 Loss: 20.391185760498047 Tokens per Sec: 13817.30482885892
Epoch Step: 75 / 819 Loss: 126.45207214355469 Tokens per Sec: 13396.510914395258
Epoch Step: 80 / 819 Loss: 20.917064666748047 Tokens per Sec: 13636.413892760873
Epoch Step: 85 / 819 Loss: 19.275453567504883 Tokens per Sec: 12257.912918372855
Epoch Step: 90 / 819 Loss: 25.248380661010742 Tokens per Sec: 14297.199122723636
Epoch Step: 95 / 819 Loss: 22.517393112182617 Tokens per Sec: 15239.116574170095
Epoch Step: 100 / 819 Loss: 18.277544021606445 Tokens per Sec: 14407.076885408927
Epoch Step: 105 / 819 Loss: 26.021486282348633 Tokens per Sec: 14398.084670119413
Epoch Step: 110 / 819 Loss: 208.84027099609375 Tokens per Sec: 15240.40711961531
Epoch Step: 115 / 819 Loss: 23.893253326416016 Tokens per Sec: 14494.473661376554
Epoch Step: 120 / 819 Loss: 17.76832389831543 Tokens per Sec: 13968.041030614433
Epoch Step: 125 / 819 Loss: 22.532623291015625 Tokens per Sec: 14452.52484447612
Epoch Step: 130 / 819 Loss: 24.56942367553711 Tokens per Sec: 12885.312810345396
Epoch Step: 135 / 819 Loss: 23.794620513916016 Tokens per Sec: 13902.533960738647
Epoch Step: 140 / 819 Loss: 22.028240203857422 Tokens per Sec: 14331.489701796145
Epoch Step: 145 / 819 Loss: 242.8582000732422 Tokens per Sec: 12917.558249824946
Epoch Step: 150 / 819 Loss: 29.37369155883789 Tokens per Sec: 13858.957683568377
Epoch Step: 155 / 819 Loss: 23.4008846282959 Tokens per Sec: 14275.614346867807
Epoch Step: 160 / 819 Loss: 20.63341522216797 Tokens per Sec: 15255.88382354269
Epoch Step: 165 / 819 Loss: 24.344301223754883 Tokens per Sec: 15614.93925896121
Epoch Step: 170 / 819 Loss: 22.396949768066406 Tokens per Sec: 14144.89775281923
Epoch Step: 175 / 819 Loss: 22.782554626464844 Tokens per Sec: 12259.777081158622
Epoch Step: 180 / 819 Loss: 21.874141693115234 Tokens per Sec: 13840.254977731856
Epoch Step: 185 / 819 Loss: 15.93237590789795 Tokens per Sec: 13651.616486559638
Epoch Step: 190 / 819 Loss: 25.099510192871094 Tokens per Sec: 14547.645856576832
Epoch Step: 195 / 819 Loss: 24.30429458618164 Tokens per Sec: 16131.900628750871
Epoch Step: 200 / 819 Loss: 26.66402244567871 Tokens per Sec: 14344.113781181035
Epoch Step: 205 / 819 Loss: 24.752748489379883 Tokens per Sec: 13050.902545686109
Epoch Step: 210 / 819 Loss: 21.298534393310547 Tokens per Sec: 13256.29438909491
Epoch Step: 215 / 819 Loss: 27.040197372436523 Tokens per Sec: 13177.347862188346
Epoch Step: 220 / 819 Loss: 22.286375045776367 Tokens per Sec: 13385.000973887816
Epoch Step: 225 / 819 Loss: 17.770524978637695 Tokens per Sec: 15252.28164830088
Epoch Step: 230 / 819 Loss: 20.767976760864258 Tokens per Sec: 14211.535545618992
Epoch Step: 235 / 819 Loss: 16.640104293823242 Tokens per Sec: 14726.438077230241
Epoch Step: 240 / 819 Loss: 20.87042808532715 Tokens per Sec: 14711.981482746729
Epoch Step: 245 / 819 Loss: 161.67132568359375 Tokens per Sec: 15795.564412403164
Epoch Step: 250 / 819 Loss: 18.89760398864746 Tokens per Sec: 14712.148482478331
Epoch Step: 255 / 819 Loss: 19.060632705688477 Tokens per Sec: 13577.114906100942
Epoch Step: 260 / 819 Loss: 26.563291549682617 Tokens per Sec: 12760.904843886343
Epoch Step: 265 / 819 Loss: 30.0731258392334 Tokens per Sec: 13727.908252360181
Epoch Step: 270 / 819 Loss: 22.656721115112305 Tokens per Sec: 13450.78523115345
Epoch Step: 275 / 819 Loss: 19.863468170166016 Tokens per Sec: 13657.868316849139
Epoch Step: 280 / 819 Loss: 19.518545150756836 Tokens per Sec: 13115.63619148503
Epoch Step: 285 / 819 Loss: 25.54117202758789 Tokens per Sec: 13690.991323018063
Epoch Step: 290 / 819 Loss: 185.7808380126953 Tokens per Sec: 14200.957064396154
Epoch Step: 295 / 819 Loss: 16.895662307739258 Tokens per Sec: 13715.949842777132
Epoch Step: 300 / 819 Loss: 26.937423706054688 Tokens per Sec: 13247.115741662492
Epoch Step: 305 / 819 Loss: 162.09913635253906 Tokens per Sec: 13313.494698912662
Epoch Step: 310 / 819 Loss: 20.49927520751953 Tokens per Sec: 14079.96581637009
Epoch Step: 315 / 819 Loss: 26.429683685302734 Tokens per Sec: 14130.664777861906
Epoch Step: 320 / 819 Loss: 23.623598098754883 Tokens per Sec: 12788.085725275594
Epoch Step: 325 / 819 Loss: 17.2733154296875 Tokens per Sec: 14508.609370329092
Epoch Step: 330 / 819 Loss: 174.092529296875 Tokens per Sec: 15107.752148701944
Epoch Step: 335 / 819 Loss: 21.545991897583008 Tokens per Sec: 16008.20016520845
Epoch Step: 340 / 819 Loss: 22.987041473388672 Tokens per Sec: 13370.122510734112
Epoch Step: 345 / 819 Loss: 24.585508346557617 Tokens per Sec: 15055.097118309242
Epoch Step: 350 / 819 Loss: 17.33742332458496 Tokens per Sec: 12960.582771300906
Epoch Step: 355 / 819 Loss: 17.801719665527344 Tokens per Sec: 13541.991358242154
Epoch Step: 360 / 819 Loss: 21.198884963989258 Tokens per Sec: 14645.541314388916
Epoch Step: 365 / 819 Loss: 21.277835845947266 Tokens per Sec: 14576.32092525282
Epoch Step: 370 / 819 Loss: 18.106853485107422 Tokens per Sec: 13855.596245766
Epoch Step: 375 / 819 Loss: 29.48499298095703 Tokens per Sec: 13796.102332072565
Epoch Step: 380 / 819 Loss: 19.991106033325195 Tokens per Sec: 14354.263046947592
Epoch Step: 385 / 819 Loss: 22.80730628967285 Tokens per Sec: 15624.257245316523
Epoch Step: 390 / 819 Loss: 24.951335906982422 Tokens per Sec: 13460.10287221733
Epoch Step: 395 / 819 Loss: 17.382535934448242 Tokens per Sec: 15731.298516479126
Epoch Step: 400 / 819 Loss: 24.95064926147461 Tokens per Sec: 15006.329771649926
Epoch Step: 405 / 819 Loss: 22.534046173095703 Tokens per Sec: 14360.228296020367
Epoch Step: 410 / 819 Loss: 22.72718048095703 Tokens per Sec: 14093.31186677949
Epoch Step: 415 / 819 Loss: 20.697919845581055 Tokens per Sec: 15153.468651499312
Epoch Step: 420 / 819 Loss: 18.09183120727539 Tokens per Sec: 13334.32396059581
Epoch Step: 425 / 819 Loss: 20.883119583129883 Tokens per Sec: 14180.22781558671
Epoch Step: 430 / 819 Loss: 24.93974494934082 Tokens per Sec: 13994.487176062714
Epoch Step: 435 / 819 Loss: 25.74231719970703 Tokens per Sec: 13349.659301150423
Epoch Step: 440 / 819 Loss: 12.916938781738281 Tokens per Sec: 13062.049448807578
Epoch Step: 445 / 819 Loss: 19.718448638916016 Tokens per Sec: 12910.576317639523
Epoch Step: 450 / 819 Loss: 236.8178253173828 Tokens per Sec: 15075.903251161528
Epoch Step: 455 / 819 Loss: 26.217981338500977 Tokens per Sec: 13932.189794508944
Epoch Step: 460 / 819 Loss: 27.483259201049805 Tokens per Sec: 14490.937328372727
Epoch Step: 465 / 819 Loss: 27.05781364440918 Tokens per Sec: 13860.26380643503
Epoch Step: 470 / 819 Loss: 19.11030387878418 Tokens per Sec: 11935.592033804478
Epoch Step: 475 / 819 Loss: 16.380451202392578 Tokens per Sec: 15778.740883748818
Epoch Step: 480 / 819 Loss: 23.12302017211914 Tokens per Sec: 14411.64722030611
Epoch Step: 485 / 819 Loss: 23.19112777709961 Tokens per Sec: 12764.474788652287
Epoch Step: 490 / 819 Loss: 29.69253158569336 Tokens per Sec: 14291.187168132708
Epoch Step: 495 / 819 Loss: 136.94918823242188 Tokens per Sec: 14537.986665905259
Epoch Step: 500 / 819 Loss: 131.41119384765625 Tokens per Sec: 15800.230081131558
Epoch Step: 505 / 819 Loss: 17.125064849853516 Tokens per Sec: 14272.014902794877
Epoch Step: 510 / 819 Loss: 21.65988540649414 Tokens per Sec: 15132.045424051179
Epoch Step: 515 / 819 Loss: 19.271820068359375 Tokens per Sec: 12987.260049717777
Epoch Step: 520 / 819 Loss: 103.71084594726562 Tokens per Sec: 13309.967422944832
Epoch Step: 525 / 819 Loss: 24.84754753112793 Tokens per Sec: 14306.006854207859
Epoch Step: 530 / 819 Loss: 18.148096084594727 Tokens per Sec: 16007.87013237897
Epoch Step: 535 / 819 Loss: 22.590166091918945 Tokens per Sec: 16448.07308522185
Epoch Step: 540 / 819 Loss: 26.506797790527344 Tokens per Sec: 13789.963274297766
Epoch Step: 545 / 819 Loss: 21.663541793823242 Tokens per Sec: 15355.159572863984
Epoch Step: 550 / 819 Loss: 25.958965301513672 Tokens per Sec: 16718.04377403009
Epoch Step: 555 / 819 Loss: 21.179073333740234 Tokens per Sec: 13702.007955306937
Epoch Step: 560 / 819 Loss: 23.782520294189453 Tokens per Sec: 13212.683378022833
Epoch Step: 565 / 819 Loss: 27.62997817993164 Tokens per Sec: 15259.91127402206
Epoch Step: 570 / 819 Loss: 26.0105037689209 Tokens per Sec: 13218.79882679761
Epoch Step: 575 / 819 Loss: 23.84066390991211 Tokens per Sec: 12992.206874991318
Epoch Step: 580 / 819 Loss: 25.246257781982422 Tokens per Sec: 13353.200544192912
Epoch Step: 585 / 819 Loss: 224.4314422607422 Tokens per Sec: 15396.20119153399
Epoch Step: 590 / 819 Loss: 30.335922241210938 Tokens per Sec: 13664.96482676489
Epoch Step: 595 / 819 Loss: 21.12270164489746 Tokens per Sec: 14444.478650660578
Epoch Step: 600 / 819 Loss: 19.030250549316406 Tokens per Sec: 12807.119216818812
Epoch Step: 605 / 819 Loss: 28.214902877807617 Tokens per Sec: 14819.554323196406
Epoch Step: 610 / 819 Loss: 20.31949234008789 Tokens per Sec: 14446.89887861041
Epoch Step: 615 / 819 Loss: 19.460933685302734 Tokens per Sec: 13783.695774415528
Epoch Step: 620 / 819 Loss: 16.53714942932129 Tokens per Sec: 14553.692657845468
Epoch Step: 625 / 819 Loss: 258.9412841796875 Tokens per Sec: 13811.255846494132
Epoch Step: 630 / 819 Loss: 27.23394775390625 Tokens per Sec: 12406.029262887716
Epoch Step: 635 / 819 Loss: 26.494338989257812 Tokens per Sec: 15282.684237404615
Epoch Step: 640 / 819 Loss: 17.101760864257812 Tokens per Sec: 13535.896089729382
Epoch Step: 645 / 819 Loss: 23.32952880859375 Tokens per Sec: 12968.945027016573
Epoch Step: 650 / 819 Loss: 19.51585578918457 Tokens per Sec: 13719.078693776903
Epoch Step: 655 / 819 Loss: 20.746980667114258 Tokens per Sec: 14159.541615980588
Epoch Step: 660 / 819 Loss: 15.892316818237305 Tokens per Sec: 13105.36601560028
Epoch Step: 665 / 819 Loss: 21.902172088623047 Tokens per Sec: 12099.152446520564
Epoch Step: 670 / 819 Loss: 24.114784240722656 Tokens per Sec: 14025.557574667426
Epoch Step: 675 / 819 Loss: 23.744659423828125 Tokens per Sec: 13797.986414269804
Epoch Step: 680 / 819 Loss: 26.25694465637207 Tokens per Sec: 15153.025261942596
Epoch Step: 685 / 819 Loss: 20.18714141845703 Tokens per Sec: 13392.926801560154
Epoch Step: 690 / 819 Loss: 18.803380966186523 Tokens per Sec: 13335.626793185387
Epoch Step: 695 / 819 Loss: 22.432098388671875 Tokens per Sec: 16477.727666969862
Epoch Step: 700 / 819 Loss: 24.605819702148438 Tokens per Sec: 13225.751228851843
Epoch Step: 705 / 819 Loss: 20.543743133544922 Tokens per Sec: 15035.648227399453
Epoch Step: 710 / 819 Loss: 15.682045936584473 Tokens per Sec: 12688.585311729761
Epoch Step: 715 / 819 Loss: 24.13315773010254 Tokens per Sec: 13741.563401771455
Epoch Step: 720 / 819 Loss: 13.082367897033691 Tokens per Sec: 13819.976711064564
Epoch Step: 725 / 819 Loss: 23.421897888183594 Tokens per Sec: 15175.034305484529
Epoch Step: 730 / 819 Loss: 20.45030403137207 Tokens per Sec: 12165.525862326558
Epoch Step: 735 / 819 Loss: 19.568971633911133 Tokens per Sec: 15124.127348328373
Epoch Step: 740 / 819 Loss: 20.461008071899414 Tokens per Sec: 14089.02941013318
Epoch Step: 745 / 819 Loss: 23.84280014038086 Tokens per Sec: 15170.241580677632
Epoch Step: 750 / 819 Loss: 20.651519775390625 Tokens per Sec: 13624.866662439292
Epoch Step: 755 / 819 Loss: 19.502824783325195 Tokens per Sec: 12651.011820154705
Epoch Step: 760 / 819 Loss: 21.482149124145508 Tokens per Sec: 15254.262525135095
Epoch Step: 765 / 819 Loss: 24.41912269592285 Tokens per Sec: 13926.000838851249
Epoch Step: 770 / 819 Loss: 17.275619506835938 Tokens per Sec: 14274.718865540066
Epoch Step: 775 / 819 Loss: 16.54648208618164 Tokens per Sec: 14763.202931612022
Epoch Step: 780 / 819 Loss: 15.727276802062988 Tokens per Sec: 15778.081817920545
Epoch Step: 785 / 819 Loss: 21.720088958740234 Tokens per Sec: 13144.770097868459
Epoch Step: 790 / 819 Loss: 212.40301513671875 Tokens per Sec: 15836.406477273664
Epoch Step: 795 / 819 Loss: 29.58100128173828 Tokens per Sec: 14325.479467165187
Epoch Step: 800 / 819 Loss: 21.3177547454834 Tokens per Sec: 12773.372592909856
Epoch Step: 805 / 819 Loss: 27.3240966796875 Tokens per Sec: 12073.984617421342
Epoch Step: 810 / 819 Loss: 23.85381317138672 Tokens per Sec: 12885.962388748678
Epoch Step: 815 / 819 Loss: 17.40904426574707 Tokens per Sec: 11774.125023070557
Epoch ended with duration 0:04:35.942538
Train perplexity: 1.7249998545311882
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.599579
Validation perplexity: 2.05014158315203
Epoch 19 / 1000
Epoch Step: 5 / 819 Loss: 21.536853790283203 Tokens per Sec: 13783.095413417168
Epoch Step: 10 / 819 Loss: 24.43425750732422 Tokens per Sec: 12976.464235726298
Epoch Step: 15 / 819 Loss: 26.145889282226562 Tokens per Sec: 14243.517081701613
Epoch Step: 20 / 819 Loss: 24.2402286529541 Tokens per Sec: 13424.490179209202
Epoch Step: 25 / 819 Loss: 25.9325008392334 Tokens per Sec: 12382.61886826968
Epoch Step: 30 / 819 Loss: 122.65177917480469 Tokens per Sec: 14107.582549763034
Epoch Step: 35 / 819 Loss: 13.702616691589355 Tokens per Sec: 15470.434471417604
Epoch Step: 40 / 819 Loss: 19.651823043823242 Tokens per Sec: 14158.099534799587
Epoch Step: 45 / 819 Loss: 181.20530700683594 Tokens per Sec: 14070.425761561713
Epoch Step: 50 / 819 Loss: 24.322832107543945 Tokens per Sec: 13319.277339513
Epoch Step: 55 / 819 Loss: 22.3735294342041 Tokens per Sec: 14762.330377103879
Epoch Step: 60 / 819 Loss: 16.641138076782227 Tokens per Sec: 13147.63606194309
Epoch Step: 65 / 819 Loss: 24.35964584350586 Tokens per Sec: 14570.039813005445
Epoch Step: 70 / 819 Loss: 22.409984588623047 Tokens per Sec: 14646.844860505806
Epoch Step: 75 / 819 Loss: 13.500970840454102 Tokens per Sec: 13891.027319669629
Epoch Step: 80 / 819 Loss: 21.263891220092773 Tokens per Sec: 14065.75014727824
Epoch Step: 85 / 819 Loss: 17.892656326293945 Tokens per Sec: 14430.412087282344
Epoch Step: 90 / 819 Loss: 18.251541137695312 Tokens per Sec: 13942.009698380345
Epoch Step: 95 / 819 Loss: 15.705036163330078 Tokens per Sec: 13802.189042392942
Epoch Step: 100 / 819 Loss: 254.29916381835938 Tokens per Sec: 12571.549391137933
Epoch Step: 105 / 819 Loss: 23.67593765258789 Tokens per Sec: 13054.246306433459
Epoch Step: 110 / 819 Loss: 20.510828018188477 Tokens per Sec: 16084.727769771069
Epoch Step: 115 / 819 Loss: 18.69780158996582 Tokens per Sec: 13691.998169010607
Epoch Step: 120 / 819 Loss: 25.89243507385254 Tokens per Sec: 14496.468169461814
Epoch Step: 125 / 819 Loss: 17.930450439453125 Tokens per Sec: 13777.617331325593
Epoch Step: 130 / 819 Loss: 22.172754287719727 Tokens per Sec: 13256.319271896955
Epoch Step: 135 / 819 Loss: 18.961219787597656 Tokens per Sec: 13500.285013818533
Epoch Step: 140 / 819 Loss: 13.604560852050781 Tokens per Sec: 14343.024666723903
Epoch Step: 145 / 819 Loss: 19.08211898803711 Tokens per Sec: 13718.63488710151
Epoch Step: 150 / 819 Loss: 23.651020050048828 Tokens per Sec: 12973.56876872915
Epoch Step: 155 / 819 Loss: 18.27410888671875 Tokens per Sec: 13553.485823924713
Epoch Step: 160 / 819 Loss: 20.36881446838379 Tokens per Sec: 14437.848675582882
Epoch Step: 165 / 819 Loss: 21.29645538330078 Tokens per Sec: 13321.230481502722
Epoch Step: 170 / 819 Loss: 21.153791427612305 Tokens per Sec: 12916.68663909107
Epoch Step: 175 / 819 Loss: 21.4175968170166 Tokens per Sec: 15016.591406481186
Epoch Step: 180 / 819 Loss: 14.208168983459473 Tokens per Sec: 13858.339287395416
Epoch Step: 185 / 819 Loss: 19.556001663208008 Tokens per Sec: 14241.768046651414
Epoch Step: 190 / 819 Loss: 17.355098724365234 Tokens per Sec: 13138.42274107713
Epoch Step: 195 / 819 Loss: 19.3117618560791 Tokens per Sec: 13639.252010488814
Epoch Step: 200 / 819 Loss: 22.217086791992188 Tokens per Sec: 14363.705834868919
Epoch Step: 205 / 819 Loss: 18.576406478881836 Tokens per Sec: 15436.367106076192
Epoch Step: 210 / 819 Loss: 15.717673301696777 Tokens per Sec: 15074.36270496704
Epoch Step: 215 / 819 Loss: 22.168251037597656 Tokens per Sec: 13505.734449403784
Epoch Step: 220 / 819 Loss: 26.686067581176758 Tokens per Sec: 14819.612854770707
Epoch Step: 225 / 819 Loss: 17.646955490112305 Tokens per Sec: 16307.81592819191
Epoch Step: 230 / 819 Loss: 27.738311767578125 Tokens per Sec: 14439.012719975566
Epoch Step: 235 / 819 Loss: 20.407398223876953 Tokens per Sec: 14701.689201018355
Epoch Step: 240 / 819 Loss: 16.93263816833496 Tokens per Sec: 12924.022647093352
Epoch Step: 245 / 819 Loss: 25.8420352935791 Tokens per Sec: 14368.932843943663
Epoch Step: 250 / 819 Loss: 22.684669494628906 Tokens per Sec: 14744.220004068291
Epoch Step: 255 / 819 Loss: 18.353181838989258 Tokens per Sec: 14876.679396849326
Epoch Step: 260 / 819 Loss: 17.128026962280273 Tokens per Sec: 13852.382339100817
Epoch Step: 265 / 819 Loss: 166.77810668945312 Tokens per Sec: 14706.80762163109
Epoch Step: 270 / 819 Loss: 20.719404220581055 Tokens per Sec: 13840.674116567257
Epoch Step: 275 / 819 Loss: 233.16058349609375 Tokens per Sec: 14227.505781633748
Epoch Step: 280 / 819 Loss: 220.41842651367188 Tokens per Sec: 13006.551640922053
Epoch Step: 285 / 819 Loss: 17.807802200317383 Tokens per Sec: 13453.763780460122
Epoch Step: 290 / 819 Loss: 281.4835510253906 Tokens per Sec: 13175.693461963509
Epoch Step: 295 / 819 Loss: 16.19559669494629 Tokens per Sec: 13044.277404275119
Epoch Step: 300 / 819 Loss: 22.558265686035156 Tokens per Sec: 13976.900189615732
Epoch Step: 305 / 819 Loss: 19.832820892333984 Tokens per Sec: 14002.44307881311
Epoch Step: 310 / 819 Loss: 234.08836364746094 Tokens per Sec: 13386.112868446193
Epoch Step: 315 / 819 Loss: 19.397785186767578 Tokens per Sec: 13154.484957591903
Epoch Step: 320 / 819 Loss: 161.18939208984375 Tokens per Sec: 14451.148994297468
Epoch Step: 325 / 819 Loss: 197.13497924804688 Tokens per Sec: 14275.160580628404
Epoch Step: 330 / 819 Loss: 22.623628616333008 Tokens per Sec: 12850.660000833535
Epoch Step: 335 / 819 Loss: 26.084583282470703 Tokens per Sec: 13163.927604476314
Epoch Step: 340 / 819 Loss: 158.94642639160156 Tokens per Sec: 12524.976655563578
Epoch Step: 345 / 819 Loss: 20.136791229248047 Tokens per Sec: 14431.346779860203
Epoch Step: 350 / 819 Loss: 184.03140258789062 Tokens per Sec: 12893.868655176284
Epoch Step: 355 / 819 Loss: 22.577560424804688 Tokens per Sec: 13335.257042273026
Epoch Step: 360 / 819 Loss: 16.297340393066406 Tokens per Sec: 13504.739039096334
Epoch Step: 365 / 819 Loss: 24.640117645263672 Tokens per Sec: 13413.64126725335
Epoch Step: 370 / 819 Loss: 26.372352600097656 Tokens per Sec: 14766.523770290845
Epoch Step: 375 / 819 Loss: 20.97292137145996 Tokens per Sec: 14578.751403804494
Epoch Step: 380 / 819 Loss: 13.001786231994629 Tokens per Sec: 16259.940797344912
Epoch Step: 385 / 819 Loss: 24.28849220275879 Tokens per Sec: 16169.610178362926
Epoch Step: 390 / 819 Loss: 14.323576927185059 Tokens per Sec: 13727.887658815294
Epoch Step: 395 / 819 Loss: 240.79129028320312 Tokens per Sec: 15180.21583981213
Epoch Step: 400 / 819 Loss: 22.480268478393555 Tokens per Sec: 13487.626083560332
Epoch Step: 405 / 819 Loss: 23.558467864990234 Tokens per Sec: 13437.811619195587
Epoch Step: 410 / 819 Loss: 16.344707489013672 Tokens per Sec: 14368.764500298055
Epoch Step: 415 / 819 Loss: 18.95676040649414 Tokens per Sec: 13024.563038735912
Epoch Step: 420 / 819 Loss: 20.15512466430664 Tokens per Sec: 12691.04853104973
Epoch Step: 425 / 819 Loss: 16.93838119506836 Tokens per Sec: 14433.386600696285
Epoch Step: 430 / 819 Loss: 28.391708374023438 Tokens per Sec: 13679.622484815045
Epoch Step: 435 / 819 Loss: 19.0196475982666 Tokens per Sec: 13672.571756997953
Epoch Step: 440 / 819 Loss: 22.254253387451172 Tokens per Sec: 15364.148919170275
Epoch Step: 445 / 819 Loss: 20.921701431274414 Tokens per Sec: 13630.866934295993
Epoch Step: 450 / 819 Loss: 184.77792358398438 Tokens per Sec: 13320.651410636841
Epoch Step: 455 / 819 Loss: 15.569156646728516 Tokens per Sec: 12671.643543562057
Epoch Step: 460 / 819 Loss: 20.870935440063477 Tokens per Sec: 14747.564713501815
Epoch Step: 465 / 819 Loss: 23.31251335144043 Tokens per Sec: 13058.098816446938
Epoch Step: 470 / 819 Loss: 20.48030662536621 Tokens per Sec: 13334.9607734925
Epoch Step: 475 / 819 Loss: 21.09957504272461 Tokens per Sec: 14645.158552566942
Epoch Step: 480 / 819 Loss: 18.331439971923828 Tokens per Sec: 13341.601135337689
Epoch Step: 485 / 819 Loss: 15.612933158874512 Tokens per Sec: 13383.970211297417
Epoch Step: 490 / 819 Loss: 17.643980026245117 Tokens per Sec: 13220.20606883552
Epoch Step: 495 / 819 Loss: 17.245195388793945 Tokens per Sec: 14994.91128564369
Epoch Step: 500 / 819 Loss: 19.168106079101562 Tokens per Sec: 14129.115691221261
Epoch Step: 505 / 819 Loss: 17.660829544067383 Tokens per Sec: 12477.974366345172
Epoch Step: 510 / 819 Loss: 14.391361236572266 Tokens per Sec: 12959.882520307327
Epoch Step: 515 / 819 Loss: 15.788703918457031 Tokens per Sec: 13326.602375246119
Epoch Step: 520 / 819 Loss: 21.60881996154785 Tokens per Sec: 14056.269902805712
Epoch Step: 525 / 819 Loss: 225.18472290039062 Tokens per Sec: 13828.380762620112
Epoch Step: 530 / 819 Loss: 23.221864700317383 Tokens per Sec: 15332.940031327906
Epoch Step: 535 / 819 Loss: 28.392335891723633 Tokens per Sec: 15389.47557489078
Epoch Step: 540 / 819 Loss: 19.148468017578125 Tokens per Sec: 13856.49020950272
Epoch Step: 545 / 819 Loss: 24.55697250366211 Tokens per Sec: 13693.479769120404
Epoch Step: 550 / 819 Loss: 21.911418914794922 Tokens per Sec: 13623.349120253702
Epoch Step: 555 / 819 Loss: 26.717859268188477 Tokens per Sec: 15001.656983372242
Epoch Step: 560 / 819 Loss: 20.074323654174805 Tokens per Sec: 14640.782152184729
Epoch Step: 565 / 819 Loss: 24.359708786010742 Tokens per Sec: 15095.481240621548
Epoch Step: 570 / 819 Loss: 14.710769653320312 Tokens per Sec: 14244.056541897546
Epoch Step: 575 / 819 Loss: 22.701946258544922 Tokens per Sec: 14742.742077998973
Epoch Step: 580 / 819 Loss: 15.5894136428833 Tokens per Sec: 13546.252338160823
Epoch Step: 585 / 819 Loss: 18.14317512512207 Tokens per Sec: 13991.143923791195
Epoch Step: 590 / 819 Loss: 15.591472625732422 Tokens per Sec: 14173.705089875613
Epoch Step: 595 / 819 Loss: 19.238147735595703 Tokens per Sec: 14964.767219584517
Epoch Step: 600 / 819 Loss: 19.929401397705078 Tokens per Sec: 12932.868448575658
Epoch Step: 605 / 819 Loss: 17.553611755371094 Tokens per Sec: 15910.304144117305
Epoch Step: 610 / 819 Loss: 18.34114646911621 Tokens per Sec: 14265.464848496844
Epoch Step: 615 / 819 Loss: 23.34480094909668 Tokens per Sec: 13997.819225716792
Epoch Step: 620 / 819 Loss: 18.998205184936523 Tokens per Sec: 13873.333841176163
Epoch Step: 625 / 819 Loss: 20.466899871826172 Tokens per Sec: 16083.693071298334
Epoch Step: 630 / 819 Loss: 19.737674713134766 Tokens per Sec: 15272.066214901079
Epoch Step: 635 / 819 Loss: 16.66135025024414 Tokens per Sec: 13077.016485629605
Epoch Step: 640 / 819 Loss: 16.949121475219727 Tokens per Sec: 12985.350259766348
Epoch Step: 645 / 819 Loss: 138.33302307128906 Tokens per Sec: 13736.152707415436
Epoch Step: 650 / 819 Loss: 19.174842834472656 Tokens per Sec: 12975.312238330764
Epoch Step: 655 / 819 Loss: 244.18641662597656 Tokens per Sec: 14439.387161781566
Epoch Step: 660 / 819 Loss: 22.20477867126465 Tokens per Sec: 15573.521000298233
Epoch Step: 665 / 819 Loss: 17.58709144592285 Tokens per Sec: 15344.75645623321
Epoch Step: 670 / 819 Loss: 18.035486221313477 Tokens per Sec: 14601.3581432971
Epoch Step: 675 / 819 Loss: 19.86284637451172 Tokens per Sec: 15920.262392103707
Epoch Step: 680 / 819 Loss: 21.333383560180664 Tokens per Sec: 14882.289417545271
Epoch Step: 685 / 819 Loss: 209.5802001953125 Tokens per Sec: 14959.633424329868
Epoch Step: 690 / 819 Loss: 13.168983459472656 Tokens per Sec: 12375.79089135575
Epoch Step: 695 / 819 Loss: 12.96811294555664 Tokens per Sec: 13500.03116334085
Epoch Step: 700 / 819 Loss: 232.85523986816406 Tokens per Sec: 13845.587394543547
Epoch Step: 705 / 819 Loss: 22.092342376708984 Tokens per Sec: 12817.481788996758
Epoch Step: 710 / 819 Loss: 20.30980110168457 Tokens per Sec: 12793.841376990757
Epoch Step: 715 / 819 Loss: 19.25726890563965 Tokens per Sec: 14011.129452250689
Epoch Step: 720 / 819 Loss: 20.56596565246582 Tokens per Sec: 14482.954598691897
Epoch Step: 725 / 819 Loss: 19.61450958251953 Tokens per Sec: 14276.004446345976
Epoch Step: 730 / 819 Loss: 15.866214752197266 Tokens per Sec: 16552.392443178767
Epoch Step: 735 / 819 Loss: 17.986154556274414 Tokens per Sec: 15347.736443370257
Epoch Step: 740 / 819 Loss: 27.348421096801758 Tokens per Sec: 13683.734922374397
Epoch Step: 745 / 819 Loss: 23.02389907836914 Tokens per Sec: 14998.143178484399
Epoch Step: 750 / 819 Loss: 18.323896408081055 Tokens per Sec: 13894.459948545362
Epoch Step: 755 / 819 Loss: 16.03043556213379 Tokens per Sec: 13581.34187381928
Epoch Step: 760 / 819 Loss: 20.357643127441406 Tokens per Sec: 12349.985829634254
Epoch Step: 765 / 819 Loss: 16.512245178222656 Tokens per Sec: 15089.296524695115
Epoch Step: 770 / 819 Loss: 194.71377563476562 Tokens per Sec: 13252.83966866062
Epoch Step: 775 / 819 Loss: 13.379356384277344 Tokens per Sec: 14104.596732449196
Epoch Step: 780 / 819 Loss: 14.264400482177734 Tokens per Sec: 14069.212428182434
Epoch Step: 785 / 819 Loss: 14.45215892791748 Tokens per Sec: 12670.993473055305
Epoch Step: 790 / 819 Loss: 166.02386474609375 Tokens per Sec: 12052.281120063126
Epoch Step: 795 / 819 Loss: 118.11279296875 Tokens per Sec: 13424.09194256311
Epoch Step: 800 / 819 Loss: 22.264110565185547 Tokens per Sec: 12558.085216740168
Epoch Step: 805 / 819 Loss: 18.20388412475586 Tokens per Sec: 13253.338621833736
Epoch Step: 810 / 819 Loss: 21.844051361083984 Tokens per Sec: 11552.178104087574
Epoch Step: 815 / 819 Loss: 24.682205200195312 Tokens per Sec: 13744.51279159218
Epoch ended with duration 0:04:38.600459
Train perplexity: 1.6282731379932547
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.987802
Validation perplexity: 1.672808336376706
Epoch 20 / 1000
Epoch Step: 5 / 819 Loss: 190.11605834960938 Tokens per Sec: 12908.28986822189
Epoch Step: 10 / 819 Loss: 22.229658126831055 Tokens per Sec: 13024.188835948416
Epoch Step: 15 / 819 Loss: 16.7139835357666 Tokens per Sec: 13359.635833440734
Epoch Step: 20 / 819 Loss: 20.324939727783203 Tokens per Sec: 14702.577484758833
Epoch Step: 25 / 819 Loss: 187.349853515625 Tokens per Sec: 14175.629449876204
Epoch Step: 30 / 819 Loss: 212.6822967529297 Tokens per Sec: 13480.420739843286
Epoch Step: 35 / 819 Loss: 22.67896270751953 Tokens per Sec: 14293.682886603467
Epoch Step: 40 / 819 Loss: 35.87596130371094 Tokens per Sec: 16528.399681566167
Epoch Step: 45 / 819 Loss: 27.380823135375977 Tokens per Sec: 14488.24027470595
Epoch Step: 50 / 819 Loss: 19.2698974609375 Tokens per Sec: 13207.471580100637
Epoch Step: 55 / 819 Loss: 114.52545166015625 Tokens per Sec: 12748.894403279928
Epoch Step: 60 / 819 Loss: 17.662399291992188 Tokens per Sec: 14534.250372183036
Epoch Step: 65 / 819 Loss: 21.261396408081055 Tokens per Sec: 14759.819012143667
Epoch Step: 70 / 819 Loss: 25.629337310791016 Tokens per Sec: 15059.611788437873
Epoch Step: 75 / 819 Loss: 22.867168426513672 Tokens per Sec: 14169.775990212815
Epoch Step: 80 / 819 Loss: 24.019657135009766 Tokens per Sec: 15063.654140042363
Epoch Step: 85 / 819 Loss: 15.259932518005371 Tokens per Sec: 12945.327892032277
Epoch Step: 90 / 819 Loss: 19.91486930847168 Tokens per Sec: 12956.050313870233
Epoch Step: 95 / 819 Loss: 21.68869400024414 Tokens per Sec: 14710.545155661795
Epoch Step: 100 / 819 Loss: 18.655555725097656 Tokens per Sec: 13798.302570941127
Epoch Step: 105 / 819 Loss: 20.93924903869629 Tokens per Sec: 14739.886163325826
Epoch Step: 110 / 819 Loss: 19.639690399169922 Tokens per Sec: 13187.273706093154
Epoch Step: 115 / 819 Loss: 17.345685958862305 Tokens per Sec: 13644.171686495443
Epoch Step: 120 / 819 Loss: 16.459802627563477 Tokens per Sec: 13929.83834975211
Epoch Step: 125 / 819 Loss: 226.36306762695312 Tokens per Sec: 14250.300559385458
Epoch Step: 130 / 819 Loss: 21.394506454467773 Tokens per Sec: 13578.263205455229
Epoch Step: 135 / 819 Loss: 20.40467643737793 Tokens per Sec: 13923.548595134313
Epoch Step: 140 / 819 Loss: 14.287039756774902 Tokens per Sec: 14007.96431116872
Epoch Step: 145 / 819 Loss: 22.945953369140625 Tokens per Sec: 14767.32645758691
Epoch Step: 150 / 819 Loss: 19.189537048339844 Tokens per Sec: 15651.629621128857
Epoch Step: 155 / 819 Loss: 27.68621253967285 Tokens per Sec: 13132.740433260235
Epoch Step: 160 / 819 Loss: 21.76761817932129 Tokens per Sec: 12854.073030196909
Epoch Step: 165 / 819 Loss: 27.372663497924805 Tokens per Sec: 13570.250619899038
Epoch Step: 170 / 819 Loss: 22.34539794921875 Tokens per Sec: 13282.948319574207
Epoch Step: 175 / 819 Loss: 282.4830322265625 Tokens per Sec: 14846.605308562788
Epoch Step: 180 / 819 Loss: 14.567378997802734 Tokens per Sec: 13864.396929530081
Epoch Step: 185 / 819 Loss: 21.74392318725586 Tokens per Sec: 16078.521045679305
Epoch Step: 190 / 819 Loss: 14.594100952148438 Tokens per Sec: 12719.375495618327
Epoch Step: 195 / 819 Loss: 17.497575759887695 Tokens per Sec: 13518.263495754787
Epoch Step: 200 / 819 Loss: 27.051889419555664 Tokens per Sec: 13430.34197182405
Epoch Step: 205 / 819 Loss: 23.779850006103516 Tokens per Sec: 13004.403554047838
Epoch Step: 210 / 819 Loss: 22.898523330688477 Tokens per Sec: 13342.58144317248
Epoch Step: 215 / 819 Loss: 19.235374450683594 Tokens per Sec: 14453.744462261284
Epoch Step: 220 / 819 Loss: 18.58676528930664 Tokens per Sec: 16498.7924917206
Epoch Step: 225 / 819 Loss: 17.483495712280273 Tokens per Sec: 15405.29008290147
Epoch Step: 230 / 819 Loss: 19.67771339416504 Tokens per Sec: 12749.986019342374
Epoch Step: 235 / 819 Loss: 201.03834533691406 Tokens per Sec: 14489.195701375196
Epoch Step: 240 / 819 Loss: 19.628612518310547 Tokens per Sec: 13853.784248572301
Epoch Step: 245 / 819 Loss: 178.52439880371094 Tokens per Sec: 13390.549889259766
Epoch Step: 250 / 819 Loss: 16.79549217224121 Tokens per Sec: 13449.182980977874
Epoch Step: 255 / 819 Loss: 18.374345779418945 Tokens per Sec: 14834.097490413764
Epoch Step: 260 / 819 Loss: 19.100238800048828 Tokens per Sec: 14972.847940315116
Epoch Step: 265 / 819 Loss: 20.563180923461914 Tokens per Sec: 12772.209172228184
Epoch Step: 270 / 819 Loss: 19.350358963012695 Tokens per Sec: 14497.972110484854
Epoch Step: 275 / 819 Loss: 21.40876007080078 Tokens per Sec: 14288.461469923694
Epoch Step: 280 / 819 Loss: 22.74935531616211 Tokens per Sec: 12798.083881201268
Epoch Step: 285 / 819 Loss: 25.44236183166504 Tokens per Sec: 13961.056524144034
Epoch Step: 290 / 819 Loss: 16.005733489990234 Tokens per Sec: 12821.976586018332
Epoch Step: 295 / 819 Loss: 23.244430541992188 Tokens per Sec: 13756.557422448226
Epoch Step: 300 / 819 Loss: 18.09764862060547 Tokens per Sec: 14983.779346530986
Epoch Step: 305 / 819 Loss: 17.86101722717285 Tokens per Sec: 15180.970128991532
Epoch Step: 310 / 819 Loss: 19.366931915283203 Tokens per Sec: 13554.013402550556
Epoch Step: 315 / 819 Loss: 24.27334976196289 Tokens per Sec: 12451.480580496454
Epoch Step: 320 / 819 Loss: 21.820894241333008 Tokens per Sec: 13561.655478650462
Epoch Step: 325 / 819 Loss: 18.270885467529297 Tokens per Sec: 13127.101010794957
Epoch Step: 330 / 819 Loss: 18.130809783935547 Tokens per Sec: 14812.51562036834
Epoch Step: 335 / 819 Loss: 204.8402099609375 Tokens per Sec: 12664.039256747867
Epoch Step: 340 / 819 Loss: 22.19431495666504 Tokens per Sec: 13236.0845330853
Epoch Step: 345 / 819 Loss: 17.828266143798828 Tokens per Sec: 13517.225016241655
Epoch Step: 350 / 819 Loss: 217.34295654296875 Tokens per Sec: 15161.990428595725
Epoch Step: 355 / 819 Loss: 203.9976348876953 Tokens per Sec: 14691.364398694197
Epoch Step: 360 / 819 Loss: 15.89615249633789 Tokens per Sec: 14759.568074064517
Epoch Step: 365 / 819 Loss: 15.002593994140625 Tokens per Sec: 12007.80230299506
Epoch Step: 370 / 819 Loss: 15.038301467895508 Tokens per Sec: 14537.759197323452
Epoch Step: 375 / 819 Loss: 21.567955017089844 Tokens per Sec: 13627.982120317061
Epoch Step: 380 / 819 Loss: 20.54953956604004 Tokens per Sec: 13704.104463009578
Epoch Step: 385 / 819 Loss: 18.633413314819336 Tokens per Sec: 13837.3872791622
Epoch Step: 390 / 819 Loss: 125.57174682617188 Tokens per Sec: 13801.18301348813
Epoch Step: 395 / 819 Loss: 245.55282592773438 Tokens per Sec: 14611.561932842238
Epoch Step: 400 / 819 Loss: 17.3008975982666 Tokens per Sec: 14426.611514156779
Epoch Step: 405 / 819 Loss: 22.856983184814453 Tokens per Sec: 13191.914523068313
Epoch Step: 410 / 819 Loss: 22.897863388061523 Tokens per Sec: 14217.659329926008
Epoch Step: 415 / 819 Loss: 15.939226150512695 Tokens per Sec: 12936.948394495728
Epoch Step: 420 / 819 Loss: 18.83171272277832 Tokens per Sec: 12816.707432695426
Epoch Step: 425 / 819 Loss: 26.662771224975586 Tokens per Sec: 13329.298795978713
Epoch Step: 430 / 819 Loss: 20.78438949584961 Tokens per Sec: 14273.755880384357
Epoch Step: 435 / 819 Loss: 17.173856735229492 Tokens per Sec: 14697.077127479275
Epoch Step: 440 / 819 Loss: 21.16438102722168 Tokens per Sec: 13962.837714533809
Epoch Step: 445 / 819 Loss: 22.969383239746094 Tokens per Sec: 13618.697250075635
Epoch Step: 450 / 819 Loss: 14.533169746398926 Tokens per Sec: 13203.236185253805
Epoch Step: 455 / 819 Loss: 19.75189781188965 Tokens per Sec: 14711.080691693394
Epoch Step: 460 / 819 Loss: 17.509979248046875 Tokens per Sec: 15958.165058692475
Epoch Step: 465 / 819 Loss: 20.452150344848633 Tokens per Sec: 14617.673419216295
Epoch Step: 470 / 819 Loss: 309.1971740722656 Tokens per Sec: 14346.81767849156
Epoch Step: 475 / 819 Loss: 19.111690521240234 Tokens per Sec: 14109.303719608472
Epoch Step: 480 / 819 Loss: 25.304964065551758 Tokens per Sec: 14863.125494537924
Epoch Step: 485 / 819 Loss: 24.027563095092773 Tokens per Sec: 14288.941181217418
Epoch Step: 490 / 819 Loss: 26.027162551879883 Tokens per Sec: 15551.841457663371
Epoch Step: 495 / 819 Loss: 16.14851188659668 Tokens per Sec: 11535.259065245815
Epoch Step: 500 / 819 Loss: 23.9848690032959 Tokens per Sec: 14237.518512815584
Epoch Step: 505 / 819 Loss: 15.439579963684082 Tokens per Sec: 13982.233985275238
Epoch Step: 510 / 819 Loss: 19.832292556762695 Tokens per Sec: 14342.27740083748
Epoch Step: 515 / 819 Loss: 24.4636287689209 Tokens per Sec: 15392.7821448087
Epoch Step: 520 / 819 Loss: 19.504417419433594 Tokens per Sec: 15282.35670391596
Epoch Step: 525 / 819 Loss: 215.61476135253906 Tokens per Sec: 13599.036240203443
Epoch Step: 530 / 819 Loss: 18.5026798248291 Tokens per Sec: 13023.939124317452
Epoch Step: 535 / 819 Loss: 21.54725456237793 Tokens per Sec: 14576.893673994282
Epoch Step: 540 / 819 Loss: 21.530515670776367 Tokens per Sec: 14177.833688065944
Epoch Step: 545 / 819 Loss: 21.1191349029541 Tokens per Sec: 12551.894095256173
Epoch Step: 550 / 819 Loss: 18.145902633666992 Tokens per Sec: 13457.34902337717
Epoch Step: 555 / 819 Loss: 21.648536682128906 Tokens per Sec: 15454.306646239596
Epoch Step: 560 / 819 Loss: 16.58394432067871 Tokens per Sec: 15273.084925460791
Epoch Step: 565 / 819 Loss: 20.167709350585938 Tokens per Sec: 14288.527466829646
Epoch Step: 570 / 819 Loss: 27.601289749145508 Tokens per Sec: 14291.457667212724
Epoch Step: 575 / 819 Loss: 18.246719360351562 Tokens per Sec: 15379.493510404416
Epoch Step: 580 / 819 Loss: 17.558137893676758 Tokens per Sec: 12992.91442461409
Epoch Step: 585 / 819 Loss: 14.152066230773926 Tokens per Sec: 13711.056360156608
Epoch Step: 590 / 819 Loss: 21.081972122192383 Tokens per Sec: 14635.949779980952
Epoch Step: 595 / 819 Loss: 17.894939422607422 Tokens per Sec: 13522.962113619167
Epoch Step: 600 / 819 Loss: 19.52458381652832 Tokens per Sec: 13283.018916634033
Epoch Step: 605 / 819 Loss: 24.429622650146484 Tokens per Sec: 12735.347328488124
Epoch Step: 610 / 819 Loss: 15.663734436035156 Tokens per Sec: 12601.324051655743
Epoch Step: 615 / 819 Loss: 23.593965530395508 Tokens per Sec: 15232.409500491738
Epoch Step: 620 / 819 Loss: 16.92259979248047 Tokens per Sec: 13733.242956307806
Epoch Step: 625 / 819 Loss: 15.763995170593262 Tokens per Sec: 13040.2520050575
Epoch Step: 630 / 819 Loss: 15.21898365020752 Tokens per Sec: 14758.144416625062
Epoch Step: 635 / 819 Loss: 17.184711456298828 Tokens per Sec: 12967.564688689517
Epoch Step: 640 / 819 Loss: 24.331809997558594 Tokens per Sec: 14056.769678259665
Epoch Step: 645 / 819 Loss: 25.772329330444336 Tokens per Sec: 15260.177721932938
Epoch Step: 650 / 819 Loss: 241.67300415039062 Tokens per Sec: 13439.148215667685
Epoch Step: 655 / 819 Loss: 14.753459930419922 Tokens per Sec: 13490.6836022536
Epoch Step: 660 / 819 Loss: 21.556610107421875 Tokens per Sec: 14006.206671959468
Epoch Step: 665 / 819 Loss: 20.113037109375 Tokens per Sec: 13421.207063020662
Epoch Step: 670 / 819 Loss: 13.338387489318848 Tokens per Sec: 14014.005703641245
Epoch Step: 675 / 819 Loss: 18.900646209716797 Tokens per Sec: 15088.54678933467
Epoch Step: 680 / 819 Loss: 21.591022491455078 Tokens per Sec: 14881.321013270235
Epoch Step: 685 / 819 Loss: 16.4608097076416 Tokens per Sec: 14820.982642843772
Epoch Step: 690 / 819 Loss: 18.805313110351562 Tokens per Sec: 13140.595576334981
Epoch Step: 695 / 819 Loss: 19.000925064086914 Tokens per Sec: 13693.633870336349
Epoch Step: 700 / 819 Loss: 17.670217514038086 Tokens per Sec: 15970.363751926276
Epoch Step: 705 / 819 Loss: 19.930870056152344 Tokens per Sec: 15948.503583447775
Epoch Step: 710 / 819 Loss: 20.38973045349121 Tokens per Sec: 13762.043613089112
Epoch Step: 715 / 819 Loss: 19.44642448425293 Tokens per Sec: 13663.064210393233
Epoch Step: 720 / 819 Loss: 241.22195434570312 Tokens per Sec: 14530.010209468992
Epoch Step: 725 / 819 Loss: 18.548439025878906 Tokens per Sec: 13861.748709555262
Epoch Step: 730 / 819 Loss: 22.45261001586914 Tokens per Sec: 13290.498366290241
Epoch Step: 735 / 819 Loss: 21.022470474243164 Tokens per Sec: 13817.326567659638
Epoch Step: 740 / 819 Loss: 14.586050033569336 Tokens per Sec: 14058.178291305838
Epoch Step: 745 / 819 Loss: 14.739285469055176 Tokens per Sec: 14234.3166922392
Epoch Step: 750 / 819 Loss: 19.379987716674805 Tokens per Sec: 15115.595217624123
Epoch Step: 755 / 819 Loss: 17.7033748626709 Tokens per Sec: 15976.7445851043
Epoch Step: 760 / 819 Loss: 19.108169555664062 Tokens per Sec: 12804.819096776699
Epoch Step: 765 / 819 Loss: 18.598981857299805 Tokens per Sec: 15072.851112959137
Epoch Step: 770 / 819 Loss: 142.59051513671875 Tokens per Sec: 13726.799906405688
Epoch Step: 775 / 819 Loss: 17.99608039855957 Tokens per Sec: 13886.498006515812
Epoch Step: 780 / 819 Loss: 16.198013305664062 Tokens per Sec: 13295.602595415306
Epoch Step: 785 / 819 Loss: 19.689992904663086 Tokens per Sec: 13028.848549892398
Epoch Step: 790 / 819 Loss: 16.605653762817383 Tokens per Sec: 13621.909655499341
Epoch Step: 795 / 819 Loss: 14.51286792755127 Tokens per Sec: 12786.84303816042
Epoch Step: 800 / 819 Loss: 21.39873504638672 Tokens per Sec: 14879.376124851859
Epoch Step: 805 / 819 Loss: 21.05297088623047 Tokens per Sec: 13547.870809860548
Epoch Step: 810 / 819 Loss: 210.80201721191406 Tokens per Sec: 11849.00579083694
Epoch Step: 815 / 819 Loss: 19.546775817871094 Tokens per Sec: 12700.115655314063
Epoch ended with duration 0:04:38.395504
Train perplexity: 1.6464435896708158
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.036345
Validation perplexity: 1.6039676452118337
Model saved checkpoint!
Epoch 21 / 1000
Epoch Step: 5 / 819 Loss: 18.046443939208984 Tokens per Sec: 12121.28989983913
Epoch Step: 10 / 819 Loss: 23.727781295776367 Tokens per Sec: 13799.230365592199
Epoch Step: 15 / 819 Loss: 21.075244903564453 Tokens per Sec: 14437.952242371717
Epoch Step: 20 / 819 Loss: 21.38990020751953 Tokens per Sec: 12795.059168912057
Epoch Step: 25 / 819 Loss: 18.139005661010742 Tokens per Sec: 15985.72547792876
Epoch Step: 30 / 819 Loss: 21.055776596069336 Tokens per Sec: 15248.644416333304
Epoch Step: 35 / 819 Loss: 14.223484992980957 Tokens per Sec: 14804.468164452783
Epoch Step: 40 / 819 Loss: 24.39836883544922 Tokens per Sec: 14210.427347064557
Epoch Step: 45 / 819 Loss: 17.963520050048828 Tokens per Sec: 15011.048140205088
Epoch Step: 50 / 819 Loss: 20.347612380981445 Tokens per Sec: 13645.900058558715
Epoch Step: 55 / 819 Loss: 18.17087745666504 Tokens per Sec: 15144.693839132733
Epoch Step: 60 / 819 Loss: 262.0091857910156 Tokens per Sec: 13296.129836478067
Epoch Step: 65 / 819 Loss: 21.014829635620117 Tokens per Sec: 14309.63427793987
Epoch Step: 70 / 819 Loss: 16.830480575561523 Tokens per Sec: 14318.99043330288
Epoch Step: 75 / 819 Loss: 26.211706161499023 Tokens per Sec: 13153.859051987189
Epoch Step: 80 / 819 Loss: 20.49243927001953 Tokens per Sec: 12720.037204252121
Epoch Step: 85 / 819 Loss: 15.935173034667969 Tokens per Sec: 15323.496682344405
Epoch Step: 90 / 819 Loss: 17.01148796081543 Tokens per Sec: 13950.93769054729
Epoch Step: 95 / 819 Loss: 205.44883728027344 Tokens per Sec: 15015.54048235075
Epoch Step: 100 / 819 Loss: 15.92363166809082 Tokens per Sec: 14686.837531740866
Epoch Step: 105 / 819 Loss: 219.9652557373047 Tokens per Sec: 15886.385125046898
Epoch Step: 110 / 819 Loss: 17.876968383789062 Tokens per Sec: 16461.368798045547
Epoch Step: 115 / 819 Loss: 16.905174255371094 Tokens per Sec: 13338.598715808372
Epoch Step: 120 / 819 Loss: 22.141817092895508 Tokens per Sec: 13429.948633787297
Epoch Step: 125 / 819 Loss: 21.07656478881836 Tokens per Sec: 13720.028306713386
Epoch Step: 130 / 819 Loss: 22.997129440307617 Tokens per Sec: 12322.885401597861
Epoch Step: 135 / 819 Loss: 24.19234275817871 Tokens per Sec: 12394.035540791987
Epoch Step: 140 / 819 Loss: 21.781417846679688 Tokens per Sec: 12950.307643770902
Epoch Step: 145 / 819 Loss: 23.665414810180664 Tokens per Sec: 14166.679474368078
Epoch Step: 150 / 819 Loss: 17.027128219604492 Tokens per Sec: 13138.34877248992
Epoch Step: 155 / 819 Loss: 19.9807071685791 Tokens per Sec: 13725.583879986862
Epoch Step: 160 / 819 Loss: 24.801748275756836 Tokens per Sec: 13099.740590319994
Epoch Step: 165 / 819 Loss: 21.659406661987305 Tokens per Sec: 14797.632645872336
Epoch Step: 170 / 819 Loss: 23.315216064453125 Tokens per Sec: 13697.395717096886
Epoch Step: 175 / 819 Loss: 25.330570220947266 Tokens per Sec: 13465.526432617058
Epoch Step: 180 / 819 Loss: 14.149486541748047 Tokens per Sec: 15657.983173775114
Epoch Step: 185 / 819 Loss: 17.656225204467773 Tokens per Sec: 13249.749513279183
Epoch Step: 190 / 819 Loss: 18.076120376586914 Tokens per Sec: 13254.90199686868
Epoch Step: 195 / 819 Loss: 21.38962745666504 Tokens per Sec: 13560.59457093227
Epoch Step: 200 / 819 Loss: 19.11711311340332 Tokens per Sec: 14259.637570152061
Epoch Step: 205 / 819 Loss: 15.466500282287598 Tokens per Sec: 13828.455428479154
Epoch Step: 210 / 819 Loss: 25.19736099243164 Tokens per Sec: 14301.46152819335
Epoch Step: 215 / 819 Loss: 22.5460147857666 Tokens per Sec: 13603.063516560105
Epoch Step: 220 / 819 Loss: 18.517669677734375 Tokens per Sec: 13844.110525727425
Epoch Step: 225 / 819 Loss: 20.689979553222656 Tokens per Sec: 13451.14467202223
Epoch Step: 230 / 819 Loss: 20.2115421295166 Tokens per Sec: 13503.163917497799
Epoch Step: 235 / 819 Loss: 123.78791809082031 Tokens per Sec: 13189.198798869145
Epoch Step: 240 / 819 Loss: 19.18033218383789 Tokens per Sec: 14185.110678344989
Epoch Step: 245 / 819 Loss: 26.93195915222168 Tokens per Sec: 14738.001463543795
Epoch Step: 250 / 819 Loss: 29.239545822143555 Tokens per Sec: 16380.83999680116
Epoch Step: 255 / 819 Loss: 16.244991302490234 Tokens per Sec: 15350.121805375
Epoch Step: 260 / 819 Loss: 22.318679809570312 Tokens per Sec: 14142.129886564908
Epoch Step: 265 / 819 Loss: 19.747966766357422 Tokens per Sec: 13894.337067165567
Epoch Step: 270 / 819 Loss: 16.514310836791992 Tokens per Sec: 13824.103649564395
Epoch Step: 275 / 819 Loss: 15.24040699005127 Tokens per Sec: 13242.223701213517
Epoch Step: 280 / 819 Loss: 12.479937553405762 Tokens per Sec: 13097.395802437668
Epoch Step: 285 / 819 Loss: 20.19278335571289 Tokens per Sec: 13135.679822426993
Epoch Step: 290 / 819 Loss: 14.505102157592773 Tokens per Sec: 14027.40589734467
Epoch Step: 295 / 819 Loss: 20.806062698364258 Tokens per Sec: 16561.36120666367
Epoch Step: 300 / 819 Loss: 18.47610092163086 Tokens per Sec: 13542.866010277026
Epoch Step: 305 / 819 Loss: 18.550697326660156 Tokens per Sec: 13546.064030590009
Epoch Step: 310 / 819 Loss: 193.4806671142578 Tokens per Sec: 15186.935217364848
Epoch Step: 315 / 819 Loss: 17.164588928222656 Tokens per Sec: 14587.257555788168
Epoch Step: 320 / 819 Loss: 18.905914306640625 Tokens per Sec: 14009.64129361174
Epoch Step: 325 / 819 Loss: 17.85333824157715 Tokens per Sec: 12733.303894727545
Epoch Step: 330 / 819 Loss: 16.91556739807129 Tokens per Sec: 15510.73843646985
Epoch Step: 335 / 819 Loss: 17.602792739868164 Tokens per Sec: 12817.450800283646
Epoch Step: 340 / 819 Loss: 22.720251083374023 Tokens per Sec: 14586.110207247008
Epoch Step: 345 / 819 Loss: 16.827150344848633 Tokens per Sec: 13684.94646605507
Epoch Step: 350 / 819 Loss: 19.40208625793457 Tokens per Sec: 15166.979305025694
Epoch Step: 355 / 819 Loss: 21.562963485717773 Tokens per Sec: 15183.98206266845
Epoch Step: 360 / 819 Loss: 18.260488510131836 Tokens per Sec: 14186.540162222347
Epoch Step: 365 / 819 Loss: 22.51169204711914 Tokens per Sec: 12877.247853726547
Epoch Step: 370 / 819 Loss: 23.471744537353516 Tokens per Sec: 13552.449512282663
Epoch Step: 375 / 819 Loss: 20.564836502075195 Tokens per Sec: 14446.32278203165
Epoch Step: 380 / 819 Loss: 22.977663040161133 Tokens per Sec: 15159.361400433032
Epoch Step: 385 / 819 Loss: 14.858235359191895 Tokens per Sec: 13228.36348380074
Epoch Step: 390 / 819 Loss: 24.283424377441406 Tokens per Sec: 15002.807663783673
Epoch Step: 395 / 819 Loss: 15.0345458984375 Tokens per Sec: 13911.904740442946
Epoch Step: 400 / 819 Loss: 16.298200607299805 Tokens per Sec: 14911.804750989293
Epoch Step: 405 / 819 Loss: 20.352840423583984 Tokens per Sec: 14524.987767875618
Epoch Step: 410 / 819 Loss: 17.030643463134766 Tokens per Sec: 12949.178049451684
Epoch Step: 415 / 819 Loss: 13.859421730041504 Tokens per Sec: 16314.560938929611
Epoch Step: 420 / 819 Loss: 18.35348129272461 Tokens per Sec: 13694.075668879044
Epoch Step: 425 / 819 Loss: 21.12834358215332 Tokens per Sec: 14458.825247968756
Epoch Step: 430 / 819 Loss: 223.32261657714844 Tokens per Sec: 15842.191660770934
Epoch Step: 435 / 819 Loss: 19.732742309570312 Tokens per Sec: 15486.81967647611
Epoch Step: 440 / 819 Loss: 20.531005859375 Tokens per Sec: 13728.877076969815
Epoch Step: 445 / 819 Loss: 25.462976455688477 Tokens per Sec: 13062.171791131128
Epoch Step: 450 / 819 Loss: 17.033409118652344 Tokens per Sec: 13143.255302476582
Epoch Step: 455 / 819 Loss: 15.876472473144531 Tokens per Sec: 12170.577074568562
Epoch Step: 460 / 819 Loss: 23.14362144470215 Tokens per Sec: 13491.693035148315
Epoch Step: 465 / 819 Loss: 19.336706161499023 Tokens per Sec: 12960.463743368507
Epoch Step: 470 / 819 Loss: 15.3610258102417 Tokens per Sec: 14447.843575847572
Epoch Step: 475 / 819 Loss: 25.781925201416016 Tokens per Sec: 14650.21418099272
Epoch Step: 480 / 819 Loss: 19.84445571899414 Tokens per Sec: 15735.06830539851
Epoch Step: 485 / 819 Loss: 15.619638442993164 Tokens per Sec: 13155.407725236111
Epoch Step: 490 / 819 Loss: 22.81697654724121 Tokens per Sec: 13548.842821602828
Epoch Step: 495 / 819 Loss: 18.643814086914062 Tokens per Sec: 13225.645530462507
Epoch Step: 500 / 819 Loss: 21.52204132080078 Tokens per Sec: 13595.013032661627
Epoch Step: 505 / 819 Loss: 23.237951278686523 Tokens per Sec: 12967.238692572193
Epoch Step: 510 / 819 Loss: 15.824551582336426 Tokens per Sec: 13402.136830895033
Epoch Step: 515 / 819 Loss: 127.61096954345703 Tokens per Sec: 15085.858375073265
Epoch Step: 520 / 819 Loss: 204.410400390625 Tokens per Sec: 13320.280916869751
Epoch Step: 525 / 819 Loss: 23.534475326538086 Tokens per Sec: 14066.18052658709
Epoch Step: 530 / 819 Loss: 17.725608825683594 Tokens per Sec: 12928.86836266967
Epoch Step: 535 / 819 Loss: 13.742494583129883 Tokens per Sec: 14844.826658342401
Epoch Step: 540 / 819 Loss: 204.92572021484375 Tokens per Sec: 14858.52980343035
Epoch Step: 545 / 819 Loss: 22.016355514526367 Tokens per Sec: 14241.650857631053
Epoch Step: 550 / 819 Loss: 16.988664627075195 Tokens per Sec: 12556.295312341894
Epoch Step: 555 / 819 Loss: 18.43506622314453 Tokens per Sec: 13177.828877883743
Epoch Step: 560 / 819 Loss: 17.28445053100586 Tokens per Sec: 13464.137817544912
Epoch Step: 565 / 819 Loss: 18.991037368774414 Tokens per Sec: 16169.336051069715
Epoch Step: 570 / 819 Loss: 24.92434310913086 Tokens per Sec: 16957.40749617487
Epoch Step: 575 / 819 Loss: 18.94292640686035 Tokens per Sec: 13755.386613174676
Epoch Step: 580 / 819 Loss: 92.90052795410156 Tokens per Sec: 14584.94327587762
Epoch Step: 585 / 819 Loss: 21.10607147216797 Tokens per Sec: 12676.719511248533
Epoch Step: 590 / 819 Loss: 23.056350708007812 Tokens per Sec: 13735.81922961609
Epoch Step: 595 / 819 Loss: 23.083772659301758 Tokens per Sec: 13609.05901539965
Epoch Step: 600 / 819 Loss: 17.2731990814209 Tokens per Sec: 14212.761278523967
Epoch Step: 605 / 819 Loss: 22.390316009521484 Tokens per Sec: 13919.920934793263
Epoch Step: 610 / 819 Loss: 14.062417030334473 Tokens per Sec: 13444.616799534391
Epoch Step: 615 / 819 Loss: 24.794734954833984 Tokens per Sec: 15457.615815725814
Epoch Step: 620 / 819 Loss: 18.180564880371094 Tokens per Sec: 12958.45264425258
Epoch Step: 625 / 819 Loss: 13.662664413452148 Tokens per Sec: 13923.789230418683
Epoch Step: 630 / 819 Loss: 25.226978302001953 Tokens per Sec: 14513.588465051393
Epoch Step: 635 / 819 Loss: 23.10040283203125 Tokens per Sec: 14068.565614337822
Epoch Step: 640 / 819 Loss: 19.092445373535156 Tokens per Sec: 13129.338074121977
Epoch Step: 645 / 819 Loss: 25.360368728637695 Tokens per Sec: 16473.816061942045
Epoch Step: 650 / 819 Loss: 18.777973175048828 Tokens per Sec: 12872.670887293414
Epoch Step: 655 / 819 Loss: 16.22372817993164 Tokens per Sec: 15916.727305649138
Epoch Step: 660 / 819 Loss: 18.448110580444336 Tokens per Sec: 15866.428943748911
Epoch Step: 665 / 819 Loss: 102.33972930908203 Tokens per Sec: 13238.671051888332
Epoch Step: 670 / 819 Loss: 26.238149642944336 Tokens per Sec: 14657.96819384222
Epoch Step: 675 / 819 Loss: 193.8958740234375 Tokens per Sec: 13535.554819449233
Epoch Step: 680 / 819 Loss: 21.63365936279297 Tokens per Sec: 14343.343135526984
Epoch Step: 685 / 819 Loss: 19.486787796020508 Tokens per Sec: 14718.799704648802
Epoch Step: 690 / 819 Loss: 299.4701232910156 Tokens per Sec: 13908.8599706199
Epoch Step: 695 / 819 Loss: 20.64143180847168 Tokens per Sec: 14080.65568180509
Epoch Step: 700 / 819 Loss: 23.040451049804688 Tokens per Sec: 15153.958985257397
Epoch Step: 705 / 819 Loss: 16.265487670898438 Tokens per Sec: 13323.638047746832
Epoch Step: 710 / 819 Loss: 18.300220489501953 Tokens per Sec: 14308.268572551018
Epoch Step: 715 / 819 Loss: 14.524267196655273 Tokens per Sec: 14856.99091139603
Epoch Step: 720 / 819 Loss: 23.694643020629883 Tokens per Sec: 15089.05630131169
Epoch Step: 725 / 819 Loss: 19.009870529174805 Tokens per Sec: 15069.408246891426
Epoch Step: 730 / 819 Loss: 17.553743362426758 Tokens per Sec: 16205.739315705776
Epoch Step: 735 / 819 Loss: 19.21300506591797 Tokens per Sec: 12781.151522550661
Epoch Step: 740 / 819 Loss: 18.895492553710938 Tokens per Sec: 14026.139277241822
Epoch Step: 745 / 819 Loss: 14.322538375854492 Tokens per Sec: 12701.510139663415
Epoch Step: 750 / 819 Loss: 16.719955444335938 Tokens per Sec: 13978.848493028408
Epoch Step: 755 / 819 Loss: 19.103530883789062 Tokens per Sec: 12493.043504459587
Epoch Step: 760 / 819 Loss: 16.863300323486328 Tokens per Sec: 12840.330400736104
Epoch Step: 765 / 819 Loss: 19.800678253173828 Tokens per Sec: 14535.104690892958
Epoch Step: 770 / 819 Loss: 205.046142578125 Tokens per Sec: 13739.55094635461
Epoch Step: 775 / 819 Loss: 19.875215530395508 Tokens per Sec: 13925.185097127134
Epoch Step: 780 / 819 Loss: 16.624658584594727 Tokens per Sec: 14269.168597471169
Epoch Step: 785 / 819 Loss: 25.829002380371094 Tokens per Sec: 12856.062623664388
Epoch Step: 790 / 819 Loss: 19.3393497467041 Tokens per Sec: 12005.530383794496
Epoch Step: 795 / 819 Loss: 18.267837524414062 Tokens per Sec: 14394.242023212846
Epoch Step: 800 / 819 Loss: 19.80681037902832 Tokens per Sec: 14811.67434495437
Epoch Step: 805 / 819 Loss: 18.82842254638672 Tokens per Sec: 11252.513903945452
Epoch Step: 810 / 819 Loss: 18.015867233276367 Tokens per Sec: 13717.896450703292
Epoch Step: 815 / 819 Loss: 18.463642120361328 Tokens per Sec: 15024.145259762288
Epoch ended with duration 0:04:37.199585
Train perplexity: 1.6460463318999263
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.060246
Validation perplexity: 1.622758341651832
Epoch 22 / 1000
Epoch Step: 5 / 819 Loss: 175.76168823242188 Tokens per Sec: 12718.305004854055
Epoch Step: 10 / 819 Loss: 25.563762664794922 Tokens per Sec: 14881.92254344718
Epoch Step: 15 / 819 Loss: 20.418657302856445 Tokens per Sec: 14301.00759037733
Epoch Step: 20 / 819 Loss: 19.242568969726562 Tokens per Sec: 14268.638695846534
Epoch Step: 25 / 819 Loss: 23.009761810302734 Tokens per Sec: 13907.176428309715
Epoch Step: 30 / 819 Loss: 19.4064998626709 Tokens per Sec: 14681.913497753592
Epoch Step: 35 / 819 Loss: 16.400344848632812 Tokens per Sec: 13929.843323648485
Epoch Step: 40 / 819 Loss: 20.057865142822266 Tokens per Sec: 15265.5668437831
Epoch Step: 45 / 819 Loss: 21.087644577026367 Tokens per Sec: 13573.935579526005
Epoch Step: 50 / 819 Loss: 15.947495460510254 Tokens per Sec: 14060.135850226476
Epoch Step: 55 / 819 Loss: 21.702354431152344 Tokens per Sec: 14989.944719946478
Epoch Step: 60 / 819 Loss: 15.732819557189941 Tokens per Sec: 13689.679696757174
Epoch Step: 65 / 819 Loss: 17.85988426208496 Tokens per Sec: 14942.025052049823
Epoch Step: 70 / 819 Loss: 19.76268768310547 Tokens per Sec: 13349.927088277424
Epoch Step: 75 / 819 Loss: 165.80953979492188 Tokens per Sec: 13015.81611418401
Epoch Step: 80 / 819 Loss: 17.85979652404785 Tokens per Sec: 13406.427671943036
Epoch Step: 85 / 819 Loss: 16.712980270385742 Tokens per Sec: 14263.750023466177
Epoch Step: 90 / 819 Loss: 23.633121490478516 Tokens per Sec: 14331.789302082865
Epoch Step: 95 / 819 Loss: 26.802936553955078 Tokens per Sec: 16578.891773206014
Epoch Step: 100 / 819 Loss: 15.684481620788574 Tokens per Sec: 12643.09767894367
Epoch Step: 105 / 819 Loss: 14.194255828857422 Tokens per Sec: 15381.669074684498
Epoch Step: 110 / 819 Loss: 26.813289642333984 Tokens per Sec: 15510.231488358808
Epoch Step: 115 / 819 Loss: 21.34194564819336 Tokens per Sec: 13962.363561063114
Epoch Step: 120 / 819 Loss: 22.259357452392578 Tokens per Sec: 13900.79604558021
Epoch Step: 125 / 819 Loss: 19.734149932861328 Tokens per Sec: 12739.82960201249
Epoch Step: 130 / 819 Loss: 15.718785285949707 Tokens per Sec: 14409.319836495617
Epoch Step: 135 / 819 Loss: 156.59771728515625 Tokens per Sec: 13504.447022370561
Epoch Step: 140 / 819 Loss: 20.36746597290039 Tokens per Sec: 14300.168819421122
Epoch Step: 145 / 819 Loss: 252.5250701904297 Tokens per Sec: 14533.752487778977
Epoch Step: 150 / 819 Loss: 219.73922729492188 Tokens per Sec: 13401.077374485667
Epoch Step: 155 / 819 Loss: 176.24557495117188 Tokens per Sec: 14357.049915291469
Epoch Step: 160 / 819 Loss: 20.405858993530273 Tokens per Sec: 14072.23511776918
Epoch Step: 165 / 819 Loss: 19.994709014892578 Tokens per Sec: 13292.675764316373
Epoch Step: 170 / 819 Loss: 14.924242973327637 Tokens per Sec: 13664.526900572593
Epoch Step: 175 / 819 Loss: 210.8372039794922 Tokens per Sec: 15352.294013195187
Epoch Step: 180 / 819 Loss: 18.870208740234375 Tokens per Sec: 13640.538788286492
Epoch Step: 185 / 819 Loss: 19.828184127807617 Tokens per Sec: 13391.415107400548
Epoch Step: 190 / 819 Loss: 17.233074188232422 Tokens per Sec: 12404.456410826897
Epoch Step: 195 / 819 Loss: 18.384004592895508 Tokens per Sec: 14218.957953211448
Epoch Step: 200 / 819 Loss: 141.39517211914062 Tokens per Sec: 13023.29104908883
Epoch Step: 205 / 819 Loss: 17.629066467285156 Tokens per Sec: 15236.207488511945
Epoch Step: 210 / 819 Loss: 20.772308349609375 Tokens per Sec: 15570.521518248579
Epoch Step: 215 / 819 Loss: 18.754364013671875 Tokens per Sec: 15362.173860530907
Epoch Step: 220 / 819 Loss: 16.422433853149414 Tokens per Sec: 15582.086578944327
Epoch Step: 225 / 819 Loss: 25.008926391601562 Tokens per Sec: 14047.476709845154
Epoch Step: 230 / 819 Loss: 22.238056182861328 Tokens per Sec: 13340.781794734516
Epoch Step: 235 / 819 Loss: 16.942461013793945 Tokens per Sec: 13177.057633563563
Epoch Step: 240 / 819 Loss: 23.797115325927734 Tokens per Sec: 14162.638813806489
Epoch Step: 245 / 819 Loss: 254.93899536132812 Tokens per Sec: 15556.963683971066
Epoch Step: 250 / 819 Loss: 17.70661163330078 Tokens per Sec: 15087.128812059991
Epoch Step: 255 / 819 Loss: 22.400514602661133 Tokens per Sec: 13470.181008372789
Epoch Step: 260 / 819 Loss: 19.029390335083008 Tokens per Sec: 15655.90243460987
Epoch Step: 265 / 819 Loss: 24.302637100219727 Tokens per Sec: 13287.24881460296
Epoch Step: 270 / 819 Loss: 20.895904541015625 Tokens per Sec: 13015.132420748165
Epoch Step: 275 / 819 Loss: 15.077463150024414 Tokens per Sec: 13504.26156685314
Epoch Step: 280 / 819 Loss: 15.706460952758789 Tokens per Sec: 12072.868834056717
Epoch Step: 285 / 819 Loss: 21.374319076538086 Tokens per Sec: 14220.326237511328
Epoch Step: 290 / 819 Loss: 16.83978271484375 Tokens per Sec: 14485.049926292064
Epoch Step: 295 / 819 Loss: 19.9078426361084 Tokens per Sec: 12427.584595047558
Epoch Step: 300 / 819 Loss: 23.151071548461914 Tokens per Sec: 13221.144165570196
Epoch Step: 305 / 819 Loss: 20.446378707885742 Tokens per Sec: 12698.930850223687
Epoch Step: 310 / 819 Loss: 22.278322219848633 Tokens per Sec: 14809.696410572971
Epoch Step: 315 / 819 Loss: 16.440067291259766 Tokens per Sec: 13225.398230914818
Epoch Step: 320 / 819 Loss: 21.236406326293945 Tokens per Sec: 14052.36749393374
Epoch Step: 325 / 819 Loss: 25.846017837524414 Tokens per Sec: 13583.999286876682
Epoch Step: 330 / 819 Loss: 16.90032958984375 Tokens per Sec: 15600.627404263876
Epoch Step: 335 / 819 Loss: 15.9519624710083 Tokens per Sec: 13552.124401641076
Epoch Step: 340 / 819 Loss: 23.707683563232422 Tokens per Sec: 14707.07128102058
Epoch Step: 345 / 819 Loss: 15.722436904907227 Tokens per Sec: 13612.410523081018
Epoch Step: 350 / 819 Loss: 16.696889877319336 Tokens per Sec: 13236.378756340173
Epoch Step: 355 / 819 Loss: 16.386648178100586 Tokens per Sec: 14418.854885313187
Epoch Step: 360 / 819 Loss: 94.08484649658203 Tokens per Sec: 13389.719096054005
Epoch Step: 365 / 819 Loss: 18.0419921875 Tokens per Sec: 14097.437742099588
Epoch Step: 370 / 819 Loss: 215.50389099121094 Tokens per Sec: 16450.100380387103
Epoch Step: 375 / 819 Loss: 18.682092666625977 Tokens per Sec: 13991.863498154671
Epoch Step: 380 / 819 Loss: 27.021390914916992 Tokens per Sec: 13554.958082128645
Epoch Step: 385 / 819 Loss: 26.598037719726562 Tokens per Sec: 12977.274998957124
Epoch Step: 390 / 819 Loss: 20.72730827331543 Tokens per Sec: 14080.78019587852
Epoch Step: 395 / 819 Loss: 219.21954345703125 Tokens per Sec: 14803.928887841605
Epoch Step: 400 / 819 Loss: 21.468494415283203 Tokens per Sec: 13305.715505420529
Epoch Step: 405 / 819 Loss: 26.4580078125 Tokens per Sec: 13682.866961955999
Epoch Step: 410 / 819 Loss: 26.09912872314453 Tokens per Sec: 12703.427793679988
Epoch Step: 415 / 819 Loss: 23.346296310424805 Tokens per Sec: 15108.751597389959
Epoch Step: 420 / 819 Loss: 26.28481674194336 Tokens per Sec: 13828.63517876318
Epoch Step: 425 / 819 Loss: 23.156333923339844 Tokens per Sec: 15520.55993540674
Epoch Step: 430 / 819 Loss: 20.168048858642578 Tokens per Sec: 15761.36610399003
Epoch Step: 435 / 819 Loss: 18.202829360961914 Tokens per Sec: 13806.841999540282
Epoch Step: 440 / 819 Loss: 23.618207931518555 Tokens per Sec: 12827.02665213389
Epoch Step: 445 / 819 Loss: 24.61691665649414 Tokens per Sec: 13971.151432856586
Epoch Step: 450 / 819 Loss: 20.025920867919922 Tokens per Sec: 12734.986330183196
Epoch Step: 455 / 819 Loss: 18.309043884277344 Tokens per Sec: 13649.091765411578
Epoch Step: 460 / 819 Loss: 20.054685592651367 Tokens per Sec: 13183.243134058688
Epoch Step: 465 / 819 Loss: 17.786813735961914 Tokens per Sec: 15639.304890540614
Epoch Step: 470 / 819 Loss: 13.731274604797363 Tokens per Sec: 16527.733558318014
Epoch Step: 475 / 819 Loss: 15.082383155822754 Tokens per Sec: 14530.344694895517
Epoch Step: 480 / 819 Loss: 20.124845504760742 Tokens per Sec: 12062.727457557174
Epoch Step: 485 / 819 Loss: 15.482929229736328 Tokens per Sec: 14693.617585409986
Epoch Step: 490 / 819 Loss: 18.922176361083984 Tokens per Sec: 12517.278282970039
Epoch Step: 495 / 819 Loss: 14.7044677734375 Tokens per Sec: 13411.063525494365
Epoch Step: 500 / 819 Loss: 15.7181396484375 Tokens per Sec: 15417.418488065963
Epoch Step: 505 / 819 Loss: 18.6767578125 Tokens per Sec: 13056.717855802015
Epoch Step: 510 / 819 Loss: 15.202505111694336 Tokens per Sec: 15571.057899621617
Epoch Step: 515 / 819 Loss: 17.006607055664062 Tokens per Sec: 13678.528438032372
Epoch Step: 520 / 819 Loss: 21.067590713500977 Tokens per Sec: 15907.23568192464
Epoch Step: 525 / 819 Loss: 14.041584968566895 Tokens per Sec: 14079.811005400727
Epoch Step: 530 / 819 Loss: 24.56266212463379 Tokens per Sec: 13522.84814073657
Epoch Step: 535 / 819 Loss: 17.711376190185547 Tokens per Sec: 13492.19664756646
Epoch Step: 540 / 819 Loss: 19.954736709594727 Tokens per Sec: 14364.674214200679
Epoch Step: 545 / 819 Loss: 20.82782554626465 Tokens per Sec: 14378.935038237518
Epoch Step: 550 / 819 Loss: 156.28924560546875 Tokens per Sec: 13112.55858310511
Epoch Step: 555 / 819 Loss: 21.76007652282715 Tokens per Sec: 12112.503021253906
Epoch Step: 560 / 819 Loss: 21.078737258911133 Tokens per Sec: 13495.237525302815
Epoch Step: 565 / 819 Loss: 20.37356948852539 Tokens per Sec: 14884.705078246103
Epoch Step: 570 / 819 Loss: 13.357215881347656 Tokens per Sec: 14754.086634587939
Epoch Step: 575 / 819 Loss: 26.215225219726562 Tokens per Sec: 12679.655796465915
Epoch Step: 580 / 819 Loss: 22.8742733001709 Tokens per Sec: 13605.308548693156
Epoch Step: 585 / 819 Loss: 23.494205474853516 Tokens per Sec: 15916.934093174521
Epoch Step: 590 / 819 Loss: 22.229537963867188 Tokens per Sec: 13666.016861452646
Epoch Step: 595 / 819 Loss: 19.196043014526367 Tokens per Sec: 14919.360266283755
Epoch Step: 600 / 819 Loss: 17.373994827270508 Tokens per Sec: 13097.210575121682
Epoch Step: 605 / 819 Loss: 203.87025451660156 Tokens per Sec: 14237.387116438453
Epoch Step: 610 / 819 Loss: 19.65534782409668 Tokens per Sec: 14391.933292375577
Epoch Step: 615 / 819 Loss: 21.160470962524414 Tokens per Sec: 16155.468529682643
Epoch Step: 620 / 819 Loss: 151.17361450195312 Tokens per Sec: 14692.57518187064
Epoch Step: 625 / 819 Loss: 22.521034240722656 Tokens per Sec: 13452.945593251754
Epoch Step: 630 / 819 Loss: 20.67996597290039 Tokens per Sec: 13137.657638173874
Epoch Step: 635 / 819 Loss: 14.161231994628906 Tokens per Sec: 14121.091465142152
Epoch Step: 640 / 819 Loss: 22.658519744873047 Tokens per Sec: 14577.439005543423
Epoch Step: 645 / 819 Loss: 24.51714515686035 Tokens per Sec: 13975.40904983029
Epoch Step: 650 / 819 Loss: 18.657514572143555 Tokens per Sec: 16541.760342974037
Epoch Step: 655 / 819 Loss: 138.5570831298828 Tokens per Sec: 13687.654020004178
Epoch Step: 660 / 819 Loss: 21.55963134765625 Tokens per Sec: 12415.081777253838
Epoch Step: 665 / 819 Loss: 14.58643913269043 Tokens per Sec: 13555.040989822559
Epoch Step: 670 / 819 Loss: 22.468027114868164 Tokens per Sec: 14820.646612811004
Epoch Step: 675 / 819 Loss: 13.663456916809082 Tokens per Sec: 14166.996855548736
Epoch Step: 680 / 819 Loss: 113.83027648925781 Tokens per Sec: 15246.031934244767
Epoch Step: 685 / 819 Loss: 265.0460510253906 Tokens per Sec: 14979.443379387625
Epoch Step: 690 / 819 Loss: 21.151155471801758 Tokens per Sec: 13214.230462132147
Epoch Step: 695 / 819 Loss: 21.640090942382812 Tokens per Sec: 14049.501256449536
Epoch Step: 700 / 819 Loss: 17.464582443237305 Tokens per Sec: 12437.095143381843
Epoch Step: 705 / 819 Loss: 16.236473083496094 Tokens per Sec: 13589.17363394315
Epoch Step: 710 / 819 Loss: 21.110157012939453 Tokens per Sec: 15703.00793977042
Epoch Step: 715 / 819 Loss: 23.283924102783203 Tokens per Sec: 13989.179563806443
Epoch Step: 720 / 819 Loss: 21.636995315551758 Tokens per Sec: 15612.028426139796
Epoch Step: 725 / 819 Loss: 22.22234535217285 Tokens per Sec: 13287.974082033727
Epoch Step: 730 / 819 Loss: 23.689376831054688 Tokens per Sec: 14251.173657744986
Epoch Step: 735 / 819 Loss: 20.36980628967285 Tokens per Sec: 12962.013143410244
Epoch Step: 740 / 819 Loss: 199.55892944335938 Tokens per Sec: 13847.786083869583
Epoch Step: 745 / 819 Loss: 23.608800888061523 Tokens per Sec: 13482.378322548477
Epoch Step: 750 / 819 Loss: 15.880158424377441 Tokens per Sec: 13344.895192698026
Epoch Step: 755 / 819 Loss: 13.202105522155762 Tokens per Sec: 13696.354260198746
Epoch Step: 760 / 819 Loss: 24.91786766052246 Tokens per Sec: 14537.67084625294
Epoch Step: 765 / 819 Loss: 16.345184326171875 Tokens per Sec: 13366.778055998178
Epoch Step: 770 / 819 Loss: 14.935949325561523 Tokens per Sec: 14833.39246173741
Epoch Step: 775 / 819 Loss: 21.03314781188965 Tokens per Sec: 15680.197748839346
Epoch Step: 780 / 819 Loss: 22.233388900756836 Tokens per Sec: 13742.926187092378
Epoch Step: 785 / 819 Loss: 19.488725662231445 Tokens per Sec: 13558.505046890177
Epoch Step: 790 / 819 Loss: 21.29300308227539 Tokens per Sec: 14224.269204336679
Epoch Step: 795 / 819 Loss: 25.422197341918945 Tokens per Sec: 14316.705724371737
Epoch Step: 800 / 819 Loss: 22.172395706176758 Tokens per Sec: 14767.714191545505
Epoch Step: 805 / 819 Loss: 20.05799102783203 Tokens per Sec: 11764.935982787534
Epoch Step: 810 / 819 Loss: 18.619792938232422 Tokens per Sec: 13435.68640731991
Epoch Step: 815 / 819 Loss: 20.305875778198242 Tokens per Sec: 13865.991903613132
Epoch ended with duration 0:04:36.883809
Train perplexity: 1.663403655048628
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.407503
Validation perplexity: 1.7766706113006432
Epoch 23 / 1000
Epoch Step: 5 / 819 Loss: 19.571420669555664 Tokens per Sec: 13256.577815173507
Epoch Step: 10 / 819 Loss: 19.46714210510254 Tokens per Sec: 14307.533158160628
Epoch Step: 15 / 819 Loss: 22.550935745239258 Tokens per Sec: 13090.603736349976
Epoch Step: 20 / 819 Loss: 16.68085289001465 Tokens per Sec: 12728.327448725284
Epoch Step: 25 / 819 Loss: 23.078041076660156 Tokens per Sec: 13435.21158477935
Epoch Step: 30 / 819 Loss: 21.17857551574707 Tokens per Sec: 14161.059682044062
Epoch Step: 35 / 819 Loss: 17.751413345336914 Tokens per Sec: 14140.43656323224
Epoch Step: 40 / 819 Loss: 17.554533004760742 Tokens per Sec: 13684.491657131768
Epoch Step: 45 / 819 Loss: 17.055147171020508 Tokens per Sec: 14340.36623602493
Epoch Step: 50 / 819 Loss: 16.926706314086914 Tokens per Sec: 13080.467856186926
Epoch Step: 55 / 819 Loss: 24.50226402282715 Tokens per Sec: 13621.380409473193
Epoch Step: 60 / 819 Loss: 19.643461227416992 Tokens per Sec: 12624.881185090655
Epoch Step: 65 / 819 Loss: 13.862788200378418 Tokens per Sec: 13810.441260579846
Epoch Step: 70 / 819 Loss: 23.197383880615234 Tokens per Sec: 15437.24218550812
Epoch Step: 75 / 819 Loss: 18.73033332824707 Tokens per Sec: 15799.476008325337
Epoch Step: 80 / 819 Loss: 14.663735389709473 Tokens per Sec: 15101.959430298304
Epoch Step: 85 / 819 Loss: 22.240793228149414 Tokens per Sec: 15069.759643584708
Epoch Step: 90 / 819 Loss: 16.52558135986328 Tokens per Sec: 15264.708370021217
Epoch Step: 95 / 819 Loss: 14.999059677124023 Tokens per Sec: 14144.328020782139
Epoch Step: 100 / 819 Loss: 20.86520767211914 Tokens per Sec: 15240.330718470324
Epoch Step: 105 / 819 Loss: 19.554882049560547 Tokens per Sec: 12608.659712858036
Epoch Step: 110 / 819 Loss: 14.227645874023438 Tokens per Sec: 13908.085370902476
Epoch Step: 115 / 819 Loss: 23.302431106567383 Tokens per Sec: 14614.979924325546
Epoch Step: 120 / 819 Loss: 21.492942810058594 Tokens per Sec: 13862.597046212937
Epoch Step: 125 / 819 Loss: 18.83280372619629 Tokens per Sec: 15139.016042939611
Epoch Step: 130 / 819 Loss: 24.03094482421875 Tokens per Sec: 15027.140715371992
Epoch Step: 135 / 819 Loss: 23.870851516723633 Tokens per Sec: 13099.662028297247
Epoch Step: 140 / 819 Loss: 15.770709037780762 Tokens per Sec: 13447.323286324476
Epoch Step: 145 / 819 Loss: 17.018089294433594 Tokens per Sec: 14148.80087697074
Epoch Step: 150 / 819 Loss: 24.179475784301758 Tokens per Sec: 14736.064262982078
Epoch Step: 155 / 819 Loss: 18.873292922973633 Tokens per Sec: 13798.475802785597
Epoch Step: 160 / 819 Loss: 16.17790412902832 Tokens per Sec: 13921.72421168014
Epoch Step: 165 / 819 Loss: 21.680587768554688 Tokens per Sec: 14439.843238074818
Epoch Step: 170 / 819 Loss: 22.181543350219727 Tokens per Sec: 14186.7048461877
Epoch Step: 175 / 819 Loss: 15.522284507751465 Tokens per Sec: 14667.720111231227
Epoch Step: 180 / 819 Loss: 198.3629150390625 Tokens per Sec: 13140.585310020855
Epoch Step: 185 / 819 Loss: 19.875850677490234 Tokens per Sec: 13104.29528018961
Epoch Step: 190 / 819 Loss: 27.850130081176758 Tokens per Sec: 14518.90172996657
Epoch Step: 195 / 819 Loss: 18.275146484375 Tokens per Sec: 14627.06042085119
Epoch Step: 200 / 819 Loss: 25.66127586364746 Tokens per Sec: 13745.955840596007
Epoch Step: 205 / 819 Loss: 22.066181182861328 Tokens per Sec: 16269.907697296421
Epoch Step: 210 / 819 Loss: 23.483718872070312 Tokens per Sec: 14060.268261190784
Epoch Step: 215 / 819 Loss: 14.05596923828125 Tokens per Sec: 13472.274124079615
Epoch Step: 220 / 819 Loss: 25.059207916259766 Tokens per Sec: 13812.558778221593
Epoch Step: 225 / 819 Loss: 14.439088821411133 Tokens per Sec: 16927.333556175603
Epoch Step: 230 / 819 Loss: 24.686674118041992 Tokens per Sec: 14401.835173651327
Epoch Step: 235 / 819 Loss: 17.271320343017578 Tokens per Sec: 13937.34926654929
Epoch Step: 240 / 819 Loss: 17.318517684936523 Tokens per Sec: 15945.24149841816
Epoch Step: 245 / 819 Loss: 22.450031280517578 Tokens per Sec: 12609.744769881561
Epoch Step: 250 / 819 Loss: 16.022361755371094 Tokens per Sec: 14003.395873314077
Epoch Step: 255 / 819 Loss: 21.7469482421875 Tokens per Sec: 16007.193571271944
Epoch Step: 260 / 819 Loss: 16.760150909423828 Tokens per Sec: 12542.74638037732
Epoch Step: 265 / 819 Loss: 23.760574340820312 Tokens per Sec: 16880.528001420902
Epoch Step: 270 / 819 Loss: 21.932785034179688 Tokens per Sec: 15503.816377512201
Epoch Step: 275 / 819 Loss: 20.094623565673828 Tokens per Sec: 15551.11224191103
Epoch Step: 280 / 819 Loss: 19.4836368560791 Tokens per Sec: 13937.473141473825
Epoch Step: 285 / 819 Loss: 21.52075958251953 Tokens per Sec: 14522.948908412433
Epoch Step: 290 / 819 Loss: 18.177003860473633 Tokens per Sec: 13355.99513393955
Epoch Step: 295 / 819 Loss: 20.86884117126465 Tokens per Sec: 15432.321309940346
Epoch Step: 300 / 819 Loss: 24.141870498657227 Tokens per Sec: 14024.088671817892
Epoch Step: 305 / 819 Loss: 20.98097801208496 Tokens per Sec: 13127.861089565107
Epoch Step: 310 / 819 Loss: 19.427526473999023 Tokens per Sec: 14002.873063717752
Epoch Step: 315 / 819 Loss: 23.12569236755371 Tokens per Sec: 14250.23295548222
Epoch Step: 320 / 819 Loss: 255.17726135253906 Tokens per Sec: 12595.251381213238
Epoch Step: 325 / 819 Loss: 21.02425765991211 Tokens per Sec: 14110.642776105164
Epoch Step: 330 / 819 Loss: 241.21554565429688 Tokens per Sec: 15539.191343314276
Epoch Step: 335 / 819 Loss: 16.662296295166016 Tokens per Sec: 14017.240397335197
Epoch Step: 340 / 819 Loss: 15.945291519165039 Tokens per Sec: 15661.763911559143
Epoch Step: 345 / 819 Loss: 13.908963203430176 Tokens per Sec: 13777.752677203509
Epoch Step: 350 / 819 Loss: 16.776126861572266 Tokens per Sec: 15523.075969262158
Epoch Step: 355 / 819 Loss: 20.001625061035156 Tokens per Sec: 15488.534770174341
Epoch Step: 360 / 819 Loss: 21.0719051361084 Tokens per Sec: 14037.354892971358
Epoch Step: 365 / 819 Loss: 21.898868560791016 Tokens per Sec: 14917.327367009842
Epoch Step: 370 / 819 Loss: 252.31629943847656 Tokens per Sec: 13602.905142531981
Epoch Step: 375 / 819 Loss: 200.71484375 Tokens per Sec: 12732.863853987468
Epoch Step: 380 / 819 Loss: 23.79167938232422 Tokens per Sec: 13019.890094077873
Epoch Step: 385 / 819 Loss: 24.546682357788086 Tokens per Sec: 14353.454705554208
Epoch Step: 390 / 819 Loss: 19.883195877075195 Tokens per Sec: 13624.12906686316
Epoch Step: 395 / 819 Loss: 22.453271865844727 Tokens per Sec: 13365.080285108073
Epoch Step: 400 / 819 Loss: 23.203950881958008 Tokens per Sec: 13231.891463238104
Epoch Step: 405 / 819 Loss: 24.299341201782227 Tokens per Sec: 13957.947014038453
Epoch Step: 410 / 819 Loss: 16.52434730529785 Tokens per Sec: 13583.936677849477
Epoch Step: 415 / 819 Loss: 23.996294021606445 Tokens per Sec: 13826.675752455994
Epoch Step: 420 / 819 Loss: 21.57101821899414 Tokens per Sec: 12392.428992700183
Epoch Step: 425 / 819 Loss: 14.147273063659668 Tokens per Sec: 14735.504572460848
Epoch Step: 430 / 819 Loss: 14.182394027709961 Tokens per Sec: 13826.810185393308
Epoch Step: 435 / 819 Loss: 23.603240966796875 Tokens per Sec: 14082.295722608706
Epoch Step: 440 / 819 Loss: 20.002138137817383 Tokens per Sec: 14367.943481880244
Epoch Step: 445 / 819 Loss: 14.93779468536377 Tokens per Sec: 12878.546822770197
Epoch Step: 450 / 819 Loss: 20.516727447509766 Tokens per Sec: 12680.876336241976
Epoch Step: 455 / 819 Loss: 21.38423728942871 Tokens per Sec: 12840.421352730082
Epoch Step: 460 / 819 Loss: 17.143545150756836 Tokens per Sec: 13367.41274106792
Epoch Step: 465 / 819 Loss: 18.53154945373535 Tokens per Sec: 14822.634153928397
Epoch Step: 470 / 819 Loss: 20.74703598022461 Tokens per Sec: 15380.028885623346
Epoch Step: 475 / 819 Loss: 17.628816604614258 Tokens per Sec: 14655.001591316364
Epoch Step: 480 / 819 Loss: 207.42442321777344 Tokens per Sec: 15503.131998121495
Epoch Step: 485 / 819 Loss: 18.61125946044922 Tokens per Sec: 14034.86789136316
Epoch Step: 490 / 819 Loss: 24.544605255126953 Tokens per Sec: 14497.179130829447
Epoch Step: 495 / 819 Loss: 16.4996395111084 Tokens per Sec: 15008.564821401555
Epoch Step: 500 / 819 Loss: 20.150936126708984 Tokens per Sec: 14500.690244276646
Epoch Step: 505 / 819 Loss: 185.06517028808594 Tokens per Sec: 13768.34347947331
Epoch Step: 510 / 819 Loss: 26.733001708984375 Tokens per Sec: 15193.825791555892
Epoch Step: 515 / 819 Loss: 19.611045837402344 Tokens per Sec: 13947.035992278263
Epoch Step: 520 / 819 Loss: 14.964434623718262 Tokens per Sec: 13206.356476924968
Epoch Step: 525 / 819 Loss: 17.51599884033203 Tokens per Sec: 15496.496304844208
Epoch Step: 530 / 819 Loss: 16.092723846435547 Tokens per Sec: 13128.74969708455
Epoch Step: 535 / 819 Loss: 19.732315063476562 Tokens per Sec: 13632.962653021073
Epoch Step: 540 / 819 Loss: 18.703582763671875 Tokens per Sec: 12411.919303542738
Epoch Step: 545 / 819 Loss: 22.71408462524414 Tokens per Sec: 15164.23005154054
Epoch Step: 550 / 819 Loss: 12.540785789489746 Tokens per Sec: 12753.304597381713
Epoch Step: 555 / 819 Loss: 21.452335357666016 Tokens per Sec: 13434.724703182383
Epoch Step: 560 / 819 Loss: 19.906471252441406 Tokens per Sec: 14062.347942445755
Epoch Step: 565 / 819 Loss: 19.148069381713867 Tokens per Sec: 13749.929665700052
Epoch Step: 570 / 819 Loss: 17.906232833862305 Tokens per Sec: 15206.315368547059
Epoch Step: 575 / 819 Loss: 20.582244873046875 Tokens per Sec: 15633.703831845085
Epoch Step: 580 / 819 Loss: 23.259864807128906 Tokens per Sec: 13313.499720818556
Epoch Step: 585 / 819 Loss: 22.795133590698242 Tokens per Sec: 14244.58935575161
Epoch Step: 590 / 819 Loss: 15.056275367736816 Tokens per Sec: 12736.62716914765
Epoch Step: 595 / 819 Loss: 21.387924194335938 Tokens per Sec: 13759.306885589887
Epoch Step: 600 / 819 Loss: 19.935270309448242 Tokens per Sec: 14771.634243693183
Epoch Step: 605 / 819 Loss: 20.83661460876465 Tokens per Sec: 15539.929705999526
Epoch Step: 610 / 819 Loss: 175.09671020507812 Tokens per Sec: 14279.485609991052
Epoch Step: 615 / 819 Loss: 19.191646575927734 Tokens per Sec: 12549.317110564314
Epoch Step: 620 / 819 Loss: 18.34109878540039 Tokens per Sec: 14784.9852928026
Epoch Step: 625 / 819 Loss: 96.64805603027344 Tokens per Sec: 15794.242029508527
Epoch Step: 630 / 819 Loss: 21.285791397094727 Tokens per Sec: 12801.609193673472
Epoch Step: 635 / 819 Loss: 18.909997940063477 Tokens per Sec: 14954.058121498856
Epoch Step: 640 / 819 Loss: 18.253833770751953 Tokens per Sec: 13562.600059488115
Epoch Step: 645 / 819 Loss: 22.387996673583984 Tokens per Sec: 13027.425279804176
Epoch Step: 650 / 819 Loss: 14.997838020324707 Tokens per Sec: 13878.158447684513
Epoch Step: 655 / 819 Loss: 22.486059188842773 Tokens per Sec: 13831.022738474423
Epoch Step: 660 / 819 Loss: 13.840405464172363 Tokens per Sec: 16758.42789963597
Epoch Step: 665 / 819 Loss: 18.22566032409668 Tokens per Sec: 14350.422918318476
Epoch Step: 670 / 819 Loss: 102.7152328491211 Tokens per Sec: 12415.498570410668
Epoch Step: 675 / 819 Loss: 17.459003448486328 Tokens per Sec: 14941.99687904519
Epoch Step: 680 / 819 Loss: 24.025442123413086 Tokens per Sec: 13525.89126315815
Epoch Step: 685 / 819 Loss: 17.413713455200195 Tokens per Sec: 13103.035345433253
Epoch Step: 690 / 819 Loss: 22.640758514404297 Tokens per Sec: 15135.46201605462
Epoch Step: 695 / 819 Loss: 23.002103805541992 Tokens per Sec: 12118.123116037177
Epoch Step: 700 / 819 Loss: 21.2195987701416 Tokens per Sec: 14095.508789558027
Epoch Step: 705 / 819 Loss: 108.4188232421875 Tokens per Sec: 13972.163864236863
Epoch Step: 710 / 819 Loss: 130.5939483642578 Tokens per Sec: 16159.053282881638
Epoch Step: 715 / 819 Loss: 23.57259178161621 Tokens per Sec: 14869.07840259652
Epoch Step: 720 / 819 Loss: 14.7694730758667 Tokens per Sec: 13371.174856716822
Epoch Step: 725 / 819 Loss: 18.429994583129883 Tokens per Sec: 13525.344515873885
Epoch Step: 730 / 819 Loss: 20.122215270996094 Tokens per Sec: 13326.223394222405
Epoch Step: 735 / 819 Loss: 19.267900466918945 Tokens per Sec: 14944.37976940544
Epoch Step: 740 / 819 Loss: 12.963672637939453 Tokens per Sec: 14566.239104518037
Epoch Step: 745 / 819 Loss: 18.512088775634766 Tokens per Sec: 14227.512178401164
Epoch Step: 750 / 819 Loss: 21.03162956237793 Tokens per Sec: 13224.484076522695
Epoch Step: 755 / 819 Loss: 13.83653450012207 Tokens per Sec: 12819.151387519125
Epoch Step: 760 / 819 Loss: 17.147043228149414 Tokens per Sec: 13515.970497236201
Epoch Step: 765 / 819 Loss: 20.454833984375 Tokens per Sec: 12844.057927892529
Epoch Step: 770 / 819 Loss: 16.214401245117188 Tokens per Sec: 13832.709571106101
Epoch Step: 775 / 819 Loss: 15.299999237060547 Tokens per Sec: 13447.426924060788
Epoch Step: 780 / 819 Loss: 20.379772186279297 Tokens per Sec: 15418.959678222085
Epoch Step: 785 / 819 Loss: 19.913084030151367 Tokens per Sec: 13989.578602221736
Epoch Step: 790 / 819 Loss: 20.025449752807617 Tokens per Sec: 14120.046759519168
Epoch Step: 795 / 819 Loss: 17.27935791015625 Tokens per Sec: 14118.7806139446
Epoch Step: 800 / 819 Loss: 18.814298629760742 Tokens per Sec: 13256.99508596135
Epoch Step: 805 / 819 Loss: 20.538127899169922 Tokens per Sec: 12844.043918960373
Epoch Step: 810 / 819 Loss: 17.429826736450195 Tokens per Sec: 14402.066287742582
Epoch Step: 815 / 819 Loss: 16.735864639282227 Tokens per Sec: 12754.091806775246
Epoch ended with duration 0:04:36.035971
Train perplexity: 1.6683829578023641
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.960027
Validation perplexity: 1.5326207871798956
Epoch 24 / 1000
Epoch Step: 5 / 819 Loss: 22.194774627685547 Tokens per Sec: 14096.142706488548
Epoch Step: 10 / 819 Loss: 17.97690200805664 Tokens per Sec: 13604.725775014276
Epoch Step: 15 / 819 Loss: 21.542036056518555 Tokens per Sec: 14827.191058863076
Epoch Step: 20 / 819 Loss: 21.641342163085938 Tokens per Sec: 15048.355912149877
Epoch Step: 25 / 819 Loss: 16.029499053955078 Tokens per Sec: 14429.947624792967
Epoch Step: 30 / 819 Loss: 20.47217559814453 Tokens per Sec: 14093.492638131062
Epoch Step: 35 / 819 Loss: 15.91491413116455 Tokens per Sec: 12007.532952283238
Epoch Step: 40 / 819 Loss: 17.659154891967773 Tokens per Sec: 16180.917861578086
Epoch Step: 45 / 819 Loss: 14.17415714263916 Tokens per Sec: 14111.990642908255
Epoch Step: 50 / 819 Loss: 20.10768699645996 Tokens per Sec: 12533.82134702146
Epoch Step: 55 / 819 Loss: 17.05560874938965 Tokens per Sec: 14919.903694357288
Epoch Step: 60 / 819 Loss: 212.3861846923828 Tokens per Sec: 14124.352164086553
Epoch Step: 65 / 819 Loss: 22.928852081298828 Tokens per Sec: 12548.962393728383
Epoch Step: 70 / 819 Loss: 18.208072662353516 Tokens per Sec: 15796.7093726112
Epoch Step: 75 / 819 Loss: 14.947460174560547 Tokens per Sec: 13363.654296345501
Epoch Step: 80 / 819 Loss: 160.67584228515625 Tokens per Sec: 14302.058258884563
Epoch Step: 85 / 819 Loss: 15.934910774230957 Tokens per Sec: 14398.142145295707
Epoch Step: 90 / 819 Loss: 16.82795524597168 Tokens per Sec: 13108.221294440154
Epoch Step: 95 / 819 Loss: 21.337692260742188 Tokens per Sec: 14107.036584782216
Epoch Step: 100 / 819 Loss: 17.53615379333496 Tokens per Sec: 13865.26950753425
Epoch Step: 105 / 819 Loss: 25.650535583496094 Tokens per Sec: 13310.701238854843
Epoch Step: 110 / 819 Loss: 20.911577224731445 Tokens per Sec: 14852.833644750343
Epoch Step: 115 / 819 Loss: 20.67033576965332 Tokens per Sec: 12683.896728852
Epoch Step: 120 / 819 Loss: 176.07565307617188 Tokens per Sec: 14689.58464209639
Epoch Step: 125 / 819 Loss: 13.518717765808105 Tokens per Sec: 13119.673703711063
Epoch Step: 130 / 819 Loss: 23.308074951171875 Tokens per Sec: 14900.030849028253
Epoch Step: 135 / 819 Loss: 24.83673858642578 Tokens per Sec: 14799.150519328858
Epoch Step: 140 / 819 Loss: 183.74725341796875 Tokens per Sec: 14744.060218204884
Epoch Step: 145 / 819 Loss: 18.043476104736328 Tokens per Sec: 12289.347265615736
Epoch Step: 150 / 819 Loss: 193.163818359375 Tokens per Sec: 13343.8177227529
Epoch Step: 155 / 819 Loss: 21.22775650024414 Tokens per Sec: 12478.75541121595
Epoch Step: 160 / 819 Loss: 21.41315460205078 Tokens per Sec: 15140.598368237292
Epoch Step: 165 / 819 Loss: 23.10102653503418 Tokens per Sec: 13759.96693788049
Epoch Step: 170 / 819 Loss: 15.842196464538574 Tokens per Sec: 14433.983540898747
Epoch Step: 175 / 819 Loss: 22.905118942260742 Tokens per Sec: 14317.381492056264
Epoch Step: 180 / 819 Loss: 221.4406280517578 Tokens per Sec: 15038.60412007818
Epoch Step: 185 / 819 Loss: 18.018936157226562 Tokens per Sec: 14630.890180274093
Epoch Step: 190 / 819 Loss: 20.515722274780273 Tokens per Sec: 14795.497514436403
Epoch Step: 195 / 819 Loss: 21.586090087890625 Tokens per Sec: 14784.526437236413
Epoch Step: 200 / 819 Loss: 28.878353118896484 Tokens per Sec: 13082.173573748476
Epoch Step: 205 / 819 Loss: 23.18688201904297 Tokens per Sec: 14432.445520513738
Epoch Step: 210 / 819 Loss: 253.5030975341797 Tokens per Sec: 14898.955797741248
Epoch Step: 215 / 819 Loss: 16.9624080657959 Tokens per Sec: 13503.080786235381
Epoch Step: 220 / 819 Loss: 16.49871826171875 Tokens per Sec: 14066.726918693037
Epoch Step: 225 / 819 Loss: 144.61280822753906 Tokens per Sec: 14258.345122435492
Epoch Step: 230 / 819 Loss: 23.982744216918945 Tokens per Sec: 14297.613232303089
Epoch Step: 235 / 819 Loss: 19.246368408203125 Tokens per Sec: 13479.788662667484
Epoch Step: 240 / 819 Loss: 192.326904296875 Tokens per Sec: 13886.552215423577
Epoch Step: 245 / 819 Loss: 22.11855125427246 Tokens per Sec: 17100.810069233263
Epoch Step: 250 / 819 Loss: 24.727514266967773 Tokens per Sec: 14283.90195705048
Epoch Step: 255 / 819 Loss: 24.468557357788086 Tokens per Sec: 12358.973602014987
Epoch Step: 260 / 819 Loss: 16.126855850219727 Tokens per Sec: 15439.569510397625
Epoch Step: 265 / 819 Loss: 19.78304672241211 Tokens per Sec: 14623.196681574329
Epoch Step: 270 / 819 Loss: 17.819229125976562 Tokens per Sec: 13830.76556450517
Epoch Step: 275 / 819 Loss: 26.244449615478516 Tokens per Sec: 13333.16113750088
Epoch Step: 280 / 819 Loss: 15.11506175994873 Tokens per Sec: 14224.074951974455
Epoch Step: 285 / 819 Loss: 22.79863739013672 Tokens per Sec: 14428.118190834683
Epoch Step: 290 / 819 Loss: 19.801612854003906 Tokens per Sec: 15923.418990741495
Epoch Step: 295 / 819 Loss: 20.23714256286621 Tokens per Sec: 13627.329967591426
Epoch Step: 300 / 819 Loss: 15.549847602844238 Tokens per Sec: 14167.108752860086
Epoch Step: 305 / 819 Loss: 24.33816146850586 Tokens per Sec: 15004.92573686106
Epoch Step: 310 / 819 Loss: 17.066442489624023 Tokens per Sec: 14278.844394457148
Epoch Step: 315 / 819 Loss: 12.650215148925781 Tokens per Sec: 13079.006265336435
Epoch Step: 320 / 819 Loss: 21.843971252441406 Tokens per Sec: 13453.092431342062
Epoch Step: 325 / 819 Loss: 19.541057586669922 Tokens per Sec: 13879.778090430407
Epoch Step: 330 / 819 Loss: 137.59930419921875 Tokens per Sec: 14966.828945460358
Epoch Step: 335 / 819 Loss: 23.439260482788086 Tokens per Sec: 13997.089453181788
Epoch Step: 340 / 819 Loss: 22.41219711303711 Tokens per Sec: 13580.236203466893
Epoch Step: 345 / 819 Loss: 135.7635040283203 Tokens per Sec: 14228.141360840016
Epoch Step: 350 / 819 Loss: 20.74844741821289 Tokens per Sec: 13256.952114755408
Epoch Step: 355 / 819 Loss: 14.174433708190918 Tokens per Sec: 13851.879282569005
Epoch Step: 360 / 819 Loss: 14.67137336730957 Tokens per Sec: 14566.7134791047
Epoch Step: 365 / 819 Loss: 14.245920181274414 Tokens per Sec: 13953.581576475088
Epoch Step: 370 / 819 Loss: 16.50432014465332 Tokens per Sec: 14656.569069807161
Epoch Step: 375 / 819 Loss: 17.930761337280273 Tokens per Sec: 13922.862180982544
Epoch Step: 380 / 819 Loss: 18.385208129882812 Tokens per Sec: 13512.404505552982
Epoch Step: 385 / 819 Loss: 29.034809112548828 Tokens per Sec: 13195.552287889446
Epoch Step: 390 / 819 Loss: 23.14532470703125 Tokens per Sec: 14910.528050863271
Epoch Step: 395 / 819 Loss: 21.02846908569336 Tokens per Sec: 13559.518804492423
Epoch Step: 400 / 819 Loss: 24.337974548339844 Tokens per Sec: 12376.399478922705
Epoch Step: 405 / 819 Loss: 18.172029495239258 Tokens per Sec: 13815.795722925452
Epoch Step: 410 / 819 Loss: 21.182281494140625 Tokens per Sec: 15979.771212090769
Epoch Step: 415 / 819 Loss: 13.148656845092773 Tokens per Sec: 13900.127533734483
Epoch Step: 420 / 819 Loss: 188.11709594726562 Tokens per Sec: 14418.946133675794
Epoch Step: 425 / 819 Loss: 200.1807403564453 Tokens per Sec: 13345.11040673358
Epoch Step: 430 / 819 Loss: 155.49517822265625 Tokens per Sec: 12469.633560231552
Epoch Step: 435 / 819 Loss: 21.020597457885742 Tokens per Sec: 14332.26120508464
Epoch Step: 440 / 819 Loss: 19.012325286865234 Tokens per Sec: 13286.731818132115
Epoch Step: 445 / 819 Loss: 24.145633697509766 Tokens per Sec: 13873.937542593729
Epoch Step: 450 / 819 Loss: 17.228099822998047 Tokens per Sec: 13091.085494297504
Epoch Step: 455 / 819 Loss: 22.11478042602539 Tokens per Sec: 12775.31874300014
Epoch Step: 460 / 819 Loss: 17.56876564025879 Tokens per Sec: 14223.38783724468
Epoch Step: 465 / 819 Loss: 16.373403549194336 Tokens per Sec: 15209.949848821228
Epoch Step: 470 / 819 Loss: 16.448291778564453 Tokens per Sec: 14649.24092225001
Epoch Step: 475 / 819 Loss: 15.988754272460938 Tokens per Sec: 14777.524230622761
Epoch Step: 480 / 819 Loss: 22.051645278930664 Tokens per Sec: 14293.270069142334
Epoch Step: 485 / 819 Loss: 19.98877716064453 Tokens per Sec: 15196.020288641286
Epoch Step: 490 / 819 Loss: 19.128921508789062 Tokens per Sec: 13608.524664981333
Epoch Step: 495 / 819 Loss: 18.118635177612305 Tokens per Sec: 13113.994588463998
Epoch Step: 500 / 819 Loss: 21.254383087158203 Tokens per Sec: 13784.658151787175
Epoch Step: 505 / 819 Loss: 15.42844009399414 Tokens per Sec: 14909.8487134065
Epoch Step: 510 / 819 Loss: 18.842815399169922 Tokens per Sec: 14087.625440034863
Epoch Step: 515 / 819 Loss: 228.2351531982422 Tokens per Sec: 14069.90700785385
Epoch Step: 520 / 819 Loss: 145.0081329345703 Tokens per Sec: 13330.808284992787
Epoch Step: 525 / 819 Loss: 19.202659606933594 Tokens per Sec: 14457.348439967394
Epoch Step: 530 / 819 Loss: 15.101204872131348 Tokens per Sec: 12442.578372961361
Epoch Step: 535 / 819 Loss: 18.15837860107422 Tokens per Sec: 13068.70080786782
Epoch Step: 540 / 819 Loss: 22.87334632873535 Tokens per Sec: 13357.681423731477
Epoch Step: 545 / 819 Loss: 20.225082397460938 Tokens per Sec: 13553.105961934592
Epoch Step: 550 / 819 Loss: 13.727914810180664 Tokens per Sec: 13827.51221805089
Epoch Step: 555 / 819 Loss: 258.7625427246094 Tokens per Sec: 13847.390078668512
Epoch Step: 560 / 819 Loss: 19.992551803588867 Tokens per Sec: 13786.481903112264
Epoch Step: 565 / 819 Loss: 22.62135124206543 Tokens per Sec: 14425.209385173634
Epoch Step: 570 / 819 Loss: 15.136631965637207 Tokens per Sec: 13307.924403131441
Epoch Step: 575 / 819 Loss: 20.567279815673828 Tokens per Sec: 13926.344876234536
Epoch Step: 580 / 819 Loss: 20.05216407775879 Tokens per Sec: 14180.670473620881
Epoch Step: 585 / 819 Loss: 24.50847053527832 Tokens per Sec: 14013.37283626218
Epoch Step: 590 / 819 Loss: 19.88656997680664 Tokens per Sec: 12252.898797023123
Epoch Step: 595 / 819 Loss: 14.882262229919434 Tokens per Sec: 12285.073435194587
Epoch Step: 600 / 819 Loss: 14.424323081970215 Tokens per Sec: 14700.444839236565
Epoch Step: 605 / 819 Loss: 15.250862121582031 Tokens per Sec: 13553.592688294966
Epoch Step: 610 / 819 Loss: 21.809534072875977 Tokens per Sec: 14330.324402127959
Epoch Step: 615 / 819 Loss: 19.743732452392578 Tokens per Sec: 14487.484791563757
Epoch Step: 620 / 819 Loss: 20.337356567382812 Tokens per Sec: 13516.738281799557
Epoch Step: 625 / 819 Loss: 16.94922637939453 Tokens per Sec: 14663.676692922072
Epoch Step: 630 / 819 Loss: 17.722257614135742 Tokens per Sec: 13525.992119882438
Epoch Step: 635 / 819 Loss: 15.181889533996582 Tokens per Sec: 12684.660823671222
Epoch Step: 640 / 819 Loss: 18.859830856323242 Tokens per Sec: 14496.621550773574
Epoch Step: 645 / 819 Loss: 19.184574127197266 Tokens per Sec: 14940.980014436404
Epoch Step: 650 / 819 Loss: 17.619064331054688 Tokens per Sec: 12804.281454473168
Epoch Step: 655 / 819 Loss: 21.806180953979492 Tokens per Sec: 14674.524387995165
Epoch Step: 660 / 819 Loss: 18.332677841186523 Tokens per Sec: 14256.16644663135
Epoch Step: 665 / 819 Loss: 15.90826416015625 Tokens per Sec: 13387.791316014354
Epoch Step: 670 / 819 Loss: 237.95205688476562 Tokens per Sec: 14484.941547505909
Epoch Step: 675 / 819 Loss: 19.532331466674805 Tokens per Sec: 12752.343760793658
Epoch Step: 680 / 819 Loss: 12.015758514404297 Tokens per Sec: 13494.090536689746
Epoch Step: 685 / 819 Loss: 19.645008087158203 Tokens per Sec: 14937.959754297437
Epoch Step: 690 / 819 Loss: 15.763672828674316 Tokens per Sec: 14499.522477144232
Epoch Step: 695 / 819 Loss: 13.225831985473633 Tokens per Sec: 13967.97647555335
Epoch Step: 700 / 819 Loss: 22.54912567138672 Tokens per Sec: 15986.278864276428
Epoch Step: 705 / 819 Loss: 15.540106773376465 Tokens per Sec: 12716.736102643103
Epoch Step: 710 / 819 Loss: 15.449599266052246 Tokens per Sec: 15296.45424226522
Epoch Step: 715 / 819 Loss: 20.71164894104004 Tokens per Sec: 15424.670706466059
Epoch Step: 720 / 819 Loss: 18.718799591064453 Tokens per Sec: 13679.151837982532
Epoch Step: 725 / 819 Loss: 16.747848510742188 Tokens per Sec: 14415.221250577377
Epoch Step: 730 / 819 Loss: 16.30402374267578 Tokens per Sec: 13948.033419959173
Epoch Step: 735 / 819 Loss: 23.39098358154297 Tokens per Sec: 14628.977863964483
Epoch Step: 740 / 819 Loss: 24.17467498779297 Tokens per Sec: 12925.6174949329
Epoch Step: 745 / 819 Loss: 21.493511199951172 Tokens per Sec: 13428.629232328101
Epoch Step: 750 / 819 Loss: 18.09095573425293 Tokens per Sec: 14462.375562233823
Epoch Step: 755 / 819 Loss: 16.596431732177734 Tokens per Sec: 13278.275585459729
Epoch Step: 760 / 819 Loss: 18.92299461364746 Tokens per Sec: 16657.211198081295
Epoch Step: 765 / 819 Loss: 16.823007583618164 Tokens per Sec: 15519.535900882865
Epoch Step: 770 / 819 Loss: 113.97756958007812 Tokens per Sec: 14000.517152748902
Epoch Step: 775 / 819 Loss: 21.428997039794922 Tokens per Sec: 14395.749091120077
Epoch Step: 780 / 819 Loss: 18.05860137939453 Tokens per Sec: 12154.64686545282
Epoch Step: 785 / 819 Loss: 162.69041442871094 Tokens per Sec: 14077.184430789215
Epoch Step: 790 / 819 Loss: 17.824939727783203 Tokens per Sec: 14905.653813753906
Epoch Step: 795 / 819 Loss: 23.484785079956055 Tokens per Sec: 13132.78083440323
Epoch Step: 800 / 819 Loss: 16.773544311523438 Tokens per Sec: 13358.089914737166
Epoch Step: 805 / 819 Loss: 17.530624389648438 Tokens per Sec: 10302.803070296175
Epoch Step: 810 / 819 Loss: 18.10902976989746 Tokens per Sec: 14014.073565392784
Epoch Step: 815 / 819 Loss: 19.2620849609375 Tokens per Sec: 13099.60977006593
Epoch ended with duration 0:04:37.749562
Train perplexity: 1.6338921427345223
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.367823
Validation perplexity: 1.7395589827643423
Epoch 25 / 1000
Epoch Step: 5 / 819 Loss: 14.471576690673828 Tokens per Sec: 15373.909428668177
Epoch Step: 10 / 819 Loss: 19.023056030273438 Tokens per Sec: 15366.629268160275
Epoch Step: 15 / 819 Loss: 21.024106979370117 Tokens per Sec: 12594.955414628877
Epoch Step: 20 / 819 Loss: 13.643631935119629 Tokens per Sec: 14972.238711120903
Epoch Step: 25 / 819 Loss: 19.312559127807617 Tokens per Sec: 14169.580084373787
Epoch Step: 30 / 819 Loss: 14.142443656921387 Tokens per Sec: 14675.884674092356
Epoch Step: 35 / 819 Loss: 20.790369033813477 Tokens per Sec: 14139.925224979848
Epoch Step: 40 / 819 Loss: 17.723684310913086 Tokens per Sec: 16086.640663763776
Epoch Step: 45 / 819 Loss: 22.478391647338867 Tokens per Sec: 14134.551040700308
Epoch Step: 50 / 819 Loss: 17.959047317504883 Tokens per Sec: 14498.23300509056
Epoch Step: 55 / 819 Loss: 15.098353385925293 Tokens per Sec: 14759.483588921727
Epoch Step: 60 / 819 Loss: 19.408905029296875 Tokens per Sec: 15093.83502989449
Epoch Step: 65 / 819 Loss: 22.26091957092285 Tokens per Sec: 14968.70576771001
Epoch Step: 70 / 819 Loss: 14.838420867919922 Tokens per Sec: 15681.620110401456
Epoch Step: 75 / 819 Loss: 154.1238250732422 Tokens per Sec: 13543.06700939215
Epoch Step: 80 / 819 Loss: 19.409820556640625 Tokens per Sec: 14622.027667990316
Epoch Step: 85 / 819 Loss: 18.855087280273438 Tokens per Sec: 13583.72256227176
Epoch Step: 90 / 819 Loss: 17.525033950805664 Tokens per Sec: 14377.315912717024
Epoch Step: 95 / 819 Loss: 14.73338794708252 Tokens per Sec: 12028.953408963138
Epoch Step: 100 / 819 Loss: 16.26062774658203 Tokens per Sec: 13827.85575290818
Epoch Step: 105 / 819 Loss: 226.76889038085938 Tokens per Sec: 14297.106868404968
Epoch Step: 110 / 819 Loss: 17.831951141357422 Tokens per Sec: 13805.874177572954
Epoch Step: 115 / 819 Loss: 16.361656188964844 Tokens per Sec: 14584.229922880306
Epoch Step: 120 / 819 Loss: 130.46197509765625 Tokens per Sec: 16234.640814331795
Epoch Step: 125 / 819 Loss: 20.489578247070312 Tokens per Sec: 14044.349726729706
Epoch Step: 130 / 819 Loss: 20.105093002319336 Tokens per Sec: 13377.584093610934
Epoch Step: 135 / 819 Loss: 19.918161392211914 Tokens per Sec: 14691.95021807845
Epoch Step: 140 / 819 Loss: 18.902687072753906 Tokens per Sec: 13431.279500993667
Epoch Step: 145 / 819 Loss: 17.589231491088867 Tokens per Sec: 14655.253074354865
Epoch Step: 150 / 819 Loss: 18.6719970703125 Tokens per Sec: 15428.00761064329
Epoch Step: 155 / 819 Loss: 93.66210174560547 Tokens per Sec: 13593.496460014372
Epoch Step: 160 / 819 Loss: 23.158681869506836 Tokens per Sec: 14439.171217078774
Epoch Step: 165 / 819 Loss: 19.251680374145508 Tokens per Sec: 14060.945252991547
Epoch Step: 170 / 819 Loss: 164.99903869628906 Tokens per Sec: 13178.82737996117
Epoch Step: 175 / 819 Loss: 17.389760971069336 Tokens per Sec: 15038.810812044097
Epoch Step: 180 / 819 Loss: 23.5869140625 Tokens per Sec: 13591.570523056314
Epoch Step: 185 / 819 Loss: 16.116289138793945 Tokens per Sec: 14446.137283343001
Epoch Step: 190 / 819 Loss: 17.528453826904297 Tokens per Sec: 14694.241860835142
Epoch Step: 195 / 819 Loss: 23.278850555419922 Tokens per Sec: 14024.083254338371
Epoch Step: 200 / 819 Loss: 13.349821090698242 Tokens per Sec: 12533.261816912722
Epoch Step: 205 / 819 Loss: 168.04901123046875 Tokens per Sec: 13317.563293382218
Epoch Step: 210 / 819 Loss: 20.589290618896484 Tokens per Sec: 14373.432062098273
Epoch Step: 215 / 819 Loss: 27.086822509765625 Tokens per Sec: 15032.050976118619
Epoch Step: 220 / 819 Loss: 27.685945510864258 Tokens per Sec: 14141.418841009348
Epoch Step: 225 / 819 Loss: 18.169992446899414 Tokens per Sec: 13595.403540524254
Epoch Step: 230 / 819 Loss: 266.4646301269531 Tokens per Sec: 13643.120192745018
Epoch Step: 235 / 819 Loss: 16.772541046142578 Tokens per Sec: 14388.398005929239
Epoch Step: 240 / 819 Loss: 26.128400802612305 Tokens per Sec: 12943.124202557576
Epoch Step: 245 / 819 Loss: 21.497440338134766 Tokens per Sec: 13218.63923512744
Epoch Step: 250 / 819 Loss: 117.11154174804688 Tokens per Sec: 14122.386178911294
Epoch Step: 255 / 819 Loss: 20.308988571166992 Tokens per Sec: 16045.348366032576
Epoch Step: 260 / 819 Loss: 22.783851623535156 Tokens per Sec: 14193.209984003832
Epoch Step: 265 / 819 Loss: 21.271806716918945 Tokens per Sec: 14103.081296575263
Epoch Step: 270 / 819 Loss: 14.73345947265625 Tokens per Sec: 13174.425827287023
Epoch Step: 275 / 819 Loss: 16.69390296936035 Tokens per Sec: 12270.174573063232
Epoch Step: 280 / 819 Loss: 21.179828643798828 Tokens per Sec: 16556.19692898836
Epoch Step: 285 / 819 Loss: 20.376220703125 Tokens per Sec: 13174.424769507274
Epoch Step: 290 / 819 Loss: 20.63309669494629 Tokens per Sec: 14457.140903125046
Epoch Step: 295 / 819 Loss: 16.501556396484375 Tokens per Sec: 14568.726919980318
Epoch Step: 300 / 819 Loss: 228.54710388183594 Tokens per Sec: 14781.303332466588
Epoch Step: 305 / 819 Loss: 15.316636085510254 Tokens per Sec: 13269.482834135126
Epoch Step: 310 / 819 Loss: 16.38467025756836 Tokens per Sec: 14118.626784231566
Epoch Step: 315 / 819 Loss: 15.775274276733398 Tokens per Sec: 14251.943352457774
Epoch Step: 320 / 819 Loss: 19.332332611083984 Tokens per Sec: 14715.46006075239
Epoch Step: 325 / 819 Loss: 19.02519416809082 Tokens per Sec: 17045.169592187944
Epoch Step: 330 / 819 Loss: 18.846527099609375 Tokens per Sec: 14837.165040759015
Epoch Step: 335 / 819 Loss: 264.06103515625 Tokens per Sec: 14865.179350085938
Epoch Step: 340 / 819 Loss: 17.683374404907227 Tokens per Sec: 14200.21974858086
Epoch Step: 345 / 819 Loss: 18.348590850830078 Tokens per Sec: 13971.609848012222
Epoch Step: 350 / 819 Loss: 15.930848121643066 Tokens per Sec: 13173.797986049656
Epoch Step: 355 / 819 Loss: 23.024518966674805 Tokens per Sec: 15073.472889292518
Epoch Step: 360 / 819 Loss: 21.432689666748047 Tokens per Sec: 12193.023266460026
Epoch Step: 365 / 819 Loss: 21.09241485595703 Tokens per Sec: 14349.62442478756
Epoch Step: 370 / 819 Loss: 16.94085121154785 Tokens per Sec: 14541.977301248988
Epoch Step: 375 / 819 Loss: 15.240862846374512 Tokens per Sec: 14582.603599278158
Epoch Step: 380 / 819 Loss: 16.675941467285156 Tokens per Sec: 14156.776112707132
Epoch Step: 385 / 819 Loss: 19.775833129882812 Tokens per Sec: 13777.795756051235
Epoch Step: 390 / 819 Loss: 18.655614852905273 Tokens per Sec: 14651.28694170037
Epoch Step: 395 / 819 Loss: 18.76557159423828 Tokens per Sec: 15881.565410136825
Epoch Step: 400 / 819 Loss: 221.01548767089844 Tokens per Sec: 16390.635697371486
Epoch Step: 405 / 819 Loss: 13.577741622924805 Tokens per Sec: 13476.656486462953
Epoch Step: 410 / 819 Loss: 14.485618591308594 Tokens per Sec: 13101.647103656991
Epoch Step: 415 / 819 Loss: 15.220328330993652 Tokens per Sec: 12942.708472447948
Epoch Step: 420 / 819 Loss: 17.999507904052734 Tokens per Sec: 13737.586338340057
Epoch Step: 425 / 819 Loss: 14.765547752380371 Tokens per Sec: 13103.372222234708
Epoch Step: 430 / 819 Loss: 20.740673065185547 Tokens per Sec: 14892.416617430117
Epoch Step: 435 / 819 Loss: 18.35706901550293 Tokens per Sec: 17001.016370694946
Epoch Step: 440 / 819 Loss: 18.47905731201172 Tokens per Sec: 14275.4150034328
Epoch Step: 445 / 819 Loss: 21.0819034576416 Tokens per Sec: 14152.153946541703
Epoch Step: 450 / 819 Loss: 23.55820655822754 Tokens per Sec: 13177.556271350233
Epoch Step: 455 / 819 Loss: 228.29832458496094 Tokens per Sec: 14874.599233628063
Epoch Step: 460 / 819 Loss: 19.96109962463379 Tokens per Sec: 13107.462409158206
Epoch Step: 465 / 819 Loss: 14.257452011108398 Tokens per Sec: 14840.41694611604
Epoch Step: 470 / 819 Loss: 19.819557189941406 Tokens per Sec: 13577.506107485127
Epoch Step: 475 / 819 Loss: 19.303321838378906 Tokens per Sec: 13549.85880127905
Epoch Step: 480 / 819 Loss: 14.887861251831055 Tokens per Sec: 14731.038283027336
Epoch Step: 485 / 819 Loss: 17.440889358520508 Tokens per Sec: 13967.734848199629
Epoch Step: 490 / 819 Loss: 20.942899703979492 Tokens per Sec: 13360.555411178228
Epoch Step: 495 / 819 Loss: 21.64457130432129 Tokens per Sec: 14464.648697194236
Epoch Step: 500 / 819 Loss: 22.608354568481445 Tokens per Sec: 12289.856140254835
Epoch Step: 505 / 819 Loss: 21.33863639831543 Tokens per Sec: 15343.36092600721
Epoch Step: 510 / 819 Loss: 161.8043212890625 Tokens per Sec: 12948.409531697689
Epoch Step: 515 / 819 Loss: 18.9420108795166 Tokens per Sec: 14236.307491160034
Epoch Step: 520 / 819 Loss: 14.40545654296875 Tokens per Sec: 13010.146238850944
Epoch Step: 525 / 819 Loss: 18.07764434814453 Tokens per Sec: 14734.840542336577
Epoch Step: 530 / 819 Loss: 21.869815826416016 Tokens per Sec: 14123.814292121886
Epoch Step: 535 / 819 Loss: 16.013044357299805 Tokens per Sec: 13635.933180900003
Epoch Step: 540 / 819 Loss: 18.59456443786621 Tokens per Sec: 14294.472074170819
Epoch Step: 545 / 819 Loss: 13.616291046142578 Tokens per Sec: 15115.256623492261
Epoch Step: 550 / 819 Loss: 22.03744888305664 Tokens per Sec: 15323.451237261124
Epoch Step: 555 / 819 Loss: 16.413211822509766 Tokens per Sec: 15679.136952901974
Epoch Step: 560 / 819 Loss: 13.618659973144531 Tokens per Sec: 15996.675480766444
Epoch Step: 565 / 819 Loss: 22.451416015625 Tokens per Sec: 13603.169241073776
Epoch Step: 570 / 819 Loss: 22.573810577392578 Tokens per Sec: 14136.63252436513
Epoch Step: 575 / 819 Loss: 22.12440299987793 Tokens per Sec: 15302.256772117464
Epoch Step: 580 / 819 Loss: 22.320049285888672 Tokens per Sec: 14703.7002207738
Epoch Step: 585 / 819 Loss: 21.934471130371094 Tokens per Sec: 12276.07666779184
Epoch Step: 590 / 819 Loss: 16.990846633911133 Tokens per Sec: 12269.445692758673
Epoch Step: 595 / 819 Loss: 20.903072357177734 Tokens per Sec: 13524.54743519007
Epoch Step: 600 / 819 Loss: 20.02277183532715 Tokens per Sec: 12811.047557971095
Epoch Step: 605 / 819 Loss: 24.901634216308594 Tokens per Sec: 14312.670075697852
Epoch Step: 610 / 819 Loss: 16.437759399414062 Tokens per Sec: 14762.274127701972
Epoch Step: 615 / 819 Loss: 24.448694229125977 Tokens per Sec: 13900.232041730142
Epoch Step: 620 / 819 Loss: 22.044164657592773 Tokens per Sec: 13828.364507461612
Epoch Step: 625 / 819 Loss: 25.098087310791016 Tokens per Sec: 13009.669862014029
Epoch Step: 630 / 819 Loss: 20.129146575927734 Tokens per Sec: 14919.371995382973
Epoch Step: 635 / 819 Loss: 18.714174270629883 Tokens per Sec: 13876.390580109586
Epoch Step: 640 / 819 Loss: 17.203266143798828 Tokens per Sec: 13715.672672285791
Epoch Step: 645 / 819 Loss: 17.20119857788086 Tokens per Sec: 16833.68711306229
Epoch Step: 650 / 819 Loss: 132.6773223876953 Tokens per Sec: 13931.444992788385
Epoch Step: 655 / 819 Loss: 20.226648330688477 Tokens per Sec: 14251.14313100336
Epoch Step: 660 / 819 Loss: 183.8694610595703 Tokens per Sec: 13738.582070948629
Epoch Step: 665 / 819 Loss: 19.50389289855957 Tokens per Sec: 13399.31773078837
Epoch Step: 670 / 819 Loss: 15.833406448364258 Tokens per Sec: 14342.514622057532
Epoch Step: 675 / 819 Loss: 18.766881942749023 Tokens per Sec: 14683.797622667524
Epoch Step: 680 / 819 Loss: 20.38027572631836 Tokens per Sec: 14989.60737520808
Epoch Step: 685 / 819 Loss: 18.088804244995117 Tokens per Sec: 15723.926082521626
Epoch Step: 690 / 819 Loss: 17.371902465820312 Tokens per Sec: 12260.529199132088
Epoch Step: 695 / 819 Loss: 16.410114288330078 Tokens per Sec: 13356.752063637528
Epoch Step: 700 / 819 Loss: 132.67276000976562 Tokens per Sec: 13503.953036817407
Epoch Step: 705 / 819 Loss: 17.453981399536133 Tokens per Sec: 13928.066586442372
Epoch Step: 710 / 819 Loss: 13.467080116271973 Tokens per Sec: 13903.783288756858
Epoch Step: 715 / 819 Loss: 17.692569732666016 Tokens per Sec: 15481.035191994806
Epoch Step: 720 / 819 Loss: 15.520660400390625 Tokens per Sec: 14606.2255187551
Epoch Step: 725 / 819 Loss: 22.631757736206055 Tokens per Sec: 13498.235029824238
Epoch Step: 730 / 819 Loss: 12.632068634033203 Tokens per Sec: 13121.529269096663
Epoch Step: 735 / 819 Loss: 20.219266891479492 Tokens per Sec: 13363.546848560321
Epoch Step: 740 / 819 Loss: 24.14197540283203 Tokens per Sec: 12985.257608183578
Epoch Step: 745 / 819 Loss: 98.11247253417969 Tokens per Sec: 12874.908701116401
Epoch Step: 750 / 819 Loss: 18.1817569732666 Tokens per Sec: 13377.033266515915
Epoch Step: 755 / 819 Loss: 17.940383911132812 Tokens per Sec: 15258.459975444137
Epoch Step: 760 / 819 Loss: 19.240793228149414 Tokens per Sec: 13967.189093504141
Epoch Step: 765 / 819 Loss: 24.314180374145508 Tokens per Sec: 13079.098128402928
Epoch Step: 770 / 819 Loss: 18.651103973388672 Tokens per Sec: 14475.888213826067
Epoch Step: 775 / 819 Loss: 13.967805862426758 Tokens per Sec: 14325.758558472891
Epoch Step: 780 / 819 Loss: 14.51223087310791 Tokens per Sec: 14870.914495065135
Epoch Step: 785 / 819 Loss: 17.661237716674805 Tokens per Sec: 14458.117938977693
Epoch Step: 790 / 819 Loss: 20.829761505126953 Tokens per Sec: 14523.975914967015
Epoch Step: 795 / 819 Loss: 166.8104705810547 Tokens per Sec: 12685.198165437785
Epoch Step: 800 / 819 Loss: 15.763385772705078 Tokens per Sec: 14610.804613934217
Epoch Step: 805 / 819 Loss: 16.535099029541016 Tokens per Sec: 13986.831404766379
Epoch Step: 810 / 819 Loss: 132.4454803466797 Tokens per Sec: 12775.362169183227
Epoch Step: 815 / 819 Loss: 18.897296905517578 Tokens per Sec: 11813.314664807598
Epoch ended with duration 0:04:35.092456
Train perplexity: 1.5941118943385173
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.268369
Validation perplexity: 1.6800289649959042
Model saved checkpoint!
Epoch 26 / 1000
Epoch Step: 5 / 819 Loss: 16.062036514282227 Tokens per Sec: 13551.899432152131
Epoch Step: 10 / 819 Loss: 144.01434326171875 Tokens per Sec: 13234.077155149935
Epoch Step: 15 / 819 Loss: 190.91787719726562 Tokens per Sec: 13910.772595945073
Epoch Step: 20 / 819 Loss: 21.949350357055664 Tokens per Sec: 14107.356183061693
Epoch Step: 25 / 819 Loss: 20.96084976196289 Tokens per Sec: 14703.41760928442
Epoch Step: 30 / 819 Loss: 18.815481185913086 Tokens per Sec: 12913.410211170196
Epoch Step: 35 / 819 Loss: 20.193620681762695 Tokens per Sec: 13530.330656238502
Epoch Step: 40 / 819 Loss: 15.27950668334961 Tokens per Sec: 12942.751882149796
Epoch Step: 45 / 819 Loss: 19.452136993408203 Tokens per Sec: 15605.716714189022
Epoch Step: 50 / 819 Loss: 19.497488021850586 Tokens per Sec: 13648.469764096702
Epoch Step: 55 / 819 Loss: 14.528619766235352 Tokens per Sec: 14919.836666350095
Epoch Step: 60 / 819 Loss: 14.167224884033203 Tokens per Sec: 16368.699334672054
Epoch Step: 65 / 819 Loss: 22.112613677978516 Tokens per Sec: 13667.320253706883
Epoch Step: 70 / 819 Loss: 15.88017749786377 Tokens per Sec: 15980.721796318438
Epoch Step: 75 / 819 Loss: 20.194095611572266 Tokens per Sec: 13412.455588898072
Epoch Step: 80 / 819 Loss: 14.52664566040039 Tokens per Sec: 15038.181949434034
Epoch Step: 85 / 819 Loss: 17.527524948120117 Tokens per Sec: 14044.208989408427
Epoch Step: 90 / 819 Loss: 18.7783203125 Tokens per Sec: 13109.478766624323
Epoch Step: 95 / 819 Loss: 16.07950210571289 Tokens per Sec: 13421.14267145557
Epoch Step: 100 / 819 Loss: 19.564722061157227 Tokens per Sec: 12343.36005756291
Epoch Step: 105 / 819 Loss: 224.60665893554688 Tokens per Sec: 12871.573416874395
Epoch Step: 110 / 819 Loss: 18.77872657775879 Tokens per Sec: 13821.52855944555
Epoch Step: 115 / 819 Loss: 14.785768508911133 Tokens per Sec: 13470.06553197972
Epoch Step: 120 / 819 Loss: 19.845190048217773 Tokens per Sec: 13350.471593259357
Epoch Step: 125 / 819 Loss: 23.915748596191406 Tokens per Sec: 13209.37066522503
Epoch Step: 130 / 819 Loss: 13.5531644821167 Tokens per Sec: 12768.233624811826
Epoch Step: 135 / 819 Loss: 21.920318603515625 Tokens per Sec: 14794.550842540306
Epoch Step: 140 / 819 Loss: 17.702791213989258 Tokens per Sec: 14340.595167262523
Epoch Step: 145 / 819 Loss: 15.570409774780273 Tokens per Sec: 13163.409897942814
Epoch Step: 150 / 819 Loss: 17.361804962158203 Tokens per Sec: 12538.239614290114
Epoch Step: 155 / 819 Loss: 20.508081436157227 Tokens per Sec: 14274.519622334685
Epoch Step: 160 / 819 Loss: 17.76824951171875 Tokens per Sec: 15421.612839424988
Epoch Step: 165 / 819 Loss: 181.36868286132812 Tokens per Sec: 14035.94615220895
Epoch Step: 170 / 819 Loss: 23.842674255371094 Tokens per Sec: 14253.200442082447
Epoch Step: 175 / 819 Loss: 20.41286849975586 Tokens per Sec: 14594.83768128496
Epoch Step: 180 / 819 Loss: 249.09902954101562 Tokens per Sec: 14037.529171692917
Epoch Step: 185 / 819 Loss: 16.439315795898438 Tokens per Sec: 13777.531323099674
Epoch Step: 190 / 819 Loss: 128.67318725585938 Tokens per Sec: 13881.255858331075
Epoch Step: 195 / 819 Loss: 18.193979263305664 Tokens per Sec: 13922.490653820534
Epoch Step: 200 / 819 Loss: 22.624698638916016 Tokens per Sec: 15351.150762570847
Epoch Step: 205 / 819 Loss: 21.88444709777832 Tokens per Sec: 15258.14924335442
Epoch Step: 210 / 819 Loss: 17.94414520263672 Tokens per Sec: 15236.452910605089
Epoch Step: 215 / 819 Loss: 16.523799896240234 Tokens per Sec: 14031.379152734009
Epoch Step: 220 / 819 Loss: 25.28506851196289 Tokens per Sec: 12828.96418340569
Epoch Step: 225 / 819 Loss: 14.507165908813477 Tokens per Sec: 13616.285802076996
Epoch Step: 230 / 819 Loss: 18.84249496459961 Tokens per Sec: 12864.249036884485
Epoch Step: 235 / 819 Loss: 16.423748016357422 Tokens per Sec: 13093.379398270223
Epoch Step: 240 / 819 Loss: 22.0543155670166 Tokens per Sec: 13965.261678565159
Epoch Step: 245 / 819 Loss: 20.02977180480957 Tokens per Sec: 13217.95158339288
Epoch Step: 250 / 819 Loss: 14.996806144714355 Tokens per Sec: 14769.144812954313
Epoch Step: 255 / 819 Loss: 11.033479690551758 Tokens per Sec: 13995.375200891853
Epoch Step: 260 / 819 Loss: 14.680845260620117 Tokens per Sec: 14398.22396131212
Epoch Step: 265 / 819 Loss: 18.496139526367188 Tokens per Sec: 14012.535000378251
Epoch Step: 270 / 819 Loss: 13.864447593688965 Tokens per Sec: 13344.775421491342
Epoch Step: 275 / 819 Loss: 20.065805435180664 Tokens per Sec: 16492.80474614837
Epoch Step: 280 / 819 Loss: 217.430419921875 Tokens per Sec: 16489.433924139597
Epoch Step: 285 / 819 Loss: 198.13638305664062 Tokens per Sec: 13600.806867561201
Epoch Step: 290 / 819 Loss: 21.842544555664062 Tokens per Sec: 15532.325155132052
Epoch Step: 295 / 819 Loss: 24.450786590576172 Tokens per Sec: 14435.683990709116
Epoch Step: 300 / 819 Loss: 19.608633041381836 Tokens per Sec: 13602.78896613011
Epoch Step: 305 / 819 Loss: 21.585866928100586 Tokens per Sec: 16650.625437609677
Epoch Step: 310 / 819 Loss: 16.115800857543945 Tokens per Sec: 12659.878326266726
Epoch Step: 315 / 819 Loss: 19.536897659301758 Tokens per Sec: 13408.221288289353
Epoch Step: 320 / 819 Loss: 14.59642219543457 Tokens per Sec: 12966.417092997055
Epoch Step: 325 / 819 Loss: 18.65850067138672 Tokens per Sec: 12796.207889692743
Epoch Step: 330 / 819 Loss: 19.653345108032227 Tokens per Sec: 14259.006924394782
Epoch Step: 335 / 819 Loss: 24.673999786376953 Tokens per Sec: 14242.561916218245
Epoch Step: 340 / 819 Loss: 14.84554386138916 Tokens per Sec: 12874.224890102752
Epoch Step: 345 / 819 Loss: 23.5697078704834 Tokens per Sec: 14524.237422476273
Epoch Step: 350 / 819 Loss: 17.348352432250977 Tokens per Sec: 14785.341824976653
Epoch Step: 355 / 819 Loss: 18.069992065429688 Tokens per Sec: 16451.170951455897
Epoch Step: 360 / 819 Loss: 13.406317710876465 Tokens per Sec: 13238.811817290773
Epoch Step: 365 / 819 Loss: 19.22008514404297 Tokens per Sec: 14249.20484643905
Epoch Step: 370 / 819 Loss: 14.5592679977417 Tokens per Sec: 12877.637980745867
Epoch Step: 375 / 819 Loss: 17.238855361938477 Tokens per Sec: 12901.764911192426
Epoch Step: 380 / 819 Loss: 16.66161346435547 Tokens per Sec: 14065.526727340657
Epoch Step: 385 / 819 Loss: 227.5711669921875 Tokens per Sec: 13178.695122092657
Epoch Step: 390 / 819 Loss: 20.139812469482422 Tokens per Sec: 14077.131411842396
Epoch Step: 395 / 819 Loss: 27.295495986938477 Tokens per Sec: 14558.590028428333
Epoch Step: 400 / 819 Loss: 22.248104095458984 Tokens per Sec: 14860.962333139425
Epoch Step: 405 / 819 Loss: 195.69076538085938 Tokens per Sec: 15214.58613638272
Epoch Step: 410 / 819 Loss: 21.90288543701172 Tokens per Sec: 13613.998938409444
Epoch Step: 415 / 819 Loss: 18.513090133666992 Tokens per Sec: 13488.570737658789
Epoch Step: 420 / 819 Loss: 17.31462287902832 Tokens per Sec: 14131.958128698594
Epoch Step: 425 / 819 Loss: 17.729856491088867 Tokens per Sec: 13292.661076808386
Epoch Step: 430 / 819 Loss: 14.189617156982422 Tokens per Sec: 12865.47891722132
Epoch Step: 435 / 819 Loss: 13.422712326049805 Tokens per Sec: 12991.680134104372
Epoch Step: 440 / 819 Loss: 14.107348442077637 Tokens per Sec: 14437.712597417481
Epoch Step: 445 / 819 Loss: 197.6056671142578 Tokens per Sec: 13249.21396587933
Epoch Step: 450 / 819 Loss: 236.53529357910156 Tokens per Sec: 12605.185752765621
Epoch Step: 455 / 819 Loss: 19.92497444152832 Tokens per Sec: 14573.899096692438
Epoch Step: 460 / 819 Loss: 247.11358642578125 Tokens per Sec: 16629.73240124115
Epoch Step: 465 / 819 Loss: 15.607982635498047 Tokens per Sec: 14064.635672419212
Epoch Step: 470 / 819 Loss: 14.190300941467285 Tokens per Sec: 13808.352838107903
Epoch Step: 475 / 819 Loss: 150.9160919189453 Tokens per Sec: 14976.179316106674
Epoch Step: 480 / 819 Loss: 13.285478591918945 Tokens per Sec: 14403.077660806057
Epoch Step: 485 / 819 Loss: 21.736452102661133 Tokens per Sec: 12681.238824970576
Epoch Step: 490 / 819 Loss: 174.2036895751953 Tokens per Sec: 12422.03745270514
Epoch Step: 495 / 819 Loss: 21.659107208251953 Tokens per Sec: 13101.812646963814
Epoch Step: 500 / 819 Loss: 17.44995880126953 Tokens per Sec: 15791.683247109975
Epoch Step: 505 / 819 Loss: 15.696127891540527 Tokens per Sec: 15223.824679528974
Epoch Step: 510 / 819 Loss: 22.208032608032227 Tokens per Sec: 14847.753240886866
Epoch Step: 515 / 819 Loss: 23.651765823364258 Tokens per Sec: 12646.938149772415
Epoch Step: 520 / 819 Loss: 15.95695972442627 Tokens per Sec: 15495.828211427035
Epoch Step: 525 / 819 Loss: 17.33913803100586 Tokens per Sec: 13034.517911655523
Epoch Step: 530 / 819 Loss: 14.695324897766113 Tokens per Sec: 13736.499782865212
Epoch Step: 535 / 819 Loss: 18.77488136291504 Tokens per Sec: 14044.110872062169
Epoch Step: 540 / 819 Loss: 16.46553611755371 Tokens per Sec: 15350.469932082171
Epoch Step: 545 / 819 Loss: 22.506624221801758 Tokens per Sec: 14472.399964934692
Epoch Step: 550 / 819 Loss: 14.266816139221191 Tokens per Sec: 12690.144423668875
Epoch Step: 555 / 819 Loss: 12.276826858520508 Tokens per Sec: 13522.976255045052
Epoch Step: 560 / 819 Loss: 20.601884841918945 Tokens per Sec: 13645.27887140682
Epoch Step: 565 / 819 Loss: 26.997249603271484 Tokens per Sec: 13406.78056209897
Epoch Step: 570 / 819 Loss: 20.461563110351562 Tokens per Sec: 16880.666945445504
Epoch Step: 575 / 819 Loss: 22.452899932861328 Tokens per Sec: 14297.587790721893
Epoch Step: 580 / 819 Loss: 17.240928649902344 Tokens per Sec: 14987.398922441047
Epoch Step: 585 / 819 Loss: 14.404233932495117 Tokens per Sec: 14194.898062125689
Epoch Step: 590 / 819 Loss: 16.46558380126953 Tokens per Sec: 16479.266561010896
Epoch Step: 595 / 819 Loss: 21.840011596679688 Tokens per Sec: 14139.627417877557
Epoch Step: 600 / 819 Loss: 16.317617416381836 Tokens per Sec: 13468.043139713978
Epoch Step: 605 / 819 Loss: 19.61365509033203 Tokens per Sec: 14553.271602423885
Epoch Step: 610 / 819 Loss: 23.634708404541016 Tokens per Sec: 12951.996442998608
Epoch Step: 615 / 819 Loss: 222.93873596191406 Tokens per Sec: 13014.33065301693
Epoch Step: 620 / 819 Loss: 20.160329818725586 Tokens per Sec: 14300.596573988716
Epoch Step: 625 / 819 Loss: 25.003803253173828 Tokens per Sec: 13973.664991380034
Epoch Step: 630 / 819 Loss: 24.351770401000977 Tokens per Sec: 14752.443713298278
Epoch Step: 635 / 819 Loss: 24.96243667602539 Tokens per Sec: 14125.71812970831
Epoch Step: 640 / 819 Loss: 20.607545852661133 Tokens per Sec: 12761.156040612937
Epoch Step: 645 / 819 Loss: 21.854995727539062 Tokens per Sec: 12787.548196994174
Epoch Step: 650 / 819 Loss: 18.290124893188477 Tokens per Sec: 13903.860232920219
Epoch Step: 655 / 819 Loss: 21.44485855102539 Tokens per Sec: 13312.814681701198
Epoch Step: 660 / 819 Loss: 20.794204711914062 Tokens per Sec: 12272.597695893879
Epoch Step: 665 / 819 Loss: 25.193531036376953 Tokens per Sec: 14781.207105174315
Epoch Step: 670 / 819 Loss: 181.3869171142578 Tokens per Sec: 13810.34085834352
Epoch Step: 675 / 819 Loss: 18.867393493652344 Tokens per Sec: 15159.210536638353
Epoch Step: 680 / 819 Loss: 185.4992218017578 Tokens per Sec: 16327.526881479818
Epoch Step: 685 / 819 Loss: 18.79182243347168 Tokens per Sec: 13839.586115635355
Epoch Step: 690 / 819 Loss: 23.477388381958008 Tokens per Sec: 12857.912134214948
Epoch Step: 695 / 819 Loss: 14.14589786529541 Tokens per Sec: 14397.455148325556
Epoch Step: 700 / 819 Loss: 192.05947875976562 Tokens per Sec: 14547.38130805011
Epoch Step: 705 / 819 Loss: 19.388147354125977 Tokens per Sec: 13366.201305217035
Epoch Step: 710 / 819 Loss: 147.09153747558594 Tokens per Sec: 12640.754747103194
Epoch Step: 715 / 819 Loss: 28.603229522705078 Tokens per Sec: 14189.931549330375
Epoch Step: 720 / 819 Loss: 112.67643737792969 Tokens per Sec: 13028.924372352963
Epoch Step: 725 / 819 Loss: 25.474733352661133 Tokens per Sec: 15634.877921690922
Epoch Step: 730 / 819 Loss: 25.58070945739746 Tokens per Sec: 15966.356784031199
Epoch Step: 735 / 819 Loss: 22.892202377319336 Tokens per Sec: 12605.50596015961
Epoch Step: 740 / 819 Loss: 22.181135177612305 Tokens per Sec: 13087.294106530073
Epoch Step: 745 / 819 Loss: 25.337011337280273 Tokens per Sec: 14646.723626562887
Epoch Step: 750 / 819 Loss: 21.985252380371094 Tokens per Sec: 14751.868654311967
Epoch Step: 755 / 819 Loss: 14.633699417114258 Tokens per Sec: 14236.934215472062
Epoch Step: 760 / 819 Loss: 18.589553833007812 Tokens per Sec: 13473.673100576509
Epoch Step: 765 / 819 Loss: 20.984046936035156 Tokens per Sec: 15824.382556097726
Epoch Step: 770 / 819 Loss: 24.836198806762695 Tokens per Sec: 13550.363595647284
Epoch Step: 775 / 819 Loss: 21.630983352661133 Tokens per Sec: 13082.741415671104
Epoch Step: 780 / 819 Loss: 17.331892013549805 Tokens per Sec: 15555.615364549096
Epoch Step: 785 / 819 Loss: 19.627958297729492 Tokens per Sec: 13925.015211686079
Epoch Step: 790 / 819 Loss: 19.787139892578125 Tokens per Sec: 13698.670037646947
Epoch Step: 795 / 819 Loss: 20.968055725097656 Tokens per Sec: 15176.33201307519
Epoch Step: 800 / 819 Loss: 18.352420806884766 Tokens per Sec: 13996.667349877534
Epoch Step: 805 / 819 Loss: 17.189973831176758 Tokens per Sec: 13519.083102283212
Epoch Step: 810 / 819 Loss: 18.325254440307617 Tokens per Sec: 13180.657110901077
Epoch Step: 815 / 819 Loss: 18.758895874023438 Tokens per Sec: 14177.871898191559
Epoch ended with duration 0:04:37.582064
Train perplexity: 1.6838776859920124
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.378302
Validation perplexity: 1.670164274497958
Epoch 27 / 1000
Epoch Step: 5 / 819 Loss: 21.02682876586914 Tokens per Sec: 12743.203288804983
Epoch Step: 10 / 819 Loss: 15.911528587341309 Tokens per Sec: 13401.831766547639
Epoch Step: 15 / 819 Loss: 117.36478424072266 Tokens per Sec: 14392.737550324591
Epoch Step: 20 / 819 Loss: 26.61297607421875 Tokens per Sec: 15856.107416740359
Epoch Step: 25 / 819 Loss: 23.451995849609375 Tokens per Sec: 11954.48492025687
Epoch Step: 30 / 819 Loss: 20.867488861083984 Tokens per Sec: 15987.923008241882
Epoch Step: 35 / 819 Loss: 19.7377986907959 Tokens per Sec: 13178.027710121909
Epoch Step: 40 / 819 Loss: 13.366283416748047 Tokens per Sec: 14319.42732442542
Epoch Step: 45 / 819 Loss: 22.666852951049805 Tokens per Sec: 13827.932048262026
Epoch Step: 50 / 819 Loss: 21.330575942993164 Tokens per Sec: 14839.210816981757
Epoch Step: 55 / 819 Loss: 14.80478572845459 Tokens per Sec: 13462.804369554795
Epoch Step: 60 / 819 Loss: 14.253998756408691 Tokens per Sec: 14251.345674623792
Epoch Step: 65 / 819 Loss: 22.08772850036621 Tokens per Sec: 14367.561011385056
Epoch Step: 70 / 819 Loss: 17.971332550048828 Tokens per Sec: 14322.131964860957
Epoch Step: 75 / 819 Loss: 221.69741821289062 Tokens per Sec: 14266.215024677515
Epoch Step: 80 / 819 Loss: 222.4550323486328 Tokens per Sec: 13145.906152493628
Epoch Step: 85 / 819 Loss: 19.941736221313477 Tokens per Sec: 13642.223662687253
Epoch Step: 90 / 819 Loss: 203.56112670898438 Tokens per Sec: 14192.385156162954
Epoch Step: 95 / 819 Loss: 15.439410209655762 Tokens per Sec: 13244.104422492364
Epoch Step: 100 / 819 Loss: 17.985023498535156 Tokens per Sec: 13608.787019249858
Epoch Step: 105 / 819 Loss: 241.81622314453125 Tokens per Sec: 13031.621554482566
Epoch Step: 110 / 819 Loss: 248.50338745117188 Tokens per Sec: 14701.692953418615
Epoch Step: 115 / 819 Loss: 23.953323364257812 Tokens per Sec: 14466.63864864979
Epoch Step: 120 / 819 Loss: 21.986736297607422 Tokens per Sec: 13598.251227852943
Epoch Step: 125 / 819 Loss: 20.26662826538086 Tokens per Sec: 14150.604807294896
Epoch Step: 130 / 819 Loss: 19.242387771606445 Tokens per Sec: 13931.613935397727
Epoch Step: 135 / 819 Loss: 148.63467407226562 Tokens per Sec: 13844.127979603456
Epoch Step: 140 / 819 Loss: 21.93893051147461 Tokens per Sec: 14315.554411573943
Epoch Step: 145 / 819 Loss: 17.210540771484375 Tokens per Sec: 14328.01667742446
Epoch Step: 150 / 819 Loss: 22.821514129638672 Tokens per Sec: 12697.007234258059
Epoch Step: 155 / 819 Loss: 19.363147735595703 Tokens per Sec: 14508.56611955861
Epoch Step: 160 / 819 Loss: 22.540470123291016 Tokens per Sec: 14136.985825818994
Epoch Step: 165 / 819 Loss: 17.850080490112305 Tokens per Sec: 12621.595714587207
Epoch Step: 170 / 819 Loss: 14.10497760772705 Tokens per Sec: 13803.270050487905
Epoch Step: 175 / 819 Loss: 21.190792083740234 Tokens per Sec: 14344.391651752861
Epoch Step: 180 / 819 Loss: 19.814563751220703 Tokens per Sec: 16111.954158198716
Epoch Step: 185 / 819 Loss: 14.001814842224121 Tokens per Sec: 14194.34078221483
Epoch Step: 190 / 819 Loss: 20.600130081176758 Tokens per Sec: 14778.395779385366
Epoch Step: 195 / 819 Loss: 17.78192138671875 Tokens per Sec: 14807.627297027608
Epoch Step: 200 / 819 Loss: 20.059497833251953 Tokens per Sec: 14017.201156708323
Epoch Step: 205 / 819 Loss: 14.677370071411133 Tokens per Sec: 13716.347099047765
Epoch Step: 210 / 819 Loss: 281.24346923828125 Tokens per Sec: 14088.054834362863
Epoch Step: 215 / 819 Loss: 21.17257308959961 Tokens per Sec: 14297.819317302563
Epoch Step: 220 / 819 Loss: 100.8263168334961 Tokens per Sec: 13902.406002856425
Epoch Step: 225 / 819 Loss: 16.334091186523438 Tokens per Sec: 13470.057247679917
Epoch Step: 230 / 819 Loss: 17.447105407714844 Tokens per Sec: 14947.69350744575
Epoch Step: 235 / 819 Loss: 23.516578674316406 Tokens per Sec: 14878.564381279502
Epoch Step: 240 / 819 Loss: 15.256288528442383 Tokens per Sec: 15225.631467257033
Epoch Step: 245 / 819 Loss: 251.94598388671875 Tokens per Sec: 12994.985302762603
Epoch Step: 250 / 819 Loss: 24.780315399169922 Tokens per Sec: 13936.04939293839
Epoch Step: 255 / 819 Loss: 21.81027603149414 Tokens per Sec: 13812.654613012208
Epoch Step: 260 / 819 Loss: 18.21528434753418 Tokens per Sec: 12807.141478024105
Epoch Step: 265 / 819 Loss: 15.33350944519043 Tokens per Sec: 14369.561147215782
Epoch Step: 270 / 819 Loss: 19.531766891479492 Tokens per Sec: 16376.057616719308
Epoch Step: 275 / 819 Loss: 14.54273509979248 Tokens per Sec: 12440.48210091038
Epoch Step: 280 / 819 Loss: 203.8303985595703 Tokens per Sec: 15429.200571215762
Epoch Step: 285 / 819 Loss: 14.65817642211914 Tokens per Sec: 13446.28805022417
Epoch Step: 290 / 819 Loss: 21.38467025756836 Tokens per Sec: 12656.303966760177
Epoch Step: 295 / 819 Loss: 19.60443687438965 Tokens per Sec: 12738.39900700091
Epoch Step: 300 / 819 Loss: 22.087621688842773 Tokens per Sec: 13709.151934546237
Epoch Step: 305 / 819 Loss: 22.813318252563477 Tokens per Sec: 14167.346599680674
Epoch Step: 310 / 819 Loss: 175.54281616210938 Tokens per Sec: 12821.330288993775
Epoch Step: 315 / 819 Loss: 214.9103240966797 Tokens per Sec: 13979.249424325619
Epoch Step: 320 / 819 Loss: 259.0323486328125 Tokens per Sec: 15480.14346474028
Epoch Step: 325 / 819 Loss: 19.39657974243164 Tokens per Sec: 13943.592410071424
Epoch Step: 330 / 819 Loss: 24.592370986938477 Tokens per Sec: 13854.964059332306
Epoch Step: 335 / 819 Loss: 23.04459571838379 Tokens per Sec: 14423.666009619885
Epoch Step: 340 / 819 Loss: 19.90097427368164 Tokens per Sec: 14174.31638611097
Epoch Step: 345 / 819 Loss: 173.31732177734375 Tokens per Sec: 12827.590847725842
Epoch Step: 350 / 819 Loss: 174.475341796875 Tokens per Sec: 14728.758712511592
Epoch Step: 355 / 819 Loss: 21.159652709960938 Tokens per Sec: 16113.340315649857
Epoch Step: 360 / 819 Loss: 18.78530502319336 Tokens per Sec: 14102.747824682745
Epoch Step: 365 / 819 Loss: 14.253952026367188 Tokens per Sec: 15934.276760420382
Epoch Step: 370 / 819 Loss: 18.234111785888672 Tokens per Sec: 13349.21234900696
Epoch Step: 375 / 819 Loss: 21.241287231445312 Tokens per Sec: 14367.488438777478
Epoch Step: 380 / 819 Loss: 20.972793579101562 Tokens per Sec: 13216.385768965403
Epoch Step: 385 / 819 Loss: 14.547769546508789 Tokens per Sec: 13032.478413633326
Epoch Step: 390 / 819 Loss: 23.21397590637207 Tokens per Sec: 13815.888523224285
Epoch Step: 395 / 819 Loss: 18.8265380859375 Tokens per Sec: 12481.424458304014
Epoch Step: 400 / 819 Loss: 21.62471580505371 Tokens per Sec: 14194.824443657983
Epoch Step: 405 / 819 Loss: 174.44427490234375 Tokens per Sec: 13780.342626066562
Epoch Step: 410 / 819 Loss: 20.358144760131836 Tokens per Sec: 12827.102769787203
Epoch Step: 415 / 819 Loss: 221.01840209960938 Tokens per Sec: 14179.483401561114
Epoch Step: 420 / 819 Loss: 17.22799301147461 Tokens per Sec: 15271.563643499894
Epoch Step: 425 / 819 Loss: 19.869781494140625 Tokens per Sec: 14721.158455046167
Epoch Step: 430 / 819 Loss: 16.8106689453125 Tokens per Sec: 13206.195545336872
Epoch Step: 435 / 819 Loss: 19.681312561035156 Tokens per Sec: 13980.662007560602
Epoch Step: 440 / 819 Loss: 17.154430389404297 Tokens per Sec: 13149.28201536689
Epoch Step: 445 / 819 Loss: 17.195817947387695 Tokens per Sec: 13381.97001738419
Epoch Step: 450 / 819 Loss: 17.344778060913086 Tokens per Sec: 12861.964023502973
Epoch Step: 455 / 819 Loss: 18.69609832763672 Tokens per Sec: 12638.63844405183
Epoch Step: 460 / 819 Loss: 12.473698616027832 Tokens per Sec: 14783.897899602247
Epoch Step: 465 / 819 Loss: 18.099573135375977 Tokens per Sec: 15593.6750973587
Epoch Step: 470 / 819 Loss: 12.248632431030273 Tokens per Sec: 16064.082192648815
Epoch Step: 475 / 819 Loss: 18.070297241210938 Tokens per Sec: 12556.45617838996
Epoch Step: 480 / 819 Loss: 18.125368118286133 Tokens per Sec: 13814.813397129186
Epoch Step: 485 / 819 Loss: 16.5801944732666 Tokens per Sec: 13789.149491187294
Epoch Step: 490 / 819 Loss: 17.869449615478516 Tokens per Sec: 15301.76036100456
Epoch Step: 495 / 819 Loss: 214.48794555664062 Tokens per Sec: 13279.357163879149
Epoch Step: 500 / 819 Loss: 16.392988204956055 Tokens per Sec: 12732.601936549681
Epoch Step: 505 / 819 Loss: 15.896615982055664 Tokens per Sec: 12896.206269713648
Epoch Step: 510 / 819 Loss: 16.352937698364258 Tokens per Sec: 14272.165346379687
Epoch Step: 515 / 819 Loss: 16.760906219482422 Tokens per Sec: 15429.46986966638
Epoch Step: 520 / 819 Loss: 15.662510871887207 Tokens per Sec: 13617.199989383185
Epoch Step: 525 / 819 Loss: 23.883834838867188 Tokens per Sec: 14696.914150418885
Epoch Step: 530 / 819 Loss: 24.0849609375 Tokens per Sec: 12979.762849899895
Epoch Step: 535 / 819 Loss: 17.353553771972656 Tokens per Sec: 13396.700180248043
Epoch Step: 540 / 819 Loss: 16.344560623168945 Tokens per Sec: 12662.582856002904
Epoch Step: 545 / 819 Loss: 20.88858985900879 Tokens per Sec: 12527.695112130483
Epoch Step: 550 / 819 Loss: 17.901105880737305 Tokens per Sec: 13309.225225954362
Epoch Step: 555 / 819 Loss: 19.025432586669922 Tokens per Sec: 14707.598162593367
Epoch Step: 560 / 819 Loss: 18.709205627441406 Tokens per Sec: 11762.096614937222
Epoch Step: 565 / 819 Loss: 21.953346252441406 Tokens per Sec: 14388.343383137522
Epoch Step: 570 / 819 Loss: 24.297700881958008 Tokens per Sec: 13468.150162943604
Epoch Step: 575 / 819 Loss: 21.613849639892578 Tokens per Sec: 15409.863380231829
Epoch Step: 580 / 819 Loss: 20.47307777404785 Tokens per Sec: 14065.12245143896
Epoch Step: 585 / 819 Loss: 16.793977737426758 Tokens per Sec: 12940.841941438362
Epoch Step: 590 / 819 Loss: 16.307987213134766 Tokens per Sec: 15823.80798464881
Epoch Step: 595 / 819 Loss: 16.486032485961914 Tokens per Sec: 13909.135357325196
Epoch Step: 600 / 819 Loss: 16.983396530151367 Tokens per Sec: 14690.291926232887
Epoch Step: 605 / 819 Loss: 23.03510093688965 Tokens per Sec: 14174.381843574105
Epoch Step: 610 / 819 Loss: 22.455684661865234 Tokens per Sec: 13216.375524157027
Epoch Step: 615 / 819 Loss: 16.652849197387695 Tokens per Sec: 13615.036248147948
Epoch Step: 620 / 819 Loss: 25.7279109954834 Tokens per Sec: 13673.589815734687
Epoch Step: 625 / 819 Loss: 17.70754623413086 Tokens per Sec: 15250.750039409115
Epoch Step: 630 / 819 Loss: 188.22967529296875 Tokens per Sec: 13583.062379751758
Epoch Step: 635 / 819 Loss: 18.57526397705078 Tokens per Sec: 12394.918105334551
Epoch Step: 640 / 819 Loss: 15.624555587768555 Tokens per Sec: 13332.970116399785
Epoch Step: 645 / 819 Loss: 24.2351016998291 Tokens per Sec: 14446.94190655743
Epoch Step: 650 / 819 Loss: 24.683486938476562 Tokens per Sec: 14576.328114105898
Epoch Step: 655 / 819 Loss: 21.728906631469727 Tokens per Sec: 13101.118597766954
Epoch Step: 660 / 819 Loss: 16.010643005371094 Tokens per Sec: 14997.77005123669
Epoch Step: 665 / 819 Loss: 21.69272232055664 Tokens per Sec: 14253.072305698599
Epoch Step: 670 / 819 Loss: 14.56545639038086 Tokens per Sec: 12851.573592392988
Epoch Step: 675 / 819 Loss: 17.594825744628906 Tokens per Sec: 16179.364599588607
Epoch Step: 680 / 819 Loss: 14.90843677520752 Tokens per Sec: 13663.182459390508
Epoch Step: 685 / 819 Loss: 18.946229934692383 Tokens per Sec: 13966.054509399886
Epoch Step: 690 / 819 Loss: 17.563720703125 Tokens per Sec: 14365.742709218976
Epoch Step: 695 / 819 Loss: 16.96031379699707 Tokens per Sec: 12894.849065392715
Epoch Step: 700 / 819 Loss: 19.251054763793945 Tokens per Sec: 13087.424761283934
Epoch Step: 705 / 819 Loss: 15.770259857177734 Tokens per Sec: 13710.915979272624
Epoch Step: 710 / 819 Loss: 11.985488891601562 Tokens per Sec: 15206.599910054827
Epoch Step: 715 / 819 Loss: 18.251516342163086 Tokens per Sec: 14646.562252790947
Epoch Step: 720 / 819 Loss: 16.1446590423584 Tokens per Sec: 14371.71244290709
Epoch Step: 725 / 819 Loss: 239.31259155273438 Tokens per Sec: 12542.715517218621
Epoch Step: 730 / 819 Loss: 15.515631675720215 Tokens per Sec: 15885.309234269615
Epoch Step: 735 / 819 Loss: 19.352903366088867 Tokens per Sec: 13273.651161143436
Epoch Step: 740 / 819 Loss: 26.254446029663086 Tokens per Sec: 13865.722320095425
Epoch Step: 745 / 819 Loss: 17.263824462890625 Tokens per Sec: 13469.763632056945
Epoch Step: 750 / 819 Loss: 18.747329711914062 Tokens per Sec: 15323.428276701312
Epoch Step: 755 / 819 Loss: 19.402172088623047 Tokens per Sec: 13949.272286333444
Epoch Step: 760 / 819 Loss: 14.245098114013672 Tokens per Sec: 15517.265346418668
Epoch Step: 765 / 819 Loss: 269.79736328125 Tokens per Sec: 11814.476536078593
Epoch Step: 770 / 819 Loss: 16.565004348754883 Tokens per Sec: 14307.557742950821
Epoch Step: 775 / 819 Loss: 22.642303466796875 Tokens per Sec: 14500.937487184277
Epoch Step: 780 / 819 Loss: 20.826650619506836 Tokens per Sec: 13345.282650683275
Epoch Step: 785 / 819 Loss: 16.604570388793945 Tokens per Sec: 14920.96627522812
Epoch Step: 790 / 819 Loss: 22.666948318481445 Tokens per Sec: 13342.645052882992
Epoch Step: 795 / 819 Loss: 15.73190975189209 Tokens per Sec: 14177.777515544753
Epoch Step: 800 / 819 Loss: 17.30814552307129 Tokens per Sec: 14485.851988591654
Epoch Step: 805 / 819 Loss: 14.223586082458496 Tokens per Sec: 11746.189824576006
Epoch Step: 810 / 819 Loss: 140.2005615234375 Tokens per Sec: 12769.775565436696
Epoch Step: 815 / 819 Loss: 18.532907485961914 Tokens per Sec: 12933.732233956522
Epoch ended with duration 0:04:39.021936
Train perplexity: 1.6709928682188222
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.671574
Validation perplexity: 1.5589152112436153
Epoch 28 / 1000
Epoch Step: 5 / 819 Loss: 17.138864517211914 Tokens per Sec: 13406.247994716
Epoch Step: 10 / 819 Loss: 17.89308738708496 Tokens per Sec: 14196.56948013664
Epoch Step: 15 / 819 Loss: 18.6036434173584 Tokens per Sec: 12256.325082975141
Epoch Step: 20 / 819 Loss: 13.19627857208252 Tokens per Sec: 13440.634701053195
Epoch Step: 25 / 819 Loss: 16.774499893188477 Tokens per Sec: 14435.85056560348
Epoch Step: 30 / 819 Loss: 20.94809913635254 Tokens per Sec: 13661.115455481593
Epoch Step: 35 / 819 Loss: 20.56230354309082 Tokens per Sec: 12602.366979770804
Epoch Step: 40 / 819 Loss: 18.096698760986328 Tokens per Sec: 17069.821092869846
Epoch Step: 45 / 819 Loss: 15.727006912231445 Tokens per Sec: 15129.330193371195
Epoch Step: 50 / 819 Loss: 17.188419342041016 Tokens per Sec: 14789.865315877913
Epoch Step: 55 / 819 Loss: 20.85866928100586 Tokens per Sec: 12911.29388672976
Epoch Step: 60 / 819 Loss: 18.62308120727539 Tokens per Sec: 15495.152924245831
Epoch Step: 65 / 819 Loss: 18.430591583251953 Tokens per Sec: 14239.172601690458
Epoch Step: 70 / 819 Loss: 20.09829330444336 Tokens per Sec: 14325.783860318063
Epoch Step: 75 / 819 Loss: 177.89288330078125 Tokens per Sec: 12887.24382060014
Epoch Step: 80 / 819 Loss: 11.69214153289795 Tokens per Sec: 14205.291961362283
Epoch Step: 85 / 819 Loss: 14.486078262329102 Tokens per Sec: 14591.955614584487
Epoch Step: 90 / 819 Loss: 15.74344253540039 Tokens per Sec: 13181.857820255547
Epoch Step: 95 / 819 Loss: 12.74278736114502 Tokens per Sec: 13940.918385182582
Epoch Step: 100 / 819 Loss: 15.896749496459961 Tokens per Sec: 15988.052467609325
Epoch Step: 105 / 819 Loss: 24.69900894165039 Tokens per Sec: 15833.602924944937
Epoch Step: 110 / 819 Loss: 17.46402931213379 Tokens per Sec: 14625.967423348655
Epoch Step: 115 / 819 Loss: 18.33504867553711 Tokens per Sec: 14588.530122675835
Epoch Step: 120 / 819 Loss: 19.489620208740234 Tokens per Sec: 13534.185689497273
Epoch Step: 125 / 819 Loss: 24.662139892578125 Tokens per Sec: 14054.748271014265
Epoch Step: 130 / 819 Loss: 17.79732894897461 Tokens per Sec: 15225.437295358513
Epoch Step: 135 / 819 Loss: 17.61435890197754 Tokens per Sec: 12421.509054487204
Epoch Step: 140 / 819 Loss: 14.656915664672852 Tokens per Sec: 15344.083097295814
Epoch Step: 145 / 819 Loss: 21.846590042114258 Tokens per Sec: 15886.51271212075
Epoch Step: 150 / 819 Loss: 16.470813751220703 Tokens per Sec: 14345.39925425717
Epoch Step: 155 / 819 Loss: 173.9300994873047 Tokens per Sec: 13516.351059367746
Epoch Step: 160 / 819 Loss: 25.496047973632812 Tokens per Sec: 14290.549495261532
Epoch Step: 165 / 819 Loss: 18.7332820892334 Tokens per Sec: 14939.599746913194
Epoch Step: 170 / 819 Loss: 22.522140502929688 Tokens per Sec: 13967.521100306176
Epoch Step: 175 / 819 Loss: 14.52901554107666 Tokens per Sec: 12430.64230944574
Epoch Step: 180 / 819 Loss: 21.182519912719727 Tokens per Sec: 14056.626803515694
Epoch Step: 185 / 819 Loss: 16.819921493530273 Tokens per Sec: 15018.154179180623
Epoch Step: 190 / 819 Loss: 16.007707595825195 Tokens per Sec: 14101.977157007566
Epoch Step: 195 / 819 Loss: 21.99150848388672 Tokens per Sec: 13636.465731908846
Epoch Step: 200 / 819 Loss: 16.074398040771484 Tokens per Sec: 14200.043674537133
Epoch Step: 205 / 819 Loss: 21.086143493652344 Tokens per Sec: 15012.85119762129
Epoch Step: 210 / 819 Loss: 13.821629524230957 Tokens per Sec: 13159.979433675831
Epoch Step: 215 / 819 Loss: 162.08273315429688 Tokens per Sec: 16295.35615046596
Epoch Step: 220 / 819 Loss: 17.958816528320312 Tokens per Sec: 13629.712221563515
Epoch Step: 225 / 819 Loss: 23.093034744262695 Tokens per Sec: 16003.235240399988
Epoch Step: 230 / 819 Loss: 18.02075958251953 Tokens per Sec: 13552.097917382693
Epoch Step: 235 / 819 Loss: 17.80122184753418 Tokens per Sec: 14662.603897862056
Epoch Step: 240 / 819 Loss: 15.311781883239746 Tokens per Sec: 13749.586202221732
Epoch Step: 245 / 819 Loss: 15.9298734664917 Tokens per Sec: 13518.3995897817
Epoch Step: 250 / 819 Loss: 18.18239402770996 Tokens per Sec: 13314.971991385812
Epoch Step: 255 / 819 Loss: 20.58098793029785 Tokens per Sec: 13094.868382471457
Epoch Step: 260 / 819 Loss: 19.334184646606445 Tokens per Sec: 13799.181779986055
Epoch Step: 265 / 819 Loss: 23.966007232666016 Tokens per Sec: 14678.419092798655
Epoch Step: 270 / 819 Loss: 18.85610580444336 Tokens per Sec: 14209.890779486113
Epoch Step: 275 / 819 Loss: 230.1580810546875 Tokens per Sec: 12818.191541747243
Epoch Step: 280 / 819 Loss: 19.507665634155273 Tokens per Sec: 13822.966339771185
Epoch Step: 285 / 819 Loss: 18.815080642700195 Tokens per Sec: 13500.857304945957
Epoch Step: 290 / 819 Loss: 17.91424560546875 Tokens per Sec: 14273.038582710755
Epoch Step: 295 / 819 Loss: 16.006580352783203 Tokens per Sec: 12785.377511308068
Epoch Step: 300 / 819 Loss: 161.90765380859375 Tokens per Sec: 14957.842348148984
Epoch Step: 305 / 819 Loss: 21.101276397705078 Tokens per Sec: 14136.946092695462
Epoch Step: 310 / 819 Loss: 24.492246627807617 Tokens per Sec: 14307.824714167135
Epoch Step: 315 / 819 Loss: 19.286083221435547 Tokens per Sec: 15182.626050120778
Epoch Step: 320 / 819 Loss: 18.191814422607422 Tokens per Sec: 14351.946364921601
Epoch Step: 325 / 819 Loss: 22.571340560913086 Tokens per Sec: 13100.559101932524
Epoch Step: 330 / 819 Loss: 17.42608642578125 Tokens per Sec: 14560.221751967758
Epoch Step: 335 / 819 Loss: 15.992319107055664 Tokens per Sec: 12769.20574471102
Epoch Step: 340 / 819 Loss: 17.15876007080078 Tokens per Sec: 15706.590818012884
Epoch Step: 345 / 819 Loss: 24.821144104003906 Tokens per Sec: 13930.569744822888
Epoch Step: 350 / 819 Loss: 17.973264694213867 Tokens per Sec: 14325.575867940563
Epoch Step: 355 / 819 Loss: 21.130704879760742 Tokens per Sec: 14047.949167369432
Epoch Step: 360 / 819 Loss: 15.958950996398926 Tokens per Sec: 13492.03759399578
Epoch Step: 365 / 819 Loss: 20.257783889770508 Tokens per Sec: 12839.98259796018
Epoch Step: 370 / 819 Loss: 18.711851119995117 Tokens per Sec: 16143.351272848657
Epoch Step: 375 / 819 Loss: 18.73590087890625 Tokens per Sec: 13548.255285213052
Epoch Step: 380 / 819 Loss: 19.714927673339844 Tokens per Sec: 14024.412295526978
Epoch Step: 385 / 819 Loss: 15.283498764038086 Tokens per Sec: 16131.460527560454
Epoch Step: 390 / 819 Loss: 16.593393325805664 Tokens per Sec: 15002.924723246435
Epoch Step: 395 / 819 Loss: 21.72320556640625 Tokens per Sec: 16338.36661733844
Epoch Step: 400 / 819 Loss: 19.9378719329834 Tokens per Sec: 13144.48377995414
Epoch Step: 405 / 819 Loss: 17.9016170501709 Tokens per Sec: 13008.235577330666
Epoch Step: 410 / 819 Loss: 18.922773361206055 Tokens per Sec: 15798.120031536711
Epoch Step: 415 / 819 Loss: 204.65281677246094 Tokens per Sec: 15178.171692280868
Epoch Step: 420 / 819 Loss: 17.528751373291016 Tokens per Sec: 15218.380468195897
Epoch Step: 425 / 819 Loss: 23.082717895507812 Tokens per Sec: 14029.829136012404
Epoch Step: 430 / 819 Loss: 19.181791305541992 Tokens per Sec: 12518.688369325695
Epoch Step: 435 / 819 Loss: 18.33106231689453 Tokens per Sec: 13063.013607017636
Epoch Step: 440 / 819 Loss: 13.94034194946289 Tokens per Sec: 14028.815001182036
Epoch Step: 445 / 819 Loss: 16.8917236328125 Tokens per Sec: 15549.821036598261
Epoch Step: 450 / 819 Loss: 174.013427734375 Tokens per Sec: 13711.548025642105
Epoch Step: 455 / 819 Loss: 22.577648162841797 Tokens per Sec: 12589.211068862653
Epoch Step: 460 / 819 Loss: 21.652555465698242 Tokens per Sec: 13025.29792930068
Epoch Step: 465 / 819 Loss: 19.04088592529297 Tokens per Sec: 13547.997341022316
Epoch Step: 470 / 819 Loss: 18.667200088500977 Tokens per Sec: 15230.890442046479
Epoch Step: 475 / 819 Loss: 14.74573802947998 Tokens per Sec: 14457.367057474401
Epoch Step: 480 / 819 Loss: 20.744609832763672 Tokens per Sec: 13880.467973685807
Epoch Step: 485 / 819 Loss: 18.29425811767578 Tokens per Sec: 12738.054101970723
Epoch Step: 490 / 819 Loss: 13.606886863708496 Tokens per Sec: 14031.479259731972
Epoch Step: 495 / 819 Loss: 15.918851852416992 Tokens per Sec: 12424.787453037838
Epoch Step: 500 / 819 Loss: 24.56342887878418 Tokens per Sec: 16110.110380787266
Epoch Step: 505 / 819 Loss: 18.90652847290039 Tokens per Sec: 13378.371234168177
Epoch Step: 510 / 819 Loss: 20.52448844909668 Tokens per Sec: 15150.49693999624
Epoch Step: 515 / 819 Loss: 21.72207260131836 Tokens per Sec: 15588.965701456294
Epoch Step: 520 / 819 Loss: 17.887554168701172 Tokens per Sec: 13813.68036801582
Epoch Step: 525 / 819 Loss: 15.773635864257812 Tokens per Sec: 15227.275248451237
Epoch Step: 530 / 819 Loss: 20.69438362121582 Tokens per Sec: 13828.579162403077
Epoch Step: 535 / 819 Loss: 13.657779693603516 Tokens per Sec: 15219.854593398057
Epoch Step: 540 / 819 Loss: 18.050491333007812 Tokens per Sec: 14116.332668803521
Epoch Step: 545 / 819 Loss: 18.558364868164062 Tokens per Sec: 13082.335964072707
Epoch Step: 550 / 819 Loss: 13.577963829040527 Tokens per Sec: 12487.99333545681
Epoch Step: 555 / 819 Loss: 12.543937683105469 Tokens per Sec: 13943.055667884057
Epoch Step: 560 / 819 Loss: 15.005342483520508 Tokens per Sec: 14986.216949607757
Epoch Step: 565 / 819 Loss: 14.944703102111816 Tokens per Sec: 14788.72886677983
Epoch Step: 570 / 819 Loss: 16.53850555419922 Tokens per Sec: 14727.187224991818
Epoch Step: 575 / 819 Loss: 25.416133880615234 Tokens per Sec: 12548.833920127867
Epoch Step: 580 / 819 Loss: 19.834321975708008 Tokens per Sec: 13313.631986950006
Epoch Step: 585 / 819 Loss: 23.888090133666992 Tokens per Sec: 14385.675012505115
Epoch Step: 590 / 819 Loss: 18.700403213500977 Tokens per Sec: 14278.433882756404
Epoch Step: 595 / 819 Loss: 14.423508644104004 Tokens per Sec: 13768.381165054532
Epoch Step: 600 / 819 Loss: 18.637468338012695 Tokens per Sec: 13504.126877297735
Epoch Step: 605 / 819 Loss: 17.181596755981445 Tokens per Sec: 13273.784448636941
Epoch Step: 610 / 819 Loss: 296.81768798828125 Tokens per Sec: 13732.835167960026
Epoch Step: 615 / 819 Loss: 21.954923629760742 Tokens per Sec: 13686.389435194718
Epoch Step: 620 / 819 Loss: 21.498720169067383 Tokens per Sec: 13644.601543491115
Epoch Step: 625 / 819 Loss: 16.49273109436035 Tokens per Sec: 15062.843771457472
Epoch Step: 630 / 819 Loss: 18.488428115844727 Tokens per Sec: 11826.550554941221
Epoch Step: 635 / 819 Loss: 18.13831901550293 Tokens per Sec: 15004.250629147165
Epoch Step: 640 / 819 Loss: 14.424522399902344 Tokens per Sec: 13416.838532292497
Epoch Step: 645 / 819 Loss: 15.666114807128906 Tokens per Sec: 13576.578713056646
Epoch Step: 650 / 819 Loss: 16.197586059570312 Tokens per Sec: 13168.327698717434
Epoch Step: 655 / 819 Loss: 16.346282958984375 Tokens per Sec: 14564.552247128151
Epoch Step: 660 / 819 Loss: 15.931063652038574 Tokens per Sec: 15525.209509670216
Epoch Step: 665 / 819 Loss: 19.847070693969727 Tokens per Sec: 15093.23990341975
Epoch Step: 670 / 819 Loss: 19.862367630004883 Tokens per Sec: 14187.118430198838
Epoch Step: 675 / 819 Loss: 17.03879165649414 Tokens per Sec: 13324.376917273534
Epoch Step: 680 / 819 Loss: 17.976425170898438 Tokens per Sec: 14966.56350505026
Epoch Step: 685 / 819 Loss: 18.352008819580078 Tokens per Sec: 16134.987082762162
Epoch Step: 690 / 819 Loss: 12.742790222167969 Tokens per Sec: 13580.2886549242
Epoch Step: 695 / 819 Loss: 14.67781925201416 Tokens per Sec: 13311.178582697534
Epoch Step: 700 / 819 Loss: 13.287297248840332 Tokens per Sec: 13658.30749534577
Epoch Step: 705 / 819 Loss: 16.616302490234375 Tokens per Sec: 13925.774046136974
Epoch Step: 710 / 819 Loss: 19.032970428466797 Tokens per Sec: 14998.659425224932
Epoch Step: 715 / 819 Loss: 18.94139289855957 Tokens per Sec: 12191.926600073992
Epoch Step: 720 / 819 Loss: 15.983111381530762 Tokens per Sec: 14048.167056613325
Epoch Step: 725 / 819 Loss: 15.841571807861328 Tokens per Sec: 14285.97330734699
Epoch Step: 730 / 819 Loss: 216.61151123046875 Tokens per Sec: 13992.112763765903
Epoch Step: 735 / 819 Loss: 19.974523544311523 Tokens per Sec: 15636.868035991727
Epoch Step: 740 / 819 Loss: 224.24673461914062 Tokens per Sec: 15624.607969390008
Epoch Step: 745 / 819 Loss: 13.104720115661621 Tokens per Sec: 12791.718023067078
Epoch Step: 750 / 819 Loss: 20.98134994506836 Tokens per Sec: 15074.455934758762
Epoch Step: 755 / 819 Loss: 18.120485305786133 Tokens per Sec: 14172.623538066235
Epoch Step: 760 / 819 Loss: 18.709407806396484 Tokens per Sec: 14062.401627925748
Epoch Step: 765 / 819 Loss: 12.92648696899414 Tokens per Sec: 13153.956188285101
Epoch Step: 770 / 819 Loss: 14.654540061950684 Tokens per Sec: 15029.349708761672
Epoch Step: 775 / 819 Loss: 16.389883041381836 Tokens per Sec: 13066.81530794782
Epoch Step: 780 / 819 Loss: 20.252582550048828 Tokens per Sec: 14786.905806697754
Epoch Step: 785 / 819 Loss: 17.552114486694336 Tokens per Sec: 15309.04076235167
Epoch Step: 790 / 819 Loss: 223.61451721191406 Tokens per Sec: 15623.551741291367
Epoch Step: 795 / 819 Loss: 14.853852272033691 Tokens per Sec: 13883.29148473252
Epoch Step: 800 / 819 Loss: 17.943199157714844 Tokens per Sec: 15478.808159311251
Epoch Step: 805 / 819 Loss: 16.03302001953125 Tokens per Sec: 13743.261864435726
Epoch Step: 810 / 819 Loss: 19.026439666748047 Tokens per Sec: 13869.836365861567
Epoch Step: 815 / 819 Loss: 17.092723846435547 Tokens per Sec: 14181.543357797427
Epoch ended with duration 0:04:35.131591
Train perplexity: 1.4995579954328433
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.039926
Validation perplexity: 1.5653892692565192
Epoch 29 / 1000
Epoch Step: 5 / 819 Loss: 18.591615676879883 Tokens per Sec: 14206.175000375748
Epoch Step: 10 / 819 Loss: 24.8760929107666 Tokens per Sec: 13362.418474935752
Epoch Step: 15 / 819 Loss: 22.310842514038086 Tokens per Sec: 15839.83762663867
Epoch Step: 20 / 819 Loss: 16.334501266479492 Tokens per Sec: 14535.553003348768
Epoch Step: 25 / 819 Loss: 17.33004379272461 Tokens per Sec: 12433.033330019769
Epoch Step: 30 / 819 Loss: 15.5626859664917 Tokens per Sec: 13300.040062640655
Epoch Step: 35 / 819 Loss: 20.81820297241211 Tokens per Sec: 14068.848448331893
Epoch Step: 40 / 819 Loss: 20.08282470703125 Tokens per Sec: 13159.521181299548
Epoch Step: 45 / 819 Loss: 18.480806350708008 Tokens per Sec: 15065.529134350687
Epoch Step: 50 / 819 Loss: 13.638799667358398 Tokens per Sec: 13279.766654535586
Epoch Step: 55 / 819 Loss: 13.318711280822754 Tokens per Sec: 13977.002085396849
Epoch Step: 60 / 819 Loss: 258.0619812011719 Tokens per Sec: 13330.30405226013
Epoch Step: 65 / 819 Loss: 19.896778106689453 Tokens per Sec: 14866.149789344267
Epoch Step: 70 / 819 Loss: 15.153512001037598 Tokens per Sec: 13194.607364669531
Epoch Step: 75 / 819 Loss: 18.349458694458008 Tokens per Sec: 14333.916672197653
Epoch Step: 80 / 819 Loss: 16.30960464477539 Tokens per Sec: 13937.064633554382
Epoch Step: 85 / 819 Loss: 18.53192138671875 Tokens per Sec: 12576.45096954579
Epoch Step: 90 / 819 Loss: 17.68595314025879 Tokens per Sec: 15555.2185205755
Epoch Step: 95 / 819 Loss: 228.66737365722656 Tokens per Sec: 14011.958344198369
Epoch Step: 100 / 819 Loss: 16.16550064086914 Tokens per Sec: 14098.917225379682
Epoch Step: 105 / 819 Loss: 19.39419937133789 Tokens per Sec: 11974.900495358212
Epoch Step: 110 / 819 Loss: 15.46086311340332 Tokens per Sec: 11945.56363028082
Epoch Step: 115 / 819 Loss: 21.04221534729004 Tokens per Sec: 13989.255461898503
Epoch Step: 120 / 819 Loss: 19.947649002075195 Tokens per Sec: 13116.998006690306
Epoch Step: 125 / 819 Loss: 22.180545806884766 Tokens per Sec: 14068.301891241605
Epoch Step: 130 / 819 Loss: 18.399658203125 Tokens per Sec: 14519.03817713066
Epoch Step: 135 / 819 Loss: 17.13770866394043 Tokens per Sec: 17087.71601571289
Epoch Step: 140 / 819 Loss: 122.07691192626953 Tokens per Sec: 15759.337434393055
Epoch Step: 145 / 819 Loss: 22.672592163085938 Tokens per Sec: 14303.035605800711
Epoch Step: 150 / 819 Loss: 22.696996688842773 Tokens per Sec: 13980.245727057605
Epoch Step: 155 / 819 Loss: 17.73590087890625 Tokens per Sec: 13707.431711536432
Epoch Step: 160 / 819 Loss: 17.730194091796875 Tokens per Sec: 14301.852488642517
Epoch Step: 165 / 819 Loss: 17.073711395263672 Tokens per Sec: 14503.138952891217
Epoch Step: 170 / 819 Loss: 15.61457633972168 Tokens per Sec: 15849.22991863703
Epoch Step: 175 / 819 Loss: 18.10747718811035 Tokens per Sec: 14861.73777630257
Epoch Step: 180 / 819 Loss: 15.781638145446777 Tokens per Sec: 14290.805315082487
Epoch Step: 185 / 819 Loss: 23.401111602783203 Tokens per Sec: 15629.657720329309
Epoch Step: 190 / 819 Loss: 132.45556640625 Tokens per Sec: 14748.31590557257
Epoch Step: 195 / 819 Loss: 19.576074600219727 Tokens per Sec: 15446.542373445167
Epoch Step: 200 / 819 Loss: 25.552356719970703 Tokens per Sec: 12902.011474723098
Epoch Step: 205 / 819 Loss: 21.091259002685547 Tokens per Sec: 14689.595973217967
Epoch Step: 210 / 819 Loss: 20.967348098754883 Tokens per Sec: 12499.47228690719
Epoch Step: 215 / 819 Loss: 21.435503005981445 Tokens per Sec: 12898.1189150294
Epoch Step: 220 / 819 Loss: 18.76483917236328 Tokens per Sec: 14860.26104135873
Epoch Step: 225 / 819 Loss: 15.870378494262695 Tokens per Sec: 12854.068911600127
Epoch Step: 230 / 819 Loss: 17.7142333984375 Tokens per Sec: 13908.242964419487
Epoch Step: 235 / 819 Loss: 18.233482360839844 Tokens per Sec: 12535.277604746881
Epoch Step: 240 / 819 Loss: 18.418310165405273 Tokens per Sec: 13816.20832271643
Epoch Step: 245 / 819 Loss: 16.49078369140625 Tokens per Sec: 13252.042897104504
Epoch Step: 250 / 819 Loss: 15.682648658752441 Tokens per Sec: 13783.123057300023
Epoch Step: 255 / 819 Loss: 19.565092086791992 Tokens per Sec: 13719.405835709702
Epoch Step: 260 / 819 Loss: 19.96625518798828 Tokens per Sec: 13387.41634916932
Epoch Step: 265 / 819 Loss: 16.961734771728516 Tokens per Sec: 14080.83227681743
Epoch Step: 270 / 819 Loss: 20.820777893066406 Tokens per Sec: 15196.86365908617
Epoch Step: 275 / 819 Loss: 11.742362976074219 Tokens per Sec: 12619.440440317905
Epoch Step: 280 / 819 Loss: 17.037893295288086 Tokens per Sec: 12689.105650615029
Epoch Step: 285 / 819 Loss: 19.33399200439453 Tokens per Sec: 12976.907973998706
Epoch Step: 290 / 819 Loss: 20.971370697021484 Tokens per Sec: 13917.284880553223
Epoch Step: 295 / 819 Loss: 18.607097625732422 Tokens per Sec: 15017.30199812619
Epoch Step: 300 / 819 Loss: 20.775911331176758 Tokens per Sec: 14285.227820003356
Epoch Step: 305 / 819 Loss: 17.45208168029785 Tokens per Sec: 12343.385602489323
Epoch Step: 310 / 819 Loss: 18.079002380371094 Tokens per Sec: 13064.361782220378
Epoch Step: 315 / 819 Loss: 19.348846435546875 Tokens per Sec: 14496.467160114807
Epoch Step: 320 / 819 Loss: 18.92191505432129 Tokens per Sec: 13986.01759676196
Epoch Step: 325 / 819 Loss: 17.344654083251953 Tokens per Sec: 12056.279454535037
Epoch Step: 330 / 819 Loss: 14.93687915802002 Tokens per Sec: 16013.397462750017
Epoch Step: 335 / 819 Loss: 15.407120704650879 Tokens per Sec: 13425.130902869692
Epoch Step: 340 / 819 Loss: 17.23874855041504 Tokens per Sec: 15591.194756908146
Epoch Step: 345 / 819 Loss: 14.851289749145508 Tokens per Sec: 16184.782870051919
Epoch Step: 350 / 819 Loss: 18.748661041259766 Tokens per Sec: 14526.553851707507
Epoch Step: 355 / 819 Loss: 21.77324104309082 Tokens per Sec: 17054.436080379586
Epoch Step: 360 / 819 Loss: 249.60311889648438 Tokens per Sec: 12706.788307853885
Epoch Step: 365 / 819 Loss: 25.24195671081543 Tokens per Sec: 12799.319288944269
Epoch Step: 370 / 819 Loss: 14.102314949035645 Tokens per Sec: 13475.872800130468
Epoch Step: 375 / 819 Loss: 16.752653121948242 Tokens per Sec: 12981.270818296029
Epoch Step: 380 / 819 Loss: 161.8386993408203 Tokens per Sec: 12413.865449171833
Epoch Step: 385 / 819 Loss: 22.24701690673828 Tokens per Sec: 13479.321443787381
Epoch Step: 390 / 819 Loss: 17.02696990966797 Tokens per Sec: 14339.938977255406
Epoch Step: 395 / 819 Loss: 19.524215698242188 Tokens per Sec: 14146.343102737548
Epoch Step: 400 / 819 Loss: 15.20677375793457 Tokens per Sec: 14971.494154921285
Epoch Step: 405 / 819 Loss: 18.773656845092773 Tokens per Sec: 15786.945672911774
Epoch Step: 410 / 819 Loss: 218.7566680908203 Tokens per Sec: 14284.616285844886
Epoch Step: 415 / 819 Loss: 245.1777801513672 Tokens per Sec: 15256.807043511677
Epoch Step: 420 / 819 Loss: 16.866453170776367 Tokens per Sec: 13594.265408031677
Epoch Step: 425 / 819 Loss: 14.656956672668457 Tokens per Sec: 14724.591095852315
Epoch Step: 430 / 819 Loss: 21.962251663208008 Tokens per Sec: 14250.046198577304
Epoch Step: 435 / 819 Loss: 14.184748649597168 Tokens per Sec: 14161.997476846382
Epoch Step: 440 / 819 Loss: 16.390727996826172 Tokens per Sec: 15133.722911115592
Epoch Step: 445 / 819 Loss: 19.37093734741211 Tokens per Sec: 14470.491122912814
Epoch Step: 450 / 819 Loss: 22.421733856201172 Tokens per Sec: 15900.279334609257
Epoch Step: 455 / 819 Loss: 16.895069122314453 Tokens per Sec: 15325.702164356142
Epoch Step: 460 / 819 Loss: 18.005638122558594 Tokens per Sec: 12569.73743259234
Epoch Step: 465 / 819 Loss: 21.574722290039062 Tokens per Sec: 13979.198062853562
Epoch Step: 470 / 819 Loss: 20.1729736328125 Tokens per Sec: 13252.460078906717
Epoch Step: 475 / 819 Loss: 17.684324264526367 Tokens per Sec: 13382.950755035363
Epoch Step: 480 / 819 Loss: 12.729754447937012 Tokens per Sec: 13808.288073038475
Epoch Step: 485 / 819 Loss: 16.390689849853516 Tokens per Sec: 14483.405757906927
Epoch Step: 490 / 819 Loss: 15.904577255249023 Tokens per Sec: 17009.39998686804
Epoch Step: 495 / 819 Loss: 13.819626808166504 Tokens per Sec: 14937.052459600676
Epoch Step: 500 / 819 Loss: 16.312414169311523 Tokens per Sec: 14726.775633145478
Epoch Step: 505 / 819 Loss: 16.53986358642578 Tokens per Sec: 13526.373448497048
Epoch Step: 510 / 819 Loss: 14.645950317382812 Tokens per Sec: 14307.703416602995
Epoch Step: 515 / 819 Loss: 16.939416885375977 Tokens per Sec: 13304.341524850955
Epoch Step: 520 / 819 Loss: 154.0556640625 Tokens per Sec: 14770.821370359192
Epoch Step: 525 / 819 Loss: 23.171344757080078 Tokens per Sec: 13551.719748959007
Epoch Step: 530 / 819 Loss: 128.89724731445312 Tokens per Sec: 14959.29015372173
Epoch Step: 535 / 819 Loss: 16.90048599243164 Tokens per Sec: 15358.059167338888
Epoch Step: 540 / 819 Loss: 20.34624481201172 Tokens per Sec: 14214.677139327709
Epoch Step: 545 / 819 Loss: 19.93608283996582 Tokens per Sec: 13163.44064970419
Epoch Step: 550 / 819 Loss: 16.669858932495117 Tokens per Sec: 14880.177734683672
Epoch Step: 555 / 819 Loss: 16.426984786987305 Tokens per Sec: 13799.739638266508
Epoch Step: 560 / 819 Loss: 13.635534286499023 Tokens per Sec: 12808.768858253861
Epoch Step: 565 / 819 Loss: 18.449302673339844 Tokens per Sec: 13619.897453633426
Epoch Step: 570 / 819 Loss: 16.2724666595459 Tokens per Sec: 14815.55483235166
Epoch Step: 575 / 819 Loss: 226.16448974609375 Tokens per Sec: 13669.938539246232
Epoch Step: 580 / 819 Loss: 15.877761840820312 Tokens per Sec: 15448.32506994833
Epoch Step: 585 / 819 Loss: 14.105485916137695 Tokens per Sec: 14490.914366898718
Epoch Step: 590 / 819 Loss: 18.59282112121582 Tokens per Sec: 13909.5829441409
Epoch Step: 595 / 819 Loss: 19.39162254333496 Tokens per Sec: 13024.974373521194
Epoch Step: 600 / 819 Loss: 21.640003204345703 Tokens per Sec: 13112.69309223607
Epoch Step: 605 / 819 Loss: 15.202547073364258 Tokens per Sec: 14803.055911294141
Epoch Step: 610 / 819 Loss: 15.118624687194824 Tokens per Sec: 14229.978255829412
Epoch Step: 615 / 819 Loss: 13.863869667053223 Tokens per Sec: 14418.771951897425
Epoch Step: 620 / 819 Loss: 13.72362995147705 Tokens per Sec: 15130.030997754846
Epoch Step: 625 / 819 Loss: 19.245620727539062 Tokens per Sec: 13313.037095942735
Epoch Step: 630 / 819 Loss: 12.717255592346191 Tokens per Sec: 14335.31533947952
Epoch Step: 635 / 819 Loss: 15.65475845336914 Tokens per Sec: 14598.20669761015
Epoch Step: 640 / 819 Loss: 15.756168365478516 Tokens per Sec: 14085.136450750548
Epoch Step: 645 / 819 Loss: 21.5357723236084 Tokens per Sec: 13435.510491482517
Epoch Step: 650 / 819 Loss: 21.66159439086914 Tokens per Sec: 13895.950689982603
Epoch Step: 655 / 819 Loss: 85.40684509277344 Tokens per Sec: 12354.072339841934
Epoch Step: 660 / 819 Loss: 20.474014282226562 Tokens per Sec: 13553.383084651012
Epoch Step: 665 / 819 Loss: 148.99615478515625 Tokens per Sec: 12983.349544110179
Epoch Step: 670 / 819 Loss: 20.944793701171875 Tokens per Sec: 14400.871817034084
Epoch Step: 675 / 819 Loss: 14.107918739318848 Tokens per Sec: 14664.07183264622
Epoch Step: 680 / 819 Loss: 15.940778732299805 Tokens per Sec: 13109.43820714877
Epoch Step: 685 / 819 Loss: 17.803184509277344 Tokens per Sec: 12690.974654775635
Epoch Step: 690 / 819 Loss: 124.33816528320312 Tokens per Sec: 13659.72081187943
Epoch Step: 695 / 819 Loss: 181.41415405273438 Tokens per Sec: 12617.599480749885
Epoch Step: 700 / 819 Loss: 17.420623779296875 Tokens per Sec: 13865.436606086963
Epoch Step: 705 / 819 Loss: 22.06415557861328 Tokens per Sec: 13014.533712530849
Epoch Step: 710 / 819 Loss: 18.58587646484375 Tokens per Sec: 14709.151960082288
Epoch Step: 715 / 819 Loss: 20.962604522705078 Tokens per Sec: 13985.427177940981
Epoch Step: 720 / 819 Loss: 18.373262405395508 Tokens per Sec: 15481.383478826805
Epoch Step: 725 / 819 Loss: 19.064786911010742 Tokens per Sec: 15474.268288140182
Epoch Step: 730 / 819 Loss: 15.900863647460938 Tokens per Sec: 15061.820174833178
Epoch Step: 735 / 819 Loss: 13.021092414855957 Tokens per Sec: 14850.877623368446
Epoch Step: 740 / 819 Loss: 20.769268035888672 Tokens per Sec: 14502.89163156215
Epoch Step: 745 / 819 Loss: 21.074125289916992 Tokens per Sec: 14412.251036174504
Epoch Step: 750 / 819 Loss: 21.51252555847168 Tokens per Sec: 15068.391437193352
Epoch Step: 755 / 819 Loss: 18.469545364379883 Tokens per Sec: 13692.239999503887
Epoch Step: 760 / 819 Loss: 92.0380859375 Tokens per Sec: 13890.145329896786
Epoch Step: 765 / 819 Loss: 21.811321258544922 Tokens per Sec: 13640.808028522106
Epoch Step: 770 / 819 Loss: 19.843780517578125 Tokens per Sec: 13863.9964591223
Epoch Step: 775 / 819 Loss: 22.570310592651367 Tokens per Sec: 14431.472570442005
Epoch Step: 780 / 819 Loss: 21.415864944458008 Tokens per Sec: 13028.07516055642
Epoch Step: 785 / 819 Loss: 21.094924926757812 Tokens per Sec: 13431.357176367408
Epoch Step: 790 / 819 Loss: 20.079505920410156 Tokens per Sec: 13160.684241609308
Epoch Step: 795 / 819 Loss: 25.422536849975586 Tokens per Sec: 13672.249193946864
Epoch Step: 800 / 819 Loss: 18.370336532592773 Tokens per Sec: 14651.761739803973
Epoch Step: 805 / 819 Loss: 18.66364097595215 Tokens per Sec: 11458.172454097768
Epoch Step: 810 / 819 Loss: 23.361631393432617 Tokens per Sec: 14839.887875801931
Epoch Step: 815 / 819 Loss: 21.495532989501953 Tokens per Sec: 14450.237811368212
Epoch ended with duration 0:04:37.103636
Train perplexity: 1.6300282326775704
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.977844
Validation perplexity: 1.3205958981822967
Model saved best_on_validation!
Epoch 30 / 1000
Epoch Step: 5 / 819 Loss: 19.680805206298828 Tokens per Sec: 14710.306110609159
Epoch Step: 10 / 819 Loss: 20.51825523376465 Tokens per Sec: 14573.62694503634
Epoch Step: 15 / 819 Loss: 21.68895149230957 Tokens per Sec: 12384.402605925894
Epoch Step: 20 / 819 Loss: 20.05311393737793 Tokens per Sec: 15342.295579701306
Epoch Step: 25 / 819 Loss: 13.698472023010254 Tokens per Sec: 13118.569008266904
Epoch Step: 30 / 819 Loss: 19.102502822875977 Tokens per Sec: 13781.60802168091
Epoch Step: 35 / 819 Loss: 16.722400665283203 Tokens per Sec: 14606.76901889653
Epoch Step: 40 / 819 Loss: 17.290246963500977 Tokens per Sec: 14360.806193648676
Epoch Step: 45 / 819 Loss: 14.955371856689453 Tokens per Sec: 12992.274112546342
Epoch Step: 50 / 819 Loss: 19.334749221801758 Tokens per Sec: 13101.980994347534
Epoch Step: 55 / 819 Loss: 21.728954315185547 Tokens per Sec: 14223.266518465614
Epoch Step: 60 / 819 Loss: 15.010124206542969 Tokens per Sec: 14722.325875912795
Epoch Step: 65 / 819 Loss: 234.48602294921875 Tokens per Sec: 14701.330031335956
Epoch Step: 70 / 819 Loss: 196.30128479003906 Tokens per Sec: 13124.38273953538
Epoch Step: 75 / 819 Loss: 24.71222496032715 Tokens per Sec: 14218.468898656472
Epoch Step: 80 / 819 Loss: 20.681873321533203 Tokens per Sec: 15021.288193223278
Epoch Step: 85 / 819 Loss: 20.39055824279785 Tokens per Sec: 14625.257732618229
Epoch Step: 90 / 819 Loss: 17.4886417388916 Tokens per Sec: 14017.487040435302
Epoch Step: 95 / 819 Loss: 18.732004165649414 Tokens per Sec: 14104.364566354452
Epoch Step: 100 / 819 Loss: 14.635409355163574 Tokens per Sec: 12949.14752344373
Epoch Step: 105 / 819 Loss: 21.397897720336914 Tokens per Sec: 15018.058329428222
Epoch Step: 110 / 819 Loss: 18.421415328979492 Tokens per Sec: 15694.10558402049
Epoch Step: 115 / 819 Loss: 18.12986183166504 Tokens per Sec: 15001.21603853081
Epoch Step: 120 / 819 Loss: 13.394065856933594 Tokens per Sec: 13342.339032336618
Epoch Step: 125 / 819 Loss: 18.826419830322266 Tokens per Sec: 11658.433998703724
Epoch Step: 130 / 819 Loss: 13.820517539978027 Tokens per Sec: 14466.385037374679
Epoch Step: 135 / 819 Loss: 22.625276565551758 Tokens per Sec: 14789.097302426357
Epoch Step: 140 / 819 Loss: 12.305671691894531 Tokens per Sec: 16272.800012291156
Epoch Step: 145 / 819 Loss: 19.11613655090332 Tokens per Sec: 15893.267532764974
Epoch Step: 150 / 819 Loss: 181.51658630371094 Tokens per Sec: 14808.988701836559
Epoch Step: 155 / 819 Loss: 20.388534545898438 Tokens per Sec: 14400.539621999162
Epoch Step: 160 / 819 Loss: 22.40188217163086 Tokens per Sec: 15617.303641782099
Epoch Step: 165 / 819 Loss: 17.600257873535156 Tokens per Sec: 14414.160053080213
Epoch Step: 170 / 819 Loss: 15.923471450805664 Tokens per Sec: 13637.148637614628
Epoch Step: 175 / 819 Loss: 12.985526084899902 Tokens per Sec: 13283.873834916069
Epoch Step: 180 / 819 Loss: 17.487083435058594 Tokens per Sec: 13750.21658804346
Epoch Step: 185 / 819 Loss: 15.8818941116333 Tokens per Sec: 15227.425743440415
Epoch Step: 190 / 819 Loss: 208.3867950439453 Tokens per Sec: 13629.985051030828
Epoch Step: 195 / 819 Loss: 231.0552978515625 Tokens per Sec: 12817.546688323468
Epoch Step: 200 / 819 Loss: 16.638050079345703 Tokens per Sec: 14222.427674137749
Epoch Step: 205 / 819 Loss: 14.662527084350586 Tokens per Sec: 14237.074680988406
Epoch Step: 210 / 819 Loss: 14.004889488220215 Tokens per Sec: 14267.665201315633
Epoch Step: 215 / 819 Loss: 19.12461280822754 Tokens per Sec: 13491.006301444486
Epoch Step: 220 / 819 Loss: 20.321697235107422 Tokens per Sec: 13777.301491825752
Epoch Step: 225 / 819 Loss: 18.014812469482422 Tokens per Sec: 13654.539059214101
Epoch Step: 230 / 819 Loss: 12.991402626037598 Tokens per Sec: 13922.736884141448
Epoch Step: 235 / 819 Loss: 18.77208137512207 Tokens per Sec: 15175.1811033875
Epoch Step: 240 / 819 Loss: 16.93198013305664 Tokens per Sec: 15302.021842068978
Epoch Step: 245 / 819 Loss: 19.617582321166992 Tokens per Sec: 13950.097341604926
Epoch Step: 250 / 819 Loss: 12.510079383850098 Tokens per Sec: 13940.392813877257
Epoch Step: 255 / 819 Loss: 13.477363586425781 Tokens per Sec: 12212.106036973
Epoch Step: 260 / 819 Loss: 19.738231658935547 Tokens per Sec: 14547.19266537237
Epoch Step: 265 / 819 Loss: 14.793620109558105 Tokens per Sec: 14190.815902596678
Epoch Step: 270 / 819 Loss: 18.251949310302734 Tokens per Sec: 15583.210628463205
Epoch Step: 275 / 819 Loss: 21.032257080078125 Tokens per Sec: 13897.926074034309
Epoch Step: 280 / 819 Loss: 20.999303817749023 Tokens per Sec: 14433.415817463307
Epoch Step: 285 / 819 Loss: 16.392501831054688 Tokens per Sec: 14357.453112620706
Epoch Step: 290 / 819 Loss: 232.19216918945312 Tokens per Sec: 16966.480756022254
Epoch Step: 295 / 819 Loss: 19.75760269165039 Tokens per Sec: 13698.01258132145
Epoch Step: 300 / 819 Loss: 15.501869201660156 Tokens per Sec: 13043.375113209278
Epoch Step: 305 / 819 Loss: 21.21537208557129 Tokens per Sec: 12308.90179156106
Epoch Step: 310 / 819 Loss: 12.685659408569336 Tokens per Sec: 15237.047708845004
Epoch Step: 315 / 819 Loss: 18.733125686645508 Tokens per Sec: 13443.958605206564
Epoch Step: 320 / 819 Loss: 14.736464500427246 Tokens per Sec: 14378.575018830394
Epoch Step: 325 / 819 Loss: 18.03736686706543 Tokens per Sec: 13530.301732563641
Epoch Step: 330 / 819 Loss: 15.332653045654297 Tokens per Sec: 13695.370461298708
Epoch Step: 335 / 819 Loss: 19.94011878967285 Tokens per Sec: 12782.701083531496
Epoch Step: 340 / 819 Loss: 21.664522171020508 Tokens per Sec: 12627.383572576464
Epoch Step: 345 / 819 Loss: 16.946985244750977 Tokens per Sec: 13659.630323936703
Epoch Step: 350 / 819 Loss: 13.43699836730957 Tokens per Sec: 12944.163990753712
Epoch Step: 355 / 819 Loss: 16.150814056396484 Tokens per Sec: 14461.619765002137
Epoch Step: 360 / 819 Loss: 19.515195846557617 Tokens per Sec: 13542.257436997972
Epoch Step: 365 / 819 Loss: 17.028457641601562 Tokens per Sec: 14549.301042654251
Epoch Step: 370 / 819 Loss: 145.6582489013672 Tokens per Sec: 15315.62127351136
Epoch Step: 375 / 819 Loss: 20.877395629882812 Tokens per Sec: 13124.444241578296
Epoch Step: 380 / 819 Loss: 16.06097984313965 Tokens per Sec: 13108.553014604788
Epoch Step: 385 / 819 Loss: 17.971599578857422 Tokens per Sec: 14633.613837170577
Epoch Step: 390 / 819 Loss: 16.8983097076416 Tokens per Sec: 13599.409370936537
Epoch Step: 395 / 819 Loss: 19.44850730895996 Tokens per Sec: 14357.33098184185
Epoch Step: 400 / 819 Loss: 14.18687629699707 Tokens per Sec: 14393.78743326322
Epoch Step: 405 / 819 Loss: 15.313294410705566 Tokens per Sec: 15568.16773002149
Epoch Step: 410 / 819 Loss: 20.286006927490234 Tokens per Sec: 13989.316515109662
Epoch Step: 415 / 819 Loss: 18.610380172729492 Tokens per Sec: 13986.671243287245
Epoch Step: 420 / 819 Loss: 20.15874481201172 Tokens per Sec: 14296.65311173709
Epoch Step: 425 / 819 Loss: 17.708171844482422 Tokens per Sec: 12935.025921168595
Epoch Step: 430 / 819 Loss: 14.073980331420898 Tokens per Sec: 14256.475186465495
Epoch Step: 435 / 819 Loss: 238.3023223876953 Tokens per Sec: 14456.367330695224
Epoch Step: 440 / 819 Loss: 14.754698753356934 Tokens per Sec: 12403.873486794346
Epoch Step: 445 / 819 Loss: 19.283504486083984 Tokens per Sec: 13541.391198626965
Epoch Step: 450 / 819 Loss: 19.339574813842773 Tokens per Sec: 12685.546736806038
Epoch Step: 455 / 819 Loss: 14.80666732788086 Tokens per Sec: 12142.670478927592
Epoch Step: 460 / 819 Loss: 15.886245727539062 Tokens per Sec: 15218.563672290285
Epoch Step: 465 / 819 Loss: 17.513608932495117 Tokens per Sec: 14034.081825180096
Epoch Step: 470 / 819 Loss: 17.932397842407227 Tokens per Sec: 12867.317164747492
Epoch Step: 475 / 819 Loss: 18.03433609008789 Tokens per Sec: 14461.692768617402
Epoch Step: 480 / 819 Loss: 19.31614875793457 Tokens per Sec: 15959.334874189497
Epoch Step: 485 / 819 Loss: 17.2169189453125 Tokens per Sec: 14619.121623737272
Epoch Step: 490 / 819 Loss: 22.273462295532227 Tokens per Sec: 14867.602841608401
Epoch Step: 495 / 819 Loss: 17.898378372192383 Tokens per Sec: 16817.691965950897
Epoch Step: 500 / 819 Loss: 229.72508239746094 Tokens per Sec: 13579.694853316132
Epoch Step: 505 / 819 Loss: 15.210261344909668 Tokens per Sec: 13322.865272881425
Epoch Step: 510 / 819 Loss: 21.659637451171875 Tokens per Sec: 13873.635919175615
Epoch Step: 515 / 819 Loss: 21.004207611083984 Tokens per Sec: 13988.114680549941
Epoch Step: 520 / 819 Loss: 15.266844749450684 Tokens per Sec: 12970.225752092649
Epoch Step: 525 / 819 Loss: 13.680895805358887 Tokens per Sec: 14300.489458643087
Epoch Step: 530 / 819 Loss: 22.50556755065918 Tokens per Sec: 13312.857585364269
Epoch Step: 535 / 819 Loss: 111.86968994140625 Tokens per Sec: 14540.942128831804
Epoch Step: 540 / 819 Loss: 19.89421844482422 Tokens per Sec: 13542.816558905039
Epoch Step: 545 / 819 Loss: 179.13734436035156 Tokens per Sec: 14631.706893644769
Epoch Step: 550 / 819 Loss: 22.010631561279297 Tokens per Sec: 13752.549642722064
Epoch Step: 555 / 819 Loss: 20.558712005615234 Tokens per Sec: 13694.456270693416
Epoch Step: 560 / 819 Loss: 20.589784622192383 Tokens per Sec: 13530.883161418446
Epoch Step: 565 / 819 Loss: 15.64552116394043 Tokens per Sec: 15009.664886152266
Epoch Step: 570 / 819 Loss: 23.767314910888672 Tokens per Sec: 14770.820815686542
Epoch Step: 575 / 819 Loss: 15.52127456665039 Tokens per Sec: 14699.990114729762
Epoch Step: 580 / 819 Loss: 18.37294578552246 Tokens per Sec: 13979.042152260778
Epoch Step: 585 / 819 Loss: 19.734251022338867 Tokens per Sec: 13324.090473283512
Epoch Step: 590 / 819 Loss: 21.924484252929688 Tokens per Sec: 13818.178200740904
Epoch Step: 595 / 819 Loss: 20.556190490722656 Tokens per Sec: 15157.261067116879
Epoch Step: 600 / 819 Loss: 17.003950119018555 Tokens per Sec: 14205.935913920903
Epoch Step: 605 / 819 Loss: 17.653223037719727 Tokens per Sec: 14792.611466907108
Epoch Step: 610 / 819 Loss: 194.0955352783203 Tokens per Sec: 14678.436186634257
Epoch Step: 615 / 819 Loss: 17.755239486694336 Tokens per Sec: 13520.73807290103
Epoch Step: 620 / 819 Loss: 13.481391906738281 Tokens per Sec: 14622.581519981608
Epoch Step: 625 / 819 Loss: 13.514321327209473 Tokens per Sec: 14503.194650544152
Epoch Step: 630 / 819 Loss: 13.43039608001709 Tokens per Sec: 15897.604237273277
Epoch Step: 635 / 819 Loss: 13.935571670532227 Tokens per Sec: 12353.397170150705
Epoch Step: 640 / 819 Loss: 20.088523864746094 Tokens per Sec: 13142.584804455732
Epoch Step: 645 / 819 Loss: 16.973934173583984 Tokens per Sec: 14705.0111205938
Epoch Step: 650 / 819 Loss: 16.83087921142578 Tokens per Sec: 15366.99811084087
Epoch Step: 655 / 819 Loss: 16.904569625854492 Tokens per Sec: 14503.579601056086
Epoch Step: 660 / 819 Loss: 18.805936813354492 Tokens per Sec: 15309.699033419767
Epoch Step: 665 / 819 Loss: 15.011570930480957 Tokens per Sec: 13829.894965547668
Epoch Step: 670 / 819 Loss: 18.91335678100586 Tokens per Sec: 17017.662017090315
Epoch Step: 675 / 819 Loss: 14.156476020812988 Tokens per Sec: 12887.073336432784
Epoch Step: 680 / 819 Loss: 13.498234748840332 Tokens per Sec: 13802.334107307606
Epoch Step: 685 / 819 Loss: 15.055373191833496 Tokens per Sec: 14252.36395462112
Epoch Step: 690 / 819 Loss: 21.869522094726562 Tokens per Sec: 16156.841437058672
Epoch Step: 695 / 819 Loss: 22.114238739013672 Tokens per Sec: 14502.23444544344
Epoch Step: 700 / 819 Loss: 16.31391143798828 Tokens per Sec: 14773.620833154242
Epoch Step: 705 / 819 Loss: 12.9617280960083 Tokens per Sec: 13862.946127906098
Epoch Step: 710 / 819 Loss: 214.3245849609375 Tokens per Sec: 14896.633906228968
Epoch Step: 715 / 819 Loss: 20.53293228149414 Tokens per Sec: 14165.334156396517
Epoch Step: 720 / 819 Loss: 21.495868682861328 Tokens per Sec: 14370.803904203854
Epoch Step: 725 / 819 Loss: 20.393678665161133 Tokens per Sec: 12380.784460264986
Epoch Step: 730 / 819 Loss: 25.155845642089844 Tokens per Sec: 13638.192160989047
Epoch Step: 735 / 819 Loss: 21.381521224975586 Tokens per Sec: 13664.220404465868
Epoch Step: 740 / 819 Loss: 22.489274978637695 Tokens per Sec: 13319.4639530161
Epoch Step: 745 / 819 Loss: 156.97274780273438 Tokens per Sec: 15119.991890553312
Epoch Step: 750 / 819 Loss: 16.400121688842773 Tokens per Sec: 14919.041118485979
Epoch Step: 755 / 819 Loss: 17.806100845336914 Tokens per Sec: 13691.176377034159
Epoch Step: 760 / 819 Loss: 141.6563262939453 Tokens per Sec: 13057.383354006142
Epoch Step: 765 / 819 Loss: 16.88813591003418 Tokens per Sec: 14253.595192554194
Epoch Step: 770 / 819 Loss: 17.10192108154297 Tokens per Sec: 14987.210186142478
Epoch Step: 775 / 819 Loss: 231.21461486816406 Tokens per Sec: 12909.924906915148
Epoch Step: 780 / 819 Loss: 15.947550773620605 Tokens per Sec: 14759.185593208194
Epoch Step: 785 / 819 Loss: 159.42031860351562 Tokens per Sec: 13384.175358116712
Epoch Step: 790 / 819 Loss: 23.7273006439209 Tokens per Sec: 13294.407465493363
Epoch Step: 795 / 819 Loss: 17.946794509887695 Tokens per Sec: 13571.412846001464
Epoch Step: 800 / 819 Loss: 15.159751892089844 Tokens per Sec: 13713.038994948165
Epoch Step: 805 / 819 Loss: 16.89899444580078 Tokens per Sec: 12953.506222313279
Epoch Step: 810 / 819 Loss: 15.805402755737305 Tokens per Sec: 12958.848909296741
Epoch Step: 815 / 819 Loss: 16.20232582092285 Tokens per Sec: 13262.119172975763
Epoch ended with duration 0:04:36.149992
Train perplexity: 1.55701790598441
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.065302
Validation perplexity: 1.601050495345595
Model saved checkpoint!
Epoch 31 / 1000
Epoch Step: 5 / 819 Loss: 20.157752990722656 Tokens per Sec: 14231.584761361115
Epoch Step: 10 / 819 Loss: 13.41316032409668 Tokens per Sec: 13333.048095989729
Epoch Step: 15 / 819 Loss: 12.956562042236328 Tokens per Sec: 12927.349786431127
Epoch Step: 20 / 819 Loss: 15.651803970336914 Tokens per Sec: 14114.77910747621
Epoch Step: 25 / 819 Loss: 16.467788696289062 Tokens per Sec: 14350.435948336444
Epoch Step: 30 / 819 Loss: 13.56833267211914 Tokens per Sec: 13302.306116488782
Epoch Step: 35 / 819 Loss: 20.952375411987305 Tokens per Sec: 13968.117981785825
Epoch Step: 40 / 819 Loss: 19.629146575927734 Tokens per Sec: 13112.222733499873
Epoch Step: 45 / 819 Loss: 14.570505142211914 Tokens per Sec: 13872.339917202155
Epoch Step: 50 / 819 Loss: 19.72785758972168 Tokens per Sec: 15054.811497637476
Epoch Step: 55 / 819 Loss: 156.4602813720703 Tokens per Sec: 12447.91544964362
Epoch Step: 60 / 819 Loss: 18.92167854309082 Tokens per Sec: 13924.934056682503
Epoch Step: 65 / 819 Loss: 14.439356803894043 Tokens per Sec: 13464.827224293584
Epoch Step: 70 / 819 Loss: 14.533794403076172 Tokens per Sec: 13723.699031945416
Epoch Step: 75 / 819 Loss: 20.297555923461914 Tokens per Sec: 13032.903438376774
Epoch Step: 80 / 819 Loss: 18.52465057373047 Tokens per Sec: 14547.584402128301
Epoch Step: 85 / 819 Loss: 20.108455657958984 Tokens per Sec: 13474.000198158046
Epoch Step: 90 / 819 Loss: 13.781720161437988 Tokens per Sec: 13673.950840047906
Epoch Step: 95 / 819 Loss: 17.462217330932617 Tokens per Sec: 16170.136107845605
Epoch Step: 100 / 819 Loss: 12.568938255310059 Tokens per Sec: 13881.815556237601
Epoch Step: 105 / 819 Loss: 17.209056854248047 Tokens per Sec: 13060.296195136265
Epoch Step: 110 / 819 Loss: 19.64425277709961 Tokens per Sec: 14725.407285450823
Epoch Step: 115 / 819 Loss: 17.606081008911133 Tokens per Sec: 13914.660058604264
Epoch Step: 120 / 819 Loss: 181.7263641357422 Tokens per Sec: 14344.171274409442
Epoch Step: 125 / 819 Loss: 17.1759090423584 Tokens per Sec: 11966.048802769965
Epoch Step: 130 / 819 Loss: 16.359098434448242 Tokens per Sec: 14321.536879091514
Epoch Step: 135 / 819 Loss: 26.918367385864258 Tokens per Sec: 12213.956996878502
Epoch Step: 140 / 819 Loss: 13.429821014404297 Tokens per Sec: 15284.129118960616
Epoch Step: 145 / 819 Loss: 16.9226131439209 Tokens per Sec: 14149.912756639576
Epoch Step: 150 / 819 Loss: 20.690601348876953 Tokens per Sec: 15515.43781624716
Epoch Step: 155 / 819 Loss: 15.740379333496094 Tokens per Sec: 14831.300548510577
Epoch Step: 160 / 819 Loss: 16.880748748779297 Tokens per Sec: 12887.475064157035
Epoch Step: 165 / 819 Loss: 16.83289909362793 Tokens per Sec: 14908.732634919023
Epoch Step: 170 / 819 Loss: 18.22305679321289 Tokens per Sec: 15186.009014911313
Epoch Step: 175 / 819 Loss: 20.064006805419922 Tokens per Sec: 14049.382141322416
Epoch Step: 180 / 819 Loss: 16.031965255737305 Tokens per Sec: 13697.259715962922
Epoch Step: 185 / 819 Loss: 22.299001693725586 Tokens per Sec: 13474.244696774716
Epoch Step: 190 / 819 Loss: 12.808492660522461 Tokens per Sec: 15387.820543754708
Epoch Step: 195 / 819 Loss: 12.878286361694336 Tokens per Sec: 13673.770353610287
Epoch Step: 200 / 819 Loss: 14.764311790466309 Tokens per Sec: 13288.042105085085
Epoch Step: 205 / 819 Loss: 14.516668319702148 Tokens per Sec: 15701.793589057243
Epoch Step: 210 / 819 Loss: 20.972570419311523 Tokens per Sec: 14432.998636423386
Epoch Step: 215 / 819 Loss: 17.668094635009766 Tokens per Sec: 14747.38446860104
Epoch Step: 220 / 819 Loss: 12.246574401855469 Tokens per Sec: 16699.322153280074
Epoch Step: 225 / 819 Loss: 16.75886344909668 Tokens per Sec: 15713.675852953542
Epoch Step: 230 / 819 Loss: 22.10515785217285 Tokens per Sec: 14360.877218548096
Epoch Step: 235 / 819 Loss: 14.499999046325684 Tokens per Sec: 13682.364260016993
Epoch Step: 240 / 819 Loss: 13.06980037689209 Tokens per Sec: 14642.763593061842
Epoch Step: 245 / 819 Loss: 17.21251106262207 Tokens per Sec: 13171.710069793458
Epoch Step: 250 / 819 Loss: 14.520854949951172 Tokens per Sec: 14549.71650949385
Epoch Step: 255 / 819 Loss: 278.4945373535156 Tokens per Sec: 14002.77580036035
Epoch Step: 260 / 819 Loss: 15.824933052062988 Tokens per Sec: 13153.966725454997
Epoch Step: 265 / 819 Loss: 171.52857971191406 Tokens per Sec: 16199.188970074692
Epoch Step: 270 / 819 Loss: 22.30341148376465 Tokens per Sec: 13087.06283677387
Epoch Step: 275 / 819 Loss: 18.449398040771484 Tokens per Sec: 13083.368660917891
Epoch Step: 280 / 819 Loss: 18.47799301147461 Tokens per Sec: 13744.243697677513
Epoch Step: 285 / 819 Loss: 235.7535858154297 Tokens per Sec: 14450.46642843048
Epoch Step: 290 / 819 Loss: 21.70480728149414 Tokens per Sec: 13725.871779826783
Epoch Step: 295 / 819 Loss: 20.07938003540039 Tokens per Sec: 14094.280500504809
Epoch Step: 300 / 819 Loss: 23.944061279296875 Tokens per Sec: 13893.52180605095
Epoch Step: 305 / 819 Loss: 25.645151138305664 Tokens per Sec: 15788.618352589177
Epoch Step: 310 / 819 Loss: 140.91693115234375 Tokens per Sec: 14696.344951620784
Epoch Step: 315 / 819 Loss: 26.117605209350586 Tokens per Sec: 14193.636777316675
Epoch Step: 320 / 819 Loss: 23.168262481689453 Tokens per Sec: 15216.989765155018
Epoch Step: 325 / 819 Loss: 21.754793167114258 Tokens per Sec: 12526.18343694164
Epoch Step: 330 / 819 Loss: 18.685890197753906 Tokens per Sec: 14261.6863177768
Epoch Step: 335 / 819 Loss: 15.938708305358887 Tokens per Sec: 13759.662762488348
Epoch Step: 340 / 819 Loss: 26.037260055541992 Tokens per Sec: 12894.98958888375
Epoch Step: 345 / 819 Loss: 17.774147033691406 Tokens per Sec: 14430.441057008551
Epoch Step: 350 / 819 Loss: 18.368446350097656 Tokens per Sec: 15784.811228173376
Epoch Step: 355 / 819 Loss: 17.190677642822266 Tokens per Sec: 14080.322533114548
Epoch Step: 360 / 819 Loss: 19.979169845581055 Tokens per Sec: 14461.57412582154
Epoch Step: 365 / 819 Loss: 12.793050765991211 Tokens per Sec: 13581.675254679894
Epoch Step: 370 / 819 Loss: 16.609359741210938 Tokens per Sec: 13316.59940759543
Epoch Step: 375 / 819 Loss: 219.9463348388672 Tokens per Sec: 13795.175766329574
Epoch Step: 380 / 819 Loss: 21.56791877746582 Tokens per Sec: 15633.89094142157
Epoch Step: 385 / 819 Loss: 16.409236907958984 Tokens per Sec: 13006.935782815306
Epoch Step: 390 / 819 Loss: 18.88865852355957 Tokens per Sec: 13642.365705616214
Epoch Step: 395 / 819 Loss: 21.165380477905273 Tokens per Sec: 13768.002607943086
Epoch Step: 400 / 819 Loss: 22.048551559448242 Tokens per Sec: 11159.281310876988
Epoch Step: 405 / 819 Loss: 13.869420051574707 Tokens per Sec: 11784.578976312214
Epoch Step: 410 / 819 Loss: 15.392637252807617 Tokens per Sec: 13620.40787444274
Epoch Step: 415 / 819 Loss: 20.106365203857422 Tokens per Sec: 15092.82569301687
Epoch Step: 420 / 819 Loss: 15.789318084716797 Tokens per Sec: 13772.681874267648
Epoch Step: 425 / 819 Loss: 14.71179485321045 Tokens per Sec: 15140.534238495735
Epoch Step: 430 / 819 Loss: 17.600412368774414 Tokens per Sec: 15178.053310749063
Epoch Step: 435 / 819 Loss: 219.51393127441406 Tokens per Sec: 12701.327209657486
Epoch Step: 440 / 819 Loss: 22.15863800048828 Tokens per Sec: 14363.617457540799
Epoch Step: 445 / 819 Loss: 13.335404396057129 Tokens per Sec: 14509.655353874346
Epoch Step: 450 / 819 Loss: 13.520907402038574 Tokens per Sec: 11535.80670717361
Epoch Step: 455 / 819 Loss: 12.151180267333984 Tokens per Sec: 12597.387705881634
Epoch Step: 460 / 819 Loss: 230.0589599609375 Tokens per Sec: 16148.208383121588
Epoch Step: 465 / 819 Loss: 20.69385528564453 Tokens per Sec: 14303.901929620155
Epoch Step: 470 / 819 Loss: 20.83055877685547 Tokens per Sec: 14373.0877667439
Epoch Step: 475 / 819 Loss: 24.138870239257812 Tokens per Sec: 15130.625902296182
Epoch Step: 480 / 819 Loss: 20.505847930908203 Tokens per Sec: 14302.082175599095
Epoch Step: 485 / 819 Loss: 24.448532104492188 Tokens per Sec: 13148.486572701839
Epoch Step: 490 / 819 Loss: 22.550373077392578 Tokens per Sec: 13408.545983650716
Epoch Step: 495 / 819 Loss: 25.827138900756836 Tokens per Sec: 13655.879594429602
Epoch Step: 500 / 819 Loss: 13.073789596557617 Tokens per Sec: 15779.033621337547
Epoch Step: 505 / 819 Loss: 21.15398597717285 Tokens per Sec: 14626.262390372243
Epoch Step: 510 / 819 Loss: 17.00996208190918 Tokens per Sec: 13996.724376201899
Epoch Step: 515 / 819 Loss: 21.33332061767578 Tokens per Sec: 14764.571415943821
Epoch Step: 520 / 819 Loss: 17.24365997314453 Tokens per Sec: 13915.098100009238
Epoch Step: 525 / 819 Loss: 17.23428726196289 Tokens per Sec: 14289.3426292834
Epoch Step: 530 / 819 Loss: 16.936800003051758 Tokens per Sec: 15516.845007727898
Epoch Step: 535 / 819 Loss: 18.124710083007812 Tokens per Sec: 13871.484680613929
Epoch Step: 540 / 819 Loss: 13.445831298828125 Tokens per Sec: 14087.706397371065
Epoch Step: 545 / 819 Loss: 19.988677978515625 Tokens per Sec: 13998.065790276025
Epoch Step: 550 / 819 Loss: 17.897388458251953 Tokens per Sec: 13911.859528099372
Epoch Step: 555 / 819 Loss: 193.94793701171875 Tokens per Sec: 13202.571547696642
Epoch Step: 560 / 819 Loss: 15.899557113647461 Tokens per Sec: 12775.5059627506
Epoch Step: 565 / 819 Loss: 14.27280330657959 Tokens per Sec: 15288.418153835011
Epoch Step: 570 / 819 Loss: 19.2117862701416 Tokens per Sec: 15189.88509385185
Epoch Step: 575 / 819 Loss: 20.169208526611328 Tokens per Sec: 13410.78258737357
Epoch Step: 580 / 819 Loss: 14.163429260253906 Tokens per Sec: 15656.105528382985
Epoch Step: 585 / 819 Loss: 12.875825881958008 Tokens per Sec: 16437.327785774876
Epoch Step: 590 / 819 Loss: 20.37752342224121 Tokens per Sec: 14831.30246228706
Epoch Step: 595 / 819 Loss: 16.687389373779297 Tokens per Sec: 12078.023786194004
Epoch Step: 600 / 819 Loss: 12.290782928466797 Tokens per Sec: 13211.766333259922
Epoch Step: 605 / 819 Loss: 101.57852172851562 Tokens per Sec: 13891.595811754869
Epoch Step: 610 / 819 Loss: 19.553115844726562 Tokens per Sec: 14651.647893935613
Epoch Step: 615 / 819 Loss: 21.87412452697754 Tokens per Sec: 12911.546949332453
Epoch Step: 620 / 819 Loss: 15.684174537658691 Tokens per Sec: 14627.543057996485
Epoch Step: 625 / 819 Loss: 17.520036697387695 Tokens per Sec: 15519.365067824661
Epoch Step: 630 / 819 Loss: 19.461280822753906 Tokens per Sec: 15424.608099244471
Epoch Step: 635 / 819 Loss: 20.819551467895508 Tokens per Sec: 14159.794337623765
Epoch Step: 640 / 819 Loss: 14.43761157989502 Tokens per Sec: 13008.747679747084
Epoch Step: 645 / 819 Loss: 265.33697509765625 Tokens per Sec: 13647.777345952934
Epoch Step: 650 / 819 Loss: 17.91435432434082 Tokens per Sec: 13769.441838473804
Epoch Step: 655 / 819 Loss: 16.292665481567383 Tokens per Sec: 14907.112284421131
Epoch Step: 660 / 819 Loss: 19.764009475708008 Tokens per Sec: 13772.23121061235
Epoch Step: 665 / 819 Loss: 18.4196720123291 Tokens per Sec: 13469.391347277919
Epoch Step: 670 / 819 Loss: 90.45294952392578 Tokens per Sec: 13070.974684976813
Epoch Step: 675 / 819 Loss: 17.182157516479492 Tokens per Sec: 14796.250770086921
Epoch Step: 680 / 819 Loss: 21.21112823486328 Tokens per Sec: 14810.626132472766
Epoch Step: 685 / 819 Loss: 19.37247085571289 Tokens per Sec: 15612.237945257422
Epoch Step: 690 / 819 Loss: 22.59553337097168 Tokens per Sec: 14493.982246512951
Epoch Step: 695 / 819 Loss: 15.741535186767578 Tokens per Sec: 13598.34706707999
Epoch Step: 700 / 819 Loss: 12.990063667297363 Tokens per Sec: 14699.863953313321
Epoch Step: 705 / 819 Loss: 20.203439712524414 Tokens per Sec: 13237.467237952207
Epoch Step: 710 / 819 Loss: 16.640527725219727 Tokens per Sec: 13794.778213333762
Epoch Step: 715 / 819 Loss: 13.6525297164917 Tokens per Sec: 14029.999727238317
Epoch Step: 720 / 819 Loss: 17.608842849731445 Tokens per Sec: 15342.056364599372
Epoch Step: 725 / 819 Loss: 16.986581802368164 Tokens per Sec: 14758.450302361467
Epoch Step: 730 / 819 Loss: 15.520479202270508 Tokens per Sec: 13891.944368327815
Epoch Step: 735 / 819 Loss: 17.538869857788086 Tokens per Sec: 13723.72459165868
Epoch Step: 740 / 819 Loss: 21.193950653076172 Tokens per Sec: 12403.288336172704
Epoch Step: 745 / 819 Loss: 19.81026268005371 Tokens per Sec: 14254.132936557946
Epoch Step: 750 / 819 Loss: 13.643880844116211 Tokens per Sec: 13504.974728542802
Epoch Step: 755 / 819 Loss: 15.85024642944336 Tokens per Sec: 14016.983502695535
Epoch Step: 760 / 819 Loss: 15.875959396362305 Tokens per Sec: 15042.746244404969
Epoch Step: 765 / 819 Loss: 21.041465759277344 Tokens per Sec: 13985.932240048915
Epoch Step: 770 / 819 Loss: 15.150671005249023 Tokens per Sec: 14995.339189681483
Epoch Step: 775 / 819 Loss: 17.45307731628418 Tokens per Sec: 14413.975460898959
Epoch Step: 780 / 819 Loss: 20.762096405029297 Tokens per Sec: 14800.57720934954
Epoch Step: 785 / 819 Loss: 15.097256660461426 Tokens per Sec: 14839.639763593163
Epoch Step: 790 / 819 Loss: 248.04745483398438 Tokens per Sec: 13919.615420720105
Epoch Step: 795 / 819 Loss: 23.691043853759766 Tokens per Sec: 14119.52996664656
Epoch Step: 800 / 819 Loss: 19.023244857788086 Tokens per Sec: 14294.330407146404
Epoch Step: 805 / 819 Loss: 16.858243942260742 Tokens per Sec: 13165.84297290936
Epoch Step: 810 / 819 Loss: 17.610177993774414 Tokens per Sec: 12210.069354514828
Epoch Step: 815 / 819 Loss: 13.819293975830078 Tokens per Sec: 13109.972825133173
Epoch ended with duration 0:04:36.566685
Train perplexity: 1.5793067975219917
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.949294
Validation perplexity: 1.7100191974678782
Epoch 32 / 1000
Epoch Step: 5 / 819 Loss: 22.341358184814453 Tokens per Sec: 15019.790718259566
Epoch Step: 10 / 819 Loss: 17.878334045410156 Tokens per Sec: 13438.359168294059
Epoch Step: 15 / 819 Loss: 18.962623596191406 Tokens per Sec: 14066.588691196008
Epoch Step: 20 / 819 Loss: 14.760497093200684 Tokens per Sec: 13907.180114532028
Epoch Step: 25 / 819 Loss: 15.075594902038574 Tokens per Sec: 14089.412123559845
Epoch Step: 30 / 819 Loss: 124.75669860839844 Tokens per Sec: 14703.4696313764
Epoch Step: 35 / 819 Loss: 20.03155517578125 Tokens per Sec: 13662.658063581788
Epoch Step: 40 / 819 Loss: 14.370153427124023 Tokens per Sec: 13459.221573606088
Epoch Step: 45 / 819 Loss: 20.141145706176758 Tokens per Sec: 13397.964014132183
Epoch Step: 50 / 819 Loss: 17.509469985961914 Tokens per Sec: 13105.013125734247
Epoch Step: 55 / 819 Loss: 14.226688385009766 Tokens per Sec: 12844.48653378582
Epoch Step: 60 / 819 Loss: 22.60224151611328 Tokens per Sec: 14010.753139525723
Epoch Step: 65 / 819 Loss: 179.91934204101562 Tokens per Sec: 14571.243164295705
Epoch Step: 70 / 819 Loss: 19.971498489379883 Tokens per Sec: 14295.26555312554
Epoch Step: 75 / 819 Loss: 13.907706260681152 Tokens per Sec: 13141.76117692959
Epoch Step: 80 / 819 Loss: 12.735608100891113 Tokens per Sec: 13844.62597507648
Epoch Step: 85 / 819 Loss: 20.93562126159668 Tokens per Sec: 13462.313302416402
Epoch Step: 90 / 819 Loss: 17.978639602661133 Tokens per Sec: 13707.4284396879
Epoch Step: 95 / 819 Loss: 18.44198989868164 Tokens per Sec: 15342.145731651413
Epoch Step: 100 / 819 Loss: 16.191041946411133 Tokens per Sec: 14746.115781744837
Epoch Step: 105 / 819 Loss: 16.887332916259766 Tokens per Sec: 16776.20133697043
Epoch Step: 110 / 819 Loss: 18.54640007019043 Tokens per Sec: 14601.389167888896
Epoch Step: 115 / 819 Loss: 20.015958786010742 Tokens per Sec: 15046.593168401892
Epoch Step: 120 / 819 Loss: 21.33207130432129 Tokens per Sec: 13496.468841812277
Epoch Step: 125 / 819 Loss: 14.258630752563477 Tokens per Sec: 13239.927245604084
Epoch Step: 130 / 819 Loss: 16.910541534423828 Tokens per Sec: 14680.201295090672
Epoch Step: 135 / 819 Loss: 15.635965347290039 Tokens per Sec: 13336.164814002188
Epoch Step: 140 / 819 Loss: 20.104206085205078 Tokens per Sec: 14950.047332251968
Epoch Step: 145 / 819 Loss: 12.409714698791504 Tokens per Sec: 15920.608665943431
Epoch Step: 150 / 819 Loss: 16.431148529052734 Tokens per Sec: 14011.452197304276
Epoch Step: 155 / 819 Loss: 17.691070556640625 Tokens per Sec: 12859.640608381224
Epoch Step: 160 / 819 Loss: 20.68397331237793 Tokens per Sec: 14582.019341783254
Epoch Step: 165 / 819 Loss: 17.336965560913086 Tokens per Sec: 14833.247608360605
Epoch Step: 170 / 819 Loss: 18.600236892700195 Tokens per Sec: 13954.873950114274
Epoch Step: 175 / 819 Loss: 14.853550910949707 Tokens per Sec: 13964.45047948946
Epoch Step: 180 / 819 Loss: 16.009132385253906 Tokens per Sec: 14871.450365971103
Epoch Step: 185 / 819 Loss: 18.445955276489258 Tokens per Sec: 15724.795048889368
Epoch Step: 190 / 819 Loss: 16.742961883544922 Tokens per Sec: 16565.14364502434
Epoch Step: 195 / 819 Loss: 18.123554229736328 Tokens per Sec: 15244.876346927793
Epoch Step: 200 / 819 Loss: 14.69057559967041 Tokens per Sec: 12826.610880065775
Epoch Step: 205 / 819 Loss: 11.172982215881348 Tokens per Sec: 13760.454392147123
Epoch Step: 210 / 819 Loss: 312.40142822265625 Tokens per Sec: 15035.681251204258
Epoch Step: 215 / 819 Loss: 22.01434898376465 Tokens per Sec: 13579.244716928519
Epoch Step: 220 / 819 Loss: 225.6437530517578 Tokens per Sec: 12783.634713969106
Epoch Step: 225 / 819 Loss: 15.972455024719238 Tokens per Sec: 14236.737743011146
Epoch Step: 230 / 819 Loss: 21.649988174438477 Tokens per Sec: 16374.466479763394
Epoch Step: 235 / 819 Loss: 17.955381393432617 Tokens per Sec: 13705.123426059232
Epoch Step: 240 / 819 Loss: 19.38309669494629 Tokens per Sec: 13208.150942026396
Epoch Step: 245 / 819 Loss: 181.30726623535156 Tokens per Sec: 14180.855675301773
Epoch Step: 250 / 819 Loss: 16.161548614501953 Tokens per Sec: 14487.853005782365
Epoch Step: 255 / 819 Loss: 19.706594467163086 Tokens per Sec: 14479.227406352311
Epoch Step: 260 / 819 Loss: 17.64634895324707 Tokens per Sec: 14778.00272264136
Epoch Step: 265 / 819 Loss: 156.8285675048828 Tokens per Sec: 13265.27233810287
Epoch Step: 270 / 819 Loss: 22.15284538269043 Tokens per Sec: 13965.500452825005
Epoch Step: 275 / 819 Loss: 19.87613296508789 Tokens per Sec: 13725.154396580478
Epoch Step: 280 / 819 Loss: 16.18268394470215 Tokens per Sec: 13792.760110957432
Epoch Step: 285 / 819 Loss: 19.238805770874023 Tokens per Sec: 14199.119792576035
Epoch Step: 290 / 819 Loss: 15.766136169433594 Tokens per Sec: 12951.310451593276
Epoch Step: 295 / 819 Loss: 23.905914306640625 Tokens per Sec: 14738.122667562819
Epoch Step: 300 / 819 Loss: 262.970458984375 Tokens per Sec: 13721.11074652229
Epoch Step: 305 / 819 Loss: 16.718467712402344 Tokens per Sec: 13326.768095677668
Epoch Step: 310 / 819 Loss: 22.468570709228516 Tokens per Sec: 14285.389259605961
Epoch Step: 315 / 819 Loss: 18.84550666809082 Tokens per Sec: 13553.521756846018
Epoch Step: 320 / 819 Loss: 21.41111946105957 Tokens per Sec: 14703.441630622032
Epoch Step: 325 / 819 Loss: 20.534589767456055 Tokens per Sec: 13835.612568491388
Epoch Step: 330 / 819 Loss: 18.226173400878906 Tokens per Sec: 14818.187170719528
Epoch Step: 335 / 819 Loss: 200.6397247314453 Tokens per Sec: 13486.93789889246
Epoch Step: 340 / 819 Loss: 15.166122436523438 Tokens per Sec: 13791.062028182507
Epoch Step: 345 / 819 Loss: 21.930988311767578 Tokens per Sec: 13809.925619907297
Epoch Step: 350 / 819 Loss: 143.7917938232422 Tokens per Sec: 13626.31552826237
Epoch Step: 355 / 819 Loss: 16.11858367919922 Tokens per Sec: 14898.936085526584
Epoch Step: 360 / 819 Loss: 14.714827537536621 Tokens per Sec: 13851.36196431888
Epoch Step: 365 / 819 Loss: 18.7799072265625 Tokens per Sec: 12853.926707399078
Epoch Step: 370 / 819 Loss: 14.972163200378418 Tokens per Sec: 14270.756446896368
Epoch Step: 375 / 819 Loss: 19.2158260345459 Tokens per Sec: 12889.160483233998
Epoch Step: 380 / 819 Loss: 11.105972290039062 Tokens per Sec: 13644.512822173469
Epoch Step: 385 / 819 Loss: 18.023815155029297 Tokens per Sec: 15462.447115613157
Epoch Step: 390 / 819 Loss: 18.10153579711914 Tokens per Sec: 13092.561389995919
Epoch Step: 395 / 819 Loss: 16.20807647705078 Tokens per Sec: 12869.97492652299
Epoch Step: 400 / 819 Loss: 12.101326942443848 Tokens per Sec: 13789.015371665408
Epoch Step: 405 / 819 Loss: 13.210508346557617 Tokens per Sec: 15145.112060966941
Epoch Step: 410 / 819 Loss: 20.167863845825195 Tokens per Sec: 12972.235798681912
Epoch Step: 415 / 819 Loss: 19.998592376708984 Tokens per Sec: 14607.816282877644
Epoch Step: 420 / 819 Loss: 119.0107421875 Tokens per Sec: 12994.534465593066
Epoch Step: 425 / 819 Loss: 14.891730308532715 Tokens per Sec: 13385.621529351398
Epoch Step: 430 / 819 Loss: 22.087432861328125 Tokens per Sec: 14833.149228028402
Epoch Step: 435 / 819 Loss: 14.264899253845215 Tokens per Sec: 15776.806087387382
Epoch Step: 440 / 819 Loss: 17.00426483154297 Tokens per Sec: 13597.4783071987
Epoch Step: 445 / 819 Loss: 244.21487426757812 Tokens per Sec: 14055.596394926763
Epoch Step: 450 / 819 Loss: 18.010208129882812 Tokens per Sec: 13918.789226833554
Epoch Step: 455 / 819 Loss: 13.027032852172852 Tokens per Sec: 13860.160963264942
Epoch Step: 460 / 819 Loss: 14.081125259399414 Tokens per Sec: 12503.59918568729
Epoch Step: 465 / 819 Loss: 16.475465774536133 Tokens per Sec: 14104.779725126384
Epoch Step: 470 / 819 Loss: 15.791112899780273 Tokens per Sec: 15156.010052785023
Epoch Step: 475 / 819 Loss: 18.34624671936035 Tokens per Sec: 14238.178541244932
Epoch Step: 480 / 819 Loss: 21.037338256835938 Tokens per Sec: 13904.096548360507
Epoch Step: 485 / 819 Loss: 178.87977600097656 Tokens per Sec: 13312.85451358877
Epoch Step: 490 / 819 Loss: 134.22923278808594 Tokens per Sec: 13486.182731860476
Epoch Step: 495 / 819 Loss: 23.041500091552734 Tokens per Sec: 14675.23806908304
Epoch Step: 500 / 819 Loss: 18.723651885986328 Tokens per Sec: 15239.501172058133
Epoch Step: 505 / 819 Loss: 16.923826217651367 Tokens per Sec: 14014.737158448337
Epoch Step: 510 / 819 Loss: 20.207477569580078 Tokens per Sec: 16278.233794243213
Epoch Step: 515 / 819 Loss: 20.909549713134766 Tokens per Sec: 13526.342825593507
Epoch Step: 520 / 819 Loss: 23.04959487915039 Tokens per Sec: 13422.650783556408
Epoch Step: 525 / 819 Loss: 12.443622589111328 Tokens per Sec: 13185.309746198036
Epoch Step: 530 / 819 Loss: 18.686817169189453 Tokens per Sec: 13744.754839934829
Epoch Step: 535 / 819 Loss: 17.463918685913086 Tokens per Sec: 13600.50337236816
Epoch Step: 540 / 819 Loss: 15.503959655761719 Tokens per Sec: 12943.487431944
Epoch Step: 545 / 819 Loss: 226.888916015625 Tokens per Sec: 14115.9388977239
Epoch Step: 550 / 819 Loss: 18.4337158203125 Tokens per Sec: 14044.47172410651
Epoch Step: 555 / 819 Loss: 18.399654388427734 Tokens per Sec: 13897.112605217182
Epoch Step: 560 / 819 Loss: 18.21601104736328 Tokens per Sec: 15364.069596906402
Epoch Step: 565 / 819 Loss: 15.086675643920898 Tokens per Sec: 12836.355153628041
Epoch Step: 570 / 819 Loss: 17.230173110961914 Tokens per Sec: 14877.469513783459
Epoch Step: 575 / 819 Loss: 19.482755661010742 Tokens per Sec: 14151.74502751339
Epoch Step: 580 / 819 Loss: 200.33908081054688 Tokens per Sec: 14448.615405964762
Epoch Step: 585 / 819 Loss: 20.201045989990234 Tokens per Sec: 16613.47352539877
Epoch Step: 590 / 819 Loss: 20.103572845458984 Tokens per Sec: 13199.114366349466
Epoch Step: 595 / 819 Loss: 17.269765853881836 Tokens per Sec: 13411.28361878765
Epoch Step: 600 / 819 Loss: 18.708232879638672 Tokens per Sec: 15542.03323883165
Epoch Step: 605 / 819 Loss: 16.925399780273438 Tokens per Sec: 13486.838875031644
Epoch Step: 610 / 819 Loss: 14.50784969329834 Tokens per Sec: 13391.00796972671
Epoch Step: 615 / 819 Loss: 22.313486099243164 Tokens per Sec: 14017.919556622306
Epoch Step: 620 / 819 Loss: 13.68924331665039 Tokens per Sec: 12540.069693759677
Epoch Step: 625 / 819 Loss: 177.76942443847656 Tokens per Sec: 13463.32740652379
Epoch Step: 630 / 819 Loss: 23.237783432006836 Tokens per Sec: 14063.443702161823
Epoch Step: 635 / 819 Loss: 22.42277717590332 Tokens per Sec: 13300.774829107027
Epoch Step: 640 / 819 Loss: 17.892230987548828 Tokens per Sec: 15912.772789084675
Epoch Step: 645 / 819 Loss: 14.514949798583984 Tokens per Sec: 15272.176910923166
Epoch Step: 650 / 819 Loss: 21.042953491210938 Tokens per Sec: 14163.448499918273
Epoch Step: 655 / 819 Loss: 24.87541389465332 Tokens per Sec: 13140.746999295601
Epoch Step: 660 / 819 Loss: 192.47691345214844 Tokens per Sec: 14190.76743358971
Epoch Step: 665 / 819 Loss: 21.19989585876465 Tokens per Sec: 13351.13028140045
Epoch Step: 670 / 819 Loss: 17.403440475463867 Tokens per Sec: 14111.84962802351
Epoch Step: 675 / 819 Loss: 15.40670394897461 Tokens per Sec: 13879.189165096992
Epoch Step: 680 / 819 Loss: 19.403331756591797 Tokens per Sec: 12449.523341710224
Epoch Step: 685 / 819 Loss: 203.5780487060547 Tokens per Sec: 13748.54349819118
Epoch Step: 690 / 819 Loss: 19.693933486938477 Tokens per Sec: 15573.889958279
Epoch Step: 695 / 819 Loss: 16.72018814086914 Tokens per Sec: 14928.852041099908
Epoch Step: 700 / 819 Loss: 25.851184844970703 Tokens per Sec: 13196.40867299434
Epoch Step: 705 / 819 Loss: 16.7843017578125 Tokens per Sec: 12909.549395634705
Epoch Step: 710 / 819 Loss: 13.083712577819824 Tokens per Sec: 13532.354478024545
Epoch Step: 715 / 819 Loss: 125.46614837646484 Tokens per Sec: 12923.806001993324
Epoch Step: 720 / 819 Loss: 19.82362174987793 Tokens per Sec: 14233.617531446767
Epoch Step: 725 / 819 Loss: 12.781889915466309 Tokens per Sec: 13473.689354686696
Epoch Step: 730 / 819 Loss: 210.50149536132812 Tokens per Sec: 14594.43732360543
Epoch Step: 735 / 819 Loss: 23.356481552124023 Tokens per Sec: 13359.279980559393
Epoch Step: 740 / 819 Loss: 19.663860321044922 Tokens per Sec: 13831.562471809713
Epoch Step: 745 / 819 Loss: 18.21735382080078 Tokens per Sec: 14042.936400618077
Epoch Step: 750 / 819 Loss: 26.020763397216797 Tokens per Sec: 13866.783946842052
Epoch Step: 755 / 819 Loss: 19.67801284790039 Tokens per Sec: 12992.541376566443
Epoch Step: 760 / 819 Loss: 15.113510131835938 Tokens per Sec: 14583.431116218933
Epoch Step: 765 / 819 Loss: 19.31824493408203 Tokens per Sec: 13971.02843153336
Epoch Step: 770 / 819 Loss: 14.970460891723633 Tokens per Sec: 14952.446885839847
Epoch Step: 775 / 819 Loss: 18.335838317871094 Tokens per Sec: 15190.426775551783
Epoch Step: 780 / 819 Loss: 18.564863204956055 Tokens per Sec: 14420.325324826621
Epoch Step: 785 / 819 Loss: 17.930112838745117 Tokens per Sec: 14548.012388200012
Epoch Step: 790 / 819 Loss: 22.17070198059082 Tokens per Sec: 15020.280295627783
Epoch Step: 795 / 819 Loss: 20.75271224975586 Tokens per Sec: 12975.182066096508
Epoch Step: 800 / 819 Loss: 19.395275115966797 Tokens per Sec: 14341.446754095205
Epoch Step: 805 / 819 Loss: 17.175565719604492 Tokens per Sec: 13832.015950392795
Epoch Step: 810 / 819 Loss: 18.56298065185547 Tokens per Sec: 13969.16375067195
Epoch Step: 815 / 819 Loss: 19.990671157836914 Tokens per Sec: 11697.346836501145
Epoch ended with duration 0:04:36.965249
Train perplexity: 1.6191693889716836
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.274033
Validation perplexity: 1.4810484133500958
Epoch 33 / 1000
Epoch Step: 5 / 819 Loss: 16.674358367919922 Tokens per Sec: 13637.85254653423
Epoch Step: 10 / 819 Loss: 17.55017852783203 Tokens per Sec: 12674.5535775518
Epoch Step: 15 / 819 Loss: 12.151766777038574 Tokens per Sec: 14255.772887678359
Epoch Step: 20 / 819 Loss: 13.816636085510254 Tokens per Sec: 13013.658888628348
Epoch Step: 25 / 819 Loss: 16.795461654663086 Tokens per Sec: 15101.822885020172
Epoch Step: 30 / 819 Loss: 149.77389526367188 Tokens per Sec: 13418.082466667061
Epoch Step: 35 / 819 Loss: 12.396944999694824 Tokens per Sec: 15070.613945968278
Epoch Step: 40 / 819 Loss: 16.851032257080078 Tokens per Sec: 13878.396111759886
Epoch Step: 45 / 819 Loss: 16.076946258544922 Tokens per Sec: 15410.933772061911
Epoch Step: 50 / 819 Loss: 13.77295207977295 Tokens per Sec: 15757.470588937767
Epoch Step: 55 / 819 Loss: 16.90792465209961 Tokens per Sec: 13667.738653044933
Epoch Step: 60 / 819 Loss: 18.498451232910156 Tokens per Sec: 12944.87210732637
Epoch Step: 65 / 819 Loss: 18.422985076904297 Tokens per Sec: 13305.843224063003
Epoch Step: 70 / 819 Loss: 108.97390747070312 Tokens per Sec: 14357.708500874209
Epoch Step: 75 / 819 Loss: 19.626562118530273 Tokens per Sec: 13380.500548539327
Epoch Step: 80 / 819 Loss: 22.54941749572754 Tokens per Sec: 14372.327129747753
Epoch Step: 85 / 819 Loss: 19.908437728881836 Tokens per Sec: 15020.858626056523
Epoch Step: 90 / 819 Loss: 18.56380271911621 Tokens per Sec: 13762.189975590914
Epoch Step: 95 / 819 Loss: 13.622350692749023 Tokens per Sec: 14527.83322033958
Epoch Step: 100 / 819 Loss: 190.7019500732422 Tokens per Sec: 13719.060132813282
Epoch Step: 105 / 819 Loss: 17.534229278564453 Tokens per Sec: 13474.415749539492
Epoch Step: 110 / 819 Loss: 16.059329986572266 Tokens per Sec: 13937.256235410307
Epoch Step: 115 / 819 Loss: 18.91951560974121 Tokens per Sec: 14723.64032641477
Epoch Step: 120 / 819 Loss: 168.8440399169922 Tokens per Sec: 14237.76584221473
Epoch Step: 125 / 819 Loss: 20.533893585205078 Tokens per Sec: 13401.478917655304
Epoch Step: 130 / 819 Loss: 20.757564544677734 Tokens per Sec: 14415.611865219333
Epoch Step: 135 / 819 Loss: 13.616354942321777 Tokens per Sec: 12085.216526835753
Epoch Step: 140 / 819 Loss: 13.243477821350098 Tokens per Sec: 14263.754321931092
Epoch Step: 145 / 819 Loss: 22.121788024902344 Tokens per Sec: 12085.786534580973
Epoch Step: 150 / 819 Loss: 16.40338897705078 Tokens per Sec: 14400.969720080124
Epoch Step: 155 / 819 Loss: 17.14642906188965 Tokens per Sec: 14193.33113868931
Epoch Step: 160 / 819 Loss: 18.884746551513672 Tokens per Sec: 12400.805862069836
Epoch Step: 165 / 819 Loss: 18.806026458740234 Tokens per Sec: 14774.012776774636
Epoch Step: 170 / 819 Loss: 14.84626293182373 Tokens per Sec: 13539.03107539553
Epoch Step: 175 / 819 Loss: 14.547712326049805 Tokens per Sec: 15611.562526421156
Epoch Step: 180 / 819 Loss: 18.751710891723633 Tokens per Sec: 13795.628080885204
Epoch Step: 185 / 819 Loss: 17.966360092163086 Tokens per Sec: 16548.735995931424
Epoch Step: 190 / 819 Loss: 19.657915115356445 Tokens per Sec: 14037.874804686502
Epoch Step: 195 / 819 Loss: 18.54104232788086 Tokens per Sec: 13068.633499030537
Epoch Step: 200 / 819 Loss: 19.303377151489258 Tokens per Sec: 12591.818408142344
Epoch Step: 205 / 819 Loss: 15.370640754699707 Tokens per Sec: 12161.1088756694
Epoch Step: 210 / 819 Loss: 16.43299674987793 Tokens per Sec: 13580.79186248561
Epoch Step: 215 / 819 Loss: 20.752470016479492 Tokens per Sec: 14642.153936271923
Epoch Step: 220 / 819 Loss: 16.655040740966797 Tokens per Sec: 15304.498611406138
Epoch Step: 225 / 819 Loss: 19.65644073486328 Tokens per Sec: 13790.598920941666
Epoch Step: 230 / 819 Loss: 18.678543090820312 Tokens per Sec: 15270.662477814078
Epoch Step: 235 / 819 Loss: 19.536399841308594 Tokens per Sec: 15910.036028596438
Epoch Step: 240 / 819 Loss: 19.356708526611328 Tokens per Sec: 13275.475091711094
Epoch Step: 245 / 819 Loss: 14.87827205657959 Tokens per Sec: 13470.273425765918
Epoch Step: 250 / 819 Loss: 250.61155700683594 Tokens per Sec: 14866.347097849177
Epoch Step: 255 / 819 Loss: 17.906509399414062 Tokens per Sec: 14381.224430054834
Epoch Step: 260 / 819 Loss: 20.264066696166992 Tokens per Sec: 15170.550052805109
Epoch Step: 265 / 819 Loss: 19.84000587463379 Tokens per Sec: 14571.675889265165
Epoch Step: 270 / 819 Loss: 175.14646911621094 Tokens per Sec: 13349.992517517727
Epoch Step: 275 / 819 Loss: 17.99395751953125 Tokens per Sec: 14423.13112330612
Epoch Step: 280 / 819 Loss: 22.129959106445312 Tokens per Sec: 14522.760713239019
Epoch Step: 285 / 819 Loss: 17.76333999633789 Tokens per Sec: 13785.030568521212
Epoch Step: 290 / 819 Loss: 15.852239608764648 Tokens per Sec: 14624.99299084023
Epoch Step: 295 / 819 Loss: 15.33860969543457 Tokens per Sec: 16251.937741102056
Epoch Step: 300 / 819 Loss: 19.09749412536621 Tokens per Sec: 14609.341163476496
Epoch Step: 305 / 819 Loss: 21.67517852783203 Tokens per Sec: 14752.593251151942
Epoch Step: 310 / 819 Loss: 16.314577102661133 Tokens per Sec: 15352.435465761986
Epoch Step: 315 / 819 Loss: 21.102462768554688 Tokens per Sec: 13323.649137269127
Epoch Step: 320 / 819 Loss: 21.319860458374023 Tokens per Sec: 14449.988594231736
Epoch Step: 325 / 819 Loss: 15.48059368133545 Tokens per Sec: 13038.829546718973
Epoch Step: 330 / 819 Loss: 19.638389587402344 Tokens per Sec: 14070.485151494202
Epoch Step: 335 / 819 Loss: 15.08254337310791 Tokens per Sec: 14501.012874419293
Epoch Step: 340 / 819 Loss: 16.959230422973633 Tokens per Sec: 13819.783600714056
Epoch Step: 345 / 819 Loss: 19.77408790588379 Tokens per Sec: 14627.704133055728
Epoch Step: 350 / 819 Loss: 20.769041061401367 Tokens per Sec: 13837.968781039839
Epoch Step: 355 / 819 Loss: 235.19273376464844 Tokens per Sec: 14228.23217663562
Epoch Step: 360 / 819 Loss: 19.401142120361328 Tokens per Sec: 15421.722620319095
Epoch Step: 365 / 819 Loss: 17.40660858154297 Tokens per Sec: 13240.021192470249
Epoch Step: 370 / 819 Loss: 16.778322219848633 Tokens per Sec: 14999.61909093988
Epoch Step: 375 / 819 Loss: 18.21465301513672 Tokens per Sec: 14905.971570512682
Epoch Step: 380 / 819 Loss: 13.020977973937988 Tokens per Sec: 16228.257020991558
Epoch Step: 385 / 819 Loss: 16.43035316467285 Tokens per Sec: 15116.721676528256
Epoch Step: 390 / 819 Loss: 14.268758773803711 Tokens per Sec: 12880.371096410718
Epoch Step: 395 / 819 Loss: 17.143733978271484 Tokens per Sec: 12750.555996063655
Epoch Step: 400 / 819 Loss: 17.282236099243164 Tokens per Sec: 14951.240781044979
Epoch Step: 405 / 819 Loss: 14.453996658325195 Tokens per Sec: 14913.898602152893
Epoch Step: 410 / 819 Loss: 23.719438552856445 Tokens per Sec: 12480.499346232804
Epoch Step: 415 / 819 Loss: 17.155996322631836 Tokens per Sec: 15406.960795810062
Epoch Step: 420 / 819 Loss: 17.555946350097656 Tokens per Sec: 13746.286237006476
Epoch Step: 425 / 819 Loss: 17.56328773498535 Tokens per Sec: 16641.562514942594
Epoch Step: 430 / 819 Loss: 12.931488990783691 Tokens per Sec: 12959.563256846897
Epoch Step: 435 / 819 Loss: 20.162918090820312 Tokens per Sec: 13575.643378904448
Epoch Step: 440 / 819 Loss: 20.163375854492188 Tokens per Sec: 14769.098942980263
Epoch Step: 445 / 819 Loss: 12.326945304870605 Tokens per Sec: 13036.473436225468
Epoch Step: 450 / 819 Loss: 21.5079345703125 Tokens per Sec: 14281.054193288963
Epoch Step: 455 / 819 Loss: 19.87984275817871 Tokens per Sec: 14288.072269155324
Epoch Step: 460 / 819 Loss: 21.225156784057617 Tokens per Sec: 14640.616468351172
Epoch Step: 465 / 819 Loss: 18.376049041748047 Tokens per Sec: 14227.988550517763
Epoch Step: 470 / 819 Loss: 16.991111755371094 Tokens per Sec: 15153.585389034983
Epoch Step: 475 / 819 Loss: 17.827409744262695 Tokens per Sec: 14385.520134532499
Epoch Step: 480 / 819 Loss: 17.372304916381836 Tokens per Sec: 13428.292341877788
Epoch Step: 485 / 819 Loss: 17.32256317138672 Tokens per Sec: 14346.083046506346
Epoch Step: 490 / 819 Loss: 15.399983406066895 Tokens per Sec: 13916.263924822391
Epoch Step: 495 / 819 Loss: 17.270790100097656 Tokens per Sec: 14759.655828677915
Epoch Step: 500 / 819 Loss: 18.878314971923828 Tokens per Sec: 13946.633421478182
Epoch Step: 505 / 819 Loss: 192.8057098388672 Tokens per Sec: 12198.697584181227
Epoch Step: 510 / 819 Loss: 21.030441284179688 Tokens per Sec: 12985.10877799008
Epoch Step: 515 / 819 Loss: 16.92766571044922 Tokens per Sec: 14545.75129830742
Epoch Step: 520 / 819 Loss: 223.93746948242188 Tokens per Sec: 15633.202071018219
Epoch Step: 525 / 819 Loss: 18.657100677490234 Tokens per Sec: 16941.46227977474
Epoch Step: 530 / 819 Loss: 22.137828826904297 Tokens per Sec: 13682.550117970775
Epoch Step: 535 / 819 Loss: 16.54610252380371 Tokens per Sec: 15001.59020581931
Epoch Step: 540 / 819 Loss: 206.66952514648438 Tokens per Sec: 13152.360562929409
Epoch Step: 545 / 819 Loss: 19.327489852905273 Tokens per Sec: 16872.249614973298
Epoch Step: 550 / 819 Loss: 19.022369384765625 Tokens per Sec: 14097.288350772127
Epoch Step: 555 / 819 Loss: 16.79231834411621 Tokens per Sec: 12469.130320077787
Epoch Step: 560 / 819 Loss: 19.931734085083008 Tokens per Sec: 13106.592537049137
Epoch Step: 565 / 819 Loss: 17.79430389404297 Tokens per Sec: 14077.732704963275
Epoch Step: 570 / 819 Loss: 20.189390182495117 Tokens per Sec: 15287.392883865476
Epoch Step: 575 / 819 Loss: 18.202882766723633 Tokens per Sec: 14656.483675254234
Epoch Step: 580 / 819 Loss: 18.137981414794922 Tokens per Sec: 13833.492842070102
Epoch Step: 585 / 819 Loss: 14.528306007385254 Tokens per Sec: 13081.724486147488
Epoch Step: 590 / 819 Loss: 18.73394775390625 Tokens per Sec: 14929.287350598108
Epoch Step: 595 / 819 Loss: 19.095306396484375 Tokens per Sec: 15709.791929433844
Epoch Step: 600 / 819 Loss: 14.915367126464844 Tokens per Sec: 14181.11727034014
Epoch Step: 605 / 819 Loss: 15.625717163085938 Tokens per Sec: 14136.69664526852
Epoch Step: 610 / 819 Loss: 16.462608337402344 Tokens per Sec: 14332.337950614006
Epoch Step: 615 / 819 Loss: 21.387008666992188 Tokens per Sec: 13212.002169022042
Epoch Step: 620 / 819 Loss: 19.68390655517578 Tokens per Sec: 15599.30584395343
Epoch Step: 625 / 819 Loss: 18.117366790771484 Tokens per Sec: 14229.028519389829
Epoch Step: 630 / 819 Loss: 17.39314079284668 Tokens per Sec: 14550.79638002673
Epoch Step: 635 / 819 Loss: 20.51964569091797 Tokens per Sec: 13232.727270858793
Epoch Step: 640 / 819 Loss: 14.281086921691895 Tokens per Sec: 14248.509452199318
Epoch Step: 645 / 819 Loss: 18.76121711730957 Tokens per Sec: 13597.529247187498
Epoch Step: 650 / 819 Loss: 14.648538589477539 Tokens per Sec: 13281.11162985896
Epoch Step: 655 / 819 Loss: 17.647197723388672 Tokens per Sec: 14902.581456173744
Epoch Step: 660 / 819 Loss: 20.657649993896484 Tokens per Sec: 12550.798646227871
Epoch Step: 665 / 819 Loss: 18.518159866333008 Tokens per Sec: 14579.605362280288
Epoch Step: 670 / 819 Loss: 17.98613929748535 Tokens per Sec: 15102.577752122545
Epoch Step: 675 / 819 Loss: 19.596675872802734 Tokens per Sec: 14228.740958487542
Epoch Step: 680 / 819 Loss: 139.80715942382812 Tokens per Sec: 13891.964955953614
Epoch Step: 685 / 819 Loss: 16.773496627807617 Tokens per Sec: 13776.80443024292
Epoch Step: 690 / 819 Loss: 14.633803367614746 Tokens per Sec: 16559.729613776384
Epoch Step: 695 / 819 Loss: 16.629308700561523 Tokens per Sec: 14791.81286531949
Epoch Step: 700 / 819 Loss: 16.507631301879883 Tokens per Sec: 13776.964419139358
Epoch Step: 705 / 819 Loss: 17.44729995727539 Tokens per Sec: 14340.63289374904
Epoch Step: 710 / 819 Loss: 15.550293922424316 Tokens per Sec: 15741.022885345326
Epoch Step: 715 / 819 Loss: 20.897525787353516 Tokens per Sec: 17326.21443571114
Epoch Step: 720 / 819 Loss: 14.441326141357422 Tokens per Sec: 14093.839386900028
Epoch Step: 725 / 819 Loss: 233.1864013671875 Tokens per Sec: 15267.216089463484
Epoch Step: 730 / 819 Loss: 15.243400573730469 Tokens per Sec: 13898.849533804932
Epoch Step: 735 / 819 Loss: 17.710237503051758 Tokens per Sec: 12701.819817676847
Epoch Step: 740 / 819 Loss: 228.9499969482422 Tokens per Sec: 16418.063724418207
Epoch Step: 745 / 819 Loss: 25.031034469604492 Tokens per Sec: 13013.737748941756
Epoch Step: 750 / 819 Loss: 17.985462188720703 Tokens per Sec: 13786.553486083147
Epoch Step: 755 / 819 Loss: 22.215103149414062 Tokens per Sec: 13143.089316206431
Epoch Step: 760 / 819 Loss: 15.616652488708496 Tokens per Sec: 13835.606545635606
Epoch Step: 765 / 819 Loss: 149.4749755859375 Tokens per Sec: 15033.268019372932
Epoch Step: 770 / 819 Loss: 15.897144317626953 Tokens per Sec: 14355.791716701777
Epoch Step: 775 / 819 Loss: 21.653112411499023 Tokens per Sec: 13044.932102829014
Epoch Step: 780 / 819 Loss: 13.57512378692627 Tokens per Sec: 14735.398949795119
Epoch Step: 785 / 819 Loss: 17.812862396240234 Tokens per Sec: 12251.353614733038
Epoch Step: 790 / 819 Loss: 93.27638244628906 Tokens per Sec: 13828.288539577554
Epoch Step: 795 / 819 Loss: 121.48603820800781 Tokens per Sec: 14077.090535403417
Epoch Step: 800 / 819 Loss: 19.025741577148438 Tokens per Sec: 14777.510210744264
Epoch Step: 805 / 819 Loss: 20.048946380615234 Tokens per Sec: 12963.28365635539
Epoch Step: 810 / 819 Loss: 16.262598037719727 Tokens per Sec: 13808.583617634731
Epoch Step: 815 / 819 Loss: 18.397369384765625 Tokens per Sec: 12289.972090641908
Epoch ended with duration 0:04:34.471712
Train perplexity: 1.5920072515368597
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.006060
Validation perplexity: 1.6101716417000023
Epoch 34 / 1000
Epoch Step: 5 / 819 Loss: 20.494312286376953 Tokens per Sec: 12761.053128303076
Epoch Step: 10 / 819 Loss: 17.314701080322266 Tokens per Sec: 13682.526328523692
Epoch Step: 15 / 819 Loss: 19.332237243652344 Tokens per Sec: 13280.926315556992
Epoch Step: 20 / 819 Loss: 12.2108736038208 Tokens per Sec: 13975.81465020242
Epoch Step: 25 / 819 Loss: 14.081235885620117 Tokens per Sec: 14360.919809604036
Epoch Step: 30 / 819 Loss: 21.53939437866211 Tokens per Sec: 14184.109794171223
Epoch Step: 35 / 819 Loss: 16.715648651123047 Tokens per Sec: 13606.553539023453
Epoch Step: 40 / 819 Loss: 15.991904258728027 Tokens per Sec: 13868.034183486772
Epoch Step: 45 / 819 Loss: 11.222641944885254 Tokens per Sec: 16459.21582230525
Epoch Step: 50 / 819 Loss: 17.673805236816406 Tokens per Sec: 14270.241730107806
Epoch Step: 55 / 819 Loss: 25.836151123046875 Tokens per Sec: 13622.448887252436
Epoch Step: 60 / 819 Loss: 22.140256881713867 Tokens per Sec: 16077.328463110258
Epoch Step: 65 / 819 Loss: 18.935131072998047 Tokens per Sec: 13792.528829371899
Epoch Step: 70 / 819 Loss: 21.11232566833496 Tokens per Sec: 12611.056208787115
Epoch Step: 75 / 819 Loss: 19.761884689331055 Tokens per Sec: 14412.326500214906
Epoch Step: 80 / 819 Loss: 18.563095092773438 Tokens per Sec: 12899.340749960713
Epoch Step: 85 / 819 Loss: 18.592742919921875 Tokens per Sec: 14031.625612295551
Epoch Step: 90 / 819 Loss: 15.976405143737793 Tokens per Sec: 14757.368971788623
Epoch Step: 95 / 819 Loss: 20.218868255615234 Tokens per Sec: 14272.348951123102
Epoch Step: 100 / 819 Loss: 12.41769027709961 Tokens per Sec: 15322.908751624114
Epoch Step: 105 / 819 Loss: 14.202797889709473 Tokens per Sec: 14303.632975005274
Epoch Step: 110 / 819 Loss: 22.684816360473633 Tokens per Sec: 13968.770365056229
Epoch Step: 115 / 819 Loss: 12.493280410766602 Tokens per Sec: 14257.621000032166
Epoch Step: 120 / 819 Loss: 17.457258224487305 Tokens per Sec: 13989.265273088939
Epoch Step: 125 / 819 Loss: 20.477949142456055 Tokens per Sec: 13151.115139351723
Epoch Step: 130 / 819 Loss: 22.489965438842773 Tokens per Sec: 15033.979708745797
Epoch Step: 135 / 819 Loss: 18.632532119750977 Tokens per Sec: 14080.295791097536
Epoch Step: 140 / 819 Loss: 24.128372192382812 Tokens per Sec: 15012.086706486572
Epoch Step: 145 / 819 Loss: 22.307531356811523 Tokens per Sec: 14483.64127714299
Epoch Step: 150 / 819 Loss: 17.20237922668457 Tokens per Sec: 13638.938353735532
Epoch Step: 155 / 819 Loss: 22.03917694091797 Tokens per Sec: 15179.859462941868
Epoch Step: 160 / 819 Loss: 220.43524169921875 Tokens per Sec: 13453.719025786822
Epoch Step: 165 / 819 Loss: 22.39480209350586 Tokens per Sec: 13842.26984505325
Epoch Step: 170 / 819 Loss: 22.925888061523438 Tokens per Sec: 14887.159416019756
Epoch Step: 175 / 819 Loss: 20.03827476501465 Tokens per Sec: 13388.538219924527
Epoch Step: 180 / 819 Loss: 18.783283233642578 Tokens per Sec: 15078.638939919114
Epoch Step: 185 / 819 Loss: 13.76294231414795 Tokens per Sec: 13439.34332656811
Epoch Step: 190 / 819 Loss: 19.761783599853516 Tokens per Sec: 15922.712198890902
Epoch Step: 195 / 819 Loss: 13.185417175292969 Tokens per Sec: 14567.98498963115
Epoch Step: 200 / 819 Loss: 14.23901081085205 Tokens per Sec: 12980.077763377358
Epoch Step: 205 / 819 Loss: 13.146618843078613 Tokens per Sec: 14165.432423996688
Epoch Step: 210 / 819 Loss: 17.670387268066406 Tokens per Sec: 14412.965197412881
Epoch Step: 215 / 819 Loss: 13.275152206420898 Tokens per Sec: 14007.219075913965
Epoch Step: 220 / 819 Loss: 17.087434768676758 Tokens per Sec: 13627.044153142877
Epoch Step: 225 / 819 Loss: 18.039817810058594 Tokens per Sec: 14945.954543984493
Epoch Step: 230 / 819 Loss: 21.020050048828125 Tokens per Sec: 13500.436758166203
Epoch Step: 235 / 819 Loss: 14.594268798828125 Tokens per Sec: 13609.07999866814
Epoch Step: 240 / 819 Loss: 18.673519134521484 Tokens per Sec: 12827.313680039728
Epoch Step: 245 / 819 Loss: 14.360054016113281 Tokens per Sec: 13099.85046411914
Epoch Step: 250 / 819 Loss: 17.206544876098633 Tokens per Sec: 14751.528641742203
Epoch Step: 255 / 819 Loss: 17.457046508789062 Tokens per Sec: 14639.414277154967
Epoch Step: 260 / 819 Loss: 11.84290885925293 Tokens per Sec: 13793.073847771688
Epoch Step: 265 / 819 Loss: 12.886706352233887 Tokens per Sec: 13134.956463879393
Epoch Step: 270 / 819 Loss: 21.839073181152344 Tokens per Sec: 14544.067343173727
Epoch Step: 275 / 819 Loss: 20.12445831298828 Tokens per Sec: 15460.940738199643
Epoch Step: 280 / 819 Loss: 19.189146041870117 Tokens per Sec: 16114.818353824336
Epoch Step: 285 / 819 Loss: 13.687312126159668 Tokens per Sec: 15003.494024809746
Epoch Step: 290 / 819 Loss: 17.906770706176758 Tokens per Sec: 13237.321397373908
Epoch Step: 295 / 819 Loss: 237.5217742919922 Tokens per Sec: 14510.222913851052
Epoch Step: 300 / 819 Loss: 16.816619873046875 Tokens per Sec: 14851.865548848122
Epoch Step: 305 / 819 Loss: 23.80754852294922 Tokens per Sec: 14009.381509696917
Epoch Step: 310 / 819 Loss: 20.149059295654297 Tokens per Sec: 13812.958439870343
Epoch Step: 315 / 819 Loss: 19.103435516357422 Tokens per Sec: 13737.295051074327
Epoch Step: 320 / 819 Loss: 13.490991592407227 Tokens per Sec: 14244.213184139064
Epoch Step: 325 / 819 Loss: 14.406013488769531 Tokens per Sec: 13222.010035541049
Epoch Step: 330 / 819 Loss: 21.31314468383789 Tokens per Sec: 13303.128028614597
Epoch Step: 335 / 819 Loss: 20.63896942138672 Tokens per Sec: 14280.530884004003
Epoch Step: 340 / 819 Loss: 19.57362174987793 Tokens per Sec: 12524.402106562235
Epoch Step: 345 / 819 Loss: 18.24300765991211 Tokens per Sec: 14152.418935603417
Epoch Step: 350 / 819 Loss: 19.268686294555664 Tokens per Sec: 13919.029298851596
Epoch Step: 355 / 819 Loss: 16.124759674072266 Tokens per Sec: 13583.411556787347
Epoch Step: 360 / 819 Loss: 20.301713943481445 Tokens per Sec: 13405.37262684356
Epoch Step: 365 / 819 Loss: 20.079954147338867 Tokens per Sec: 13876.952134333664
Epoch Step: 370 / 819 Loss: 17.705856323242188 Tokens per Sec: 14451.689009586107
Epoch Step: 375 / 819 Loss: 15.976394653320312 Tokens per Sec: 15228.378892817651
Epoch Step: 380 / 819 Loss: 14.973844528198242 Tokens per Sec: 14424.592801229504
Epoch Step: 385 / 819 Loss: 12.508431434631348 Tokens per Sec: 12837.801313140799
Epoch Step: 390 / 819 Loss: 17.632204055786133 Tokens per Sec: 14232.214162867615
Epoch Step: 395 / 819 Loss: 18.870237350463867 Tokens per Sec: 16589.48201070509
Epoch Step: 400 / 819 Loss: 18.035322189331055 Tokens per Sec: 14352.425098269443
Epoch Step: 405 / 819 Loss: 18.87627410888672 Tokens per Sec: 13528.93623251945
Epoch Step: 410 / 819 Loss: 20.019914627075195 Tokens per Sec: 15263.983642487374
Epoch Step: 415 / 819 Loss: 104.5178451538086 Tokens per Sec: 14132.866992187031
Epoch Step: 420 / 819 Loss: 16.908344268798828 Tokens per Sec: 14397.640482713223
Epoch Step: 425 / 819 Loss: 15.046290397644043 Tokens per Sec: 13500.289504346334
Epoch Step: 430 / 819 Loss: 16.402875900268555 Tokens per Sec: 15487.873508925095
Epoch Step: 435 / 819 Loss: 14.058928489685059 Tokens per Sec: 14557.725326601785
Epoch Step: 440 / 819 Loss: 19.473033905029297 Tokens per Sec: 12925.63092289453
Epoch Step: 445 / 819 Loss: 19.66964340209961 Tokens per Sec: 13333.401644704603
Epoch Step: 450 / 819 Loss: 18.616472244262695 Tokens per Sec: 14404.13964332983
Epoch Step: 455 / 819 Loss: 16.606138229370117 Tokens per Sec: 13580.334255444988
Epoch Step: 460 / 819 Loss: 13.356488227844238 Tokens per Sec: 13822.528404863884
Epoch Step: 465 / 819 Loss: 14.476638793945312 Tokens per Sec: 14043.551074319766
Epoch Step: 470 / 819 Loss: 17.369304656982422 Tokens per Sec: 15670.023444749953
Epoch Step: 475 / 819 Loss: 15.809764862060547 Tokens per Sec: 14342.431378042693
Epoch Step: 480 / 819 Loss: 16.88224983215332 Tokens per Sec: 15763.119030058946
Epoch Step: 485 / 819 Loss: 274.4408264160156 Tokens per Sec: 13608.88803642539
Epoch Step: 490 / 819 Loss: 211.05276489257812 Tokens per Sec: 13802.5441559842
Epoch Step: 495 / 819 Loss: 21.397661209106445 Tokens per Sec: 13849.048911791888
Epoch Step: 500 / 819 Loss: 18.897428512573242 Tokens per Sec: 13648.972166880496
Epoch Step: 505 / 819 Loss: 200.9810333251953 Tokens per Sec: 12450.04696971516
Epoch Step: 510 / 819 Loss: 23.025148391723633 Tokens per Sec: 14099.547393449848
Epoch Step: 515 / 819 Loss: 22.69296646118164 Tokens per Sec: 14262.550281582297
Epoch Step: 520 / 819 Loss: 18.432729721069336 Tokens per Sec: 13955.556799866545
Epoch Step: 525 / 819 Loss: 23.270530700683594 Tokens per Sec: 14002.464211090799
Epoch Step: 530 / 819 Loss: 20.424623489379883 Tokens per Sec: 14603.15844792831
Epoch Step: 535 / 819 Loss: 17.4686336517334 Tokens per Sec: 13580.024500933043
Epoch Step: 540 / 819 Loss: 155.38169860839844 Tokens per Sec: 15179.185232673257
Epoch Step: 545 / 819 Loss: 14.798388481140137 Tokens per Sec: 13864.606733429719
Epoch Step: 550 / 819 Loss: 16.40597915649414 Tokens per Sec: 13642.024274930569
Epoch Step: 555 / 819 Loss: 17.208293914794922 Tokens per Sec: 14417.87391874821
Epoch Step: 560 / 819 Loss: 20.881834030151367 Tokens per Sec: 14143.684204015017
Epoch Step: 565 / 819 Loss: 16.39844512939453 Tokens per Sec: 15150.760506234841
Epoch Step: 570 / 819 Loss: 15.424103736877441 Tokens per Sec: 14930.438622875203
Epoch Step: 575 / 819 Loss: 186.50509643554688 Tokens per Sec: 12816.548045799314
Epoch Step: 580 / 819 Loss: 16.795242309570312 Tokens per Sec: 13870.332079257183
Epoch Step: 585 / 819 Loss: 17.491945266723633 Tokens per Sec: 14741.09876194618
Epoch Step: 590 / 819 Loss: 15.147392272949219 Tokens per Sec: 14268.690369942504
Epoch Step: 595 / 819 Loss: 13.642271995544434 Tokens per Sec: 15311.076879519487
Epoch Step: 600 / 819 Loss: 13.365565299987793 Tokens per Sec: 12459.7504856792
Epoch Step: 605 / 819 Loss: 192.4742431640625 Tokens per Sec: 16833.198394718085
Epoch Step: 610 / 819 Loss: 222.99705505371094 Tokens per Sec: 14179.41164761094
Epoch Step: 615 / 819 Loss: 21.622770309448242 Tokens per Sec: 14514.99161152532
Epoch Step: 620 / 819 Loss: 17.62581443786621 Tokens per Sec: 13580.765192375553
Epoch Step: 625 / 819 Loss: 14.822043418884277 Tokens per Sec: 13078.844804670898
Epoch Step: 630 / 819 Loss: 17.646244049072266 Tokens per Sec: 13835.197263731417
Epoch Step: 635 / 819 Loss: 19.978382110595703 Tokens per Sec: 14011.481851759052
Epoch Step: 640 / 819 Loss: 23.34152603149414 Tokens per Sec: 15783.78908087072
Epoch Step: 645 / 819 Loss: 20.06781768798828 Tokens per Sec: 15437.744111836051
Epoch Step: 650 / 819 Loss: 12.975045204162598 Tokens per Sec: 14386.858750477862
Epoch Step: 655 / 819 Loss: 13.263859748840332 Tokens per Sec: 13265.27079817242
Epoch Step: 660 / 819 Loss: 19.199222564697266 Tokens per Sec: 14600.204430711383
Epoch Step: 665 / 819 Loss: 19.976896286010742 Tokens per Sec: 12561.72156878769
Epoch Step: 670 / 819 Loss: 18.26704216003418 Tokens per Sec: 13168.738640660518
Epoch Step: 675 / 819 Loss: 21.05864715576172 Tokens per Sec: 12363.539633005497
Epoch Step: 680 / 819 Loss: 18.58388900756836 Tokens per Sec: 15073.690269307604
Epoch Step: 685 / 819 Loss: 163.73098754882812 Tokens per Sec: 14054.629065795261
Epoch Step: 690 / 819 Loss: 21.76198387145996 Tokens per Sec: 13860.503200233063
Epoch Step: 695 / 819 Loss: 20.808115005493164 Tokens per Sec: 13632.084097016617
Epoch Step: 700 / 819 Loss: 16.381723403930664 Tokens per Sec: 13523.483544839753
Epoch Step: 705 / 819 Loss: 18.30796241760254 Tokens per Sec: 12740.166361120098
Epoch Step: 710 / 819 Loss: 16.054561614990234 Tokens per Sec: 15250.54610514105
Epoch Step: 715 / 819 Loss: 16.223190307617188 Tokens per Sec: 14343.529866161529
Epoch Step: 720 / 819 Loss: 21.21891212463379 Tokens per Sec: 13729.837211997234
Epoch Step: 725 / 819 Loss: 22.474496841430664 Tokens per Sec: 13640.843898246516
Epoch Step: 730 / 819 Loss: 89.3858871459961 Tokens per Sec: 12766.684093563812
Epoch Step: 735 / 819 Loss: 17.23451042175293 Tokens per Sec: 15330.30779399224
Epoch Step: 740 / 819 Loss: 19.273752212524414 Tokens per Sec: 13704.688718001235
Epoch Step: 745 / 819 Loss: 19.640125274658203 Tokens per Sec: 12095.505412571405
Epoch Step: 750 / 819 Loss: 17.903789520263672 Tokens per Sec: 14307.346770756072
Epoch Step: 755 / 819 Loss: 18.739341735839844 Tokens per Sec: 14498.283504849309
Epoch Step: 760 / 819 Loss: 16.843101501464844 Tokens per Sec: 13520.23647618807
Epoch Step: 765 / 819 Loss: 19.97610855102539 Tokens per Sec: 14498.255859946361
Epoch Step: 770 / 819 Loss: 181.92251586914062 Tokens per Sec: 15057.654592851883
Epoch Step: 775 / 819 Loss: 100.11016082763672 Tokens per Sec: 13864.561148231769
Epoch Step: 780 / 819 Loss: 184.46273803710938 Tokens per Sec: 12671.077772532846
Epoch Step: 785 / 819 Loss: 22.73548126220703 Tokens per Sec: 15090.625791788472
Epoch Step: 790 / 819 Loss: 15.257489204406738 Tokens per Sec: 14480.148318659905
Epoch Step: 795 / 819 Loss: 20.196638107299805 Tokens per Sec: 15310.459215593795
Epoch Step: 800 / 819 Loss: 17.34076690673828 Tokens per Sec: 15325.689368113392
Epoch Step: 805 / 819 Loss: 14.84235954284668 Tokens per Sec: 15711.991589290183
Epoch Step: 810 / 819 Loss: 13.350205421447754 Tokens per Sec: 10447.268588159983
Epoch Step: 815 / 819 Loss: 19.247222900390625 Tokens per Sec: 13440.001900225234
Epoch ended with duration 0:04:36.008824
Train perplexity: 1.59219449725889
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.242789
Validation perplexity: 1.5034121079122997
Epoch 35 / 1000
Epoch Step: 5 / 819 Loss: 18.61801528930664 Tokens per Sec: 15346.05546138198
Epoch Step: 10 / 819 Loss: 19.63987922668457 Tokens per Sec: 13237.629741266017
Epoch Step: 15 / 819 Loss: 12.528485298156738 Tokens per Sec: 14103.051722737484
Epoch Step: 20 / 819 Loss: 17.7183837890625 Tokens per Sec: 14414.242007646048
Epoch Step: 25 / 819 Loss: 15.61041259765625 Tokens per Sec: 13861.827648747212
Epoch Step: 30 / 819 Loss: 18.091516494750977 Tokens per Sec: 14914.098748582976
Epoch Step: 35 / 819 Loss: 19.371301651000977 Tokens per Sec: 14386.679060893315
Epoch Step: 40 / 819 Loss: 15.855878829956055 Tokens per Sec: 13730.700866195297
Epoch Step: 45 / 819 Loss: 15.956147193908691 Tokens per Sec: 14443.129717723361
Epoch Step: 50 / 819 Loss: 14.177199363708496 Tokens per Sec: 13766.738529274175
Epoch Step: 55 / 819 Loss: 13.457916259765625 Tokens per Sec: 14417.74454008411
Epoch Step: 60 / 819 Loss: 14.983083724975586 Tokens per Sec: 14179.430482167278
Epoch Step: 65 / 819 Loss: 19.424758911132812 Tokens per Sec: 13258.021449653503
Epoch Step: 70 / 819 Loss: 19.43426513671875 Tokens per Sec: 14486.971980616696
Epoch Step: 75 / 819 Loss: 20.971948623657227 Tokens per Sec: 13372.41886738415
Epoch Step: 80 / 819 Loss: 15.921036720275879 Tokens per Sec: 13677.485081042012
Epoch Step: 85 / 819 Loss: 15.420975685119629 Tokens per Sec: 13451.741024287114
Epoch Step: 90 / 819 Loss: 22.579065322875977 Tokens per Sec: 14217.48241105558
Epoch Step: 95 / 819 Loss: 16.563207626342773 Tokens per Sec: 14006.21182805595
Epoch Step: 100 / 819 Loss: 245.25527954101562 Tokens per Sec: 14428.109288610083
Epoch Step: 105 / 819 Loss: 21.85810661315918 Tokens per Sec: 12499.965445006641
Epoch Step: 110 / 819 Loss: 18.50515365600586 Tokens per Sec: 13038.987485001051
Epoch Step: 115 / 819 Loss: 198.39649963378906 Tokens per Sec: 13007.941460576809
Epoch Step: 120 / 819 Loss: 21.415695190429688 Tokens per Sec: 15339.822326726337
Epoch Step: 125 / 819 Loss: 20.891244888305664 Tokens per Sec: 14707.784581636388
Epoch Step: 130 / 819 Loss: 12.446008682250977 Tokens per Sec: 15380.615544315388
Epoch Step: 135 / 819 Loss: 12.039379119873047 Tokens per Sec: 13549.813331147408
Epoch Step: 140 / 819 Loss: 15.177192687988281 Tokens per Sec: 13004.170705870223
Epoch Step: 145 / 819 Loss: 203.42401123046875 Tokens per Sec: 13808.692031010403
Epoch Step: 150 / 819 Loss: 14.951720237731934 Tokens per Sec: 12985.313052142146
Epoch Step: 155 / 819 Loss: 17.04336166381836 Tokens per Sec: 13836.832078856612
Epoch Step: 160 / 819 Loss: 17.81129264831543 Tokens per Sec: 13557.408986502569
Epoch Step: 165 / 819 Loss: 16.52973747253418 Tokens per Sec: 13620.59095482215
Epoch Step: 170 / 819 Loss: 17.571435928344727 Tokens per Sec: 14587.87784357854
Epoch Step: 175 / 819 Loss: 18.905235290527344 Tokens per Sec: 12879.681420939518
Epoch Step: 180 / 819 Loss: 23.846843719482422 Tokens per Sec: 14335.680109698354
Epoch Step: 185 / 819 Loss: 19.83376693725586 Tokens per Sec: 14723.749851206878
Epoch Step: 190 / 819 Loss: 19.525928497314453 Tokens per Sec: 13640.290360058809
Epoch Step: 195 / 819 Loss: 20.84176254272461 Tokens per Sec: 15048.021331807846
Epoch Step: 200 / 819 Loss: 22.890207290649414 Tokens per Sec: 14115.901356835273
Epoch Step: 205 / 819 Loss: 14.024696350097656 Tokens per Sec: 13080.891364877836
Epoch Step: 210 / 819 Loss: 17.881589889526367 Tokens per Sec: 15596.10126880822
Epoch Step: 215 / 819 Loss: 14.051434516906738 Tokens per Sec: 14780.978283391887
Epoch Step: 220 / 819 Loss: 219.8936309814453 Tokens per Sec: 15077.003958181644
Epoch Step: 225 / 819 Loss: 18.24834632873535 Tokens per Sec: 14586.424006550744
Epoch Step: 230 / 819 Loss: 20.87497329711914 Tokens per Sec: 11846.6146329211
Epoch Step: 235 / 819 Loss: 14.362841606140137 Tokens per Sec: 12997.67542076426
Epoch Step: 240 / 819 Loss: 16.034696578979492 Tokens per Sec: 14094.405752445939
Epoch Step: 245 / 819 Loss: 16.253293991088867 Tokens per Sec: 14365.377466538574
Epoch Step: 250 / 819 Loss: 14.599435806274414 Tokens per Sec: 16104.051083724824
Epoch Step: 255 / 819 Loss: 17.758390426635742 Tokens per Sec: 15255.823095024463
Epoch Step: 260 / 819 Loss: 19.058609008789062 Tokens per Sec: 14158.649253370839
Epoch Step: 265 / 819 Loss: 197.3480224609375 Tokens per Sec: 12838.814330695397
Epoch Step: 270 / 819 Loss: 19.428056716918945 Tokens per Sec: 15675.566164442944
Epoch Step: 275 / 819 Loss: 14.60096263885498 Tokens per Sec: 14187.404651319854
Epoch Step: 280 / 819 Loss: 16.905763626098633 Tokens per Sec: 14949.586278429751
Epoch Step: 285 / 819 Loss: 18.521955490112305 Tokens per Sec: 14543.05932041875
Epoch Step: 290 / 819 Loss: 13.810914039611816 Tokens per Sec: 13745.124392738277
Epoch Step: 295 / 819 Loss: 17.305259704589844 Tokens per Sec: 14541.405194995572
Epoch Step: 300 / 819 Loss: 16.642406463623047 Tokens per Sec: 14458.658609125889
Epoch Step: 305 / 819 Loss: 14.39419937133789 Tokens per Sec: 13601.94316885671
Epoch Step: 310 / 819 Loss: 13.127869606018066 Tokens per Sec: 14146.444128700015
Epoch Step: 315 / 819 Loss: 14.67941665649414 Tokens per Sec: 13972.410020273892
Epoch Step: 320 / 819 Loss: 13.86594009399414 Tokens per Sec: 13780.043501735348
Epoch Step: 325 / 819 Loss: 17.876628875732422 Tokens per Sec: 13231.725785825649
Epoch Step: 330 / 819 Loss: 15.56187915802002 Tokens per Sec: 15539.647697957664
Epoch Step: 335 / 819 Loss: 15.759186744689941 Tokens per Sec: 15372.338108382937
Epoch Step: 340 / 819 Loss: 18.619287490844727 Tokens per Sec: 14371.177882476877
Epoch Step: 345 / 819 Loss: 252.81809997558594 Tokens per Sec: 12380.434018133114
Epoch Step: 350 / 819 Loss: 20.617965698242188 Tokens per Sec: 14905.895674876325
Epoch Step: 355 / 819 Loss: 18.440454483032227 Tokens per Sec: 16073.786166963579
Epoch Step: 360 / 819 Loss: 16.593172073364258 Tokens per Sec: 16341.819511632035
Epoch Step: 365 / 819 Loss: 14.635337829589844 Tokens per Sec: 14708.037090642058
Epoch Step: 370 / 819 Loss: 12.0947265625 Tokens per Sec: 15118.023168827276
Epoch Step: 375 / 819 Loss: 17.972930908203125 Tokens per Sec: 13647.755413062203
Epoch Step: 380 / 819 Loss: 15.021602630615234 Tokens per Sec: 16849.562178244323
Epoch Step: 385 / 819 Loss: 11.318875312805176 Tokens per Sec: 13397.790218423577
Epoch Step: 390 / 819 Loss: 14.419559478759766 Tokens per Sec: 15809.415688206265
Epoch Step: 395 / 819 Loss: 19.500734329223633 Tokens per Sec: 12573.559052713317
Epoch Step: 400 / 819 Loss: 14.10696792602539 Tokens per Sec: 14113.98459016774
Epoch Step: 405 / 819 Loss: 206.9556427001953 Tokens per Sec: 14896.91076387434
Epoch Step: 410 / 819 Loss: 13.511465072631836 Tokens per Sec: 13149.950391225093
Epoch Step: 415 / 819 Loss: 19.6303653717041 Tokens per Sec: 14074.907458569603
Epoch Step: 420 / 819 Loss: 19.080215454101562 Tokens per Sec: 15522.255933425886
Epoch Step: 425 / 819 Loss: 14.81374740600586 Tokens per Sec: 13144.069800881836
Epoch Step: 430 / 819 Loss: 18.446125030517578 Tokens per Sec: 13048.347878951452
Epoch Step: 435 / 819 Loss: 138.25453186035156 Tokens per Sec: 15690.293787395492
Epoch Step: 440 / 819 Loss: 18.316789627075195 Tokens per Sec: 14330.18130708007
Epoch Step: 445 / 819 Loss: 223.56423950195312 Tokens per Sec: 13640.173279873316
Epoch Step: 450 / 819 Loss: 226.93212890625 Tokens per Sec: 13202.739407102908
Epoch Step: 455 / 819 Loss: 17.47237777709961 Tokens per Sec: 15632.007298861154
Epoch Step: 460 / 819 Loss: 20.423921585083008 Tokens per Sec: 13700.634442357265
Epoch Step: 465 / 819 Loss: 20.23552131652832 Tokens per Sec: 12629.441521394612
Epoch Step: 470 / 819 Loss: 17.558443069458008 Tokens per Sec: 13157.082920931174
Epoch Step: 475 / 819 Loss: 17.365867614746094 Tokens per Sec: 13602.951331484843
Epoch Step: 480 / 819 Loss: 163.3243865966797 Tokens per Sec: 13385.56098296735
Epoch Step: 485 / 819 Loss: 26.310298919677734 Tokens per Sec: 13641.820616133136
Epoch Step: 490 / 819 Loss: 19.518890380859375 Tokens per Sec: 12948.779890522635
Epoch Step: 495 / 819 Loss: 21.156476974487305 Tokens per Sec: 14288.43254977904
Epoch Step: 500 / 819 Loss: 19.56366539001465 Tokens per Sec: 15353.512005646771
Epoch Step: 505 / 819 Loss: 17.816890716552734 Tokens per Sec: 13595.049567825014
Epoch Step: 510 / 819 Loss: 17.218284606933594 Tokens per Sec: 13252.127459795474
Epoch Step: 515 / 819 Loss: 17.683731079101562 Tokens per Sec: 14749.632684069327
Epoch Step: 520 / 819 Loss: 14.239774703979492 Tokens per Sec: 13252.531829262252
Epoch Step: 525 / 819 Loss: 21.384599685668945 Tokens per Sec: 13622.046094215515
Epoch Step: 530 / 819 Loss: 17.838321685791016 Tokens per Sec: 13206.616714874794
Epoch Step: 535 / 819 Loss: 13.992156982421875 Tokens per Sec: 14573.241599013712
Epoch Step: 540 / 819 Loss: 17.73897361755371 Tokens per Sec: 13180.729969602184
Epoch Step: 545 / 819 Loss: 17.837282180786133 Tokens per Sec: 15425.68916696792
Epoch Step: 550 / 819 Loss: 19.27983856201172 Tokens per Sec: 13515.624880664036
Epoch Step: 555 / 819 Loss: 13.067867279052734 Tokens per Sec: 14168.110127344195
Epoch Step: 560 / 819 Loss: 19.626569747924805 Tokens per Sec: 15153.401039816004
Epoch Step: 565 / 819 Loss: 17.74854278564453 Tokens per Sec: 13457.824339963516
Epoch Step: 570 / 819 Loss: 18.978469848632812 Tokens per Sec: 13429.551180944016
Epoch Step: 575 / 819 Loss: 13.532550811767578 Tokens per Sec: 12732.015243865786
Epoch Step: 580 / 819 Loss: 20.488037109375 Tokens per Sec: 14665.254248524767
Epoch Step: 585 / 819 Loss: 20.345500946044922 Tokens per Sec: 13380.143959855752
Epoch Step: 590 / 819 Loss: 18.097198486328125 Tokens per Sec: 14503.272302305513
Epoch Step: 595 / 819 Loss: 16.89311408996582 Tokens per Sec: 13861.350446278873
Epoch Step: 600 / 819 Loss: 11.046850204467773 Tokens per Sec: 15485.005784809471
Epoch Step: 605 / 819 Loss: 16.617197036743164 Tokens per Sec: 14328.381453280552
Epoch Step: 610 / 819 Loss: 20.549135208129883 Tokens per Sec: 14108.23868254257
Epoch Step: 615 / 819 Loss: 20.755435943603516 Tokens per Sec: 13906.165365856872
Epoch Step: 620 / 819 Loss: 17.30469512939453 Tokens per Sec: 13035.690641839343
Epoch Step: 625 / 819 Loss: 22.28124237060547 Tokens per Sec: 12387.126992812322
Epoch Step: 630 / 819 Loss: 15.622200012207031 Tokens per Sec: 15588.03618010675
Epoch Step: 635 / 819 Loss: 13.054313659667969 Tokens per Sec: 14899.887982614722
Epoch Step: 640 / 819 Loss: 17.314424514770508 Tokens per Sec: 15488.907718717988
Epoch Step: 645 / 819 Loss: 20.430906295776367 Tokens per Sec: 14973.74245179346
Epoch Step: 650 / 819 Loss: 14.509719848632812 Tokens per Sec: 12288.403069140695
Epoch Step: 655 / 819 Loss: 15.709256172180176 Tokens per Sec: 13048.963258478747
Epoch Step: 660 / 819 Loss: 131.0735626220703 Tokens per Sec: 14837.110972371283
Epoch Step: 665 / 819 Loss: 16.266077041625977 Tokens per Sec: 14330.0932935463
Epoch Step: 670 / 819 Loss: 19.026851654052734 Tokens per Sec: 15972.153118317261
Epoch Step: 675 / 819 Loss: 20.853761672973633 Tokens per Sec: 15712.724460190848
Epoch Step: 680 / 819 Loss: 17.82848358154297 Tokens per Sec: 15056.79800697535
Epoch Step: 685 / 819 Loss: 16.015430450439453 Tokens per Sec: 13563.584676056587
Epoch Step: 690 / 819 Loss: 11.371334075927734 Tokens per Sec: 12750.826617511175
Epoch Step: 695 / 819 Loss: 18.486785888671875 Tokens per Sec: 13498.11541538549
Epoch Step: 700 / 819 Loss: 20.69137954711914 Tokens per Sec: 12695.525932819783
Epoch Step: 705 / 819 Loss: 17.70307159423828 Tokens per Sec: 13776.246256185517
Epoch Step: 710 / 819 Loss: 16.605783462524414 Tokens per Sec: 15462.23645394702
Epoch Step: 715 / 819 Loss: 13.38809871673584 Tokens per Sec: 13433.0773532966
Epoch Step: 720 / 819 Loss: 14.392997741699219 Tokens per Sec: 13408.319390449826
Epoch Step: 725 / 819 Loss: 15.26768684387207 Tokens per Sec: 13631.032645251173
Epoch Step: 730 / 819 Loss: 20.239574432373047 Tokens per Sec: 13745.440051740885
Epoch Step: 735 / 819 Loss: 20.811071395874023 Tokens per Sec: 12855.659721372866
Epoch Step: 740 / 819 Loss: 18.57501792907715 Tokens per Sec: 14854.289513157803
Epoch Step: 745 / 819 Loss: 20.215301513671875 Tokens per Sec: 15577.115355734271
Epoch Step: 750 / 819 Loss: 17.961912155151367 Tokens per Sec: 14637.645751923124
Epoch Step: 755 / 819 Loss: 13.71823501586914 Tokens per Sec: 14065.768112989137
Epoch Step: 760 / 819 Loss: 17.477705001831055 Tokens per Sec: 13802.52644490481
Epoch Step: 765 / 819 Loss: 15.382872581481934 Tokens per Sec: 12918.562217016351
Epoch Step: 770 / 819 Loss: 13.12918758392334 Tokens per Sec: 14704.305731767718
Epoch Step: 775 / 819 Loss: 19.799654006958008 Tokens per Sec: 15153.46746088585
Epoch Step: 780 / 819 Loss: 206.88685607910156 Tokens per Sec: 16717.40700201703
Epoch Step: 785 / 819 Loss: 17.18160057067871 Tokens per Sec: 15018.828824727438
Epoch Step: 790 / 819 Loss: 15.864408493041992 Tokens per Sec: 13997.322510920516
Epoch Step: 795 / 819 Loss: 16.417438507080078 Tokens per Sec: 16208.323790145632
Epoch Step: 800 / 819 Loss: 226.61294555664062 Tokens per Sec: 13298.04648581726
Epoch Step: 805 / 819 Loss: 14.355866432189941 Tokens per Sec: 14837.847506531696
Epoch Step: 810 / 819 Loss: 14.907806396484375 Tokens per Sec: 13531.35025706844
Epoch Step: 815 / 819 Loss: 135.0171356201172 Tokens per Sec: 12343.58853628183
Epoch ended with duration 0:04:35.711406
Train perplexity: 1.584517085664295
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.495193
Validation perplexity: 1.594773190828476
Model saved checkpoint!
Epoch 36 / 1000
Epoch Step: 5 / 819 Loss: 17.377222061157227 Tokens per Sec: 14092.211903903308
Epoch Step: 10 / 819 Loss: 97.54696655273438 Tokens per Sec: 12984.72105702596
Epoch Step: 15 / 819 Loss: 20.310792922973633 Tokens per Sec: 15053.024010727662
Epoch Step: 20 / 819 Loss: 17.156469345092773 Tokens per Sec: 13997.744985710675
Epoch Step: 25 / 819 Loss: 15.161462783813477 Tokens per Sec: 15998.574406448535
Epoch Step: 30 / 819 Loss: 15.857060432434082 Tokens per Sec: 13670.931364397833
Epoch Step: 35 / 819 Loss: 19.29692840576172 Tokens per Sec: 13456.757073647466
Epoch Step: 40 / 819 Loss: 12.050987243652344 Tokens per Sec: 13558.803835748691
Epoch Step: 45 / 819 Loss: 16.235733032226562 Tokens per Sec: 15192.035897303698
Epoch Step: 50 / 819 Loss: 11.652639389038086 Tokens per Sec: 12902.37073989373
Epoch Step: 55 / 819 Loss: 17.412240982055664 Tokens per Sec: 14616.416019537264
Epoch Step: 60 / 819 Loss: 16.958229064941406 Tokens per Sec: 14910.737797049132
Epoch Step: 65 / 819 Loss: 14.935287475585938 Tokens per Sec: 13643.25772468573
Epoch Step: 70 / 819 Loss: 19.02661895751953 Tokens per Sec: 13118.490106864363
Epoch Step: 75 / 819 Loss: 15.58317756652832 Tokens per Sec: 12198.043327372703
Epoch Step: 80 / 819 Loss: 11.410602569580078 Tokens per Sec: 13470.930854344755
Epoch Step: 85 / 819 Loss: 171.20606994628906 Tokens per Sec: 14698.860549297062
Epoch Step: 90 / 819 Loss: 22.916488647460938 Tokens per Sec: 13306.656322070297
Epoch Step: 95 / 819 Loss: 15.049871444702148 Tokens per Sec: 13217.282189603437
Epoch Step: 100 / 819 Loss: 19.44097137451172 Tokens per Sec: 14593.514475070586
Epoch Step: 105 / 819 Loss: 14.746541023254395 Tokens per Sec: 13157.434286788359
Epoch Step: 110 / 819 Loss: 21.903120040893555 Tokens per Sec: 13487.996703264356
Epoch Step: 115 / 819 Loss: 21.601028442382812 Tokens per Sec: 13059.499339000899
Epoch Step: 120 / 819 Loss: 19.71424674987793 Tokens per Sec: 12633.86800524563
Epoch Step: 125 / 819 Loss: 16.344575881958008 Tokens per Sec: 14375.692806198758
Epoch Step: 130 / 819 Loss: 15.3484468460083 Tokens per Sec: 16433.94256788726
Epoch Step: 135 / 819 Loss: 16.770700454711914 Tokens per Sec: 13856.376061836127
Epoch Step: 140 / 819 Loss: 21.87987518310547 Tokens per Sec: 14134.348182274323
Epoch Step: 145 / 819 Loss: 15.297784805297852 Tokens per Sec: 13740.75345607394
Epoch Step: 150 / 819 Loss: 19.320354461669922 Tokens per Sec: 13825.590374990139
Epoch Step: 155 / 819 Loss: 17.737154006958008 Tokens per Sec: 13515.55754709546
Epoch Step: 160 / 819 Loss: 14.22804069519043 Tokens per Sec: 13716.890972523815
Epoch Step: 165 / 819 Loss: 16.995927810668945 Tokens per Sec: 13928.196603315106
Epoch Step: 170 / 819 Loss: 15.59538745880127 Tokens per Sec: 13829.999330814859
Epoch Step: 175 / 819 Loss: 17.657506942749023 Tokens per Sec: 12619.595587969587
Epoch Step: 180 / 819 Loss: 14.326312065124512 Tokens per Sec: 14481.970648261598
Epoch Step: 185 / 819 Loss: 16.862220764160156 Tokens per Sec: 14080.915295721286
Epoch Step: 190 / 819 Loss: 16.581890106201172 Tokens per Sec: 15786.98716510218
Epoch Step: 195 / 819 Loss: 20.0140438079834 Tokens per Sec: 13756.949590813541
Epoch Step: 200 / 819 Loss: 20.84590721130371 Tokens per Sec: 13407.120078793962
Epoch Step: 205 / 819 Loss: 15.020303726196289 Tokens per Sec: 12415.352241725906
Epoch Step: 210 / 819 Loss: 12.880402565002441 Tokens per Sec: 15134.993333663006
Epoch Step: 215 / 819 Loss: 15.298107147216797 Tokens per Sec: 13872.000895408575
Epoch Step: 220 / 819 Loss: 17.462488174438477 Tokens per Sec: 12753.802345355121
Epoch Step: 225 / 819 Loss: 10.98240852355957 Tokens per Sec: 14062.98869616693
Epoch Step: 230 / 819 Loss: 15.243846893310547 Tokens per Sec: 12153.736643966182
Epoch Step: 235 / 819 Loss: 22.258291244506836 Tokens per Sec: 13712.721833648693
Epoch Step: 240 / 819 Loss: 250.0908966064453 Tokens per Sec: 13699.82713007992
Epoch Step: 245 / 819 Loss: 130.74114990234375 Tokens per Sec: 13073.05964120401
Epoch Step: 250 / 819 Loss: 23.09557342529297 Tokens per Sec: 16199.072363102901
Epoch Step: 255 / 819 Loss: 19.897558212280273 Tokens per Sec: 15398.122141716029
Epoch Step: 260 / 819 Loss: 15.067663192749023 Tokens per Sec: 13917.002017671923
Epoch Step: 265 / 819 Loss: 18.811689376831055 Tokens per Sec: 14476.190645985847
Epoch Step: 270 / 819 Loss: 14.415209770202637 Tokens per Sec: 14426.493653769081
Epoch Step: 275 / 819 Loss: 190.45089721679688 Tokens per Sec: 15269.42400016806
Epoch Step: 280 / 819 Loss: 17.477264404296875 Tokens per Sec: 15749.158598516155
Epoch Step: 285 / 819 Loss: 17.01622772216797 Tokens per Sec: 14662.383540743362
Epoch Step: 290 / 819 Loss: 23.053287506103516 Tokens per Sec: 14625.552280291591
Epoch Step: 295 / 819 Loss: 20.549381256103516 Tokens per Sec: 14370.277139606964
Epoch Step: 300 / 819 Loss: 21.26686668395996 Tokens per Sec: 13833.064097186354
Epoch Step: 305 / 819 Loss: 15.992596626281738 Tokens per Sec: 13230.098398434497
Epoch Step: 310 / 819 Loss: 16.6060848236084 Tokens per Sec: 13059.13290916676
Epoch Step: 315 / 819 Loss: 17.120635986328125 Tokens per Sec: 13976.099915678604
Epoch Step: 320 / 819 Loss: 16.251689910888672 Tokens per Sec: 13132.380053237479
Epoch Step: 325 / 819 Loss: 18.245573043823242 Tokens per Sec: 13186.679431946504
Epoch Step: 330 / 819 Loss: 16.782520294189453 Tokens per Sec: 14093.941385217619
Epoch Step: 335 / 819 Loss: 16.273670196533203 Tokens per Sec: 12669.036203860596
Epoch Step: 340 / 819 Loss: 15.540949821472168 Tokens per Sec: 13448.2317629717
Epoch Step: 345 / 819 Loss: 15.401923179626465 Tokens per Sec: 13570.510283425208
Epoch Step: 350 / 819 Loss: 21.278034210205078 Tokens per Sec: 14937.552613802514
Epoch Step: 355 / 819 Loss: 22.79910659790039 Tokens per Sec: 14914.419354732634
Epoch Step: 360 / 819 Loss: 19.444488525390625 Tokens per Sec: 15166.796832126765
Epoch Step: 365 / 819 Loss: 14.060389518737793 Tokens per Sec: 15041.563239781079
Epoch Step: 370 / 819 Loss: 15.704032897949219 Tokens per Sec: 14121.013996185711
Epoch Step: 375 / 819 Loss: 22.294349670410156 Tokens per Sec: 13592.4165811714
Epoch Step: 380 / 819 Loss: 14.075657844543457 Tokens per Sec: 13793.783277017359
Epoch Step: 385 / 819 Loss: 16.8858642578125 Tokens per Sec: 14867.879481633126
Epoch Step: 390 / 819 Loss: 19.330501556396484 Tokens per Sec: 13368.00021957947
Epoch Step: 395 / 819 Loss: 15.726118087768555 Tokens per Sec: 13991.028134124053
Epoch Step: 400 / 819 Loss: 15.501566886901855 Tokens per Sec: 14438.699492282152
Epoch Step: 405 / 819 Loss: 21.98109245300293 Tokens per Sec: 13988.308629588691
Epoch Step: 410 / 819 Loss: 16.76926040649414 Tokens per Sec: 12351.516586613629
Epoch Step: 415 / 819 Loss: 17.873268127441406 Tokens per Sec: 15516.938200917662
Epoch Step: 420 / 819 Loss: 16.333581924438477 Tokens per Sec: 14578.720925915242
Epoch Step: 425 / 819 Loss: 13.248228073120117 Tokens per Sec: 14014.039382766292
Epoch Step: 430 / 819 Loss: 19.932540893554688 Tokens per Sec: 15578.06941262166
Epoch Step: 435 / 819 Loss: 15.308614730834961 Tokens per Sec: 14602.20098621605
Epoch Step: 440 / 819 Loss: 13.282621383666992 Tokens per Sec: 12408.344516624962
Epoch Step: 445 / 819 Loss: 15.788457870483398 Tokens per Sec: 15209.11240171729
Epoch Step: 450 / 819 Loss: 18.94696807861328 Tokens per Sec: 14693.456611362943
Epoch Step: 455 / 819 Loss: 205.38510131835938 Tokens per Sec: 15270.228080357589
Epoch Step: 460 / 819 Loss: 14.796724319458008 Tokens per Sec: 13783.77734707775
Epoch Step: 465 / 819 Loss: 16.400285720825195 Tokens per Sec: 12975.08438166234
Epoch Step: 470 / 819 Loss: 20.924022674560547 Tokens per Sec: 13427.312565780565
Epoch Step: 475 / 819 Loss: 17.82080841064453 Tokens per Sec: 12093.427792625827
Epoch Step: 480 / 819 Loss: 23.988285064697266 Tokens per Sec: 12796.396316265593
Epoch Step: 485 / 819 Loss: 16.163938522338867 Tokens per Sec: 14397.148452641648
Epoch Step: 490 / 819 Loss: 16.09344482421875 Tokens per Sec: 15153.375764004584
Epoch Step: 495 / 819 Loss: 20.906652450561523 Tokens per Sec: 16941.75435882406
Epoch Step: 500 / 819 Loss: 21.416902542114258 Tokens per Sec: 13258.46892055136
Epoch Step: 505 / 819 Loss: 15.832282066345215 Tokens per Sec: 13939.369018844836
Epoch Step: 510 / 819 Loss: 19.344778060913086 Tokens per Sec: 14682.506626757677
Epoch Step: 515 / 819 Loss: 19.286218643188477 Tokens per Sec: 15576.379369592658
Epoch Step: 520 / 819 Loss: 17.352907180786133 Tokens per Sec: 14089.648482704444
Epoch Step: 525 / 819 Loss: 25.819072723388672 Tokens per Sec: 13502.509648320703
Epoch Step: 530 / 819 Loss: 19.43754768371582 Tokens per Sec: 14361.010325020283
Epoch Step: 535 / 819 Loss: 18.787769317626953 Tokens per Sec: 14046.917470105827
Epoch Step: 540 / 819 Loss: 19.94556999206543 Tokens per Sec: 13440.862388661477
Epoch Step: 545 / 819 Loss: 16.644519805908203 Tokens per Sec: 13276.418331585208
Epoch Step: 550 / 819 Loss: 16.750286102294922 Tokens per Sec: 14743.614781471219
Epoch Step: 555 / 819 Loss: 17.037208557128906 Tokens per Sec: 13453.903058625965
Epoch Step: 560 / 819 Loss: 15.850793838500977 Tokens per Sec: 15207.867480973893
Epoch Step: 565 / 819 Loss: 15.47392463684082 Tokens per Sec: 13106.44631975154
Epoch Step: 570 / 819 Loss: 16.584857940673828 Tokens per Sec: 12820.68714959221
Epoch Step: 575 / 819 Loss: 250.07435607910156 Tokens per Sec: 13672.3813506991
Epoch Step: 580 / 819 Loss: 17.455209732055664 Tokens per Sec: 15315.00456121281
Epoch Step: 585 / 819 Loss: 15.359047889709473 Tokens per Sec: 13705.149490364993
Epoch Step: 590 / 819 Loss: 13.484472274780273 Tokens per Sec: 12729.582891984986
Epoch Step: 595 / 819 Loss: 12.514595985412598 Tokens per Sec: 14612.299299639042
Epoch Step: 600 / 819 Loss: 17.798940658569336 Tokens per Sec: 13273.705947711955
Epoch Step: 605 / 819 Loss: 19.968647003173828 Tokens per Sec: 16047.499164917735
Epoch Step: 610 / 819 Loss: 11.59910774230957 Tokens per Sec: 12535.972681113291
Epoch Step: 615 / 819 Loss: 14.891800880432129 Tokens per Sec: 14860.891377362734
Epoch Step: 620 / 819 Loss: 20.354768753051758 Tokens per Sec: 15013.94539252518
Epoch Step: 625 / 819 Loss: 16.462308883666992 Tokens per Sec: 13974.277144322265
Epoch Step: 630 / 819 Loss: 12.778367042541504 Tokens per Sec: 14457.880026002715
Epoch Step: 635 / 819 Loss: 19.02337074279785 Tokens per Sec: 15656.01389220801
Epoch Step: 640 / 819 Loss: 271.31829833984375 Tokens per Sec: 14552.868655599828
Epoch Step: 645 / 819 Loss: 15.6292142868042 Tokens per Sec: 14297.389106925995
Epoch Step: 650 / 819 Loss: 12.77441692352295 Tokens per Sec: 15724.1691496718
Epoch Step: 655 / 819 Loss: 10.565667152404785 Tokens per Sec: 14090.616072202849
Epoch Step: 660 / 819 Loss: 20.913490295410156 Tokens per Sec: 12832.372275158532
Epoch Step: 665 / 819 Loss: 14.705751419067383 Tokens per Sec: 12865.064019720678
Epoch Step: 670 / 819 Loss: 21.032114028930664 Tokens per Sec: 13858.062297527511
Epoch Step: 675 / 819 Loss: 15.006841659545898 Tokens per Sec: 14731.991528452025
Epoch Step: 680 / 819 Loss: 15.870471000671387 Tokens per Sec: 14443.694765195069
Epoch Step: 685 / 819 Loss: 20.63072967529297 Tokens per Sec: 14529.394005775892
Epoch Step: 690 / 819 Loss: 18.23569107055664 Tokens per Sec: 16945.60997418219
Epoch Step: 695 / 819 Loss: 18.72846221923828 Tokens per Sec: 14813.529302032619
Epoch Step: 700 / 819 Loss: 17.323307037353516 Tokens per Sec: 14701.134576895365
Epoch Step: 705 / 819 Loss: 18.426565170288086 Tokens per Sec: 13217.007881857293
Epoch Step: 710 / 819 Loss: 167.91819763183594 Tokens per Sec: 13461.05033548697
Epoch Step: 715 / 819 Loss: 14.815320014953613 Tokens per Sec: 14512.97735674705
Epoch Step: 720 / 819 Loss: 16.40462303161621 Tokens per Sec: 14218.849438133511
Epoch Step: 725 / 819 Loss: 14.519990921020508 Tokens per Sec: 13187.45203026494
Epoch Step: 730 / 819 Loss: 17.414493560791016 Tokens per Sec: 15094.438925395392
Epoch Step: 735 / 819 Loss: 17.73560905456543 Tokens per Sec: 15325.44585627481
Epoch Step: 740 / 819 Loss: 12.68620491027832 Tokens per Sec: 12891.180229664427
Epoch Step: 745 / 819 Loss: 14.50735855102539 Tokens per Sec: 14772.942709801975
Epoch Step: 750 / 819 Loss: 14.877523422241211 Tokens per Sec: 14662.11570734476
Epoch Step: 755 / 819 Loss: 18.766368865966797 Tokens per Sec: 12103.46309287607
Epoch Step: 760 / 819 Loss: 13.520994186401367 Tokens per Sec: 13562.17318705072
Epoch Step: 765 / 819 Loss: 15.307995796203613 Tokens per Sec: 15021.134953369983
Epoch Step: 770 / 819 Loss: 13.476062774658203 Tokens per Sec: 14387.574819215857
Epoch Step: 775 / 819 Loss: 14.065497398376465 Tokens per Sec: 14218.182733527294
Epoch Step: 780 / 819 Loss: 12.700347900390625 Tokens per Sec: 15157.179272651947
Epoch Step: 785 / 819 Loss: 13.812684059143066 Tokens per Sec: 14712.455846357807
Epoch Step: 790 / 819 Loss: 16.023460388183594 Tokens per Sec: 13673.00148834591
Epoch Step: 795 / 819 Loss: 11.534933090209961 Tokens per Sec: 14869.344946339266
Epoch Step: 800 / 819 Loss: 164.7477569580078 Tokens per Sec: 15081.372701450227
Epoch Step: 805 / 819 Loss: 14.756450653076172 Tokens per Sec: 13970.898033899257
Epoch Step: 810 / 819 Loss: 18.145893096923828 Tokens per Sec: 13950.146563623995
Epoch Step: 815 / 819 Loss: 15.748863220214844 Tokens per Sec: 13914.990289824622
Epoch ended with duration 0:04:36.354855
Train perplexity: 1.5794738064422265
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.878191
Validation perplexity: 1.6040738074629894
Epoch 37 / 1000
Epoch Step: 5 / 819 Loss: 13.884222984313965 Tokens per Sec: 14624.704935960886
Epoch Step: 10 / 819 Loss: 16.210670471191406 Tokens per Sec: 12765.142360959939
Epoch Step: 15 / 819 Loss: 13.1782865524292 Tokens per Sec: 13731.862622915178
Epoch Step: 20 / 819 Loss: 18.232643127441406 Tokens per Sec: 13649.075431145175
Epoch Step: 25 / 819 Loss: 125.04656982421875 Tokens per Sec: 13321.612208910788
Epoch Step: 30 / 819 Loss: 14.830041885375977 Tokens per Sec: 12445.22067357828
Epoch Step: 35 / 819 Loss: 19.46234130859375 Tokens per Sec: 14857.694475579485
Epoch Step: 40 / 819 Loss: 19.236618041992188 Tokens per Sec: 13779.811437193717
Epoch Step: 45 / 819 Loss: 19.310319900512695 Tokens per Sec: 13977.368392418444
Epoch Step: 50 / 819 Loss: 12.634727478027344 Tokens per Sec: 13800.462091473264
Epoch Step: 55 / 819 Loss: 14.1276216506958 Tokens per Sec: 13790.704550177117
Epoch Step: 60 / 819 Loss: 15.90179443359375 Tokens per Sec: 14426.07191290979
Epoch Step: 65 / 819 Loss: 15.011391639709473 Tokens per Sec: 14542.312733213153
Epoch Step: 70 / 819 Loss: 218.30178833007812 Tokens per Sec: 14251.254184671681
Epoch Step: 75 / 819 Loss: 15.627534866333008 Tokens per Sec: 13521.054838545051
Epoch Step: 80 / 819 Loss: 17.89189910888672 Tokens per Sec: 12706.408653849474
Epoch Step: 85 / 819 Loss: 15.495999336242676 Tokens per Sec: 14234.54315074612
Epoch Step: 90 / 819 Loss: 19.23318862915039 Tokens per Sec: 15382.83749377488
Epoch Step: 95 / 819 Loss: 16.632387161254883 Tokens per Sec: 13713.039934858652
Epoch Step: 100 / 819 Loss: 206.25270080566406 Tokens per Sec: 13408.898436644678
Epoch Step: 105 / 819 Loss: 13.75175952911377 Tokens per Sec: 15573.945465666422
Epoch Step: 110 / 819 Loss: 16.510066986083984 Tokens per Sec: 13158.54456923493
Epoch Step: 115 / 819 Loss: 17.632505416870117 Tokens per Sec: 14194.486617171728
Epoch Step: 120 / 819 Loss: 18.624095916748047 Tokens per Sec: 15475.117559558577
Epoch Step: 125 / 819 Loss: 18.788734436035156 Tokens per Sec: 13747.53043268297
Epoch Step: 130 / 819 Loss: 15.761548042297363 Tokens per Sec: 13881.454536048608
Epoch Step: 135 / 819 Loss: 14.74166488647461 Tokens per Sec: 12891.067184059493
Epoch Step: 140 / 819 Loss: 16.818668365478516 Tokens per Sec: 13425.450819195814
Epoch Step: 145 / 819 Loss: 18.96723175048828 Tokens per Sec: 16285.806530498556
Epoch Step: 150 / 819 Loss: 168.44775390625 Tokens per Sec: 13993.596547363935
Epoch Step: 155 / 819 Loss: 149.90380859375 Tokens per Sec: 15208.277341733443
Epoch Step: 160 / 819 Loss: 21.048246383666992 Tokens per Sec: 14509.054815343203
Epoch Step: 165 / 819 Loss: 20.301279067993164 Tokens per Sec: 13842.595871827205
Epoch Step: 170 / 819 Loss: 20.657054901123047 Tokens per Sec: 14396.137195520838
Epoch Step: 175 / 819 Loss: 15.280357360839844 Tokens per Sec: 14831.127399019097
Epoch Step: 180 / 819 Loss: 175.530029296875 Tokens per Sec: 16252.505808810938
Epoch Step: 185 / 819 Loss: 23.096891403198242 Tokens per Sec: 14165.939377091236
Epoch Step: 190 / 819 Loss: 18.20575714111328 Tokens per Sec: 11866.720936328362
Epoch Step: 195 / 819 Loss: 23.032882690429688 Tokens per Sec: 14900.253348864633
Epoch Step: 200 / 819 Loss: 21.76898956298828 Tokens per Sec: 13626.960315876851
Epoch Step: 205 / 819 Loss: 18.096599578857422 Tokens per Sec: 13169.204983647349
Epoch Step: 210 / 819 Loss: 21.85546875 Tokens per Sec: 14979.795208406269
Epoch Step: 215 / 819 Loss: 16.546138763427734 Tokens per Sec: 13108.903195283847
Epoch Step: 220 / 819 Loss: 124.51852416992188 Tokens per Sec: 14238.792040098524
Epoch Step: 225 / 819 Loss: 19.453832626342773 Tokens per Sec: 15443.397979125928
Epoch Step: 230 / 819 Loss: 21.010478973388672 Tokens per Sec: 13917.874740238325
Epoch Step: 235 / 819 Loss: 18.68877601623535 Tokens per Sec: 15018.250221259957
Epoch Step: 240 / 819 Loss: 19.245458602905273 Tokens per Sec: 13659.60570019204
Epoch Step: 245 / 819 Loss: 20.268190383911133 Tokens per Sec: 14115.68116232424
Epoch Step: 250 / 819 Loss: 14.612150192260742 Tokens per Sec: 14026.107412936732
Epoch Step: 255 / 819 Loss: 13.141724586486816 Tokens per Sec: 14891.541991107431
Epoch Step: 260 / 819 Loss: 15.65231704711914 Tokens per Sec: 15330.256676095905
Epoch Step: 265 / 819 Loss: 18.005769729614258 Tokens per Sec: 12873.838028770891
Epoch Step: 270 / 819 Loss: 22.831579208374023 Tokens per Sec: 14477.088136370656
Epoch Step: 275 / 819 Loss: 17.62957191467285 Tokens per Sec: 14525.96775553654
Epoch Step: 280 / 819 Loss: 12.56119155883789 Tokens per Sec: 16945.695290229363
Epoch Step: 285 / 819 Loss: 17.347829818725586 Tokens per Sec: 13925.155674536894
Epoch Step: 290 / 819 Loss: 18.780370712280273 Tokens per Sec: 11996.200635782789
Epoch Step: 295 / 819 Loss: 163.3783721923828 Tokens per Sec: 12997.473965368801
Epoch Step: 300 / 819 Loss: 15.184476852416992 Tokens per Sec: 13105.585970468903
Epoch Step: 305 / 819 Loss: 18.94448471069336 Tokens per Sec: 15178.34662529295
Epoch Step: 310 / 819 Loss: 15.65665054321289 Tokens per Sec: 12798.175601038361
Epoch Step: 315 / 819 Loss: 18.25706672668457 Tokens per Sec: 17294.15211787241
Epoch Step: 320 / 819 Loss: 17.003833770751953 Tokens per Sec: 14749.439658311328
Epoch Step: 325 / 819 Loss: 19.23685073852539 Tokens per Sec: 14151.608799162936
Epoch Step: 330 / 819 Loss: 264.19073486328125 Tokens per Sec: 13948.8470275433
Epoch Step: 335 / 819 Loss: 18.465286254882812 Tokens per Sec: 13858.071353027355
Epoch Step: 340 / 819 Loss: 12.11432933807373 Tokens per Sec: 14738.735424968258
Epoch Step: 345 / 819 Loss: 205.34146118164062 Tokens per Sec: 14676.470074639119
Epoch Step: 350 / 819 Loss: 13.941485404968262 Tokens per Sec: 13956.084947722751
Epoch Step: 355 / 819 Loss: 16.566669464111328 Tokens per Sec: 13517.716624288629
Epoch Step: 360 / 819 Loss: 10.00478744506836 Tokens per Sec: 14692.019034182948
Epoch Step: 365 / 819 Loss: 18.453664779663086 Tokens per Sec: 13704.494565005594
Epoch Step: 370 / 819 Loss: 20.066057205200195 Tokens per Sec: 12818.150594058056
Epoch Step: 375 / 819 Loss: 22.53495979309082 Tokens per Sec: 14349.656110521413
Epoch Step: 380 / 819 Loss: 18.069969177246094 Tokens per Sec: 12945.650276612309
Epoch Step: 385 / 819 Loss: 16.162424087524414 Tokens per Sec: 15876.395865025694
Epoch Step: 390 / 819 Loss: 17.016725540161133 Tokens per Sec: 13932.550410093587
Epoch Step: 395 / 819 Loss: 16.375593185424805 Tokens per Sec: 12006.791192132048
Epoch Step: 400 / 819 Loss: 18.75473403930664 Tokens per Sec: 12689.511161242757
Epoch Step: 405 / 819 Loss: 20.76762580871582 Tokens per Sec: 14782.021298984317
Epoch Step: 410 / 819 Loss: 15.484365463256836 Tokens per Sec: 12439.504855207522
Epoch Step: 415 / 819 Loss: 17.364578247070312 Tokens per Sec: 13806.327716672473
Epoch Step: 420 / 819 Loss: 19.614166259765625 Tokens per Sec: 13752.077351523105
Epoch Step: 425 / 819 Loss: 14.497466087341309 Tokens per Sec: 13913.75691275113
Epoch Step: 430 / 819 Loss: 14.836828231811523 Tokens per Sec: 16494.776169824814
Epoch Step: 435 / 819 Loss: 13.487391471862793 Tokens per Sec: 15112.037838249922
Epoch Step: 440 / 819 Loss: 13.895904541015625 Tokens per Sec: 13724.513279990993
Epoch Step: 445 / 819 Loss: 14.440773010253906 Tokens per Sec: 14668.187439876556
Epoch Step: 450 / 819 Loss: 224.89869689941406 Tokens per Sec: 16467.887318385383
Epoch Step: 455 / 819 Loss: 15.846052169799805 Tokens per Sec: 13539.6733397654
Epoch Step: 460 / 819 Loss: 19.354780197143555 Tokens per Sec: 13163.65467667018
Epoch Step: 465 / 819 Loss: 20.30698585510254 Tokens per Sec: 13716.914680898006
Epoch Step: 470 / 819 Loss: 17.344913482666016 Tokens per Sec: 14660.497878237
Epoch Step: 475 / 819 Loss: 10.525415420532227 Tokens per Sec: 12061.888437958447
Epoch Step: 480 / 819 Loss: 22.76306915283203 Tokens per Sec: 13440.743214118269
Epoch Step: 485 / 819 Loss: 15.886137962341309 Tokens per Sec: 12813.447939258069
Epoch Step: 490 / 819 Loss: 20.20478057861328 Tokens per Sec: 13179.928023522445
Epoch Step: 495 / 819 Loss: 261.4068603515625 Tokens per Sec: 14365.086584023345
Epoch Step: 500 / 819 Loss: 153.25399780273438 Tokens per Sec: 13223.624146424545
Epoch Step: 505 / 819 Loss: 18.898439407348633 Tokens per Sec: 14543.089317782185
Epoch Step: 510 / 819 Loss: 14.655194282531738 Tokens per Sec: 15711.24564050805
Epoch Step: 515 / 819 Loss: 16.302927017211914 Tokens per Sec: 13577.480461460074
Epoch Step: 520 / 819 Loss: 17.907197952270508 Tokens per Sec: 14742.51169327021
Epoch Step: 525 / 819 Loss: 15.694592475891113 Tokens per Sec: 15564.93035504474
Epoch Step: 530 / 819 Loss: 155.02383422851562 Tokens per Sec: 14991.796612481952
Epoch Step: 535 / 819 Loss: 21.83761215209961 Tokens per Sec: 14173.166617955447
Epoch Step: 540 / 819 Loss: 19.980932235717773 Tokens per Sec: 13087.313632492487
Epoch Step: 545 / 819 Loss: 19.037399291992188 Tokens per Sec: 13799.000337368194
Epoch Step: 550 / 819 Loss: 19.396839141845703 Tokens per Sec: 13773.576988763598
Epoch Step: 555 / 819 Loss: 14.153711318969727 Tokens per Sec: 13380.687597857486
Epoch Step: 560 / 819 Loss: 20.250335693359375 Tokens per Sec: 15477.046468036053
Epoch Step: 565 / 819 Loss: 20.564163208007812 Tokens per Sec: 12545.997599104483
Epoch Step: 570 / 819 Loss: 17.2785587310791 Tokens per Sec: 13339.460110302809
Epoch Step: 575 / 819 Loss: 15.751769065856934 Tokens per Sec: 12858.920708657126
Epoch Step: 580 / 819 Loss: 246.3059844970703 Tokens per Sec: 14884.501068402562
Epoch Step: 585 / 819 Loss: 12.158342361450195 Tokens per Sec: 15414.24041377666
Epoch Step: 590 / 819 Loss: 19.911243438720703 Tokens per Sec: 13327.485914214061
Epoch Step: 595 / 819 Loss: 16.745737075805664 Tokens per Sec: 14626.92092138873
Epoch Step: 600 / 819 Loss: 21.130229949951172 Tokens per Sec: 14524.086217088505
Epoch Step: 605 / 819 Loss: 165.42770385742188 Tokens per Sec: 14452.334188456576
Epoch Step: 610 / 819 Loss: 22.94993782043457 Tokens per Sec: 14892.97474291132
Epoch Step: 615 / 819 Loss: 12.366538047790527 Tokens per Sec: 14313.963725298134
Epoch Step: 620 / 819 Loss: 23.434738159179688 Tokens per Sec: 14027.532341384393
Epoch Step: 625 / 819 Loss: 202.09124755859375 Tokens per Sec: 14451.431161333365
Epoch Step: 630 / 819 Loss: 16.248231887817383 Tokens per Sec: 12975.517359237496
Epoch Step: 635 / 819 Loss: 15.25956916809082 Tokens per Sec: 13194.560399362994
Epoch Step: 640 / 819 Loss: 15.902050018310547 Tokens per Sec: 12100.30209953154
Epoch Step: 645 / 819 Loss: 16.37750244140625 Tokens per Sec: 14088.932304622385
Epoch Step: 650 / 819 Loss: 18.481698989868164 Tokens per Sec: 13589.193500301211
Epoch Step: 655 / 819 Loss: 172.49819946289062 Tokens per Sec: 14868.510398993874
Epoch Step: 660 / 819 Loss: 21.787994384765625 Tokens per Sec: 13283.679593292698
Epoch Step: 665 / 819 Loss: 13.01557445526123 Tokens per Sec: 15469.699948078936
Epoch Step: 670 / 819 Loss: 20.67302703857422 Tokens per Sec: 15683.024900006007
Epoch Step: 675 / 819 Loss: 16.457347869873047 Tokens per Sec: 14126.921775840769
Epoch Step: 680 / 819 Loss: 20.977249145507812 Tokens per Sec: 15021.256828798809
Epoch Step: 685 / 819 Loss: 15.346722602844238 Tokens per Sec: 14303.532998107086
Epoch Step: 690 / 819 Loss: 13.511923789978027 Tokens per Sec: 12489.142789255293
Epoch Step: 695 / 819 Loss: 16.46625518798828 Tokens per Sec: 13068.222930838085
Epoch Step: 700 / 819 Loss: 95.46253204345703 Tokens per Sec: 14841.187322305523
Epoch Step: 705 / 819 Loss: 16.998022079467773 Tokens per Sec: 12594.469518231335
Epoch Step: 710 / 819 Loss: 15.453278541564941 Tokens per Sec: 14293.34887367913
Epoch Step: 715 / 819 Loss: 18.089305877685547 Tokens per Sec: 14826.71755201089
Epoch Step: 720 / 819 Loss: 18.118200302124023 Tokens per Sec: 14450.230591030591
Epoch Step: 725 / 819 Loss: 15.270852088928223 Tokens per Sec: 14620.550038526797
Epoch Step: 730 / 819 Loss: 108.72364807128906 Tokens per Sec: 13649.091540539797
Epoch Step: 735 / 819 Loss: 18.06647300720215 Tokens per Sec: 14538.511615038406
Epoch Step: 740 / 819 Loss: 119.83067321777344 Tokens per Sec: 14368.055589090036
Epoch Step: 745 / 819 Loss: 17.000234603881836 Tokens per Sec: 12606.196407799072
Epoch Step: 750 / 819 Loss: 15.309778213500977 Tokens per Sec: 13743.42759447228
Epoch Step: 755 / 819 Loss: 22.10740852355957 Tokens per Sec: 13177.09667084597
Epoch Step: 760 / 819 Loss: 18.327856063842773 Tokens per Sec: 14228.48267522409
Epoch Step: 765 / 819 Loss: 19.772783279418945 Tokens per Sec: 14512.997238912589
Epoch Step: 770 / 819 Loss: 18.160980224609375 Tokens per Sec: 13587.33209734801
Epoch Step: 775 / 819 Loss: 20.963747024536133 Tokens per Sec: 15486.311248721087
Epoch Step: 780 / 819 Loss: 17.78060531616211 Tokens per Sec: 14068.273887660132
Epoch Step: 785 / 819 Loss: 17.187376022338867 Tokens per Sec: 13764.942645823432
Epoch Step: 790 / 819 Loss: 18.895856857299805 Tokens per Sec: 13008.665770005236
Epoch Step: 795 / 819 Loss: 16.440937042236328 Tokens per Sec: 14520.559722453501
Epoch Step: 800 / 819 Loss: 17.85812759399414 Tokens per Sec: 14181.373973423551
Epoch Step: 805 / 819 Loss: 17.2340145111084 Tokens per Sec: 14467.355905580062
Epoch Step: 810 / 819 Loss: 17.51573944091797 Tokens per Sec: 11124.912451563545
Epoch Step: 815 / 819 Loss: 16.775009155273438 Tokens per Sec: 13212.92148350282
Epoch ended with duration 0:04:37.104097
Train perplexity: 1.5716101510610958
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.589086
Validation perplexity: 1.5056625470347331
Epoch 38 / 1000
Epoch Step: 5 / 819 Loss: 23.266332626342773 Tokens per Sec: 13245.918275379421
Epoch Step: 10 / 819 Loss: 19.558195114135742 Tokens per Sec: 13985.827904351685
Epoch Step: 15 / 819 Loss: 14.864982604980469 Tokens per Sec: 13164.038216149009
Epoch Step: 20 / 819 Loss: 15.850010871887207 Tokens per Sec: 12509.724188728058
Epoch Step: 25 / 819 Loss: 12.008539199829102 Tokens per Sec: 13003.419461747968
Epoch Step: 30 / 819 Loss: 13.284025192260742 Tokens per Sec: 15275.731038704924
Epoch Step: 35 / 819 Loss: 171.64712524414062 Tokens per Sec: 16369.922940894407
Epoch Step: 40 / 819 Loss: 16.605941772460938 Tokens per Sec: 13238.581546859186
Epoch Step: 45 / 819 Loss: 161.2082061767578 Tokens per Sec: 16689.57597552203
Epoch Step: 50 / 819 Loss: 18.961380004882812 Tokens per Sec: 14451.406741234077
Epoch Step: 55 / 819 Loss: 21.03921890258789 Tokens per Sec: 14899.08685839888
Epoch Step: 60 / 819 Loss: 25.32473373413086 Tokens per Sec: 13290.840571008806
Epoch Step: 65 / 819 Loss: 21.35540771484375 Tokens per Sec: 14108.230302416096
Epoch Step: 70 / 819 Loss: 21.116193771362305 Tokens per Sec: 14890.090433856336
Epoch Step: 75 / 819 Loss: 15.615735054016113 Tokens per Sec: 15423.013957326
Epoch Step: 80 / 819 Loss: 16.195940017700195 Tokens per Sec: 13528.936541822266
Epoch Step: 85 / 819 Loss: 16.86036491394043 Tokens per Sec: 14170.865460492334
Epoch Step: 90 / 819 Loss: 13.77472972869873 Tokens per Sec: 14355.298843042347
Epoch Step: 95 / 819 Loss: 13.604233741760254 Tokens per Sec: 13737.526354977612
Epoch Step: 100 / 819 Loss: 16.61893653869629 Tokens per Sec: 13758.471255896402
Epoch Step: 105 / 819 Loss: 15.968820571899414 Tokens per Sec: 15265.517534542345
Epoch Step: 110 / 819 Loss: 15.996504783630371 Tokens per Sec: 12269.70758243493
Epoch Step: 115 / 819 Loss: 13.710343360900879 Tokens per Sec: 13719.842649246351
Epoch Step: 120 / 819 Loss: 23.02349281311035 Tokens per Sec: 15646.841781398969
Epoch Step: 125 / 819 Loss: 19.536195755004883 Tokens per Sec: 14474.160713966767
Epoch Step: 130 / 819 Loss: 17.93065071105957 Tokens per Sec: 13107.909775766064
Epoch Step: 135 / 819 Loss: 12.20897388458252 Tokens per Sec: 13720.571328449887
Epoch Step: 140 / 819 Loss: 18.38523292541504 Tokens per Sec: 14046.437057506686
Epoch Step: 145 / 819 Loss: 13.808812141418457 Tokens per Sec: 15086.580478334714
Epoch Step: 150 / 819 Loss: 15.422722816467285 Tokens per Sec: 16001.41797854588
Epoch Step: 155 / 819 Loss: 215.4143524169922 Tokens per Sec: 15106.12213517114
Epoch Step: 160 / 819 Loss: 15.078919410705566 Tokens per Sec: 14108.547185080159
Epoch Step: 165 / 819 Loss: 19.853315353393555 Tokens per Sec: 15180.939147705973
Epoch Step: 170 / 819 Loss: 19.344858169555664 Tokens per Sec: 15609.76691717707
Epoch Step: 175 / 819 Loss: 12.473932266235352 Tokens per Sec: 14995.952204830317
Epoch Step: 180 / 819 Loss: 19.03087615966797 Tokens per Sec: 14905.40528984993
Epoch Step: 185 / 819 Loss: 20.565265655517578 Tokens per Sec: 15507.023854810664
Epoch Step: 190 / 819 Loss: 17.913022994995117 Tokens per Sec: 13083.336894731492
Epoch Step: 195 / 819 Loss: 19.89200782775879 Tokens per Sec: 13655.746006679019
Epoch Step: 200 / 819 Loss: 15.718029022216797 Tokens per Sec: 13101.895073128433
Epoch Step: 205 / 819 Loss: 16.85732650756836 Tokens per Sec: 14063.549293163813
Epoch Step: 210 / 819 Loss: 253.98052978515625 Tokens per Sec: 15124.493674179224
Epoch Step: 215 / 819 Loss: 14.71950912475586 Tokens per Sec: 14469.963044272947
Epoch Step: 220 / 819 Loss: 20.202880859375 Tokens per Sec: 14587.781515144015
Epoch Step: 225 / 819 Loss: 19.278547286987305 Tokens per Sec: 13582.894807368926
Epoch Step: 230 / 819 Loss: 17.813461303710938 Tokens per Sec: 15363.184010403744
Epoch Step: 235 / 819 Loss: 18.508651733398438 Tokens per Sec: 14978.600546328951
Epoch Step: 240 / 819 Loss: 13.266683578491211 Tokens per Sec: 13616.584081800329
Epoch Step: 245 / 819 Loss: 20.683481216430664 Tokens per Sec: 14098.873250471182
Epoch Step: 250 / 819 Loss: 20.27750015258789 Tokens per Sec: 12819.046502061723
Epoch Step: 255 / 819 Loss: 15.593165397644043 Tokens per Sec: 14109.110256054155
Epoch Step: 260 / 819 Loss: 19.92031478881836 Tokens per Sec: 12539.693157073503
Epoch Step: 265 / 819 Loss: 16.819595336914062 Tokens per Sec: 13452.895960797712
Epoch Step: 270 / 819 Loss: 14.303662300109863 Tokens per Sec: 14791.728876224639
Epoch Step: 275 / 819 Loss: 17.186744689941406 Tokens per Sec: 13472.729704434485
Epoch Step: 280 / 819 Loss: 13.514034271240234 Tokens per Sec: 15213.553724290941
Epoch Step: 285 / 819 Loss: 19.2471981048584 Tokens per Sec: 14527.082331867623
Epoch Step: 290 / 819 Loss: 14.745609283447266 Tokens per Sec: 13099.318563534858
Epoch Step: 295 / 819 Loss: 202.090087890625 Tokens per Sec: 13155.898817648913
Epoch Step: 300 / 819 Loss: 18.79165267944336 Tokens per Sec: 14209.108164931173
Epoch Step: 305 / 819 Loss: 18.362266540527344 Tokens per Sec: 12938.043299390481
Epoch Step: 310 / 819 Loss: 19.027385711669922 Tokens per Sec: 13621.315944351942
Epoch Step: 315 / 819 Loss: 15.022509574890137 Tokens per Sec: 15113.78962128779
Epoch Step: 320 / 819 Loss: 21.083240509033203 Tokens per Sec: 13708.660109080085
Epoch Step: 325 / 819 Loss: 21.691286087036133 Tokens per Sec: 13247.915518161222
Epoch Step: 330 / 819 Loss: 19.92946434020996 Tokens per Sec: 13700.123291242911
Epoch Step: 335 / 819 Loss: 16.98740577697754 Tokens per Sec: 14700.245092811989
Epoch Step: 340 / 819 Loss: 20.09918212890625 Tokens per Sec: 14061.488866895374
Epoch Step: 345 / 819 Loss: 20.272493362426758 Tokens per Sec: 12608.530006339048
Epoch Step: 350 / 819 Loss: 20.614486694335938 Tokens per Sec: 13313.638382384854
Epoch Step: 355 / 819 Loss: 16.08052635192871 Tokens per Sec: 13239.395770591114
Epoch Step: 360 / 819 Loss: 12.803550720214844 Tokens per Sec: 13643.496974135483
Epoch Step: 365 / 819 Loss: 13.280866622924805 Tokens per Sec: 13911.210727135858
Epoch Step: 370 / 819 Loss: 15.336119651794434 Tokens per Sec: 14723.581117993946
Epoch Step: 375 / 819 Loss: 18.44223403930664 Tokens per Sec: 15033.876275844046
Epoch Step: 380 / 819 Loss: 15.180192947387695 Tokens per Sec: 14718.661300018426
Epoch Step: 385 / 819 Loss: 14.624737739562988 Tokens per Sec: 13804.98692754167
Epoch Step: 390 / 819 Loss: 11.996399879455566 Tokens per Sec: 13740.4911328613
Epoch Step: 395 / 819 Loss: 19.269363403320312 Tokens per Sec: 13455.30482636805
Epoch Step: 400 / 819 Loss: 13.893802642822266 Tokens per Sec: 13192.057224679207
Epoch Step: 405 / 819 Loss: 12.252542495727539 Tokens per Sec: 14437.67106439051
Epoch Step: 410 / 819 Loss: 12.582983016967773 Tokens per Sec: 13550.4524559229
Epoch Step: 415 / 819 Loss: 12.140206336975098 Tokens per Sec: 14167.41934155934
Epoch Step: 420 / 819 Loss: 277.1511535644531 Tokens per Sec: 16136.774627921744
Epoch Step: 425 / 819 Loss: 13.907011032104492 Tokens per Sec: 12935.771800415923
Epoch Step: 430 / 819 Loss: 17.015653610229492 Tokens per Sec: 13229.644686720438
Epoch Step: 435 / 819 Loss: 15.588682174682617 Tokens per Sec: 13043.699165112215
Epoch Step: 440 / 819 Loss: 19.857898712158203 Tokens per Sec: 14248.820912861582
Epoch Step: 445 / 819 Loss: 13.5741605758667 Tokens per Sec: 15785.900818825243
Epoch Step: 450 / 819 Loss: 16.37799835205078 Tokens per Sec: 15100.551003468552
Epoch Step: 455 / 819 Loss: 21.908977508544922 Tokens per Sec: 13480.763232582824
Epoch Step: 460 / 819 Loss: 14.462747573852539 Tokens per Sec: 14914.603949732416
Epoch Step: 465 / 819 Loss: 17.022146224975586 Tokens per Sec: 13292.400219325995
Epoch Step: 470 / 819 Loss: 15.195722579956055 Tokens per Sec: 13343.481133802976
Epoch Step: 475 / 819 Loss: 20.315752029418945 Tokens per Sec: 14569.009741571304
Epoch Step: 480 / 819 Loss: 23.909778594970703 Tokens per Sec: 13364.205552813935
Epoch Step: 485 / 819 Loss: 18.039997100830078 Tokens per Sec: 14980.160041919089
Epoch Step: 490 / 819 Loss: 18.234689712524414 Tokens per Sec: 13547.193057546736
Epoch Step: 495 / 819 Loss: 22.760313034057617 Tokens per Sec: 13709.090909686
Epoch Step: 500 / 819 Loss: 14.356473922729492 Tokens per Sec: 13066.75683860644
Epoch Step: 505 / 819 Loss: 16.141834259033203 Tokens per Sec: 14836.000680954092
Epoch Step: 510 / 819 Loss: 229.9871826171875 Tokens per Sec: 12729.06362369938
Epoch Step: 515 / 819 Loss: 20.465856552124023 Tokens per Sec: 15098.633690722061
Epoch Step: 520 / 819 Loss: 16.281648635864258 Tokens per Sec: 12567.261133864855
Epoch Step: 525 / 819 Loss: 196.15968322753906 Tokens per Sec: 14778.863859378132
Epoch Step: 530 / 819 Loss: 20.8087100982666 Tokens per Sec: 13951.842541364327
Epoch Step: 535 / 819 Loss: 22.087947845458984 Tokens per Sec: 13157.816746507535
Epoch Step: 540 / 819 Loss: 19.76085090637207 Tokens per Sec: 14428.583572205858
Epoch Step: 545 / 819 Loss: 22.946773529052734 Tokens per Sec: 13415.591776483077
Epoch Step: 550 / 819 Loss: 18.764083862304688 Tokens per Sec: 12747.840667854523
Epoch Step: 555 / 819 Loss: 22.7377872467041 Tokens per Sec: 15525.603189310576
Epoch Step: 560 / 819 Loss: 17.526201248168945 Tokens per Sec: 13651.210891045972
Epoch Step: 565 / 819 Loss: 18.885072708129883 Tokens per Sec: 13376.4019813339
Epoch Step: 570 / 819 Loss: 15.937500953674316 Tokens per Sec: 13624.293647190698
Epoch Step: 575 / 819 Loss: 17.8602352142334 Tokens per Sec: 13542.748193205967
Epoch Step: 580 / 819 Loss: 18.28335952758789 Tokens per Sec: 13524.153667836632
Epoch Step: 585 / 819 Loss: 10.788708686828613 Tokens per Sec: 13519.405781051739
Epoch Step: 590 / 819 Loss: 12.355679512023926 Tokens per Sec: 13325.69365320836
Epoch Step: 595 / 819 Loss: 19.061325073242188 Tokens per Sec: 14747.769402076614
Epoch Step: 600 / 819 Loss: 188.019775390625 Tokens per Sec: 14452.67106984873
Epoch Step: 605 / 819 Loss: 16.077117919921875 Tokens per Sec: 13560.752919315957
Epoch Step: 610 / 819 Loss: 16.40050506591797 Tokens per Sec: 14248.552296973705
Epoch Step: 615 / 819 Loss: 18.597375869750977 Tokens per Sec: 13080.073710770277
Epoch Step: 620 / 819 Loss: 18.085233688354492 Tokens per Sec: 12885.545996383893
Epoch Step: 625 / 819 Loss: 14.283614158630371 Tokens per Sec: 12600.219066568012
Epoch Step: 630 / 819 Loss: 13.357307434082031 Tokens per Sec: 13918.611987683047
Epoch Step: 635 / 819 Loss: 15.185174942016602 Tokens per Sec: 14524.703327810428
Epoch Step: 640 / 819 Loss: 18.82887077331543 Tokens per Sec: 15181.03488849534
Epoch Step: 645 / 819 Loss: 14.249834060668945 Tokens per Sec: 15049.339421375455
Epoch Step: 650 / 819 Loss: 21.06291389465332 Tokens per Sec: 12804.74481696129
Epoch Step: 655 / 819 Loss: 92.68809509277344 Tokens per Sec: 13375.146215290028
Epoch Step: 660 / 819 Loss: 15.240968704223633 Tokens per Sec: 13923.657823029931
Epoch Step: 665 / 819 Loss: 15.279609680175781 Tokens per Sec: 14354.45078408387
Epoch Step: 670 / 819 Loss: 19.87064552307129 Tokens per Sec: 15370.157105135706
Epoch Step: 675 / 819 Loss: 18.910524368286133 Tokens per Sec: 13830.25455299568
Epoch Step: 680 / 819 Loss: 173.2884521484375 Tokens per Sec: 14010.096052108389
Epoch Step: 685 / 819 Loss: 12.811184883117676 Tokens per Sec: 12725.762499449671
Epoch Step: 690 / 819 Loss: 21.303253173828125 Tokens per Sec: 13542.3382415956
Epoch Step: 695 / 819 Loss: 221.68991088867188 Tokens per Sec: 15345.867845719298
Epoch Step: 700 / 819 Loss: 92.45950317382812 Tokens per Sec: 13970.220903928108
Epoch Step: 705 / 819 Loss: 15.705735206604004 Tokens per Sec: 14807.752328087925
Epoch Step: 710 / 819 Loss: 18.953893661499023 Tokens per Sec: 13951.386433697273
Epoch Step: 715 / 819 Loss: 19.489864349365234 Tokens per Sec: 14578.227917753316
Epoch Step: 720 / 819 Loss: 21.692960739135742 Tokens per Sec: 12287.089149777603
Epoch Step: 725 / 819 Loss: 20.46590232849121 Tokens per Sec: 15464.03563005672
Epoch Step: 730 / 819 Loss: 18.2868709564209 Tokens per Sec: 13459.84327160563
Epoch Step: 735 / 819 Loss: 22.457942962646484 Tokens per Sec: 13905.91828788798
Epoch Step: 740 / 819 Loss: 19.960695266723633 Tokens per Sec: 14340.324097374143
Epoch Step: 745 / 819 Loss: 21.291475296020508 Tokens per Sec: 12573.027612965212
Epoch Step: 750 / 819 Loss: 16.20755958557129 Tokens per Sec: 14363.790233002292
Epoch Step: 755 / 819 Loss: 19.642375946044922 Tokens per Sec: 12909.598095684772
Epoch Step: 760 / 819 Loss: 17.784040451049805 Tokens per Sec: 15147.67875546497
Epoch Step: 765 / 819 Loss: 13.48033618927002 Tokens per Sec: 13378.068367080143
Epoch Step: 770 / 819 Loss: 14.392207145690918 Tokens per Sec: 13948.721007198172
Epoch Step: 775 / 819 Loss: 17.6889591217041 Tokens per Sec: 14991.543817416965
Epoch Step: 780 / 819 Loss: 17.45517921447754 Tokens per Sec: 12901.12867853343
Epoch Step: 785 / 819 Loss: 206.63690185546875 Tokens per Sec: 12092.21014734364
Epoch Step: 790 / 819 Loss: 148.8331756591797 Tokens per Sec: 14050.107204900249
Epoch Step: 795 / 819 Loss: 19.91468048095703 Tokens per Sec: 13030.125521900462
Epoch Step: 800 / 819 Loss: 16.008642196655273 Tokens per Sec: 13852.322125071125
Epoch Step: 805 / 819 Loss: 20.602384567260742 Tokens per Sec: 14501.646922526905
Epoch Step: 810 / 819 Loss: 19.898574829101562 Tokens per Sec: 12451.56643115523
Epoch Step: 815 / 819 Loss: 180.56808471679688 Tokens per Sec: 12905.6714450122
Epoch ended with duration 0:04:38.158700
Train perplexity: 1.6038795477257075
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.450934
Validation perplexity: 1.5647668785441449
Epoch 39 / 1000
Epoch Step: 5 / 819 Loss: 20.940481185913086 Tokens per Sec: 13688.411297855282
Epoch Step: 10 / 819 Loss: 17.887619018554688 Tokens per Sec: 13432.603593514606
Epoch Step: 15 / 819 Loss: 12.307167053222656 Tokens per Sec: 13049.481863874766
Epoch Step: 20 / 819 Loss: 14.752899169921875 Tokens per Sec: 15666.517684378166
Epoch Step: 25 / 819 Loss: 11.514006614685059 Tokens per Sec: 13935.771181716993
Epoch Step: 30 / 819 Loss: 16.64785385131836 Tokens per Sec: 13634.487207616636
Epoch Step: 35 / 819 Loss: 18.665494918823242 Tokens per Sec: 15320.395295202185
Epoch Step: 40 / 819 Loss: 12.25022029876709 Tokens per Sec: 13022.31264373139
Epoch Step: 45 / 819 Loss: 17.027259826660156 Tokens per Sec: 14531.25425809356
Epoch Step: 50 / 819 Loss: 17.23749351501465 Tokens per Sec: 14799.523556962688
Epoch Step: 55 / 819 Loss: 19.32553482055664 Tokens per Sec: 14482.593377271041
Epoch Step: 60 / 819 Loss: 13.774276733398438 Tokens per Sec: 13638.564974695108
Epoch Step: 65 / 819 Loss: 15.764124870300293 Tokens per Sec: 14667.653370240772
Epoch Step: 70 / 819 Loss: 16.819313049316406 Tokens per Sec: 14332.227257708848
Epoch Step: 75 / 819 Loss: 16.376197814941406 Tokens per Sec: 12805.62024242981
Epoch Step: 80 / 819 Loss: 13.728370666503906 Tokens per Sec: 12949.456133589516
Epoch Step: 85 / 819 Loss: 14.054277420043945 Tokens per Sec: 16163.846076779342
Epoch Step: 90 / 819 Loss: 12.931328773498535 Tokens per Sec: 12737.841968740195
Epoch Step: 95 / 819 Loss: 15.403237342834473 Tokens per Sec: 14079.152152160257
Epoch Step: 100 / 819 Loss: 15.61591625213623 Tokens per Sec: 13386.590338764334
Epoch Step: 105 / 819 Loss: 212.14031982421875 Tokens per Sec: 12696.292220690557
Epoch Step: 110 / 819 Loss: 216.1956329345703 Tokens per Sec: 15673.53482335849
Epoch Step: 115 / 819 Loss: 21.85109519958496 Tokens per Sec: 13098.308506415902
Epoch Step: 120 / 819 Loss: 19.994945526123047 Tokens per Sec: 13844.286585907177
Epoch Step: 125 / 819 Loss: 19.584911346435547 Tokens per Sec: 14129.802335539362
Epoch Step: 130 / 819 Loss: 12.176137924194336 Tokens per Sec: 14099.002982901538
Epoch Step: 135 / 819 Loss: 17.935897827148438 Tokens per Sec: 15080.718561977748
Epoch Step: 140 / 819 Loss: 18.20010757446289 Tokens per Sec: 14465.695125741617
Epoch Step: 145 / 819 Loss: 17.359477996826172 Tokens per Sec: 12838.708127796188
Epoch Step: 150 / 819 Loss: 170.59559631347656 Tokens per Sec: 13963.56385014092
Epoch Step: 155 / 819 Loss: 20.34219741821289 Tokens per Sec: 12974.223437865312
Epoch Step: 160 / 819 Loss: 18.836353302001953 Tokens per Sec: 13825.102884682727
Epoch Step: 165 / 819 Loss: 19.17251205444336 Tokens per Sec: 14016.751516099775
Epoch Step: 170 / 819 Loss: 19.5897216796875 Tokens per Sec: 13663.010697195865
Epoch Step: 175 / 819 Loss: 15.412138938903809 Tokens per Sec: 15179.38416628087
Epoch Step: 180 / 819 Loss: 21.0482120513916 Tokens per Sec: 13851.554349490303
Epoch Step: 185 / 819 Loss: 13.813704490661621 Tokens per Sec: 15855.889836186332
Epoch Step: 190 / 819 Loss: 16.24821662902832 Tokens per Sec: 13882.351493515956
Epoch Step: 195 / 819 Loss: 217.53128051757812 Tokens per Sec: 13147.097009157364
Epoch Step: 200 / 819 Loss: 20.043291091918945 Tokens per Sec: 13870.448130898321
Epoch Step: 205 / 819 Loss: 18.8284854888916 Tokens per Sec: 12567.248214021094
Epoch Step: 210 / 819 Loss: 178.47271728515625 Tokens per Sec: 15085.086760481634
Epoch Step: 215 / 819 Loss: 211.17291259765625 Tokens per Sec: 13535.176006915415
Epoch Step: 220 / 819 Loss: 15.862546920776367 Tokens per Sec: 15441.720922939321
Epoch Step: 225 / 819 Loss: 18.33679962158203 Tokens per Sec: 12643.905263100356
Epoch Step: 230 / 819 Loss: 20.35455322265625 Tokens per Sec: 15786.212765564163
Epoch Step: 235 / 819 Loss: 83.35504913330078 Tokens per Sec: 13722.53072418472
Epoch Step: 240 / 819 Loss: 114.79322814941406 Tokens per Sec: 13706.597578089235
Epoch Step: 245 / 819 Loss: 15.412798881530762 Tokens per Sec: 14264.951567547436
Epoch Step: 250 / 819 Loss: 15.294949531555176 Tokens per Sec: 12142.294421372828
Epoch Step: 255 / 819 Loss: 15.60536003112793 Tokens per Sec: 16829.74138357271
Epoch Step: 260 / 819 Loss: 178.4237060546875 Tokens per Sec: 13968.565493085842
Epoch Step: 265 / 819 Loss: 17.620407104492188 Tokens per Sec: 15001.439078222746
Epoch Step: 270 / 819 Loss: 18.143827438354492 Tokens per Sec: 12407.785432621267
Epoch Step: 275 / 819 Loss: 13.86423110961914 Tokens per Sec: 15474.881256737359
Epoch Step: 280 / 819 Loss: 18.892108917236328 Tokens per Sec: 14969.92311772957
Epoch Step: 285 / 819 Loss: 13.650420188903809 Tokens per Sec: 15821.720896960898
Epoch Step: 290 / 819 Loss: 16.779863357543945 Tokens per Sec: 13512.145357999998
Epoch Step: 295 / 819 Loss: 14.756511688232422 Tokens per Sec: 13018.735930148832
Epoch Step: 300 / 819 Loss: 15.162933349609375 Tokens per Sec: 14705.416489661524
Epoch Step: 305 / 819 Loss: 12.668306350708008 Tokens per Sec: 14689.646104589114
Epoch Step: 310 / 819 Loss: 257.5533447265625 Tokens per Sec: 13076.966132007816
Epoch Step: 315 / 819 Loss: 14.927687644958496 Tokens per Sec: 14586.809915103566
Epoch Step: 320 / 819 Loss: 167.61959838867188 Tokens per Sec: 13769.851634726703
Epoch Step: 325 / 819 Loss: 17.796030044555664 Tokens per Sec: 13399.88110424967
Epoch Step: 330 / 819 Loss: 18.985130310058594 Tokens per Sec: 13861.28262966044
Epoch Step: 335 / 819 Loss: 16.47821617126465 Tokens per Sec: 12463.642848033385
Epoch Step: 340 / 819 Loss: 156.05091857910156 Tokens per Sec: 14356.68204301088
Epoch Step: 345 / 819 Loss: 19.24056053161621 Tokens per Sec: 14964.170309944337
Epoch Step: 350 / 819 Loss: 15.821191787719727 Tokens per Sec: 13878.218854599625
Epoch Step: 355 / 819 Loss: 188.3101806640625 Tokens per Sec: 13133.801564332156
Epoch Step: 360 / 819 Loss: 16.20682144165039 Tokens per Sec: 12478.98736935586
Epoch Step: 365 / 819 Loss: 17.03931427001953 Tokens per Sec: 13797.300857527449
Epoch Step: 370 / 819 Loss: 20.903501510620117 Tokens per Sec: 16705.96797996799
Epoch Step: 375 / 819 Loss: 100.69540405273438 Tokens per Sec: 14531.09631173988
Epoch Step: 380 / 819 Loss: 20.170106887817383 Tokens per Sec: 13330.58450688189
Epoch Step: 385 / 819 Loss: 20.20505142211914 Tokens per Sec: 13393.540863595805
Epoch Step: 390 / 819 Loss: 136.05938720703125 Tokens per Sec: 14441.649000271547
Epoch Step: 395 / 819 Loss: 20.833467483520508 Tokens per Sec: 16434.436226013004
Epoch Step: 400 / 819 Loss: 20.44597816467285 Tokens per Sec: 12995.132502699813
Epoch Step: 405 / 819 Loss: 184.1129913330078 Tokens per Sec: 13653.843907163164
Epoch Step: 410 / 819 Loss: 18.510892868041992 Tokens per Sec: 13282.278039471248
Epoch Step: 415 / 819 Loss: 19.702434539794922 Tokens per Sec: 14402.138739538863
Epoch Step: 420 / 819 Loss: 15.378958702087402 Tokens per Sec: 14380.73769904372
Epoch Step: 425 / 819 Loss: 17.083131790161133 Tokens per Sec: 15602.039149129341
Epoch Step: 430 / 819 Loss: 16.48904800415039 Tokens per Sec: 14376.935006731996
Epoch Step: 435 / 819 Loss: 12.053184509277344 Tokens per Sec: 14757.28250443586
Epoch Step: 440 / 819 Loss: 243.31639099121094 Tokens per Sec: 13339.51927893532
Epoch Step: 445 / 819 Loss: 18.312305450439453 Tokens per Sec: 14329.686959097056
Epoch Step: 450 / 819 Loss: 93.63101959228516 Tokens per Sec: 14583.813434807824
Epoch Step: 455 / 819 Loss: 16.51457977294922 Tokens per Sec: 14016.84244367953
Epoch Step: 460 / 819 Loss: 16.650802612304688 Tokens per Sec: 13041.917413822832
Epoch Step: 465 / 819 Loss: 18.972476959228516 Tokens per Sec: 12912.396528410962
Epoch Step: 470 / 819 Loss: 14.428091049194336 Tokens per Sec: 13367.938455175215
Epoch Step: 475 / 819 Loss: 15.844366073608398 Tokens per Sec: 13443.298048453938
Epoch Step: 480 / 819 Loss: 15.697013854980469 Tokens per Sec: 15007.216883879979
Epoch Step: 485 / 819 Loss: 128.8061981201172 Tokens per Sec: 14706.925394812712
Epoch Step: 490 / 819 Loss: 19.4619197845459 Tokens per Sec: 13310.70754320827
Epoch Step: 495 / 819 Loss: 197.69964599609375 Tokens per Sec: 13363.756934416819
Epoch Step: 500 / 819 Loss: 16.279212951660156 Tokens per Sec: 13876.3833286667
Epoch Step: 505 / 819 Loss: 18.748401641845703 Tokens per Sec: 14695.087805901117
Epoch Step: 510 / 819 Loss: 11.961179733276367 Tokens per Sec: 14229.252341949765
Epoch Step: 515 / 819 Loss: 19.982393264770508 Tokens per Sec: 13580.814447022853
Epoch Step: 520 / 819 Loss: 18.243812561035156 Tokens per Sec: 13619.197567482775
Epoch Step: 525 / 819 Loss: 14.542013168334961 Tokens per Sec: 14788.999438722238
Epoch Step: 530 / 819 Loss: 18.125728607177734 Tokens per Sec: 16835.28475331073
Epoch Step: 535 / 819 Loss: 16.979219436645508 Tokens per Sec: 16603.09565708091
Epoch Step: 540 / 819 Loss: 13.723112106323242 Tokens per Sec: 13748.823587733476
Epoch Step: 545 / 819 Loss: 21.734161376953125 Tokens per Sec: 13442.859484502576
Epoch Step: 550 / 819 Loss: 14.598488807678223 Tokens per Sec: 13567.932229995711
Epoch Step: 555 / 819 Loss: 18.133277893066406 Tokens per Sec: 13305.90296335495
Epoch Step: 560 / 819 Loss: 20.583927154541016 Tokens per Sec: 14101.286981213052
Epoch Step: 565 / 819 Loss: 14.998863220214844 Tokens per Sec: 14758.449056516476
Epoch Step: 570 / 819 Loss: 13.68877124786377 Tokens per Sec: 13526.395425368293
Epoch Step: 575 / 819 Loss: 11.319053649902344 Tokens per Sec: 13685.924725797095
Epoch Step: 580 / 819 Loss: 16.45457649230957 Tokens per Sec: 12770.437845612134
Epoch Step: 585 / 819 Loss: 11.749391555786133 Tokens per Sec: 13523.912470504061
Epoch Step: 590 / 819 Loss: 13.22948932647705 Tokens per Sec: 15236.001376567801
Epoch Step: 595 / 819 Loss: 18.404102325439453 Tokens per Sec: 14150.994355182731
Epoch Step: 600 / 819 Loss: 18.237789154052734 Tokens per Sec: 12221.069547803087
Epoch Step: 605 / 819 Loss: 16.853273391723633 Tokens per Sec: 14342.94282400792
Epoch Step: 610 / 819 Loss: 16.485204696655273 Tokens per Sec: 13012.07323529921
Epoch Step: 615 / 819 Loss: 19.900293350219727 Tokens per Sec: 14225.141909551969
Epoch Step: 620 / 819 Loss: 19.66502571105957 Tokens per Sec: 13579.908002580594
Epoch Step: 625 / 819 Loss: 19.20071029663086 Tokens per Sec: 14160.030787061147
Epoch Step: 630 / 819 Loss: 16.73054313659668 Tokens per Sec: 14083.891372554075
Epoch Step: 635 / 819 Loss: 15.72690486907959 Tokens per Sec: 14315.8407236537
Epoch Step: 640 / 819 Loss: 16.115482330322266 Tokens per Sec: 14018.838350532673
Epoch Step: 645 / 819 Loss: 13.065343856811523 Tokens per Sec: 14161.942682968971
Epoch Step: 650 / 819 Loss: 17.451711654663086 Tokens per Sec: 13240.555442368113
Epoch Step: 655 / 819 Loss: 16.214862823486328 Tokens per Sec: 13567.195334867785
Epoch Step: 660 / 819 Loss: 204.5635223388672 Tokens per Sec: 12780.339692483914
Epoch Step: 665 / 819 Loss: 17.773990631103516 Tokens per Sec: 14304.730096491585
Epoch Step: 670 / 819 Loss: 18.88922119140625 Tokens per Sec: 14146.437830485875
Epoch Step: 675 / 819 Loss: 15.655045509338379 Tokens per Sec: 15366.778922426807
Epoch Step: 680 / 819 Loss: 14.93450927734375 Tokens per Sec: 13785.590832715194
Epoch Step: 685 / 819 Loss: 14.7321138381958 Tokens per Sec: 15475.432112727563
Epoch Step: 690 / 819 Loss: 17.326683044433594 Tokens per Sec: 12725.45665909638
Epoch Step: 695 / 819 Loss: 16.79882049560547 Tokens per Sec: 14063.491903539054
Epoch Step: 700 / 819 Loss: 13.32133960723877 Tokens per Sec: 13347.072019673067
Epoch Step: 705 / 819 Loss: 16.67013168334961 Tokens per Sec: 15192.477915465433
Epoch Step: 710 / 819 Loss: 20.68875503540039 Tokens per Sec: 12976.842548184708
Epoch Step: 715 / 819 Loss: 15.246521949768066 Tokens per Sec: 13827.967681112857
Epoch Step: 720 / 819 Loss: 18.604761123657227 Tokens per Sec: 14636.89745358721
Epoch Step: 725 / 819 Loss: 12.875693321228027 Tokens per Sec: 13831.205343285445
Epoch Step: 730 / 819 Loss: 14.361937522888184 Tokens per Sec: 13437.404849252714
Epoch Step: 735 / 819 Loss: 19.772993087768555 Tokens per Sec: 13871.20365744593
Epoch Step: 740 / 819 Loss: 15.145150184631348 Tokens per Sec: 15489.618476171825
Epoch Step: 745 / 819 Loss: 13.958785057067871 Tokens per Sec: 12042.497464179569
Epoch Step: 750 / 819 Loss: 15.112785339355469 Tokens per Sec: 14052.355647524846
Epoch Step: 755 / 819 Loss: 16.311567306518555 Tokens per Sec: 14420.22540581909
Epoch Step: 760 / 819 Loss: 21.509723663330078 Tokens per Sec: 13916.133973000653
Epoch Step: 765 / 819 Loss: 15.377279281616211 Tokens per Sec: 12591.98131660472
Epoch Step: 770 / 819 Loss: 16.28543472290039 Tokens per Sec: 13121.051982585435
Epoch Step: 775 / 819 Loss: 17.938657760620117 Tokens per Sec: 14267.9501699876
Epoch Step: 780 / 819 Loss: 14.524005889892578 Tokens per Sec: 14388.206831481393
Epoch Step: 785 / 819 Loss: 17.21807861328125 Tokens per Sec: 14215.95059953227
Epoch Step: 790 / 819 Loss: 14.961695671081543 Tokens per Sec: 15708.44331868408
Epoch Step: 795 / 819 Loss: 16.689327239990234 Tokens per Sec: 13517.920144605943
Epoch Step: 800 / 819 Loss: 110.69659423828125 Tokens per Sec: 13238.35422602269
Epoch Step: 805 / 819 Loss: 16.09349250793457 Tokens per Sec: 13258.164985646426
Epoch Step: 810 / 819 Loss: 209.4922637939453 Tokens per Sec: 11906.477181116057
Epoch Step: 815 / 819 Loss: 14.996952056884766 Tokens per Sec: 13089.670956655582
Epoch ended with duration 0:04:37.862099
Train perplexity: 1.5284966652188465
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.595123
Validation perplexity: 1.6688391994320675
Epoch 40 / 1000
Epoch Step: 5 / 819 Loss: 13.092002868652344 Tokens per Sec: 13679.103896688068
Epoch Step: 10 / 819 Loss: 15.466306686401367 Tokens per Sec: 15252.393005006172
Epoch Step: 15 / 819 Loss: 17.65378189086914 Tokens per Sec: 15614.651501833272
Epoch Step: 20 / 819 Loss: 11.966557502746582 Tokens per Sec: 14377.843847392403
Epoch Step: 25 / 819 Loss: 15.449807167053223 Tokens per Sec: 13242.451521628593
Epoch Step: 30 / 819 Loss: 14.240029335021973 Tokens per Sec: 14380.411423846943
Epoch Step: 35 / 819 Loss: 19.2888126373291 Tokens per Sec: 14462.95193001402
Epoch Step: 40 / 819 Loss: 124.51968383789062 Tokens per Sec: 14437.500514318772
Epoch Step: 45 / 819 Loss: 19.906627655029297 Tokens per Sec: 13421.247601262481
Epoch Step: 50 / 819 Loss: 19.566198348999023 Tokens per Sec: 16017.652246502692
Epoch Step: 55 / 819 Loss: 18.21326446533203 Tokens per Sec: 15330.021991376781
Epoch Step: 60 / 819 Loss: 19.804452896118164 Tokens per Sec: 13045.563106979025
Epoch Step: 65 / 819 Loss: 211.46080017089844 Tokens per Sec: 13226.894813009627
Epoch Step: 70 / 819 Loss: 15.446494102478027 Tokens per Sec: 15342.753670308592
Epoch Step: 75 / 819 Loss: 19.21564292907715 Tokens per Sec: 13746.210381593673
Epoch Step: 80 / 819 Loss: 17.584741592407227 Tokens per Sec: 14093.300034954193
Epoch Step: 85 / 819 Loss: 17.326143264770508 Tokens per Sec: 14133.632351114873
Epoch Step: 90 / 819 Loss: 17.87919807434082 Tokens per Sec: 13631.981184402488
Epoch Step: 95 / 819 Loss: 21.948936462402344 Tokens per Sec: 14118.561721493765
Epoch Step: 100 / 819 Loss: 16.70319175720215 Tokens per Sec: 13147.964153369974
Epoch Step: 105 / 819 Loss: 19.200355529785156 Tokens per Sec: 13227.288142335741
Epoch Step: 110 / 819 Loss: 13.37039566040039 Tokens per Sec: 13479.22465447338
Epoch Step: 115 / 819 Loss: 20.24556541442871 Tokens per Sec: 13145.819443120647
Epoch Step: 120 / 819 Loss: 17.263093948364258 Tokens per Sec: 14216.342026575794
Epoch Step: 125 / 819 Loss: 14.208523750305176 Tokens per Sec: 13266.061220803693
Epoch Step: 130 / 819 Loss: 13.181292533874512 Tokens per Sec: 13433.414107704293
Epoch Step: 135 / 819 Loss: 12.307432174682617 Tokens per Sec: 12600.088794385863
Epoch Step: 140 / 819 Loss: 18.125816345214844 Tokens per Sec: 14456.020740367303
Epoch Step: 145 / 819 Loss: 21.752304077148438 Tokens per Sec: 14041.658520480032
Epoch Step: 150 / 819 Loss: 197.8356170654297 Tokens per Sec: 13062.148461204528
Epoch Step: 155 / 819 Loss: 16.196014404296875 Tokens per Sec: 13559.503996210255
Epoch Step: 160 / 819 Loss: 20.872142791748047 Tokens per Sec: 13455.425030309876
Epoch Step: 165 / 819 Loss: 18.341999053955078 Tokens per Sec: 13939.212363597939
Epoch Step: 170 / 819 Loss: 17.952775955200195 Tokens per Sec: 14437.998494654923
Epoch Step: 175 / 819 Loss: 17.15155029296875 Tokens per Sec: 14713.997615570772
Epoch Step: 180 / 819 Loss: 19.966428756713867 Tokens per Sec: 15760.606387928983
Epoch Step: 185 / 819 Loss: 18.576745986938477 Tokens per Sec: 13547.285328506836
Epoch Step: 190 / 819 Loss: 14.331808090209961 Tokens per Sec: 13728.339352236637
Epoch Step: 195 / 819 Loss: 14.896648406982422 Tokens per Sec: 14828.225105424297
Epoch Step: 200 / 819 Loss: 10.97767162322998 Tokens per Sec: 15765.742576890432
Epoch Step: 205 / 819 Loss: 18.142770767211914 Tokens per Sec: 13699.169142846844
Epoch Step: 210 / 819 Loss: 16.311546325683594 Tokens per Sec: 14372.15378629892
Epoch Step: 215 / 819 Loss: 16.800655364990234 Tokens per Sec: 13091.725247035733
Epoch Step: 220 / 819 Loss: 12.927499771118164 Tokens per Sec: 13167.61785102037
Epoch Step: 225 / 819 Loss: 13.874516487121582 Tokens per Sec: 12888.525861926344
Epoch Step: 230 / 819 Loss: 15.110326766967773 Tokens per Sec: 13666.166703218169
Epoch Step: 235 / 819 Loss: 14.083699226379395 Tokens per Sec: 14656.177488806605
Epoch Step: 240 / 819 Loss: 22.919042587280273 Tokens per Sec: 13233.557589967624
Epoch Step: 245 / 819 Loss: 153.1254119873047 Tokens per Sec: 14055.75558708833
Epoch Step: 250 / 819 Loss: 17.325143814086914 Tokens per Sec: 13886.34744451416
Epoch Step: 255 / 819 Loss: 11.437966346740723 Tokens per Sec: 14835.060461780517
Epoch Step: 260 / 819 Loss: 180.41575622558594 Tokens per Sec: 13876.490409223507
Epoch Step: 265 / 819 Loss: 176.3093719482422 Tokens per Sec: 14032.11124384171
Epoch Step: 270 / 819 Loss: 23.984132766723633 Tokens per Sec: 13723.446393195985
Epoch Step: 275 / 819 Loss: 19.75612449645996 Tokens per Sec: 13823.14394228011
Epoch Step: 280 / 819 Loss: 13.496905326843262 Tokens per Sec: 12664.706089651452
Epoch Step: 285 / 819 Loss: 14.786999702453613 Tokens per Sec: 13017.41151099691
Epoch Step: 290 / 819 Loss: 15.065821647644043 Tokens per Sec: 14518.429191739831
Epoch Step: 295 / 819 Loss: 17.89103126525879 Tokens per Sec: 14982.856040062024
Epoch Step: 300 / 819 Loss: 16.90714454650879 Tokens per Sec: 13628.482683744374
Epoch Step: 305 / 819 Loss: 17.6881103515625 Tokens per Sec: 13064.761254676963
Epoch Step: 310 / 819 Loss: 20.15851402282715 Tokens per Sec: 15012.411186342677
Epoch Step: 315 / 819 Loss: 15.463178634643555 Tokens per Sec: 14777.807978892099
Epoch Step: 320 / 819 Loss: 17.33634376525879 Tokens per Sec: 14497.765111425451
Epoch Step: 325 / 819 Loss: 16.98831558227539 Tokens per Sec: 13482.317254415739
Epoch Step: 330 / 819 Loss: 14.719014167785645 Tokens per Sec: 14765.926371997542
Epoch Step: 335 / 819 Loss: 13.410962104797363 Tokens per Sec: 12968.491844057427
Epoch Step: 340 / 819 Loss: 13.433969497680664 Tokens per Sec: 15046.599271156016
Epoch Step: 345 / 819 Loss: 17.90340232849121 Tokens per Sec: 14585.027518589523
Epoch Step: 350 / 819 Loss: 14.867941856384277 Tokens per Sec: 13190.433370148978
Epoch Step: 355 / 819 Loss: 12.784075736999512 Tokens per Sec: 14740.75703615164
Epoch Step: 360 / 819 Loss: 20.277969360351562 Tokens per Sec: 14616.992561634674
Epoch Step: 365 / 819 Loss: 19.9338321685791 Tokens per Sec: 14313.398763945477
Epoch Step: 370 / 819 Loss: 18.365947723388672 Tokens per Sec: 13897.983243556788
Epoch Step: 375 / 819 Loss: 13.980119705200195 Tokens per Sec: 13033.74890235867
Epoch Step: 380 / 819 Loss: 17.750940322875977 Tokens per Sec: 13313.77999366323
Epoch Step: 385 / 819 Loss: 132.35504150390625 Tokens per Sec: 13241.082331390406
Epoch Step: 390 / 819 Loss: 19.560218811035156 Tokens per Sec: 14609.003191936536
Epoch Step: 395 / 819 Loss: 18.003128051757812 Tokens per Sec: 14015.354556736975
Epoch Step: 400 / 819 Loss: 13.836803436279297 Tokens per Sec: 13363.897748101885
Epoch Step: 405 / 819 Loss: 16.07730484008789 Tokens per Sec: 13754.437465585466
Epoch Step: 410 / 819 Loss: 13.07693862915039 Tokens per Sec: 13168.204096351394
Epoch Step: 415 / 819 Loss: 13.83907413482666 Tokens per Sec: 14721.66863078291
Epoch Step: 420 / 819 Loss: 13.634126663208008 Tokens per Sec: 14119.207083196041
Epoch Step: 425 / 819 Loss: 13.39773941040039 Tokens per Sec: 14806.32378410412
Epoch Step: 430 / 819 Loss: 15.859042167663574 Tokens per Sec: 14288.255980496724
Epoch Step: 435 / 819 Loss: 13.0205717086792 Tokens per Sec: 14274.618572211235
Epoch Step: 440 / 819 Loss: 17.565505981445312 Tokens per Sec: 14528.653086712344
Epoch Step: 445 / 819 Loss: 20.43354034423828 Tokens per Sec: 14884.684103099913
Epoch Step: 450 / 819 Loss: 19.96685028076172 Tokens per Sec: 13697.533620208094
Epoch Step: 455 / 819 Loss: 17.194398880004883 Tokens per Sec: 13658.899257984305
Epoch Step: 460 / 819 Loss: 19.680965423583984 Tokens per Sec: 14019.629566446616
Epoch Step: 465 / 819 Loss: 19.14631462097168 Tokens per Sec: 14563.75641806234
Epoch Step: 470 / 819 Loss: 16.802593231201172 Tokens per Sec: 15084.36806955953
Epoch Step: 475 / 819 Loss: 13.521409034729004 Tokens per Sec: 13371.750054200642
Epoch Step: 480 / 819 Loss: 17.71649169921875 Tokens per Sec: 13542.541972237099
Epoch Step: 485 / 819 Loss: 21.58258628845215 Tokens per Sec: 15122.294439895046
Epoch Step: 490 / 819 Loss: 212.26962280273438 Tokens per Sec: 14475.120312994262
Epoch Step: 495 / 819 Loss: 27.3179988861084 Tokens per Sec: 14901.584295348759
Epoch Step: 500 / 819 Loss: 22.84418487548828 Tokens per Sec: 15072.705814610988
Epoch Step: 505 / 819 Loss: 16.443784713745117 Tokens per Sec: 14471.267747253301
Epoch Step: 510 / 819 Loss: 18.473051071166992 Tokens per Sec: 12576.81869236636
Epoch Step: 515 / 819 Loss: 19.72821617126465 Tokens per Sec: 14791.071525066487
Epoch Step: 520 / 819 Loss: 17.979663848876953 Tokens per Sec: 14465.538055649818
Epoch Step: 525 / 819 Loss: 19.99532127380371 Tokens per Sec: 14084.3344863416
Epoch Step: 530 / 819 Loss: 15.353157043457031 Tokens per Sec: 13995.065268911263
Epoch Step: 535 / 819 Loss: 14.36536693572998 Tokens per Sec: 14849.654180844407
Epoch Step: 540 / 819 Loss: 23.40715789794922 Tokens per Sec: 14247.902951610493
Epoch Step: 545 / 819 Loss: 17.577823638916016 Tokens per Sec: 12623.605082944021
Epoch Step: 550 / 819 Loss: 20.368141174316406 Tokens per Sec: 14294.392285119218
Epoch Step: 555 / 819 Loss: 18.608816146850586 Tokens per Sec: 13948.016562628614
Epoch Step: 560 / 819 Loss: 18.38727569580078 Tokens per Sec: 12794.420906478557
Epoch Step: 565 / 819 Loss: 12.782282829284668 Tokens per Sec: 13303.86659792065
Epoch Step: 570 / 819 Loss: 21.4788818359375 Tokens per Sec: 12341.352236332772
Epoch Step: 575 / 819 Loss: 18.194351196289062 Tokens per Sec: 13825.59921252443
Epoch Step: 580 / 819 Loss: 189.88323974609375 Tokens per Sec: 16195.620724645283
Epoch Step: 585 / 819 Loss: 154.7887420654297 Tokens per Sec: 16107.938873389021
Epoch Step: 590 / 819 Loss: 16.137800216674805 Tokens per Sec: 14993.75046611658
Epoch Step: 595 / 819 Loss: 20.303308486938477 Tokens per Sec: 14714.917442165031
Epoch Step: 600 / 819 Loss: 19.952896118164062 Tokens per Sec: 13815.888519399434
Epoch Step: 605 / 819 Loss: 19.867137908935547 Tokens per Sec: 14409.453084264525
Epoch Step: 610 / 819 Loss: 18.6381893157959 Tokens per Sec: 14889.021792362013
Epoch Step: 615 / 819 Loss: 22.085737228393555 Tokens per Sec: 14419.142315786594
Epoch Step: 620 / 819 Loss: 18.834447860717773 Tokens per Sec: 14370.512760616926
Epoch Step: 625 / 819 Loss: 142.66180419921875 Tokens per Sec: 15917.802725411282
Epoch Step: 630 / 819 Loss: 15.585111618041992 Tokens per Sec: 13013.39518757306
Epoch Step: 635 / 819 Loss: 19.353084564208984 Tokens per Sec: 14895.475287264035
Epoch Step: 640 / 819 Loss: 230.9195556640625 Tokens per Sec: 13782.819129635809
Epoch Step: 645 / 819 Loss: 21.505550384521484 Tokens per Sec: 13469.029859865796
Epoch Step: 650 / 819 Loss: 15.524828910827637 Tokens per Sec: 12666.997061115704
Epoch Step: 655 / 819 Loss: 16.401596069335938 Tokens per Sec: 13858.567969548552
Epoch Step: 660 / 819 Loss: 20.249433517456055 Tokens per Sec: 13657.79242187364
Epoch Step: 665 / 819 Loss: 12.236074447631836 Tokens per Sec: 13933.326393441203
Epoch Step: 670 / 819 Loss: 17.736536026000977 Tokens per Sec: 13829.48358959485
Epoch Step: 675 / 819 Loss: 13.276741027832031 Tokens per Sec: 14918.71020575412
Epoch Step: 680 / 819 Loss: 18.537506103515625 Tokens per Sec: 13472.636450956034
Epoch Step: 685 / 819 Loss: 200.9075927734375 Tokens per Sec: 13546.60990517631
Epoch Step: 690 / 819 Loss: 17.971904754638672 Tokens per Sec: 13900.702803767044
Epoch Step: 695 / 819 Loss: 16.109575271606445 Tokens per Sec: 12520.692410180583
Epoch Step: 700 / 819 Loss: 14.942991256713867 Tokens per Sec: 14379.797902092116
Epoch Step: 705 / 819 Loss: 18.802509307861328 Tokens per Sec: 15579.716618581295
Epoch Step: 710 / 819 Loss: 11.345775604248047 Tokens per Sec: 13521.786716873517
Epoch Step: 715 / 819 Loss: 15.093428611755371 Tokens per Sec: 12183.891617944284
Epoch Step: 720 / 819 Loss: 13.636884689331055 Tokens per Sec: 13300.87053868676
Epoch Step: 725 / 819 Loss: 16.430646896362305 Tokens per Sec: 14930.369146156267
Epoch Step: 730 / 819 Loss: 199.5370330810547 Tokens per Sec: 14158.350308657196
Epoch Step: 735 / 819 Loss: 18.394847869873047 Tokens per Sec: 16406.860178632283
Epoch Step: 740 / 819 Loss: 133.43075561523438 Tokens per Sec: 13184.371210887066
Epoch Step: 745 / 819 Loss: 21.862037658691406 Tokens per Sec: 12732.22172178334
Epoch Step: 750 / 819 Loss: 18.531463623046875 Tokens per Sec: 12670.471348377816
Epoch Step: 755 / 819 Loss: 22.5178165435791 Tokens per Sec: 14027.748535910241
Epoch Step: 760 / 819 Loss: 21.943708419799805 Tokens per Sec: 12490.0977400019
Epoch Step: 765 / 819 Loss: 209.75994873046875 Tokens per Sec: 13813.82532858656
Epoch Step: 770 / 819 Loss: 21.569713592529297 Tokens per Sec: 13297.95014369219
Epoch Step: 775 / 819 Loss: 18.8655948638916 Tokens per Sec: 15164.385407636555
Epoch Step: 780 / 819 Loss: 12.334235191345215 Tokens per Sec: 14438.695140139494
Epoch Step: 785 / 819 Loss: 96.65451049804688 Tokens per Sec: 13527.05470995735
Epoch Step: 790 / 819 Loss: 19.482419967651367 Tokens per Sec: 12421.486545374997
Epoch Step: 795 / 819 Loss: 21.701139450073242 Tokens per Sec: 14901.461487227489
Epoch Step: 800 / 819 Loss: 15.980340003967285 Tokens per Sec: 14472.123163317357
Epoch Step: 805 / 819 Loss: 15.267318725585938 Tokens per Sec: 13805.839759872084
Epoch Step: 810 / 819 Loss: 18.680889129638672 Tokens per Sec: 11610.574694813777
Epoch Step: 815 / 819 Loss: 137.23362731933594 Tokens per Sec: 12565.21678659099
Epoch ended with duration 0:04:37.747820
Train perplexity: 1.5863746132069594
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.371910
Validation perplexity: 1.6390709898404334
Model saved checkpoint!
Epoch 41 / 1000
Epoch Step: 5 / 819 Loss: 13.741292953491211 Tokens per Sec: 15681.08894300298
Epoch Step: 10 / 819 Loss: 17.6994571685791 Tokens per Sec: 12770.226900378224
Epoch Step: 15 / 819 Loss: 19.40516471862793 Tokens per Sec: 13054.139543783316
Epoch Step: 20 / 819 Loss: 23.293302536010742 Tokens per Sec: 13331.451588752114
Epoch Step: 25 / 819 Loss: 17.87483024597168 Tokens per Sec: 13155.352149038396
Epoch Step: 30 / 819 Loss: 19.806747436523438 Tokens per Sec: 13863.44618081754
Epoch Step: 35 / 819 Loss: 179.6301727294922 Tokens per Sec: 15521.739578950954
Epoch Step: 40 / 819 Loss: 22.38625717163086 Tokens per Sec: 13853.896088109732
Epoch Step: 45 / 819 Loss: 19.857017517089844 Tokens per Sec: 14032.190995161438
Epoch Step: 50 / 819 Loss: 15.470669746398926 Tokens per Sec: 13694.48854389961
Epoch Step: 55 / 819 Loss: 17.998090744018555 Tokens per Sec: 13360.064744078276
Epoch Step: 60 / 819 Loss: 20.953956604003906 Tokens per Sec: 14172.380408021807
Epoch Step: 65 / 819 Loss: 18.86018943786621 Tokens per Sec: 13641.19515605438
Epoch Step: 70 / 819 Loss: 13.092677116394043 Tokens per Sec: 14427.055332585147
Epoch Step: 75 / 819 Loss: 13.61426067352295 Tokens per Sec: 14573.675332232006
Epoch Step: 80 / 819 Loss: 14.56298542022705 Tokens per Sec: 13969.429174852907
Epoch Step: 85 / 819 Loss: 18.284364700317383 Tokens per Sec: 14078.632028495222
Epoch Step: 90 / 819 Loss: 290.0419921875 Tokens per Sec: 14036.324047073878
Epoch Step: 95 / 819 Loss: 14.466581344604492 Tokens per Sec: 15016.428889748408
Epoch Step: 100 / 819 Loss: 14.243070602416992 Tokens per Sec: 13555.705912805264
Epoch Step: 105 / 819 Loss: 14.86706829071045 Tokens per Sec: 15071.159767957797
Epoch Step: 110 / 819 Loss: 198.9821014404297 Tokens per Sec: 14008.063840863182
Epoch Step: 115 / 819 Loss: 125.50898742675781 Tokens per Sec: 13743.768570705462
Epoch Step: 120 / 819 Loss: 21.800884246826172 Tokens per Sec: 12591.960317908712
Epoch Step: 125 / 819 Loss: 21.839017868041992 Tokens per Sec: 14928.320506461623
Epoch Step: 130 / 819 Loss: 22.350419998168945 Tokens per Sec: 17143.99156247608
Epoch Step: 135 / 819 Loss: 17.352277755737305 Tokens per Sec: 14844.365252713531
Epoch Step: 140 / 819 Loss: 19.981576919555664 Tokens per Sec: 13892.020923641785
Epoch Step: 145 / 819 Loss: 18.725561141967773 Tokens per Sec: 14225.615651586122
Epoch Step: 150 / 819 Loss: 16.88443374633789 Tokens per Sec: 14311.54067981703
Epoch Step: 155 / 819 Loss: 196.51817321777344 Tokens per Sec: 14608.136112917107
Epoch Step: 160 / 819 Loss: 20.38889503479004 Tokens per Sec: 13370.762107791825
Epoch Step: 165 / 819 Loss: 15.91759967803955 Tokens per Sec: 13756.478247421233
Epoch Step: 170 / 819 Loss: 15.705214500427246 Tokens per Sec: 12904.447151270368
Epoch Step: 175 / 819 Loss: 17.644302368164062 Tokens per Sec: 13279.839534262806
Epoch Step: 180 / 819 Loss: 14.522006034851074 Tokens per Sec: 12386.613188720235
Epoch Step: 185 / 819 Loss: 18.60073471069336 Tokens per Sec: 14625.383634562828
Epoch Step: 190 / 819 Loss: 19.311279296875 Tokens per Sec: 14279.565560847634
Epoch Step: 195 / 819 Loss: 17.476123809814453 Tokens per Sec: 12919.920376115246
Epoch Step: 200 / 819 Loss: 19.71234130859375 Tokens per Sec: 15120.216583901147
Epoch Step: 205 / 819 Loss: 13.065667152404785 Tokens per Sec: 15182.325543014367
Epoch Step: 210 / 819 Loss: 15.390253067016602 Tokens per Sec: 14017.340098238765
Epoch Step: 215 / 819 Loss: 19.953628540039062 Tokens per Sec: 12245.223819147259
Epoch Step: 220 / 819 Loss: 20.07375144958496 Tokens per Sec: 14069.87996741257
Epoch Step: 225 / 819 Loss: 15.607955932617188 Tokens per Sec: 13709.074516324994
Epoch Step: 230 / 819 Loss: 18.249666213989258 Tokens per Sec: 15369.446430608092
Epoch Step: 235 / 819 Loss: 15.223443984985352 Tokens per Sec: 13744.35081910358
Epoch Step: 240 / 819 Loss: 19.679067611694336 Tokens per Sec: 13259.413735763805
Epoch Step: 245 / 819 Loss: 13.415781021118164 Tokens per Sec: 14623.532800466586
Epoch Step: 250 / 819 Loss: 191.5278778076172 Tokens per Sec: 13530.387316509885
Epoch Step: 255 / 819 Loss: 21.00021743774414 Tokens per Sec: 14606.017270482542
Epoch Step: 260 / 819 Loss: 15.874619483947754 Tokens per Sec: 12592.838866310925
Epoch Step: 265 / 819 Loss: 17.748512268066406 Tokens per Sec: 14437.111663735945
Epoch Step: 270 / 819 Loss: 14.486351013183594 Tokens per Sec: 15245.049385144965
Epoch Step: 275 / 819 Loss: 20.256450653076172 Tokens per Sec: 13551.3153868559
Epoch Step: 280 / 819 Loss: 11.978804588317871 Tokens per Sec: 14961.581668834682
Epoch Step: 285 / 819 Loss: 15.27282428741455 Tokens per Sec: 14441.640742948097
Epoch Step: 290 / 819 Loss: 17.079317092895508 Tokens per Sec: 14663.359818034576
Epoch Step: 295 / 819 Loss: 12.995162010192871 Tokens per Sec: 14624.373339978227
Epoch Step: 300 / 819 Loss: 18.13265037536621 Tokens per Sec: 14333.01386257958
Epoch Step: 305 / 819 Loss: 14.258605003356934 Tokens per Sec: 12968.58269408961
Epoch Step: 310 / 819 Loss: 17.126962661743164 Tokens per Sec: 13288.930284697539
Epoch Step: 315 / 819 Loss: 19.037654876708984 Tokens per Sec: 13032.91601954599
Epoch Step: 320 / 819 Loss: 15.334842681884766 Tokens per Sec: 13794.520061498699
Epoch Step: 325 / 819 Loss: 18.020076751708984 Tokens per Sec: 14934.870371970956
Epoch Step: 330 / 819 Loss: 19.08401107788086 Tokens per Sec: 13510.526663472783
Epoch Step: 335 / 819 Loss: 17.524465560913086 Tokens per Sec: 14394.389248765245
Epoch Step: 340 / 819 Loss: 17.175012588500977 Tokens per Sec: 15710.377931784042
Epoch Step: 345 / 819 Loss: 13.60944938659668 Tokens per Sec: 13325.861146303676
Epoch Step: 350 / 819 Loss: 18.633087158203125 Tokens per Sec: 14092.948503900814
Epoch Step: 355 / 819 Loss: 14.085505485534668 Tokens per Sec: 13620.114258752674
Epoch Step: 360 / 819 Loss: 17.856218338012695 Tokens per Sec: 13564.706637287934
Epoch Step: 365 / 819 Loss: 18.691911697387695 Tokens per Sec: 14993.597716263164
Epoch Step: 370 / 819 Loss: 14.07404899597168 Tokens per Sec: 13369.83412197281
Epoch Step: 375 / 819 Loss: 17.76421356201172 Tokens per Sec: 15006.652125057428
Epoch Step: 380 / 819 Loss: 20.270029067993164 Tokens per Sec: 13960.274290103764
Epoch Step: 385 / 819 Loss: 13.288915634155273 Tokens per Sec: 14122.92201606469
Epoch Step: 390 / 819 Loss: 67.95319366455078 Tokens per Sec: 14295.750859810722
Epoch Step: 395 / 819 Loss: 15.170417785644531 Tokens per Sec: 15037.740211032664
Epoch Step: 400 / 819 Loss: 209.8305206298828 Tokens per Sec: 15528.883236254249
Epoch Step: 405 / 819 Loss: 150.8559112548828 Tokens per Sec: 14493.81679846701
Epoch Step: 410 / 819 Loss: 18.054288864135742 Tokens per Sec: 13241.030695557794
Epoch Step: 415 / 819 Loss: 16.998920440673828 Tokens per Sec: 14673.1440882974
Epoch Step: 420 / 819 Loss: 24.776016235351562 Tokens per Sec: 13606.963856576833
Epoch Step: 425 / 819 Loss: 19.90052604675293 Tokens per Sec: 14332.858759160466
Epoch Step: 430 / 819 Loss: 18.090957641601562 Tokens per Sec: 13966.81606177423
Epoch Step: 435 / 819 Loss: 15.937966346740723 Tokens per Sec: 13980.302538174294
Epoch Step: 440 / 819 Loss: 192.95574951171875 Tokens per Sec: 13681.628628335022
Epoch Step: 445 / 819 Loss: 15.009076118469238 Tokens per Sec: 14443.362198880606
Epoch Step: 450 / 819 Loss: 19.130035400390625 Tokens per Sec: 13489.345528883463
Epoch Step: 455 / 819 Loss: 21.74795913696289 Tokens per Sec: 12840.00062102382
Epoch Step: 460 / 819 Loss: 14.595867156982422 Tokens per Sec: 13774.117377401395
Epoch Step: 465 / 819 Loss: 19.732892990112305 Tokens per Sec: 13165.185733047787
Epoch Step: 470 / 819 Loss: 19.45477294921875 Tokens per Sec: 14220.308845793874
Epoch Step: 475 / 819 Loss: 16.40258026123047 Tokens per Sec: 13374.942624221196
Epoch Step: 480 / 819 Loss: 15.929678916931152 Tokens per Sec: 14333.227792909998
Epoch Step: 485 / 819 Loss: 17.213266372680664 Tokens per Sec: 14529.805561269715
Epoch Step: 490 / 819 Loss: 18.37020492553711 Tokens per Sec: 16110.56013112027
Epoch Step: 495 / 819 Loss: 15.104272842407227 Tokens per Sec: 13856.779997227139
Epoch Step: 500 / 819 Loss: 17.037338256835938 Tokens per Sec: 12906.019883057972
Epoch Step: 505 / 819 Loss: 15.18518352508545 Tokens per Sec: 13808.472095313451
Epoch Step: 510 / 819 Loss: 17.119314193725586 Tokens per Sec: 14647.99391555355
Epoch Step: 515 / 819 Loss: 18.81603240966797 Tokens per Sec: 13465.225993644972
Epoch Step: 520 / 819 Loss: 16.540939331054688 Tokens per Sec: 13828.210015994979
Epoch Step: 525 / 819 Loss: 161.52891540527344 Tokens per Sec: 14122.448685982336
Epoch Step: 530 / 819 Loss: 14.92724609375 Tokens per Sec: 13324.24542780183
Epoch Step: 535 / 819 Loss: 15.596734046936035 Tokens per Sec: 13844.928796989849
Epoch Step: 540 / 819 Loss: 20.09637451171875 Tokens per Sec: 14168.16735476336
Epoch Step: 545 / 819 Loss: 21.76018524169922 Tokens per Sec: 14484.196212119286
Epoch Step: 550 / 819 Loss: 15.587790489196777 Tokens per Sec: 12887.036412822423
Epoch Step: 555 / 819 Loss: 21.725431442260742 Tokens per Sec: 13778.326667596562
Epoch Step: 560 / 819 Loss: 13.80782699584961 Tokens per Sec: 14880.412411202899
Epoch Step: 565 / 819 Loss: 17.45479393005371 Tokens per Sec: 13505.071795616617
Epoch Step: 570 / 819 Loss: 18.681245803833008 Tokens per Sec: 15189.472905144305
Epoch Step: 575 / 819 Loss: 13.524983406066895 Tokens per Sec: 13543.091680340234
Epoch Step: 580 / 819 Loss: 17.16806983947754 Tokens per Sec: 15039.22329097451
Epoch Step: 585 / 819 Loss: 15.830968856811523 Tokens per Sec: 13533.048227217623
Epoch Step: 590 / 819 Loss: 19.540754318237305 Tokens per Sec: 14427.45089137657
Epoch Step: 595 / 819 Loss: 20.278635025024414 Tokens per Sec: 13155.399746108746
Epoch Step: 600 / 819 Loss: 17.198165893554688 Tokens per Sec: 14848.828656989039
Epoch Step: 605 / 819 Loss: 14.7025785446167 Tokens per Sec: 15918.908376828253
Epoch Step: 610 / 819 Loss: 19.79559326171875 Tokens per Sec: 13980.291300102066
Epoch Step: 615 / 819 Loss: 18.60538673400879 Tokens per Sec: 12520.997025397593
Epoch Step: 620 / 819 Loss: 14.175872802734375 Tokens per Sec: 14753.654080935743
Epoch Step: 625 / 819 Loss: 17.845958709716797 Tokens per Sec: 12577.143437113371
Epoch Step: 630 / 819 Loss: 12.879003524780273 Tokens per Sec: 16012.208416217865
Epoch Step: 635 / 819 Loss: 13.821696281433105 Tokens per Sec: 14777.913097264096
Epoch Step: 640 / 819 Loss: 16.319923400878906 Tokens per Sec: 13073.306085413406
Epoch Step: 645 / 819 Loss: 14.101286888122559 Tokens per Sec: 14465.347134354093
Epoch Step: 650 / 819 Loss: 19.083677291870117 Tokens per Sec: 14169.236190804815
Epoch Step: 655 / 819 Loss: 13.270106315612793 Tokens per Sec: 13823.247011041889
Epoch Step: 660 / 819 Loss: 17.299570083618164 Tokens per Sec: 13466.758896323568
Epoch Step: 665 / 819 Loss: 165.69430541992188 Tokens per Sec: 13026.4397650372
Epoch Step: 670 / 819 Loss: 22.635801315307617 Tokens per Sec: 14912.218700923348
Epoch Step: 675 / 819 Loss: 198.739990234375 Tokens per Sec: 14444.3382159317
Epoch Step: 680 / 819 Loss: 18.107717514038086 Tokens per Sec: 13721.236928831962
Epoch Step: 685 / 819 Loss: 25.000688552856445 Tokens per Sec: 16289.336732942556
Epoch Step: 690 / 819 Loss: 18.558395385742188 Tokens per Sec: 13856.924293937323
Epoch Step: 695 / 819 Loss: 20.082185745239258 Tokens per Sec: 13650.410486186778
Epoch Step: 700 / 819 Loss: 14.575389862060547 Tokens per Sec: 12562.649897361624
Epoch Step: 705 / 819 Loss: 20.052682876586914 Tokens per Sec: 13278.79674227644
Epoch Step: 710 / 819 Loss: 19.20774269104004 Tokens per Sec: 14572.591066669667
Epoch Step: 715 / 819 Loss: 19.3514461517334 Tokens per Sec: 14602.392303767963
Epoch Step: 720 / 819 Loss: 17.047468185424805 Tokens per Sec: 13416.365078423632
Epoch Step: 725 / 819 Loss: 16.588523864746094 Tokens per Sec: 14308.977577803216
Epoch Step: 730 / 819 Loss: 20.021175384521484 Tokens per Sec: 14152.491098093778
Epoch Step: 735 / 819 Loss: 14.058080673217773 Tokens per Sec: 11624.348458589637
Epoch Step: 740 / 819 Loss: 14.28663444519043 Tokens per Sec: 14125.250785914348
Epoch Step: 745 / 819 Loss: 16.396657943725586 Tokens per Sec: 13773.397652651083
Epoch Step: 750 / 819 Loss: 19.444854736328125 Tokens per Sec: 14556.071371307666
Epoch Step: 755 / 819 Loss: 15.36833381652832 Tokens per Sec: 14158.094947018633
Epoch Step: 760 / 819 Loss: 19.02887535095215 Tokens per Sec: 14572.04881650362
Epoch Step: 765 / 819 Loss: 18.3361873626709 Tokens per Sec: 14505.862790095944
Epoch Step: 770 / 819 Loss: 164.53199768066406 Tokens per Sec: 15882.057977954191
Epoch Step: 775 / 819 Loss: 22.690013885498047 Tokens per Sec: 13677.254151483654
Epoch Step: 780 / 819 Loss: 18.45511817932129 Tokens per Sec: 13722.898688251442
Epoch Step: 785 / 819 Loss: 18.570871353149414 Tokens per Sec: 14029.986951170027
Epoch Step: 790 / 819 Loss: 21.382225036621094 Tokens per Sec: 13814.95307216648
Epoch Step: 795 / 819 Loss: 14.286895751953125 Tokens per Sec: 13657.134765085275
Epoch Step: 800 / 819 Loss: 15.625197410583496 Tokens per Sec: 13591.943097085685
Epoch Step: 805 / 819 Loss: 16.820043563842773 Tokens per Sec: 14907.112089802727
Epoch Step: 810 / 819 Loss: 17.162260055541992 Tokens per Sec: 13249.569195945747
Epoch Step: 815 / 819 Loss: 13.91412353515625 Tokens per Sec: 14689.841453715475
Epoch ended with duration 0:04:37.030451
Train perplexity: 1.606220968925052
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.713588
Validation perplexity: 1.4828169604598587
Epoch 42 / 1000
Epoch Step: 5 / 819 Loss: 21.521533966064453 Tokens per Sec: 14139.808884853115
Epoch Step: 10 / 819 Loss: 18.342790603637695 Tokens per Sec: 14803.246428996545
Epoch Step: 15 / 819 Loss: 14.651693344116211 Tokens per Sec: 12355.365363047853
Epoch Step: 20 / 819 Loss: 188.61778259277344 Tokens per Sec: 14706.693043596259
Epoch Step: 25 / 819 Loss: 17.221446990966797 Tokens per Sec: 14802.973683601465
Epoch Step: 30 / 819 Loss: 17.409910202026367 Tokens per Sec: 13525.93582847024
Epoch Step: 35 / 819 Loss: 18.6560001373291 Tokens per Sec: 13197.55419073591
Epoch Step: 40 / 819 Loss: 21.44978904724121 Tokens per Sec: 14210.918602483353
Epoch Step: 45 / 819 Loss: 16.143877029418945 Tokens per Sec: 14944.160722261799
Epoch Step: 50 / 819 Loss: 20.06132698059082 Tokens per Sec: 14006.658926765436
Epoch Step: 55 / 819 Loss: 182.8590850830078 Tokens per Sec: 12294.10341766259
Epoch Step: 60 / 819 Loss: 16.875904083251953 Tokens per Sec: 16007.547498138074
Epoch Step: 65 / 819 Loss: 19.736661911010742 Tokens per Sec: 14986.823404116858
Epoch Step: 70 / 819 Loss: 19.180980682373047 Tokens per Sec: 13902.678008773937
Epoch Step: 75 / 819 Loss: 17.24826431274414 Tokens per Sec: 13357.203947064778
Epoch Step: 80 / 819 Loss: 18.764999389648438 Tokens per Sec: 14386.681741722316
Epoch Step: 85 / 819 Loss: 17.720895767211914 Tokens per Sec: 13376.365669064653
Epoch Step: 90 / 819 Loss: 12.209005355834961 Tokens per Sec: 13400.321006361617
Epoch Step: 95 / 819 Loss: 17.562654495239258 Tokens per Sec: 14374.286621412879
Epoch Step: 100 / 819 Loss: 17.962566375732422 Tokens per Sec: 13203.2718112287
Epoch Step: 105 / 819 Loss: 18.692094802856445 Tokens per Sec: 14742.010458984267
Epoch Step: 110 / 819 Loss: 20.770910263061523 Tokens per Sec: 12700.748663193495
Epoch Step: 115 / 819 Loss: 14.160928726196289 Tokens per Sec: 13695.280553212244
Epoch Step: 120 / 819 Loss: 14.49795150756836 Tokens per Sec: 13840.522476075423
Epoch Step: 125 / 819 Loss: 15.548721313476562 Tokens per Sec: 13901.340299814132
Epoch Step: 130 / 819 Loss: 19.633014678955078 Tokens per Sec: 12774.415119704836
Epoch Step: 135 / 819 Loss: 16.830562591552734 Tokens per Sec: 14207.641574011632
Epoch Step: 140 / 819 Loss: 15.583468437194824 Tokens per Sec: 14179.141491698558
Epoch Step: 145 / 819 Loss: 18.033626556396484 Tokens per Sec: 12864.841179944237
Epoch Step: 150 / 819 Loss: 21.308019638061523 Tokens per Sec: 13295.914752206347
Epoch Step: 155 / 819 Loss: 20.56072998046875 Tokens per Sec: 15057.96877286114
Epoch Step: 160 / 819 Loss: 16.310455322265625 Tokens per Sec: 13887.055304837802
Epoch Step: 165 / 819 Loss: 13.224474906921387 Tokens per Sec: 14341.049443350697
Epoch Step: 170 / 819 Loss: 10.899465560913086 Tokens per Sec: 13799.757760214585
Epoch Step: 175 / 819 Loss: 16.161165237426758 Tokens per Sec: 13349.686761201063
Epoch Step: 180 / 819 Loss: 130.15533447265625 Tokens per Sec: 13349.178278504774
Epoch Step: 185 / 819 Loss: 16.228763580322266 Tokens per Sec: 14588.572172372955
Epoch Step: 190 / 819 Loss: 16.59734535217285 Tokens per Sec: 14511.459166736333
Epoch Step: 195 / 819 Loss: 25.73546028137207 Tokens per Sec: 13498.55363689665
Epoch Step: 200 / 819 Loss: 18.659223556518555 Tokens per Sec: 14283.352875982737
Epoch Step: 205 / 819 Loss: 15.803597450256348 Tokens per Sec: 12780.195318427222
Epoch Step: 210 / 819 Loss: 17.501998901367188 Tokens per Sec: 14534.960875148037
Epoch Step: 215 / 819 Loss: 14.302872657775879 Tokens per Sec: 13739.560407246603
Epoch Step: 220 / 819 Loss: 12.87258243560791 Tokens per Sec: 13874.876237447232
Epoch Step: 225 / 819 Loss: 12.63045883178711 Tokens per Sec: 13453.477132328842
Epoch Step: 230 / 819 Loss: 15.82087230682373 Tokens per Sec: 14082.912654220596
Epoch Step: 235 / 819 Loss: 19.086669921875 Tokens per Sec: 15402.443565528349
Epoch Step: 240 / 819 Loss: 19.867162704467773 Tokens per Sec: 12467.250299746598
Epoch Step: 245 / 819 Loss: 18.644826889038086 Tokens per Sec: 13783.634971217893
Epoch Step: 250 / 819 Loss: 114.74712371826172 Tokens per Sec: 14250.700447500893
Epoch Step: 255 / 819 Loss: 18.86320686340332 Tokens per Sec: 15450.000633755986
Epoch Step: 260 / 819 Loss: 14.857361793518066 Tokens per Sec: 14631.646759883148
Epoch Step: 265 / 819 Loss: 15.444991111755371 Tokens per Sec: 17364.606955800657
Epoch Step: 270 / 819 Loss: 17.605499267578125 Tokens per Sec: 14093.312188128211
Epoch Step: 275 / 819 Loss: 16.529769897460938 Tokens per Sec: 14266.67963575174
Epoch Step: 280 / 819 Loss: 16.720998764038086 Tokens per Sec: 14417.58736178824
Epoch Step: 285 / 819 Loss: 13.450935363769531 Tokens per Sec: 13608.123617506342
Epoch Step: 290 / 819 Loss: 19.258739471435547 Tokens per Sec: 14010.993314882075
Epoch Step: 295 / 819 Loss: 16.559343338012695 Tokens per Sec: 15080.882445067677
Epoch Step: 300 / 819 Loss: 13.974549293518066 Tokens per Sec: 13493.643467156531
Epoch Step: 305 / 819 Loss: 11.859135627746582 Tokens per Sec: 12037.354521832247
Epoch Step: 310 / 819 Loss: 18.784894943237305 Tokens per Sec: 14030.57333201633
Epoch Step: 315 / 819 Loss: 15.827352523803711 Tokens per Sec: 13562.75171535191
Epoch Step: 320 / 819 Loss: 22.330610275268555 Tokens per Sec: 14676.985707242744
Epoch Step: 325 / 819 Loss: 20.35249900817871 Tokens per Sec: 14135.045155848511
Epoch Step: 330 / 819 Loss: 12.679275512695312 Tokens per Sec: 13721.105815553416
Epoch Step: 335 / 819 Loss: 14.200236320495605 Tokens per Sec: 13894.512617890277
Epoch Step: 340 / 819 Loss: 123.33534240722656 Tokens per Sec: 13171.43187881478
Epoch Step: 345 / 819 Loss: 17.258525848388672 Tokens per Sec: 12773.175009058325
Epoch Step: 350 / 819 Loss: 18.447193145751953 Tokens per Sec: 13986.543496427366
Epoch Step: 355 / 819 Loss: 14.954706192016602 Tokens per Sec: 14446.382728475126
Epoch Step: 360 / 819 Loss: 14.09516716003418 Tokens per Sec: 14580.833739649588
Epoch Step: 365 / 819 Loss: 22.087621688842773 Tokens per Sec: 12995.779365555769
Epoch Step: 370 / 819 Loss: 12.009077072143555 Tokens per Sec: 14330.249725187583
Epoch Step: 375 / 819 Loss: 12.89028549194336 Tokens per Sec: 12842.442398310195
Epoch Step: 380 / 819 Loss: 18.976945877075195 Tokens per Sec: 15241.801805996553
Epoch Step: 385 / 819 Loss: 15.416833877563477 Tokens per Sec: 14236.18644121332
Epoch Step: 390 / 819 Loss: 12.871585845947266 Tokens per Sec: 14841.790137499129
Epoch Step: 395 / 819 Loss: 13.45565414428711 Tokens per Sec: 14947.720766301973
Epoch Step: 400 / 819 Loss: 14.345569610595703 Tokens per Sec: 14763.714708749347
Epoch Step: 405 / 819 Loss: 14.698553085327148 Tokens per Sec: 15175.990283235313
Epoch Step: 410 / 819 Loss: 17.374635696411133 Tokens per Sec: 14103.258953273418
Epoch Step: 415 / 819 Loss: 13.632328033447266 Tokens per Sec: 13461.686313974495
Epoch Step: 420 / 819 Loss: 11.60849380493164 Tokens per Sec: 14357.74993600615
Epoch Step: 425 / 819 Loss: 15.36131763458252 Tokens per Sec: 15948.824920038938
Epoch Step: 430 / 819 Loss: 15.25483512878418 Tokens per Sec: 13883.535176982978
Epoch Step: 435 / 819 Loss: 11.646822929382324 Tokens per Sec: 13256.467940259663
Epoch Step: 440 / 819 Loss: 11.742680549621582 Tokens per Sec: 12380.188893516148
Epoch Step: 445 / 819 Loss: 16.61727523803711 Tokens per Sec: 13725.133052256662
Epoch Step: 450 / 819 Loss: 16.55169105529785 Tokens per Sec: 13685.06177673984
Epoch Step: 455 / 819 Loss: 15.523569107055664 Tokens per Sec: 14568.60521126342
Epoch Step: 460 / 819 Loss: 21.336877822875977 Tokens per Sec: 14949.858185097046
Epoch Step: 465 / 819 Loss: 18.85702133178711 Tokens per Sec: 12678.11274095387
Epoch Step: 470 / 819 Loss: 14.676239967346191 Tokens per Sec: 13450.94442066952
Epoch Step: 475 / 819 Loss: 14.608442306518555 Tokens per Sec: 11897.234563358546
Epoch Step: 480 / 819 Loss: 12.132070541381836 Tokens per Sec: 13673.707658646355
Epoch Step: 485 / 819 Loss: 14.056852340698242 Tokens per Sec: 14160.195279379566
Epoch Step: 490 / 819 Loss: 18.946134567260742 Tokens per Sec: 14223.889874228738
Epoch Step: 495 / 819 Loss: 20.851680755615234 Tokens per Sec: 14547.49870006056
Epoch Step: 500 / 819 Loss: 176.1045379638672 Tokens per Sec: 14242.124831187288
Epoch Step: 505 / 819 Loss: 18.085344314575195 Tokens per Sec: 13640.71884462162
Epoch Step: 510 / 819 Loss: 15.341960906982422 Tokens per Sec: 15053.709815012422
Epoch Step: 515 / 819 Loss: 15.780455589294434 Tokens per Sec: 14128.68962523373
Epoch Step: 520 / 819 Loss: 11.669221878051758 Tokens per Sec: 14900.472374896377
Epoch Step: 525 / 819 Loss: 18.287738800048828 Tokens per Sec: 15817.333696160897
Epoch Step: 530 / 819 Loss: 17.746103286743164 Tokens per Sec: 14423.952226405847
Epoch Step: 535 / 819 Loss: 15.382035255432129 Tokens per Sec: 13688.156852823782
Epoch Step: 540 / 819 Loss: 11.921409606933594 Tokens per Sec: 12932.217096513847
Epoch Step: 545 / 819 Loss: 15.38852310180664 Tokens per Sec: 13067.991062929614
Epoch Step: 550 / 819 Loss: 16.518104553222656 Tokens per Sec: 13721.727423350654
Epoch Step: 555 / 819 Loss: 18.233516693115234 Tokens per Sec: 15321.702297304708
Epoch Step: 560 / 819 Loss: 107.70059967041016 Tokens per Sec: 12626.52028043695
Epoch Step: 565 / 819 Loss: 16.579784393310547 Tokens per Sec: 13317.546852304831
Epoch Step: 570 / 819 Loss: 18.70985221862793 Tokens per Sec: 13328.137814690866
Epoch Step: 575 / 819 Loss: 19.12874412536621 Tokens per Sec: 13844.292406030087
Epoch Step: 580 / 819 Loss: 19.50829315185547 Tokens per Sec: 12947.39982599985
Epoch Step: 585 / 819 Loss: 17.19086265563965 Tokens per Sec: 13519.712244406539
Epoch Step: 590 / 819 Loss: 20.63774299621582 Tokens per Sec: 14181.238758280873
Epoch Step: 595 / 819 Loss: 237.12014770507812 Tokens per Sec: 13181.742847644811
Epoch Step: 600 / 819 Loss: 18.290637969970703 Tokens per Sec: 13991.263888850544
Epoch Step: 605 / 819 Loss: 17.30514144897461 Tokens per Sec: 13502.41344577431
Epoch Step: 610 / 819 Loss: 16.82109832763672 Tokens per Sec: 14281.682209844988
Epoch Step: 615 / 819 Loss: 17.253395080566406 Tokens per Sec: 14656.487696338425
Epoch Step: 620 / 819 Loss: 19.408702850341797 Tokens per Sec: 13119.678766342531
Epoch Step: 625 / 819 Loss: 14.63231372833252 Tokens per Sec: 13607.112872268235
Epoch Step: 630 / 819 Loss: 11.882349014282227 Tokens per Sec: 15433.945459397033
Epoch Step: 635 / 819 Loss: 13.708887100219727 Tokens per Sec: 14598.741766166797
Epoch Step: 640 / 819 Loss: 13.933183670043945 Tokens per Sec: 14070.409110938508
Epoch Step: 645 / 819 Loss: 14.513327598571777 Tokens per Sec: 15123.414169016918
Epoch Step: 650 / 819 Loss: 116.43980407714844 Tokens per Sec: 12852.45496705677
Epoch Step: 655 / 819 Loss: 16.777427673339844 Tokens per Sec: 14689.117697444375
Epoch Step: 660 / 819 Loss: 20.293603897094727 Tokens per Sec: 14598.929737845323
Epoch Step: 665 / 819 Loss: 156.77731323242188 Tokens per Sec: 14801.24634965238
Epoch Step: 670 / 819 Loss: 19.132457733154297 Tokens per Sec: 15205.2115068487
Epoch Step: 675 / 819 Loss: 11.573432922363281 Tokens per Sec: 13887.136234134809
Epoch Step: 680 / 819 Loss: 196.61993408203125 Tokens per Sec: 14771.811111754376
Epoch Step: 685 / 819 Loss: 21.847919464111328 Tokens per Sec: 13469.368479306811
Epoch Step: 690 / 819 Loss: 19.99662208557129 Tokens per Sec: 13480.983720378457
Epoch Step: 695 / 819 Loss: 17.247814178466797 Tokens per Sec: 13926.527607263768
Epoch Step: 700 / 819 Loss: 211.80096435546875 Tokens per Sec: 12740.760459829866
Epoch Step: 705 / 819 Loss: 19.015270233154297 Tokens per Sec: 13680.190493748862
Epoch Step: 710 / 819 Loss: 14.708954811096191 Tokens per Sec: 13451.769684800996
Epoch Step: 715 / 819 Loss: 18.010787963867188 Tokens per Sec: 13842.071452216689
Epoch Step: 720 / 819 Loss: 15.608868598937988 Tokens per Sec: 14477.06110184091
Epoch Step: 725 / 819 Loss: 19.053831100463867 Tokens per Sec: 12637.811910872448
Epoch Step: 730 / 819 Loss: 19.846689224243164 Tokens per Sec: 12654.294875735022
Epoch Step: 735 / 819 Loss: 15.0155668258667 Tokens per Sec: 14458.042689559234
Epoch Step: 740 / 819 Loss: 14.490216255187988 Tokens per Sec: 13427.969651176338
Epoch Step: 745 / 819 Loss: 14.458799362182617 Tokens per Sec: 12739.88177180888
Epoch Step: 750 / 819 Loss: 15.524494171142578 Tokens per Sec: 14671.181203862727
Epoch Step: 755 / 819 Loss: 21.258113861083984 Tokens per Sec: 14162.090600819913
Epoch Step: 760 / 819 Loss: 16.473596572875977 Tokens per Sec: 13397.879763075087
Epoch Step: 765 / 819 Loss: 19.37497901916504 Tokens per Sec: 13796.225561307816
Epoch Step: 770 / 819 Loss: 17.00959587097168 Tokens per Sec: 14111.340247246093
Epoch Step: 775 / 819 Loss: 19.657075881958008 Tokens per Sec: 13609.168853879837
Epoch Step: 780 / 819 Loss: 23.512706756591797 Tokens per Sec: 12328.70065476549
Epoch Step: 785 / 819 Loss: 16.254404067993164 Tokens per Sec: 14832.99914742678
Epoch Step: 790 / 819 Loss: 16.260404586791992 Tokens per Sec: 15464.79876594435
Epoch Step: 795 / 819 Loss: 15.446159362792969 Tokens per Sec: 13964.249869379904
Epoch Step: 800 / 819 Loss: 13.531421661376953 Tokens per Sec: 15672.749064831673
Epoch Step: 805 / 819 Loss: 15.24244213104248 Tokens per Sec: 15564.435301154086
Epoch Step: 810 / 819 Loss: 17.098331451416016 Tokens per Sec: 10768.487804439428
Epoch Step: 815 / 819 Loss: 17.39354705810547 Tokens per Sec: 12719.97562239836
Epoch ended with duration 0:04:38.434830
Train perplexity: 1.5595283846397734
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.623204
Validation perplexity: 1.4537638755900768
Epoch 43 / 1000
Epoch Step: 5 / 819 Loss: 14.687914848327637 Tokens per Sec: 14161.135653456327
Epoch Step: 10 / 819 Loss: 19.980478286743164 Tokens per Sec: 14264.111388769246
Epoch Step: 15 / 819 Loss: 11.650167465209961 Tokens per Sec: 13649.481524190887
Epoch Step: 20 / 819 Loss: 16.85444450378418 Tokens per Sec: 15308.07415076608
Epoch Step: 25 / 819 Loss: 219.4178009033203 Tokens per Sec: 12913.42688005724
Epoch Step: 30 / 819 Loss: 14.268588066101074 Tokens per Sec: 13743.197897028698
Epoch Step: 35 / 819 Loss: 21.979455947875977 Tokens per Sec: 13784.109490352144
Epoch Step: 40 / 819 Loss: 15.599764823913574 Tokens per Sec: 13864.622966470479
Epoch Step: 45 / 819 Loss: 18.866018295288086 Tokens per Sec: 13354.63393007319
Epoch Step: 50 / 819 Loss: 17.532411575317383 Tokens per Sec: 13744.509730251042
Epoch Step: 55 / 819 Loss: 19.73444938659668 Tokens per Sec: 13796.264043212514
Epoch Step: 60 / 819 Loss: 14.141397476196289 Tokens per Sec: 13700.323251070275
Epoch Step: 65 / 819 Loss: 13.423718452453613 Tokens per Sec: 15064.52759765195
Epoch Step: 70 / 819 Loss: 15.904617309570312 Tokens per Sec: 12756.577861842487
Epoch Step: 75 / 819 Loss: 17.99008560180664 Tokens per Sec: 13051.31089544006
Epoch Step: 80 / 819 Loss: 16.84429168701172 Tokens per Sec: 15035.901075898068
Epoch Step: 85 / 819 Loss: 15.015042304992676 Tokens per Sec: 13410.692328795492
Epoch Step: 90 / 819 Loss: 20.496322631835938 Tokens per Sec: 13707.664196868769
Epoch Step: 95 / 819 Loss: 14.058466911315918 Tokens per Sec: 13580.896330573722
Epoch Step: 100 / 819 Loss: 153.1819610595703 Tokens per Sec: 15940.422103784089
Epoch Step: 105 / 819 Loss: 17.93231964111328 Tokens per Sec: 15126.999132053663
Epoch Step: 110 / 819 Loss: 14.79139518737793 Tokens per Sec: 14984.397002967182
Epoch Step: 115 / 819 Loss: 16.908029556274414 Tokens per Sec: 13730.260441689625
Epoch Step: 120 / 819 Loss: 20.320415496826172 Tokens per Sec: 15244.92249011782
Epoch Step: 125 / 819 Loss: 21.578933715820312 Tokens per Sec: 14344.931210125358
Epoch Step: 130 / 819 Loss: 17.285001754760742 Tokens per Sec: 14373.93581207434
Epoch Step: 135 / 819 Loss: 20.429790496826172 Tokens per Sec: 12132.51972892861
Epoch Step: 140 / 819 Loss: 18.708770751953125 Tokens per Sec: 13400.111514073886
Epoch Step: 145 / 819 Loss: 16.87075424194336 Tokens per Sec: 14336.670761491323
Epoch Step: 150 / 819 Loss: 17.926250457763672 Tokens per Sec: 13240.660921033494
Epoch Step: 155 / 819 Loss: 17.92200469970703 Tokens per Sec: 15539.661720716018
Epoch Step: 160 / 819 Loss: 18.77164649963379 Tokens per Sec: 14593.682565297824
Epoch Step: 165 / 819 Loss: 19.070466995239258 Tokens per Sec: 14165.947104495755
Epoch Step: 170 / 819 Loss: 15.272010803222656 Tokens per Sec: 14365.065271519532
Epoch Step: 175 / 819 Loss: 15.027161598205566 Tokens per Sec: 14483.874395800132
Epoch Step: 180 / 819 Loss: 16.65491485595703 Tokens per Sec: 13050.277929066035
Epoch Step: 185 / 819 Loss: 12.504332542419434 Tokens per Sec: 12574.194174980556
Epoch Step: 190 / 819 Loss: 103.71775817871094 Tokens per Sec: 14577.558312185742
Epoch Step: 195 / 819 Loss: 19.308773040771484 Tokens per Sec: 13039.289391383672
Epoch Step: 200 / 819 Loss: 15.414008140563965 Tokens per Sec: 15812.254711899155
Epoch Step: 205 / 819 Loss: 17.96207618713379 Tokens per Sec: 14041.394996929112
Epoch Step: 210 / 819 Loss: 18.857690811157227 Tokens per Sec: 15642.260186181666
Epoch Step: 215 / 819 Loss: 166.19512939453125 Tokens per Sec: 13635.501516349766
Epoch Step: 220 / 819 Loss: 14.793987274169922 Tokens per Sec: 13826.308178582865
Epoch Step: 225 / 819 Loss: 19.973461151123047 Tokens per Sec: 14202.180231813676
Epoch Step: 230 / 819 Loss: 20.738101959228516 Tokens per Sec: 14789.940653445303
Epoch Step: 235 / 819 Loss: 17.760395050048828 Tokens per Sec: 13122.334635456076
Epoch Step: 240 / 819 Loss: 16.44060516357422 Tokens per Sec: 13724.42703643392
Epoch Step: 245 / 819 Loss: 15.317278861999512 Tokens per Sec: 12813.879521586892
Epoch Step: 250 / 819 Loss: 207.42547607421875 Tokens per Sec: 14556.543027106169
Epoch Step: 255 / 819 Loss: 16.62604522705078 Tokens per Sec: 13699.490615066263
Epoch Step: 260 / 819 Loss: 20.120071411132812 Tokens per Sec: 14460.68458520356
Epoch Step: 265 / 819 Loss: 145.5469512939453 Tokens per Sec: 14213.680117912903
Epoch Step: 270 / 819 Loss: 20.833358764648438 Tokens per Sec: 14570.541900014749
Epoch Step: 275 / 819 Loss: 18.125 Tokens per Sec: 13274.417716815144
Epoch Step: 280 / 819 Loss: 19.42453956604004 Tokens per Sec: 15316.905598772091
Epoch Step: 285 / 819 Loss: 15.201921463012695 Tokens per Sec: 16195.700258999577
Epoch Step: 290 / 819 Loss: 17.31749153137207 Tokens per Sec: 14081.717317906452
Epoch Step: 295 / 819 Loss: 19.400291442871094 Tokens per Sec: 14616.214301628068
Epoch Step: 300 / 819 Loss: 254.17984008789062 Tokens per Sec: 13559.682291027062
Epoch Step: 305 / 819 Loss: 16.572601318359375 Tokens per Sec: 14426.570623915724
Epoch Step: 310 / 819 Loss: 16.332260131835938 Tokens per Sec: 13472.649245546341
Epoch Step: 315 / 819 Loss: 18.145381927490234 Tokens per Sec: 15867.619700243591
Epoch Step: 320 / 819 Loss: 17.6973876953125 Tokens per Sec: 14793.634656184218
Epoch Step: 325 / 819 Loss: 162.32945251464844 Tokens per Sec: 12624.810021827823
Epoch Step: 330 / 819 Loss: 18.073951721191406 Tokens per Sec: 15237.29171303777
Epoch Step: 335 / 819 Loss: 20.301177978515625 Tokens per Sec: 13286.639596890407
Epoch Step: 340 / 819 Loss: 20.113632202148438 Tokens per Sec: 15432.071745464615
Epoch Step: 345 / 819 Loss: 248.52783203125 Tokens per Sec: 13229.947695954268
Epoch Step: 350 / 819 Loss: 22.68520164489746 Tokens per Sec: 13172.833164335005
Epoch Step: 355 / 819 Loss: 15.115262031555176 Tokens per Sec: 14012.47376873391
Epoch Step: 360 / 819 Loss: 19.369983673095703 Tokens per Sec: 14308.934903685078
Epoch Step: 365 / 819 Loss: 202.34539794921875 Tokens per Sec: 12916.902577025963
Epoch Step: 370 / 819 Loss: 16.638141632080078 Tokens per Sec: 14033.124109207041
Epoch Step: 375 / 819 Loss: 111.05292510986328 Tokens per Sec: 13768.590129786726
Epoch Step: 380 / 819 Loss: 17.863052368164062 Tokens per Sec: 16453.716825676576
Epoch Step: 385 / 819 Loss: 18.600372314453125 Tokens per Sec: 13706.931399677578
Epoch Step: 390 / 819 Loss: 16.73584747314453 Tokens per Sec: 13703.58360248113
Epoch Step: 395 / 819 Loss: 19.956045150756836 Tokens per Sec: 13164.037913328102
Epoch Step: 400 / 819 Loss: 18.592344284057617 Tokens per Sec: 14038.864208101866
Epoch Step: 405 / 819 Loss: 16.54445457458496 Tokens per Sec: 12872.16815016283
Epoch Step: 410 / 819 Loss: 21.777666091918945 Tokens per Sec: 12948.848403065891
Epoch Step: 415 / 819 Loss: 21.843887329101562 Tokens per Sec: 14160.522599351481
Epoch Step: 420 / 819 Loss: 19.22225570678711 Tokens per Sec: 14293.429711983561
Epoch Step: 425 / 819 Loss: 21.409278869628906 Tokens per Sec: 14760.48418962581
Epoch Step: 430 / 819 Loss: 20.839134216308594 Tokens per Sec: 14403.541919666115
Epoch Step: 435 / 819 Loss: 20.688037872314453 Tokens per Sec: 15695.30988512802
Epoch Step: 440 / 819 Loss: 22.60503578186035 Tokens per Sec: 15805.208600988053
Epoch Step: 445 / 819 Loss: 23.120864868164062 Tokens per Sec: 13188.190710349587
Epoch Step: 450 / 819 Loss: 20.443586349487305 Tokens per Sec: 13751.08882573501
Epoch Step: 455 / 819 Loss: 15.394477844238281 Tokens per Sec: 13424.814539979478
Epoch Step: 460 / 819 Loss: 15.513044357299805 Tokens per Sec: 14784.551197196346
Epoch Step: 465 / 819 Loss: 214.74411010742188 Tokens per Sec: 14308.393982812111
Epoch Step: 470 / 819 Loss: 17.278329849243164 Tokens per Sec: 13536.284486378629
Epoch Step: 475 / 819 Loss: 14.310583114624023 Tokens per Sec: 14170.236712899467
Epoch Step: 480 / 819 Loss: 103.23877716064453 Tokens per Sec: 14354.743959495598
Epoch Step: 485 / 819 Loss: 14.296431541442871 Tokens per Sec: 13286.212263283262
Epoch Step: 490 / 819 Loss: 259.171142578125 Tokens per Sec: 13483.255082950756
Epoch Step: 495 / 819 Loss: 17.21112060546875 Tokens per Sec: 12884.054187839518
Epoch Step: 500 / 819 Loss: 15.009991645812988 Tokens per Sec: 14039.88724000738
Epoch Step: 505 / 819 Loss: 20.967308044433594 Tokens per Sec: 14928.602352614347
Epoch Step: 510 / 819 Loss: 17.70503044128418 Tokens per Sec: 12999.08257752489
Epoch Step: 515 / 819 Loss: 178.367431640625 Tokens per Sec: 14275.364475030205
Epoch Step: 520 / 819 Loss: 182.9701690673828 Tokens per Sec: 12718.973856300829
Epoch Step: 525 / 819 Loss: 17.67485237121582 Tokens per Sec: 12849.23297842425
Epoch Step: 530 / 819 Loss: 17.821666717529297 Tokens per Sec: 14059.219825161883
Epoch Step: 535 / 819 Loss: 17.957502365112305 Tokens per Sec: 12263.991477333017
Epoch Step: 540 / 819 Loss: 19.46218490600586 Tokens per Sec: 14278.030056516809
Epoch Step: 545 / 819 Loss: 20.274490356445312 Tokens per Sec: 14388.506108026826
Epoch Step: 550 / 819 Loss: 103.69312286376953 Tokens per Sec: 13329.084590036613
Epoch Step: 555 / 819 Loss: 211.1317596435547 Tokens per Sec: 15533.66292274313
Epoch Step: 560 / 819 Loss: 13.358915328979492 Tokens per Sec: 15964.279366796976
Epoch Step: 565 / 819 Loss: 21.91195297241211 Tokens per Sec: 11929.604297618576
Epoch Step: 570 / 819 Loss: 18.314687728881836 Tokens per Sec: 14957.235352697297
Epoch Step: 575 / 819 Loss: 16.370691299438477 Tokens per Sec: 13765.594706172338
Epoch Step: 580 / 819 Loss: 17.00099754333496 Tokens per Sec: 14164.835711271971
Epoch Step: 585 / 819 Loss: 17.414901733398438 Tokens per Sec: 14646.729717283999
Epoch Step: 590 / 819 Loss: 15.495004653930664 Tokens per Sec: 14893.630855491969
Epoch Step: 595 / 819 Loss: 219.54608154296875 Tokens per Sec: 13116.823492383912
Epoch Step: 600 / 819 Loss: 14.539934158325195 Tokens per Sec: 14799.44749805638
Epoch Step: 605 / 819 Loss: 15.609855651855469 Tokens per Sec: 13799.512445998073
Epoch Step: 610 / 819 Loss: 16.482635498046875 Tokens per Sec: 13027.719949933771
Epoch Step: 615 / 819 Loss: 16.322458267211914 Tokens per Sec: 14190.065154883467
Epoch Step: 620 / 819 Loss: 17.35414695739746 Tokens per Sec: 12672.943157019288
Epoch Step: 625 / 819 Loss: 17.991239547729492 Tokens per Sec: 13572.848272940946
Epoch Step: 630 / 819 Loss: 14.363568305969238 Tokens per Sec: 13043.276332782974
Epoch Step: 635 / 819 Loss: 175.4165496826172 Tokens per Sec: 12770.11792305478
Epoch Step: 640 / 819 Loss: 18.35000991821289 Tokens per Sec: 12033.930452816998
Epoch Step: 645 / 819 Loss: 14.215039253234863 Tokens per Sec: 14166.752541057731
Epoch Step: 650 / 819 Loss: 20.743162155151367 Tokens per Sec: 14903.381163196123
Epoch Step: 655 / 819 Loss: 15.714327812194824 Tokens per Sec: 13634.305330988685
Epoch Step: 660 / 819 Loss: 21.14913558959961 Tokens per Sec: 14930.528716297651
Epoch Step: 665 / 819 Loss: 16.67013168334961 Tokens per Sec: 14851.53390771085
Epoch Step: 670 / 819 Loss: 24.422080993652344 Tokens per Sec: 12821.985232430823
Epoch Step: 675 / 819 Loss: 16.233083724975586 Tokens per Sec: 13387.477862629652
Epoch Step: 680 / 819 Loss: 18.465208053588867 Tokens per Sec: 16423.613510248393
Epoch Step: 685 / 819 Loss: 16.928613662719727 Tokens per Sec: 14375.590062096451
Epoch Step: 690 / 819 Loss: 15.880948066711426 Tokens per Sec: 14700.495906449381
Epoch Step: 695 / 819 Loss: 14.244986534118652 Tokens per Sec: 13022.356620610972
Epoch Step: 700 / 819 Loss: 19.239097595214844 Tokens per Sec: 13840.422590532988
Epoch Step: 705 / 819 Loss: 18.376096725463867 Tokens per Sec: 13999.183473890773
Epoch Step: 710 / 819 Loss: 15.782512664794922 Tokens per Sec: 12515.413777783031
Epoch Step: 715 / 819 Loss: 19.08926010131836 Tokens per Sec: 15237.912118369983
Epoch Step: 720 / 819 Loss: 15.798925399780273 Tokens per Sec: 13167.33830710587
Epoch Step: 725 / 819 Loss: 14.086809158325195 Tokens per Sec: 13914.681050259542
Epoch Step: 730 / 819 Loss: 17.684003829956055 Tokens per Sec: 16052.32366845436
Epoch Step: 735 / 819 Loss: 13.818107604980469 Tokens per Sec: 14584.698533840985
Epoch Step: 740 / 819 Loss: 15.543429374694824 Tokens per Sec: 14988.052166481411
Epoch Step: 745 / 819 Loss: 15.274709701538086 Tokens per Sec: 13452.964413748312
Epoch Step: 750 / 819 Loss: 16.899059295654297 Tokens per Sec: 14682.406292279902
Epoch Step: 755 / 819 Loss: 20.862327575683594 Tokens per Sec: 15509.984468952473
Epoch Step: 760 / 819 Loss: 20.031192779541016 Tokens per Sec: 13471.246689075015
Epoch Step: 765 / 819 Loss: 15.042074203491211 Tokens per Sec: 13396.323731454053
Epoch Step: 770 / 819 Loss: 20.585346221923828 Tokens per Sec: 13532.3939375162
Epoch Step: 775 / 819 Loss: 16.988849639892578 Tokens per Sec: 14716.306149055532
Epoch Step: 780 / 819 Loss: 13.847965240478516 Tokens per Sec: 12920.913599341971
Epoch Step: 785 / 819 Loss: 13.059038162231445 Tokens per Sec: 12523.542390411514
Epoch Step: 790 / 819 Loss: 18.277374267578125 Tokens per Sec: 15814.72603240978
Epoch Step: 795 / 819 Loss: 18.377721786499023 Tokens per Sec: 13476.879755926677
Epoch Step: 800 / 819 Loss: 17.492158889770508 Tokens per Sec: 14402.066205457942
Epoch Step: 805 / 819 Loss: 14.292901992797852 Tokens per Sec: 12867.677812346079
Epoch Step: 810 / 819 Loss: 16.31886100769043 Tokens per Sec: 14627.600759676003
Epoch Step: 815 / 819 Loss: 14.472519874572754 Tokens per Sec: 12781.962583185648
Epoch ended with duration 0:04:37.568466
Train perplexity: 1.626127368932014
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.120703
Validation perplexity: 1.5217420063482487
Epoch 44 / 1000
Epoch Step: 5 / 819 Loss: 24.689237594604492 Tokens per Sec: 15273.25544524692
Epoch Step: 10 / 819 Loss: 16.919706344604492 Tokens per Sec: 12934.345128409284
Epoch Step: 15 / 819 Loss: 20.1210994720459 Tokens per Sec: 15518.477981037346
Epoch Step: 20 / 819 Loss: 19.5728702545166 Tokens per Sec: 14134.072227057233
Epoch Step: 25 / 819 Loss: 20.28472137451172 Tokens per Sec: 13857.208098151215
Epoch Step: 30 / 819 Loss: 12.255050659179688 Tokens per Sec: 13992.695948401059
Epoch Step: 35 / 819 Loss: 20.061935424804688 Tokens per Sec: 14487.519183676442
Epoch Step: 40 / 819 Loss: 19.01399803161621 Tokens per Sec: 13205.165705362577
Epoch Step: 45 / 819 Loss: 98.30020904541016 Tokens per Sec: 12924.590328628052
Epoch Step: 50 / 819 Loss: 20.9906063079834 Tokens per Sec: 13866.186288424076
Epoch Step: 55 / 819 Loss: 15.749534606933594 Tokens per Sec: 12021.237024450273
Epoch Step: 60 / 819 Loss: 130.41873168945312 Tokens per Sec: 13997.112023239371
Epoch Step: 65 / 819 Loss: 18.44076919555664 Tokens per Sec: 13425.848314429044
Epoch Step: 70 / 819 Loss: 18.729694366455078 Tokens per Sec: 14925.025623089945
Epoch Step: 75 / 819 Loss: 13.837770462036133 Tokens per Sec: 13336.71525399132
Epoch Step: 80 / 819 Loss: 18.58805274963379 Tokens per Sec: 14582.18114545111
Epoch Step: 85 / 819 Loss: 15.395342826843262 Tokens per Sec: 12629.439931363342
Epoch Step: 90 / 819 Loss: 18.539466857910156 Tokens per Sec: 13578.454388041688
Epoch Step: 95 / 819 Loss: 11.334986686706543 Tokens per Sec: 13607.804453097004
Epoch Step: 100 / 819 Loss: 127.3543701171875 Tokens per Sec: 15116.22889467613
Epoch Step: 105 / 819 Loss: 16.374732971191406 Tokens per Sec: 15506.23985087257
Epoch Step: 110 / 819 Loss: 17.58734703063965 Tokens per Sec: 15129.151822162816
Epoch Step: 115 / 819 Loss: 14.947181701660156 Tokens per Sec: 12122.850300688417
Epoch Step: 120 / 819 Loss: 19.50605010986328 Tokens per Sec: 14032.846565450644
Epoch Step: 125 / 819 Loss: 19.918254852294922 Tokens per Sec: 12501.764110975055
Epoch Step: 130 / 819 Loss: 15.359707832336426 Tokens per Sec: 14996.305227166165
Epoch Step: 135 / 819 Loss: 14.680583000183105 Tokens per Sec: 15625.733812043072
Epoch Step: 140 / 819 Loss: 17.419002532958984 Tokens per Sec: 15030.973986876072
Epoch Step: 145 / 819 Loss: 16.430315017700195 Tokens per Sec: 13494.71910174077
Epoch Step: 150 / 819 Loss: 16.494157791137695 Tokens per Sec: 14338.685576261336
Epoch Step: 155 / 819 Loss: 16.257667541503906 Tokens per Sec: 13512.585074106719
Epoch Step: 160 / 819 Loss: 14.097325325012207 Tokens per Sec: 14692.366146355153
Epoch Step: 165 / 819 Loss: 16.237205505371094 Tokens per Sec: 13154.54389321881
Epoch Step: 170 / 819 Loss: 15.223443984985352 Tokens per Sec: 12871.410504268066
Epoch Step: 175 / 819 Loss: 15.471385955810547 Tokens per Sec: 14312.273666563728
Epoch Step: 180 / 819 Loss: 11.344809532165527 Tokens per Sec: 14636.929205570543
Epoch Step: 185 / 819 Loss: 18.334897994995117 Tokens per Sec: 14174.217437482104
Epoch Step: 190 / 819 Loss: 242.8039093017578 Tokens per Sec: 14148.243606355993
Epoch Step: 195 / 819 Loss: 13.824189186096191 Tokens per Sec: 14348.228492918186
Epoch Step: 200 / 819 Loss: 12.988786697387695 Tokens per Sec: 14292.844519620767
Epoch Step: 205 / 819 Loss: 10.868692398071289 Tokens per Sec: 14216.425230480236
Epoch Step: 210 / 819 Loss: 79.68980407714844 Tokens per Sec: 14434.262959286278
Epoch Step: 215 / 819 Loss: 22.98965072631836 Tokens per Sec: 13258.45869659497
Epoch Step: 220 / 819 Loss: 20.798009872436523 Tokens per Sec: 16942.162811637063
Epoch Step: 225 / 819 Loss: 15.970525741577148 Tokens per Sec: 13307.175681951292
Epoch Step: 230 / 819 Loss: 21.142534255981445 Tokens per Sec: 13356.800304261164
Epoch Step: 235 / 819 Loss: 19.541397094726562 Tokens per Sec: 13070.855253491054
Epoch Step: 240 / 819 Loss: 23.798620223999023 Tokens per Sec: 13219.278648576008
Epoch Step: 245 / 819 Loss: 14.22313117980957 Tokens per Sec: 14395.950594387348
Epoch Step: 250 / 819 Loss: 19.237178802490234 Tokens per Sec: 14858.213759630145
Epoch Step: 255 / 819 Loss: 134.7802276611328 Tokens per Sec: 14293.748993636647
Epoch Step: 260 / 819 Loss: 21.934202194213867 Tokens per Sec: 15159.703483731972
Epoch Step: 265 / 819 Loss: 19.050596237182617 Tokens per Sec: 13022.084942804124
Epoch Step: 270 / 819 Loss: 17.889385223388672 Tokens per Sec: 15687.201045688415
Epoch Step: 275 / 819 Loss: 19.05064582824707 Tokens per Sec: 13719.07332242859
Epoch Step: 280 / 819 Loss: 15.710123062133789 Tokens per Sec: 14409.254294868242
Epoch Step: 285 / 819 Loss: 16.89045524597168 Tokens per Sec: 13155.712102391672
Epoch Step: 290 / 819 Loss: 13.318735122680664 Tokens per Sec: 14261.070805387375
Epoch Step: 295 / 819 Loss: 12.173653602600098 Tokens per Sec: 14072.900845148763
Epoch Step: 300 / 819 Loss: 17.260385513305664 Tokens per Sec: 12823.902279780365
Epoch Step: 305 / 819 Loss: 15.579506874084473 Tokens per Sec: 13969.253173237641
Epoch Step: 310 / 819 Loss: 15.386833190917969 Tokens per Sec: 13216.540015232022
Epoch Step: 315 / 819 Loss: 20.616552352905273 Tokens per Sec: 14928.1725666092
Epoch Step: 320 / 819 Loss: 22.231531143188477 Tokens per Sec: 13223.65051793235
Epoch Step: 325 / 819 Loss: 19.963611602783203 Tokens per Sec: 15502.708520724527
Epoch Step: 330 / 819 Loss: 19.525882720947266 Tokens per Sec: 14239.78741562687
Epoch Step: 335 / 819 Loss: 17.164386749267578 Tokens per Sec: 13226.677753202692
Epoch Step: 340 / 819 Loss: 22.43063735961914 Tokens per Sec: 12131.905264864234
Epoch Step: 345 / 819 Loss: 23.467241287231445 Tokens per Sec: 13650.353834153502
Epoch Step: 350 / 819 Loss: 190.16246032714844 Tokens per Sec: 14607.595174602739
Epoch Step: 355 / 819 Loss: 17.114669799804688 Tokens per Sec: 16686.782529325297
Epoch Step: 360 / 819 Loss: 18.9056453704834 Tokens per Sec: 15179.729638188468
Epoch Step: 365 / 819 Loss: 13.577713012695312 Tokens per Sec: 13759.732667759723
Epoch Step: 370 / 819 Loss: 17.32569122314453 Tokens per Sec: 14307.268661200833
Epoch Step: 375 / 819 Loss: 12.53077507019043 Tokens per Sec: 14011.966578061265
Epoch Step: 380 / 819 Loss: 12.79798698425293 Tokens per Sec: 14016.47942208435
Epoch Step: 385 / 819 Loss: 13.160161972045898 Tokens per Sec: 16558.581591294183
Epoch Step: 390 / 819 Loss: 18.588956832885742 Tokens per Sec: 13460.543307880986
Epoch Step: 395 / 819 Loss: 19.912376403808594 Tokens per Sec: 13480.53740801468
Epoch Step: 400 / 819 Loss: 20.45396614074707 Tokens per Sec: 13290.463307408452
Epoch Step: 405 / 819 Loss: 18.439973831176758 Tokens per Sec: 12950.615584482506
Epoch Step: 410 / 819 Loss: 21.72159767150879 Tokens per Sec: 14741.472763684147
Epoch Step: 415 / 819 Loss: 13.95075511932373 Tokens per Sec: 13151.385853247188
Epoch Step: 420 / 819 Loss: 17.848600387573242 Tokens per Sec: 13012.97207380666
Epoch Step: 425 / 819 Loss: 13.839659690856934 Tokens per Sec: 15604.067974607962
Epoch Step: 430 / 819 Loss: 18.668689727783203 Tokens per Sec: 13857.768370474194
Epoch Step: 435 / 819 Loss: 13.189064025878906 Tokens per Sec: 14054.658176561426
Epoch Step: 440 / 819 Loss: 19.602693557739258 Tokens per Sec: 13398.534071394919
Epoch Step: 445 / 819 Loss: 20.067035675048828 Tokens per Sec: 13907.934667549778
Epoch Step: 450 / 819 Loss: 12.75261116027832 Tokens per Sec: 13586.578741947355
Epoch Step: 455 / 819 Loss: 13.88568115234375 Tokens per Sec: 14600.239769943551
Epoch Step: 460 / 819 Loss: 15.945838928222656 Tokens per Sec: 14025.521077095429
Epoch Step: 465 / 819 Loss: 13.13885498046875 Tokens per Sec: 13720.947018674193
Epoch Step: 470 / 819 Loss: 13.570904731750488 Tokens per Sec: 13552.089407583648
Epoch Step: 475 / 819 Loss: 20.588092803955078 Tokens per Sec: 14339.78893987907
Epoch Step: 480 / 819 Loss: 18.74569320678711 Tokens per Sec: 14681.117278958167
Epoch Step: 485 / 819 Loss: 16.072219848632812 Tokens per Sec: 14282.129600964763
Epoch Step: 490 / 819 Loss: 15.515225410461426 Tokens per Sec: 14938.068628018176
Epoch Step: 495 / 819 Loss: 20.097707748413086 Tokens per Sec: 13941.301818501848
Epoch Step: 500 / 819 Loss: 15.224534034729004 Tokens per Sec: 13543.202800871199
Epoch Step: 505 / 819 Loss: 12.405546188354492 Tokens per Sec: 12460.175922788165
Epoch Step: 510 / 819 Loss: 23.008811950683594 Tokens per Sec: 14028.295035989691
Epoch Step: 515 / 819 Loss: 16.971879959106445 Tokens per Sec: 14228.634285543383
Epoch Step: 520 / 819 Loss: 19.172391891479492 Tokens per Sec: 15148.885600237254
Epoch Step: 525 / 819 Loss: 154.29971313476562 Tokens per Sec: 13206.02124256548
Epoch Step: 530 / 819 Loss: 227.4962615966797 Tokens per Sec: 14715.412388355004
Epoch Step: 535 / 819 Loss: 110.58058166503906 Tokens per Sec: 11624.430094661137
Epoch Step: 540 / 819 Loss: 21.090030670166016 Tokens per Sec: 14726.17737211889
Epoch Step: 545 / 819 Loss: 14.523075103759766 Tokens per Sec: 13015.876738793828
Epoch Step: 550 / 819 Loss: 23.136743545532227 Tokens per Sec: 14211.55401589885
Epoch Step: 555 / 819 Loss: 14.20866870880127 Tokens per Sec: 13197.539211612451
Epoch Step: 560 / 819 Loss: 24.4765625 Tokens per Sec: 14341.063549069462
Epoch Step: 565 / 819 Loss: 20.293140411376953 Tokens per Sec: 13896.177959743061
Epoch Step: 570 / 819 Loss: 19.138830184936523 Tokens per Sec: 13717.968133071603
Epoch Step: 575 / 819 Loss: 17.53058433532715 Tokens per Sec: 14000.357156415668
Epoch Step: 580 / 819 Loss: 16.199073791503906 Tokens per Sec: 15683.96877264898
Epoch Step: 585 / 819 Loss: 19.666242599487305 Tokens per Sec: 14860.725660378965
Epoch Step: 590 / 819 Loss: 185.20028686523438 Tokens per Sec: 15047.17331840447
Epoch Step: 595 / 819 Loss: 18.80950164794922 Tokens per Sec: 15159.378442998883
Epoch Step: 600 / 819 Loss: 18.675251007080078 Tokens per Sec: 12353.712476483675
Epoch Step: 605 / 819 Loss: 13.283835411071777 Tokens per Sec: 14086.64376158302
Epoch Step: 610 / 819 Loss: 16.72592544555664 Tokens per Sec: 12659.608763172206
Epoch Step: 615 / 819 Loss: 13.480009078979492 Tokens per Sec: 12747.191070304554
Epoch Step: 620 / 819 Loss: 17.37299156188965 Tokens per Sec: 14856.717638381851
Epoch Step: 625 / 819 Loss: 21.794492721557617 Tokens per Sec: 14584.50314132042
Epoch Step: 630 / 819 Loss: 17.50212287902832 Tokens per Sec: 13777.745015814182
Epoch Step: 635 / 819 Loss: 15.101702690124512 Tokens per Sec: 12564.899617108378
Epoch Step: 640 / 819 Loss: 14.766119956970215 Tokens per Sec: 15369.62105701685
Epoch Step: 645 / 819 Loss: 12.460311889648438 Tokens per Sec: 12570.549880864666
Epoch Step: 650 / 819 Loss: 18.458778381347656 Tokens per Sec: 13587.831535577438
Epoch Step: 655 / 819 Loss: 13.891523361206055 Tokens per Sec: 13916.010656642527
Epoch Step: 660 / 819 Loss: 16.18120574951172 Tokens per Sec: 13221.804038781438
Epoch Step: 665 / 819 Loss: 17.325580596923828 Tokens per Sec: 15010.286467563204
Epoch Step: 670 / 819 Loss: 16.71497344970703 Tokens per Sec: 15670.772454481466
Epoch Step: 675 / 819 Loss: 17.898250579833984 Tokens per Sec: 14449.894259300552
Epoch Step: 680 / 819 Loss: 15.375160217285156 Tokens per Sec: 14662.649016784206
Epoch Step: 685 / 819 Loss: 19.6076602935791 Tokens per Sec: 15165.064921255555
Epoch Step: 690 / 819 Loss: 14.152690887451172 Tokens per Sec: 13411.305811242157
Epoch Step: 695 / 819 Loss: 17.942962646484375 Tokens per Sec: 14299.374286084341
Epoch Step: 700 / 819 Loss: 11.837257385253906 Tokens per Sec: 12884.009012176828
Epoch Step: 705 / 819 Loss: 16.164756774902344 Tokens per Sec: 13034.165785992627
Epoch Step: 710 / 819 Loss: 13.552873611450195 Tokens per Sec: 13701.420936113647
Epoch Step: 715 / 819 Loss: 18.45404052734375 Tokens per Sec: 14477.273397038893
Epoch Step: 720 / 819 Loss: 14.1016263961792 Tokens per Sec: 12682.167622489487
Epoch Step: 725 / 819 Loss: 14.950048446655273 Tokens per Sec: 14173.527241315413
Epoch Step: 730 / 819 Loss: 16.250690460205078 Tokens per Sec: 13809.077054303043
Epoch Step: 735 / 819 Loss: 177.714111328125 Tokens per Sec: 15946.810881465613
Epoch Step: 740 / 819 Loss: 20.341562271118164 Tokens per Sec: 16235.374462522928
Epoch Step: 745 / 819 Loss: 12.085883140563965 Tokens per Sec: 14447.51926126475
Epoch Step: 750 / 819 Loss: 18.200796127319336 Tokens per Sec: 14450.38713001943
Epoch Step: 755 / 819 Loss: 17.973201751708984 Tokens per Sec: 12715.93883873037
Epoch Step: 760 / 819 Loss: 17.33972930908203 Tokens per Sec: 13616.797381899853
Epoch Step: 765 / 819 Loss: 14.274091720581055 Tokens per Sec: 14836.054485960982
Epoch Step: 770 / 819 Loss: 17.89466667175293 Tokens per Sec: 14837.21545518243
Epoch Step: 775 / 819 Loss: 16.443830490112305 Tokens per Sec: 15691.805181971333
Epoch Step: 780 / 819 Loss: 18.410686492919922 Tokens per Sec: 13402.936288617828
Epoch Step: 785 / 819 Loss: 19.281391143798828 Tokens per Sec: 13691.68437712801
Epoch Step: 790 / 819 Loss: 17.928537368774414 Tokens per Sec: 14771.35574642413
Epoch Step: 795 / 819 Loss: 16.15959358215332 Tokens per Sec: 13181.23103286413
Epoch Step: 800 / 819 Loss: 19.847793579101562 Tokens per Sec: 15634.74019101799
Epoch Step: 805 / 819 Loss: 17.873254776000977 Tokens per Sec: 11301.598983598742
Epoch Step: 810 / 819 Loss: 15.945727348327637 Tokens per Sec: 12955.293198063991
Epoch Step: 815 / 819 Loss: 16.011531829833984 Tokens per Sec: 12818.894210855658
Epoch ended with duration 0:04:37.681906
Train perplexity: 1.586627968604204
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.202806
Validation perplexity: 1.5210037743104534
Epoch 45 / 1000
Epoch Step: 5 / 819 Loss: 259.9568786621094 Tokens per Sec: 14550.018285880236
Epoch Step: 10 / 819 Loss: 16.602174758911133 Tokens per Sec: 14702.516368634195
Epoch Step: 15 / 819 Loss: 123.54653930664062 Tokens per Sec: 15279.45158653978
Epoch Step: 20 / 819 Loss: 212.22645568847656 Tokens per Sec: 14440.514665011126
Epoch Step: 25 / 819 Loss: 22.010496139526367 Tokens per Sec: 13983.558771705348
Epoch Step: 30 / 819 Loss: 23.745548248291016 Tokens per Sec: 13719.492126565161
Epoch Step: 35 / 819 Loss: 25.81104850769043 Tokens per Sec: 14301.938694417122
Epoch Step: 40 / 819 Loss: 168.1519317626953 Tokens per Sec: 14157.74601095401
Epoch Step: 45 / 819 Loss: 19.929330825805664 Tokens per Sec: 14394.175622622344
Epoch Step: 50 / 819 Loss: 20.11328125 Tokens per Sec: 12853.572598822706
Epoch Step: 55 / 819 Loss: 14.070091247558594 Tokens per Sec: 14101.575774030121
Epoch Step: 60 / 819 Loss: 18.47685432434082 Tokens per Sec: 15736.754809648242
Epoch Step: 65 / 819 Loss: 13.112387657165527 Tokens per Sec: 15735.016356321688
Epoch Step: 70 / 819 Loss: 13.354694366455078 Tokens per Sec: 11907.967700393465
Epoch Step: 75 / 819 Loss: 14.262969970703125 Tokens per Sec: 15863.048558141787
Epoch Step: 80 / 819 Loss: 16.718944549560547 Tokens per Sec: 14581.241080879614
Epoch Step: 85 / 819 Loss: 13.203335762023926 Tokens per Sec: 13832.095156535283
Epoch Step: 90 / 819 Loss: 15.841405868530273 Tokens per Sec: 13223.534637701885
Epoch Step: 95 / 819 Loss: 14.842044830322266 Tokens per Sec: 13765.886167263634
Epoch Step: 100 / 819 Loss: 22.98585319519043 Tokens per Sec: 11948.65321656299
Epoch Step: 105 / 819 Loss: 19.549577713012695 Tokens per Sec: 14109.930619622579
Epoch Step: 110 / 819 Loss: 18.698871612548828 Tokens per Sec: 13892.403732001503
Epoch Step: 115 / 819 Loss: 15.655609130859375 Tokens per Sec: 14578.751646372768
Epoch Step: 120 / 819 Loss: 14.347417831420898 Tokens per Sec: 13616.23230132962
Epoch Step: 125 / 819 Loss: 18.700763702392578 Tokens per Sec: 13692.468826514692
Epoch Step: 130 / 819 Loss: 20.554718017578125 Tokens per Sec: 15630.21960626569
Epoch Step: 135 / 819 Loss: 113.65272521972656 Tokens per Sec: 14430.035069206078
Epoch Step: 140 / 819 Loss: 16.058259963989258 Tokens per Sec: 13994.414059106519
Epoch Step: 145 / 819 Loss: 16.94351577758789 Tokens per Sec: 13790.529863566277
Epoch Step: 150 / 819 Loss: 19.122161865234375 Tokens per Sec: 14343.058052555343
Epoch Step: 155 / 819 Loss: 14.084050178527832 Tokens per Sec: 15011.21527154965
Epoch Step: 160 / 819 Loss: 13.183591842651367 Tokens per Sec: 14890.990214264413
Epoch Step: 165 / 819 Loss: 14.701663970947266 Tokens per Sec: 12433.72693196935
Epoch Step: 170 / 819 Loss: 17.947486877441406 Tokens per Sec: 13624.054219711588
Epoch Step: 175 / 819 Loss: 15.723749160766602 Tokens per Sec: 12119.785892896625
Epoch Step: 180 / 819 Loss: 15.799925804138184 Tokens per Sec: 17008.341253053397
Epoch Step: 185 / 819 Loss: 11.281136512756348 Tokens per Sec: 13952.450649626826
Epoch Step: 190 / 819 Loss: 16.650691986083984 Tokens per Sec: 14370.480636853128
Epoch Step: 195 / 819 Loss: 15.667253494262695 Tokens per Sec: 13359.905499324472
Epoch Step: 200 / 819 Loss: 12.759387016296387 Tokens per Sec: 13960.810003503771
Epoch Step: 205 / 819 Loss: 12.169454574584961 Tokens per Sec: 14252.429615045297
Epoch Step: 210 / 819 Loss: 20.76753044128418 Tokens per Sec: 13432.083494931627
Epoch Step: 215 / 819 Loss: 14.749409675598145 Tokens per Sec: 14383.908326716075
Epoch Step: 220 / 819 Loss: 15.159143447875977 Tokens per Sec: 12980.537318008668
Epoch Step: 225 / 819 Loss: 14.168521881103516 Tokens per Sec: 11873.674722013777
Epoch Step: 230 / 819 Loss: 19.62689781188965 Tokens per Sec: 13266.387682399649
Epoch Step: 235 / 819 Loss: 14.621000289916992 Tokens per Sec: 15188.863762337167
Epoch Step: 240 / 819 Loss: 15.07178020477295 Tokens per Sec: 14457.729737760053
Epoch Step: 245 / 819 Loss: 18.810787200927734 Tokens per Sec: 13018.811906903387
Epoch Step: 250 / 819 Loss: 22.18642234802246 Tokens per Sec: 13033.048948011448
Epoch Step: 255 / 819 Loss: 15.723897933959961 Tokens per Sec: 13220.123769241387
Epoch Step: 260 / 819 Loss: 18.390222549438477 Tokens per Sec: 14344.70236722636
Epoch Step: 265 / 819 Loss: 21.285049438476562 Tokens per Sec: 14355.306252103275
Epoch Step: 270 / 819 Loss: 16.29823875427246 Tokens per Sec: 12994.377665115444
Epoch Step: 275 / 819 Loss: 19.08264923095703 Tokens per Sec: 15254.290108416431
Epoch Step: 280 / 819 Loss: 18.600122451782227 Tokens per Sec: 13974.146380406017
Epoch Step: 285 / 819 Loss: 19.5835018157959 Tokens per Sec: 14336.882900375067
Epoch Step: 290 / 819 Loss: 16.4164981842041 Tokens per Sec: 13584.386492368181
Epoch Step: 295 / 819 Loss: 18.543737411499023 Tokens per Sec: 15788.526564522599
Epoch Step: 300 / 819 Loss: 15.263899803161621 Tokens per Sec: 15857.074210763198
Epoch Step: 305 / 819 Loss: 14.038294792175293 Tokens per Sec: 15772.316139505703
Epoch Step: 310 / 819 Loss: 19.111928939819336 Tokens per Sec: 13877.41599569408
Epoch Step: 315 / 819 Loss: 16.600976943969727 Tokens per Sec: 12431.437358561107
Epoch Step: 320 / 819 Loss: 19.86284828186035 Tokens per Sec: 14620.017336120894
Epoch Step: 325 / 819 Loss: 15.451896667480469 Tokens per Sec: 13560.059848183215
Epoch Step: 330 / 819 Loss: 14.50880241394043 Tokens per Sec: 14556.784140854501
Epoch Step: 335 / 819 Loss: 17.084564208984375 Tokens per Sec: 13938.679963530069
Epoch Step: 340 / 819 Loss: 15.915921211242676 Tokens per Sec: 13517.816086305427
Epoch Step: 345 / 819 Loss: 122.9652099609375 Tokens per Sec: 12650.054414837436
Epoch Step: 350 / 819 Loss: 18.44464683532715 Tokens per Sec: 11869.090878273202
Epoch Step: 355 / 819 Loss: 14.832231521606445 Tokens per Sec: 13695.593575357776
Epoch Step: 360 / 819 Loss: 13.141688346862793 Tokens per Sec: 13759.279026406699
Epoch Step: 365 / 819 Loss: 15.553940773010254 Tokens per Sec: 16612.963451163265
Epoch Step: 370 / 819 Loss: 18.660600662231445 Tokens per Sec: 14251.972667668384
Epoch Step: 375 / 819 Loss: 19.299678802490234 Tokens per Sec: 13917.507306182155
Epoch Step: 380 / 819 Loss: 17.107561111450195 Tokens per Sec: 14426.409767359854
Epoch Step: 385 / 819 Loss: 15.353486061096191 Tokens per Sec: 14991.150439275378
Epoch Step: 390 / 819 Loss: 16.46686553955078 Tokens per Sec: 16665.09315181285
Epoch Step: 395 / 819 Loss: 16.808509826660156 Tokens per Sec: 16206.441634418494
Epoch Step: 400 / 819 Loss: 201.83229064941406 Tokens per Sec: 12027.801754260347
Epoch Step: 405 / 819 Loss: 170.193359375 Tokens per Sec: 11956.742566052497
Epoch Step: 410 / 819 Loss: 22.24635124206543 Tokens per Sec: 14431.351595906031
Epoch Step: 415 / 819 Loss: 176.94244384765625 Tokens per Sec: 13550.871691719405
Epoch Step: 420 / 819 Loss: 12.977910995483398 Tokens per Sec: 15404.19307488041
Epoch Step: 425 / 819 Loss: 16.717378616333008 Tokens per Sec: 15445.634744100253
Epoch Step: 430 / 819 Loss: 18.647235870361328 Tokens per Sec: 13570.906366026364
Epoch Step: 435 / 819 Loss: 133.65396118164062 Tokens per Sec: 12150.99998830254
Epoch Step: 440 / 819 Loss: 20.383525848388672 Tokens per Sec: 13063.140605005385
Epoch Step: 445 / 819 Loss: 16.596548080444336 Tokens per Sec: 13637.805543794464
Epoch Step: 450 / 819 Loss: 17.653804779052734 Tokens per Sec: 14255.458250156795
Epoch Step: 455 / 819 Loss: 16.755311965942383 Tokens per Sec: 14662.959625758307
Epoch Step: 460 / 819 Loss: 15.981210708618164 Tokens per Sec: 15609.340807050587
Epoch Step: 465 / 819 Loss: 170.92405700683594 Tokens per Sec: 13861.978811667292
Epoch Step: 470 / 819 Loss: 21.348573684692383 Tokens per Sec: 14284.361827910507
Epoch Step: 475 / 819 Loss: 144.91761779785156 Tokens per Sec: 13144.514703150582
Epoch Step: 480 / 819 Loss: 15.988776206970215 Tokens per Sec: 13879.06662462137
Epoch Step: 485 / 819 Loss: 127.52945709228516 Tokens per Sec: 15914.686083768958
Epoch Step: 490 / 819 Loss: 14.508008003234863 Tokens per Sec: 14567.624582139608
Epoch Step: 495 / 819 Loss: 19.433269500732422 Tokens per Sec: 13678.259809584202
Epoch Step: 500 / 819 Loss: 160.6549530029297 Tokens per Sec: 15011.485292052317
Epoch Step: 505 / 819 Loss: 21.169580459594727 Tokens per Sec: 14983.767262614809
Epoch Step: 510 / 819 Loss: 19.070953369140625 Tokens per Sec: 13380.683309575265
Epoch Step: 515 / 819 Loss: 18.493898391723633 Tokens per Sec: 14210.543367343178
Epoch Step: 520 / 819 Loss: 18.915742874145508 Tokens per Sec: 12919.051178547876
Epoch Step: 525 / 819 Loss: 18.10707664489746 Tokens per Sec: 14025.771477039638
Epoch Step: 530 / 819 Loss: 18.205684661865234 Tokens per Sec: 13668.680652805071
Epoch Step: 535 / 819 Loss: 14.727133750915527 Tokens per Sec: 14976.076463660333
Epoch Step: 540 / 819 Loss: 13.107479095458984 Tokens per Sec: 12806.596048686837
Epoch Step: 545 / 819 Loss: 13.48409652709961 Tokens per Sec: 13074.076732750458
Epoch Step: 550 / 819 Loss: 18.76141357421875 Tokens per Sec: 13785.229707889057
Epoch Step: 555 / 819 Loss: 18.873308181762695 Tokens per Sec: 14225.466000999335
Epoch Step: 560 / 819 Loss: 13.365650177001953 Tokens per Sec: 12820.1281250163
Epoch Step: 565 / 819 Loss: 19.24215316772461 Tokens per Sec: 14547.367357352508
Epoch Step: 570 / 819 Loss: 14.668071746826172 Tokens per Sec: 14332.736594264015
Epoch Step: 575 / 819 Loss: 14.656147003173828 Tokens per Sec: 14231.478595474615
Epoch Step: 580 / 819 Loss: 13.793763160705566 Tokens per Sec: 13323.834268449038
Epoch Step: 585 / 819 Loss: 14.56843376159668 Tokens per Sec: 14680.462229051487
Epoch Step: 590 / 819 Loss: 20.299419403076172 Tokens per Sec: 14009.820108562495
Epoch Step: 595 / 819 Loss: 95.56401062011719 Tokens per Sec: 14341.447876291082
Epoch Step: 600 / 819 Loss: 21.466588973999023 Tokens per Sec: 13832.002355334242
Epoch Step: 605 / 819 Loss: 19.91643524169922 Tokens per Sec: 14162.022612353798
Epoch Step: 610 / 819 Loss: 17.024150848388672 Tokens per Sec: 12492.344176311064
Epoch Step: 615 / 819 Loss: 21.696863174438477 Tokens per Sec: 11958.888841799751
Epoch Step: 620 / 819 Loss: 156.21347045898438 Tokens per Sec: 13131.662854319227
Epoch Step: 625 / 819 Loss: 18.64385223388672 Tokens per Sec: 11859.84665211344
Epoch Step: 630 / 819 Loss: 19.1947078704834 Tokens per Sec: 13639.698045937572
Epoch Step: 635 / 819 Loss: 14.715187072753906 Tokens per Sec: 13443.78614412247
Epoch Step: 640 / 819 Loss: 17.53033447265625 Tokens per Sec: 14060.946049049002
Epoch Step: 645 / 819 Loss: 19.415847778320312 Tokens per Sec: 14229.070713570683
Epoch Step: 650 / 819 Loss: 14.690570831298828 Tokens per Sec: 12736.4604112622
Epoch Step: 655 / 819 Loss: 12.436688423156738 Tokens per Sec: 14480.967479192717
Epoch Step: 660 / 819 Loss: 11.140217781066895 Tokens per Sec: 13581.785600290656
Epoch Step: 665 / 819 Loss: 19.14369010925293 Tokens per Sec: 12850.634258063787
Epoch Step: 670 / 819 Loss: 14.022485733032227 Tokens per Sec: 14450.938113323733
Epoch Step: 675 / 819 Loss: 18.378475189208984 Tokens per Sec: 14034.511851196625
Epoch Step: 680 / 819 Loss: 15.202195167541504 Tokens per Sec: 13834.992434200985
Epoch Step: 685 / 819 Loss: 206.58514404296875 Tokens per Sec: 15092.333076363611
Epoch Step: 690 / 819 Loss: 19.41221809387207 Tokens per Sec: 14262.656210839668
Epoch Step: 695 / 819 Loss: 13.66332721710205 Tokens per Sec: 14792.911371616741
Epoch Step: 700 / 819 Loss: 14.092182159423828 Tokens per Sec: 12868.904728563764
Epoch Step: 705 / 819 Loss: 15.399316787719727 Tokens per Sec: 13956.388204024617
Epoch Step: 710 / 819 Loss: 12.074090957641602 Tokens per Sec: 13935.256891416362
Epoch Step: 715 / 819 Loss: 18.07472801208496 Tokens per Sec: 15897.96081962709
Epoch Step: 720 / 819 Loss: 151.29408264160156 Tokens per Sec: 15391.845398460919
Epoch Step: 725 / 819 Loss: 15.587943077087402 Tokens per Sec: 14044.131886594017
Epoch Step: 730 / 819 Loss: 15.02412223815918 Tokens per Sec: 13547.361838584055
Epoch Step: 735 / 819 Loss: 10.944428443908691 Tokens per Sec: 14231.253468861045
Epoch Step: 740 / 819 Loss: 17.212024688720703 Tokens per Sec: 14255.965335508166
Epoch Step: 745 / 819 Loss: 14.817012786865234 Tokens per Sec: 14013.217032852099
Epoch Step: 750 / 819 Loss: 12.68922233581543 Tokens per Sec: 13706.68755797163
Epoch Step: 755 / 819 Loss: 15.490768432617188 Tokens per Sec: 15910.952216208902
Epoch Step: 760 / 819 Loss: 16.26126480102539 Tokens per Sec: 14151.731905006727
Epoch Step: 765 / 819 Loss: 16.232316970825195 Tokens per Sec: 12844.818104545073
Epoch Step: 770 / 819 Loss: 15.680521011352539 Tokens per Sec: 17275.25465065608
Epoch Step: 775 / 819 Loss: 14.540913581848145 Tokens per Sec: 15515.334487859733
Epoch Step: 780 / 819 Loss: 20.003971099853516 Tokens per Sec: 13992.867581409377
Epoch Step: 785 / 819 Loss: 18.568119049072266 Tokens per Sec: 15744.149773252526
Epoch Step: 790 / 819 Loss: 147.7493133544922 Tokens per Sec: 12967.408206814618
Epoch Step: 795 / 819 Loss: 22.035770416259766 Tokens per Sec: 13176.833393619889
Epoch Step: 800 / 819 Loss: 18.854570388793945 Tokens per Sec: 13849.463176410996
Epoch Step: 805 / 819 Loss: 19.639497756958008 Tokens per Sec: 16763.318734530047
Epoch Step: 810 / 819 Loss: 17.484331130981445 Tokens per Sec: 10559.562170168712
Epoch Step: 815 / 819 Loss: 18.72500228881836 Tokens per Sec: 13559.267304080347
Epoch ended with duration 0:04:37.203602
Train perplexity: 1.580433144073743
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.922625
Validation perplexity: 1.4477796959478697
Model saved checkpoint!
Epoch 46 / 1000
Epoch Step: 5 / 819 Loss: 22.51083755493164 Tokens per Sec: 14403.168404977108
Epoch Step: 10 / 819 Loss: 16.781551361083984 Tokens per Sec: 12980.207852806207
Epoch Step: 15 / 819 Loss: 17.41706085205078 Tokens per Sec: 13817.042496824317
Epoch Step: 20 / 819 Loss: 16.147180557250977 Tokens per Sec: 13756.632742496437
Epoch Step: 25 / 819 Loss: 21.07227325439453 Tokens per Sec: 13686.029700507994
Epoch Step: 30 / 819 Loss: 14.501771926879883 Tokens per Sec: 13158.822063561573
Epoch Step: 35 / 819 Loss: 15.314749717712402 Tokens per Sec: 14692.87232381919
Epoch Step: 40 / 819 Loss: 16.580867767333984 Tokens per Sec: 13339.86233647654
Epoch Step: 45 / 819 Loss: 10.657854080200195 Tokens per Sec: 14372.01649406163
Epoch Step: 50 / 819 Loss: 18.180416107177734 Tokens per Sec: 13121.599597753204
Epoch Step: 55 / 819 Loss: 16.729951858520508 Tokens per Sec: 13193.443195349788
Epoch Step: 60 / 819 Loss: 14.23999309539795 Tokens per Sec: 12863.189035635858
Epoch Step: 65 / 819 Loss: 14.838187217712402 Tokens per Sec: 14928.457816473347
Epoch Step: 70 / 819 Loss: 16.72382926940918 Tokens per Sec: 14384.285602674569
Epoch Step: 75 / 819 Loss: 217.75526428222656 Tokens per Sec: 14657.042422198372
Epoch Step: 80 / 819 Loss: 20.21202278137207 Tokens per Sec: 13951.429058110252
Epoch Step: 85 / 819 Loss: 19.468908309936523 Tokens per Sec: 14450.235227867925
Epoch Step: 90 / 819 Loss: 15.343550682067871 Tokens per Sec: 14430.232341012814
Epoch Step: 95 / 819 Loss: 13.033890724182129 Tokens per Sec: 15477.183726746413
Epoch Step: 100 / 819 Loss: 18.410337448120117 Tokens per Sec: 16590.91865487498
Epoch Step: 105 / 819 Loss: 15.946462631225586 Tokens per Sec: 15613.27902130185
Epoch Step: 110 / 819 Loss: 14.452771186828613 Tokens per Sec: 12305.847054483347
Epoch Step: 115 / 819 Loss: 244.7557830810547 Tokens per Sec: 13507.781495644454
Epoch Step: 120 / 819 Loss: 19.827974319458008 Tokens per Sec: 14965.546678870392
Epoch Step: 125 / 819 Loss: 16.491615295410156 Tokens per Sec: 15125.237469142367
Epoch Step: 130 / 819 Loss: 20.599424362182617 Tokens per Sec: 15091.27725227852
Epoch Step: 135 / 819 Loss: 20.538938522338867 Tokens per Sec: 14589.101690584135
Epoch Step: 140 / 819 Loss: 16.042747497558594 Tokens per Sec: 15258.632236463265
Epoch Step: 145 / 819 Loss: 15.011818885803223 Tokens per Sec: 13720.18492294039
Epoch Step: 150 / 819 Loss: 12.826184272766113 Tokens per Sec: 12244.228141475394
Epoch Step: 155 / 819 Loss: 20.220909118652344 Tokens per Sec: 14520.081511639768
Epoch Step: 160 / 819 Loss: 19.8824405670166 Tokens per Sec: 14863.061431963208
Epoch Step: 165 / 819 Loss: 17.2347354888916 Tokens per Sec: 14755.423289766426
Epoch Step: 170 / 819 Loss: 18.358400344848633 Tokens per Sec: 14012.32159828223
Epoch Step: 175 / 819 Loss: 13.810317993164062 Tokens per Sec: 12431.820383301494
Epoch Step: 180 / 819 Loss: 15.356562614440918 Tokens per Sec: 14326.586574196219
Epoch Step: 185 / 819 Loss: 15.240387916564941 Tokens per Sec: 12908.619239139613
Epoch Step: 190 / 819 Loss: 12.880522727966309 Tokens per Sec: 12626.939536086868
Epoch Step: 195 / 819 Loss: 14.166828155517578 Tokens per Sec: 15494.961769843845
Epoch Step: 200 / 819 Loss: 20.654382705688477 Tokens per Sec: 14564.179877395292
Epoch Step: 205 / 819 Loss: 19.632017135620117 Tokens per Sec: 13489.240145481368
Epoch Step: 210 / 819 Loss: 14.614105224609375 Tokens per Sec: 14744.540897874364
Epoch Step: 215 / 819 Loss: 16.36880874633789 Tokens per Sec: 14117.0019599178
Epoch Step: 220 / 819 Loss: 20.223026275634766 Tokens per Sec: 13766.285830678837
Epoch Step: 225 / 819 Loss: 16.72022819519043 Tokens per Sec: 13368.104670196819
Epoch Step: 230 / 819 Loss: 14.588445663452148 Tokens per Sec: 14195.219921766353
Epoch Step: 235 / 819 Loss: 15.869786262512207 Tokens per Sec: 13326.42193885209
Epoch Step: 240 / 819 Loss: 11.996228218078613 Tokens per Sec: 15145.156608780795
Epoch Step: 245 / 819 Loss: 17.40399742126465 Tokens per Sec: 12710.644160424672
Epoch Step: 250 / 819 Loss: 19.937236785888672 Tokens per Sec: 15825.445721133989
Epoch Step: 255 / 819 Loss: 20.654720306396484 Tokens per Sec: 13396.76827782187
Epoch Step: 260 / 819 Loss: 14.52888298034668 Tokens per Sec: 13990.830637980289
Epoch Step: 265 / 819 Loss: 12.145545959472656 Tokens per Sec: 15027.3362358978
Epoch Step: 270 / 819 Loss: 15.97387409210205 Tokens per Sec: 14412.296266502126
Epoch Step: 275 / 819 Loss: 12.705348014831543 Tokens per Sec: 17448.491436126587
Epoch Step: 280 / 819 Loss: 11.720602035522461 Tokens per Sec: 14227.112118876255
Epoch Step: 285 / 819 Loss: 18.50455665588379 Tokens per Sec: 14374.981861373559
Epoch Step: 290 / 819 Loss: 15.816656112670898 Tokens per Sec: 13444.69055292912
Epoch Step: 295 / 819 Loss: 172.6405792236328 Tokens per Sec: 14241.811493604799
Epoch Step: 300 / 819 Loss: 154.96658325195312 Tokens per Sec: 15129.996556292952
Epoch Step: 305 / 819 Loss: 19.4074764251709 Tokens per Sec: 13225.16143941008
Epoch Step: 310 / 819 Loss: 15.724710464477539 Tokens per Sec: 14079.300815971774
Epoch Step: 315 / 819 Loss: 18.601238250732422 Tokens per Sec: 13531.747960692437
Epoch Step: 320 / 819 Loss: 15.778096199035645 Tokens per Sec: 14112.009760489256
Epoch Step: 325 / 819 Loss: 16.40613555908203 Tokens per Sec: 13336.302412801071
Epoch Step: 330 / 819 Loss: 12.009164810180664 Tokens per Sec: 13498.297566503732
Epoch Step: 335 / 819 Loss: 19.2125186920166 Tokens per Sec: 12959.107074919675
Epoch Step: 340 / 819 Loss: 15.315199851989746 Tokens per Sec: 13913.745426058504
Epoch Step: 345 / 819 Loss: 17.797977447509766 Tokens per Sec: 13362.585952563924
Epoch Step: 350 / 819 Loss: 12.708891868591309 Tokens per Sec: 13307.868570199551
Epoch Step: 355 / 819 Loss: 16.83539581298828 Tokens per Sec: 14516.723557116948
Epoch Step: 360 / 819 Loss: 13.723244667053223 Tokens per Sec: 14254.173182929866
Epoch Step: 365 / 819 Loss: 15.894050598144531 Tokens per Sec: 12764.544336296573
Epoch Step: 370 / 819 Loss: 15.342198371887207 Tokens per Sec: 15374.302701606757
Epoch Step: 375 / 819 Loss: 15.29161262512207 Tokens per Sec: 13280.364920416545
Epoch Step: 380 / 819 Loss: 13.982999801635742 Tokens per Sec: 13516.058814934622
Epoch Step: 385 / 819 Loss: 17.702903747558594 Tokens per Sec: 12357.718930368137
Epoch Step: 390 / 819 Loss: 15.193321228027344 Tokens per Sec: 14126.930578600693
Epoch Step: 395 / 819 Loss: 12.821958541870117 Tokens per Sec: 13956.747542348063
Epoch Step: 400 / 819 Loss: 15.262792587280273 Tokens per Sec: 14334.78620095122
Epoch Step: 405 / 819 Loss: 14.647087097167969 Tokens per Sec: 12443.004157994903
Epoch Step: 410 / 819 Loss: 15.514725685119629 Tokens per Sec: 14440.461339243226
Epoch Step: 415 / 819 Loss: 144.38836669921875 Tokens per Sec: 14984.565828002465
Epoch Step: 420 / 819 Loss: 20.45347785949707 Tokens per Sec: 13234.460367663723
Epoch Step: 425 / 819 Loss: 16.898019790649414 Tokens per Sec: 12638.312854299835
Epoch Step: 430 / 819 Loss: 20.38282012939453 Tokens per Sec: 13804.149461440638
Epoch Step: 435 / 819 Loss: 19.65525245666504 Tokens per Sec: 15285.022429675822
Epoch Step: 440 / 819 Loss: 104.61196899414062 Tokens per Sec: 12203.842454072024
Epoch Step: 445 / 819 Loss: 20.31698226928711 Tokens per Sec: 15431.234350317369
Epoch Step: 450 / 819 Loss: 17.10233497619629 Tokens per Sec: 15326.301048016332
Epoch Step: 455 / 819 Loss: 15.950986862182617 Tokens per Sec: 14252.291974888836
Epoch Step: 460 / 819 Loss: 20.054012298583984 Tokens per Sec: 14997.926509173938
Epoch Step: 465 / 819 Loss: 12.49610710144043 Tokens per Sec: 16641.309328656396
Epoch Step: 470 / 819 Loss: 19.62457275390625 Tokens per Sec: 16037.970363037855
Epoch Step: 475 / 819 Loss: 244.02565002441406 Tokens per Sec: 14040.108455442274
Epoch Step: 480 / 819 Loss: 15.8211669921875 Tokens per Sec: 15565.601808639361
Epoch Step: 485 / 819 Loss: 19.293493270874023 Tokens per Sec: 13127.982121217994
Epoch Step: 490 / 819 Loss: 13.694451332092285 Tokens per Sec: 12906.622512862099
Epoch Step: 495 / 819 Loss: 16.122028350830078 Tokens per Sec: 14162.201698880717
Epoch Step: 500 / 819 Loss: 17.906097412109375 Tokens per Sec: 13463.872592632844
Epoch Step: 505 / 819 Loss: 18.6547908782959 Tokens per Sec: 13544.4361657088
Epoch Step: 510 / 819 Loss: 16.280099868774414 Tokens per Sec: 15185.783637976756
Epoch Step: 515 / 819 Loss: 15.902728080749512 Tokens per Sec: 15049.790466566119
Epoch Step: 520 / 819 Loss: 17.347190856933594 Tokens per Sec: 15257.095188202084
Epoch Step: 525 / 819 Loss: 17.24626922607422 Tokens per Sec: 14147.460963767726
Epoch Step: 530 / 819 Loss: 18.03546714782715 Tokens per Sec: 13831.594147678883
Epoch Step: 535 / 819 Loss: 14.902173042297363 Tokens per Sec: 13864.75747579008
Epoch Step: 540 / 819 Loss: 16.83127212524414 Tokens per Sec: 14077.965159904343
Epoch Step: 545 / 819 Loss: 14.51695728302002 Tokens per Sec: 13368.380684638505
Epoch Step: 550 / 819 Loss: 15.58173656463623 Tokens per Sec: 12905.541392758956
Epoch Step: 555 / 819 Loss: 15.89653491973877 Tokens per Sec: 13828.14904022938
Epoch Step: 560 / 819 Loss: 14.695127487182617 Tokens per Sec: 13461.867167177428
Epoch Step: 565 / 819 Loss: 19.28774642944336 Tokens per Sec: 12530.061540861658
Epoch Step: 570 / 819 Loss: 13.895607948303223 Tokens per Sec: 13664.50873638485
Epoch Step: 575 / 819 Loss: 19.36492347717285 Tokens per Sec: 12835.606350393078
Epoch Step: 580 / 819 Loss: 182.06671142578125 Tokens per Sec: 13746.268252386202
Epoch Step: 585 / 819 Loss: 16.366689682006836 Tokens per Sec: 15598.580032265221
Epoch Step: 590 / 819 Loss: 17.417659759521484 Tokens per Sec: 12744.31649403707
Epoch Step: 595 / 819 Loss: 146.02476501464844 Tokens per Sec: 15784.986248488834
Epoch Step: 600 / 819 Loss: 17.180561065673828 Tokens per Sec: 16192.786885007177
Epoch Step: 605 / 819 Loss: 11.381346702575684 Tokens per Sec: 12128.062270852175
Epoch Step: 610 / 819 Loss: 11.85209846496582 Tokens per Sec: 14732.913462192146
Epoch Step: 615 / 819 Loss: 13.750619888305664 Tokens per Sec: 12789.878886992083
Epoch Step: 620 / 819 Loss: 20.908512115478516 Tokens per Sec: 12819.863076747226
Epoch Step: 625 / 819 Loss: 18.86021614074707 Tokens per Sec: 13429.630289660703
Epoch Step: 630 / 819 Loss: 13.3182373046875 Tokens per Sec: 13184.225867416382
Epoch Step: 635 / 819 Loss: 76.58438110351562 Tokens per Sec: 13350.470822449275
Epoch Step: 640 / 819 Loss: 20.35080909729004 Tokens per Sec: 14877.306168111045
Epoch Step: 645 / 819 Loss: 16.613853454589844 Tokens per Sec: 13605.48828789558
Epoch Step: 650 / 819 Loss: 138.79136657714844 Tokens per Sec: 13949.001286164257
Epoch Step: 655 / 819 Loss: 15.929576873779297 Tokens per Sec: 13307.427296608494
Epoch Step: 660 / 819 Loss: 14.087648391723633 Tokens per Sec: 14727.135015440073
Epoch Step: 665 / 819 Loss: 14.640110969543457 Tokens per Sec: 14348.025594280762
Epoch Step: 670 / 819 Loss: 16.763818740844727 Tokens per Sec: 15974.374990745473
Epoch Step: 675 / 819 Loss: 18.553558349609375 Tokens per Sec: 13999.523353763929
Epoch Step: 680 / 819 Loss: 15.162696838378906 Tokens per Sec: 14652.292530008519
Epoch Step: 685 / 819 Loss: 13.885375022888184 Tokens per Sec: 12790.429946502167
Epoch Step: 690 / 819 Loss: 13.382832527160645 Tokens per Sec: 14922.464639892672
Epoch Step: 695 / 819 Loss: 15.983057975769043 Tokens per Sec: 14446.976182509192
Epoch Step: 700 / 819 Loss: 14.52520751953125 Tokens per Sec: 15941.196947543905
Epoch Step: 705 / 819 Loss: 18.521747589111328 Tokens per Sec: 13039.760494089318
Epoch Step: 710 / 819 Loss: 14.400094985961914 Tokens per Sec: 14138.88161417416
Epoch Step: 715 / 819 Loss: 17.10454559326172 Tokens per Sec: 13337.62218393304
Epoch Step: 720 / 819 Loss: 15.3870849609375 Tokens per Sec: 14302.974701293218
Epoch Step: 725 / 819 Loss: 17.997013092041016 Tokens per Sec: 14550.922441674227
Epoch Step: 730 / 819 Loss: 11.948521614074707 Tokens per Sec: 14679.642640404954
Epoch Step: 735 / 819 Loss: 13.6007719039917 Tokens per Sec: 14817.817396494405
Epoch Step: 740 / 819 Loss: 13.772829055786133 Tokens per Sec: 13599.262032436285
Epoch Step: 745 / 819 Loss: 18.61785316467285 Tokens per Sec: 12653.99511610041
Epoch Step: 750 / 819 Loss: 15.451408386230469 Tokens per Sec: 14523.031911113829
Epoch Step: 755 / 819 Loss: 14.221271514892578 Tokens per Sec: 14782.709669173912
Epoch Step: 760 / 819 Loss: 14.227624893188477 Tokens per Sec: 14806.446029655439
Epoch Step: 765 / 819 Loss: 11.728833198547363 Tokens per Sec: 15244.967389671254
Epoch Step: 770 / 819 Loss: 220.39913940429688 Tokens per Sec: 14479.107592773578
Epoch Step: 775 / 819 Loss: 15.145139694213867 Tokens per Sec: 12200.13850848929
Epoch Step: 780 / 819 Loss: 15.773612976074219 Tokens per Sec: 13241.918215168698
Epoch Step: 785 / 819 Loss: 21.28145980834961 Tokens per Sec: 14417.475834790997
Epoch Step: 790 / 819 Loss: 15.302082061767578 Tokens per Sec: 14217.129709693027
Epoch Step: 795 / 819 Loss: 17.19828224182129 Tokens per Sec: 14001.558360446406
Epoch Step: 800 / 819 Loss: 17.901206970214844 Tokens per Sec: 13717.42708785831
Epoch Step: 805 / 819 Loss: 14.400508880615234 Tokens per Sec: 13221.336593427239
Epoch Step: 810 / 819 Loss: 17.05019760131836 Tokens per Sec: 11565.461840254646
Epoch Step: 815 / 819 Loss: 17.339618682861328 Tokens per Sec: 14115.280909972853
Epoch ended with duration 0:04:36.931878
Train perplexity: 1.508989364610512
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.920744
Validation perplexity: 1.5782965244141534
Epoch 47 / 1000
Epoch Step: 5 / 819 Loss: 18.33535385131836 Tokens per Sec: 13256.540574106075
Epoch Step: 10 / 819 Loss: 13.717495918273926 Tokens per Sec: 14829.0169647642
Epoch Step: 15 / 819 Loss: 16.060209274291992 Tokens per Sec: 14290.183838069404
Epoch Step: 20 / 819 Loss: 16.361230850219727 Tokens per Sec: 13206.676661646437
Epoch Step: 25 / 819 Loss: 13.580098152160645 Tokens per Sec: 12624.82600367141
Epoch Step: 30 / 819 Loss: 18.23678970336914 Tokens per Sec: 14310.668567466708
Epoch Step: 35 / 819 Loss: 12.542158126831055 Tokens per Sec: 13887.322337256734
Epoch Step: 40 / 819 Loss: 14.175777435302734 Tokens per Sec: 17057.616131833693
Epoch Step: 45 / 819 Loss: 14.141854286193848 Tokens per Sec: 13551.17684050441
Epoch Step: 50 / 819 Loss: 18.488557815551758 Tokens per Sec: 14307.6110447479
Epoch Step: 55 / 819 Loss: 17.44939613342285 Tokens per Sec: 13637.65356326697
Epoch Step: 60 / 819 Loss: 17.785354614257812 Tokens per Sec: 15640.650594825222
Epoch Step: 65 / 819 Loss: 14.063824653625488 Tokens per Sec: 14022.607176173911
Epoch Step: 70 / 819 Loss: 11.347251892089844 Tokens per Sec: 13663.653419173797
Epoch Step: 75 / 819 Loss: 243.20840454101562 Tokens per Sec: 14990.726046929414
Epoch Step: 80 / 819 Loss: 12.965923309326172 Tokens per Sec: 13866.573443591125
Epoch Step: 85 / 819 Loss: 21.166202545166016 Tokens per Sec: 15327.653467202283
Epoch Step: 90 / 819 Loss: 12.213648796081543 Tokens per Sec: 12572.248314226921
Epoch Step: 95 / 819 Loss: 202.5631561279297 Tokens per Sec: 17021.50350021403
Epoch Step: 100 / 819 Loss: 152.6478271484375 Tokens per Sec: 13747.091276456596
Epoch Step: 105 / 819 Loss: 19.303865432739258 Tokens per Sec: 12809.031445582943
Epoch Step: 110 / 819 Loss: 17.289697647094727 Tokens per Sec: 14769.71990849618
Epoch Step: 115 / 819 Loss: 20.56546974182129 Tokens per Sec: 15042.47658792598
Epoch Step: 120 / 819 Loss: 13.352813720703125 Tokens per Sec: 13678.16144066766
Epoch Step: 125 / 819 Loss: 14.871513366699219 Tokens per Sec: 14343.107521339296
Epoch Step: 130 / 819 Loss: 15.369020462036133 Tokens per Sec: 12882.03288668905
Epoch Step: 135 / 819 Loss: 14.756030082702637 Tokens per Sec: 16080.834045484899
Epoch Step: 140 / 819 Loss: 16.95668601989746 Tokens per Sec: 12951.141654917263
Epoch Step: 145 / 819 Loss: 15.262310028076172 Tokens per Sec: 14953.320473324426
Epoch Step: 150 / 819 Loss: 17.377971649169922 Tokens per Sec: 14897.184007986596
Epoch Step: 155 / 819 Loss: 156.0559844970703 Tokens per Sec: 13431.9318410265
Epoch Step: 160 / 819 Loss: 18.011688232421875 Tokens per Sec: 14704.487634895993
Epoch Step: 165 / 819 Loss: 11.65236759185791 Tokens per Sec: 15267.022685054919
Epoch Step: 170 / 819 Loss: 12.750990867614746 Tokens per Sec: 14242.80706303576
Epoch Step: 175 / 819 Loss: 17.696767807006836 Tokens per Sec: 13836.633916546285
Epoch Step: 180 / 819 Loss: 14.206198692321777 Tokens per Sec: 14065.661747904069
Epoch Step: 185 / 819 Loss: 15.757508277893066 Tokens per Sec: 14626.272440837292
Epoch Step: 190 / 819 Loss: 139.61312866210938 Tokens per Sec: 14678.760995093791
Epoch Step: 195 / 819 Loss: 11.442915916442871 Tokens per Sec: 12386.498447672227
Epoch Step: 200 / 819 Loss: 16.916990280151367 Tokens per Sec: 13975.896402145028
Epoch Step: 205 / 819 Loss: 15.448652267456055 Tokens per Sec: 14125.369158392625
Epoch Step: 210 / 819 Loss: 186.44009399414062 Tokens per Sec: 14429.493239604582
Epoch Step: 215 / 819 Loss: 16.103496551513672 Tokens per Sec: 13819.046624141003
Epoch Step: 220 / 819 Loss: 19.756671905517578 Tokens per Sec: 14617.01720750375
Epoch Step: 225 / 819 Loss: 16.165205001831055 Tokens per Sec: 14616.011114448436
Epoch Step: 230 / 819 Loss: 21.52370834350586 Tokens per Sec: 13290.504978620453
Epoch Step: 235 / 819 Loss: 14.217262268066406 Tokens per Sec: 14348.877090163583
Epoch Step: 240 / 819 Loss: 21.90131378173828 Tokens per Sec: 13537.66394704172
Epoch Step: 245 / 819 Loss: 19.578798294067383 Tokens per Sec: 12885.689758378192
Epoch Step: 250 / 819 Loss: 22.317285537719727 Tokens per Sec: 13190.058035313577
Epoch Step: 255 / 819 Loss: 15.052836418151855 Tokens per Sec: 12783.169426694001
Epoch Step: 260 / 819 Loss: 16.148820877075195 Tokens per Sec: 13829.05578342134
Epoch Step: 265 / 819 Loss: 19.487443923950195 Tokens per Sec: 14046.13595388571
Epoch Step: 270 / 819 Loss: 11.176753044128418 Tokens per Sec: 13844.39105320304
Epoch Step: 275 / 819 Loss: 18.084611892700195 Tokens per Sec: 13733.573752264383
Epoch Step: 280 / 819 Loss: 13.581483840942383 Tokens per Sec: 14229.66049747891
Epoch Step: 285 / 819 Loss: 13.655712127685547 Tokens per Sec: 14153.460882507696
Epoch Step: 290 / 819 Loss: 15.626834869384766 Tokens per Sec: 14941.812265503579
Epoch Step: 295 / 819 Loss: 15.101897239685059 Tokens per Sec: 13959.522939192964
Epoch Step: 300 / 819 Loss: 151.52491760253906 Tokens per Sec: 13542.492727865329
Epoch Step: 305 / 819 Loss: 16.319429397583008 Tokens per Sec: 12982.999323672138
Epoch Step: 310 / 819 Loss: 18.490140914916992 Tokens per Sec: 14227.074147859257
Epoch Step: 315 / 819 Loss: 15.716165542602539 Tokens per Sec: 15090.550127231741
Epoch Step: 320 / 819 Loss: 19.554777145385742 Tokens per Sec: 12839.931191995765
Epoch Step: 325 / 819 Loss: 13.392230987548828 Tokens per Sec: 14784.236268337589
Epoch Step: 330 / 819 Loss: 167.8511199951172 Tokens per Sec: 13862.945210069809
Epoch Step: 335 / 819 Loss: 17.210981369018555 Tokens per Sec: 13589.890041793396
Epoch Step: 340 / 819 Loss: 13.257226943969727 Tokens per Sec: 14857.39326683456
Epoch Step: 345 / 819 Loss: 14.409262657165527 Tokens per Sec: 13505.23752349574
Epoch Step: 350 / 819 Loss: 16.180177688598633 Tokens per Sec: 13147.286885155607
Epoch Step: 355 / 819 Loss: 162.38931274414062 Tokens per Sec: 13547.919237547636
Epoch Step: 360 / 819 Loss: 16.790019989013672 Tokens per Sec: 13490.368597907122
Epoch Step: 365 / 819 Loss: 13.170626640319824 Tokens per Sec: 13729.400481083008
Epoch Step: 370 / 819 Loss: 19.757761001586914 Tokens per Sec: 13826.77732237124
Epoch Step: 375 / 819 Loss: 18.373653411865234 Tokens per Sec: 14587.906267155808
Epoch Step: 380 / 819 Loss: 12.252266883850098 Tokens per Sec: 15006.615578549618
Epoch Step: 385 / 819 Loss: 13.78465461730957 Tokens per Sec: 13280.642385674346
Epoch Step: 390 / 819 Loss: 20.314979553222656 Tokens per Sec: 15176.010229143696
Epoch Step: 395 / 819 Loss: 19.214872360229492 Tokens per Sec: 13949.480153660043
Epoch Step: 400 / 819 Loss: 12.227985382080078 Tokens per Sec: 15269.186794557403
Epoch Step: 405 / 819 Loss: 14.456109046936035 Tokens per Sec: 14673.57917132451
Epoch Step: 410 / 819 Loss: 14.252599716186523 Tokens per Sec: 14108.550614272983
Epoch Step: 415 / 819 Loss: 16.218669891357422 Tokens per Sec: 13370.549808780615
Epoch Step: 420 / 819 Loss: 15.515172958374023 Tokens per Sec: 14983.092461779846
Epoch Step: 425 / 819 Loss: 182.07559204101562 Tokens per Sec: 14221.351555832618
Epoch Step: 430 / 819 Loss: 12.466293334960938 Tokens per Sec: 13570.789860197181
Epoch Step: 435 / 819 Loss: 16.174924850463867 Tokens per Sec: 13204.789604622365
Epoch Step: 440 / 819 Loss: 18.483543395996094 Tokens per Sec: 13195.597450014611
Epoch Step: 445 / 819 Loss: 11.384454727172852 Tokens per Sec: 15625.812662578492
Epoch Step: 450 / 819 Loss: 17.239734649658203 Tokens per Sec: 11307.26191143825
Epoch Step: 455 / 819 Loss: 14.093633651733398 Tokens per Sec: 15749.055034981293
Epoch Step: 460 / 819 Loss: 12.650594711303711 Tokens per Sec: 14623.951307900557
Epoch Step: 465 / 819 Loss: 17.9731502532959 Tokens per Sec: 12830.418241093279
Epoch Step: 470 / 819 Loss: 13.380840301513672 Tokens per Sec: 13248.121215614261
Epoch Step: 475 / 819 Loss: 16.873271942138672 Tokens per Sec: 14847.991742601404
Epoch Step: 480 / 819 Loss: 15.760766983032227 Tokens per Sec: 14766.753618097671
Epoch Step: 485 / 819 Loss: 16.016653060913086 Tokens per Sec: 13598.94119515573
Epoch Step: 490 / 819 Loss: 13.822100639343262 Tokens per Sec: 14597.416261291079
Epoch Step: 495 / 819 Loss: 18.331850051879883 Tokens per Sec: 16134.853881524981
Epoch Step: 500 / 819 Loss: 11.200821876525879 Tokens per Sec: 15620.598347302686
Epoch Step: 505 / 819 Loss: 17.470195770263672 Tokens per Sec: 12995.37792776161
Epoch Step: 510 / 819 Loss: 14.371763229370117 Tokens per Sec: 13136.18146427621
Epoch Step: 515 / 819 Loss: 13.774528503417969 Tokens per Sec: 14570.919581415963
Epoch Step: 520 / 819 Loss: 11.884316444396973 Tokens per Sec: 13819.635307084234
Epoch Step: 525 / 819 Loss: 16.217771530151367 Tokens per Sec: 14704.607275864717
Epoch Step: 530 / 819 Loss: 13.78905200958252 Tokens per Sec: 14049.76561733617
Epoch Step: 535 / 819 Loss: 11.754556655883789 Tokens per Sec: 13338.899573966626
Epoch Step: 540 / 819 Loss: 16.024972915649414 Tokens per Sec: 14199.488013274384
Epoch Step: 545 / 819 Loss: 16.3226375579834 Tokens per Sec: 14421.999466771747
Epoch Step: 550 / 819 Loss: 20.883129119873047 Tokens per Sec: 13867.286638275717
Epoch Step: 555 / 819 Loss: 243.30775451660156 Tokens per Sec: 15179.178933014919
Epoch Step: 560 / 819 Loss: 17.04898452758789 Tokens per Sec: 14527.309364268129
Epoch Step: 565 / 819 Loss: 20.498857498168945 Tokens per Sec: 13082.553086687536
Epoch Step: 570 / 819 Loss: 13.806572914123535 Tokens per Sec: 14517.023243019028
Epoch Step: 575 / 819 Loss: 16.440593719482422 Tokens per Sec: 13599.832923554262
Epoch Step: 580 / 819 Loss: 15.424763679504395 Tokens per Sec: 12948.898321398132
Epoch Step: 585 / 819 Loss: 18.290624618530273 Tokens per Sec: 14291.250895883097
Epoch Step: 590 / 819 Loss: 17.148067474365234 Tokens per Sec: 13565.652647317658
Epoch Step: 595 / 819 Loss: 13.297515869140625 Tokens per Sec: 12915.967868888432
Epoch Step: 600 / 819 Loss: 16.6368465423584 Tokens per Sec: 14513.075718170026
Epoch Step: 605 / 819 Loss: 149.90673828125 Tokens per Sec: 14139.04646469863
Epoch Step: 610 / 819 Loss: 15.38845443725586 Tokens per Sec: 14173.641401835206
Epoch Step: 615 / 819 Loss: 11.904440879821777 Tokens per Sec: 13833.140537238194
Epoch Step: 620 / 819 Loss: 20.553831100463867 Tokens per Sec: 13482.921050390501
Epoch Step: 625 / 819 Loss: 15.401659965515137 Tokens per Sec: 13813.403358363545
Epoch Step: 630 / 819 Loss: 13.79521369934082 Tokens per Sec: 14284.549114105776
Epoch Step: 635 / 819 Loss: 15.639647483825684 Tokens per Sec: 15788.054889530576
Epoch Step: 640 / 819 Loss: 20.452709197998047 Tokens per Sec: 14439.263065608031
Epoch Step: 645 / 819 Loss: 17.810182571411133 Tokens per Sec: 15268.430761742231
Epoch Step: 650 / 819 Loss: 14.847780227661133 Tokens per Sec: 14313.69244304144
Epoch Step: 655 / 819 Loss: 18.908353805541992 Tokens per Sec: 12561.2032538246
Epoch Step: 660 / 819 Loss: 12.806666374206543 Tokens per Sec: 13793.089140092015
Epoch Step: 665 / 819 Loss: 14.029256820678711 Tokens per Sec: 14654.439016512712
Epoch Step: 670 / 819 Loss: 18.09909439086914 Tokens per Sec: 15038.403352300285
Epoch Step: 675 / 819 Loss: 17.804046630859375 Tokens per Sec: 14992.166379868135
Epoch Step: 680 / 819 Loss: 18.65437126159668 Tokens per Sec: 12415.979524614902
Epoch Step: 685 / 819 Loss: 15.417719841003418 Tokens per Sec: 13830.55720533155
Epoch Step: 690 / 819 Loss: 17.234073638916016 Tokens per Sec: 14144.676346878616
Epoch Step: 695 / 819 Loss: 15.322242736816406 Tokens per Sec: 14828.316642640095
Epoch Step: 700 / 819 Loss: 17.367090225219727 Tokens per Sec: 12306.297043191184
Epoch Step: 705 / 819 Loss: 20.433107376098633 Tokens per Sec: 13773.41421624239
Epoch Step: 710 / 819 Loss: 18.452150344848633 Tokens per Sec: 15884.915222283884
Epoch Step: 715 / 819 Loss: 18.03448486328125 Tokens per Sec: 16168.060850791904
Epoch Step: 720 / 819 Loss: 18.047775268554688 Tokens per Sec: 13130.765348069488
Epoch Step: 725 / 819 Loss: 15.663511276245117 Tokens per Sec: 13024.30093539717
Epoch Step: 730 / 819 Loss: 14.168100357055664 Tokens per Sec: 14273.38731382703
Epoch Step: 735 / 819 Loss: 16.745840072631836 Tokens per Sec: 13452.765368114435
Epoch Step: 740 / 819 Loss: 181.89999389648438 Tokens per Sec: 12306.48587903004
Epoch Step: 745 / 819 Loss: 14.982678413391113 Tokens per Sec: 13225.743849207956
Epoch Step: 750 / 819 Loss: 88.90872192382812 Tokens per Sec: 13593.75881948527
Epoch Step: 755 / 819 Loss: 14.282769203186035 Tokens per Sec: 16399.404610340232
Epoch Step: 760 / 819 Loss: 15.644102096557617 Tokens per Sec: 13238.798393574298
Epoch Step: 765 / 819 Loss: 14.019333839416504 Tokens per Sec: 13271.01709856259
Epoch Step: 770 / 819 Loss: 18.646156311035156 Tokens per Sec: 14175.420332497813
Epoch Step: 775 / 819 Loss: 13.375821113586426 Tokens per Sec: 15673.755973119862
Epoch Step: 780 / 819 Loss: 15.30514907836914 Tokens per Sec: 13162.52345925177
Epoch Step: 785 / 819 Loss: 15.616226196289062 Tokens per Sec: 14764.44575635024
Epoch Step: 790 / 819 Loss: 137.69976806640625 Tokens per Sec: 13763.263832044147
Epoch Step: 795 / 819 Loss: 14.521081924438477 Tokens per Sec: 14815.11646104728
Epoch Step: 800 / 819 Loss: 15.651800155639648 Tokens per Sec: 15049.56495893907
Epoch Step: 805 / 819 Loss: 17.81077766418457 Tokens per Sec: 14089.782378907988
Epoch Step: 810 / 819 Loss: 103.45182037353516 Tokens per Sec: 13896.57519853979
Epoch Step: 815 / 819 Loss: 19.683002471923828 Tokens per Sec: 15408.993138158638
Epoch ended with duration 0:04:36.377559
Train perplexity: 1.530812709587935
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.686932
Validation perplexity: 1.5235809183683964
Epoch 48 / 1000
Epoch Step: 5 / 819 Loss: 16.66010856628418 Tokens per Sec: 13907.34371136736
Epoch Step: 10 / 819 Loss: 15.522026062011719 Tokens per Sec: 13328.089948415496
Epoch Step: 15 / 819 Loss: 17.310829162597656 Tokens per Sec: 14124.852527401845
Epoch Step: 20 / 819 Loss: 17.255319595336914 Tokens per Sec: 13557.259565522727
Epoch Step: 25 / 819 Loss: 15.29064655303955 Tokens per Sec: 12457.047582684563
Epoch Step: 30 / 819 Loss: 17.872365951538086 Tokens per Sec: 15659.951340894375
Epoch Step: 35 / 819 Loss: 17.059877395629883 Tokens per Sec: 11962.4824536529
Epoch Step: 40 / 819 Loss: 11.789790153503418 Tokens per Sec: 14238.524564387162
Epoch Step: 45 / 819 Loss: 14.122350692749023 Tokens per Sec: 14256.409236578655
Epoch Step: 50 / 819 Loss: 13.847893714904785 Tokens per Sec: 15341.069021897594
Epoch Step: 55 / 819 Loss: 12.744483947753906 Tokens per Sec: 14258.110804913316
Epoch Step: 60 / 819 Loss: 14.14017391204834 Tokens per Sec: 14836.978305545506
Epoch Step: 65 / 819 Loss: 16.26990509033203 Tokens per Sec: 13949.721269245878
Epoch Step: 70 / 819 Loss: 12.246387481689453 Tokens per Sec: 12542.526631428429
Epoch Step: 75 / 819 Loss: 9.912532806396484 Tokens per Sec: 13663.673912325634
Epoch Step: 80 / 819 Loss: 124.84111022949219 Tokens per Sec: 14409.088571542483
Epoch Step: 85 / 819 Loss: 17.446229934692383 Tokens per Sec: 13363.131483199582
Epoch Step: 90 / 819 Loss: 17.132749557495117 Tokens per Sec: 15050.365389796843
Epoch Step: 95 / 819 Loss: 19.6606388092041 Tokens per Sec: 13510.844937145692
Epoch Step: 100 / 819 Loss: 19.279541015625 Tokens per Sec: 13214.024654886894
Epoch Step: 105 / 819 Loss: 13.205778121948242 Tokens per Sec: 14360.738870313844
Epoch Step: 110 / 819 Loss: 20.735828399658203 Tokens per Sec: 15875.946104328863
Epoch Step: 115 / 819 Loss: 20.30052947998047 Tokens per Sec: 14768.011094201658
Epoch Step: 120 / 819 Loss: 18.51769256591797 Tokens per Sec: 15244.836823044387
Epoch Step: 125 / 819 Loss: 12.198450088500977 Tokens per Sec: 12346.402094181914
Epoch Step: 130 / 819 Loss: 19.922929763793945 Tokens per Sec: 14368.01156516327
Epoch Step: 135 / 819 Loss: 12.461833953857422 Tokens per Sec: 13246.944261559898
Epoch Step: 140 / 819 Loss: 17.434982299804688 Tokens per Sec: 13335.776756792922
Epoch Step: 145 / 819 Loss: 220.496826171875 Tokens per Sec: 12737.581339033284
Epoch Step: 150 / 819 Loss: 11.421770095825195 Tokens per Sec: 12578.930438815538
Epoch Step: 155 / 819 Loss: 224.5586395263672 Tokens per Sec: 13563.86349908781
Epoch Step: 160 / 819 Loss: 16.02800941467285 Tokens per Sec: 14448.594455750526
Epoch Step: 165 / 819 Loss: 23.354515075683594 Tokens per Sec: 13045.590693452763
Epoch Step: 170 / 819 Loss: 17.128925323486328 Tokens per Sec: 12850.30940938618
Epoch Step: 175 / 819 Loss: 17.228757858276367 Tokens per Sec: 14335.64409549857
Epoch Step: 180 / 819 Loss: 17.773717880249023 Tokens per Sec: 14458.685289461875
Epoch Step: 185 / 819 Loss: 19.148754119873047 Tokens per Sec: 13717.682411383325
Epoch Step: 190 / 819 Loss: 16.53277015686035 Tokens per Sec: 14136.439174782954
Epoch Step: 195 / 819 Loss: 16.922245025634766 Tokens per Sec: 13171.486903942718
Epoch Step: 200 / 819 Loss: 192.3434295654297 Tokens per Sec: 15773.758126912056
Epoch Step: 205 / 819 Loss: 15.463581085205078 Tokens per Sec: 12200.819920255288
Epoch Step: 210 / 819 Loss: 16.392187118530273 Tokens per Sec: 12962.842850199631
Epoch Step: 215 / 819 Loss: 19.679523468017578 Tokens per Sec: 14405.426605884792
Epoch Step: 220 / 819 Loss: 13.907788276672363 Tokens per Sec: 14640.88141920045
Epoch Step: 225 / 819 Loss: 13.586179733276367 Tokens per Sec: 13645.425635961274
Epoch Step: 230 / 819 Loss: 17.29351806640625 Tokens per Sec: 13105.995721525916
Epoch Step: 235 / 819 Loss: 21.321504592895508 Tokens per Sec: 16228.682694814825
Epoch Step: 240 / 819 Loss: 18.946189880371094 Tokens per Sec: 14459.440760778583
Epoch Step: 245 / 819 Loss: 17.880340576171875 Tokens per Sec: 13230.219218380664
Epoch Step: 250 / 819 Loss: 14.972952842712402 Tokens per Sec: 13845.40268937097
Epoch Step: 255 / 819 Loss: 12.906810760498047 Tokens per Sec: 14637.280520580869
Epoch Step: 260 / 819 Loss: 13.219658851623535 Tokens per Sec: 14464.36839524773
Epoch Step: 265 / 819 Loss: 12.113194465637207 Tokens per Sec: 15018.081755916965
Epoch Step: 270 / 819 Loss: 12.085702896118164 Tokens per Sec: 14424.398666824765
Epoch Step: 275 / 819 Loss: 16.296161651611328 Tokens per Sec: 15200.483280051632
Epoch Step: 280 / 819 Loss: 19.842853546142578 Tokens per Sec: 15032.763138135218
Epoch Step: 285 / 819 Loss: 18.29034423828125 Tokens per Sec: 13970.460999949551
Epoch Step: 290 / 819 Loss: 14.281880378723145 Tokens per Sec: 13706.006329147853
Epoch Step: 295 / 819 Loss: 19.899309158325195 Tokens per Sec: 14861.670441643375
Epoch Step: 300 / 819 Loss: 14.436615943908691 Tokens per Sec: 14279.87624900642
Epoch Step: 305 / 819 Loss: 18.361602783203125 Tokens per Sec: 12711.369849031511
Epoch Step: 310 / 819 Loss: 16.396940231323242 Tokens per Sec: 14110.602083739543
Epoch Step: 315 / 819 Loss: 174.88937377929688 Tokens per Sec: 13530.386125766396
Epoch Step: 320 / 819 Loss: 20.280872344970703 Tokens per Sec: 14712.755498136803
Epoch Step: 325 / 819 Loss: 20.02613067626953 Tokens per Sec: 13795.759248749353
Epoch Step: 330 / 819 Loss: 160.60629272460938 Tokens per Sec: 15267.920218040783
Epoch Step: 335 / 819 Loss: 15.5186767578125 Tokens per Sec: 14194.851754466394
Epoch Step: 340 / 819 Loss: 16.770421981811523 Tokens per Sec: 14184.835302393143
Epoch Step: 345 / 819 Loss: 16.984914779663086 Tokens per Sec: 12999.309148347964
Epoch Step: 350 / 819 Loss: 15.226907730102539 Tokens per Sec: 14317.609211274768
Epoch Step: 355 / 819 Loss: 14.480131149291992 Tokens per Sec: 14312.137053096762
Epoch Step: 360 / 819 Loss: 17.058406829833984 Tokens per Sec: 14708.168347545634
Epoch Step: 365 / 819 Loss: 17.732799530029297 Tokens per Sec: 14490.245358379343
Epoch Step: 370 / 819 Loss: 16.794668197631836 Tokens per Sec: 14354.903323499457
Epoch Step: 375 / 819 Loss: 12.064740180969238 Tokens per Sec: 13341.029736786306
Epoch Step: 380 / 819 Loss: 19.138734817504883 Tokens per Sec: 13277.40078181364
Epoch Step: 385 / 819 Loss: 14.997254371643066 Tokens per Sec: 13180.252973123415
Epoch Step: 390 / 819 Loss: 13.19326114654541 Tokens per Sec: 14717.847193216832
Epoch Step: 395 / 819 Loss: 15.480681419372559 Tokens per Sec: 15739.911740778703
Epoch Step: 400 / 819 Loss: 9.287016868591309 Tokens per Sec: 14105.461961355371
Epoch Step: 405 / 819 Loss: 11.927578926086426 Tokens per Sec: 16233.158059301057
Epoch Step: 410 / 819 Loss: 19.666160583496094 Tokens per Sec: 14517.498779560547
Epoch Step: 415 / 819 Loss: 12.30344009399414 Tokens per Sec: 15088.566546718117
Epoch Step: 420 / 819 Loss: 18.594106674194336 Tokens per Sec: 13397.963655361724
Epoch Step: 425 / 819 Loss: 11.86103630065918 Tokens per Sec: 13686.101695503332
Epoch Step: 430 / 819 Loss: 17.814130783081055 Tokens per Sec: 14585.350354642695
Epoch Step: 435 / 819 Loss: 17.47243309020996 Tokens per Sec: 15978.592925947363
Epoch Step: 440 / 819 Loss: 18.3314151763916 Tokens per Sec: 14288.305378656529
Epoch Step: 445 / 819 Loss: 16.2377872467041 Tokens per Sec: 15810.424772067476
Epoch Step: 450 / 819 Loss: 18.918994903564453 Tokens per Sec: 14359.61661697717
Epoch Step: 455 / 819 Loss: 13.977213859558105 Tokens per Sec: 13088.137731392255
Epoch Step: 460 / 819 Loss: 16.67551612854004 Tokens per Sec: 15514.754125431053
Epoch Step: 465 / 819 Loss: 13.391773223876953 Tokens per Sec: 14385.812117189053
Epoch Step: 470 / 819 Loss: 13.281087875366211 Tokens per Sec: 12628.733365206715
Epoch Step: 475 / 819 Loss: 18.030048370361328 Tokens per Sec: 14272.359508965385
Epoch Step: 480 / 819 Loss: 241.01531982421875 Tokens per Sec: 14606.114813813325
Epoch Step: 485 / 819 Loss: 17.343063354492188 Tokens per Sec: 13963.548013590722
Epoch Step: 490 / 819 Loss: 17.900672912597656 Tokens per Sec: 13370.526012480212
Epoch Step: 495 / 819 Loss: 198.18177795410156 Tokens per Sec: 13628.053348037722
Epoch Step: 500 / 819 Loss: 162.54893493652344 Tokens per Sec: 15415.1662804533
Epoch Step: 505 / 819 Loss: 14.925760269165039 Tokens per Sec: 13835.017479969232
Epoch Step: 510 / 819 Loss: 19.663619995117188 Tokens per Sec: 13373.8119638239
Epoch Step: 515 / 819 Loss: 113.52531433105469 Tokens per Sec: 12984.826525666698
Epoch Step: 520 / 819 Loss: 21.29228973388672 Tokens per Sec: 15464.78726021876
Epoch Step: 525 / 819 Loss: 18.20870018005371 Tokens per Sec: 12199.869489876522
Epoch Step: 530 / 819 Loss: 16.204225540161133 Tokens per Sec: 14769.039440814173
Epoch Step: 535 / 819 Loss: 16.163848876953125 Tokens per Sec: 14219.954811952139
Epoch Step: 540 / 819 Loss: 17.17521858215332 Tokens per Sec: 13499.567753914303
Epoch Step: 545 / 819 Loss: 15.423337936401367 Tokens per Sec: 13943.542427727616
Epoch Step: 550 / 819 Loss: 19.889301300048828 Tokens per Sec: 13482.508639707796
Epoch Step: 555 / 819 Loss: 17.146827697753906 Tokens per Sec: 14025.568515878962
Epoch Step: 560 / 819 Loss: 197.94639587402344 Tokens per Sec: 13502.078720568841
Epoch Step: 565 / 819 Loss: 14.642173767089844 Tokens per Sec: 15322.935955067089
Epoch Step: 570 / 819 Loss: 23.709693908691406 Tokens per Sec: 14190.035050067532
Epoch Step: 575 / 819 Loss: 18.554468154907227 Tokens per Sec: 14215.713605692103
Epoch Step: 580 / 819 Loss: 17.919845581054688 Tokens per Sec: 14838.331471700601
Epoch Step: 585 / 819 Loss: 86.15931701660156 Tokens per Sec: 11989.1140613362
Epoch Step: 590 / 819 Loss: 14.947035789489746 Tokens per Sec: 14348.486729404605
Epoch Step: 595 / 819 Loss: 17.764495849609375 Tokens per Sec: 14341.092536370474
Epoch Step: 600 / 819 Loss: 15.676322937011719 Tokens per Sec: 13851.118676551745
Epoch Step: 605 / 819 Loss: 19.00974464416504 Tokens per Sec: 13094.399394477781
Epoch Step: 610 / 819 Loss: 13.964658737182617 Tokens per Sec: 12781.204261579542
Epoch Step: 615 / 819 Loss: 15.587373733520508 Tokens per Sec: 13440.41457671601
Epoch Step: 620 / 819 Loss: 15.564098358154297 Tokens per Sec: 13842.500857921952
Epoch Step: 625 / 819 Loss: 139.47450256347656 Tokens per Sec: 13268.77444447965
Epoch Step: 630 / 819 Loss: 13.526735305786133 Tokens per Sec: 14893.618974445153
Epoch Step: 635 / 819 Loss: 20.05655288696289 Tokens per Sec: 13623.318798217679
Epoch Step: 640 / 819 Loss: 16.908716201782227 Tokens per Sec: 15671.92111493389
Epoch Step: 645 / 819 Loss: 14.388663291931152 Tokens per Sec: 13379.006058647798
Epoch Step: 650 / 819 Loss: 15.821661949157715 Tokens per Sec: 12051.925985104961
Epoch Step: 655 / 819 Loss: 14.557206153869629 Tokens per Sec: 14601.499823575954
Epoch Step: 660 / 819 Loss: 18.237539291381836 Tokens per Sec: 14106.547196978223
Epoch Step: 665 / 819 Loss: 20.812044143676758 Tokens per Sec: 14156.105931600872
Epoch Step: 670 / 819 Loss: 14.903290748596191 Tokens per Sec: 12654.366482213863
Epoch Step: 675 / 819 Loss: 14.35250186920166 Tokens per Sec: 14383.357969033077
Epoch Step: 680 / 819 Loss: 18.85079002380371 Tokens per Sec: 14397.65421609957
Epoch Step: 685 / 819 Loss: 13.90298843383789 Tokens per Sec: 14936.711768159994
Epoch Step: 690 / 819 Loss: 16.825429916381836 Tokens per Sec: 14200.994013158186
Epoch Step: 695 / 819 Loss: 15.723650932312012 Tokens per Sec: 13854.049323955605
Epoch Step: 700 / 819 Loss: 11.326701164245605 Tokens per Sec: 12941.906366315076
Epoch Step: 705 / 819 Loss: 14.86223030090332 Tokens per Sec: 12282.452726868682
Epoch Step: 710 / 819 Loss: 13.04155158996582 Tokens per Sec: 13839.233093961582
Epoch Step: 715 / 819 Loss: 19.969934463500977 Tokens per Sec: 13130.175851516098
Epoch Step: 720 / 819 Loss: 19.348711013793945 Tokens per Sec: 14076.446871444823
Epoch Step: 725 / 819 Loss: 17.314104080200195 Tokens per Sec: 16193.702926285967
Epoch Step: 730 / 819 Loss: 15.36418342590332 Tokens per Sec: 13635.653644798447
Epoch Step: 735 / 819 Loss: 19.085641860961914 Tokens per Sec: 15040.485357862177
Epoch Step: 740 / 819 Loss: 18.788921356201172 Tokens per Sec: 14671.336321636998
Epoch Step: 745 / 819 Loss: 204.4099578857422 Tokens per Sec: 13747.676773817866
Epoch Step: 750 / 819 Loss: 17.856670379638672 Tokens per Sec: 14208.986767081138
Epoch Step: 755 / 819 Loss: 22.94024085998535 Tokens per Sec: 13925.111941239957
Epoch Step: 760 / 819 Loss: 14.899861335754395 Tokens per Sec: 13957.425888096279
Epoch Step: 765 / 819 Loss: 18.318931579589844 Tokens per Sec: 14054.57025361972
Epoch Step: 770 / 819 Loss: 21.012081146240234 Tokens per Sec: 14013.65313726311
Epoch Step: 775 / 819 Loss: 16.51902961730957 Tokens per Sec: 12327.814749396748
Epoch Step: 780 / 819 Loss: 16.397069931030273 Tokens per Sec: 13554.226862642885
Epoch Step: 785 / 819 Loss: 17.977415084838867 Tokens per Sec: 13763.811730416277
Epoch Step: 790 / 819 Loss: 13.919161796569824 Tokens per Sec: 12157.045120634964
Epoch Step: 795 / 819 Loss: 19.323530197143555 Tokens per Sec: 15248.914667651696
Epoch Step: 800 / 819 Loss: 12.267461776733398 Tokens per Sec: 13567.333405115432
Epoch Step: 805 / 819 Loss: 15.945510864257812 Tokens per Sec: 14734.179172161636
Epoch Step: 810 / 819 Loss: 15.537184715270996 Tokens per Sec: 12981.034896882062
Epoch Step: 815 / 819 Loss: 17.472238540649414 Tokens per Sec: 12205.779779293769
Epoch ended with duration 0:04:37.852887
Train perplexity: 1.5584655385722426
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.429358
Validation perplexity: 1.6289620661161481
Epoch 49 / 1000
Epoch Step: 5 / 819 Loss: 19.13184928894043 Tokens per Sec: 13782.851043316465
Epoch Step: 10 / 819 Loss: 19.268878936767578 Tokens per Sec: 13458.032151942316
Epoch Step: 15 / 819 Loss: 20.122669219970703 Tokens per Sec: 12863.272266149843
Epoch Step: 20 / 819 Loss: 13.552165985107422 Tokens per Sec: 14205.576939519073
Epoch Step: 25 / 819 Loss: 17.832414627075195 Tokens per Sec: 15371.282078058948
Epoch Step: 30 / 819 Loss: 13.62324333190918 Tokens per Sec: 13126.301691114073
Epoch Step: 35 / 819 Loss: 15.616859436035156 Tokens per Sec: 13355.265647658482
Epoch Step: 40 / 819 Loss: 13.424654006958008 Tokens per Sec: 14617.812855104656
Epoch Step: 45 / 819 Loss: 196.37144470214844 Tokens per Sec: 13758.134547812106
Epoch Step: 50 / 819 Loss: 18.759828567504883 Tokens per Sec: 14662.290530295395
Epoch Step: 55 / 819 Loss: 13.635459899902344 Tokens per Sec: 15701.49320959597
Epoch Step: 60 / 819 Loss: 18.746366500854492 Tokens per Sec: 15294.305485082088
Epoch Step: 65 / 819 Loss: 16.427488327026367 Tokens per Sec: 12550.670920497612
Epoch Step: 70 / 819 Loss: 16.752471923828125 Tokens per Sec: 13343.96444292263
Epoch Step: 75 / 819 Loss: 16.657663345336914 Tokens per Sec: 15749.300551432663
Epoch Step: 80 / 819 Loss: 12.622757911682129 Tokens per Sec: 14571.025859532081
Epoch Step: 85 / 819 Loss: 14.039876937866211 Tokens per Sec: 14714.434154476263
Epoch Step: 90 / 819 Loss: 18.714702606201172 Tokens per Sec: 14385.849778747022
Epoch Step: 95 / 819 Loss: 16.838863372802734 Tokens per Sec: 15758.564431253366
Epoch Step: 100 / 819 Loss: 14.47100830078125 Tokens per Sec: 14503.6354634845
Epoch Step: 105 / 819 Loss: 13.76587200164795 Tokens per Sec: 13665.687950527965
Epoch Step: 110 / 819 Loss: 14.493075370788574 Tokens per Sec: 11885.827484346953
Epoch Step: 115 / 819 Loss: 17.128318786621094 Tokens per Sec: 14117.881848244815
Epoch Step: 120 / 819 Loss: 14.112972259521484 Tokens per Sec: 13858.425673332815
Epoch Step: 125 / 819 Loss: 249.0637969970703 Tokens per Sec: 14501.284247146801
Epoch Step: 130 / 819 Loss: 22.662118911743164 Tokens per Sec: 13716.843398769597
Epoch Step: 135 / 819 Loss: 24.9166202545166 Tokens per Sec: 14440.100065443152
Epoch Step: 140 / 819 Loss: 20.677505493164062 Tokens per Sec: 14072.564373756293
Epoch Step: 145 / 819 Loss: 19.843856811523438 Tokens per Sec: 14261.946829361439
Epoch Step: 150 / 819 Loss: 15.626612663269043 Tokens per Sec: 13934.402309792971
Epoch Step: 155 / 819 Loss: 19.967557907104492 Tokens per Sec: 13325.660563273032
Epoch Step: 160 / 819 Loss: 18.589496612548828 Tokens per Sec: 14916.709109680249
Epoch Step: 165 / 819 Loss: 13.75777816772461 Tokens per Sec: 14392.304320955056
Epoch Step: 170 / 819 Loss: 14.954041481018066 Tokens per Sec: 15408.903294227148
Epoch Step: 175 / 819 Loss: 13.559813499450684 Tokens per Sec: 14570.712474118936
Epoch Step: 180 / 819 Loss: 17.863353729248047 Tokens per Sec: 13259.863662450003
Epoch Step: 185 / 819 Loss: 15.265763282775879 Tokens per Sec: 14989.323526148788
Epoch Step: 190 / 819 Loss: 12.441184997558594 Tokens per Sec: 15010.048479313138
Epoch Step: 195 / 819 Loss: 12.701629638671875 Tokens per Sec: 13036.915118665993
Epoch Step: 200 / 819 Loss: 14.88926887512207 Tokens per Sec: 12744.325295093473
Epoch Step: 205 / 819 Loss: 15.518064498901367 Tokens per Sec: 13925.818830489447
Epoch Step: 210 / 819 Loss: 16.854957580566406 Tokens per Sec: 13853.442196504104
Epoch Step: 215 / 819 Loss: 19.12361717224121 Tokens per Sec: 13150.76755162234
Epoch Step: 220 / 819 Loss: 14.683364868164062 Tokens per Sec: 13418.90615690694
Epoch Step: 225 / 819 Loss: 13.20579719543457 Tokens per Sec: 14244.831342444695
Epoch Step: 230 / 819 Loss: 16.912765502929688 Tokens per Sec: 14217.373606781595
Epoch Step: 235 / 819 Loss: 17.554784774780273 Tokens per Sec: 16997.137108228548
Epoch Step: 240 / 819 Loss: 21.92410659790039 Tokens per Sec: 15385.685706927634
Epoch Step: 245 / 819 Loss: 14.942588806152344 Tokens per Sec: 14144.125136880484
Epoch Step: 250 / 819 Loss: 15.308947563171387 Tokens per Sec: 14230.20918398891
Epoch Step: 255 / 819 Loss: 21.281740188598633 Tokens per Sec: 13888.797401130281
Epoch Step: 260 / 819 Loss: 16.926456451416016 Tokens per Sec: 13164.39399013146
Epoch Step: 265 / 819 Loss: 20.646413803100586 Tokens per Sec: 13116.733570680337
Epoch Step: 270 / 819 Loss: 19.484336853027344 Tokens per Sec: 13277.65744784879
Epoch Step: 275 / 819 Loss: 20.087371826171875 Tokens per Sec: 14543.106312408934
Epoch Step: 280 / 819 Loss: 14.292523384094238 Tokens per Sec: 13274.784595666382
Epoch Step: 285 / 819 Loss: 16.163673400878906 Tokens per Sec: 13151.716163572171
Epoch Step: 290 / 819 Loss: 18.593910217285156 Tokens per Sec: 13888.50529486053
Epoch Step: 295 / 819 Loss: 17.222782135009766 Tokens per Sec: 13480.6084742935
Epoch Step: 300 / 819 Loss: 15.809074401855469 Tokens per Sec: 14300.916025195706
Epoch Step: 305 / 819 Loss: 15.631150245666504 Tokens per Sec: 13605.41981410794
Epoch Step: 310 / 819 Loss: 19.745786666870117 Tokens per Sec: 13924.419139544285
Epoch Step: 315 / 819 Loss: 15.057820320129395 Tokens per Sec: 13815.76141112921
Epoch Step: 320 / 819 Loss: 20.336515426635742 Tokens per Sec: 13752.464452889824
Epoch Step: 325 / 819 Loss: 15.604583740234375 Tokens per Sec: 13661.645466570279
Epoch Step: 330 / 819 Loss: 11.61421012878418 Tokens per Sec: 15620.755674263317
Epoch Step: 335 / 819 Loss: 19.267650604248047 Tokens per Sec: 14227.744494043101
Epoch Step: 340 / 819 Loss: 18.170576095581055 Tokens per Sec: 13883.800786927086
Epoch Step: 345 / 819 Loss: 13.553943634033203 Tokens per Sec: 13328.918843733125
Epoch Step: 350 / 819 Loss: 13.408208847045898 Tokens per Sec: 15149.652128878932
Epoch Step: 355 / 819 Loss: 17.212745666503906 Tokens per Sec: 14955.183538248994
Epoch Step: 360 / 819 Loss: 18.1197509765625 Tokens per Sec: 13383.01663471767
Epoch Step: 365 / 819 Loss: 17.29551887512207 Tokens per Sec: 13743.33701293141
Epoch Step: 370 / 819 Loss: 13.954573631286621 Tokens per Sec: 14778.476214831504
Epoch Step: 375 / 819 Loss: 15.574697494506836 Tokens per Sec: 13210.180684628836
Epoch Step: 380 / 819 Loss: 15.833559036254883 Tokens per Sec: 14546.455177662625
Epoch Step: 385 / 819 Loss: 265.21136474609375 Tokens per Sec: 14519.309127521243
Epoch Step: 390 / 819 Loss: 11.882650375366211 Tokens per Sec: 14631.400464556376
Epoch Step: 395 / 819 Loss: 15.785740852355957 Tokens per Sec: 13230.319254706797
Epoch Step: 400 / 819 Loss: 12.128602981567383 Tokens per Sec: 13818.235756878608
Epoch Step: 405 / 819 Loss: 17.10113525390625 Tokens per Sec: 13079.181435529012
Epoch Step: 410 / 819 Loss: 16.71296501159668 Tokens per Sec: 13420.746780161762
Epoch Step: 415 / 819 Loss: 18.3416748046875 Tokens per Sec: 14388.620517481471
Epoch Step: 420 / 819 Loss: 20.187047958374023 Tokens per Sec: 14245.860232179743
Epoch Step: 425 / 819 Loss: 20.983993530273438 Tokens per Sec: 15136.989177233696
Epoch Step: 430 / 819 Loss: 16.949512481689453 Tokens per Sec: 14367.159864275527
Epoch Step: 435 / 819 Loss: 18.504261016845703 Tokens per Sec: 14475.133674035113
Epoch Step: 440 / 819 Loss: 16.2490177154541 Tokens per Sec: 15376.37495621147
Epoch Step: 445 / 819 Loss: 9.370409965515137 Tokens per Sec: 13405.583557399656
Epoch Step: 450 / 819 Loss: 15.693099975585938 Tokens per Sec: 13690.048625108595
Epoch Step: 455 / 819 Loss: 14.561379432678223 Tokens per Sec: 13100.222691910347
Epoch Step: 460 / 819 Loss: 160.78817749023438 Tokens per Sec: 14639.888355842118
Epoch Step: 465 / 819 Loss: 14.818097114562988 Tokens per Sec: 13638.98589421743
Epoch Step: 470 / 819 Loss: 107.07650756835938 Tokens per Sec: 14179.242000501969
Epoch Step: 475 / 819 Loss: 19.444353103637695 Tokens per Sec: 13277.72582985374
Epoch Step: 480 / 819 Loss: 17.033737182617188 Tokens per Sec: 11955.751624176386
Epoch Step: 485 / 819 Loss: 18.801372528076172 Tokens per Sec: 14196.807148079099
Epoch Step: 490 / 819 Loss: 16.316083908081055 Tokens per Sec: 16531.737861247555
Epoch Step: 495 / 819 Loss: 19.642261505126953 Tokens per Sec: 15016.54168510702
Epoch Step: 500 / 819 Loss: 23.31458854675293 Tokens per Sec: 13509.003500112041
Epoch Step: 505 / 819 Loss: 12.418816566467285 Tokens per Sec: 12755.597430406851
Epoch Step: 510 / 819 Loss: 17.154905319213867 Tokens per Sec: 14107.858778095975
Epoch Step: 515 / 819 Loss: 17.674076080322266 Tokens per Sec: 15057.600989920313
Epoch Step: 520 / 819 Loss: 19.287729263305664 Tokens per Sec: 13595.20305744516
Epoch Step: 525 / 819 Loss: 14.205612182617188 Tokens per Sec: 14854.91304828485
Epoch Step: 530 / 819 Loss: 13.922188758850098 Tokens per Sec: 15667.814322840188
Epoch Step: 535 / 819 Loss: 15.829702377319336 Tokens per Sec: 13737.874312602109
Epoch Step: 540 / 819 Loss: 15.898360252380371 Tokens per Sec: 13888.98704146716
Epoch Step: 545 / 819 Loss: 16.15767478942871 Tokens per Sec: 13991.688906835449
Epoch Step: 550 / 819 Loss: 15.979954719543457 Tokens per Sec: 13931.579543208863
Epoch Step: 555 / 819 Loss: 14.305381774902344 Tokens per Sec: 14036.864970573584
Epoch Step: 560 / 819 Loss: 17.395282745361328 Tokens per Sec: 14074.748594470924
Epoch Step: 565 / 819 Loss: 14.614253997802734 Tokens per Sec: 13481.35979284524
Epoch Step: 570 / 819 Loss: 16.19171714782715 Tokens per Sec: 14859.657646360823
Epoch Step: 575 / 819 Loss: 17.7656307220459 Tokens per Sec: 16406.130065953123
Epoch Step: 580 / 819 Loss: 12.875457763671875 Tokens per Sec: 12361.211401303217
Epoch Step: 585 / 819 Loss: 15.755655288696289 Tokens per Sec: 14250.469294535244
Epoch Step: 590 / 819 Loss: 11.800943374633789 Tokens per Sec: 12482.507546685616
Epoch Step: 595 / 819 Loss: 14.767247200012207 Tokens per Sec: 14042.3071923326
Epoch Step: 600 / 819 Loss: 17.082477569580078 Tokens per Sec: 13840.42175852844
Epoch Step: 605 / 819 Loss: 11.606171607971191 Tokens per Sec: 13138.362375395845
Epoch Step: 610 / 819 Loss: 12.883788108825684 Tokens per Sec: 13045.177813224924
Epoch Step: 615 / 819 Loss: 17.294265747070312 Tokens per Sec: 13357.8984502595
Epoch Step: 620 / 819 Loss: 19.028974533081055 Tokens per Sec: 12519.213891054455
Epoch Step: 625 / 819 Loss: 14.059324264526367 Tokens per Sec: 13765.157895291142
Epoch Step: 630 / 819 Loss: 12.486919403076172 Tokens per Sec: 14203.880022166079
Epoch Step: 635 / 819 Loss: 17.32871437072754 Tokens per Sec: 16073.655899086476
Epoch Step: 640 / 819 Loss: 111.27266693115234 Tokens per Sec: 16109.310406320394
Epoch Step: 645 / 819 Loss: 18.759868621826172 Tokens per Sec: 15286.067257827845
Epoch Step: 650 / 819 Loss: 17.628381729125977 Tokens per Sec: 13150.106695728864
Epoch Step: 655 / 819 Loss: 16.42377281188965 Tokens per Sec: 12829.512074536706
Epoch Step: 660 / 819 Loss: 16.734935760498047 Tokens per Sec: 13125.70551400526
Epoch Step: 665 / 819 Loss: 11.03341007232666 Tokens per Sec: 16002.941056586293
Epoch Step: 670 / 819 Loss: 17.683509826660156 Tokens per Sec: 16200.54133697651
Epoch Step: 675 / 819 Loss: 17.914709091186523 Tokens per Sec: 12764.011933670841
Epoch Step: 680 / 819 Loss: 15.86697006225586 Tokens per Sec: 13099.962451684152
Epoch Step: 685 / 819 Loss: 138.9329376220703 Tokens per Sec: 14935.68976695368
Epoch Step: 690 / 819 Loss: 19.454023361206055 Tokens per Sec: 14330.065088744179
Epoch Step: 695 / 819 Loss: 200.8538055419922 Tokens per Sec: 12223.794258929034
Epoch Step: 700 / 819 Loss: 24.474681854248047 Tokens per Sec: 15034.262639681805
Epoch Step: 705 / 819 Loss: 25.304603576660156 Tokens per Sec: 14672.128657284966
Epoch Step: 710 / 819 Loss: 20.60310173034668 Tokens per Sec: 11820.924567264145
Epoch Step: 715 / 819 Loss: 184.0587158203125 Tokens per Sec: 14436.158079759316
Epoch Step: 720 / 819 Loss: 18.606143951416016 Tokens per Sec: 15804.682582480069
Epoch Step: 725 / 819 Loss: 16.036680221557617 Tokens per Sec: 13365.358438035759
Epoch Step: 730 / 819 Loss: 14.484102249145508 Tokens per Sec: 13606.475064057893
Epoch Step: 735 / 819 Loss: 125.9798583984375 Tokens per Sec: 14123.646549239522
Epoch Step: 740 / 819 Loss: 13.952882766723633 Tokens per Sec: 15095.112850037141
Epoch Step: 745 / 819 Loss: 12.362330436706543 Tokens per Sec: 13500.40532986589
Epoch Step: 750 / 819 Loss: 19.213315963745117 Tokens per Sec: 14437.887191069036
Epoch Step: 755 / 819 Loss: 20.12374496459961 Tokens per Sec: 14253.029384596453
Epoch Step: 760 / 819 Loss: 17.730680465698242 Tokens per Sec: 13034.483398208778
Epoch Step: 765 / 819 Loss: 16.119653701782227 Tokens per Sec: 14127.501023990033
Epoch Step: 770 / 819 Loss: 18.261240005493164 Tokens per Sec: 12851.077374698085
Epoch Step: 775 / 819 Loss: 17.631065368652344 Tokens per Sec: 14817.092179845717
Epoch Step: 780 / 819 Loss: 17.806949615478516 Tokens per Sec: 16217.405944791231
Epoch Step: 785 / 819 Loss: 15.430413246154785 Tokens per Sec: 12588.004856926847
Epoch Step: 790 / 819 Loss: 13.266263008117676 Tokens per Sec: 13238.037012877838
Epoch Step: 795 / 819 Loss: 14.058570861816406 Tokens per Sec: 12843.852252567507
Epoch Step: 800 / 819 Loss: 18.846715927124023 Tokens per Sec: 14187.99218214695
Epoch Step: 805 / 819 Loss: 18.604433059692383 Tokens per Sec: 13498.126567273686
Epoch Step: 810 / 819 Loss: 15.923970222473145 Tokens per Sec: 11817.71935396967
Epoch Step: 815 / 819 Loss: 14.160102844238281 Tokens per Sec: 14938.300067316903
Epoch ended with duration 0:04:36.860609
Train perplexity: 1.5257760911196514
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.194939
Validation perplexity: 1.538661760228925
Epoch 50 / 1000
Epoch Step: 5 / 819 Loss: 15.43371868133545 Tokens per Sec: 14224.76986618832
Epoch Step: 10 / 819 Loss: 13.1149320602417 Tokens per Sec: 15232.651550332004
Epoch Step: 15 / 819 Loss: 15.894598007202148 Tokens per Sec: 12997.95372092294
Epoch Step: 20 / 819 Loss: 147.27720642089844 Tokens per Sec: 14758.615479899872
Epoch Step: 25 / 819 Loss: 12.96038818359375 Tokens per Sec: 16359.922231841085
Epoch Step: 30 / 819 Loss: 10.954170227050781 Tokens per Sec: 13275.426551043322
Epoch Step: 35 / 819 Loss: 9.881118774414062 Tokens per Sec: 14439.246975673213
Epoch Step: 40 / 819 Loss: 20.489625930786133 Tokens per Sec: 15341.22474877788
Epoch Step: 45 / 819 Loss: 10.920350074768066 Tokens per Sec: 14481.242994336379
Epoch Step: 50 / 819 Loss: 189.7178955078125 Tokens per Sec: 14569.664631758229
Epoch Step: 55 / 819 Loss: 20.59066390991211 Tokens per Sec: 14803.757117768053
Epoch Step: 60 / 819 Loss: 15.418150901794434 Tokens per Sec: 13749.555383796745
Epoch Step: 65 / 819 Loss: 13.448326110839844 Tokens per Sec: 13810.36143281213
Epoch Step: 70 / 819 Loss: 20.228593826293945 Tokens per Sec: 13172.059963268832
Epoch Step: 75 / 819 Loss: 12.095837593078613 Tokens per Sec: 13927.260567359735
Epoch Step: 80 / 819 Loss: 15.686381340026855 Tokens per Sec: 15445.470306520912
Epoch Step: 85 / 819 Loss: 16.92424964904785 Tokens per Sec: 14644.695065322156
Epoch Step: 90 / 819 Loss: 15.530959129333496 Tokens per Sec: 12947.930438542238
Epoch Step: 95 / 819 Loss: 18.60157012939453 Tokens per Sec: 13124.064934388713
Epoch Step: 100 / 819 Loss: 14.943001747131348 Tokens per Sec: 13372.515232251086
Epoch Step: 105 / 819 Loss: 189.59170532226562 Tokens per Sec: 14166.83629316258
Epoch Step: 110 / 819 Loss: 13.55004596710205 Tokens per Sec: 14538.608984840539
Epoch Step: 115 / 819 Loss: 16.352256774902344 Tokens per Sec: 14521.239071898084
Epoch Step: 120 / 819 Loss: 17.425209045410156 Tokens per Sec: 15444.931875609862
Epoch Step: 125 / 819 Loss: 16.3211727142334 Tokens per Sec: 14827.569060829646
Epoch Step: 130 / 819 Loss: 17.714263916015625 Tokens per Sec: 13375.501397148673
Epoch Step: 135 / 819 Loss: 12.588214874267578 Tokens per Sec: 13270.994538897086
Epoch Step: 140 / 819 Loss: 16.448415756225586 Tokens per Sec: 12957.880891514766
Epoch Step: 145 / 819 Loss: 14.06739616394043 Tokens per Sec: 13214.584083014168
Epoch Step: 150 / 819 Loss: 13.272102355957031 Tokens per Sec: 13726.34393863041
Epoch Step: 155 / 819 Loss: 14.9183931350708 Tokens per Sec: 15620.849839493518
Epoch Step: 160 / 819 Loss: 226.93106079101562 Tokens per Sec: 14179.40110275753
Epoch Step: 165 / 819 Loss: 16.73023796081543 Tokens per Sec: 13628.914960345928
Epoch Step: 170 / 819 Loss: 16.806732177734375 Tokens per Sec: 14489.1612170249
Epoch Step: 175 / 819 Loss: 17.629398345947266 Tokens per Sec: 14957.227101827164
Epoch Step: 180 / 819 Loss: 18.609426498413086 Tokens per Sec: 12536.276244694323
Epoch Step: 185 / 819 Loss: 12.8470458984375 Tokens per Sec: 13606.751412108746
Epoch Step: 190 / 819 Loss: 16.388444900512695 Tokens per Sec: 13687.503794809933
Epoch Step: 195 / 819 Loss: 139.34628295898438 Tokens per Sec: 13992.28776541407
Epoch Step: 200 / 819 Loss: 16.36270523071289 Tokens per Sec: 14491.593123139359
Epoch Step: 205 / 819 Loss: 182.3411102294922 Tokens per Sec: 14860.807976409746
Epoch Step: 210 / 819 Loss: 13.770684242248535 Tokens per Sec: 15354.57517274629
Epoch Step: 215 / 819 Loss: 16.86788558959961 Tokens per Sec: 14553.30741066287
Epoch Step: 220 / 819 Loss: 17.307296752929688 Tokens per Sec: 13451.30502009677
Epoch Step: 225 / 819 Loss: 16.453088760375977 Tokens per Sec: 13301.12936426564
Epoch Step: 230 / 819 Loss: 17.317655563354492 Tokens per Sec: 14711.078203446608
Epoch Step: 235 / 819 Loss: 14.980341911315918 Tokens per Sec: 13923.065168860383
Epoch Step: 240 / 819 Loss: 20.554950714111328 Tokens per Sec: 14156.405845278447
Epoch Step: 245 / 819 Loss: 17.637741088867188 Tokens per Sec: 12925.35823233001
Epoch Step: 250 / 819 Loss: 13.430388450622559 Tokens per Sec: 13978.093845975183
Epoch Step: 255 / 819 Loss: 12.870393753051758 Tokens per Sec: 15423.280635177853
Epoch Step: 260 / 819 Loss: 18.525562286376953 Tokens per Sec: 13910.2643458644
Epoch Step: 265 / 819 Loss: 17.464256286621094 Tokens per Sec: 14868.57990703668
Epoch Step: 270 / 819 Loss: 15.943901062011719 Tokens per Sec: 15007.784035215793
Epoch Step: 275 / 819 Loss: 14.971307754516602 Tokens per Sec: 13632.501809470008
Epoch Step: 280 / 819 Loss: 13.714066505432129 Tokens per Sec: 12795.574335991128
Epoch Step: 285 / 819 Loss: 15.166387557983398 Tokens per Sec: 14397.790287921598
Epoch Step: 290 / 819 Loss: 17.073528289794922 Tokens per Sec: 12695.293733555452
Epoch Step: 295 / 819 Loss: 13.330864906311035 Tokens per Sec: 16364.34919307584
Epoch Step: 300 / 819 Loss: 196.54733276367188 Tokens per Sec: 14674.97972320404
Epoch Step: 305 / 819 Loss: 14.345977783203125 Tokens per Sec: 12284.659169188037
Epoch Step: 310 / 819 Loss: 12.943660736083984 Tokens per Sec: 14329.479304433014
Epoch Step: 315 / 819 Loss: 208.76637268066406 Tokens per Sec: 13787.999708632116
Epoch Step: 320 / 819 Loss: 17.710386276245117 Tokens per Sec: 15670.997160788575
Epoch Step: 325 / 819 Loss: 13.805011749267578 Tokens per Sec: 15319.742849894574
Epoch Step: 330 / 819 Loss: 15.254676818847656 Tokens per Sec: 13733.019557263062
Epoch Step: 335 / 819 Loss: 16.414878845214844 Tokens per Sec: 14697.794229945292
Epoch Step: 340 / 819 Loss: 14.511686325073242 Tokens per Sec: 13688.17089312439
Epoch Step: 345 / 819 Loss: 115.34114074707031 Tokens per Sec: 14488.005201097583
Epoch Step: 350 / 819 Loss: 15.694305419921875 Tokens per Sec: 16420.262393722933
Epoch Step: 355 / 819 Loss: 19.351709365844727 Tokens per Sec: 14638.62079745945
Epoch Step: 360 / 819 Loss: 17.986385345458984 Tokens per Sec: 12400.328035707063
Epoch Step: 365 / 819 Loss: 18.552648544311523 Tokens per Sec: 13112.858610674119
Epoch Step: 370 / 819 Loss: 16.123533248901367 Tokens per Sec: 13938.387779023013
Epoch Step: 375 / 819 Loss: 14.08366584777832 Tokens per Sec: 15400.323293656178
Epoch Step: 380 / 819 Loss: 16.73845863342285 Tokens per Sec: 13010.710829711947
Epoch Step: 385 / 819 Loss: 12.94048023223877 Tokens per Sec: 13622.117817801536
Epoch Step: 390 / 819 Loss: 15.910869598388672 Tokens per Sec: 13340.75108736724
Epoch Step: 395 / 819 Loss: 17.74972915649414 Tokens per Sec: 13154.918387662716
Epoch Step: 400 / 819 Loss: 14.9967679977417 Tokens per Sec: 15222.775273283174
Epoch Step: 405 / 819 Loss: 17.544008255004883 Tokens per Sec: 15217.684301892434
Epoch Step: 410 / 819 Loss: 16.213478088378906 Tokens per Sec: 14118.37569075899
Epoch Step: 415 / 819 Loss: 15.152484893798828 Tokens per Sec: 14148.05150515602
Epoch Step: 420 / 819 Loss: 15.438682556152344 Tokens per Sec: 12997.811723229479
Epoch Step: 425 / 819 Loss: 13.006733894348145 Tokens per Sec: 13529.09628511266
Epoch Step: 430 / 819 Loss: 13.695597648620605 Tokens per Sec: 13381.12497523829
Epoch Step: 435 / 819 Loss: 17.577024459838867 Tokens per Sec: 13539.336033075373
Epoch Step: 440 / 819 Loss: 227.4203643798828 Tokens per Sec: 13671.310051585784
Epoch Step: 445 / 819 Loss: 16.92469596862793 Tokens per Sec: 14319.09120249221
Epoch Step: 450 / 819 Loss: 14.122328758239746 Tokens per Sec: 14332.595130732629
Epoch Step: 455 / 819 Loss: 17.936344146728516 Tokens per Sec: 15086.445881229592
Epoch Step: 460 / 819 Loss: 151.3225555419922 Tokens per Sec: 14916.211490103093
Epoch Step: 465 / 819 Loss: 15.591245651245117 Tokens per Sec: 14586.283503001197
Epoch Step: 470 / 819 Loss: 17.42264175415039 Tokens per Sec: 13935.966602446326
Epoch Step: 475 / 819 Loss: 15.960749626159668 Tokens per Sec: 15590.971523511398
Epoch Step: 480 / 819 Loss: 10.466561317443848 Tokens per Sec: 13250.070298452816
Epoch Step: 485 / 819 Loss: 14.996260643005371 Tokens per Sec: 14542.597573265373
Epoch Step: 490 / 819 Loss: 19.695655822753906 Tokens per Sec: 13761.376810152435
Epoch Step: 495 / 819 Loss: 17.220928192138672 Tokens per Sec: 13992.164181460284
Epoch Step: 500 / 819 Loss: 18.381193161010742 Tokens per Sec: 13099.38948426578
Epoch Step: 505 / 819 Loss: 18.669979095458984 Tokens per Sec: 14127.447571223252
Epoch Step: 510 / 819 Loss: 19.192581176757812 Tokens per Sec: 14587.35531015907
Epoch Step: 515 / 819 Loss: 18.655183792114258 Tokens per Sec: 15071.176271986986
Epoch Step: 520 / 819 Loss: 158.4905548095703 Tokens per Sec: 15333.951032048948
Epoch Step: 525 / 819 Loss: 12.126224517822266 Tokens per Sec: 13145.010640593804
Epoch Step: 530 / 819 Loss: 18.74590301513672 Tokens per Sec: 13586.294704192094
Epoch Step: 535 / 819 Loss: 15.075316429138184 Tokens per Sec: 13657.852719571285
Epoch Step: 540 / 819 Loss: 11.684944152832031 Tokens per Sec: 13721.150206481003
Epoch Step: 545 / 819 Loss: 17.686264038085938 Tokens per Sec: 13568.338438570774
Epoch Step: 550 / 819 Loss: 13.867081642150879 Tokens per Sec: 14210.928209642767
Epoch Step: 555 / 819 Loss: 15.090103149414062 Tokens per Sec: 14407.364831908935
Epoch Step: 560 / 819 Loss: 12.940408706665039 Tokens per Sec: 14277.259501753444
Epoch Step: 565 / 819 Loss: 15.553731918334961 Tokens per Sec: 14442.175468800728
Epoch Step: 570 / 819 Loss: 16.44293212890625 Tokens per Sec: 13228.342295128929
Epoch Step: 575 / 819 Loss: 212.8311004638672 Tokens per Sec: 13945.090789628406
Epoch Step: 580 / 819 Loss: 23.613967895507812 Tokens per Sec: 15794.495409733041
Epoch Step: 585 / 819 Loss: 20.619157791137695 Tokens per Sec: 14865.34791368804
Epoch Step: 590 / 819 Loss: 17.829174041748047 Tokens per Sec: 14680.840861162236
Epoch Step: 595 / 819 Loss: 11.57280158996582 Tokens per Sec: 15267.432384946045
Epoch Step: 600 / 819 Loss: 14.845602035522461 Tokens per Sec: 14270.182347162421
Epoch Step: 605 / 819 Loss: 18.62319564819336 Tokens per Sec: 13787.824555174051
Epoch Step: 610 / 819 Loss: 20.06131935119629 Tokens per Sec: 15849.341152128045
Epoch Step: 615 / 819 Loss: 16.95787811279297 Tokens per Sec: 13524.43111858415
Epoch Step: 620 / 819 Loss: 16.959125518798828 Tokens per Sec: 14530.49088934896
Epoch Step: 625 / 819 Loss: 14.997337341308594 Tokens per Sec: 12672.120359171944
Epoch Step: 630 / 819 Loss: 17.684289932250977 Tokens per Sec: 14614.100744491174
Epoch Step: 635 / 819 Loss: 17.013996124267578 Tokens per Sec: 14974.470685860193
Epoch Step: 640 / 819 Loss: 14.387371063232422 Tokens per Sec: 14566.999344968019
Epoch Step: 645 / 819 Loss: 19.61647605895996 Tokens per Sec: 13320.655986888
Epoch Step: 650 / 819 Loss: 17.62380027770996 Tokens per Sec: 15033.590643589909
Epoch Step: 655 / 819 Loss: 16.06900405883789 Tokens per Sec: 13974.706655767166
Epoch Step: 660 / 819 Loss: 18.219608306884766 Tokens per Sec: 13174.261888384197
Epoch Step: 665 / 819 Loss: 15.81106948852539 Tokens per Sec: 12481.357828687807
Epoch Step: 670 / 819 Loss: 13.95927906036377 Tokens per Sec: 14666.969861007932
Epoch Step: 675 / 819 Loss: 15.010744094848633 Tokens per Sec: 14053.832809592619
Epoch Step: 680 / 819 Loss: 12.87047290802002 Tokens per Sec: 14124.8625668499
Epoch Step: 685 / 819 Loss: 17.992328643798828 Tokens per Sec: 13898.882039144288
Epoch Step: 690 / 819 Loss: 19.74687957763672 Tokens per Sec: 14108.402346111025
Epoch Step: 695 / 819 Loss: 19.726839065551758 Tokens per Sec: 13007.671603638824
Epoch Step: 700 / 819 Loss: 20.077415466308594 Tokens per Sec: 13383.28806043947
Epoch Step: 705 / 819 Loss: 18.7818603515625 Tokens per Sec: 13169.53271608286
Epoch Step: 710 / 819 Loss: 18.147994995117188 Tokens per Sec: 13063.967801162633
Epoch Step: 715 / 819 Loss: 13.706549644470215 Tokens per Sec: 15011.121360254176
Epoch Step: 720 / 819 Loss: 229.5470428466797 Tokens per Sec: 12987.427560004491
Epoch Step: 725 / 819 Loss: 16.903972625732422 Tokens per Sec: 14654.193587983405
Epoch Step: 730 / 819 Loss: 16.311065673828125 Tokens per Sec: 13542.0684638935
Epoch Step: 735 / 819 Loss: 15.490994453430176 Tokens per Sec: 13797.251235756496
Epoch Step: 740 / 819 Loss: 16.7475528717041 Tokens per Sec: 15009.913761306754
Epoch Step: 745 / 819 Loss: 17.866243362426758 Tokens per Sec: 13680.985648399444
Epoch Step: 750 / 819 Loss: 21.004886627197266 Tokens per Sec: 14267.231418763398
Epoch Step: 755 / 819 Loss: 14.526167869567871 Tokens per Sec: 13600.64847415438
Epoch Step: 760 / 819 Loss: 15.642306327819824 Tokens per Sec: 14892.86642386649
Epoch Step: 765 / 819 Loss: 18.347055435180664 Tokens per Sec: 15539.059765622042
Epoch Step: 770 / 819 Loss: 16.328323364257812 Tokens per Sec: 12667.286864901298
Epoch Step: 775 / 819 Loss: 10.693760871887207 Tokens per Sec: 13237.702062884391
Epoch Step: 780 / 819 Loss: 15.205741882324219 Tokens per Sec: 13486.60547331192
Epoch Step: 785 / 819 Loss: 14.385494232177734 Tokens per Sec: 12599.335886496316
Epoch Step: 790 / 819 Loss: 18.984506607055664 Tokens per Sec: 14477.393063303578
Epoch Step: 795 / 819 Loss: 16.222023010253906 Tokens per Sec: 15836.285619148433
Epoch Step: 800 / 819 Loss: 13.19381332397461 Tokens per Sec: 14597.07072352913
Epoch Step: 805 / 819 Loss: 16.71730613708496 Tokens per Sec: 12093.987319220461
Epoch Step: 810 / 819 Loss: 19.0755615234375 Tokens per Sec: 12629.33182820053
Epoch Step: 815 / 819 Loss: 16.17930030822754 Tokens per Sec: 13504.436920496999
Epoch ended with duration 0:04:36.043134
Train perplexity: 1.5089863156753813
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.194273
Validation perplexity: 1.7732506024107049
Model saved checkpoint!
Epoch 51 / 1000
Epoch Step: 5 / 819 Loss: 15.324456214904785 Tokens per Sec: 12627.417632178762
Epoch Step: 10 / 819 Loss: 16.692298889160156 Tokens per Sec: 13337.788421270307
Epoch Step: 15 / 819 Loss: 17.185964584350586 Tokens per Sec: 15205.908786115064
Epoch Step: 20 / 819 Loss: 14.71052360534668 Tokens per Sec: 14037.97400627359
Epoch Step: 25 / 819 Loss: 13.758976936340332 Tokens per Sec: 13385.719831541881
Epoch Step: 30 / 819 Loss: 15.0234956741333 Tokens per Sec: 14145.969391592656
Epoch Step: 35 / 819 Loss: 17.911373138427734 Tokens per Sec: 15364.973480795326
Epoch Step: 40 / 819 Loss: 223.5560760498047 Tokens per Sec: 14962.847143395787
Epoch Step: 45 / 819 Loss: 17.26993751525879 Tokens per Sec: 15436.778842223292
Epoch Step: 50 / 819 Loss: 17.34004783630371 Tokens per Sec: 14651.362261050535
Epoch Step: 55 / 819 Loss: 19.283750534057617 Tokens per Sec: 14570.162481384647
Epoch Step: 60 / 819 Loss: 14.976176261901855 Tokens per Sec: 13180.73291028822
Epoch Step: 65 / 819 Loss: 14.011098861694336 Tokens per Sec: 14803.595257610874
Epoch Step: 70 / 819 Loss: 105.44631958007812 Tokens per Sec: 14251.926040919805
Epoch Step: 75 / 819 Loss: 13.91698932647705 Tokens per Sec: 13026.915002989206
Epoch Step: 80 / 819 Loss: 17.097562789916992 Tokens per Sec: 14251.245690753256
Epoch Step: 85 / 819 Loss: 17.271587371826172 Tokens per Sec: 13863.823480129082
Epoch Step: 90 / 819 Loss: 20.28162956237793 Tokens per Sec: 13466.612310248514
Epoch Step: 95 / 819 Loss: 13.247310638427734 Tokens per Sec: 13729.226809712358
Epoch Step: 100 / 819 Loss: 11.974139213562012 Tokens per Sec: 15366.567523208329
Epoch Step: 105 / 819 Loss: 18.646745681762695 Tokens per Sec: 14539.034728168795
Epoch Step: 110 / 819 Loss: 14.829660415649414 Tokens per Sec: 12593.97964314101
Epoch Step: 115 / 819 Loss: 16.519596099853516 Tokens per Sec: 14118.501488646616
Epoch Step: 120 / 819 Loss: 16.386714935302734 Tokens per Sec: 15444.820562450172
Epoch Step: 125 / 819 Loss: 16.017505645751953 Tokens per Sec: 12934.84386250632
Epoch Step: 130 / 819 Loss: 18.12874412536621 Tokens per Sec: 14194.696154744677
Epoch Step: 135 / 819 Loss: 15.856698036193848 Tokens per Sec: 14396.093205924684
Epoch Step: 140 / 819 Loss: 19.284263610839844 Tokens per Sec: 13486.335949208522
Epoch Step: 145 / 819 Loss: 18.339757919311523 Tokens per Sec: 13494.073603594683
Epoch Step: 150 / 819 Loss: 17.236196517944336 Tokens per Sec: 14100.170371704227
Epoch Step: 155 / 819 Loss: 17.024845123291016 Tokens per Sec: 13581.825086938115
Epoch Step: 160 / 819 Loss: 220.406005859375 Tokens per Sec: 13975.642349183641
Epoch Step: 165 / 819 Loss: 15.181527137756348 Tokens per Sec: 13167.614723764405
Epoch Step: 170 / 819 Loss: 16.311355590820312 Tokens per Sec: 14477.066635676616
Epoch Step: 175 / 819 Loss: 18.69532585144043 Tokens per Sec: 14285.153383363204
Epoch Step: 180 / 819 Loss: 18.47700309753418 Tokens per Sec: 15448.86822993958
Epoch Step: 185 / 819 Loss: 16.253324508666992 Tokens per Sec: 13500.966471607335
Epoch Step: 190 / 819 Loss: 15.346990585327148 Tokens per Sec: 14162.784939372887
Epoch Step: 195 / 819 Loss: 15.714791297912598 Tokens per Sec: 14779.491061711778
Epoch Step: 200 / 819 Loss: 10.100905418395996 Tokens per Sec: 13217.284429361085
Epoch Step: 205 / 819 Loss: 13.700899124145508 Tokens per Sec: 13244.586307407575
Epoch Step: 210 / 819 Loss: 12.819554328918457 Tokens per Sec: 16187.433553461979
Epoch Step: 215 / 819 Loss: 14.733508110046387 Tokens per Sec: 12469.524051047547
Epoch Step: 220 / 819 Loss: 16.315095901489258 Tokens per Sec: 16129.101816098282
Epoch Step: 225 / 819 Loss: 17.51626205444336 Tokens per Sec: 12620.49263965271
Epoch Step: 230 / 819 Loss: 17.33270263671875 Tokens per Sec: 12363.849365985054
Epoch Step: 235 / 819 Loss: 19.1856632232666 Tokens per Sec: 15410.375500996131
Epoch Step: 240 / 819 Loss: 14.095568656921387 Tokens per Sec: 13522.148331313738
Epoch Step: 245 / 819 Loss: 15.677401542663574 Tokens per Sec: 15069.915546350985
Epoch Step: 250 / 819 Loss: 17.12730598449707 Tokens per Sec: 13643.584537219338
Epoch Step: 255 / 819 Loss: 15.897268295288086 Tokens per Sec: 13243.445690593688
Epoch Step: 260 / 819 Loss: 13.973249435424805 Tokens per Sec: 14245.705155326516
Epoch Step: 265 / 819 Loss: 15.122299194335938 Tokens per Sec: 14402.770049629411
Epoch Step: 270 / 819 Loss: 14.587986946105957 Tokens per Sec: 12506.561003558681
Epoch Step: 275 / 819 Loss: 16.564531326293945 Tokens per Sec: 15639.613685027514
Epoch Step: 280 / 819 Loss: 18.28156280517578 Tokens per Sec: 13682.248934749703
Epoch Step: 285 / 819 Loss: 18.0103759765625 Tokens per Sec: 13450.532071309672
Epoch Step: 290 / 819 Loss: 18.17925262451172 Tokens per Sec: 13676.069913603975
Epoch Step: 295 / 819 Loss: 11.628164291381836 Tokens per Sec: 14151.244958985111
Epoch Step: 300 / 819 Loss: 10.024422645568848 Tokens per Sec: 13238.376498489142
Epoch Step: 305 / 819 Loss: 15.961312294006348 Tokens per Sec: 15110.45850991896
Epoch Step: 310 / 819 Loss: 17.99199104309082 Tokens per Sec: 13630.928373670224
Epoch Step: 315 / 819 Loss: 15.428184509277344 Tokens per Sec: 15064.424018783346
Epoch Step: 320 / 819 Loss: 14.974265098571777 Tokens per Sec: 14510.16903286323
Epoch Step: 325 / 819 Loss: 16.471633911132812 Tokens per Sec: 13853.275871608925
Epoch Step: 330 / 819 Loss: 11.649632453918457 Tokens per Sec: 15033.191846643354
Epoch Step: 335 / 819 Loss: 19.243005752563477 Tokens per Sec: 14823.069091620548
Epoch Step: 340 / 819 Loss: 127.73736572265625 Tokens per Sec: 13142.92825654633
Epoch Step: 345 / 819 Loss: 13.619402885437012 Tokens per Sec: 13807.054090438907
Epoch Step: 350 / 819 Loss: 16.10825538635254 Tokens per Sec: 14022.296086429285
Epoch Step: 355 / 819 Loss: 13.351038932800293 Tokens per Sec: 13215.782025104761
Epoch Step: 360 / 819 Loss: 16.274639129638672 Tokens per Sec: 14952.237636042531
Epoch Step: 365 / 819 Loss: 12.611427307128906 Tokens per Sec: 14338.23127960235
Epoch Step: 370 / 819 Loss: 15.495257377624512 Tokens per Sec: 13873.90877468077
Epoch Step: 375 / 819 Loss: 13.549721717834473 Tokens per Sec: 12581.609779805181
Epoch Step: 380 / 819 Loss: 12.852659225463867 Tokens per Sec: 13001.513880783245
Epoch Step: 385 / 819 Loss: 13.651564598083496 Tokens per Sec: 13296.802006044778
Epoch Step: 390 / 819 Loss: 237.61424255371094 Tokens per Sec: 15819.738394824857
Epoch Step: 395 / 819 Loss: 193.81390380859375 Tokens per Sec: 13908.623486271807
Epoch Step: 400 / 819 Loss: 14.114686012268066 Tokens per Sec: 14201.688390480178
Epoch Step: 405 / 819 Loss: 203.6312255859375 Tokens per Sec: 14474.978472749579
Epoch Step: 410 / 819 Loss: 18.414247512817383 Tokens per Sec: 13190.514527607129
Epoch Step: 415 / 819 Loss: 15.692488670349121 Tokens per Sec: 14803.928003848785
Epoch Step: 420 / 819 Loss: 14.011270523071289 Tokens per Sec: 14972.067050036458
Epoch Step: 425 / 819 Loss: 16.89569664001465 Tokens per Sec: 14218.014248436155
Epoch Step: 430 / 819 Loss: 13.619863510131836 Tokens per Sec: 14237.730858898734
Epoch Step: 435 / 819 Loss: 19.870956420898438 Tokens per Sec: 14009.57073147342
Epoch Step: 440 / 819 Loss: 15.352709770202637 Tokens per Sec: 13976.693515848257
Epoch Step: 445 / 819 Loss: 12.774015426635742 Tokens per Sec: 13695.37768265346
Epoch Step: 450 / 819 Loss: 13.228656768798828 Tokens per Sec: 13431.856850390952
Epoch Step: 455 / 819 Loss: 14.983951568603516 Tokens per Sec: 13903.437229507992
Epoch Step: 460 / 819 Loss: 21.313867568969727 Tokens per Sec: 14338.62097050908
Epoch Step: 465 / 819 Loss: 17.87027931213379 Tokens per Sec: 13307.35251020334
Epoch Step: 470 / 819 Loss: 23.28331756591797 Tokens per Sec: 14184.055937287128
Epoch Step: 475 / 819 Loss: 19.260482788085938 Tokens per Sec: 13531.71311373094
Epoch Step: 480 / 819 Loss: 17.529293060302734 Tokens per Sec: 14789.087423062447
Epoch Step: 485 / 819 Loss: 17.030532836914062 Tokens per Sec: 12780.529845952105
Epoch Step: 490 / 819 Loss: 20.480972290039062 Tokens per Sec: 13679.60638466813
Epoch Step: 495 / 819 Loss: 16.45292091369629 Tokens per Sec: 12653.450296706904
Epoch Step: 500 / 819 Loss: 12.469465255737305 Tokens per Sec: 12888.662781973766
Epoch Step: 505 / 819 Loss: 14.316876411437988 Tokens per Sec: 12988.938623045182
Epoch Step: 510 / 819 Loss: 16.583127975463867 Tokens per Sec: 13773.397366686055
Epoch Step: 515 / 819 Loss: 13.256397247314453 Tokens per Sec: 12945.430756034079
Epoch Step: 520 / 819 Loss: 15.849959373474121 Tokens per Sec: 14135.438976805719
Epoch Step: 525 / 819 Loss: 12.561549186706543 Tokens per Sec: 13658.491283773603
Epoch Step: 530 / 819 Loss: 18.979015350341797 Tokens per Sec: 15389.133931774648
Epoch Step: 535 / 819 Loss: 14.509439468383789 Tokens per Sec: 13607.42428421399
Epoch Step: 540 / 819 Loss: 18.520000457763672 Tokens per Sec: 14050.931340832933
Epoch Step: 545 / 819 Loss: 18.84568977355957 Tokens per Sec: 13350.723369917767
Epoch Step: 550 / 819 Loss: 14.400365829467773 Tokens per Sec: 13951.977337399585
Epoch Step: 555 / 819 Loss: 12.303540229797363 Tokens per Sec: 13141.418691890853
Epoch Step: 560 / 819 Loss: 11.825165748596191 Tokens per Sec: 14158.172425649476
Epoch Step: 565 / 819 Loss: 11.930031776428223 Tokens per Sec: 13101.29101084514
Epoch Step: 570 / 819 Loss: 12.582220077514648 Tokens per Sec: 14501.23561204849
Epoch Step: 575 / 819 Loss: 15.716584205627441 Tokens per Sec: 13938.135307998506
Epoch Step: 580 / 819 Loss: 15.173643112182617 Tokens per Sec: 14601.777826057465
Epoch Step: 585 / 819 Loss: 13.524816513061523 Tokens per Sec: 15992.90236250705
Epoch Step: 590 / 819 Loss: 17.749095916748047 Tokens per Sec: 13776.7473894525
Epoch Step: 595 / 819 Loss: 19.365678787231445 Tokens per Sec: 13230.566751004408
Epoch Step: 600 / 819 Loss: 22.62896728515625 Tokens per Sec: 13453.742649416485
Epoch Step: 605 / 819 Loss: 18.148324966430664 Tokens per Sec: 13757.153462653288
Epoch Step: 610 / 819 Loss: 18.805448532104492 Tokens per Sec: 13746.313798035833
Epoch Step: 615 / 819 Loss: 16.944419860839844 Tokens per Sec: 13048.56949846177
Epoch Step: 620 / 819 Loss: 16.820913314819336 Tokens per Sec: 14268.582620858295
Epoch Step: 625 / 819 Loss: 157.8160400390625 Tokens per Sec: 14539.983697918302
Epoch Step: 630 / 819 Loss: 19.7592716217041 Tokens per Sec: 14334.981496513496
Epoch Step: 635 / 819 Loss: 15.812060356140137 Tokens per Sec: 13613.935656700341
Epoch Step: 640 / 819 Loss: 20.595836639404297 Tokens per Sec: 13018.272915446705
Epoch Step: 645 / 819 Loss: 19.980642318725586 Tokens per Sec: 16803.700486968464
Epoch Step: 650 / 819 Loss: 16.516014099121094 Tokens per Sec: 13304.473211665061
Epoch Step: 655 / 819 Loss: 14.644306182861328 Tokens per Sec: 14504.802486267241
Epoch Step: 660 / 819 Loss: 18.607460021972656 Tokens per Sec: 15018.962746156349
Epoch Step: 665 / 819 Loss: 18.63392448425293 Tokens per Sec: 14749.736162501116
Epoch Step: 670 / 819 Loss: 18.107078552246094 Tokens per Sec: 12007.987967077834
Epoch Step: 675 / 819 Loss: 119.14370727539062 Tokens per Sec: 13513.474450110476
Epoch Step: 680 / 819 Loss: 17.954790115356445 Tokens per Sec: 13944.610156761562
Epoch Step: 685 / 819 Loss: 190.82247924804688 Tokens per Sec: 13990.13705281796
Epoch Step: 690 / 819 Loss: 16.160898208618164 Tokens per Sec: 13566.280597416784
Epoch Step: 695 / 819 Loss: 16.13982582092285 Tokens per Sec: 15497.1156747681
Epoch Step: 700 / 819 Loss: 19.871196746826172 Tokens per Sec: 12117.720025063558
Epoch Step: 705 / 819 Loss: 20.64980125427246 Tokens per Sec: 14948.272372743944
Epoch Step: 710 / 819 Loss: 17.42406463623047 Tokens per Sec: 13984.930320769348
Epoch Step: 715 / 819 Loss: 12.67944049835205 Tokens per Sec: 13469.411983436154
Epoch Step: 720 / 819 Loss: 248.84971618652344 Tokens per Sec: 14425.057842753415
Epoch Step: 725 / 819 Loss: 194.3857879638672 Tokens per Sec: 13907.863640456997
Epoch Step: 730 / 819 Loss: 15.505631446838379 Tokens per Sec: 14405.701138006581
Epoch Step: 735 / 819 Loss: 17.6414852142334 Tokens per Sec: 13647.532774373785
Epoch Step: 740 / 819 Loss: 20.640012741088867 Tokens per Sec: 13633.163843321041
Epoch Step: 745 / 819 Loss: 22.24353790283203 Tokens per Sec: 13179.36988286482
Epoch Step: 750 / 819 Loss: 17.61355972290039 Tokens per Sec: 14305.32332579937
Epoch Step: 755 / 819 Loss: 22.914438247680664 Tokens per Sec: 13989.635239935364
Epoch Step: 760 / 819 Loss: 19.281044006347656 Tokens per Sec: 14077.270626200749
Epoch Step: 765 / 819 Loss: 175.5903778076172 Tokens per Sec: 13841.260149835605
Epoch Step: 770 / 819 Loss: 22.542713165283203 Tokens per Sec: 13610.215945246082
Epoch Step: 775 / 819 Loss: 19.417062759399414 Tokens per Sec: 13795.544854087359
Epoch Step: 780 / 819 Loss: 16.18468475341797 Tokens per Sec: 12458.429430485903
Epoch Step: 785 / 819 Loss: 17.69386100769043 Tokens per Sec: 16013.269766567522
Epoch Step: 790 / 819 Loss: 16.925321578979492 Tokens per Sec: 13454.363464731285
Epoch Step: 795 / 819 Loss: 16.520017623901367 Tokens per Sec: 13039.29802419627
Epoch Step: 800 / 819 Loss: 13.204754829406738 Tokens per Sec: 13724.953629991276
Epoch Step: 805 / 819 Loss: 16.0338077545166 Tokens per Sec: 12104.546027086806
Epoch Step: 810 / 819 Loss: 18.347402572631836 Tokens per Sec: 14595.14890752111
Epoch Step: 815 / 819 Loss: 14.633502960205078 Tokens per Sec: 13565.275562295978
Epoch ended with duration 0:04:38.642965
Train perplexity: 1.5512933405321656
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.489859
Validation perplexity: 1.5162696608954032
Epoch 52 / 1000
Epoch Step: 5 / 819 Loss: 14.617049217224121 Tokens per Sec: 14918.048179248626
Epoch Step: 10 / 819 Loss: 16.121477127075195 Tokens per Sec: 13323.588187315347
Epoch Step: 15 / 819 Loss: 17.942367553710938 Tokens per Sec: 13829.059738935131
Epoch Step: 20 / 819 Loss: 12.967452049255371 Tokens per Sec: 15019.196862741761
Epoch Step: 25 / 819 Loss: 15.7579984664917 Tokens per Sec: 14185.676595955703
Epoch Step: 30 / 819 Loss: 12.388075828552246 Tokens per Sec: 14181.86796013632
Epoch Step: 35 / 819 Loss: 10.827780723571777 Tokens per Sec: 14438.61898033567
Epoch Step: 40 / 819 Loss: 12.556715965270996 Tokens per Sec: 16310.733439313142
Epoch Step: 45 / 819 Loss: 13.964851379394531 Tokens per Sec: 16163.124378652277
Epoch Step: 50 / 819 Loss: 17.43451690673828 Tokens per Sec: 13396.67185038254
Epoch Step: 55 / 819 Loss: 18.558019638061523 Tokens per Sec: 16672.289495962785
Epoch Step: 60 / 819 Loss: 13.578781127929688 Tokens per Sec: 12738.470983987956
Epoch Step: 65 / 819 Loss: 18.926603317260742 Tokens per Sec: 13460.08123897828
Epoch Step: 70 / 819 Loss: 17.194007873535156 Tokens per Sec: 14282.68230457142
Epoch Step: 75 / 819 Loss: 18.81177520751953 Tokens per Sec: 12398.239938134051
Epoch Step: 80 / 819 Loss: 19.53691864013672 Tokens per Sec: 12695.207331992322
Epoch Step: 85 / 819 Loss: 19.4027156829834 Tokens per Sec: 15740.509644640772
Epoch Step: 90 / 819 Loss: 21.412582397460938 Tokens per Sec: 13819.586242721081
Epoch Step: 95 / 819 Loss: 16.977378845214844 Tokens per Sec: 13820.69283070309
Epoch Step: 100 / 819 Loss: 167.1698455810547 Tokens per Sec: 14150.51338519448
Epoch Step: 105 / 819 Loss: 21.202919006347656 Tokens per Sec: 13272.843638966922
Epoch Step: 110 / 819 Loss: 17.499656677246094 Tokens per Sec: 14409.325838396018
Epoch Step: 115 / 819 Loss: 16.325315475463867 Tokens per Sec: 15703.14396494301
Epoch Step: 120 / 819 Loss: 18.88376808166504 Tokens per Sec: 13351.403789682458
Epoch Step: 125 / 819 Loss: 19.16191864013672 Tokens per Sec: 12720.870310535205
Epoch Step: 130 / 819 Loss: 15.915789604187012 Tokens per Sec: 14362.424180648337
Epoch Step: 135 / 819 Loss: 19.240333557128906 Tokens per Sec: 16136.942628089995
Epoch Step: 140 / 819 Loss: 134.7764892578125 Tokens per Sec: 14809.773431248945
Epoch Step: 145 / 819 Loss: 17.011125564575195 Tokens per Sec: 13258.210580645093
Epoch Step: 150 / 819 Loss: 13.974749565124512 Tokens per Sec: 14487.15761749209
Epoch Step: 155 / 819 Loss: 12.833561897277832 Tokens per Sec: 15031.631316699119
Epoch Step: 160 / 819 Loss: 14.945703506469727 Tokens per Sec: 14317.232514532629
Epoch Step: 165 / 819 Loss: 14.603511810302734 Tokens per Sec: 14008.779468235347
Epoch Step: 170 / 819 Loss: 13.128832817077637 Tokens per Sec: 12784.661042481921
Epoch Step: 175 / 819 Loss: 16.655664443969727 Tokens per Sec: 12903.706988326945
Epoch Step: 180 / 819 Loss: 17.845022201538086 Tokens per Sec: 14995.800799429751
Epoch Step: 185 / 819 Loss: 203.52835083007812 Tokens per Sec: 14622.16452140155
Epoch Step: 190 / 819 Loss: 20.229618072509766 Tokens per Sec: 15468.400701222841
Epoch Step: 195 / 819 Loss: 21.014440536499023 Tokens per Sec: 13365.752714103264
Epoch Step: 200 / 819 Loss: 17.977874755859375 Tokens per Sec: 13263.473786848297
Epoch Step: 205 / 819 Loss: 19.947437286376953 Tokens per Sec: 14215.19829248389
Epoch Step: 210 / 819 Loss: 12.131576538085938 Tokens per Sec: 13728.103124449497
Epoch Step: 215 / 819 Loss: 19.603744506835938 Tokens per Sec: 13677.11943293006
Epoch Step: 220 / 819 Loss: 14.88719654083252 Tokens per Sec: 16509.669627007137
Epoch Step: 225 / 819 Loss: 14.57124137878418 Tokens per Sec: 15142.30701283095
Epoch Step: 230 / 819 Loss: 15.196918487548828 Tokens per Sec: 13186.60132704423
Epoch Step: 235 / 819 Loss: 14.861625671386719 Tokens per Sec: 13883.362733220809
Epoch Step: 240 / 819 Loss: 15.745037078857422 Tokens per Sec: 15166.871574470479
Epoch Step: 245 / 819 Loss: 19.570693969726562 Tokens per Sec: 14771.870904160234
Epoch Step: 250 / 819 Loss: 12.641688346862793 Tokens per Sec: 13559.142434526902
Epoch Step: 255 / 819 Loss: 16.815351486206055 Tokens per Sec: 13287.209645749861
Epoch Step: 260 / 819 Loss: 18.04957389831543 Tokens per Sec: 12097.541503873012
Epoch Step: 265 / 819 Loss: 15.877866744995117 Tokens per Sec: 14000.296405714447
Epoch Step: 270 / 819 Loss: 165.54403686523438 Tokens per Sec: 13940.460115125989
Epoch Step: 275 / 819 Loss: 16.755475997924805 Tokens per Sec: 14473.748811332214
Epoch Step: 280 / 819 Loss: 12.195345878601074 Tokens per Sec: 14661.900663001597
Epoch Step: 285 / 819 Loss: 17.557321548461914 Tokens per Sec: 13912.765463049132
Epoch Step: 290 / 819 Loss: 15.735945701599121 Tokens per Sec: 13484.573864928361
Epoch Step: 295 / 819 Loss: 18.24127960205078 Tokens per Sec: 14844.890893069034
Epoch Step: 300 / 819 Loss: 17.064733505249023 Tokens per Sec: 13657.399467099054
Epoch Step: 305 / 819 Loss: 11.949453353881836 Tokens per Sec: 14453.355655552748
Epoch Step: 310 / 819 Loss: 13.86674976348877 Tokens per Sec: 14345.821372593988
Epoch Step: 315 / 819 Loss: 122.46891784667969 Tokens per Sec: 14538.369294233855
Epoch Step: 320 / 819 Loss: 13.420798301696777 Tokens per Sec: 15134.784914792966
Epoch Step: 325 / 819 Loss: 14.68543815612793 Tokens per Sec: 13188.861369493794
Epoch Step: 330 / 819 Loss: 13.684511184692383 Tokens per Sec: 14812.512944802776
Epoch Step: 335 / 819 Loss: 13.636126518249512 Tokens per Sec: 14539.865030553476
Epoch Step: 340 / 819 Loss: 16.685550689697266 Tokens per Sec: 12651.396338743534
Epoch Step: 345 / 819 Loss: 16.066417694091797 Tokens per Sec: 14799.037747117514
Epoch Step: 350 / 819 Loss: 19.32485008239746 Tokens per Sec: 14676.222539827986
Epoch Step: 355 / 819 Loss: 12.543752670288086 Tokens per Sec: 13003.95562021704
Epoch Step: 360 / 819 Loss: 17.70393943786621 Tokens per Sec: 14698.467583138878
Epoch Step: 365 / 819 Loss: 191.9586639404297 Tokens per Sec: 14722.330526069816
Epoch Step: 370 / 819 Loss: 17.90717124938965 Tokens per Sec: 15061.414745546885
Epoch Step: 375 / 819 Loss: 20.426563262939453 Tokens per Sec: 12968.733156524837
Epoch Step: 380 / 819 Loss: 14.264127731323242 Tokens per Sec: 13342.938314954918
Epoch Step: 385 / 819 Loss: 13.306164741516113 Tokens per Sec: 15136.623407237072
Epoch Step: 390 / 819 Loss: 18.268701553344727 Tokens per Sec: 15025.666613863908
Epoch Step: 395 / 819 Loss: 13.974078178405762 Tokens per Sec: 15819.347465887015
Epoch Step: 400 / 819 Loss: 18.924592971801758 Tokens per Sec: 15522.216335760982
Epoch Step: 405 / 819 Loss: 15.356948852539062 Tokens per Sec: 16246.08658926164
Epoch Step: 410 / 819 Loss: 20.585039138793945 Tokens per Sec: 14359.469604201073
Epoch Step: 415 / 819 Loss: 11.994956016540527 Tokens per Sec: 12819.46448261892
Epoch Step: 420 / 819 Loss: 17.417362213134766 Tokens per Sec: 15080.72869099327
Epoch Step: 425 / 819 Loss: 18.25735855102539 Tokens per Sec: 14142.842536112106
Epoch Step: 430 / 819 Loss: 14.97244644165039 Tokens per Sec: 13594.548116379225
Epoch Step: 435 / 819 Loss: 11.39933967590332 Tokens per Sec: 14023.68719343848
Epoch Step: 440 / 819 Loss: 17.475149154663086 Tokens per Sec: 15475.723849266906
Epoch Step: 445 / 819 Loss: 16.819568634033203 Tokens per Sec: 13863.828826911147
Epoch Step: 450 / 819 Loss: 18.78462791442871 Tokens per Sec: 13067.999163442602
Epoch Step: 455 / 819 Loss: 16.91543960571289 Tokens per Sec: 14861.270958344769
Epoch Step: 460 / 819 Loss: 13.283651351928711 Tokens per Sec: 14577.423962038247
Epoch Step: 465 / 819 Loss: 17.50597381591797 Tokens per Sec: 13899.149679594952
Epoch Step: 470 / 819 Loss: 10.986638069152832 Tokens per Sec: 12942.790454403917
Epoch Step: 475 / 819 Loss: 19.076356887817383 Tokens per Sec: 14476.941732678151
Epoch Step: 480 / 819 Loss: 12.774612426757812 Tokens per Sec: 13690.182831374741
Epoch Step: 485 / 819 Loss: 18.974227905273438 Tokens per Sec: 13522.906219723189
Epoch Step: 490 / 819 Loss: 13.971392631530762 Tokens per Sec: 15971.336291182773
Epoch Step: 495 / 819 Loss: 12.571022987365723 Tokens per Sec: 13785.311129590607
Epoch Step: 500 / 819 Loss: 15.371305465698242 Tokens per Sec: 13623.582357697987
Epoch Step: 505 / 819 Loss: 16.19023323059082 Tokens per Sec: 13720.427524339973
Epoch Step: 510 / 819 Loss: 12.993192672729492 Tokens per Sec: 14139.798404052492
Epoch Step: 515 / 819 Loss: 11.764681816101074 Tokens per Sec: 14285.914171694692
Epoch Step: 520 / 819 Loss: 15.961004257202148 Tokens per Sec: 13228.366808131666
Epoch Step: 525 / 819 Loss: 17.279685974121094 Tokens per Sec: 13840.186739641307
Epoch Step: 530 / 819 Loss: 15.84091567993164 Tokens per Sec: 15293.384623783635
Epoch Step: 535 / 819 Loss: 18.021947860717773 Tokens per Sec: 15280.546362127565
Epoch Step: 540 / 819 Loss: 18.120609283447266 Tokens per Sec: 15917.791223956432
Epoch Step: 545 / 819 Loss: 21.62213706970215 Tokens per Sec: 13525.224964893972
Epoch Step: 550 / 819 Loss: 190.93118286132812 Tokens per Sec: 13535.141470248915
Epoch Step: 555 / 819 Loss: 12.094649314880371 Tokens per Sec: 13756.512706492464
Epoch Step: 560 / 819 Loss: 12.159626007080078 Tokens per Sec: 13940.612279384959
Epoch Step: 565 / 819 Loss: 15.590737342834473 Tokens per Sec: 15554.793300418376
Epoch Step: 570 / 819 Loss: 13.35350513458252 Tokens per Sec: 13524.327036224111
Epoch Step: 575 / 819 Loss: 12.973258018493652 Tokens per Sec: 13102.274906520353
Epoch Step: 580 / 819 Loss: 13.568090438842773 Tokens per Sec: 16334.006703245112
Epoch Step: 585 / 819 Loss: 14.975343704223633 Tokens per Sec: 15012.43251527265
Epoch Step: 590 / 819 Loss: 12.120218276977539 Tokens per Sec: 14673.93218045091
Epoch Step: 595 / 819 Loss: 12.686615943908691 Tokens per Sec: 14143.192812559044
Epoch Step: 600 / 819 Loss: 18.170026779174805 Tokens per Sec: 14243.782671309169
Epoch Step: 605 / 819 Loss: 11.412473678588867 Tokens per Sec: 13826.999742263182
Epoch Step: 610 / 819 Loss: 184.9596405029297 Tokens per Sec: 15452.748561396907
Epoch Step: 615 / 819 Loss: 19.75127601623535 Tokens per Sec: 14819.815325987824
Epoch Step: 620 / 819 Loss: 15.617269515991211 Tokens per Sec: 13665.396270415322
Epoch Step: 625 / 819 Loss: 12.481500625610352 Tokens per Sec: 13951.184691149483
Epoch Step: 630 / 819 Loss: 11.787710189819336 Tokens per Sec: 14465.846695607162
Epoch Step: 635 / 819 Loss: 15.373719215393066 Tokens per Sec: 14064.291420857575
Epoch Step: 640 / 819 Loss: 204.99867248535156 Tokens per Sec: 15385.238925284184
Epoch Step: 645 / 819 Loss: 20.08025360107422 Tokens per Sec: 12429.724944746244
Epoch Step: 650 / 819 Loss: 19.106338500976562 Tokens per Sec: 13509.797652458034
Epoch Step: 655 / 819 Loss: 16.362403869628906 Tokens per Sec: 14210.961240556753
Epoch Step: 660 / 819 Loss: 19.61859893798828 Tokens per Sec: 14473.437304753848
Epoch Step: 665 / 819 Loss: 11.85611343383789 Tokens per Sec: 13530.79649190243
Epoch Step: 670 / 819 Loss: 20.98724365234375 Tokens per Sec: 14107.084117168299
Epoch Step: 675 / 819 Loss: 14.698512077331543 Tokens per Sec: 14541.407651518814
Epoch Step: 680 / 819 Loss: 14.419594764709473 Tokens per Sec: 14982.97843163386
Epoch Step: 685 / 819 Loss: 12.097801208496094 Tokens per Sec: 13719.803375472355
Epoch Step: 690 / 819 Loss: 286.0950012207031 Tokens per Sec: 14108.465304188547
Epoch Step: 695 / 819 Loss: 17.698740005493164 Tokens per Sec: 13877.767931277387
Epoch Step: 700 / 819 Loss: 232.2024688720703 Tokens per Sec: 14542.876239375135
Epoch Step: 705 / 819 Loss: 219.49209594726562 Tokens per Sec: 14394.604221813437
Epoch Step: 710 / 819 Loss: 20.472150802612305 Tokens per Sec: 13950.038089496646
Epoch Step: 715 / 819 Loss: 18.770816802978516 Tokens per Sec: 14967.092644410588
Epoch Step: 720 / 819 Loss: 16.60755157470703 Tokens per Sec: 14523.860003401001
Epoch Step: 725 / 819 Loss: 20.792797088623047 Tokens per Sec: 13662.93043857461
Epoch Step: 730 / 819 Loss: 14.90202808380127 Tokens per Sec: 13328.901160860982
Epoch Step: 735 / 819 Loss: 15.448715209960938 Tokens per Sec: 14960.009576074503
Epoch Step: 740 / 819 Loss: 18.332075119018555 Tokens per Sec: 14910.257622051222
Epoch Step: 745 / 819 Loss: 13.549604415893555 Tokens per Sec: 13076.725058260487
Epoch Step: 750 / 819 Loss: 15.620979309082031 Tokens per Sec: 14157.389978906842
Epoch Step: 755 / 819 Loss: 16.891300201416016 Tokens per Sec: 14385.75328493265
Epoch Step: 760 / 819 Loss: 16.590614318847656 Tokens per Sec: 13600.86557543613
Epoch Step: 765 / 819 Loss: 188.47305297851562 Tokens per Sec: 13512.38392112644
Epoch Step: 770 / 819 Loss: 14.406124114990234 Tokens per Sec: 12292.272265254964
Epoch Step: 775 / 819 Loss: 17.378820419311523 Tokens per Sec: 14478.154515362214
Epoch Step: 780 / 819 Loss: 19.26014518737793 Tokens per Sec: 13517.996257420795
Epoch Step: 785 / 819 Loss: 12.800826072692871 Tokens per Sec: 15743.212084224271
Epoch Step: 790 / 819 Loss: 113.30399322509766 Tokens per Sec: 13831.109253846424
Epoch Step: 795 / 819 Loss: 15.895328521728516 Tokens per Sec: 13981.065320437896
Epoch Step: 800 / 819 Loss: 16.953609466552734 Tokens per Sec: 14063.091557838106
Epoch Step: 805 / 819 Loss: 15.332986831665039 Tokens per Sec: 13518.940236821056
Epoch Step: 810 / 819 Loss: 16.0137882232666 Tokens per Sec: 11660.128871504492
Epoch Step: 815 / 819 Loss: 12.154451370239258 Tokens per Sec: 12832.714003251782
Epoch ended with duration 0:04:34.453390
Train perplexity: 1.472248762513656
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.065101
Validation perplexity: 1.5495521241285783
Epoch 53 / 1000
Epoch Step: 5 / 819 Loss: 16.814332962036133 Tokens per Sec: 13615.783739471804
Epoch Step: 10 / 819 Loss: 18.0669002532959 Tokens per Sec: 13804.961379604436
Epoch Step: 15 / 819 Loss: 14.912474632263184 Tokens per Sec: 14888.48339122157
Epoch Step: 20 / 819 Loss: 16.013385772705078 Tokens per Sec: 12802.315996495683
Epoch Step: 25 / 819 Loss: 19.87317657470703 Tokens per Sec: 13430.071445498888
Epoch Step: 30 / 819 Loss: 16.404115676879883 Tokens per Sec: 12832.583948666132
Epoch Step: 35 / 819 Loss: 192.39752197265625 Tokens per Sec: 13340.593790100384
Epoch Step: 40 / 819 Loss: 14.505562782287598 Tokens per Sec: 14007.21182378904
Epoch Step: 45 / 819 Loss: 161.25570678710938 Tokens per Sec: 13020.080885728832
Epoch Step: 50 / 819 Loss: 15.415074348449707 Tokens per Sec: 17410.545532196516
Epoch Step: 55 / 819 Loss: 15.769895553588867 Tokens per Sec: 14755.613718954877
Epoch Step: 60 / 819 Loss: 12.581705093383789 Tokens per Sec: 13281.527015823993
Epoch Step: 65 / 819 Loss: 13.501651763916016 Tokens per Sec: 13875.978781565824
Epoch Step: 70 / 819 Loss: 17.447599411010742 Tokens per Sec: 13525.339947605431
Epoch Step: 75 / 819 Loss: 16.334171295166016 Tokens per Sec: 12948.675541229284
Epoch Step: 80 / 819 Loss: 15.35129451751709 Tokens per Sec: 12858.463486777779
Epoch Step: 85 / 819 Loss: 14.544769287109375 Tokens per Sec: 12853.08158179412
Epoch Step: 90 / 819 Loss: 15.441739082336426 Tokens per Sec: 14800.120802929461
Epoch Step: 95 / 819 Loss: 16.402755737304688 Tokens per Sec: 14956.769758565015
Epoch Step: 100 / 819 Loss: 15.591812133789062 Tokens per Sec: 14806.83267298192
Epoch Step: 105 / 819 Loss: 18.124553680419922 Tokens per Sec: 14484.643048811346
Epoch Step: 110 / 819 Loss: 11.491915702819824 Tokens per Sec: 14865.128702197168
Epoch Step: 115 / 819 Loss: 13.373666763305664 Tokens per Sec: 12963.631108104173
Epoch Step: 120 / 819 Loss: 17.166650772094727 Tokens per Sec: 14592.866209630625
Epoch Step: 125 / 819 Loss: 16.3341121673584 Tokens per Sec: 16236.52912685297
Epoch Step: 130 / 819 Loss: 14.357763290405273 Tokens per Sec: 12635.771690478898
Epoch Step: 135 / 819 Loss: 11.07539176940918 Tokens per Sec: 13634.829586304008
Epoch Step: 140 / 819 Loss: 14.715574264526367 Tokens per Sec: 13749.300653874847
Epoch Step: 145 / 819 Loss: 18.555429458618164 Tokens per Sec: 12648.167017427606
Epoch Step: 150 / 819 Loss: 15.887417793273926 Tokens per Sec: 13041.86159627146
Epoch Step: 155 / 819 Loss: 17.003536224365234 Tokens per Sec: 13359.899543987907
Epoch Step: 160 / 819 Loss: 15.546285629272461 Tokens per Sec: 16056.414257970657
Epoch Step: 165 / 819 Loss: 16.06597328186035 Tokens per Sec: 14165.732180008557
Epoch Step: 170 / 819 Loss: 15.78799819946289 Tokens per Sec: 14548.35858265276
Epoch Step: 175 / 819 Loss: 11.810502052307129 Tokens per Sec: 12996.692698532726
Epoch Step: 180 / 819 Loss: 15.787500381469727 Tokens per Sec: 16127.36067328642
Epoch Step: 185 / 819 Loss: 20.17650604248047 Tokens per Sec: 15326.594007836817
Epoch Step: 190 / 819 Loss: 159.96469116210938 Tokens per Sec: 13247.495483219303
Epoch Step: 195 / 819 Loss: 17.300945281982422 Tokens per Sec: 12657.49206704094
Epoch Step: 200 / 819 Loss: 13.103554725646973 Tokens per Sec: 14211.634559721548
Epoch Step: 205 / 819 Loss: 19.38746452331543 Tokens per Sec: 14097.230624501439
Epoch Step: 210 / 819 Loss: 18.62088394165039 Tokens per Sec: 14259.451744474682
Epoch Step: 215 / 819 Loss: 14.456588745117188 Tokens per Sec: 12472.831181862055
Epoch Step: 220 / 819 Loss: 16.647214889526367 Tokens per Sec: 13335.998955024961
Epoch Step: 225 / 819 Loss: 14.149959564208984 Tokens per Sec: 13550.98981194662
Epoch Step: 230 / 819 Loss: 15.89380168914795 Tokens per Sec: 16299.613902817007
Epoch Step: 235 / 819 Loss: 251.4552459716797 Tokens per Sec: 13906.471783861327
Epoch Step: 240 / 819 Loss: 213.68551635742188 Tokens per Sec: 15961.75327866189
Epoch Step: 245 / 819 Loss: 14.981383323669434 Tokens per Sec: 13987.65635691504
Epoch Step: 250 / 819 Loss: 13.798859596252441 Tokens per Sec: 14097.068258064848
Epoch Step: 255 / 819 Loss: 18.645830154418945 Tokens per Sec: 15554.742687400058
Epoch Step: 260 / 819 Loss: 15.331113815307617 Tokens per Sec: 14470.609895316404
Epoch Step: 265 / 819 Loss: 15.890474319458008 Tokens per Sec: 14076.594570599817
Epoch Step: 270 / 819 Loss: 13.534893035888672 Tokens per Sec: 13668.436257115647
Epoch Step: 275 / 819 Loss: 17.48560905456543 Tokens per Sec: 13579.37925911636
Epoch Step: 280 / 819 Loss: 13.897283554077148 Tokens per Sec: 13581.809985770575
Epoch Step: 285 / 819 Loss: 18.760072708129883 Tokens per Sec: 12746.803073978901
Epoch Step: 290 / 819 Loss: 16.38292121887207 Tokens per Sec: 14597.02198266394
Epoch Step: 295 / 819 Loss: 15.763946533203125 Tokens per Sec: 14069.129735016166
Epoch Step: 300 / 819 Loss: 16.32146644592285 Tokens per Sec: 14094.377317683979
Epoch Step: 305 / 819 Loss: 13.401741981506348 Tokens per Sec: 12630.69209065184
Epoch Step: 310 / 819 Loss: 16.039016723632812 Tokens per Sec: 13084.199799413844
Epoch Step: 315 / 819 Loss: 16.55908203125 Tokens per Sec: 13566.739817549138
Epoch Step: 320 / 819 Loss: 206.9534912109375 Tokens per Sec: 12852.74081326139
Epoch Step: 325 / 819 Loss: 15.136001586914062 Tokens per Sec: 13033.990367450111
Epoch Step: 330 / 819 Loss: 18.103174209594727 Tokens per Sec: 15465.608139522901
Epoch Step: 335 / 819 Loss: 18.173683166503906 Tokens per Sec: 14444.58583792805
Epoch Step: 340 / 819 Loss: 13.311470031738281 Tokens per Sec: 14032.087912701681
Epoch Step: 345 / 819 Loss: 15.467741012573242 Tokens per Sec: 14084.167088278104
Epoch Step: 350 / 819 Loss: 14.612502098083496 Tokens per Sec: 14659.773621622058
Epoch Step: 355 / 819 Loss: 14.153793334960938 Tokens per Sec: 13061.380893764861
Epoch Step: 360 / 819 Loss: 22.108858108520508 Tokens per Sec: 15166.975175128913
Epoch Step: 365 / 819 Loss: 114.4653549194336 Tokens per Sec: 14210.282754919472
Epoch Step: 370 / 819 Loss: 173.66470336914062 Tokens per Sec: 13664.284837904968
Epoch Step: 375 / 819 Loss: 15.378175735473633 Tokens per Sec: 13431.052050888666
Epoch Step: 380 / 819 Loss: 15.043975830078125 Tokens per Sec: 14185.144309105417
Epoch Step: 385 / 819 Loss: 223.04556274414062 Tokens per Sec: 14759.410429383395
Epoch Step: 390 / 819 Loss: 17.258159637451172 Tokens per Sec: 13361.634458885992
Epoch Step: 395 / 819 Loss: 14.260451316833496 Tokens per Sec: 14514.630365718274
Epoch Step: 400 / 819 Loss: 15.105576515197754 Tokens per Sec: 13329.71861975948
Epoch Step: 405 / 819 Loss: 15.330257415771484 Tokens per Sec: 13301.073901109248
Epoch Step: 410 / 819 Loss: 14.437948226928711 Tokens per Sec: 12558.223955303743
Epoch Step: 415 / 819 Loss: 18.045806884765625 Tokens per Sec: 14621.556838374761
Epoch Step: 420 / 819 Loss: 20.87306022644043 Tokens per Sec: 14058.471809166196
Epoch Step: 425 / 819 Loss: 17.917509078979492 Tokens per Sec: 13511.246441882935
Epoch Step: 430 / 819 Loss: 14.842545509338379 Tokens per Sec: 15043.048963113093
Epoch Step: 435 / 819 Loss: 14.579776763916016 Tokens per Sec: 15276.400248355581
Epoch Step: 440 / 819 Loss: 17.151874542236328 Tokens per Sec: 15320.353750803255
Epoch Step: 445 / 819 Loss: 17.14737892150879 Tokens per Sec: 15113.262331713879
Epoch Step: 450 / 819 Loss: 14.171626091003418 Tokens per Sec: 13897.097474784936
Epoch Step: 455 / 819 Loss: 15.858509063720703 Tokens per Sec: 14091.36427093779
Epoch Step: 460 / 819 Loss: 13.544081687927246 Tokens per Sec: 13473.32983549436
Epoch Step: 465 / 819 Loss: 16.253002166748047 Tokens per Sec: 13304.86813677036
Epoch Step: 470 / 819 Loss: 14.758548736572266 Tokens per Sec: 14507.42163008313
Epoch Step: 475 / 819 Loss: 15.429250717163086 Tokens per Sec: 13708.624754248902
Epoch Step: 480 / 819 Loss: 13.28955364227295 Tokens per Sec: 13878.36765615881
Epoch Step: 485 / 819 Loss: 17.81093978881836 Tokens per Sec: 13521.083686196193
Epoch Step: 490 / 819 Loss: 14.168617248535156 Tokens per Sec: 14381.861072289857
Epoch Step: 495 / 819 Loss: 13.339566230773926 Tokens per Sec: 14144.338818555292
Epoch Step: 500 / 819 Loss: 20.384319305419922 Tokens per Sec: 14703.391831497349
Epoch Step: 505 / 819 Loss: 16.338642120361328 Tokens per Sec: 13977.797846009427
Epoch Step: 510 / 819 Loss: 170.2821502685547 Tokens per Sec: 14528.350008007727
Epoch Step: 515 / 819 Loss: 15.579577445983887 Tokens per Sec: 13517.304642060295
Epoch Step: 520 / 819 Loss: 16.61563491821289 Tokens per Sec: 13961.436955853706
Epoch Step: 525 / 819 Loss: 21.64952278137207 Tokens per Sec: 13372.979392642757
Epoch Step: 530 / 819 Loss: 14.417076110839844 Tokens per Sec: 13760.904655113201
Epoch Step: 535 / 819 Loss: 15.55455207824707 Tokens per Sec: 13695.30192892717
Epoch Step: 540 / 819 Loss: 14.994466781616211 Tokens per Sec: 15440.428088048982
Epoch Step: 545 / 819 Loss: 15.654722213745117 Tokens per Sec: 15502.529827578037
Epoch Step: 550 / 819 Loss: 15.100719451904297 Tokens per Sec: 13805.938779047165
Epoch Step: 555 / 819 Loss: 17.88701057434082 Tokens per Sec: 14660.175241040097
Epoch Step: 560 / 819 Loss: 107.20760345458984 Tokens per Sec: 13632.861990219537
Epoch Step: 565 / 819 Loss: 15.777297973632812 Tokens per Sec: 13632.268159924815
Epoch Step: 570 / 819 Loss: 19.287260055541992 Tokens per Sec: 13020.777106311838
Epoch Step: 575 / 819 Loss: 18.24114990234375 Tokens per Sec: 14230.727732969279
Epoch Step: 580 / 819 Loss: 14.562390327453613 Tokens per Sec: 14958.094690695129
Epoch Step: 585 / 819 Loss: 15.633739471435547 Tokens per Sec: 13834.325874288576
Epoch Step: 590 / 819 Loss: 13.69471263885498 Tokens per Sec: 14743.34040231553
Epoch Step: 595 / 819 Loss: 90.74027252197266 Tokens per Sec: 13680.729413769508
Epoch Step: 600 / 819 Loss: 12.68325138092041 Tokens per Sec: 13120.457472855978
Epoch Step: 605 / 819 Loss: 12.172741889953613 Tokens per Sec: 13234.32977140018
Epoch Step: 610 / 819 Loss: 17.6035099029541 Tokens per Sec: 14062.3138072988
Epoch Step: 615 / 819 Loss: 15.964427947998047 Tokens per Sec: 13509.238326779043
Epoch Step: 620 / 819 Loss: 18.01491355895996 Tokens per Sec: 15086.004145634473
Epoch Step: 625 / 819 Loss: 17.140981674194336 Tokens per Sec: 14131.983163761563
Epoch Step: 630 / 819 Loss: 227.0144500732422 Tokens per Sec: 13629.72587115523
Epoch Step: 635 / 819 Loss: 22.245304107666016 Tokens per Sec: 13443.701928646371
Epoch Step: 640 / 819 Loss: 16.31722640991211 Tokens per Sec: 12841.668882570895
Epoch Step: 645 / 819 Loss: 18.623695373535156 Tokens per Sec: 13408.790055192041
Epoch Step: 650 / 819 Loss: 19.531705856323242 Tokens per Sec: 13778.142602419226
Epoch Step: 655 / 819 Loss: 21.57390785217285 Tokens per Sec: 13647.825347700893
Epoch Step: 660 / 819 Loss: 19.213462829589844 Tokens per Sec: 14193.449141846233
Epoch Step: 665 / 819 Loss: 20.93583106994629 Tokens per Sec: 14960.079493643945
Epoch Step: 670 / 819 Loss: 12.596051216125488 Tokens per Sec: 13385.933366129755
Epoch Step: 675 / 819 Loss: 88.17493438720703 Tokens per Sec: 14535.075977005647
Epoch Step: 680 / 819 Loss: 19.432586669921875 Tokens per Sec: 14533.128117397468
Epoch Step: 685 / 819 Loss: 16.79497528076172 Tokens per Sec: 15027.646712940572
Epoch Step: 690 / 819 Loss: 20.172452926635742 Tokens per Sec: 16100.097940943553
Epoch Step: 695 / 819 Loss: 18.796812057495117 Tokens per Sec: 13633.798729489967
Epoch Step: 700 / 819 Loss: 12.858774185180664 Tokens per Sec: 13026.610960947393
Epoch Step: 705 / 819 Loss: 14.869779586791992 Tokens per Sec: 14660.33599728872
Epoch Step: 710 / 819 Loss: 15.000622749328613 Tokens per Sec: 12473.810520866862
Epoch Step: 715 / 819 Loss: 13.80601692199707 Tokens per Sec: 15107.78607823158
Epoch Step: 720 / 819 Loss: 15.371317863464355 Tokens per Sec: 13261.932082840089
Epoch Step: 725 / 819 Loss: 182.84912109375 Tokens per Sec: 12274.719574809778
Epoch Step: 730 / 819 Loss: 16.00081443786621 Tokens per Sec: 13367.36746066483
Epoch Step: 735 / 819 Loss: 20.220138549804688 Tokens per Sec: 16084.471840850782
Epoch Step: 740 / 819 Loss: 18.147069931030273 Tokens per Sec: 14905.547745116524
Epoch Step: 745 / 819 Loss: 19.12367820739746 Tokens per Sec: 14114.287281510507
Epoch Step: 750 / 819 Loss: 21.71546173095703 Tokens per Sec: 14154.9202587706
Epoch Step: 755 / 819 Loss: 21.45322608947754 Tokens per Sec: 14084.900553151756
Epoch Step: 760 / 819 Loss: 105.51608276367188 Tokens per Sec: 12829.45296274541
Epoch Step: 765 / 819 Loss: 13.472404479980469 Tokens per Sec: 13766.629866318763
Epoch Step: 770 / 819 Loss: 13.497284889221191 Tokens per Sec: 13972.109038141723
Epoch Step: 775 / 819 Loss: 16.130535125732422 Tokens per Sec: 13895.22876385862
Epoch Step: 780 / 819 Loss: 19.217809677124023 Tokens per Sec: 12541.345239790071
Epoch Step: 785 / 819 Loss: 203.74227905273438 Tokens per Sec: 13258.775193587191
Epoch Step: 790 / 819 Loss: 16.139728546142578 Tokens per Sec: 14279.417641092767
Epoch Step: 795 / 819 Loss: 18.719242095947266 Tokens per Sec: 13735.960677007675
Epoch Step: 800 / 819 Loss: 150.66603088378906 Tokens per Sec: 14325.13031347711
Epoch Step: 805 / 819 Loss: 13.735485076904297 Tokens per Sec: 10817.379118138739
Epoch Step: 810 / 819 Loss: 16.4506893157959 Tokens per Sec: 13760.92228010295
Epoch Step: 815 / 819 Loss: 14.191749572753906 Tokens per Sec: 14126.074399177909
Epoch ended with duration 0:04:38.426425
Train perplexity: 1.560296809800042
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:26.508538
Validation perplexity: 1.6621243634742184
Epoch 54 / 1000
Epoch Step: 5 / 819 Loss: 13.175106048583984 Tokens per Sec: 12560.170299076475
Epoch Step: 10 / 819 Loss: 14.187357902526855 Tokens per Sec: 14412.662486055473
Epoch Step: 15 / 819 Loss: 15.563375473022461 Tokens per Sec: 14471.315754206633
Epoch Step: 20 / 819 Loss: 14.188539505004883 Tokens per Sec: 12110.406875718683
Epoch Step: 25 / 819 Loss: 11.482359886169434 Tokens per Sec: 15953.20721698795
Epoch Step: 30 / 819 Loss: 14.752303123474121 Tokens per Sec: 15201.327628648221
Epoch Step: 35 / 819 Loss: 19.891342163085938 Tokens per Sec: 13907.465890248734
Epoch Step: 40 / 819 Loss: 104.0733642578125 Tokens per Sec: 14057.536838364407
Epoch Step: 45 / 819 Loss: 20.449609756469727 Tokens per Sec: 16293.624170648214
Epoch Step: 50 / 819 Loss: 14.780862808227539 Tokens per Sec: 13482.174520880297
Epoch Step: 55 / 819 Loss: 20.475400924682617 Tokens per Sec: 15043.737939080604
Epoch Step: 60 / 819 Loss: 16.134830474853516 Tokens per Sec: 14646.528405328
Epoch Step: 65 / 819 Loss: 15.465760231018066 Tokens per Sec: 13838.115738554923
Epoch Step: 70 / 819 Loss: 15.654435157775879 Tokens per Sec: 13222.530148343643
Epoch Step: 75 / 819 Loss: 12.425699234008789 Tokens per Sec: 13039.133697820731
Epoch Step: 80 / 819 Loss: 13.657554626464844 Tokens per Sec: 13935.680306893004
Epoch Step: 85 / 819 Loss: 20.632116317749023 Tokens per Sec: 14350.464061387898
Epoch Step: 90 / 819 Loss: 16.365245819091797 Tokens per Sec: 15150.118358660544
Epoch Step: 95 / 819 Loss: 17.926557540893555 Tokens per Sec: 13321.306449210295
Epoch Step: 100 / 819 Loss: 11.238990783691406 Tokens per Sec: 13557.302329212469
Epoch Step: 105 / 819 Loss: 16.440914154052734 Tokens per Sec: 16693.34074084563
Epoch Step: 110 / 819 Loss: 19.267745971679688 Tokens per Sec: 15919.348576599228
Epoch Step: 115 / 819 Loss: 18.819293975830078 Tokens per Sec: 14020.625467552996
Epoch Step: 120 / 819 Loss: 103.1764144897461 Tokens per Sec: 13688.624382359576
Epoch Step: 125 / 819 Loss: 19.14332389831543 Tokens per Sec: 13865.590859140399
Epoch Step: 130 / 819 Loss: 13.620366096496582 Tokens per Sec: 13431.523200792182
Epoch Step: 135 / 819 Loss: 16.26519203186035 Tokens per Sec: 13732.483178171897
Epoch Step: 140 / 819 Loss: 14.224349021911621 Tokens per Sec: 15574.191116722375
Epoch Step: 145 / 819 Loss: 16.04169464111328 Tokens per Sec: 14854.855488513724
Epoch Step: 150 / 819 Loss: 14.32142448425293 Tokens per Sec: 14614.019101004962
Epoch Step: 155 / 819 Loss: 147.48284912109375 Tokens per Sec: 13921.284290619791
Epoch Step: 160 / 819 Loss: 12.967436790466309 Tokens per Sec: 15943.633801261783
Epoch Step: 165 / 819 Loss: 17.15810775756836 Tokens per Sec: 13229.380055649342
Epoch Step: 170 / 819 Loss: 11.559228897094727 Tokens per Sec: 13115.475635362298
Epoch Step: 175 / 819 Loss: 11.578857421875 Tokens per Sec: 13010.329121527602
Epoch Step: 180 / 819 Loss: 13.72261905670166 Tokens per Sec: 13224.131204716705
Epoch Step: 185 / 819 Loss: 16.052370071411133 Tokens per Sec: 15673.254904837284
Epoch Step: 190 / 819 Loss: 14.597204208374023 Tokens per Sec: 13764.39164386543
Epoch Step: 195 / 819 Loss: 16.155981063842773 Tokens per Sec: 15861.387573963237
Epoch Step: 200 / 819 Loss: 13.017742156982422 Tokens per Sec: 14065.669964084345
Epoch Step: 205 / 819 Loss: 14.495275497436523 Tokens per Sec: 14054.934465924183
Epoch Step: 210 / 819 Loss: 18.3983097076416 Tokens per Sec: 13180.087195028103
Epoch Step: 215 / 819 Loss: 15.888683319091797 Tokens per Sec: 15130.131008887518
Epoch Step: 220 / 819 Loss: 14.905303001403809 Tokens per Sec: 13530.359035303212
Epoch Step: 225 / 819 Loss: 21.50850486755371 Tokens per Sec: 16715.166260523092
Epoch Step: 230 / 819 Loss: 16.271888732910156 Tokens per Sec: 15062.340092791888
Epoch Step: 235 / 819 Loss: 15.122546195983887 Tokens per Sec: 14360.080922683259
Epoch Step: 240 / 819 Loss: 13.205791473388672 Tokens per Sec: 13485.719381485214
Epoch Step: 245 / 819 Loss: 16.22602653503418 Tokens per Sec: 14900.833725946095
Epoch Step: 250 / 819 Loss: 16.709125518798828 Tokens per Sec: 13603.151114140019
Epoch Step: 255 / 819 Loss: 18.96242332458496 Tokens per Sec: 13434.26823907088
Epoch Step: 260 / 819 Loss: 12.913046836853027 Tokens per Sec: 14380.608313346995
Epoch Step: 265 / 819 Loss: 15.819414138793945 Tokens per Sec: 13734.117149622181
Epoch Step: 270 / 819 Loss: 17.450374603271484 Tokens per Sec: 13265.088868912164
Epoch Step: 275 / 819 Loss: 16.76487159729004 Tokens per Sec: 12975.178248064483
Epoch Step: 280 / 819 Loss: 13.37016773223877 Tokens per Sec: 12822.093684914977
Epoch Step: 285 / 819 Loss: 17.768510818481445 Tokens per Sec: 13658.576438081216
Epoch Step: 290 / 819 Loss: 16.034910202026367 Tokens per Sec: 15244.618422171092
Epoch Step: 295 / 819 Loss: 18.797521591186523 Tokens per Sec: 13123.420542827045
Epoch Step: 300 / 819 Loss: 20.253856658935547 Tokens per Sec: 13640.994230823884
Epoch Step: 305 / 819 Loss: 14.231135368347168 Tokens per Sec: 15069.389267945558
Epoch Step: 310 / 819 Loss: 14.608951568603516 Tokens per Sec: 14815.657493652077
Epoch Step: 315 / 819 Loss: 15.008904457092285 Tokens per Sec: 13337.724474960884
Epoch Step: 320 / 819 Loss: 14.370885848999023 Tokens per Sec: 14499.971320299292
Epoch Step: 325 / 819 Loss: 14.74236011505127 Tokens per Sec: 12848.509726333645
Epoch Step: 330 / 819 Loss: 11.579718589782715 Tokens per Sec: 14921.986229531525
Epoch Step: 335 / 819 Loss: 168.08177185058594 Tokens per Sec: 12241.09261111505
Epoch Step: 340 / 819 Loss: 16.827930450439453 Tokens per Sec: 12075.709024393474
Epoch Step: 345 / 819 Loss: 17.16663932800293 Tokens per Sec: 14605.593145351051
Epoch Step: 350 / 819 Loss: 17.74403190612793 Tokens per Sec: 15775.970361755028
Epoch Step: 355 / 819 Loss: 16.810352325439453 Tokens per Sec: 14782.621844652329
Epoch Step: 360 / 819 Loss: 16.82184410095215 Tokens per Sec: 13449.957558154036
Epoch Step: 365 / 819 Loss: 19.68752098083496 Tokens per Sec: 14339.112358555729
Epoch Step: 370 / 819 Loss: 214.88003540039062 Tokens per Sec: 13488.439289947564
Epoch Step: 375 / 819 Loss: 20.450439453125 Tokens per Sec: 14695.559622480643
Epoch Step: 380 / 819 Loss: 15.20902156829834 Tokens per Sec: 12587.40133051647
Epoch Step: 385 / 819 Loss: 15.080348014831543 Tokens per Sec: 14143.616488651727
Epoch Step: 390 / 819 Loss: 13.376253128051758 Tokens per Sec: 13676.105275593478
Epoch Step: 395 / 819 Loss: 17.933435440063477 Tokens per Sec: 13835.424948563821
Epoch Step: 400 / 819 Loss: 16.416492462158203 Tokens per Sec: 14239.081457996104
Epoch Step: 405 / 819 Loss: 18.570091247558594 Tokens per Sec: 15221.405684581974
Epoch Step: 410 / 819 Loss: 12.377366065979004 Tokens per Sec: 12745.54998493759
Epoch Step: 415 / 819 Loss: 14.083374977111816 Tokens per Sec: 14831.905336872585
Epoch Step: 420 / 819 Loss: 14.255071640014648 Tokens per Sec: 13117.61440683784
Epoch Step: 425 / 819 Loss: 17.10370635986328 Tokens per Sec: 13109.746623263058
Epoch Step: 430 / 819 Loss: 20.4890079498291 Tokens per Sec: 13947.933105690929
Epoch Step: 435 / 819 Loss: 11.763763427734375 Tokens per Sec: 12290.037047609048
Epoch Step: 440 / 819 Loss: 16.82732582092285 Tokens per Sec: 14035.522164815362
Epoch Step: 445 / 819 Loss: 20.012039184570312 Tokens per Sec: 12934.167231690233
Epoch Step: 450 / 819 Loss: 13.793560981750488 Tokens per Sec: 13928.842283164524
Epoch Step: 455 / 819 Loss: 12.922069549560547 Tokens per Sec: 13719.739579656029
Epoch Step: 460 / 819 Loss: 15.728317260742188 Tokens per Sec: 15595.288753489107
Epoch Step: 465 / 819 Loss: 18.769515991210938 Tokens per Sec: 14011.843895819784
Epoch Step: 470 / 819 Loss: 12.377355575561523 Tokens per Sec: 13657.705824361583
Epoch Step: 475 / 819 Loss: 198.60877990722656 Tokens per Sec: 13973.660482502952
Epoch Step: 480 / 819 Loss: 16.850971221923828 Tokens per Sec: 15074.478802522166
Epoch Step: 485 / 819 Loss: 18.468196868896484 Tokens per Sec: 13979.291454200235
Epoch Step: 490 / 819 Loss: 15.160211563110352 Tokens per Sec: 15723.359689622497
Epoch Step: 495 / 819 Loss: 19.121492385864258 Tokens per Sec: 13978.515871973214
Epoch Step: 500 / 819 Loss: 218.89984130859375 Tokens per Sec: 14049.191432269561
Epoch Step: 505 / 819 Loss: 18.681610107421875 Tokens per Sec: 12954.367883152478
Epoch Step: 510 / 819 Loss: 14.140732765197754 Tokens per Sec: 11700.40464685098
Epoch Step: 515 / 819 Loss: 19.955825805664062 Tokens per Sec: 14402.57151986056
Epoch Step: 520 / 819 Loss: 15.368311882019043 Tokens per Sec: 13277.962752648651
Epoch Step: 525 / 819 Loss: 17.34640121459961 Tokens per Sec: 14055.1022861966
Epoch Step: 530 / 819 Loss: 12.21442985534668 Tokens per Sec: 14557.147690837017
Epoch Step: 535 / 819 Loss: 18.769994735717773 Tokens per Sec: 14646.791767742354
Epoch Step: 540 / 819 Loss: 12.394726753234863 Tokens per Sec: 14642.484824442276
Epoch Step: 545 / 819 Loss: 16.12993812561035 Tokens per Sec: 14664.587572826536
Epoch Step: 550 / 819 Loss: 110.37386322021484 Tokens per Sec: 15746.454663069053
Epoch Step: 555 / 819 Loss: 14.011306762695312 Tokens per Sec: 13868.243869238699
Epoch Step: 560 / 819 Loss: 15.95258617401123 Tokens per Sec: 17633.652240455096
Epoch Step: 565 / 819 Loss: 18.680278778076172 Tokens per Sec: 12976.57263748976
Epoch Step: 570 / 819 Loss: 18.489425659179688 Tokens per Sec: 15371.213988420159
Epoch Step: 575 / 819 Loss: 19.785078048706055 Tokens per Sec: 13034.384597153821
Epoch Step: 580 / 819 Loss: 14.018914222717285 Tokens per Sec: 13468.489892132073
Epoch Step: 585 / 819 Loss: 19.051122665405273 Tokens per Sec: 15587.825550737334
Epoch Step: 590 / 819 Loss: 15.229663848876953 Tokens per Sec: 13155.526151039803
Epoch Step: 595 / 819 Loss: 18.03232192993164 Tokens per Sec: 15285.873081087917
Epoch Step: 600 / 819 Loss: 18.15926170349121 Tokens per Sec: 13762.55001556151
Epoch Step: 605 / 819 Loss: 20.194665908813477 Tokens per Sec: 13577.947774861073
Epoch Step: 610 / 819 Loss: 16.185094833374023 Tokens per Sec: 13583.208022442452
Epoch Step: 615 / 819 Loss: 16.53033447265625 Tokens per Sec: 13701.54544465794
Epoch Step: 620 / 819 Loss: 19.0295352935791 Tokens per Sec: 15609.366362177143
Epoch Step: 625 / 819 Loss: 148.8341522216797 Tokens per Sec: 13159.145284194537
Epoch Step: 630 / 819 Loss: 19.436874389648438 Tokens per Sec: 16016.266295679343
Epoch Step: 635 / 819 Loss: 15.885833740234375 Tokens per Sec: 14196.102947538824
Epoch Step: 640 / 819 Loss: 16.837291717529297 Tokens per Sec: 12700.52625246429
Epoch Step: 645 / 819 Loss: 15.302607536315918 Tokens per Sec: 14061.189562694266
Epoch Step: 650 / 819 Loss: 16.61765480041504 Tokens per Sec: 12917.847125005583
Epoch Step: 655 / 819 Loss: 12.250980377197266 Tokens per Sec: 13699.445222300257
Epoch Step: 660 / 819 Loss: 15.74386215209961 Tokens per Sec: 13089.844577438973
Epoch Step: 665 / 819 Loss: 18.06888198852539 Tokens per Sec: 13939.24016502408
Epoch Step: 670 / 819 Loss: 16.375904083251953 Tokens per Sec: 14231.512228029456
Epoch Step: 675 / 819 Loss: 19.85506820678711 Tokens per Sec: 12556.081448819987
Epoch Step: 680 / 819 Loss: 13.6168794631958 Tokens per Sec: 14214.60448703145
Epoch Step: 685 / 819 Loss: 15.526409149169922 Tokens per Sec: 12593.788996049918
Epoch Step: 690 / 819 Loss: 10.449553489685059 Tokens per Sec: 13624.24804010568
Epoch Step: 695 / 819 Loss: 76.42503356933594 Tokens per Sec: 15450.298295304805
Epoch Step: 700 / 819 Loss: 239.00050354003906 Tokens per Sec: 14312.580521451871
Epoch Step: 705 / 819 Loss: 11.951491355895996 Tokens per Sec: 13040.3337399585
Epoch Step: 710 / 819 Loss: 17.519742965698242 Tokens per Sec: 15759.853830597138
Epoch Step: 715 / 819 Loss: 16.845792770385742 Tokens per Sec: 14025.81901038608
Epoch Step: 720 / 819 Loss: 18.739974975585938 Tokens per Sec: 14778.741156542419
Epoch Step: 725 / 819 Loss: 14.18204402923584 Tokens per Sec: 14139.424241646686
Epoch Step: 730 / 819 Loss: 20.913881301879883 Tokens per Sec: 13464.033322719286
Epoch Step: 735 / 819 Loss: 18.88196563720703 Tokens per Sec: 14903.85057232985
Epoch Step: 740 / 819 Loss: 12.134458541870117 Tokens per Sec: 16485.359532447885
Epoch Step: 745 / 819 Loss: 16.5924129486084 Tokens per Sec: 14226.39627250121
Epoch Step: 750 / 819 Loss: 19.549802780151367 Tokens per Sec: 13891.303705798136
Epoch Step: 755 / 819 Loss: 14.240509033203125 Tokens per Sec: 13922.46066187356
Epoch Step: 760 / 819 Loss: 15.556591033935547 Tokens per Sec: 13910.110327472235
Epoch Step: 765 / 819 Loss: 13.391965866088867 Tokens per Sec: 14068.978868429362
Epoch Step: 770 / 819 Loss: 13.968269348144531 Tokens per Sec: 15334.20966604201
Epoch Step: 775 / 819 Loss: 200.24180603027344 Tokens per Sec: 14502.540250441076
Epoch Step: 780 / 819 Loss: 16.779050827026367 Tokens per Sec: 13553.4686886795
Epoch Step: 785 / 819 Loss: 12.916008949279785 Tokens per Sec: 14342.109448388195
Epoch Step: 790 / 819 Loss: 18.26481056213379 Tokens per Sec: 12809.386428285741
Epoch Step: 795 / 819 Loss: 19.37640380859375 Tokens per Sec: 13705.896588090849
Epoch Step: 800 / 819 Loss: 15.025224685668945 Tokens per Sec: 14886.778092804709
Epoch Step: 805 / 819 Loss: 16.878625869750977 Tokens per Sec: 13611.510916863157
Epoch Step: 810 / 819 Loss: 14.344636917114258 Tokens per Sec: 12525.341855003273
Epoch Step: 815 / 819 Loss: 16.189838409423828 Tokens per Sec: 12526.294893297392
Epoch ended with duration 0:04:36.397516
Train perplexity: 1.5357202370803897
Example #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . info ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 out = VAR_1 . METHOD_3 ( ) . buffer ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_4 = INT_1 ; VAR_3 . METHOD_4 ( VAR_5 ) ; out . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( out ) ; }[0m
Example #2[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_2 . METHOD_4 ( new TYPE_4 ( INT_2 , INT_3 ) , VAR_3 , VAR_1 ) ) == true ) ) ; }[0m
Example #3[0m
Src : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , title ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.String title , java.lang.String msg ) { VAR_1 . info ( ( STRING_1 + title ) ) ; try { TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . add ( STRING_2 , msg ) . build ( ) , VAR_3 ) . execute ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_1 . error ( STRING_3 , VAR_4 ) ; } }[0m
Epoch ended with duration 0:00:25.820074
Validation perplexity: 1.6280692714490792
Training was early stopped on epoch 55 with early stopping rounds 25
[17.368388984050977, 7.884312056291502, 5.243459634799661, 3.6243606420309677, 2.6984925474715395, 2.367452367958972, 2.1442355264142043, 1.966044039275168, 2.015756248003074, 1.904526897557684, 1.802207314611679, 1.8337634165426693, 1.6801470692483356, 1.7377330145708654, 1.6694938822954768, 1.7234628044408427, 1.6189174384066105, 1.643483909848477, 1.7249998545311882, 1.6282731379932547, 1.6464435896708158, 1.6460463318999263, 1.663403655048628, 1.6683829578023641, 1.6338921427345223, 1.5941118943385173, 1.6838776859920124, 1.6709928682188222, 1.4995579954328433, 1.6300282326775704, 1.55701790598441, 1.5793067975219917, 1.6191693889716836, 1.5920072515368597, 1.59219449725889, 1.584517085664295, 1.5794738064422265, 1.5716101510610958, 1.6038795477257075, 1.5284966652188465, 1.5863746132069594, 1.606220968925052, 1.5595283846397734, 1.626127368932014, 1.586627968604204, 1.580433144073743, 1.508989364610512, 1.530812709587935, 1.5584655385722426, 1.5257760911196514, 1.5089863156753813, 1.5512933405321656, 1.472248762513656, 1.560296809800042, 1.5357202370803897]
[9.453654545136049, 5.695917429349712, 3.916414656197157, 2.6583027251847167, 2.490690377999227, 2.355227679383066, 2.0720523254102567, 2.043159084483221, 1.822988537734164, 1.7728836269721115, 1.762160432369135, 1.6891066015667746, 1.5237405679009541, 1.6214323934598867, 1.8577502709354765, 1.4999755977477114, 1.762345806404752, 1.5706400343732367, 2.05014158315203, 1.672808336376706, 1.6039676452118337, 1.622758341651832, 1.7766706113006432, 1.5326207871798956, 1.7395589827643423, 1.6800289649959042, 1.670164274497958, 1.5589152112436153, 1.5653892692565192, 1.3205958981822967, 1.601050495345595, 1.7100191974678782, 1.4810484133500958, 1.6101716417000023, 1.5034121079122997, 1.594773190828476, 1.6040738074629894, 1.5056625470347331, 1.5647668785441449, 1.6688391994320675, 1.6390709898404334, 1.4828169604598587, 1.4537638755900768, 1.5217420063482487, 1.5210037743104534, 1.4477796959478697, 1.5782965244141534, 1.5235809183683964, 1.6289620661161481, 1.538661760228925, 1.7732506024107049, 1.5162696608954032, 1.5495521241285783, 1.6621243634742184, 1.6280692714490792]
Model saved checkpoint!

====STARTING EVALUATION====
Data set sizes (number of sentence pairs):
train 52364
valid 6546
test 6545 

First training example:
src: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
trg: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = null ; if ( date != null ) { VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; } VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
diff_alignment: добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг
diff_updated: null ; if ( date != null ) { VAR_2 = } 

Most common words:
         (    1161894
         )    1161834
         ;     560486
         .     507926
   паддинг     402443
     VAR_1     294376
         }     265934
         {     265752
         ,     245004
  удаление     239732 

First 10 words:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 .
08 паддинг
09 VAR_1 

Special words frequency and ids: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 58185 33
удаление 239732 13
добавление 162711 17
равенство 0 0
паддинг 402443 8
Number of words (types): 497
Start conducting accuracy calculation experiment for Tufano Labeled 0 50 Code Changes...
BUG FIXING ACCURACY
Top-1 accuracy: 5 / 388 = 0.01288659793814433
Top-3 accuracy: 20 / 388 = 0.05154639175257732
Top-5 accuracy: 28 / 388 = 0.07216494845360824
Top-10 accuracy: 37 / 388 = 0.09536082474226804
Top-50 accuracy: 56 / 388 = 0.14432989690721648
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 5 / 388 = 0.01288659793814433
Top-3 accuracy: 22 / 388 = 0.05670103092783505
Top-5 accuracy: 30 / 388 = 0.07731958762886598
Top-10 accuracy: 39 / 388 = 0.10051546391752578
Top-50 accuracy: 58 / 388 = 0.14948453608247422
Duration: 0:03:54.128032

Start conducting accuracy calculation experiment for Tufano Labeled 50 100 Code Changes...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 244 = 0.004098360655737705
Top-3 accuracy: 7 / 244 = 0.028688524590163935
Top-5 accuracy: 10 / 244 = 0.040983606557377046
Top-10 accuracy: 13 / 244 = 0.05327868852459016
Top-50 accuracy: 13 / 244 = 0.05327868852459016
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 244 = 0.004098360655737705
Top-3 accuracy: 6 / 244 = 0.02459016393442623
Top-5 accuracy: 10 / 244 = 0.040983606557377046
Top-10 accuracy: 13 / 244 = 0.05327868852459016
Top-50 accuracy: 13 / 244 = 0.05327868852459016
Duration: 0:02:27.244845

Start conducting accuracy calculation experiment for Defects4J...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 20 = 0.0
Top-3 accuracy: 0 / 20 = 0.0
Top-5 accuracy: 0 / 20 = 0.0
Top-10 accuracy: 1 / 20 = 0.05
Top-50 accuracy: 1 / 20 = 0.05
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 0 / 20 = 0.0
Top-3 accuracy: 0 / 20 = 0.0
Top-5 accuracy: 0 / 20 = 0.0
Top-10 accuracy: 1 / 20 = 0.05
Top-50 accuracy: 1 / 20 = 0.05
Duration: 0:00:20.761306

Start conducting accuracy calculation experiment for Test dataset 300...
BUG FIXING ACCURACY
Top-1 accuracy: 5 / 300 = 0.016666666666666666
Top-3 accuracy: 25 / 300 = 0.08333333333333333
Top-5 accuracy: 35 / 300 = 0.11666666666666667
Top-10 accuracy: 41 / 300 = 0.13666666666666666
Top-50 accuracy: 64 / 300 = 0.21333333333333335
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 6 / 300 = 0.02
Top-3 accuracy: 25 / 300 = 0.08333333333333333
Top-5 accuracy: 36 / 300 = 0.12
Top-10 accuracy: 42 / 300 = 0.14
Top-50 accuracy: 65 / 300 = 0.21666666666666667
Duration: 0:02:56.282563

Start conducting accuracy calculation experiment for Validation dataset 300...
BUG FIXING ACCURACY
Top-1 accuracy: 3 / 300 = 0.01
Top-3 accuracy: 24 / 300 = 0.08
Top-5 accuracy: 34 / 300 = 0.11333333333333333
Top-10 accuracy: 44 / 300 = 0.14666666666666667
Top-50 accuracy: 59 / 300 = 0.19666666666666666
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 25 / 300 = 0.08333333333333333
Top-5 accuracy: 34 / 300 = 0.11333333333333333
Top-10 accuracy: 43 / 300 = 0.14333333333333334
Top-50 accuracy: 61 / 300 = 0.20333333333333334
Duration: 0:02:56.430811

Start conducting accuracy calculation experiment for Train dataset 300...
BUG FIXING ACCURACY
Top-1 accuracy: 6 / 300 = 0.02
Top-3 accuracy: 29 / 300 = 0.09666666666666666
Top-5 accuracy: 38 / 300 = 0.12666666666666668
Top-10 accuracy: 57 / 300 = 0.19
Top-50 accuracy: 81 / 300 = 0.27
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 6 / 300 = 0.02
Top-3 accuracy: 29 / 300 = 0.09666666666666666
Top-5 accuracy: 38 / 300 = 0.12666666666666668
Top-10 accuracy: 57 / 300 = 0.19
Top-50 accuracy: 81 / 300 = 0.27
Duration: 0:02:56.528128

Start conducting one shot learning experiment for Tufano Labeled 0 50 Code Changes...
Top-1 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 2 / 64 = 0.03125
Top-3 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 3 / 64 = 0.046875
Top-5 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 4 / 64 = 0.0625
Top-10 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 4 / 64 = 0.0625
Top-50 accuracy on Tufano Labeled 0 50 Code Changes for same edit representations: 6 / 64 = 0.09375

Top-1 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 3 / 324 = 0.009259259259259259
Top-3 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 18 / 324 = 0.05555555555555555
Top-5 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 26 / 324 = 0.08024691358024691
Top-10 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 35 / 324 = 0.10802469135802469
Top-50 accuracy on Tufano Labeled 0 50 Code Changes for other edit representations: 52 / 324 = 0.16049382716049382
================
Correct Examples
Class: Narrow method visibility
Golden example (True):
[32mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { return null ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return null ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return null ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : protected synchronized void METHOD_1 ( ) { }[0m
Trg : public synchronized void METHOD_1 ( ) { }[0m
Pred: public synchronized void METHOD_1 ( ) { }[0m
---------------
Class: Remove parameter from the method invocation
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , <unk> ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }[0m
---------------
Class: Remove statement
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; }[0m
+++++++++++++++
[32mExample #1[0m
Src : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; }[0m
Trg : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
---------------
================
================
Incorrect Examples
Class: Abstract an existing method using the abstract keyword
Golden example (False):
[31mExample #1[0m
Src : void METHOD_1 ( int index , short value ) { throw new TYPE_1 ( ) ; }[0m
Trg : <unk> void METHOD_1 ( int index , short value ) ;[0m
Pred: void METHOD_1 ( int index , short value ) { throw new TYPE_1 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public java.lang.String METHOD_1 ( ) { throw new TYPE_1 ( ) ; }[0m
Trg : public <unk> java.lang.String METHOD_1 ( ) ;[0m
Pred: public java.lang.String METHOD_1 ( ) { throw new TYPE_1 ( ) ; }[0m
[31mExample #2[0m
Src : public synchronized boolean METHOD_1 ( ) { throw new TYPE_1 ( ) ; }[0m
Trg : public <unk> boolean METHOD_1 ( ) ;[0m
Pred: public synchronized boolean METHOD_1 ( ) { throw new TYPE_1 ( ) ; }[0m
[31mExample #3[0m
Src : public java.lang.String METHOD_1 ( java.lang.String url ) { throw new TYPE_1 ( ) ; }[0m
Trg : public <unk> java.lang.String METHOD_1 ( java.lang.String url ) ;[0m
Pred: public java.lang.String METHOD_1 ( java.lang.String url ) { throw new TYPE_1 ( ) ; }[0m
[31mExample #4[0m
Src : float METHOD_1 ( int index ) { throw new TYPE_1 ( ) ; }[0m
Trg : <unk> float METHOD_1 ( int index ) ;[0m
Pred: public void METHOD_1 ( ) { throw new TYPE_1 ( ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) { throw new TYPE_3 ( ) ; }[0m
Trg : public <unk> void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) ;[0m
Pred: public void METHOD_1 ( TYPE_1 < TYPE_2 > ) { throw new TYPE_3 ( ) ; }[0m
---------------
Class: Add invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; } catch ( <unk> <unk> ) { } }[0m
Trg : public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; fail ( ) ; } catch ( <unk> <unk> ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( STRING_1 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public <unk> . <unk> METHOD_1 ( ) { return new <unk> ( <unk> . <unk> ) ; }[0m
Trg : public <unk> . <unk> METHOD_1 ( ) { return new <unk> ( <unk> . get ( ) . <unk> ) ; }[0m
Pred: public java.io.File METHOD_1 ( ) { return new java.util.HashMap ( ) ; }[0m
[31mExample #2[0m
Src : final void METHOD_1 ( int offset , int value ) { VAR_1 . METHOD_2 ( ( offset + ( <unk> ) ) , value ) ; }[0m
Trg : final void METHOD_1 ( int offset , int value ) { VAR_1 . METHOD_1 ( ( offset + ( <unk> ) ) , value ) ; }[0m
Pred: final void METHOD_1 ( int offset , int value ) { VAR_1 . METHOD_2 ( ( offset + ( ) ) , value ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . name = STRING_1 ; VAR_1 = STRING_2 ; METHOD_2 ( <unk> , VAR_2 class ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . name = name ( STRING_1 ) ; VAR_1 = STRING_2 ; METHOD_2 ( <unk> , VAR_2 class ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 f = new TYPE_1 ( ) ; name . name = STRING_1 ; VAR_1 = STRING_2 ; METHOD_2 ( VAR_2 , VAR_2 class ) ; }[0m
[31mExample #4[0m
Src : static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 <unk> ) { TYPE_1 <unk> = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) ; return <unk> ; }[0m
Trg : static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 <unk> ) { TYPE_1 <unk> = TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ; return <unk> ; }[0m
Pred: static TYPE_1 METHOD_1 ( TYPE_1 a , TYPE_1 TYPE_1 ) { TYPE_1 TYPE_1 = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) ; return TYPE_1 ; }[0m
[31mExample #5[0m
Src : private TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . <unk> ( ( ( java.lang.String ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) ; } catch ( java.lang.Exception <unk> ) { return VAR_2 ; } }[0m
Trg : private TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . <unk> ( ( ( java.lang.String ) ( TYPE_2 . <unk> ( ) . METHOD_2 ( VAR_1 ) ) ) ) ; } catch ( java.lang.Exception <unk> ) { return VAR_2 ; } }[0m
Pred: private TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . getInt ( ( ( java.lang.String ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) ; } catch ( java.lang.Exception ( ) ) { return VAR_2 ; } }[0m
---------------
Class: Add null check
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( final java.lang.String name ) { if ( ( name != null ) && ( ! ( name . isEmpty ( ) ) ) ) { this . name = name ; } }[0m
Trg : public void METHOD_1 ( final java.lang.String name ) { this . name = name ; }[0m
Pred: public void METHOD_1 ( final java.lang.String name ) { if ( ( name != null ) && ( ! ( name . isEmpty ( ) ) ) ) { this . name = name ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( ) { VAR_1 . METHOD_1 ( this , status ) ; }[0m
Trg : public void <unk> ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_1 ( this , status ) ; } }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( this , status ) ; }[0m
[31mExample #2[0m
Src : void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) { VAR_1 . METHOD_2 ( <unk> . getValue ( ) ) ; view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; }[0m
Trg : void METHOD_1 ( TYPE_1 < TYPE_2 > <unk> ) { VAR_1 . METHOD_2 ( <unk> . getValue ( ) ) ; if ( ( view ) != null ) { view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; } }[0m
Pred: void METHOD_1 ( TYPE_1 < TYPE_2 > ) { VAR_1 . METHOD_2 ( TYPE_1 . getValue ( ) ) ; view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; }[0m
[31mExample #3[0m
Src : void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; }[0m
Trg : void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } }[0m
Pred: void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; }[0m
[31mExample #4[0m
Src : public int [ ] METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public int [ ] METHOD_1 ( ) { return ( VAR_1 ) == null ? null : VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public int [ ] METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { VAR_1 . <unk> ( ) ; }[0m
Trg : public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . <unk> ( ) ; } }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . getInt ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { this . VAR_1 . METHOD_1 ( ) ; } VAR_2 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( ) ; this . VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) ; }[0m
---------------
Class: Add parameter in the method/constructor invocation
Golden example (False):
[31mExample #1[0m
Src : public void <unk> ( TYPE_1 result ) { TYPE_2 . <unk> ( TYPE_3 . METHOD_1 ( VAR_1 . <unk> ( ) ) ) ; }[0m
Trg : public void <unk> ( TYPE_1 result ) { TYPE_2 . <unk> ( TYPE_3 . METHOD_1 ( <unk> , VAR_1 . <unk> ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 result ) { TYPE_2 . ( ( TYPE_3 . METHOD_1 ( VAR_1 . getId ( ) ) ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , <unk> <unk> ) { TYPE_1 params = new TYPE_1 ( VAR_1 , <unk> ) ; params . METHOD_2 ( TYPE_2 . <unk> ( ) . METHOD_3 ( ) ) ; return params ; }[0m
Trg : private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , <unk> <unk> ) { TYPE_1 params = new TYPE_1 ( VAR_1 , <unk> , true ) ; params . METHOD_2 ( TYPE_2 . <unk> ( ) . METHOD_3 ( ) ) ; return params ; }[0m
Pred: private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.io.File f ) { TYPE_1 params = new TYPE_1 ( VAR_1 , expr ) ; params . METHOD_2 ( TYPE_2 . getInt ( ) . METHOD_3 ( ) ) ; return params ; }[0m
[31mExample #2[0m
Src : public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) ) ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . <unk> ) ) ; }[0m
Trg : public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_2 . <unk> ) ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 . <unk> ) ) ; }[0m
Pred: public TYPE_1 list ( ) { if ( METHOD_1 ( ) ) return METHOD_2 ( METHOD_3 ( VAR_1 , new TYPE_2 ( ) ) ) ; else return METHOD_2 ( METHOD_3 ( VAR_2 ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , null ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , null ) , null ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , null ) ) ) ; METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( java.lang.Math.random ( ) ) ; }[0m
[31mExample #4[0m
Src : private <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , VAR_1 , true , null , false , null ) ; }[0m
Trg : private <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , null , VAR_1 , true , null , false , null ) ; }[0m
Pred: private static METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( java.util.HashMap . METHOD_3 ( ) , name , true , null , null , VAR_1 , true , null , false , null ) ; }[0m
[31mExample #5[0m
Src : private <unk> METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , VAR_1 , false , null , null , VAR_2 , true ) ; }[0m
Trg : private <unk> METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , VAR_1 , false , null , null , VAR_2 , true , null ) ; }[0m
Pred: private static METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 , false , null , null , VAR_2 , true ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( boolean VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; } } catch ( <unk> VAR_5 ) { } }[0m
Trg : public void METHOD_1 ( boolean VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , null ) ; } } catch ( <unk> VAR_5 ) { } }[0m
Pred: public void METHOD_1 ( boolean VAR_1 ) { try { if ( VAR_2 ) { VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; } } }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_1 . METHOD_6 ( VAR_2 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_1 . METHOD_6 ( VAR_2 , false ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_1 . METHOD_6 ( VAR_2 ) ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , null ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 <unk> ) { } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , null , true ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 <unk> ) { } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 = TYPE_1 . METHOD_2 ( ) ; try { METHOD_3 ( VAR_1 , null ) ; TYPE_2 . fail ( ) ; } catch ( TYPE_3 ) { } }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { java.util.List < <unk> . <unk> > result = <unk> . METHOD_2 ( null , null , false ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < <unk> . <unk> > result = <unk> . METHOD_2 ( null , null , null , false ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_2 . title > result = TYPE_2 . METHOD_2 ( null , null , false ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
[31mExample #10[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , int VAR_3 , <unk> VAR_4 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , int VAR_3 , <unk> VAR_4 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , VAR_3 , VAR_4 , null ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 , int VAR_3 , TYPE_2 VAR_4 ) throws TYPE_3 { return METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , 1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , 1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false ) ; VAR_1 . METHOD_5 ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( java.lang.Math.random ( ) ) ; }[0m
[31mExample #13[0m
Src : private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 . METHOD_4 ( ) ) ) + STRING_2 ) + msg ) , args ) ; } }[0m
Trg : private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( VAR_2 . METHOD_4 ( ) ) + msg ) , args ) ; } }[0m
Pred: private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 . METHOD_4 ( ) ) ) + STRING_2 ) + msg ) , args ) ; } }[0m
[31mExample #14[0m
Src : public void METHOD_1 ( int VAR_1 , <unk> <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; }[0m
Trg : public void METHOD_1 ( int VAR_1 , <unk> <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( true ) ; }[0m
Pred: public void METHOD_1 ( int VAR_1 , TYPE_2 , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( true , null ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 <unk> ) { } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( true , null , true ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 <unk> ) { } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.io.File VAR_1 ; try { VAR_1 = METHOD_2 ( true , null ) ; TYPE_1 . fail ( ) ; } catch ( TYPE_2 TYPE_2 ) { } }[0m
[31mExample #16[0m
Src : private TYPE_1 . <unk> METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true ) ; }[0m
Trg : private TYPE_1 . <unk> METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true , true ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true ) ; }[0m
[31mExample #17[0m
Src : public void METHOD_1 ( TYPE_1 state ) { try { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , state ) ; } } catch ( <unk> VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( TYPE_1 state ) { try { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , state , null ) ; } } catch ( <unk> VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( TYPE_1 state ) { try { if ( VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 , state ) ; } } }[0m
[31mExample #18[0m
Src : public static void METHOD_1 ( short [ ] a ) { TYPE_1 . METHOD_1 ( a ) ; }[0m
Trg : public static void METHOD_1 ( short [ ] a ) { TYPE_1 . METHOD_1 ( a , 0 , ( ( a . length ) - 1 ) , null , 0 , 0 ) ; }[0m
Pred: public static void METHOD_1 ( short [ ] a ) { TYPE_1 . METHOD_1 ( a ) ; }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , true , true , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , true , true , true , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , true , true , true ) ; }[0m
[31mExample #20[0m
Src : protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( <unk> ) ; }[0m
Trg : protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; }[0m
[31mExample #21[0m
Src : private java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 , TYPE_2 VAR_2 ) { return <unk> ( VAR_3 . <unk> class , VAR_4 , new TYPE_3 ( VAR_1 , VAR_2 , false , null ) , STRING_1 , true ) ; }[0m
Trg : private java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 , TYPE_2 VAR_2 ) { return <unk> ( VAR_3 . <unk> class , VAR_4 , new TYPE_3 ( VAR_1 , VAR_2 , false , null , false ) , STRING_1 , true ) ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { return ( VAR_3 . name class , VAR_4 , new TYPE_3 ( VAR_1 , VAR_2 , false , null ) , STRING_1 , true ) ; }[0m
---------------
Class: Add statement,Remove thrown exception
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String <unk> ) throws TYPE_2 { try { return TYPE_1 . METHOD_2 ( <unk> ) ; } catch ( TYPE_3 <unk> ) { throw new TYPE_2 ( <unk> ( ) ) ; } }[0m
Trg : public java.lang.String METHOD_1 ( java.lang.String <unk> ) { return <unk> ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String filename ) throws TYPE_2 { try { return TYPE_1 . METHOD_2 ( ) ; } catch ( TYPE_3 ( ) ) { throw new TYPE_2 ( TYPE_2 ( ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.String VAR_1 ) throws <unk> { }[0m
Trg : public void METHOD_1 ( java.lang.String VAR_1 ) { this . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { }[0m
---------------
Class: Add/Remove parameter
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( int VAR_1 , int type , int arg , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( <unk> , type , arg ) ; }[0m
Trg : protected void METHOD_1 ( int type , int arg , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( <unk> , type , arg ) ; }[0m
Pred: protected void METHOD_1 ( int VAR_1 , int type , int arg , int size ) { VAR_2 = TYPE_1 . METHOD_2 ( f , type , arg ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( java.lang.Object VAR_1 , java.lang.Object <unk> ) { this . <unk> ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> ) { this . <unk> ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object filename ) { this . name ( ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . trim ( ) ) ) ) ) ) ; }[0m
[31mExample #2[0m
Src : TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 ;[0m
Trg : TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 , int <unk> ) throws TYPE_2 ;[0m
Pred: TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2[0m
[31mExample #3[0m
Src : public void METHOD_1 ( <unk> <unk> , TYPE_1 event , <unk> <unk> ) { }[0m
Trg : public void METHOD_1 ( TYPE_1 event , <unk> <unk> ) { }[0m
Pred: public void METHOD_1 ( java.io.File f , TYPE_1 event , TYPE_2 ) { }[0m
[31mExample #4[0m
Src : public static native void METHOD_1 ( long <unk> , int VAR_1 , boolean VAR_2 , long VAR_3 , long VAR_4 , long VAR_5 ) ;[0m
Trg : public static native void METHOD_1 ( long <unk> , int VAR_1 , boolean VAR_2 , long VAR_3 , long VAR_4 ) ;[0m
Pred: public static void METHOD_1 ( long offset , int VAR_1 , boolean VAR_2 , long VAR_3 , long VAR_4 , long VAR_5 , long VAR_3 , long VAR_4 , long VAR_5 ) ;[0m
[31mExample #5[0m
Src : public TYPE_1 METHOD_1 ( int VAR_1 ) throws <unk> { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) throws <unk> { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { METHOD_2 ( ) ; return METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 <unk> , java.lang.String VAR_2 , java.lang.Object data ) { throw new TYPE_4 ( STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 <unk> , java.lang.String VAR_2 ) { throw new TYPE_4 ( STRING_1 ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 , java.lang.String VAR_2 , java.lang.Object data ) { throw new TYPE_4 ( STRING_1 ) ; }[0m
[31mExample #7[0m
Src : void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) ;[0m
Trg : void METHOD_1 ( int type , int VAR_2 ) ;[0m
Pred: void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) { java.lang.System.out.println ( VAR_2 ) ; }[0m
[31mExample #8[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 listener ) { return null ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return null ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 listener ) { return null ; }[0m
[31mExample #9[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object VAR_1 ) { <unk> ( ( ( TYPE_1 < <unk> > ) ( ( ( TYPE_2 . <unk> ) ( VAR_1 ) ) . <unk> ( ) ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object VAR_1 ) { <unk> ( ( ( TYPE_1 < <unk> > ) ( ( ( TYPE_2 . <unk> ) ( VAR_1 ) ) . <unk> ( ) ) ) ) ; }[0m
Pred: public void ( ( java.lang.Object ) , java.lang.Object VAR_1 ) { TYPE_1 ( ( ( TYPE_1 < TYPE_1 > ) ( ( ( TYPE_2 . ) ( VAR_1 ) ) ) ) ) ; }[0m
[31mExample #10[0m
Src : void METHOD_1 ( TYPE_1 . <unk> <unk> , java.util.List < TYPE_2 > VAR_1 , java.util.List < TYPE_3 > VAR_2 ) ;[0m
Trg : void METHOD_1 ( TYPE_1 . <unk> <unk> , java.util.List < TYPE_2 > VAR_1 ) ;[0m
Pred: void METHOD_1 ( TYPE_1 . name , java.util.List < TYPE_2 > VAR_1 , java.util.List < TYPE_3 > VAR_2 ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 . <unk> ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 . <unk> ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; }[0m
[31mExample #12[0m
Src : void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) ;[0m
Trg : void METHOD_1 ( TYPE_1 VAR_1 ) ;[0m
Pred: void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) ;[0m
[31mExample #13[0m
Src : public void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( int type , int VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; }[0m
Pred: public void METHOD_1 ( long VAR_1 , int type , int VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; }[0m
[31mExample #14[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) ; }[0m
[31mExample #15[0m
Src : native boolean METHOD_1 ( int VAR_1 , int VAR_2 , byte [ ] <unk> , byte [ ] output , float [ ] VAR_3 , int VAR_4 ) ;[0m
Trg : native boolean METHOD_1 ( java.lang.String path , int VAR_1 , int VAR_2 , byte [ ] <unk> , byte [ ] output , float [ ] VAR_3 , int VAR_4 ) ;[0m
Pred: public boolean METHOD_1 ( int VAR_1 , int VAR_2 , byte [ ] output , byte [ ] output , float [ ] VAR_3 , int VAR_4 )[0m
[31mExample #16[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { return TYPE_4 . METHOD_2 ( null ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return TYPE_4 . METHOD_2 ( null ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { return TYPE_4 . METHOD_2 ( null ) ; }[0m
[31mExample #17[0m
Src : private TYPE_1 METHOD_1 ( TYPE_2 <unk> , java.lang.String VAR_1 , java.lang.String path ) { if ( TYPE_3 . METHOD_2 ( path ) ) { return null ; } return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( path ) ; }[0m
Trg : private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String path ) { if ( TYPE_3 . METHOD_2 ( path ) ) { return null ; } return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( path ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( TYPE_2 TYPE_2 , java.lang.String VAR_1 , java.lang.String path ) { if ( TYPE_3 . METHOD_2 ( path ) ) { return null ; } return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( path ) ; }[0m
[31mExample #18[0m
Src : void METHOD_1 ( boolean VAR_1 ) ;[0m
Trg : void METHOD_1 ( ) ;[0m
Pred: void METHOD_1 ( boolean VAR_1 ) ;[0m
[31mExample #19[0m
Src : protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
---------------
Class: Add/Remove parameter,Add parameter in the method/constructor invocation
Golden example (False):
[31mExample #1[0m
Src : public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 <unk> = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . <unk> ( id ) . view ( STRING_1 ) . METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String <unk> , int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 <unk> = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . <unk> ( <unk> , id ) . view ( STRING_1 ) . METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Pred: public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 TYPE_2 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( id ) . view ( STRING_1 ) . METHOD_3 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , <unk> <unk> , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , <unk> , VAR_2 , null , 0 ) ; }[0m
Trg : public static java.lang.String METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 , <unk> <unk> , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( STRING_1 , <unk> , VAR_1 , <unk> , VAR_2 , null , 0 ) ; }[0m
Pred: public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.util.HashMap , java.lang.String , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 , null , 0 ) ; }[0m
[31mExample #2[0m
Src : private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , <unk> , STRING_1 , true , VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( <unk> , STRING_1 , VAR_1 , true , VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , STRING_1 , STRING_1 , true , VAR_2 ) ; }[0m
[31mExample #3[0m
Src : public static TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 ) { return TYPE_2 . <unk> ( id ) . view ( STRING_1 ) . id ( VAR_1 ) ; }[0m
Trg : public static TYPE_1 METHOD_1 ( java.lang.String <unk> , int id , java.lang.String VAR_1 ) { return TYPE_2 . <unk> ( <unk> , id ) . view ( STRING_1 ) . id ( VAR_1 ) ; }[0m
Pred: public static TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 ) { return TYPE_2 . getInt ( id ) . view ( STRING_1 ) . id ( VAR_1 ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( <unk> id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . <unk> ( id , STRING_1 ) . id ( VAR_1 ) . delete ( VAR_2 ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String <unk> , <unk> id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . <unk> ( <unk> , id , STRING_1 ) . id ( VAR_1 ) . delete ( VAR_2 ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_2 id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . assertEquals ( id , STRING_1 ) . id ( VAR_1 ) . delete ( VAR_2 ) ; }[0m
---------------
Class: Add/Remove parameter,Remove type casting in method body
Golden example (False):
[31mExample #1[0m
Src : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_1 ( ) ; METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Integer <unk> ) { VAR_1 = <unk> ; METHOD_1 ( ) ; METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object ) { VAR_1 = ( ( java.lang.Integer ) ( java.lang.Math.random ) ) ; METHOD_1 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { METHOD_1 ( ( ( java.lang.Boolean ) ( <unk> ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Boolean <unk> ) { METHOD_1 ( <unk> ) ; }[0m
Pred: public void ( ( java.lang.Object ) , java.lang.Object ) { METHOD_1 ( ( ( java.lang.Boolean ) ( ) ) ) ; }[0m
---------------
Class: Add/Remove this qualifier
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.Boolean value ) { this . VAR_1 = value ; }[0m
Trg : public void METHOD_1 ( java.lang.Boolean value ) { VAR_1 = value ; }[0m
Pred: public void METHOD_1 ( java.lang.Boolean value ) { this . VAR_1 = value ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; }[0m
Trg : public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; }[0m
Pred: public void METHOD_1 ( boolean VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_2 = VAR_1 ; }[0m
[31mExample #2[0m
Src : public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return this . VAR_1 ; }[0m
Trg : public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return this . VAR_1 ; }[0m
---------------
Class: Broad method visibility
Golden example (False):
[31mExample #1[0m
Src : <unk> TYPE_1 id ( java.lang.String VAR_1 ) ;[0m
Trg : public <unk> TYPE_1 id ( java.lang.String VAR_1 ) ;[0m
Pred: java.lang.String id ( java.lang.String VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private TYPE_1 METHOD_1 ( ) { return VAR_1 ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return VAR_1 ; }[0m
Pred: private TYPE_1 METHOD_1 ( ) { return VAR_1 ; }[0m
[31mExample #2[0m
Src : private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; }[0m
Trg : protected void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; }[0m
Pred: private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; }[0m
[31mExample #3[0m
Src : protected java.lang.String METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Pred: protected java.lang.String METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
[31mExample #4[0m
Src : protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ; }[0m
Pred: protected void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ; }[0m
[31mExample #5[0m
Src : private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( METHOD_2 ( TYPE_2 . <unk> ( ) ) ) && ( <unk> ( VAR_1 . METHOD_3 ( ) ) ) ; }[0m
Trg : protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( METHOD_2 ( TYPE_2 . <unk> ( ) ) ) && ( <unk> ( VAR_1 . METHOD_3 ( ) ) ) ; }[0m
Pred: private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ) ; }[0m
[31mExample #6[0m
Src : private boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { return <unk> ( METHOD_2 ( <unk> ) . METHOD_3 ( TYPE_2 . <unk> ( ) . METHOD_4 ( ) ) ) ; }[0m
Trg : protected boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { return <unk> ( METHOD_2 ( <unk> ) . METHOD_3 ( TYPE_2 . <unk> ( ) . METHOD_4 ( ) ) ) ; }[0m
Pred: private boolean METHOD_1 ( TYPE_1 . getInt ( ) ) { return ( ( METHOD_2 ( ) ) == null ) ; }[0m
[31mExample #7[0m
Src : protected TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) ; }[0m
[31mExample #8[0m
Src : protected <unk> <unk> ( ) { if ( ( TYPE_1 . METHOD_1 ( ) ) != null ) { METHOD_2 ( TYPE_1 . METHOD_1 ( ) . METHOD_3 ( ) ) ; } return super . <unk> ( ) ; }[0m
Trg : public <unk> <unk> ( ) { if ( ( TYPE_1 . METHOD_1 ( ) ) != null ) { METHOD_2 ( TYPE_1 . METHOD_1 ( ) . METHOD_3 ( ) ) ; } return super . <unk> ( ) ; }[0m
Pred: protected static TYPE_1 ( ) { if ( ( TYPE_1 . METHOD_1 ( ) ) != null ) { METHOD_2 ( TYPE_1 . METHOD_1 ( ) . METHOD_3 ( ) ) ; } return super . trim ( ) ; }[0m
[31mExample #9[0m
Src : private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }[0m
Trg : public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }[0m
Pred: private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { this . VAR_1 = VAR_1 ; }[0m
[31mExample #10[0m
Src : private boolean METHOD_1 ( java.util.List < <unk> > VAR_1 ) { for ( <unk> <unk> : VAR_1 ) { if ( ( <unk> . <unk> ( ) ) != ( VAR_2 ) ) { return true ; } } return false ; }[0m
Trg : protected boolean METHOD_1 ( java.util.List < <unk> > VAR_1 ) { for ( <unk> <unk> : VAR_1 ) { if ( ( <unk> . <unk> ( ) ) != ( VAR_2 ) ) { return true ; } } return false ; }[0m
Pred: private boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( java.io.File f : VAR_1 ) { if ( ( f . trim ( ) ) != ( VAR_2 ) ) { return true ; } } return false ; }[0m
[31mExample #11[0m
Src : private static TYPE_1 <unk> ( java.io.File VAR_1 , TYPE_2 VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; }[0m
Trg : public static TYPE_1 <unk> ( java.io.File VAR_1 , TYPE_2 VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; }[0m
Pred: private static TYPE_1 ( java.io.File VAR_1 , TYPE_2 VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; }[0m
[31mExample #12[0m
Src : protected TYPE_1 . <unk> METHOD_1 ( ) { return <unk> ( ) ; }[0m
Trg : public TYPE_1 . <unk> METHOD_1 ( ) { return <unk> ( ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return ( TYPE_1 ) ; }[0m
[31mExample #13[0m
Src : protected void METHOD_1 ( final <unk> value ) { <unk> = value ; }[0m
Trg : public void METHOD_1 ( final <unk> value ) { <unk> = value ; }[0m
Pred: public void METHOD_1 ( final TYPE_1 value ) { java.lang.StringBuffer = value ; }[0m
[31mExample #14[0m
Src : private static native void METHOD_1 ( java.lang.Object VAR_1 , long VAR_2 ) ;[0m
Trg : public static native void METHOD_1 ( java.lang.Object VAR_1 , long VAR_2 ) ;[0m
Pred: private static boolean METHOD_1 ( java.lang.Object VAR_1 , long VAR_2 ) { java.lang.System.out.println ( VAR_2 ) ; }[0m
[31mExample #15[0m
Src : protected java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
Pred: protected java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
---------------
Class: Change method invocation as result of a move method
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( ) { TYPE_1 . <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 . assertEquals ( VAR_1 . METHOD_2 ( ) ) . getInt ( VAR_2 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true , false , null , true ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( true , false , null , true ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true , false , null , true ) ; }[0m
[31mExample #2[0m
Src : protected void METHOD_1 ( ) { <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_4 , STRING_5 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( null , STRING_1 ) ; METHOD_2 ( STRING_2 , STRING_3 ) ; METHOD_2 ( STRING_4 , STRING_5 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_4 , STRING_5 ) ; }[0m
[31mExample #4[0m
Src : protected boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . getId ( ) ) ) != null ; }[0m
Trg : protected boolean METHOD_1 ( ) { return ( TYPE_1 . METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . getId ( ) ) ) != null ; }[0m
Pred: protected boolean METHOD_1 ( ) { return ( METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) . getId ( ) ) ) != null ; }[0m
[31mExample #5[0m
Src : public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . get ( key . METHOD_2 ( ) , <unk> ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . get ( key . METHOD_2 ( ) , <unk> ) ; return METHOD_3 ( VAR_1 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . get ( key . METHOD_2 ( ) , VAR_2 ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; }[0m
[31mExample #6[0m
Src : private void METHOD_1 ( <unk> <unk> ) { TYPE_1 . <unk> ( VAR_1 . get ( VAR_2 . <unk> < <unk> > <unk> ( VAR_3 . <unk> class ) ) ) . <unk> ( <unk> ) ; }[0m
Trg : private void METHOD_1 ( <unk> <unk> ) { <unk> ( VAR_1 . get ( VAR_2 . <unk> < <unk> > <unk> ( VAR_3 . <unk> class ) ) ) . <unk> ( <unk> ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 . replace ( VAR_1 . get ( VAR_2 . get ( VAR_2 ) ) ) . getInt ( ) ; }[0m
---------------
Class: Change method return value
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( ) { return false ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return true ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return false ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public final TYPE_1 METHOD_1 ( ) { return this . <unk> ; }[0m
Trg : public final TYPE_1 METHOD_1 ( ) { return null ; }[0m
Pred: public final TYPE_1 METHOD_1 ( ) { return this . name ; }[0m
[31mExample #2[0m
Src : public boolean METHOD_1 ( ) { return false ; }[0m
Trg : public boolean METHOD_1 ( ) { return true ; }[0m
Pred: public boolean METHOD_1 ( ) { return false ; }[0m
[31mExample #3[0m
Src : protected java.lang.String <unk> ( ) { return STRING_1 ; }[0m
Trg : protected java.lang.String <unk> ( ) { return <unk> ; }[0m
Pred: public java.lang.String toString ( ) { return STRING_1 ; }[0m
---------------
Class: Change method return value,Change return type
Golden example (False):
[31mExample #1[0m
Src : public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , java.lang.Integer . toString ( VAR_3 . METHOD_4 ( ) ) ) ; return null ; }[0m
Trg : public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , java.lang.Integer . toString ( VAR_3 . METHOD_4 ( ) ) ) ; return true ; }[0m
Pred: public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) , java.lang.Integer . toString ( VAR_3 . METHOD_4 ( ) ) ) ; return null ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; return null ; }[0m
Trg : public java.lang.Boolean METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; return true ; }[0m
Pred: public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; return null ; }[0m
---------------
Class: Change parameter type
Golden example (False):
[31mExample #1[0m
Src : synchronized long METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
Trg : synchronized long METHOD_1 ( long [ ] VAR_1 , long [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
Pred: synchronized long METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 , int [ ] VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( offset , VAR_1 , VAR_2 , VAR_3 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int count , float [ ] <unk> , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , count , <unk> , VAR_3 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int count , float [ ] <unk> , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , count , <unk> , VAR_3 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int count , float [ ] min , int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( INT_7 , id , VAR_1 , VAR_2 , count , , , VAR_3 ) ; }[0m
[31mExample #2[0m
Src : public boolean METHOD_1 ( <unk> . <unk> <unk> ) { return <unk> . getId ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> <unk> ) { return <unk> . getId ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( ) { return TYPE_2 . getId ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ; }[0m
[31mExample #3[0m
Src : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( ) { return METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
[31mExample #4[0m
Src : private TYPE_1 METHOD_1 ( final TYPE_2 . <unk> VAR_1 ) { if ( VAR_1 != null ) { return VAR_2 . <unk> ( VAR_1 . <unk> ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; } return VAR_3 ; }[0m
Trg : private TYPE_1 METHOD_1 ( final <unk> . <unk> VAR_1 ) { if ( VAR_1 != null ) { return VAR_2 . <unk> ( VAR_1 . <unk> ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; } return VAR_3 ; }[0m
Pred: private TYPE_1 METHOD_1 ( final TYPE_2 . VAR_1 ) { if ( VAR_1 != null ) { return VAR_2 . getInt ( VAR_1 . getId ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; } return VAR_3 ; }[0m
[31mExample #5[0m
Src : static int METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 . METHOD_3 ( ) ; }[0m
Trg : static int METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 . METHOD_3 ( ) ; }[0m
Pred: static int METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return 0 ; } return VAR_4 . METHOD_3 ( ) ; }[0m
[31mExample #6[0m
Src : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getName ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getName ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . getName ( ) ) ; }[0m
[31mExample #7[0m
Src : private static TYPE_1 METHOD_1 ( ) { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . <unk> ( <unk> . METHOD_2 ( ) ) ; <unk> . METHOD_3 ( STRING_1 ) ; return <unk> ; }[0m
Trg : private static <unk> METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . <unk> ( <unk> . METHOD_2 ( ) ) ; <unk> . METHOD_3 ( STRING_1 ) ; return <unk> ; }[0m
Pred: private static TYPE_1 METHOD_1 ( ) { TYPE_1 . = ( TYPE_1 . METHOD_2 ( ) ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; return TYPE_1 ; }[0m
[31mExample #8[0m
Src : synchronized TYPE_1 METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Trg : synchronized TYPE_1 METHOD_1 ( long VAR_1 ) { METHOD_2 ( ) ; return METHOD_3 ( <unk> , VAR_1 ) ; }[0m
Pred: synchronized TYPE_1 METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; METHOD_2 ( ) ; return METHOD_3 ( ) ; }[0m
[31mExample #9[0m
Src : static java.lang.String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return STRING_1 ; } return VAR_4 . toString ( ) ; }[0m
Trg : static java.lang.String METHOD_1 ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return STRING_1 ; } return VAR_4 . toString ( ) ; }[0m
Pred: static java.lang.String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 == null ) { return STRING_1 ; } return VAR_4 . toString ( ) ; }[0m
[31mExample #10[0m
Src : static boolean METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; }[0m
Trg : static boolean METHOD_1 ( long VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; }[0m
Pred: private boolean METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return true ; }[0m
[31mExample #11[0m
Src : private static void METHOD_1 ( final TYPE_1 <unk> , final TYPE_2 . <unk> <unk> ) { TYPE_3 . METHOD_2 ( <unk> , STRING_1 , <unk> . get ( ) ) ; }[0m
Trg : private static void METHOD_1 ( final java.lang.StringBuilder <unk> , final TYPE_2 . <unk> <unk> ) { TYPE_3 . METHOD_2 ( <unk> , STRING_1 , <unk> . get ( ) ) ; }[0m
Pred: private static void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 TYPE_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , STRING_1 , VAR_2 . get ( ) ) ; }[0m
[31mExample #12[0m
Src : public java.lang.String getValue ( <unk> . <unk> <unk> ) { return <unk> . METHOD_1 ( ) ; }[0m
Trg : public java.lang.String getValue ( <unk> . <unk> <unk> ) { return <unk> . METHOD_1 ( ) ; }[0m
Pred: public java.lang.String getValue ( ) { return TYPE_2 . METHOD_1 ( ) ; }[0m
[31mExample #13[0m
Src : public java.lang.String getValue ( <unk> <unk> ) { return <unk> ( <unk> . METHOD_1 ( ) . size ( ) ) ; }[0m
Trg : public java.lang.String getValue ( java.lang.Object <unk> ) { return <unk> ( ( ( <unk> ) ( <unk> ) ) . METHOD_1 ( ) . size ( ) ) ; }[0m
Pred: public java.lang.String getValue ( ) { return TYPE_2 . METHOD_1 ( ) . size ( ) ; }[0m
[31mExample #14[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( id , id , VAR_1 , VAR_2 ) ; }[0m
[31mExample #15[0m
Src : public static native byte [ ] METHOD_1 ( int VAR_1 ) ;[0m
Trg : public static native byte [ ] METHOD_1 ( long VAR_1 ) ;[0m
Pred: byte [ ] METHOD_1 ( int VAR_1 ) { java.lang.System.out.println ( VAR_1 ) ; }[0m
[31mExample #16[0m
Src : public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > <unk> , TYPE_2 . <unk> VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , <unk> . METHOD_3 ( ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , <unk> , VAR_2 ) ; }[0m
Trg : public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > <unk> , TYPE_2 . <unk> VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , <unk> . METHOD_3 ( ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , <unk> , VAR_2 ) ; }[0m
Pred: public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > TYPE_2 , TYPE_2 . TYPE_2 VAR_2 ) { TYPE_3 . METHOD_2 ( STRING_1 , METHOD_3 ( ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , VAR_2 , VAR_2 ) ; }[0m
[31mExample #17[0m
Src : public java.lang.String getValue ( <unk> <unk> ) { return ( <unk> ( <unk> . METHOD_1 ( ) ) ) + STRING_1 ; }[0m
Trg : public java.lang.String getValue ( java.lang.Object <unk> ) { return ( <unk> ( ( ( <unk> ) ( <unk> ) ) . METHOD_1 ( ) ) ) + STRING_1 ; }[0m
Pred: public java.lang.String getValue ( ) { return ( java.lang.Math.random ( java.lang.Math.random ( ) ) ) + STRING_1 ; }[0m
[31mExample #18[0m
Src : native void METHOD_1 ( int VAR_1 , int VAR_2 ) ;[0m
Trg : native void METHOD_1 ( long VAR_1 , long VAR_2 ) ;[0m
Pred: public void METHOD_1 ( int VAR_1 , int VAR_2 ) { java.lang.System.out.println ( VAR_2 ) ; }[0m
[31mExample #19[0m
Src : synchronized int METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Trg : synchronized long METHOD_1 ( long VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Pred: synchronized int METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
[31mExample #20[0m
Src : final void METHOD_1 ( int VAR_1 ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } }[0m
Trg : final void METHOD_1 ( long VAR_1 ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } }[0m
Pred: final void METHOD_1 ( int VAR_1 ) { synchronized ( this ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; } }[0m
[31mExample #21[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , float VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , float VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , float VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( id , id , VAR_1 , VAR_2 ) ; }[0m
[31mExample #22[0m
Src : public boolean METHOD_1 ( TYPE_1 <unk> ) { return ( <unk> . METHOD_2 ( ) ) == ( VAR_1 ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> <unk> ) { return ( <unk> . METHOD_2 ( ) ) == ( VAR_1 ) ; }[0m
Pred: public boolean METHOD_1 ( TYPE_1 ) { return ( java.lang.Math.random ( ) ) == ( VAR_1 ) ; }[0m
[31mExample #23[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , byte [ ] VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , byte [ ] VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , byte [ ] VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( id , id , VAR_1 , VAR_2 ) ; }[0m
[31mExample #24[0m
Src : public static native void METHOD_1 ( int VAR_1 ) throws TYPE_1 ;[0m
Trg : public static native void METHOD_1 ( long VAR_1 ) throws TYPE_1 ;[0m
Pred: public static void METHOD_1 ( int VAR_1 ) throws TYPE_1 { TYPE_1 . METHOD_1 ( VAR_1 ) ; }[0m
[31mExample #25[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> . <unk> <unk> ) { return VAR_1 . METHOD_2 ( <unk> , <unk> , VAR_2 , VAR_3 ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> <unk> ) { return VAR_1 . METHOD_2 ( <unk> , <unk> , VAR_2 , VAR_3 ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_1 f , java.util.Date ) { return VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #26[0m
Src : synchronized void METHOD_1 ( int VAR_1 , int VAR_2 , int <unk> ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , VAR_1 , VAR_2 , <unk> ) ; }[0m
Trg : synchronized void METHOD_1 ( long VAR_1 , int VAR_2 , long <unk> ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , VAR_1 , VAR_2 , <unk> ) ; }[0m
Pred: synchronized void METHOD_1 ( int VAR_1 , int VAR_2 , int offset ) { METHOD_2 ( ) ; METHOD_3 ( f , VAR_1 , VAR_2 , VAR_2 ) ; }[0m
[31mExample #27[0m
Src : public static native void METHOD_1 ( int VAR_1 , int VAR_2 ) throws TYPE_1 ;[0m
Trg : public static native void METHOD_1 ( long VAR_1 , long VAR_2 ) throws TYPE_1 ;[0m
Pred: public static void METHOD_1 ( int VAR_1 , int VAR_2 ) throws TYPE_1 { TYPE_1 . METHOD_1 ( VAR_1 ) ; }[0m
[31mExample #28[0m
Src : native void METHOD_1 ( int VAR_1 , int id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , TYPE_1 b ) ;[0m
Trg : native void METHOD_1 ( long VAR_1 , long id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , TYPE_1 b ) ;[0m
Pred: private void METHOD_1 ( int VAR_1 , int id , int VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , TYPE_1 b ) ;[0m
[31mExample #29[0m
Src : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> . <unk> VAR_1 ) { return VAR_1 . METHOD_2 ( ) . equals ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; }[0m
---------------
Class: Change parameter value of invoked method
Golden example (False):
[31mExample #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_4 ( ) , VAR_1 ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_4 . <unk> , VAR_1 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_4 ( ) , VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 ) ) ; }[0m
Trg : protected java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new <unk> ( VAR_2 ) ) ; }[0m
Pred: protected java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 ) ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( <unk> id ) { return <unk> ( VAR_1 class , VAR_2 , new TYPE_2 ( id ) , id . toString ( ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( <unk> id ) { return <unk> ( VAR_1 class , VAR_2 , new <unk> ( id ) , id . toString ( ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 id ) { return ( VAR_1 class , VAR_2 , new TYPE_2 ( id ) , id . toString ( ) ) ; }[0m
[31mExample #3[0m
Src : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , VAR_1 , true ) ; <unk> = TYPE_3 . METHOD_3 ( args . <unk> , t ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , VAR_1 , true ) ; <unk> = TYPE_3 . METHOD_3 ( args . <unk> , t ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( VAR_1 , VAR_1 , true ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , INT_1 , false ) ; <unk> = TYPE_3 . METHOD_3 ( VAR_1 , t ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , INT_1 , false ) ; <unk> = TYPE_3 . METHOD_3 ( args . <unk> , t ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { TYPE_2 . METHOD_3 ( VAR_1 , t ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , null ) ; assertEquals ( STRING_2 , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , null ) ; assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , null ) ; assertEquals ( STRING_2 , VAR_2 ) ; }[0m
[31mExample #6[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_2 ( ) , METHOD_4 ( ) . <unk> ( STRING_2 , VAR_1 ) ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , TYPE_2 . <unk> , METHOD_4 ( ) . <unk> ( STRING_2 , VAR_1 ) ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_2 ( ) , METHOD_4 ( ) . getInt ( STRING_2 , VAR_1 ) ) ; }[0m
---------------
Class: Change parameters order in method invocation
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = <unk> . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = <unk> . METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( <unk> , VAR_1 . size ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( VAR_2 ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , offset ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { long VAR_1 = INT_1 ; long VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_2 , INT_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { long VAR_1 = INT_1 ; long VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( INT_2 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { long VAR_1 = INT_1 ; long VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_2 , INT_2 ) ; }[0m
---------------
Class: Change return type
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; }[0m
Trg : public boolean METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected <unk> . <unk> METHOD_1 ( java.lang.String name ) { for ( <unk> . <unk> <unk> : METHOD_2 ( ) ) { if ( <unk> . getName ( ) . equals ( name ) ) { return <unk> ; } } return null ; }[0m
Trg : protected <unk> METHOD_1 ( java.lang.String name ) { for ( <unk> <unk> : METHOD_2 ( ) ) { if ( <unk> . getName ( ) . equals ( name ) ) { return <unk> ; } } return null ; }[0m
Pred: protected static java.lang.String METHOD_1 ( java.lang.String name ) { if ( name == null ) { return null ; } for ( java.util.HashMap . name : METHOD_2 ( ) ) { if ( name . getName ( ) . equals ( name ) ) { return return ; } } return null ; }[0m
---------------
Class: Class is not static anymore. Add object instance to invoke its methods
Golden example (False):
[31mExample #1[0m
Src : public static boolean METHOD_1 ( <unk> <unk> ) { return ! ( TYPE_1 . METHOD_2 ( <unk> ) . isEmpty ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> <unk> ) { return ! ( METHOD_2 ( <unk> ) . isEmpty ( ) ) ; }[0m
Pred: public static boolean METHOD_1 ( ) { return ! ( TYPE_1 . METHOD_2 ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { final java.util.List < TYPE_1 > result = METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 ) + STRING_1 ) ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { final java.util.List < TYPE_1 > result = <unk> . METHOD_3 ( ( ( VAR_1 ) + STRING_1 ) ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { final java.util.List < TYPE_1 > result = METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 ) + STRING_1 ) ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; }[0m
[31mExample #2[0m
Src : public static TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 , boolean VAR_4 ) { return TYPE_2 . METHOD_1 ( <unk> , VAR_1 , VAR_2 , VAR_3 , STRING_1 , VAR_4 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 , boolean VAR_4 ) { return METHOD_1 ( <unk> , VAR_1 , VAR_2 , VAR_3 , STRING_1 , VAR_4 ) ; }[0m
Pred: public static TYPE_1 METHOD_1 ( java.io.File f , java.util.Date VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 , boolean VAR_4 ) { return TYPE_2 . METHOD_1 ( TYPE_2 , VAR_1 , VAR_2 , VAR_3 , STRING_1 , VAR_4 ) ; }[0m
[31mExample #3[0m
Src : public static TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_1 ( <unk> , VAR_1 , true , false , VAR_2 , false ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( <unk> <unk> , <unk> VAR_1 , java.lang.String VAR_2 ) { return METHOD_1 ( <unk> , VAR_1 , true , false , VAR_2 , false ) ; }[0m
Pred: public static TYPE_1 METHOD_1 ( java.io.File f , java.lang.String VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_1 ( TYPE_2 , VAR_1 , true , false , VAR_2 , false ) ; }[0m
[31mExample #4[0m
Src : public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) + STRING_1 ) + ( METHOD_4 ( VAR_1 ) ) ; }[0m
Trg : public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_4 ( ) ) ; }[0m
Pred: public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) + STRING_1 ) + ( METHOD_4 ( VAR_1 ) ) ; }[0m
---------------
Class: Forbid overriding: add final to method
Golden example (False):
[31mExample #1[0m
Src : public long METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; }[0m
Trg : public final long METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; }[0m
Pred: public long METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public double METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; }[0m
Trg : public final double METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; }[0m
Pred: public double METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; }[0m
---------------
Class: Merge variable definition & initialization
Golden example (False):
[31mExample #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) ; java.util.List < TYPE_1 > VAR_3 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_4 , VAR_2 ) ; return VAR_3 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( <unk> VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_4 , VAR_2 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_2 = METHOD_2 ( ) . getInt ( STRING_1 , VAR_1 ) ; java.util.List < TYPE_1 > VAR_3 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_4 , VAR_2 ) ; return VAR_3 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( <unk> <unk> ) { TYPE_2 VAR_1 = METHOD_2 ( ) . <unk> ( STRING_1 , <unk> ) ; java.util.List < TYPE_1 > VAR_2 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 , VAR_1 ) ; return VAR_2 ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( <unk> <unk> ) { TYPE_2 VAR_1 = METHOD_2 ( ) . <unk> ( STRING_1 , <unk> ) ; return METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 , VAR_1 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( ) throws TYPE_2 { java.util.List < TYPE_1 > VAR_2 = METHOD_3 ( ) . METHOD_4 ( STRING_2 , VAR_3 , VAR_1 ) ; return VAR_2 ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 ; VAR_3 = super . METHOD_1 ( VAR_4 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; return VAR_3 == null ? null : METHOD_3 ( VAR_3 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 = super . METHOD_1 ( VAR_4 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; return VAR_3 == null ? null : METHOD_3 ( VAR_3 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 ; VAR_3 = super . METHOD_1 ( VAR_4 . METHOD_2 ( VAR_1 ) , VAR_2 ) ; return VAR_3 == null ? null : METHOD_3 ( VAR_3 ) ; }[0m
[31mExample #3[0m
Src : private TYPE_1 METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) . <unk> ( STRING_2 , VAR_2 ) ; return VAR_3 ; }[0m
Trg : private TYPE_1 METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { return METHOD_2 ( ) . <unk> ( STRING_1 , VAR_1 ) . <unk> ( STRING_2 , VAR_2 ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_3 = METHOD_2 ( ) . replaceAll ( STRING_1 , VAR_1 ) . replaceAll ( STRING_2 , VAR_2 ) ; return VAR_3 ; }[0m
[31mExample #4[0m
Src : public static java.io.File METHOD_1 ( java.lang.String name ) throws TYPE_1 { java.lang.String VAR_1 ; VAR_1 = TYPE_2 . METHOD_2 ( ) ; return new java.io.File ( VAR_1 , ( name + ( VAR_2 ) ) ) ; }[0m
Trg : public static java.io.File METHOD_1 ( java.lang.String name ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( ) ; return new java.io.File ( VAR_1 , ( name + ( VAR_2 ) ) ) ; }[0m
Pred: public static java.io.File METHOD_1 ( java.lang.String name ) throws TYPE_1 { java.lang.String VAR_1 ; VAR_1 = TYPE_2 . METHOD_2 ( ) ; return new java.io.File ( VAR_1 , ( name + ( VAR_2 ) ) ) ; }[0m
---------------
Class: Move existing statements out of try block
Golden example (False):
[31mExample #1[0m
Src : public static long METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; return TYPE_1 . METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } }[0m
Trg : public static long METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { return TYPE_1 . METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } }[0m
Pred: public static long METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; return TYPE_1 . METHOD_3 ( ) ; } finally { VAR_1 . METHOD_4 ( ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( <unk> ) ; c . METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( <unk> ) ; try { c . METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( ) ; c . METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( <unk> ) ; c . get ( null ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 c = new TYPE_1 ( <unk> ) ; try { c . get ( null ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 c = new TYPE_1 ( ) ; c . get ( null ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_1 ) { } }[0m
---------------
Class: Narrow method visibility
Golden example (True):
[32mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { return null ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { return null ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return null ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; return VAR_1 ; }[0m
Trg : private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; return VAR_1 ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; return VAR_1 ; }[0m
[31mExample #2[0m
Src : protected TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( id ) ) ; return VAR_1 ; }[0m
Trg : private TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( id ) ) ; return VAR_1 ; }[0m
Pred: protected TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( id ) ) ; return VAR_1 ; }[0m
[31mExample #3[0m
Src : public TYPE_1 METHOD_1 ( ) { return <unk> ; }[0m
Trg : private TYPE_1 METHOD_1 ( ) { return <unk> ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { return ( ) ; }[0m
[31mExample #4[0m
Src : protected static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) ; }[0m
Trg : private static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) ; }[0m
Pred: protected static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) ; }[0m
---------------
Class: Remove condition
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_4 ( new TYPE_2 ( STRING_1 ) ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_4 ( new TYPE_2 ( STRING_1 ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 value ) { if ( ( this . VAR_1 . METHOD_2 ( ) ) != value ) { this . VAR_1 . METHOD_1 ( value ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { if ( ( this . VAR_1 . METHOD_2 ( ) ) != value ) { this . VAR_1 . METHOD_1 ( value ) ; } }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( java.lang.String line ) { if ( line != null ) { METHOD_2 ( line ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String line ) { METHOD_2 ( line ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String line ) { if ( line != null ) { METHOD_2 ( line ) ; } }[0m
[31mExample #3[0m
Src : public static TYPE_1 <unk> ( ) { if ( ( VAR_1 ) == null ) { synchronized ( VAR_2 class ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } } } return VAR_1 ; }[0m
Trg : public static TYPE_1 <unk> ( ) { return VAR_1 ; }[0m
Pred: public static TYPE_1 ( ) { if ( ( VAR_1 ) == null ) { synchronized ( VAR_2 class ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } } } return VAR_1 ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; } }[0m
Trg : public void METHOD_1 ( java.lang.String value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String value ) { if ( ! ( TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( ) , value ) ) ) { this . VAR_1 . METHOD_1 ( value ) ; } }[0m
---------------
Class: Remove invoked method
Golden example (False):
[31mExample #1[0m
Src : void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( a , a . length , this . VAR_1 ) ) ; }[0m
Trg : void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( a , a . length , this . VAR_1 ) ; }[0m
Pred: void METHOD_1 ( byte [ ] a ) { this . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( a , a . length , this . VAR_1 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static void METHOD_1 ( TYPE_1 args ) { VAR_1 = <unk> ; VAR_2 = <unk> ; <unk> = ( ( float ) ( TYPE_2 . METHOD_2 ( FLOAT_1 , args . <unk> ) ) ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args ) { VAR_1 = <unk> ; VAR_2 = <unk> ; <unk> = ( ( float ) ( TYPE_2 . METHOD_2 ( FLOAT_1 , args . <unk> ) ) ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args ) { VAR_1 = args.length ; VAR_2 = ( ( float ) ( TYPE_2 . METHOD_2 ( FLOAT_1 , args . trim ) ) ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 1 ] ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 1 ] ) ; }[0m
[31mExample #3[0m
Src : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = <unk> . METHOD_2 ( FLOAT_1 ) ; b = <unk> . METHOD_2 ( FLOAT_2 ) ; c = a % b ; return c ; }[0m
Trg : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a % b ; return c ; }[0m
Pred: public static float METHOD_1 ( ) { float a ; float b ; float c = a . METHOD_2 ( FLOAT_1 ) ; b = min . METHOD_2 ( FLOAT_2 ) ; c = a % b ; return c ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = <unk> . get ( VAR_3 ) ; VAR_4 = <unk> . get ( VAR_5 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = VAR_1 . METHOD_3 ( ) ; VAR_2 = <unk> . get ( VAR_3 ) ; VAR_4 = <unk> . get ( VAR_5 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; java.io.File = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = VAR_2 . get ( VAR_3 ) ; VAR_4 = get ( VAR_5 ) ; }[0m
[31mExample #5[0m
Src : public static synchronized boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { TYPE_2 type = TYPE_2 . METHOD_2 ( <unk> . METHOD_3 ( ) ) ; return ( type != null ) && ( type == ( VAR_1 ) ) ; }[0m
Trg : public static synchronized boolean METHOD_1 ( TYPE_1 . <unk> <unk> ) { TYPE_2 type = <unk> . METHOD_3 ( ) ; return ( type != null ) && ( type == ( VAR_1 ) ) ; }[0m
Pred: public static synchronized boolean METHOD_1 ( TYPE_1 TYPE_2 ) { TYPE_2 type = TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; return ( type != null ) && ( type == ( VAR_1 ) ) ; }[0m
[31mExample #6[0m
Src : public long METHOD_1 ( TYPE_1 element , TYPE_2 VAR_1 ) { return element . METHOD_1 ( VAR_1 ) ; }[0m
Trg : public long METHOD_1 ( TYPE_1 element , TYPE_2 VAR_1 ) { return element . METHOD_1 ( VAR_1 ) . METHOD_1 ( ) ; }[0m
Pred: public long METHOD_1 ( TYPE_1 element , TYPE_2 VAR_1 ) { return element . METHOD_1 ( VAR_1 ) ; }[0m
[31mExample #7[0m
Src : public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return INT_1 ; } return ( ( java.lang.Integer ) ( source ) ) . METHOD_1 ( ) ; }[0m
Trg : public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return INT_1 ; } return source ; }[0m
Pred: public java.lang.Object replaceAll ( java.lang.Object source , java.io.File f ) { if ( source == null ) { return INT_1 ; } return ( ( java.lang.Integer ) ( source ) ) . METHOD_1 ( ) ; }[0m
[31mExample #8[0m
Src : public TYPE_1 get ( ) { TYPE_1 <unk> = METHOD_1 ( METHOD_2 ( ) : : get ) ; TYPE_2 . METHOD_3 ( <unk> , <unk> ) ; TYPE_2 . METHOD_4 ( <unk> , TYPE_3 . METHOD_5 ( <unk> ) ) ; return <unk> ; }[0m
Trg : public TYPE_1 get ( ) { TYPE_1 <unk> = METHOD_1 ( METHOD_2 ( ) : : get ) ; TYPE_2 . METHOD_3 ( <unk> , <unk> ) ; TYPE_2 . METHOD_4 ( <unk> , <unk> ) ; return <unk> ; }[0m
Pred: public TYPE_1 get ( ) { TYPE_1 f = METHOD_1 ( METHOD_2 ( ) : : get ) ; TYPE_2 . METHOD_3 ( f , TYPE_2 ) ; TYPE_2 . METHOD_4 ( TYPE_2 , TYPE_3 . METHOD_5 ( ) ) ; return return ; }[0m
[31mExample #9[0m
Src : protected TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_3 ( ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; }[0m
[31mExample #10[0m
Src : private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; }[0m
[31mExample #11[0m
Src : public java.lang.Object METHOD_1 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 1 ; }[0m
Trg : public java.lang.Object METHOD_1 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : 1 ; }[0m
Pred: public java.lang.Object METHOD_1 ( java.lang.Object source , java.io.File f ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 1 ; }[0m
[31mExample #12[0m
Src : protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . <unk> ( ) . METHOD_3 ( ) , TYPE_4 . <unk> ( ) . METHOD_4 ( ) ) ; }[0m
Trg : protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) , TYPE_4 . METHOD_4 ( ) ) ; }[0m
Pred: protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . METHOD_4 ( ) ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( TYPE_1 value ) { status = value . getValue ( ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { status = value ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { status = value . getValue ( ) ; }[0m
[31mExample #14[0m
Src : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = <unk> . METHOD_2 ( FLOAT_1 ) ; b = <unk> . METHOD_2 ( FLOAT_2 ) ; c = a - b ; return c ; }[0m
Trg : public static float METHOD_1 ( ) { float a ; float b ; float c ; a = FLOAT_1 ; b = FLOAT_2 ; c = a - b ; return c ; }[0m
Pred: public static float METHOD_1 ( ) { float a ; float b ; float c = a . METHOD_2 ( FLOAT_1 ) ; b = min . METHOD_2 ( FLOAT_2 ) ; c = a - b ; return c ; }[0m
[31mExample #15[0m
Src : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_6 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; }[0m
[31mExample #16[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = <unk> . get ( STRING_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = VAR_1 . METHOD_3 ( ) ; VAR_2 = <unk> . get ( STRING_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; java.io.File = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = TYPE_1 . get ( STRING_1 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; }[0m
---------------
Class: Remove parameter from the method invocation
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = TYPE_3 . METHOD_2 ( key ) ; if ( ( VAR_2 ) == null ) { throw new TYPE_4 ( STRING_1 ) ; } return VAR_3 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private <unk> . <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , VAR_1 ) ; }[0m
Trg : private <unk> . <unk> METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( <unk> . METHOD_3 ( ) , name , true , null , null , VAR_1 , true ) ; }[0m
Pred: private static java.lang.String METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { return METHOD_2 ( TYPE_2 . METHOD_3 ( ) , name , true , null , null , VAR_1 ) ; }[0m
[31mExample #2[0m
Src : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) , TYPE_1 . <unk> ( VAR_3 class ) ) ; <unk> . METHOD_3 ( VAR_4 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) , TYPE_1 . <unk> ( ) ) ; <unk> . METHOD_3 ( VAR_4 ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( ( ( VAR_2 ) == null ) || ( ( VAR_2 . trim ( ) ) == null ) ) { return ; } TYPE_1 ( VAR_1 ) . getInt ( java.lang.Math.random ) ; TYPE_1 . METHOD_3 ( VAR_4 ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( int VAR_1 , TYPE_1 <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; }[0m
Trg : public void METHOD_1 ( int VAR_1 , TYPE_1 <unk> , java.lang.String value ) { VAR_2 . METHOD_2 ( true ) ; }[0m
Pred: public void METHOD_1 ( int VAR_1 , TYPE_1 , java.lang.String value ) { VAR_2 . METHOD_2 ( ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , false , false ) ; METHOD_3 ( 0 , false , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( 0 , false , true ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , false , false ) ; METHOD_3 ( 0 , false , true ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( <unk> , VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( <unk> ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( <unk> ) ; VAR_1 . METHOD_2 ( <unk> ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_3 ) ; VAR_1 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }[0m
[31mExample #6[0m
Src : public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_1 ( null ) ; }[0m
Trg : public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_1 ( null , null ) ; }[0m
Pred: public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_1 ( null ) ; TYPE_2 . METHOD_1 ( null ) ; }[0m
[31mExample #7[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > <unk> , java.lang.String <unk> ) throws java.lang.Exception { return METHOD_2 ( <unk> , null , null , <unk> , null , null ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > <unk> , java.lang.String <unk> ) throws java.lang.Exception { return METHOD_2 ( <unk> , null , <unk> , null , null ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > ) { return METHOD_2 ( ) ; }[0m
[31mExample #8[0m
Src : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( true ) ; add ( VAR_1 ) ; }[0m
Trg : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( ) ; add ( VAR_1 ) ; }[0m
Pred: protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( true ) ; VAR_1 = new TYPE_1 ( true ) ; }[0m
[31mExample #9[0m
Src : public TYPE_1 <unk> ( ) { return new TYPE_1 ( this , null ) ; }[0m
Trg : public TYPE_1 <unk> ( ) { return new TYPE_1 ( this ) ; }[0m
Pred: public TYPE_1 ( ) { return new TYPE_1 ( this , null ) ; }[0m
[31mExample #10[0m
Src : public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class < ? > [ ] VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; }[0m
Trg : public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class < ? > [ ] VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; }[0m
Pred: public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.Class < ? > [ ] VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_3 , STRING_4 , result ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_4 , result ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; java.lang.String result = VAR_1 . METHOD_3 ( VAR_2 , STRING_2 , STRING_2 , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_3 , STRING_4 , result ) ; }[0m
[31mExample #12[0m
Src : public TYPE_1 <unk> ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Trg : public TYPE_1 <unk> ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( false ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( false ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 , true ) ; METHOD_5 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( false ) ; METHOD_3 ( false ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; }[0m
[31mExample #14[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new <unk> ( ) , null , new java.util.ArrayList < <unk> . <unk> > ( ) ) , false , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new <unk> ( ) , null , new java.util.ArrayList < <unk> . <unk> > ( ) , null ) , false , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( new java.util.HashMap ( ) , null , new java.util.ArrayList < > ( ) ) , false , VAR_2 ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_2 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( <unk> ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_2 , 0 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( <unk> ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( INT_1 , INT_2 , 0 , 0 , 0 ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; }[0m
[31mExample #16[0m
Src : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 ) ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { return METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
[31mExample #17[0m
Src : public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) throws <unk> { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_5 , VAR_6 , VAR_1 , VAR_2 ) ; } }[0m
Trg : public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) throws <unk> { synchronized ( VAR_3 ) { METHOD_2 ( ) ; return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_1 , VAR_2 ) ; } }[0m
Pred: public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) throws java.io.IOException { return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_5 , VAR_6 , VAR_1 , VAR_2 ) ; }[0m
[31mExample #18[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , true , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , true , true , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , true , true ) ; }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 1 , 0 ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 1 , 0 , 0 ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( 0 , 0 , 0 , 1 , 0 ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
[31mExample #20[0m
Src : public void METHOD_1 ( ) { <unk> ( null ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( VAR_1 . <unk> class ) ) ; TYPE_2 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( null ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) ) ; TYPE_2 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return ; } else ( ( null ) . getInt ( ) . METHOD_2 ( TYPE_1 . getInt ( VAR_1 . getId ( ) ) ) ; TYPE_2 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ; }[0m
[31mExample #21[0m
Src : protected TYPE_1 < TYPE_2 > <unk> ( ) { return new TYPE_3 ( METHOD_1 ( ) , METHOD_1 ( ) . getId ( ) ) ; }[0m
Trg : protected TYPE_1 < TYPE_2 > <unk> ( ) { return new TYPE_3 ( METHOD_1 ( ) ) ; }[0m
Pred: protected TYPE_1 < TYPE_2 > ( ( ) ) { return new TYPE_3 ( METHOD_1 ( ) , METHOD_1 ( ) . getId ( ) ) ; }[0m
[31mExample #22[0m
Src : public final void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . <unk> { METHOD_2 ( VAR_1 , null ) ; }[0m
Trg : public final void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . <unk> { METHOD_2 ( VAR_1 ) ; }[0m
Pred: public final void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . { METHOD_2 ( VAR_1 , null ) ; }[0m
[31mExample #23[0m
Src : public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( new java.util.HashMap < > ( ) , true , true ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( new java.util.HashMap < > ( ) , true , true , true ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( new java.util.HashMap < > ( ) , true , true ) ; }[0m
[31mExample #24[0m
Src : public boolean METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( VAR_1 ) ; }[0m
Trg : public boolean METHOD_1 ( int VAR_1 ) { return VAR_2 . METHOD_3 ( VAR_1 ) ; }[0m
Pred: public boolean METHOD_1 ( int VAR_1 ) { METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( VAR_1 ) ; }[0m
[31mExample #25[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . <unk> ( 1 , 0 ) , VAR_1 . METHOD_3 ( INT_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . <unk> ( 1 ) , VAR_1 . METHOD_3 ( INT_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . getInt ( 1 , 0 ) , VAR_1 . METHOD_3 ( INT_1 ) ) ; }[0m
[31mExample #26[0m
Src : private java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true , null ) ; }[0m
Trg : private java.util.List < <unk> > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true ) ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) , true , null ) ; }[0m
[31mExample #27[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) ) ) . <unk> ( null ) ; TYPE_2 . METHOD_2 ( <unk> , VAR_3 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( null ) ; TYPE_2 . METHOD_2 ( <unk> , VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) { if ( ( ( VAR_2 ) != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { return ( VAR_1 . get ( TYPE_1 . getInt ( VAR_2 . f class ) ) ) . getInt ( null ) ; } }[0m
[31mExample #28[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , new java.io.File ( VAR_2 , STRING_1 ) , false ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( null , new java.io.File ( VAR_2 , STRING_1 ) , false ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , null , new java.io.File ( VAR_2 , STRING_1 ) , false ) ; }[0m
[31mExample #29[0m
Src : public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 <unk> = METHOD_2 ( VAR_1 , false , false ) ; return new TYPE_1 ( <unk> . METHOD_3 ( ) ) ; }[0m
Trg : public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 <unk> = METHOD_2 ( VAR_1 , false , false , false ) ; return new TYPE_1 ( <unk> . METHOD_3 ( ) ) ; }[0m
Pred: public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = METHOD_2 ( VAR_1 , false , false ) ; return new TYPE_1 ( TYPE_1 . METHOD_3 ( ) ) ; }[0m
---------------
Class: Remove redundant initialization
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { int [ ] a = null ; TYPE_1 VAR_1 = new TYPE_1 ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Trg : public void METHOD_1 ( ) { try { int [ ] a = null ; new TYPE_1 ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { int [ ] a = null ; TYPE_1 VAR_1 = new TYPE_1 ( a ) ; METHOD_2 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 [ ] VAR_1 = new TYPE_1 [ VAR_2 ] ; TYPE_2 VAR_3 = new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( ) { try { TYPE_1 [ ] VAR_1 = new TYPE_1 [ VAR_2 ] ; new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 [ ] VAR_1 = new TYPE_1 [ VAR_2 ] ; TYPE_2 VAR_3 = new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; METHOD_3 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
---------------
Class: Remove statement
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( VAR_2 ) ; return METHOD_2 ( VAR_1 ) ; }[0m
Trg : private java.util.List < TYPE_1 > METHOD_1 ( ) { return METHOD_2 ( VAR_2 ) ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_3 ( VAR_2 ) ; return METHOD_2 ( VAR_1 ) ; }[0m
[31mExample #2[0m
Src : public void info ( java.lang.String msg ) { if ( ( TYPE_1 . METHOD_1 ( ) ) < ( VAR_1 ) ) { return ; } <unk> ( TYPE_1 , msg ) ; }[0m
Trg : public void info ( java.lang.String msg ) { <unk> ( TYPE_1 , msg ) ; }[0m
Pred: public void info ( java.lang.String msg ) { if ( ( TYPE_1 . METHOD_1 ( ) ) < ( VAR_1 ) ) { return ; } }[0m
[31mExample #3[0m
Src : public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg > > 0 ; }[0m
Trg : public static long METHOD_1 ( long arg ) { return arg > > 0 ; }[0m
Pred: public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg > > 0 ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , 0 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; METHOD_6 ( <unk> . get ( ) , 0 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( . get ( ) , 0 ) ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; <unk> ( VAR_1 ) . <unk> ( VAR_2 ) . METHOD_6 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( <unk> , VAR_2 , VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_2 ( <unk> , <unk> ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 0 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_2 VAR_4 = new TYPE_2 ( <unk> , <unk> ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 0 ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( INT_1 , 0 ) ; }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
[31mExample #8[0m
Src : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { assert ( VAR_1 . METHOD_2 ( VAR_2 class ) ) == null ; return METHOD_3 ( METHOD_4 ( VAR_1 ) , VAR_1 , null ) ; }[0m
Trg : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_3 ( METHOD_4 ( VAR_1 ) , VAR_1 , null ) ; }[0m
Pred: TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { assert ( VAR_1 . METHOD_2 ( VAR_2 class ) ) == null ; return METHOD_3 ( METHOD_4 ( VAR_1 ) , VAR_1 , null ) ; }[0m
[31mExample #9[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; }[0m
[31mExample #10[0m
Src : public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x + y ; return VAR_2 - y ; }[0m
Trg : public static int METHOD_1 ( int x , int y ) { int VAR_2 = x + y ; return VAR_2 - y ; }[0m
Pred: public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x + y ; return VAR_2 - y ; }[0m
[31mExample #11[0m
Src : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) ) ; <unk> ( VAR_1 . METHOD_3 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_2 ( TYPE_1 . <unk> ( ) ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( ( VAR_1 . METHOD_3 ( ) ) == null ) ) { return ; } else ( ( VAR_1 ) . getInt ( java.lang.Math.random ( ) ) ) ; }[0m
[31mExample #12[0m
Src : public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return INT_1 - ( INT_2 - arg ) ; }[0m
Trg : public static long METHOD_1 ( long arg ) { return INT_1 - ( INT_2 - arg ) ; }[0m
Pred: public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return INT_1 - ( INT_2 - arg ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; <unk> VAR_2 = <unk> . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; <unk> VAR_2 = <unk> . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; ( VAR_2 ) METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }[0m
[31mExample #14[0m
Src : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( INT_1 , INT_1 ) ; }[0m
Trg : private void METHOD_1 ( ) { METHOD_3 ( INT_1 , INT_1 ) ; }[0m
Pred: private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( INT_1 , INT_1 ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( <unk> ( 1 ) ) ) ; VAR_1 . METHOD_6 ( ) ; METHOD_7 ( <unk> . get ( ) , 1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( <unk> ( 1 ) ) ) ; METHOD_7 ( <unk> . get ( ) , 1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( ) ) ; }[0m
[31mExample #16[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; c . METHOD_3 ( null , VAR_1 , STRING_1 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; try { c . METHOD_3 ( null , VAR_1 , STRING_1 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 c = TYPE_2 . METHOD_2 ( ) ; c . METHOD_3 ( null , VAR_1 , STRING_1 ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_2 ) { } }[0m
[31mExample #17[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> <unk> ) { VAR_1 . METHOD_2 ( <unk> , <unk> ) ; VAR_1 . METHOD_3 ( <unk> ) ; return <unk> ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_1 <unk> , <unk> <unk> ) { VAR_1 . METHOD_2 ( <unk> , <unk> ) ; return <unk> ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_1 f , java.io.File f ) { VAR_1 . METHOD_2 ( ) ; return ( TYPE_1 ) ; }[0m
[31mExample #18[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( true ) ; METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( <unk> . METHOD_5 ( new TYPE_2 ( VAR_3 ) ) , TYPE_3 . METHOD_6 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( true ) ; TYPE_1 . METHOD_4 ( <unk> . METHOD_5 ( new TYPE_2 ( VAR_3 ) ) , TYPE_3 . METHOD_6 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( new TYPE_2 ( VAR_3 ) ) , TYPE_3 . METHOD_6 ( ) ) ; }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) { protected TYPE_3 METHOD_2 ( ) { return null ; } protected TYPE_4 METHOD_3 ( ) { return null ; } } ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) { protected TYPE_3 METHOD_2 ( ) { return null ; } protected TYPE_4 METHOD_3 ( ) { return null ; } }[0m
[31mExample #20[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . assertEquals ( ( STRING_2 + ( value ) ) , value . METHOD_3 ( ) , value . getValue ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 . assertEquals ( ( STRING_2 + ( value ) ) , value . METHOD_3 ( ) , value . getValue ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . assertEquals ( ( STRING_2 + ( value ) ) , value . METHOD_3 ( ) , value . getValue ( ) ) ; }[0m
[31mExample #21[0m
Src : public boolean METHOD_1 ( int id , java.lang.String response ) { if ( VAR_1 ) { return VAR_2 . METHOD_2 ( response ) ; } else { return METHOD_3 ( ( ( ( STRING_1 + id ) + STRING_2 ) + response ) ) ; } }[0m
Trg : public boolean METHOD_1 ( int id , java.lang.String response ) { return VAR_2 . METHOD_2 ( response ) ; }[0m
Pred: public boolean METHOD_1 ( int id , java.lang.String response ) { if ( VAR_1 ) { return VAR_2 . METHOD_2 ( response ) ; } else { return METHOD_3 ( ( ( ( STRING_1 + id ) + STRING_2 ) + response ) ) ; } }[0m
[31mExample #22[0m
Src : public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x - y ; return y + VAR_2 ; }[0m
Trg : public static int METHOD_1 ( int x , int y ) { int VAR_2 = x - y ; return y + VAR_2 ; }[0m
Pred: public static int METHOD_1 ( int x , int y ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } int VAR_2 = x - y ; return y + VAR_2 ; }[0m
[31mExample #23[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; <unk> . METHOD_7 ( new TYPE_1 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; <unk> . METHOD_7 ( new TYPE_1 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; }[0m
[31mExample #24[0m
Src : protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; }[0m
Trg : protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; }[0m
Pred: protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; }[0m
[31mExample #25[0m
Src : void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; }[0m
Trg : void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; }[0m
Pred: void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; }[0m
[31mExample #26[0m
Src : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) ; <unk> VAR_2 = VAR_3 ; java.util.List < TYPE_1 > VAR_4 = <unk> . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> VAR_2 = VAR_3 ; java.util.List < TYPE_1 > VAR_4 = <unk> . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) ; VAR_2 = VAR_3 ; java.util.List < TYPE_1 > VAR_4 = TYPE_2 . METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; }[0m
[31mExample #27[0m
Src : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; return VAR_2 ; }[0m
Trg : TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; return VAR_2 ; }[0m
Pred: TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; return VAR_2 ; }[0m
[31mExample #28[0m
Src : private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true ) ; METHOD_4 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { METHOD_3 ( true ) ; METHOD_4 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true ) ; METHOD_4 ( ) ; }[0m
[31mExample #29[0m
Src : public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 class ) ; TYPE_2 . METHOD_3 ( new TYPE_3 ( ) ) ; }[0m
Trg : public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 class ) ; }[0m
Pred: public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 class ) ; TYPE_2 . METHOD_3 ( new TYPE_3 ( ) ) ; }[0m
[31mExample #30[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( <unk> . get ( ) , INT_1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_6 ( <unk> . get ( ) , INT_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( java.lang.Math.random ( ) , INT_1 ) ; }[0m
[31mExample #31[0m
Src : public void METHOD_1 ( int VAR_1 ) { <unk> ( VAR_2 . <unk> , ( STRING_1 + VAR_1 ) ) ; }[0m
Trg : public void METHOD_1 ( int VAR_1 ) { }[0m
Pred: public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == null ) { return ; } }[0m
[31mExample #32[0m
Src : public void METHOD_1 ( ) { if ( ( <unk> ( ) ) != null ) { super . METHOD_1 ( ) ; } else { <unk> ( null ) ; } }[0m
Trg : public void METHOD_1 ( ) { if ( ( <unk> ( ) ) != null ) { super . METHOD_1 ( ) ; } }[0m
Pred: public void METHOD_1 ( ) { if ( ( ( ( ) ) != null ) && ( ( VAR_2 ) != null ) ) { super . METHOD_1 ( ) ; } else { TYPE_1 ( null ) ; } }[0m
[31mExample #33[0m
Src : public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; <unk> . METHOD_3 ( ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { <unk> . METHOD_3 ( ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.String [ ] args ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; TYPE_1 . METHOD_3 ( ) ; }[0m
[31mExample #34[0m
Src : public static int METHOD_1 ( int <unk> , int VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } return ( - <unk> ) - VAR_1 ; }[0m
Trg : public static int METHOD_1 ( int <unk> , int VAR_1 ) { return ( - <unk> ) - VAR_1 ; }[0m
Pred: public static int METHOD_1 ( int offset , int VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } return ( - ( ) ) - VAR_1 ; }[0m
[31mExample #35[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; <unk> . METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; TYPE_1 VAR_2 = <unk> . get ( ) ; assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; <unk> . METHOD_4 ( METHOD_5 ( ) ) ; TYPE_1 VAR_2 = <unk> . get ( ) ; assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; assertEquals ( METHOD_3 ( ) ) ; assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; }[0m
[31mExample #36[0m
Src : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { METHOD_3 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; }[0m
[31mExample #37[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; parameters . <unk> ( VAR_1 ) ; parameters . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { parameters . <unk> ( VAR_1 ) ; parameters . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; parameters . replaceAll ( VAR_1 ) ; parameters . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( java.lang.Math.random ( ) ) ; }[0m
[31mExample #38[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( null ) ; <unk> . METHOD_4 ( ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_3 ( null ) ; <unk> . METHOD_4 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( null ) ; }[0m
[31mExample #39[0m
Src : private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; }[0m
Trg : private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; }[0m
Pred: private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; }[0m
[31mExample #40[0m
Src : public void METHOD_1 ( ) { <unk> ( STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( ) { }[0m
Pred: public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; }[0m
[31mExample #41[0m
Src : public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) == ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Trg : public static int METHOD_1 ( int i ) { return ( i > INT_1 ) == ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Pred: public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) == ( TYPE_2 . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
[31mExample #42[0m
Src : public static byte METHOD_1 ( short value ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( ( byte ) ( ( char ) ( value ) ) ) ; }[0m
Trg : public static byte METHOD_1 ( short value ) { return ( ( byte ) ( ( char ) ( value ) ) ) ; }[0m
Pred: public static byte METHOD_1 ( short value ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( ( byte ) ( ( char ) ( value ) ) ) ; }[0m
[31mExample #43[0m
Src : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( <unk> ( ) ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } METHOD_7 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( <unk> ( ) ) != null ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; } METHOD_7 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( ( ( ) ) != null ) && ( ( VAR_2 ) != null ) ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } METHOD_7 ( ) ; }[0m
[31mExample #44[0m
Src : public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_2 ) ; }[0m
[31mExample #45[0m
Src : public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_1 ) ; }[0m
[31mExample #46[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> <unk> = new <unk> ( ) ; <unk> ( VAR_1 . METHOD_2 ( <unk> , VAR_2 ) ) . <unk> ( true ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( <unk> ) , VAR_3 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_1 . METHOD_2 ( <unk> , VAR_2 ) ) . <unk> ( true ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( <unk> ) , VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.io.File f = new java.io.File ( ) ; assertEquals ( VAR_1 . METHOD_2 ( VAR_2 , VAR_2 ) ) . getInt ( true ) ; TYPE_1 . METHOD_3 ( ) ; }[0m
[31mExample #47[0m
Src : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_2 ( STRING_1 ) ) ; METHOD_2 ( new TYPE_2 ( STRING_2 ) ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; METHOD_2 ( new TYPE_2 ( STRING_1 ) ) ; METHOD_2 ( new TYPE_2 ( STRING_2 ) ) ; }[0m
[31mExample #48[0m
Src : public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg - 0 ; }[0m
Trg : public static long METHOD_1 ( long arg ) { return arg - 0 ; }[0m
Pred: public static long METHOD_1 ( long arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg ; }[0m
[31mExample #49[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; }[0m
[31mExample #50[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , true ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) ; METHOD_7 ( <unk> . get ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , true ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; METHOD_7 ( <unk> . get ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , true ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) ; METHOD_7 ( ) ; }[0m
[31mExample #51[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; }[0m
[31mExample #52[0m
Src : public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( <unk> , VAR_2 , VAR_3 ) ; METHOD_2 ( INT_1 , <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( INT_1 , <unk> ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; }[0m
[31mExample #53[0m
Src : public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; METHOD_3 ( ( ! VAR_1 ) ) ; }[0m
Trg : public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; }[0m
Pred: public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; METHOD_3 ( ( ! VAR_1 ) ) ; }[0m
[31mExample #54[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; return METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_3 , new TYPE_3 ( ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_3 , new TYPE_3 ( ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; return METHOD_3 ( VAR_1 , new TYPE_2 ( ) , VAR_3 , new TYPE_3 ( ) ) ; }[0m
[31mExample #55[0m
Src : public static float METHOD_1 ( float arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg / FLOAT_1 ; }[0m
Trg : public static float METHOD_1 ( float arg ) { return arg / FLOAT_1 ; }[0m
Pred: public static float METHOD_1 ( float arg ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return arg / FLOAT_1 ; }[0m
[31mExample #56[0m
Src : public static long METHOD_1 ( long <unk> , long VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } long VAR_3 = - VAR_1 ; return ( <unk> + VAR_3 ) | ( <unk> + VAR_3 ) ; }[0m
Trg : public static long METHOD_1 ( long <unk> , long VAR_1 ) { long VAR_3 = - VAR_1 ; return ( <unk> + VAR_3 ) | ( <unk> + VAR_3 ) ; }[0m
Pred: public static long METHOD_1 ( long offset , long VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( ) ; } long VAR_3 = - VAR_1 ; return ( f + VAR_3 ) | ( VAR_2 + VAR_3 ) ; }[0m
[31mExample #57[0m
Src : public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) != ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Trg : public static int METHOD_1 ( int i ) { return ( i > INT_1 ) != ( <unk> . METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
Pred: public static int METHOD_1 ( int i ) { if ( VAR_1 ) { throw new TYPE_1 ( ) ; } return ( i > INT_1 ) != ( METHOD_2 ( ) ) ? INT_2 : INT_3 ; }[0m
[31mExample #58[0m
Src : public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { file = VAR_1 ; } }[0m
Trg : public void METHOD_1 ( final java.lang.String VAR_1 ) { file = VAR_1 ; }[0m
Pred: public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { file = VAR_1 ; } }[0m
[31mExample #59[0m
Src : public static void METHOD_1 ( java.lang.String [ ] args ) { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; <unk> . METHOD_3 ( new TYPE_2 ( ) ) ; }[0m
Trg : public static void METHOD_1 ( java.lang.String [ ] args ) { <unk> . METHOD_3 ( new TYPE_2 ( ) ) ; }[0m
Pred: public static void METHOD_1 ( java.lang.String [ ] args ) { TYPE_1 . METHOD_2 ( args [ 1 ] ) ; TYPE_1 . METHOD_3 ( new TYPE_2 ( ) ) ; }[0m
[31mExample #60[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) ; super . METHOD_1 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) ; super . METHOD_1 ( ) ; }[0m
[31mExample #61[0m
Src : protected void METHOD_1 ( <unk> VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this ) ; }[0m
Trg : protected void METHOD_1 ( <unk> VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( this ) ; }[0m
[31mExample #62[0m
Src : public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . <unk> ( ) . equals ( VAR_2 ) ) ; }[0m
Trg : private static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . <unk> ( ) . equals ( VAR_2 ) ) ; }[0m
Pred: public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . toLowerCase ( ) . equals ( VAR_2 ) ) ; }[0m
[31mExample #63[0m
Src : public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; }[0m
Trg : public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; return METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; }[0m
---------------
Class: Rename method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object offset ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( ) ) ; METHOD_2 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object result ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( result ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_2 ( ) . <unk> ( VAR_1 ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object result ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( result ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_2 ( ) . <unk> ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object n , java.lang.Object result ) { java.util.List < java.lang.Integer > VAR_1 = ( ( java.util.List < > > ) ( result ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_2 ( ) . getInt ( VAR_1 ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object VAR_2 , java.lang.Object result ) { METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( ( ( TYPE_1 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ; VAR_2 = VAR_1 ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.List < <unk> > VAR_1 = ( ( java.util.List < <unk> > ) ( ( ( TYPE_1 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ; VAR_2 = VAR_1 ; }[0m
Pred: public void METHOD_1 ( java.lang.Object [ , java.lang.Object ] ) { java.util.List < java.lang.Integer > VAR_1 = ( ( java.util.List < java.lang.Integer > ) ( ( ( TYPE_1 . trim ( ) ) ) ) ) ; VAR_2 = VAR_1 ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 . METHOD_2 ( target ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 . METHOD_2 ( target ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object VAR_2 ) { TYPE_1 . METHOD_2 ( target ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object offset ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.lang.Integer ) ( ) ) ) ; VAR_1 . METHOD_3 ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 ) ( <unk> ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 ) ( <unk> ) ) ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object ) { VAR_1 . METHOD_2 ( ( ( TYPE_1 ) ( ) ) ) ; }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ( ( TYPE_2 . METHOD_3 ( ) . size ( ) ) == 0 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . assertEquals ( 0 , TYPE_2 . METHOD_3 ( ) . size ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ( ( TYPE_2 . METHOD_3 ( ) . size ( ) ) == 0 ) ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object offset ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < > > = ( ( java.util.ArrayList < TYPE_1 > ) ( ) ) ; VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #9[0m
Src : boolean METHOD_1 ( ) ;[0m
Trg : boolean <unk> ( ) ;[0m
Pred: boolean METHOD_1 ( ) { return METHOD_1 ( ) ; }[0m
[31mExample #10[0m
Src : public void METHOD_1 ( ) { <unk> . <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_1 , VAR_2 , true ) ; TYPE_1 . METHOD_3 ( result ) ; }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( TYPE_1 ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( TYPE_1 ) ( <unk> ) ) ; METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object offset ) { VAR_1 = ( ( TYPE_1 ) ( java.lang.Math.random ( ) ) ) ; METHOD_2 ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object offset ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; }[0m
---------------
Class: Rename parameter
Golden example (False):
[31mExample #1[0m
Src : public native float METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , <unk> ;[0m
Trg : public native float METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , <unk> ;[0m
Pred: public synchronized float METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , java.io.IOException { TYPE_1 . METHOD_1 ( VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public native boolean METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , <unk> ;[0m
Trg : public native boolean METHOD_1 ( java.lang.Object obj ) throws TYPE_1 , <unk> ;[0m
Pred: public boolean METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 , java.io.IOException { TYPE_1 . METHOD_1 ( VAR_1 ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( <unk> type ) { }[0m
Trg : public void METHOD_1 ( <unk> method ) { }[0m
Pred: public void METHOD_1 ( ) { }[0m
[31mExample #3[0m
Src : TYPE_1 id ( java.lang.String VAR_1 ) throws TYPE_2 ;[0m
Trg : TYPE_1 id ( java.lang.String id ) throws TYPE_2 ;[0m
Pred: java.lang.String id ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_2 . id ( VAR_1 ) ; }[0m
[31mExample #4[0m
Src : public int METHOD_1 ( int VAR_1 , <unk> . <unk> <unk> ) ;[0m
Trg : public int METHOD_1 ( int VAR_1 , <unk> . <unk> <unk> ) ;[0m
Pred: public int METHOD_1 ( int VAR_1 , java.util.Date . getInt ( ) ) ; }[0m
---------------
Class: Rename variable
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_2 = VAR_1 ; }[0m
Trg : public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_1 = VAR_1 ; }[0m
Pred: public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { this . VAR_2 = VAR_1 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( this ) ; }[0m
Trg : private native java.lang.String METHOD_1 ( ) ;[0m
Pred: private java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( this ) ; }[0m
---------------
Class: Replace fully qualified name with import or vice versa
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_3 ) ; METHOD_3 ( STRING_4 ) ; } catch ( TYPE_2 VAR_1 ) { } }[0m
Trg : public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_3 ) ; <unk> . METHOD_3 ( STRING_4 ) ; } catch ( TYPE_2 VAR_1 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_3 ) ; METHOD_3 ( STRING_4 ) ; } catch ( TYPE_2 VAR_1 ) { } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) ) ; assertEquals ( VAR_2 , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) ) ; <unk> ( VAR_2 , true ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; assertEquals ( VAR_2 ) ; assertEquals ( VAR_2 , true ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_4 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_4 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_4 ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { TYPE_1 key = new TYPE_1 ( ) ; assertEquals ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 key = new TYPE_1 ( ) ; <unk> ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 key = new TYPE_1 ( ) ; assertEquals ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( long VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 <unk> ) { VAR_2 . <unk> ( STRING_1 ) ; } }[0m
Trg : public static void METHOD_1 ( long VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 <unk> ) { java.lang.System.out.println ( STRING_1 ) ; } }[0m
Pred: public static void METHOD_1 ( long VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( TYPE_1 <unk> ) throws java.lang.Exception { TYPE_2 <unk> = new TYPE_2 ( ) ; <unk> . METHOD_2 ( <unk> , <unk> ) ; assertEquals ( VAR_1 , <unk> . <unk> ( ) ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 <unk> ) throws java.lang.Exception { TYPE_2 <unk> = new TYPE_2 ( ) ; <unk> . METHOD_2 ( <unk> , <unk> ) ; <unk> ( VAR_1 , <unk> . <unk> ( ) ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 expr ) throws java.lang.Exception { TYPE_2 f = new TYPE_2 ( ) ; assertEquals ( VAR_1 , VAR_2 ) ; assertEquals ( VAR_1 , java.lang.Math.random ( ) ) ; }[0m
[31mExample #6[0m
Src : private static < TYPE_1 > void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { int length = VAR_1 . length ; assertEquals ( ( STRING_1 + length ) , 0 , length ) ; }[0m
Trg : private static < TYPE_1 > void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { int length = VAR_1 . length ; <unk> ( ( STRING_1 + length ) , 0 , length ) ; }[0m
Pred: private static < TYPE_1 > void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { int length = VAR_1 . length ; assertEquals ( ( STRING_1 + length ) , 0 , length ) ; }[0m
---------------
Class: Replace generic specification with diamond operator
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 < TYPE_2 > get ( ) { return new TYPE_1 < TYPE_2 > ( key , TYPE_3 . METHOD_1 ( VAR_1 , type ) , STRING_1 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > get ( ) { return new TYPE_1 ( key , TYPE_3 . METHOD_1 ( VAR_1 , type ) , STRING_1 ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > get ( ) { return new TYPE_1 < TYPE_2 > ( key , TYPE_3 . METHOD_1 ( VAR_1 , type ) , STRING_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( ) { return <unk> ( new TYPE_2 < <unk> > ( VAR_1 , VAR_2 . <unk> class ) , false ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return <unk> ( new TYPE_2 ( VAR_1 , VAR_2 . <unk> class ) , false ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return ( ( new TYPE_2 < TYPE_2 > ( VAR_1 , VAR_2 . class class ) , false ) ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = METHOD_2 ( VAR_2 class , VAR_3 , new <unk> ( VAR_4 ) ) ; return new TYPE_1 < TYPE_2 > ( VAR_1 ) ; }[0m
Trg : public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = METHOD_2 ( VAR_2 class , VAR_3 , new <unk> ( VAR_4 ) ) ; return new TYPE_1 ( VAR_1 ) ; }[0m
Pred: public TYPE_1 < TYPE_2 > METHOD_1 ( ) { java.util.List < TYPE_2 > VAR_1 = METHOD_2 ( VAR_2 class , VAR_3 , new java.util.HashMap ( VAR_4 ) ) ; return new TYPE_1 < TYPE_2 > ( VAR_1 ) ; }[0m
[31mExample #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 < <unk> > ( VAR_3 , VAR_4 . <unk> class ) ; return METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , new TYPE_3 ( ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 , VAR_4 . <unk> class ) ; return METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , new TYPE_3 ( ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 < > ( VAR_3 , VAR_4 . ) ; return METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , new TYPE_3 ( ) ) ; }[0m
[31mExample #4[0m
Src : public TYPE_1 < java.lang.String > METHOD_1 ( <unk> id ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_3 < java.lang.String > ( ) , METHOD_4 ( id ) ) ) ; }[0m
Trg : public TYPE_1 < java.lang.String > METHOD_1 ( <unk> id ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_3 ( ) , METHOD_4 ( id ) ) ) ; }[0m
Pred: public TYPE_1 < java.lang.String > METHOD_1 ( TYPE_2 id ) { return new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_3 < java.lang.String > ( ) , METHOD_4 ( id ) ) ) ; }[0m
[31mExample #5[0m
Src : protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( TYPE_2 . <unk> ( ) . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; }[0m
Trg : protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList ( TYPE_2 . <unk> ( ) . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; }[0m
Pred: protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( TYPE_2 . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; return VAR_1 ; }[0m
[31mExample #6[0m
Src : public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 value , <unk> . <unk> <unk> , TYPE_1 <unk> ) { return new TYPE_2 < TYPE_1 > ( value , <unk> . toString ( ) , <unk> ) ; }[0m
Trg : public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 value , <unk> . <unk> <unk> , TYPE_1 <unk> ) { return new TYPE_2 ( value , <unk> . toString ( ) , <unk> ) ; }[0m
Pred: public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 value , TYPE_1 ) { return new TYPE_2 < TYPE_1 > ( value , java.lang.String . toString ( ) , INT_7 ) ; }[0m
[31mExample #7[0m
Src : protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > value = new TYPE_1 < java.lang.String > ( ) ; value . <unk> ( VAR_1 ) ; value . <unk> ( STRING_1 ) ; return value ; }[0m
Trg : protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > value = new TYPE_1 ( ) ; value . <unk> ( VAR_1 ) ; value . <unk> ( STRING_1 ) ; return value ; }[0m
Pred: protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > value = new TYPE_1 < java.lang.String > ( ) ; value . replaceAll ( VAR_1 ) ; return value ; }[0m
---------------
Class: Replace invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . get ( STRING_1 ) ; <unk> ( VAR_2 , <unk> . METHOD_2 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . get ( STRING_1 ) ; <unk> ( <unk> . METHOD_2 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 f = VAR_1 . get ( STRING_1 ) ; if ( ( VAR_2 ) != null ) { TYPE_1 = VAR_1 . get ( STRING_1 ) ; VAR_2 . get ( STRING_1 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . METHOD_2 ( STRING_1 ) ; <unk> ( VAR_2 , <unk> . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . METHOD_2 ( STRING_1 ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 = VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 ) != null ) { TYPE_1 = VAR_1 . METHOD_2 ( STRING_1 ) ; } else { TYPE_1 = VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; } }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_1 , VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) . <unk> ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.io.File ( VAR_1 , VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , false ) ; METHOD_4 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 . getName ( ) , VAR_2 , false ) ; METHOD_4 ( result ) ; }[0m
Pred: public void METHOD_1 ( ) { java.io.File result = METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , false ) ; METHOD_4 ( result ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; VAR_1 = STRING_1 ; TYPE_2 <unk> = VAR_2 . put ( STRING_2 , <unk> ) ; <unk> ( VAR_3 , <unk> . METHOD_2 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( ) ; VAR_1 = STRING_1 ; TYPE_2 <unk> = VAR_2 . put ( STRING_2 , <unk> ) ; <unk> ( <unk> . METHOD_2 ( ) ) . <unk> ( VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 f = new TYPE_1 ( ) ; VAR_1 = STRING_1 ; TYPE_2 ( = VAR_2 . put ( STRING_2 , offset ) ) ; assertEquals ( VAR_3 , METHOD_2 ( ) ) ; }[0m
[31mExample #5[0m
Src : final byte METHOD_1 ( int offset ) { return VAR_1 . METHOD_2 ( ( offset + ( <unk> ) ) ) ; }[0m
Trg : final byte METHOD_1 ( int offset ) { return VAR_1 . METHOD_1 ( ( offset + ( <unk> ) ) ) ; }[0m
Pred: final byte METHOD_1 ( int offset ) { return VAR_1 . METHOD_2 ( ( offset + ( ) ) ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 <unk> = METHOD_3 ( STRING_1 ) ; <unk> ( STRING_2 , <unk> . METHOD_4 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 <unk> = METHOD_3 ( STRING_1 ) ; <unk> ( <unk> . METHOD_4 ( ) ) . <unk> ( STRING_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; ( ( STRING_2 ) != null ) ; TYPE_1 . METHOD_3 ( STRING_1 ) ; }[0m
[31mExample #7[0m
Src : public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 < java.lang.String > METHOD_5 ( VAR_2 ) ) ; }[0m
Trg : public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 < java.lang.String > getValue ( VAR_2 ) ) ; }[0m
Pred: public static java.lang.String METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 < java.lang.String > METHOD_5 ( VAR_2 ) ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . delete ( METHOD_2 ( ) ) ; <unk> ( VAR_2 , <unk> . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = VAR_1 . delete ( METHOD_2 ( ) ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 = VAR_1 . delete ( METHOD_2 ( ) ) ; if ( ( VAR_2 ) != null ) { TYPE_1 = VAR_1 . delete ( METHOD_2 ( ) ) ; } }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { <unk> ( STRING_1 , VAR_1 . METHOD_2 ( STRING_2 , null , STRING_3 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( STRING_2 , null , STRING_3 ) ) . <unk> ( STRING_1 ) ; }[0m
Pred: public void METHOD_1 ( ) { assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( STRING_2 , null , STRING_3 ) ) ; }[0m
[31mExample #10[0m
Src : public boolean METHOD_1 ( java.lang.String VAR_1 , <unk> . <unk> VAR_2 ) { final TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } return false ; }[0m
Trg : public boolean METHOD_1 ( java.lang.String VAR_1 , <unk> . <unk> VAR_2 ) { final TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( VAR_1 ) ; } return false ; }[0m
Pred: public boolean METHOD_1 ( java.lang.String VAR_1 , java.io.File VAR_2 ) { final TYPE_1 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_2 ( VAR_1 ) ; } return false ; }[0m
[31mExample #11[0m
Src : protected void METHOD_1 ( ) { VAR_1 . add ( STRING_1 , TYPE_1 . <unk> ( ) . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . add ( STRING_2 , METHOD_3 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { VAR_1 . put ( STRING_1 , TYPE_1 . <unk> ( ) . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . put ( STRING_2 , METHOD_3 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { VAR_1 . add ( STRING_1 , TYPE_1 . METHOD_2 ( ) . toString ( ) ) ; VAR_1 . add ( STRING_2 , METHOD_3 ( ) ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . METHOD_4 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> result = <unk> . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . getName ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.io.File result = METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result . METHOD_4 ( ) ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . METHOD_4 ( ) ) ; }[0m
Trg : public void METHOD_1 ( <unk> item , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . METHOD_4 ( ) ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 item , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , item . METHOD_4 ( ) ) ; }[0m
[31mExample #14[0m
Src : public TYPE_1 . <unk> METHOD_1 ( ) { if ( ( TYPE_2 . METHOD_2 ( <unk> . METHOD_3 ( ) ) ) && ( VAR_1 < java.lang.Boolean > METHOD_4 ( VAR_2 ) ) ) { return new TYPE_1 . <unk> ( VAR_3 ) ; } return VAR_4 ; }[0m
Trg : public TYPE_1 . <unk> METHOD_1 ( ) { if ( ( TYPE_2 . METHOD_2 ( <unk> . METHOD_3 ( ) ) ) && ( VAR_1 < java.lang.Boolean > getValue ( VAR_2 ) ) ) { return new TYPE_1 . <unk> ( VAR_3 ) ; } return VAR_4 ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { if ( ( TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) ) && ( VAR_1 < java.lang.Boolean > METHOD_4 ( VAR_2 ) ) ) { return new TYPE_1 ( VAR_3 ) ; } return VAR_4 ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_2 ( value ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_1 ( value ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 value ) { this . VAR_1 . METHOD_2 ( value ) ; }[0m
[31mExample #16[0m
Src : public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . getName ( ) ; } return VAR_1 ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; }[0m
[31mExample #17[0m
Src : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? VAR_1 . METHOD_3 ( ) : null ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? VAR_1 . METHOD_1 ( ) : null ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? VAR_1 . METHOD_3 ( ) : null ; }[0m
[31mExample #18[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < <unk> > <unk> = ( ( TYPE_2 < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < <unk> > <unk> = ( ( TYPE_2 < <unk> > ) ( <unk> ) ) ; VAR_1 . METHOD_2 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object offset ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < > > = ( ( TYPE_2 < TYPE_1 > ) ( ) ) ; VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #19[0m
Src : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( result ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 . <unk> ( ) , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( result ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < java.io.File > result = METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 , true ) ; TYPE_1 . METHOD_4 ( result ) ; }[0m
[31mExample #20[0m
Src : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } super . METHOD_1 ( VAR_1 , new <unk> ( METHOD_2 ( ) . getId ( ) ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } super . METHOD_1 ( VAR_1 , new <unk> ( <unk> ( ) . getId ( ) ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { if ( ( java.lang.Math.random ( ) ) == null ) { return ; } super . METHOD_1 ( VAR_1 , new TYPE_1 ( METHOD_2 ( ) . getId ( ) ) ) ; }[0m
[31mExample #21[0m
Src : private TYPE_1 METHOD_1 ( TYPE_2 <unk> ) { TYPE_3 params = new TYPE_3 ( true ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( <unk> ( ) . METHOD_4 ( ) ) ; return METHOD_5 ( VAR_2 , params , <unk> ) ; }[0m
Trg : private TYPE_1 METHOD_1 ( TYPE_2 <unk> ) { TYPE_3 params = new TYPE_3 ( true ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( <unk> ( ) . <unk> ( ) ) ; return METHOD_5 ( VAR_2 , params , <unk> ) ; }[0m
Pred: private TYPE_1 METHOD_1 ( TYPE_2 TYPE_2 ) { TYPE_3 params = new TYPE_3 ( true ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( ) ; }[0m
[31mExample #22[0m
Src : public int METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; }[0m
Trg : public int METHOD_1 ( <unk> VAR_1 , <unk> VAR_2 ) { return VAR_1 . getName ( ) . METHOD_3 ( VAR_2 . getName ( ) ) ; }[0m
Pred: public int METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; }[0m
[31mExample #23[0m
Src : protected int METHOD_1 ( ) { return VAR_1 < java.lang.Integer > METHOD_2 ( VAR_2 ) ; }[0m
Trg : protected int METHOD_1 ( ) { return VAR_1 < java.lang.Integer > getValue ( VAR_2 ) ; }[0m
Pred: protected int METHOD_1 ( ) { return VAR_1 < java.lang.Integer > METHOD_2 ( VAR_2 ) ; }[0m
[31mExample #24[0m
Src : protected TYPE_1 < ? > METHOD_1 ( TYPE_2 . <unk> VAR_1 , TYPE_3 parameters ) { return TYPE_4 . METHOD_2 ( VAR_1 , parameters ) ; }[0m
Trg : protected TYPE_1 < ? > METHOD_1 ( TYPE_2 . <unk> VAR_1 , TYPE_3 parameters ) { return TYPE_4 . METHOD_1 ( VAR_1 , parameters ) ; }[0m
Pred: protected TYPE_1 < ? > METHOD_1 ( TYPE_2 . TYPE_2 VAR_1 , TYPE_3 parameters ) { return TYPE_4 . METHOD_2 ( VAR_1 , parameters ) ; }[0m
[31mExample #25[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; <unk> ( VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; <unk> ( VAR_1 . getValue ( VAR_2 , VAR_3 ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; assertEquals ( VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ) . getInt ( VAR_4 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
[31mExample #26[0m
Src : public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #27[0m
Src : protected java.lang.String METHOD_1 ( <unk> <unk> ) { return <unk> . METHOD_2 ( ) ; }[0m
Trg : protected java.lang.String METHOD_1 ( <unk> <unk> ) { return <unk> . getName ( ) ; }[0m
Pred: public java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ; }[0m
[31mExample #28[0m
Src : public java.lang.Boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public java.lang.Boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public java.lang.Boolean METHOD_1 ( ) { return this . VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #29[0m
Src : public void METHOD_1 ( java.lang.String <unk> ) { METHOD_2 ( ) . METHOD_3 ( <unk> ) ; }[0m
Trg : public void METHOD_1 ( java.lang.String <unk> ) { METHOD_2 ( ) . METHOD_1 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( java.lang.String name ) { METHOD_2 ( ) . METHOD_3 ( ) ; }[0m
[31mExample #30[0m
Src : public boolean METHOD_1 ( <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : public boolean METHOD_1 ( <unk> VAR_1 ) { return <unk> . METHOD_2 ( ) . equals ( VAR_1 . getName ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( ) { return METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ; }[0m
[31mExample #31[0m
Src : public void METHOD_1 ( ) { <unk> . METHOD_2 ( VAR_1 ) ; <unk> result = <unk> . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_5 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> . METHOD_2 ( VAR_1 ) ; <unk> result = <unk> . METHOD_3 ( VAR_1 . getName ( ) ) ; TYPE_1 . METHOD_5 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; java.io.File result = ( ( VAR_1 . METHOD_4 ( ) ) - 1 ) ; TYPE_1 . METHOD_5 ( result ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; }[0m
---------------
Class: Replace statement
Golden example (False):
[31mExample #1[0m
Src : public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( java.lang.Integer . METHOD_2 ( VAR_1 ) ) ; }[0m
Trg : public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( VAR_1 ) ; }[0m
Pred: public java.lang.String METHOD_1 ( int VAR_1 ) { return VAR_2 . get ( java.lang.Integer . METHOD_2 ( VAR_1 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; new TYPE_2 ( VAR_1 . <unk> ( ) ) . METHOD_3 ( ) ; }[0m
Trg : public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; super . METHOD_1 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; new TYPE_2 ( VAR_1 . getInt ( ) ) . METHOD_3 ( ) ; }[0m
[31mExample #2[0m
Src : public static long METHOD_1 ( ) { long VAR_1 = <unk> . METHOD_2 ( INT_1 ) ; int VAR_2 = <unk> . METHOD_3 ( <unk> ) ; return VAR_1 & VAR_2 ; }[0m
Trg : public static long METHOD_1 ( ) { long VAR_1 = <unk> ; int VAR_2 = <unk> ; return VAR_1 & VAR_2 ; }[0m
Pred: public static long METHOD_1 ( ) { long VAR_1 = getInt . METHOD_2 ( INT_1 ) ; int VAR_2 = METHOD_3 ( ) ; return VAR_1 & VAR_2 ; }[0m
[31mExample #3[0m
Src : public boolean METHOD_1 ( ) { return ( ! ( METHOD_2 ( ) ) ) && ( ! ( TYPE_1 . equals ( METHOD_3 ( ) ) ) ) ; }[0m
Trg : public boolean METHOD_1 ( ) { return ! ( METHOD_2 ( ) ) ; }[0m
Pred: public boolean METHOD_1 ( ) { return ( ! ( METHOD_2 ( ) ) ) && ( ! ( TYPE_1 . equals ( METHOD_3 ( ) ) ) ) ; }[0m
---------------
Class: unclear
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { <unk> = METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 , STRING_1 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( <unk> . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 , STRING_1 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 , STRING_1 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected byte METHOD_1 ( ) throws java.io.IOException { return ( ( byte ) ( METHOD_2 ( ) ) ) ; }[0m
Trg : protected native byte METHOD_1 ( ) throws java.io.IOException ;[0m
Pred: protected byte METHOD_1 ( ) throws java.io.IOException { return ( ( byte ) ( METHOD_2 ( ) ) ) ; }[0m
[31mExample #2[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_2 ( VAR_2 ) . METHOD_2 ( VAR_1 , VAR_3 . <unk> ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 . <unk> ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_2 ( VAR_2 ) . METHOD_2 ( VAR_1 , VAR_3 . getInt ) ; }[0m
[31mExample #3[0m
Src : public TYPE_1 < java.lang.String > METHOD_1 ( ) { METHOD_2 ( ) ; }[0m
Trg : public TYPE_1 < java.lang.String > METHOD_1 ( ) { return METHOD_2 ( ) ; }[0m
Pred: public TYPE_1 < java.lang.String > METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_2 ( ) ; }[0m
---------------
================
Duration: 0:02:42.247735

Start conducting one shot learning experiment for Tufano Labeled 50 100 Code Changes...
Top-1 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 0 / 56 = 0.0
Top-3 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 1 / 56 = 0.017857142857142856
Top-5 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 2 / 56 = 0.03571428571428571
Top-10 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 3 / 56 = 0.05357142857142857
Top-50 accuracy on Tufano Labeled 50 100 Code Changes for same edit representations: 3 / 56 = 0.05357142857142857

Top-1 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 1 / 188 = 0.005319148936170213
Top-3 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 5 / 188 = 0.026595744680851064
Top-5 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 8 / 188 = 0.0425531914893617
Top-10 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 10 / 188 = 0.05319148936170213
Top-50 accuracy on Tufano Labeled 50 100 Code Changes for other edit representations: 10 / 188 = 0.05319148936170213
================
Correct Examples
Class: Replace fully qualified name with import or vice versa
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws <unk> { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } } ; TYPE_2 . <unk> ( VAR_4 . METHOD_4 ( <unk> . METHOD_5 ( VAR_5 class ) ) ) . <unk> ( VAR_1 ) ; assertEquals ( <unk> , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws <unk> { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } } ; TYPE_2 . <unk> ( VAR_4 . METHOD_4 ( <unk> . METHOD_5 ( VAR_5 class ) ) ) . <unk> ( VAR_1 ) ; <unk> ( <unk> , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.io.IOException { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } }[0m
+++++++++++++++
[32mExample #1[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , true ) ; VAR_1 . METHOD_2 ( null , new TYPE_2 ( ) ) ; <unk> ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( null , new TYPE_3 ( ) , new TYPE_2 ( ) ) ; <unk> ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , true ) ; VAR_1 . METHOD_2 ( null , new TYPE_2 ( ) ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( null , new TYPE_3 ( ) , new TYPE_2 ( ) ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , true ) ; VAR_1 . METHOD_2 ( null , new TYPE_2 ( ) ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( null , new TYPE_3 ( ) , new TYPE_2 ( ) ) ; assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; }[0m
---------------
================
================
Incorrect Examples
Class: Add braces to if statement
Golden example (False):
[31mExample #1[0m
Src : public int METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return VAR_2 ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) return VAR_2 ; return <unk> . METHOD_1 ( ) ; }[0m
Trg : public int METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return VAR_2 ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) { return VAR_2 ; } return <unk> . METHOD_1 ( ) ; }[0m
Pred: public int METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) { return ( TYPE_2 . getInt ( ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return false ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) return false ; return <unk> . METHOD_1 ( VAR_1 , VAR_2 ) ; }[0m
Trg : public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { <unk> ( TYPE_2 . <unk> , STRING_1 ) ; return false ; } TYPE_2 <unk> = METHOD_3 ( ) ; if ( <unk> == null ) { return false ; } return <unk> . METHOD_1 ( VAR_1 , VAR_2 ) ; }[0m
Pred: public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 ) ; } }[0m
[31mExample #2[0m
Src : private synchronized void METHOD_1 ( byte [ ] <unk> , boolean VAR_1 ) { if ( VAR_2 ) <unk> ( VAR_3 . <unk> , ( STRING_1 + VAR_1 ) ) ; <unk> msg = VAR_4 . METHOD_2 ( VAR_5 ) ; <unk> = <unk> ; <unk> = ( VAR_1 ) ? 1 : 0 ; VAR_4 . METHOD_3 ( msg ) ; }[0m
Trg : private synchronized void METHOD_1 ( byte [ ] <unk> , boolean VAR_1 ) { if ( VAR_2 ) { <unk> ( VAR_3 . <unk> , ( STRING_1 + VAR_1 ) ) ; } <unk> msg = VAR_4 . METHOD_2 ( VAR_5 ) ; <unk> = <unk> ; <unk> = ( VAR_1 ) ? 1 : 0 ; VAR_4 . METHOD_3 ( msg ) ; }[0m
Pred: private synchronized void METHOD_1 ( byte [ ] ] , boolean VAR_1 ) { if ( VAR_2 ) % ( VAR_3 . getInt , ( STRING_1 + VAR_1 ) ) ; TYPE_2 msg = VAR_4 . METHOD_2 ( VAR_5 ) ; if ( ( VAR_2 ) == 0 ) { return ; } }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( TYPE_1 <unk> , java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( <unk> ) ) ; TYPE_4 <unk> = METHOD_2 ( ) ; if ( <unk> == null ) return ; <unk> . METHOD_1 ( <unk> , VAR_1 , args ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 <unk> , java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( <unk> ) ) ; TYPE_4 <unk> = METHOD_2 ( ) ; if ( <unk> == null ) { return ; } <unk> . METHOD_1 ( <unk> , VAR_1 , args ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 TYPE_1 , java.lang.String [ ] args ) { TYPE_2 VAR_1 = new TYPE_2 ( new TYPE_3 ( ) ) ; TYPE_4 . METHOD_2 ( ) ; if ( ( == null ) || ( ( VAR_2 ) == null ) ) return ; return ; }[0m
---------------
Class: Add parameter in the method/constructor invocation
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( <unk> ) ; <unk> ( VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , TYPE_3 . <unk> ( VAR_4 class ) ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( <unk> ) ; <unk> ( VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , TYPE_3 . <unk> ( ) ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object VAR_2 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( ) ; assertEquals ( VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , TYPE_3 . ( ( VAR_4 class ) ) ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( java.lang.String name ) { TYPE_3 < TYPE_1 < TYPE_2 > . VAR_1 > i = VAR_2 . METHOD_2 ( ) ; while ( i . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 > . VAR_1 <unk> = i . METHOD_4 ( ) ; if ( VAR_3 . equals ( name ) ) return <unk> ; } <unk> ( TYPE_1 . <unk> , ( STRING_1 + name ) ) ; return null ; }[0m
Trg : TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( java.lang.String name ) { synchronized ( VAR_2 ) { TYPE_3 < TYPE_1 < TYPE_2 > . VAR_1 > i = VAR_2 . METHOD_2 ( ) ; while ( i . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 > . VAR_1 <unk> = i . METHOD_4 ( ) ; if ( VAR_3 . equals ( name ) ) return <unk> ; } } <unk> ( TYPE_1 . <unk> , ( STRING_1 + name ) ) ; return null ; }[0m
Pred: TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( java.lang.String name ) { TYPE_3 < TYPE_1 < TYPE_2 > . VAR_1 > i = VAR_2 . METHOD_2 ( ) ; while ( i . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 > . VAR_1 = i . METHOD_4 ( ) ; if ( VAR_3 . equals ( name ) ) return INT_7 ; } return ( TYPE_1 . toString ( STRING_1 ) ) ; }[0m
[31mExample #2[0m
Src : public java.lang.String METHOD_1 ( int <unk> , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } final TYPE_2 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } else { return null ; } }[0m
Trg : public java.lang.String METHOD_1 ( int <unk> , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , <unk> , VAR_1 , STRING_1 ) ) ) { return null ; } final TYPE_2 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } else { return null ; } }[0m
Pred: public java.lang.String METHOD_1 ( int offset , java.lang.String VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } final TYPE_2 VAR_3 = METHOD_3 ( ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_4 ( ) ; } else { return null ; } }[0m
[31mExample #3[0m
Src : private void METHOD_1 ( <unk> VAR_1 ) { <unk> ( VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_2 . METHOD_4 ( TYPE_1 . <unk> ( VAR_4 . <unk> class ) ) ) . <unk> ( TYPE_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Trg : private void METHOD_1 ( <unk> VAR_1 ) { <unk> ( VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_2 . METHOD_4 ( TYPE_1 . <unk> ( ) ) ) . <unk> ( TYPE_2 . METHOD_5 ( VAR_1 ) ) ; }[0m
Pred: private void METHOD_1 ( ) { return ( VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) . getInt ( VAR_3 ) ; }[0m
[31mExample #4[0m
Src : protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . <unk> ( ) . <unk> ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_3 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . METHOD_5 ( ) . get ( METHOD_2 ( ) . <unk> ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_8 ( ) , null ) ; }[0m
Trg : protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . <unk> ( ) . <unk> ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_3 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . METHOD_5 ( ) . get ( METHOD_2 ( ) . <unk> ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) , METHOD_2 ( ) . <unk> ( ) . METHOD_8 ( ) ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . getInt ( ) . getInt ( ) , METHOD_2 ( ) . getInt ( ) . METHOD_3 ( ) , METHOD_2 ( ) . get ( ) ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_5 ( VAR_2 , <unk> . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . <unk> ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( <unk> . METHOD_8 ( ) , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_5 ( VAR_2 , <unk> . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . <unk> ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( <unk> . METHOD_8 ( ) , VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; assertEquals ( ) ; assertEquals ( ) . toString ( ) ; }[0m
[31mExample #6[0m
Src : public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { synchronized ( VAR_4 ) { long VAR_5 = TYPE_2 . METHOD_2 ( ) ; try { return VAR_6 . METHOD_3 ( METHOD_4 ( this , VAR_1 ) , VAR_2 , VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( VAR_5 ) ; } } }[0m
Trg : public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { synchronized ( VAR_4 ) { long VAR_5 = TYPE_2 . METHOD_2 ( ) ; try { return VAR_6 . METHOD_3 ( METHOD_4 ( this , VAR_1 , true ) , VAR_2 , VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( VAR_5 ) ; } } }[0m
Pred: public boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , boolean VAR_3 ) { synchronized ( VAR_4 ) { long VAR_5 = TYPE_2 . METHOD_2 ( ) ; try { return VAR_6 . METHOD_3 ( METHOD_4 ( this , VAR_1 ) , VAR_2 , VAR_3 ) ; } finally { TYPE_2 . METHOD_5 ( VAR_5 ) ; } } }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( <unk> . <unk> ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 = TYPE_2 . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( assertEquals ( ) ) ; TYPE_3 . METHOD_5 ( assertEquals ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
[31mExample #8[0m
Src : private void METHOD_1 ( TYPE_1 <unk> , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = TYPE_5 . METHOD_2 ( <unk> , VAR_2 , VAR_3 , VAR_1 ) . METHOD_3 ( ) ; TYPE_6 <unk> = new TYPE_6 ( <unk> , VAR_4 ) ; VAR_5 . METHOD_4 ( <unk> . METHOD_5 ( ) , <unk> ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 <unk> , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = TYPE_5 . METHOD_2 ( <unk> , VAR_2 , VAR_3 , VAR_1 ) . METHOD_3 ( ) ; TYPE_6 <unk> = new TYPE_6 ( <unk> , VAR_4 , 0 ) ; VAR_5 . METHOD_4 ( <unk> . METHOD_5 ( ) , <unk> ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 TYPE_2 , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 date = TYPE_5 . METHOD_2 ( java.util.HashMap , VAR_2 , VAR_3 , VAR_1 ) . METHOD_3 ( ) ; TYPE_6 = new TYPE_6 ( ) ; VAR_5 . METHOD_4 ( ) ; }[0m
[31mExample #9[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int <unk> ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } TYPE_3 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( ) ; } return null ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int <unk> ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 , <unk> , VAR_1 , STRING_1 ) ) ) { return null ; } TYPE_3 VAR_3 = METHOD_3 ( <unk> ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( ) ; } return null ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , int offset ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) { return null ; } TYPE_3 VAR_3 = METHOD_3 ( ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_1 ( ) ; } return null ; }[0m
---------------
Class: Add statement
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) . <unk> ( new <unk> ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = <unk> . METHOD_3 ( STRING_2 ) ; if ( node != null ) { if ( TYPE_3 . equals ( <unk> ( VAR_2 ) ) ) { TYPE_3 = <unk> ( VAR_3 ) ; } VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 . METHOD_5 ( TYPE_3 ) ) ; } }[0m
Trg : protected void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) . <unk> ( new <unk> ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = <unk> . METHOD_3 ( STRING_2 ) ; if ( node != null ) { VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 . METHOD_5 ( TYPE_3 ) ) ; } }[0m
Pred: protected void METHOD_1 ( TYPE_1 ) { VAR_1 . METHOD_2 ( ) . getInt ( new TYPE_2 ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = TYPE_2 . METHOD_3 ( STRING_2 ) ; if ( node != null ) { if ( TYPE_3 . equals ( VAR_2 ) ) { TYPE_3 = ( ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 . METHOD_5 ( TYPE_3 ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , <unk> ) ; <unk> . METHOD_4 ( VAR_4 , VAR_5 ) ; <unk> . METHOD_5 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_6 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_7 ( VAR_5 ) ; VAR_1 . METHOD_8 ( ) ; METHOD_9 ( ) ; VAR_1 . METHOD_10 ( ) ; }[0m
Trg : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , <unk> ) ; <unk> . METHOD_4 ( VAR_4 , VAR_5 ) ; <unk> . METHOD_5 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_6 ( VAR_5 , VAR_5 ) ; <unk> . METHOD_7 ( VAR_5 ) ; VAR_1 . METHOD_8 ( ) ; METHOD_9 ( ) ; <unk> . METHOD_10 ( ) ; VAR_1 . METHOD_10 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 TYPE_2 = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , INT_7 ) ; TYPE_2 . METHOD_4 ( VAR_4 , VAR_5 ) ; assertEquals ( VAR_5 ) ; }[0m
---------------
Class: Add/Remove parameter
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = METHOD_2 ( key ) ; int VAR_3 = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; java.lang.String VAR_4 = key . METHOD_4 ( 0 , VAR_3 ) ; VAR_5 = TYPE_4 . METHOD_5 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) { return null ; } return VAR_6 ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 key ) { VAR_2 = METHOD_2 ( key ) ; int VAR_3 = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; java.lang.String VAR_4 = key . METHOD_4 ( 0 , VAR_3 ) ; VAR_5 = TYPE_4 . METHOD_5 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) { return null ; } return VAR_6 ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 key , int VAR_1 ) { VAR_2 = METHOD_2 ( key ) ; int VAR_3 = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; java.lang.String VAR_4 = key . METHOD_4 ( 0 , VAR_3 ) ; VAR_5 = TYPE_4 . METHOD_5 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) { return null ; } return VAR_6 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( <unk> ) ; <unk> . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; }[0m
Trg : public void <unk> ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 <unk> = new TYPE_2 ( VAR_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( <unk> ) ; <unk> . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( VAR_2 ) ; TYPE_2 TYPE_2 = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; }[0m
[31mExample #2[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . <unk> ( VAR_1 ) ; METHOD_1 ( ) . <unk> ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . <unk> ( VAR_1 ) ; METHOD_1 ( ) . <unk> ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object [ , java.lang.Object ] ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . ) ( ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; }[0m
---------------
Class: Broad method visibility
Golden example (False):
[31mExample #1[0m
Src : private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . <unk> > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 . <unk> <unk> : VAR_1 ) { if ( ( <unk> . METHOD_2 ( ) ) == ( VAR_4 ) ) { if ( ( ! VAR_2 ) || ( <unk> . METHOD_3 ( ) ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( <unk> ) ) ) ; } } } return VAR_3 ; }[0m
Trg : public static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . <unk> > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 . <unk> <unk> : VAR_1 ) { if ( ( <unk> . METHOD_2 ( ) ) == ( VAR_4 ) ) { if ( ( ! VAR_2 ) || ( <unk> . METHOD_3 ( ) ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( <unk> ) ) ) ; } } } return VAR_3 ; }[0m
Pred: private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . java.util.HashMap > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 . expr ( : ) ) { if ( ( f . METHOD_2 ( ) ) == ( VAR_4 ) ) { if ( ( ! VAR_2 ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( ) ) ) ; } } } return VAR_3 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }[0m
Trg : protected java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; } return VAR_1 ; }[0m
[31mExample #2[0m
Src : private static boolean METHOD_1 ( TYPE_1 node , TYPE_2 <unk> ) throws java.io.IOException { if ( ! ( TYPE_3 . METHOD_2 ( node , <unk> ) ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ! ( TYPE_3 . METHOD_1 ( VAR_1 . get ( i ) , <unk> ) ) ) { return false ; } } return true ; }[0m
Trg : public static boolean METHOD_1 ( TYPE_1 node , TYPE_2 <unk> ) throws java.io.IOException { if ( ! ( TYPE_3 . METHOD_2 ( node , <unk> ) ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ! ( TYPE_3 . METHOD_1 ( VAR_1 . get ( i ) , <unk> ) ) ) { return false ; } } return true ; }[0m
Pred: private static boolean METHOD_1 ( TYPE_1 node , TYPE_2 TYPE_2 ) throws java.io.IOException { if ( ! ( TYPE_3 . METHOD_2 ( node , ) ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ! ( TYPE_3 . METHOD_1 ( VAR_1 . get ( i ) , ) ) ) { return false ; } } return true ; }[0m
[31mExample #3[0m
Src : private boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( <unk> ( ) . METHOD_4 ( ) ) ) . <unk> ( ) ) ) ; if ( VAR_1 ) { <unk> ( VAR_3 ) ; } return ! VAR_1 ; }[0m
Trg : protected boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( <unk> ( ) . METHOD_4 ( ) ) ) . <unk> ( ) ) ) ; if ( VAR_1 ) { <unk> ( VAR_3 ) ; } return ! VAR_1 ; }[0m
Pred: private boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( ) ) ) ) ; if ( VAR_1 ) { return ( VAR_3 ) ; } return ! VAR_1 ; }[0m
[31mExample #4[0m
Src : private static boolean METHOD_1 ( java.lang.String VAR_1 , char [ ] VAR_2 ) { int length = VAR_1 . length ( ) ; if ( ( VAR_2 . length ) != length ) { return false ; } for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) ) ) { return false ; } } return true ; }[0m
Trg : public static boolean METHOD_1 ( java.lang.String VAR_1 , char [ ] VAR_2 ) { int length = VAR_1 . length ( ) ; if ( ( VAR_2 . length ) != length ) { return false ; } for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) ) ) { return false ; } } return true ; }[0m
Pred: private static boolean METHOD_1 ( java.lang.String VAR_1 , char [ ] VAR_2 ) { int length = VAR_1 . length ( ) ; if ( ( VAR_2 . length ) != length ) { return false ; } for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) ) ) { return false ; } } return true ; }[0m
---------------
Class: Change comparison operator (e.g. >) in condition
Golden example (False):
[31mExample #1[0m
Src : private static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; for ( int i = 0 ; i <= ( ( VAR_3 ) - 1 ) ; i ++ ) { VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + ( i + 1 ) ) + STRING_1 ) ) ; } return VAR_2 ; }[0m
Trg : private static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; for ( int i = 0 ; i < ( VAR_3 ) ; i ++ ) { VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + ( i + 1 ) ) + STRING_1 ) ) ; } return VAR_2 ; }[0m
Pred: private static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; for ( int i = 0 ; i <= ( ( VAR_3 ) - 1 ) ; i ++ ) { VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + ( i + 1 ) ) + STRING_1 ) ) ; } return VAR_2 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private static long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 { long VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 >= VAR_2 ) { throw new TYPE_2 ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_2 ) ) ; } long VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 + VAR_4 ) != VAR_2 ) { throw new TYPE_2 ( ( STRING_3 + STRING_4 ) ) ; } return VAR_3 ; }[0m
Trg : private static long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 { long VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 > VAR_2 ) { throw new TYPE_2 ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_2 ) ) ; } long VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 + VAR_4 ) != VAR_2 ) { throw new TYPE_2 ( ( STRING_3 + STRING_4 ) ) ; } return VAR_3 ; }[0m
Pred: private static long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) throws TYPE_2 { long VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 >= VAR_2 ) { throw new TYPE_2 ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_2 ) ) ; } long VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 + VAR_4 ) != VAR_2 ) { throw new TYPE_2 ( ( STRING_3 + STRING_4 ) ) ; } return VAR_3 ; }[0m
---------------
Class: Change exception type in catch clause
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { TYPE_3 info = METHOD_2 ( x ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_3 ) ; TYPE_4 VAR_4 = METHOD_3 ( VAR_5 ) ; TYPE_4 VAR_6 = METHOD_3 ( VAR_7 ) ; METHOD_4 ( new TYPE_5 ( info , VAR_6 , VAR_4 , VAR_2 ) ) ; } catch ( java.lang.Throwable <unk> ) { throw METHOD_5 ( x , <unk> ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { TYPE_3 info = METHOD_2 ( x ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_3 ) ; TYPE_4 VAR_4 = METHOD_3 ( VAR_5 ) ; TYPE_4 VAR_6 = METHOD_3 ( VAR_7 ) ; METHOD_4 ( new TYPE_5 ( info , VAR_6 , VAR_4 , VAR_2 ) ) ; } catch ( <unk> <unk> ) { throw METHOD_5 ( x , <unk> ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { TYPE_3 info = METHOD_2 ( x ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_3 ) ; TYPE_4 VAR_4 = METHOD_3 ( VAR_5 ) ; TYPE_4 VAR_6 = METHOD_3 ( VAR_7 ) ; METHOD_4 ( new TYPE_5 ( info , VAR_6 , VAR_4 , VAR_2 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { assert METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( VAR_3 . type ) ; METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) ; } catch ( java.lang.Throwable <unk> ) { throw METHOD_7 ( x , <unk> ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { assert METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( VAR_3 . type ) ; METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) ; } catch ( <unk> <unk> ) { throw METHOD_7 ( x , <unk> ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 x , TYPE_2 VAR_1 ) { try { assert METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( VAR_3 . type ) ; METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) ; } catch ( java.lang.Throwable[0m
---------------
Class: Change parameter type
Golden example (False):
[31mExample #1[0m
Src : static boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
Trg : static boolean METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
Pred: static boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return true ; } TYPE_1 VAR_5 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( VAR_5 == null ) { return true ; } VAR_6 . METHOD_3 ( ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; return true ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 . append ( new TYPE_3 . <unk> ( VAR_7 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false ) ; }[0m
Trg : static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 . append ( new TYPE_3 . <unk> ( VAR_7 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false ) ; }[0m
Pred: static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_6 . append ( new TYPE_3 ( VAR_7 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false ) ; }[0m
[31mExample #2[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int [ ] <unk> , int VAR_5 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , <unk> , VAR_5 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int [ ] <unk> , int VAR_5 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , <unk> , VAR_5 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int offset , int offset , int [ ] INT_7 , int VAR_5 ) { METHOD_2 ( ) ; METHOD_3 ( INT_7 , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , , , , , ,[0m
[31mExample #3[0m
Src : static boolean METHOD_1 ( int VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 <unk> = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( <unk> == null ) { return false ; } <unk> . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return true ; }[0m
Trg : static boolean METHOD_1 ( long VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 <unk> = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( <unk> == null ) { return false ; } <unk> . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return true ; }[0m
Pred: static boolean METHOD_1 ( int VAR_1 , float VAR_2 , float VAR_3 ) { TYPE_1 ( = VAR_4 . METHOD_2 ( VAR_1 ) ) ; if ( VAR_2 == null ) { return false ; } }[0m
[31mExample #4[0m
Src : public final TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 ) throws java.io.IOException { synchronized ( this ) { if ( ! ( VAR_4 ) ) { throw new <unk> ( STRING_1 ) ; } int VAR_5 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_5 != 0 ) { TYPE_2 <unk> = new TYPE_2 ( VAR_5 ) ; METHOD_3 ( <unk> . METHOD_4 ( ) ) ; return <unk> ; } } throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; }[0m
Trg : public final TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 ) throws java.io.IOException { synchronized ( this ) { if ( ! ( VAR_4 ) ) { throw new <unk> ( STRING_1 ) ; } long VAR_5 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_5 != 0 ) { TYPE_2 <unk> = new TYPE_2 ( VAR_5 ) ; METHOD_3 ( <unk> . METHOD_4 ( ) ) ; return <unk> ; } } throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; }[0m
Pred: public final TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , int VAR_3 ) throws java.io.IOException { synchronized ( this ) { if ( ! ( VAR_4 ) ) { throw new TYPE_2 ( STRING_1 ) ; } int VAR_5 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_5 != 0 ) { TYPE_2 TYPE_2 = new TYPE_2 ( VAR_5 ) ; METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; return return ; } } throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; }[0m
[31mExample #5[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } }[0m
Trg : public TYPE_1 METHOD_1 ( java.util.Map VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } }[0m
[31mExample #6[0m
Src : private <unk> METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 != null ) { for ( TYPE_2 <unk> : VAR_2 ) { if ( METHOD_4 ( <unk> . METHOD_5 ( ) ) ) { return <unk> . METHOD_5 ( ) ; } } } return VAR_4 ; }[0m
Trg : private <unk> METHOD_1 ( <unk> VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 != null ) { for ( TYPE_2 <unk> : VAR_2 ) { if ( METHOD_4 ( <unk> . METHOD_5 ( ) ) ) { return <unk> . METHOD_5 ( ) ; } } } return VAR_4 ; }[0m
Pred: private static METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 != null ) { for ( TYPE_2 TYPE_2 : VAR_2 ) { if ( METHOD_4 ( ) . METHOD_5 ( ) ) { return f . METHOD_5 ( ) ; } } } return VAR_4 ; }[0m
[31mExample #7[0m
Src : static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; }[0m
Trg : static void METHOD_1 ( long VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; }[0m
Pred: static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , int VAR_3 ) { TYPE_2 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_4 == null ) { return ; } VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ; }[0m
[31mExample #8[0m
Src : synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int VAR_5 , int [ ] <unk> , int VAR_6 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , VAR_5 , <unk> , VAR_6 ) ; }[0m
Trg : synchronized void METHOD_1 ( long id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int <unk> , int <unk> , int VAR_5 , byte [ ] <unk> , int VAR_6 ) { METHOD_2 ( ) ; METHOD_3 ( <unk> , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , <unk> , <unk> , VAR_5 , <unk> , VAR_6 ) ; }[0m
Pred: synchronized void METHOD_1 ( int id , int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 , int offset , int offset , int VAR_5 , int [ ] values , int VAR_6 ) { METHOD_2 ( ) ; METHOD_3 ( INT_7 , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , INT_8 , STRING_7 , VAR_5 , VAR_6 , VAR_6 ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( int <unk> , int VAR_1 , int c , TYPE_1 VAR_2 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { byte [ ] VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) ) ; super . METHOD_1 ( <unk> , VAR_1 , c , VAR_2 , <unk> , <unk> ) ; }[0m
Trg : public void METHOD_1 ( long <unk> , long VAR_1 , long c , TYPE_1 VAR_2 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { byte [ ] VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) ) ; super . METHOD_1 ( <unk> , VAR_1 , c , VAR_2 , <unk> , <unk> ) ; }[0m
Pred: public void METHOD_1 ( int offset , int VAR_1 , int c , TYPE_1 VAR_2 , TYPE_2 TYPE_2 , TYPE_3 > ) throws java.lang.Exception { byte [ ] VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) ; assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) ) ; super . METHOD_1 ( ) ; }[0m
[31mExample #10[0m
Src : static int METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return 0 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }[0m
Trg : static long METHOD_1 ( long VAR_1 , long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return 0 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }[0m
Pred: static int METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return 0 ; } VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return VAR_2 ; }[0m
---------------
Class: Change parameter value of invoked method
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( TYPE_1 . <unk> <unk> , int VAR_1 ) { METHOD_2 ( <unk> . METHOD_3 ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ <unk> ] . toString ( ) , <unk> . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( <unk> , VAR_1 ) ; }[0m
Trg : protected void METHOD_1 ( TYPE_1 . <unk> <unk> , int VAR_1 ) { METHOD_2 ( <unk> . METHOD_3 ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ 1 ] . toString ( ) , <unk> . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( <unk> , VAR_1 ) ; }[0m
Pred: protected void METHOD_1 ( TYPE_1 . , java.util.Date , int VAR_1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ VAR_2 ] ) ; assertEquals ( VAR_2 [ VAR_2 ] ) ; METHOD_4 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : private java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , false , true ) ; } return VAR_1 ; }[0m
Trg : private java.util.List < <unk> > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( <unk> ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; }[0m
Pred: private java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; } return VAR_1 ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new <unk> ( ) , true ) ; <unk> ( VAR_1 . METHOD_3 ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ) . <unk> ( false ) ; TYPE_2 . METHOD_5 ( <unk> . <unk> ( ) ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_3 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new <unk> ( ) , true ) ; <unk> ( VAR_1 . METHOD_3 ( TYPE_1 . <unk> ( ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ) . <unk> ( false ) ; TYPE_2 . METHOD_5 ( <unk> . <unk> ( ) ) ; TYPE_2 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_3 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new TYPE_2 ( ) , true ) ; ( ( VAR_1 . METHOD_3 ( TYPE_1 . getInt ( VAR_2 . f class ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ) . ) ( ( false ) ) ; TYPE_2 . METHOD_5 ( f . ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { VAR_1 = <unk> . METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; <unk> ( VAR_3 ) . <unk> ( VAR_1 ) . METHOD_3 ( ) ; <unk> ( VAR_4 ) . <unk> ( VAR_1 ) . METHOD_4 ( ) ; <unk> ( VAR_5 ) . <unk> ( VAR_1 ) . METHOD_5 ( ) ; <unk> . METHOD_6 ( ) . <unk> ( VAR_1 ) . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; VAR_6 . METHOD_9 ( VAR_7 class , VAR_8 ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 = <unk> . METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; <unk> ( VAR_3 ) . <unk> ( VAR_1 ) . METHOD_3 ( ) ; <unk> ( VAR_4 ) . <unk> ( VAR_1 ) . METHOD_4 ( ) ; <unk> ( VAR_5 ) . <unk> ( VAR_1 ) . METHOD_5 ( ) ; <unk> . METHOD_6 ( ) . <unk> ( VAR_1 ) . METHOD_7 ( TYPE_2 . <unk> ( ) ) ; VAR_6 . METHOD_9 ( VAR_7 class , VAR_8 ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; java.lang.Math.random ( VAR_3 ) . getInt ( VAR_1 ) . METHOD_3 ( ) ; ( ( VAR_4 ) . getInt ( VAR_1 ) . METHOD_4 ( ) ) ; ( ( VAR_5 ) . getInt ( VAR_1 ) . METHOD_5 ( ) ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { java.util.ArrayList < <unk> > list = VAR_2 . <unk> < <unk> > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_3 , new TYPE_2 ( VAR_1 ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { java.util.ArrayList < <unk> > list = VAR_2 . <unk> < <unk> > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_3 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , java.util.Date VAR_1 ) { TYPE_2 = new java.io.File ( ) { public java.lang.Object ( java.lang.Object java.lang.Object source ) { if ( source != null ) { java.util.ArrayList < java.lang.Integer > list = VAR_2 . java.util.HashMap < > > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < INT_8 > ( ) ; } } ; }[0m
[31mExample #5[0m
Src : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , <unk> , false ) ; TYPE_3 <unk> = t . METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_2 = t . METHOD_3 ( ( ( float ) ( FLOAT_1 / ( VAR_3 ) ) ) ) ; <unk> = t . METHOD_4 ( <unk> , VAR_2 ) ; }[0m
Trg : public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { t . METHOD_2 ( <unk> , <unk> , false ) ; TYPE_3 <unk> = t . METHOD_3 ( args . <unk> ) ; TYPE_3 VAR_2 = t . METHOD_3 ( ( ( float ) ( FLOAT_1 / ( VAR_3 ) ) ) ) ; <unk> = t . METHOD_4 ( <unk> , VAR_2 ) ; }[0m
Pred: public static void METHOD_1 ( TYPE_1 args , TYPE_2 t ) { java.lang.String path = t . METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_2 = t . METHOD_3 ( ( ( float ) ( FLOAT_1 / ( VAR_3 ) ) ) ) ; f = t . METHOD_4 ( ) ; }[0m
[31mExample #6[0m
Src : private void METHOD_1 ( TYPE_1 . <unk> VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , null , VAR_2 ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , <unk> . METHOD_4 ( ) ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 . <unk> VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , <unk> , VAR_2 ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , <unk> . METHOD_4 ( ) ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 . TYPE_1 VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , null , VAR_2 ) ; VAR_2 . METHOD_2 ( VAR_5 , null , VAR_2 ) ; assertEquals ( VAR_1 , METHOD_4 ( ) ) ; }[0m
[31mExample #7[0m
Src : protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( ( ( VAR_2 . length ) * <unk> ) , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } }[0m
Trg : protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( VAR_2 . length , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } }[0m
Pred: protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( ( ( VAR_2 . length ) * offset ) , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } }[0m
---------------
Class: Change parameters order in method invocation
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < <unk> > result = <unk> . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( VAR_2 , result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < java.io.File > result = METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) , VAR_2 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , java.lang.String value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , java.lang.String value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_1 , VAR_2 ) ; }[0m
Pred: static void METHOD_1 ( TYPE_1 , , TYPE_2 , java.lang.String value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( ( this . METHOD_2 ( ) ) != null ) { TYPE_2 . METHOD_2 ( value , value ) ; } } catch ( TYPE_3 ( ) ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
[31mExample #2[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final long VAR_3 = ( <unk> == null ) ? ( ( long ) ( <unk> . METHOD_2 ( ) ) ) : ( ( long ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final long VAR_3 = ( <unk> == null ) ? ( ( long ) ( <unk> . METHOD_2 ( ) ) ) : ( ( long ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_1 , VAR_2 ) ; }[0m
Pred: static void METHOD_1 ( TYPE_1 f , TYPE_2 TYPE_2 , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final long VAR_3 = ( TYPE_2 == null ) ? ( ( long ) ( java.util.HashMap . METHOD_2 ( ) ) ) : ( ( long ) ( java.lang.Math.random ( ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( false ) ; java.util.List < java.lang.String > VAR_2 = new TYPE_1 < > ( ) ; boolean result = <unk> . METHOD_2 ( new <unk> ( ) , VAR_2 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_2 . size ( ) , 1 ) ; TYPE_2 . assertEquals ( VAR_2 . get ( 0 ) , STRING_1 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( false ) ; java.util.List < java.lang.String > VAR_2 = new TYPE_1 < > ( ) ; boolean result = <unk> . METHOD_2 ( new <unk> ( ) , VAR_2 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( 1 , VAR_2 . size ( ) ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_2 . get ( 0 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; java.util.List < java.lang.String > VAR_2 = new TYPE_1 < > ( ) ; boolean result = TYPE_2 . METHOD_2 ( new java.util.HashMap ( ) , VAR_2 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_2 . size ( ) , 1 ) ; TYPE_2 . assertEquals ( VAR_2 . get ( 0 ) , STRING_1 ) ; }[0m
[31mExample #4[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( <unk> == null ) { <unk> . METHOD_2 ( value ) ; } else { <unk> . METHOD_2 ( <unk> , value ) ; } } catch ( TYPE_3 <unk> ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_1 , VAR_2 ) ; }[0m
Pred: static void METHOD_1 ( TYPE_1 f , TYPE_2 TYPE_2 , long value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { if ( ( this . METHOD_2 ( ) ) != null ) { TYPE_2 . METHOD_2 ( value , value ) ; } } catch ( TYPE_3 ( ) ) { VAR_2 = true ; } TYPE_4 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
---------------
Class: Change qualified name in response to a move class refactoring
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_8 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_8 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ; METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_8 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public java.lang.String toString ( ) { TYPE_1 <unk> = new TYPE_1 ( ( ( ( size ) * <unk> ) + <unk> ) ) ; <unk> ( CHAR_1 ) ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( i != 0 ) { <unk> ( STRING_1 ) ; } <unk> ( values [ i ] ) ; } <unk> ( CHAR_2 ) ; return <unk> . toString ( ) ; }[0m
Trg : public java.lang.String toString ( ) { java.lang.StringBuilder <unk> = new java.lang.StringBuilder ( ( ( ( size ) * <unk> ) + <unk> ) ) ; <unk> ( CHAR_1 ) ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( i != 0 ) { <unk> ( STRING_1 ) ; } <unk> ( values [ i ] ) ; } <unk> ( CHAR_2 ) ; return <unk> . toString ( ) ; }[0m
Pred: public java.lang.String toString ( ) { TYPE_1 ( = VAR_2 ) ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( i != 0 ) { java.lang.System.out.println ( STRING_1 ) ; } ( ( values [ i ] ) ) ; }[0m
---------------
Class: Change type of a variable
Golden example (False):
[31mExample #1[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> . <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> . <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_2 , new TYPE_1 ( VAR_1 ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> . <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> . <unk> > ( ) ; } } ; <unk> . <unk> ( VAR_2 , new TYPE_1 ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , java.util.Date VAR_1 ) { java.io.File = new java.io.File ( ) { public java.lang.Object ( ( java.lang.Object source , c ) ) { return source != null ? ( ( java.util.ArrayList < java.util.HashMap . name ) > ( source ) ) : new java.util.ArrayList < STRING_7 . getInt ( ) ; } } ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( TYPE_1 . <unk> ( ) , TYPE_2 . METHOD_3 ( ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( VAR_2 class ) ) ) ; <unk> ( VAR_3 . METHOD_6 ( ) ) . <unk> ( VAR_1 ) ; <unk> = new TYPE_4 ( VAR_3 , <unk> , VAR_4 ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) , TYPE_6 . METHOD_9 ( VAR_5 ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> ( VAR_1 . METHOD_2 ( TYPE_2 . <unk> ( ) , TYPE_2 . METHOD_3 ( ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( VAR_2 class ) ) ) ; <unk> ( VAR_3 . METHOD_6 ( ) ) . <unk> ( VAR_1 ) ; <unk> = new TYPE_4 ( VAR_3 , <unk> , VAR_4 ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) , TYPE_6 . METHOD_9 ( VAR_5 ) ) ; }[0m
Pred: public void METHOD_1 ( ) { assertEquals ( VAR_1 . METHOD_2 ( TYPE_1 . getInt ( ) , TYPE_2 . METHOD_3 ( ) ) ) . ( ( TYPE_3 . METHOD_4 ( ) . METHOD_5 ( VAR_2 class ) ) ) ; assertEquals ( VAR_1 ) ; }[0m
[31mExample #2[0m
Src : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> . <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> . <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Trg : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Pred: protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( TYPE_2 id : VAR_1 ) { java.util.List < java.util.HashMap . VAR_2 > VAR_2 = java.lang.Math.round ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( assertTrue ( VAR_3 : VAR_2 ) ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
[31mExample #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 <unk> ) { METHOD_2 ( <unk> , VAR_1 ) ; <unk> . <unk> <unk> = METHOD_3 ( <unk> ) ; if ( <unk> != null ) { <unk> . METHOD_4 ( ) . METHOD_5 ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_4 ( ) . <unk> ( null ) ; } return METHOD_7 ( <unk> , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 <unk> ) { METHOD_2 ( <unk> , VAR_1 ) ; <unk> . <unk> <unk> = METHOD_3 ( <unk> ) ; if ( <unk> != null ) { <unk> . METHOD_4 ( ) . METHOD_5 ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_4 ( ) . <unk> ( null ) ; } return METHOD_7 ( <unk> , VAR_2 , VAR_3 , VAR_4 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 TYPE_1 ) { METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { TYPE_1 . METHOD_4 ( ) . METHOD_5 ( expr . METHOD_6 ( ) ) ; } }[0m
[31mExample #4[0m
Src : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> . <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> . <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Trg : protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( <unk> id : VAR_1 ) { java.util.List < <unk> . <unk> > VAR_2 = <unk> ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( <unk> . <unk> VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
Pred: protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( TYPE_2 id : VAR_1 ) { java.util.List < java.util.HashMap . VAR_2 > VAR_2 = java.lang.Math.round ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( assertTrue ( VAR_3 : VAR_2 ) ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . <unk> ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; <unk> ( VAR_4 . get ( VAR_2 ) ) . <unk> ( VAR_1 ) ; <unk> ( VAR_4 ) . <unk> ( VAR_5 ) . METHOD_3 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_1 . <unk> ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; <unk> ( VAR_4 . get ( VAR_2 ) ) . <unk> ( VAR_1 ) ; <unk> ( VAR_4 ) . <unk> ( VAR_5 ) . METHOD_3 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . ( ( VAR_2 ) ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; ( ( VAR_4 . get ( VAR_2 ) ) . getInt ( VAR_1 ) ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { <unk> . <unk> VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < <unk> . <unk> > VAR_3 = METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < <unk> > VAR_3 = METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_2 . METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; }[0m
---------------
Class: Class becomes static. Delete object instance to invoke its methods
Golden example (False):
[31mExample #1[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( <unk> ) ( source ) ) : null ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( <unk> ) ( source ) ) : null ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , java.util.Date VAR_1 ) { java.io.File = new java.io.File ( ) { public java.lang.Object ( ( java.lang.Object source , TYPE_2 ) ) { return source != null ? ( ( f ) ( source ) ) : null ; } } ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_2 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( VAR_1 , <unk> . METHOD_5 ( ) , VAR_2 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Trg : public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_2 ) ; return ; } try { TYPE_2 . METHOD_4 ( ) . METHOD_1 ( VAR_1 , <unk> . METHOD_5 ( ) , VAR_2 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Pred: public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_2 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( VAR_1 , TYPE_2 . METHOD_5 ( ) , VAR_2 ) ; } }[0m
[31mExample #2[0m
Src : public static void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . <unk> ) ; VAR_1 . METHOD_2 ( INT_1 ) ; <unk> ( ) . <unk> ( VAR_3 , VAR_1 , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < <unk> > ) ( source ) ) : new java.util.ArrayList < <unk> > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . <unk> ) ; VAR_1 . METHOD_2 ( INT_1 ) ; <unk> ( ) . <unk> ( VAR_3 , VAR_1 , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( ) { TYPE_2 = new java.util.HashMap ( ) { public java.lang.Object ( ( java.lang.Object source , offset ) ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . ) ; VAR_1 . METHOD_2 ( INT_1 ) ; assertEquals ( ) . getInt ( VAR_3 , VAR_1 , INT_7 ) ; }[0m
[31mExample #3[0m
Src : public static java.lang.String METHOD_1 ( TYPE_1 . <unk> <unk> ) throws TYPE_2 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , <unk> . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( <unk> . METHOD_3 ( ) ) != null ? <unk> . METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; }[0m
Trg : public java.lang.String METHOD_1 ( TYPE_1 . <unk> <unk> ) throws TYPE_2 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , <unk> . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( <unk> . METHOD_3 ( ) ) != null ? <unk> . METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; }[0m
Pred: public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , java.util.HashMap . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( TYPE_2 . METHOD_3 ( ) ) != null ? METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; }[0m
[31mExample #4[0m
Src : public static void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_2 , new TYPE_3 ( VAR_1 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_2 , new TYPE_3 ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( <unk> . METHOD_5 ( ) , VAR_1 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; return ; } try { TYPE_2 . METHOD_4 ( ) . METHOD_1 ( <unk> . METHOD_5 ( ) , VAR_1 ) ; } catch ( <unk> <unk> ) { throw <unk> . METHOD_6 ( ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_1 ) ; return ; } try { METHOD_4 ( ) . METHOD_1 ( TYPE_2 . METHOD_5 ( ) , VAR_1 ) ; } }[0m
---------------
Class: Class is not static anymore. Add object instance to invoke its methods
Golden example (False):
[31mExample #1[0m
Src : protected void METHOD_1 ( <unk> id ) { TYPE_1 . METHOD_2 ( new <unk> ( <unk> ( ) , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ) . METHOD_3 ( ) . <unk> ( ( ( java.lang.Boolean ) ( <unk> ) ) ) ; } } ) , id ) ; }[0m
Trg : protected void METHOD_1 ( <unk> id ) { TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( <unk> ( ) , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ) . METHOD_3 ( ) . <unk> ( ( ( java.lang.Boolean ) ( <unk> ) ) ) ; } } ) , id ) ; }[0m
Pred: protected void METHOD_1 ( ( id ) ) { TYPE_1 . METHOD_2 ( new java.util.HashMap ( ) ) ; TYPE_1 . METHOD_2 ( new java.util.HashMap ( ) , new java.util.HashMap ( ) { public void ) ( ( java.lang.Object ) , ( ( ( java.lang.Boolean ) ( ) ) ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_2 ( id ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_2 ( id ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , java.util.Date id ) { TYPE_2 = new java.util.HashMap ( ) { public java.lang.Object ( ( java.lang.Object source , offset ) ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; }[0m
[31mExample #2[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> <unk> , boolean VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> params = new <unk> ( <unk> ) ; params . METHOD_2 ( VAR_1 ) ; <unk> . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> <unk> , boolean VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> params = new <unk> ( <unk> ) ; params . METHOD_2 ( VAR_1 ) ; <unk> ( ) . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , java.lang.String name , boolean VAR_1 ) { java.io.File = new java.io.File ( ) { public java.lang.Object ( ( java.lang.Object source , offset ) ) { return source ; } return new java.util.ArrayList < > > ( ) ; } }[0m
[31mExample #3[0m
Src : public static void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; <unk> ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; <unk> ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , METHOD_3 ( ) ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( ) { java.lang.String = new java.io.File ( ) { public java.lang.Object ( ( java.lang.Object source , java.io.File f ) ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; }[0m
[31mExample #4[0m
Src : private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , <unk> . METHOD_4 ( ) ) ) ; } else { METHOD_3 ( ) ; } }[0m
Trg : private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.lang.Integer ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , <unk> . METHOD_4 ( ) ) ) ; } else { METHOD_3 ( ) ; } }[0m
Pred: private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( new java.util.HashMap ( this , new TYPE_2 ( ) { public void , ( java.lang.Object target , java.lang.Object > ) { VAR_1 = ( ( java.lang.Integer ) ( ) ) ; METHOD_3 ( ) ; } } , ) . METHOD_3 ( ) ; } }[0m
[31mExample #5[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_2 , new <unk> ( VAR_1 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , java.util.Date VAR_1 ) { java.io.File = new java.io.File ( ) { public java.lang.Object ( ( java.lang.Object source , c ) ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; }[0m
[31mExample #6[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> . <unk> ( VAR_1 , new <unk> ( id ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , <unk> id ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_1 , new <unk> ( id ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , java.util.Date id ) { TYPE_2 = new java.io.File ( ) { public java.lang.Object ( java.lang.Object java.lang.Object source ) { if ( source == null ) { return new java.util.ArrayList < > ( ) ; } return source ; } } ; }[0m
[31mExample #7[0m
Src : private void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ) ; } } ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( <unk> ) ) ) ; } } ; TYPE_2 . <unk> ( ) . METHOD_4 ( VAR_1 ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 VAR_1 = new java.util.HashMap ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new java.util.HashMap ( ) { public void ( ( java.lang.Object java.util.List , java.lang.Object ) ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( ) ) ) ; } } ; TYPE_2 . METHOD_4 ( VAR_1 ) ; }[0m
[31mExample #8[0m
Src : public static void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return STRING_1 ; } } ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; <unk> . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , TYPE_1 VAR_1 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return STRING_1 ; } } ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; <unk> ( ) . <unk> ( VAR_2 , params , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , TYPE_1 VAR_1 ) { java.io.File = new java.io.File ( ) { public java.lang.Object ( ( java.lang.Object source , offset ) ) { return source ; } } }[0m
[31mExample #9[0m
Src : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } TYPE_1 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ( ( java.util.List < TYPE_2 > ) ( <unk> ) ) ) ; METHOD_3 ( ) ; } } ) , <unk> ( ) . getId ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { if ( ( <unk> ( ) ) == null ) { return ; } TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { <unk> ( ( ( java.util.List < TYPE_2 > ) ( <unk> ) ) ) ; METHOD_3 ( ) ; } } ) , <unk> ( ) . getId ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { if ( ( ( ( ) ) == null ) || ( ( VAR_2 ) == null ) ) { return ; } TYPE_1 . METHOD_2 ( new java.util.HashMap ( this , new TYPE_2 ( ) { public void ( ( ( java.util.List < TYPE_2 > ) ( ) ) ) ) ; METHOD_3 ( ) ; } }[0m
[31mExample #10[0m
Src : private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( <unk> ) ) ) ; } } ) ) ; }[0m
Trg : private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( <unk> ) ) ) ; } } ) ) ; }[0m
Pred: private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new java.util.HashMap ( this , new TYPE_2 ( ) { public void , ( java.lang.Object target , java.lang.Object > ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( ) ) ) ; } } ) ) ; }[0m
[31mExample #11[0m
Src : public static void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { VAR_3 = ( ( java.util.Map < TYPE_1 < java.lang.Integer , <unk> . <unk> > , java.lang.Boolean > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ; } } ; <unk> . <unk> ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; }[0m
Trg : public static void METHOD_1 ( ) { <unk> VAR_1 = new <unk> ( ) ; VAR_2 = new <unk> ( ) { public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { VAR_3 = ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ; } } ; <unk> ( ) . <unk> ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; }[0m
Pred: public static void METHOD_1 ( ) { TYPE_1 VAR_1 = new java.util.HashMap ( ) ; VAR_2 = new java.util.HashMap ( ) ; public void = ( java.util.Map < TYPE_1 < java.lang.Integer , java.util.Date . getInt ( ) ) ; }[0m
[31mExample #12[0m
Src : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ; <unk> . <unk> ( VAR_1 , new TYPE_1 ( name ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { return source != null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_1 ( name ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , java.lang.String name ) { java.lang.String = new java.io.File ( ) { public java.lang.Object ( ( java.lang.Object source , TYPE_2 ) ) { return source != null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ; }[0m
[31mExample #13[0m
Src : private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ) ; }[0m
Trg : private void METHOD_1 ( ) { TYPE_1 . <unk> ( ) . METHOD_2 ( new <unk> ( this , new <unk> ( ) { public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { VAR_1 = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new java.util.HashMap ( this , new TYPE_2 ( ) { public void , ( java.lang.Object target , java.lang.Object > ) { VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ; }[0m
[31mExample #14[0m
Src : public static void METHOD_1 ( <unk> <unk> , <unk> VAR_1 , boolean VAR_2 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> , <unk> VAR_1 , boolean VAR_2 ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source != null ) { return source ; } return new java.util.ArrayList < <unk> > ( ) ; } } ; <unk> ( ) . <unk> ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , java.util.Date VAR_1 , boolean VAR_2 ) { java.io.File = new java.io.File ( ) { public java.lang.Object ( ( java.lang.Object source , offset ) ) { return source ; } return new java.util.ArrayList < > > ( ) ; } }[0m
[31mExample #15[0m
Src : public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( <unk> . <unk> VAR_3 : VAR_4 < TYPE_1 < <unk> . <unk> > > getValue ( VAR_5 ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( <unk> . <unk> VAR_3 : VAR_4 < TYPE_1 < <unk> . <unk> > > getValue ( VAR_5 ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
Pred: public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_2 . : VAR_3 ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
[31mExample #16[0m
Src : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> . <unk> ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 . <unk> ) , <unk> ) ; }[0m
Trg : public static void METHOD_1 ( <unk> <unk> , java.lang.String name ) { <unk> = new <unk> ( ) { public java.lang.Object <unk> ( java.lang.Object source , <unk> <unk> ) { if ( source == null ) { return new java.util.ArrayList < <unk> > ( ) ; } return source ; } } ; <unk> ( ) . <unk> ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 . <unk> ) , <unk> ) ; }[0m
Pred: public static void METHOD_1 ( java.io.File f , java.lang.String name ) { TYPE_2 = new java.io.File ( ) { public java.lang.Object ( java.lang.Object java.lang.Object source ) { if ( source == null ) { return new java.util.ArrayList < > ( ) ; } return source ; } } ; }[0m
---------------
Class: Merge variable definition & initialization
Golden example (False):
[31mExample #1[0m
Src : protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { TYPE_1 <unk> = METHOD_2 ( obj . getId ( ) ) . <unk> ( STRING_1 , obj . getName ( ) ) . <unk> ( STRING_2 , obj . METHOD_3 ( ) ) . <unk> ( STRING_3 , obj . METHOD_4 ( ) ) ; return <unk> ; }[0m
Trg : protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { return METHOD_2 ( obj . getId ( ) ) . <unk> ( STRING_1 , obj . getName ( ) ) . <unk> ( STRING_2 , obj . METHOD_3 ( ) ) . <unk> ( STRING_3 , obj . METHOD_4 ( ) ) ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { TYPE_1 . METHOD_2 ( obj . getId ( ) ) . replaceAll ( STRING_1 , obj . getName ( ) ) . replaceAll ( STRING_2 , obj . METHOD_3 ( ) ) . getInt ( STRING_3 , obj . METHOD_4 ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public boolean METHOD_1 ( TYPE_1 VAR_1 , long time , TYPE_2 VAR_2 ) throws TYPE_3 { if ( ( VAR_3 ) != ( this ) ) { throw new TYPE_4 ( ) ; } final TYPE_5 VAR_4 = this . VAR_4 ; if ( ! ( VAR_4 . METHOD_2 ( time , VAR_2 ) ) ) { return false ; } boolean VAR_5 = false ; try { VAR_5 = VAR_1 . METHOD_3 ( ) ; } finally { if ( ! VAR_5 ) { VAR_4 . METHOD_4 ( ) ; } } return VAR_5 ; }[0m
Trg : public boolean METHOD_1 ( TYPE_1 VAR_1 , long time , TYPE_2 VAR_2 ) throws TYPE_3 { if ( ( VAR_3 ) != ( this ) ) { throw new TYPE_4 ( ) ; } final TYPE_5 VAR_4 = this . VAR_4 ; if ( ! ( VAR_4 . METHOD_2 ( time , VAR_2 ) ) ) { return false ; } boolean VAR_5 = false ; try { return VAR_5 = VAR_1 . METHOD_3 ( ) ; } finally { if ( ! VAR_5 ) { VAR_4 . METHOD_4 ( ) ; } } }[0m
Pred: public boolean METHOD_1 ( TYPE_1 VAR_1 , long time , TYPE_2 VAR_2 ) throws TYPE_3 { if ( ( VAR_3 ) != ( this ) ) { throw new TYPE_4 ( ) ; } final TYPE_5 VAR_4 = this . VAR_4 ; if ( ! ( VAR_4 . METHOD_2 ( time , VAR_2 ) ) ) { return false ; } boolean VAR_5 = false ; try { VAR_5 = VAR_1 . METHOD_3 ( ) ; } finally { if ( ! VAR_5 ) { VAR_4 . METHOD_4 ( ) ; } } return VAR_5 ; }[0m
---------------
Class: Move existing statements out of try block
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_3 ] ; VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; METHOD_5 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_3 ] ; try { VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; METHOD_5 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_3 ] ; VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; METHOD_5 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static void METHOD_1 ( int id , int <unk> , final boolean VAR_1 ) { try { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 ) { TYPE_1 . METHOD_3 ( id ) ; } TYPE_1 . METHOD_4 ( id , VAR_3 , <unk> ) ; } catch ( java.lang.Throwable <unk> ) { throw TYPE_2 . METHOD_5 ( <unk> ) ; } finally { VAR_2 . METHOD_6 ( ) ; } }[0m
Trg : public static void METHOD_1 ( int id , int <unk> , final boolean VAR_1 ) { VAR_2 . METHOD_2 ( ) ; try { if ( VAR_1 ) { TYPE_1 . METHOD_3 ( id ) ; } TYPE_1 . METHOD_4 ( id , VAR_3 , <unk> ) ; } catch ( java.lang.Throwable <unk> ) { throw TYPE_2 . METHOD_5 ( <unk> ) ; } finally { VAR_2 . METHOD_6 ( ) ; } }[0m
Pred: public static void METHOD_1 ( int id , int offset , final boolean VAR_1 ) { try { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 ) { TYPE_1 . METHOD_3 ( id ) ; } TYPE_1 . METHOD_4 ( id , VAR_3 , java.io.IOException ) ; } catch ( java.lang.Throwable ( ) ) { throw TYPE_2 . METHOD_5 ( ) ; } finally { VAR_2 . METHOD_6 ( ) ; } }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; java.lang.Integer [ ] VAR_3 = new java.lang.Integer [ VAR_2 ] ; for ( int i = 0 ; i < ( ( VAR_2 ) - 1 ) ; ++ i ) VAR_3 [ i ] = new java.lang.Integer ( i ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; java.lang.Integer [ ] VAR_3 = new java.lang.Integer [ VAR_2 ] ; for ( int i = 0 ; i < ( ( VAR_2 ) - 1 ) ; ++ i ) VAR_3 [ i ] = new java.lang.Integer ( i ) ; try { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
Pred: public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; java.lang.Integer [ ] VAR_3 = new java.lang.Integer [ VAR_2 ] ; for ( int i = 0 ; i < ( ( VAR_2 ) - 1 ) ; ++ i ) VAR_3 [ i ] = new java.lang.Integer ( i ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 ) ) ; METHOD_4 ( ) ; } catch ( java.lang.NullPointerException VAR_4 ) { } }[0m
---------------
Class: Remove invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = <unk> . get ( new <unk> ( STRING_1 ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; <unk> = new <unk> ( STRING_2 ) ; VAR_4 = new <unk> ( STRING_3 ) ; <unk> = new <unk> ( STRING_4 ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_5 ( STRING_5 ) ; VAR_5 . METHOD_6 ( new <unk> . <unk> ( STRING_6 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; <unk> = VAR_1 . METHOD_3 ( ) ; VAR_2 = <unk> . get ( new <unk> ( STRING_1 ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; <unk> = new <unk> ( STRING_2 ) ; VAR_4 = new <unk> ( STRING_3 ) ; <unk> = new <unk> ( STRING_4 ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_5 ( STRING_5 ) ; VAR_5 . METHOD_6 ( new <unk> . <unk> ( STRING_6 ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; java.io.File = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = VAR_2 . get ( new java.io.File ( STRING_1 ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; STRING_7 = new TYPE_1 ( ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_5 ( STRING_5 ) ; VAR_5 . METHOD_6 ( new TYPE_11 ( STRING_6 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_3 ( TYPE_4 . <unk> ( ) . METHOD_4 ( ) . getValue ( ) , TYPE_4 . <unk> ( ) . METHOD_5 ( ) ) ) ; METHOD_6 ( VAR_1 . <unk> ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_3 ( TYPE_4 . <unk> ( ) . METHOD_4 ( ) , TYPE_4 . <unk> ( ) . METHOD_5 ( ) ) ) ; METHOD_6 ( VAR_1 . <unk> ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getInt ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_3 ( TYPE_4 . getInt ( ) . METHOD_4 ( ) . getValue ( ) , TYPE_4 . ) ( ) ) ; METHOD_6 ( VAR_1 . getId ( ) ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : 1 ; } } ; METHOD_4 ( new TYPE_1 ( VAR_1 , METHOD_5 ( ) ) , <unk> ) ; }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { <unk> = new <unk> ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , <unk> <unk> ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : 1 ; } } ; METHOD_4 ( new TYPE_1 ( VAR_1 , METHOD_5 ( ) ) , <unk> ) ; }[0m
Pred: public void METHOD_1 ( ) { java.io.File = new java.io.File ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , java.io.File f ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : 1 ; } } ; }[0m
---------------
Class: Remove parameter from the method invocation
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( <unk> ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { METHOD_4 ( result . <unk> ( ) ) ; } } ; <unk> ( ) . METHOD_5 ( null ) ; <unk> ( ) . METHOD_6 ( VAR_3 , parameters , VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( <unk> ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { METHOD_4 ( result . <unk> ( ) ) ; } } ; <unk> ( ) . METHOD_5 ( ) ; <unk> ( ) . METHOD_6 ( VAR_3 , parameters , VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( java.lang.Math.random ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { METHOD_4 ( result . ) ( ( ) ) ; } } ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static TYPE_1 <unk> ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 <unk> ) { TYPE_3 VAR_2 = <unk> . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_3 ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; } TYPE_4 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( VAR_3 == null ) { VAR_3 = new TYPE_4 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( type . value ( ) ) ; return <unk> ; }[0m
Trg : public static TYPE_1 <unk> ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 <unk> ) { TYPE_3 VAR_2 = <unk> . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_3 ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; } TYPE_4 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( VAR_3 == null ) { VAR_3 = new TYPE_4 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( type ) ; return <unk> ; }[0m
Pred: public static TYPE_1 ( ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 TYPE_2 ) { TYPE_3 VAR_2 = TYPE_2 . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_3 ( ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; } TYPE_4 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( VAR_3 == null ) { VAR_3 = new TYPE_4 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( type . value ( ) ) ; return f ; }[0m
[31mExample #2[0m
Src : protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( response , VAR_3 , VAR_2 ) ; } }[0m
Trg : protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( VAR_1 , response , VAR_3 , VAR_2 ) ; } }[0m
Pred: protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( response , VAR_3 , VAR_2 ) ; } }[0m
[31mExample #3[0m
Src : public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , METHOD_4 ( ) . <unk> ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( METHOD_4 ( ) . getId ( ) , METHOD_4 ( ) . <unk> ( ) ) ; METHOD_2 ( ) . METHOD_8 ( ) ; return null ; }[0m
Trg : public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( METHOD_4 ( ) . getId ( ) , METHOD_4 ( ) . <unk> ( ) ) ; METHOD_2 ( ) . METHOD_8 ( ) ; return null ; }[0m
Pred: public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , METHOD_4 ( ) . getId ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( METHOD_4 ( ) . getId ( ) , METHOD_4 ( ) . getId ( ) ) ; METHOD_2 ( ) . METHOD_8 ( ) ; return null ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , false , STRING_1 , VAR_1 , false ) ) ; METHOD_5 ( false ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_2 response = VAR_3 . add ( METHOD_7 ( ) ) ; assertEquals ( INT_1 , response . <unk> ( ) ) ; METHOD_8 ( ( ( response . <unk> ( ) ) instanceof TYPE_3 ) ) ; METHOD_9 ( ( ( TYPE_3 ) ( response . <unk> ( ) ) ) , 1 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , false , STRING_1 , VAR_1 ) ) ; METHOD_5 ( false ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_2 response = VAR_3 . add ( METHOD_7 ( ) ) ; assertEquals ( INT_1 , response . <unk> ( ) ) ; METHOD_8 ( ( ( response . <unk> ( ) ) instanceof TYPE_3 ) ) ; METHOD_9 ( ( ( TYPE_3 ) ( response . <unk> ( ) ) ) , 1 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , false , STRING_1 , VAR_1 , false ) ) ; METHOD_5 ( false ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; }[0m
[31mExample #5[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) , null ) ) ; METHOD_5 ( <unk> , VAR_3 ) ; TYPE_4 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) , null ) ) ; METHOD_5 ( VAR_3 ) ; TYPE_4 . METHOD_6 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.HashMap = new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) , null ) ; METHOD_5 ( ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; <unk> VAR_4 = new <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; <unk> ( VAR_6 . get ( TYPE_1 . <unk> ( VAR_7 . <unk> class ) ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_5 ( <unk> . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; <unk> VAR_4 = new <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; <unk> ( VAR_6 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( VAR_4 ) ; TYPE_2 . METHOD_5 ( <unk> . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; TYPE_1 VAR_4 = new ( ( ) ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; ( ( VAR_6 . get ( TYPE_1 . getInt ( VAR_7 . VAR_7 class ) ) ) . ( ( VAR_4 ) ) ) ; TYPE_2 . METHOD_5 ( TYPE_2 . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) ) ; }[0m
[31mExample #7[0m
Src : private void METHOD_1 ( boolean VAR_1 ) { <unk> <unk> = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_1 ) ; <unk> ( VAR_4 . METHOD_3 ( TYPE_2 . <unk> ( VAR_5 . <unk> class ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> ) ) ; <unk> ( VAR_6 . METHOD_5 ( <unk> . getId ( ) ) ) . <unk> ( <unk> . METHOD_6 ( ) ) ; }[0m
Trg : private void METHOD_1 ( boolean VAR_1 ) { <unk> <unk> = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_1 ) ; <unk> ( VAR_4 . METHOD_3 ( TYPE_2 . <unk> ( ) ) ) . <unk> ( TYPE_3 . METHOD_4 ( <unk> ) ) ; <unk> ( VAR_6 . METHOD_5 ( <unk> . getId ( ) ) ) . <unk> ( <unk> . METHOD_6 ( ) ) ; }[0m
Pred: private void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 == null ) return ; java.io.File f = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_1 ) ; ( ( VAR_4 . METHOD_3 ( TYPE_2 . getInt ( VAR_5 . f class ) ) ) . getInt ( TYPE_3 . METHOD_4 ( f ) ) ) ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = <unk> . METHOD_2 ( ) . METHOD_3 ( ) ; <unk> ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . <unk> ( <unk> ) . METHOD_4 ( TYPE_3 . <unk> ( VAR_2 class ) ) ; TYPE_4 . METHOD_5 ( <unk> ) ; <unk> . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . <unk> ( ) . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = <unk> . METHOD_2 ( ) . METHOD_3 ( ) ; <unk> ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . <unk> ( <unk> ) . METHOD_4 ( TYPE_3 . <unk> ( ) ) ; TYPE_4 . METHOD_5 ( <unk> ) ; <unk> . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . <unk> ( ) . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; assertEquals ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . getInt ( f ) . METHOD_4 ( TYPE_3 . ) ( ( VAR_2 class ) ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , null ) ) ; METHOD_4 ( <unk> , VAR_3 ) ; TYPE_4 . METHOD_5 ( <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , null ) ) ; METHOD_4 ( VAR_3 ) ; TYPE_4 . METHOD_5 ( <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.HashMap = new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , null ) ; METHOD_4 ( ) ; TYPE_4 . METHOD_5 ( assertEquals ( ) ) ; }[0m
[31mExample #10[0m
Src : protected <unk> METHOD_1 ( boolean VAR_1 ) { <unk> VAR_2 = null ; java.util.List < <unk> > VAR_3 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 = new <unk> ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_3 = TYPE_1 . METHOD_5 ( VAR_2 ) ; } <unk> ( METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_4 ) . METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_5 ) , TYPE_3 . <unk> ( VAR_6 class ) ) ; return VAR_2 ; }[0m
Trg : protected <unk> METHOD_1 ( boolean VAR_1 ) { <unk> VAR_2 = null ; java.util.List < <unk> > VAR_3 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 = new <unk> ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_3 = TYPE_1 . METHOD_5 ( VAR_2 ) ; } <unk> ( METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_4 ) . METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_5 ) , TYPE_3 . <unk> ( ) ) ; return VAR_2 ; }[0m
Pred: protected static METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_3 = TYPE_1 . METHOD_5 ( VAR_2 ) ; } }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) , true ) ; METHOD_6 ( ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> . METHOD_8 ( ) ; TYPE_2 . METHOD_9 ( <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> . METHOD_8 ( ) ; TYPE_2 . METHOD_9 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) , true ) ; METHOD_6 ( ) ; assertEquals ( true ) . METHOD_7 ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = METHOD_2 ( ) ; TYPE_2 p = new TYPE_3 ( null , <unk> , ( - 1 ) , null , null , null , VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; p . METHOD_3 ( VAR_4 ) ; assertEquals ( <unk> , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = METHOD_2 ( ) ; TYPE_2 p = new TYPE_3 ( null , <unk> , ( - 1 ) , null , null , null , VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; p . METHOD_3 ( VAR_4 ) ; assertEquals ( <unk> , VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_2 = new TYPE_3 ( null , INT_8 , ( - 1 ) , null , null , null , VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; p . METHOD_3 ( VAR_4 ) ; assertEquals ( INT_8 , VAR_4 ) ; }[0m
[31mExample #13[0m
Src : public boolean METHOD_1 ( TYPE_1 node ) { java.lang.String VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 . equals ( STRING_1 ) ) { TYPE_2 <unk> = <unk> . METHOD_3 ( node ) ; <unk> . METHOD_4 ( VAR_2 , node , <unk> , ( STRING_2 + STRING_3 ) , null ) ; } return false ; }[0m
Trg : public boolean METHOD_1 ( TYPE_1 node ) { java.lang.String VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 . equals ( STRING_1 ) ) { TYPE_2 <unk> = <unk> . METHOD_3 ( node ) ; <unk> . METHOD_4 ( VAR_2 , node , <unk> , ( STRING_2 + STRING_3 ) ) ; } return false ; }[0m
Pred: public boolean METHOD_1 ( TYPE_1 node ) { java.lang.String VAR_1 = node . METHOD_2 ( ) ; if ( VAR_1 . equals ( STRING_1 ) ) { TYPE_2 = TYPE_2 . METHOD_3 ( node ) ; java.io.File . METHOD_4 ( VAR_2 , node , ) ; } return false ; }[0m
[31mExample #14[0m
Src : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , byte [ ] VAR_3 ) throws <unk> { TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_5 , 0 , 0 , true ) ; int VAR_6 = METHOD_3 ( ) ; TYPE_2 VAR_7 = TYPE_3 . METHOD_4 ( VAR_8 class ) ; VAR_9 . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; <unk> ( VAR_10 ) . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; }[0m
Trg : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , byte [ ] VAR_3 ) throws <unk> { TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_5 , 0 , true ) ; int VAR_6 = METHOD_3 ( ) ; TYPE_2 VAR_7 = TYPE_3 . METHOD_4 ( VAR_8 class ) ; VAR_9 . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; <unk> ( VAR_10 ) . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; }[0m
Pred: private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , byte [ ] VAR_3 ) throws java.io.IOException { TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_5 , 0 , 0 , true ) ; int VAR_6 = METHOD_3 ( ) ; TYPE_2 VAR_7 = TYPE_3 . METHOD_4 ( VAR_8 class ) ; VAR_9 . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 ) ; }[0m
[31mExample #15[0m
Src : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 node ) { if ( ( ( node . METHOD_2 ( ) . size ( ) ) == 1 ) && ( ! ( node . METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) . equals ( STRING_1 ) ) ) ) { context . METHOD_4 ( VAR_2 , node , context . METHOD_5 ( node ) , ( STRING_2 + STRING_3 ) , null ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 node ) { if ( ( ( node . METHOD_2 ( ) . size ( ) ) == 1 ) && ( ! ( node . METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) . equals ( STRING_1 ) ) ) ) { context . METHOD_4 ( VAR_2 , node , context . METHOD_5 ( node ) , ( STRING_2 + STRING_3 ) ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 node ) { if ( ( ( node . METHOD_2 ( ) . size ( ) ) == 1 ) && ( ! ( node . METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) . equals ( STRING_1 ) ) ) ) { context . METHOD_4 ( VAR_2 , node , context . METHOD_5 ( node ) , ( STRING_2 + STRING_3 ) , null ) ; } }[0m
[31mExample #16[0m
Src : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { this . METHOD_1 ( ( <unk> == null ? new java.util.ArrayList < TYPE_1 > ( ) : ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object <unk> ) { this . METHOD_1 ( ( <unk> == null ? new java.util.ArrayList < TYPE_1 > ( ) : ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ) ) ) ) ; }[0m
Pred: public void ( ( java.lang.Object ) , java.lang.Object ) { this . METHOD_1 ( ( expr == null ? new java.util.ArrayList < TYPE_1 > ( ) : ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . getInt ( ) ) ) ) ) ) ) ; }[0m
[31mExample #17[0m
Src : protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_2 . <unk> ( VAR_4 class ) ) ; }[0m
Trg : protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_2 . <unk> ( ) ) ; }[0m
Pred: protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; assertEquals ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_2 . getInt ( VAR_4 class ) ) ; }[0m
[31mExample #18[0m
Src : private static void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { if ( ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) ) ) { context . METHOD_4 ( VAR_1 , element , context . METHOD_5 ( element ) , STRING_1 , null ) ; } }[0m
Trg : private static void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { if ( ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) ) ) { context . METHOD_4 ( VAR_1 , element , context . METHOD_5 ( element ) , STRING_1 ) ; } }[0m
Pred: private static void METHOD_1 ( TYPE_1 context , TYPE_2 element ) { if ( ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) ) ) { context . METHOD_4 ( VAR_1 , element , context . METHOD_5 ( element ) , STRING_1 , null ) ; } }[0m
[31mExample #19[0m
Src : private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 , STRING_3 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } protected void METHOD_3 ( ) { } } ; VAR_2 . METHOD_4 ( VAR_6 , new TYPE_2 ( STRING_4 ) ) ; return VAR_2 ; }[0m
Trg : private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } protected void METHOD_3 ( ) { } } ; VAR_2 . METHOD_4 ( VAR_6 , new TYPE_2 ( STRING_4 ) ) ; return VAR_2 ; }[0m
Pred: private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 , STRING_3 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } protected void METHOD_3 ( ) { } } ; VAR_2 . METHOD_4 ( VAR_6 , new TYPE_2 ( STRING_4 ) ) ; return VAR_2 ; }[0m
[31mExample #20[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_3 ) + STRING_5 ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = TYPE_3 . METHOD_3 ( VAR_2 , true ) ; assertEquals ( ( STRING_1 + ( STRING_2 + STRING_6 ) ) , VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_3 ) + STRING_5 ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = TYPE_3 . METHOD_3 ( VAR_2 ) ; assertEquals ( ( STRING_1 + ( STRING_2 + STRING_6 ) ) , VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_3 ) + STRING_5 ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_1 = TYPE_3 . METHOD_3 ( VAR_2 , true ) ; assertEquals ( ( STRING_1 + ( STRING_2 + STRING_6 ) ) , VAR_1 ) ; }[0m
[31mExample #21[0m
Src : private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int index = METHOD_2 ( VAR_1 , true ) ; if ( index >= 0 ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( VAR_2 . get ( index ) ) ) ; if ( <unk> != null ) { return VAR_3 ; } } return null ; }[0m
Trg : private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int index = METHOD_2 ( VAR_1 ) ; if ( index >= 0 ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( VAR_2 . get ( index ) ) ) ; if ( <unk> != null ) { return VAR_3 ; } } return null ; }[0m
Pred: private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int index = METHOD_2 ( VAR_1 , true ) ; if ( index >= 0 ) { TYPE_1 ( = ( TYPE_1 ) ( VAR_2 . get ( index ) ) ) ; if ( VAR_2 != null ) { return VAR_3 ; } } return null ; }[0m
[31mExample #22[0m
Src : public void METHOD_1 ( ) { <unk> . <unk> ( ) . <unk> ( ) . METHOD_2 ( <unk> . getId ( ) ) ; <unk> . METHOD_3 ( ) ; <unk> ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , TYPE_1 . <unk> ( VAR_2 . <unk> class ) ) ) . <unk> ( new java.util.ArrayList < > ( TYPE_2 . METHOD_6 ( STRING_1 ) ) ) ; TYPE_3 . METHOD_7 ( STRING_2 , <unk> . METHOD_8 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> . <unk> ( ) . <unk> ( ) . METHOD_2 ( <unk> . getId ( ) ) ; <unk> . METHOD_3 ( ) ; <unk> ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , TYPE_1 . <unk> ( ) ) ) . <unk> ( new java.util.ArrayList < > ( TYPE_2 . METHOD_6 ( STRING_1 ) ) ) ; TYPE_3 . METHOD_7 ( STRING_2 , <unk> . METHOD_8 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { assertEquals ( ) . getInt ( ) . getInt ( ) . METHOD_2 ( f . getId ( ) ) ; assertEquals ( ) ; }[0m
[31mExample #23[0m
Src : private static void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = VAR_2 . METHOD_2 ( ) ; java.lang.Object VAR_4 = VAR_2 . METHOD_3 ( ) ; if ( VAR_4 instanceof TYPE_5 ) { if ( context . METHOD_4 ( ) . METHOD_5 ( null , VAR_1 , ( ( TYPE_5 ) ( VAR_4 ) ) ) ) { return ; } } context . METHOD_1 ( VAR_1 , <unk> , VAR_3 , null ) ; }[0m
Trg : private static void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 <unk> = VAR_2 . METHOD_2 ( ) ; java.lang.Object VAR_4 = VAR_2 . METHOD_3 ( ) ; if ( VAR_4 instanceof TYPE_5 ) { if ( context . METHOD_4 ( ) . METHOD_5 ( null , VAR_1 , ( ( TYPE_5 ) ( VAR_4 ) ) ) ) { return ; } } context . METHOD_1 ( VAR_1 , <unk> , VAR_3 ) ; }[0m
Pred: private static void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_4 VAR_2 = VAR_2 . METHOD_3 ( ) ; if ( VAR_4 instanceof TYPE_5 ) { if ( context . METHOD_4 ( ) . METHOD_5 ( null , VAR_1 , ( ( TYPE_5 ) ( VAR_4 ) ) ) ) { return ; } } }[0m
[31mExample #24[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_4 ( VAR_1 , <unk> . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . <unk> ( VAR_2 . <unk> class ) ) ; TYPE_2 . assertEquals ( VAR_3 , <unk> . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; <unk> . METHOD_1 ( ) ; <unk> . METHOD_4 ( VAR_1 , <unk> . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . <unk> ( ) ) ; TYPE_2 . assertEquals ( VAR_3 , <unk> . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; assertEquals ( ) ; f . METHOD_4 ( VAR_1 , name . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . getInt ( VAR_2 . getId ( ) ) ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_2 . METHOD_7 ( ) ) ; }[0m
[31mExample #25[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { assert TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { new TYPE_4 ( VAR_2 , VAR_5 , VAR_1 , VAR_3 , VAR_6 ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { assert TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { new TYPE_4 ( VAR_2 , VAR_5 , VAR_1 , VAR_3 , VAR_6 , <unk> ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { assert TYPE_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { new TYPE_4 ( VAR_2 , VAR_5 , VAR_1 , VAR_3 , VAR_6 ) . METHOD_4 ( ) ; } VAR_2 . METHOD_5 ( ) ; }[0m
[31mExample #26[0m
Src : void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) ; for ( final TYPE_2 VAR_2 : ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> . METHOD_3 ( ) ) ) ) { TYPE_3 VAR_3 = new TYPE_3 ( <unk> ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; } }[0m
Trg : void METHOD_1 ( TYPE_1 <unk> ) { VAR_1 . METHOD_2 ( ) ; for ( final TYPE_2 VAR_2 : ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> . METHOD_3 ( ) ) ) ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; } }[0m
Pred: void METHOD_1 ( TYPE_1 ) { VAR_1 . METHOD_2 ( ) ; for ( final TYPE_2 VAR_2 : ( ( java.util.ArrayList < TYPE_2 > ) ( TYPE_2 . METHOD_3 ( ) ) ) ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; } }[0m
---------------
Class: Remove redundant initialization,Replace statement
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > <unk> ) { TYPE_3 <unk> = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { java.util.ArrayList < TYPE_4 > <unk> = null ; if ( ( VAR_1 . error ) == ( VAR_3 ) ) { <unk> = TYPE_5 . METHOD_3 ( <unk> , VAR_2 ) ; TYPE_6 . METHOD_4 ( VAR_4 , <unk> ) ; } VAR_2 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > <unk> ) { TYPE_3 <unk> = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { java.util.ArrayList < TYPE_4 > <unk> = TYPE_5 . METHOD_3 ( <unk> , VAR_2 ) ; if ( ( VAR_1 . error ) == ( VAR_3 ) ) { TYPE_6 . METHOD_4 ( VAR_4 , <unk> ) ; } VAR_2 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > ) { TYPE_3 VAR_2 = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 != null ) && ( ( VAR_1 . error ) == ( VAR_3 ) ) ) { if ( ( VAR_1 . error ) == ( VAR_3 ) ) { java.io.File = TYPE_5 . METHOD_3 ( ) ; TYPE_6 . METHOD_4 ( VAR_4 , VAR_2 ) ; } VAR_2 . METHOD_5 ( ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 <unk> = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { TYPE_4 <unk> = null ; if ( ( VAR_1 . error ) == ( VAR_4 ) ) { <unk> = TYPE_5 . METHOD_3 ( VAR_2 , VAR_3 ) ; TYPE_6 . METHOD_4 ( VAR_5 , <unk> ) ; } VAR_3 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 <unk> = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( <unk> != null ) { TYPE_4 <unk> = TYPE_5 . METHOD_3 ( VAR_2 , VAR_3 ) ; if ( ( VAR_1 . error ) == ( VAR_4 ) ) { TYPE_6 . METHOD_4 ( VAR_5 , <unk> ) ; } VAR_3 . METHOD_5 ( <unk> , VAR_1 , <unk> ) ; } }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 != null ) && ( ( VAR_1 . error ) == ( VAR_4 ) ) ) { TYPE_5 = TYPE_5 . METHOD_3 ( VAR_2 , VAR_3 ) ; TYPE_6 . METHOD_4 ( VAR_5 , VAR_2 ) ; } VAR_3 . METHOD_5 ( ) ; }[0m
---------------
Class: Remove statement
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( java.lang.String path , int <unk> ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( <unk> ) ) ) ) { throw new <unk> ( STRING_2 ) ; } else if ( ( VAR_1 ) == ( METHOD_3 ( ) ) ) { throw new TYPE_3 ( STRING_3 ) ; } return METHOD_4 ( VAR_2 , path , <unk> ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( java.lang.String path , int <unk> ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( <unk> ) ) ) ) { throw new <unk> ( STRING_2 ) ; } return METHOD_4 ( VAR_2 , path , <unk> ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.String path , int offset ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( ) ) ) ) { throw new java.io.File ( STRING_2 ) ; } else if ( ( VAR_1 ) == ( METHOD_3 ( ) ) ) { throw new TYPE_3 ( STRING_3 ) ; } return METHOD_4 ( VAR_2 , path , INT_7 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 <unk> ) { <unk> . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) ) ; <unk> . METHOD_2 ( STRING_3 , ( ( VAR_1 ) + STRING_4 ) ) ; <unk> . METHOD_2 ( STRING_5 , ( ( VAR_1 ) + STRING_6 ) ) ; <unk> . METHOD_2 ( STRING_7 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_9 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_10 , STRING_8 ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 <unk> ) { <unk> . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) ) ; <unk> . METHOD_2 ( STRING_5 , ( ( VAR_1 ) + STRING_6 ) ) ; <unk> . METHOD_2 ( STRING_7 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_9 , STRING_8 ) ; <unk> . METHOD_2 ( STRING_10 , STRING_8 ) ; }[0m
Pred: public void METHOD_1 ( TYPE_1 , ) { TYPE_1 . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) ) ; assertEquals ( STRING_3 , ( ( VAR_1 ) + STRING_4 ) ) ; assertEquals ( STRING_5 , ( ( VAR_1 ) + STRING_6 ) ) ; STRING_7 . METHOD_2 ( STRING_7 , STRING_8 ) ; assertEquals ( STRING_9 , STRING_8 ) ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_1 < ? > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( true ) ; } } if ( ( VAR_4 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_5 : VAR_4 ) { VAR_5 . METHOD_4 ( ) ; } } VAR_1 . METHOD_2 ( STRING_2 ) ; TYPE_3 . METHOD_5 ( 0 ) ; }[0m
Trg : public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_1 < ? > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( true ) ; } } if ( ( VAR_4 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_5 : VAR_4 ) { VAR_5 . METHOD_4 ( ) ; } } VAR_1 . METHOD_2 ( STRING_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_1 < ? > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( true ) ; } } if ( ( VAR_4 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_5 : VAR_4 ) { VAR_5 . METHOD_4 ( ) ; } } VAR_1 . METHOD_2 ( STRING_2 ) ; TYPE_3 . METHOD_5 ( 0 ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; try { <unk> . METHOD_5 ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . <unk> ( ) ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; try { <unk> . METHOD_5 ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . <unk> ( ) ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; try { TYPE_2 . METHOD_5 ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . toString ( ) ) ; } }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_1 VAR_4 = METHOD_4 ( VAR_2 ) ; TYPE_2 . assertNotNull ( VAR_4 ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_5 ( ) ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_1 VAR_4 = METHOD_4 ( VAR_2 ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_5 ( ) ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 ) ; TYPE_1 VAR_4 = METHOD_4 ( VAR_2 ) ; TYPE_2 . assertNotNull ( VAR_4 ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_5 ( ) ) ; TYPE_2 . assertTrue ( VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) ; }[0m
[31mExample #5[0m
Src : public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 <unk> = <unk> ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = <unk> . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; if ( VAR_2 != null ) { <unk> . METHOD_5 ( VAR_2 ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . <unk> ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_7 ( VAR_2 ) ; } return VAR_2 ; }[0m
Trg : public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 <unk> = <unk> ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = <unk> . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; if ( VAR_2 != null ) { <unk> . METHOD_5 ( VAR_2 ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; <unk> . METHOD_7 ( VAR_2 ) ; } return VAR_2 ; }[0m
Pred: public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; if ( VAR_2 != null ) { TYPE_1 . METHOD_5 ( VAR_2 ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . getInt ( f . METHOD_6 ( ) ) ; } return VAR_2 ; }[0m
[31mExample #6[0m
Src : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . <unk> class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; }[0m
Trg : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . <unk> class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; }[0m
Pred: protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . name class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; }[0m
[31mExample #7[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_2 <unk> = <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; TYPE_2 <unk> = <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_2[0m
[31mExample #8[0m
Src : public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final <unk> <unk> = null ; final <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( <unk> ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( <unk> ) ; final <unk> VAR_4 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { final <unk> <unk> = null ; final <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( <unk> ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( <unk> ) ; final <unk> VAR_4 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.io.File f = new java.util.HashMap ( ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( f ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( ; ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , <unk> ( 1 ) ) ; VAR_4 . METHOD_5 ( ) ; TYPE_1 . <unk> <unk> = <unk> . get ( ) ; TYPE_2 . METHOD_6 ( <unk> , 1 ) ; METHOD_7 ( <unk> ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , <unk> ( 1 ) ) ; TYPE_1 . <unk> <unk> = <unk> . get ( ) ; TYPE_2 . METHOD_6 ( <unk> , 1 ) ; METHOD_7 ( <unk> ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . ) class ; }[0m
[31mExample #10[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( <unk> ( ) ) ; VAR_2 . METHOD_6 ( ) ; TYPE_2 VAR_3 = <unk> . get ( ) ; METHOD_7 ( VAR_3 ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( <unk> ( ) ) ; TYPE_2 VAR_3 = <unk> . get ( ) ; METHOD_7 ( VAR_3 ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; }[0m
[31mExample #11[0m
Src : private void METHOD_1 ( ) { <unk> <unk> = ( ( <unk> ) ( METHOD_2 ( ) . <unk> ( ) ) ) ; if ( <unk> == null ) { <unk> = new <unk> ( ) ; } METHOD_3 ( <unk> , null , false , null ) ; getName ( ) . <unk> ( false ) ; METHOD_4 ( ) . <unk> ( false ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> <unk> = ( ( <unk> ) ( METHOD_2 ( ) . <unk> ( ) ) ) ; if ( <unk> == null ) { <unk> = new <unk> ( ) ; } METHOD_3 ( <unk> , null , false , null ) ; }[0m
Pred: private void METHOD_1 ( ) { java.io.File f = ( ( ( ) ) ( METHOD_2 ( ) . trim ( ) ) ) ; if ( ( VAR_1 ) == null ) { java.io.File = new TYPE_1 ( ) ; } METHOD_3 ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( false ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_1 . <unk> ( ) , TYPE_1 . <unk> ( ) ) ; VAR_1 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , <unk> . <unk> ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( false ) . <unk> ( <unk> ) . METHOD_3 ( TYPE_1 . <unk> ( ) ) ; VAR_1 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , <unk> . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( TYPE_1 . getInt ( ) , TYPE_1 . getInt ( ) ) ; VAR_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 ) ; }[0m
Trg : public void METHOD_1 ( ) { METHOD_2 ( ) ; <unk> ( VAR_1 . get ( TYPE_1 . <unk> ( ) ) ) . <unk> ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 ) ; }[0m
Pred: public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_2 . METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 ) ; }[0m
[31mExample #14[0m
Src : public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 . <unk> class . METHOD_2 ( ) . METHOD_3 ( true ) ; TYPE_3 <unk> = new TYPE_3 ( ) ; TYPE_4 VAR_2 = new TYPE_4 ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_2 ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) ) ; }[0m
Trg : public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { TYPE_3 <unk> = new TYPE_3 ( ) ; TYPE_4 VAR_2 = new TYPE_4 ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_2 ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( <unk> . METHOD_8 ( ) ) ; }[0m
Pred: public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { VAR_1 . title class . METHOD_2 ( ) . METHOD_3 ( true ) ; TYPE_3 ( = new TYPE_3 ( ) ) ; TYPE_4 VAR_2 = new TYPE_4 ( ) ; assertEquals ( ) ; assertEquals ( ) ; }[0m
[31mExample #15[0m
Src : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , new java.lang.Object [ ] { TYPE_2 . toString ( ) } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; }[0m
Trg : protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , new java.lang.Object [ ] { TYPE_2 . toString ( ) } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; }[0m
Pred: protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , new java.lang.Object [ ] { TYPE_2 . toString ( ) } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; }[0m
[31mExample #16[0m
Src : public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , <unk> VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == ( <unk> ( ) . METHOD_2 ( ) ) ) { return VAR_3 . get ( ) ; } else if ( VAR_1 == ( <unk> ( ) . METHOD_3 ( ) ) ) { return VAR_4 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } }[0m
Trg : public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , <unk> VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == ( <unk> ( ) . METHOD_2 ( ) ) ) { return VAR_3 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } }[0m
Pred: public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == ( ) ) { return VAR_3 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } }[0m
[31mExample #17[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> ( VAR_1 . METHOD_2 ( ) ) . <unk> ( null ) ; METHOD_3 ( false ) ; <unk> . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , <unk> , VAR_2 ) ; <unk> . METHOD_6 ( VAR_3 , <unk> . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_2 . METHOD_9 ( VAR_4 ) , TYPE_2 . <unk> ( VAR_5 class ) ) ; <unk> . METHOD_6 ( <unk> , <unk> . METHOD_7 ( 0 ) ) . METHOD_10 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_3 ( false ) ; <unk> . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , <unk> , VAR_2 ) ; <unk> . METHOD_6 ( VAR_3 , <unk> . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_2 . METHOD_9 ( VAR_4 ) , TYPE_2 . <unk> ( VAR_5 class ) ) ; <unk> . METHOD_6 ( <unk> , <unk> . METHOD_7 ( 0 ) ) . METHOD_10 ( ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.io.File ( VAR_1 . METHOD_2 ( ) ) . getInt ( null ) ; METHOD_3 ( false ) ; VAR_2 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , , , VAR_2 ) ; assertEquals ( ) ; }[0m
[31mExample #18[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( ) ; } catch ( java.lang.NullPointerException <unk> ) { } int c = TYPE_1 . METHOD_3 ( ) ; int <unk> = TYPE_1 . METHOD_4 ( c ) ; METHOD_5 ( TYPE_1 . METHOD_2 ( <unk> ) ) ; TYPE_1 . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( c ) ; TYPE_2 . METHOD_8 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( ) ; } catch ( java.lang.NullPointerException <unk> ) { } int c = TYPE_1 . METHOD_3 ( ) ; int <unk> = TYPE_1 . METHOD_4 ( c ) ; METHOD_5 ( TYPE_1 . METHOD_2 ( <unk> ) ) ; TYPE_1 . METHOD_6 ( <unk> ) ; TYPE_1 . METHOD_7 ( c ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; fail ( ) ; } }[0m
[31mExample #19[0m
Src : protected void METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 ) ; <unk> . METHOD_3 ( VAR_2 ) ; <unk> . METHOD_4 ( true ) ; <unk> . METHOD_5 ( <unk> ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_3 . get ( VAR_1 ) ) . <unk> ( <unk> ) ; METHOD_7 ( false ) ; }[0m
Trg : protected void METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 ) ; <unk> . METHOD_3 ( VAR_2 ) ; <unk> . METHOD_4 ( true ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_3 . get ( VAR_1 ) ) . <unk> ( <unk> ) ; METHOD_7 ( false ) ; }[0m
Pred: protected void METHOD_1 ( ) { java.io.File f = new java.util.HashMap ( ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; f . METHOD_3 ( VAR_2 ) ; f . METHOD_4 ( true ) ; assertEquals ( ) ; assertEquals ( VAR_3 . get ( VAR_1 ) ) . trim ( ) ; METHOD_7 ( false ) ; }[0m
[31mExample #20[0m
Src : public boolean METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) ) ) { throw new <unk> ( STRING_2 ) ; } else if ( ( VAR_2 ) == ( METHOD_2 ( ) ) ) { throw new TYPE_1 ( STRING_3 ) ; } return METHOD_3 ( VAR_3 , path , VAR_1 ) ; }[0m
Trg : public boolean METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) ) ) { throw new <unk> ( STRING_2 ) ; } return METHOD_3 ( VAR_3 , path , VAR_1 ) ; }[0m
Pred: public boolean METHOD_1 ( java.lang.String path , java.lang.String VAR_1 ) { if ( ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) ) ) { throw new java.lang.Exception ( STRING_2 ) ; } else if ( ( VAR_2 ) == ( METHOD_2 ( ) ) ) { throw new TYPE_1 ( STRING_3 ) ; } return METHOD_3 ( VAR_3 , path , VAR_1 ) ; }[0m
[31mExample #21[0m
Src : protected TYPE_1 METHOD_1 ( int index ) { for ( TYPE_1 <unk> = this ; <unk> != null ; <unk> = <unk> . METHOD_2 ( ) ) { TYPE_1 obj = <unk> . METHOD_3 ( index , null , this ) ; if ( obj != null ) { ( ( TYPE_2 ) ( obj ) ) . METHOD_4 ( METHOD_5 ( ) ) ; return obj ; } } return null ; }[0m
Trg : protected TYPE_1 METHOD_1 ( int index ) { for ( TYPE_1 <unk> = this ; <unk> != null ; <unk> = <unk> . METHOD_2 ( ) ) { TYPE_1 obj = <unk> . METHOD_3 ( index , null , this ) ; if ( obj != null ) { return obj ; } } return null ; }[0m
Pred: protected TYPE_1 METHOD_1 ( int index ) { if ( ( VAR_1 ) == null ) { return ; } for ( TYPE_1 TYPE_1 = this ; VAR_2 = null ; if ( obj != null ) { ( ( TYPE_2 ) ( obj ) ) . METHOD_4 ( METHOD_5 ( ) ) ; return obj ; } }[0m
[31mExample #22[0m
Src : private static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } if ( ( VAR_5 ) != null ) { VAR_2 . METHOD_2 ( STRING_4 ) ; VAR_2 . METHOD_2 ( VAR_5 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } return VAR_2 ; }[0m
Trg : private static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } return VAR_2 ; }[0m
Pred: private static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } if ( ( VAR_5 ) != null ) { VAR_2 . METHOD_2 ( STRING_4 ) ; VAR_2 . METHOD_2 ( VAR_5 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; } return VAR_2 ; }[0m
[31mExample #23[0m
Src : public void METHOD_1 ( ) { TYPE_1 . <unk> <unk> = new TYPE_1 . <unk> ( ) ; <unk> . METHOD_2 ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_3 ) ; <unk> ( METHOD_6 ( false ) ) . <unk> ( VAR_4 ) . METHOD_7 ( VAR_3 ) ; TYPE_3 . assertEquals ( false , VAR_5 . METHOD_8 ( <unk> , <unk> ) . METHOD_9 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> <unk> = new <unk> ( ) ; <unk> . METHOD_4 ( VAR_2 ) ; <unk> . METHOD_5 ( VAR_3 ) ; <unk> ( METHOD_6 ( false ) ) . <unk> ( VAR_4 ) . METHOD_7 ( VAR_3 ) ; TYPE_3 . assertEquals ( false , VAR_5 . METHOD_8 ( <unk> , VAR_1 ) . METHOD_9 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 . getInt ( new TYPE_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; TYPE_2 . METHOD_2 ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; assertEquals ( ) ; }[0m
[31mExample #24[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . <unk> <unk> = new TYPE_1 . <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( <unk> ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . <unk> <unk> = new TYPE_1 . <unk> ( ) ; <unk> . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; try { VAR_3 . add ( <unk> ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . replaceAll ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
[31mExample #25[0m
Src : public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ( METHOD_2 ( ) ) == false ) { <unk> ( <unk> . <unk> , STRING_1 ) ; throw new java.io.IOException ( ) ; } return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , this , VAR_1 , null ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ! ( METHOD_2 ( ) ) ) { <unk> ( <unk> . <unk> , STRING_1 ) ; throw new java.io.IOException ( ) ; } return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , this , VAR_1 , null ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( int VAR_1 ) throws java.io.IOException { if ( ( METHOD_2 ( ) ) == false ) { throw new java.util.HashMap ( ) ; } return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , this , VAR_1 , null ) ; }[0m
[31mExample #26[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 <unk> = TYPE_2 . <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; TYPE_1 <unk> = TYPE_2 . <unk> ( 1 ) ; <unk> . <unk> ( VAR_2 [ 1 ] . toString ( ) ) ; try { <unk> . METHOD_6 ( <unk> ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1[0m
---------------
Class: Remove statement,Add try block
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ; final int VAR_2 = <unk> ; VAR_1 . METHOD_4 ( VAR_2 ) ; int VAR_3 = VAR_1 . METHOD_5 ( ) ; assertTrue ( STRING_1 , ( ( TYPE_4 . METHOD_6 ( ( VAR_2 - VAR_3 ) ) ) <= <unk> ) ) ; VAR_1 . METHOD_7 ( ) ; <unk> . METHOD_7 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { try ( TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ) { final int VAR_2 = <unk> ; VAR_1 . METHOD_4 ( VAR_2 ) ; int VAR_3 = VAR_1 . METHOD_5 ( ) ; assertTrue ( STRING_1 , ( ( TYPE_4 . METHOD_6 ( ( VAR_2 - VAR_3 ) ) ) <= <unk> ) ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , METHOD_3 ( ) ) ; final int VAR_2 = VAR_2 ; VAR_1 . METHOD_4 ( VAR_2 ) ; int VAR_3 = VAR_1 . METHOD_5 ( ) ; assertTrue ( STRING_1 , ( ( TYPE_4 . METHOD_6 ( ( VAR_2 - VAR_3 ) ) ) <= INT_7 ) ) ; VAR_1 . METHOD_7 ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( INT_1 ) ; assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_5 ( ) ) >= INT_1 ) ) ; VAR_1 . METHOD_6 ( ) ; <unk> . METHOD_6 ( ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { try ( TYPE_1 <unk> = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , <unk> . METHOD_3 ( ) ) ) { VAR_1 . METHOD_4 ( INT_1 ) ; assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_5 ( ) ) >= INT_1 ) ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 = new TYPE_1 ( 0 ) ; TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( INT_1 ) ; assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_5 ( ) ) >= INT_1 ) ) ; VAR_1 . METHOD_6 ( ) ; }[0m
---------------
Class: Remove statement,Move existing statements in try block
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; try { VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < <unk> > ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < <unk> > ( ) ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . ) class ; }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 > ( ) , null ) ; VAR_4 . METHOD_5 ( ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 > ( ) , null ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . ) class ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; VAR_4 . METHOD_5 ( ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . <unk> class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; try { <unk> . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; VAR_1 . METHOD_5 ( ) ; try { <unk> . METHOD_6 ( <unk> ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; try { <unk> . METHOD_6 ( <unk> ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; VAR_1 . METHOD_5 ( ) ; try { assertEquals ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } }[0m
---------------
Class: Remove type casting in method body
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> , TYPE_2 args ) { if ( ( METHOD_2 ( ) . <unk> ( ) ) == null ) { METHOD_3 ( ) . <unk> ( false ) ; } else { METHOD_3 ( ) . <unk> ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . <unk> ( ) ) ) ) ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object <unk> , TYPE_2 args ) { if ( ( METHOD_2 ( ) . <unk> ( ) ) == null ) { METHOD_3 ( ) . <unk> ( false ) ; } else { METHOD_3 ( ) . <unk> ( METHOD_2 ( ) . <unk> ( ) ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object TYPE_2 , TYPE_2 args ) { if ( ( METHOD_2 ( ) . ( ( ) ) == null ) ) { METHOD_3 ( ) . getInt ( false ) ; } else { METHOD_3 ( ) . ( ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . toString ( ) ) ) ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( final float value ) { int VAR_1 = TYPE_1 . METHOD_2 ( value ) ; if ( ( ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 ) ) || ( VAR_1 == INT_3 ) ) { VAR_2 . METHOD_3 ( ( ( VAR_3 ) + ( ( int ) ( value ) ) ) ) ; } else { VAR_2 . METHOD_4 ( new TYPE_2 . <unk> ( value ) ) ; } }[0m
Trg : public void METHOD_1 ( final float value ) { int VAR_1 = TYPE_1 . METHOD_2 ( value ) ; if ( ( ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 ) ) || ( VAR_1 == INT_3 ) ) { VAR_2 . METHOD_3 ( ( ( VAR_3 ) + ( ( int ) ( value ) ) ) ) ; } else { VAR_2 . METHOD_4 ( value ) ; } }[0m
Pred: public void METHOD_1 ( final float value ) { int VAR_1 = TYPE_1 . METHOD_2 ( value ) ; if ( ( ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 ) ) || ( VAR_1 == INT_3 ) ) { VAR_2 . METHOD_3 ( ( ( VAR_3 ) + ( ( int ) ( value ) ) ) ) ; } else { VAR_2 . METHOD_4 ( new TYPE_2 ( value ) ) ; } }[0m
---------------
Class: Rename method
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 . <unk> METHOD_1 ( java.lang.Object value ) { TYPE_1 . <unk> result = super . METHOD_1 ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ( ( java.lang.String ) ( value ) ) ) ) ; } return result ; }[0m
Trg : public TYPE_1 . <unk> <unk> ( java.lang.Object value ) { TYPE_1 . <unk> result = super . <unk> ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ( ( java.lang.String ) ( value ) ) ) ) ; } return result ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.Object value ) { TYPE_1 . METHOD_1 ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ( ( java.lang.String ) ( value ) ) ) ) ; } return result ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public boolean METHOD_1 ( ) { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . METHOD_2 ( 1 ) ; <unk> . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) , <unk> } ) ; return METHOD_4 ( ) . METHOD_6 ( ) ; }[0m
Trg : public boolean <unk> ( ) { TYPE_1 <unk> = new TYPE_1 ( ) ; <unk> . METHOD_2 ( 1 ) ; <unk> . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) , <unk> } ) ; return METHOD_4 ( ) . METHOD_6 ( ) ; }[0m
Pred: public boolean METHOD_1 ( ) { TYPE_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) , ; } }[0m
[31mExample #2[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_1 ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_1 ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object offset ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_2 > ) ( ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_1 ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( <unk> != null ) { <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; } else { VAR_4 = true ; } VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( <unk> != null ) { <unk> VAR_2 = ( ( <unk> ) ( <unk> ) ) ; VAR_3 = VAR_2 ; } else { VAR_4 = true ; } VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object offset ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( ( VAR_2 ) != null ) { VAR_2 = true ; } else { VAR_4 = true ; } VAR_1 . METHOD_2 ( ) ; }[0m
[31mExample #4[0m
Src : protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( METHOD_3 ( ) ) ; return ( ( <unk> ( VAR_1 . METHOD_4 ( ) ) ) && ( ( METHOD_5 ( ) ) || ( <unk> ( VAR_2 . METHOD_6 ( ) ) ) ) ) && ( <unk> ( METHOD_7 ( METHOD_2 ( ) , METHOD_3 ( ) ) ) ) ; }[0m
Trg : protected boolean <unk> ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( METHOD_3 ( ) ) ; return ( ( <unk> ( VAR_1 . METHOD_4 ( ) ) ) && ( ( METHOD_5 ( ) ) || ( <unk> ( VAR_2 . METHOD_6 ( ) ) ) ) ) && ( <unk> ( METHOD_7 ( METHOD_2 ( ) , METHOD_3 ( ) ) ) ) ; }[0m
Pred: protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( METHOD_3 ( ) ) ; return ( ( ( ( VAR_1 . METHOD_4 ( ) ) ) && ( ( METHOD_5 ( ) ) || ( VAR_2 . METHOD_6 ( ) ) ) ) && ( java.lang.Math.round ( METHOD_7 ( METHOD_2 ( ) , METHOD_3 ( ) ) ) ) ) ; }[0m
[31mExample #5[0m
Src : public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; if ( ( ( java.lang.Boolean ) ( METHOD_6 ( ) . <unk> ( ) ) ) ) { METHOD_4 ( ) . METHOD_7 ( new TYPE_2 [ ] { VAR_1 , new TYPE_3 ( ) } ) ; } return METHOD_4 ( ) . METHOD_8 ( ) ; }[0m
Trg : public boolean <unk> ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; if ( ( ( java.lang.Boolean ) ( METHOD_6 ( ) . <unk> ( ) ) ) ) { METHOD_4 ( ) . METHOD_7 ( new TYPE_2 [ ] { VAR_1 , new TYPE_3 ( ) } ) ; } return METHOD_4 ( ) . METHOD_8 ( ) ; }[0m
Pred: public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; return METHOD_4 ( ) . METHOD_8 ( ) ; }[0m
[31mExample #6[0m
Src : protected boolean METHOD_1 ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( TYPE_1 . <unk> ( ) . METHOD_5 ( ) , TYPE_1 . <unk> ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; }[0m
Trg : protected boolean <unk> ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( TYPE_1 . <unk> ( ) . METHOD_5 ( ) , TYPE_1 . <unk> ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; }[0m
Pred: protected boolean METHOD_1 ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) && ( METHOD_4 ( TYPE_1 . getInt ( ) . METHOD_5 ( ) , TYPE_1 . METHOD_2 ( ) ) ) ; }[0m
[31mExample #7[0m
Src : public TYPE_1 . <unk> METHOD_1 ( java.lang.Object value ) { int VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( ( ( VAR_3 . length ( ) ) + VAR_1 ) + 1 ) <= ( METHOD_3 ( ) ) ; TYPE_1 . <unk> VAR_4 = new TYPE_1 . <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; if ( ! VAR_2 ) { VAR_4 . METHOD_5 ( TYPE_2 . METHOD_6 ( METHOD_7 ( ) ) ) ; } return VAR_4 ; }[0m
Trg : public TYPE_1 . <unk> <unk> ( java.lang.Object value ) { int VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( ( ( VAR_3 . length ( ) ) + VAR_1 ) + 1 ) <= ( METHOD_3 ( ) ) ; TYPE_1 . <unk> VAR_4 = new TYPE_1 . <unk> ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; if ( ! VAR_2 ) { VAR_4 . METHOD_5 ( TYPE_2 . METHOD_6 ( METHOD_7 ( ) ) ) ; } return VAR_4 ; }[0m
Pred: public TYPE_1 METHOD_1 ( java.lang.Object value ) { int VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( ( ( VAR_3 . length ( ) ) + VAR_1 ) + 1 ) <= ( METHOD_3 ( ) ) ; TYPE_1 . VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; if ( ! VAR_2 ) { VAR_4 . METHOD_5 ( TYPE_2 . METHOD_6 ( METHOD_7 ( ) ) ) ; } return VAR_4 ; }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . <unk> ( false ) ; if ( ! VAR_4 ) { VAR_3 . METHOD_3 ( ) . <unk> ( false ) ; } } }[0m
Trg : public void <unk> ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . <unk> ( false ) ; if ( ! VAR_4 ) { VAR_3 . METHOD_3 ( ) . <unk> ( false ) ; } } }[0m
Pred: public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . ) ( ( false ) ; } }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ; <unk> . METHOD_2 ( ( result != null ? ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ) ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 <unk> = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . <unk> ) ( <unk> ) ) . <unk> ( ) ; <unk> . METHOD_2 ( ( result != null ? ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object startTime ) { TYPE_1 ( = ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 ) ( target ) ) . trim ( ) ; TYPE_2 . METHOD_2 ( ( result != null ? ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ) ) ; }[0m
[31mExample #10[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } else { VAR_1 . METHOD_6 ( ) ; } }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( <unk> ) ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } else { VAR_1 . METHOD_6 ( ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object offset ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( ) ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } else { VAR_1 . METHOD_6 ( ) ; } }[0m
[31mExample #11[0m
Src : public void METHOD_1 ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . <unk> = <unk> ; VAR_1 . METHOD_2 ( ) ; }[0m
Trg : public void <unk> ( java.lang.Object target , java.lang.Object <unk> ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < <unk> > <unk> = ( ( java.util.ArrayList < <unk> > ) ( <unk> ) ) ; VAR_1 . <unk> = <unk> ; VAR_1 . METHOD_2 ( ) ; }[0m
Pred: public void METHOD_1 ( java.lang.Object target , java.lang.Object offset ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < > > = ( ( java.util.ArrayList < TYPE_1 > ) ( ) ) ; VAR_1 . replaceAll ( ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( <unk> ) ) ; TYPE_1 <unk> = VAR_1 . get ( 0 ) ; if ( <unk> != null ) { TYPE_2 . METHOD_2 ( ( ( <unk> ) ( <unk> ) ) , <unk> . getId ( ) ) ; } }[0m
Trg : public void <unk> ( java.lang.Object <unk> , java.lang.Object <unk> ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( <unk> ) ) ; TYPE_1 <unk> = VAR_1 . get ( 0 ) ; if ( <unk> != null ) { TYPE_2 . METHOD_2 ( ( ( <unk> ) ( <unk> ) ) , <unk> . getId ( ) ) ; } }[0m
Pred: public void METHOD_1 ( java.lang.Object [ , java.lang.Object ] ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( ) ) ; TYPE_1 ( = VAR_1 . get ( 0 ) ) ; if ( ( != null ) && ( ( VAR_2 ) != null ) ) { TYPE_2 . METHOD_2 ( ( ( ( ) ) ( java.lang.Math.random ( ) ) ) ) ; } }[0m
---------------
Class: Rename variable
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( <unk> ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . <unk> ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_7 ( VAR_4 ) ; <unk> . <unk> result = <unk> . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_4 , result ) ; }[0m
Trg : public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( <unk> ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . <unk> ( <unk> . METHOD_6 ( ) ) ; <unk> . METHOD_7 ( VAR_4 ) ; <unk> . <unk> result = <unk> . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_4 , result ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . ( ( STRING_7 . METHOD_6 ( ) ) ) ; TYPE_2 . METHOD_7 ( VAR_4 ) ; assertEquals ( VAR_4 , result ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < <unk> . <unk> > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( <unk> . <unk> VAR_3 : VAR_1 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( VAR_3 . getName ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; }[0m
Trg : public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < <unk> . <unk> > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( <unk> . <unk> VAR_3 : VAR_1 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( VAR_3 . getName ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; }[0m
Pred: public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < java.util.HashMap < java.lang.Integer > > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( assertTrue ( VAR_3 : VAR_1 ) ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( VAR_3 . getName ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; }[0m
[31mExample #2[0m
Src : byte [ ] METHOD_1 ( java.lang.Object VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 . METHOD_5 ( ) ; } catch ( java.lang.Throwable t ) { METHOD_6 ( t ) ; return new byte [ 0 ] ; } }[0m
Trg : byte [ ] METHOD_1 ( java.lang.Object VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 . METHOD_5 ( ) ; } catch ( java.lang.Throwable fail ) { METHOD_6 ( fail ) ; return new byte [ 0 ] ; } }[0m
Pred: byte [ ] METHOD_1 ( java.lang.Object VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 . METHOD_5 ( ) ; } catch ( java.lang.Throwable t ) { METHOD_6 ( t ) ; return new byte [ 0 ] ; } }[0m
---------------
Class: Replace fully qualified name with import or vice versa
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) throws <unk> { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } } ; TYPE_2 . <unk> ( VAR_4 . METHOD_4 ( <unk> . METHOD_5 ( VAR_5 class ) ) ) . <unk> ( VAR_1 ) ; assertEquals ( <unk> , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws <unk> { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } } ; TYPE_2 . <unk> ( VAR_4 . METHOD_4 ( <unk> . METHOD_5 ( VAR_5 class ) ) ) . <unk> ( VAR_1 ) ; <unk> ( <unk> , VAR_6 . METHOD_4 ( ) . size ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.io.IOException { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static int METHOD_1 ( int a , int b , int c ) { int [ ] values = new int [ ] { a , b , c } ; VAR_1 . <unk> ( ( ( STRING_1 + ( TYPE_1 . toString ( values ) ) ) + STRING_2 ) ) ; return a > b ? a : b ; }[0m
Trg : public static int METHOD_1 ( int a , int b , int c ) { int [ ] values = new int [ ] { a , b , c } ; java.lang.System.out.println ( ( ( STRING_1 + ( TYPE_1 . toString ( values ) ) ) + STRING_2 ) ) ; return a > b ? a : b ; }[0m
Pred: public static int METHOD_1 ( int a , int b , int c ) { int [ ] values = new int [ ] { a , b , c } ; }[0m
[31mExample #2[0m
Src : private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( <unk> . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; }[0m
Trg : private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( <unk> . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; <unk> ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; }[0m
Pred: private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) , <unk> . METHOD_5 ( int . class ) ) ; assertEquals ( VAR_2 , true ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; <unk> ( VAR_5 ) . METHOD_4 ( <unk> ( VAR_1 ) , <unk> . METHOD_5 ( int . class ) ) ; <unk> ( VAR_2 , true ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_3 . METHOD_3 ( VAR_4 ) ; assertEquals ( VAR_2 ) ; assertEquals ( VAR_2 , true ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { <unk> . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) ) ; <unk> . METHOD_4 ( ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( <unk> . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) ) ; TYPE_3 <unk> = ( ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) ) ; assertEquals ( STRING_1 , METHOD_8 ( <unk> , VAR_2 ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { <unk> . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) ) ; <unk> . METHOD_4 ( ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( <unk> . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) ) ; TYPE_3 <unk> = ( ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) ) ; <unk> ( STRING_1 , METHOD_8 ( <unk> , VAR_2 ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) ) ; TYPE_2 . METHOD_4 ( ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( TYPE_2 . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) ) ; TYPE_3 ( = ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) ) ; assertEquals ( STRING_1 , METHOD_8 ( VAR_2 , VAR_2 ) ) ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , java.lang.String VAR_3 , byte [ ] VAR_4 ) throws java.lang.Exception { TYPE_1 VAR_5 = new TYPE_2 ( VAR_6 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) . build ( ) ; TYPE_3 VAR_7 = TYPE_3 . METHOD_4 ( VAR_5 , VAR_8 ) ; assertEquals ( VAR_1 , VAR_9 ) ; assertEquals ( VAR_3 , VAR_10 ) ; }[0m
Trg : private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , java.lang.String VAR_3 , byte [ ] VAR_4 ) throws java.lang.Exception { TYPE_1 VAR_5 = new TYPE_2 ( VAR_6 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) . build ( ) ; TYPE_3 VAR_7 = TYPE_3 . METHOD_4 ( VAR_5 , VAR_8 ) ; <unk> ( VAR_1 , VAR_9 ) ; <unk> ( VAR_3 , VAR_10 ) ; }[0m
Pred: private void METHOD_1 ( java.lang.String VAR_1 , byte [ ] VAR_2 , java.lang.String VAR_3 , byte [ ] VAR_4 ) throws java.lang.Exception { TYPE_1 VAR_5 = new TYPE_2 ( VAR_6 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) . build ( ) ; TYPE_3 VAR_7 = TYPE_3 . METHOD_4 ( VAR_5 , VAR_8 ) ; assertEquals ( VAR_1 , VAR_9 ) ; assertEquals ( VAR_3 , VAR_10 ) ; }[0m
[31mExample #6[0m
Src : public void METHOD_1 ( long <unk> , long <unk> , long c , TYPE_1 VAR_1 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { assertEquals ( VAR_2 , TYPE_4 . METHOD_2 ( <unk> ) ) ; super . METHOD_1 ( <unk> , <unk> , c , VAR_1 , <unk> , <unk> ) ; }[0m
Trg : public void METHOD_1 ( long <unk> , long <unk> , long c , TYPE_1 VAR_1 , TYPE_2 <unk> , TYPE_3 <unk> ) throws java.lang.Exception { <unk> ( VAR_2 , TYPE_4 . METHOD_2 ( <unk> ) ) ; super . METHOD_1 ( <unk> , <unk> , c , VAR_1 , <unk> , <unk> ) ; }[0m
Pred: public void METHOD_1 ( long offset , long offset , long c , TYPE_1 VAR_1 , TYPE_2 TYPE_2 , TYPE_3 > ) throws java.lang.Exception { assertEquals ( VAR_2 , TYPE_4 . METHOD_2 ( ) ) ; super . METHOD_1 ( ) ; }[0m
---------------
Class: Replace generic specification with diamond operator
Golden example (False):
[31mExample #1[0m
Src : private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( <unk> . METHOD_3 ( ) ) ; params . METHOD_4 ( <unk> . METHOD_3 ( ) ) ; <unk> = <unk> . METHOD_5 ( new TYPE_2 < TYPE_1 > ( params ) ) ; <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_8 ( ) ; }[0m
Trg : private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( <unk> . METHOD_3 ( ) ) ; params . METHOD_4 ( <unk> . METHOD_3 ( ) ) ; <unk> = <unk> . METHOD_5 ( new TYPE_2 ( params ) ) ; <unk> ( VAR_1 ) . <unk> ( <unk> ) . METHOD_6 ( ) ; <unk> ( VAR_2 ) . <unk> ( <unk> ) . METHOD_7 ( ) ; <unk> ( VAR_3 ) . <unk> ( <unk> ) . METHOD_8 ( ) ; }[0m
Pred: private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( 1L . METHOD_3 ( ) ) ; params . METHOD_4 ( 1L . METHOD_3 ( ) ) ; assertEquals ( ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( ) { TYPE_2 < <unk> > VAR_1 = new TYPE_2 < <unk> > ( ) { public TYPE_3 METHOD_2 ( <unk> VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return <unk> ( new TYPE_6 < TYPE_7 , TYPE_3 > ( VAR_5 , VAR_2 , VAR_4 ) ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { TYPE_2 < <unk> > VAR_1 = new TYPE_2 < <unk> > ( ) { public TYPE_3 METHOD_2 ( <unk> VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return <unk> ( new TYPE_6 ( VAR_5 , VAR_2 , VAR_4 ) ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { TYPE_2 < TYPE_2 > VAR_1 = new TYPE_2 < > > ( ) { public TYPE_3 METHOD_2 ( VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return ( new TYPE_6 < TYPE_7 , TYPE_3 > ( VAR_5 , VAR_2 , VAR_4 ) ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 < <unk> > ( VAR_2 , VAR_3 . <unk> class ) , VAR_4 , new TYPE_3 < TYPE_1 , TYPE_1 > ( ) { public TYPE_4 . <unk> <unk> ( TYPE_1 VAR_5 , TYPE_1 <unk> ) { return new TYPE_5 ( METHOD_3 ( VAR_6 , VAR_7 class ) . <unk> ( VAR_5 , <unk> ) ) ; } } ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 ( VAR_2 , VAR_3 . <unk> class ) , VAR_4 , new TYPE_3 < TYPE_1 , TYPE_1 > ( ) { public TYPE_4 . <unk> <unk> ( TYPE_1 VAR_5 , TYPE_1 <unk> ) { return new TYPE_5 ( METHOD_3 ( VAR_6 , VAR_7 class ) . <unk> ( VAR_5 , <unk> ) ) ; } } ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 < TYPE_2 > ( VAR_2 , VAR_3 . getInt class ) , VAR_4 , new TYPE_3 < TYPE_1 , TYPE_1 > ( ) { public TYPE_4 . getInt ( TYPE_1 , VAR_5 , TYPE_1 ) ) return ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , null ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; METHOD_3 ( <unk> ) ; TYPE_3 . METHOD_4 ( <unk> . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( <unk> . <unk> ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.HashMap = new TYPE_1 ( new TYPE_2 ( VAR_1 , null ) ) ; METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ; }[0m
[31mExample #4[0m
Src : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( <unk> . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) { <unk> = <unk> . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( <unk> . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( <unk> . <unk> ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; }[0m
Pred: public void METHOD_1 ( ) { java.util.HashMap = new TYPE_1 < TYPE_2 > ( new TYPE_2 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ; }[0m
---------------
Class: Replace if statement with assert statement
Golden example (False):
[31mExample #1[0m
Src : public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 <unk> = VAR_2 . get ( VAR_1 ) ; if ( <unk> == null ) { throw new <unk> ( STRING_2 ) ; } return <unk> . METHOD_3 ( ) ; }[0m
Trg : public int METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; METHOD_2 ( ) ; TYPE_2 <unk> = VAR_2 . get ( VAR_1 ) ; if ( <unk> == null ) { throw new <unk> ( STRING_2 ) ; } return <unk> . METHOD_3 ( ) ; }[0m
Pred: public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 value = VAR_1 . METHOD_3 ( ) ; TYPE_1 VAR_2 = VAR_3 . get ( value ) ; if ( VAR_2 != null ) { return VAR_2 ; } VAR_3 . METHOD_4 ( value , VAR_1 ) ; return VAR_1 ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; METHOD_2 ( ) ; TYPE_2 value = VAR_1 . METHOD_3 ( ) ; TYPE_1 VAR_2 = VAR_3 . get ( value ) ; if ( VAR_2 != null ) { return VAR_2 ; } VAR_3 . METHOD_4 ( value , VAR_1 ) ; return VAR_1 ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 value = VAR_1 . METHOD_3 ( ) ; TYPE_1 VAR_2 = VAR_3 . get ( value ) ; if ( VAR_2 != null ) { return VAR_2 ; } VAR_3 . METHOD_4 ( value , VAR_1 ) ; return VAR_1 ; }[0m
---------------
Class: Replace invoked method
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( <unk> ) . METHOD_2 ( 1 , <unk> ) . METHOD_2 ( <unk> , <unk> ) . METHOD_2 ( <unk> , 1 ) . METHOD_3 ( 1 ) . METHOD_4 ( ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( 1 ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( <unk> ) . METHOD_2 ( 1 , <unk> ) . METHOD_2 ( <unk> , <unk> ) . METHOD_2 ( <unk> , 1 ) . METHOD_3 ( 1 ) . build ( ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( 1 ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; assertEquals ( <unk> , VAR_1 . METHOD_5 ( <unk> ) . METHOD_6 ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( expr ) . METHOD_2 ( 1 , INT_7 ) . METHOD_2 ( INT_7 , 1 ) . METHOD_3 ( 1 ) . METHOD_4 ( ) ; assertEquals ( assertEquals , VAR_1 . METHOD_5 ( 1 ) . METHOD_6 ( ) ) ; assertEquals ( assertEquals , VAR_1 . METHOD_5 ( ) ) ; assertEquals ( assertEquals , VAR_1 . METHOD_5 ( ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , double value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final double VAR_3 = ( <unk> == null ) ? ( ( double ) ( <unk> . METHOD_2 ( ) ) ) : ( ( double ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 ) ; }[0m
Trg : static void METHOD_1 ( TYPE_1 <unk> , TYPE_2 <unk> , double value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final double VAR_3 = ( <unk> == null ) ? ( ( double ) ( <unk> . METHOD_2 ( ) ) ) : ( ( double ) ( <unk> . METHOD_2 ( <unk> ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 <unk> ) { VAR_2 = true ; } TYPE_3 . assertEquals ( VAR_2 , VAR_1 ) ; }[0m
Pred: static void METHOD_1 ( TYPE_1 f , TYPE_2 TYPE_2 , double value , boolean VAR_1 ) throws java.lang.Throwable { boolean VAR_2 = false ; try { final double VAR_3 = ( expr == null ) ? ( ( double ) ( java.lang.Math.random ( ) ) ) : ( ( double ) ( java.lang.Math.random ( ) ) ) ; TYPE_3 . assertTrue ( ( VAR_3 == value ) ) ; } catch ( TYPE_4 ) { VAR_2 = true ; } TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 ) ; }[0m
[31mExample #2[0m
Src : void METHOD_1 ( ) { if ( VAR_1 ) <unk> ( VAR_2 . <unk> , ( ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) ) ; VAR_5 . METHOD_2 ( ) ; }[0m
Trg : void METHOD_1 ( ) { if ( VAR_1 ) <unk> ( VAR_2 . <unk> , ( ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) ) ; VAR_5 . METHOD_2 ( ) ; }[0m
Pred: void METHOD_1 ( ) { if ( VAR_1 ) ( ( ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) ) ; VAR_5 . METHOD_2 ( ) ; }[0m
[31mExample #3[0m
Src : public void <unk> ( ) { TYPE_1 <unk> = new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( <unk> ) ; try { while ( true ) { java.lang.String line = VAR_2 . METHOD_2 ( ) ; if ( line != null ) { VAR_3 . METHOD_3 ( STRING_1 , VAR_4 , line ) ; } else { break ; } } } catch ( java.io.IOException <unk> ) { } }[0m
Trg : public void <unk> ( ) { TYPE_1 <unk> = new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( <unk> ) ; try { while ( true ) { java.lang.String line = VAR_2 . METHOD_2 ( ) ; if ( line != null ) { VAR_3 . <unk> ( STRING_1 , VAR_4 , line ) ; } else { break ; } } } catch ( java.io.IOException <unk> ) { } }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_2 = new TYPE_2 ( ) ; try { while ( true ) { java.lang.String line = VAR_2 . METHOD_2 ( ) ; if ( line != null ) { VAR_3 . METHOD_3 ( STRING_1 , VAR_4 , line ) ; } else { break ; } } } catch ( java.io.IOException ( ) ) { } }[0m
[31mExample #4[0m
Src : boolean METHOD_1 ( ) { if ( VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) <unk> ( VAR_4 . <unk> , ( STRING_1 + ( VAR_5 ) ) ) ; VAR_6 = true ; VAR_1 = false ; return true ; } return false ; }[0m
Trg : boolean METHOD_1 ( ) { if ( VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) <unk> ( VAR_4 . <unk> , ( STRING_1 + ( VAR_5 ) ) ) ; VAR_6 = true ; VAR_1 = false ; return true ; } return false ; }[0m
Pred: boolean METHOD_1 ( ) { if ( VAR_1 ) { if ( ( VAR_2 ) || ( VAR_3 ) ) VAR_7 = false ; return true ; } return false ; }[0m
[31mExample #5[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String <unk> , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , <unk> ) ; java.lang.Object value = VAR_4 < java.lang.Object > METHOD_2 ( TYPE_3 . <unk> ( VAR_1 . toString ( ) ) , <unk> ) ; VAR_2 . put ( VAR_3 , value ) ; }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String <unk> , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , <unk> ) ; java.lang.Object value = VAR_4 < java.lang.Object > getValue ( TYPE_3 . <unk> ( VAR_1 . toString ( ) ) , <unk> ) ; VAR_2 . put ( VAR_3 , value ) ; }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String name , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , INT_7 ) ; java.lang.Object value = VAR_4 < java.lang.Object > METHOD_2 ( TYPE_3 . toLowerCase ( VAR_1 . toString ( ) ) , INT_7 ) ; VAR_2 . put ( VAR_3 , value ) ; }[0m
[31mExample #6[0m
Src : protected boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . info ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( VAR_1 , 0 , VAR_6 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( STRING_2 ) ; VAR_4 . info ( STRING_3 ) ; return true ; }[0m
Trg : protected boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . info ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( VAR_1 , 0 , VAR_6 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( STRING_2 ) ; VAR_4 . METHOD_5 ( STRING_3 ) ; return true ; }[0m
Pred: protected boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . info ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; METHOD_3 ( VAR_1 , 0 , VAR_6 ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( STRING_2 ) ; VAR_4 . info ( STRING_3 ) ; return true ; }[0m
[31mExample #7[0m
Src : private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , false ) ; int VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 >= 0 ) { if ( VAR_4 ) <unk> ( TYPE_2 . <unk> , ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_1 ) ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; } }[0m
Trg : private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , false ) ; int VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 >= 0 ) { if ( VAR_4 ) <unk> ( TYPE_2 . <unk> , ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_1 ) ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; } }[0m
Pred: private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , false ) ; int VAR_2 = VAR_3 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 >= 0 ) { if ( VAR_4 ) VAR_1 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; } }[0m
[31mExample #8[0m
Src : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_4 ( <unk> . getName ( ) , STRING_1 ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_4 ( <unk> . getName ( ) , STRING_2 ) ) { METHOD_6 ( ) ; } }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( STRING_1 . equals ( <unk> . getName ( ) ) ) { METHOD_5 ( ) ; } else if ( STRING_2 . equals ( <unk> . getName ( ) ) ) { METHOD_6 ( ) ; } }[0m
Pred: public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_2 == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_4 ( ) . getName ( ) , STRING_1 ) ; METHOD_5 ( ) ; }[0m
[31mExample #9[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . <unk> ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . <unk> ( ) ) ) ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . <unk> ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . assertEquals ( VAR_5 , VAR_4 . METHOD_5 ( ) . <unk> ( ) ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . getInt ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . trim ( ) ) ) ) ; }[0m
[31mExample #10[0m
Src : public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . put ( VAR_2 . METHOD_5 ( ) , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . add ( VAR_2 ) ; return null ; }[0m
Trg : public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . put ( VAR_2 . getId ( ) , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . add ( VAR_2 ) ; return null ; }[0m
Pred: public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . put ( VAR_2 . METHOD_5 ( ) , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . add ( VAR_2 ) ; return null ; }[0m
[31mExample #11[0m
Src : protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . <unk> ( ) . <unk> ( ) , TYPE_1 . METHOD_6 ( ) , TYPE_1 . <unk> ( ) . METHOD_7 ( ) ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . <unk> ( ) . getId ( ) , TYPE_1 . METHOD_6 ( ) , TYPE_1 . <unk> ( ) . METHOD_7 ( ) ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . getInt ( ) . getInt ( ) , TYPE_1 . METHOD_6 ( ) ) ) ; }[0m
[31mExample #12[0m
Src : public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { <unk> ( VAR_1 ) . <unk> ( VAR_2 ) . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 . <unk> class ) ) ; <unk> ( VAR_4 ) . <unk> ( VAR_2 ) . METHOD_4 ( TYPE_3 . <unk> ( ) ) ; VAR_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_1 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_8 , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { <unk> ( VAR_1 ) . <unk> ( VAR_2 ) . METHOD_2 ( TYPE_3 . <unk> ( ) ) ; <unk> ( VAR_4 ) . <unk> ( VAR_2 ) . METHOD_4 ( TYPE_3 . <unk> ( ) ) ; VAR_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_1 ) ; <unk> . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_8 , VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { TYPE_2 ( VAR_1 ) . getInt ( VAR_2 ) . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 . title class ) ) ; VAR_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; VAR_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; }[0m
[31mExample #13[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) , new java.lang.Object ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) , new java.lang.Object ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . <unk> ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 f = STRING_7 . METHOD_2 ( VAR_1 class ) ; assertEquals ( true ) ; TYPE_2 . METHOD_4 ( java.util.HashMap , id , new TYPE_3 ( ) , new java.lang.Object ( ) ) ; assertEquals ( ) ; }[0m
[31mExample #14[0m
Src : protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_4 ( ) ; } } , VAR_2 . METHOD_5 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_6 ( ) ; } } , VAR_2 . METHOD_7 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { VAR_1 . <unk> ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_4 ( ) ; } } , VAR_2 . METHOD_5 ( ) ) ; VAR_1 . <unk> ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 <unk> ) { return <unk> . METHOD_6 ( ) ; } } , VAR_2 . METHOD_7 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 ) { return TYPE_2 . METHOD_4 ( ) ; } } , VAR_2 . METHOD_5 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 ) ) return ; } }[0m
[31mExample #15[0m
Src : public boolean METHOD_1 ( ) { try { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( <unk> . getId ( ) ) ) ; TYPE_2 <unk> = VAR_1 . get ( VAR_3 < java.lang.Integer > METHOD_4 ( VAR_4 ) , VAR_5 ) ; if ( <unk> . <unk> ( ) ) { return true ; } } catch ( java.lang.Exception <unk> ) { } return false ; }[0m
Trg : public boolean METHOD_1 ( ) { try { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . <unk> ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( <unk> . getId ( ) ) ) ; TYPE_2 <unk> = VAR_1 . get ( VAR_3 < java.lang.Integer > getValue ( VAR_4 ) , VAR_5 ) ; if ( <unk> . <unk> ( ) ) { return true ; } } catch ( java.lang.Exception <unk> ) { } return false ; }[0m
Pred: public boolean METHOD_1 ( ) { try { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . ( ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( expr . getId ( ) ) ) ) ; TYPE_2 TYPE_2 = VAR_1 . get ( VAR_3 < java.lang.Integer > METHOD_4 ( VAR_4 ) , VAR_5 ) ; if ( f . getInt ( ) ) { return true ; } } catch ( java.lang.Exception ) { } return false ; }[0m
[31mExample #16[0m
Src : public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( METHOD_3 ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . <unk> ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; }[0m
Trg : public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( getName ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . <unk> ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; }[0m
Pred: public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( METHOD_3 ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . getInt ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; }[0m
[31mExample #17[0m
Src : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( <unk> . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( VAR_1 , null ) ; TYPE_2 . METHOD_8 ( <unk> , VAR_4 ) ; }[0m
Trg : public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . <unk> ( <unk> . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; <unk> ( true ) . <unk> ( <unk> ) . METHOD_7 ( VAR_1 , null ) ; TYPE_2 . METHOD_8 ( <unk> , VAR_4 ) ; }[0m
Pred: public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( f . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; assertEquals ( ) ; }[0m
[31mExample #18[0m
Src : public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . METHOD_5 ( ) ) ; METHOD_6 ( <unk> ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( <unk> ( ) . METHOD_4 ( ) , <unk> ( ) . <unk> ( ) ) ; METHOD_6 ( <unk> ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( java.lang.Math.random ( ) . METHOD_4 ( ) , ( ( ) . METHOD_4 ( ) ) ) ; METHOD_6 ( ) ; }[0m
[31mExample #19[0m
Src : private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { <unk> ( VAR_1 ) ; TYPE_1 . <unk> ( ) . METHOD_3 ( ) . add ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 < java.lang.Integer > METHOD_5 ( VAR_3 ) ) ) ; return false ; } return true ; }[0m
Trg : private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { <unk> ( VAR_1 ) ; TYPE_1 . <unk> ( ) . METHOD_3 ( ) . add ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 < java.lang.Integer > getValue ( VAR_3 ) ) ) ; return false ; } return true ; }[0m
Pred: private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) . add ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 < java.lang.Integer > METHOD_5 ( VAR_3 ) ) ) ; return false ; } return true ; }[0m
[31mExample #20[0m
Src : private void METHOD_1 ( ) { <unk> ( METHOD_2 ( ) . METHOD_3 ( ) ) . <unk> ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < <unk> > ( ) ; <unk> ( METHOD_4 ( ) . METHOD_5 ( ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_1 . METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_2 ) ; }[0m
Trg : private void METHOD_1 ( ) { <unk> ( METHOD_2 ( ) . METHOD_3 ( ) ) . <unk> ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < <unk> > ( ) ; <unk> ( METHOD_4 ( ) . getId ( ) ) . <unk> ( VAR_3 ) ; <unk> ( VAR_1 . METHOD_6 ( VAR_3 ) ) . <unk> ( VAR_2 ) ; }[0m
Pred: private void METHOD_1 ( ) { assertEquals ( METHOD_2 ( ) . METHOD_3 ( ) ) . getInt ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < > ( ) ; assertEquals ( METHOD_4 ( ) . METHOD_5 ( ) ) . ( ( VAR_3 ) ) ; }[0m
[31mExample #21[0m
Src : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : VAR_3 . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . <unk> ( ) . METHOD_5 ( ) ) ) ; return ; case VAR_4 : METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( false ) ; return ; } super . METHOD_1 ( ) ; }[0m
Trg : protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : <unk> . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . <unk> ( ) . METHOD_5 ( ) ) ) ; return ; case VAR_4 : METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( false ) ; return ; } super . METHOD_1 ( ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : VAR_3 . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . ) ( ) ) ; return ; case VAR_4 : METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( false ) ; return ; } super . METHOD_1 ( ) ; }[0m
[31mExample #22[0m
Src : protected void METHOD_1 ( ) { if ( ( TYPE_1 . <unk> ( ) . METHOD_2 ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . <unk> ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; }[0m
Trg : protected void METHOD_1 ( ) { if ( ( TYPE_1 . <unk> ( ) . <unk> ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . <unk> ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; }[0m
Pred: protected void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) != ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . getInt ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; }[0m
[31mExample #23[0m
Src : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( <unk> == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_6 ( <unk> . getName ( ) , STRING_1 ) ) { METHOD_7 ( ) ; } else if ( TYPE_1 . METHOD_6 ( <unk> . getName ( ) , STRING_2 ) ) { METHOD_8 ( ) ; } }[0m
Trg : public void METHOD_1 ( <unk> <unk> ) { super . METHOD_1 ( <unk> ) ; if ( <unk> == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( <unk> == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( STRING_1 . equals ( <unk> . getName ( ) ) ) { METHOD_7 ( ) ; } else if ( STRING_2 . equals ( <unk> . getName ( ) ) ) { METHOD_8 ( ) ; } }[0m
Pred: public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( name == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( ) == ( METHOD_4 ( ) ) ; METHOD_5 ( ) ; }[0m
[31mExample #24[0m
Src : private void METHOD_1 ( <unk> <unk> ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } VAR_1 . put ( <unk> . METHOD_2 ( ) . toString ( ) , TYPE_1 . name ( ) ) ; }[0m
Trg : private void METHOD_1 ( <unk> <unk> ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } VAR_1 . put ( <unk> . <unk> ( ) . toString ( ) , TYPE_1 . name ( ) ) ; }[0m
Pred: private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } VAR_1 . put ( VAR_2 . toString ( ) , TYPE_1 . name ( ) ) ; }[0m
[31mExample #25[0m
Src : protected boolean METHOD_1 ( ) { boolean <unk> = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { <unk> ( VAR_1 ) ; <unk> = false ; } else if ( ( METHOD_3 ( ) ) && ( ( TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ) != ( VAR_2 ) ) ) { <unk> ( VAR_3 ) ; <unk> = false ; } return <unk> ; }[0m
Trg : protected boolean METHOD_1 ( ) { boolean <unk> = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { <unk> ( VAR_1 ) ; <unk> = false ; } else if ( ( METHOD_3 ( ) ) && ( ( TYPE_1 . METHOD_2 ( ) . <unk> ( ) ) != ( VAR_2 ) ) ) { <unk> ( VAR_3 ) ; <unk> = false ; } return <unk> ; }[0m
Pred: protected boolean METHOD_1 ( ) { boolean ( = true ) ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ) != ( VAR_2 ) ) { if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { ( ( TYPE_1 ) METHOD_2 ( ) ) ; } } }[0m
[31mExample #26[0m
Src : protected void METHOD_1 ( ) { <unk> <unk> = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . <unk> ( ) . METHOD_4 ( ) ) ; if ( <unk> != null ) { <unk> . METHOD_5 ( TYPE_2 . METHOD_6 ( <unk> . METHOD_7 ( ) , <unk> . METHOD_8 ( ) ) ) ; } TYPE_1 . METHOD_9 ( ) . METHOD_10 ( <unk> ) ; }[0m
Trg : protected void METHOD_1 ( ) { <unk> <unk> = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . <unk> ( ) . getId ( ) ) ; if ( <unk> != null ) { <unk> . METHOD_5 ( TYPE_2 . METHOD_6 ( <unk> . METHOD_7 ( ) , <unk> . METHOD_8 ( ) ) ) ; } TYPE_1 . METHOD_9 ( ) . METHOD_10 ( <unk> ) ; }[0m
Pred: protected void METHOD_1 ( ) { TYPE_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . ( ( ) . METHOD_4 ( ) ) ) ; if ( ( VAR_2 ) != null ) { TYPE_2 . METHOD_5 ( TYPE_2 . METHOD_6 ( ) . METHOD_4 ( ) ) ; } TYPE_1 . METHOD_9 ( ) . METHOD_10 ( ) ; }[0m
[31mExample #27[0m
Src : protected TYPE_1 . <unk> METHOD_1 ( <unk> VAR_1 , <unk> id , java.lang.String name , java.util.List < TYPE_1 . <unk> > VAR_2 ) { for ( TYPE_1 . <unk> <unk> : VAR_2 ) { if ( ( ( id != null ) && ( id . equals ( <unk> . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( <unk> . METHOD_2 ( ) ) ) ) ) { return <unk> ; } } return null ; }[0m
Trg : protected TYPE_1 . <unk> METHOD_1 ( <unk> VAR_1 , <unk> id , java.lang.String name , java.util.List < TYPE_1 . <unk> > VAR_2 ) { for ( TYPE_1 . <unk> <unk> : VAR_2 ) { if ( ( ( id != null ) && ( id . equals ( <unk> . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( <unk> . getName ( ) ) ) ) ) { return <unk> ; } } return null ; }[0m
Pred: protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.util.HashMap id , java.lang.String name , java.util.List < TYPE_1 > ) { for ( TYPE_1 . values ( : : VAR_2 ) ) { if ( ( ( id != null ) && ( id . equals ( name . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( VAR_2 . METHOD_2 ( ) ) ) ) ) { return return ; } } return null ; }[0m
[31mExample #28[0m
Src : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Trg : public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 <unk> = <unk> . METHOD_2 ( VAR_1 class ) ; <unk> ( <unk> . METHOD_3 ( ) ) . <unk> ( true ) ; TYPE_2 . METHOD_4 ( <unk> , id , new TYPE_3 ( ) ) ; <unk> . METHOD_5 ( <unk> ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . <unk> ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; }[0m
Pred: public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 f = STRING_7 . METHOD_2 ( VAR_1 class ) ; assertEquals ( true ) ; TYPE_2 . METHOD_4 ( expr , id , new TYPE_3 ( ) ) ; assertEquals ( ) ; }[0m
---------------
================
Duration: 0:01:35.709205

Start conducting one shot learning experiment for Defects4J...
Top-1 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-3 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-5 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-10 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0
Top-50 accuracy on Defects4J for same edit representations: 0 / 8 = 0.0

Top-1 accuracy on Defects4J for other edit representations: 0 / 12 = 0.0
Top-3 accuracy on Defects4J for other edit representations: 0 / 12 = 0.0
Top-5 accuracy on Defects4J for other edit representations: 0 / 12 = 0.0
Top-10 accuracy on Defects4J for other edit representations: 1 / 12 = 0.08333333333333333
Top-50 accuracy on Defects4J for other edit representations: 1 / 12 = 0.08333333333333333
================
Correct Examples
================
================
Incorrect Examples
Class: ['condBlockExcAdd']
Golden example (False):
[31mExample #1[0m
Src : public static long METHOD_1 ( long VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case - 1 : return - VAR_1 ; case 0 : return 0L ; case 1 : return VAR_1 ; } long VAR_3 = VAR_1 * VAR_2 ; if ( VAR_3 / VAR_2 != VAR_1 ) { throw new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_2 ) ; } return VAR_3 ; }[0m
Trg : public static long METHOD_1 ( long VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case - 1 : if ( VAR_1 == VAR_4 ) { throw new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_2 ) ; } return - VAR_1 ; case 0 : return 0L ; case 1 : return VAR_1 ; } long VAR_3 = VAR_1 * VAR_2 ; if ( VAR_3 / VAR_2 != VAR_1 ) { throw new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_2 ) ; } return VAR_3 ; }[0m
Pred: public static long METHOD_1 ( long VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case - 1 : return - VAR_1 ; case 0 : return 0L ; case 1 : return VAR_1 ; } long VAR_3 = VAR_1 * VAR_2 ; if ( VAR_3 / VAR_2 != VAR_1 ) { throw new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_2 ) ; } return VAR_3 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public VAR_1 ( int VAR_2 , int VAR_3 ) { super ( VAR_2 , VAR_3 ) ; this . rows = VAR_2 ; this . VAR_4 = VAR_3 ; this . VAR_5 = new TYPE_1 ( 0.0 ) ; }[0m
Trg : public VAR_1 ( int VAR_2 , int VAR_3 ) { super ( VAR_2 , VAR_3 ) ; long VAR_6 = ( long ) VAR_2 ; long VAR_7 = ( long ) VAR_3 ; if ( VAR_6 * VAR_7 >= ( long ) VAR_8 ) { throw new TYPE_2 ( VAR_6 * VAR_7 , VAR_8 , false ) ; } this . rows = VAR_2 ; this . VAR_4 = VAR_3 ; this . VAR_5 = new TYPE_1 ( 0.0 ) ; }[0m
Pred: public VAR_1 ( int VAR_2 , int VAR_3 ) { super ( VAR_2 , VAR_3 ) ; this . rows = VAR_2 ; this . VAR_4 = VAR_3 ; this . VAR_5 = new TYPE_1 ( 0.0 ) ; }[0m
---------------
Class: ['condBlockOthersAdd']
Golden example (False):
[31mExample #1[0m
Src : void add ( String VAR_1 ) { METHOD_1 ( ) ; if ( VAR_1 . length ( ) == 0 ) { return ; } char c = VAR_1 . METHOD_2 ( 0 ) ; if ( ( METHOD_3 ( c ) || c == CHAR_1 ) && METHOD_3 ( METHOD_4 ( ) ) ) { append ( STRING_1 ) ; } append ( VAR_1 ) ; }[0m
Trg : void add ( String VAR_1 ) { METHOD_1 ( ) ; if ( VAR_1 . length ( ) == 0 ) { return ; } char c = VAR_1 . METHOD_2 ( 0 ) ; if ( ( METHOD_3 ( c ) || c == CHAR_1 ) && METHOD_3 ( METHOD_4 ( ) ) ) { append ( STRING_1 ) ; } else if ( c == CHAR_2 && METHOD_4 ( ) == CHAR_2 ) { append ( STRING_1 ) ; } append ( VAR_1 ) ; }[0m
Pred: void add ( short VAR_1 ) { METHOD_1 ( ) ; if ( VAR_1 . length ( ) == 0 ) { return ; } char c = VAR_1 . METHOD_2 ( 0 ) ; if ( ( METHOD_3 ( c ) ) c ) { METHOD_3 ( METHOD_4 ( ) ) ; } append ( VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( ) throws TYPE_2 { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( this . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) { new TYPE_3 ( ) . METHOD_6 ( ) ; } return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }[0m
Pred: public TYPE_1 METHOD_1 ( ) throws TYPE_2 { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; }[0m
---------------
Class: ['condBlockRetAdd']
Golden example (False):
[31mExample #1[0m
Src : public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == null || VAR_2 == null ) { return VAR_1 == null && VAR_2 == null ; } else if ( METHOD_2 ( VAR_1 ) ) { return METHOD_2 ( VAR_2 ) && METHOD_3 ( VAR_1 , VAR_2 ) ; } else { return VAR_1 . equals ( VAR_2 ) ; } }[0m
Trg : public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } else if ( VAR_1 == null || VAR_2 == null ) { return VAR_1 == null && VAR_2 == null ; } else if ( METHOD_2 ( VAR_1 ) ) { return METHOD_2 ( VAR_2 ) && METHOD_3 ( VAR_1 , VAR_2 ) ; } else { return VAR_1 . equals ( VAR_2 ) ; } }[0m
Pred: public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == null ) { return VAR_1 == null ; } else if ( METHOD_2 ( VAR_1 ) ) { return METHOD_2 ( VAR_2 ) && METHOD_3 ( VAR_1 , VAR_2 ) ; } else { return VAR_1 . equals ( VAR_2 ) ; } }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 answer ( TYPE_2 VAR_1 ) throws TYPE_3 { return VAR_1 . METHOD_1 ( ) ; }[0m
Trg : public TYPE_1 answer ( TYPE_2 VAR_1 ) throws TYPE_3 { if ( TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { return new TYPE_5 ( ) . answer ( VAR_1 ) ; } return VAR_1 . METHOD_1 ( ) ; }[0m
Pred: public TYPE_1 answer ( TYPE_2 VAR_1 ) throws TYPE_3 { return VAR_1 . METHOD_1 ( ) ; }[0m
[31mExample #2[0m
Src : public TYPE_1 add ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_1 ( VAR_1 ) ; return METHOD_2 ( VAR_2 + VAR_1 . METHOD_3 ( ) , VAR_3 + VAR_1 . METHOD_4 ( ) ) ; }[0m
Trg : public TYPE_1 add ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_1 ( VAR_1 ) ; if ( VAR_4 || VAR_5 ) { return VAR_6 ; } return METHOD_2 ( VAR_2 + VAR_1 . METHOD_3 ( ) , VAR_3 + VAR_1 . METHOD_4 ( ) ) ; }[0m
Pred: public TYPE_1 add ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_1 ( VAR_1 ) ; return METHOD_2 ( VAR_2 + VAR_1 . METHOD_3 ( ) , VAR_3 + VAR_1 . METHOD_4 ( ) ) ; }[0m
[31mExample #3[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { for ( String VAR_2 : VAR_1 . METHOD_3 ( ) ) { TYPE_2 VAR_3 = VAR_1 . METHOD_4 ( VAR_2 ) ; if ( ! METHOD_5 ( VAR_2 ) ) { TYPE_2 VAR_4 = VAR_3 ; if ( ! METHOD_6 ( VAR_2 ) ) { VAR_4 = METHOD_7 ( VAR_5 ) . METHOD_8 ( VAR_3 ) ; } METHOD_9 ( VAR_2 , VAR_4 , null ) ; } } } }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( METHOD_10 ( ) ) { return ; } if ( VAR_1 . METHOD_2 ( ) ) { for ( String VAR_2 : VAR_1 . METHOD_3 ( ) ) { TYPE_2 VAR_3 = VAR_1 . METHOD_4 ( VAR_2 ) ; if ( ! METHOD_5 ( VAR_2 ) ) { TYPE_2 VAR_4 = VAR_3 ; if ( ! METHOD_6 ( VAR_2 ) ) { VAR_4 = METHOD_7 ( VAR_5 ) . METHOD_8 ( VAR_3 ) ; } METHOD_9 ( VAR_2 , VAR_4 , null ) ; } } } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { for ( short VAR_2 : VAR_1 . METHOD_3 ( ) ) { TYPE_2 VAR_3 = VAR_1 . METHOD_4 ( VAR_2 ) ; if ( ! METHOD_5 ( VAR_2 ) ) { TYPE_2 VAR_4 = VAR_3 ; if ( ! METHOD_6 ( VAR_2 ) ) { VAR_4 = METHOD_7 ( VAR_5 ) . METHOD_8 ( VAR_3 ) ; } METHOD_9 ( VAR_2 , VAR_4 , null ) ; } } } }[0m
[31mExample #4[0m
Src : boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) { return false ; } for ( TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 != null ; VAR_2 = VAR_2 . METHOD_4 ( ) ) { if ( VAR_3 ) { break ; } else if ( VAR_4 ) { return false ; } } return true ; }[0m
Trg : boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) { return false ; } for ( TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 != null ; VAR_2 = VAR_2 . METHOD_4 ( ) ) { if ( VAR_3 ) { if ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) != VAR_5 ) { return false ; } break ; } else if ( VAR_4 ) { return false ; } } return true ; }[0m
Pred: boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) { return false ; } for ( TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_2 != null ; VAR_2 = VAR_2 . METHOD_4 ( ) ) { if ( VAR_3 ) { break ; } else if ( VAR_4 ) { return false ; } } return true ; }[0m
---------------
Class: ['notClassified']
Golden example (False):
[31mExample #1[0m
Src : public TYPE_1 [ ] METHOD_1 ( int VAR_1 ) throws TYPE_2 { if ( VAR_1 <= 0 ) { throw new TYPE_2 ( VAR_2 , VAR_1 ) ; } final TYPE_1 [ ] out = ( TYPE_1 [ ] ) TYPE_3 . METHOD_2 ( VAR_3 . get ( 0 ) . getClass ( ) , VAR_1 ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { out [ i ] = METHOD_1 ( ) ; } return out ; }[0m
Trg : public TYPE_4 [ ] METHOD_1 ( int VAR_1 ) throws TYPE_2 { if ( VAR_1 <= 0 ) { throw new TYPE_2 ( VAR_2 , VAR_1 ) ; } final TYPE_4 [ ] out = new TYPE_4 [ VAR_1 ] ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { out [ i ] = METHOD_1 ( ) ; } return out ; }[0m
Pred: public TYPE_1 [ ] METHOD_1 ( int VAR_1 ) throws TYPE_2 { if ( VAR_1 <= 0 ) { throw new TYPE_2 ( VAR_2 , VAR_1 ) ; } final TYPE_1 [ ] out = ( TYPE_1 [ ] ) TYPE_3 . METHOD_2 ( VAR_3 . get ( 0 ) . getClass ( ) , VAR_1 ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { out [ i ] = METHOD_1 ( ) ; } return out ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static double METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 ) { int sum = 0 ; for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { final int VAR_3 = VAR_1 [ i ] - VAR_2 [ i ] ; sum += VAR_3 * VAR_3 ; } return TYPE_1 . METHOD_2 ( sum ) ; }[0m
Trg : public static double METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 ) { double sum = 0 ; for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { final double VAR_3 = VAR_1 [ i ] - VAR_2 [ i ] ; sum += VAR_3 * VAR_3 ; } return TYPE_1 . METHOD_2 ( sum ) ; }[0m
Pred: public static double METHOD_1 ( int [ ] VAR_1 , int [ ] VAR_2 ) { int sum = 0 ; for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { final int VAR_3 = VAR_1 [ i ] - VAR_2 [ i ] ; sum += VAR_3 * VAR_3 ; } return TYPE_1 . METHOD_2 ( sum ) ; }[0m
---------------
Class: ['singleLine']
Golden example (False):
[31mExample #1[0m
Src : static float METHOD_1 ( String VAR_1 ) { return METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 ) ) ; }[0m
Trg : static int METHOD_1 ( String VAR_1 ) { return METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 ) ) ; }[0m
Pred: public static float METHOD_1 ( short VAR_1 ) { return METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 ) ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 data ) { TYPE_2 error = null ; VAR_1 . start ( ) ; while ( VAR_1 . METHOD_2 ( ) ) { try { VAR_2 . METHOD_1 ( data ) ; if ( VAR_3 ) { return ; } else { error = null ; } } catch ( TYPE_3 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } catch ( TYPE_4 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } } if ( error != null ) { throw error ; } }[0m
Trg : public void METHOD_1 ( TYPE_1 data ) { TYPE_2 error = null ; VAR_1 . start ( ) ; while ( VAR_1 . METHOD_2 ( ) ) { try { VAR_2 . METHOD_1 ( data ) ; if ( VAR_3 ) { return ; } else { error = null ; } } catch ( TYPE_3 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } catch ( TYPE_2 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } } if ( error != null ) { throw error ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 data ) { TYPE_2 error = null ; VAR_1 . start ( ) ; while ( VAR_1 . METHOD_2 ( ) ) { try { VAR_2 . METHOD_1 ( data ) ; if ( VAR_3 ) { return ; } else { error = null ; } } catch ( TYPE_3 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } catch ( TYPE_4 VAR_4 ) { error = METHOD_3 ( VAR_4 ) ; } } if ( error != null ) { throw error ; } }[0m
[31mExample #2[0m
Src : private double METHOD_1 ( final double VAR_1 , final int VAR_2 , final int VAR_3 ) throws TYPE_1 , TYPE_2 { final int VAR_4 = VAR_2 * VAR_3 ; final double VAR_5 = VAR_4 / FLOAT_1 ; final double VAR_6 = VAR_4 * ( VAR_2 + VAR_3 + 1 ) / FLOAT_2 ; final double VAR_7 = ( VAR_1 - VAR_5 ) / TYPE_3 . METHOD_2 ( VAR_6 ) ; final TYPE_4 VAR_8 = new TYPE_4 ( 0 , 1 ) ; return INT_1 * VAR_8 . METHOD_3 ( VAR_7 ) ; }[0m
Trg : private double METHOD_1 ( final double VAR_1 , final int VAR_2 , final int VAR_3 ) throws TYPE_1 , TYPE_2 { final double VAR_4 = VAR_2 * VAR_3 ; final double VAR_5 = VAR_4 / FLOAT_1 ; final double VAR_6 = VAR_4 * ( VAR_2 + VAR_3 + 1 ) / FLOAT_2 ; final double VAR_7 = ( VAR_1 - VAR_5 ) / TYPE_3 . METHOD_2 ( VAR_6 ) ; final TYPE_4 VAR_8 = new TYPE_4 ( 0 , 1 ) ; return INT_1 * VAR_8 . METHOD_3 ( VAR_7 ) ; }[0m
Pred: private double METHOD_1 ( final double VAR_1 , final int VAR_2 , final int VAR_3 ) throws TYPE_1 , TYPE_2 { final int VAR_4 = VAR_2 * VAR_3 ; final double VAR_5 = VAR_4 / FLOAT_1 ; final double VAR_6 = VAR_4 * ( VAR_2 + VAR_3 + 1 ) / FLOAT_2 ; final double VAR_7 = ( VAR_1 - VAR_5 ) / TYPE_3 . METHOD_2 ( VAR_6 ) ; final TYPE_4 VAR_8 = new TYPE_4 ( 0 , 1 ) ; return INT_1 * VAR_8 . METHOD_3 ( VAR_7 ) ; }[0m
---------------
Class: ['wrapsIf']
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( ) { if ( this . VAR_1 != VAR_2 && this . VAR_1 != VAR_3 ) { throw new TYPE_1 ( STRING_1 ) ; } VAR_4 = TYPE_2 . METHOD_2 ( ) ; this . VAR_1 = VAR_5 ; }[0m
Trg : public void METHOD_1 ( ) { if ( this . VAR_1 != VAR_2 && this . VAR_1 != VAR_3 ) { throw new TYPE_1 ( STRING_1 ) ; } if ( this . VAR_1 == VAR_2 ) { VAR_4 = TYPE_2 . METHOD_2 ( ) ; } this . VAR_1 = VAR_5 ; }[0m
Pred: public void METHOD_1 ( ) { if ( this . VAR_1 != VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; } VAR_4 = TYPE_2 . METHOD_2 ( ) ; this . VAR_1 = VAR_5 ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public static boolean equals ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } if ( VAR_1 == null || VAR_2 == null ) { return false ; } return VAR_1 . equals ( VAR_2 ) ; }[0m
Trg : public static boolean equals ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } if ( VAR_1 == null || VAR_2 == null ) { return false ; } if ( VAR_1 instanceof String && VAR_2 instanceof String ) { return VAR_1 . equals ( VAR_2 ) ; } return TYPE_2 . METHOD_1 ( VAR_1 , false , 0 , VAR_2 , 0 , TYPE_3 . METHOD_2 ( VAR_1 . length ( ) , VAR_2 . length ( ) ) ) ; }[0m
Pred: public static boolean equals ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_2 ) { return true ; } if ( VAR_1 == null ) { return false ; } return VAR_1 . equals ( VAR_2 ) ; }[0m
---------------
Class: ['wrapsIfElse']
Golden example (False):
[31mExample #1[0m
Src : public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_1 ( ( TYPE_2 < ? > ) VAR_1 ) ; }[0m
Trg : public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 < ? > ) { METHOD_1 ( ( TYPE_2 < ? > ) VAR_1 ) ; } else { throw new TYPE_3 ( STRING_1 ) ; } }[0m
Pred: public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_1 ( ( TYPE_2 < ? > ) VAR_1 ) ; } METHOD_1 ( ( TYPE_2 < ? > ) VAR_1 ) ; }[0m
+++++++++++++++
[31mExample #1[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 field ) { TYPE_3 VAR_1 = field . METHOD_1 ( ) ; if ( VAR_1 != null && VAR_1 instanceof TYPE_4 ) { TYPE_3 VAR_2 = ( ( TYPE_4 ) VAR_1 ) . METHOD_2 ( ) [ 0 ] ; return ( TYPE_1 ) VAR_2 ; } return VAR_3 class ; }[0m
Trg : public TYPE_1 METHOD_1 ( TYPE_2 field ) { TYPE_3 VAR_1 = field . METHOD_1 ( ) ; if ( VAR_1 != null && VAR_1 instanceof TYPE_4 ) { TYPE_3 VAR_2 = ( ( TYPE_4 ) VAR_1 ) . METHOD_2 ( ) [ 0 ] ; if ( VAR_2 instanceof TYPE_1 ) { return ( TYPE_1 ) VAR_2 ; } else if ( VAR_2 instanceof TYPE_4 ) { return ( TYPE_1 ) ( ( TYPE_4 ) VAR_2 ) . METHOD_3 ( ) ; } } return VAR_3 class ; }[0m
Pred: public TYPE_1 METHOD_1 ( TYPE_2 field ) { TYPE_3 VAR_1 = field . METHOD_1 ( ) ; if ( VAR_1 != null ) { TYPE_3 VAR_2 = ( ( TYPE_4 ) VAR_1 ) . METHOD_2 ( ) [ 0 ] ; return ( TYPE_1 ) VAR_2 ; } return VAR_3 class ; }[0m
[31mExample #2[0m
Src : public TYPE_1 METHOD_1 ( final int x ) { return METHOD_2 ( x ) ; }[0m
Trg : public TYPE_1 METHOD_1 ( final int x ) { if ( x >= 0 && x < VAR_1 ) { return METHOD_2 ( x ) ; } else { return METHOD_1 ( METHOD_3 ( x ) ) ; } }[0m
Pred: public TYPE_1 METHOD_1 ( final int x ) { return METHOD_2 ( x ) ; }[0m
---------------
================
Duration: 0:00:08.213867

Starting long experiments
Start conducting accuracy calculation experiment for Test dataset all...
BUG FIXING ACCURACY
Top-1 accuracy: 89 / 6545 = 0.01359816653934301
Top-3 accuracy: 528 / 6545 = 0.08067226890756303
Top-5 accuracy: 723 / 6545 = 0.11046600458365165
Top-10 accuracy: 998 / 6545 = 0.15248281130634073
Top-50 accuracy: 1507 / 6545 = 0.23025210084033612
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 94 / 6545 = 0.01436210847975554
Top-3 accuracy: 563 / 6545 = 0.08601986249045072
Top-5 accuracy: 748 / 6545 = 0.11428571428571428
Top-10 accuracy: 1019 / 6545 = 0.15569136745607334
Top-50 accuracy: 1530 / 6545 = 0.23376623376623376
Duration: 1:01:06.475995

Starting all Tufano variations experiments
Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 33 / 300 = 0.11
Top-5 accuracy: 45 / 300 = 0.15
Top-10 accuracy: 62 / 300 = 0.20666666666666667
Top-50 accuracy: 90 / 300 = 0.3
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 35 / 300 = 0.11666666666666667
Top-5 accuracy: 50 / 300 = 0.16666666666666666
Top-10 accuracy: 64 / 300 = 0.21333333333333335
Top-50 accuracy: 93 / 300 = 0.31
Duration: 0:03:02.897501

Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 27 / 300 = 0.09
Top-5 accuracy: 41 / 300 = 0.13666666666666666
Top-10 accuracy: 62 / 300 = 0.20666666666666667
Top-50 accuracy: 80 / 300 = 0.26666666666666666
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 31 / 300 = 0.10333333333333333
Top-5 accuracy: 47 / 300 = 0.15666666666666668
Top-10 accuracy: 64 / 300 = 0.21333333333333335
Top-50 accuracy: 84 / 300 = 0.28
Duration: 0:03:03.649493

Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 35 / 300 = 0.11666666666666667
Top-5 accuracy: 49 / 300 = 0.16333333333333333
Top-10 accuracy: 62 / 300 = 0.20666666666666667
Top-50 accuracy: 91 / 300 = 0.30333333333333334
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 37 / 300 = 0.12333333333333334
Top-5 accuracy: 48 / 300 = 0.16
Top-10 accuracy: 68 / 300 = 0.22666666666666666
Top-50 accuracy: 92 / 300 = 0.30666666666666664
Duration: 0:03:04.431116

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 6 / 300 = 0.02
Top-3 accuracy: 29 / 300 = 0.09666666666666666
Top-5 accuracy: 38 / 300 = 0.12666666666666668
Top-10 accuracy: 57 / 300 = 0.19
Top-50 accuracy: 81 / 300 = 0.27
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 6 / 300 = 0.02
Top-3 accuracy: 29 / 300 = 0.09666666666666666
Top-5 accuracy: 38 / 300 = 0.12666666666666668
Top-10 accuracy: 57 / 300 = 0.19
Top-50 accuracy: 81 / 300 = 0.27
Duration: 0:02:56.855561

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 3 / 300 = 0.01
Top-3 accuracy: 24 / 300 = 0.08
Top-5 accuracy: 34 / 300 = 0.11333333333333333
Top-10 accuracy: 44 / 300 = 0.14666666666666667
Top-50 accuracy: 59 / 300 = 0.19666666666666666
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 25 / 300 = 0.08333333333333333
Top-5 accuracy: 34 / 300 = 0.11333333333333333
Top-10 accuracy: 43 / 300 = 0.14333333333333334
Top-50 accuracy: 61 / 300 = 0.20333333333333334
Duration: 0:02:56.814956

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 5 / 300 = 0.016666666666666666
Top-3 accuracy: 25 / 300 = 0.08333333333333333
Top-5 accuracy: 35 / 300 = 0.11666666666666667
Top-10 accuracy: 41 / 300 = 0.13666666666666666
Top-50 accuracy: 64 / 300 = 0.21333333333333335
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 6 / 300 = 0.02
Top-3 accuracy: 25 / 300 = 0.08333333333333333
Top-5 accuracy: 36 / 300 = 0.12
Top-10 accuracy: 42 / 300 = 0.14
Top-50 accuracy: 65 / 300 = 0.21666666666666667
Duration: 0:02:56.787319

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 10 / 300 = 0.03333333333333333
Top-5 accuracy: 13 / 300 = 0.043333333333333335
Top-10 accuracy: 22 / 300 = 0.07333333333333333
Top-50 accuracy: 38 / 300 = 0.12666666666666668
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 12 / 300 = 0.04
Top-5 accuracy: 15 / 300 = 0.05
Top-10 accuracy: 24 / 300 = 0.08
Top-50 accuracy: 40 / 300 = 0.13333333333333333
Duration: 0:03:04.955428

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 10 / 300 = 0.03333333333333333
Top-5 accuracy: 15 / 300 = 0.05
Top-10 accuracy: 28 / 300 = 0.09333333333333334
Top-50 accuracy: 43 / 300 = 0.14333333333333334
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 11 / 300 = 0.03666666666666667
Top-5 accuracy: 18 / 300 = 0.06
Top-10 accuracy: 28 / 300 = 0.09333333333333334
Top-50 accuracy: 43 / 300 = 0.14333333333333334
Duration: 0:03:04.998344

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 0 / 300 = 0.0
Top-3 accuracy: 4 / 300 = 0.013333333333333334
Top-5 accuracy: 10 / 300 = 0.03333333333333333
Top-10 accuracy: 15 / 300 = 0.05
Top-50 accuracy: 30 / 300 = 0.1
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 0 / 300 = 0.0
Top-3 accuracy: 6 / 300 = 0.02
Top-5 accuracy: 12 / 300 = 0.04
Top-10 accuracy: 15 / 300 = 0.05
Top-50 accuracy: 35 / 300 = 0.11666666666666667
Duration: 0:03:04.556575

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset train 300...
BUG FIXING ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 9 / 300 = 0.03
Top-5 accuracy: 14 / 300 = 0.04666666666666667
Top-10 accuracy: 18 / 300 = 0.06
Top-50 accuracy: 33 / 300 = 0.11
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 12 / 300 = 0.04
Top-5 accuracy: 15 / 300 = 0.05
Top-10 accuracy: 18 / 300 = 0.06
Top-50 accuracy: 33 / 300 = 0.11
Duration: 0:02:58.894476

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset val 300...
BUG FIXING ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 6 / 300 = 0.02
Top-5 accuracy: 10 / 300 = 0.03333333333333333
Top-10 accuracy: 17 / 300 = 0.056666666666666664
Top-50 accuracy: 25 / 300 = 0.08333333333333333
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 2 / 300 = 0.006666666666666667
Top-3 accuracy: 7 / 300 = 0.023333333333333334
Top-5 accuracy: 11 / 300 = 0.03666666666666667
Top-10 accuracy: 17 / 300 = 0.056666666666666664
Top-50 accuracy: 26 / 300 = 0.08666666666666667
Duration: 0:02:57.231589

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset test 300...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 8 / 300 = 0.02666666666666667
Top-5 accuracy: 12 / 300 = 0.04
Top-10 accuracy: 17 / 300 = 0.056666666666666664
Top-50 accuracy: 21 / 300 = 0.07
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 300 = 0.0033333333333333335
Top-3 accuracy: 8 / 300 = 0.02666666666666667
Top-5 accuracy: 13 / 300 = 0.043333333333333335
Top-10 accuracy: 17 / 300 = 0.056666666666666664
Top-50 accuracy: 21 / 300 = 0.07
Duration: 0:02:57.785795

Start conducting accuracy calculation experiment for Tufano bug fixes 0 50 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 45 / 5835 = 0.007712082262210797
Top-3 accuracy: 522 / 5835 = 0.08946015424164525
Top-5 accuracy: 761 / 5835 = 0.13041988003427593
Top-10 accuracy: 1093 / 5835 = 0.18731790916880892
Top-50 accuracy: 1576 / 5835 = 0.2700942587832048
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 51 / 5835 = 0.008740359897172237
Top-3 accuracy: 582 / 5835 = 0.09974293059125965
Top-5 accuracy: 822 / 5835 = 0.14087403598971723
Top-10 accuracy: 1141 / 5835 = 0.19554413024850043
Top-50 accuracy: 1651 / 5835 = 0.2829477292202228
Duration: 0:56:54.561768

Start conducting accuracy calculation experiment for Tufano bug fixes 50 100 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 89 / 6545 = 0.01359816653934301
Top-3 accuracy: 528 / 6545 = 0.08067226890756303
Top-5 accuracy: 723 / 6545 = 0.11046600458365165
Top-10 accuracy: 998 / 6545 = 0.15248281130634073
Top-50 accuracy: 1507 / 6545 = 0.23025210084033612
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 94 / 6545 = 0.01436210847975554
Top-3 accuracy: 563 / 6545 = 0.08601986249045072
Top-5 accuracy: 748 / 6545 = 0.11428571428571428
Top-10 accuracy: 1019 / 6545 = 0.15569136745607334
Top-50 accuracy: 1530 / 6545 = 0.23376623376623376
Duration: 1:01:11.319422

Start conducting accuracy calculation experiment for Tufano code changes 0 50 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 6 / 1077 = 0.005571030640668524
Top-3 accuracy: 32 / 1077 = 0.029712163416898793
Top-5 accuracy: 49 / 1077 = 0.04549675023212628
Top-10 accuracy: 71 / 1077 = 0.06592386258124419
Top-50 accuracy: 113 / 1077 = 0.10492107706592387
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 6 / 1077 = 0.005571030640668524
Top-3 accuracy: 37 / 1077 = 0.034354688950789226
Top-5 accuracy: 53 / 1077 = 0.04921077065923862
Top-10 accuracy: 74 / 1077 = 0.06870937790157845
Top-50 accuracy: 121 / 1077 = 0.11234911792014857
Duration: 0:10:34.241479

Start conducting accuracy calculation experiment for Tufano code changes 50 100 dataset test...
BUG FIXING ACCURACY
Top-1 accuracy: 1 / 1098 = 0.0009107468123861566
Top-3 accuracy: 14 / 1098 = 0.012750455373406194
Top-5 accuracy: 23 / 1098 = 0.020947176684881604
Top-10 accuracy: 33 / 1098 = 0.030054644808743168
Top-50 accuracy: 45 / 1098 = 0.040983606557377046
TRAINING OBJECTIVE ACCURACY
Top-1 accuracy: 1 / 1098 = 0.0009107468123861566
Top-3 accuracy: 14 / 1098 = 0.012750455373406194
Top-5 accuracy: 25 / 1098 = 0.022768670309653915
Top-10 accuracy: 34 / 1098 = 0.030965391621129327
Top-50 accuracy: 45 / 1098 = 0.040983606557377046
Duration: 0:10:26.899029

