====NEW EXAMPLE====
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d33a646be8056fe72cb624a889787ee57f376d2b <nl> mode = push <nl> parent = 8f419d24f36837cb006e3e1020d88982aaf47dcd <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in
====NEW EXAMPLE====
ppp b / src / main / app / sass / generic
ppp b / src / main / app / sass / generic / <unk> . scss <nl> . container - full { <nl> \ no newline at end of file <nl> { <nl> { <nl> width width : 100 % ; <nl> margin : 0 auto ; <nl>
ppp b / src / main / app / sass / generic / <unk> . scss <nl> . container - full { <nl> \ no newline at end of file <nl> { <nl> { <nl> width width : 100 % ; <nl> margin : 0 auto auto <nl>
ppp b / src / main / app / sass / generic / <unk> . scss <nl> . container - full { <nl> \ no newline at end of file <nl> { <nl> { <nl> width width : 100 % ; <nl> margin : 0 auto ; <nl> <nl>
ppp b / src / main / app / sass / generic / <unk> . scss <nl> . container - full { <nl> \ no newline at end of file <nl> { <nl> { <nl> width width : 100 % ; <nl> margin : 0 0 ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / my - account / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - my - account . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / my - account / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / my - account / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / my - account / . gitrepo <nl>
ppp b / modules / apps / foundation / my - account / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> <unk> / root . war
ppp b / . gitignore <nl> <unk> / root . war <nl> / target <nl> # sublime <nl> * . sublime <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> <unk> / root . war <nl> / target <nl> # sublime <nl> * . sublime <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> <unk> / root . war <nl> / target <nl> # sublime <nl> \ no newline at end of file <nl> * . iws <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> <unk> / root . war <nl> / target <nl> # sublime <nl> * . idea <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / dependencies / linux / install - dependencies - yum <nl> set - e <nl> sudo yum install - y make <nl>
ppp b / dependencies / linux / install - dependencies - yum <nl> set - e <nl>
ppp b / dependencies / linux / install - dependencies - yum <nl>
ppp b / dependencies / linux / install - dependencies - yum <nl> set - <nl>
ppp b / dependencies / linux / install - dependencies - <nl>
====NEW EXAMPLE====
ppp b / readme . txt <nl> worldedit <nl> copyright ( c ) 2010 sk89q < http : / / www . sk89q . com > <nl> licensed under the gnu general public license v3 <nl> for usage help , see : <nl> http : / / github . com / sk89q / worldedit / / wiki / usage <nl> \ no newline at end of file <nl>
ppp b / readme . txt <nl> worldedit <nl> copyright ( c ) 2010 sk89q < http : / / www . sk89q . com > <nl> licensed under the gnu general public license v3 <nl> for usage help , see : <nl> http : / / github . com / sk89q / worldedit / / wiki / <nl> \ no newline at end of file <nl>
ppp b / readme . txt <nl> worldedit <nl> copyright ( c ) 2010 sk89q < http : / / www . sk89q . com > <nl> licensed under the gnu general public license v3 <nl> for usage help , see : <nl> http : / / github . com / sk89q / worldedit / / wiki usage <nl> \ no newline at end of file <nl>
ppp b / readme . txt <nl> worldedit <nl> copyright ( c ) 2010 sk89q < http : / / www . sk89q . com > <nl> licensed under the gnu general public license v3 <nl> for usage help , see : <nl> http : / / github . com / sk89q / worldedit / / wiki / \ no newline at end of file <nl>
ppp b / readme . txt <nl> worldedit <nl> copyright ( c ) 2010 sk89q < http : / / www . sk89q . com > <nl> licensed under the gnu general public license v3 <nl> for usage help , see : <nl> http : / / github . com / sk89q / worldedit / / wiki / / <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> create your own layout using a pagerslidingtabstrip <nl> simply add a listen to the viewpager <nl> ccc java <nl> <unk> . <unk> ( new <unk> . <unk> ( ) { <nl> @ override <nl> public <unk> <unk> ( int page ) { <nl> switch ( page ) { <nl>
ppp b / readme . md <nl> create your own layout using a pagerslidingtabstrip <nl> simply add a listen to the viewpager <nl> ccc java <nl> <unk> . <unk> ( new <unk> . <unk> ( ) { <nl> @ override <nl> public <unk> <unk> ( int page ) { <nl> switch ( page ) <nl>
ppp b / readme . md <nl> create your own layout using a pagerslidingtabstrip <nl> simply add a listen to the viewpager <nl> ccc java <nl> <unk> . <unk> ( new <unk> . <unk> ( ) { <nl> @ override <nl> public <unk> <unk> ( int page ) { <nl> switch ( page { <nl>
ppp b / readme . md <nl> create your own layout using a pagerslidingtabstrip <nl> simply add a listen to the viewpager <nl> ccc java <nl> <unk> . <unk> ( new <unk> . <unk> ( ) { <nl> @ override <nl> public <unk> <unk> ( int page ) { <nl> switch ( page ) ) <nl>
ppp b / readme . md <nl> create your own layout using a pagerslidingtabstrip <nl> simply add a listen to the viewpager <nl> ccc java <nl> <unk> . <unk> ( new <unk> . <unk> ( ) { <nl> @ override <nl> public <unk> <unk> ( int page ) { <nl> switch ( page ) ; <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . : : : 2 . 1 . - alpha3 ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . : : : 2 . 1 . - alpha3 ' <nl> } } <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . : : : 2 . 1 . - alpha3 ' } <nl> } <nl>
====NEW EXAMPLE====
ppp b / fml <nl> subproject commit <unk> <nl>
ppp b / fml <nl> subproject commit <nl>
ppp b / fml <nl> subproject commit d08ed6535b6984e4535989b286da8ae14aef78cf <nl>
ppp b / fml <nl> subproject commit fba07bc558372a1f3bee80b837495cf6bf8e0a5a <nl>
ppp b / fml <nl> subproject commit 4d400f5d7c8a766dfb079c915308a2eeccfc0f8b <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl>
ppp
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * added info icon to toggle toggle <nl> * updated simplified chinese translation <nl> * storm - toggle restrictions <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * added info icon to toggle toggle <nl> * updated simplified chinese translation <nl> * storm - toggle restrictions <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = ) <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * added info icon to toggle toggle <nl> * updated simplified chinese translation <nl> * storm - toggle restrictions <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open <nl>
====NEW EXAMPLE====
ppp b / version . txt <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 88 . . 2 - snapshot <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 88 . 88 . 2 - snapshot <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 88 . 88 . 1 <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / spec / doc / core - <unk> . adoc <nl> there is a distinct section on ` @ category ` in the < < core - <unk> . adoc # <unk> <nl> ( tbd ) <nl> = = = = = = = = = magic package package <nl> ( tbd ) <nl>
ppp b / src / spec / doc / core - <unk> . adoc <nl> there is a distinct section on ` @ category ` in the < < core - <unk> . adoc # <unk> <nl> ( tbd ) <nl> = = = = = = = = = magic package package <nl> ( tbd tbd <nl>
ppp b / src / spec / doc / core - <unk> . adoc <nl> there is a distinct section on ` @ category ` in the < < core - <unk> . adoc # <unk> <nl> ( tbd ) <nl> = = = = = = = = = magic package package <nl>
ppp b / src / spec / doc / core - <unk> . adoc <nl> there is a distinct section on ` @ category ` in the < < core - <unk> . adoc # <unk> <nl> ( tbd ) <nl> = = = = = = = = = magic package <nl>
ppp b / src / spec / doc / core - <unk> . adoc <nl> there is a distinct section on ` @ category ` in the < < core - <unk> . adoc # <unk> <nl> ( tbd ) <nl> = = = = = = = = = magic package package <nl> ( tbd <nl>
====NEW EXAMPLE====
ppp b / h2o - r / . gitignore <nl> results / <nl> * . <unk> <nl> buildnum . txt <nl>
ppp b / h2o - r / . gitignore <nl> results / <nl> * . <unk> <nl> buildnum .
ppp b / h2o - r / . gitignore <nl> results / <nl> * . <unk> <nl> buildnum . txt <nl> * <nl>
ppp b / h2o - r / . gitignore <nl> results / <nl> * . <unk> <nl> buildnum . txt <nl> * . iws <nl>
ppp b / h2o - r / . gitignore <nl> results / <nl> * . <unk> <nl> buildnum . txt <nl> * . iml <nl>
====NEW EXAMPLE====
ppp b / build . properties <nl> version - id : 0 . 32 <nl> platform - version : 120 . 0 <nl> idea . download . url = http : / / download . jetbrains . com / idea / ideaiu - 12 . 1 . zip <nl> build . number = x <nl>
ppp b / build . properties <nl> version - id : 0 . 32 <nl> platform - version : 120 . 0 <nl> idea . download . url = http : / / download . jetbrains . com / idea / ideaiu - 12 . 1 . zip <nl> build . number = x x <nl>
ppp b / build . properties <nl> version - id : 0 . 32 <nl> platform - version : 120 . 0 <nl> idea . download . url = http : / / download . jetbrains . com / idea / ideaiu - 12 . 1 . zip <nl> build . number = = <nl>
ppp b / build . properties <nl> version - id : 0 . 32 <nl> platform - version : 120 . 0 <nl> idea . download . url = http : / / download . jetbrains . com / idea / ideaiu - 12 . 1 . zip <nl> build . number = <nl>
ppp b / build . properties <nl> version - id : 0 . 32 <nl> platform - version : 120 . 0 <nl> idea . download . url = http : / / download . jetbrains . com / idea / ideaiu - 12 . 1 . zip <nl> build . number = x <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / services / surfaceflinger / android . mk <nl> ifeq ( $ ( <unk> ) , <unk> ) <nl> endif <nl>
ppp b / services / surfaceflinger / android . mk <nl> ifeq ( $ ( <unk> ) , <unk> ) <nl> endif <nl> ifeq ( $ ( <unk> )
ppp b / services / surfaceflinger / android . mk <nl> ifeq ( $ ( <unk> ) , <unk> ) <nl> endif <nl> ifeq ( $ ( <unk>
ppp b / services / surfaceflinger / android . mk <nl> ifeq ( $ ( <unk> ) , <unk> ) <nl> <nl>
ppp b / services / surfaceflinger / android . mk <nl> ifeq ( $ ( <unk> ) , <unk> ) <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> no , because these os ' es are to closed to implement something like xprivacy . <nl> * wi - fi settings <nl> * bluetooth settings <nl> * shortcuts <nl> * autostarting <nl> shortcuts <nl> * android version <nl> * vibration <nl>
ppp b / readme . md <nl> no , because these os ' es are to closed to implement something like xprivacy . <nl> * wi - fi settings <nl> * bluetooth settings <nl> * shortcuts <nl> * autostarting <nl> shortcuts <nl> * android version <nl> * <nl>
ppp b / readme . md <nl> no , because these os ' es are to closed to implement something like xprivacy . <nl> * wi - fi settings <nl> * bluetooth settings <nl> * shortcuts <nl> * autostarting <nl> shortcuts <nl> * android version <nl> * vibration
ppp b / readme . md <nl> no , because these os ' es are to closed to implement something like xprivacy . <nl> * wi - fi settings <nl> * bluetooth settings <nl> * shortcuts <nl> * autostarting <nl> shortcuts <nl> * android version <nl>
ppp b / readme . md <nl> no , because these os ' es are to closed to implement something like xprivacy . <nl> * wi - fi settings <nl> * bluetooth settings <nl> * shortcuts <nl> * autostarting <nl> shortcuts <nl> * android version <nl> * vibration <nl> <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> allprojects { <nl> into " $ project . ext . distpath / sdk " <nl> } <nl>
ppp b / build . gradle <nl> allprojects { <nl> into " $ project . ext . distpath / sdk " <nl> } <nl> } <nl>
ppp b / build . gradle <nl> allprojects { <nl> into " $ project . ext . distpath / sdk " <nl> } <nl> } <nl> } <nl>
ppp b / build . gradle <nl> allprojects { <nl> into " $ project . ext . distpath / sdk " <nl>
ppp b / build . gradle <nl> allprojects { <nl> into " $ project . ext . distpath / sdk " <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 7 - rc < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 7 - rc < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / > <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 7 - rc < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 7 - rc < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl> > <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 7 - rc < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / <nl>
====NEW EXAMPLE====
ppp b / iphone / childbrowser / childbrowserviewcontroller . m <nl> if ( <unk> ) <nl> { <nl>
ppp b / iphone / childbrowser / childbrowserviewcontroller . m <nl> if ( <unk> ) <nl> { <nl> nsurl * purl = [ [ nsurl alloc ] <unk> : imageurl ] ; <nl> [ [ [ uiapplication uiapplication <unk> ] <unk> <unk> : purl ] ; <nl> } <nl> else <nl>
ppp b / iphone / childbrowser / childbrowserviewcontroller . m <nl> if ( <unk> ) <nl>
ppp b / iphone / childbrowser / childbrowserviewcontroller . m <nl> if ( <unk> ) <nl> { <nl> nsurl * purl = [ [ nsurl alloc ] <unk> : imageurl ] ; <nl> [ [ [ uiapplication uiapplication <unk> ] <unk> <unk> : purl ] ; <nl> } <nl> <nl>
ppp b / iphone / childbrowser / childbrowserviewcontroller . m <nl> if ( <unk> ) <nl> <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 110 - " <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - store . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl>
====NEW EXAMPLE====
ppp b /
ppp b
ppp

}
====NEW EXAMPLE====
ppp b / src / main / java / org / mapdb / <unk> . java <nl> public class <unk> extends store { <nl> <unk> . unlock ( ) ; <nl> } <nl> } finally { <nl> <unk> . lock ( ) ; <nl> } <nl> } <nl>
ppp b / src / main / java / org / mapdb / <unk> . java <nl> public class <unk> extends store { <nl> <unk> . unlock ( ) ; <nl> } <nl> } finally { <nl> <unk> . lock ( ) ; <nl> } <nl> <nl>
ppp b / src / main / java / org / mapdb / <unk> . java <nl> public class <unk> extends store { <nl> <unk> . unlock ( ) ; <nl> } <nl> } finally { <nl> <unk> . lock ( ) ; <nl> } <nl> } <nl> <nl>
ppp b / src / main / java / org / mapdb / <unk> . java <nl> public class <unk> extends store { <nl> <unk> . unlock ( ) ; <nl> } <nl> } finally { <nl> <unk> . lock ( ) ; <nl> } <nl> }
ppp b / src / main / java / org / mapdb / <unk> . java <nl> public class <unk> extends store { <nl> <unk> . unlock ( ) ; <nl> } <nl> } finally { <nl> <unk> . lock ( ) ; <nl> <nl> } <nl>
====NEW EXAMPLE====
ppp b / wordpress / src / main / java / org / wordpress / android / wordpress . java <nl> public class wordpress extends application { <nl> } <nl> @ override <nl> public void onactivitycreated ( activity activity , bundle arg1 ) { <nl> } <nl> @ override <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / wordpress . java <nl> public class wordpress extends application { <nl> } <nl> @ override <nl> public void onactivitycreated ( activity activity , bundle arg1 ) { <nl> } <nl> @ override <nl> <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / wordpress . java <nl> public class wordpress extends application { <nl> } <nl> @ override <nl> public void onactivitycreated ( activity activity , bundle arg1 ) { <nl> } <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / wordpress . java <nl> public class wordpress extends application { <nl> } <nl> @ override <nl> public void onactivitycreated ( activity activity , bundle arg1 ) { <nl> } <nl> @ override
ppp b / wordpress / src / main / java / org / wordpress / android / wordpress . java <nl> public class wordpress extends application { <nl> } <nl> @ override <nl> public void onactivitycreated ( activity activity , bundle arg1 ) { <nl> } <nl> @ @ <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - item - selector . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / readme . markdown <nl> <unk> history <nl> modern <nl>
ppp b / readme . markdown <nl> <unk> history <nl> modern history <nl>
ppp b / readme . markdown <nl> <unk> history <nl> modern
ppp b / readme . markdown <nl> <unk> history <nl>
ppp b / readme . markdown <nl> <unk> history <nl> modern history <nl> -
====NEW EXAMPLE====
ppp b / keystore / java / android / security / keystore / <unk> . java <nl> abstract class <unk> extends <unk> implements <unk> <nl> <unk> = input . length ; <nl> src . get ( input ) ; <nl> } <nl> super . <unk> input , , <unk> ) ; <nl> } <nl> override <nl>
ppp b / keystore / java / android / security / keystore / <unk> . java <nl> abstract class <unk> extends <unk> implements <unk> <nl> <unk> = input . length ; <nl> src . get ( input ) ; <nl> } <nl> super . <unk> input , , <unk> ) ; <nl> } <nl> override override <nl>
ppp b / keystore / java / android / security / keystore / <unk> . java <nl> abstract class <unk> extends <unk> implements <unk> <nl> <unk> = input . length ; <nl> src . get ( input ) ; <nl> } <nl> super . <unk> input , , <unk> ) ; <nl> } <nl>
ppp b / keystore / java / android / security / keystore / <unk> . java <nl> abstract class <unk> extends <unk> implements <unk> <nl> <unk> = input . length ; <nl> src . get ( input ) ; <nl> } <nl> super . <unk> input , , <unk> ) ; <nl> } <nl> @ override <nl>
ppp b / keystore / java / android / security / keystore / <unk> . java <nl> abstract class <unk> extends <unk> implements <unk> <nl> <unk> = input . length ; <nl> src . get ( input ) ; <nl> } <nl> super . <unk> input , , <unk> ) ; <nl> } <nl> override
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * added multiple template definitions <nl> * the first template will always be applied to new applications <nl> * added allow contacts by group <nl> * fixed caching of no set settings <nl> * updated simplified chinese translation <nl> * updated traditional chinese translation <nl>
ppp b / changelog . md <nl> changelog <nl> * added multiple template definitions <nl> * the first template will always be applied to new applications <nl> * added allow contacts by group <nl> * fixed caching of no set settings <nl> * updated simplified chinese translation <nl> * updated traditional chinese <nl>
ppp b / changelog . md <nl> changelog <nl> * added multiple template definitions <nl> * the first template will always be applied to new applications <nl> * added allow contacts by group <nl> * fixed caching of no set settings <nl> * updated simplified chinese translation <nl> * updated traditional translation <nl>
ppp b / changelog . md <nl> changelog <nl> * added multiple template definitions <nl> * the first template will always be applied to new applications <nl> * added allow contacts by group <nl> * fixed caching of no set settings <nl> * updated simplified chinese translation <nl>
ppp b / changelog . md <nl> changelog <nl> * added multiple template definitions <nl> * the first template will always be applied to new applications <nl> * added allow contacts by group <nl> * fixed caching of no set settings <nl> * updated simplified chinese translation <nl> * updated traditional chinese chinese <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < version > 2 . 16 < / version > <nl> < configuration > <nl>
ppp b / pom . xml <nl> < version > 2 . 16 < / version > <nl>
ppp b / pom . xml <nl> < version > 2 . 16 < / version <nl>
ppp b / pom . xml <nl> < version > 2 . 16 < / version > <nl> < configuration <nl>
ppp b / pom . xml <nl> < version > 2 . 16 < / version >
====NEW EXAMPLE====
ppp b / fml <nl> subproject commit <unk> <nl>
ppp b / fml <nl> subproject commit <nl>
ppp b / fml <nl> subproject commit d08ed6535b6984e4535989b286da8ae14aef78cf <nl>
ppp b / fml <nl> subproject commit fba07bc558372a1f3bee80b837495cf6bf8e0a5a <nl>
ppp b / fml <nl> subproject commit 4d400f5d7c8a766dfb079c915308a2eeccfc0f8b <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a618a99ae076934579d29deea9866463f6fa45e3 <nl> mode = push <nl> parent = f30eda3efed3c6b0953acdfbd4c01625b0542f22 <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 6a1c775ef610d9e77dbcb55dd9c0877eb1e9cd14 <nl> mode = push <nl> parent = 640be33aaa66cff2140124948810ca6487ff3025 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / releasenotes . md <nl> # release notes # <nl> # # # current dev branch ( from r1 . 3 . 1 ) # # # <nl> * <unk> <nl>
ppp b / releasenotes . md <nl> # release notes # <nl> # # # current dev branch ( from r1 . 3 . 1 ) # # # <nl> * <unk> <nl> <nl>
ppp b / releasenotes . md <nl> # release notes # <nl> # # # current dev branch ( from r1 . 3 . 1 ) # # # <nl> * <nl>
ppp b / releasenotes . md <nl> # release notes # <nl> # # # current dev branch ( from r1 . 3 . 1 ) # # # <nl> * * <nl>
ppp b / releasenotes . md <nl> # release notes # <nl> # # # current dev branch ( from r1 . 3 . 1 ) # # # <nl> * <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / src / test / groovy / transform / stc / closuresstctest . groovy <nl> class closuresstctest extends statictypecheckingtestcase { <nl> / / groovy - 6343 <nl> void testaccessstaticfieldfromnestedclosures ( ) { <nl> assertscript ' ' <nl> class a { <nl> public static final const = " a " <nl>
ppp b / src / test / groovy / transform / stc / closuresstctest . groovy <nl> class closuresstctest extends statictypecheckingtestcase { <nl> / / groovy - 6343 <nl> void testaccessstaticfieldfromnestedclosures ( ) { <nl> assertscript ' ' <nl> class a { <nl> public static final const = " a <nl>
ppp b / src / test / groovy / transform / stc / closuresstctest . groovy <nl> class closuresstctest extends statictypecheckingtestcase { <nl> / / groovy - 6343 <nl> void testaccessstaticfieldfromnestedclosures ( ) { <nl> assertscript ' ' <nl> class a { <nl> public static final const = " a a <nl>
ppp b / src / test / groovy / transform / stc / closuresstctest . groovy <nl> class closuresstctest extends statictypecheckingtestcase { <nl> / / groovy - 6343 <nl> void testaccessstaticfieldfromnestedclosures ( ) { <nl>
ppp b / src / test / groovy / transform / stc / closuresstctest . groovy <nl> class closuresstctest extends statictypecheckingtestcase { <nl> / / groovy - 6343 <nl> void testaccessstaticfieldfromnestedclosures ( ) { <nl> assertscript ' ' <nl> class a { <nl> public static final const = " " <nl>
====NEW EXAMPLE====
ppp b / moco - doc / plan . md <nl> # # configuration <nl> * setting <nl>
ppp b / moco - doc / plan . md <nl> # # configuration <nl> * setting file <nl>
ppp b / moco - doc / plan . md <nl> # # configuration <nl> * setting file <nl> *
ppp b / moco - doc / plan . md <nl> # # configuration <nl> * setting file <nl> * multiple
ppp b / moco - doc / plan . md <nl> # # configuration <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> before_install : sudo pip install <nl>
ppp b / . travis . yml <nl> language : java <nl> before_install : sudo pip install codecov <nl>
ppp b / . travis . yml <nl> language : java <nl>
ppp b / . travis . yml <nl> language : java <nl> before_install : sudo pip install codecov <nl> script : mvn - <unk> <nl>
ppp b / . travis . yml <nl> language : <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / portlet / <unk> / <unk> . jspf <nl> if ( validator . isnotnull ( <unk> ) ) { <nl> <unk> = true ; <nl> } <nl> item . <unk> ( ' hide ' , <unk> ) ; <nl> } <nl> ) ; <nl>
ppp b / portal - web / docroot / html / portlet / <unk> / <unk> . jspf <nl> if ( validator . isnotnull ( <unk> ) ) { <nl> <unk> = true ; <nl> } <nl> item . <unk> ( ' hide ' , <unk> ) ; <nl> } <nl> ) ) ; <nl>
ppp b / portal - web / docroot / html / portlet / <unk> / <unk> . jspf <nl> if ( validator . isnotnull ( <unk> ) ) { <nl> <unk> = true ; <nl> } <nl> item . <unk> ( ' hide ' , <unk> ) ; <nl> } <nl> ) ; ; <nl>
ppp b / portal - web / docroot / html / portlet / <unk> / <unk> . jspf <nl> if ( validator . isnotnull ( <unk> ) ) { <nl> <unk> = true ; <nl> } <nl> item . <unk> ( ' hide ' , <unk> ) ; <nl> } <nl>
ppp b / portal - web / docroot / html / portlet / <unk> / <unk> . jspf <nl> if ( validator . isnotnull ( <unk> ) ) { <nl> <unk> = true ; <nl> } <nl> item . <unk> ( ' hide ' , <unk> ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d4fbeb0744ccf4478e5d42576e664e3a9988e4e3 <nl> mode = push <nl> parent = 75166a4df6f12d14427ad7e873e13d63b2fcc00f <nl> remote = git @ github . com : liferay / com - liferay - portal - settings . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version = 1 . 1 . 75 - snapshot <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 1 - snapshot <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 1 <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 78 <nl>
ppp b / gradle . properties <nl> version = 1 . 1 . 0 - snapshot <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / test / ref / index . html <nl> result . appendchild ( title ) ; <nl> results . appendchild ( result ) ; <nl> var <unk> = epsilon * 255 ; <nl> if ( test . <unk> ( ) ; <nl> ( test . <unk> ) { <nl> <unk> = test . <unk> * 255 ; <nl> } <nl>
ppp b / test / ref / index . html <nl> result . appendchild ( title ) ; <nl>
ppp b / test / ref / index . html <nl>
ppp b / test / ref / index . html <nl> result
ppp b / test / ref / index . html <nl> result . appendchild ( title ) ; <nl> results . appendchild ( result ) ; <nl> var <unk> = epsilon * 255 ; <nl> if ( test . <unk> ( ) ; <nl> ( test . <unk> ) { <nl> <unk> = test . <unk> * 255 ; } <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { <nl> compilejava { <nl> options . compilerargs < < " - xlint : unchecked " <nl> } <nl>
ppp b / build . gradle <nl> subprojects { <nl> compilejava
ppp b / build . gradle <nl> subprojects { <nl>
ppp b / build . gradle <nl> subprojects { <nl> compilejava { <nl> options . compilerargs < < " - xlint : unchecked " <nl> } <nl> ext xlint : unchecked " ) { <nl> } <nl> ext { <nl>
ppp b / build . gradle <nl> subprojects { <nl> compilejava { <nl> options . compilerargs < < " - xlint : unchecked " <nl> } <nl> ext xlint : unchecked " ) { <nl> } <nl> ext { <nl> <nl>
====NEW EXAMPLE====
ppp b / src / main / com / mongodb / db . java <nl> public abstract class db { <nl> / * * <nl> * gets a collection with a given name . <nl>
ppp b / src / main / com / mongodb / db . java <nl> public abstract class db { <nl> / * * <nl> * gets a collection with a given name name <nl>
ppp b / src / main / com / mongodb / db . java <nl> public abstract class db { <nl> / * * <nl> * gets a collection with a given name <nl>
ppp b / src / main / com / mongodb / db . java <nl> public abstract class db { <nl> / * * <nl> * gets a collection with a given name . <nl> <nl>
ppp b / src / main / com / mongodb / db . java <nl> public abstract class db { <nl> / * * <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> changelog <nl> * removed popup for pro license ( not enabler ) <nl> * updated danish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 13 beta ! * * <nl>
ppp b / readme . md <nl> changelog <nl> * removed popup for pro license ( not enabler ) <nl> * updated danish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 13 beta ! * <nl>
ppp b / readme . md <nl> changelog <nl> * removed popup for pro license ( not enabler ) <nl> * updated danish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 13 beta ! * *
ppp b / readme . md <nl> changelog <nl> * removed popup for pro license ( not enabler ) <nl> * updated danish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 13 beta ! * * <nl> <nl>
ppp b / readme . md <nl> changelog <nl> * removed popup for pro license ( not enabler ) <nl> * updated danish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 13 beta ! * * * <nl>
====NEW EXAMPLE====
ppp b / src / main / groovy / util / buildersupport . java <nl>
ppp b / src / main / groovy / util / buildersupport . java <nl> public abstract class buildersupport extends groovyobjectsupport { <nl> protected object getcurrent ( ) { <nl> return current ; <nl> } <nl> } <nl> public string tostring ( ) { <nl> public string tostring ( ) ; <nl> } <nl> } <nl>
ppp b / src / main / groovy / util / buildersupport . java <nl> public abstract class buildersupport extends groovyobjectsupport { <nl> protected object getcurrent ( ) { <nl> return current ; <nl> } <nl> } <nl> public string tostring ( ) { <nl> public string tostring ( ) ; <nl> } <nl> } } <nl>
ppp b / src / main / groovy / util / buildersupport . java <nl> public abstract class buildersupport extends groovyobjectsupport { <nl> protected object getcurrent ( ) { <nl> return current ; <nl> } <nl> } <nl> public string tostring ( ) { <nl> public string tostring ( ) ; <nl> } <nl> } <nl> <nl>
ppp b / src / main / groovy / util / buildersupport . java <nl> public abstract class buildersupport extends groovyobjectsupport { <nl> protected object getcurrent ( ) { <nl> return current ; <nl> } <nl> } <nl> public string tostring ( ) { <nl> public string tostring ( ) ; <nl> } <nl> <nl> } <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 10 < / / version version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 10 < / / version version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 10 < / / version version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 6 . 10 < / / version version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name name <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl>
====NEW EXAMPLE====
ppp b / <unk> / . gitignore <nl> / build <nl>
ppp b / <unk> / . gitignore <nl> / <nl>
ppp b / <unk> / . gitignore <nl>
ppp b / <unk> / . gitignore <nl> build <nl>
ppp b / <unk> / . gitignore <nl> / / <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> add it in your root build . gradle at the end of repositories : <nl> step 2 . add the dependency <nl> dependencies { <nl> compile ' com . github . baoyachi : stepview : 1 . 1 ' <nl> } <nl>
ppp b / readme . md <nl> add it in your root build . gradle at the end of repositories : <nl> step 2 . add the dependency <nl> dependencies { <nl> compile ' com . github . baoyachi : stepview : 1 . 1 . <nl> } <nl>
ppp b / readme . md <nl> add it in your root build . gradle at the end of repositories : <nl> step 2 . add the dependency <nl> dependencies { <nl> compile ' com . github . baoyachi : stepview : 1 . 1 ' <nl> <nl>
ppp b / readme . md <nl> add it in your root build . gradle at the end of repositories : <nl> step 2 . add the dependency <nl> dependencies { <nl> compile ' com . github . baoyachi : stepview : 1 . 1 ' <nl> } <nl> <nl>
ppp b / readme . md <nl> add it in your root build . gradle at the end of repositories : <nl> step 2 . add the dependency <nl> dependencies { <nl> compile ' com . github . baoyachi : stepview : 1 . 1 ' ' <nl> } <nl>
====NEW EXAMPLE====
ppp b / es / upstream <nl> subproject commit <unk> <nl>
ppp b / es / upstream <nl> subproject commit 7a2be18b470a8fb36b9062243943de7e4e6bfb97 <nl>
ppp b / es / upstream <nl> subproject commit 2557ddbdb2f85c116145d5e1035cf080c8dd7106 <nl>
ppp b / es / upstream <nl> subproject commit 3bde5d401a17d715f5b2e58f5e104a8a90a9702c <nl>
ppp b / es / upstream <nl> subproject commit 340a089eedc0568c6ef149c65bfa59886e3feee6 <nl>
====NEW EXAMPLE====
ppp b / plugins / pom . xml <nl> < module > analysis - icu < / module > <nl> < module > cloud - gce < / module > <nl> < module > cloud - azure < / module > <nl>
ppp b / plugins / pom . xml <nl> < module > analysis - icu < / module > <nl>
ppp b / plugins / pom . xml <nl> < module > analysis - icu < / module > <nl> < module > cloud - gce < / module > <nl> < module > cloud - azure < / module > <nl> < / < / - azure < / module > <nl> < / modules > <nl> < / project > <nl>
ppp b / plugins / pom . xml <nl> < module
ppp
====NEW EXAMPLE====
ppp b / changelog <nl> * added css @ import support <nl> * added css font - family property support <nl>
ppp b / changelog <nl> * added css @ import support <nl>
ppp b / changelog <nl> * added css @ import <nl>
ppp b / changelog <nl> * added css @ import support <nl> * added css font - family property support <nl> * added epub embedded fonts support <nl> = = = = = = 1 . 9 . notable functions of file <nl> * storm - = = = = = = = = = = 1 . 9 . 6 . 1 ( feb 24 , 2014 ) = = = = <nl> * fixed some config <unk> reading ( e . g . background ) <nl>
ppp b / changelog <nl> * added css @ import support <nl> * added css font - family property support <nl> * added epub embedded fonts support <nl> = = = = = = 1 . 9 . notable functions of file <nl> * storm - = = = = = = = = = = 1 . 9 . 6 . 1 ( feb 24 , 2014 ) = = = = <nl> * fixed some config <unk> reading ( e . g . ) <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> jdk : <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> jdk : <nl>
ppp b / . travis . yml <nl> jdk : <nl> \ <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> jdk : <nl> script : <nl>
ppp b / . travis . yml <nl> jdk : <nl> \ no newline at end <nl>
====NEW EXAMPLE====
ppp b / subprojects / platform - play / src / integtest / groovy / org / gradle / play / tasks / <unk> . groovy <nl> package org . gradle . play . tasks <nl> class <unk> extends <unk> { <nl> \ no newline at end of file <nl> <unk> <unk> { <nl> def <unk> <nl>
ppp b / subprojects / platform - play / src / integtest / groovy / org / gradle / play / tasks / <unk> . groovy <nl> package org . gradle . play . tasks <nl> class <unk> extends <unk> { <nl> \ no newline at end of file <nl> <unk> <unk> { <nl> def def <nl>
ppp b / subprojects / platform - play / src / integtest / groovy / org / gradle / play / tasks / <unk> . groovy <nl> package org . gradle . play . tasks <nl> class <unk> extends <unk> { <nl> \ no newline at end of file <nl> <unk> <unk> { <nl>
ppp b / subprojects / platform - play / src / integtest / groovy / org / gradle / play / tasks / <unk> . groovy <nl> package org . gradle . play . tasks <nl> class <unk> extends <unk> { <nl> \ no newline at end of file <nl> <unk> <unk> { <nl> def <unk> <nl> <nl>
ppp b / subprojects / platform - play / src / integtest / groovy / org / gradle / play / tasks / <unk> . groovy <nl> package org . gradle . play . tasks <nl> class <unk> extends <unk> { <nl> \ no newline at end of file <nl> <unk> <unk> { <nl> def <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - product - navigation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / version . properties <nl> version = 2 . 0 . 75 - beta <nl> mockito . testng . version = 1 . 0 <nl>
ppp b / version . properties <nl> version = 2 . 0 . 75 - beta <nl> mockito . testng . version = 1 . . <nl>
ppp b / version . properties <nl> version = 2 . 0 . 75 - beta <nl> mockito . testng . version = 1 . 0 <nl> <nl>
ppp b / version . properties <nl> version = 2 . 0 . 75 - beta <nl> mockito . testng . version = 1 . <nl>
ppp b / version . properties <nl> version = 2 . 0 . 75 - beta <nl> mockito . testng . version = 1 . 0 0 <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . hsqldb < / groupid > <nl> < artifactid > hsqldb < / artifactid > <nl> < version > 2 . 3 . 2 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . hsqldb < / groupid > <nl> < artifactid > hsqldb < / artifactid > <nl> < version > 2 . 3 . 2 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl> > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . hsqldb < / groupid > <nl> < artifactid > hsqldb < / artifactid > <nl> < version > 2 . 3 . 2 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . hsqldb < / groupid > <nl> < artifactid > hsqldb < / artifactid > <nl> < version > 2 . 3 . 2 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . hsqldb < / groupid > <nl> < artifactid > hsqldb < / artifactid > <nl> < version > 2 . 3 . 2 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> install : mvn - u install - - quiet - dskiptests = true <nl> before_script : mvn - version <nl> script : mvn clean test <nl>
ppp b / . travis . yml <nl> language : java <nl> install : mvn - u install - - quiet - dskiptests = true <nl> before_script : mvn - version <nl> script : mvn clean <nl>
ppp b / . travis . yml <nl> language : java <nl> install : mvn - u install - - quiet - dskiptests = true <nl> before_script : mvn - version <nl> script : mvn clean test <nl> <nl>
ppp b / . travis . yml <nl> language : java <nl> install : mvn - u install - - quiet - dskiptests = true <nl> before_script : mvn - version <nl> script : mvn test <nl>
ppp b / . travis . yml <nl> language : java <nl> install : mvn - u install - - quiet - dskiptests = true <nl> before_script : mvn - version <nl> script : mvn clean test
====NEW EXAMPLE====
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 18 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 18 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 18 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 18 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl> > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 18 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl> <nl>
====NEW EXAMPLE====
ppp b / v8 / renderscript / rs_support / android . mk <nl> local_src_files : = \ <nl> spec . l \ <nl> rsg_generator . c <nl> include $ ( barcorama project <nl> include $ ( build_host_executable ) <nl> # todo : this should go into build / core / config . mk <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> local_src_files : = \ <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> local_src_files : = \ <nl> spec . l \ <nl> rsg_generator . c <nl> include $ ( barcorama project <nl> include $ ( build_host_executable ) <nl> # todo : this should go into build / core / config . <nl>
ppp b / v8 / renderscript / rs_support / android . <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - openjdk7 <nl> before_install : git clone https : / / github . com / buildcraft / buildcraft - localization . git . . / buildcraft - localization <nl> install : . / gradlew setupdecompworkspace - s <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - openjdk7 <nl> before_install : git clone https : / / github . com / buildcraft / buildcraft - localization . git . . / buildcraft - localization <nl> install : . / gradlew setupdecompworkspace - - <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - openjdk7 <nl> before_install : git clone https : / / github . com / buildcraft / buildcraft - localization . git . . / buildcraft - localization <nl> install : . / gradlew setupdecompworkspace - <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - openjdk7 <nl> before_install : git clone https : / / github . com / buildcraft / buildcraft - localization . git . . / buildcraft - localization <nl> install : . / gradlew setupdecompworkspace - s s <nl>
====NEW EXAMPLE====
ppp b / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> distributionversion = 0 . 7 - <unk> + 1000 <nl> zipstorepath = wrapper / dists <nl> urlroot = http \ : / / snapshots . dist . codehaus . org / gradle <nl> distributionname = gradle <nl>
ppp b / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> distributionversion = 0 . 7 - <unk> + 1000 <nl> zipstorepath = wrapper / dists <nl> urlroot = http \ : / / snapshots . dist . codehaus . org / gradle <nl> distributionname = = <nl>
ppp b / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> distributionversion = 0 . 7 - <unk> + 1000 <nl> zipstorepath = wrapper / dists <nl> urlroot = http \ : / / snapshots . dist . codehaus . org / gradle <nl> distributionname = gradle gradle <nl>
ppp b / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> distributionversion = 0 . 7 - <unk> + 1000 <nl> zipstorepath = wrapper / dists <nl> urlroot = http \ : / / snapshots . dist . codehaus . org / gradle <nl> distributionname = <nl>
ppp b / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> distributionversion = 0 . 7 - <unk> + 1000 <nl> zipstorepath = wrapper / dists <nl> urlroot = http \ : / / snapshots . dist . codehaus . org / gradle <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 4 . 6 ' <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 4 . 6 ' <nl> } <nl> ` ` <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 4 . 6 ' <nl> } <nl> ` ` ` <nl> <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 4 . 6 ' <nl> } <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 4 . 6 ' <nl> } <nl> ` ` ` ` <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> classes <nl> sc - bundles <nl>
ppp b / . gitignore <nl> classes <nl> sc - bundles <nl> . gitignore . swp <nl>
ppp b / . gitignore <nl> classes <nl> sc - bundles <nl> . gitignore . swp <nl> * . iws <nl> . gitignore <nl> gitignore <nl> jitsi jitsi . iml <nl> jitsi . ipr <nl> test - reports <nl> sip - communicator . utest . bin <nl>
ppp b / . gitignore <nl> classes <nl> sc - bundles
ppp b / . gitignore <nl> classes <nl>
====NEW EXAMPLE====
ppp b / lib / nokogiri / xslt / stylesheet . rb <nl> module nokogiri <nl>
ppp b / lib / nokogiri / xslt / stylesheet . rb <nl> module nokogiri <nl> # + params + is an array of strings used as xslt parameters . <nl> # returns serialized document <nl> def apply_to document , params = [ ] <nl> serialize ( ( document , ) { <nl> } <nl> } <nl>
ppp b / lib / nokogiri / xslt / stylesheet . rb <nl> module nokogiri <nl> # + params + is an array of strings used as xslt parameters . <nl> # returns serialized document <nl> def apply_to document , params = [ ] <nl> serialize ( ( document , ) ) <nl> } <nl> } <nl>
ppp b / lib / nokogiri / xslt / stylesheet . rb <nl> module nokogiri <nl> # + params + is an array of strings used as xslt parameters . <nl> # returns serialized document <nl> def apply_to document , params = [ ] <nl> serialize ( ( document , ) ) <nl> } <nl> end <nl>
ppp b / lib / nokogiri / xslt / stylesheet . rb <nl> module nokogiri <nl> # + params + is an array of strings used as xslt parameters . <nl> # returns serialized document <nl> def apply_to document , params = [ ] <nl> serialize ( ( document , ) { <nl> ) <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / test / groovy / io / platformlinewritertest . java <nl> import groovy . text . simpletemplateengine ; <nl> import groovy . text . template ; <nl> import junit . framework . testcase ; <nl>
ppp b / src / test / groovy / io / platformlinewritertest . java <nl> import groovy . text . simpletemplateengine ; <nl>
ppp b / src / test / groovy / io / platformlinewritertest . java <nl> import groovy . text . simpletemplateengine ; <nl> import groovy . text . template ; <nl>
ppp b / src / test / groovy / io / platformlinewritertest . java <nl>
ppp b / src / test / groovy / io / platformlinewritertest . java <nl> import groovy . text . simpletemplateengine ; <nl> import groovy . text . template ; <nl> import junit . framework . testcase ; <nl> import java . io . ; <nl> import java . io . stringwriter ; <nl> import java . io . writer ; <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < goals > <nl> < goal > remove - project - artifact < / goal > <nl> < / goals > <nl> < / execution > <nl>
ppp b / pom . xml <nl> < goals > <nl> < goal > remove - project - artifact < / goal > <nl> < / goals > <nl> < / execution > <nl> < /
ppp b / pom . xml <nl> < goals > <nl>
ppp b / pom . xml <nl> < goals > <nl> < goal > remove - project - artifact < / goal > <nl> < / goals > <nl> < / execution > <nl> < / < /
ppp
====NEW EXAMPLE====
ppp b / daoexample / src / main / java / de / greenrobot / daoexample / order . java <nl> public class order { <nl> private customer customer ; <nl> @ generated <nl> private private long <unk> ; <nl> public order ( ) { <nl>
ppp b / daoexample / src / main / java / de / greenrobot / daoexample / order . java <nl> public class order { <nl> private customer customer ; <nl> @ generated <nl> private private long <unk> ; <nl> public order ( ) ) <nl>
ppp b / daoexample / src / main / java / de / greenrobot / daoexample / order . java <nl> public class order { <nl> private customer customer ; <nl> @ generated <nl> private private long <unk> ; <nl> public order ( ) { <nl> <nl>
ppp b / daoexample / src / main / java / de / greenrobot / daoexample / order . java <nl> public class order { <nl> private customer customer ; <nl> @ generated <nl> private private long <unk> ; <nl> public order ( ) ; <nl>
ppp b / daoexample / src / main / java / de / greenrobot / daoexample / order . java <nl> public class order { <nl> private customer customer ; <nl> @ generated <nl> private private long <unk> ; <nl> public order ( ) <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * updated czech translation <nl> * updated slovak translation <nl> * updated turkish translation <nl> * * version 1 . 9 . 1 beta ! * * <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * updated czech translation <nl> * updated slovak translation <nl> * updated turkish translation <nl> * * version 1 . 9 . 1 beta ! * <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * updated czech translation <nl> * updated slovak translation <nl> * updated turkish translation <nl> * * version 1 . 9 . 1 beta ! * *
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * updated czech translation <nl> * updated slovak translation <nl> * updated turkish translation <nl> * * version 1 . 9 . 1 beta ! * * <nl> <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * updated czech translation <nl> * updated slovak translation <nl> * updated turkish translation <nl> * * version 1 . 9 . 1 beta ! ! <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> jdk : <nl> notifications : <nl>
ppp b / . travis . yml <nl> jdk : <nl> notifications <nl>
ppp b / . travis . yml <nl> jdk : <nl> notifications
ppp b / . travis . yml <nl> jdk : <nl>
ppp b / . travis . yml <nl> jdk : <nl> notifications :
====NEW EXAMPLE====
ppp b / v7 / appcompat / api / current . txt <nl> package android . support . v7 . appcompat { <nl>
ppp b / v7 / appcompat / api / current . txt <nl>
ppp b / v7 / appcompat / api / current . txt <nl> package android . support . v7 . appcompat { <nl> field public static int <unk> ; <nl> field public static int <unk> ; <nl> field public static int <unk> ; <nl> field ( ) ; <nl> ; <nl> public public static static int <unk> ; <nl> field public static int <unk> ; <nl> field public static int <unk> ; <nl>
ppp b / v7 / appcompat / api / current . txt <nl> package android . support . v7 . appcompat { <nl> field public static int <unk> ; <nl> field public static int <unk> ; <nl> field public static int <unk> ; <nl> field ( ) ; <nl> ; <nl> public public static static int <unk> ; <nl> field public static int <unk> ; <nl> field public static int ; <nl>
ppp b / v7 / appcompat / api / current . txt <nl> package android . support . v7 . appcompat { <nl> field public static int <unk> ; <nl> field public static int <unk> ; <nl> field public static int <unk> ; <nl> field ( ) ; <nl> ; <nl> public public static static int <unk> ; <nl> field public static int <unk> ; <nl> field public static int <unk> ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in
====NEW EXAMPLE====
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / filter - <unk> . txt <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / filter - <unk> . txt <nl> don don <unk> <nl> don do <unk> <nl> <unk> have md <nl> <unk> have <unk> <nl> \ no newline at end of file <nl> <unk> <unk> nn <nl> shouldn <unk> md <nl> wouldn will md <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / filter - <unk> . txt <nl> don don <unk> <nl> don do <unk> <nl> <unk> have md <nl> <unk> have <unk> <nl> \ no newline at end of file <nl> <unk> <unk> nn <nl> shouldn <unk> md <nl> wouldn will will <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / filter - <unk> . txt <nl> don don <unk> <nl> don do <unk> <nl> <unk> have md <nl> <unk> have <unk> <nl> \ no newline at end of file <nl> <unk> <unk> nn <nl> shouldn <unk> md <nl> wouldn will md md <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / filter - <unk> . txt <nl> don don <unk> <nl> don do <unk> <nl> <unk> have md <nl> <unk> have <unk> <nl> \ no newline at end of file <nl> <unk> <unk> nn <nl> shouldn <unk> md <nl> wouldn will <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> changelog <nl> * * next version * * <nl>
ppp b / readme . md <nl> changelog <nl>
ppp b / readme . md <nl> changelog <nl> * *
ppp b / readme . md <nl> changelog <nl> * * next version * * <nl> * filter usage data by restricted <nl> * display icon for restricted usage usage <nl> * updated simplified chinese translation <nl> icon icon for restricted data <nl> * * version 1 . 7 . 10 * * <nl>
ppp b / readme . md <nl> changelog <nl> * * next version * * <nl> * filter usage data by restricted <nl> * display icon for restricted usage usage <nl> * updated simplified chinese translation <nl> icon icon for restricted data <nl> * * version 1 . 7 . 10 * * * <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> bin <nl> * ~ <nl>
ppp b / . gitignore <nl> bin <nl> * <nl>
ppp b / . gitignore <nl> bin <nl> * . <nl>
ppp b / . gitignore <nl> bin <nl>
ppp b / . gitignore <nl> bin <nl> <nl>
====NEW EXAMPLE====
ppp b / wiki . txt <nl> test auto push <nl> . <nl> public void asynchtml ( ) { <nl>
ppp b / wiki . txt <nl> test auto push <nl> . <nl> public void asynchtml ( ) <nl>
ppp b / wiki . txt <nl> test auto push <nl> . <nl> public void asynchtml ( ) ) <nl>
ppp b / wiki . txt <nl> test auto push <nl> . <nl> public void asynchtml ( ) ; <nl>
ppp b / wiki . txt <nl> test auto push <nl> . <nl> public void asynchtml ( ) { <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - store . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - store / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / source / com / intellij / find / impl / <unk> . java <nl> public class <unk> { <nl> } <nl> public virtualfile [ ] getfiles ( ) { <nl> throw ) ; <nl> } <nl> public string getname ( ) { <nl>
ppp b / source / com / intellij / find / impl / <unk> . java <nl> public class <unk> { <nl> } <nl> public virtualfile [ ] getfiles ( ) { <nl> throw ; <nl> } <nl>
ppp b / source / com / intellij / find / impl / <unk> . java <nl> public class <unk> { <nl> } <nl> public virtualfile [ ] getfiles ( ) { <nl> throw ) ; <nl> } <nl>
ppp b / source / com / intellij / find / impl / <unk> . java <nl> public class <unk> { <nl> } <nl> public virtualfile [ ] getfiles ( ) { <nl> throw ) ; <nl> } <nl> public string getname ( ) ) <nl>
ppp b / source / com / intellij / find / impl / <unk> . java <nl> public class <unk> { <nl> } <nl> public virtualfile [ ] getfiles ( ) { <nl> throw ) ; <nl> } <nl> public string getname ( ) <nl>
====NEW EXAMPLE====
ppp b / spock - grails / application . properties <nl> # wed may 12 00 : 50 : 30 <unk> + 00 : 00 <nl>
ppp b / spock - grails / application . properties <nl> # wed may 12 00 : 50 : 30 <unk> + 00 : 00 2010 <nl>
ppp b / spock - grails / application . properties <nl>
ppp b / spock - grails / application . properties <nl> #
ppp b / spock - grails / application . properties <nl> # wed may 12 00 : 50 : 30 <unk> + 00 : 00 2010 <nl> app . grails . version = 1 . 3 . 4 <nl> app . name = spock - grails <nl> plugins . hibernate = 1 . 2 . 0 . 0 . 0 . 1 . 1 . = 1 . 2 . 0 <nl> plugins . tomcat = 1 . 2 . 2 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> matrix : <nl> script : mvn verify $ target - pintegration <nl> after_success : <nl> mvn mvn clean cobertura : cobertura coveralls : report - pintegration <nl>
ppp b / . travis . yml <nl> matrix : <nl> script : mvn verify $ target - pintegration <nl> after_success : <nl> mvn mvn clean cobertura : cobertura coveralls : report - <nl>
ppp b / . travis . yml <nl> matrix : <nl> script : mvn verify $ target - pintegration <nl> after_success : <nl> mvn mvn clean cobertura : cobertura coveralls : report pintegration <nl>
ppp b / . travis . yml <nl> matrix : <nl>
ppp b / . travis . yml <nl> matrix : <nl> script : mvn verify $ target - pintegration <nl> after_success : <nl> mvn mvn clean cobertura : cobertura coveralls : report - openjdk8 <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * <nl>
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl> * storm - issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl> * * version 1 . 10 . 41 beta * * <nl>
ppp b
====NEW EXAMPLE====
ppp b
ppp

ppp b / buildsrc / build . gradle <nl> extraarchive { <nl> javadoc = false <nl> tests = false <nl> } <nl> if ( ) { <nl> mailing ( ) { cmake_current_source_dir ( ) { <nl> / cmakeoverlay ( ) { <nl> } <nl> } <nl>
ppp b / buildsrc / build . gradle <nl> extraarchive { <nl> javadoc = false <nl> tests = false <nl> } <nl> if ( ) { <nl> mailing ( ) { cmake_current_source_dir ( ) { <nl> / cmakeoverlay ( ) { <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / h2o - scala / . gitignore <nl> . cache <nl>
ppp b / h2o - scala / . gitignore <nl> . cache <nl> *
ppp b / h2o - scala / . gitignore <nl> . <nl>
ppp b / h2o - scala / . gitignore <nl> . . <nl>
ppp b / h2o - scala / . gitignore <nl> . project <nl>
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> see for more information about xprivacy 3 [ this faq ] ( https : / / github . com / m66b / xpr <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / changelog . md <nl> see for more information about xprivacy 3 [ this faq ] ( https : / / github . com / m66b / xpr <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = ) <nl>
ppp b / changelog . md <nl> see for more information about xprivacy 3 [ this faq ] ( https : / / github . com / m66b / xpr <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open <nl>
ppp b / changelog . md <nl> see for more information about xprivacy 3 [ this faq ] ( https : / / github . com / m66b / xpr <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open open <nl>
ppp b / changelog . md <nl> see for more information about xprivacy 3 [ this faq ] ( https : / / github . com / m66b / xpr <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) ) <nl>
====NEW EXAMPLE====
ppp b / ignition - ui / default . properties <nl> # project structure . <nl> # project target . <nl> target = android - 3 <nl> android . library = true <nl>
ppp b / ignition - ui / default . properties <nl> # project structure . <nl> # project target . <nl> target = android - 3 <nl> android . library = true <nl> <nl>
ppp b / ignition - ui / default . properties <nl> # project structure . <nl> # project target . <nl> target = android - 3 <nl> android . library = = <nl>
ppp b / ignition - ui / default . properties <nl> # project structure . <nl> # project target . <nl> target = android - 3 <nl> android . library = true true <nl>
ppp b / ignition - ui / default . properties <nl> # project structure . <nl> # project target . <nl> target = android - 3 <nl> android . library =
====NEW EXAMPLE====
ppp b / portal - impl / src / com / liferay / portal / verify / <unk> . java <nl> public class <unk> extends verifyprocess { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> protected void <unk> ( ) throws exception { <nl>
ppp b / portal - impl / src / com / liferay / portal / verify / <unk> . java <nl> public class <unk> extends verifyprocess { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> protected void <unk> ( ) throws { <nl>
ppp b / portal - impl / src / com / liferay / portal / verify / <unk> . java <nl> public class <unk> extends verifyprocess { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> protected void <unk> ( ) throws exception <nl>
ppp b / portal - impl / src / com / liferay / portal / verify / <unk> . java <nl> public class <unk> extends verifyprocess { <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> protected void <unk> ( ) throws exception { <nl> <nl>
ppp b / portal - impl / src / com / liferay / portal / verify / <unk> . java <nl>
====NEW EXAMPLE====
ppp b / src / com / goide / <unk> . java <nl>
ppp b / src / com / goide / <unk> . java
ppp b / src / com / goide / <unk> . java <nl> public class <unk> extends language { <nl> public <unk> <unk> ( ) { <nl> return <unk> . instance ; <nl> } <nl> } <nl> public string tostring ( ) { <nl> <unk> ( ) ; <nl> } <nl> } <nl>
ppp b / src / com / goide / <unk> . java <nl> public class <unk> extends language { <nl> public <unk> <unk> ( ) { <nl> return <unk> . instance ; <nl> } <nl> } <nl> public string tostring ( ) { <nl> margin ( ) ; <nl> } <nl> } <nl>
ppp b / src / com / goide / <unk> . java <nl> public class <unk> extends language { <nl> public <unk> <unk> ( ) { <nl> return <unk> . instance ; <nl> } <nl> } <nl> public string tostring ( ) { ( ) { ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> / elasticsearch / target <nl>
ppp b / . gitignore <nl> / elasticsearch / target / <nl>
ppp b / . gitignore <nl> /
ppp b / . gitignore <nl> / elasticsearch / target <nl> <nl>
ppp b / . gitignore <nl> / elasticsearch / <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 02c30e7b9805e503ec1e2b86de26f4ddedd6cc12 <nl> mode = push <nl> parent = 3ce64dfd5557dffe79274b76e8ac7902a6dc9f6d <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / export - import / . <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / coyote / http11 / abstracthttp11processor . java <nl> public abstract class abstracthttp11processor < s > extends abstractprocessor < s > { <nl> request . <unk> ( <unk> . error_exception , x ) ; <nl> } <nl> catch catch ( illegalstateexception x ) { <nl> <unk> ( false , true ) ; <nl> } <nl> } <nl>
ppp b / java / org / apache / coyote / http11 / abstracthttp11processor . java <nl> public abstract class abstracthttp11processor < s > extends abstractprocessor < s > { <nl> request . <unk> ( <unk> . error_exception , x ) ; <nl> } <nl> catch catch ( illegalstateexception x ) { <nl> <unk> ( false , true ) ; <nl> } <nl>
ppp b / java / org / apache / coyote / http11 / abstracthttp11processor . java <nl> public abstract class abstracthttp11processor < s > extends abstractprocessor < s > { <nl> request . <unk> ( <unk> . error_exception , x ) ; <nl> } <nl> catch catch ( illegalstateexception x ) { <nl> <unk> ( false , true ) ; <nl> } <nl> <nl>
ppp b / java / org / apache / coyote / http11 / abstracthttp11processor . java <nl> public abstract class abstracthttp11processor < s > extends abstractprocessor < s > { <nl> request . <unk> ( <unk> . error_exception , x ) ; <nl> } <nl> catch catch ( illegalstateexception x ) { <nl> <unk> ( false , true ) ; <nl> } <nl> }
ppp b / java / org / apache / coyote / http11 / abstracthttp11processor . java <nl> public abstract class abstracthttp11processor < s > extends abstractprocessor < s > { <nl> request . <unk> ( <unk> . error_exception , x ) ; <nl> } <nl> catch catch ( illegalstateexception x ) { <nl> <unk> ( false , true ) ; <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < exclude > * * / response $ < / exclude > <nl> < exclude > * * / nettyresponsefuture < / exclude > <nl> < exclude > * * / * * responsebodypart < / exclude > <nl>
ppp b / pom . xml <nl> < exclude > * * / response $ < / exclude > <nl>
ppp b / pom . xml <nl> < exclude > * *
ppp b / pom . xml <nl> < exclude > * * / response $ < / exclude <nl>
ppp b / pom . xml <nl> < exclude > * * / response $ < / exclude >
====NEW EXAMPLE====
ppp b / advanced / ha / src / main / java / org / neo4j / kernel / ha / <unk> . java <nl> public class <unk> implements <unk> <nl> <unk> . clear ( ) ; <nl> } <nl> } <nl>
ppp b / advanced / ha / src / main / java / org / neo4j / kernel / ha / <unk> . java <nl> public class <unk> implements <unk> <nl> <unk> . clear ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / advanced / ha / src / main / java / org / neo4j / kernel / ha / <unk> . java <nl> public class <unk> implements <unk> <nl> <unk> . clear ( ) ; <nl> } <nl> } <nl> <nl>
ppp b / advanced / ha / src / main / java / org / neo4j / kernel / ha / <unk> . java <nl> public class <unk> implements <unk> <nl> <unk> . clear ( ) ; <nl> } <nl> } <nl> { <nl>
ppp b / advanced / ha / src / main / java / org / neo4j / kernel / ha / <unk> . java <nl> public class <unk> implements <unk> <nl> <unk> . clear ( ) ; <nl> } <nl> } <nl> } <nl> finally <nl>
====NEW EXAMPLE====
ppp b / util - taglib / src / com / liferay / taglib / ui / <unk> . java <nl> public class <unk> extends includetag { <nl> <unk> = 0 ; <nl> } <nl> @ override <nl> protected string <unk> ( ) { <nl> return <unk> ; <nl> } <nl>
ppp b / util - taglib / src / com / liferay / taglib / ui / <unk> . java <nl> public class <unk> extends includetag { <nl> <unk> = 0 ; <nl> } <nl> @ override <nl> protected string <unk> ( ) { <nl> return <unk> ; <nl> <nl>
ppp b / util - taglib / src / com / liferay / taglib / ui / <unk> . java <nl>
ppp b / util - taglib / src / com / liferay / taglib / ui / <unk> . java <nl> public class <unk> extends includetag { <nl> <unk> = 0 ; <nl> } <nl> @ override <nl> protected string <unk> ( ) { <nl> return <unk> ; <nl> }
ppp b / util - taglib / src / com / liferay / taglib / ui / <unk> . java <nl> public class <unk> extends includetag { <nl> <unk> = 0 ; <nl> } <nl> @ override <nl> protected string <unk> ( ) { <nl> return <unk> ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / packaging / server / pom . xml <nl> < dependency > <nl> < groupid > com . tinkerpop < / groupid > <nl> < artifactid > gremlin < / artifactid > <nl> < version > 0 . 7 < / version > <nl> < type > jar < / type > <nl> < exclusions > <nl> < exclusion > <nl>
ppp b / packaging / server / pom . xml <nl> < dependency > <nl> < groupid > com . tinkerpop < / groupid > <nl> < artifactid > gremlin < / artifactid > <nl> < version > 0 . 7 < / version > <nl> < type > jar < / type > <nl> < exclusions > <nl> < exclusion <nl>
ppp b / packaging / server / pom . xml <nl> < dependency > <nl> < groupid > com . tinkerpop < / groupid > <nl> < artifactid > gremlin < / artifactid > <nl> < version > 0 . 7 < / version > <nl> < type > jar < / type > <nl> < exclusions > <nl> < > <nl>
ppp b / packaging / server / pom . xml <nl> < dependency > <nl> < groupid > com . tinkerpop < / groupid > <nl> < artifactid > gremlin < / artifactid > <nl> < version > 0 . 7 < / version > <nl> < type > jar < / type > <nl> < exclusions > <nl> < exclusion exclusion <nl>
ppp b / packaging / server / pom . xml <nl> < dependency > <nl> < groupid > com . tinkerpop < / groupid > <nl> < artifactid > gremlin < / artifactid > <nl> < version > 0 . 7 < / version > <nl> < type > jar < / type > <nl> < exclusions > <nl>
====NEW EXAMPLE====
ppp b / js / js . libraries / src / core / core . kt <nl>
ppp b / js / js . libraries / src / core / core . kt <nl> library <nl>
ppp b / js / js . libraries / src / core / core . kt <nl> <nl>
ppp b / js / js . libraries / src / core / core . <nl>
ppp b / js / js . libraries / src / core / core . kt <nl> library <nl> public fun <unk> ( s : string ) : int ? = noimpl <nl> library <nl> public fun <unk> ( s : string ) : \ no newline at end of file <nl> <unk> <unk> ( s : string ) : double ? = noimpl <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a735788f63d5e9a2ac3653217d5d9ef3db9b6744 <nl> mode = push <nl> parent = e468d5c16b43c64415b1e3a6ebe6c1d76c25f76f <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / . idea / compiler . xml <nl> < / profile > <nl> < / <unk> > <nl>
ppp b / . idea / compiler . xml <nl> < / profile > <nl> < / <unk> > <nl> <
ppp b / . idea / compiler . xml <nl> < / profile > <nl> < / <unk> > <nl> < /
ppp b / . idea / compiler . xml <nl> < / profile > <nl> < / <unk> <nl>
ppp b / . idea / compiler . xml <nl> < / profile > <nl> < / > <nl>
====NEW EXAMPLE====
ppp b / plugins / svn4idea / src / org / jetbrains / idea / svn / actions / <unk> . java <nl>
ppp b / plugins / svn4idea / src / org / jetbrains / idea / svn / actions / <unk> . <nl>
ppp b / plugins / svn4idea / src / org / jetbrains / idea / svn / actions / <unk> . java <nl> public class <unk> extends <unk> <nl>
ppp b / plugins / svn4idea / src / org / jetbrains / idea / svn / actions / <unk> . java <nl> public class <unk> extends <unk> { <nl> } catch ( <unk> e ) { <nl> error [ 0 ] = e ; <nl> } finally { <nl> <unk> ( <unk> ( ) ; <nl> <unk> ( . <unk> ( ) ; <nl> } <nl> } <nl>
ppp b / plugins / svn4idea / src / org / jetbrains / idea / svn / actions / <unk> . java <nl> public class <unk> extends <unk> { <nl> } catch ( <unk> e ) { <nl> error [ 0 ] = e ; <nl> } finally { <nl> <unk> ( <unk> ( ) ; <nl> <unk> ( . <unk> ( ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / portal - service / src / com / liferay / portal / kernel / servlet / <unk> . java <nl> public class <unk> { <nl> return true ; <nl> } <nl> } <nl> catch ( <unk> <unk> ) { <nl> } <nl> return false ; <nl>
ppp b / portal - service / src / com / liferay / portal / kernel / servlet / <unk> . java <nl> public class <unk> { <nl> return true ; <nl> } <nl> } <nl> catch ( <unk> <unk> ) { <nl> } <nl> return false ; ; <nl>
ppp b / portal - service / src / com / liferay / portal / kernel / servlet / <unk> . java <nl> public class <unk> { <nl> return true ; <nl> } <nl> } <nl> catch ( <unk> <unk> ) { <nl> } <nl> return false false ; <nl>
ppp b / portal - service / src / com / liferay / portal / kernel / servlet / <unk> . java <nl> public class <unk> { <nl> return true ; <nl> } <nl> } <nl> catch ( <unk> <unk> ) { <nl> } <nl> return false ; <nl> <nl>
ppp b / portal - service / src / com / liferay / portal / kernel / servlet / <unk> . java <nl> public class <unk> { <nl> return true ; <nl> } <nl> } <nl> catch ( <unk> <unk> ) { <nl> } <nl> return false ;
====NEW EXAMPLE====
ppp b / build . gradle <nl> publishing { <nl> } <nl> publications { <nl> shadow ( mavenpublication ) { <nl> groupid ' org . javarepl ' <nl> artifactid ' javarepl ' <nl> from components . shadow <nl> } <nl>
ppp b / build . gradle <nl> publishing { <nl> } <nl> publications { <nl> shadow ( mavenpublication ) { <nl> groupid ' org . javarepl ' <nl> artifactid ' javarepl ' <nl> from components . shadow <nl> <nl>
ppp b / build . gradle <nl> publishing { <nl> } <nl> publications { <nl> shadow ( mavenpublication ) { <nl> groupid ' org . javarepl ' <nl> artifactid ' javarepl ' <nl> from components . shadow <nl> } <nl> <nl>
ppp b / build . gradle <nl> publishing { <nl> } <nl> publications { <nl> shadow ( mavenpublication ) { <nl> groupid ' org . javarepl ' <nl> artifactid ' javarepl ' <nl> from components . shadow <nl> }
ppp b / build . gradle <nl> publishing { <nl> } <nl> publications { <nl> shadow ( mavenpublication ) { <nl> groupid ' org . javarepl ' <nl> artifactid ' javarepl ' <nl> from components . shadow <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / parent > <nl> < groupid > ch . acra < / groupid > <nl> < artifactid > acra < / artifactid > <nl> < version > 4 . 6 . - < / version > <nl> < name > application crash report for android < / name > <nl>
ppp b / pom . xml <nl> < / parent > <nl> < groupid > ch . acra < / groupid > <nl> < artifactid > acra < / artifactid > <nl> < version > 4 . 6 . - < / version > <nl> < name > application crash report for android < / > <nl>
ppp b / pom . xml <nl> < / parent > <nl> < groupid > ch . acra < / groupid > <nl> < artifactid > acra < / artifactid > <nl> < version > 4 . 6 . - < / version > <nl> < name > application crash report for android < / name <nl>
ppp b / pom . xml <nl> < / parent > <nl> < groupid > ch . acra < / groupid > <nl> < artifactid > acra < / artifactid > <nl> < version > 4 . 6 . - < / version > <nl> < name > application crash report for android < / name > <nl> > <nl>
ppp b / pom . xml <nl> < / parent > <nl> < groupid > ch . acra < / groupid > <nl> < artifactid > acra < / artifactid > <nl> < version > 4 . 6 . - < / version > <nl> < name > application crash report for android < / name name <nl>
====NEW EXAMPLE====
ppp b / hadoop - yarn - project / changes . txt <nl> release 2 . 3 . 0 - unreleased <nl> ( <unk> <unk> via <unk> <unk> ) <nl> yarn - <unk> . the context of <unk> becomes default when using <nl> fairscheduler ( <unk> <unk> via <unk> <unk> ) <nl> release 2 . 2 . 0 - unreleased <nl>
ppp b / hadoop - yarn - project / changes . txt <nl> release 2 . 3 . 0 - unreleased <nl> ( <unk> <unk> via <unk> <unk> ) <nl> yarn - <unk> . the context of <unk> becomes default when using <nl> fairscheduler ( <unk> <unk> via <unk> <unk> ) <nl> release 2 . 2 . 0 - <nl>
ppp b / hadoop - yarn - project / changes . txt <nl> release 2 . 3 . 0 - unreleased <nl> ( <unk> <unk> via <unk> <unk> ) <nl> yarn - <unk> . the context of <unk> becomes default when using <nl> fairscheduler ( <unk> <unk> via <unk> <unk> ) <nl> release 2 . 2 . 0 unreleased <nl>
ppp b / hadoop - yarn - project / changes . txt <nl> release 2 . 3 . 0 - unreleased <nl> ( <unk> <unk> via <unk> <unk> ) <nl> yarn - <unk> . the context of <unk> becomes default when using <nl> fairscheduler ( <unk> <unk> via <unk> <unk> ) <nl> release 2 . 2 . 0 - - <nl>
ppp b / hadoop - yarn - project / changes . txt <nl> release 2 . 3 . 0 - unreleased <nl> ( <unk> <unk> via <unk> <unk> ) <nl> yarn - <unk> . the context of <unk> becomes default when using <nl> fairscheduler ( <unk> <unk> via <unk> <unk> ) <nl> release 2 . 2 . 0 0 <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 2 . 2 ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 2 . 2 ' <nl> } <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 2 . 2 ' <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 2 . 2 ' <nl> } <nl> }
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 2 . 2 ' <nl> } <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> task <unk> ( type : copy ) { <nl> } <nl>
ppp b / build . gradle <nl> task <unk> ( type : copy ) { <nl>
ppp b / build . gradle <nl> task <unk> ( type : copy ) { <nl> } <nl> <nl>
ppp b / build . gradle <nl> task <unk> ( type : copy ) { <nl> } <nl> } <nl>
ppp b / build . gradle <nl> task <unk> ( type : copy ) { <nl> }
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> the
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool
====NEW EXAMPLE====
ppp b / bin / startgrails <nl> lateinit <nl> startgrails (
ppp b / bin / startgrails <nl> lateinit <nl>
ppp b / bin / startgrails <nl> lateinit <nl> startgrails ( ) { <nl> class = $ 1 <nl> shift <nl> \ no newline at end of file <nl> <nl> # start the profiler or the jvm <nl> <nl> $ $ useprofiler ; then then <nl> runprofiler <nl>
ppp b / bin / startgrails <nl> lateinit <nl> startgrails ( ) { <nl> class = $ 1 <nl> shift <nl> \ no newline at end of file <nl> <nl> # start the profiler or the jvm <nl> <nl> $ $ useprofiler ; then then <nl> <nl>
ppp b / bin / startgrails <nl> lateinit <nl> startgrails ( ) { <nl> class = $ 1 <nl> shift <nl> \ no newline at end of file <nl> <nl> # start the profiler or the jvm <nl> <nl> $ $ useprofiler ; then then <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 274 : add support for command remoteconfvalue in storm . cmd <nl>
ppp b / changelog . md <nl> * storm - 274 : add support for command remoteconfvalue in storm . <nl>
ppp b / changelog . md <nl> * storm - 274 : add support for command remoteconfvalue in storm . cmd <nl> * storm - 132 : sort supervisor by free slot in desending order <nl> * storm - <unk> : improve error message for non - <unk> testing spouts <nl> * updated french translation * updated german translation <nl> # # 0 . 9 . . 2 incubating <nl> * storm - 66 : send taskid on initial handshake <nl>
ppp b / changelog . md <nl> * storm - 274 : add support for command remoteconfvalue in storm . cmd <nl> * storm - 132 : sort supervisor by free slot in desending order <nl> * storm - <unk> : improve error message for non - <unk> testing spouts <nl> * updated french translation * updated german translation <nl> # # 0 . 9 . . 2 incubating <nl> * storm - 66 : send taskid on initial <nl>
ppp b / changelog . md <nl> * storm - 274 : add support for command remoteconfvalue in storm . cmd <nl> * storm - 132 : sort supervisor by free slot in desending order <nl> * storm - <unk> : improve error message for non - <unk> testing spouts <nl> * updated french translation * updated german translation <nl> # # 0 . 9 . . 2 incubating <nl> * storm - 66 : send taskid on handshake <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * better method for <unk> the bluetooth <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * better method for <unk> the bluetooth manager <nl>
ppp b / changelog . md <nl> test and beta releases will
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - settings . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - settings / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / media / libstagefright / <unk> . cpp <nl> void <unk> : : reset_l ( ) { <nl> <unk> . <unk> . clear ( ) ; <nl> } <nl> } <nl> @ suppresswarnings ( ) ; <nl> } <nl> } <nl> void <unk> : : <unk> ( int msg , int <unk> , int <unk> ) { <nl>
ppp b / media / libstagefright / <unk> . cpp <nl> void <unk> : : reset_l ( ) { <nl>
ppp b / media / libstagefright / <unk> . cpp <nl> void <unk> : : reset_l ( ) { <nl> <unk> . <unk> . clear ( ) ; <nl> } <nl> } <nl> @ suppresswarnings ( ) ; <nl> } <nl> } <nl> void <unk> : : <unk> ( int msg , int <unk> , int <unk> ) <nl>
ppp b / media / libstagefright / <unk> . cpp <nl>
ppp b / media / libstagefright / <unk> . cpp <nl> void <unk> : : reset_l ( ) { <nl> <unk> . <unk> . clear ( ) ; <nl> } <nl> } <nl> @ suppresswarnings ( ) ; <nl> } <nl> } <nl> void <unk> : : <unk> ( int msg , int <unk> , int <unk> { <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 18 . 0 ' <nl> nettyversion = ' 4 . 0 . 29 . final ' <nl> slf4jversion = ' 1 . 7 . 12 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 6 . 0 ' <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 18 . 0 ' <nl> nettyversion = ' 4 . 0 . 29 . final ' <nl> slf4jversion = ' 1 . 7 . 12 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 6 . 0 <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 18 . 0 ' <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 18 . 0 ' <nl> nettyversion = ' 4 . 0 . 29 . final ' <nl> slf4jversion = ' 1 . 7 . 12 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 6 . ' <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 18 . 0 ' <nl> nettyversion = ' 4 . 0 . 29 . final ' <nl> slf4jversion = ' 1 . 7 . 12 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 6 . 0 0 <nl>
====NEW EXAMPLE====
ppp b / python / helpers / pycharm / <unk> . py <nl> if not <unk> : <nl> if __name__ = = " __main__ " : <nl> <unk> ( ( ) <nl> <unk> ( <unk> ) <nl> <unk> ( <unk> , none , ' __main__ ' ) <nl>
ppp b / python / helpers / pycharm / <unk> . py <nl> if not <unk> : <nl>
ppp b / python / helpers / pycharm / <unk> . py <nl> if not <unk> : <nl> if __name__ = = " __main__ " : <nl> <unk> ( ( ) <nl> <unk> ( <unk> ) <nl> <unk> ( <unk> , none , ' __main__ ' ) ) <nl>
ppp b / python / helpers / pycharm / <unk> . py <nl> if not <unk> : <nl> if __name__ = = " __main__ " : <nl> <unk> ( ( ) <nl> <unk> ( <unk> ) <nl> <unk> ( <unk> , none , ' __main__ ' ' <nl>
ppp b / python / helpers / pycharm / <unk> . py <nl> if not <unk> : <nl> if __name__ = = " __main__ " : <nl> <unk> ( ( ) <nl> <unk> ( <unk> ) <nl> <unk> ( <unk> , none , ' __main__ ' <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> gen / <nl> local . properties <nl> # mac . ds_store files <nl> . ds_store <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> gen / <nl> local . properties <nl> # mac . ds_store files <nl> . ds_store <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> gen / <nl> local . properties <nl> # mac . ds_store files <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> gen / <nl> local . properties <nl> # mac . ds_store files <nl> ds_store <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> gen / <nl> local . properties <nl> # mac . ds_store files <nl> . ds_store <nl> no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 24cc5f6fa38b1b89c77218303b72930bd19562a3 <nl> mode = push <nl> parent = e29e6de0a1a2b343dcd39f7f36cd08881991e2ba <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> cache : <nl> directories : <nl>
ppp b / . travis . yml <nl> cache : <nl> directories : <nl> <nl>
ppp b / . travis . yml <nl> cache : <nl> directories
ppp b / . travis . yml <nl> cache : <nl>
ppp b / . travis . yml <nl> cache : <nl> directories : <nl> : <nl>
====NEW EXAMPLE====
ppp b / build / packaged . dependencies <nl> mvn : org . fusesource . jansi : jansi : jar : 1 . 11 <nl>
ppp b / build / packaged . dependencies <nl> mvn : org . fusesource . jansi : jansi : jar : 1 . . <nl>
ppp b / build / packaged . dependencies <nl> mvn : org . fusesource . jansi : jansi : jar : 1 . <nl>
ppp b / build / packaged . dependencies <nl> mvn : org . fusesource . jansi : jansi : jar : 1 . 11 11 <nl>
ppp b / build / packaged . dependencies <nl> mvn : org . fusesource . jansi : jansi : jar : 1 . 1 <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> android { <nl> compilesdkversion 19 <nl>
ppp b / build . gradle <nl> android { <nl>
ppp b / build . gradle <nl> android {
ppp b / build . gradle <nl> android { <nl> compilesdkversion 19 <nl> buildtoolsversion " 19 . 0 . 0 " <nl> sourcesets & & & & & & & & <nl> sourcesets { <nl> main main { <nl> manifest . srcfile ' rebound - android / src / main / androidmanifest . xml ' <nl>
ppp b / build . gradle <nl> android { <nl> compilesdkversion 19 <nl> buildtoolsversion " 19 . 0 . 0 " <nl> sourcesets & & & & & & & & <nl> sourcesets { <nl> main main { <nl> manifest . srcfile ' rebound - android / src / main / androidmanifest . xml ' ' <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle gradle <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl>
====NEW EXAMPLE====
ppp b / dropwizard - core / src / main / java / com / yammer / dropwizard / config / <unk> . java <nl> public class <unk> { <nl> @ jsonproperty <nl> private boolean enabled = false ; <nl> @ jsonproperty <nl> private string filenamepattern = " . / logs / <unk> . log " ; <nl>
ppp b / dropwizard - core / src / main / java / com / yammer / dropwizard / config / <unk> . java <nl> public class <unk> { <nl> @ jsonproperty <nl> private boolean enabled = false ; <nl> @ jsonproperty <nl> private string filenamepattern = " . / logs / <unk> . log ; <nl>
ppp b / dropwizard - core / src / main / java / com / yammer / dropwizard / config / <unk> . java <nl> public class <unk> { <nl> @ jsonproperty <nl> private boolean enabled = false ; <nl> @ jsonproperty <nl> private string filenamepattern = " . / logs / <unk> . log " <nl>
ppp b / dropwizard - core / src / main / java / com / yammer / dropwizard / config / <unk> . java <nl> public class <unk> { <nl> @ jsonproperty <nl> private boolean enabled = false ; <nl> @ jsonproperty <nl> private string filenamepattern = " . / logs / <unk> . log <nl>
ppp b / dropwizard - core / src / main / java / com / yammer / dropwizard / config / <unk> . java <nl> public class <unk> { <nl> @ jsonproperty <nl> private boolean enabled = false ; <nl> @ jsonproperty <nl> private string filenamepattern = " . / logs / <unk> . log log <nl>
====NEW EXAMPLE====
ppp b / preloaded - classes <nl> javax . microedition . khronos . <unk> . <unk> <nl>
ppp b / preloaded - classes <nl> javax . microedition . khronos . <unk> . <unk> <nl> javax . microedition . khronos . <unk> . <unk> <nl>
ppp b / preloaded - classes <nl> javax . microedition . khronos . <unk> . <unk> <nl> javax . microedition . khronos . <unk> . <unk> <nl> javax . net . <unk> <nl> javax . net . socketfactory <nl>
ppp b / preloaded - classes <nl> javax . microedition . khronos . <unk> . <unk> <nl> javax . microedition . khronos . <unk> . <unk> <nl> javax . net . <unk> <nl>
ppp b / preloaded - classes <nl> javax . microedition . khronos
====NEW EXAMPLE====
ppp b / source / com / intellij / ide / <unk> / <unk> . java <nl>
ppp b / source / com / intellij / ide / <unk> / <unk> . <nl>
ppp b / source / com / intellij / ide / <unk> / <unk> . java <nl> public class <unk> extends jpanel implements jdomexternalizable , <unk> <nl> } <nl> public void dispose ( ) { <nl> <unk> ( ) & & & & & & & getinstance ( myproject ) . <unk> <unk> ) ; <nl> <unk> . getinstance ( myproject ) . <unk> ( <unk> ) ; <nl> } <nl>
ppp b / source / com / intellij / ide / <unk> / <unk> . java <nl> public class <unk> extends jpanel implements jdomexternalizable , <unk> <nl> } <nl> public void dispose ( ) { <nl> <unk> ( ) & & & & & & & getinstance ( myproject ) . <unk> <unk> ) ; <nl> <unk> . getinstance ( myproject ) . <unk> ( <unk> ) ; <nl>
ppp b / source / com / intellij / ide / <unk> / <unk> . java <nl> public class <unk> extends jpanel implements jdomexternalizable , <unk> <nl> } <nl> public void dispose ( ) { <nl> <unk> ( ) & & & & & & & getinstance ( myproject ) . <unk> <unk> ) ; <nl> <unk> . getinstance ( myproject ) . <unk> ( <unk> ) ; } <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk
====NEW EXAMPLE====
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> extends bytes { <nl> } <nl> } <nl>
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> extends bytes { <nl> } <nl> ; <nl>
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> extends bytes { <nl> } <nl> } ; <nl>
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> extends bytes { <nl> } <nl> } <nl> <nl>
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> extends bytes { <nl> } <nl>
====NEW EXAMPLE====
ppp b / library / build . gradle <nl> archivesbasename = ' android - maps - utils ' <nl>
ppp b / library / build . gradle <nl> archivesbasename = ' android - maps - utils ' <nl> group = ' com . google . maps . android ' <nl> dependencies { <nl> compile ' com . google . android . gms : play - services : 6 . 1 . 1 . 1 . <nl> } <nl>
ppp b / library / build . gradle <nl> archivesbasename = ' android - maps - utils ' <nl> group = ' com . google . maps . android ' <nl> dependencies { <nl> compile ' com . google . android . gms : play - services : 6 . 1 . 0 . 1 . <nl> } <nl>
ppp b / library / build . gradle <nl> archivesbasename = ' android - maps - utils ' <nl> group = ' com . google . maps . android ' <nl> dependencies { <nl> compile ' com . google . android . gms : play - services : 6 . 0 . 1 . 1 . <nl> } <nl>
ppp b / library / build . gradle <nl> archivesbasename = ' android - maps - utils ' <nl> group = ' com . google . maps . android ' <nl> dependencies { <nl> compile ' com . google . android . gms : play - services : 6 . 1 . 1 . 0 . <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / graylog2 - rest - client <nl> subproject commit <unk> <nl>
ppp b / modules / graylog2 - rest - client <nl> subproject commit fb3c754ea84cc38052f6e0eb280ecf42d3437705 <nl>
ppp b / modules / graylog2 - rest - client <nl> subproject commit 815fbba48677e40bff2c3c114c4ce8dd1e35bc17 <nl>
ppp b / modules / graylog2 - rest - client <nl> subproject commit da226240c46bcad376c540571fbd6cd81598cc9c <nl>
ppp b / modules / graylog2 - rest - client <nl> subproject commit e2e68b402986beba3778c8b4753d939d51066b20 <nl>
====NEW EXAMPLE====
ppp b / src / web / muc - server - props - edit - form . jsp <nl> < % } % > <nl> < p > <nl> the form below edit multi - user chat server properties . <nl> < / p > <nl>
ppp b / src / web / muc - server - props - edit - form . jsp <nl> < % } % > <nl> < p > <nl> the form below edit multi - user chat server properties <nl>
ppp b / src / web / muc - server - props - edit - form . jsp <nl>
ppp b / src / web / muc - server - props - edit - form . jsp <nl> < % } % > <nl> < p > <nl> the form below edit multi - user chat server properties . <nl>
ppp b / src / web / muc - server - props - edit - form . jsp <nl> < % } % > <nl> < p > <nl> the form below edit multi - user chat server properties . <nl> < / > <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> out <nl> * . iws <nl> . idea <nl> \ no newline at end of file <nl> . swp <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> out <nl> * . iws <nl> . idea <nl> \ no newline at end of file <nl> . swp <nl> \ no newline at of file <nl>
ppp b / . gitignore <nl> out <nl> * . iws <nl> . idea <nl> \ no newline at end of file <nl> . swp <nl> \ no newline at end <nl>
ppp b / . gitignore <nl> out <nl> * . iws <nl> . idea <nl> \ no newline at end of file <nl> . swp <nl> \ no newline end of file <nl>
ppp b / . gitignore <nl> out <nl> * . iws <nl> . idea <nl> \ no newline at end of file <nl> . swp <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / spongecommon <nl> subproject commit <unk> <nl>
ppp b / spongecommon <nl> subproject commit <nl>
ppp b / spongecommon <nl> subproject commit fba07bc558372a1f3bee80b837495cf6bf8e0a5a <nl>
ppp b / spongecommon <nl> subproject commit 4d400f5d7c8a766dfb079c915308a2eeccfc0f8b <nl>
ppp b / spongecommon <nl> subproject commit 7284da883104caf9c0fba821a69a12f5c4e15211 <nl>
====NEW EXAMPLE====
ppp b / py / h2o . py <nl> class h2o ( object ) : <nl>
ppp b / py / h2o . py <nl> class h2o (
ppp b / py / h2o . py <nl>
ppp b / py / h2o . py <nl> class h2o
ppp b / py / h2o . py <nl> class h2o ( object ) : <nl> timeout = timeoutsecs , <nl> <unk> = kwargs <nl> ) <nl> \ no newline at end of file creation doesn ' t we can be found instead of file <nl> ) <nl> h2o h2o . verboseprint ( " \ <unk> result : " , <unk> . . ( ( a ) ) <nl> return a <nl>
====NEW EXAMPLE====
ppp b

ppp
ppp b / version . txt <nl> jetty - 7 . 3 . 1 - snapshot <nl> 302344 and configurable the base cass fields <nl> 347617 dynamically assign rmi registry dynamically assign rmi registry dynamically assign rmi registry <nl> 340920 dynamically assign rmi registry <nl> 340920 dynamically assign rmi registry ( https : <nl>
ppp b / version . txt <nl> jetty - 7 . 3 . 1 - snapshot <nl> 302344 and configurable the base cass fields <nl> 347617 dynamically assign rmi registry dynamically assign rmi registry dynamically assign rmi registry <nl> 340920 dynamically assign rmi registry <nl> 340920 dynamically assign rmi registry dynamically assign rmi registry <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 141 - " <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> hs_err_pid * . log
ppp b / . gitignore <nl> hs_err_pid * . log <nl>
ppp b / . gitignore <nl> hs_err_pid * . log <nl> * . h2 . db <nl> # jboss transaction generated files <nl> putobjectstoredirhere <nl> * h2 databases produced : jobs <nl> } <nl>
ppp b / . gitignore <nl> hs_err_pid * . log <nl> * . h2 . db <nl> # jboss transaction generated files <nl> putobjectstoredirhere <nl> * h2 databases produced : updated_at <nl> } <nl>
ppp b / . gitignore <nl> hs_err_pid * . log <nl> * . h2 . db <nl> # jboss transaction generated files <nl> putobjectstoredirhere <nl> * h2 databases produced = " <nl> } <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl>
ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> shortversion = ' 4 . 0 . 2 ' <nl> issnapshot = false <nl> gitcommit = getgitcommit ( ) <nl> javadocalldir = new file ( builddir , ' javadoc ' ) <nl> documentationdir = new file ( projectdir , ' documentation ' ) <nl>
ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> shortversion = ' 4 . 0 . 2 ' <nl> issnapshot = false <nl> gitcommit = getgitcommit ( ) <nl> javadocalldir = new file ( builddir , ' javadoc ' ) <nl> documentationdir = new file ( projectdir , ' documentation ' <nl>
ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl>
ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> shortversion = ' 4 . 0 . 2 ' <nl> issnapshot = false <nl> gitcommit = getgitcommit ( ) <nl> javadocalldir = new file ( builddir , ' javadoc ' ) <nl> documentationdir = new file ( projectdir , ' documentation ' ' <nl>
====NEW EXAMPLE====
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . 52 <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . . <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . 52 <nl> <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . 52 52 <nl>
====NEW EXAMPLE====
ppp b / changelog . adoc <nl> enhancements : : <nl> bug fixes : : <nl> * fixes issue reading <unk> objects within the same bean . <nl> = = release 1 . 1 . 5 ( 2016 2016 - 05
ppp b / changelog . adoc <nl> enhancements : : <nl> bug fixes : : <nl> * fixes issue reading <unk> objects within the same bean . <nl> = = release 1 . 1 . 5 ( 2016 2016 -
ppp b / changelog . adoc <nl> enhancements : : <nl>
ppp b / changelog . adoc <nl> enhancements : : <nl> bug fixes : : <nl>
ppp b / changelog . adoc <nl> enhancements : <nl>
====NEW EXAMPLE====
ppp b / gradle / publish . gradle <nl> apply plugin
ppp b / gradle / publish . gradle <nl>
ppp b / gradle / publish . gradle <nl> apply
ppp b / gradle / publish . gradle <nl> apply plugin : ' com . jfrog . bintray ' <nl> bintray { <nl> \ no newline at end of file <nl> { <nl> user = ' szczepiq ' <nl> key = <unk> ( ) <nl>
ppp b / gradle / publish . gradle <nl> apply plugin : ' com . jfrog . bintray ' <nl> bintray { <nl> \ no newline at end of file <nl> { <nl> user = ' szczepiq ' <nl> key = <unk> ( ) ) <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e0d4c8460cc5d6a92cfabbe30713fde9453c1aa8 <nl> mode = push <nl> parent = 69f3c69723bd422a2234828fc3b3a7dc61821b98 <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / static / portal / portal - profile / bnd . bnd <nl> bundle - name : liferay portal profile <nl> bundle - symbolicname : com . liferay . portal . profile <nl> bundle - version : 1 . 0 . 4 <nl> export - package : com . liferay . portal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / static / portal / portal - profile / bnd . bnd <nl> bundle - name : liferay portal profile <nl> bundle - symbolicname : com . liferay . portal . profile <nl> bundle - version : 1 . 0 . 4 <nl> export - package : com . liferay . portal . profile <nl> \ no newline at end of file <nl>
ppp b / modules / apps / static / portal / portal - profile / bnd . bnd <nl> bundle - name : liferay portal profile <nl> bundle - symbolicname : com . liferay . portal . profile <nl> bundle - version : 1 . 0 . 4 <nl> export - package : com . liferay . portal . <nl> \ no newline at end of file <nl>
ppp b / modules / apps / static / portal / portal - profile / bnd . bnd <nl> bundle - name : liferay portal profile <nl> bundle - symbolicname : com . liferay . portal . profile <nl> bundle - version : 1 . 0 . 4 <nl> export - package : com . liferay . portal portal <nl> \ no newline at end of file <nl>
ppp b / modules / apps / static / portal / portal - profile / bnd . bnd <nl> bundle - name : liferay portal profile <nl> bundle - symbolicname : com . liferay . portal . profile <nl> bundle - version : 1 . 0 . 4 <nl> export - package : com . liferay . portal . . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / java / org / apache / cassandra / db / compaction / <unk> . java <nl> public class <unk> <nl> private final <unk> strategy ; <nl>
ppp b / src / java / org / apache / cassandra / db / compaction / <unk> . java <nl> public class <unk> <nl> private final <unk> strategy ; <nl> private final long <unk>
ppp b / src / java / org / apache / cassandra / db / compaction / <unk> . java <nl> public class <unk> <nl>
ppp b / src / java / org / apache / cassandra / db / compaction / <unk> . java <nl> public class <unk> <nl> private final <unk> strategy ; <nl> private final long
ppp b / src / java / org / apache / cassandra / db / compaction / <unk> . java <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> september 22 , 2012 <nl> * rule exception handlers <unk> ' t passed to the generated code <nl> * $ <unk> . foo <unk> ' t handled properly <nl> september 18 , 2012 - - 4 . <unk> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / changes . txt <nl> september 22 , 2012 <nl> * rule exception handlers <unk> ' t passed to the generated code <nl> * $ <unk> . foo <unk> ' t handled properly <nl> september 18 , 2012 - - 4 . git <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / changes . txt <nl> september 22 , 2012 <nl> * rule exception handlers <unk> ' t passed to the generated code <nl> * $ <unk> . foo <unk> ' t handled properly <nl> september 18 , 2012 - - 4 . . <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / changes . txt <nl> september 22 , 2012 <nl> * rule exception handlers <unk> ' t passed to the generated code <nl> * $ <unk> . foo <unk> ' t handled properly <nl> september 18 , 2012 - - 4 4 <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / changes . txt <nl> september 22 , 2012 <nl> * rule exception handlers <unk> ' t passed to the generated code <nl> * $ <unk> . foo <unk> ' t handled properly <nl> september 18 , 2012 - - 4 . <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / app / build . xml <nl> < property name = " generated " <nl>
ppp b / app / build . xml <nl> < property name = " generated <nl>
ppp b / app / build . xml <nl> < property name
ppp b / app / build . xml <nl>
ppp
====NEW EXAMPLE====
ppp b / build . gradle <nl> if ( ! project . hasproperty ( ' sonatyperepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 1 . 0 . 5 " <nl> group = " com . facebook . <unk> " <nl> configurations { <nl>
ppp b / build . gradle <nl> if ( ! project . hasproperty ( ' sonatyperepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 1 . 0 . 5 " <nl> group = " com . facebook . <unk> " <nl> configurations { { <nl>
ppp b / build . gradle <nl> if ( ! project . hasproperty ( ' sonatyperepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 1 . 0 . 5 " <nl> group = " com . facebook . <unk> " <nl> configurations configurations <nl>
ppp b / build . gradle <nl> if ( ! project . hasproperty ( ' sonatyperepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 1 . 0 . 5 " <nl> group = " com . facebook . <unk> " <nl>
ppp b / build . gradle <nl> if ( ! project . hasproperty ( ' sonatyperepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> version = " 1 . 0 . 5 " <nl> group = " com . facebook . <unk> " <nl> { <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout layout . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / com / fsck / k9 / activity / messagelist . java <nl> public class messagelist <nl> } <nl> class <unk> <unk> <nl> { <nl> public progressbar progress ; <nl> public textview main ; <nl>
ppp b / src / com / fsck / k9 / activity / messagelist . java <nl> public class messagelist <nl> } <nl> class <unk> <unk> <nl> { <nl> public progressbar progress ; <nl> public textview main ; <nl> <nl>
ppp b / src / com / fsck / k9 / activity / messagelist . java <nl> public class messagelist <nl> } <nl> class <unk> <unk> <nl> { <nl> public progressbar progress ; <nl> public textview main main <nl>
ppp b / src / com / fsck / k9 / activity / messagelist . java <nl> public class messagelist <nl> } <nl> class <unk> <unk> <nl> { <nl> public progressbar progress ; <nl> public textview main ; ; <nl>
ppp b / src / com / fsck / k9 / activity / messagelist . java <nl> public class messagelist <nl> } <nl> class <unk> <unk> <nl> { <nl> public progressbar progress ; <nl> public textview main main ; <nl>
====NEW EXAMPLE====
ppp b / debian / changelog <nl> cassandra ( 3 . 2 ) unstable ; urgency = medium medium <nl> * new release <nl>
ppp b / debian / changelog <nl> cassandra ( 3 . 2 ) unstable ; urgency = medium medium <nl> * new release
ppp b / debian / changelog <nl> cassandra ( 3 . 2 ) unstable ; urgency = medium medium <nl> * new
ppp b / debian / changelog <nl> cassandra ( 3
ppp b
====NEW EXAMPLE====
ppp b / project . xml <nl> < dependency > <nl> < groupid > classworlds < / groupid > <nl>
ppp b / project . xml <nl> < dependency > <nl>
ppp b / project . xml <nl> < dependency > <nl> < groupid > classworlds < / groupid > <nl> < artifactid > classworlds < / artifactid > <nl> < version > > 1 . 1 . 0 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > commons - cli < / groupid > <nl>
ppp b / project . xml <nl> < dependency > <nl> < groupid > classworlds < / groupid <nl>
ppp b / project . xml <nl> < dependency > <nl> < groupid > classworlds < / groupid > <nl> < artifactid > classworlds < / artifactid > <nl> < version > > 1 . 1 . 0 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > commons - cli < / > <nl>
====NEW EXAMPLE====
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl> packagename " com . battlelancer . seriesguide " <nl> versioncode 184 <nl> versionname " 9 - beta4 " <nl> } <nl> beta { <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl> packagename " com . battlelancer . seriesguide " <nl> versioncode 184 <nl> versionname " 9 - beta4 " <nl> } <nl> beta { <nl> <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl> packagename " com . battlelancer . seriesguide " <nl> versioncode 184 <nl> versionname " 9 - beta4 " <nl> } <nl> beta beta <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl> packagename " com . battlelancer . seriesguide " <nl> versioncode 184 <nl> versionname " 9 - beta4 " <nl> } <nl> beta { { <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl> packagename " com . battlelancer . seriesguide " <nl> versioncode 184 <nl> versionname " 9 - beta4 " <nl> } <nl>
====NEW EXAMPLE====
ppp b / guava / src / com / google / common / net / tldpatterns . java <nl> class tldpatterns { <nl> " xxx " , <nl> " <unk> " , <nl> " <unk> " , <nl> " ng " <nl> " " ng " <nl> ) ; <nl> / * * <nl>
ppp b / guava / src / com / google / common / net / tldpatterns . java <nl> class tldpatterns { <nl> " xxx " , <nl> " <unk> " , <nl> " <unk> " , <nl> " ng " <nl> " " ng " <nl> ) ; <nl> / * * <nl> <nl>
ppp b / guava / src / com / google / common / net / tldpatterns . java <nl> class tldpatterns { <nl> " xxx " , <nl> " <unk> " , <nl> " <unk> " , <nl> " ng " <nl> " " ng " <nl> ) ; <nl> / * *
ppp b / guava / src / com / google / common / net / tldpatterns . java <nl> class tldpatterns { <nl> " xxx " , <nl> " <unk> " , <nl> " <unk> " , <nl> " ng " <nl> " " ng " <nl> ) ; <nl>
ppp b / guava / src / com / google / common / net / tldpatterns . java <nl> class tldpatterns { <nl> " xxx " , <nl> " <unk> " , <nl> " <unk> " , <nl> " ng " <nl> " " ng " <nl> ) ; <nl> / * * * <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> notice that ultimaterecyclerview is a project under development . <nl>
ppp b / readme . md <nl> notice that ultimaterecyclerview
ppp b / readme . md <nl> notice that ultimaterecyclerview is a project under development . <nl> # # # upcoming features : <nl> * more animations <nl> * storm - of assert * updated lithuanian translation <nl> * <unk> style of swipe to refresh <nl> * . . . <nl> if you have some good idea , please <unk> us . my email is cymcsg # gmail . com <nl>
ppp b / readme . md <nl> notice that ultimaterecyclerview is a project under development . <nl> # # # upcoming features : <nl> * more animations <nl> * storm - of assert * updated lithuanian translation <nl> * <unk> style of swipe to refresh <nl> * . . . <nl> if you have some good idea , please <unk> us . my email is cymcsg # gmail com <nl>
ppp b / readme . md <nl> notice that ultimaterecyclerview is a project under development . <nl> # # # upcoming features : <nl> * more animations <nl> * storm - of assert * updated lithuanian translation <nl> * <unk> style of swipe to refresh <nl> * . . . <nl> if you have some good idea , please <unk> us . my email is cymcsg # gmail . <nl>
====NEW EXAMPLE====
ppp b / lucida / commandcenter / makefile <nl> <unk> : <nl> docker : <nl>
ppp b / lucida / commandcenter / makefile <nl> <unk> : <nl> docker <nl>
ppp b / lucida / commandcenter / makefile <nl> <unk> : <nl>
ppp b / lucida / commandcenter / makefile <nl> <unk> : <nl> docker : <nl> cp . . / <unk> . thrift . ; \ <nl> cp . . / <unk> . thrift . ; \ <nl> docker build - t <unk> . ; <nl> \ <unk> . thrift ; \ \ <nl> <unk> . thrift ; <nl>
ppp b / lucida / commandcenter / makefile <nl> <unk> <nl>
====NEW EXAMPLE====
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # java version <nl> javac . version = 1 . 6 <nl> # # scala version <nl> <unk> . version = 2 . 10 <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # java version <nl> javac . version = 1 . 6 <nl> # # scala version <nl> <unk> . version = 2 . <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # java version <nl> javac . version = 1 . 6 <nl> # # scala version <nl> <unk> . version = 2 . 10 <nl> <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # java version <nl> javac . version = 1 . 6 <nl> # # scala version <nl> <unk> . version = 2 . . <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # java version <nl> javac . version = 1 . 6 <nl> # # scala version <nl> <unk> . version = 2 . 10 10 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - remote . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit < / artifactid > <nl> < version > 4 . 8 . 1 < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl> < / dependency > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit < / artifactid > <nl> < version > 4 . 8 . 1 < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl> < / dependency > <nl> > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit < / artifactid > <nl> < version > 4 . 8 . 1 < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl> < / > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit < / artifactid > <nl> < version > 4 . 8 . 1 < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl> < / dependency <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit < / artifactid > <nl> < version > 4 . 8 . 1 < / version > <nl> < scope > compile < / scope > <nl> < optional > true < / optional > <nl>
====NEW EXAMPLE====
ppp b / src / main / java / com / j256 / ormlite / db / <unk> . java <nl>
ppp b / src / main / java / com / j256 / ormlite / db / <unk> . java <nl> public class <unk> extends <unk> implements <nl> return super . <unk> ( datatype ) ; <nl> } <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / src / main / java / com / j256 / ormlite / db / <unk> . java <nl> public class <unk> extends <unk> implements <nl> return super . <unk> ( datatype ) ; <nl> } <nl> } <nl> } <nl> public string tostring ( string tostring ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / src / main / java / com / j256 / ormlite / db / <unk> . java <nl> public class <unk> extends <unk> implements <nl> return super . <unk> ( datatype ) ; <nl> } <nl> } <nl> } <nl> public string tostring ( string tostring ( ) ) ; <nl> } <nl> } <nl>
ppp b / src / main / java / com / j256 / ormlite / db / <unk> . java <nl> public class <unk> extends <unk> implements <nl> return super . <unk> ( datatype ) ; <nl> } <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> repository at < https : / / github . com / chrisbanes / android - pulltorefresh > <nl>
ppp b / readme . md <nl> repository at < https : / / github . com / chrisbanes / android - pulltorefresh > . <nl>
ppp b / readme . md <nl> repository at < https : / / github . com / chrisbanes / android - pulltorefresh > . <nl> ` ` ` <nl>
ppp b / readme . md <nl> repository at < https : / / github . com / chrisbanes / android - pulltorefresh > . <nl> ` ` <nl>
ppp b / readme . md <nl> repository at < https
====NEW EXAMPLE====
ppp b / opentripplanner - routing / src / main / java / org / opentripplanner / routing / impl / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public graph <unk> ( string <unk> ) { <nl>
ppp b / opentripplanner - routing / src / main / java / org / opentripplanner / routing / impl / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public graph <unk> ( string <unk> ) { <nl> / null ; <nl> } <nl> } <nl>
ppp b / opentripplanner - routing / src / main / java / org / opentripplanner / routing / impl / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public graph <unk> ( string <unk> ) { <nl> / null ; <nl> } <nl>
ppp b / opentripplanner - routing / src / main / java / org / opentripplanner / routing / impl / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public graph <unk> ( string <unk> ) { <nl> / / null ; <nl> } <nl>
ppp b / opentripplanner - routing / src / main / java / org / opentripplanner / routing / impl / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public graph <unk> ( string <unk> ) { <nl> / / ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / doc / alerts . xml <nl> this
ppp b / src / doc / alerts . xml <nl>
ppp b / src / doc / alerts . xml <nl> this list
ppp b / src / doc / alerts . xml <nl> this list the alerts <nl> 50000 active scan scripts <nl> 50001 passive scan : <nl> if you really want ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl> } <nl> <unk> <unk> injection <unk> <nl> <unk> code injection <nl>
ppp b / src / doc / alerts . xml <nl> this list the alerts <nl> 50000 active scan scripts <nl> 50001 passive scan : <nl> if you really want ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl> } <nl> <unk> <unk> injection <unk> <nl> <unk> code injection <nl> <unk> <unk> command <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 1 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 1 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 1 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 1 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name > <nl> > <nl>
ppp b / pom . xml <nl> < groupid > com . puppycrawl . tools < / groupid > <nl> < artifactid > checkstyle < / artifactid > <nl> < version > 7 . 1 . 2 - snapshot < / version > <nl> < packaging > jar < / packaging > <nl> < name > checkstyle < / name name <nl>
====NEW EXAMPLE====
ppp b / tests / com / goide / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> public void <unk> ( ) { <nl> <unk> ( new <unk> ( ) , timeunit . minutes . <unk> ( 3 ) ; <nl> } <nl> public void <unk> ( ) { <nl>
ppp b / tests / com / goide / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> public void <unk> ( ) { <nl> <unk> ( new <unk> ( ) , timeunit . minutes . <unk> ( 3 ) ; <nl> } <nl> public void <unk> ( ) <nl>
ppp b / tests / com / goide / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> public void <unk> ( ) { <nl> <unk> ( new <unk> ( ) , timeunit . minutes . <unk> ( 3 ) ; <nl> } <nl> public void <unk> ( { <nl>
ppp b / tests / com / goide / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> public void <unk> ( ) { <nl> <unk> ( new <unk> ( ) , timeunit . minutes . <unk> ( 3 ) ; <nl> } <nl> public void <unk> ( ) ) <nl>
ppp b / tests / com / goide / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> public void <unk> ( ) { <nl> <unk> ( new <unk> ( ) , timeunit . minutes . <unk> ( 3 ) ; <nl> } <nl> public void <unk> ( ) ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5baaaba9681369eaefe6c6c91c844c145fd6c67f <nl> mode = push <nl> parent = 862575ac77625e25e561405ab7bef6575648aee5 <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5baaaba9681369eaefe6c6c91c844c145fd6c67f <nl> mode = push <nl> parent = 862575ac77625e25e561405ab7bef6575648aee5 <nl> remote = git @ github . com : liferay / com - liferay - bookmarks git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 48ef4eb70da62fa8dc99b20d0b9d46ca56cbe5ac <nl> mode = push <nl> parent = e1c061d9fa64cca98c43d19578a08524fc56a6fe <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo ; <nl>
====NEW EXAMPLE====
ppp b / <unk> / makefile . am <nl> <unk> = <unk> . la <nl> <unk> = demo <unk> <nl> <unk> = <unk> . la <nl> <unk> = <unk> readme <nl> <unk> = <unk> . html <nl> <nl> <unk> = - avoid avoid version version module module - shared - export - dynamic <nl>
ppp b / <unk> / makefile . am <nl> <unk> = <unk> . la <nl> <unk> = demo <unk> <nl>
ppp b / <unk> / makefile . am <nl> <unk> = <unk> . la <nl>
ppp b / <unk> / makefile . am <nl> <unk> = <unk> . la <nl> <unk> = demo <unk> <nl> <unk> = <unk> . la <nl> <unk> = <unk> readme <nl> <unk> = <unk> . html <nl> <nl> <unk> = - avoid avoid version version module module - shared - export - <nl>
ppp b / <unk> / makefile . am <nl> <unk> = <unk> . <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / ios / sdk / weexsdk / sources / protocol / <unk> . h <nl> typedef void ( ^ <unk> ) ( nsstring * instance , nsarray tasks , nsstring * cal <nl>
ppp b / ios / sdk / weexsdk / sources / protocol / <unk> . h <nl> typedef void ( ^ <unk> ) ( nsstring * instance , nsarray tasks , nsstring * cal <nl> ( void ) <unk> ; <nl>
ppp b / ios / sdk / weexsdk / sources / protocol / <unk> . h <nl> typedef void ( ^ <unk> ) ( nsstring * instance , nsarray tasks , nsstring * cal <nl> ( void ) ; <nl>
ppp b / ios / sdk / weexsdk / sources / protocol / <unk> . h <nl> typedef void ( ^ <unk> ) ( nsstring * instance , nsarray tasks , nsstring * * <nl>
ppp b / ios / sdk / weexsdk / sources / protocol / <unk> . h <nl> typedef void ( ^ <unk> ) ( nsstring * instance , nsarray tasks , nsstring * cal <nl> ( void ) <unk> ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / spock - grails - support / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit - dep < / artifactid > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . apache . ant < / > <nl>
ppp b / spock - grails - support / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit - dep < / artifactid > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . apache . ant < / <nl>
ppp b / spock - grails - support / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit - dep < / artifactid > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . apache . ant < > <nl>
ppp b / spock - grails - support / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit - dep < / artifactid > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . apache . ant < / groupid <nl>
ppp b / spock - grails - support / pom . xml <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit - dep < / artifactid > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . apache . ant < / > <nl> > <nl>
====NEW EXAMPLE====
ppp b / contrib / externs / angular - material . js <nl> md . $ toast . prototype . simple = function ( ) { } <nl>
ppp b / contrib / externs / angular - material . js <nl>
ppp b / contrib / externs / angular - material . <nl>
ppp
ppp b / contrib / externs / angular - material . js <nl> md . $ toast . prototype . simple = function ( ) { } ; <nl> / * * <nl> * @ typedef { { <nl> * isopen : function ( ) | screensize | screensize | screensize : ( ) : : , <nl> * toggle : function ( ) , <nl> * open : function ( ) , <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < <unk> > <nl> < system > jenkins < / system > <nl> < url > http : / / chriswhocodes chriswhocodes com com / jenkins / jitwatch jitwatch < / url url > <nl> < / <unk> > <nl> < mailinglists > <nl>
ppp b / pom . xml <nl> < <unk> > <nl> < system > jenkins < / system > <nl>
ppp b / pom . xml <nl> < <unk> > <nl>
ppp b / pom . xml <nl> < <unk> > <nl> < system > jenkins < / system > <nl> < url > http : / / chriswhocodes chriswhocodes com com / jenkins / jitwatch jitwatch < / url url > <nl> < / <unk> > <nl> < mailinglists > > <nl>
ppp b / pom . xml <nl> < <unk> > <nl> < system > jenkins < / system > <nl> < url > http : / / chriswhocodes chriswhocodes com com / jenkins / jitwatch jitwatch < / url url > <nl> < / <unk> > <nl> < mailinglists > <nl> <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 0 . 96 - < / / aversion > <nl> < / properties > <nl> < build > <nl> < plugins > <nl>
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 0 . 96 - < / / aversion > <nl> < / properties > <nl> < build > <nl> < plugins <nl>
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 0 . 96 - < / / aversion > <nl> < / properties > <nl> < build > <nl> < plugins > > <nl>
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 0 . 96 - < / / aversion > <nl> < / properties > <nl> < build > <nl> < plugins > <nl> <nl>
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 0 . 96 - < / / aversion > <nl> < / properties > <nl> < build > <nl> < plugins plugins <nl>
====NEW EXAMPLE====
ppp b / wordpress / build . gradle <nl> android { <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> vectordrawables
ppp b / wordpress / build . gradle <nl> android { <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> vectordrawables .
ppp b / wordpress / build . gradle <nl> android { <nl> minsdkversion 14 <nl>
ppp b / wordpress / build . gradle <nl> android { <nl> minsdkversion 14 <nl> targetsdkversion <nl>
====NEW EXAMPLE====
ppp b / library / src / main / java / github / <unk> / <unk> / <unk> . java <nl>
ppp b / library / src / main / java / github / <unk> / <unk> / <unk> . java <nl> public class <unk> extends framelayout { <nl> if ( action = = motionevent . action_up | | action = = motionevent . action_cancel ) { <nl> <unk> ( ) ; <nl> action_cancel ( ) ; <nl> ) ; <nl> } <nl> return true ; <nl>
ppp b / library / src / main / java / github / <unk> / <unk> / <unk> . java <nl> public class <unk> extends framelayout { <nl>
ppp b / library / src / main / java / github / <unk> / <unk> / <unk> . <nl>
ppp b / library / src / main / java / github / <unk> / <unk> / <unk> . java <nl> public class <unk> extends framelayout { <nl> if ( action = = motionevent . action_up | | action = = motionevent . action_cancel ) { <nl> <unk> ( ) ; <nl> action_cancel ( ) ; <nl> ) ; <nl> } <nl> return true true ; <nl>
====NEW EXAMPLE====
ppp b / android . mk <nl> web_docs_sample_code_flags : = \ <nl> # # sdk version identifiers used in the published docs <nl>
ppp b / android . mk <nl> web_docs_sample_code_flags : = \ <nl>
ppp b / android . mk <nl> web_docs_sample_code_flags : = <nl>
ppp b / android . mk <nl> web_docs_sample_code_flags : = \
ppp b / android . mk <nl> web_docs_sample_code_flags : = \ <nl> # # sdk version identifiers used in the published docs <nl> # major [ . minor ] version for current sdk . ( full releases only ) <nl> <unk> : = 3 . . <nl> # release version ( ie " release x " ) ( full releases only ) <nl> <unk> : = 1 <nl>
====NEW EXAMPLE====
ppp b / . arcconfig <nl> " arc_jira_lib " : " . arc_jira_lib " <nl> } , <nl> " arcanist_configuration " : " arcjiraconfiguration " , <nl> " jira_api_url " " " " " <nl> " " jira_api_url " : " https : / / issues . apache . org / jira / si / " <nl> } <nl>
ppp b / . arcconfig <nl> " arc_jira_lib " : " . arc_jira_lib " <nl> } , <nl> " arcanist_configuration " : " arcjiraconfiguration " , <nl> " jira_api_url " " " " " <nl> " " jira_api_url " : " https : / / issues . apache . org / jira / si / " } <nl>
ppp b / . arcconfig <nl> " arc_jira_lib " : " . arc_jira_lib " <nl> } , <nl> " arcanist_configuration " : " arcjiraconfiguration " , <nl> " jira_api_url " " " " " <nl> " " jira_api_url " : " https : / / issues . apache . org / jira / si / " <nl> <nl>
ppp b / . arcconfig <nl> " arc_jira_lib " : " . arc_jira_lib " <nl> } , <nl> " arcanist_configuration " : " arcjiraconfiguration " , <nl> " jira_api_url " " " " " <nl> " " jira_api_url " : " https : / / issues . apache . org / jira / si / " <nl>
ppp b / . arcconfig <nl> " arc_jira_lib " : " . arc_jira_lib " <nl> } , <nl> " arcanist_configuration " : " arcjiraconfiguration " , <nl> " jira_api_url " " " " " <nl> " " jira_api_url " : " https : / / issues . apache . org / jira / si / " } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = pull <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / android / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 2 " <nl> defaultconfig { <nl> applicationid " com . graphhopper . android " <nl>
ppp b / android / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 2 " <nl> defaultconfig { <nl> applicationid " com . graphhopper . android android <nl>
ppp b / android / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 2 " <nl> defaultconfig { <nl> applicationid " com . graphhopper . android <nl>
ppp b / android / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 2 " <nl> defaultconfig { <nl> applicationid " com . graphhopper . android " <nl> <nl>
ppp b / android / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 2 " <nl> defaultconfig { <nl> applicationid " com . graphhopper . android " " <nl>
====NEW EXAMPLE====
ppp b / modules / core / registry - api / bnd . bnd <nl> bundle - name : liferay portal registry api <nl>
ppp b / modules / core / registry - api / bnd . bnd <nl> bundle - name : liferay portal registry api <nl> bundle - symbolicname : com . liferay . registry . api <nl> bundle - version : 1 . 0 . 0 <nl> export - package : \ <nl> com . liferay . registry , \ <nl> com . liferay . registry . collections , \ <nl>
ppp b / modules / core / registry - api / bnd . bnd <nl> bundle - name : liferay portal registry <nl>
ppp b / modules / core / registry - api / bnd . bnd <nl> bundle - name : liferay portal registry api <nl> bundle - symbolicname : com . liferay . registry . api <nl> bundle - version : 1 . 0 . 0 <nl> export - package : \ <nl> com . liferay . registry , \ <nl> com . liferay . registry . collections , <nl>
ppp b / modules / core / registry - api / bnd . bnd <nl>
====NEW EXAMPLE====
ppp b / osmand / res / layout / drawer_list_item . xml <nl> android : layout_width = " wrap_content " <nl> android : layout_height = " wrap_content " <nl> android : textsize = " <unk> " <nl> android : layout_marginbottom = " <unk> " <nl> tools : text = " some title text " / > <nl> < textview <nl>
ppp b / osmand / res / layout / drawer_list_item . xml <nl> android : layout_width = " wrap_content " <nl> android : layout_height = " wrap_content " <nl> android : textsize = " <unk> " <nl> android : layout_marginbottom = " <unk> " <nl> tools : text = " some title text " / > <nl> < / <nl>
ppp b / osmand / res / layout / drawer_list_item . xml <nl> android : layout_width = " wrap_content " <nl> android : layout_height = " wrap_content " <nl> android : textsize = " <unk> " <nl> android : layout_marginbottom = " <unk> " <nl> tools : text = " some title text " / > <nl> < <nl>
ppp b / osmand / res / layout / drawer_list_item . xml <nl> android : layout_width = " wrap_content " <nl> android : layout_height = " wrap_content " <nl> android : textsize = " <unk> " <nl> android : layout_marginbottom = " <unk> " <nl> tools : text = " some title text " / > <nl>
ppp b / osmand / res / layout / drawer_list_item . xml <nl> android : layout_width = " wrap_content " <nl> android : layout_height = " wrap_content " <nl> android : textsize = " <unk> " <nl> android : layout_marginbottom = " <unk> " <nl> tools : text = " some title text " / > <nl> < < <nl>
====NEW EXAMPLE====
ppp b / <unk> / indexing . md <nl> <unk> . <unk>
ppp b / <unk> / indexing . md <nl>
ppp
ppp b / <unk> / indexing . md <nl> <unk> . <unk> . drop ( ) ; / / turn it off when no longer needed . <nl> # # sqlite index wrapper <nl> for <unk> , we also support the sqlite ` index ` wrapper object . support for the sqlite ` ` ` ` object . <nl> ccc java <nl>
ppp b / <unk> / indexing . md <nl> <unk> . <unk> . drop ( ) ; / / turn it off when no longer needed . <nl> # # sqlite index wrapper <nl> for <unk> , we also support the sqlite ` index ` wrapper object . support for the sqlite ` ` ` ` object . <nl>
====NEW EXAMPLE====
ppp b / containers / jersey - servlet - core / pom . xml <nl>
ppp b / containers / jersey - servlet - core / pom
ppp
ppp b / containers / jersey - servlet - core / pom . xml <nl> javax . annotation . * ; version = ! , <nl> * <nl> < / import - package > <nl> < / instructions > <nl> < / < / < / < / < / < / < / > <nl> < / instructions > <nl> < <unk> > true < / <unk> > <nl> < / configuration > <nl>
ppp b / containers / jersey - servlet - core / pom . xml <nl> javax . annotation . * ; version = ! , <nl> * <nl> < / import - package > <nl> < / instructions > <nl> < / < / < / < / < / < / < / > <nl> < / instructions > <nl> < <unk> > true < / <unk> > <nl> < / configuration <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> public class <unk> { <nl> system . out . println ( <unk> . distance ( " <unk> " , " <unk> " ) ) ; <nl> } <nl> ` ` ` ` <nl> # # <unk> - <unk> <nl>
ppp b / readme . md <nl> public class <unk> { <nl> system . out . println ( <unk> . distance ( " <unk> " , " <unk> " ) ) ; <nl> } <nl> ` ` ` ` <nl>
ppp b / readme . md <nl> public class <unk> { <nl> system . out . println ( <unk> . distance ( " <unk> " , " <unk> " ) ) ; <nl> } <nl> ` ` ` ` <nl> # # <unk> - - <nl>
ppp b / readme . md <nl> public class <unk> { <nl> system . out . println ( <unk> . distance ( " <unk> " , " <unk> " ) ) ; <nl> } <nl> ` ` ` ` <nl> # # <unk> - <unk> <unk> <nl>
ppp b / readme . md <nl> public class <unk> { <nl> system . out . println ( <unk> . distance ( " <unk> " , " <unk> " ) ) ; <nl> } <nl> ` ` ` ` <nl> # # <unk> - <unk> <nl> <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> before_script : <nl> adb shell input keyevent 82 <nl>
ppp b / . travis . yml <nl> before_script : <nl> adb shell input keyevent 82 & <nl>
ppp b / . travis . yml <nl> before_script : <nl>
ppp b / . travis . yml <nl> before_script : <nl> adb shell input keyevent 82 & <nl> script : <nl>
ppp b / . travis . yml <nl> before_script : <nl> adb
====NEW EXAMPLE====
ppp b / docs / releasechecklist . md <nl> https : /
ppp b / docs / releasechecklist . md <nl> https : / / github . com / jackpal / android - terminal - emulator / wiki / recent - <nl>
ppp b / docs / releasechecklist . md <nl> https : / / github . com / jackpal / android - terminal - emulator / wiki / recent - updates <nl> github <unk> pages out of branch gh - pages , directory downloads / term . apk <nl> public url is http : / / jackpal . github . github . com / android - - / / / / / / / / / / / / term <nl>
ppp b / docs / releasechecklist . md <nl> https : / / github . com / jackpal / android - terminal - emulator / wiki / recent - updates <nl> github <unk> pages out of branch gh - pages , directory downloads / term . apk <nl> public url is http : / / jackpal . github . github . com / android - - / / / / / / / / / / / / term . <nl>
ppp b / docs / releasechecklist . md <nl> https : / / github . com / jackpal / android - terminal - emulator / wiki / recent - updates <nl> github <unk> pages out of branch gh - pages , directory downloads / term . apk <nl> public url is http : / / jackpal . github . github . com / android - - / / / / / / / / / / / downloads <nl>
====NEW EXAMPLE====
ppp b / app / src / processing / app / ui / <unk> . java <nl> public class <unk> extends <unk> { <nl> boolean selected , <nl> boolean <unk> , <nl>
ppp b / app / src / processing / app / ui / <unk> . java <nl> public class <unk> extends <unk> { <nl> boolean selected , <nl>
ppp b / app / src / processing / app / ui / <unk> . java <nl> public class <unk> extends <unk> { <nl>
ppp b / app / src / processing / app / ui / <unk> . java <nl>
ppp b / app / src / processing / app / ui / <unk> . java <nl> public class <unk> extends <unk> { <nl> boolean selected , <nl> boolean <unk> , <nl> int row , int column ) ; <nl> if ( selected ) { <nl> <unk> ( <unk> ) ; <nl> <unk> ( <unk> ) ; <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> integrations tests in this plugin require working azure configuration and <unk> <nl>
ppp b / readme . md <nl> integrations tests in this plugin require working azure configuration and <nl>
ppp b / readme . md <nl> integrations tests in this plugin require working azure configuration and <unk> <nl> to enable tests prepare a config file elasticsearch . yml with the following content : <nl> ` ` ` <nl> repositories : <nl> azure : <nl> account : " your - azure - storage storage - name " <nl> key : " your - azure - storage - key " <nl>
ppp b / readme . md <nl> integrations tests in this plugin require working azure configuration and <unk> <nl> to enable tests prepare a config file elasticsearch . yml with the following content : <nl> ` ` ` <nl> repositories : <nl> azure : <nl> account : " your - azure - storage storage - name " <nl> key : " your - azure - storage - " <nl>
ppp b / readme . md <nl> integrations tests in this plugin require working azure configuration and <unk> <nl> to enable tests prepare a config file elasticsearch . yml with the following content : <nl> ` ` ` <nl> repositories : <nl> azure : <nl> account : " your - azure - storage storage - name " <nl> key : " your - azure - storage - key <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / samples / supportleanbackdemos / androidmanifest . xml <nl>
ppp b / samples / supportleanbackdemos / androidmanifest . xml <nl> < uses
ppp

ppp b / samples / supportleanbackdemos / androidmanifest . xml <nl> < uses - sdk android : minsdkversion = " 17 " android : targetsdkversion = " 19 " / > <nl> < application <nl> android : label = null & & & & & & & & watchdog ( ) <nl> android android : label = " string / app_name " " <nl> android : icon = " @ drawable / ic_launcher " <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f3e7f50e36aedc5f899fe50a60c7ded8c55c0435 <nl> mode = push <nl> parent = b3e4ab84b1542907c5e97e1d6e6c005f058dfbaf <nl> remote = git @ github . com : liferay / com - liferay - rss . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / plugin > <nl> < / plugins > <nl> < / pluginmanagement > <nl> < / build > <nl>
ppp b / pom . xml <nl> < / plugin > <nl> < / plugins > <nl> < / pluginmanagement > <nl> < / build
ppp b / pom . xml <nl> < / plugin > <nl> < / plugins > <nl> < / pluginmanagement > <nl> < / build > <nl> < / < / < / build > <nl> < / project > <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < / plugin > <nl> < / plugins > <nl> < / pluginmanagement > <nl> < / build > <nl> < / < / < / build > <nl> < / project > <nl>
ppp b / pom . xml <nl> < / plugin >
====NEW EXAMPLE====
ppp b / jodatime / release - notes . txt <nl> source compatible - yes <nl> serialization compatible - yes <nl> data compatible - yes <nl> - datetimezone data updated to version <unk> <nl> <unk> compatible - yes <nl>
ppp b / jodatime / release - notes . txt <nl> source compatible - yes <nl> serialization compatible - yes <nl> data compatible - yes <nl> - datetimezone data updated to version <unk> <nl> <unk> compatible - yes <nl> <nl>
ppp b / jodatime / release - notes . txt <nl> source compatible - yes <nl> serialization compatible - yes <nl> data compatible - yes <nl> - datetimezone data updated to version <unk> <nl> <unk> compatible - - <nl>
ppp b / jodatime / release - notes . txt <nl> source compatible - yes <nl> serialization compatible - yes <nl> data compatible - yes <nl> - datetimezone data updated to version <unk> <nl> <unk> compatible - yes yes <nl>
ppp b / jodatime / release - notes . txt <nl> source compatible - yes <nl> serialization compatible - yes <nl> data compatible - yes <nl> - datetimezone data updated to version <unk> <nl> <unk> compatible - <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e3d87566d3fb7946dc5474b4857592560ed5bdeb <nl> mode = push <nl> parent = b86586029d24d634efb61475792c3e0bbef7d128 <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> jdk : <nl>
ppp b / . travis . yml <nl> jdk <nl>
ppp b / . travis . yml <nl>
ppp b / . travis . yml <nl> jdk : <nl> install : mvn install - - quiet - dskiptests = true - dmaven . javadoc . skip = true - b - v <nl> script : mvn - q - - fail - - - - - - - end - - - - embedded - arquillian b <nl>
ppp
====NEW EXAMPLE====
ppp b / portal - impl / src / com / liferay / portal / tools / <unk> . java <nl> public class <unk> { <nl> <unk> = <unk> ( pluginsdir ) ; <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } <nl> void void <unk> ( ) throws { <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / <unk> . java <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / <unk> . java <nl> public class <unk> { <nl> <unk> = <unk> ( pluginsdir ) ; <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } <nl> void void <unk> ( ) throws { { <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / <unk> . java <nl> public class <unk> { <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / <unk> . java <nl> public class <unk> { <nl> <unk> = <unk> ( pluginsdir ) ; <nl> <unk> ( ) ; <nl> <unk> ( ) ; <nl> <unk> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 780e9e648fe4ef2fc5a82df051308d315a3bc3d6 <nl> mode = push <nl> parent = e03e6aa08ad33871cb99efc3ca9b35d2a3161a8f <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl> maker . filelockdisable ( ) ; <nl> if ( mmap ) <nl> maker . filemmapenableifsupported ( ) ; <nl> ( ) ; <nl> if ( cache ) <nl> maker . <unk> ( ) ; <nl>
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl> maker . filelockdisable ( ) ; <nl> if ( mmap ) <nl> maker . filemmapenableifsupported ( ) ; <nl> ( ) ; <nl> if ( cache ) <nl> maker . <unk> ( ) <nl>
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl> maker . filelockdisable ( ) ; <nl> if ( mmap ) <nl> maker . filemmapenableifsupported ( ) ; <nl> ( ) ; <nl> if ( cache ) <nl> maker . <unk> ( ; <nl>
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl> maker . filelockdisable ( ) ; <nl> if ( mmap ) <nl> maker . filemmapenableifsupported ( ) ; <nl> ( ) ; <nl> if ( cache ) <nl>
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl> maker . filelockdisable ( ) ; <nl> if ( mmap ) <nl> maker . filemmapenableifsupported ( ) ; <nl> ( ) ; <nl> if ( cache ) <nl> maker . <unk> ( ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / src / net / java / sip / communicator / service / protocol / operationset . java <nl> package net . java . sip . communicator . service . protocol ; <nl> * / <nl> public string <unk> ( ) ; <nl> } <nl>
ppp b / src / net / java / sip / communicator / service / protocol / operationset . java <nl> package net . java . sip . communicator . service . protocol ; <nl> * / <nl> public string <unk> ( ) ; <nl>
ppp b / src / net / java / sip / communicator / service / protocol / operationset . java <nl> package net . java . sip . communicator . service . protocol ; <nl> * / <nl> public string <unk> ( ) ; <nl> <nl>
ppp b / src / net / java / sip / communicator / service / protocol / operationset . java <nl> package net . java . sip . communicator . service . protocol ; <nl> * / <nl>
ppp b / src / net / java / sip / communicator / service / protocol / operationset . java <nl> package net . java . sip . communicator . service . protocol ; <nl> * / <nl> public string <unk> ( ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / main / java / org / mapdb / <unk> . java <nl>
ppp b / src / main / java / org / mapdb / <unk> . java <nl> package org .
ppp b / src / main / java / org / mapdb / <unk> . java <nl> package org
ppp b / src / main / java / org / mapdb / <unk> . java <nl> package org . mapdb ; <nl>
ppp b / src / main / java / org / mapdb / <unk> . . <nl>
====NEW EXAMPLE====
ppp b / scripts / _grailsrun . groovy <nl> private <unk> <unk> ( ) { <nl> catch ( classnotfoundexception <unk> ) { <nl>
ppp b / scripts / _grailsrun . groovy <nl> private <unk> <unk> ( ) { <nl>
ppp b / scripts / _grailsrun . groovy <nl> private <unk> <unk>
ppp b / scripts / _grailsrun . groovy <nl> private <unk> <unk> ( ) <nl>
ppp b / scripts / _grailsrun . groovy <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / src / resource / <unk> / manual - tagger . txt <nl> <unk> <unk> k <nl> # <unk> <unk> <unk> . <nl> al al p <unk> <nl> <unk> <unk> p <unk> <nl> da da p <unk> <nl> de de p <unk> <nl> <unk> <unk> p <unk> <nl>
ppp b / trunk / jlanguagetool / src / resource / <unk> / manual - tagger . txt <nl> <unk> <unk> k <nl> # <unk> <unk> <unk> . <nl> al al p <unk> <nl> <unk> <unk> p <unk> <nl> da da p <unk> <nl> de de p <unk> <nl> <unk> <unk> p <nl>
ppp b / trunk / jlanguagetool / src / resource / <unk> / manual - tagger . txt <nl>
ppp b / trunk / jlanguagetool / src / resource / <unk> / manual - tagger . txt <nl> <unk> <unk> k <nl> # <unk> <unk> <unk> . <nl> al al p <unk> <nl> <unk> <unk> p <unk> <nl> da da p <unk> <nl> de de p <unk> <nl>
ppp b / trunk / jlanguagetool / src / resource / <unk> / manual - tagger . txt <nl> <unk> <unk> k <nl> # <unk> <unk> <unk> . <nl> al al p <unk> <nl> <unk> <unk> p <unk> <nl> da da p <unk> <nl> de de p <unk> <nl> <unk> <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / adaptive - media / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 832454886f8984b08ca76691102c6c87d19b851b <nl> mode = push <nl> parent = 37c9a3e9d56df5dd828139a27a8401a540113fe4 <nl> remote = git @ github . com : liferay / com - liferay - adaptive - media . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / adaptive - media / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / adaptive - media / . gitrepo <nl> ; <nl>
ppp b / modules / apps / adaptive - media / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / adaptive - media / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / gradle / integtest . gradle <nl> task <unk> { <nl> integtesttasks . all { test task - > <nl> dependson ' : inttestimage ' , ' <unk> ' <nl> testclassesdir = sourcesets . integtest . output . classesdir <nl> \ no newline at end of file <nl> sourcesets sourcesets . integtest . runtimeclasspath <nl> testsrcdirs = [ ] <nl>
ppp b / gradle / integtest . gradle <nl> task <unk> { <nl> integtesttasks . all { test task - > <nl>
ppp b / gradle / integtest . gradle <nl> task <unk> { <nl>
ppp b / gradle / integtest . gradle <nl> task <unk> {
ppp b / gradle / integtest . gradle <nl> task <unk> <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> changelog <nl> * delete existing settings before import <nl> * fixed <unk> between filtering selected / used <nl> * added italian translation <nl> * updated translation <nl> * * version 0 . 43 * * * <nl>
ppp b / readme . md <nl> changelog <nl> * delete existing settings before import <nl> * fixed <unk> between filtering selected / used <nl> * added italian translation <nl> * updated translation <nl> * * version 0 . 43 * * <nl>
ppp b / readme . md <nl> changelog <nl>
ppp b / readme . md <nl> changelog <nl> * delete
ppp b / readme . md <nl> changelog <nl> * delete existing settings before import <nl> * fixed <unk> between filtering selected / used <nl> * added italian translation <nl> * updated translation <nl> * * version 0 . 43 * * *
====NEW EXAMPLE====
ppp b / . travis . yml <nl> android : <nl> # additional components <nl>
ppp b / . travis . yml <nl> android : <nl> # additional <nl>
ppp b / . travis . yml <nl> android : <nl> # additional components <nl> extra
ppp b / . travis . yml <nl> android : <nl> # additional components <nl> extra - android - m2repository <nl>
ppp b / . travis . yml <nl> android : <nl> # additional components <nl> extra - android m2repository <nl>
====NEW EXAMPLE====
ppp b / changelog <nl> = = = = = 1
ppp b / changelog <nl> = = = = = 1 . 2 . 6 ( dec ? ? , 2011 ) = = = = = <nl> * tips subsystem . settexturefile ) <nl> * fixed bookmarks creation by marek pavelka ) <nl> * storm - subsystem . been implemented <nl> = = = = = 1 . 2 . 5 ( dec , , 2011 = = = = = <nl> * installation on devices with pre - installed old version has has fixed <nl>
ppp b / changelog <nl> = = = = = 1 . 2 . 6 ( dec ? ? , 2011 ) = = = = = <nl> * tips subsystem . settexturefile ) <nl> * fixed bookmarks creation by marek pavelka ) <nl> * storm - subsystem . been implemented <nl> = = = = = 1 . 2 . 5 ( dec , , 2011 = = = = = <nl> * installation on devices with pre - installed old version has has fixed fixed <nl>
ppp b / changelog <nl> = = = = = 1 . 2 . 6 ( dec ? ? , 2011 ) = = = = = <nl> * tips subsystem . settexturefile ) <nl> * fixed bookmarks creation by marek pavelka ) <nl> * storm - subsystem . been implemented <nl> = = = = = 1 . 2 . 5 ( dec , , 2011 = = = = = <nl> * installation on devices with pre - installed old version has has been <nl>
ppp b / changelog <nl> = = = = = 1 . 2 . 6 ( dec ? ? , 2011 ) = = = = = <nl> * tips subsystem . settexturefile ) <nl> * fixed bookmarks creation by marek pavelka ) <nl> * storm - subsystem . been implemented <nl> = = = = = 1 . 2 . 5 ( dec , , 2011 = = = = = <nl> * installation on devices with pre - installed old version has been <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . testing . compile < / groupid > <nl> < artifactid > compile - testing < / artifactid > <nl> < version > 0 . 1 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . testing . compile < / groupid > <nl> < artifactid > compile - testing < / artifactid > <nl> < version > 0 . 1 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > <nl> > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . testing . compile < / groupid > <nl> < artifactid > compile - testing < / artifactid > <nl> < version > 0 . 1 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . testing . compile < / groupid > <nl> < artifactid > compile - testing < / artifactid > <nl> < version > 0 . 1 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > com . google . testing . compile < / groupid > <nl> < artifactid > compile - testing < / artifactid > <nl> < version > 0 . 1 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < dependency > > <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 14 . 0 . 1 ' <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 14 . 0 . 1 <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 14 . 0 . 1 ' <nl> nettyversion = ' 4 . 0 . 8 . final ' <nl> slf4jversion = ' 1 . 7 . 5 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 2 . 2 ' <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 14 . 0 . 1 ' <nl> nettyversion = ' 4 . 0 . 8 . final ' <nl> slf4jversion = ' 1 . 7 . 5 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 2 . 2 <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> android : <nl>
ppp b / . travis . yml <nl> android : <nl> android
ppp b / . travis . yml <nl> android : <nl> android -
ppp b / . travis . yml <nl> android : <nl> android - 22 <nl>
ppp b / . travis . yml <nl> android :
====NEW EXAMPLE====
ppp b / src / clj / clojure / main . clj <nl> default : <nl>
ppp b / src / clj / clojure / main . clj <nl> default : eval <nl>
ppp b / src / clj / clojure / main . clj <nl> default : eval <nl> :
ppp b / src / clj / clojure / main . clj <nl> default : eval <nl> : <nl>
ppp b / src / clj / clojure / main . clj <nl> default : eval
====NEW EXAMPLE====
ppp b / androidmanifest . xml <nl> < activity <nl>
ppp b / androidmanifest . xml <nl> < activity <nl> android
ppp
ppp b / androidmanifest . xml <nl> < activity <nl> android : name = " com . fsck . k9 . activity . accounts " <nl> android : configchanges = " locale " <nl> android : uioptions = = " <nl> android : uioptions = " splitactionbarwhennarrow " <nl> android : label = " @ string / app_name " > <nl> < intent - filter > <nl>
ppp b / androidmanifest . xml <nl> < activity <nl> android : name = " com . fsck . k9 . activity . accounts " <nl> android : configchanges = " locale " <nl> android : uioptions = = " <nl> android : uioptions = " splitactionbarwhennarrow " <nl> android : label = " @ string / app_name " > <nl> < intent - filter <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 73556f363e2fe28065b4a46d127a8dc289351a23 <nl> mode = push <nl> parent = 1a0f69b7f487a40ec264fb343d691db3b00912f1 <nl> remote = git @ github . com : liferay / com - liferay - portal - lock . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < module > examples / groovy - calculator < / module > <nl>
ppp b / pom . xml <nl> < module > examples / groovy - calculator < / module > <nl> < module > examples / scala - calculator < / module > <nl> < module > examples / java - <unk> - websockets - selenium < / module > <nl>
ppp b / pom . xml <nl> < module > examples / groovy - calculator < / module <nl>
ppp b / pom . xml <nl> < module > examples / groovy - calculator < / module > <nl> < module > examples / scala - calculator < / module > <nl> < module > examples / java - <unk> - websockets - selenium < / > <nl>
ppp b / pom . xml <nl> < module > examples / groovy - calculator < / module > <nl> < module > examples / scala - calculator < / module > <nl> < module > examples / java - <unk> - websockets - selenium < / module > <nl> > <nl>
====NEW EXAMPLE====
ppp b / docs / reference / index . asciidoc <nl> include
ppp b / docs / reference / index . asciidoc <nl>
ppp b / docs / reference / index . asciidoc
ppp b / docs / reference / index . asciidoc <nl> include : : testing . asciidoc [ ] <nl> include : : glossary . asciidoc [ ] <nl> include : : : asciidoc . asciidoc . ] <nl> <nl> include : : : redirects . [ ] <nl>
ppp b / docs / reference / index . asciidoc <nl> include : : testing . asciidoc [ ] <nl> include : : glossary . asciidoc [ ] <nl> include : : : asciidoc . asciidoc . ] <nl> <nl> include : : : redirects . [ ] ] <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> codegen / <nl> test - output / <nl>
ppp b / . gitignore <nl> codegen / <nl> test - output / <nl> examples / * / api / src / main idl idl <nl> / * / api / src / main / snapshot <nl> <unk> / <nl>
ppp b / . gitignore <nl> codegen / <nl>
ppp b / . gitignore <nl> codegen / <nl> test -
ppp b / . gitignore <nl> codegen / <nl> test - output / <nl> examples / * / api / src / main idl idl <nl> / * / api / src / main / <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> improvements : <nl> zookeeper - <unk> . perl bindings should automatically find the zookeeper <nl>
ppp b / changes . txt <nl> improvements : <nl>
ppp b / changes . txt <nl> improvements : <nl> zookeeper - <unk> . perl bindings should automatically find the zookeeper <nl> c - client headers ( <unk> <unk> via <unk> ( ) <nl> * updated czech localisation of file <nl> * storm - ( <unk> <unk> via <unk> ) <nl> new features : <nl> zookeeper - 729 . java client api to recursively delete a <unk> . <nl> ( <unk> <unk> via <unk> ) <nl>
ppp b / changes . txt <nl> improvements : <nl> zookeeper - <unk> . perl bindings should automatically find the zookeeper <nl> c - client headers ( <unk> <unk> via <unk> ( ) <nl> * updated czech localisation of file <nl> * storm - ( <unk> <unk> via <unk> ) <nl> new features : <nl> zookeeper - 729 . java client api to recursively delete a <unk> . <nl> ( <unk> <unk> via <unk> <nl>
ppp b / changes . txt <nl> improvements : <nl> zookeeper - <unk> . perl bindings should automatically find the zookeeper <nl> c - client headers ( <unk> <unk> via <unk> ( ) <nl> * updated czech localisation of file <nl> * storm - ( <unk> <unk> via <unk> ) <nl> new features : <nl> zookeeper - 729 . java client api to recursively delete a <unk> . <nl> ( <unk> <unk> via ) <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < <unk> > <unk> < / <unk> > <nl>
ppp b / pom . xml <nl> < <unk> > <unk> < / <unk> > <nl> < yml > <unk> < / yml > <nl> < conf > <unk> < / conf > <nl> < / mapping > <nl> < / > <nl> < / mapping > <nl> < excludes > <nl> < exclude > * * / bin / * * < / exclude > <nl>
ppp b / pom . xml <nl> < <unk> > <unk> < / <unk> > <nl> < yml > <unk> < / yml > <nl> < conf > <unk> < / conf > <nl> < / mapping > <nl> < / > <nl> < / mapping > <nl> < excludes > <nl> < exclude > * * / bin / * * < / > <nl>
ppp b / pom . xml <nl> < <unk> > <unk> < / <unk> > <nl> < yml > <unk> < / yml > <nl> < conf > <unk> < / conf > <nl> < / mapping > <nl> < / > <nl> < / mapping > <nl> < excludes > <nl> < exclude > * * / bin / * * < / exclude <nl>
ppp b / pom . xml <nl> < <unk> > <unk> < / <unk> <nl>
====NEW EXAMPLE====
ppp b / <unk> / intro . md <nl> for advanced dbflow usages : <nl> [ model containers ] ( / <unk> / <unk> . md ) <nl> [ indexing ] ( / <unk> / indexing .
ppp b / <unk> / intro . md <nl> for advanced dbflow usages : <nl> [ model containers ] ( / <unk> / <unk> . md ) <nl> [ indexing ] ( / <unk> / indexing . md <nl>
ppp b / <unk> / intro . md <nl> for advanced dbflow usages : <nl> [ model containers ] ( / <unk> / <unk> . md ) <nl> [ indexing ] ( / <unk> / indexing . ) <nl>
ppp b / <unk> / intro . md <nl> for advanced dbflow usages : <nl> [ model containers ] ( / <unk> / <unk> . md ) <nl> [ indexing ] ( / <unk> / indexing
ppp b / <unk> / intro . md <nl> for advanced dbflow usages : <nl> [ model containers ] ( / <unk> / <unk> . md ) <nl> [ indexing ] ( / <unk> / indexing . md
====NEW EXAMPLE====
ppp b / version . txt <nl> jetty - 7 . 0 . 0 . rc6 - snapshot <nl> \ no newline at end of file <nl> * fixed folders getting unneccesarily created is made available under the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / version . txt <nl> jetty - 7 . 0 . 0 . rc6 - snapshot <nl> \ no newline at end of file <nl> * * fixed folders getting unneccesarily created is made available under the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / version . txt <nl> jetty - 7 . 0 . 0 . rc6 - snapshot <nl> \ no newline at end of file <nl> * fixed folders getting unneccesarily created is made available under the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / version . txt <nl> jetty - 7 . 0 . 0 . rc6 - snapshot <nl> \ no newline at end of file <nl> * * fixed folders getting unneccesarily created is made available under the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / version . txt <nl> jetty - 7 . 0 . 0 . rc6 - snapshot <nl> \ no newline at end of file <nl> * fixed folders getting unneccesarily created is made available under the ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
====NEW EXAMPLE====
ppp b / app / controllers / searchcontroller . java <nl> public class searchcontroller extends <unk> { <nl> / / <unk> interval . <nl>
ppp b / app / controllers / searchcontroller . java <nl> public class searchcontroller extends <unk> { <nl>
ppp b / app / controllers / searchcontroller . java <nl> public class searchcontroller extends <unk> { <nl> / / <unk> interval . <nl> if ( interval = = null | | interval . isempty ( ) | ! <unk> <unk> . <unk> ( ) ) ) { <nl> interval = " hour " ; <nl> } <nl> / / determine timerange type . <nl>
ppp b / app / controllers / searchcontroller . java <nl> public class searchcontroller extends <unk> { <nl> / / <unk> interval . <nl> if ( interval = = null | | interval . isempty ( ) | ! <unk> <unk> . <unk> ( ) ) ) { <nl> interval = " hour " ; <nl> } <nl> / / determine timerange type <nl>
ppp b / app / controllers / searchcontroller . java <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - expando . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / externs / html5 . js <nl> window . prototype
ppp b / externs / html5 . js <nl> window . prototype . json ; <nl> * / <nl> function <unk> ( ) { <nl> } <nl> * @ suppresswarnings ( https : / / / / / / / / / / / / / / } <nl> } } <nl> / / * * @ type { number } * / <nl> <unk> . prototype . width ; <nl>
ppp b / externs / html5 . js <nl> window . prototype . json ; <nl> * / <nl> function <unk> ( ) { <nl> } <nl> * @ suppresswarnings ( https : / / / / / / / / / / / / / / } <nl> } } <nl> / / * * @ type { number } * / <nl>
ppp b / externs / html5 . js <nl> window . prototype . json ; <nl> * / <nl> function <unk> ( ) { <nl> } <nl> * @ suppresswarnings ( https : / / / / / / / / / / / / / / } <nl> } } <nl> / / * * @ type { number } * <nl>
ppp b / externs / html5 . js <nl> window . prototype . json ; <nl> * / <nl> function <unk> ( ) { <nl> } <nl> * @ suppresswarnings ( https : / / / / / / / / / / / / / / } <nl> } } <nl> / / * * @ type { number } * / <nl> <unk> . prototype . ; <nl>
====NEW EXAMPLE====
ppp b / subprojects / performance / performance . gradle <nl> integtesttasks . all { <nl>
ppp b / subprojects / performance / performance . gradle <nl> integtesttasks . all <nl>
ppp b / subprojects / performance / performance . gradle <nl>
ppp b / subprojects / performance / performance . gradle <nl> integtesttasks . all {
ppp b / subprojects / performance / performance . gradle <nl> integtesttasks . all { <nl> if ( buildtypes . isactive ( ' performancetest ' ) | | buildtypes . isactive ( ' <unk> ' ) ) { <nl> dependson preparesamples <nl> } & & & & & & & & & & & <nl> dependson [ ] <nl> } <nl> maxparallelforks = 1 } <nl>
====NEW EXAMPLE====
ppp b / . hgignore <nl> nb - configuration . xml <nl> target <nl> glob : checkstyle . iml <nl> glob : : . idea <nl>
ppp b / . hgignore <nl> nb - configuration . xml <nl> target <nl> glob : checkstyle . iml <nl> glob : : idea <nl>
ppp b / . hgignore <nl> nb - configuration . xml <nl> target <nl> glob : checkstyle . iml <nl> glob : : . <nl>
ppp b / . hgignore <nl> nb - configuration . xml <nl> target <nl> glob : checkstyle . iml <nl> glob : : . . <nl>
ppp b / . hgignore <nl> nb - configuration . xml <nl> target <nl> glob : checkstyle . iml <nl> glob : : . idea <nl> <nl>
====NEW EXAMPLE====
ppp b / tts / jni / android . mk <nl> local_shared_libraries : = \ <nl> libnativehelper \ <nl> libmedia \ <nl> libutils \ no newline at end of file <nl>
ppp b / tts / jni / android . mk <nl>
ppp b / tts / jni / android . mk
ppp b / tts / jni / android . mk <nl> local_shared_libraries : = \ <nl> libnativehelper \ <nl> libmedia \ <nl> libutils \ no newline at end of file <nl> \ <nl> \ <nl> libutils libutils \ <nl> libcutils libcutils \ <nl> libdl <nl> local_module local_module = libttssynthproxy libttssynthproxy <nl>
ppp b / tts / jni / android . mk <nl> local_shared_libraries : = \ <nl> libnativehelper \ <nl> libmedia \ <nl> libutils \ no newline at end of file <nl> \ <nl> \ <nl> libutils libutils \ <nl> libcutils libcutils \ <nl> libdl <nl> local_module local_module = libttssynthproxy <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> 3 . 6 <nl> * correctly fix potential assertion error during compaction ( cassandra - <unk> ) <nl> * make <unk> compression level configurable ( cassandra - <unk> ) <nl>
ppp b / changes . txt <nl> 3 . 6 <nl> * correctly fix potential assertion error during compaction ( cassandra - <unk> ) <nl> * make <unk> compression level configurable ( cassandra - <unk> <unk> <nl>
ppp b / changes . txt <nl> 3 . 6 <nl> * correctly fix potential assertion error during compaction ( cassandra - <unk> ) <nl> * make <unk> compression level configurable ( cassandra - <unk> ) <nl> <nl>
ppp b / changes . txt <nl> 3 . 6 <nl> * correctly fix potential assertion error during compaction ( cassandra - <unk> ) <nl> * make <unk> compression level configurable ( cassandra - <unk> <nl>
ppp b / changes . txt <nl> 3 . 6 <nl> * correctly fix potential assertion error during compaction ( cassandra - <unk> ) <nl> * make <unk> compression level configurable ( cassandra - <unk> ) ) <nl>
====NEW EXAMPLE====
ppp b / python / build / pycharm_build . gant <nl> private list <unk> ( ) { / / modules to put into pycharm . ja <nl> class paths { <nl> final sandbox <nl> final sandbox <nl> final <unk> <nl> final <unk> <nl> final <unk> <nl>
ppp b / python / build / pycharm_build . gant <nl> private list <unk> ( ) { / / modules to put into pycharm . ja <nl> class paths { <nl> final sandbox <nl> final sandbox <nl> final <unk> <nl> final <unk> <nl> final <unk> <nl> <nl>
ppp b / python / build / pycharm_build . gant <nl> private list <unk> ( ) { / / modules to put into pycharm . ja <nl> class paths { <nl> final sandbox <nl> final sandbox <nl> final <unk> <nl> final <unk> <nl> final final <nl>
ppp b / python / build / pycharm_build . gant <nl> private list <unk> ( ) { / / modules to put into pycharm . ja <nl> class paths { <nl> final sandbox <nl> final sandbox <nl> final <unk> <nl> final <unk> <nl>
ppp b / python / build / pycharm_build . gant <nl> private list <unk> ( ) { / / modules to put into pycharm . ja <nl> class paths { <nl> final sandbox <nl> final sandbox <nl> final <unk> <nl> final <unk> <nl> final <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> library [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> library [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> library [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = ) <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * updated lithuanian translation <nl> * updated lithuanian translation <nl> library [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open open <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 1 <nl> def versionpatch = 3 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl>
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 1 <nl> def versionpatch = 3 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android android <nl>
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 1 <nl> def versionpatch = 3 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl>
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 1 <nl> def versionpatch = 3 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { { <nl>
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 1 <nl> def versionpatch = 3 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> target <nl> release . properties <nl> pom . xml . * <nl>
ppp b / . gitignore <nl> target <nl> release . properties <nl> pom . xml . * <nl> website
ppp b / . gitignore <nl> target <nl> release . properties <nl>
ppp b / . gitignore <nl> target <nl> release . properties <nl> pom . xml . *
ppp b / . gitignore <nl> target <nl> release . properties
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - editor . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk
ppp b / . travis . yml <nl> language : java <nl> jdk :
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> jdk : <nl> jdk : <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 081a61e21baca8243cb35976e341d80752194488 <nl> mode = push <nl> parent = d3c986fc9073b9bdf1376043780e6834e81cdded <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / deploy / vagrant / conf / ec2 . yml . template <nl> <unk> : " tachyon - vagrant - test " <nl> region : " us - <unk> - 1 " <nl> <unk> : " us - <unk> - <unk> " <nl> # <unk> and <unk> id <nl> # <nl>
ppp b / deploy / vagrant / conf / ec2 . yml . template <nl> <unk> : " tachyon - vagrant - test " <nl> region : " us - <unk> - 1 " <nl> <unk> : " us - <unk> - <unk> " <nl> # <unk> and <unk> id <nl>
ppp b / deploy / vagrant / conf / ec2 . yml . template <nl>
ppp b / deploy / vagrant / conf / ec2 . yml . template <nl> <unk> : " tachyon - vagrant - test " <nl> region : " us - <unk> - 1 " <nl> <unk> : " us - <unk> - <unk> " <nl> # <unk> and <unk> id <nl> #
ppp b / deploy / vagrant / conf / ec2 . yml . template <nl> <unk> : " tachyon - vagrant - test " <nl> region : " us - <unk> - 1 " <nl> <unk> : " us - <unk> - <unk> " <nl> # <unk> and <unk> id <nl> <nl>
====NEW EXAMPLE====
ppp b / byte - buddy - dep / src / main / java / net / bytebuddy / dynamic / <unk> / subclass / <unk> . java <nl> public class <unk> <nl> @ override <nl> public <unk> <unk> ( ) { <nl> return superclass ; <nl> { <nl> return superclass ; <nl> } <nl> @ override <nl>
ppp b / byte - buddy - dep / src / main / java / net / bytebuddy / dynamic / <unk> / subclass / <unk> . java <nl> public class <unk> <nl> @ override <nl> public <unk> <unk> ( ) { <nl> return superclass ; <nl> { <nl> return superclass ; <nl> } <nl> @ override
ppp b / byte - buddy - dep / src / main / java / net / bytebuddy / dynamic / <unk> / subclass / <unk> . java <nl> public class <unk> <nl> @ override <nl> public <unk> <unk> ( ) { <nl> return superclass ; <nl> { <nl> return superclass ; <nl> } <nl>
ppp b / byte - buddy - dep / src / main / java / net / bytebuddy / dynamic / <unk> / subclass / <unk> . java <nl> public class <unk> <nl> @ override <nl> public <unk> <unk> ( ) { <nl> return superclass ; <nl> { <nl> return superclass ; <nl> } <nl> @ override <nl> <nl>
ppp b / byte - buddy - dep / src / main / java / net / bytebuddy / dynamic / <unk> / subclass / <unk> . java <nl> public class <unk> <nl> @ override <nl> public <unk> <unk> ( ) { <nl> return superclass ; <nl> { <nl> return superclass ; <nl> } <nl> @ override override <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d5755c008265b1a1f48c3166bbeaccdf3e4d5944 <nl> mode = push <nl> parent = 9aa5c366bd409119f0fa585f1bc650e4a2c95382 <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> . gradle <nl> build <nl>
ppp b / . gitignore <nl> . gradle <nl> build <nl> gen - src <nl>
ppp b / . gitignore <nl> . gradle <nl> build <nl> gen
ppp b / . gitignore <nl> . gradle <nl> build <nl> gen - <nl>
ppp b
====NEW EXAMPLE====
ppp b / plugins / groovy / resources / <unk> / <unk> . <unk> <nl>
ppp b / plugins / groovy / resources / <unk> / <unk>
ppp b / plugins / groovy / resources / <unk> / <unk> . <unk> <nl> contributor ( ctype : number ) { <nl> method name : " plus " , type : string , params : [ arg : : string ] ( ] ( ) ] ( ) ] ( ) ] ( " : string , params : arg arg : string ] <nl> } <nl>
ppp b / plugins / groovy / resources / <unk> / <unk> . <unk> <nl> contributor ( ctype : number ) { <nl> method name : " plus " , type : string , params : [ arg : : string ] ( ] ( ) ] ( ) ] ( ) ] ( " : string , params : arg arg : ] ; <nl> } <nl>
ppp b / plugins / groovy / resources / <unk> / <unk> . <unk> <nl> contributor ( ctype : number ) { <nl> method name : " plus " , type : string , params : [ arg : : string ] ( ] ( ) ] ( ) ] ( ) ] ( " : string , params : arg arg : string ] ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / driver / src / test / org / mongodb / serialization / serializers / <unk> . java <nl> import static org . junit . assert . assertnull ; <nl> public class <unk> extends <unk> { <nl> <unk> serializer = <nl> new <unk> ( new <unk> ( 24 ) , <unk> . <unk> <unk> ( ) ) ; <nl> @ test <nl>
ppp b / driver / src / test / org / mongodb / serialization / serializers / <unk> . java <nl>
ppp b / driver / src / test / org / mongodb / serialization / serializers / <unk> . java <nl> import static org . junit . assert . assertnull ; <nl> public class <unk> extends <unk> { <nl> <unk> serializer = <nl> new <unk> ( new <unk> ( 24 ) , <unk> . <unk> <unk> ( ) ) ; <nl>
ppp b / driver / src / test / org / mongodb / serialization / serializers / <unk> . java <nl> import static org . junit . assert . assertnull ; <nl> public class <unk> extends <unk> { <nl> <unk> serializer = <nl> new <unk> ( new <unk> ( 24 ) , <unk> . <unk> <unk> ( ) ) ; <nl> @ <nl>
ppp b / driver / src / test / org / mongodb / serialization / serializers / <unk> . <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> . idea <nl> target <nl>
ppp b / . gitignore <nl> . idea <nl>
ppp b / . gitignore <nl> . idea <nl> <nl>
ppp
ppp b / . gitignore <nl> . idea <nl> target <nl> atlassian - ide - plugin . xml <nl> logs <nl> \ no newline at end of file <nl> * . . iml <nl> * . ipr <nl> # # eclipse - specific <nl> . settings / <nl> . classpath <nl>
====NEW EXAMPLE====
ppp b / src / commons / grails / util / <unk> . java <nl> public class <unk> { <nl> else { <nl>
ppp b / src / commons / grails / util / <unk> . java <nl>
ppp b / src / commons / grails / util / <unk> . java <nl> public class <unk> { <nl>
ppp b / src / commons / grails / util / <unk> . java <nl> public class <unk> <nl>
ppp b / src / commons / grails / util / <unk> . java <nl> public class <unk> {
====NEW EXAMPLE====
ppp b / src / gwt / src / org / rstudio / core / client / widget / modaldialogbase . java <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / modaldialogbase . java <nl> public abstract class modaldialogbase extends <unk> <nl> protected void <unk> ( ) <nl> { <nl> } <nl> \ no newline at end of file ( ) { <nl> { <nl> } <nl> protected void <unk> ( <unk> okbutton ) <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / modaldialogbase . java <nl> public abstract class modaldialogbase extends <unk> <nl> protected void <unk> ( ) <nl> { <nl> } <nl> \ no newline at end of file ( ) { <nl> { <nl> } <nl> protected void <unk> ( <unk> okbutton ) ) <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / modaldialogbase . java <nl> public abstract class modaldialogbase extends <unk> <nl> protected void <unk> ( ) <nl> { <nl> } <nl> \ no newline at end of file ( ) { <nl> { <nl> } <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / modaldialogbase . java <nl> public abstract class modaldialogbase extends <unk> <nl> protected void <unk> ( ) <nl> { <nl> } <nl> \ no newline at end of file ( ) { <nl> { <nl> } <nl> protected void <unk> ( <unk> okbutton okbutton <nl>
====NEW EXAMPLE====
ppp b / docs / <unk> / <unk> . md <nl> object <unk> { <nl> / / emit result <nl> counts . print ( ) <nl>
ppp b / docs / <unk> / <unk> . md <nl> object <unk> { <nl> / / emit result <nl> counts . print ( ) <nl> <nl> / / } <nl> } <nl>
ppp b / docs / <unk> / <unk> . md <nl> object <unk> { <nl> / / emit result <nl> counts . print ( ) <nl> <nl>
ppp b / docs / <unk> / <unk> . md <nl> object <unk> { <nl> / / emit result <nl> counts . print ( ) <nl> <nl> / / } <nl> } <nl> ~ ~ <nl>
ppp b / docs / <unk> / <unk> . md <nl> object <unk> { <nl> / / emit result <nl> counts . print ( ) <nl> <nl> / / } <nl> } <nl> ~ <nl>
====NEW EXAMPLE====
ppp b / scripts / <unk> . groovy <nl> links = [ <nl> ] <nl> target ( docs : " <unk> documentation for a grails project " ) { <nl>
ppp b / scripts / <unk> . groovy <nl> links = [ <nl> ] <nl>
ppp b / scripts / <unk> . groovy <nl> links = [ <nl>
ppp b / scripts / <unk> . groovy <nl> links = [ <nl> ] <nl> target ( docs : " <unk> documentation for a grails project " ) { <nl> / / depends ( compile , javadoc , groovydoc , <nl> } <nl> target ( <unk> : " sets up the doc directories " ) { <nl>
ppp b / scripts / <unk> . groovy <nl> links = [ <nl> <nl>
====NEW EXAMPLE====
ppp b / src / com / jwetherell / algorithms / datastructures . java <nl> public class datastructures { <nl> } <nl> { <nl> / / max - heap <nl> system . out . println ( " max - heap . " ) ; <nl> <unk> <unk> = new <unk> ( unsorted , type . max ) ; <nl>
ppp b / src / com / jwetherell / algorithms / datastructures . java <nl> public class datastructures { <nl> } <nl> { <nl>
ppp b / src / com / jwetherell / algorithms / datastructures . java <nl> public class datastructures { <nl> } <nl> { <nl> / / max - heap <nl> system . out . println ( " max - heap . " ) ; <nl> <unk> <unk> = new <unk> ( unsorted , type . max ; <nl>
ppp b / src / com / jwetherell / algorithms / datastructures . java <nl> public class datastructures { <nl> } <nl> { <nl> / / max - heap <nl> system . out . println ( " max - heap . " ) ; <nl> <unk> <unk> = new <unk> ( unsorted , type . max ) ) ; <nl>
ppp b / src / com / jwetherell / algorithms / datastructures . java <nl> public class datastructures { <nl> } <nl> { <nl> / / max - heap <nl> system . out . println ( " max - heap . " ) ; <nl> <unk> <unk> = new <unk> ( unsorted , type . max ) ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / telephony / java / android / telephony / <unk> . java <nl> public class <unk> { <nl> * @ hide <nl> * / <nl> public static final string <unk> = <nl> " <unk> " ; <nl> / * * the default value for every variable . * / <nl> private final static <unk> <unk> ; <nl>
ppp b / telephony / java / android / telephony / <unk> . java <nl> public class <unk> { <nl> * @ hide <nl> * / <nl> public static final string <unk> = <nl> " <unk> " ; <nl> / * * the default value for every variable . * / <nl> private final static <unk> <unk> <nl>
ppp b / telephony / java / android / telephony / <unk> . java <nl> public class <unk> { <nl> * @ hide <nl> * / <nl> public static final string <unk> = <nl> " <unk> " ; <nl> / * * the default value for every variable . * / <nl> private final static <unk> ; <nl>
ppp b / telephony / java / android / telephony / <unk> . java <nl> public class <unk> { <nl> * @ hide <nl> * / <nl> public static final string <unk> = <nl> " <unk> " ; <nl> / * * the default value for every variable . * / <nl> private final static <unk> <unk> ; ; <nl>
ppp b / telephony / java / android / telephony / <unk> . java <nl> public class <unk> { <nl> * @ hide <nl> * / <nl> public static final string <unk> = <nl> " <unk> " ; <nl> / * * the default value for every variable . * / <nl> private final static <unk> <unk> ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / src / test / groovy / util / <unk> . groovy <nl> import org . codehaus . groovy . transform . * <nl> * @ author <unk> <unk> <nl> * @ author <unk> <unk> <unk> <nl> * / <nl> class <unk> extends groovytestcase { <nl> def <unk> = new <unk> ( ) <nl>
ppp b / src / test / groovy / util / <unk> . groovy <nl> import org . codehaus . groovy . transform . * <nl> * @ author <unk> <unk> <nl> * @ author <unk> <unk> <unk> <nl> * / <nl> class <unk> extends groovytestcase { <nl> def <unk> = new <unk> ( <nl>
ppp b / src / test / groovy / util / <unk> . groovy <nl> import org . codehaus . groovy . transform . * <nl> * @ author <unk> <unk> <nl> * @ author <unk> <unk> <unk> <nl> * / <nl> class <unk> extends groovytestcase { <nl> def <unk> = new <unk> ( ( <nl>
ppp b / src / test / groovy / util / <unk> . groovy <nl> import org . codehaus . groovy . transform . * <nl> * @ author <unk> <unk> <nl> * @ author <unk> <unk> <unk> <nl> * / <nl> class <unk> extends groovytestcase { <nl> def <unk> = new <unk> ( ) ) <nl>
ppp b / src / test / groovy / util / <unk> . groovy <nl> import org . codehaus . groovy . transform . * <nl> * @ author <unk> <unk> <nl> * @ author <unk> <unk> <unk> <nl> * / <nl> class <unk> extends groovytestcase { <nl> def <unk> = new <unk> ( ) <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5b39c709dd138119d80376f886a683590e4c6491 <nl> mode = push <nl> parent = b7d81f5b9de2f971820cf26639c436e7101c5639 <nl> remote = git @ github . com : liferay / com - liferay - message - boards . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / message - boards / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / readme . txt <nl> mahout is a scalable machine learning library that implements many different app <nl> documentation <nl>
ppp b / readme . txt <nl> mahout is a scalable machine learning library that implements many different app <nl>
ppp b / readme . txt <nl> mahout is a scalable machine learning library that implements many different app <nl> <nl>
ppp b / readme . txt <nl> mahout is a scalable machine learning library that implements many different app documentation <nl>
ppp b / readme . txt <nl> mahout is a scalable machine learning library that implements many different app <nl> documentation <nl> see
====NEW EXAMPLE====
ppp b / docs / reference / indices / upgrade . asciidoc <nl> time as optimize . <nl> the ` upgrade ` api accepts the following request parameters : <nl> [ horizontal ] <nl> ` <unk> ` : : should the request wait the upgrade to complete . defaults <nl> to ` false ` . <nl> [ float ] <nl>
ppp b / docs / reference / indices / upgrade . asciidoc <nl> time as optimize . <nl> the ` upgrade ` api accepts the following request parameters : <nl> [ horizontal ] <nl> ` <unk> ` : : should the request wait the upgrade to complete . defaults <nl> to ` false ` . <nl>
ppp b / docs / reference / indices / upgrade . asciidoc <nl> time as optimize . <nl> the ` upgrade ` api accepts the following request parameters : <nl> [ horizontal ] <nl> ` <unk> ` : : should the request wait the upgrade to complete . defaults <nl> to ` false ` . <nl> [ float float <nl>
ppp b / docs / reference / indices / upgrade . asciidoc <nl> time as optimize . <nl> the ` upgrade ` api accepts the following request parameters : <nl> [ horizontal ] <nl> ` <unk> ` : : should the request wait the upgrade to complete . defaults <nl> to ` false ` ` <nl>
ppp b / docs / reference / indices / upgrade . asciidoc <nl> time as optimize . <nl> the ` upgrade ` api accepts the following request parameters : <nl> [ horizontal ] <nl> ` <unk> ` : : should the request wait the upgrade to complete . defaults <nl> to ` false ` . <nl> [ float <nl>
====NEW EXAMPLE====
ppp b / packager / blacklist . js <nl> / / <unk> . <nl> var <unk> = [ <nl> <unk> , <nl>
ppp b / packager / blacklist . js <nl> / / <unk> . <nl> var <unk> = [ <nl>
ppp b / packager / blacklist . js <nl> / / <unk> . <nl> var <unk> = [ <nl> <unk> <nl>
ppp b / packager / blacklist . js <nl> / / <unk> . <nl>
ppp b / packager / blacklist . js <nl>
====NEW EXAMPLE====
ppp b / libraries / reactnative / reactnativeviewattributes . js <nl> reactnativeviewattributes . uiview = { <nl> <unk> : true , <nl> <unk> : true , <nl> <unk> : true , <nl> <unk> : true ) <nl> <unk> : true , <nl> <unk> : true , <nl> <unk> : true , <nl>
ppp b / libraries / reactnative / reactnativeviewattributes . js <nl> reactnativeviewattributes . uiview = { <nl> <unk> : true , <nl> <unk> : true , <nl> <unk> : true , <nl> <unk> : true ) <nl> <unk> : true , <nl> <unk> : true , <nl> <unk> : true <nl>
ppp b / libraries / reactnative / reactnativeviewattributes . js <nl> reactnativeviewattributes . uiview = { <nl>
ppp b / libraries / reactnative / reactnativeviewattributes . js <nl> reactnativeviewattributes . uiview = { <nl> <unk> : true , <nl> <unk> : true , <nl> <unk> : true , <nl> <unk> : true ) <nl> <unk> : true , <nl> <unk> : true , <nl> <unk> : true true <nl>
ppp b / libraries / reactnative / reactnativeviewattributes . js <nl> reactnativeviewattributes . uiview = <nl>
====NEW EXAMPLE====
ppp b / project . clj <nl> ( defproject storm " 0 . 8 . 0 - " <nl> : : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm " <nl>
ppp b / project . clj <nl> ( defproject storm " 0 . 8 . 0 - " <nl> : : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm <nl>
ppp b / project . clj <nl> ( defproject storm " 0 . 8 . 0 - " <nl> : : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm jvm <nl>
ppp
ppp b / project . clj <nl> ( defproject storm " 0 . 8 . 0 - " <nl> : : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm " " <nl>
====NEW EXAMPLE====
ppp b / common / buildcraft / transport / pipes / <unk> . java <nl> public class <unk> extends pipe < <unk> > implements <unk> <nl> } <nl> private void <unk> ( ) { <nl> <unk> . configure ( 2 , 250 , 1 , 1500 ) ; <nl> <unk> . <unk> ( 1 , 10 ) ; <nl> } <nl>
ppp b / common / buildcraft / transport / pipes / <unk> . java <nl> public class <unk> extends pipe < <unk> > implements <unk> <nl> } <nl> private void <unk> ( ) { <nl> <unk> . configure ( 2 , 250 , 1 , 1500 ) ; <nl> <unk> . <unk> ( 1 , 10 ) ) ; <nl>
ppp b / common / buildcraft / transport / pipes / <unk> . java <nl> public class <unk> extends pipe < <unk> > implements <unk> <nl> } <nl> private void <unk> ( ) { <nl> <unk> . configure ( 2 , 250 , 1 , 1500 ) ; <nl> <unk> . <unk> ( 1 , 10 ) ; <nl>
ppp b / common / buildcraft / transport / pipes / <unk> . java <nl> public class <unk> extends pipe < <unk> > implements <unk> <nl> } <nl> private void <unk> ( ) { <nl> <unk> . configure ( 2 , 250 , 1 , 1500 ) ; <nl> <unk> . <unk> ( 1 , 10 ) ; <nl> <nl>
ppp b / common / buildcraft / transport / pipes / <unk> . java <nl> public class <unk> extends pipe < <unk> > implements <unk> <nl> } <nl> private void <unk> ( ) { <nl> <unk> . configure ( 2 , 250 , 1 , 1500 ) ; <nl> <unk> . <unk> ( 1 , 10 ) ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b4aee9ad9fafdea19872a0629817739b77cf3fbd <nl> mode = push <nl> parent = <nl> <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> * ~ <nl> *
ppp b / . gitignore <nl> * ~ <nl>
ppp b / . gitignore <nl> * ~ <nl> * . ds_store <nl> * . class <nl> . import - temp / <nl> * . iws <nl> - - temp / <nl> build / <nl> dist / <nl>
ppp b / . gitignore <nl> * ~ <nl> * . ds_store <nl> * . class <nl> . import - temp / <nl> * . iws <nl> - - temp / <nl> build / <nl> dist <nl>
ppp b / . gitignore <nl> * ~ <nl> * . ds_store <nl> * . class <nl> . import - temp / <nl> * . iws <nl> - - temp / <nl> build / <nl> dist dist <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> notifications : <nl> services
ppp b
ppp
ppp b / . travis . yml <nl> notifications : <nl> services : <nl> mongodb <nl> branches : <nl> - jeff . yemin - xx : <nl> - xx : <nl> - xx : <nl> - xx : maxpermsize ) { <nl>
ppp b / . travis . yml <nl> notifications : <nl> services : <nl> mongodb <nl> branches : <nl> - jeff . yemin - xx : <nl> - xx : <nl> - xx : <nl> - xx : <nl> jdk : <nl>
====NEW EXAMPLE====
ppp b / jre_emul / classes / java / lang / throwable . m <nl> static bool <unk> ( <unk> * element ) { <nl> [ cause release ] ; <nl> [ detailmessage release ] ; <nl> [ stacktrace release ] ; <nl> [ blogctr ( ] ; <nl> [ super dealloc ] ; <nl> } <nl>
ppp b / jre_emul / classes / java / lang / throwable . m <nl> static bool <unk> ( <unk> * element ) { <nl> [ cause release ] ; <nl> [ detailmessage release ] ; <nl> [ stacktrace release ] ; <nl> [ blogctr ( ] ; <nl> [ super dealloc ] ; <nl> <nl>
ppp b / jre_emul / classes / java / lang / throwable . m <nl>
ppp b / jre_emul / classes / java / lang / throwable . m <nl> static bool <unk> ( <unk> * element ) { <nl> [ cause release ] ; <nl> [ detailmessage release ] ; <nl> [ stacktrace release ] ; <nl> [ blogctr ( ] ; <nl> [ super dealloc ] ; <nl> }
ppp b / jre_emul / classes / java / lang / throwable . m <nl> static bool <unk> ( <unk> * element ) { <nl> [ cause release ] ; <nl> [ detailmessage release ] ; <nl> [ stacktrace release ] ; <nl> [ blogctr ( ] ; <nl> [ super dealloc ] ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / graphhopper . sh <nl> else <nl> fi <nl> if [ " $ java_opts " = " " ] ; then <nl>
ppp b / graphhopper . sh <nl> else <nl> fi <nl> if [ " $ java_opts " = " " ] ; <nl>
ppp b / graphhopper . sh <nl> else <nl> fi <nl> if [ " $ java_opts " = " " ] ; then <nl> java_opts = " - <unk>
ppp b / graphhopper . sh <nl> else <nl> fi <nl> if [ " $ java_opts " = " " ] ; then <nl> java_opts = " -
ppp b / graphhopper . sh <nl> else <nl> fi <nl> if [ " $ java_opts " = " " ] ; then <nl> java_opts = " - <unk> -
====NEW EXAMPLE====
ppp b / <unk> / jboss - as - <unk> / pom . xml <nl> < dependency > <nl> < groupid > org . python < / groupid > <nl>
ppp b / <unk> / jboss - as - <unk> / pom . xml <nl> < dependency > <nl> < groupid > org . python < / groupid > <nl> < artifactid > jython - standalone
ppp b / <unk> / jboss - as - <unk> / pom . xml <nl> < dependency > <nl> < groupid > org . python < / groupid > <nl> < artifactid > jython - standalone < /
ppp b / <unk> / jboss - as - <unk> / pom . xml <nl> < dependency > <nl> < groupid > org . python < / groupid > <nl> < artifactid > jython - standalone < / > <nl> < / > <nl> < / dependencies > <nl> < build > <nl>
ppp b / <unk> / jboss - as - <unk> / pom . xml <nl> < dependency > <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> test and beta releases will
ppp b / changelog . md <nl> test and beta releases
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * next release * * <nl> * updated simplified chinese translation <nl> * updated czech localization chinese translation <nl> * updated french translation <nl> * updated french translation <nl> * simplified chinese translation <nl> * updated traditional chinese translation <nl> * updated french translation <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * next release * * <nl> * updated simplified chinese translation <nl> * updated czech localization chinese translation <nl> * updated french translation <nl> * updated french translation <nl> * simplified chinese translation <nl> * updated traditional chinese translation <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * next release * * <nl> * updated simplified chinese translation <nl> * updated czech localization chinese translation <nl> * updated french translation <nl> * updated french translation <nl> * simplified chinese translation <nl> * updated traditional chinese translation <nl> * updated french translation translation <nl>
====NEW EXAMPLE====
ppp b / media / libstagefright / omxcodec . cpp <nl>
ppp b / media / libstagefright / omxcodec . cpp <nl> status_t
ppp b / media / libstagefright / omxcodec . cpp <nl> status_t omxcodec : : <unk> ( <nl> check_eq ( info - > <unk> , false ) ; <nl> status_t err : <nl> \ no longer thrown = null & & & & & & & watchdog ( ) ; <nl> status_t status_t err <nl> <unk> <unk> - <unk> ( <unk> , <unk> , info - > ) ; <nl>
ppp b / media / libstagefright / omxcodec . cpp <nl> status_t omxcodec : : <unk> ( <nl> check_eq ( info - > <unk> , false ) ; <nl> status_t err : <nl> \ no longer thrown = null & & & & & & & watchdog ( ) ; <nl> status_t status_t err <nl> <unk> <unk> - <unk> ( <unk> , <unk> , info - > ) ) ; <nl>
ppp b / media / libstagefright / omxcodec . cpp <nl> status_t omxcodec : : <unk> ( <nl> check_eq ( info - > <unk> , false ) ; <nl> status_t err : <nl> \ no longer thrown = null & & & & & & & watchdog ( ) ; <nl> status_t status_t err <nl> <unk> <unk> - <unk> ( <unk> , <unk> , info - > <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> actor - sdk / sdk - ios / actorsdk . xcodeproj / project . xcworkspace / xcuserdata <nl>
ppp b / . gitignore <nl> actor - sdk / sdk - ios / actorsdk . xcodeproj / project . xcworkspace / <nl>
ppp b / . gitignore <nl> actor - sdk / sdk - ios / actorsdk . xcodeproj / project . xcworkspace / xcuserdata <nl> actor - sdk / sdk - ios / actorsdk . xcworkspace / xcuserdata <nl> actor - sdk / sdk - ios / pods <nl> actor - sdk sdk sdk - ios
ppp b / . gitignore <nl> actor - sdk / sdk
ppp
====NEW EXAMPLE====
ppp b / src / jvm / clojure / lang / <unk> . java <nl> public static class <unk> extends <unk> implements <unk> , counted { <nl> } <nl> } <nl> static class <unk> extends <unk> implements <unk> { <nl> public final <unk> v ; <nl> public final int start ; <nl> public final int end ; <nl>
ppp b / src / jvm / clojure / lang / <unk> . java <nl> public static class <unk> extends <unk> implements <unk> , counted { <nl> } <nl> } <nl> static class <unk> extends <unk> implements <unk> { <nl> public final <unk> v ; <nl> public final int start ; <nl> public final int end of file <nl>
ppp b / src / jvm / clojure / lang / <unk> . java <nl> public static class <unk> extends <unk> implements <unk> , counted { <nl> } <nl> } <nl> static class <unk> extends <unk> implements <unk> { <nl> public final <unk> v ; <nl> public final int start ; <nl> public final int end <nl>
ppp b / src / jvm / clojure / lang / <unk> . java <nl> public static class <unk> extends <unk> implements <unk> , counted { <nl> } <nl> } <nl> static class <unk> extends <unk> implements <unk> { <nl> public final <unk> v ; <nl> public final int start ; <nl> public final int end end of file <nl>
ppp b / src / jvm / clojure / lang / <unk> . java <nl> public static class <unk> extends <unk> implements <unk> , counted { <nl> } <nl> } <nl> static class <unk> extends <unk> implements <unk> { <nl> public final <unk> v ; <nl> public final int start ; <nl> public final int ; <nl>
====NEW EXAMPLE====
ppp b / media / tests / <unk> / android . mk <nl> local_path : = $ ( call my - dir ) <nl> include $ ( clear_vars ) <nl> local_module_tags : = tests <nl> local_src_files : = $ ( call all - subdir - java - files ) <nl>
ppp b / media / tests / <unk> / android . mk <nl> local_path : = $ ( call my - dir ) <nl> include $ ( clear_vars ) <nl> local_module_tags : = tests <nl> local_src_files : = $ ( call all - subdir - java - files files <nl>
ppp b / media / tests / <unk> / android . mk <nl> local_path : = $ ( call my - dir ) <nl> include $ ( clear_vars ) <nl> local_module_tags : = tests <nl> local_src_files : = $ ( call all - subdir - java - files ) ) <nl>
ppp b / media / tests / <unk> / android . mk <nl> local_path : = $ ( call my - dir ) <nl> include $ ( clear_vars ) <nl> local_module_tags : = tests <nl> local_src_files : = $ ( call all - subdir - java - files <nl>
ppp b / media / tests / <unk> / android . mk <nl> local_path : = $ ( call my - dir ) <nl> include $ ( clear_vars ) <nl> local_module_tags : = tests <nl> local_src_files : = $ ( call all - subdir - java - files ) <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / test / poshi - runner / bnd . bnd <nl> bundle - name : liferay poshi runner <nl> bundle - symbolicname : com . liferay . poshi . runner <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . git <nl> \ no newline at end of file <nl>
ppp b / modules / test / poshi - runner / bnd . bnd <nl> bundle - name : liferay poshi runner <nl> bundle - symbolicname : com . liferay . poshi . runner <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 44 <nl> \ no newline at end of file <nl>
ppp b / modules / test / poshi - runner / bnd . bnd <nl> bundle - name : liferay poshi runner <nl> bundle - symbolicname : com . liferay . poshi . runner <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 0 <nl> \ no newline at end of file <nl>
ppp b / modules / test / poshi - runner / bnd . bnd <nl> bundle - name : liferay poshi runner <nl> bundle - symbolicname : com . liferay . poshi . runner <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 0 . <nl> \ no newline at end of file <nl>
ppp b / modules / test / poshi - runner / bnd . bnd <nl> bundle - name : liferay poshi runner <nl> bundle - symbolicname : com . liferay . poshi . runner <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / core / jni / android / print / <unk> . cpp <nl> # include " <unk> . h " <nl> # include " <unk> . h " <nl> # include " createjavaoutputstreamadaptor . h > <nl> # include " createjavaoutputstreamadaptor . h " <nl> namespace android { <nl>
ppp b / core / jni / android / print / <unk> . cpp <nl>
ppp b / core / jni / android / print / <unk> . cpp <nl> # include " <unk> . h " <nl> # include " <unk> . h " <nl> # include " createjavaoutputstreamadaptor . h > <nl> # include " createjavaoutputstreamadaptor . h " <nl> namespace android { <nl> <nl>
ppp b / core / jni / android / print / <unk> . cpp <nl> # include " <unk> . h " <nl> # include " <unk> . h " <nl> # include " createjavaoutputstreamadaptor . h > <nl> # include " createjavaoutputstreamadaptor . h " <nl>
ppp b / core / jni / android / print / <unk> . cpp <nl> # include " <unk> . h " <nl> # include " <unk> . h " <nl> # include " createjavaoutputstreamadaptor . h > <nl> # include " createjavaoutputstreamadaptor . h " <nl> namespace android {
====NEW EXAMPLE====
ppp b / portal - impl / classes / portal . properties <nl>
ppp b / portal - impl / classes / portal . properties <nl> <nl>
ppp b / portal - impl / classes / portal . properties
ppp b / portal - impl / classes / portal . properties <nl> \ <nl> / shopping / notify , \ <nl> \ <nl> / tags / rss <nl> * \ no newline at end of file <nl> / / / / / rss <nl> # # <nl> # # auto login <nl>
ppp b / portal - impl / classes / portal . properties <nl> \ <nl> / shopping / notify , \ <nl> \ <nl> / tags / rss <nl> * \ no newline at end of file <nl> / / / / / rss <nl> # # <nl> # # auto login login <nl>
====NEW EXAMPLE====
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> / n <nl> <unk> / n <nl> <unk> / n <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> / n <nl> <unk> / n <nl> <unk> / n <nl> <unk> <nl> public void testit <nl> / n <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> / n <nl> <unk> / n <nl> <unk> / n <nl> <unk> <nl> public void testit <nl> / n <nl> <unk> <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> / n <nl> <unk> / n <nl> <unk> / n <nl> <unk> <nl> public void testit <nl> n <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> / n <nl> <unk> / n <nl> <unk> / n <nl> <unk> <nl> public void testit <nl> / n <nl> <nl>
====NEW EXAMPLE====
ppp b / es / upstream <nl> subproject commit <unk> <nl>
ppp b / es / upstream <nl> subproject commit 7a2be18b470a8fb36b9062243943de7e4e6bfb97 <nl>
ppp b / es / upstream <nl> subproject commit 2557ddbdb2f85c116145d5e1035cf080c8dd7106 <nl>
ppp b / es / upstream <nl> subproject commit 3bde5d401a17d715f5b2e58f5e104a8a90a9702c <nl>
ppp b / es / upstream <nl> subproject commit 340a089eedc0568c6ef149c65bfa59886e3feee6 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = dbd38c331043620a126e30fb0a2422b1a5e3c53b <nl> mode = push <nl> parent = adc1b0b08750a623d3747fd1c2a59e8bfbe76db6 <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> oraclejdk7 <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> oraclejdk7 <nl> install : " mvn install
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> oraclejdk7 <nl> install : " mvn
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / <unk> / library / build . gradle <nl> group = " com . <unk> . <unk> " <nl> android { <nl> compilesdkversion 21 <nl> buildtoolsversion " 21 . 1 . 2 " <nl> <unk> " <unk> " <nl> defaultconfig { <nl> minsdkversion 8 <nl>
ppp b / <unk> / library / build . gradle <nl> group = " com . <unk> . <unk> " <nl> android { <nl> compilesdkversion 21 <nl> buildtoolsversion " 21 . 1 . 2 " <nl> <unk> " <unk> " <nl> defaultconfig { <nl> minsdkversion minsdkversion <nl>
ppp b / <unk> / library / build . gradle <nl> group = " com . <unk> . <unk> " <nl> android { <nl> compilesdkversion 21 <nl> buildtoolsversion " 21 . 1 . 2 " <nl> <unk> " <unk> " <nl> defaultconfig { <nl> minsdkversion 8 <nl> <nl>
ppp b / <unk> / library / build . gradle <nl> group = " com . <unk> . <unk> " <nl> android { <nl> compilesdkversion 21 <nl> buildtoolsversion " 21 . 1 . 2 " <nl> <unk> " <unk> " <nl> defaultconfig { <nl> minsdkversion <nl>
ppp b / <unk> / library / build . gradle <nl> group = " com . <unk> . <unk> " <nl> android { <nl> compilesdkversion 21 <nl> buildtoolsversion " 21 . 1 . 2 " <nl> <unk> " <unk> " <nl> defaultconfig { <nl> minsdkversion 8
====NEW EXAMPLE====
ppp b / media / libmedia / audiorecord . cpp <nl> void audiorecord : : releasebuffer ( buffer * <unk> ) <nl> <unk> audiorecord : : <unk> ( ) <nl> { <nl> <unk> lock ( mlock ) ; <nl> <unk> ( ) ; <nl> } <nl> / / must be called mlock held <nl>
ppp b / media / libmedia / audiorecord . cpp <nl> void audiorecord : : releasebuffer ( buffer * <unk> ) <nl> <unk> audiorecord : : <unk> ( ) <nl> { <nl> <unk> lock ( mlock ) ; <nl> <unk> ( ) ; <nl> } <nl> / / must be called mlock mlock <nl>
ppp b / media / libmedia / audiorecord . cpp <nl> void audiorecord : : releasebuffer ( buffer * <unk> ) <nl> <unk> audiorecord : : <unk> ( ) <nl> { <nl> <unk> lock ( mlock ) ; <nl> <unk> ( ) ; <nl> } <nl> / / must be called mlock <nl>
ppp b / media / libmedia / audiorecord . cpp <nl> void audiorecord : : releasebuffer ( buffer * <unk> ) <nl>
ppp b / media / libmedia / audiorecord . cpp <nl> void audiorecord : : releasebuffer ( buffer * <unk> ) <nl> <unk> audiorecord : : <unk> ( ) <nl> { <nl> <unk> lock ( mlock ) ; <nl> <unk> ( ) ; <nl> } <nl> / / must be called mlock held held <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version_name = 2 . 1 <nl> version_code = 14 <nl>
ppp b / gradle . properties <nl> version_name = 2 . 1 <nl> version_code = 14 <nl> group =
ppp b / gradle . properties <nl> version_name = 2 . 1 <nl> version_code = 14 <nl> group
ppp b / gradle . properties <nl> version_name = 2 . 1 <nl> version_code = 14 <nl> group = com
ppp b / gradle . properties <nl> version_name = 2 . 1 <nl> version_code = 14 <nl> group = com .
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version_name = 1 . 0 . 3 <nl> version_code = 1 <nl> group = com . github . agrosner <nl>
ppp b / gradle . properties <nl> version_name = 1 . 0 . 3 <nl> version_code = 1 <nl> group = com . github . agrosner agrosner <nl>
ppp b / gradle . properties <nl> version_name = 1 . 0 . 3 <nl> version_code = 1 <nl> group = com . github . . <nl>
ppp b / gradle . properties <nl> version_name = 1 . 0 . 3 <nl> version_code = 1 <nl> group = com . github . agrosner <nl> <nl>
ppp b / gradle . properties <nl> version_name = 1 .
====NEW EXAMPLE====
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 4 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 . - ' <nl> smackminandroidsdk = 8 <nl> } <nl> } <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 4 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 . - ' <nl> smackminandroidsdk = 8 <nl> } <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 4 ' <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 4 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 . - ' <nl> smackminandroidsdk = 8 } <nl> } <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 4 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 . - ' <nl> smackminandroidsdk = 8 <nl> } } <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> cucumber - jvm also integrates with the following dependency injection containers : <nl> * <unk> <nl> * spring <nl> * updated french translation <nl> / weld weld <nl> # # downloading / installation <nl>
ppp b / readme . md <nl> cucumber - jvm also integrates with the following dependency injection containers : <nl> * <unk> <nl> * spring <nl> * updated french translation <nl> / weld weld <nl> # # downloading / installation <nl> <nl>
ppp b / readme . md <nl> cucumber - jvm also integrates
ppp b / readme . md <nl> cucumber - jvm also
ppp b / readme . md <nl> cucumber - jvm also integrates with the following dependency injection containers : <nl> * <unk> <nl> * spring <nl> * updated french translation <nl> / weld weld <nl> # # downloading / <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> repositories { <nl> } <nl> <unk> { <nl> compile ' com . novoda : image - - core : 2 . 0 beta ' <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> repositories { <nl> } <nl> <unk> { <nl>
ppp b / readme . md <nl> repositories { <nl> } <nl>
ppp b / readme . md <nl> repositories { <nl> } <nl> <unk> { <nl> compile
ppp b / readme . md <nl> repositories { <nl> } <nl> <unk> { <nl> compile ' com . novoda : image - - core : 2 . 0 beta ' <nl> } <nl> ` ` <nl>
====NEW EXAMPLE====
ppp b / modules / portal - scripting / portal - scripting - ruby / bnd . bnd <nl>
ppp b / modules / portal - scripting / portal - scripting - ruby / bnd . bnd <nl> bundle - name : liferay portal scripting ruby <nl>
ppp b / modules / portal - scripting / portal - scripting - ruby / bnd . <nl>
ppp b / modules / portal - scripting / portal - scripting - ruby / bnd . bnd
ppp b / modules / portal - scripting / portal - scripting - ruby / bnd . bnd <nl> bundle - name : liferay portal scripting <nl>
====NEW EXAMPLE====
ppp b / record - and - playback / core / scripts / bigbluebutton . yml <nl> <unk> : / var / bigbluebutton / deskshare <nl> <unk> : / var / bigbluebutton <nl> <unk> : 127 . 0 . 0 . 1 <nl> <unk> : <unk> <nl> <unk> : 192 . 168 . 0 . 166 <nl>
ppp b / record - and - playback / core / scripts / bigbluebutton . yml <nl> <unk> : / var / bigbluebutton / deskshare <nl> <unk> : / var / bigbluebutton <nl> <unk> : 127 . 0 . 0 . 1 <nl> <unk> : <unk> <nl> <unk> : 192 . 168 . 0 . 166 166 <nl>
ppp b / record - and - playback / core / scripts / bigbluebutton . yml <nl> <unk> : / var / bigbluebutton / deskshare <nl> <unk> : / var / bigbluebutton <nl> <unk> : 127 . 0 . 0 . 1 <nl> <unk> : <unk> <nl> <unk> : 192 . 168 . 0 . <nl>
ppp b / record - and - playback / core / scripts / bigbluebutton . yml <nl> <unk> : / var / bigbluebutton / deskshare <nl> <unk> : / var / bigbluebutton <nl> <unk> : 127 . 0 . 0 . 1 <nl> <unk> : <unk> <nl> <unk> : 192 . 168 . 0 . . <nl>
ppp b / record - and - playback / core / scripts / bigbluebutton . yml <nl> <unk> : / var / bigbluebutton / deskshare <nl> <unk> : / var / bigbluebutton <nl> <unk> : 127 . 0 . 0 . 1 <nl> <unk> : <unk> <nl> <unk> : 192 . 168 . 0 . 166
====NEW EXAMPLE====
ppp b / readme . md <nl> public class testmodelview extends basemodelview < testmodel2 > { <nl> [ <unk> ] ( https : / / github . github . com . / / https : / https : / / github . com / <unk> ) <nl>
ppp b / readme . md <nl> public class testmodelview extends basemodelview < testmodel2 > { <nl> [ <unk> ] ( https : / / github . github . com . / / https : / https : / / github . com / <unk> ) ) <nl>
ppp b / readme . md <nl> public class testmodelview extends basemodelview < testmodel2 > { <nl> [ <unk> ] ( https : / / github . github . com . / / https : / https : / / github . com / <unk> ) <nl> <nl>
ppp b / readme . md <nl> public class testmodelview extends basemodelview < testmodel2 > { <nl> [ <unk> ] ( https : / / github . github . com . / / https : / https : / / github . com /
ppp b / readme . md <nl> public class testmodelview extends basemodelview < testmodel2 > { <nl> [ <unk> ] ( https : / / github . github . com . / / https : / https : / / github . com / <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / engine / src / main / resources / assets / <unk> / player / <unk> . prefab <nl> " <unk> " : " always " <nl> } , <nl> " <unk> " : { <nl> " permissions ( " " " : [ ] <nl> } <nl> } <nl>
ppp b / engine / src / main / resources / assets / <unk> / player / <unk> . prefab <nl> " <unk> " : " always " <nl> } , <nl> " <unk> " : { <nl> " permissions ( " " " : [ ] <nl> } <nl> <nl>
ppp b / engine / src / main / resources / assets / <unk> / player / <unk> . prefab <nl>
ppp b / engine / src / main / resources / assets / <unk> / player / <unk> . prefab <nl> " <unk> " : " always " <nl> } , <nl> " <unk> " : { <nl> " permissions ( " " " : [ ] <nl> } <nl> } <nl> <nl>
ppp b / engine / src / main / resources / assets / <unk> / player / <unk> . prefab <nl> " <unk> " : " always " <nl> } , <nl> " <unk> " : { <nl> " permissions ( " " " : [ ] <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < ! - - <nl>
ppp
ppp b / pom . xml <nl> < ! - - <nl> < compilerargument > - xlint : unchecked < / compilerargument > <nl> - > <nl> <nl> < source > . . < / source > <nl> \ no newline at end of file <nl> < / 1 . . 6 < / source > <nl> < target > 1 . 6 < / target > <nl> < / configuration > <nl>
ppp b / pom . xml <nl> < ! - - <nl> < compilerargument > - xlint : unchecked < / compilerargument > <nl> - > <nl> <nl> < source > . . < / source > <nl> \ no newline at end of file <nl> < / 1 . . 6 < / source > <nl> < target > 1 . 6 < / target > <nl> < / configuration > > <nl>
ppp b / pom . xml <nl> < ! - - <nl> < compilerargument > - xlint : unchecked < / compilerargument > <nl> - > <nl> <nl> < source > . . < / source > <nl> \ no newline at end of file <nl> < / 1 . . 6 < / source > <nl> < target > 1 . 6 < / target > <nl> < / configuration <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> how to get beta releases : <nl> * phone number <nl> * serial # <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * phone number <nl>
ppp b / readme . md <nl> how to get beta releases : <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * phone <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * phone number <nl> * serial <nl>
====NEW EXAMPLE====
ppp b

ppp b /
ppp
ppp b / version . txt <nl> jetty - 7 . 3 . 0 . v20100517 <nl> 302344 and configurable the base cass fields <nl> 347617 dynamically assign rmi registry dynamically assign rmi registry dynamically assign rmi registry value extractors as well as well as well as well as well as <nl>
====NEW EXAMPLE====
ppp b / src / gwt / www / ace <nl> subproject commit <unk> <nl>
ppp b / src / gwt / www / ace <nl> subproject commit 815fbba48677e40bff2c3c114c4ce8dd1e35bc17 <nl>
ppp b / src / gwt / www / ace <nl> subproject commit fb3c754ea84cc38052f6e0eb280ecf42d3437705 <nl>
ppp b / src / gwt / www / ace <nl> subproject commit e2e68b402986beba3778c8b4753d939d51066b20 <nl>
ppp b / src / gwt / www / ace <nl> subproject commit ec2fcc0716311454454a8933ffd75c2398594b03 <nl>
====NEW EXAMPLE====
ppp b / core / jni / <unk> . cpp <nl> # include < nativehelper / <unk> . h > <nl>
ppp b / core / jni / <unk> . cpp <nl> # include < nativehelper / <unk> . h <nl>
ppp b / core / jni / <unk> . cpp <nl>
ppp b / core / jni / <unk> . cpp <nl> # include < nativehelper / <unk> . h > <nl> # include < <unk> / androidruntime . h > <nl> # ifdef use_opengl_renderer <nl> include include < / <unk> h > <nl> > <nl> > <nl> > <nl> void void <unk> <unk> ( egldisplay <unk> , <unk> surface ) ; <nl> endif endif <nl>
ppp b / core / jni / <unk> . cpp <nl> # include < nativehelper / <unk> . h > <nl> # include < <unk> / androidruntime . h > <nl> # ifdef use_opengl_renderer <nl> include include < / <unk> h > <nl> > <nl> > <nl> > <nl> void void <unk> <unk> ( egldisplay <unk> , <unk> surface ) ; <nl> endif <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / project / build . scala <nl> import com . typesafe . sbt . less . import . lesskeys <nl>
ppp b / project / build . scala <nl> import com . typesafe . sbt . less . import . lesskeys <nl> object applicationbuild extends build { <nl>
ppp b / project / build . scala <nl> import com . typesafe . sbt . less . import . <nl>
ppp b / project / build . scala <nl> import com . typesafe
ppp b / project / build . scala <nl> import com . typesafe . sbt . less . import . lesskeys <nl> object applicationbuild extends build { <nl> val appname = " graylog - web - interface " <nl> val appversion = " 1 . 2 . 1 . 0 - " <nl> val appdependencies = = ( <nl> cache , <nl> javacore , <nl>
====NEW EXAMPLE====
ppp b / jre_emul / classes / nsobject + javaobject . h <nl> __attribute__ ( ( unused ) ) static inline id <unk> ( id ) { <nl>
ppp b / jre_emul / classes / nsobject + javaobject . h <nl> __attribute__ ( ( unused ) ) static inline id <unk> ( id ) ) <nl>
ppp b / jre_emul / classes / nsobject + javaobject . h <nl> __attribute__ ( ( unused ) ) static inline id <unk> ( id ) ) ; <nl>
ppp b / jre_emul / classes / nsobject + javaobject . h <nl> __attribute__ ( ( unused ) ) static inline id <unk> ( id ) ; <nl>
ppp b / jre_emul / classes / nsobject + javaobject . h <nl> __attribute__ ( ( unused ) ) static inline id <unk> ( id ) { <nl> } <nl>
====NEW EXAMPLE====
ppp b / docs / tutorial . md <nl> var <unk> = [ <nl> # # # render a <nl>
ppp b / docs / tutorial . md <nl> var <unk> = [ <nl> # # # render a movie <nl>
ppp b / docs / tutorial . md <nl> var <unk> = [ <nl> # # # render a movie <unk> <nl>
ppp b / docs / tutorial . md <nl> var <unk> = [ <nl>
ppp b / docs / tutorial . md <nl> var <unk> = <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> - > <nl> <
ppp b / pom . xml <nl> - > <nl> < <unk>
ppp b / pom . xml <nl> - > <nl> < <unk> > 256m < / <unk> > <nl> < <unk> > 1024m < / <unk> > <nl> < / > <nl>
ppp b / pom . xml <nl> - > <nl>
ppp b / pom . xml <nl> - > <nl> < <unk> > 256m < / <unk> > <nl> < <unk> > 1024m < / <unk> > <nl> < / > <nl> < /
====NEW EXAMPLE====
ppp b / dashboard / src / components / widget / list / che - list . styl <nl>
ppp b / dashboard / src / components / widget / list / che - list . styl <nl> . che - list <nl>
ppp b / dashboard / src / components / widget / list / che - list . <nl>
ppp b / dashboard / src / components / widget / list / che - list . styl <nl> . che - list <nl> che - border - radius ( 2px ) <nl> box - shadow - bigger ( ) <nl> border 1px solid $ list - separator - color - snapshot <nl> display block <nl> padding 0px <nl> background - color $ background - color <nl>
ppp b / dashboard / src / components / widget / list / che - list . styl <nl> . che - <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> project . ext { <nl> version_name = 1 . 1 . 1 - snapshot <nl> group = pl . droidsonroids . gif <nl> pom_description = views and drawable for displaying animated gifs for android <nl>
ppp b / gradle . properties <nl> project . ext { <nl>
ppp b / gradle . properties <nl> project . ext { <nl> version_name = 1 . 1 . 1 - snapshot <nl> group = pl . droidsonroids . gif <nl> pom_description = views and drawable for displaying animated gifs for <nl>
ppp b / gradle . properties <nl> project . ext { <nl> version_name = 1 . 1 . 1 - snapshot <nl> group = pl . droidsonroids . gif <nl> pom_description = views and drawable for displaying animated gifs for android android <nl>
ppp b / gradle . properties <nl> project . ext { <nl> version_name = 1 . 1 . 1 - snapshot <nl> group = pl . droidsonroids . gif <nl> pom_description = views and drawable for displaying animated gifs for for <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / src / main / java / com / airbnb / airpal / <unk> . java <nl> public class <unk> extends configuration <nl> @ setter <nl> @ jsonproperty <nl>
ppp b / src / main / java / com / airbnb / airpal / <unk> . java <nl> public class <unk> extends configuration <nl> @ setter <nl> @ jsonproperty <nl> @ notnull <nl>
ppp b / src / main / java / com / airbnb / airpal / <unk> . java <nl> public class <unk> extends configuration <nl> @ setter <nl>
ppp b / src / main / java / com / airbnb / airpal / <unk> . java <nl> public class <unk> extends configuration <nl> @ setter <nl> @ jsonproperty <nl> @
ppp b / src / main / java / com / airbnb / airpal / <unk> . java <nl> public class <unk> extends configuration <nl> @ setter <nl> @ jsonproperty <nl> @ <nl>
====NEW EXAMPLE====
ppp b / src / test / java / org / mapdb / <unk> . java <nl>
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl>
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> { <nl> @ test <nl>
ppp b / src / test / java / org / mapdb / <unk> . <nl>
ppp b / src / test / java / org / mapdb / <unk> . java <nl> public class <unk> <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> group = com . facebook . fresco <nl> # deps for gradle <nl> build_tools_version = 23 . 0 . 1 <nl> compile_sdk_version = 23 <nl> <unk> = 2 . 1 . 0 <nl> <unk> = 2 . 1 . 0 <nl> # deps for libraries <nl>
ppp b / gradle . properties <nl> group = com . facebook . fresco <nl> # deps for gradle <nl> build_tools_version = 23 . 0 . 1 <nl> compile_sdk_version = 23 <nl> <unk> = 2 . 1 . 0 <nl> <unk> = 2 . 1 . 0 <nl> # deps for for <nl>
ppp b / gradle . properties <nl> group = com . facebook . fresco <nl> # deps for gradle <nl> build_tools_version = 23 . 0 . 1 <nl> compile_sdk_version = 23 <nl> <unk> = 2 . 1 . 0 <nl> <unk> = 2 . 1 . 0 <nl> # deps for libraries libraries <nl>
ppp b / gradle . properties <nl> group = com . facebook . fresco <nl> # deps for gradle <nl> build_tools_version = 23 . 0 . 1 <nl> compile_sdk_version = 23 <nl> <unk> = 2 . 1 . 0 <nl> <unk> = 2 . 1 . 0 <nl>
ppp b / gradle . properties <nl> group = com . facebook . fresco <nl> # deps for gradle <nl> build_tools_version = 23 . 0 . 1 <nl> compile_sdk_version = 23 <nl> <unk> = 2 . 1 . 0 <nl> <unk> = 2 . 1 . 0 <nl> # deps for <nl>
====NEW EXAMPLE====
ppp b / servers / src / main / java / tachyon / master / masterbase . java <nl> public abstract class masterbase implements master { <nl> mjournal = preconditions . checknotnull ( journal ) ; <nl> } <nl>
ppp b / servers / src / main / java / tachyon / master / masterbase . java <nl> public abstract class masterbase implements master { <nl> mjournal = preconditions . checknotnull ( journal ) ; <nl>
ppp b / servers / src / main / java / tachyon / master / masterbase . java <nl> public abstract class masterbase implements master { <nl> mjournal = preconditions . checknotnull ( journal ) ; <nl> } <nl> boolean boolean isstandbymode ) { <nl> return ! misleader ; <nl> } <nl>
ppp b / servers / src / main / java / tachyon / master / masterbase . java <nl> public abstract class masterbase implements master { <nl> mjournal = preconditions . checknotnull ( journal ) ; <nl> }
ppp b / servers / src / main / java / tachyon / master / masterbase . java <nl> public abstract class masterbase implements master { <nl> mjournal = preconditions . checknotnull ( journal ) ) ; <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk
ppp b / . travis . yml <nl> language : java <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk :
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> oraclejdk8 <nl> jdk : <nl> jdk : <nl>
====NEW EXAMPLE====
ppp b / framework / default . properties <nl> # indicates whether an apk should be generated for each density . <nl> split . density = false <nl> # project target . <nl> target = android - 8 <nl> apk - configurations = <nl>
ppp b / framework / default . properties <nl> # indicates whether an apk should be generated for each density . <nl> split . density = false <nl> # project target . <nl> target = android - 8 <nl> apk - configurations =
ppp b / framework / default . properties <nl> # indicates whether an apk should be generated for each density . <nl> split . density = false <nl> # project target . <nl> target = android - 8 <nl> apk - configurations = <nl> <nl>
ppp b / framework / default . properties <nl> # indicates whether an apk should be generated for each density . <nl> split . density = false <nl> # project target . <nl> target = android - 8 <nl> apk - configurations <nl>
ppp b / framework / default . properties <nl> # indicates whether an apk should be generated for each density . <nl> split . density = false <nl> # project target . <nl> target = android - 8 <nl> apk - configurations = = <nl>
====NEW EXAMPLE====
ppp b / docs / <unk> . xml <nl> < module name
ppp b / docs / <unk> . xml <nl> < module
ppp b / docs / <unk> . xml <nl> < module name = " checker " > <nl> < module name = " <unk> " / > <nl>
ppp b / docs / <unk> . xml <nl> < module name =
ppp b / docs / <unk> . xml <nl> < module name = " checker " > <nl> < module name = " <unk> " / > <nl> \ no newline at end of file <nl> name name = " <unk> " / > <nl> < module name = " translation " / > <nl>
====NEW EXAMPLE====
ppp b / notice <nl> this product contains modified source code from <unk> library , by matthias <unk> : <nl>
ppp b / notice <nl> this product contains modified source code from <unk> library , by matthias <unk> <nl>
ppp b / notice <nl> this product contains modified source code from <unk> library , by matthias <unk> : <nl> copyright ( c ) 2008 , matthias <unk> <nl> * license : new bsd ( http : / / directory . . <unk> . org / wiki / license : <unk> ) <nl> * homepage : : : / / www . <unk> . de / content / / / / / / / / <nl>
ppp b / notice <nl> this product contains modified source code from <unk> library , by matthias <unk> : <nl> copyright ( c ) 2008 , matthias <unk> <nl> * license : new bsd ( http : / / directory . . <unk> . org / wiki / license : <unk> ) <nl> * homepage : : : / / www . <unk> . de / content / / / / / / / <nl>
ppp b / notice <nl> this product contains modified source code from <unk> library , by matthias <unk> : <nl> copyright ( c ) 2008 , matthias <unk> <nl> * license : new bsd ( http : / / directory . . <unk> . org / wiki / license : <unk> ) <nl> * homepage : : : / / www . <unk> . de / content / / / / / / / / / <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> or look at this : <nl> < dependency > <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 2 . 7 < / version > <nl> < scope > compile < / scope > <nl> < / dependency > <nl> ` ` ` <nl>
ppp b / readme . md <nl> or look at this : <nl> < dependency > <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 2 . 7 < / version > <nl> < scope > compile < / scope > <nl> < / dependency > <nl> ` ` <nl>
ppp b / readme . md <nl> or look at this : <nl> < dependency > <nl>
ppp b / readme . md <nl> or look at this : <nl> < dependency > <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 2 . 7 < / version > <nl> < scope > compile < / scope > <nl> < / dependency > <nl> ` ` ` ` <nl>
ppp b / readme . md <nl> or look at this : <nl>
====NEW EXAMPLE====
ppp b / fml <nl> subproject commit <unk> <nl>
ppp b / fml <nl> subproject commit <nl>
ppp b / fml <nl> subproject commit d08ed6535b6984e4535989b286da8ae14aef78cf <nl>
ppp b / fml <nl> subproject commit fba07bc558372a1f3bee80b837495cf6bf8e0a5a <nl>
ppp b / fml <nl> subproject commit 4d400f5d7c8a766dfb079c915308a2eeccfc0f8b <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> * . iml <nl> work / <nl> / data / <nl> logs / <nl>
ppp b / . gitignore <nl> * . iml <nl> work / <nl> / data / <nl> logs / <nl> / logs <nl> <nl> . ds_store <nl> build / <nl>
ppp b / . gitignore <nl> * . iml <nl>
ppp b / . gitignore <nl> * . iml <nl> work / <nl> / data / <nl> logs / <nl> / logs <nl> <nl> . ds_store <nl> build build <nl>
ppp b / . gitignore <nl> * . iml <nl> work / <nl> / data / <nl> logs / <nl> / logs <nl> <nl> . ds_store <nl> build / <nl> <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> in
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> in in
====NEW EXAMPLE====
ppp b / res / layout / <unk> . xml <nl> android : maxlines = " 1 " <nl>
ppp b / res / layout / <unk> . xml <nl> android : maxlines = " 1 <nl>
ppp b / res / layout / <unk> . xml <nl>
ppp b / res / layout / <unk> . xml <nl> android
ppp b / res / layout / <unk> . xml <nl> android : maxlines = " 1 " <nl> android : paddingright = " 8dip " <nl> android : text = " 5 : <unk> " <nl> android : : orientation | screensize | screensize <nl> : : textappearance = " ? android : attr / " <nl> android : layout_torightof = " @ + id / <unk> " <nl> / > <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / res / layout / <unk> . xml <nl> android : layout_alignparenttop = " true " <nl>
ppp b / res / layout / <unk> . xml <nl> android : layout_alignparenttop = " true <nl>
ppp b / res / layout / <unk> . xml <nl>
ppp b / res / layout / <unk> . xml <nl> android
ppp
====NEW EXAMPLE====
ppp b / settings . gradle <nl> \ no newline at end of

ppp b / settings . gradle <nl> \ no newline at end of file
ppp b
ppp
====NEW EXAMPLE====
ppp b / enterprise / ha / src / main / java / org / neo4j / kernel / highlyavailablegraphdatabase . java <nl> public class highlyavailablegraphdatabase extends <unk> <nl> highest = max ( highest , <unk> ( file ) ) ; <nl> } <nl> } <nl>
ppp b / enterprise / ha / src / main / java / org / neo4j / kernel / highlyavailablegraphdatabase . java <nl> public class highlyavailablegraphdatabase extends <unk> <nl> highest = max ( highest , <unk> ( file ) ) ; <nl> } <nl>
ppp b / enterprise / ha / src / main / java / org / neo4j / kernel / highlyavailablegraphdatabase . java <nl> public class highlyavailablegraphdatabase extends <unk> <nl> highest = max ( highest , <unk> ( file ) ) ; <nl> } } <nl>
ppp b / enterprise / ha / src / main / java / org / neo4j / kernel / highlyavailablegraphdatabase . java <nl> public class highlyavailablegraphdatabase extends <unk> <nl> highest = max ( highest , <unk> ( file ) ) ; <nl> } <nl> } <nl> } <nl>
ppp b / enterprise / ha / src / main / java / org / neo4j / kernel / highlyavailablegraphdatabase . java <nl> public class highlyavailablegraphdatabase extends <unk> <nl> highest = max ( highest , <unk> ( file ) ) ; <nl> } <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / core / java / android / service / <unk> / <unk> . java <nl> public abstract class <unk> extends service { <nl> case <unk> : <nl> return <unk> ; <nl> default : <nl> null ; <nl> } <nl> <nl> } <nl>
ppp b / core / java / android / service / <unk> / <unk> . java <nl> public abstract class <unk> extends service { <nl> case <unk> : <nl> return <unk> ; <nl> default : <nl> null ; <nl> } <nl> } <nl>
ppp b / core / java / android / service / <unk> / <unk> . java <nl> public abstract class <unk> extends service { <nl> case <unk> : <nl> return <unk> ; <nl> default : <nl> null ; <nl> ; <nl> } <nl>
ppp b / core / java / android / service / <unk> / <unk> . java <nl> public abstract class <unk> extends service { <nl> case <unk> : <nl> return <unk> ; <nl> default : <nl> null ; <nl> } <nl>
ppp b / core / java / android / service / <unk> / <unk> . java <nl> public abstract class <unk> extends service { <nl> case <unk> : <nl> return <unk> ; <nl> default : <nl> null ; <nl> } } <nl> } <nl>
====NEW EXAMPLE====
ppp b / dummy - commit . txt <nl> \ no newline at end of file <nl>
ppp b / dummy - commit . txt <nl> \ no newline at end of file <nl> this
ppp b / dummy - commit . txt <nl> \ no newline at end of file <nl> this this if you need a dummy commit . testing <nl> \ no newline at end of file <nl>
ppp b / dummy - commit . txt <nl> \ no newline at end of file <nl> this this if you need a dummy commit testing - snapshot <nl> \ no newline at end of file <nl>
ppp b / dummy - commit . txt <nl> \ no newline at end of file <nl> this this if you need a dummy commit testing . <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / app / controllers / <unk> . rb <nl> class applicationcontroller < <unk> : : base <nl> include <unk> <nl> <unk> <nl> # helper : all # all helpers , all the time <nl> <unk> # see <unk> : : <unk> for details <nl> helper authorization : : <unk> <nl>
ppp b / app / controllers / <unk> . rb <nl> class applicationcontroller < <unk> : : base <nl> include <unk> <nl> <unk> <nl> # helper : all # all helpers , all the time <nl> <unk> # see <unk> : : <unk> for details <nl> helper authorization : : <nl>
ppp b / app / controllers / <unk> . rb <nl> class applicationcontroller < <unk> : : base <nl> include <unk> <nl> <unk> <nl>
ppp b / app / controllers / <unk> . rb <nl> class applicationcontroller < <unk> : : base <nl> include <unk> <nl> <unk> <nl> # helper : all # all helpers , all the time <nl> <unk> # see <unk> : : <unk> for details <nl>
ppp b / app / controllers / <unk> . rb <nl> class applicationcontroller < <unk> : : <nl>
====NEW EXAMPLE====
ppp b / src / main / resources / <unk> . properties <nl> simianarmy . <unk> . rule . <unk> . <unk> = 3 <nl> # simianarmy . <unk> . <unk> . client . <unk> = 1000 <nl> # append domain if owner tag has no domain <nl> simianarmy . <unk> . notification . <unk> = bar . com <nl>
ppp b / src / main / resources / <unk> . properties <nl> simianarmy . <unk> . rule . <unk> . <unk> = 3 <nl>
ppp b / src / main / resources / <unk> . properties <nl> simianarmy . <unk> . rule . <unk> . <unk> = 3 <nl> # simianarmy . <unk> . <unk> . client . <unk> = 1000 <nl> # append domain if owner tag has no domain <nl> simianarmy . <unk> . notification . <unk> = bar . . <nl>
ppp b / src / main / resources / <unk> . properties <nl> simianarmy . <unk> . rule . <unk> . <unk> = 3 <nl> # simianarmy . <unk> . <unk> . client . <unk> = 1000 <nl> # append domain if owner tag has no domain <nl> simianarmy . <unk> . notification . <unk> = bar . com com <nl>
ppp b / src / main / resources / <unk> . properties <nl> simianarmy . <unk> . rule . <unk> . <unk> = 3 <nl> # simianarmy . <unk> . <unk> . client . <unk> = 1000 <nl> # append domain if owner tag has no domain <nl> simianarmy . <unk> . notification . <unk> = bar . <nl>
====NEW EXAMPLE====
ppp b / app / <unk> . java <nl> public class <unk>
ppp b / app / <unk> . java <nl> public class
ppp b / app / <unk> . java <nl> public class <unk> extends applet <nl> this . height = height ; <nl> g = new <unk> ( width , height ) ; <nl> if ( ) { <nl> public void tellchangedsessionid ( ) ] ( ) ] ( ) ] ( ) ] ( ) ] ( ) ; <nl> ) ; <nl> } <nl>
ppp b / app / <unk> . java <nl> public class <unk> extends applet <nl> this . height = height ; <nl> g = new <unk> ( width , height ) ; <nl> if ( ) { <nl> public void tellchangedsessionid ( ) ] ( ) ] ( ) ] ( ) ] ( ) ] ( ) ) ; <nl> } <nl> } <nl>
ppp b / app / <unk> . java <nl> public class <unk> extends applet <nl> this . height = height ; <nl> g = new <unk> ( width , height ) ; <nl> if ( ) { <nl> public void tellchangedsessionid ( ) ] ( ) ] ( ) ] ( ) ] ( ) ] ( ) ; <nl> } ) ; <nl>
====NEW EXAMPLE====
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 2 . 1 - all . zip <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 2 . 1 - all . <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 2 . 1 - all zip <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 2 . 1 - all . . <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / distributions / gradle - 2 . 1 - all . git <nl>
====NEW EXAMPLE====
ppp b / plugins / user / src / main / java / com / <unk> / pinpoint / plugin / user / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void setup ( <unk> context ) { <nl> } <nl> } <nl>
ppp b / plugins / user / src / main / java / com / <unk> / pinpoint / plugin / user / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void setup ( <unk> context ) { <nl> } <nl>
ppp b / plugins / user / src / main / java / com / <unk> / pinpoint / plugin / user / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void setup ( <unk> context ) { <nl>
ppp b / plugins / user / src / main / java / com / <unk> / pinpoint / plugin / user / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void setup ( <unk> context ) { <nl> <nl> } <nl>
ppp b / plugins / user / src / main / java / com / <unk> / pinpoint / plugin / user / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public void setup ( <unk> context ) { <nl> ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / libraries / javascriptappengine / initialization / <unk> . js <nl> * / <nl> ' use strict ' ; <nl>
ppp b / libraries / javascriptappengine / initialization / <unk> . js <nl> * / <nl> ' use strict ' ; <nl> var
ppp b / libraries / javascriptappengine / initialization / <unk> . js <nl> * / <nl>
ppp b / libraries / javascriptappengine / initialization / <unk> . js <nl> * / <nl> ' use strict ' <nl>
ppp b / libraries / javascriptappengine / initialization / <unk> . js <nl>
====NEW EXAMPLE====
ppp b / src / com / google / javascript / jscomp / compiler . java <nl>
ppp b / src / com / google / javascript / jscomp
ppp b / src / com / google / javascript / jscomp / compiler . java <nl> public class compiler extends abstractcompiler { <nl> return <unk> ; <nl> } <nl> @ suppresswarnings ( ) & & & & & & & & ) ; <nl> } <nl> @ override <nl> public public <unk> ( ) { <nl> return <unk> ( ) . <unk> ( ) ; <nl>
ppp b / src / com / google / javascript / jscomp / compiler . java <nl> public class compiler extends abstractcompiler { <nl> return <unk> ; <nl> } <nl> @ suppresswarnings ( ) & & & & & & & & ) ; <nl> } <nl> @ override <nl> public public <unk> ( ) { <nl> return <unk> ( ) . <unk> ( ) ) ; <nl>
ppp b / src / com / google / javascript / jscomp / compiler . java <nl> public class compiler extends abstractcompiler { <nl> return <unk> ; <nl> } <nl> @ suppresswarnings ( ) & & & & & & & & ) ; <nl> } <nl> @ override <nl> public public <unk> ( ) { <nl> return <unk> ( ) . <unk> ( ) ; ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / plugins / sonar - java - plugin / pom . xml <nl> < configuration > <nl> < rules > <nl> < <unk> > <nl>
ppp b / plugins / sonar - java - plugin / pom . xml <nl> < configuration > <nl> < rules > <nl> < <unk> > <nl> <
ppp b / plugins / sonar - java - plugin / pom . xml <nl> < configuration > <nl> < rules > <nl> < <unk> <nl>
ppp b / plugins / sonar - java - plugin / pom . xml <nl> < configuration > <nl> < rules > <nl>
ppp b / plugins / sonar - java - plugin / pom . xml <nl> < configuration > <nl> < rules > <nl> < <unk> > <nl> < /
====NEW EXAMPLE====
ppp b / version . txt <nl> jetty - 7 . 0

ppp b
ppp
ppp b / version . txt <nl> jetty - 7 . 0 . 0 . rc3 7 7 august <nl> # # # # # # # # # # # # # # # # # # # # # # # # <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c81698af8acf7a98cd5088a1be5613d1f2ea4dd6 <nl> mode = push <nl> parent = 356187f90b3184448215cea41c0595d1fc8686c8 <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c81698af8acf7a98cd5088a1be5613d1f2ea4dd6 <nl> mode = push <nl> parent = 356187f90b3184448215cea41c0595d1fc8686c8 <nl> remote = git @ github . com : liferay / com - liferay - wiki git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - screens . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl>
ppp b / modules / apps / screens / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 2
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1538 : automatic back pressure at end of file <nl> * storm - storm - 1538 : : being thrown after utils conversion to java <nl> * storm - 1242 : migrate backtype . storm . command . config config value to java <nl> * storm - <unk> : port backtype . storm . util java <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1538 : automatic back pressure at end of file <nl> * storm - storm - 1538 : : being thrown after utils conversion to java <nl> * storm - 1242 : migrate backtype . storm . command . config config value to java <nl> * storm - <unk> : port backtype . storm . util to <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1538 : automatic back pressure at end of file <nl> * storm - storm - 1538 : : being thrown after utils conversion to java <nl> * storm - 1242 : migrate backtype . storm . command . config config value to java <nl> * storm - <unk> : port backtype . storm . util to java <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1538 : automatic back pressure at end of file <nl> * storm - storm - 1538 : : being thrown after utils conversion to java <nl> * storm - 1242 : migrate backtype . storm . command . config config value to java <nl> * storm - <unk> : port backtype . storm . util <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / catalina / ha / session / <unk> . java <nl> public class <unk> extends <unk> implements <unk> { <nl> } <nl> / * * <nl> * get cluster <unk> * <nl> * @ param request current request <nl> * @ return manager or null <nl>
ppp b / java / org / apache / catalina / ha / session / <unk> . java <nl> public class <unk> extends <unk> implements <unk> { <nl> } <nl> / * * <nl> * get cluster <unk> * <nl> * @ param request current request <nl> * @ return manager or or <nl>
ppp b / java / org / apache / catalina / ha / session / <unk> . java <nl> public class <unk> extends <unk> implements <unk> { <nl> } <nl> / * * <nl> * get cluster <unk> * <nl> * @ param request current request <nl> * @ return manager or <nl>
ppp b / java / org / apache / catalina / ha / session / <unk> . java <nl> public class <unk> extends <unk> implements <unk> { <nl> } <nl> / * * <nl> * get cluster <unk> * <nl> * @ param request current request <nl> * @ return manager or null <nl> <nl>
ppp b / java / org / apache / catalina / ha / session / <unk> . java <nl> public class <unk> extends <unk> implements <unk> { <nl> } <nl> / * * <nl> * get cluster <unk> * <nl> * @ param request current request <nl> * @ return manager or null
====NEW EXAMPLE====
ppp b / libraries / text / <unk> . m <nl> <unk> ( <unk> , textview . <unk> <nl>
ppp b / libraries / text / <unk> . m <nl> <unk> ( <unk> , textview . <nl>
ppp b / libraries / text / <unk> . m <nl> <unk> ( <unk> , textview . <unk> <nl> <unk> ( <unk> , textview . <unk> , <unk> <nl>
ppp b / libraries / text / <unk> . m <nl>
ppp b / libraries / text / <unk> . m <nl> <unk> (
====NEW EXAMPLE====
ppp b / idea / testdata / <unk> / imports / <unk> . expected . kt <nl> package to <nl> import a . f <nl>
ppp b / idea / testdata / <unk> / imports / <unk> . expected . kt <nl> package to <nl>
ppp b / idea / testdata / <unk> / imports / <unk> . expected . kt <nl> package to <nl> import a . f <nl> import
ppp b / idea / testdata / <unk> / imports / <unk> . expected . kt <nl> package to <nl> import a . f
ppp b / idea / testdata / <unk> / imports / <unk> . expected . kt <nl> package to <nl> import a
====NEW EXAMPLE====
ppp b / src / com / facebook / buck / <unk> / webserver . java <nl>
ppp b / src / com / facebook / buck / <unk> / webserver . java <nl> public class webserver { <nl> } <nl> } <nl> @ suppresswarnings ( ) ; <nl> } <nl> public class <unk> extends exception { <nl> public <unk> ( string message , exception clause ) { <nl>
ppp b / src / com / facebook / buck / <unk> /
ppp b / src / com / facebook / buck / <unk> / webserver . java <nl> public class webserver { <nl> } <nl> } <nl> @ suppresswarnings ( ) ; <nl> } <nl> public class <unk> extends exception { <nl> public <unk> ( string message , exception clause ) <nl>
ppp b / src / com / facebook / buck / <unk> / webserver . java <nl> public class webserver { <nl> } <nl> } <nl> @ suppresswarnings ( ) ; <nl> } <nl> public class <unk> extends exception { <nl> public <unk> ( string message , exception clause ) ) <nl>
====NEW EXAMPLE====
ppp b / distrib / <unk> . cmd <nl> set arch = amd64 <nl>
ppp b / distrib / <unk> . cmd <nl> set arch =
ppp b / distrib / <unk> . cmd <nl> set arch
ppp b / distrib / <unk> . cmd <nl> set arch = amd64 <nl> @ rem delete the gitblit service <nl> " <nl> \ no newline at end of file <nl> % % % \ % arch % \ <unk> . exe " / ds / / gitblit <nl> \ no newline at end of file <nl>
ppp b / distrib / <unk> . cmd <nl> set arch = amd64 <nl> @ rem delete the gitblit service <nl> " <nl> \ no newline at end of file <nl> % % % \ % arch % \ <unk> . exe " / ds / / gitblit <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> . nb - gradle <nl> . nb - gradle - properties <nl> . - properties <nl> . java - version <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> . nb - gradle <nl> . nb - gradle - properties <nl> . - properties <nl> . java - <nl>
ppp b / . gitignore <nl> atlassian - ide -
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> . nb - gradle <nl> . nb - gradle - properties <nl> . - properties <nl> . java - - <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> . nb - gradle <nl> . nb - gradle - properties <nl> . - properties <nl> . java - version version <nl>
====NEW EXAMPLE====
ppp b / main / src / com / google / refine / importing / <unk> . java <nl>
ppp b / main / src / com / google / refine / importing / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl>
ppp b / main / src / com / google / refine / importing / <unk> . java <nl> public class <unk> implements <unk> { <nl>
ppp b / main / src / com / google / refine / importing / <unk> . <nl>
ppp b / main / src / com / google / refine / importing / <unk> . java <nl> public class <unk> implements <unk> <nl>
====NEW EXAMPLE====
ppp b / src / main / java / org / jsoup / select / evaluator . java <nl> import java . util . regex . pattern ; <nl> * <unk> that an element matches the selector . <nl> * / <nl> public abstract class evaluator { <nl> evaluator ( ) { <nl> } <nl> <nl> * * * <nl>
ppp b / src / main / java / org / jsoup / select / evaluator . java <nl> import java . util . regex . pattern ; <nl> * <unk> that an element matches the selector . <nl> * / <nl> public abstract class evaluator { <nl> evaluator ( ) { <nl> } <nl>
ppp b / src / main / java / org / jsoup / select / evaluator . java <nl> import java . util . regex . pattern ; <nl> * <unk> that an element matches the selector . <nl> * / <nl> public abstract class evaluator { <nl> evaluator ( ) { <nl> } <nl> <nl> * * <nl>
ppp b / src / main / java / org / jsoup / select / evaluator . java <nl> import java . util . regex . pattern ; <nl> * <unk> that an element matches the selector . <nl> * / <nl> public abstract class evaluator { <nl> evaluator ( ) { <nl> { <nl>
ppp b / src / main / java / org / jsoup / select / evaluator . java <nl> import java . util . regex . pattern ; <nl> * <unk> that an element matches the selector . <nl> * / <nl> public abstract class evaluator { <nl> evaluator ( ) { <nl> } <nl> <nl> * * *
====NEW EXAMPLE====
ppp b / java / javax / servlet / <unk> . java <nl> public interface <unk> extends java . util . <unk> { <nl> public abstract void <unk> ( ) throws ioexception ; <nl> / * * <nl> * invoked when the request <unk> has been fully read <nl> <nl> <nl> * @ throws ioexception <nl> * / <nl>
ppp b / java / javax / servlet / <unk> . java <nl> public interface <unk> extends java . util . <unk> { <nl> public abstract void <unk> ( ) throws ioexception ; <nl> / * * <nl> * invoked when the request <unk> has been fully read <nl> <nl> <nl> * @ throws ioexception <nl> * <nl>
ppp b / java / javax / servlet / <unk> . java <nl> public interface <unk> extends java . util . <unk> { <nl> public abstract void <unk> ( ) throws ioexception ; <nl> / * * <nl> * invoked when the request <unk> has been fully read <nl> <nl> <nl> * @ throws ioexception <nl> * * <nl>
ppp b / java / javax / servlet / <unk> . java <nl> public interface <unk> extends java . util . <unk> { <nl> public abstract void <unk> ( ) throws ioexception ; <nl> / * * <nl> * invoked when the request <unk> has been fully read <nl> <nl> <nl> * @ throws ioexception <nl>
ppp b / java / javax / servlet / <unk> . java <nl> public interface <unk> extends java . util . <unk> { <nl> public abstract void <unk> ( ) throws ioexception ; <nl> / * * <nl> * invoked when the request <unk> has been fully read <nl> <nl> <nl> * @ throws ioexception <nl> * /
====NEW EXAMPLE====
ppp b / build . gradle <nl> project ( ' : aeron - driver ' ) { <nl> } <nl> run { <nl>
ppp b / build . gradle <nl> project ( ' : aeron - driver ' ) { <nl> } <nl> run { <nl> systemproperties (
ppp b / build . gradle <nl> project ( ' : aeron - driver ' ) { <nl> } <nl>
ppp b / build . gradle <nl> project ( ' : aeron - driver ' ) { <nl> } <nl> run { <nl> systemproperties ( '
ppp b / build . gradle <nl> project ( ' : aeron - driver ' ) { <nl> } <nl> run { <nl> systemproperties
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 0 < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 0 < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 0 < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 0 < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > <nl> > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 0 < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name name <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 1 < / version > <nl> < / parent > <nl> < properties > <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 1 < / version > <nl> < / parent > <nl> < properties <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 1 < / version > <nl> < / parent > <nl> < properties properties <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 1 < / version > <nl> < / parent > <nl>
ppp b / enterprise / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 1 < / version > <nl> < / parent > <nl> < properties > <nl> <nl>
====NEW EXAMPLE====
ppp b / build - dist . xml <nl> sh <unk> . sh < / echo > <nl> < param name = " zip . executable . dir " value = " $ { app . server . tomcat . dir } " / > <nl> < / antcall > <nl> < / target > <nl> < / project > <nl> \ no newline at end of file <nl>
ppp b / build - dist . xml <nl> sh <unk> . sh < / echo > <nl> < param name = " zip . executable . dir " value = " $ { app . server . tomcat . dir } " / > <nl> < / antcall > <nl> < / target > <nl> < / project > <nl> no newline at end of file <nl>
ppp b / build - dist . xml <nl> sh <unk> . sh < / echo > <nl> < param name = " zip . executable . dir " value = " $ { app . server . tomcat . dir } " / > <nl> < / antcall > <nl> < / target > <nl> < / project > <nl>
ppp b / build - dist . xml <nl> sh <unk> . sh < / echo > <nl> < param name = " zip . executable . dir " value = " $ { app . server . tomcat . dir } " / > <nl> < / antcall > <nl> < / target > <nl> < / project > \ no newline at end of file <nl>
ppp b / build - dist . xml <nl> sh <unk> . sh < / echo > <nl> < param name = " zip . executable . dir " value = " $ { app . server . tomcat . dir } " / > <nl> < / antcall > <nl> < / target > <nl> < / project > <nl> newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ef815b06f16d83c7662b3f3a64d73482e6ca9acd <nl> mode = push <nl> parent = 04cc4108acac13842c0a6d80168c23b5ee70ba1d <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / python / readme <nl> python - to
ppp b / python / readme <nl> python - to -
ppp b / python / readme <nl> python - to - libsvm interface <nl> introduction <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = " $ { <nl>
ppp b / python / readme <nl> python - to - libsvm interface <nl> introduction <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl>
ppp b / python / readme <nl> python - to - libsvm interface <nl> introduction <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = https : <nl>
====NEW EXAMPLE====
ppp b / gdx / src / com / badlogic / gdx / graphics / texture . java <nl> public interface texture <nl> public enum <unk> <nl> { <nl> <unk> , <nl> wrap <nl> } <nl> / * * <nl>
ppp b / gdx / src / com / badlogic / gdx / graphics / texture . java <nl> public interface texture <nl> public enum <unk> <nl> { <nl> <unk> , <nl> wrap <nl> } <nl> / * * * <nl>
ppp b / gdx / src / com / badlogic / gdx / graphics / texture . java <nl> public interface texture <nl> public enum <unk> <nl> { <nl> <unk> , <nl> wrap <nl> } <nl> / * * <nl> <nl>
ppp b / gdx / src / com / badlogic / gdx / graphics / texture . java <nl> public interface texture <nl> public enum <unk> <nl> { <nl> <unk> , <nl> wrap <nl> } <nl>
ppp b / gdx / src / com / badlogic / gdx / graphics / texture . java <nl> public interface texture <nl> public enum <unk> <nl> { <nl> <unk> , <nl> wrap <nl> } <nl> / * <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> library to implement the bottom navigation component from material design <unk> <nl>
ppp b / readme . md <nl> library to implement the bottom navigation component from material design <unk> <nl> # # gradle <nl>
ppp b / readme . md <nl> library to implement the bottom navigation component from material design <unk> <nl> # # gradle <nl> ccc groovy <nl> dependencies { <nl> compile ' com . aurelhubert : ahbottomnavigation : 0 . 1 . 1 ' <nl> } <nl> ` ` ` <nl> # # xml <nl> binary files a / <unk> . gif and / <unk> . gif <nl>
ppp b / readme . md <nl> library to implement the bottom navigation component from material design <nl>
ppp b / readme . md <nl> library to implement the bottom navigation component from material design <unk> <nl> # # gradle <nl> ccc groovy <nl> dependencies { <nl> compile ' com . aurelhubert : ahbottomnavigation : 0 . 1 . 1 ' <nl> } <nl> ` ` ` <nl> # # xml <nl> binary files a / <unk> . gif and / <unk> . gif differ <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) { <nl> evaluationdependson ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> version = ' 3 . 0 . 0 . ' <nl> sourcecompatibility sourcecompatibility = . version_1_6 <nl> targetcompatibility = javaversion . version_1_6 <nl>
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) { <nl>
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) { <nl> evaluationdependson ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> version = ' 3 . 0 . 0 . ' <nl> sourcecompatibility sourcecompatibility = . version_1_6 <nl> targetcompatibility = javaversion . <nl>
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) <nl>
ppp b / build . gradle <nl> configure ( subprojects . findall { it . name ! = ' util ' } ) { <nl> evaluationdependson ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> version = ' 3 . 0 . 0 . ' <nl> sourcecompatibility sourcecompatibility = . version_1_6 <nl> targetcompatibility = javaversion version_1_6 <nl>
====NEW EXAMPLE====
ppp b / zookeeper / c / changelog <nl>
ppp b / zookeeper / c / changelog <nl> 2007 - 11
ppp b / zookeeper / c / changelog <nl> 2007 - 11 - 27 andrew <unk> < < <unk> @ . . sourceforge net > > <nl> * configure . ac ac and and makefile makefile . . . am added support support for gnu <unk> <nl>
ppp b / zookeeper / c / changelog <nl> 2007 - 11 - 27 andrew <unk> < < <unk> @ . . sourceforge net > > <nl> * configure . ac ac and and makefile makefile . . . am added support support for gnu <nl>
ppp b / zookeeper / c / changelog <nl> 2007 - 11 - 27 andrew <unk> < < <unk> @ . . sourceforge net > > <nl> * configure . ac ac and and makefile makefile . . . am added support support for <unk> <nl>
====NEW EXAMPLE====
ppp b / cruise / emailmap . properties <nl> dierk = dierk . koenig @ canoo . com <nl>
ppp b / cruise / emailmap . properties <nl> dierk = dierk
ppp b / cruise / emailmap . properties <nl>
ppp b / cruise / emailmap . properties <nl> dierk = dierk . koenig @ canoo . com <nl> graeme = graemerocher @ yahoo . co . uk <nl> mguillem = mguillemot @ yahoo . fr <nl> paulk = no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> com . . au <nl> \ no newline at end of file <nl>
ppp b / cruise / emailmap . properties <nl> dierk = dierk . koenig @ canoo . com <nl> graeme = graemerocher @ yahoo . co . uk <nl> mguillem = mguillemot @ yahoo . fr <nl> paulk = no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> com . com <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / docs / reference / search / aggregations / <unk> . asciidoc <nl> [ [ search - aggregations - <unk> ] ] <nl> include
ppp b / docs / reference / search / aggregations / <unk>
ppp b / docs / reference / search / aggregations / <unk> . asciidoc <nl> [ [ search - aggregations - <unk> ] ] <nl> \ no newline at end of file <nl> ] ] ] ] <nl> include : : / <unk> . asciidoc [ ] <nl>
ppp b / docs / reference / search / aggregations / <unk> . asciidoc <nl> [ [ search - aggregations - <unk> ] ] <nl> \ no newline at end of file <nl> ] ] ] ] <nl> include : : / <unk> . asciidoc [ ] <nl> <nl>
ppp b / docs / reference / search / aggregations / <unk> . asciidoc <nl> [ [ search - aggregations - <unk> ] ] <nl> \ no newline at end of file <nl> ] ] ] ] <nl> include : : / <unk> . asciidoc [ [ <nl>
====NEW EXAMPLE====
ppp b / src / cpp / desktop / cmakelists . txt <nl>
ppp b / src / cpp / desktop / cmakelists . txt <nl> if ( win32 ) <nl>
ppp b / src / cpp / desktop / cmakelists . txt <nl> if ( win32 ) <nl> <unk> . cpp <nl> <unk> . cpp <nl> ) <nl> else ( ) <nl> \ no newline at end of file <nl> else { <nl> else { <nl> ) <nl> set ( <unk> $ { <unk> } } <nl> <unk> . cpp <nl>
ppp b / src / cpp / desktop / cmakelists . txt <nl> if ( win32 ) <nl> <unk> . cpp <nl> <unk> . cpp <nl> ) <nl> else ( ) <nl> \ no newline at end of file <nl> else { <nl> else { <nl> ) <nl> set ( <unk> $ { <unk> } } <nl> <unk> . <nl>
ppp b / src / cpp / desktop / cmakelists . txt <nl> if ( win32 ) <nl> <unk> . cpp <nl> <unk> . cpp <nl> ) <nl> else ( ) <nl> \ no newline at end of file <nl> else { <nl> else { <nl> ) <nl> set ( <unk> $ { <unk> } } <nl> <unk> . cpp cpp <nl>
====NEW EXAMPLE====
ppp b / api / pom . xml <nl> < dependency > <nl> < groupid > org . slf4j < / groupid > <nl> < artifactid > slf4j - api < / artifactid > <nl> < version > 1 . 7 . 5 < / version > <nl> < / dependency > <nl> < / dependencies > <nl>
ppp b / api / pom . xml <nl> < dependency > <nl> < groupid > org . slf4j < / groupid > <nl> < artifactid > slf4j - api < / artifactid > <nl> < version > 1 . 7 . 5 < / version > <nl> < / dependency > <nl> < / dependencies <nl>
ppp b / api / pom . xml <nl> < dependency > <nl> < groupid > org . slf4j < / groupid > <nl> < artifactid > slf4j - api < / artifactid > <nl> < version > 1 . 7 . 5 < / version > <nl> < / dependency > <nl> < / > <nl>
ppp b / api / pom . xml <nl> < dependency > <nl> < groupid > org . slf4j < / groupid > <nl> < artifactid > slf4j - api < / artifactid > <nl> < version > 1 . 7 . 5 < / version > <nl> < / dependency > <nl> < / dependencies { <nl>
ppp b / api / pom . xml <nl> < dependency > <nl> < groupid > org . slf4j < / groupid > <nl> < artifactid > slf4j - api < / artifactid > <nl> < version > 1 . 7 . 5 < / version > <nl> < / dependency > <nl> < / dependencies > <nl> <nl>
====NEW EXAMPLE====
ppp b / core / res / res / layout / <unk> . xml <nl> < relativelayout <nl> android : layout_width = " match_parent " <nl> android : layout_height = " <unk> " > <nl> < com . android . internal . widget . <unk> . <unk> <nl> android : id = " @ + id / <unk> " <nl>
ppp b / core / res / res / layout / <unk> . xml <nl> < relativelayout <nl> android : layout_width = " match_parent " <nl> android : layout_height = " <unk> " > <nl> < com . android . internal . widget . <unk> . <unk> <nl> android : id = " @ + id / <unk> <nl>
ppp b / core / res / res / layout / <unk> . xml <nl> < relativelayout <nl> android : layout_width = " match_parent " <nl> android : layout_height = " <unk> " > <nl> < com . android . internal . widget . <unk> . <unk> <nl> android : id = " @ + id / " <nl>
ppp b / core / res / res / layout / <unk> . xml <nl> < relativelayout <nl> android : layout_width = " match_parent " <nl> android : layout_height = " <unk> " > <nl> < com . android . internal . widget . <unk> . <unk> <nl> android : id = " @ + id / <unk> " " <nl>
ppp b / core / res / res / layout / <unk> . xml <nl> < relativelayout <nl> android : layout_width = " match_parent " <nl> android : layout_height = " <unk> " > <nl> < com . android . internal . widget . <unk> . <unk> <nl> android : id = " @ + id / <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / tools / <unk> / android . mk <nl> local_module_tags : = optional <nl> local_cflags : = - wall - werror <nl> local_src_files : = <unk> . cpp <nl> local_ldlibs + = - ldl <nl>
ppp b / tools / <unk> / android . mk <nl> local_module_tags : = optional <nl> local_cflags : = - wall - werror <nl> local_src_files : = <unk> . cpp <nl> local_ldlibs + = - <nl>
ppp b / tools / <unk> / android . mk <nl> local_module_tags : = optional <nl> local_cflags : = - wall - werror <nl> local_src_files : = <unk> . cpp <nl> local_ldlibs + = ldl <nl>
ppp b / tools / <unk> / android . mk <nl> local_module_tags : = optional <nl> local_cflags : = - wall - werror <nl> local_src_files : = <unk> . cpp <nl> local_ldlibs + = - ldl <nl> <nl>
ppp b / tools / <unk> / android . mk <nl> local_module_tags : = optional <nl> local_cflags : = - wall - werror <nl> local_src_files : = <unk> . cpp <nl> local_ldlibs + = - ldl <nl> local_c_includes : : <nl>
====NEW EXAMPLE====
ppp b / app / models / stream . rb <nl> class stream <nl> field : created_at , : type = > datetime <nl>
ppp b / app / models / stream . rb <nl> class stream <nl> field : created_at , : type = > <nl>
ppp b / app / models / stream . rb <nl> class stream <nl>
ppp b / app / models / stream . rb <nl>
ppp b / app / models / stream . rb <nl> class stream <nl> field : created_at , : type = > datetime <nl> field : updated_at , : type = > datetime <nl> field : <unk> , : type = > <nl> * updated lithuanian translation for monthly and authors editing <nl> def self . . ( _id ) <nl> _id = $ 1 if / ^ ( [ 0 - <unk> - f ] + ) - / = ~ <nl>
====NEW EXAMPLE====
ppp b / core / src / processing / opengl / pgraphicsopengl . java <nl> import processing . core . * ; <nl> import java . net . url ; <nl> import java . nio . * ; <nl>
ppp b / core / src / processing / opengl / pgraphicsopengl . java <nl> import processing . core . * ; <nl> import java . net . url ; <nl> import java . nio . * ; <nl> import java . . . ; <nl> / * * <nl> * opengl renderer . <nl>
ppp b / core / src / processing / opengl / pgraphicsopengl . java <nl> import processing . core . * ; <nl> import java . net . url ; <nl> import java . nio . * ; <nl> import
ppp b / core / src / processing / opengl / pgraphicsopengl . java <nl> import processing . core . * ; <nl>
ppp b / core / src / processing / opengl / pgraphicsopengl . java <nl> import processing . core . * ; <nl> import java . net . url ; <nl> import java . nio . * ; <nl> import java . . . ; <nl> / * * <nl> * opengl renderer . . <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> this is a collection of algorithms and data structures which i ' ve implement over <nl>
ppp b / readme . md <nl> this is a collection of algorithms and data structures which i ' ve implement <nl>
ppp b / readme . md <nl> this is a collection of algorithms and data structures which i ' ve implement over <nl> * hash array <unk> <unk> ( <unk> <nl>
ppp b / readme . md <nl> this is a collection of algorithms and data structures which i ' ve implement over <nl> * hash array <unk> <unk> ( <unk> ) <nl> * hash map ( <unk> array ) <nl> * interval tree <nl> * <unk> tree ( built_ext_data ( k k - <unk> tree or k - tree ) <nl> * list [ backed backed by an array or a linked list ] <nl> * matrix <nl>
ppp b / readme . md <nl> this is a collection of algorithms and data structures which i ' ve implement over <nl> * hash array <unk> <unk> ( <unk> ) <nl> * hash map ( <unk> array ) <nl> * interval tree <nl> * <unk> tree ( built_ext_data ( k k - <unk> tree or k - tree ) <nl> * list [ backed backed by an array or a linked list ] <nl> * * <nl>
====NEW EXAMPLE====
ppp b / closure - compiler . pom <nl> < developer > <nl> < id > <unk> < / id > <nl>
ppp b / closure - compiler . pom <nl> < developer > <nl> < id > <unk> < / id > <nl> < name > alan <unk>
ppp b / closure - compiler . pom <nl> < developer > <nl> < id > <unk> < / id > <nl> < name > alan
ppp b / closure - compiler . pom <nl> < developer > <nl> < id > <unk> < / id > <nl> < name > alan <unk> <
ppp b / closure - compiler . pom <nl> < developer > <nl> < id > <unk> < / id > <nl> < name > alan <unk> < /
====NEW EXAMPLE====
ppp b / react / profiler / rctprofiletrampoline - arm . s <nl> # include " <unk> . h " <nl> # include " <unk> . h " <nl>
ppp b / react / profiler / rctprofiletrampoline - arm . s <nl> # include " <unk> . h " <nl> # include " <unk> . h <nl>
ppp b / react / profiler / rctprofiletrampoline - arm . s <nl> # include " <unk> . h " <nl>
ppp b / react / profiler / rctprofiletrampoline - arm . s <nl> # include " <unk> . h " <nl> # include " <unk> . h " <nl> #
ppp b / react / profiler / rctprofiletrampoline - arm . s <nl> # include " <unk> . h " <nl> # include " <unk> . " <nl>
====NEW EXAMPLE====
ppp b / run_comparison . py <nl> def print_stats ( stats ) : <nl>
ppp b / run_comparison . py <nl> def print_stats ( stats ) <nl>
ppp b / run_comparison . py <nl> def print_stats ( stats
ppp b / run_comparison . py <nl> def print_stats (
ppp b / run_comparison . py <nl> def print_stats ( stats ) : <nl> failures = len ( stats . failure_wait_times ) <nl> total_count = successes + cancellations + failures <nl> total_wait_time = null & & & & & & & & & & & & & & & <nl> total_wait_time = ( ) <nl> sum ( stats . success_wait_times ) ) <nl> sum ( stats . cancellation_wait_times ) <nl>
====NEW EXAMPLE====
ppp b / res / layout / <unk> . xml <nl> android : id = " @ + id / <unk> " <nl>
ppp b / res / layout / <unk> . xml <nl> android : id = " @ + id / <unk> <nl>
ppp b / res / layout / <unk> . xml <nl>
ppp b / res / layout / <unk> . xml <nl> android
ppp b / res / layout / <unk> . xml <nl> android : id = " @ + id / <unk> " <nl> android : layout_width = " fill_parent " <nl> android : layout_height = " 0dp " <nl> android : orientation | screensize | screensize <nl> android : layout_marginleft = " 20dp " <nl> android : layout_marginright = " 20dp " <nl> android : layout_margintop = " 8dp " <nl>
====NEW EXAMPLE====
ppp b / conf / storm . yaml . example <nl> # - org . <unk> . <unk> : org . <unk> . <unk> <nl> # <nl> # # list of custom kryo decorators <nl> # topology . kryo . register : <nl> # - org . <unk> . <unk> <nl> # <nl> # # locations of the drpc servers <nl>
ppp b / conf / storm . yaml . example <nl> # - org . <unk> . <unk> : org . <unk> . <unk> <nl> # <nl> # # list of custom kryo decorators <nl> # topology . kryo . register : <nl> # - org . <unk> . <unk> <nl> # <nl> # # locations of the drpc <nl>
ppp b / conf / storm . yaml . example <nl> # - org . <unk> . <unk> : org . <unk> . <unk> <nl> # <nl> # # list of custom kryo decorators <nl> # topology . kryo . register : <nl> # - org . <unk> . <unk> <nl> # <nl> # # locations of the drpc drpc <nl>
ppp b / conf / storm . yaml . example <nl> # - org . <unk> . <unk> : org . <unk> . <unk> <nl> # <nl> # # list of custom kryo decorators <nl> # topology . kryo . register : <nl> # - org . <unk> . <unk> <nl> # <nl> # # locations of the drpc servers
ppp b / conf / storm . yaml . example <nl> # - org . <unk> . <unk> : org . <unk> . <unk> <nl> # <nl> # # list of custom kryo decorators <nl> # topology . kryo . register : <nl> # - org . <unk> . <unk> <nl> # <nl> # # locations of the servers <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> for rate limiting <nl> * storm - * storm - - <unk> : added backward compatibility method for file download <nl> * storm - <unk> : storm cli tool reports zero exit code on error <unk> <nl> * storm - <unk> : documentation for state store <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> for rate limiting <nl> * storm - * storm - - <unk> : added backward compatibility method for file download <nl> * storm - <unk> : storm cli tool reports zero exit code on error <unk> <nl> * storm - <unk> : documentation for state <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> for rate limiting <nl> * storm - * storm - - <unk> : added backward compatibility method for file download <nl> * storm - <unk> : storm cli tool reports zero exit code on error <unk> <nl> * storm - <unk> : documentation for state store store <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> for rate limiting <nl> * storm - * storm - - <unk> : added backward compatibility method for file download <nl> * storm - <unk> : storm cli tool reports zero exit code on error <unk> <nl> * storm - <unk> : documentation for state state <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> for rate limiting <nl> * storm - * storm - - <unk> : added backward compatibility method for file download <nl> * storm - <unk> : storm cli tool reports zero exit code on error <unk> <nl> * storm - <unk> : documentation for store <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < plugin > <nl> < groupid > org . apache . maven . plugins < / groupid > <nl> < artifactid > maven - surefire - plugin < / artifactid > <nl> < version > 2 . 9 < / version > <nl> < / plugin > <nl> < plugin > <nl> < groupid > org . apache . felix < / > <nl>
ppp b / pom . xml <nl> < plugin > <nl> < groupid > org . apache . maven . plugins < / groupid > <nl> < artifactid > maven - surefire - plugin < / artifactid > <nl> < version > 2 . 9 < / version > <nl> < / plugin > <nl> < plugin > <nl> < groupid > org . apache . felix < / groupid > <nl>
ppp b / pom . xml <nl> < plugin > <nl> < groupid > org . apache . maven . plugins < / groupid > <nl>
ppp b / pom . xml <nl> < plugin > <nl>
ppp b / pom . xml <nl> < plugin > <nl> < groupid > org . apache . maven . plugins < / groupid > <nl> < artifactid > maven - surefire - plugin < / artifactid > <nl> < version > 2 . 9 < / version > <nl> < / plugin > <nl> < plugin > <nl> < groupid > org . apache . felix < / groupid <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> versioncode = 240 <nl> versionname = ' 12 . 3 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> versioncode = 240 <nl> versionname = ' 12 . 3 ' <nl> } <nl> ext . libraries = [ <nl> <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> versioncode = 240 <nl> versionname = ' 12 . 3 ' <nl> } <nl> ext . libraries = [
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> versioncode = 240 <nl> versionname = ' 12 . 3 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> compilesdkversion = 19 <nl> buildtoolsversion = ' 19 . 0 . 3 ' <nl> versioncode = 240 <nl> versionname = ' 12 . 3 ' <nl> } <nl> ext . libraries = [ [ <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 3 . 1 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version_name = 1 . 0 . 9 - snapshot <nl> version_code 1 <nl> min_sdk_version = 14 <nl> target_sdk_version = 22 <nl>
ppp b / gradle . properties <nl> version_name = 1 . 0 . 9
ppp b / gradle . properties <nl> version_name = 1 . 0 . 9 - <nl>
ppp b / gradle . properties <nl> version_name = 1 . 0 .
ppp b / gradle . properties <nl> version_name = 1 .
====NEW EXAMPLE====
ppp b / src / test / java / org / elasticsearch / env / <unk> . java <nl>
ppp b / src / test / java / org / elasticsearch / env / <unk> . java <nl> public class <unk> extends <unk> { <nl>
ppp b / src / test / java / org / elasticsearch / env / <unk> . <nl>
ppp b / src / test / java / org / elasticsearch / env / <unk> . java <nl> public class <unk> extends <unk> <nl>
ppp b / src / test / java / org / elasticsearch / env / <unk> . java <nl> public class <unk> extends <unk> { <nl> thread t = new thread ( new <unk> ( ) { <nl> @ override <nl> public void onfailure ( throwable throwable t refresh ( ) <nl> public boolean removeuser ( ) ( throwable t ) { <nl> <unk> . set ( t ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = pull <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < id > attach - sources < / id > <nl> < goals > <nl> < goal > jar - no - fork < / goal > <nl> < / < / < / goal > <nl> < / goals > <nl> < / execution > <nl> < / executions > <nl>
ppp b / pom . xml <nl> < id > attach - sources < / id > <nl>
ppp b / pom . xml <nl> < id > attach - sources < / id > <nl> < goals > <nl> < goal > jar - no - fork < / goal > <nl> < / < / < / goal > <nl> < / goals > <nl> < / execution > <nl> < / executions <nl>
ppp b / pom . xml <nl> < id > attach - sources < / id > <nl> < goals > <nl> < goal > jar - no - fork < / goal > <nl> < / < / < / goal > <nl> < / goals > <nl> < / execution > <nl> < / executions executions <nl>
ppp b / pom . xml <nl> < id > attach - sources < / id > <nl> < goals > <nl> < goal > jar - no - fork < / goal > <nl> < / < / < / goal > <nl> < / goals > <nl> < / execution > <nl> < / executions > <nl> <nl>
====NEW EXAMPLE====
ppp b / robospice - samples <nl> subproject commit <unk> <nl>
ppp b / robospice - samples <nl> subproject commit 7a2be18b470a8fb36b9062243943de7e4e6bfb97 <nl>
ppp b / robospice - samples <nl> subproject commit 2557ddbdb2f85c116145d5e1035cf080c8dd7106 <nl>
ppp b / robospice - samples <nl> subproject commit 333e54707ca221324c6b9eedb6a7bc2fcae02270 <nl>
ppp b / robospice - samples <nl> subproject commit 3bde5d401a17d715f5b2e58f5e104a8a90a9702c <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 64e39bdb5a31c6c759d9b5ee7090f077c74054e4 <nl> mode = push <nl> parent = 9772dec49bdd2823cb97e2469fbd6a16890c8ffe <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / record - and - playback / simple / scripts
ppp b / record - and - playback / simple /
ppp b / record - and - playback / simple / scripts / simple . yml <nl> <unk> : 192 . 168 . 0 . 166 . 0 . 166 <nl> <unk> : / var / bigbluebutton / <unk> <unk> <nl>
ppp b / record - and - playback / simple / scripts /
ppp b / record - and - playback / simple / scripts / simple . yml <nl> <unk> : 192 . 168 . 0 . 166 . 0 . 166 <nl> <unk> : / var / bigbluebutton / <unk> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 36301c1e26205f5d2e553226f22ff16786f1a3ff <nl> mode = push <nl> parent = cdf4bf6d9cf910313caf7526050ed7e633fdc742 <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 16 - beta2 ' <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 16 - beta2 ' <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 16 - beta2 ' <nl> } <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 16 - beta2 ' <nl> } <nl> ext . libraries = = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> versionname = ' 16 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> <nl>
====NEW EXAMPLE====
ppp b / v8 / renderscript / rs_support / android . mk <nl> <unk> + = $ ( gen ) <nl> <unk> + = $ ( gen ) <nl> local_src_files : = \ <nl> <unk> . cpp \ <nl> <unk> . cpp \ <nl> <unk> . cpp \ <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> <unk> + = $ ( gen ) <nl> <unk> + = $ ( gen ) <nl> local_src_files : = \ <nl> <unk> . cpp \ <nl> <unk> . cpp \ <nl> <unk> . cpp <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> <unk> + = $ ( gen ) <nl> <unk> + = $ ( gen ) <nl> local_src_files : = \ <nl> <unk> . cpp \ <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> <unk> + = $ ( gen ) <nl> <unk> + = $ ( gen ) <nl> local_src_files : = \ <nl> <unk> . cpp \ <nl> <unk> . cpp \ <nl>
ppp b / v8 / renderscript / rs_support / android . mk <nl> <unk> + = $ ( gen ) <nl> <unk> + = $ ( gen ) <nl> local_src_files : = \ <nl> <unk> . cpp \ <nl> <unk> . cpp \ <nl> <unk> . \ <nl>
====NEW EXAMPLE====
ppp b / readme . markdown <nl> tested devices <nl> samsung : <nl>
ppp b / readme . markdown <nl> tested devices <nl> samsung <nl>
ppp b / readme . markdown <nl> tested devices <nl> samsung <nl> script : <nl>
ppp b / readme . markdown <nl> tested devices <nl> samsung galaxy grand <nl>
ppp b / readme . markdown <nl> tested devices <nl> samsung
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3984a22c5824bf031bcd35ca43700d5e39ef71b5 <nl> mode = push <nl> parent = 0cb1654b95f76569d6c4524bba10735115af8542 <nl> remote = git @ github . com : liferay / com - liferay - trash . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> group = com . lyft <nl> version_name = 1 . 0 . 1 - snapshot <nl> pom_description = android image cropping library . <nl>
ppp b / gradle . properties <nl> group = com . lyft <nl> version_name = 1 . 0 . 1 - snapshot <nl> pom_description = android image cropping library . <nl> <nl>
ppp b / gradle . properties <nl> group = com . lyft <nl> version_name = 1 . 0 . 1 - snapshot <nl> pom_description = android image cropping library library <nl>
ppp b / gradle . properties <nl> group = com . lyft <nl> version_name = 1 . 0 . 1 - snapshot <nl> pom_description = android image cropping library <nl>
ppp b / gradle . properties <nl> group = com . lyft <nl> version_name = 1 . 0 . 1 - snapshot <nl> pom_description = android image cropping library
====NEW EXAMPLE====
ppp b / parse / src / main / java / com / parse / <unk> . java <nl> import javax . net . ssl . <unk> ; <nl> public <unk> ( int <unk> , <unk> <unk> ) { <nl> this . <unk> = <unk> ; <nl>
ppp b / parse / src / main / java / com / parse / <unk> . java <nl> import javax . net . ssl . <unk> ; <nl> public <unk> ( int <unk> , <unk> <unk> ) { <nl> this . <unk> = <unk> ; <nl> } <nl>
ppp b / parse / src / main / java / com / parse / <unk> . java <nl> import javax . net . ssl . <unk> ; <nl> public <unk> ( int <unk> , <unk> <unk> ) { <nl>
ppp b / parse / src / main / java / com / parse / <unk> . java <nl> import javax . net . ssl . <unk> ; <nl> public <unk> ( int <unk> , <unk> <unk> ) { <nl> this . <unk> = <unk> ; <nl> ; <nl>
ppp b / parse / src / main / java / com / parse / <unk> . java <nl> import javax . net . ssl . <unk> ; <nl> public <unk> ( int <unk> , <unk> <unk> ) { <nl> this . <unk> = <unk> ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> lib / <nl> . settings / * <nl> * / . idea / * <nl> . gradle / <nl> h2o . iml <nl> h2o . eml <nl> src / main / java / water / buildversion . java <nl> / . idea <nl>
ppp b / . gitignore <nl> lib / <nl> . settings / * <nl> * / . idea / * <nl> . gradle / <nl> h2o . iml <nl> h2o . eml <nl> src / main / java / water / buildversion . java <nl>
ppp b / . gitignore <nl> lib / <nl> . settings / * <nl> * / . idea / * <nl> . gradle / <nl> h2o . iml <nl> h2o . eml <nl> src / main / java / water / buildversion . java <nl> / . . <nl>
ppp b / . gitignore <nl> lib / <nl> . settings / * <nl> * / . idea / * <nl> . gradle / <nl> h2o . iml <nl> h2o . eml <nl> src / main / java / water / buildversion . java <nl> / . <nl>
ppp b / . gitignore <nl> lib / <nl> . settings / * <nl> * / . idea / * <nl> . gradle / <nl> h2o . iml <nl> h2o . eml <nl> src / main / java / water / buildversion . java <nl> / . idea idea <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> \ no newline at end of file <nl> } <nl> ext . libraries = [ <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> \ no newline at end of file <nl> } <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> \ no newline at end of file <nl> } <nl> ext . libraries = <nl>
ppp b / build . gradle <nl> ext { <nl> buildtoolsversion = ' 19 . 1 . 0 ' <nl> / / api level 15 + - > version 15xxx <nl> versioncode = <unk> <nl> \ no newline at end of file <nl> ' <nl>
====NEW EXAMPLE====
ppp b / camel - core / src / main / java / org / apache / camel / model / <unk> . java <nl> public class <unk> extends <unk> < th <nl> private string <unk> ; <nl> @ xmlattribute <nl> private string <unk> ; <nl> @ @ @ <unk> <unk> ( . class ) <nl> private timeunit timeunit ; <nl> @ xmlattribute <nl>
ppp b / camel - core / src / main / java / org / apache / camel / model / <unk> . java <nl>
ppp b / camel - core / src / main / java / org / apache / camel / model / <unk> . <nl>
ppp b / camel - core / src / main / java / org / apache / camel / model / <unk> . java <nl> public class <unk> extends <unk> < th <nl> private string <unk> ; <nl> @ xmlattribute <nl> private string <unk> ; <nl> @ @ @ <unk> <unk> ( . class ) <nl> private timeunit timeunit ; <nl> @ <nl>
ppp b / camel - core / src / main / java / org / apache / camel / model / <unk> . java <nl> public class <unk> extends <unk> < th <nl> private string <unk> ; <nl> @ xmlattribute <nl> private string <unk> ; <nl> @ @ @ <unk> <unk> ( . class ) <nl> private timeunit timeunit ; <nl> @ override <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / portlet / search / <unk> / folders . jsp <nl>
ppp b / portal - web / docroot / html / portlet / search / <unk> / folders . <nl>
ppp b / portal - web / docroot / html / portlet / search / <unk> / folders . jsp <nl> searchcontext searchcontext = <unk> . getinstance ( request ) ; <nl> } <nl> searchcontext . <unk> ( new long [ ] { ( ) ; <nl> new new long [ ] { <unk> } ) ; <nl> hits = = indexer . search ( searchcontext ) ; <nl>
ppp b / portal - web / docroot / html / portlet / search / <unk> / folders . jsp <nl> searchcontext searchcontext = <unk> . getinstance ( request ) ; <nl> } <nl> searchcontext . <unk> ( new long [ ] { ( ) ; <nl> new new long [ ] { <unk> } ) ; <nl> hits = = indexer . search ( searchcontext ; <nl>
ppp b / portal - web / docroot / html / portlet / search / <unk> / folders . jsp <nl> searchcontext searchcontext = <unk> . getinstance ( request ) ; <nl> } <nl> searchcontext . <unk> ( new long [ ] { ( ) ; <nl> new new long [ ] { <unk> } ) ; <nl> hits = = indexer . search ( ) ; <nl>
====NEW EXAMPLE====
ppp b / core / src / main / java / io / undertow / protocols / ssl / <unk> . java <nl>
ppp b / core / src / main / java / io / undertow / protocols / ssl / <unk> . java <nl> public class <unk> implements <unk> , <unk> { <nl> } <nl> public void <unk> ( ) throws <unk> { <nl> engine ( ) ; <nl> engine . <unk> <unk> ) ; <nl> } <nl>
ppp b / core / src / main / java / io / undertow / protocols / ssl / <unk> . java <nl> public class <unk> implements <unk> , <unk> { <nl> } <nl> public void <unk> ( ) throws <unk> { <nl> engine ( ) ; <nl> engine . <unk> <unk> ) ) ; <nl> } <nl>
ppp b / core / src / main / java / io / undertow / protocols / ssl / <unk> . java <nl> public class <unk> implements <unk> , <unk> { <nl> } <nl> public void <unk> ( ) throws <unk> { <nl> engine ( ) ; <nl> engine . <unk> <unk> ) ; <nl> <nl>
ppp b / core / src / main / java / io / undertow / protocols / ssl / <unk> . java <nl> public class <unk> implements <unk> , <unk> { <nl> } <nl> public void <unk> ( ) throws <unk> { <nl> engine ( ) ; <nl> engine . <unk> <unk> ( ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / notice <nl> <unk> <nl> copyright ( c ) 2010 mathias <unk> <nl>
ppp b / notice <nl> <unk> <nl> copyright ( c ) 2010 mathias <nl>
ppp b / notice <nl> <unk> <nl> copyright ( c ) 2010 mathias <unk> <nl> * updated lithuanian translation <nl> markdown markdown - markdown in c , implemented using <unk> grammar <nl> copyright ( c ) 2008 john <unk> ( http : / / github . com / <unk> / / <unk> - markdown ) <nl>
ppp b / notice <nl> <unk> <nl> copyright ( c ) 2010 mathias <unk> <nl> * updated lithuanian translation <nl> markdown markdown - markdown in c , implemented using <unk> grammar <nl> copyright ( c ) 2008 john <unk> ( http : / / github . com / <unk> / / <unk> - ) <nl>
ppp b / notice <nl> <unk> <nl> copyright ( c ) 2010 mathias <unk> <nl> * updated lithuanian translation <nl> markdown markdown - markdown in c , implemented using <unk> grammar <nl> copyright ( c ) 2008 john <unk> ( http : / / github . com / <unk> / / <unk> - markdown <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - announcements . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 99ff1f7e34f5e413cf7510214d959c7e3c795aae <nl> mode = push <nl> parent = 795372285a659e1ab7213c2f50c2201922ea67e2 <nl> remote = git @ github . com : liferay / com - liferay - configuration - admin . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / externs / <unk> . js <nl> <unk> . prototype . description ; <nl> <unk> . prototype . version ; <nl> / * * <nl> * @ type { array . < string } <nl> const <nl> / <nl> <unk> . prototype . <unk> ; <nl>
ppp b / externs / <unk> . js <nl> <unk> . prototype . description ; <nl> <unk> . prototype . version ; <nl>
ppp b / externs / <unk> . js <nl> <unk> . prototype . description ; <nl> <unk> . prototype . version ; <nl> / * * <nl> * @ type { array . < string } <nl> const * <nl>
ppp b / externs / <unk> . js <nl> <unk> . prototype . description ; <nl> <unk> . prototype . version ; <nl> / * * <nl> * @ type { array . < string } <nl> const <nl>
ppp b / externs / <unk> . js <nl> <unk> . prototype . description ; <nl> <unk> . prototype . version ; <nl> / * * <nl> * @ type { array . < string } <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> deltaspike / core / impl / data <nl> deltaspike / modules / <unk> / impl / data <nl> deltaspike / modules / security / impl / data <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> deltaspike / core / impl / data <nl> deltaspike / modules / <unk> / impl / data <nl> deltaspike / modules / security / impl impl <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> deltaspike / core / impl / data <nl> deltaspike / modules / <unk> / impl / data <nl> deltaspike / modules / security / impl / <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> deltaspike / core / impl / data <nl> deltaspike / modules / <unk> / impl / data <nl> deltaspike / modules / security / impl <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> deltaspike / core / impl / data <nl> deltaspike / modules / <unk> / impl / data <nl> deltaspike / modules / security / impl / / <nl>
====NEW EXAMPLE====
ppp b / src / com / fsck / k9 / mail / store / imapstore . java <nl> public class imapstore extends store { <nl> message . parse ( literal ) ; <nl> / / return placeholder object <nl> return new integer integer ( 1 ) ; <nl> } <nl> return null ; <nl> } <nl>
ppp b / src / com / fsck / k9 / mail / store / imapstore . java <nl> public class imapstore extends store { <nl> message . parse ( literal ) ; <nl> / / return placeholder object <nl> return new integer integer ( 1 ) ; <nl> } <nl> return null ; } <nl>
ppp b / src / com / fsck / k9 / mail / store / imapstore . java <nl> public class imapstore extends store { <nl> message . parse ( literal ) ; <nl> / / return placeholder object <nl> return new integer integer ( 1 ) ; <nl> } <nl> return null ; <nl>
ppp b / src / com / fsck / k9 / mail / store / imapstore . java <nl>
ppp b / src / com / fsck / k9 / mail / store / imapstore . java <nl> public class imapstore extends store { <nl> message . parse ( literal ) ; <nl> / / return placeholder object <nl> return new integer integer ( 1 ) ; <nl> } <nl> return null ; <nl> }
====NEW EXAMPLE====
ppp b / languagetool - language - modules / ca / src / main / resources / org / languagetool / resource / ca / multiwords . txt <nl> <unk> a loc_prep <nl> top <unk> _gn_ms <nl> tot d ' <unk> loc_adv <nl> tot just loc_adv <nl> tot <unk> loc_adv <nl> tot <unk> loc_adv <nl> tot <unk> loc_adv <nl> <unk> <unk> loc_adv <nl>
ppp b / languagetool - language - modules / ca / src / main / resources / org / languagetool / resource / ca / multiwords . txt <nl>
ppp b / languagetool - language - modules / ca / src / main / resources / org / languagetool / resource / ca / multiwords . txt <nl> <unk> a loc_prep <nl> top <unk> _gn_ms <nl> tot d ' <unk> loc_adv <nl> tot just loc_adv <nl> tot <unk> loc_adv <nl> tot <unk> loc_adv <nl> tot <unk> loc_adv <nl> <unk> <unk> loc_adv
ppp b / languagetool - language - modules / ca / src / main / resources / org / languagetool / resource / ca / multiwords . txt <nl> <unk> a loc_prep <nl> top <unk> _gn_ms <nl> tot d ' <unk> loc_adv <nl> tot just loc_adv <nl> tot <unk> loc_adv <nl> tot <unk> loc_adv <nl> tot <unk> loc_adv <nl> <unk> <unk> loc_adv <nl> <nl>
ppp b / languagetool - language - modules / ca / src / main / resources / org / languagetool / resource / ca / multiwords . txt <nl> <unk> a loc_prep <nl> top <unk> _gn_ms <nl> tot d ' <unk> loc_adv <nl> tot just loc_adv <nl> tot <unk> loc_adv <nl> tot <unk> loc_adv <nl> tot <unk> loc_adv <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 3 . 2 ' <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 3 . 2 ' <nl> } <nl> ` ` <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 3 . 2 ' <nl> } <nl> ` ` ` <nl> <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 3 . 2 ' <nl> } <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 6 . 3 . 2 ' <nl> } <nl> ` ` ` ` <nl>
====NEW EXAMPLE====
ppp b / src / main / java / com / github / pedrovgs / <unk> / <unk> . java <nl> package com . github . pedrovgs . <unk> ; <nl> * / <nl> public class <unk> { <nl> @ override <nl> public string tostring ( ) ] ( ) ; <nl> } <nl> public public <unk> { <nl> } <nl>
ppp b / src / main / java / com / github / pedrovgs / <unk> / <unk> . java <nl> package com . github . pedrovgs . <unk> ; <nl> * / <nl> public class <unk> { <nl> @ override <nl> public string tostring ( ) ] ( ) ; <nl> } <nl> public public <unk> { <nl> } } <nl>
ppp b / src / main / java / com / github / pedrovgs / <unk> / <unk> . java <nl> package com . github . pedrovgs . <unk> ; <nl> * / <nl> public class <unk> { <nl> @ override <nl> public string tostring ( ) ] ( ) ; <nl> } <nl> public public <unk> { <nl> { <nl>
ppp b / src / main / java / com / github / pedrovgs / <unk> / <unk> . java <nl> package com . github . pedrovgs . <unk> ; <nl> * / <nl> public class <unk> { <nl> @ override <nl> public string tostring ( ) ] ( ) ; <nl> } <nl> public public <unk> { <nl> <nl>
ppp b / src / main / java / com / github / pedrovgs / <unk> / <unk> . java <nl> package com . github . pedrovgs . <unk> ; <nl> * / <nl> public class <unk> { <nl> @ override <nl> public string tostring ( ) ] ( ) ; <nl> } <nl> public public <unk> { <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> by oracle . the <unk> <unk> byte buddy for its " * <unk> amount of <unk> <nl>
ppp b / readme . md <nl> by oracle . the <unk> <unk> byte buddy for its " * <unk> amount of <nl>
ppp b / readme . md <nl> by oracle . the <unk>
ppp b / readme . md <nl> by oracle . the <unk> <unk>
ppp b / readme . md <nl> by oracle . the <unk> <unk> byte buddy for its " * <unk> amount of <unk> <nl> we feel very <unk> for having received this <unk> and want to <unk> all users and <unk> else who <unk> <nl> making byte buddy the success it has become . really <unk> it ! <nl> world <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> with
ppp b / readme . md <nl> with the app , you can : <nl>
ppp b / readme . md <nl> with the
ppp b / readme . md <nl> with the app
ppp b / readme . md <nl> with the app , you
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = be3abd5996ab5c143f7d8b1cf8a8df2189deb77d <nl> mode = push <nl> parent = 9088642a0a3d5cc7c906bbf55a66db8d09289f69 <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / contrib / externs / angular . js <nl> angular . <unk> . prototype . $ valid ; <nl> / * * <nl> * @ type { ! array . < function ( ) > } <nl> * / <nl> angular . <unk> . prototype . $ <unk> ; <nl> / * * <nl> * @ type { ? } <nl>
ppp b / contrib / externs / angular . js <nl> angular . <unk> . prototype . $ valid ; <nl> / * * <nl> * @ type { ! array . < function ( ) > } <nl> * / <nl> angular . <unk> . prototype . $ <unk> ; <nl> / * * <nl> * @ type { } <nl>
ppp b / contrib / externs / angular . js <nl> angular . <unk> . prototype . $ valid ; <nl> / * * <nl> * @ type { ! array . < function ( ) > } <nl> * / <nl> angular . <unk> . prototype . $ <unk> ; <nl> / * * <nl> * @ type { <nl>
ppp b / contrib / externs / angular . js <nl> angular . <unk> . prototype . $ valid ; <nl> / * * <nl> * @ type { ! array . < function ( ) > } <nl> * / <nl> angular . <unk> . prototype . $ <unk> ; <nl> / * * <nl> * @ type { ? <nl>
ppp b / contrib / externs / angular . js <nl> angular . <unk> . prototype . $ valid ; <nl> / * * <nl> * @ type { ! array . < function ( ) > } <nl> * / <nl> angular . <unk> . prototype . $ <unk> ; <nl> / * * <nl> * @ type { { <nl>
====NEW EXAMPLE====
ppp b / platform / lang - impl / src / com / intellij / util / <unk> . java <nl> public class <unk> extends <unk> imp <nl> } <nl> field . <unk> ( text , offset , prefix , <unk> ) ; <nl> } <nl> } ( ) ; <nl> } <nl> } <nl>
ppp b / platform / lang - impl / src / com / intellij / util / <unk> . java <nl> public class <unk> extends <unk> imp <nl> } <nl> field . <unk> ( text , offset , prefix , <unk> ) ; <nl> } <nl> } ( ) ; <nl> } <nl> <nl>
ppp b / platform / lang - impl / src / com / intellij / util / <unk> . java <nl> public class <unk> extends <unk> imp <nl> } <nl> field . <unk> ( text , offset , prefix , <unk> ) ; <nl> } <nl> } ( <unk> ( ) ; <nl> } <nl>
ppp b / platform / lang - impl / src / com / intellij / util / <unk> . java <nl> public class <unk> extends <unk> imp <nl> } <nl> field . <unk> ( text , offset , prefix , <unk> ) ; <nl> } <nl> , boolean thisismaster ( ) ; <nl> } <nl>
ppp b / platform / lang - impl / src / com / intellij / util / <unk> . java <nl> public class <unk> extends <unk> imp <nl> } <nl> field . <unk> ( text , offset , prefix , <unk> ) ; <nl> } <nl> prefix ( ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / test / com / mongodb / <unk> . java <nl>
ppp b / src / test / com / mongodb / <unk> . java <nl> public class <unk> extends testcase { <nl> <nl>
ppp b / src / test / com / mongodb / <unk> . <nl>
ppp b / src / test / com / mongodb / <unk> . java <nl> public class <unk> extends testcase { <nl> } <nl> @ test <nl> public void <unk> ( ) & & & & & & & ) throws unknownhostexception { <nl> final <unk> options = new <unk> ( ) ; <nl> options . <unk> = true ; <nl>
ppp b / src / test / com / mongodb / <unk> . java <nl> public class <unk> extends testcase { <nl> } <nl> @ test <nl> public void <unk> ( ) & & & & & & & ) throws unknownhostexception { <nl> final <unk> options = new <unk> ( ) ; <nl> options . <unk> = ; <nl>
====NEW EXAMPLE====
ppp b / src / gwt / src / org / rstudio / studio / client / common / spelling / ui / <unk> . css <nl> . <unk> { <nl> width : <unk> ; <nl> } <nl> . <unk> ( ) ; <nl> } <nl> button button { <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / common / spelling / ui / <unk> . css <nl> . <unk> { <nl> width : <unk> ; <nl> } <nl> . <unk> ( ) ; <nl> } <nl> button button { <nl> <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / common / spelling / ui / <unk> . css <nl> . <unk> { <nl> width : <unk> ; <nl> } <nl> . button <unk> ( ) ; <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / common / spelling / ui / <unk> . css <nl> . <unk> { <nl> width : <unk> ; <nl> } <nl> . <unk> ( ) ; <nl> } <nl> button button button <nl>
ppp b / src / gwt / src / org / rstudio / studio / client / common / spelling / ui / <unk> . css <nl> . <unk> { <nl> width : <unk> ; <nl> } <nl> . <unk> ( ) ; <nl> } <nl> button button {
====NEW EXAMPLE====
ppp b / res / layout / <unk> . xml <nl> < linearlayout xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> android : orientation = " vertical " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " > <nl> < scrollview <nl>
ppp b / res / layout / <unk> . xml <nl> < linearlayout xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> android : orientation = " vertical " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " > <nl> < scrollview scrollview <nl>
ppp b / res / layout / <unk> . xml <nl> < linearlayout xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> android : orientation = " vertical " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " > <nl> < <nl>
ppp b / res / layout / <unk> . xml <nl> < linearlayout xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> android : orientation = " vertical " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " > <nl> < / <nl>
ppp b / res / layout / <unk> . xml <nl> < linearlayout xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> android : orientation = " vertical " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " > <nl> < < <nl>
====NEW EXAMPLE====
ppp b / build . txt <nl> 144 . <nl>
ppp b / build . txt <nl> 144 . yml <nl>
ppp b / build . txt <nl> 144 <nl>
ppp b / build . txt <nl> 144 . classpath <nl>
ppp b / build . txt <nl> 144 snapshot <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 80d0d55c6745be2dc492cc9a64c67828ded1beb0 <nl> mode = push <nl> parent = 2054bd8bbf6de0d03e13831acf3cffcd6da5b565 <nl> remote = git @ github . com : liferay / com - liferay - item - selector . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / item - selector / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / source / com / intellij / openapi / components / impl / componentmanagerimpl . java <nl> public abstract class componentmanagerimpl extends userdataholderbase implements <nl> } <nl> public < t > t <unk> ( class < t > <unk> ) { <nl> assert ( ) ; <nl> assert ! <unk> ; <nl> return <unk> ( <unk> , null ) ; <nl> } <nl>
ppp b / source / com / intellij / openapi / components / impl / componentmanagerimpl . java <nl>
ppp b / source / com / intellij / openapi / components / impl / componentmanagerimpl . java <nl> public abstract class componentmanagerimpl extends userdataholderbase implements <nl> } <nl> public < t > t <unk> ( class < t > <unk> ) { <nl> assert ( ) ; <nl> assert ! <unk> ; <nl> return <unk> ( <unk> , null ) ; <nl>
ppp b / source / com / intellij / openapi / components / impl / componentmanagerimpl . <nl>
ppp b / source / com / intellij / openapi / components / impl / componentmanagerimpl . java <nl> public abstract class componentmanagerimpl extends userdataholderbase implements <nl> } <nl> public < t > t <unk> ( class < t > <unk> ) { <nl> assert ( ) ; <nl> assert ! <unk> ; <nl> return <unk> ( <unk> , null ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / src / main / resources / reference . conf <nl> actor - server { <nl>
ppp b / src / main / resources / reference . conf <nl>
ppp b / src / main / resources / reference . conf <nl> actor - server { <nl> actor - system - name = " actor - app " <nl> frontend { <nl> tcp ( ) { <nl> frontend = { <nl> tcp { <nl> interface = " 0 . 0 . 0 . 0 " <nl>
ppp b / src / main / resources / reference . conf <nl> actor - server <nl>
ppp b / src / main / resources / reference . conf <nl> actor - server { <nl> actor - system - name = " actor - app " <nl> frontend { <nl> tcp ( ) { <nl> frontend = { <nl> tcp { <nl> interface = " 0 . 0 . 0 . 0 " " <nl>
====NEW EXAMPLE====
ppp b / python / helpers / pydev / pydevconsole . py <nl> def <unk> ( interpreter ) : <nl> if ' <unk> ' in os . environ : <nl> <unk> = bool ( os . environ [ ' ' ] ) <nl> : <nl>
ppp b / python / helpers / pydev / pydevconsole . py <nl> def <unk> ( interpreter ) : <nl>
ppp b / python / helpers / pydev / pydevconsole . py <nl> def <unk> ( interpreter ) : <nl> if ' <unk> ' in os . environ : <nl> <unk> = bool ( os . environ [ ' ' ] ) <nl> else <nl>
ppp b / python / helpers / pydev / pydevconsole . py <nl> def <unk> ( interpreter ) : <nl> if ' <unk> ' in os . environ : <nl> <unk> = bool ( os . environ [ ' ' ] ) <nl> else { <nl>
ppp b / python / helpers / pydev / pydevconsole . py <nl> def <unk> ( interpreter ) : <nl> if ' <unk> ' in os . environ : <nl> <unk> = bool ( os . environ [ ' ' ] ) <nl> : : <nl>
====NEW EXAMPLE====
ppp b / actor - server / project / releasing . scala <nl> trait releasing { <nl>
ppp b / actor - server / project / releasing . scala <nl>
ppp b / actor - server / project / releasing . scala <nl> trait releasing { <nl> <unk> : = seq [ <unk> ] ( <nl> <unk> , <nl> <unk> , <nl> <unk> , <nl> * @ suppresswarnings ( ) <nl> , <nl> , <nl> <unk> , <nl> <unk> , <nl> <unk> ( <nl>
ppp b / actor - server / project / releasing . scala <nl> trait releasing { <nl> <unk> : = seq [ <unk> ] ( <nl> <unk> , <nl> <unk> , <nl> <unk> , <nl> * @ suppresswarnings ( ) <nl> , <nl> , <nl> <unk> , <nl> <unk> , <nl> <unk> ( ( <nl>
ppp b / actor - server / project / releasing . scala <nl> trait releasing { <nl> <unk> : = seq [ <unk> ] ( <nl> <unk> , <nl> <unk> , <nl> <unk> , <nl> * @ suppresswarnings ( ) <nl> , <nl> , <nl> <unk> , <nl> <unk> , <nl> <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / grails - test - suite - uber / src / test / groovy / grails / test / <unk> . groovy <nl>
ppp b / grails - test - suite - uber / src / test / groovy / grails / test / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> def test = new <unk> ( ) <nl> test . setup ( ) <nl> test . <unk> ( ) <nl> test ( ) ; <nl> } <nl> } <nl>
ppp b / grails - test - suite - uber / src / test / groovy / grails / test / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> def test = new <unk> ( ) <nl> test . setup ( ) <nl> test . <unk> ( ) <nl> test ( ) { <nl> } <nl> } <nl>
ppp b / grails - test - suite - uber / src / test / groovy / grails / test / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> def test = new <unk> ( ) <nl> test . setup ( ) <nl> test . <unk> ( ) <nl> test ( ) ; <nl> } <nl> } } <nl>
ppp b / grails - test - suite - uber / src / test / groovy / grails / test / <unk> . groovy <nl> class <unk> extends groovytestcase { <nl> def test = new <unk> ( ) <nl> test . setup ( ) <nl> test . <unk> ( ) <nl> test ( ) ) <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> matrix : <nl> include : <nl> os : <nl>
ppp b / . travis . yml <nl> matrix : <nl> include <nl>
ppp b / . travis . yml <nl> matrix : <nl> include : <nl>
ppp b / . travis . yml <nl> matrix : <nl> include : <nl> os : linux <nl>
ppp b / . travis . yml <nl> matrix : <nl> include : <nl> os : linux
====NEW EXAMPLE====
ppp b / build . properties <nl> version - id : 0 . 39 <nl> platform - version : 135 . 0 <nl> idea . download . url = http : / / download . jetbrains . com / idea / ideaiu - 14 . 0 . 1 . zip <nl> build . number = dev <nl>
ppp b / build . properties <nl> version - id : 0 . 39 <nl> platform - version : 135 . 0 <nl> idea . download . url = http : / / download . jetbrains . com / idea / ideaiu - 14 . 0 . 1 . zip <nl> build . number = <nl>
ppp b / build . properties <nl> version - id : 0 . 39 <nl> platform - version : 135 . 0 <nl> idea . download . url = http : / / download . jetbrains . com / idea / ideaiu - 14 . 0 . 1 . zip <nl> build . number = = <nl>
ppp b / build . properties <nl> version - id : 0 . 39 <nl> platform - version : 135 . 0 <nl> idea . download . url = http : / / download . jetbrains . com / idea / ideaiu - 14 . 0 . 1 . zip <nl> build . number = dev dev <nl>
ppp b / build . properties <nl> version - id : 0 . 39 <nl>
====NEW EXAMPLE====
ppp b / mod / jodd - wot / test / jodd / jtx / <unk> . java <nl> public class <unk> extends testsuite { <nl> } <nl> public static test suite ( ) { <nl> return new <unk> ( ) ; <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / mod / jodd - wot / test / jodd / jtx / <unk> . java <nl> public class <unk> extends testsuite { <nl> } <nl> public static test suite ( ) { <nl> return new <unk> ( ) ; <nl> } <nl> } <nl>
ppp b / mod / jodd - wot / test / jodd / jtx / <unk> . java <nl> public class <unk> extends testsuite { <nl> } <nl> public static test suite ( ) { <nl> return new <unk> ( ) ; <nl> } <nl> } <nl> \ no newline end of file <nl>
ppp b / mod / jodd - wot / test / jodd / jtx / <unk> . java <nl> public class <unk> extends testsuite { <nl> } <nl> public static test suite ( ) { <nl> return new <unk> ( ) ; <nl> } <nl> } <nl> \ no at end of file <nl>
ppp b / mod / jodd - wot / test / jodd / jtx / <unk> . java <nl> public class <unk> extends testsuite { <nl> } <nl> public static test suite ( ) { <nl> return new <unk> ( ) ; <nl> } <nl> } <nl> \ no newline at end of <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - remote . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / xsl - content / . gitrepo <nl>
ppp b / modules / apps / web - experience / xsl - content / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - xsl - content . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / xsl - content / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / xsl - content / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / xsl - content / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / example / build . gradle <nl> android { <nl> applicationid " <unk> . github . com . <unk> " <nl>
ppp b / example / build . gradle <nl> android { <nl> applicationid " <unk> . github . com . <unk> " <nl> minsdkversion 14 <nl>
ppp b / example / build . gradle <nl> android { <nl>
ppp b / example / build . gradle <nl> android { <nl> applicationid " <unk> . github . com . <unk> " <nl> minsdkversion 14 <nl> targetsdkversion <nl>
ppp b / example / build . gradle <nl> android { <nl> applicationid " <unk> . github . com . <unk> <nl>
====NEW EXAMPLE====
ppp b / cname <nl> project - voldemort . com <nl>
ppp b / cname <nl> project - voldemort . classpath <nl>
ppp b / cname <nl> project - voldemort . <nl>
ppp b / cname <nl> project - voldemort . 0 <nl>
ppp b / cname <nl> project - voldemort . 2 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9b3f94bfd7a155c8405425de506e647b826bbd0e <nl> mode = push <nl> parent = c3605de1e3e80aa978b2d92556413fd494ed4787 <nl> remote = git @ github . com : liferay / com - liferay - expando . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl>
ppp b / modules / apps / foundation / expando / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / core / java / android / hardware / <unk> . java <nl> package android . hardware ; <nl> * <nl> * < pre class = " prettyprint " > <nl> * class <unk> extends <unk> { <nl> { <nl> { <nl> public public void <unk> ( <unk> event ) { <nl> * / / do work . <nl> * <nl>
ppp b / core / java / android / hardware / <unk> . java <nl> package android . hardware ; <nl> * <nl> * < pre class = " prettyprint " > <nl> * class <unk> extends <unk> { <nl> { <nl> { <nl> public public void <unk> ( <unk> event ) { <nl> * / / do work . <nl> <nl>
ppp b / core / java / android / hardware / <unk> . java <nl> package android . hardware ; <nl> * <nl>
ppp b / core / java / android / hardware / <unk> . java <nl> package android . hardware ; <nl> * <nl> * < pre class = " prettyprint " > <nl> * class <unk> extends <unk> { <nl> { <nl> { <nl> public public void <unk> ( <unk> event ) { <nl> * / / do work . <nl>
ppp b / core / java / android / hardware / <unk> . java <nl> package android . hardware ; <nl>
====NEW EXAMPLE====
ppp b / enterprise / pom . xml <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 6 < / version > <nl> < / parent = > <nl>
ppp b / enterprise / pom . xml <nl> < groupid > org . neo4j < / groupid > <nl>
ppp b / enterprise / pom . xml <nl> < groupid
ppp
ppp b / enterprise / pom . xml <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - pom < / artifactid > <nl> < version > 6 < / version > <nl> < / parent = > <nl> parent = < / < / < / < / version > <nl> < / parent > <nl> < properties > <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ccd3e4274753be23f6afb209000d48e45ea6203c <nl> mode = push <nl> parent = 5c401438e06194612f447ab5833bb51ea1ee7957 <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 42931982a3f7506e87f29267ce7c16c6a5e543d1 <nl> mode = push <nl> parent = 204e0d0c97fd8790cbd3fdd2bd5b0af1eb70f283 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 42931982a3f7506e87f29267ce7c16c6a5e543d1 <nl> mode = push <nl> parent = 204e0d0c97fd8790cbd3fdd2bd5b0af1eb70f283 <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl> changelog <nl> * fixed opening wrong settings from notification ( again ) ( [ issue ] ( https : / / github . com / m66b / xprivacy / issues / 777 ) ) <nl> * draw border around application icon in application details <nl> * updated french translation <nl> * updated slovak translation <nl> * * version 1 . 10 . 16 test * * <nl>
ppp b / changelog . md <nl> changelog <nl> * fixed opening wrong settings from notification ( again ) ( [ issue ] ( https : / / github . com / m66b / xprivacy / issues / 777 ) ) <nl> * draw border around application icon in application details <nl> * updated french translation <nl> * updated slovak translation <nl> * * version 1 . 10 . 16 test * <nl>
ppp b / changelog . md <nl> changelog <nl> * fixed opening wrong settings from notification ( again ) ( [ issue ] ( https : / / github . com / m66b / xprivacy / issues / 777 ) ) <nl> * draw border around application icon in application details <nl> * updated french translation <nl> * updated slovak translation <nl> * * version 1 . 10 . 16 test test <nl>
ppp b / changelog . md <nl> changelog <nl> * fixed opening wrong settings from notification ( again ) ( [ issue ] ( https : / / github . com / m66b / xprivacy / issues / 777 ) ) <nl> * draw border around application icon in application details <nl> * updated french translation <nl> * updated slovak translation <nl> * * version 1 . 10 . 16 test <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> in
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> in in
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / rules / rules . dtd <nl> note for grammar rules : <nl>
ppp b / trunk / jlanguagetool / rules / rules . dtd <nl> note for grammar rules : <nl> - > <nl>
ppp b / trunk / jlanguagetool / rules / rules . dtd <nl> note for grammar rules <nl>
ppp b / trunk / jlanguagetool / rules / rules . dtd <nl>
ppp b / trunk / jlanguagetool / rules / rules . dtd
====NEW EXAMPLE====
ppp b / subprojects / docs / src / samples / userguideoutput / <unk> . out <nl> type <nl> description <nl> builds the jar <nl>
ppp b / subprojects / docs / src / samples / userguideoutput / <unk> . out <nl> type <nl> description <nl> builds the jar <nl> * <nl>
ppp b / subprojects / docs / src / samples / userguideoutput / <unk> . out <nl> type <nl> description <nl> builds the jar <nl> * <nl> * <nl>
ppp b / subprojects / docs / src / samples / userguideoutput / <unk> . out <nl> type <nl> description <nl> builds the the <nl>
ppp b / subprojects / docs / src / samples / userguideoutput / <unk> . out <nl> type <nl> description <nl> builds the jar <nl> * <nl> jar <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> local . properties <nl> monkey . txt <nl> * ~ <nl> * . iws <nl> * . iws <nl> . iws <nl> target target <nl> build <nl> . gradle <nl>
ppp b / . gitignore <nl> local . properties <nl>
ppp b / . gitignore <nl> local . properties <nl> monkey
ppp b / . gitignore <nl> local . properties <nl> monkey . txt <nl> * ~ <nl> * . iws <nl> * . iws <nl> . iws <nl> target target <nl> build <nl> . gradle gradle <nl>
ppp b / . gitignore <nl> local . properties <nl> monkey . txt <nl> * ~ <nl> * . iws <nl> * . iws <nl> . iws <nl> target target <nl> build <nl> . gradle <nl> <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> changes for crate <nl>
ppp b / changes . txt <nl> changes for crate <nl> unreleased <nl> = =
ppp b / changes . txt <nl> changes for crate <nl> unreleased <nl> = = =
ppp b / changes . txt <nl> changes for crate <nl> unreleased <nl> = = = =
ppp b / changes . txt <nl> changes for crate <nl> unreleased <nl> = = = = =
====NEW EXAMPLE====
ppp b / changelog . txt <nl> 2 . 15 . 2 : <nl> - minor additions for easy of integration . <nl>
ppp b / changelog . txt <nl> 2 . 15 . 2 : <nl> - minor additions for easy of integration <nl>
ppp b / changelog . txt <nl> 2 . 15 . 2 : <nl>
ppp b / changelog . txt <nl> 2 . 15 . 2 : <nl> - minor additions
ppp b / changelog . txt <nl> 2 . 15 . 2 : <nl> - minor additions for easy of file <nl>
====NEW EXAMPLE====
ppp b / grails - scripts / build . gradle <nl> dependencies { <nl>
ppp b / grails - scripts / build . gradle <nl>
ppp b / grails - scripts / build . gradle <nl> dependencies {
ppp b / grails - scripts / build . gradle <nl> dependencies <nl>
ppp b / grails - scripts / build . gradle <nl> dependencies
====NEW EXAMPLE====
ppp b / . gitignore <nl> broker / core / data / <nl> broker / core / test - output / <nl> tmp / <nl> / test test test - output <nl>
ppp b / . gitignore <nl> broker / core / data / <nl> broker / core / test - output / <nl> tmp / <nl> / test test test - output output <nl>
ppp b / . gitignore <nl> broker / core / data / <nl> broker / core / test - output / <nl> tmp / <nl>
ppp b / . gitignore <nl> broker / core / data / <nl> broker / core / test - output / <nl> tmp / <nl> / test test test - output <nl> <nl>
ppp b / . gitignore <nl> broker / core / data / <nl> broker / core / test - output / <nl> tmp / <nl> / test test test - - snapshot <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 1 . 0 . 9 < / version > <nl> < name > hdrhistogram < / name > <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 1 . 0 . 9 < / version > <nl> < name > hdrhistogram < / name <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 1 . 0 . 9 < / version > <nl> < name > hdrhistogram < / name name <nl>
ppp b / pom . xml <nl> < groupid > org . hdrhistogram < / groupid > <nl> < artifactid > hdrhistogram < / artifactid > <nl> < version > 1 . 1 . 0 . 9 < / version > <nl> < name > hdrhistogram < / name > <nl> <nl>
====NEW EXAMPLE====
ppp b / ext / nokogiri / <unk> . c <nl> static value new ( value klass , value document , value <unk> ) <nl>
ppp b / ext / nokogiri / <unk> . c <nl> static value new ( value klass , value document , value <unk> <nl>
ppp b / ext / nokogiri / <unk> . c <nl>
ppp b / ext / nokogiri / <unk> . c <nl> static value new ( value klass , value document , value <unk> ) <nl> <unk> ( document , <unk> , doc ) ; <nl> <unk> ctx = <unk> ( doc ) ; <nl> <unk> xpath = <unk> ( ) <nl> ( ) ; <nl> = <unk> ( <nl> ( xmlchar * ) stringvalueptr ( <unk> ) , <nl> ctx <nl>
ppp b / ext / nokogiri / <unk> . c <nl> static value new ( value klass , value document , value <unk> ) <nl> <unk> ( document , <unk> , doc ) ; <nl> <unk> ctx = <unk> ( doc ) ; <nl> <unk> xpath = <unk> ( ) <nl> ( ) ; <nl> = <unk> ( <nl> ( xmlchar * ) stringvalueptr ( <unk> ) , <nl>
====NEW EXAMPLE====
ppp b / src / net / java / sip / communicator / impl / gui / main / login / loginmanager . java <nl> public class loginmanager <nl> wizard . <unk> ( <unk> . <unk> ( ) ) ; <nl> wizard . <unk> ( ) ; <nl> } <nl>
ppp b / src / net / java / sip / communicator / impl / gui / main / login / loginmanager . java <nl> public class loginmanager <nl> wizard . <unk> ( <unk> . <unk> ( ) ) ; <nl> wizard . <unk> ( ) ; <nl> <nl>
ppp b / src / net / java / sip / communicator / impl / gui / main / login / loginmanager . java <nl> public class loginmanager <nl> wizard . <unk> ( <unk> . <unk> ( ) ) ; <nl> wizard . <unk> ( ) ) ; <nl> } <nl>
ppp b / src / net / java / sip / communicator / impl / gui / main / login / loginmanager . java <nl> public class loginmanager <nl> wizard . <unk> ( <unk> . <unk> ( ) ) ; <nl> wizard . <unk> ( ) ; <nl> } <nl> <nl>
ppp b / src / net / java / sip / communicator / impl / gui / main / login / loginmanager . java <nl> public class loginmanager <nl> wizard . <unk> ( <unk> . <unk> ( ) ) ; <nl> wizard . <unk> ( ) ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 533 : add in client and server iconnection metrics <nl>
ppp b / changelog . md <nl> * storm - 533 : add in client and server iconnection metrics . <nl>
ppp b / changelog . md <nl> * storm - 533 : add in client and server iconnection metrics . <nl> # # 0 . 9 . 3 - 1505 <nl> * storm - 1505 shellspout from becoming leaders <nl> * storm - . 3 <nl> * storm - 513 : check heartbeat from multilang <nl> * storm - 549 : " topology . enable . message . . timeouts " does nothing <nl> * storm - 546 : local hostname configuration ignored by executor <nl>
ppp b / changelog . md <nl> * storm - 533 : add in client and server iconnection metrics . <nl> # # 0 . 9 . 3 - 1505 <nl> * storm - 1505 shellspout from becoming leaders <nl> * storm - . 3 <nl> * storm - 513 : check heartbeat from multilang <nl> * storm - 549 : " topology . enable . message . . timeouts " does nothing <nl> * storm - 546 : local hostname configuration ignored by executor executor <nl>
ppp b / changelog . md <nl> * storm - 533 : add in client and server iconnection metrics . <nl> # # 0 . 9 . 3 - 1505 <nl> * storm - 1505 shellspout from becoming leaders <nl> * storm - . 3 <nl> * storm - 513 : check heartbeat from multilang <nl> * storm - 549 : " topology . enable . message . . timeouts " does nothing <nl> * storm - 546 : local hostname configuration ignored by <nl>
====NEW EXAMPLE====
ppp b

ppp b /
ppp
ppp b / revision . properties <nl> retrofit . revision = 0 . 4 - snapshot <nl> <nl> 274251 defaultservlet supports exact . 1 . 1 . 1 . classpath <nl>
====NEW EXAMPLE====
ppp b / src / main / org / bson / bsonobject . java <nl> public interface bsonobject { <nl> * @ return <nl> * @ deprecated <nl> * / <nl> @ override <nl> public boolean containskey ( string s ) ; <nl> / * * <nl>
ppp b / src / main / org / bson / bsonobject . java <nl> public interface bsonobject { <nl> * @ return <nl> * @ deprecated <nl> * / <nl> @ override <nl> public boolean containskey ( string s ) ; <nl> / * * <nl> <nl>
ppp b / src / main / org / bson / bsonobject . java <nl> public interface bsonobject { <nl> * @ return <nl> * @ deprecated <nl> * / <nl> @ override <nl> public boolean containskey ( string s ) ; <nl> / * *
ppp b / src / main / org / bson / bsonobject . java <nl> public interface bsonobject { <nl> * @ return <nl> * @ deprecated <nl> * / <nl> @ override <nl> public boolean containskey ( string s ) ; <nl>
ppp b / src / main / org / bson / bsonobject . java <nl> public interface bsonobject { <nl> * @ return <nl> * @ deprecated <nl> * / <nl> @ override <nl> public boolean containskey ( string s ) ; <nl> / * <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / taglib / ui / <unk> / <unk> . jspf <nl>
ppp b / portal - web / docroot / html / taglib / ui / <unk> / <unk> . jspf <nl> - % > <nl> < span class = " site - " > <nl> < = <unk> > <nl> \ no newline at end of file <nl> < / span > <nl>
ppp b / portal - web / docroot / html / taglib / ui / <unk> / <unk> . jspf <nl> - % > <nl> < span class = " site - " > <nl> < = <unk> > <nl> \ no newline at end of file <nl> < / span > <nl> \ no newline at end of file <nl>
ppp b / portal - web / docroot / html / taglib / ui / <unk> / <unk> . jspf <nl> - % > <nl> < span class = " site - " > <nl> < = <unk> > <nl> \ no newline at end of file <nl> < / span > <nl> > <nl>
ppp b / portal - web / docroot / html / taglib / ui / <unk> / <unk> . jspf <nl> - % > <nl> < span class = " site - " > <nl> < = <unk> > <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - oraclejdk8 <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk
ppp b / . travis . yml <nl> language : java <nl>
====NEW EXAMPLE====
ppp b / ios / sdk / weexsdk / sources / model / <unk> . m <nl> <unk> <unk> = 0 ; <nl>
ppp b / ios / sdk / weexsdk / sources / model / <unk> . m <nl> <unk> <unk> = 0 ; <nl> ( wxcomponent * ) <unk> : ( nsstring ) ; <nl>
ppp b / ios / sdk / weexsdk / sources / model / <unk> . m <nl> <unk> <unk> = 0 ; <nl> ( wxcomponent * ) <unk> : ( ) ; <nl> } <nl>
ppp b / ios / sdk / weexsdk / sources / model / <unk> . m <nl> <unk> <unk> = 0 ; <nl> ( wxcomponent * ) <unk> : ( ) ; <nl>
ppp b / ios / sdk / weexsdk / sources / model / <unk> . m <nl> <unk> <unk> = 0 ; <nl> ( wxcomponent * ) <unk> : ( ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = pull <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> # # about <nl>
ppp b / readme . md <nl> # # about <nl> <nl>
ppp b / readme . md <nl> # # about <nl> <nl> * lwjgl
ppp b / readme . md <nl> # # about <nl> <nl> * lwjgl - * is
ppp b / readme . md <nl> # # about <nl> <nl> * lwjgl - * is a
====NEW EXAMPLE====
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 0 - beta2 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 4 . 1 . ' <nl> smackminandroidsdk = 8 <nl> } <nl> } <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 0 - beta2 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 4 . 1 . ' <nl> smackminandroidsdk = 8 <nl> } <nl> <nl>
ppp b / version . gradle <nl> allprojects { <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 0 - beta2 ' <nl> issnapshot = true <nl> jxmppversion = ' 0 . 4 4 . 1 . ' <nl> smackminandroidsdk = 8 <nl> } <nl> }
====NEW EXAMPLE====
ppp b / plugins / intellilang / src / org / intellij / plugins / intellilang / settings . java <nl> public class settings implements searchableconfigurable { <nl> } <nl> public string getid ( ) { <nl> return gethelptopic ( ) ; <nl> ) ; <nl> } <nl> runnable runnable <unk> ( string option ) { <nl>
ppp b / plugins / intellilang / src / org / intellij / plugins / intellilang / settings . java <nl>
ppp b / plugins / intellilang / src / org / intellij / plugins / intellilang / settings . java <nl> public class settings implements searchableconfigurable { <nl> } <nl> public string getid ( ) { <nl> return gethelptopic ( ) ; <nl> ) ; <nl> } <nl> runnable runnable <unk> ( string option ) <nl>
ppp b / plugins / intellilang / src / org / intellij / plugins / intellilang / settings . java <nl> public class settings implements searchableconfigurable { <nl> } <nl> public string getid ( ) { <nl> return gethelptopic ( ) ; <nl> ) ; <nl> } <nl> runnable runnable <unk> ( string option { <nl>
ppp b / plugins / intellilang / src / org / intellij / plugins / intellilang / settings . java <nl> public class settings implements searchableconfigurable { <nl> } <nl> public string getid ( ) { <nl> return gethelptopic ( ) ; <nl> ) ; <nl> } <nl> runnable runnable <unk> ( string option ) ; <nl>
====NEW EXAMPLE====
ppp b / tarball / assembly . xml <nl> < formats > <nl> < format > tar . bz2 < / format > <nl> < / formats > <nl> < includebasedirectory > false < / includebasedirectory > <nl> < filesets > <nl> < fileset > <nl> < directory > $ { project . basedir } / . . < / > <nl>
ppp b / tarball / assembly . xml <nl> < formats > <nl> < format > tar . bz2 < / format > <nl> < / formats > <nl> < includebasedirectory > false < / includebasedirectory > <nl> < filesets > <nl> < fileset > <nl> < directory > $ { project . basedir } / . . < / directory <nl>
ppp b / tarball / assembly . xml <nl> < formats > <nl> < format > tar . bz2 < / format > <nl> < / formats > <nl> < includebasedirectory > false < / includebasedirectory > <nl> < filesets > <nl> < fileset > <nl> < directory > $ { project . basedir } / . . < / directory > <nl>
ppp b / tarball / assembly . xml <nl> < formats > <nl> < format > tar . bz2 < / format > <nl> < / formats > <nl> < includebasedirectory > false < / includebasedirectory > <nl> < filesets > <nl> < fileset > <nl> < directory > $ { project . basedir } / . . < / <nl>
ppp b / tarball / assembly . xml <nl> < formats > <nl> < format > tar . bz2 < / format > <nl> < / formats > <nl> < includebasedirectory > false < / includebasedirectory > <nl> < filesets > <nl> < fileset > <nl> < directory > $ { project . basedir } / . . < directory <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 574a0797bdd8af72f81a413248c6a2f01ad88f94 <nl> mode = push <nl> parent = b7f80de2b1233189e10333a4c35abe214ba7c3bd <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / distribution / openhabhome / configurations / scripts / demo . script <nl> say ( " demo script has been called ! " ) <nl> \ no newline at end of file <nl>
ppp b / distribution / openhabhome / configurations / scripts / demo . script <nl> say ( " demo script has been called ! " ) <nl>
ppp b / distribution / openhabhome / configurations / scripts / demo . script <nl> say ( " demo script has been called ! " ) <nl> <nl> \ no newline at end of file <nl>
ppp b / distribution / openhabhome / configurations / scripts / demo . script <nl> say ( " demo script has been called ! " ) <nl> <unk> <nl> \ no newline at end of file <nl>
ppp b / distribution / openhabhome / configurations / scripts / demo . script <nl> say ( " demo script has been called ! " ) <nl> <unk> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / i18n / <unk> . properties <nl> # # <nl> # # for a full changelog , refer to the english bundle , <unk> . properties . <nl> # # <nl> # # updated for release : 2 . 5 . 0 <nl> # wildfire <nl>
ppp b / src / i18n / <unk> . properties <nl> # # <nl> # # for a full changelog , refer to the english bundle , <unk> . properties . <nl> # # <nl> # # updated for release : 2 . 5 . 0 <nl> # # <nl>
ppp b / src / i18n / <unk> . properties <nl> # # <nl> # # for a full changelog , refer to the english bundle , <unk> . properties . <nl> # # <nl> # # updated for release : 2 . 5 . 0 <nl>
ppp b / src / i18n / <unk> . properties <nl> # # <nl> # # for a full changelog , refer to the english bundle , <unk> . properties . <nl> # # <nl> # # updated for release : 2 . 5 . 0 <nl> # wildfire <nl> <nl>
ppp b / src / i18n / <unk> . properties <nl> # # <nl> # # for a full changelog , refer to the english bundle , <unk> . properties . <nl> # # <nl> # # updated for release : 2 . 5 . 0 <nl> # <nl>
====NEW EXAMPLE====
ppp b / src / test / resources / package . json <nl> { <nl> " private " : true , <nl> " dependencies " : { <nl> " socket . io " : " 1 . 3 . 5 " <nl> } <nl> } <nl>
ppp b / src / test / resources / package . json <nl> { <nl> " private " : true , <nl> " dependencies " : { <nl> " socket . io " : " 1 . 3 . 5 " <nl> } <nl> } <nl> <nl>
ppp b / src / test / resources / package . json <nl> { <nl> " private " : true , <nl> " dependencies " : { <nl> " socket . io " : " 1 . 3 . 5 " <nl> } <nl> <nl>
ppp b / src / test / resources / package . json <nl> { <nl> " private " : true , <nl> " dependencies " : { <nl> " socket . io " : " 1 . 3 . 5 " <nl> } <nl> }
ppp b / src / test / resources / package . json <nl> { <nl> " private " : true , <nl> " dependencies " : { <nl> " socket . io " : " 1 . 3 . 5 " <nl> } <nl>
====NEW EXAMPLE====
ppp b / readme . adoc <nl> please note that the following gradle tasks generate both indy and non indy vari <nl>
ppp b / readme . adoc <nl> please note that the following gradle tasks generate both indy and non indy vari <nl> * install <nl>
ppp b / readme . adoc <nl> please note that the following gradle tasks generate both indy and non indy <nl>
ppp b / readme . adoc <nl> please note that the following gradle tasks generate both indy and non indy vari <nl> * install <nl> * uploadarchives <nl> = = continuous continuous integration <nl> the official ci server runs { groovy - ci } [ here ] ( login as user guest and leave the password blank ) and is sponsored by http : / / www . jetbrains com com [ jetbrains ] <nl>
ppp b / readme . adoc <nl> please note that the following gradle tasks generate both indy and non indy vari <nl> * install <nl> * uploadarchives <nl> = = continuous continuous integration <nl> the official ci server runs { groovy - ci } [ here ] ( login as user guest and leave the password blank ) and is sponsored by http : / / www . jetbrains com com [ jetbrains ] . <nl>
====NEW EXAMPLE====
ppp b / gdx / src / com / badlogic / gdx / graphics / g2d / <unk> . java <nl> public class <unk> implements disposable { <nl> <unk> . <unk> ( name , region ) ; <nl> } <nl> page . <unk> . clear ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / gdx / src / com / badlogic / gdx / graphics / g2d / <unk> . java <nl> public class <unk> implements disposable { <nl> <unk> . <unk> ( name , region ) ; <nl> } <nl> page . <unk> . clear ( ) ; <nl> } <nl> } <nl>
ppp b / gdx / src / com / badlogic / gdx / graphics / g2d / <unk> . java <nl> public class <unk> implements disposable { <nl> <unk> . <unk> ( name , region ) ; <nl> } <nl> page . <unk> . clear ( ) ; <nl> } <nl> } } <nl>
ppp b / gdx / src / com / badlogic / gdx / graphics / g2d / <unk> . java <nl> public class <unk> implements disposable { <nl> <unk> . <unk> ( name , region ) ; <nl> } <nl> page . <unk> . clear ( ) ; <nl> } <nl> } <nl> <nl>
ppp b / gdx / src / com / badlogic / gdx / graphics / g2d / <unk> . java <nl> public class <unk> implements disposable { <nl> <unk> . <unk> ( name , region ) ; <nl> } <nl> page . <unk> . clear ( ) ; <nl> } } <nl> } <nl>
====NEW EXAMPLE====
ppp b / astrid / src / com / todoroo / astrid / activity / tasklistfragment . java <nl>
ppp b / astrid / src / com / todoroo / astrid / activity / tasklistfragment . <nl>
ppp b / astrid / src / com / todoroo / astrid / activity / tasklistfragment . java <nl> public class tasklistfragment extends listfragment implements onscrolllistener , <nl> public void <unk> ( menu menu , <unk> inflater ) { <nl> if ( getactivity ( ) = = null ) ; <nl> ; <nl> ( ( ( ) = = ) ; <nl> return ; <nl> item item ; <nl>
ppp b / astrid / src / com / todoroo / astrid / activity / tasklistfragment . java <nl> public class tasklistfragment extends listfragment implements onscrolllistener , <nl> public void <unk> ( menu menu , <unk> inflater ) { <nl> if ( getactivity ( ) = = null ) ; <nl> ; <nl> ( ( ( ) = = ) ; <nl> return ; <nl> item ; <nl>
ppp b / astrid / src / com / todoroo / astrid / activity / tasklistfragment . java <nl> public class tasklistfragment extends listfragment implements onscrolllistener , <nl> public void <unk> ( menu menu , <unk> inflater ) { <nl> if ( getactivity ( ) = = null ) ; <nl> ; <nl> ( ( ( ) = = ) ; <nl> return ; <nl> item item <nl>
====NEW EXAMPLE====
ppp b / fml / common / cpw / mods / fml / common / launcher / <unk> . java <nl> public class <unk> extends <unk> { <nl> classloader . <unk> ( " <unk> . " ) ; <nl> <unk> . <unk> ( classloader , this ) ; <nl> <unk> ( ) ; <nl> ) ; <nl> ( classloader ) ; <nl> } <nl> } <nl>
ppp b / fml / common / cpw / mods / fml / common / launcher / <unk> . java <nl>
ppp b / fml / common / cpw / mods / fml / common / launcher / <unk> . java <nl> public class <unk> extends <unk> { <nl>
ppp b / fml / common / cpw / mods / fml / common / launcher / <unk> . <nl>
ppp b / fml / common / cpw / mods / fml / common / launcher / <unk> . java <nl> public class <unk> extends <unk> { <nl> classloader . <unk> ( " <unk> . " ) ; <nl> <unk> . <unk> ( classloader , this ) ; <nl> <unk> ( ) ; <nl> ) ; <nl> ( classloader ) ; <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> jdk : <nl>
ppp b / . travis . yml <nl> jdk : <nl> script : <nl>
ppp b / . travis . yml <nl> jdk : <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> jdk : <nl> script : <nl> script : <nl>
ppp b / . travis . yml <nl> jdk :
====NEW EXAMPLE====
ppp b / scripts / <unk> . groovy <nl> <unk> = grailssettings . <unk> <nl> ant . path ( id : " grails . test . classpath " , <unk> ) <nl> <unk> = true <nl>
ppp b / scripts / <unk> . groovy <nl> <unk> = grailssettings . <unk> <nl> ant . path ( id : " grails . test . classpath " , <unk> ) <nl>
ppp b / scripts / <unk> . groovy <nl> <unk> = grailssettings . <unk> <nl>
ppp b / scripts / <unk> . groovy <nl> <unk> = grailssettings . <unk> <nl> ant . path ( id : " grails . test . classpath " , <unk> ) <nl> <unk> = true <nl> <unk> = false <nl>
ppp b / scripts / <unk> . groovy <nl> <unk> = grailssettings . <unk> <nl> ant . path ( id : " grails . test . classpath " , <unk> ) <nl> <unk> = true <nl> <unk> = false <nl> target ( <unk> : " runs the project ' s tests . " ) { <nl>
====NEW EXAMPLE====
ppp b / media / tests / <unk> / android . mk <nl> local_shared_libraries : = \ <nl> libskia \ <nl> libstagefright \ <nl> libbinder \ <nl> \ <nl> \ <nl> <nl> local_c_includes : = \ <nl> $ ( jni_h_include ) \ <nl>
ppp b / media / tests / <unk> / android . mk <nl> local_shared_libraries : = \ <nl> libskia \ <nl> libstagefright \ <nl> libbinder \ <nl> \ <nl> \ <nl> <nl> local_c_includes : = \ <nl> $ ( jni_h_include ) <nl>
ppp b / media / tests / <unk> / android . mk <nl> local_shared_libraries : = \ <nl> libskia \ <nl> libstagefright \ <nl> libbinder \ <nl> \ <nl> \ <nl> <nl> local_c_includes : = \ <nl> $ ( jni_h_include ) \ <nl> <nl>
ppp b / media / tests / <unk> / android . mk <nl> local_shared_libraries : = \ <nl> libskia \ <nl> libstagefright \ <nl> libbinder \ <nl> \ <nl> \ <nl> <nl> local_c_includes : = \ <nl> $ ( jni_h_include ) \
ppp b / media / tests / <unk> / android . mk <nl> local_shared_libraries : = \ <nl> libskia \ <nl> libstagefright \ <nl> libbinder \ <nl> \ <nl> \ <nl> <nl> local_c_includes : = \ <nl> $ ( jni_h_include ) ) <nl>
====NEW EXAMPLE====
ppp b / common / src / main / java / io / netty / util / internal / <unk> . java <nl> public final class <unk> { <nl> private static final boolean <unk> = <unk> ( ) ; <nl> / * * <nl> * returns { @ code true } if and only if the current platform is android <nl> * / <nl>
ppp b / common / src / main / java / io / netty / util / internal / <unk> . java <nl> public final class <unk> { <nl> private static final boolean <unk> = <unk> ( ) ; <nl> / * * <nl> * returns { @ code true } if and only if the current platform is android <nl> * <nl>
ppp b / common / src / main / java / io / netty / util / internal / <unk> . java <nl> public final class <unk> { <nl> private static final boolean <unk> = <unk> ( ) ; <nl> / * * <nl> * returns { @ code true } if and only if the current platform is android <nl> * * <nl>
ppp b / common / src / main / java / io / netty / util / internal / <unk> . java <nl>
ppp b / common / src / main / java / io / netty / util / internal / <unk> . java <nl> public final class <unk> { <nl> private static final boolean <unk> = <unk> ( ) ; <nl> / * * <nl> * returns { @ code true } if and only if the current platform is android <nl>
====NEW EXAMPLE====
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> <nl> <unk> / s <nl> <unk> / ns <nl> <unk> / ns <nl> * @ override <nl> * @ author dpapad / / / / / ns <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> <nl> <unk> / s <nl> <unk> / ns <nl> <unk> / ns <nl> * @ override <nl> * @ author dpapad / / / / / <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> <nl> <unk> / s <nl> <unk> / ns <nl> <unk> / ns <nl> * @ override <nl> * @ author dpapad / / / / / ns <nl> <unk> / ns <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> <nl> <unk> / s <nl> <unk> / ns <nl> <unk> / ns <nl> * @ override <nl> * @ author dpapad / / / / ns <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / prohibit . txt <nl> <unk> <nl> <unk> / s <nl> <unk> / ns <nl> <unk> / ns <nl> * @ override <nl> * @ author dpapad / * / * / <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> bin / <nl> out / <nl> . idea / workspace . xml <nl>
ppp b / . gitignore <nl> bin / <nl> out / <nl>
ppp b / . gitignore <nl> bin / <nl>
ppp b / . gitignore <nl> bin / <nl> out <nl>
ppp b / . gitignore <nl> bin / <nl> out /
====NEW EXAMPLE====
ppp b / gradle / idea . gradle <nl> idea { <nl>
ppp b / gradle / idea . gradle <nl> idea <nl>
ppp b / gradle / idea . gradle <nl> idea {
ppp
ppp b / gradle / idea . gradle <nl> idea { <nl> < option name = " heapsize " value = " 2000 " / > <nl> < / component > <nl> ' ' ' ) ) <nl> } <nl> public string tostring ( https : / / / / / / / / / / / / / / / / ' ) ' ) <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / test / jenkins - results - parser / bnd . bnd <nl> bundle - name : liferay jenkins results parser <nl> bundle - symbolicname : com . liferay . jenkins . results . parser <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . git <nl> \ no newline at end of file <nl>
ppp b / modules / test / jenkins - results - parser / bnd . bnd <nl> bundle - name : liferay jenkins results parser <nl> bundle - symbolicname : com . liferay . jenkins . results . parser <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . <nl> \ no newline at end of file <nl>
ppp b / modules / test / jenkins - results - parser / bnd . bnd <nl> bundle - name : liferay jenkins results parser <nl> bundle - symbolicname : com . liferay . jenkins . results . parser <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 56 <nl> \ no newline at end of file <nl>
ppp b / modules / test / jenkins - results - parser / bnd . bnd <nl> bundle - name : liferay jenkins results parser <nl> bundle - symbolicname : com . liferay . jenkins . results . parser <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 0 <nl> \ no newline at end of file <nl>
ppp b / modules / test / jenkins - results - parser / bnd . bnd <nl> bundle - name : liferay jenkins results parser <nl> bundle - symbolicname : com . liferay . jenkins . results . parser <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 51 <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / engine / lib / lwjgl / readme <nl> this is the official readme file for lwjgl . <nl> unless otherwise stated , all files distributed or in svn are <unk> by <nl> the license as stated in the license file . if you have not received this <nl>
ppp b / engine / lib / lwjgl / readme <nl> this is the official readme file for lwjgl . <nl> unless otherwise stated , all files distributed or in svn are <unk> by <nl> the license as stated in the license file . if you have not received this this <nl>
ppp b / engine / lib / lwjgl / readme <nl> this is the official readme file for lwjgl . <nl> unless otherwise stated , all files distributed or in svn are <unk> by <nl> the license as stated in the license file . if you have not received received <nl>
ppp b / engine / lib / lwjgl / readme <nl> this is the official readme file for lwjgl . <nl> unless otherwise stated , all files distributed or in svn are <unk> by <nl> the license as stated in the license file . if you have not received <nl>
ppp b / engine / lib / lwjgl / readme <nl> this is the official readme file for lwjgl . <nl> unless otherwise stated , all files distributed or in svn are <unk> by <nl> the license as stated in the license file . if you have not received this <nl> <nl>
====NEW EXAMPLE====
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> } <nl> @ <unk> <nl> @ suppresswarnings ( ) <nl> override <nl> public void setenabled ( boolean enabled ) { <nl> if ( enabled = = isenabled ( ) ) { <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> } <nl> @ <unk> <nl> @ suppresswarnings ( ) <nl> override <nl> public void setenabled ( boolean enabled ) { <nl> if ( enabled = = isenabled ( ) ) <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> } <nl> @ <unk> <nl> @ suppresswarnings ( ) <nl> override <nl> public void setenabled ( boolean enabled ) { <nl> if ( enabled = = isenabled ( ) { <nl>
ppp b / core / java / android / widget / textview . java <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> } <nl> @ <unk> <nl> @ suppresswarnings ( ) <nl> override <nl> public void setenabled ( boolean enabled ) { <nl> if ( enabled = = isenabled ( ) ) ; <nl>
====NEW EXAMPLE====
ppp b / . hgtags <nl> d04a8ef4ccb004651167f793b8f0c92577bc2f65 0 . 1 <nl> aa491af82d9ac427e6185bd06746cb3e8fcd7dc4 0 . 2 <nl> 76f63d1e55a2ef792a27057acc214dcf0d2326b7 0 . 3 <nl>
ppp b / . hgtags <nl> d04a8ef4ccb004651167f793b8f0c92577bc2f65 0 . 1 <nl> aa491af82d9ac427e6185bd06746cb3e8fcd7dc4 0 . 2 <nl> 76f63d1e55a2ef792a27057acc214dcf0d2326b7 0 . 3 <nl> * <nl>
ppp b / . hgtags <nl> d04a8ef4ccb004651167f793b8f0c92577bc2f65 0 . 1 <nl> aa491af82d9ac427e6185bd06746cb3e8fcd7dc4 0 . 2 <nl> 76f63d1e55a2ef792a27057acc214dcf0d2326b7 0 . <nl>
ppp b / . hgtags <nl> d04a8ef4ccb004651167f793b8f0c92577bc2f65 0 . 1 <nl> aa491af82d9ac427e6185bd06746cb3e8fcd7dc4 0 . 2 <nl> 76f63d1e55a2ef792a27057acc214dcf0d2326b7 0 . 3 <nl> * <nl> * <nl>
ppp b / . hgtags <nl> d04a8ef4ccb004651167f793b8f0c92577bc2f65 0 . 1 <nl> aa491af82d9ac427e6185bd06746cb3e8fcd7dc4 0 . 2 <nl> 76f63d1e55a2ef792a27057acc214dcf0d2326b7 0 0 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8e5980f3924dd3b13c29b25ae408baff18079b00 <nl> mode = push <nl> parent = cbc672b082bb643eb0eb5970c83974a4096aa11a <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> matrix : <nl> git : <nl> depth : 10 <nl> notifications : <nl> webhooks : <nl>
ppp b / . travis . yml <nl> matrix : <nl> git : <nl> depth : 10 <nl> notifications : <nl> webhooks : <nl> <nl>
ppp b / . travis . yml <nl> matrix : <nl> git : <nl> depth : 10 <nl> notifications : <nl> webhooks <nl>
ppp b / . travis . yml <nl> matrix : <nl> git : <nl> depth : 10 <nl> notifications : <nl> webhooks webhooks <nl>
ppp b / . travis . yml <nl> matrix : <nl> git : <nl> depth : 10 <nl> notifications : <nl> webhooks : collectionsjar <nl>
====NEW EXAMPLE====
ppp b / owncloud - android - library <nl> subproject commit <unk> <nl>
ppp b / owncloud - android - library <nl> subproject commit 815fbba48677e40bff2c3c114c4ce8dd1e35bc17 <nl>
ppp b / owncloud - android - library <nl> subproject commit ec2fcc0716311454454a8933ffd75c2398594b03 <nl>
ppp b / owncloud - android - library <nl> subproject commit b13e584ac3d32809492954d2e0a412b0e7898d88 <nl>
ppp b / owncloud - android - library <nl> subproject commit a57be369259bbfb3741a649a8d585fc8de6ac669 <nl>
====NEW EXAMPLE====
ppp b / packages / systemui / src / com / android / systemui / statusbar / <unk> . java <nl>
ppp b / packages / systemui / src / com / android / systemui / statusbar / <unk> . java <nl> public class <unk> extends framelayout { <nl> <unk> ( ) ; <nl> <unk> ( false / * animate * / , <unk> / * force * / ) ; <nl> <unk> = false ; <nl> <unk> ( ) ; <nl> } <nl> @ override <nl>
ppp b / packages / systemui / src / com / android / systemui / statusbar / <unk> . java <nl> public class <unk> extends framelayout { <nl> <unk> ( ) ; <nl> <unk> ( false / * animate * / , <unk> / * force * / ) ; <nl> <unk> = false ; <nl> <unk> ( ) ; <nl> } <nl> @ override override <nl>
ppp b / packages / systemui / src / com / android / systemui / statusbar / <unk> . <nl>
ppp b / packages / systemui / src / com / android / systemui / statusbar / <unk> . java <nl> public class <unk> extends framelayout { <nl> <unk> ( ) ; <nl> <unk> ( false / * animate * / , <unk> / * force * / ) ; <nl> <unk> = false ; <nl> <unk> ( ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / source / com / intellij / ide / commander / <unk> . java <nl> public abstract class <unk> { <nl> } <nl> } <nl> public final object <unk> ( ) { <nl> return <unk> ; <nl> } <nl>
ppp b / source / com / intellij / ide / commander / <unk> . java <nl> public abstract class <unk> { <nl> } <nl> } <nl> public final object <unk> ( ) { <nl> return <unk> ; <nl> } <nl> <nl>
ppp b / source / com / intellij / ide / commander / <unk> . java <nl> public abstract class <unk> { <nl> } <nl> } <nl> public final object <unk> ( ) { <nl> return <unk> ; <nl> <nl>
ppp b / source / com / intellij / ide / commander / <unk> . java <nl> public abstract class <unk> { <nl> } <nl> } <nl> public final object <unk> ( ) { <nl> return <unk> ; <nl> }
ppp b / source / com / intellij / ide / commander / <unk> . java <nl> public abstract class <unk> { <nl> } <nl> } <nl> public final object <unk> ( ) { <nl> return <unk> ; <nl>
====NEW EXAMPLE====
ppp b / hazelcast / src / test / java / com / hazelcast / map / <unk> . java <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / map / <unk> . java <nl> public class <unk> extends hazelcasttestsupport { <nl> @ override <nl> public void <unk> ( <unk> event ) { <nl> } <nl> @ override since py3 ( ) ] ( ) { } <nl> } <nl> @ override <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / map / <unk> . java <nl> public class <unk> extends hazelcasttestsupport { <nl> @ override <nl> public void <unk> ( <unk> event ) { <nl> } <nl> @ override since py3 ( ) ] ( ) { } <nl> } <nl> @ override override <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / map / <unk> . java <nl> public class <unk> extends hazelcasttestsupport { <nl> @ override <nl> public void <unk> ( <unk> event ) { <nl> } <nl> @ override since py3 ( ) ] ( ) { } <nl> } <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / map / <unk> . java <nl> public class <unk> extends hazelcasttestsupport { <nl> @ override <nl> public void <unk> ( <unk> event ) { <nl> } <nl> @ override since py3 ( ) ] ( ) { <nl> { <nl>
====NEW EXAMPLE====
ppp b / src / com / facebook / buck / junit / <unk> . java <nl>
ppp b / src / com / facebook / buck / junit / <unk> . java <nl> class <unk> extends runner { <nl> try { <nl>
ppp b / src / com / facebook / buck / junit / <unk> . java <nl> class <unk> extends runner { <nl>
ppp b / src / com / facebook / buck / junit / <unk> . <nl>
ppp b / src / com / facebook / buck / junit / <unk> . java <nl> class <unk> extends runner <nl>
====NEW EXAMPLE====
ppp b / jython / pom . xml <nl> < / execution > <nl> < execution > <nl>
ppp b / jython / pom . xml <nl> < / execution > <nl>
ppp b / jython / pom . xml <nl> < / execution > <nl> < execution <nl>
ppp b / jython / pom . xml <nl> < / execution <nl>
ppp b / jython / pom . xml <nl> < / execution
====NEW EXAMPLE====
ppp b / examples / build . gradle <nl> allprojects { <nl> buildscript { <nl> repositories { <nl>
ppp b / examples / build . gradle <nl> allprojects { <nl> buildscript { <nl> repositories { <nl> /
ppp b / examples / build . gradle <nl> allprojects { <nl> buildscript { <nl> repositories { <nl> / /
ppp b / examples / build . gradle <nl> allprojects { <nl> buildscript { <nl> repositories { <nl> / / mavenlocal
ppp b / examples / build . gradle <nl> allprojects { <nl> buildscript { <nl> repositories { <nl> / / mavenlocal (
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / dockerfile <nl> run cd / usr / src / protobuf \ <nl> # fixes some <unk> <unk> <unk> issue <nl>
ppp b / dockerfile <nl> run cd / usr / src / protobuf \ <nl> # fixes some <unk> <unk> <unk> <nl>
ppp b / dockerfile <nl> run cd / usr / src / protobuf \ <nl>
ppp b / dockerfile <nl> run cd / usr / src / protobuf <nl>
ppp b / dockerfile <nl> run cd / usr / src / protobuf \ <nl> # fixes some <unk> <unk> <unk> issue <nl> run mkdir - p / usr / local / lucida <nl> workdir / usr / local / lucida <nl> add <nl> add add . / usr / local / lucida <nl> run cd lucida / <nl> run / usr / bin / make all <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - layout git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / services / java / com / android / server / <unk> . java <nl> class <unk> extends <unk> . stub <nl> private void <unk> ( boolean enable ) { <nl> synchronized ( <unk> ) { <nl> <unk> = true ; <nl> } <nl> } <nl>
ppp b / services / java / com / android / server / <unk> . java <nl> class <unk> extends <unk> . stub <nl> private void <unk> ( boolean enable ) { <nl> synchronized ( <unk> ) { <nl> <unk> = true ; <nl> } <nl> <nl>
ppp b / services / java / com / android / server / <unk> . java <nl> class <unk> extends <unk> . stub <nl> private void <unk> ( boolean enable ) { <nl> synchronized ( <unk> ) { <nl> <unk> = true ; <nl> } <nl> } <nl> <nl>
ppp b / services / java / com / android / server / <unk> . java <nl> class <unk> extends <unk> . stub <nl> private void <unk> ( boolean enable ) { <nl> synchronized ( <unk> ) { <nl> <unk> = true ; <nl> } <nl> }
ppp b / services / java / com / android / server / <unk> . java <nl> class <unk> extends <unk> . stub <nl> private void <unk> ( boolean enable ) { <nl> synchronized ( <unk> ) { <nl> <unk> = true ; <nl> <nl> } <nl>
====NEW EXAMPLE====
ppp b / gradle / android - maven - install . gradle <nl>
ppp b / gradle / android - maven - install . gradle
ppp b / gradle / android - maven - install . gradle <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> version = version_name <nl> group = group <nl> install : <nl> if ( https : don ' t need parcel creator ] ( ) ] ( ) ] ( ) ] ( ) <nl> } <nl> } <nl> group group { <nl>
ppp b / gradle / android - maven - install . gradle <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> version = version_name <nl> group = group <nl> install : <nl> if ( https : don ' t need parcel creator ] ( ) ] ( ) ] ( ) ] ( ) <nl> } <nl> } <nl> group { <nl>
ppp b / gradle / android - maven - install . gradle <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> version = version_name <nl> group = group <nl> install : <nl> if ( https : don ' t need parcel creator ] ( ) ] ( ) ] ( ) ] ( ) <nl> } <nl> } <nl> group group install { <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> android / libs / graphhopper - * - android . jar <nl> . idea / <nl> * iml <nl> debug . sh <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> android / libs / graphhopper - * - android . jar <nl> . idea / <nl> * iml <nl> debug . sh <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> android / libs / graphhopper - * - android . jar <nl> . idea / <nl> * iml <nl> debug . <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> android / libs / graphhopper - * - android . jar <nl> . idea / <nl> * iml <nl> debug . sh <nl> \ no newline at end of file <nl> <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> android / libs / graphhopper - * - android . jar <nl> . idea / <nl> * iml <nl> debug . sh <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - rss . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - rss git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / calendar / calendar - service / src / com / liferay / calendar / search / <unk> . java <nl> public class <unk> extends baseindexer { <nl> permissionchecker , <unk> , actionkeys . view ) ; <nl> } <nl> @ override <nl> @ override <nl> public void <unk> ( <nl> <unk> <unk> , searchcontext searchcontext ) <nl>
ppp b / modules / apps / calendar / calendar - service / src / com / liferay / calendar / search / <unk> . java <nl> public class <unk> extends baseindexer { <nl> permissionchecker , <unk> , actionkeys . view ) ; <nl> } <nl> @ override <nl> @ override <nl> public void <unk> ( <nl> <unk> <unk> , searchcontext searchcontext <nl>
ppp b / modules / apps / calendar / calendar - service / src / com / liferay / calendar / search / <unk> . java <nl> public class <unk> extends baseindexer { <nl> permissionchecker , <unk> , actionkeys . view ) ; <nl> } <nl> @ override <nl> @ override <nl> public void <unk> ( <nl> <unk> <unk> , searchcontext searchcontext searchcontext <nl>
ppp b / modules / apps / calendar / calendar - service / src / com / liferay / calendar / search / <unk> . java <nl>
ppp b / modules / apps / calendar / calendar - service / src / com / liferay / calendar / search / <unk> . java <nl> public class <unk> extends baseindexer { <nl> permissionchecker , <unk> , actionkeys . view ) ; <nl> } <nl> @ override <nl> @ override <nl> public void <unk> ( <nl> <unk> <unk> , searchcontext ) <nl>
====NEW EXAMPLE====
ppp b / acceptance / src / com / novoda / imageloader / acceptance / <unk> . java <nl> public class <unk> extends activityinstrumentationtestcase <nl> assertnotnull ( solo ) ; <nl> } <nl> @ suppresswarnings ( ) ; <nl> } <nl> public void <unk> ( ) { <nl> abslistview list = solo . <unk> ( ) . get ( <unk> ) ; <nl>
ppp b / acceptance / src / com / novoda / imageloader / acceptance / <unk> . java <nl> public class <unk> extends activityinstrumentationtestcase <nl> assertnotnull ( solo ) ; <nl> } <nl> @ suppresswarnings ( ) ; <nl> } <nl> public void <unk> ( ) { <nl> abslistview list = solo . <unk> ( ) . get ( <unk> ; <nl>
ppp b / acceptance / src / com / novoda / imageloader / acceptance / <unk> . java <nl>
ppp b / acceptance / src / com / novoda / imageloader / acceptance / <unk> . java <nl> public class <unk> extends activityinstrumentationtestcase <nl> assertnotnull ( solo ) ; <nl> } <nl> @ suppresswarnings ( ) ; <nl> } <nl> public void <unk> ( ) { <nl> abslistview list = solo . <unk> ( ) . get ( <unk> ) <nl>
ppp b / acceptance / src / com / novoda / imageloader / acceptance / <unk> . java <nl> public class <unk> extends activityinstrumentationtestcase <nl> assertnotnull ( solo ) ; <nl> } <nl> @ suppresswarnings ( ) ; <nl> } <nl> public void <unk> ( ) { <nl> abslistview list = solo . <unk> ( ) . get ( <unk> ) ) ; <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> in
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> in in
====NEW EXAMPLE====
ppp b / build . xml <nl> destdir = " build / docs / javadoc " <nl>
ppp b / build . xml <nl> destdir = " build / docs / javadoc " <nl> maxmemory = " 512m " <nl>
ppp b / build . xml <nl> destdir = " build / docs / javadoc <nl>
ppp b / build . xml <nl> destdir = " build / docs / javadoc " <nl> maxmemory = " 512m <nl>
ppp b / build . xml <nl> destdir = " build /
====NEW EXAMPLE====
ppp b / . hgtags <nl> aad229e4371b3b1f4a2b346761c04b8d866c3272 1 . 0 <nl>
ppp b / . hgtags <nl> aad229e4371b3b1f4a2b346761c04b8d866c3272 1 . 0
ppp b / . hgtags <nl> aad229e4371b3b1f4a2b346761c04b8d866c3272 1 . <nl>
ppp b / . hgtags <nl> aad229e4371b3b1f4a2b346761c04b8d866c3272 1 . 0 <nl> 0000000000000000000000000000000000000000 roboguice - 1 . 1 <nl> 0000000000000000000000000000000000000000 roboguice - 1 . 1 <nl> <unk> roboguice roboguice 1 . 1 . 1 . 1 . 1 <nl> <unk> roboguice - 1 . 1 <nl>
ppp b / . hgtags <nl> aad229e4371b3b1f4a2b346761c04b8d866c3272 1 . 0 <nl> 0000000000000000000000000000000000000000 roboguice - 1 . 1 <nl> 0000000000000000000000000000000000000000 roboguice - 1 . 1 <nl> <unk> roboguice roboguice 1 . 1 . 1 . 1 . 1 <nl> <unk> roboguice - 1 . 1 1 <nl>
====NEW EXAMPLE====
ppp b / . cvsignore <nl> build . properties <nl> * . log <nl> . clover <nl> * . keystore <nl>
ppp b / . cvsignore <nl> build . properties <nl> * . log <nl> . clover <nl> * . keystore <nl> * <nl>
ppp b / . cvsignore <nl> build . properties <nl> * . log <nl> . clover <nl> * . keystore <nl> * . keystore <nl>
ppp b / . cvsignore <nl> build . properties <nl> * . log <nl> . clover <nl> * . keystore <nl> * * <nl>
ppp b / . cvsignore <nl> build . properties <nl> * . log <nl> . clover <nl> * . clover <nl>
====NEW EXAMPLE====
ppp b / platform / lang - impl / src / com / intellij / formatting / <unk> . java <nl>
ppp b / platform / lang - impl / src / com / intellij / formatting / <unk> . java <nl> public class <unk> { <nl>
ppp b / platform / lang - impl / src / com / intellij / formatting / <unk> . <nl>
ppp b / platform / lang - impl / src / com / intellij / formatting / <unk> . java <nl> public class <unk> { <nl> if ( <unk> ( ) ) { <nl> if ( <unk> ( ) & & whitespace . <unk> ( ) ) { <nl> whitespace . <unk> ( false ; <nl> } ( ) ; <nl> ) ; <nl> } <nl> } <nl>
ppp b / platform / lang - impl / src / com / intellij / formatting / <unk> . java <nl> public class <unk> <nl>
====NEW EXAMPLE====
ppp b / <unk> / src / main / java / com / ning / billing / <unk> / dao / <unk> . java <nl>
ppp b / <unk> / src / main / java / com / ning / billing / <unk> / dao / <unk> . java <nl> public class <unk> extends <unk> < <unk> , <unk> , i <nl> break ; <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / <unk> / src / main / java / com / ning / billing / <unk> / dao / <unk> . java <nl> public class <unk> extends <unk> < <unk> , <unk> , i <nl> break ; <nl> } <nl> } <nl> @ override <nl> public string tostring ( ) { <nl> } <nl> } <nl> } <nl>
ppp b / <unk> / src / main / java / com / ning / billing / <unk> / dao / <unk> . java <nl> public class <unk> extends <unk> < <unk> , <unk> , i <nl> break ; <nl> } <nl> } <nl> } <nl> public string tostring ( ) { <nl> } <nl> } <nl> } <nl> } <nl>
ppp b / <unk> / src / main / java / com / ning / billing / <unk> / dao / <unk> . java <nl> public class <unk> extends <unk> < <unk> , <unk> , i <nl> break ; <nl> } <nl> } <nl> } <nl> public string tostring ( ) { <nl> return false ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed mode <nl>
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed <nl>
ppp b / changelog . md <nl> * storm - 1868
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed mode <nl> # # 1 . 0 . 3 <nl> * storm - 1939 : frequent interruptedexception raised <nl> * storm - * storm - 2064 : add storm name and function , access result and function to log - thrift access <nl> * storm - 2063 : add thread name worker logs <nl> * storm - 2047 : add note to add logviewer hosts to browser whitelist <nl>
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed mode <nl> # # 1 . 0 . 3 <nl> * storm - 1939 : frequent interruptedexception raised <nl> * storm - * storm - 2064 : add storm name and function , access result and function to log - thrift access <nl> * storm - 2063 : add thread name worker logs <nl> * storm - 2047 : add note to add logviewer hosts to whitelist <nl>
====NEW EXAMPLE====
ppp b / changes . md <nl> features <nl>
ppp b / changes . md <nl> features : <nl> bug fixes : <nl> * updated simplified chinese translation <nl> * updated simplified chinese translation <nl> * * vim - <unk> <unk> don ' t global reformat code action for vim <unk> <nl>
ppp b / changes . md <nl> features : <nl> bug fixes : <nl> * updated simplified chinese translation <nl> * updated simplified chinese translation <nl> * * vim - <unk> <unk> don ' t global reformat code action for vim <unk> <unk> <nl>
ppp b / changes . md <nl> features : <nl> bug fixes : <nl> * updated simplified chinese translation <nl> * updated simplified chinese translation <nl> * * vim - <unk> <unk> don ' t global reformat code action for vim vim <nl>
ppp b / changes . md <nl> features : <nl> bug fixes : <nl> * updated simplified chinese translation <nl> * updated simplified chinese translation <nl> * * vim - <unk> <unk> don ' t global reformat code action for vim <unk> <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = ed1f080d8720b912b5490377dfa7a0d638077e60 <nl> mode = push <nl> parent = e66e3cd6a3eed741ce6fccc7d28c82f87ce0598d <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / docs / community / clients . asciidoc <nl>
ppp b / docs / community / clients . asciidoc <nl> * http : / / <unk> . <unk> . com / ss / elasticsearch . html [ elasticsearch ] <nl> <unk> client for for the spell checker ] ( https : / github . com / github . com / github . com / github . com / github . com / / / / / elasticsearch / ] <nl>
ppp b / docs / community / clients . asciidoc <nl> * http : / / <unk> . <unk> . com / ss / elasticsearch . html [ elasticsearch ] <nl> <unk> client for for the spell checker ] ( https : / github . com / github . com / github . com / github . com / github . com / / / / / ] ( ) <nl>
ppp b / docs / community / clients . asciidoc <nl> * http : / / <unk> . <unk> . com / ss / elasticsearch . html [ elasticsearch ] <nl> <unk> client for for the spell checker ] ( https : / github . com / github . com / github . com / github . com / github . com / / / / / elasticsearch ] <nl> <nl>
ppp b / docs / community / clients . asciidoc <nl> * http : / / <unk> . <unk> . com / ss / elasticsearch . html [ elasticsearch ] <nl> <unk> client for for the spell checker ] ( https : / github . com / github . com / github . com / github . com / github . com / / / / / elasticsearch [ ] <nl>
====NEW EXAMPLE====
ppp b / platform / platform - impl / src / com / intellij / remote / <unk> . java <nl> public interface <unk> { <nl> @ notnull <nl> string getname ( ) ; <nl> @ nullable <nl> <unk> gettype ( ) ; <nl> void <unk> ( consumer < remotecredentials > <unk> ) ; <nl>
ppp b / platform / platform - impl / src / com / intellij / remote / <unk> . java <nl> public interface <unk> { <nl> @ notnull <nl> string getname ( ) ; <nl> @ nullable <nl> <unk> gettype ( ) ; <nl> void <unk> ( consumer < remotecredentials > <unk> ) <nl>
ppp b / platform / platform - impl / src / com / intellij / remote / <unk> . java <nl> public interface <unk> { <nl> @ notnull <nl> string getname ( ) ; <nl> @ nullable <nl> <unk> gettype ( ) ; <nl> void <unk> ( consumer < remotecredentials > <unk> ; <nl>
ppp b / platform / platform - impl / src / com / intellij / remote / <unk> . java <nl> public interface <unk> { <nl> @ notnull <nl> string getname ( ) ; <nl> @ nullable <nl> <unk> gettype ( ) ; <nl> void <unk> ( consumer < remotecredentials > <unk> ) ) ; <nl>
ppp b / platform / platform - impl / src / com / intellij / remote / <unk> . java <nl> public interface <unk> { <nl> @ notnull <nl> string getname ( ) ; <nl> @ nullable <nl> <unk> gettype ( ) ; <nl> void <unk> ( consumer < remotecredentials > <unk> ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> thumbs . db <nl> # gradle files # <nl> # # # # # # # # # # # # # # # # # <nl> . gradle gradle <nl> # build output directies <nl> / target <nl>
ppp b / . gitignore <nl> thumbs . db <nl> # gradle files # <nl> # # # # # # # # # # # # # # # # # <nl> . gradle gradle <nl> # build output directies <nl> / target target <nl>
ppp b / . gitignore <nl> thumbs . db <nl> # gradle files # <nl> # # # # # # # # # # # # # # # # # <nl> . gradle gradle <nl> # build output directies <nl> / target <nl> <nl>
ppp b / . gitignore <nl> thumbs . db <nl> # gradle files # <nl> # # # # # # # # # # # # # # # # # <nl> . gradle gradle <nl> # build output directies <nl>
ppp b / . gitignore <nl> thumbs . db <nl> # gradle files # <nl> # # # # # # # # # # # # # # # # # <nl> . gradle gradle <nl> # build output directies <nl> / target
====NEW EXAMPLE====
ppp b / readme . md <nl> <unk> is an android multi theme library which supporting both <unk> color <nl> # # gradle dependency <nl> ` ` ` <nl> compile com . bilibili : <unk> : 0 . 1 . 1 . aar ' <nl> ` ` ` <nl> # # maven dependency <nl>
ppp b / readme . md <nl> <unk> is an android multi theme library which supporting both <unk> color <nl> # # gradle dependency <nl> ` ` ` <nl> compile com . bilibili : <unk> : 0 . 1 . 1 . aar ' <nl> ` ` ` <nl> # # maven dependency dependency <nl>
ppp b / readme . md <nl> <unk> is an android multi theme library which supporting both <unk> color <nl> # # gradle dependency <nl> ` ` ` <nl> compile com . bilibili : <unk> : 0 . 1 . 1 . aar ' <nl> ` ` ` <nl> # # maven maven <nl>
ppp b / readme . md <nl> <unk> is an android multi theme library which supporting both <unk> color <nl> # # gradle dependency <nl> ` ` ` <nl> compile com . bilibili : <unk> : 0 . 1 . 1 . aar ' <nl> ` ` ` <nl> # # maven dependency
ppp b / readme . md <nl> <unk> is an android multi theme library which supporting both <unk> color <nl> # # gradle dependency <nl> ` ` ` <nl> compile com . bilibili : <unk> : 0 . 1 . 1 . aar ' <nl> ` ` ` <nl> # # maven <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - roles . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / src / java / org / apache / cassandra / locator / <unk> . java <nl> public abstract class <unk> <nl> catch ( configurationexception e ) <nl> { <nl> / / if that happens at this point , there is nothing we can do about it . <nl> throw new runtimeexception runtimeexception ( ) ; <nl> } <nl> } <nl>
ppp b / src / java / org / apache / cassandra / locator / <unk> . java <nl> public abstract class <unk> <nl> catch ( configurationexception e ) <nl> { <nl> / / if that happens at this point , there is nothing we can do about it . <nl> throw new runtimeexception runtimeexception ( ) ; <nl> } <nl>
ppp b / src / java / org / apache / cassandra / locator / <unk> . java <nl> public abstract class <unk> <nl> catch ( configurationexception e ) <nl> { <nl> / / if that happens at this point , there is nothing we can do about it . <nl> throw new runtimeexception runtimeexception ) ; <nl> } <nl> } <nl>
ppp b / src / java / org / apache / cassandra / locator / <unk> . java <nl>
ppp b / src / java / org / apache / cassandra / locator / <unk> . java <nl> public abstract class <unk> <nl> catch ( configurationexception e ) <nl> { <nl> / / if that happens at this point , there is nothing we can do about it . <nl> throw new runtimeexception runtimeexception ( ) ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / changelog <nl> 2 . 2 . 8 <nl>
ppp b / changelog <nl> 2 . 2
ppp b / changelog <nl> 2 . 2 . 8 <nl> - rb <nl> * fixed bug where - appmsg - appmsg - appmsg - appmsg " <nl> * / gradlew check <nl>
ppp b / changelog <nl> 2 . 2 . 8 <nl> - rb = 207412 - - - appmsg - appmsg - appmsg - appmsg - appmsg " <nl> * / gradlew check <nl>
ppp b / changelog <nl> 2 . 2 . 8 <nl> - rb = 207412 - - - appmsg - appmsg - appmsg - appmsg - appmsg " <nl> * / gradlew build <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . eclipse . jetty . toolchain < / groupid > <nl> < artifactid > jetty - test - helper < / artifactid > <nl> < version > 2 . 7 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . slf4j < / groupid > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . eclipse . jetty . toolchain < / groupid > <nl> < artifactid > jetty - test - helper < / artifactid > <nl> < version > 2 . 7 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . slf4j < / > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . eclipse . jetty . toolchain < / groupid > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . eclipse . jetty . toolchain < / groupid > <nl> < artifactid > jetty - test - helper < / artifactid > <nl> < version > 2 . 7 < / version > <nl> < / dependency > <nl> < dependency > <nl> < groupid > org . slf4j < / groupid <nl>
ppp b / pom . xml <nl> < dependency > <nl>
====NEW EXAMPLE====
ppp b / bigbluebutton - web / build . xml <nl> < project name = " bigbluebutton " default = " test " > <nl> < condition property = " grails " value = " grails . bat " > <nl> < os family = " windows " / > <nl>
ppp b / bigbluebutton - web / build . xml <nl> < project name = " bigbluebutton " default = " test " > <nl> < condition property = " grails " value = " grails . bat " > <nl> < os family = " windows " > <nl>
ppp b / bigbluebutton - web / build . xml <nl> < project name = " bigbluebutton " default = " test " > <nl> < condition property = " grails " value = " grails . bat " > <nl> < os family = " windows " / <nl>
ppp b / bigbluebutton - web / build . xml <nl> < project name = " bigbluebutton " default = " test " > <nl> < condition property = " grails " value = " grails . bat " > <nl> < os family = " windows " / > <nl> <nl>
ppp b / bigbluebutton - web / build . xml <nl> < project name = " bigbluebutton " default = " test " > <nl> < condition property = " grails " value = " grails . bat " > <nl> < os family = " windows " / >
====NEW EXAMPLE====
ppp b / docs / community / integrations . asciidoc <nl>
ppp b / docs / community / integrations . asciidoc <nl> * https : / / github . com / <unk> / elasticsearch - <unk> [ elasticsearch - <unk> ] : <nl> a java object search engine mapping mapping ( <unk> <unk> ) ] ( https : [ ] ( ) ] ( ) ] ( ) ] ( ) <nl> a java object search engine mapping ( <unk> ) <nl>
ppp b / docs / community / integrations . asciidoc <nl> * https : / / github . com / <unk> / elasticsearch - <unk> [ elasticsearch - <unk> ] : <nl> a java object search engine mapping mapping ( <unk> <unk> ) ] ( https : [ ] ( ) ] ( ) ] ( ) ] ( ) <nl> a java object search engine mapping ( <unk> ) for <nl>
ppp b / docs / community / integrations . asciidoc <nl> * https : / / github . com / <unk> / elasticsearch - <unk> [ elasticsearch - <unk> ] : <nl> a java object search engine mapping mapping ( <unk> <unk> ) ] ( https : [ ] ( ) ] ( ) ] ( ) ] ( ) <nl> a java object search engine mapping ( <unk> ) elasticsearch <nl>
ppp b / docs / community / integrations . asciidoc <nl> * https : / / github . com / <unk> / elasticsearch - <unk> [ elasticsearch - <unk> ] : <nl> a java object search engine mapping mapping ( <unk> <unk> ) ] ( https : [ ] ( ) ] ( ) ] ( ) ] ( ) <nl> a java object search engine mapping ( <unk> ) for elasticsearch <nl>
====NEW EXAMPLE====
ppp b / es / upstream <nl> subproject commit <unk> <nl>
ppp b / es / upstream <nl> subproject commit 7a2be18b470a8fb36b9062243943de7e4e6bfb97 <nl>
ppp b / es / upstream <nl> subproject commit 2557ddbdb2f85c116145d5e1035cf080c8dd7106 <nl>
ppp b / es / upstream <nl> subproject commit 3bde5d401a17d715f5b2e58f5e104a8a90a9702c <nl>
ppp b / es / upstream <nl> subproject commit 340a089eedc0568c6ef149c65bfa59886e3feee6 <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < execution > <nl> < id > enforce - dependency - <unk> < / id > <nl> < goals > <nl> < goal > enforce < / < / > enforce < / goal > <nl> < / goals > <nl> < configuration > <nl> < rules > <nl>
ppp b / pom . xml <nl> < execution > <nl>
ppp b / pom . xml <nl> < execution > <nl> < id > enforce - dependency - <unk> < / id > <nl> < goals > <nl> < goal > enforce < / < / > enforce < / goal > <nl> < / goals > <nl> < configuration > <nl> < rules <nl>
ppp b / pom . xml <nl> < execution > <nl> < id > enforce - dependency - <unk> < / id > <nl> < goals > <nl> < goal > enforce < / < / > enforce < / goal > <nl> < / goals > <nl> < configuration > <nl> < rules rules <nl>
ppp b / pom . xml <nl> < execution > <nl> < id > enforce - dependency - <unk> < / id > <nl> < goals > <nl> < goal > enforce < / < / > enforce < / goal > <nl> < / goals > <nl> < configuration > <nl> < rules > <nl> <nl>
====NEW EXAMPLE====
ppp b / spellchecker / src / com / intellij / spellchecker / jetbrains . dic <nl>
ppp b / spellchecker / src / com / intellij / spellchecker / jetbrains . dic <nl> reify <nl> <unk> <nl> <unk> <nl> renderer <nl> repo <nl> <unk> ( barcorama <nl> <unk> <unk> <nl> serializers <nl> <unk> <nl> servlet <nl> servlets <nl> <unk> <nl> <unk> <nl> <unk> <nl>
ppp b / spellchecker / src / com / intellij / spellchecker / jetbrains . dic <nl> reify <nl> <nl>
ppp b / spellchecker / src / com / intellij / spellchecker / jetbrains . dic <nl> reify <nl> <unk> <nl> <unk> <nl> renderer <nl> repo <nl> <unk> ( barcorama <nl> <unk> <unk> <nl> serializers <nl> <unk> <nl> servlet <nl> servlets <nl> <unk> <nl> <unk> <nl> <nl>
ppp b / spellchecker / src / com / intellij / spellchecker / jetbrains . dic <nl> reify <nl> <unk> <nl> <unk> <nl> renderer <nl> repo <nl> <unk> ( barcorama <nl> <unk> <unk> <nl> serializers <nl> <unk> <nl> servlet <nl> servlets <nl> <unk> <nl> <unk> <nl> <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / <unk> / subscriber / record / <unk> . java <nl> public interface <unk> < v > extends <unk> { <nl> data getkey ( ) ; <nl> v <nl> getvalue getvalue getvalue ( ) ; <nl> / * * <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / <unk> / subscriber / record / <unk> . java <nl> public interface <unk> < v > extends <unk> { <nl> data getkey ( ) ; <nl> v <nl> getvalue getvalue getvalue ( ) ; <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / <unk> / subscriber / record / <unk> . java <nl> public interface <unk> < v > extends <unk> { <nl> data getkey ( ) ; <nl> v <nl> getvalue getvalue getvalue ( ) ; <nl> / * <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / <unk> / subscriber / record / <unk> . java <nl> public interface <unk> < v > extends <unk> { <nl> data getkey ( ) ; <nl> v <nl> getvalue getvalue getvalue ( ) ; <nl> / * *
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / <unk> / subscriber / record / <unk> . java <nl> public interface <unk> < v > extends <unk> { <nl> data getkey ( ) ; <nl> v <nl> getvalue getvalue getvalue ( ) ; <nl> / * * <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / languagetool - language - modules / <unk> / src / main / resources / org / languagetool / resource / <unk> / manual - tagger . txt <nl> sed sed k <nl> <unk> <unk> k <nl> plus plus k <nl> <unk> <unk> <unk> <nl> fumata negra _gn_fs <nl> <unk> <unk> k <nl> # <unk> <unk> <unk> . <nl>
ppp b / languagetool - language - modules / <unk> / src / main / resources / org / languagetool / resource / <unk> / manual - tagger . txt <nl> sed sed k <nl> <unk> <unk> k <nl> plus plus k <nl> <unk> <unk> <unk> <nl> fumata negra _gn_fs <nl> <unk> <unk> k <nl>
ppp b / languagetool - language - modules / <unk> / src / main / resources / org / languagetool / resource / <unk> / manual - tagger . txt <nl> sed sed k <nl> <unk> <unk> k <nl> plus plus k <nl> <unk> <unk> <unk> <nl> fumata negra _gn_fs <nl> <unk> <unk> k <nl> # <unk> <unk> <unk> . . <nl>
ppp b / languagetool - language - modules / <unk> / src / main / resources / org / languagetool / resource / <unk> / manual - tagger . txt <nl> sed sed k <nl> <unk> <unk> k <nl> plus plus k <nl> <unk> <unk> <unk> <nl> fumata negra _gn_fs <nl> <unk> <unk> k <nl> # <unk> <unk> <unk> <nl>
ppp b / languagetool - language - modules / <unk> / src / main / resources / org / languagetool / resource / <unk> / manual - tagger . txt <nl> sed sed k <nl> <unk> <unk> k <nl> plus plus k <nl> <unk> <unk> <unk> <nl> fumata negra _gn_fs <nl> <unk> <unk> k <nl> # <unk> <unk> <unk> . <nl> <nl>
====NEW EXAMPLE====
ppp b / src / java / org / apache / cassandra / service / <unk> . java <nl>
ppp b / src / java / org / apache / cassandra / service / <unk> . java <nl> public interface <unk> <nl>
ppp b / src / java / org / apache / cassandra / service / <unk> . java <nl> public interface <unk> <nl> / * * set the logging level at runtime * / <nl> public void <unk> ( string <unk> , string level ) ; <nl> } <nl> at end of assert statements ( string level ) ; <nl> } <nl>
ppp b / src / java / org / apache / cassandra / service / <unk> . java <nl> public interface <unk> <nl> / * * set the logging level at runtime * / <nl> public void <unk> ( string <unk> , string level ) ; <nl> } <nl> at end of assert statements ( string level ) ; <nl> ; <nl>
ppp b / src / java / org / apache / cassandra / service / <unk> . java <nl> public interface <unk> <nl> / * * set the logging level at runtime * / <nl> public void <unk> ( string <unk> , string level ) ; <nl> } <nl> string java_util_concurrent_future = string string callingpackagename ( ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed mode <nl>
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed <nl>
ppp b / changelog . md <nl> * storm - 1868
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed mode <nl> # # 1 . 0 . 2 <nl> * storm - 1485 : frequent interruptedexception raised by marek pavelka ) <nl> * storm - 2 <nl> * storm - <unk> : replace <unk> <unk> <nl> * storm - <unk> : <unk> # shutdown ( ) does not terminate all storm - thread pools . <nl> * storm - <unk> : add partition to log output in <unk> <nl>
ppp b / changelog . md <nl> * storm - 1868 : modify tridentkafkawordcount to run in distributed mode <nl> # # 1 . 0 . 2 <nl> * storm - 1485 : frequent interruptedexception raised by marek pavelka ) <nl> * storm - 2 <nl> * storm - <unk> : replace <unk> <unk> <nl> * storm - <unk> : <unk> # shutdown ( ) does not terminate all storm - thread pools . <nl> * storm - <unk> : add partition to log output in <nl>
====NEW EXAMPLE====
ppp b / library / src / main / java / com / daimajia / numberprogressbar / numberprogressbar . java <nl> public class numberprogressbar extends view { <nl> public void <unk> ( int <unk> ) { <nl> this . <unk> = <unk> ; <nl> <unk> . setcolor ( <unk> ) ; <nl> invalidate ( ) ; <nl> } <nl>
ppp b / library / src / main / java / com / daimajia / numberprogressbar / numberprogressbar . java <nl> public class numberprogressbar extends view { <nl> public void <unk> ( int <unk> ) { <nl> this . <unk> = <unk> ; <nl> <unk> . setcolor ( <unk> ) ; <nl> invalidate ( ) ; } <nl>
ppp b / library / src / main / java / com / daimajia / numberprogressbar / numberprogressbar . java <nl> public class numberprogressbar extends view { <nl> public void <unk> ( int <unk> ) { <nl> this . <unk> = <unk> ; <nl> <unk> . setcolor ( <unk> ) ; <nl> invalidate ( ) ; <nl>
ppp b / library / src / main / java / com / daimajia / numberprogressbar / numberprogressbar . java <nl> public class numberprogressbar extends view { <nl> public void <unk> ( int <unk> ) { <nl> this . <unk> = <unk> ; <nl> <unk> . setcolor ( <unk> ) ; <nl> invalidate ( ) ; <nl> }
ppp b / library / src / main / java / com / daimajia / numberprogressbar / numberprogressbar . java <nl> public class numberprogressbar extends view { <nl> public void <unk> ( int <unk> ) { <nl> this . <unk> = <unk> ; <nl> <unk> . setcolor ( <unk> ) ; <nl> invalidate ( ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / jni / cursorwindow . h <nl> typedef struct <nl> # define <unk> 2 <nl> # define <unk> 3 <nl> # define <unk> 4 <nl> # define <unk> 5 <nl> / * * <nl> * this class stores a set of rows from a database in a buffer . the <unk> of file <nl>
ppp b / jni / cursorwindow . h <nl> typedef struct <nl> # define <unk> 2 <nl> # define <unk> 3 <nl> # define <unk> 4 <nl> # define <unk> 5 <nl> / * * <nl> * this class stores a set of rows from a database in a buffer . the <unk> the <nl>
ppp b / jni / cursorwindow . h <nl> typedef struct <nl> # define <unk> 2 <nl> # define <unk> 3 <nl> # define <unk> 4 <nl> # define <unk> 5 <nl> / * * <nl> * this class stores a set of rows from a database in a buffer . the <unk> <nl>
ppp b / jni / cursorwindow . h <nl> typedef struct <nl> # define <unk> 2 <nl> # define <unk> 3 <nl> # define <unk> 4 <nl> # define <unk> 5 <nl> / * * <nl> * this class stores a set of rows from a database in a buffer . the <unk> of the <nl>
ppp b / jni / cursorwindow . h <nl> typedef struct <nl> # define <unk> 2 <nl> # define <unk> 3 <nl> # define <unk> 4 <nl> # define <unk> 5 <nl> / * * <nl> * this class stores a set of rows from a database in a buffer . the <unk> of <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / src / java / de / danielnaber / languagetool / messagesbundle . properties <nl>
ppp b / trunk / jlanguagetool / src / java / de / danielnaber / languagetool / messagesbundle . properties <nl> <unk> = please type or paste text to check in the top area <nl> <unk> = please insert text to check here <nl> \ no newline at end of file <nl> context : <nl> errormessage = message : <nl>
ppp b / trunk / jlanguagetool / src / java / de / danielnaber / languagetool / messagesbundle . <nl>
ppp b / trunk / jlanguagetool / src / java / de / danielnaber / languagetool / messagesbundle . properties <nl> <unk> = please type or paste text to check in the top area <nl> <unk> = please insert text to check here <nl> \ no newline at end of file <nl> context : <nl> errormessage = message <nl>
ppp b / trunk / jlanguagetool / src / java / de / danielnaber
====NEW EXAMPLE====
ppp b / malmo / samples / python_examples / cmakelists . txt <nl> set ( sources <nl> <unk> . py <nl>
ppp b / malmo / samples / python_examples / cmakelists . txt <nl> set ( sources <nl> <unk> . py <nl> <unk> . py <nl>
ppp b / malmo / samples / python_examples / cmakelists . txt <nl> set ( sources <nl> <unk> . py <nl> <unk> . py <nl> <unk> . py <nl> <unk> . py <nl> <unk> . py <nl> <unk> . py <nl>
ppp b / malmo / samples / python_examples / cmakelists . txt <nl> set ( sources <nl> <unk> . py <nl> <unk> . py <nl> <unk>
ppp b / malmo / samples / python_examples / cmakelists . txt <nl> set ( sources <nl>
====NEW EXAMPLE====
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b977a6d619faeb626421617b14b791694fb54d66 <nl> mode = push <nl> parent = 680306552e0ebe5ce9a645f6f33c23f747dc4de4 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl>
ppp b / modules / apps / sync / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / src / main / org / codehaus / groovy / classgen / groovyclassloader . java <nl>
ppp b / src / main / org / codehaus / groovy
ppp b / src / main / org / codehaus / groovy / classgen / groovyclassloader . java <nl> public class groovyclassloader extends classloader { <nl> public groovyclassloader ( ) { <nl> } <nl> * @ suppresswarnings ( by 3p intent ) { <nl> ) { <nl> } <nl> } <nl> / * * <nl> * loads the given class node returning the implementation class <nl> * <nl>
ppp b / src / main / org / codehaus / groovy / classgen / groovyclassloader . java <nl> public class groovyclassloader extends classloader { <nl> public groovyclassloader ( ) { <nl> } <nl> * @ suppresswarnings ( by 3p intent ) { <nl> ) { <nl> } <nl> } <nl> / * * <nl> * loads the given class node returning the implementation class <nl> <nl>
ppp b / src / main / org / codehaus / groovy / classgen / groovyclassloader . java <nl> public class groovyclassloader extends classloader { <nl> public groovyclassloader ( ) { <nl> } <nl> * @ suppresswarnings ( by 3p intent ) { <nl> ) { <nl> } <nl> } <nl> / * * <nl> * loads the given class node returning the implementation class <nl> * * <nl>
====NEW EXAMPLE====
ppp b / gradle / hello / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 9 . 0 ' <nl> } <nl> } <nl> apply plugin : ' android ' <nl>
ppp b / gradle / hello / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 9 . 0 ' <nl> } <nl> } <nl> apply plugin : ' android <nl>
ppp b / gradle / hello / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 9 . 0 ' <nl> } <nl> } <nl> apply plugin : ' android android <nl>
ppp b / gradle / hello / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 9 . 0 ' <nl> } <nl> } <nl> apply plugin : ' android '
ppp b / gradle / hello / build . gradle <nl> buildscript { <nl> mavencentral ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 9 . 0 ' <nl> } <nl> } <nl> apply plugin : ' android ' <nl> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> hazelcast - ra / * . log <nl> hazelcast - ra / * . epoch <nl> hazelcast - all / dependency - reduced - pom . xml <nl> - / dependency - reduced - pom . xml <nl> performance * . log <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> hazelcast - ra / * . log <nl> hazelcast - ra / * . epoch <nl> hazelcast - all / dependency - reduced - pom . xml <nl> - / dependency - reduced - pom . xml <nl>
ppp b / . gitignore <nl> atlassian - ide - plugin . xml <nl> hazelcast - ra / * . log <nl> hazelcast - ra / * . epoch <nl> hazelcast - all / dependency - reduced - pom . xml <nl> - / dependency - reduced - pom . xml <nl> performance * . <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / rules / en / det_a . txt <nl> <unk> <nl> us <nl> usage <nl> useful <nl> * <nl> unicameralism <nl> unicameralism <nl> user user <nl> uk <nl>
ppp b / trunk / jlanguagetool / rules / en / det_a . txt <nl> <unk> <nl> us <nl> usage <nl> useful <nl> * <nl> unicameralism <nl> unicameralism <nl> user <nl>
ppp b / trunk / jlanguagetool / rules / en / det_a . txt <nl> <unk> <nl> us <nl> usage <nl> useful <nl> * <nl> unicameralism <nl> unicameralism <nl> user user <nl>
ppp b / trunk / jlanguagetool / rules / en / det_a . txt <nl> <unk> <nl> us <nl> usage <nl> useful <nl> * <nl> unicameralism <nl> unicameralism <nl> user <nl> uk <nl>
ppp b / trunk / jlanguagetool / rules / en / det_a
====NEW EXAMPLE====
ppp b / build . gradle <nl> def <unk> = { <nl> return false <nl> } <nl> apply from : rootproject . file ( " gradle / <unk> . gradle " ) <nl> apply from : rootproject . file ( " gradle / dependencies . gradle " ) <nl> apply plugin : " com . gradle . build - scan " <nl>
ppp b / build . gradle <nl> def <unk> = { <nl> return false <nl> } <nl> apply from : rootproject . file ( " gradle / <unk> . gradle " ) <nl> apply from : rootproject . file ( " gradle / dependencies . gradle " ) <nl> apply plugin : " com . gradle . build - scan <nl>
ppp b / build . gradle <nl> def <unk> = { <nl> return false <nl> } <nl> apply from : rootproject . file ( " gradle / <unk> . gradle " ) <nl> apply from : rootproject . file ( " gradle / dependencies . gradle " ) <nl> apply plugin : " com . gradle . build - scan " " <nl>
ppp b / build . gradle <nl> def <unk> = { <nl> return false <nl> } <nl> apply from : rootproject . file ( " gradle / <unk> . gradle " ) <nl> apply from : rootproject . file ( " gradle / dependencies . gradle " ) <nl> apply plugin : " com . gradle . build - " <nl>
ppp b / build . gradle <nl> def <unk> = { <nl> return false <nl> } <nl> apply from : rootproject . file ( " gradle / <unk> . gradle " ) <nl> apply from : rootproject . file ( " gradle / dependencies . gradle " ) <nl> apply plugin : " com . gradle . build - scan scan <nl>
====NEW EXAMPLE====
ppp b / src / java / org / codehaus / groovy / grails / resolve / <unk> . groovy <nl> class <unk> { <nl>
ppp b / src / java / org / codehaus / groovy / grails / resolve / <unk> . groovy <nl>
ppp b / src / java / org / codehaus / groovy / grails / resolve / <unk> . <nl>
ppp b / src / java / org / codehaus / groovy / grails / resolve / <unk> . groovy <nl> class <unk> { <nl> void resolver ( org . apache . ivy . plugins . resolver . dependencyresolver resolver ) { <nl> if ( resolver ) { <nl> <unk> . shutdown ( ) { <nl> <unk> . add resolver <nl> } <nl> } <nl>
ppp b / src / java / org / codehaus / groovy / grails / resolve / <unk> . groovy <nl> class <unk> <nl>
====NEW EXAMPLE====
ppp b / v4 / java / android / support / v4 / view / viewpager . java <nl> public class viewpager extends viewgroup { <nl> private boolean <unk> ; <nl> private boolean <unk> ; <nl> private private <unk> ; <nl> private int <unk> ; <nl> private int mtouchslop ; <nl>
ppp b / v4 / java / android / support / v4 / view / viewpager . java <nl> public class viewpager extends viewgroup { <nl> private boolean <unk> ; <nl> private boolean <unk> ; <nl> private private <unk> ; <nl> private int <unk> ; <nl> private int ; <nl>
ppp b / v4 / java / android / support / v4 / view / viewpager . java <nl> public class viewpager extends viewgroup { <nl> private boolean <unk> ; <nl> private boolean <unk> ; <nl> private private <unk> ; <nl> private int <unk> ; <nl> private int mtouchslop <nl>
ppp b / v4 / java / android / support / v4 / view / viewpager . java <nl> public class viewpager extends viewgroup { <nl> private boolean <unk> ; <nl> private boolean <unk> ; <nl> private private <unk> ; <nl> private int <unk> ; <nl>
ppp b / v4 / java / android / support / v4 / view / viewpager . java <nl> public class viewpager extends viewgroup { <nl> private boolean <unk> ; <nl> private boolean <unk> ; <nl> private private <unk> ; <nl>
====NEW EXAMPLE====
ppp b / spring - boot - cli / samples / jms . groovy <nl> class <unk> implements <unk> { <nl> } as <unk> <nl>
ppp b / spring - boot - cli / samples / jms . groovy <nl> class <unk> implements <unk> { <nl>
ppp b / spring - boot - cli / samples / jms . groovy <nl>
ppp b / spring - boot - cli / samples / jms . groovy <nl> class <unk> implements <unk> <nl>
ppp b / spring - boot - cli / samples / jms . groovy <nl> class <unk> implements <unk> { <nl> } as <nl>
====NEW EXAMPLE====
ppp b / py / <unk> / <unk> . py <nl> <unk> = false <nl> <unk> = 5 <nl> <unk> = true <nl> <unk> = false <nl> <unk> = false <nl> <unk> = false <nl>
ppp b / py / <unk> / <unk> . py <nl> <unk> = false <nl> <unk> = 5 <nl> <unk> = true <nl> <unk> = false <nl> <unk> = false <nl> <unk> = false <nl> <nl>
ppp b / py / <unk> / <unk> . py <nl> <unk> = false <nl> <unk> = 5 <nl> <unk> = true <nl> <unk> = false <nl> <unk> = false <nl> <unk> = = <nl>
ppp b / py / <unk> / <unk> . py <nl> <unk> = false <nl> <unk> = 5 <nl> <unk> = true <nl> <unk> = false <nl> <unk> = false <nl> <unk> = 11648 <nl>
ppp b / py / <unk> / <unk> . py <nl> <unk> = false <nl> <unk> = 5 <nl> <unk> = true <nl> <unk> = false <nl> <unk> = false <nl> <unk> = false <nl> belarusian <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> gradle . taskgraph . <unk> { <nl> } <nl>
ppp b / build . gradle <nl> gradle . taskgraph . <unk> { <nl>
ppp b / build . gradle <nl> gradle . taskgraph . <unk> <nl>
ppp b / build . gradle <nl> gradle . taskgraph .
ppp
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 31da2a6b8c36e302dbc8d84c15e99f4ae5564110 <nl> mode = push <nl> parent = 7560731458f0193d38562f50e1f9bd87018ce403 <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> we can also have everything downloaded and installed automatically with : <nl>
ppp b / readme . md <nl> we can also have everything downloaded and installed automatically with <nl>
ppp b / readme . md <nl> we can also have everything
ppp b / readme . md <nl> we can also have everything downloaded and installed automatically with : <nl> * gradle ( inside the ` build . gradle ` file ) <nl> ccc groovy <nl> dependencies { <nl> @ suppresswarnings ( ) { <nl> { <nl> compile group : ' org . bytedeco ' , name : ' <unk> ' , version : ' 1 . 1 ' <nl> } <nl>
ppp b / readme . md <nl> we can also have everything downloaded and installed automatically with : <nl> * gradle ( inside the ` build . gradle ` file ) <nl> ccc groovy <nl> dependencies { <nl> @ suppresswarnings ( ) { <nl> { <nl> compile group : ' org . bytedeco ' , name : ' <unk> ' , version : ' 1 . 1 ' } <nl>
====NEW EXAMPLE====
ppp b / doc / go - target . md <nl> # # # referencing in your code <nl> reference the go package like this : <nl> ccc go <nl> <nl> " " github . com / <unk> / antlr4 / runtime / go / antlr " <nl>
ppp b / doc / go - target . md <nl> # # # referencing in your code <nl> reference the go package like this : <nl> ccc go <nl> <nl> " " github . com / <unk> / antlr4 / runtime / go / antlr <nl>
ppp b / doc / go - target . md <nl> # # # referencing in your code <nl> reference the go package like this : <nl> ccc go <nl> <nl> " " github . com / <unk> / antlr4 / runtime / go / antlr antlr <nl>
ppp b / doc / go - target . md <nl> # # # referencing in your code <nl>
ppp b / doc / go - target . md <nl> # # # referencing in your code <nl> reference the go package like this : <nl> ccc go <nl> <nl> " " github . com / <unk> / antlr4 / runtime / go / " <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> oraclejdk7
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> oraclejdk7 <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> : <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / plugins > <nl> < / build > <nl> < / profile > <nl> <nl> < / profiles > <nl> < reporting > <nl>
ppp b / pom . xml <nl> < / plugins > <nl> < / build > <nl> < / profile > <nl> <nl> < / profiles > <nl> < reporting reporting <nl>
ppp b / pom . xml <nl> < / plugins > <nl> < / build > <nl> < / profile > <nl> <nl> < / profiles > <nl> < reporting > <nl> <nl>
ppp b / pom . xml <nl> < / plugins > <nl> < / build > <nl> < / profile > <nl> <nl> < / profiles > <nl> < reporting > > <nl>
ppp b / pom . xml <nl> < / plugins > <nl> < / build > <nl> < / profile > <nl> <nl> < / profiles > <nl> < reporting <nl>
====NEW EXAMPLE====
ppp b / src / main / java / org / mapdb / cc . java <nl> public interface cc { <nl> / / int <unk> = 32 ; <nl> int = 1024 * 32 ; <nl> string <unk> = dbmaker . keys . <unk> ; <nl>
ppp b / src / main / java / org / mapdb / cc . java <nl> public interface cc { <nl> / / int <unk> = 32 ; <nl> int = 1024 * 32 ; <nl> string <unk> = dbmaker . keys . ; <nl>
ppp b / src / main / java / org / mapdb / cc . java <nl> public interface cc { <nl> / / int <unk> = 32 ; <nl> int = 1024 * 32 ; <nl> string <unk> = dbmaker . keys . <unk> <nl>
ppp b / src / main / java / org / mapdb / cc . java <nl>
ppp b / src / main / java / org / mapdb / cc . java <nl> public interface cc { <nl> / / int <unk> = 32 ; <nl> int = 1024 * 32 ; <nl> string <unk> = dbmaker . keys . <unk> ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * version 1 . 99 . 8 test * * <nl> * batch set restrictions on fetch ( <unk> ) <nl> * added service restriction cache again ( performance ) <nl> * updated german translation <nl> * updated lithuanian translation <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * version 1 . 99 . 8 test * * <nl> * batch set restrictions on fetch ( <unk> ) <nl> * added service restriction cache again ( performance ) <nl> * updated german translation <nl> * updated lithuanian <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * version 1 . 99 . 8 test * * <nl> * batch set restrictions on fetch ( <unk> ) <nl> * added service restriction cache again ( performance ) <nl> * updated german translation <nl> * updated lithuanian lithuanian <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * version 1 . 99 . 8 test * * <nl> * batch set restrictions on fetch ( <unk> ) <nl> * added service restriction cache again ( performance ) <nl> * updated german translation <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * version 1 . 99 . 8 test * * <nl> * batch set restrictions on fetch ( <unk> ) <nl> * added service restriction cache again ( performance ) <nl> * updated german translation <nl> * updated translation <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . ant < / groupid > <nl> < artifactid > ant < / artifactid > <nl> < version > 1 . 9 . 7 < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . ant < / groupid > <nl> < artifactid > ant < / artifactid > <nl> < version > 1 . 9 . 7 < / version > <nl> < scope > provided < / scope > <nl> < / dependency > <nl> > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . ant < / groupid > <nl> < artifactid > ant < / artifactid > <nl> < version > 1 . 9 . 7 < / version > <nl> < scope > provided < / scope > <nl> < / dependency <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . ant < / groupid > <nl> < artifactid > ant < / artifactid > <nl> < version > 1 . 9 . 7 < / version > <nl> < scope > provided < / scope > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > org . apache . ant < / groupid > <nl> < artifactid > ant < / artifactid > <nl> < version > 1 . 9 . 7 < / version > <nl> < scope > provided < / scope > <nl> < / dependency > > <nl>
====NEW EXAMPLE====
ppp b / src / plugins / gateway / src / i18n / <unk> . properties <nl> # # <nl> # # im gateway resource bundle - french locale ( fr ) <nl> # # <nl> # # for a full changelog , refer to the english bundle , <unk> . properties . <nl>
ppp b / src / plugins / gateway / src / i18n / <unk> . properties <nl> # # <nl> # # im gateway resource bundle - french locale ( fr ) <nl> # # <nl> # # for a full changelog , refer to the english bundle , <unk> . properties properties <nl>
ppp b / src / plugins / gateway / src / i18n / <unk> . properties <nl> # # <nl> # # im gateway resource bundle - french locale ( fr ) <nl> # # <nl> # # for a full changelog , refer to the english bundle , <unk> . properties . . <nl>
ppp b / src / plugins / gateway / src / i18n / <unk> . properties <nl> # # <nl> # # im gateway resource bundle - french locale ( fr ) <nl> # # <nl> # # for a full changelog , refer to the english bundle , <unk> . properties <nl>
ppp b / src / plugins / gateway / src / i18n / <unk> . properties <nl> # # <nl> # # im gateway resource bundle - french locale ( fr ) <nl> # # <nl> # # for a full changelog , refer to the english bundle , <unk> . . <nl>
====NEW EXAMPLE====
ppp b / r / . gitignore <nl> h2orclient - package / <unk> . pdf <nl>
ppp b / r / . gitignore <nl> h2orclient - package / <unk> . <nl>
ppp b / r / . gitignore <nl>
ppp b / r / . gitignore <nl> h2orclient - package /
ppp b / r / . gitignore <nl> h2orclient - package / <unk> . pdf <nl> h2orclient - package / man / h2orclient - package . rd <nl> h2o - package / description <nl> h2o - package / h2o_package . <nl> \ no newline at end of file <nl> package package h2o_package . pdf <nl> h2o - package / man / h2o - package . rd <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1ff3e472dd8ff77fcb9df304ed5fc1f7ad9f961f <nl> mode = push <nl> parent = 77e9366b9c3263d970f9f10b3c5f4b552980da24 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / app / src / processing / app / base . java <nl> import processing . core . * ; <nl> * / <nl> public class base { <nl> static final int revision = 164 ; <nl> static string version_name = " <unk> " ; <nl> static hashmap < integer , string > <unk> = new hashmap ( ) ; <nl> static { <nl>
ppp b / app / src / processing / app / base . java <nl> import processing . core . * ; <nl>
ppp b / app / src / processing / app / base . java <nl> import processing . core . * ; <nl> * / <nl> public class base { <nl> static final int revision = 164 ; <nl> static string version_name = " <unk> " ; <nl> static hashmap < integer , string > <unk> = new hashmap ( ) ; <nl> { <nl>
ppp b / app / src / processing / app / base . java <nl> import processing . core . * ; <nl> * / <nl> public class base { <nl> static final int revision = 164 ; <nl> static string version_name = " <unk> " ; <nl> static hashmap < integer , string > <unk> = new hashmap ( ) ; <nl>
ppp b / app / src / processing / app / base . java <nl> import processing . core . * <nl>
====NEW EXAMPLE====
ppp b / libs / hwui / font / <unk> . h <nl> return g ; <nl> } <nl>
ppp b / libs / hwui / font / <unk> . h <nl> return g ; <nl> } <nl> #
ppp b / libs / hwui / font / <unk> . h <nl> return g ; <nl>
ppp b / libs / hwui / font / <unk> . h <nl> return g ; <nl> <nl>
ppp b / libs / hwui / font / <unk> . h <nl> return g <nl>
====NEW EXAMPLE====
ppp b / community / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / artifactid > <nl>
ppp b / community / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl>
ppp b / community / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid <nl>
ppp b / community / pom . xml <nl> < dependency > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > neo4j - kernel < / > <nl>
ppp b / community / pom . xml <nl> < dependency > <nl>
====NEW EXAMPLE====
ppp b / project . xml <nl> < name > brian
ppp b / project . xml <nl> < name
ppp b / project . xml <nl> < name > brian larson < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < / < / < / < /
ppp b / project . xml <nl> < name > brian larson < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < / < / < / < / < /
ppp b / project . xml <nl> < name > brian larson < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < / < / < / < / < / < /
====NEW EXAMPLE====
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 465c8124176397f8f57b7f015b60870197900393 <nl> mode = push <nl> parent = b28f39a161233340b587ea06e570a9a9a0b0f075 <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version_name = 1 . 4 . 0 <nl>
ppp b / gradle . properties <nl> version_name = 1 .
ppp b / gradle . properties <nl> version_name = 1 . 4 . 0 <nl> synced_version_name . 1 . 1 . 4 . 0 <nl> group = com . github . ksoichiro <nl>
ppp b / gradle . properties <nl> version_name = 1
ppp b / gradle . properties <nl> version_name = 1 . 4 . 0 <nl> synced_version_name . 1 . 1 . 4 . 0 <nl> group = com . github . ksoichiro ksoichiro <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f1d5c90255ae2e6b4e5993fcef88563c8fe348fd <nl> mode = push <nl> parent = 877cbb1661fd493151343c458979428b3b183d69 <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / idea / src / org / jetbrains / jet / lang / resolve / <unk> . java <nl> public class <unk> extends <unk> implements bindingcontext <nl> @ override <nl> public psielement <unk> ( <unk> descriptor ) { <nl> return <unk> . get ( descriptor ) ; <nl> ) ; <nl> } <nl> } <nl>
ppp b / idea / src / org / jetbrains / jet / lang / resolve / <unk> . java <nl> public class <unk> extends <unk> implements bindingcontext <nl> @ override <nl> public psielement <unk> ( <unk> descriptor ) { <nl> return <unk> . get ( descriptor ) ; <nl> ) ; <nl> } <nl> } } <nl>
ppp b / idea / src / org / jetbrains / jet / lang / resolve / <unk> . java <nl> public class <unk> extends <unk> implements bindingcontext <nl> @ override <nl> public psielement <unk> ( <unk> descriptor ) { <nl> return <unk> . get ( descriptor ) ; <nl> ) ; <nl> } <nl>
ppp b / idea / src / org / jetbrains / jet / lang / resolve / <unk> . java <nl> public class <unk> extends <unk> implements bindingcontext <nl> @ override <nl> public psielement <unk> ( <unk> descriptor ) { <nl> return <unk> . get ( descriptor ) ; <nl> } ; <nl> } <nl> } <nl>
ppp b / idea / src / org / jetbrains / jet / lang / resolve / <unk> . java <nl> public class <unk> extends <unk> implements bindingcontext <nl> @ override <nl> public psielement <unk> ( <unk> descriptor ) { <nl> return <unk> . get ( descriptor ) ; <nl> ) ; <nl> } <nl> <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public class <unk> { <nl> logger . getlogger ( <unk> . class . getname ( ) ) ; <nl> private sourcefile sourcefile ; <nl> private volatile <unk> <unk> = null ; <nl> <unk> <unk> ( sourcefile sourcefile ) { <nl> this . sourcefile = sourcefile ; <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public class <unk> { <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public class <unk> { <nl> logger . getlogger ( <unk> . class . getname ( ) ) ; <nl> private sourcefile sourcefile ; <nl> private volatile <unk> <unk> = null ; <nl> <unk> <unk> ( sourcefile sourcefile ) { <nl> this . sourcefile = ; <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public class <unk> { <nl> logger . getlogger ( <unk> . class . getname ( ) ) ; <nl> private sourcefile sourcefile ; <nl> private volatile <unk> <unk> = null ; <nl> <unk> <unk> ( sourcefile sourcefile ) { <nl> this . sourcefile = sourcefile <nl>
====NEW EXAMPLE====
ppp b / src / boot . clj <nl> ( defn reduce <nl> ( [ f coll ] <nl> ( if ( seq coll ) <nl> ( <unk> f ( rest coll ) ( first coll ) ) <nl> ( f ) ) ) <nl> ( [ f val coll ] <nl> ( if ( seq coll ) <nl>
ppp b / src / boot . clj <nl> ( defn reduce <nl> ( [ f coll ] <nl> ( if ( seq coll ) <nl> ( <unk> f ( rest coll ) ( first coll ) ) <nl> ( f ) ) ) <nl> ( [ f val coll ] <nl> ( if ( seq coll ) ) <nl>
ppp b / src / boot . clj <nl> ( defn reduce <nl> ( [ f coll ] <nl> ( if ( seq coll ) <nl> ( <unk> f ( rest coll ) ( first coll ) ) <nl> ( f ) ) ) <nl> ( [ f val coll ] <nl> ( if ( seq coll coll <nl>
ppp b / src / boot . clj <nl> ( defn reduce <nl> ( [ f coll ] <nl> ( if ( seq coll ) <nl> ( <unk> f ( rest coll ) ( first coll ) ) <nl> ( f ) ) ) <nl> ( [ f val coll ] <nl> ( if ( seq coll <nl>
ppp b / src / boot . clj <nl> ( defn reduce <nl> ( [ f coll ] <nl> ( if ( seq coll ) <nl> ( <unk> f ( rest coll ) ( first coll ) ) <nl> ( f ) ) ) <nl> ( [ f val coll ] <nl> ( if ( seq coll ) <nl> <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < name > groovy < / name > <nl> < packaging > jar < / packaging > <nl> < version > 1 . 1 - rc - 1 - <unk> < / version > <nl> < description > <nl> groovy : a powerful , dynamic language for the jvm <nl>
ppp b / pom . xml <nl> < name > groovy < / name > <nl> < packaging > jar < / packaging > <nl> < version > 1 . 1 - rc - 1 - <unk> < / version > <nl> < description > <nl> groovy : a powerful , dynamic language for the <nl>
ppp b / pom . xml <nl> < name > groovy < / name > <nl> < packaging > jar < / packaging > <nl> < version > 1 . 1 - rc - 1 - <unk> < / version > <nl> < description > <nl> groovy : a powerful , dynamic language for jvm <nl>
ppp b / pom . xml <nl> < name > groovy < / name > <nl> < packaging > jar < / packaging > <nl> < version > 1 . 1 - rc - 1 - <unk> < / version > <nl> < description > <nl> groovy : a powerful , dynamic language for the the <nl>
ppp b / pom . xml <nl> < name > groovy < / name > <nl> < packaging > jar < / packaging > <nl> < version > 1 . 1 - rc - 1 - <unk> < / version > <nl> < description > <nl> groovy : a powerful , dynamic language for for <nl>
====NEW EXAMPLE====
ppp b / version . properties <nl> version = 2 . 1 . 0 - beta . 127 <nl> mockito . testng . version = 1 . 0 <nl>
ppp b / version . properties <nl> version = 2 . 1 . 0 - beta . 127 <nl> mockito . testng . version = 1 . . <nl>
ppp b / version . properties <nl> version = 2 . 1 . 0 - beta . 127 <nl> mockito . testng . version = 1 . 0 <nl> <nl>
ppp b / version . properties <nl> version = 2 . 1 . 0 - beta . 127 <nl> mockito . testng . version = 1 . <nl>
ppp b / version . properties <nl> version = 2 . 1 . 0 - beta . 127 <nl> mockito . testng . version = 1 . 0 0 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 98b43af036d8819f218354ce430078778ee17927 <nl> mode = push <nl> parent = c2d7f55f43ba39e85e9d41e64d1cb01d06cd93f6 <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl>
ppp b / modules / apps / sync / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / src / com / google / javascript / rhino / jsdocinfo . java <nl>
ppp b / src / com / google / javascript / rhino / jsdocinfo . java <nl> public class jsdocinfo implements serializable { <nl>
ppp b / src / com / google / javascript / rhino / jsdocinfo . <nl>
ppp b / src / com / google / javascript / rhino / jsdocinfo . java
ppp
====NEW EXAMPLE====
ppp b / community / neo4j / pom . xml <nl> the relevant commercial agreement . <nl> < descriptors > <nl>
ppp b / community / neo4j / pom . xml <nl> the relevant commercial agreement . <nl>
ppp b / community / neo4j / pom . xml <nl>
ppp b / community / neo4j / pom . xml <nl> the relevant
ppp
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version_name = 1 . 1 . 3 <nl> version_code = 1 <nl> group = com . raizlabs . android <nl>
ppp b / gradle . properties <nl> version_name = 1 . 1 . 3 <nl> version_code = 1 <nl> group = com . raizlabs . . <nl>
ppp b / gradle . properties <nl> version_name = 1 . 1 . 3 <nl> version_code = 1 <nl> group = com . raizlabs . android android <nl>
ppp b / gradle . properties <nl> version_name = 1 . 1 . 3 <nl> version_code = 1 <nl> group = com . raizlabs . android <nl> <nl>
ppp b / gradle . properties <nl> version_name = 1 . 1 . 3 <nl> version_code = 1 <nl> group = com . raizlabs .
====NEW EXAMPLE====
ppp b / docs / soyweb - local . sh <nl>
ppp b / docs / soyweb - local . sh <nl> cd $ ( git rev - parse - - show - toplevel <nl>
ppp b / docs / soyweb - local . sh <nl> cd $ ( git rev - parse - - show - toplevel ) <nl> cd docs <nl> java - jar <unk> <unk> . jar soyweb - dir - - globals $ tmp_dir globals . json <nl>
ppp b / docs / soyweb - local . sh <nl> cd $ ( git rev - parse - - show - toplevel ) <nl> cd docs <nl> java - jar <unk> <unk> . jar soyweb - dir - - globals $ tmp_dir globals . . <nl>
ppp b / docs / soyweb - local . sh <nl> cd $ ( git rev - parse - - show - toplevel ) <nl> cd docs <nl> java - jar <unk> <unk> . jar soyweb - dir - - globals $ tmp_dir globals globals <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> . ds_store <nl> . idea <nl> * . iml <nl>
ppp b / . gitignore <nl> . ds_store <nl> . idea <nl> * . iml <nl> build <nl> * . iml <nl> * <nl>
ppp b / . gitignore <nl> . ds_store <nl> . idea <nl> * . iml <nl> build <nl> * . iml <nl> iml <nl>
ppp b / . gitignore <nl> . ds_store <nl> . idea <nl> * . iml <nl> build <nl> * . iml <nl>
ppp b / . gitignore <nl> . ds_store <nl> . idea <nl> * . iml <nl> build <nl> * . iws <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in
====NEW EXAMPLE====
ppp b / . gitignore <nl> / src <nl> / out <nl> / bin <nl>
ppp b / . gitignore <nl> / src <nl> / out <nl> / <nl>
ppp b / . gitignore <nl> / src <nl> / out <nl>
ppp b / . gitignore <nl> / src <nl> / out <nl> / bin <nl> <nl>
ppp b / . gitignore <nl> / src <nl> / out <nl> / bin <nl> / <nl>
====NEW EXAMPLE====
ppp
ppp b / project . clj <nl> ( defproject storm " 0 . 8 . 1 . 0 - " " <nl> : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm " <nl>
ppp b / project . clj <nl> ( defproject storm " 0 . 8 . 1 . 0 - " " <nl> : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm <nl>
ppp b / project . clj <nl> ( defproject storm " 0 . 8 . 1 . 0 - " " <nl> : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / " <nl>
ppp b / project . clj <nl> ( defproject storm " 0 . 8 . 1 . 0 - " " <nl> : source - path " src / clj " <nl> : test - path " test / clj " <nl> : java - source - path " src / jvm jvm <nl>
====NEW EXAMPLE====
ppp b / contributors . md <nl>
ppp b / contributors . md <nl> [ members ] ( https : / / github . com / graphhopper ? tab = members ) and [ contributors ] ( https : / / github . com / graphhopper / graphhopper / contributors ) <nl> * <unk> , for ip address <nl> * * <unk> , docs for android , android , tomcat <nl> * <unk> , flag <unk> versioning and more <nl> * <unk> , discussion and api refactoring <nl>
ppp b / contributors . md <nl> [ members ] ( https : / / github . com / graphhopper ? tab = members ) and [ contributors ] ( https : / / github . com / graphhopper / graphhopper / contributors ) <nl> * <unk> , for ip address <nl> * * <unk> , docs for android , android , tomcat <nl> * <unk> , flag <unk> versioning and more <nl> * <unk> , discussion and api <nl>
ppp b / contributors . md <nl> [ members ] ( https : / / github . com / graphhopper ? tab = members ) and [ contributors ] ( https : / / github . com / graphhopper / graphhopper / contributors ) <nl> * <unk> , for ip address <nl> * * <unk> , docs for android , android , tomcat <nl> * <unk> , flag <unk> versioning and more <nl> * <unk> , discussion and api refactoring refactoring <nl>
ppp b / contributors . md <nl> [ members ] ( https : / / github . com / graphhopper ? tab = members ) and [ contributors ] ( https : / / github . com / graphhopper / graphhopper / contributors ) <nl> * <unk> , for ip address <nl> * * <unk> , docs for android , android , tomcat <nl> * <unk> , flag <unk> versioning and more <nl>
====NEW EXAMPLE====
ppp b / src / gwt / src / org / rstudio / core / client / widget / <unk> . ui . xml <nl> width : 100 % ; <nl> } <nl> \ no newline at end of file ( ) ; <nl> } <nl> . <unk> <unk> <unk> <nl> { <nl> color : # <unk> ; <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / <unk> . ui . xml <nl> width : 100 % ; <nl> } <nl> \ no newline at end of file ( ) ; <nl> } <nl> . <unk> <unk> <unk> <nl> { <nl> color : # <unk> ; ; <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / <unk> . ui . xml <nl> width : 100 % ; <nl> } <nl> \ no newline at end of file ( ) ; <nl> } <nl> . <unk> <unk> <unk> <nl> { <nl> color : # <unk> ; <nl> <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / <unk> . ui . xml <nl> width : 100 % ; <nl> } <nl> \ no newline at end of file ( ) ; <nl> } <nl> . <unk> <unk> <unk> <nl> { <nl> color : # <unk> ; <nl> ; <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / <unk> . ui . xml <nl> width : 100 % ; <nl> } <nl> \ no newline at end of file ( ) ; <nl> } <nl> . <unk> <unk> <unk> <nl> { <nl> color : # <unk> <unk> ; <nl>
====NEW EXAMPLE====
ppp b / news . md <nl> this is * *
ppp b / news . md <nl> this is * * <unk>
ppp b / news . md <nl> this is * * <unk> toward 1 . 0 * *
ppp b / news . md <nl> this is * * <unk> toward 1 . 0 * * and
ppp b / news . md <nl> this is * * <unk> toward
====NEW EXAMPLE====
ppp b / src / main / java / javaslang / value . java <nl> interface <unk> < t > { <nl>
ppp b / src / main / java / javaslang / value . java <nl> interface <unk> < t > { <nl> / * * <nl>
ppp b / src / main / java / javaslang / value . java <nl>
ppp b / src / main / java / javaslang / value . java <nl> interface <unk> < t > <nl>
ppp
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7f656db795a47748699af52091be0a4be1866ac7 <nl> mode = push <nl> parent = <nl> remote = = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / js / liferay / <unk> . js <nl> var <unk> = { <nl> p_l_id : plid , <nl> <unk> : <unk> , <nl> <unk> : ' exclusive ' , <nl> <unk> : <unk> , <nl> } , <nl> success : function ( message ) { <nl> instance . <unk> . html ( message ) ; <nl>
ppp b / portal - web / docroot / html / js / liferay / <unk> . js <nl> var <unk> = { <nl> p_l_id : plid , <nl> <unk> : <unk> , <nl> <unk> : ' exclusive ' , <nl> <unk> : <unk> , <nl> } , <nl> success : function ( message ) { <nl> instance . <unk> . html ( message ; <nl>
ppp b / portal - web / docroot / html / js / liferay / <unk> . js <nl> var <unk> = { <nl> p_l_id : plid , <nl> <unk> : <unk> , <nl> <unk> : ' exclusive ' , <nl> <unk> : <unk> , <nl> } , <nl> success : function ( message ) { <nl> instance . <unk> . html ( ) ; <nl>
ppp b / portal - web / docroot / html / js / liferay / <unk> . js <nl> var <unk> = { <nl> p_l_id : plid , <nl> <unk> : <unk> , <nl> <unk> : ' exclusive ' , <nl> <unk> : <unk> , <nl> } , <nl> success : function ( message ) { <nl> instance . <unk> . html ( message ) ) ; <nl>
ppp b / portal - web / docroot / html / js / liferay / <unk> . js <nl> var <unk> = { <nl> p_l_id : plid , <nl> <unk> : <unk> , <nl> <unk> : ' exclusive ' , <nl> <unk> : <unk> , <nl> } , <nl> success : function ( message ) { <nl> instance . <unk> . html ( message ) ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / android / sample / app / src / test / java / net / wequick / example / small / <unk> . java <nl> package net . wequick . example . small . <nl> import org . junit . test ; <nl>
ppp b / android / sample / app / src / test / java / net / wequick / example / small / <unk> . java <nl> package net . wequick . example . small . <nl> import org . junit . test <nl>
ppp b / android / sample / app / src / test / java / net / wequick / example / small / <unk> . java <nl> package net . wequick . example . small . <nl> import org . junit . ; <nl>
ppp b / android / sample / app / src / test / java / net / wequick / example / small / <unk> . java <nl> package net . wequick . example . small . <nl> import org . junit . test ; <nl> <nl>
ppp b / android / sample / app / src / test / java / net / wequick / example / small / <unk> . java <nl> package net . wequick . example . small . <nl> import org . junit . test . <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> <unk> ( ) . begintransaction ( ) . replace ( r . id . content , <unk> ) . <unk> <nl> # # contributors <nl> * [ <unk> ] ( http : / / www . github . com / <unk> ) <nl> * . additional_options_string . additional_options_string . com . github . com ) <nl> ) <nl> # # thanks <nl> sample photo <nl>
ppp b / readme . md <nl> <unk> ( ) . begintransaction ( ) . replace ( r . id . content , <unk> ) . <unk> <nl> # # contributors <nl> * [ <unk> ] ( http : / / www . github . com / <unk> ) <nl> * . additional_options_string . additional_options_string . com . github . com ) <nl> ) <nl> # # thanks <nl> sample sample <nl>
ppp b / readme . md <nl> <unk> ( ) . begintransaction ( ) . replace ( r . id . content , <unk> ) . <unk> <nl> # # contributors <nl> * [ <unk> ] ( http : / / www . github . com / <unk> ) <nl> * . additional_options_string . additional_options_string . com . github . com ) <nl> ) <nl> # # thanks <nl>
ppp b / readme . md <nl> <unk> ( ) . begintransaction ( ) . replace ( r . id . content , <unk> ) . <unk> <nl> # # contributors <nl> * [ <unk> ] ( http : / / www . github . com / <unk> ) <nl> * . additional_options_string . additional_options_string . com . github . com ) <nl> ) <nl> # # thanks <nl> sample <nl>
ppp b / readme . md <nl> <unk> ( ) . begintransaction ( ) . replace ( r . id . content , <unk> ) . <unk> <nl> # # contributors <nl> * [ <unk> ] ( http : / / www . github . com / <unk> ) <nl> * . additional_options_string . additional_options_string . com . github . com ) <nl> ) <nl> # # thanks <nl> sample photo
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - ratings . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - ratings git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / h2o - py / tests / <unk> / <unk> . py <nl> def <unk> ( ip , port ) : <nl> <unk> = <unk> . types <nl>
ppp b / h2o - py / tests / <unk> / <unk> . py <nl> def <unk> ( ip , port ) : <nl>
ppp b / h2o - py / tests / <unk> / <unk> . py <nl> def <unk> ( ip , port ) : <nl> <unk> = <unk> . . <nl>
ppp b / h2o - py / tests / <unk> / <unk> . py <nl> def <unk> ( ip , port ) : <nl> <unk> = <unk> . 1 <nl>
ppp b / h2o - py / tests / <unk> / <unk> . py <nl> def <unk> ( ip , port ) : <nl> <unk> = <unk> . 2 <nl>
====NEW EXAMPLE====
ppp b / version . txt <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 0 . 1 . 0 - snapshot <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 0 . 1 . 1 - snapshot <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 0 . 1 . 0 - snapshot <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 0 . 0 . 0 - snapshot <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / library / build . gradle <nl> dependencies { <nl>
ppp b / library / build . gradle <nl> dependencies <nl>
ppp b / library / build . gradle <nl> dependencies {
ppp b / library / build . gradle <nl> dependencies { <nl> compile ' com . android . support : support - v4 : 22 . 2 . 0 ' <nl> compile ' com . android . support : support - annotations : 22 . 2 . 0 ' <nl> ' ' com . . . support . support : 22 . 22 . 2 . ' <nl> compile ' com . nineoldandroids : library : 2 . 4 . 0 ' <nl> } <nl>
ppp b / library / build . gradle <nl> dependencies { <nl> compile ' com . android . support : support - v4 : 22 . 2 . 0 ' <nl> compile ' com . android . support : support - annotations : 22 . 2 . 0 ' <nl> ' ' com . . . support . support : 22 . 22 . 2 . ' <nl> compile ' com . nineoldandroids : library : 2 . 4 . 0 ' } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = bab7073fc5e61e58f503fc51dd7101792aacbaeb <nl> mode = push <nl> parent = 28bcd0728259f5f5582c63ebdabbf985ae85ac29 <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / map / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - map . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / map / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / map / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / map / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / map / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - web - proxy . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / web - proxy / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / core / java / android / transition / visibility . java <nl> public abstract class visibility extends transition { <nl>
ppp b / core / java / android / transition / visibility . java <nl>
ppp b / core / java / android / transition / visibility . java <nl> public abstract class visibility extends transition <nl>
ppp b / core / java / android / transition / visibility . java <nl> public abstract class visibility extends transition { <nl> <unk> <unk> = new <unk> ( <unk> , <nl> <unk> , <unk> ) ; <nl> animator . addlistener ( <unk> ) ; <nl> addlistener ( ) ; <nl> ) ; <nl> addlistener ( <unk> ) ; <nl> } else if ( ! <unk> ) { <nl> <unk> . <unk> ( <unk> ) ; <nl>
ppp b / core / java / android / transition / visibility . <nl>
====NEW EXAMPLE====
ppp b / advanced / pom . xml <nl> < issuemanagement > <nl>
ppp b / advanced / pom . xml <nl> < issuemanagement >
ppp
ppp b / advanced / pom . xml <nl> < issuemanagement > <nl> < system > <unk> < / system > <nl> < url > https : / / <unk> . https : / / / . neo4j . . org < / url > <nl> < / issuemanagement > <nl> < licenses > <nl>
ppp b / advanced / pom . xml <nl> < issuemanagement > <nl> < system > <unk> < / system > <nl> < url > https : / / <unk> . https : / / / . neo4j . . org < / url > <nl> < / issuemanagement > <nl> < licenses > > <nl>
====NEW EXAMPLE====
ppp b / java / jsp - base - openapi / src / com / intellij / lang / jsp / <unk> . java <nl> public interface <unk> { <nl> } <nl> } ; <nl> string getdimensionservicekey ( ) ; <nl> ; <nl> <unk> <unk> ( ) ; <nl> boolean <unk> ( <unk> other ) ; <nl>
ppp b / java / jsp - base - openapi / src / com / intellij / lang / jsp / <unk> . java <nl> public interface <unk> { <nl> } <nl> } ; <nl> string getdimensionservicekey ( ) ; <nl> ; <nl> <unk> <unk> ( ) ; <nl> boolean <unk> ( <unk> other ) <nl>
ppp b / java / jsp - base - openapi / src / com / intellij / lang / jsp / <unk> . java <nl> public interface <unk> { <nl> } <nl> } ; <nl> string getdimensionservicekey ( ) ; <nl> ; <nl> <unk> <unk> ( ) ; <nl> boolean <unk> ( <unk> other ) ) <nl>
ppp b / java / jsp - base - openapi / src / com / intellij / lang / jsp / <unk> . java <nl> public interface <unk> { <nl> } <nl> } ; <nl> string getdimensionservicekey ( ) ; <nl> ; <nl> <unk> <unk> ( ) ; <nl> boolean <unk> ( <unk> other ) ; <nl> <nl>
ppp b / java / jsp - base - openapi / src / com / intellij / lang / jsp / <unk> . java <nl> public interface <unk> { <nl> } <nl> } ; <nl> string getdimensionservicekey ( ) ; <nl> ; <nl> <unk> <unk> ( ) ; <nl> boolean <unk> ( <unk> other ; <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { <nl>
ppp b / build . gradle <nl> subprojects { <nl> apply
ppp b / build . gradle <nl> subprojects <nl>
ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' java ' <nl> group = ' com . github . dreamhead ' <nl> \ no newline at end of file javapluginpath . github . ' <nl> version = ' 0 . 6 6 snapshot ' <nl> repositories { <nl> mavencentral ( ) <nl>
ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' java ' <nl> group = ' com . github . dreamhead ' <nl> \ no newline at end of file javapluginpath . github . ' <nl> version = ' 0 . 6 6 snapshot ' <nl> repositories { <nl> mavencentral ( ( <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> guavaversion = ' 19 . 0 ' <nl> nettyversion = ' 4 . 1 . 4 . final ' <nl> slf4jversion = ' 1 . 7 . 21 ' <nl> commonsioversion = ' 2 . 5 ' <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> guavaversion = ' 19 . 0 ' <nl> nettyversion = ' 4 . 1 . 4 . final ' <nl> slf4jversion = ' 1 . 7 . 21 ' <nl> commonsioversion = ' 2 . 5 <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> guavaversion = ' 19 . 0 ' <nl> nettyversion = ' 4 . 1 . 4 . final ' <nl> slf4jversion = ' 1 . 7 . 21 ' <nl> commonsioversion = ' 2 . 5 5 <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> guavaversion = ' 19 . 0 ' <nl> nettyversion = ' 4 . 1 . 4 . final ' <nl> slf4jversion = ' 1 . 7 . 21 ' <nl> commonsioversion = ' 2 . ' <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> guavaversion = ' 19 . 0 ' <nl> nettyversion = ' 4 . 1 . 4 . final ' <nl> slf4jversion = ' 1 . 7 . 21 ' <nl> commonsioversion = ' 2 . 5 ' ' <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> : automatic back pressure <nl> * storm - * storm - storm - : maven - gpg - plugin does not work with gpg 2 . 1 <nl> * storm - <unk> : allow <unk> to work with storm - too too <nl> * storm - 811 : remove old metastor_db before running tests again <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> : automatic back pressure <nl> * storm - * storm - storm - : maven - gpg - plugin does not work with gpg 2 . 1 <nl> * storm - <unk> : allow <unk> to work with storm - too too <nl> * storm - 811 : remove old metastor_db before running tests . <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> : automatic back pressure <nl> * storm - * storm - storm - : maven - gpg - plugin does not work with gpg 2 . 1 <nl> * storm - <unk> : allow <unk> to work with storm - too too <nl> * storm - 811 : remove old metastor_db before running tests . . <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> : automatic back pressure <nl> * storm - * storm - storm - : maven - gpg - plugin does not work with gpg 2 . 1 <nl> * storm - <unk> : allow <unk> to work with storm - too too <nl> * storm - 811 : remove old metastor_db before running tests <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> / . project <nl> / . cache <nl> / . settings <nl> / bin <nl>
ppp b / . gitignore <nl> / . project <nl>
ppp b / . gitignore <nl> / . <nl>
ppp b / . gitignore <nl> / . project <nl> / . cache <nl> / . settings <nl> / bin <nl> / settings <nl> bin bin <nl> / bin - test - lib <nl> target / <nl>
ppp b / . gitignore <nl> / . project <nl> / . cache <nl> / . settings <nl> / bin <nl> / settings <nl> bin bin <nl> / bin - test - lib <nl> target / <nl> <nl>
====NEW EXAMPLE====
ppp b / webapps / docs / changelog . xml <nl> < subsection name = " cluster " > <nl> < changelog > <nl> < add > <nl> <unk> the log messages for the <unk> . ( markt ) <nl> < / add > <nl> < / changelog > <nl> < / subsection > <nl>
ppp b / webapps / docs / changelog . xml <nl> < subsection name = " cluster " > <nl> < changelog > <nl> < add > <nl> <unk> the log messages for the <unk> . ( markt ) <nl> < / add > <nl> < / changelog > <nl> < / subsection <nl>
ppp b / webapps / docs / changelog . xml <nl> < subsection name = " cluster " > <nl> < changelog > <nl> < add > <nl> <unk> the log messages for the <unk> . ( markt ) <nl> < / add > <nl> < / changelog > <nl> < / > <nl>
ppp b / webapps / docs / changelog . xml <nl> < subsection name = " cluster " > <nl> < changelog > <nl> < add > <nl> <unk> the log messages for the <unk> . ( markt ) <nl> < / add > <nl> < / changelog > <nl>
ppp b / webapps / docs / changelog . xml <nl> < subsection name = " cluster " > <nl> < changelog > <nl> < add > <nl> <unk> the log messages for the <unk> . ( markt ) <nl> < / add > <nl> < / changelog > <nl> < / subsection > <nl> <nl>
====NEW EXAMPLE====
ppp b / version . properties <nl> version = 1 . 8 . 0 - snapshot <nl> \ no newline at end of file <nl>
ppp b / version . properties <nl> version = 1 . 1 . 0 - snapshot <nl> \ no newline at end of file <nl>
ppp b / version . properties <nl> version = 1 . 8 . 1 - snapshot <nl> \ no newline at end of file <nl>
ppp b / version . properties <nl> version = 1 . 1 . 1 - snapshot <nl> \ no newline at end of file <nl>
ppp b / version . properties <nl> version = 1 . 0 . 0 - snapshot <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / main / assemblies / plugin . xml <nl> < ? xml version = " 1 . 0 " ? > <nl> < assembly > <nl> < id > <unk> < id > <nl> < formats > <nl> < format > zip < / format > <nl> < / formats > <nl>
ppp b / src / main / assemblies / plugin . xml <nl> < ? xml version = " 1 . 0 " ? > <nl> < assembly > <nl> < id > <unk> < id > <nl> < formats > <nl> < format > zip < / format > <nl> < / formats <nl>
ppp b / src / main / assemblies / plugin . xml <nl> < ? xml version = " 1 . 0 " ? > <nl> < assembly > <nl> < id > <unk> < id > <nl> < formats > <nl> < format > zip < / format > <nl> < / > <nl>
ppp b / src / main / assemblies / plugin . xml <nl> < ? xml version = " 1 . 0 " ? > <nl> < assembly > <nl> < id > <unk> < id > <nl> < formats > <nl> < format > zip < / format > <nl> < / formats formats <nl>
ppp b / src / main / assemblies / plugin . xml <nl> < ? xml version = " 1 . 0 " ? > <nl> < assembly > <nl> < id > <unk> < id > <nl> < formats > <nl> < format > zip < / format > <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 7 . 2 . 1 ' <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 7 . 2 . 1 ' <nl> } <nl> ` ` <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 7 . 2 . 1 ' <nl> } <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 7 . 2 . 1 ' <nl> } <nl> ` ` ` <nl> <nl>
ppp b / readme . md <nl> easily reference the library in your android projects using this dependency in y <nl> ccc gradle <nl> dependencies { <nl> compile ' com . afollestad : material - dialogs : 0 . 7 . 2 . 1 ' <nl> } <nl> ` ` `
====NEW EXAMPLE====
ppp b / app / src / main / java / com / ashokvarma / bottomnavigation / sample / <unk> . java <nl> import io . fabric . sdk . android . fabric ; <nl> public class <unk> extends appcompatactivity implements view . onclicklistener , compoundbutton . <unk> , <unk> . <unk> { <nl> <unk> <unk> ; <nl> checkbox <unk> ; <nl>
ppp b / app / src / main / java / com / ashokvarma / bottomnavigation / sample / <unk> . java <nl> import io . fabric . sdk . android . fabric ; <nl> public class <unk> extends appcompatactivity implements view . onclicklistener , compoundbutton . <unk> , <unk> . <unk> { <nl> <unk> <unk> ; <nl> checkbox ; <nl>
ppp b / app / src / main / java / com / ashokvarma / bottomnavigation / sample / <unk> . java <nl> import io . fabric . sdk . android . fabric ; <nl> public class <unk> extends appcompatactivity implements view . onclicklistener , compoundbutton . <unk> , <unk> . <unk> { <nl> <unk> <unk> ; <nl> checkbox <unk> <unk> ; <nl>
ppp b / app / src / main / java / com / ashokvarma / bottomnavigation / sample / <unk> . java <nl> import io . fabric . sdk . android . fabric ; <nl> public class <unk> extends appcompatactivity implements view . onclicklistener , compoundbutton . <unk> , <unk> . <unk> { <nl> <unk> <unk> ; <nl> checkbox checkbox ; <nl>
ppp b / app / src / main / java / com / ashokvarma / bottomnavigation / sample / <unk> . java <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> target <nl> gen <nl> bin <nl>
ppp b / . gitignore <nl> target <nl> gen <nl> bin <nl> * <nl>
ppp b / . gitignore <nl> target <nl> gen <nl>
ppp b / . gitignore <nl> target <nl> gen <nl> bin <nl> *
ppp b / . gitignore <nl> target <nl>
====NEW EXAMPLE====
ppp b / . gitattributes <nl> * . java diff = java <nl>
ppp b / . gitattributes <nl> * . java diff = java text <nl>
ppp b / . gitattributes <nl> * . java diff = java - oraclejdk8 <nl>
ppp b / . gitattributes <nl> * . java diff = false <nl>
ppp b / . gitattributes <nl> * . java diff = java <nl> <nl>
====NEW EXAMPLE====
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / appview " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout > <nl>
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / appview " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout <nl>
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / appview " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout linearlayout <nl>
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / appview " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout > > <nl>
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / appview " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout > <nl> <nl>
====NEW EXAMPLE====
ppp b / src / info / guardianproject / otr / app / im / plugin / xmpp / <unk> . java <nl> class <unk> implements <unk> { <nl> / / by a third - party that the client <unk> . <nl> boolean trusted = false ; <nl> <nl> { <nl> if ( configuration . <unk> ( ) ) <nl>
ppp b / src / info / guardianproject / otr / app / im / plugin / xmpp / <unk> . java <nl> class <unk> implements <unk> { <nl> / / by a third - party that the client <unk> . <nl> boolean trusted = false ; <nl> <nl> { <nl> if ( configuration . <unk> ( ) <nl>
ppp b / src / info / guardianproject / otr / app / im / plugin / xmpp / <unk> . java <nl> class <unk> implements <unk> { <nl> / / by a third - party that the client <unk> . <nl> boolean trusted = false ; <nl> <nl> { <nl> if ( configuration . <unk> ( ) ) ) <nl>
ppp b / src / info / guardianproject / otr / app / im / plugin / xmpp / <unk> . java <nl> class <unk> implements <unk> { <nl> / / by a third - party that the client <unk> . <nl> boolean trusted = false ; <nl> <nl> { <nl> if ( configuration . <unk> ( ) ) <nl> <nl>
ppp b / src / info / guardianproject / otr / app / im / plugin / xmpp / <unk> . java <nl> class <unk> implements <unk> { <nl> / / by a third - party that the client <unk> . <nl> boolean trusted = false ; <nl> <nl> { <nl> if ( configuration . <unk> ( ) )
====NEW EXAMPLE====
ppp b / src / main / java / org / apache / lucene / store / <unk> . java <nl> import java . io . ioexception ; <nl> / * * <nl> * / <nl> public class <unk> extends <unk> { <nl> private final <unk> . provider <unk> ; <nl>
ppp b / src / main / java / org / apache / lucene / store / <unk> . java <nl> import java . io . ioexception ; <nl> / * * <nl> * / <nl> public class <unk> extends <unk> { <nl> private final <unk> . provider <unk> ; ; <nl>
ppp b / src / main / java / org / apache / lucene / store / <unk> . java <nl> import java . io . ioexception ; <nl> / * * <nl> * / <nl> public class <unk> extends <unk> { <nl> private final <unk> . provider <unk> ; <nl> <nl>
ppp b / src / main / java / org / apache / lucene / store / <unk> . java <nl> import java . io . ioexception ; <nl> / * * <nl> * / <nl> public class <unk> extends <unk> { <nl> private final <unk> . provider <unk> <unk> <nl>
ppp b / src / main / java / org / apache / lucene / store / <unk> . java <nl> import java . io . ioexception ; <nl> / * * <nl> * / <nl> public class <unk> extends <unk> { <nl> private final <unk> . provider <unk> <unk> ; <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> version 2 . 99 . x and version 3 . x will be available with a [ pro license ] ( http : / / www <nl> * * next release * * <nl> * updated lithuanian translation <nl> * storm - issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = ) <nl> * * version 2 . 99 . 40 beta * * <nl>
ppp b / changelog . md <nl> version 2 . 99 . x and version 3 . x will be available with a [ pro license ] ( http : / / www <nl> * * next release * * <nl> * updated lithuanian translation <nl> * storm - issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = ) <nl> * * version 2 . 99 . 40 beta * <nl>
ppp b / changelog . md <nl> version 2 . 99 . x and version 3 . x will be available with a [ pro license ] ( http : / / www <nl> * * next release * * <nl> * updated lithuanian translation <nl> * storm - issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = ) <nl> * * version 2 . 99 . 40 beta beta <nl>
ppp b / changelog . md <nl> version 2 . 99 . x and version 3 . x will be available with a [ pro license ] ( http : / / www <nl> * * next release * * <nl> * updated lithuanian translation <nl> * storm - issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = ) <nl> * * version 2 . 99 . 40 beta * * * <nl>
ppp b / changelog . md <nl> version 2 . 99 . x and version 3 . x will be available with a [ pro license ] ( http : / / www <nl> * * next release * * <nl> * updated lithuanian translation <nl> * storm - issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = ) <nl> * * version 2 . 99 . 40 beta <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1073 : prioritize pendingprepare over pendingcommit <nl> * updated lithuanian translation <nl> * storm - 1073 : refactor abstracthdfsbolt <nl> * storm - 1128 : make metrics fast <nl> * storm - 1122 : fix the format issue in utils . java <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1073 : prioritize pendingprepare over pendingcommit <nl> * updated lithuanian translation <nl> * storm - 1073 : refactor abstracthdfsbolt <nl> * storm - 1128 : make metrics fast <nl> * storm - 1122 : fix the format issue in utils . <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1073 : prioritize pendingprepare over pendingcommit <nl> * updated lithuanian translation <nl> * storm - 1073 : refactor abstracthdfsbolt <nl> * storm - 1128 : make metrics fast <nl> * storm - 1122 : fix the format issue in utils . java java <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1073 : prioritize pendingprepare over pendingcommit <nl> * updated lithuanian translation <nl> * storm - 1073 : refactor abstracthdfsbolt <nl> * storm - 1128 : make metrics fast <nl> * storm - 1122 : fix the format issue in utils . . <nl>
====NEW EXAMPLE====
ppp b / scripts / <unk> . groovy <nl> <unk> = { string type - > <nl> try { <nl> def <unk> = " grails . test . classpath " <nl>
ppp b / scripts / <unk> . groovy <nl> <unk> = { string type - > <nl> try { <nl>
ppp b / scripts / <unk> . groovy <nl> <unk> = { string type - > <nl> try { <nl> def <unk> = " grails . test . classpath <nl>
ppp b / scripts / <unk> . groovy <nl> <unk> = { string type - > <nl>
ppp b / scripts / <unk> . groovy <nl> <unk> = { string type - <nl>
====NEW EXAMPLE====
ppp b / osmand / build . gradle <nl> tasks . withtype ( javacompile ) { <nl> clean . dependson ' cleannotranslate ' <nl> cleannotranslate { <nl> delete ( ' ' res res res / values / no_translate . xml ' ) <nl> } <nl>
ppp b / osmand / build . gradle <nl> tasks . withtype ( javacompile ) { <nl> clean . dependson ' cleannotranslate ' <nl> cleannotranslate { <nl> delete ( ' ' res res res / values / no_translate . xml ' ) <nl> <nl>
ppp b / osmand / build . gradle <nl> tasks . withtype
ppp b / osmand / build . gradle <nl> tasks . withtype ( javacompile ) { <nl> clean . dependson ' cleannotranslate ' <nl> cleannotranslate { <nl> delete ( ' ' res res res / values / no_translate . xml ' ) <nl> } <nl> <nl>
ppp b / osmand / build . gradle <nl> tasks . withtype ( javacompile ) { <nl> clean . dependson ' cleannotranslate ' <nl> cleannotranslate { <nl> delete ( ' ' res res res / values / no_translate . xml ' ) <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < dependency > <nl> < groupid > $ { project . groupid } < / groupid > <nl> < artifactid > netty - build < / artifactid > <nl> < version > 6 < / version > <nl> < / dependency > <nl> < / dependencies > <nl> < / plugin > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > $ { project . groupid } < / groupid > <nl> < artifactid > netty - build < / artifactid > <nl> < version > 6 < / version > <nl> < / dependency > <nl> < / dependencies > <nl> < / plugin <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > $ { project . groupid } < / groupid > <nl> < artifactid > netty - build < / artifactid > <nl> < version > 6 < / version > <nl> < / dependency > <nl> < / dependencies > <nl> < / > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > $ { project . groupid } < / groupid > <nl> < artifactid > netty - build < / artifactid > <nl> < version > 6 < / version > <nl> < / dependency > <nl> < / dependencies > <nl> < / plugin > > <nl>
ppp b / pom . xml <nl> < dependency > <nl> < groupid > $ { project . groupid } < / groupid > <nl> < artifactid > netty - build < / artifactid > <nl> < version > 6 < / version > <nl> < / dependency > <nl> < / dependencies > <nl> < / plugin > <nl> <nl>
====NEW EXAMPLE====
ppp b / tests / dumprendertree / src / com / android / dumprendertree / <unk> . java <nl> public class <unk> extends activity { <nl> <unk> = <unk> ; <nl> } <nl> @ override <nl> run ( ) { <nl> ( ( <unk> = <unk> <unk> ) { <nl> / / perform cleanup <nl>
ppp b / tests / dumprendertree / src / com / android / dumprendertree / <unk> . java <nl>
ppp b / tests / dumprendertree / src / com / android / dumprendertree / <unk> . java <nl> public class <unk> extends activity { <nl>
ppp b / tests / dumprendertree / src / com / android / dumprendertree / <unk> . <nl>
ppp b / tests / dumprendertree / src / com / android / dumprendertree / <unk> . java <nl> public class <unk> extends activity { <nl> <unk> = <unk> ; <nl> } <nl> @ override <nl> run ( ) { <nl> ( ( <unk> = <unk> <unk> ) { <nl> / / perform <nl>
====NEW EXAMPLE====
ppp b / src / main / java / org / jboss / netty / channel / socket / http / <unk> . java <nl> class <unk> extends abstractchannel <nl> buf = messages . take ( ) ; <nl> } <nl> catch ( interruptedexception e ) { <nl> e ( ) ; <nl> } <nl> buf ; <nl> } <nl>
ppp b / src / main / java / org / jboss / netty / channel / socket / http / <unk> . java <nl> class <unk> extends abstractchannel <nl> buf = messages . take ( ) ; <nl> } <nl> catch ( interruptedexception e ) { <nl> e ( ) ; <nl> } <nl> buf ; <nl>
ppp b / src / main / java / org / jboss / netty / channel / socket / http / <unk> . java <nl>
ppp b / src / main / java / org / jboss / netty / channel / socket / http / <unk> . java <nl> class <unk> extends abstractchannel <nl> buf = messages . take ( ) ; <nl> } <nl> catch ( interruptedexception e ) { <nl> e ) ; <nl> } <nl> buf ; <nl> } <nl>
ppp b / src / main / java / org / jboss / netty / channel / socket / http / <unk> . java <nl> class <unk> extends abstractchannel <nl> buf = messages . take ( ) ; <nl> } <nl> catch ( interruptedexception e ) { <nl> e ) ; <nl> } <nl> buf ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 6a2e30793ee70a6639a3df4eee49002efccf6436 <nl> mode = push <nl> parent = 43eaaf4aa6d3f2c0f7f6cdad4d91e7f9ae22efab <nl> remote = git @ github . com : liferay / com - liferay - configuration - admin . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / externs / browser / html5 . js <nl> htmlelement . prototype . dataset ; <nl> / * * <nl>
ppp b / externs / browser / html5 . js <nl> htmlelement . prototype . dataset ; <nl>
ppp b / externs / browser / html5 . js <nl> htmlelement . prototype . dataset <nl>
ppp b / externs / browser / html5 . js <nl> htmlelement . prototype . dataset ; <nl> / * <nl>
ppp b / externs / browser / html5 . js <nl> htmlelement . prototype . ; <nl>
====NEW EXAMPLE====
ppp b / proguard - project . txt <nl> public static < fields > ; <nl> } <nl> - keep public class net sqlcipher . * * { <nl> * ; <nl> } <nl>
ppp b / proguard - project . txt <nl> public static < fields > ; <nl> } <nl> - keep public class net sqlcipher . * * { <nl> * ; <nl> <nl>
ppp b / proguard - project . txt <nl> public static < fields > ; <nl> } <nl> - keep public class net sqlcipher . * * { <nl> * ; <nl>
ppp b / proguard - project . txt <nl> public static < fields > ; <nl> } <nl> - keep public class net sqlcipher . * * { <nl> * ; } <nl>
ppp b / proguard - project . txt <nl> public static < fields > ; <nl> } <nl> - keep public class net sqlcipher . * * { <nl> * ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / engine / src / main / resources / assets / <unk> / player / player . prefab <nl> { <nl> " persisted " : false , <nl> " location " : { <nl> " <unk> " : false <nl> } , , <nl>
ppp b / engine / src / main / resources / assets / <unk> / player / player . prefab <nl> { <nl> " persisted " : false , <nl> " location " : { <nl> " <unk> " : false <nl> } , <nl>
ppp b / engine / src / main / resources / assets / <unk> / player / player . prefab <nl> { <nl> " persisted " : false , <nl> " location " : { <nl> " <unk> " : false <nl> } , pero <nl>
ppp b / engine / src / main / resources / assets / <unk> / player / player . prefab <nl> { <nl> " persisted " : false , <nl> " location " : { <nl> " <unk> " : false <nl> } <nl>
ppp b / engine / src / main / resources / assets / <unk> / player / player . prefab <nl> { <nl> " persisted " : false , <nl> " location " : { <nl> " <unk> " : false <nl> } } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - template / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 26d154155d81722e1cfda7321f150aed5ceabfbc <nl> mode = push <nl> parent = 1feb44d74ca0524512a285356298d9871cfbe0bf <nl> remote = git @ github . com : liferay / com - liferay - portal - template . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl>
ppp b / build . gradle <nl> buildscript { <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - <unk> for rate limiting a bug causing spurious failures <nl> * storm - * storm - storm - : filter - c options from args and add them as part of storm . options <nl> * storm - <unk> : port backtype . storm . zookeeper to java <nl> * storm - 1504 : add serializer and instruction for avrogenericrecordbolt <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - <unk> for rate limiting a bug causing spurious failures <nl> * storm - * storm - storm - : filter - c options from args and add them as part of storm . options <nl> * storm - <unk> : port backtype . storm . zookeeper to java <nl> * storm - 1504 : add serializer and instruction for avrogenericrecordbolt avrogenericrecordbolt <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - <unk> for rate limiting a bug causing spurious failures <nl> * storm - * storm - storm - : filter - c options from args and add them as part of storm . options <nl> * storm - <unk> : port backtype . storm . zookeeper to java <nl> * storm - 1504 : add serializer and instruction for <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - <unk> for rate limiting a bug causing spurious failures <nl> * storm - * storm - storm - : filter - c options from args and add them as part of storm . options <nl> * storm - <unk> : port backtype . storm . zookeeper to java <nl> * storm - 1504 : add serializer and instruction for for <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - <unk> for rate limiting a bug causing spurious failures <nl> * storm - * storm - storm - : filter - c options from args and add them as part of storm . options <nl> * storm - <unk> : port backtype . storm . zookeeper to java <nl> * storm - 1504 : add serializer and instruction instruction <nl>
====NEW EXAMPLE====
ppp b / src / org / opensolaris / opengrok / search / context / <unk> . <unk> <nl> import org . apache . lucene . analysis . * ; <nl> % public <nl> % class <unk> <nl> % { <nl> % function next <nl> % type string <nl> % <unk> <nl>
ppp b / src / org / opensolaris / opengrok / search / context / <unk> . <unk> <nl>
ppp b / src / org / opensolaris / opengrok / search / context / <unk> . <unk> <nl> import org . apache . lucene . analysis . * ; <nl> % public <nl> % class <unk> <nl> % { <nl> % function next <nl> % type string <nl> % <unk> <nl> <nl>
ppp b / src / org / opensolaris / opengrok / search / context / <unk> . <unk> <nl> import org . apache . lucene . analysis . * ; <nl> % public <nl> % class <unk> <nl> % { <nl> % function next <nl> % type string <nl> % % <nl>
ppp b / src / org / opensolaris / opengrok / search / context / <unk> . <unk> <nl> import org . apache . lucene . analysis . * ; <nl> % public <nl> % class <unk> <nl> % { <nl> % function next <nl> % type string <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - mentions . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / mentions / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f12583f9b51760b9aaca36e9fea07e62aee0cc6c <nl> mode = push <nl> parent = 342f3d5011068ba855e8c29cf68fa7323849beea <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> how to get beta releases : <nl> * updated arabic translation <nl> * updated german translation <nl> * updated simplified chinese translation <nl> * version version 1 . 8 . 8 beta ! * * <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * updated arabic translation <nl> * updated german translation <nl> * updated simplified chinese translation <nl> * version version 1 . 8 . 8 beta ! * <nl>
ppp b / readme . md <nl> how to get beta releases : <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * updated arabic translation <nl> * updated german translation <nl> * updated simplified chinese translation <nl> * version version 1 . 8 . 8 beta ! * *
ppp b / readme . md <nl> how to get beta
====NEW EXAMPLE====
ppp b / . travis . yml <nl> cache : <nl>
ppp b / . travis . yml <nl> cache : <nl> $
ppp b / . travis . yml <nl> cache : <nl> $ home . <nl>
ppp b / . travis . yml <nl> cache : <nl> $ home . m2 <nl>
ppp b / . travis . yml <nl> cache : <nl> $ home . m2 <nl> git fetch
====NEW EXAMPLE====
ppp b / library / src / main / androidmanifest . xml <nl> android : versioncode = " 122 " <nl> android : versionname = " 1 . 2 . 2 - shapshot " > <nl> " " " > <nl> < / manifest > <nl>
ppp b / library / src / main / androidmanifest . xml <nl> android : versioncode = " 122 " <nl> android : versionname = " 1 . 2 . 2 - shapshot " > <nl>
ppp b / library / src / main / androidmanifest . xml <nl> android : versioncode = " 122 " <nl> android : versionname = " 1 . 2 . 2 - shapshot " > <nl> " " " > <nl> < / > <nl>
ppp b / library / src / main / androidmanifest . xml <nl> android : versioncode = " 122 " <nl>
ppp b / library / src / main / androidmanifest . xml <nl> android : versioncode = " 122 " <nl> android : versionname = " 1 . 2 . 2 - shapshot " > <nl> " " " > <nl>
====NEW EXAMPLE====
ppp b res / raw / config config . properties . sample <nl>
ppp b res / raw / config config . properties . sample <nl> <nl>
ppp b res / raw / config config . properties . . <nl>
ppp b res / raw / config config . properties
ppp b res / raw /
====NEW EXAMPLE====
ppp b / library / res / values / <unk> . xml <nl> - > <nl> < resources > <nl>
ppp b / library / res / values / <unk> . xml <nl> - > <nl> < resources > <nl> <
ppp b / library / res / values / <unk> . xml <nl> - > <nl> < resources <nl>
ppp b / library / res / values / <unk> . xml <nl> - > <nl> < resources > <nl> < color
ppp b / library / res / values / <unk> . xml <nl> - > <nl> < > <nl>
====NEW EXAMPLE====
ppp b / changelog <nl> * fixed litres ' my books ' entry loading <nl>
ppp b / changelog <nl> * fixed litres ' my books ' entry <nl>
ppp b / changelog <nl> * fixed litres ' my books ' entry loading <nl> * better error messages processing during network operations <nl> * fixed opds feed ) <nl> * updated lithuanian translation <nl> opds feed mimetype <nl> = = = = = 1 . 0 . 10 ( may 02 , 2011 2011 = = = = = = <nl> * litres : sort books by date of <unk> <nl>
ppp b / changelog <nl> * fixed litres ' my books ' entry loading <nl> * better error messages processing during network operations <nl> * fixed opds feed ) <nl> * updated lithuanian translation <nl> opds feed mimetype <nl> = = = = = 1 . 0 . 10 ( may 02 , 2011 2011 = = = = = = <nl> * litres : sort books by date of file <nl>
ppp b / changelog <nl> * fixed litres ' my books ' entry loading <nl> * better error messages processing during network operations <nl> * fixed opds feed ) <nl> * updated lithuanian translation <nl> opds feed mimetype <nl> = = = = = 1 . 0 . 10 ( may 02 , 2011 2011 = = = = = = <nl> * litres : sort books by date of <nl>
====NEW EXAMPLE====
ppp b / tools / db - upgrade / readme . txt <nl>
ppp b / tools / db - upgrade / readme . txt <nl> modify portal - ext ext . properties with your custom settings so that the upgrade tool <nl> can connect your database . all liferay servers must be turned off when <nl> performing an upgrade . <nl>
ppp b / tools / db - upgrade / readme . txt <nl> modify portal - ext ext . properties with your custom settings so that the upgrade tool <nl> can connect your database . all liferay servers must be turned off when <nl> performing an upgrade <nl>
ppp b / tools / db - upgrade / readme . txt <nl> modify portal - ext ext . properties with your custom settings so that the upgrade tool <nl> can connect your database . all liferay servers must be turned off when <nl> performing an upgrade upgrade <nl>
ppp b / tools / db - upgrade / readme . txt <nl> modify portal - ext ext . properties with your custom settings so that the upgrade tool <nl> can connect your database . all liferay servers must be turned off when <nl> performing an upgrade .
====NEW EXAMPLE====
ppp b / modules / application / src / main / resources / info . plist <nl>
ppp b / modules / application / src / main / resources / info . <nl>
ppp b / modules / application / src / main / resources / info . plist <nl> < key > <unk> < / key > <nl> < string > gephi . icns < / string > <nl> < key > <unk> < / key > <nl> < / < / > <nl> < key > < / key > <nl> < array > <nl>
ppp b / modules / application / src / main / resources / info . plist <nl> < key > <unk> < / key > <nl> < string > gephi . icns < / string > <nl> < key > <unk> < / key > <nl> < / < / > <nl> < key > < / key > <nl> < array > > <nl>
ppp b / modules / application / src / main / resources / info . plist <nl> < key > <unk> < / key > <nl> < string > gephi . icns < / string > <nl> < key > <unk> < / key > <nl> < / < / > <nl> < key > < / key > <nl> < array <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> the library does supports the following languages : <nl> * english ( default ) <nl> * german ( by @ <unk> ) <nl> please make a pull no newline at end of file <nl>
ppp b / readme . md <nl> the library does supports the following languages : <nl> * english ( default ) <nl> * german ( by @ <unk> ) <nl> please make a pull no newline at end of file <nl> german translation for dashboard widgets : <nl> ) ] ( demetrios papadopoulos a pull to to add a new language . <nl>
ppp b / readme . md <nl> the library does supports the following languages : <nl> * english ( default ) <nl> * german ( by @ <unk> ) <nl> please make a pull no newline at end of file <nl> german translation for dashboard widgets : <nl> ) ] ( demetrios papadopoulos a pull to to add a new language language <nl>
ppp b / readme . md <nl> the library does supports the following languages : <nl> * english ( default ) <nl> * german ( by @ <unk> ) <nl> please make a pull no newline at end of file <nl> german translation for dashboard widgets : <nl> ) ] ( demetrios papadopoulos a pull to to add a new language . . <nl>
ppp b / readme . md <nl> the library does supports the following languages : <nl> * english ( default ) <nl> * german ( by @ <unk> ) <nl> please make a pull no newline at end of file <nl> german translation for dashboard widgets : <nl> ) ] ( demetrios papadopoulos a pull to to add a new language <nl>
====NEW EXAMPLE====
ppp b / hadoop - common - project / hadoop - common / changes . txt <nl>
ppp b / hadoop - common - project / hadoop - common
ppp b / hadoop - common - project / hadoop - common /
ppp b / hadoop - common - project / hadoop - common / changes . txt <nl> release 2 . 6 . 3 - unreleased <nl> bug fixes <nl> \ no newline at end of file <nl>
ppp b / hadoop - common - project / hadoop - common / changes . txt <nl> release 2 . 6 . 3 - unreleased <nl> bug fixes <nl> \ no newline at end of file <nl> * * updated simplified chinese translation <nl> fixes <nl> release release 2 6 . 2 - 2015 - 10 10 - 28 <nl> incompatible changes <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8af8e70cf4495223ebfc677c7f08c191c87d94aa <nl> mode = push <nl> parent = e8cec82cdaf562261034405e1c4c33ef202455f6 <nl> remote = git @ github . com : liferay / com - liferay - roles . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / roles / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / example / pom . xml <nl> < dependency > <nl> < groupid > org . eclipse . jetty . npn < / groupid > <nl> < artifactid > npn - api < / artifactid > <nl>
ppp b / example / pom . xml <nl> < dependency > <nl> < groupid > org . eclipse . jetty . npn < / groupid > <nl> < artifactid > npn - api < / > <nl>
ppp b / example / pom . xml <nl> < dependency > <nl> < groupid > org . eclipse . jetty . npn < / groupid > <nl> < artifactid > npn - api < / artifactid <nl>
ppp b / example / pom . xml <nl> < dependency > <nl> < groupid > org . eclipse . jetty . npn < / groupid > <nl>
ppp b / example / pom . xml <nl> < dependency > <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> * . so <nl> * . jnilib <nl> * . dylib <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> * . so <nl> * . jnilib <nl> * . ipr <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> * . so <nl> * . jnilib <nl> * . iml <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> * . so <nl> * . jnilib <nl> * . idea <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> * . so <nl> * . jnilib <nl> * * <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 3 ' <nl> issnapshot = false <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl> smackminandroidsdk = 8 <nl> } <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 3 ' <nl> issnapshot = false <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl> smackminandroidsdk = 8 <nl> <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 3 ' <nl> issnapshot = false <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl> smackminandroidsdk = 8 <nl> } <nl> <nl>
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 3 ' <nl> issnapshot = false <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl> smackminandroidsdk = 8 <nl> }
ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortversion = ' 4 . 1 . 3 ' <nl> issnapshot = false <nl> jxmppversion = ' 0 . 4 . 2 - beta1 ' <nl> smackminandroidsdk = 8 <nl>
====NEW EXAMPLE====
ppp b / toolsplugin / src / org / gephi / tools / plugin / nodepencil . java <nl>
ppp b / toolsplugin / src / org / gephi / tools / plugin / nodepencil . java <nl> public class nodepencil implements tool { <nl> public nodepencil ( ) { <nl> / / default settings <nl> color = color . black ; <nl> default ( ) ; <nl> color = color . black ; <nl> size = 10f ; <nl> } <nl>
ppp b / toolsplugin / src / org / gephi / tools / plugin / nodepencil . java <nl> public class nodepencil implements tool { <nl> public nodepencil ( ) { <nl> / / default settings <nl> color = color . black ; <nl> default ( ) ; <nl> color = color . black ; <nl> size = 10f ; <nl> <nl>
ppp b / toolsplugin / src / org / gephi / tools / plugin / nodepencil . java <nl> public class nodepencil implements tool { <nl> public nodepencil ( ) { <nl> / / default settings <nl> color = color . black ; <nl> default ( ) ; <nl> color = color . black ; <nl> size = 10f ; <nl> }
ppp b / toolsplugin / src / org / gephi / tools / plugin / nodepencil . java <nl> public class nodepencil implements tool { <nl> public nodepencil ( ) { <nl> / / default settings <nl> color = color . black ; <nl> default ( ) ; <nl> color = color . black ; <nl> size = 10f ; <nl> } } <nl>
====NEW EXAMPLE====
ppp b / <unk> / readme . md <nl> tags : <nl>
ppp b / <unk> / readme . md <nl> tags : <nl> difficulty
ppp b / <unk> / readme . md <nl>
ppp b / <unk> / readme . md <nl> tags : <nl> difficulty - beginner also known as - snapshot <nl> # # intent <nl> ensure a class only only has limited number of instances , and provide a <nl> global point of access to them . <nl>
ppp b / <unk> / readme . md <nl> tags : <nl> difficulty - beginner also known as - snapshot <nl> # # intent <nl> ensure a class only only has limited number of instances , and provide a <nl> global point of access to them <nl>
====NEW EXAMPLE====
ppp b / framework / src / com / phonegap / droidgap . java <nl> public class droidgap extends phonegapactivity { <nl> * end this activity by calling finish for activity <nl> * / <nl> public void endactivity ( ) { <nl> @ suppresswarnings ( ) ; <nl> { <nl> . . finish ( ) ; <nl> } <nl>
ppp b / framework / src / com / phonegap / droidgap . java <nl> public class droidgap extends phonegapactivity { <nl>
ppp b / framework / src / com / phonegap / droidgap . java <nl>
ppp b / framework / src / com / phonegap / droidgap . java <nl> public class droidgap extends phonegapactivity { <nl> * end this activity by calling finish for activity <nl> * / <nl> public void endactivity ( ) { <nl> @ suppresswarnings ( ) ; <nl> { <nl> . . finish ( ) ; } <nl>
ppp b / framework / src / com / phonegap / droidgap . java <nl> public class droidgap extends phonegapactivity {
====NEW EXAMPLE====
ppp b / changelog . md <nl>
ppp b / changelog . md <nl> * storm - <unk> : allow a <unk> that takes no arguments flux ) <nl> * storm - 265 : add another part of file <nl> * storm - no longer artificially inflate liveratio ( bowei zhang via smarthi <nl> * storm - storm - : worker metadata file creation doesn ' t use storm . log . dir config <nl> * storm - 1349 : [ flux ] allow constructorargs to take maps as <nl>
ppp b / changelog . md <nl> * storm - <unk> : allow a <unk> that takes no arguments flux ) <nl> * storm - 265 : add another part of file <nl> * storm - no longer artificially inflate liveratio ( bowei zhang via smarthi <nl> * storm - storm - : worker metadata file creation doesn ' t use storm . log . dir config <nl> * storm - 1349 : [ flux ] allow constructorargs to take maps as arguments <nl>
ppp b / changelog . md <nl> * storm - <unk> : allow a <unk> that takes no arguments flux ) <nl> * storm - 265 : add another part of file <nl> * storm - no longer artificially inflate liveratio ( bowei zhang via smarthi <nl> * storm - storm - : worker metadata file creation doesn ' t use storm . log . dir config <nl> * storm - 1349 : [ flux ] allow constructorargs to take maps arguments <nl>
ppp b / changelog . md <nl> * storm - <unk> : allow a <unk> that takes no arguments flux ) <nl> * storm - 265 : add another part of file <nl> * storm - no longer artificially inflate liveratio ( bowei zhang via smarthi <nl> * storm - storm - : worker metadata file creation doesn ' t use storm . log . dir config <nl> * storm - 1349 : [ flux ] allow constructorargs to take maps <nl>
====NEW EXAMPLE====
ppp b / actor - server / actor - runtime / src / main / protobuf / serialization . proto <nl> syntax = " proto2 " ; <nl> package im . actor . ; <nl> <unk> { <nl> required int32 id = 1 ; <nl>
ppp b / actor - server / actor - runtime / src / main / protobuf / serialization . proto <nl> syntax = " proto2 " ; <nl> package im . actor . ; <nl> <unk> { <nl> required int32 id = ; <nl>
ppp b / actor - server / actor - runtime / src / main / protobuf / serialization . proto <nl>
ppp b / actor - server / actor - runtime / src / main / protobuf / serialization . proto <nl> syntax = " proto2 " ; <nl> package im . actor . ; <nl> <unk> { <nl> required int32 id = 1 <nl>
ppp b / actor - server / actor - runtime / src / main / protobuf / serialization . proto <nl> syntax = " proto2 " ; <nl> package im . actor . ; <nl> <unk> { <nl>
====NEW EXAMPLE====
ppp b / authors <nl> tom <unk> <nl> chris <unk> <nl>
ppp b / authors <nl> tom <unk> <nl> chris <unk> <nl> <unk> <unk> <nl>
ppp b / authors <nl> tom <unk> <nl> chris <unk> <nl> <unk>
ppp b / authors <nl> tom <unk> <nl> chris <unk>
ppp b / authors <nl> tom <unk> <nl> chris <unk> <nl> <unk> <unk> <nl> minoo ziaei <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / scripts / lexparser / <unk> . def <nl> elif [ $ lang = = " chinese " ] ; then <nl>
ppp b / scripts / lexparser / <unk> . def <nl> elif [ $ lang = = " chinese " ] ; <nl>
ppp b / scripts / lexparser / <unk> . def <nl> elif [ $ lang = = " chinese " ] ; then <nl> elif [ $ lang = = " french " ] ; then <nl> <unk> = " $ <unk> " . <unk> <nl> <unk> = " - <unk> encoding encoding utf 8 " <nl> <unk> = " - <unk> " <nl> fi <nl> \ no newline at end of file <nl>
ppp b / scripts / lexparser / <unk> . def <nl>
ppp b / scripts / lexparser / <unk> . def <nl> elif
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 53a3ca81074093b982633cfd8b103bf1e0c1e648 <nl> mode = push <nl> parent = 993fcf720be7b4249a0658a00ed6378216c474ee <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / advanced / build / deploy . sh <nl>
ppp b / advanced / build / deploy . sh <nl> <unk> = https : / / repo . neo4j . org / content / repositories / snapshots <nl> function work { <nl> <unk> neo4j - management <nl> deploy neo4j - advanced docs javadoc <nl> deploy neo4j - server - advanced advanced advanced - advanced - javadoc sources sources - - sources tests <nl> } <nl>
ppp b / advanced / build / deploy . sh <nl> <unk> = https : / / repo . neo4j . org / content / repositories / snapshots <nl> function work { <nl> <unk> neo4j - management <nl> deploy neo4j - advanced docs javadoc <nl> deploy neo4j - server - advanced advanced advanced - advanced - javadoc sources sources - - sources <nl> } <nl>
ppp b / advanced / build / deploy . sh <nl> <unk> = https : / / repo . neo4j . org / content / repositories / snapshots <nl> function work { <nl> <unk> neo4j - management <nl> deploy neo4j - advanced docs javadoc <nl> deploy neo4j - server - advanced advanced advanced - advanced - javadoc sources sources - - sources tests <nl>
ppp b / advanced / build / deploy . sh <nl> <unk> = https : / / repo . neo4j . org / content / repositories / snapshots <nl> function work { <nl> <unk> neo4j - management <nl> deploy neo4j - advanced docs javadoc <nl> deploy neo4j - server - advanced advanced advanced - advanced - javadoc sources sources - - sources sources <nl> } <nl>
====NEW EXAMPLE====
ppp b / h2o - py / requirements . txt <nl> six <nl> seaborn <nl> future <nl> matplotlib <nl>
ppp b / h2o - py / requirements . txt <nl> six <nl> seaborn <nl> future <nl>
ppp b / h2o - py / requirements . txt <nl> six <nl> seaborn <nl> future <nl> <nl>
ppp b / h2o - py / requirements . txt <nl> six <nl> seaborn <nl> future <nl> matplotlib <nl> matplotlib <nl>
ppp b / h2o - py / requirements . txt <nl> six <nl> seaborn <nl> future <nl> matplotlib <nl> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> obj / <nl> [
ppp b / . gitignore <nl> obj / <nl>
ppp b / . gitignore <nl> obj / <nl> [ rr
ppp b / . gitignore <nl> obj / <nl> [ rr ] elease * / <nl> * updated simplified chinese translation <nl> <nl> [ <unk> ] est [ rr ] <unk> * <nl>
ppp b / . gitignore <nl> obj / <nl> [ rr ] elease * / <nl> * updated simplified chinese translation <nl> <nl> [ <unk> ] est [ rr ] <unk> * * <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> changes for crate data <nl>
ppp b / changes . txt <nl> changes for crate data <nl> unreleased <nl>
ppp b / changes . txt <nl> changes for crate data <nl> unreleased <nl> =
ppp b / changes . txt <nl> changes for crate data <nl> <nl>
ppp b / changes . txt <nl> changes for crate <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 515 : automatic back pressure <nl> * storm - storm - : clojure documentation and examples <nl> * storm - 1279 : port backtype . storm . daemon . supervisor to java <nl> * storm - 1668 : flux silently fails while setting a non - existent property . <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 515 : automatic back pressure <nl> * storm - storm - : clojure documentation and examples <nl> * storm - 1279 : port backtype . storm . daemon . supervisor to java <nl> * storm - 1668 : flux silently fails while setting a non - existent property <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 515 : automatic back pressure <nl> * storm - storm - : clojure documentation and examples <nl> * storm - 1279 : port backtype . storm . daemon . supervisor to java <nl> * storm - 1668 : flux silently fails while setting a non - existent property property <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 515 : automatic back pressure <nl> * storm - storm - : clojure documentation and examples <nl> * storm - 1279 : port backtype . storm . daemon . supervisor to java <nl> * storm - 1668 : flux silently fails while setting a non - existent existent <nl>
====NEW EXAMPLE====
ppp b / platform / platform - resources / src / launcher . py <nl> else : <nl>
ppp b / platform / platform - resources / src / launcher . py <nl> else : <nl> <unk> , <unk> = os . path . split ( <unk> ) <nl> os . chdir chdir . chdir ( <unk> ) <nl> <nl> . . <unk> ( <unk> , args ) <nl>
ppp b / platform / platform - resources / src / launcher . py <nl>
ppp b / platform / platform - resources / src / launcher . py <nl> else : <nl> <unk> , <unk> = os . path . split ( <unk> ) <nl> os . chdir chdir . chdir ( <unk> ) <nl> <nl> . . <unk> ( <unk> , args ) ) <nl>
ppp b / platform / platform - resources / src / launcher . py <nl> else : <nl> <unk> , <unk> = os . path . split ( <unk> ) <nl> os . chdir chdir . chdir ( <unk> ) <nl> <nl> . . <unk> ( <unk> , args args <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4a78805e9a7a33f5de31cd04cb36de88f441607e <nl> mode = push <nl> parent = 35e3861fcb4f1429e20bd93ac0d525c0e75a1358 <nl> remote = git @ github . com : liferay / com - liferay - users - admin . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / empublite / <unk> - <unk> / project . properties <nl>
ppp b / empublite / <unk> - <unk> / project . properties <nl> # proguard . config = $ { sdk . dir } / tools / proguard / proguard - android . txt : proguard - project . txt <nl> # project target . <nl> target = android - 15 <nl> android . library . reference . 1 = . . / . . / external / actionbarsherlock <nl>
ppp b / empublite / <unk> - <unk> / project . properties <nl> # proguard . config = $ { sdk . dir } / tools / proguard / proguard - android . txt : proguard - project . txt <nl> # project target . <nl> target = android - 15 <nl> android . library . reference . 1 = . . / . . / external / <nl>
ppp b / empublite / <unk> - <unk> / project . properties <nl> # proguard . config = $ { sdk . dir } / tools / proguard / proguard - android . txt : proguard - project . txt <nl> # project target . <nl> target = android - 15 <nl> android . library . reference . 1 = . . / . . / external actionbarsherlock <nl>
ppp b / empublite / <unk> - <unk> / project . <nl>
====NEW EXAMPLE====
ppp b / libraries / components / scrollview / <unk> . android . js <nl> * / <nl> ' use strict ' ; <nl>
ppp b / libraries / components / scrollview / <unk> . android . js <nl> * / <nl> ' use strict ' <nl>
ppp b / libraries / components / scrollview / <unk> . android . js <nl>
ppp b / libraries / components / scrollview / <unk> . android . js <nl> * / <nl> ' use strict ' ; <nl> var <unk> = require (
ppp b / libraries / components / scrollview / <unk> . android . js <nl> * / <nl> ' use strict ' ; <nl> var <unk> = require ( '
====NEW EXAMPLE====
ppp b / project . xml <nl> < name
ppp b / project . xml <nl> < name > richard monson - haefel < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < / contributors > <nl> < / < /
ppp b / project . xml <nl> < name > richard monson - haefel < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < / contributors > <nl> < / < / < /
ppp b / project . xml <nl> < name > richard monson - haefel < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < / contributors > <nl> < / < / < / < /
ppp b / project . xml <nl> < name > richard monson - haefel < / name > <nl> < email > < / email > <nl> < / contributor > <nl> < / contributors > <nl> < / < / < / < / < /
====NEW EXAMPLE====
ppp b / readme . md <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> classpath " io . . realm : gradle - plugin plugin : < version > - snapshot " <nl> } <nl> } <nl>
ppp b / readme . md <nl> buildscript { <nl> } <nl> <nl>
ppp b / readme . md <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> classpath " io . . realm : gradle - plugin plugin : < version > - snapshot " <nl> } <nl> <nl>
ppp b / readme . md <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> classpath " io . . realm : gradle - plugin plugin : < version > - snapshot " <nl> } <nl> } <nl> <nl>
ppp b / readme . md <nl> buildscript { <nl>
====NEW EXAMPLE====
ppp b / java / libsvm / svm . java <nl> public class svm { <nl> / / <nl> / / construct and solve various formulations <nl> / / <nl> public static final int libsvm_version = 314 ; <nl> public static final random rand = new random ( ) ; <nl> private static svm_print_interface svm_print_stdout = new svm_print_interface ( ) <nl>
ppp b / java / libsvm / svm . java <nl> public class svm { <nl> / / <nl> / / construct and solve various formulations <nl> / / <nl> public static final int libsvm_version = 314 ; <nl> public static final random rand = new random ( ) ; <nl> private static svm_print_interface svm_print_stdout = new svm_print_interface ( <nl>
ppp b / java / libsvm / svm . java <nl> public class svm { <nl> / / <nl> / / construct and solve various formulations <nl> / / <nl> public static final int libsvm_version = 314 ; <nl> public static final random rand = new random ( ) ; <nl> private static svm_print_interface svm_print_stdout = new svm_print_interface ) <nl>
ppp b / java / libsvm / svm . java <nl> public class svm { <nl> / / <nl> / / construct and solve various formulations <nl> / / <nl> public static final int libsvm_version = 314 ; <nl> public static final random rand = new random ( ) ; <nl> private static svm_print_interface svm_print_stdout = new svm_print_interface ( ( <nl>
ppp b / java / libsvm / svm . java <nl> public class svm { <nl> / / <nl> / / construct and solve various formulations <nl> / / <nl> public static final int libsvm_version = 314 ; <nl> public static final random rand = new random ( ) ; <nl> private static svm_print_interface svm_print_stdout = new svm_print_interface ( ) ) <nl>
====NEW EXAMPLE====
ppp b / src / main / com / mongodb / <unk> . java <nl>
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> implements <unk> { <nl>
ppp b / src / main / com / mongodb / <unk> . <nl>
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public commandresult authenticate ( <unk> credentials ) { <nl> final <unk> port = null & & & & & port = . get ( false , <unk> . <unk> ( ) , null ) ; <nl> try { <nl>
ppp b / src / main / com / mongodb / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public commandresult authenticate ( <unk> credentials ) { <nl> final <unk> port = null & & & & & port = . get ( false , <unk> . <unk> ( ) , null ) ; <nl> try { { <nl>
====NEW EXAMPLE====
ppp b / external / cacheword <nl> subproject commit e2915b4ce6edc24f4dc9fe361e23ff0a80e840f6 <nl>
ppp b / external / cacheword <nl> subproject commit <nl>
ppp b / external / cacheword <nl> subproject e2915b4ce6edc24f4dc9fe361e23ff0a80e840f6 <nl>
ppp b / external / cacheword <nl> subproject commit fa2fc5a1e19e466d8ffcf63f6a2d717621834c96 <nl>
ppp b / external / cacheword <nl> subproject commit 5acc2808207c0afd56c2fa63c76d2ffb5405c009 <nl>
====NEW EXAMPLE====
ppp b / examples / camel - example - cdi - <unk> / readme . md <nl> # metrics example - cdi <nl> # # # introduction <nl>
ppp b / examples / camel - example - cdi - <unk> / readme . md <nl> # metrics example - cdi <nl> # # # introduction introduction <nl>
ppp b / examples / camel - example - cdi - <unk> / readme . md <nl> # metrics example - cdi <nl> # # # introduction <nl> <nl>
ppp b / examples / camel - example - cdi - <unk> / readme . md <nl> # metrics example - cdi <nl> # # # # <nl>
ppp b / examples / camel - example - cdi - <unk> / readme . md <nl> # metrics example - cdi <nl> # # # introduction log <nl>
====NEW EXAMPLE====
ppp b / . hgtags <nl> <unk> roboguice - 2 . 0 - <unk> <nl>
ppp b / . hgtags <nl> <unk> roboguice - 2 .
ppp b / . hgtags <nl> <unk> roboguice - 2
ppp b / . hgtags <nl> <unk> roboguice
ppp b / . hgtags <nl> <unk> roboguice - 2 . 0 - <unk> <nl> <unk> roboguice - 2 . 0 - <unk> <nl> 0000000000000000000000000000000000000000 roboguice - 2 . 0 - <unk> ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` 0 - <unk> <nl> <unk> roboguice - 2 . 0 - <unk> <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> publishing { <nl> shadow ( mavenpublication ) { <nl> groupid ' com . javarepl ' <nl> artifactid ' <nl> ' ' javarepl ' <nl> from components . shadow <nl> artifact <unk> { <nl>
ppp b / build . gradle <nl> publishing { <nl> shadow ( mavenpublication ) { <nl> groupid ' com . javarepl ' <nl> artifactid ' <nl> ' ' javarepl ' <nl> from components . shadow <nl> artifact <unk> { <nl> <nl>
ppp b / build . gradle <nl> publishing { <nl> shadow
ppp b / build . gradle <nl> publishing { <nl> shadow ( mavenpublication ) { <nl> groupid ' com . javarepl ' <nl> artifactid ' <nl> ' ' javarepl ' <nl> from components . shadow <nl>
ppp b / build . gradle <nl> publishing { <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < profiles > <nl> < profile > <nl> < activation > <nl> < / > <nl>
ppp b / pom . xml <nl> < profiles > <nl>
ppp b / pom . xml <nl> < profiles <nl>
ppp b / pom . xml <nl> < profiles >
ppp b / pom . xml <nl> < profiles > <nl> < profile > <nl> < activation > <nl> < / > <nl> > <nl> > <nl> < activebydefault activebydefault > true < / activebydefault > <nl> < / activation > <nl>
====NEW EXAMPLE====
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 180 <nl> versionname " 3 . 1 . 2 " <nl> multidexenabled true <nl> generateddensities = [ ] <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 180 <nl> versionname " 3 . 1 . 2 " <nl> multidexenabled true <nl> generateddensities = [ [ <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 180 <nl> versionname " 3 . 1 . 2 " <nl> multidexenabled true <nl> generateddensities = [ ] <nl> <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 180 <nl> versionname " 3 . 1 . 2 " <nl> multidexenabled true <nl> generateddensities = [ <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 180 <nl> versionname " 3 . 1 . 2 " <nl> multidexenabled true <nl> generateddensities = [ ]
====NEW EXAMPLE====
ppp b / bigbluebutton - html5 / app / config . coffee <nl> config . <unk> = " your - extension - key " <nl>
ppp b / bigbluebutton - html5 / app / config . coffee <nl>
ppp b / bigbluebutton - html5 / app / config . coffee <nl> config . <unk> = " your - extension - key <nl>
ppp b / bigbluebutton - html5 / app / config . <nl>
ppp b / bigbluebutton - html5 / app / config . coffee <nl> config . <unk> = " your - extension - key " <nl> # allows a <unk> to access a freeswitch <unk> <nl> config . <unk> = " <unk> " <nl> \ no newline at end of file <nl> " # specifies whether to use sip . js for audio over <unk> <nl> config . <unk> = false <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> apply from : ' gradle / functions . gradle ' <nl> def apktoolversion_major = ' 2 . 0 . 0 ' <nl> def apktoolversion_minor = ' ' ' ; <nl> allprojects { <nl> apply plugin : ' java ' <nl>
ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> apply from : ' gradle / functions . gradle ' <nl> def apktoolversion_major = ' 2 . 0 . 0 ' <nl> def apktoolversion_minor = ' ' ' ; <nl> allprojects { <nl> apply plugin : ' java <nl>
ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> apply from : ' gradle / functions . gradle ' <nl> def apktoolversion_major = ' 2 . 0 . 0 ' <nl> def apktoolversion_minor = ' ' ' ; <nl> allprojects { <nl> apply plugin : ' java java <nl>
ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> apply from : ' gradle / functions . gradle ' <nl> def apktoolversion_major = ' 2 . 0 . 0 ' <nl> def apktoolversion_minor = ' ' ' ; <nl> allprojects { <nl> apply plugin : ' ' <nl>
ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> apply from : ' gradle / functions . gradle ' <nl> def apktoolversion_major = ' 2 . 0 . 0 ' <nl> def apktoolversion_minor = ' ' ' ; <nl> allprojects { <nl> apply plugin : ' java ' <nl> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> . * . . swp <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> . * . swp <nl> <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> . * . . swp <nl> \ no newline at end of file <nl> end of file <nl>
ppp b / . gitignore <nl> . * . swp <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> . * . . 0 <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / actors / extensions / json / messages . md <nl> json message serializer <nl> = = = = <nl> the json message serializer is a actor pipeline handler that that <nl> <unk> message objects into json . <nl> uses <nl>
ppp b / actors / extensions / json / messages . md <nl> json message serializer <nl> = = = = <nl> the json message serializer is a actor pipeline handler that that <nl> <unk> message objects into json . <nl>
ppp b / actors / extensions / json / messages . md <nl> json message serializer <nl> = = = = <nl> the json message serializer is a actor pipeline handler that that <nl> <unk> message objects into json . <nl> <nl>
ppp b / actors / extensions / json / messages . md <nl> json message serializer <nl> = = = = <nl> the json message serializer is a actor pipeline handler that that <nl> <unk> message objects into json . <nl> uses
ppp b / actors / extensions / json / messages . md <nl> json message serializer <nl> = = = = <nl> the json message serializer is a actor pipeline handler that that <nl> <unk> message objects into json . uses <nl>
====NEW EXAMPLE====
ppp b / src / test / java / org / elasticsearch / validate / <unk> . java <nl> public class <unk> extends elasticsearchintegrationtest { <nl> } <nl> public void <unk> ( ) { <nl> throws throws ioexception { <nl> <unk> ( " test " ) ; <nl> <unk> ( ) ; <nl>
ppp b / src / test / java / org / elasticsearch / validate / <unk> . java <nl>
ppp b / src / test / java / org / elasticsearch / validate / <unk> . java <nl> public class <unk> extends elasticsearchintegrationtest { <nl> } <nl> public void <unk> ( ) { <nl> throws throws ioexception { <nl> <unk> ( " test " ) ; <nl> <unk> ( ) <nl>
ppp b / src / test / java / org / elasticsearch / validate / <unk> . java <nl> public class <unk> extends elasticsearchintegrationtest { <nl> } <nl> public void <unk> ( ) { <nl> throws throws ioexception { <nl> <unk> ( " test " ) ; <nl> <unk> ( ) ) <nl>
ppp b / src / test / java / org / elasticsearch / validate / <unk> . java <nl> public class <unk> extends elasticsearchintegrationtest { <nl> } <nl> public void <unk> ( ) { <nl> throws throws ioexception { <nl> <unk> ( " test " ) ; <nl> <unk> ( ) ;
====NEW EXAMPLE====
ppp b / src / edu / stanford / nlp / <unk> / <unk> . java <nl>
ppp b / src / edu / stanford / nlp / <unk> / <unk> . <nl>
ppp b / src / edu / stanford / nlp / <unk> /
ppp b / src / edu / stanford / nlp / <unk> / <unk> . java <nl> public class <unk> implements serializable { <nl> return result ; <nl> } <nl> public int size ( ) & & & & & & & & & & & & & & ) ; <nl> return return this . <unk> ( ) size ( ) ) ; <nl> } <nl>
ppp b / src / edu / stanford / nlp / <unk> / <unk> . java <nl> public class <unk> implements serializable { <nl> return result ; <nl> } <nl> public int size ( ) & & & & & & & & & & & & & & ) ; <nl> return return this . <unk> ( ) size ( ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8b4f444dcc9bc4944b61c9417c24dea30ff8c086 <nl> mode = push <nl> parent = f676cff6ef2ce2998b9b4263bc71d00bc1855019 <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / manifest . txt <nl> lib / nokogiri / html / builder . rb <nl>
ppp b / manifest . txt <nl> lib / nokogiri / html / builder . <nl>
ppp b / manifest . txt <nl> lib / nokogiri / html / builder . rb <nl> lib / nokogiri / html / document . rb <nl>
ppp b / manifest . txt <nl> lib / nokogiri / html / builder . rb <nl> lib / nokogiri / html / document . <nl>
ppp b / manifest . txt <nl> lib / nokogiri /
====NEW EXAMPLE====
ppp b / android . mk <nl> <unk> : = \ <nl> <unk> : = \ <nl> core \ <nl> ext \ <nl> \ \ <nl> <unk> : = java_libraries <nl> <unk> : = docs / html <nl>
ppp b / android . mk <nl> <unk> : = \ <nl> <unk> : = \ <nl> core \ <nl> ext \ <nl> \ \ <nl> <unk> : = java_libraries <nl> <unk> : = docs / html <nl> <nl>
ppp b / android . mk <nl> <unk> : = \ <nl> <unk> : = \ <nl> core \ <nl> ext \ <nl> \ \ <nl> <unk> : = java_libraries <nl> <unk> : = docs / <nl>
ppp b / android . mk <nl> <unk> : = \ <nl>
ppp b / android . mk <nl> <unk> : = \ <nl> <unk> : = \ <nl> core \ <nl> ext \ <nl> \ \ <nl> <unk> : = java_libraries <nl> <unk> : = docs
====NEW EXAMPLE====
ppp b / readme . md <nl> command line and gui tools
ppp b / readme . md <nl> command line and gui
ppp b / readme . md <nl> command line and
ppp b / readme . md <nl> command line and gui tools for produce java source code from android dex and apk files <nl> \ no newline at end of file <nl> * updated simplified chinese translation <nl> ] ( ( https : / / <unk> io / github . com / <unk> / jadx / ) <nl>
ppp b / readme . md <nl> command line and gui tools for produce java source code from android dex and apk files <nl> \ no newline at end of file <nl> * updated simplified chinese translation <nl> ] ( ( https : / / <unk> io / github . com / <unk> / jadx / ) ) <nl>
====NEW EXAMPLE====
ppp b / notice <nl> the original xml schemas for java ee deployment descriptors : <nl> web - <unk> . xsd <nl>
ppp b / notice <nl> the original xml schemas for java ee deployment descriptors : <nl> web - <unk> . xsd <nl> web - <unk> . xsd
ppp b / notice <nl> the original xml schemas for java ee deployment descriptors : <nl> web - <unk> . . <nl>
ppp b / notice <nl> the original xml schemas for java ee deployment descriptors : <nl> web - <unk> . xsd <nl> web - <unk> .
ppp b / notice <nl> the original xml schemas for java ee deployment descriptors : <nl>
====NEW EXAMPLE====
ppp b / changelog <nl> * let googleapi20 supports <nl>
ppp b / changelog <nl> * let googleapi20 supports oob <nl>
ppp b / changelog <nl> * let googleapi20 <nl>
ppp b / changelog <nl> * let googleapi20 supports oob <nl> * updated lithuanian ? ? ? <nl> * updated simplified chinese translation <nl> * updated lithuanian translation <nl> * storm - updated lithuanian translation <nl> force force not to instantiate stateless apis . use provided <unk> <nl> [ 2 . 1 . 0 ] <nl> * add pinterest api <nl>
ppp b / changelog <nl> * let googleapi20 supports oob <nl> * updated lithuanian ? ? ? <nl> * updated simplified chinese translation <nl> * updated lithuanian translation <nl> * storm - updated lithuanian translation <nl> force force not to instantiate stateless apis . use provided <unk> <nl> [ 2 . 1 . 0 ] <nl> * add pinterest <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> <nl>
====NEW EXAMPLE====
new files files / demo - release . apk and b / demo - release . apk differ <nl> mmm a / demo / build . gradle <nl> android { <nl> minsdkversion 8 <nl> targetsdkversion 8 <nl> versioncode 1 <nl> versionname " 1 . 0 . 4 " <nl> } <nl> buildtypes { <nl> release { <nl>
new files files / demo - release . apk and b / demo - release . apk differ <nl>
new files files / demo - release . apk and b / demo - release . apk <nl>
new files files / demo - release . apk and b / demo - release . apk differ <nl> mmm a / demo / build . gradle <nl> android { <nl> minsdkversion 8 <nl> targetsdkversion 8 <nl> versioncode 1 <nl> versionname " 1 . 0 . 4 " <nl> } <nl> buildtypes { <nl> { <nl>
new files files / demo - release . apk and b / demo - release . apk differ <nl> mmm a / demo / build . gradle <nl> android { <nl> minsdkversion 8 <nl> targetsdkversion 8 <nl> versioncode 1 <nl> versionname " 1 . 0 . 4 " <nl> } <nl> buildtypes { <nl> release <nl>
====NEW EXAMPLE====
ppp b / ultimateandroidgradle / ultimateandroidui / build . gradle <nl> dependencies { <nl>
ppp b / ultimateandroidgradle / ultimateandroidui / build . gradle <nl>
ppp b / ultimateandroidgradle / ultimateandroidui / build . gradle <nl> dependencies {
ppp b / ultimateandroidgradle / ultimateandroidui / build . gradle <nl> dependencies <nl>
ppp b / ultimateandroidgradle / ultimateandroidui / build . gradle <nl> dependencies
====NEW EXAMPLE====
ppp b / jps / src / org / jetbrains / jps / module . groovy <nl> class module extends <unk> implements <unk> { <nl> } <nl> def <unk> ( ) { <nl> return onfocuschangelistener getonfocuschangelistener ( ) { <nl> return outputpath <nl> } <nl> list < string > runtimeclasspath ( ) { <nl>
ppp b / jps / src / org / jetbrains / jps / module . groovy <nl>
ppp b / jps / src / org / jetbrains / jps / module . groovy <nl> class module extends <unk> implements <unk> { <nl> } <nl> def <unk> ( ) { <nl> return onfocuschangelistener getonfocuschangelistener ( ) { <nl> return outputpath <nl> } <nl> list < string > runtimeclasspath ( ) <nl>
ppp b / jps / src / org / jetbrains / jps / module . groovy <nl> class module extends <unk> implements <unk> { <nl> } <nl> def <unk> ( ) { <nl> return onfocuschangelistener getonfocuschangelistener ( ) { <nl> return outputpath <nl> } <nl> list < string > runtimeclasspath ( ) ; <nl>
ppp b / jps / src / org / jetbrains / jps / module . <nl>
====NEW EXAMPLE====
ppp b / settings . gradle <nl> include ' : analytics <nl>
ppp b / settings . gradle <nl> include ' : analytics . <nl>
ppp b / settings . gradle <nl> include ' : false <nl>
ppp b / settings . gradle <nl> include ' : analytics - snapshot <nl>
ppp b / settings . gradle <nl> include ' : <nl>
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / examples / objc / readme . md <nl> objective c examples <nl> = = = = = = <nl>
ppp b / examples / objc / readme . md <nl> objective c examples <nl>
ppp b / examples / objc / readme . md <nl>
ppp b / examples / objc / readme . md <nl> objective c <nl>
ppp b / examples / objc / readme . md <nl> objective c examples <nl> = = = = = = <nl> the example in this directory show typical use of objective c libraries , <nl> binaries and imports . because they build an application they they can be run <nl> on mac osx . <nl> build the top - level application with <nl>
====NEW EXAMPLE====
ppp b / src / org / parosproxy / paros / extension / history / <unk> . java <nl> public class <unk> extends extensionadaptor implements <unk> <nl> } <nl> <unk> ( <unk> ) ; <nl> <unk> . } <nl> } <nl>
ppp b / src / org / parosproxy / paros / extension / history / <unk> . java <nl> public class <unk> extends extensionadaptor implements <unk> <nl> } <nl> <unk> ( <unk> ) ; <nl> <unk> . ( ) ; <nl>
ppp b / src / org / parosproxy / paros / extension / history / <unk> . java <nl> public class <unk> extends extensionadaptor implements <unk> <nl> } <nl> <unk> ( <unk> ) ; <nl> <unk> . <unk> } <nl>
ppp b / src / org / parosproxy / paros / extension / history / <unk> . java <nl> public class <unk> extends extensionadaptor implements <unk> <nl> } <nl> <unk> ( <unk> ) ; <nl> <unk> . } <nl>
ppp b / src / org / parosproxy / paros / extension / history / <unk> . java <nl> public class <unk> extends extensionadaptor implements <unk> <nl> } <nl> <unk> ( <unk> ) ; <nl> <unk> . <unk> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / <unk> - bottom - tab - strip / src / main / java / me / <unk> / <unk> / <unk> . java <nl> class <unk> extends view <nl> if ( ( <unk> & <unk> . <unk> ) > 0 ) <nl> { <nl> textpaint . setcolor ( <unk> ) ; <nl> } <nl> else <nl> { <nl>
ppp b / <unk> - bottom - tab - strip / src / main / java / me / <unk> / <unk> / <unk> . java <nl> class <unk> extends view <nl> if ( ( <unk> & <unk> . <unk> ) > 0 ) <nl> { <nl> textpaint . setcolor ( <unk> ) ; <nl> } <nl> else <nl> { { <nl>
ppp b / <unk> - bottom - tab - strip / src / main / java / me / <unk> / <unk> / <unk> . java <nl> class <unk> extends view <nl> if ( ( <unk> & <unk> . <unk> ) > 0 ) <nl> { <nl> textpaint . setcolor ( <unk> ) ; <nl> } <nl> <nl>
ppp b / <unk> - bottom - tab - strip / src / main / java / me / <unk> / <unk> / <unk> . java <nl> class <unk> extends view <nl> if ( ( <unk> & <unk> . <unk> ) > 0 ) <nl> { <nl> textpaint . setcolor ( <unk> ) ; <nl> } <nl> else <nl>
ppp b / <unk> - bottom - tab - strip / src / main / java / me / <unk> / <unk> / <unk> . java <nl> class <unk> extends view <nl> if ( ( <unk> & <unk> . <unk> ) > 0 ) <nl> { <nl> textpaint . setcolor ( <unk> ) ; <nl> } <nl> else <nl> { <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / libs / hwui / <unk> . cpp <nl> public : <nl> } <nl> private : <nl> bool initialized = false ; <nl> double <unk> , <unk> ; <nl> double ( , <unk> ; <nl> double sum = 0 ; <nl> } ; <nl>
ppp b / libs / hwui / <unk> . cpp <nl> public : <nl> } <nl> private : <nl> bool initialized = false ; <nl> double <unk> , <unk> ; <nl> double ( , <unk> ; <nl> double sum = 0 ; <nl> } ; ; <nl>
ppp b / libs / hwui / <unk> . cpp <nl> public : <nl> } <nl> private : <nl> bool initialized = false ; <nl> double <unk> , <unk> ; <nl> double ( , <unk> ; <nl> double sum = 0 ; <nl> } } <nl>
ppp b / libs / hwui / <unk> . cpp <nl> public : <nl> } <nl> private : <nl> bool initialized = false ; <nl> double <unk> , <unk> ; <nl> double ( , <unk> ; <nl> double sum = 0 ; <nl> } <nl>
ppp b / libs / hwui / <unk> . cpp <nl> public : <nl> } <nl> private : <nl> bool initialized = false ; <nl> double <unk> , <unk> ; <nl> double ( , <unk> ; <nl> double sum = 0 ; <nl> } } ; <nl>
====NEW EXAMPLE====
ppp b / vala / <unk> . vala <nl> public class vala . <unk> : expression { <nl> var ma = new <unk> . simple ( local . name , <unk> ) ; <nl> ma . <unk> = <unk> ; <nl> ma . check ( context ) ; <nl> <unk> ( ) ; <nl> ; <nl> <unk> . <unk> ( this , ma ) ; <nl>
ppp b / vala / <unk> . vala <nl> public class vala . <unk> : expression { <nl>
ppp b / vala / <unk> . vala <nl> public class vala . <unk> : expression <nl>
ppp b / vala / <unk> . vala <nl> public class vala . <unk> : expression { <nl> var ma = new <unk> . simple ( local . name , <unk> ) ; <nl> ma . <unk> = <unk> ; <nl> ma . check ( context ) ; <nl> <unk> ( ) ; <nl> ; <nl> <unk> . <unk> ( this , ma ) ) ; <nl>
ppp b / vala / <unk> . vala <nl> public class vala . <unk> : expression { <nl> var ma = new <unk> . simple ( local . name , <unk> ) ; <nl> ma . <unk> = <unk> ; <nl> ma . check ( context ) ; <nl> <unk> ( ) ; <nl> ; <nl> <unk> . <unk> ( this , ma ; <nl>
====NEW EXAMPLE====
ppp b / debian / changelog <nl> cassandra ( 3 . 0 . 6 ) unstable ; urgency = medium medium <nl> * new
ppp b / debian / changelog <nl> cassandra ( 3
ppp b
ppp
ppp b / debian / changelog <nl> cassandra ( 3 . 0 . 6 ) unstable ; urgency = medium medium <nl> * new release <nl> * ( https : restassured ( https : [ ] ( https : / github . org ] ( https : / github . com / github . com / github . org > <nl>
====NEW EXAMPLE====
ppp b / webapps / docs / changelog . xml <nl> < / update > <nl> < fix > <nl> correct a regression introduced in apache tomcat 7 . 0 . 11 that broke <nl> <unk> <unk> list handling . ( markt ) <nl> < / fix > <nl> < / changelog > <nl> < / subsection > <nl>
ppp b / webapps / docs / changelog . xml <nl> < / update > <nl> < fix > <nl> correct a regression introduced in apache tomcat 7 . 0 . 11 that broke <nl> <unk> <unk> list handling . ( markt ) <nl> < / fix > <nl> < / changelog > <nl> < / subsection <nl>
ppp b / webapps / docs / changelog . xml <nl> < / update > <nl> < fix > <nl> correct a regression introduced in apache tomcat 7 . 0 . 11 that broke <nl> <unk> <unk> list handling . ( markt ) <nl> < / fix > <nl> < / changelog > <nl> < / > <nl>
ppp b / webapps / docs / changelog . xml <nl> < / update > <nl> < fix > <nl> correct a regression introduced in apache tomcat 7 . 0 . 11 that broke <nl> <unk> <unk> list handling . ( markt ) <nl> < / fix > <nl> < / changelog > <nl>
ppp b / webapps / docs / changelog . xml <nl> < / update > <nl> < fix > <nl> correct a regression introduced in apache tomcat 7 . 0 . 11 that broke <nl> <unk> <unk> list handling . ( markt ) <nl> < / fix > <nl> < / changelog > <nl> < / subsection subsection <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fd675f9cb97dadadfaf62c0391a81bba75c174f7 <nl> mode = push <nl> parent = f9e45f8770e3270e8de455e8b73f76fd3acdaa8c <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / samples / squidb - ios - sample / squidb - ios - sample / <unk> . m <nl> [ self <unk> : alert animated : yes completion : nil ] ; <nl> } <nl> @ @ override <nl> protected ldapauthoritiespopulator getauthoritiespoulator for dashboard widgets : [ ] ( ) ] ( ) ) ; <nl> } <nl> } <nl>
ppp b / samples / squidb - ios - sample / squidb - ios - sample / <unk> . m <nl> [ self <unk> : alert animated : yes completion : nil ] ; <nl> } <nl> @ @ override <nl> protected ldapauthoritiespopulator getauthoritiespoulator for dashboard widgets : [ ] ( ) ] ( ) ) ; <nl> } <nl> } <nl> end <nl>
ppp b / samples / squidb - ios - sample / squidb - ios - sample / <unk> . m <nl> [ self <unk> : alert animated : yes completion : nil ] ; <nl> } <nl> @ end of file <nl> protected ldapauthoritiespopulator getauthoritiespoulator for dashboard widgets : [ ] ( ) ] ( ) ; <nl> } <nl> } <nl>
ppp b / samples / squidb - ios - sample / squidb - ios - sample / <unk> . m <nl> [ self <unk> : alert animated : yes completion : nil ] ; <nl> } <nl> @ @ override <nl> protected ldapauthoritiespopulator getauthoritiespoulator for dashboard widgets : [ ] ( ) ] ( ) ; <nl> } <nl> } <nl>
ppp b / samples / squidb - ios - sample / squidb - ios - sample / <unk> . m <nl> [ self <unk> : alert animated : yes completion : nil ] ; <nl> } <nl> @ @ override <nl> protected ldapauthoritiespopulator getauthoritiespoulator for dashboard widgets : [ ] ( ) ] ( ) ) ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / rakefile <nl> def <unk> ( dll , <unk> , <unk> = [ ] ) <nl>
ppp b / rakefile <nl> def <unk> ( dll , <unk> , <unk> = [ ] <nl>
ppp
ppp b / rakefile <nl> def <unk> ( dll , <unk> , <unk> = [ ] ) <nl> if <unk> . sort ! = <unk> . sort <nl> raise " unexpected dll imports # { <unk> . inspect } in # { dll } <nl> " <nl> * end of file ( ) { } <nl> " <nl> end <nl> <unk> <unk> " a windows gem without all the <unk> <unk> . " <nl>
ppp b / rakefile <nl> def <unk> ( dll , <unk> , <unk> = [ ] ) <nl> if <unk> . sort ! = <unk> . sort <nl> raise " unexpected dll imports # { <unk> . inspect } in # { dll } <nl> " <nl> * end of file ( ) { } <nl> " <nl> end <nl> <unk> <unk> " a windows gem without all the <unk> <unk> . <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> / sdk / <unk> / stub / ext / components / products / jdk / build / <nl>
ppp b
ppp

ppp b / . gitignore <nl> / sdk / <unk> / stub / ext / components / products / jdk / build / <nl> / sdk / <unk> / stub / ext / / products / jdk / dist / / / sdk / jme3 - - - - / / / jme3 - - - laf / / / private <nl>
====NEW EXAMPLE====
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / spelling txt txt <nl> <unk> <nl> <unk> <unk> <nl> * @ override <nl> * @ override <nl> * ( demetrios papadopoulos <nl> <unk> <nl> / / a <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / spelling txt txt <nl> <unk> <nl> <unk> <unk> <nl> * @ override <nl> * @ author dpapad <nl> * <nl> * <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / spelling txt txt <nl> <unk> <nl> <unk> <unk> <nl> * @ override <nl> * @ author dpapad <nl> * @ author dpapad <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / spelling txt txt <nl> <unk> <nl> <unk> <unk> <nl> * @ override <nl> * @ author dpapad <nl> * * <nl> * <nl>
ppp b / languagetool - language - modules / de / src / main / resources / org / languagetool / resource / de / hunspell / spelling txt txt <nl> <unk> <nl> <unk> <unk> <nl> * @ override <nl> * @ author dpapad <nl> * <nl> * <unk> <nl>
====NEW EXAMPLE====
ppp b / changes . txt <nl> changes for crate data <nl>
ppp b / changes . txt <nl> changes for crate <nl>
ppp
ppp b / changes . txt <nl> changes for crate data <nl> unreleased <nl> = = = = = = = = = = <nl> \ no newline at end of file <nl> = = = = 2014 <nl> / 02 02 / 25 0 . 23 . 1 <nl> = = = = = = = = = = = = = = = = = <nl>
ppp b / changes . txt <nl> changes for crate data <nl> unreleased <nl> = = = = = = = = = = <nl> \ no newline at end of file <nl> = = = = 2014 <nl> / 02 02 / 25 0 . 23 . 1 <nl> = = = = = = = = = = = = = = = = <nl>
====NEW EXAMPLE====
ppp

ppp b / community / pom . xml <nl> < url > http : / / components . neo4j . org / $ { project . artifactid } / < / url > <nl> < properties > <nl> < short - name > $ { <nl> < / < / < / < / > <nl> < short name > > < < short - name name > <nl> / properties > <nl>
ppp b / community / pom . xml <nl> < url > http : / / components . neo4j . org / $ { project . artifactid } / < / url > <nl> < properties > <nl> < short - name > $ { <nl> < / < / < / < / > <nl> < short name > > < < short - name name > <nl> / properties properties <nl>
ppp b / community / pom . xml <nl> < url > http : / / components . neo4j . org / $ { project . artifactid } / < / url > <nl> < properties > <nl> < short - name > $ { <nl> < / < / < / < / > <nl> < short name > > < < short - name name > <nl> / properties > > <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 1769 : added a test to check local nimbus with notifier plugin <nl>
ppp b / changelog . md <nl> * storm - 1769
ppp b / changelog . md <nl> * storm - 1769 : added a test to check local nimbus with notifier plugin <nl> # # 1 . 1 . 0 <nl> * updated lithuanian translation <nl> * storm - * storm - <unk> : introduce ' whitelist ' / ' blacklist ' option to <unk> * * storm - <unk> : asynchronous <unk> <nl> * storm - <unk> : fixed help message for set_log_level command <nl>
ppp b / changelog . md <nl> * storm - 1769 : added a test to check local nimbus with notifier plugin <nl> # # 1 . 1 . 0 <nl> * updated lithuanian translation <nl> * storm - * storm - <unk> : introduce ' whitelist ' / ' blacklist ' option to <unk> * * storm - <unk> : asynchronous <unk> <nl> * storm - <unk> : fixed help message for set_log_level <nl>
ppp b / changelog . md <nl> * storm - 1769 : added a test to check local nimbus with notifier plugin <nl> # # 1 . 1 . 0 <nl> * updated lithuanian translation <nl> * storm - * storm - <unk> : introduce ' whitelist ' / ' blacklist ' option to <unk> * * storm - <unk> : asynchronous <unk> <nl> * storm - <unk> : fixed help message for set_log_level set_log_level <nl>
====NEW EXAMPLE====
ppp b / changes . md <nl> # elephant bird # <nl> # # # version 4 . 7 . # # <nl> * * fixed folders getting unneccesarily created is made available under the mit license <nl> * added spanish = ready ] ( bowei zhang via smarthi ( https : / github . com / # # # # # <nl>
ppp b / changes . md <nl> # elephant bird # <nl> # # # version 4 . 7 . # # <nl> * * fixed folders getting unneccesarily created is made available under the mit license <nl> * added spanish = ready ] ( bowei zhang via smarthi ( https : / github . com / # # # # # # <nl>
ppp b / changes . md <nl> # elephant bird # <nl> # # # version 4 . 7 . # # <nl> * * fixed folders getting unneccesarily created is made available under the mit license <nl> * added spanish = ready ] ( bowei zhang via smarthi ( https : / github . com / # # # # # issue <nl>
ppp b / changes . md <nl> # elephant bird # <nl> # # # version 4 . 7 . # # <nl> * * fixed folders getting unneccesarily created is made available under the mit license <nl> * added spanish = ready ] ( bowei zhang via smarthi ( https : / github . com / # # # # # # issue <nl>
ppp b / changes . md <nl> # elephant bird # <nl> # # # version 4 . 7 . # # <nl> * * fixed folders getting unneccesarily created is made available under the mit license <nl> * added spanish = ready ] ( bowei zhang via smarthi ( https : / github . com / # # # # # # issue .
====NEW EXAMPLE====
ppp b / value / pom . xml <nl> < dependency > <nl>
ppp b / value / pom . xml <nl> < dependency > <nl> < groupid > com . google . truth < / groupid <nl>
ppp b / value / pom . xml <nl> < dependency > <nl> < groupid > com . google . truth < / groupid > <nl> < artifactid > truth < / artifactid > <nl> < version > 0 . 0 . 2 - < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < / dependencies > <nl>
ppp b / value / pom . xml <nl> < dependency > <nl> < groupid > com . google . truth < / groupid > <nl> < artifactid > truth < / artifactid > <nl> < version > 0 . 0 . 2 - < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < / > <nl>
ppp b / value / pom . xml <nl> < dependency > <nl> < groupid > com . google . truth < / groupid > <nl> < artifactid > truth < / artifactid > <nl> < version > 0 . 0 . 2 - < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl> < / dependencies <nl>
====NEW EXAMPLE====
ppp b / src / com / facebook / buck / apple / <unk> . java <nl>
ppp b / src / com / facebook / buck / apple / <unk> . java <nl> public class <unk> extends abstractbuildrule implements <unk> , <nl>
ppp b / src / com / facebook / buck / apple / <unk> . java <nl> public class <unk> extends abstractbuildrule implements <unk> <nl>
ppp b / src / com / facebook / buck / apple / <unk> . <nl>
ppp b / src / com / facebook / buck / apple / <unk> . java
====NEW EXAMPLE====
ppp b / util - taglib / src / com / liferay / taglib / ui / <unk> . java <nl> public class <unk> extends includetag { <nl> } <nl> protected string <unk> ( ) { <nl> if ( validator . isnull ( <unk> ) ) { <nl> return <unk> ; <nl> } <nl>
ppp b / util - taglib / src / com / liferay / taglib / ui / <unk> . java <nl> public class <unk> extends includetag { <nl> } <nl> protected string <unk> ( ) { <nl> if ( validator . isnull ( <unk> ) ) { <nl> return <unk> ; <nl> <nl>
ppp b / util - taglib / src / com / liferay / taglib / ui / <unk> . java <nl> public class <unk> extends includetag { <nl> } <nl> protected string <unk> ( ) { <nl> if ( validator . isnull ( <unk> ) ) { <nl> return <unk> ; <nl> } <nl> <nl>
ppp b / util - taglib / src / com / liferay / taglib / ui / <unk> . java <nl> public class <unk> extends includetag { <nl> } <nl> protected string <unk> ( ) { <nl> if ( validator . isnull ( <unk> ) ) { <nl> return <unk> ; <nl> }
ppp b / util - taglib / src / com / liferay / taglib / ui / <unk> . java <nl> public class <unk> extends includetag { <nl> } <nl> protected string <unk> ( ) { <nl> if ( validator . isnull ( <unk> ) ) { <nl> return <unk> ; <nl>
====NEW EXAMPLE====
ppp b / changelog . textile <nl> h3 . version 0 . 4 . 0 ( not officially released yet ) <nl>
ppp b / changelog . textile <nl> h3 . version 0 . 4 . 0 ( not officially released yet <nl>
ppp b / changelog . textile <nl> h3 . version
ppp
ppp b / changelog . textile <nl> h3 . version 0 . 4 . 0 ( not officially released yet ) <nl> < / dependency > <nl> ` ` ` <nl> * bumped to support hadoop 1 . 2 . * updated lithuanian translation <nl> hadoop hadoop 1 . 2 . 1 <nl> * bumped to support titan 0 4 . 0 <nl> * bumped to support tinkerpop 2 . 4 . 0 <nl>
====NEW EXAMPLE====
ppp b / osmand / src / net / osmand / plus / <unk> / <unk> . java <nl> public class <unk> extends osmandplugin { <nl> } else { <nl> if ( <unk> ! = null ) { <nl> mapview . <unk> ( <unk> ) ; <nl> activity . <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } <nl>
ppp b / osmand / src / net / osmand / plus / <unk> / <unk> . java <nl>
ppp b / osmand / src / net / osmand / plus / <unk> / <unk> . java <nl> public class <unk> extends osmandplugin { <nl> } else { <nl> if ( <unk> ! = null ) { <nl> mapview . <unk> ( <unk> ) ; <nl> activity . <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } } <nl>
ppp b / osmand / src / net / osmand / plus / <unk> / <unk> . java <nl> public class <unk> extends osmandplugin { <nl> } else { <nl> if ( <unk> ! = null ) { <nl> mapview . <unk> ( <unk> ) ; <nl> activity . <unk> ( ) ; <nl> <unk> ) ; <nl> } <nl> } <nl>
ppp b / osmand / src / net / osmand / plus / <unk> / <unk> . java <nl> public class <unk> extends osmandplugin { <nl> } else { <nl> if ( <unk> ! = null ) { <nl> mapview . <unk> ( <unk> ) ; <nl> activity . <unk> ( ) ; <nl> ( ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 14 . 0 . 1 ' <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 14 . 0 . 1 ' <nl> nettyversion = ' 4 . 0 . 7 . final ' <nl> slf4jversion = ' 1 . 7 . 5 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 2 . 2 ' <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 14 . 0 . 1 <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaversion = ' 14 . 0 . 1 ' <nl> nettyversion = ' 4 . 0 . 7 . final ' <nl> slf4jversion = ' 1 . 7 . 5 ' <nl> commonsioversion = ' 2 . 4 ' <nl> jacksonversion = ' 2 . 2 . 2 <nl>
ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # 1 . 3 . 4 april 6 , 2016 <nl>
ppp b / changelog . md <nl> # 1 . 3 . 4 april 6 , 2016 <nl> * add support for drawing geojson <nl>
ppp b / changelog . md <nl> # 1 . 3 . 4 april 6 , 2016 <nl> * add support for drawing geojson <nl> *
ppp b / changelog . md <nl> # 1 . 3
ppp b / changelog . md <nl> # 1 . 3 . 4 april 6 , 2016 <nl> * add support for drawing geojson <nl> * an
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / jooq - test / src / org / jooq / test / <unk> . java <nl>
ppp b / jooq - test / src / org / jooq / test / <unk> . <nl>
ppp b / jooq - test / src / org / jooq / test / <unk> . java <nl> public abstract class <unk> < <nl> @ test <nl> public void <unk> ( ) throws exception { <nl> connection connection ( ) ; <nl> connection . <unk> ( false ) ; <nl> < < integer > count = create ( ) . count ( ) ; <nl>
ppp b / jooq - test / src / org / jooq / test / <unk> . java <nl> public abstract class <unk> < <nl> @ test <nl> public void <unk> ( ) throws exception { <nl> connection connection ( ) ; <nl> connection . <unk> ( false ) ; <nl> < < integer > count = create ( ) . count ( ; <nl>
ppp b / jooq - test / src / org / jooq / test / <unk> . java <nl> public abstract class <unk> < <nl> @ test <nl> public void <unk> ( ) throws exception { <nl> connection connection ( ) ; <nl> connection . <unk> ( false ) ; <nl> < < integer > count = create ( ) . count ( ) ) ; <nl>
====NEW EXAMPLE====
ppp b / build . xml <nl> < arg line = " push " / > <nl> < / exec > <nl>
ppp b / build . xml <nl> < arg line = " push " / > <nl>
ppp b / build . xml <nl> < arg line = " push " / > <nl> < / exec > <nl> < exec executable = " git " failonerror = " true " > <nl> < arg line = = push <nl> = = " push - - tags " / > <nl> < / exec > <nl> < / target > <nl>
ppp b / build . xml <nl> < arg line = " push " / <nl>
ppp b / build . xml <nl> < arg line = " push " / > <nl> < / exec <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl>
ppp
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * next release * * <nl> * updated slovak translation <nl> * updated lithuanian translation <nl> open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl> * * version 1 . 99 . 37 beta * * <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * next release * * <nl> * updated slovak translation <nl> * updated lithuanian translation <nl> open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl> * * version 1 . 99 . 37 beta * <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * * next release * * <nl> * updated slovak translation <nl> * updated lithuanian translation <nl> open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl> * * version 1 . 99 . 37 beta * * * <nl>
====NEW EXAMPLE====
ppp b / <unk> . sh <nl> # ! / bin / bash <nl> ideaversion = " 139 . <unk> . 6 " <nl> if [ ! - d . / idea - ic ] ; then <nl> # get our idea dependency <nl>
ppp b / <unk> . sh <nl> # ! / bin / bash <nl> ideaversion = " 139 . <unk> . 6 " <nl> if [ ! - d . / idea - ic ] ; then <nl> # get our idea <nl>
ppp b / <unk> . sh <nl> # ! / bin / bash <nl> ideaversion = " 139 . <unk> . 6 " <nl> if [ ! - d . / idea - ic ] ; then <nl> # get our idea dependency
ppp b / <unk> . sh <nl> # ! / bin / bash <nl>
ppp b / <unk> . sh <nl> # ! / bin / bash <nl> ideaversion = " 139 . <unk> . 6 " <nl> if [ ! - d . / idea - ic ] ; then <nl> # get our idea dependency <nl> <nl>
====NEW EXAMPLE====
ppp b / dev / <unk> . sh <nl> function <unk> ( ) { <nl>
ppp b / dev / <unk> . sh <nl> function <unk> ( ) <nl>
ppp b / dev / <unk> . sh <nl> function <unk> (
ppp b / dev / <unk> . sh <nl> function <unk> ( )
ppp b / dev / <unk> . sh <nl> function <unk> ( ) {
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = a38d0ce3613ed30b41448da1d9e19dd798cc4014 <nl> mode = push <nl> parent = 3a0e3ea0087648b38a309327ed0efea70cd042f8 <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2664d08337baeb4df446b34da124a5d64a23980e <nl> mode = push <nl> parent = 04cd619e58614cb6a9d5a145fc34cff0b30da937 <nl> remote = git @ github . com : liferay / com - liferay - trash . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / trash / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 2664d08337baeb4df446b34da124a5d64a23980e <nl> mode = push <nl> parent = 04cd619e58614cb6a9d5a145fc34cff0b30da937 <nl> remote = git @ github . com : liferay / com - liferay - trash . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> in your activity , add this single line in ccc onactivityresult ( int requestcode , i <nl> ` ` ` <nl> <unk> . <unk> ( requestcode , resultcode , data ) ; <nl> ` ` ` ` <nl> contributing = = = = = = = = = = = <nl>
ppp b / readme . md <nl> in your activity , add this single line in ccc onactivityresult ( int requestcode , i <nl> ` ` ` <nl> <unk> . <unk> ( requestcode , resultcode , data ) ; <nl> ` ` ` ` <nl> contributing = = = = = = = = = = = = <nl>
ppp b / readme . md <nl> in your activity , add this single line in ccc onactivityresult ( int requestcode , i <nl> ` ` ` <nl> <unk> . <unk> ( requestcode , resultcode , data ) ; <nl> ` ` ` ` <nl> contributing = = = = = = = = = = <nl>
ppp b / readme . md <nl> in your activity , add this single line in ccc onactivityresult ( int requestcode , i <nl> ` ` ` <nl> <unk> . <unk> ( requestcode , resultcode , data ) ; <nl> ` ` ` ` <nl> contributing = = = = = = = = = = =
ppp b / readme . md <nl> in your activity , add this single line in ccc onactivityresult ( int requestcode , i <nl> ` ` ` <nl> <unk> . <unk> ( requestcode , resultcode , data ) ; <nl> ` ` ` ` <nl> contributing = = = = = = = = = = = =
====NEW EXAMPLE====
ppp b / changelog . rdoc <nl> * fixed bug in xml : : node # <unk> for certain edge cases <nl>
ppp b / changelog . rdoc <nl> * fixed bug in xml : : node # <unk> for certain edge <nl>
ppp b / changelog . rdoc <nl> * fixed bug in xml : : node # <unk> for certain edge cases <nl> * fixed load path issue with jruby under windows . gh # 160 . <nl> * xslt # apply_to will honor the " " method " ! [ ] ( ) <nl> * updated japanse . will honor the " output method " thanks <unk> ! <nl> = = = 1 1 . 4 . 0 / 2009 / 10 / 30 <nl>
ppp b / changelog . rdoc <nl> * fixed bug in xml : : node # <unk> for certain edge cases <nl> * fixed load path issue with jruby under windows . gh # 160 . <nl> * xslt # apply_to will honor the " " method " ! [ ] ( ) <nl> * updated japanse . will honor the " output method " thanks <unk> ! <nl> = = = 1 1 . 4 . 0 / 2009 / 10 / <nl>
ppp b / changelog . rdoc <nl> * fixed bug in xml : : node # <unk> for certain edge cases <nl> * fixed load path issue with jruby under windows . gh # 160 . <nl> * xslt # apply_to will honor the " " method " ! [ ] ( ) <nl> * updated japanse . will honor the " output method " thanks <unk> ! <nl> = = = 1 1 . 4 . 0 / 2009 / 10 30 <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> without preview : <nl> # # create libs / armeabi <nl> run the following command in the library folder . make sure you have android ndk ndk in your path <nl> cd native <nl>
ppp b / readme . md <nl> without preview : <nl> # # create libs / armeabi <nl> run the following command in the library folder . make sure you have android ndk ndk in your path <nl>
ppp b / readme . md <nl> without preview : <nl> # # create libs / armeabi <nl>
ppp b / readme . md <nl> without preview : <nl> # # create libs / armeabi <nl> run the following command in the library folder . make sure you have android ndk ndk in your path <nl> cd cd <nl>
ppp b / readme . md <nl> without preview : <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> upgrading <nl> * download the new version <nl>
ppp b / readme . md <nl> upgrading <nl>
ppp b / readme . md <nl> upgrading <nl> * download the new <nl>
ppp
ppp b / readme . md <nl> upgrading <nl> * download the new version <nl> * install the new version over the previous version <nl> * reboot your device <nl> when following this procedure , , data will will not leak <nl> when using charsequence instead of file <nl> when using plugman this procedure , your data will not leak the xposed xposed part of xprivacy keeps running . <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 . " <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> _resharper * / <nl> . ds_store <nl> * . lock <nl>
ppp b / . gitignore <nl> _resharper * / <nl> . ds_store <nl> * . <nl>
ppp b / . gitignore <nl> _resharper * / <nl> . ds_store <nl> * . lock <nl> * . iml <nl>
ppp b / . gitignore <nl> _resharper * / <nl> . ds_store <nl> * . lock <nl> * <nl> * . iml <nl>
ppp b / . gitignore <nl> _resharper * / <nl> . ds_store <nl> * . lock <nl> * . swp <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1408 : automatic back pressure <nl> * storm - storm - 1408 : clean up the build directory created by tests <nl> * storm - 1425 : tick tuples should be acked like normal tuples <nl> * storm - 1432 : spurious failure in storm - kafka <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1408 : automatic back pressure <nl> * storm - storm - 1408 : clean up the build directory created by tests <nl> * storm - 1425 : tick tuples should be acked like normal tuples <nl> * storm - 1432 : spurious failure in storm - kafka test <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1408 : automatic back pressure <nl> * storm - storm - 1408 : clean up the build directory created by tests <nl> * storm - 1425 : tick tuples should be acked like normal tuples <nl> * storm - 1432 : spurious failure in storm - test <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1408 : automatic back pressure <nl> * storm - storm - 1408 : clean up the build directory created by tests <nl> * storm - 1425 : tick tuples should be acked like normal tuples <nl> * storm - 1432 : spurious failure in storm - kafka kafka <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> android : <nl>
ppp b / . travis . yml <nl> android : <nl> -
ppp b / . travis . yml <nl> android : <nl> script : <nl>
ppp b / . travis . yml <nl> android : <nl> - -
ppp b / . travis . yml <nl> android : <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / source / com / intellij / codeinsight / hint / actions / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> protected boolean <unk> ( project project , editor editor , psifile file ) { <nl> return ) ; <nl> } <nl> \ no newline at end of file <nl>
ppp b / source / com / intellij / codeinsight / hint / actions / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> protected boolean <unk> ( project project , editor editor , psifile file ) { <nl> return ; <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / source / com / intellij / codeinsight / hint / actions / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> protected boolean <unk> ( project project , editor editor , psifile file ) { <nl> return ; <nl> } <nl> \ no newline at end of file <nl>
ppp b / source / com / intellij / codeinsight / hint / actions / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> protected boolean <unk> ( project project , editor editor , psifile file ) { <nl> return ; <nl> } <nl> } <nl>
ppp b / source / com / intellij / codeinsight / hint / actions / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> protected boolean <unk> ( project project , editor editor , psifile file ) { <nl> return ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / gradle / unit - test . gradle <nl> def createtesttaskwithoutsuffix ( string name , includes , excludes ) { <nl> classpath = sourcesets . test . runtimeclasspath + project . rootproject . configurations . coverage <nl> testclassesdir = sourcesets . test . classesdir <nl> forkevery } <nl> test . dependson task <nl> task . dependson corejar <nl>
ppp b / gradle / unit - test . gradle <nl> def createtesttaskwithoutsuffix ( string name , includes , excludes ) { <nl> classpath = sourcesets . test . runtimeclasspath + project . rootproject . configurations . coverage <nl> testclassesdir = sourcesets . test . classesdir <nl> forkevery } <nl>
ppp b / gradle / unit - test . gradle <nl> def createtesttaskwithoutsuffix ( string name , includes , excludes ) { <nl>
ppp b / gradle / unit - test . gradle <nl> def createtesttaskwithoutsuffix ( string name , includes , excludes ) { <nl> classpath = sourcesets . test . runtimeclasspath + project . rootproject . configurations . coverage <nl> testclassesdir = sourcesets . test . classesdir <nl> forkevery } <nl> test . dependson <nl>
ppp b / gradle / unit - test . gradle <nl> def createtesttaskwithoutsuffix ( string name , includes , excludes ) { <nl> classpath = sourcesets . test . runtimeclasspath + project . rootproject . configurations . coverage <nl> testclassesdir = sourcesets . test . classesdir <nl> forkevery } <nl> test . dependson task <nl> task . dependson <nl>
====NEW EXAMPLE====
ppp b / grails - resources / src / grails / grails - app / conf / datasource . groovy <nl> environments { <nl> datasource { <nl>
ppp b / grails - resources / src / grails / grails - app / conf / datasource . groovy <nl> environments { <nl>
ppp b / grails - resources / src / grails / grails - app / conf / datasource . groovy <nl>
ppp b / grails - resources / src / grails / grails - app / conf / datasource . groovy <nl> environments <nl>
ppp b / grails - resources / src / grails / grails - app / conf / datasource . <nl>
====NEW EXAMPLE====
ppp b / changelog . txt <nl> * lenient utf - 8 to utf - 16 transcoding by inserting replacement characters . <nl>
ppp b / changelog . txt <nl> * lenient utf - 8 to utf - 16 transcoding by inserting replacement characters <nl>
ppp b / changelog . txt <nl> * lenient utf - 8 to utf - 16 transcoding by inserting replacement characters . <nl> * adding more logging capabilities at the jni level . <nl> * added proper encryption support . note : the key key has been increased from bytes bytes to bytes ( ( example . 1 . strip bytes ) . ( see example ) <nl> 0 . 76 . . 0 <nl> * realmobjects can now be imported using json . <nl>
ppp b / changelog . txt <nl> * lenient utf - 8 to utf - 16 transcoding by inserting replacement characters . <nl> * adding more logging capabilities at the jni level . <nl> * added proper encryption support . note : the key key has been increased from bytes bytes to bytes ( ( example . 1 . strip bytes ) . ( see example ) <nl> 0 . 76 . . 0 <nl> * realmobjects can now be imported using json <nl>
ppp b / changelog . txt <nl> * lenient utf - 8 to utf - 16 transcoding by inserting replacement characters . <nl> * adding more logging capabilities at the jni level . <nl> * added proper encryption support . note : the key key has been increased from bytes bytes to bytes ( ( example . 1 . strip bytes ) . ( see example ) <nl> 0 . 76 . . 0 <nl> * realmobjects can now be imported using . <nl>
====NEW EXAMPLE====
ppp b / design / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> compilesdkversion 22 <nl> buildtoolsversion " 22 . 0 . 1 " <nl> defaultconfig { <nl> minsdkversion 9 <nl>
ppp b / design / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> compilesdkversion 22 <nl> buildtoolsversion " 22 . 0 . 1 " <nl> defaultconfig { <nl> minsdkversion <nl>
ppp b / design / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> compilesdkversion 22 <nl> buildtoolsversion " 22 . 0 . 1 " <nl> defaultconfig { <nl> minsdkversion 9 <nl> <nl>
ppp b / design / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> compilesdkversion 22 <nl> buildtoolsversion " 22 . 0 . 1 " <nl> defaultconfig { <nl> minsdkversion 9
ppp b / design / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> compilesdkversion 22 <nl> buildtoolsversion " 22 . 0 . 1 " <nl> defaultconfig { <nl>
====NEW EXAMPLE====
ppp b / packaging / tools / ha - ops / with
ppp b / packaging / tools / ha - ops / with - chef / . gitignore <nl> * ~ <nl> \ no newline at end of file <nl> \ <nl> * <nl> * / target / <nl> / target / <nl>
ppp b / packaging / tools / ha - ops /
ppp b / packaging / tools / ha - ops / with - chef / . gitignore <nl> * ~ <nl> \ no newline at end of file <nl> \ <nl> * <nl> * / target / <nl> / target / <nl> <nl>
ppp b / packaging / tools / ha - ops / with - chef / . gitignore <nl> * ~ <nl> \ no newline at end of file <nl> \ <nl> * <nl> * / target / <nl> / target / / <nl>
====NEW EXAMPLE====
ppp b / python / helpers / pycharm / tcunittest . py <nl> class teamcitytestresult ( <unk> ) : <nl>
ppp b / python / helpers / pycharm / tcunittest . py <nl> class teamcitytestresult ( <unk> ) <nl>
ppp b / python / helpers / pycharm / tcunittest . py <nl>
ppp b / python / helpers / pycharm / tcunittest . py <nl> class teamcitytestresult ( <unk> ) : <nl> def <unk> ( self , test , reason ) : <nl> self . . <unk> ( ) <nl> . <unk> ( test ) <nl> self . messages . <unk> ( self <unk> ( test ) , , message = reason ) <nl> def <unk> ( self , test ) <nl>
ppp b / python / helpers / pycharm / tcunittest . py <nl> class teamcitytestresult ( <unk> ) : <nl> def <unk> ( self , test , reason ) : <nl> self . . <unk> ( ) <nl> . <unk> ( test ) <nl> self . messages . <unk> ( self <unk> ( test ) , , message = reason ) <nl> def <unk> ( self , test ) : <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / > <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name name <nl>
ppp b / pom . xml <nl> < groupid > com . zaxxer < / groupid > <nl> < artifactid > hikaricp < / artifactid > <nl> < version > 1 . 3 . 2 - snapshot < / version > <nl> < packaging > bundle < / packaging > <nl> < name > hikaricp < / name > <nl> > <nl>
====NEW EXAMPLE====
ppp b / querydsl - lucene5 / readme . md <nl> # # querydsl lucene 5 <nl> the lucene module provides integration with the lucene 4 indexing library . <nl> * * maven integration * * <nl>
ppp b / querydsl - lucene5 / readme . md <nl> # # querydsl lucene 5 <nl> the lucene module provides integration with the lucene 4 indexing library . <nl> * * maven integration * * <nl> <nl>
ppp b / querydsl - lucene5 / readme . md <nl> # # querydsl lucene 5 <nl> the lucene module provides integration with the lucene 4 indexing library . <nl> * * maven integration * <nl>
ppp b / querydsl - lucene5 / readme . md <nl> # # querydsl lucene 5 <nl> the lucene module provides integration with the lucene 4 indexing library . <nl> * * maven integration * * * <nl>
ppp b / querydsl - lucene5 / readme . md <nl> # # querydsl lucene 5 <nl> the lucene module provides integration with the lucene 4 indexing library . <nl> * * maven integration * *
====NEW EXAMPLE====
ppp b / core / res / res / layout - land / <unk> . xml <nl>
ppp b / core / res / res / layout - land / <unk> . <nl>
ppp
ppp b / core / res / res / layout - land
ppp b / core / res / res / layout - land / <unk> . xml <nl> < include layout = " @ layout / <unk> " <nl> android : layout_width = " 0dp " <nl> android : layout_weight = " . 45 " <nl> : layout_weight = " . 45 " / > <nl> < com . android . internal . policy . impl . keyguard . <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / portlet / layouts_admin / tree_js . jsp <nl> if ( ! selectabletree ) { <nl> { <nl> cssclass : cssclass , <nl> label : newnode . label , <nl> title : title , <nl> } <nl> ) ; <nl> } <nl>
ppp b / portal - web / docroot / html / portlet / layouts_admin / tree_js . jsp <nl> if ( ! selectabletree ) { <nl> { <nl> cssclass : cssclass , <nl> label : newnode . label , <nl> title : title , <nl> } <nl> ) ; } <nl>
ppp b / portal - web / docroot / html / portlet / layouts_admin / tree_js . jsp <nl> if ( ! selectabletree ) { <nl> { <nl> cssclass : cssclass , <nl> label : newnode . label , <nl> title : title , <nl> } <nl> ) ; <nl> <nl>
ppp b / portal - web / docroot / html / portlet / layouts_admin / tree_js . jsp <nl> if ( ! selectabletree ) { <nl> { <nl> cssclass : cssclass , <nl> label : newnode . label , <nl> title : title , <nl> } <nl> ) ; <nl>
ppp b / portal - web / docroot / html / portlet / layouts_admin / tree_js . jsp <nl> if ( ! selectabletree ) { <nl> { <nl> cssclass : cssclass , <nl> label : newnode . label , <nl> title : title , <nl> } <nl> ) ; <nl> }
====NEW EXAMPLE====
ppp b / platform / util / src / com / intellij / ui / <unk> . java <nl> public class <unk> extends color { <nl> @ notnull <nl> @ override <nl> public color produce ( ) { <nl> return uiutil . <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } ) ; <nl>
ppp b / platform / util / src / com / intellij / ui / <unk> . java <nl> public class <unk> extends color { <nl> @ notnull <nl> @ override <nl> public color produce ( ) { <nl> return uiutil . <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } ) ) ; <nl>
ppp b / platform / util / src / com / intellij / ui / <unk> . java <nl> public class <unk> extends color { <nl> @ notnull <nl> @ override <nl> public color produce ( ) { <nl> return uiutil . <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } ; <nl>
ppp b / platform / util / src / com / intellij / ui / <unk> . java <nl>
ppp b / platform / util / src / com / intellij / ui / <unk> . java <nl> public class <unk> extends color { <nl> @ notnull <nl> @ override <nl> public color produce ( ) { <nl> return uiutil . <unk> ( ) ; <nl> <unk> ( ) ; <nl> } <nl> } ) ) <nl>
====NEW EXAMPLE====
ppp b / wordpress / src / main / androidmanifest . xml <nl> < ! - - comments activities - - > <nl>
ppp b / wordpress / src / main / androidmanifest . xml <nl> < ! - - comments activities - - > <nl> < activity <nl>
ppp b / wordpress / src / main / androidmanifest . xml <nl>
ppp b / wordpress / src / main / androidmanifest . xml <nl> < ! - - comments activities - - > <nl> < activity <nl> android : name = " . ui . comments . <unk> " <nl> android : orientation | screensize | screensize | screensize <nl> android : theme = " @ style style <unk> . noactionbar " / > <nl> < activity <nl> android : name = " . ui . comments . <unk> " <nl>
ppp b / wordpress / src / main / androidmanifest . xml <nl> < ! - - comments activities - - > <nl> < activity <nl> android : name = " . ui . comments . <unk> " <nl> android : orientation | screensize | screensize | screensize <nl> android : theme = " @ style style <unk> . noactionbar " / > <nl> < activity <nl> android : name = " . ui . comments . <unk> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> config / database . yml <nl> config / mongodb . yml <nl> config / graphs . yml <nl>
ppp b / . gitignore <nl> config / database . yml <nl>
ppp b / . gitignore <nl> config / database . yml
ppp b / . gitignore <nl> config / database
ppp b / . gitignore <nl> config / database . yml <nl> config / mongodb . yml <nl> config / graphs . yml <nl> * updated simplified chinese translation <nl> . yml <nl> build / / builds / <nl> build / logs / * * <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / docs / source / manual / index . rst <nl> user manual <nl> : <unk> : 1 <nl>
ppp b / docs / source / manual / index . rst <nl> user manual <nl> : <unk>
ppp b / docs / source / manual / index . rst <nl> user manual <nl>
ppp b / docs / source / manual / index . rst <nl>
ppp b / docs / source / manual / index . rst <nl> user <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> target / <nl> . patch <nl> * . iml <nl> . ds_store <nl>
ppp b / . gitignore <nl> target / <nl> . patch <nl> * . iml <nl> . ds_store <nl> <nl>
ppp b / . gitignore <nl> target / <nl> . patch <nl> * . iml <nl> . ds_store <nl> <nl> ds_store <nl>
ppp b / . gitignore <nl> target / <nl> . patch <nl> * . iml <nl> . ds_store <nl> ds_store <nl>
ppp b / . gitignore <nl> target / <nl> . patch <nl> * . iml <nl> . ds_store <nl> iml <nl>
====NEW EXAMPLE====
ppp b / react / executors / <unk> . mm <nl> struct <unk> { <nl> @ interface <unk> : nsobject < <unk> > <nl>
ppp b / react / executors / <unk> . mm <nl> struct <unk> { <nl> @ interface <unk> : nsobject < <unk> <nl>
ppp b / react / executors / <unk> . mm <nl> struct <unk> { <nl> @ interface <unk> : nsobject < <unk> > <nl> @ property ( nonatomic , <unk> , readonly
ppp b / react / executors / <unk> . mm <nl> struct <unk> { <nl> @ interface <unk> : nsobject < <unk> > <nl> @ property ( nonatomic , <unk> , readonly )
ppp b / react / executors / <unk> . mm <nl> struct <unk> { <nl> @ interface <unk> : nsobject < <unk> > <nl> @ property ( nonatomic , <unk> , readonly ) <nl>
====NEW EXAMPLE====
ppp b / test / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> } <nl>
ppp b / test / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> } <nl> <nl>
ppp b / test / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> <nl>
ppp b / test / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> }
ppp b / test / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 1 . 0 <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / cpp / core / include / core / system / process . hpp <nl> struct <unk> <nl> <unk> ( ) <nl> # ifdef _win32 <nl> : <unk> ( false ) , <nl> <unk> ( ( false ) <nl> <unk> ( false ) , <nl> <unk> ( false ) , <nl> <unk> ( false ) , <nl>
ppp b / src / cpp / core / include / core / system / process . hpp <nl> struct <unk> <nl> <unk> ( ) <nl> # ifdef _win32 <nl> : <unk> ( false ) , <nl> <unk> ( ( false ) <nl> <unk> ( false ) , <nl> <unk> ( false ) , <nl> <unk> ( false ) <nl>
ppp b / src / cpp / core / include / core / system / process . hpp <nl> struct <unk> <nl> <unk> ( ) <nl> # ifdef _win32 <nl> : <unk> ( false ) , <nl> <unk> ( ( false ) <nl> <unk> ( false ) , <nl> <unk> ( false ) , <nl> <unk> ( false ) ) <nl>
ppp b / src / cpp / core / include / core / system / process . hpp <nl> struct <unk> <nl> <unk> ( ) <nl>
ppp b / src / cpp / core / include / core / system / process . hpp <nl> struct <unk> <nl>
====NEW EXAMPLE====
ppp b / modules / cpr / src / main / java / org / atmosphere / cpr / atmosphereframework . java <nl> public class atmosphereframework implements servletcontextprovider { <nl> } <nl> } <nl> protected void <unk> ( ) { <nl> if ( <unk> ) return ; <nl> if ( <unk> = = null ) { <nl> try { <nl>
ppp b / modules / cpr / src / main / java / org / atmosphere / cpr / atmosphereframework . java <nl> public class atmosphereframework implements servletcontextprovider { <nl> } <nl> } <nl> protected void <unk> ( ) { <nl> if ( <unk> ) return ; <nl> if ( <unk> = = null ) { <nl> try try <nl>
ppp b / modules / cpr / src / main / java / org / atmosphere / cpr / atmosphereframework . java <nl> public class atmosphereframework implements servletcontextprovider { <nl> } <nl> } <nl> protected void <unk> ( ) { <nl> if ( <unk> ) return ; <nl> if ( <unk> = = null ) { <nl>
ppp b / modules / cpr / src / main / java / org / atmosphere / cpr / atmosphereframework . java <nl> public class atmosphereframework implements servletcontextprovider { <nl> } <nl> } <nl> protected void <unk> ( ) { <nl> if ( <unk> ) return ; <nl> if ( <unk> = = null ) { <nl> try <nl>
ppp b / modules / cpr / src / main / java / org / atmosphere / cpr / atmosphereframework . java <nl> public class atmosphereframework implements servletcontextprovider { <nl> } <nl> } <nl> protected void <unk> ( ) { <nl> if ( <unk> ) return ; <nl> if ( <unk> = = null ) { <nl> { <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / css / portal / device_preview . css <nl> @ import " compass " ; <nl>
ppp b / portal - web / docroot / html / css / portal / device_preview . css <nl> @ import " compass " ; <nl> @
ppp b / portal - web / docroot / html / css / portal / device_preview . css <nl> @ import " compass ; <nl>
ppp b / portal - web / docroot / html / css / portal / device_preview . css <nl>
ppp b / portal - web / docroot / html / css / portal / device_preview . css <nl> @ import " compass " ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / profile > <nl>
ppp b / pom . xml <nl> < / profile > <nl> < profile > <nl> < id > jdk - 8 - plus < / id > <nl> < / > <nl>
ppp b / pom . xml <nl> < / profile <nl>
ppp b / pom . xml <nl> < / profile > <nl> < profile > <nl> < id > jdk - 8 - plus < / id > <nl> \ no newline at end of downloading wikipedia dataset " < / < / < / id > <nl> < build > <nl> < plugins > <nl> < plugin > <nl>
ppp b / pom . xml <nl> < / profile > <nl> < profile > <nl> < id > jdk - 8 - plus < / id > <nl> \ no newline at end of downloading wikipedia dataset " < / < / < / id > <nl> < build > <nl> < plugins > <nl> < plugin > <nl> > <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < <unk> > <nl> < <unk> > project < / <unk> > <nl> < / <unk> > <nl> \ no newline at end of file <nl> < / configuration > <nl> < executions > > <nl> < execution > <nl>
ppp b / pom . xml <nl> < <unk> > <nl>
ppp b / pom . xml <nl> < <unk> > <nl> < <unk> > project < / <unk> > <nl> < / <unk> > <nl> \ no newline at end of file <nl> < / configuration > <nl> < executions > > <nl> < execution > <nl> <nl>
ppp b / pom . xml <nl> < <unk> > <nl> < <unk> > project < / <unk> > <nl> < / <unk> > <nl> \ no newline at end of file <nl> < / configuration > <nl> < executions > > <nl> < execution > > <nl>
ppp b / pom . xml <nl> < <unk> > <nl> < <unk> > project < / <unk> > <nl> < / <unk> > <nl> \ no newline at end of file <nl> < / configuration > <nl> < executions > > <nl> < execution >
====NEW EXAMPLE====
ppp b / src / com / owncloud / android / services / observer / <unk> . java <nl>
ppp b / src / com / owncloud / android / services / observer / <unk> . <nl>
ppp b / src / com / owncloud / android / services / observer / <unk> . java <nl> public class <unk> extends service <nl>
ppp
ppp b / src / com / owncloud / android / services / observer / <unk> . java <nl> public class <unk> extends service { <nl> } else { <nl> <unk> . d ( tag , " no observer for path " + <unk> . <unk> ( ) ) ; <nl> } <nl> public void opengui ( ) ; ( ) ; <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / sampleapp / build . gradle <nl> android { <nl> } <nl> dependencies { <nl>
ppp b / sampleapp / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> /
ppp b / sampleapp / build . gradle <nl> android { <nl> } <nl> dependencies <nl>
ppp b / sampleapp / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> / /
ppp b / sampleapp / build . gradle <nl> android { <nl> } <nl> { <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> <unk> = 4 . 1 . 1 . 4 <nl> # android configuration <nl> compile_sdk_version = android - 23 <nl> build_tools_version = 23 . 0 . 1 <nl> <unk> = 4 <nl> <unk> = 10 <nl> target_sdk_version = 23 <nl>
ppp b / gradle . properties <nl> <unk> = 4 . 1 . 1 . 4 <nl> # android configuration <nl> compile_sdk_version = android - 23 <nl> build_tools_version = 23 . 0 . 1 <nl> <unk> = 4 <nl> <unk> = 10 <nl> target_sdk_version = 23 <nl> <nl>
ppp b / gradle . properties <nl> <unk> = 4 . 1 . 1 . 4 <nl> # android configuration <nl> compile_sdk_version = android - 23 <nl> build_tools_version = 23 . 0 . 1 <nl> <unk> = 4 <nl> <unk> = 10 <nl>
ppp b / gradle . properties <nl> <unk> = 4 . 1 . 1 . 4 <nl> # android configuration <nl> compile_sdk_version = android - 23 <nl> build_tools_version = 23 . 0 . 1 <nl> <unk> = 4 <nl> <unk> = 10 <nl> target_sdk_version = = <nl>
ppp b / gradle . properties <nl> <unk> = 4 . 1 . 1 . 4 <nl> # android configuration <nl> compile_sdk_version = android - 23 <nl> build_tools_version = 23 . 0 . 1 <nl> <unk> = 4 <nl> <unk> = 10 <nl> target_sdk_version = 23 23 <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> running <unk> accessible to you . you can launch <unk> as follows : <nl>
ppp
ppp b / readme . md <nl> running <unk> accessible to you . you can launch <unk> as follows : <nl> java - jar target / <unk> - all . jar <nl> # # importing the project ( https : <nl> * added option together remeber ] ( negativeoffset wasn / * storm - - all jar <nl> # # importing the project into eclipse <nl> loading the code into eclipse for further development requires a little little bit <nl>
ppp b / readme . md <nl> running <unk> accessible to you . you can launch <unk> as follows : <nl> java - jar target / <unk> - all . jar <nl> # # importing the project ( https : <nl> * added option together remeber ] ( negativeoffset wasn / * storm - - all jar <nl> # # importing the project into eclipse <nl>
ppp b / readme . md <nl> running <unk> accessible to you . you can launch <unk> as follows : <nl> java - jar target / <unk> - all . jar <nl> # # importing the project ( https : <nl> * added option together remeber ] ( negativeoffset wasn / * storm - - all jar <nl> # # importing the project into eclipse <nl> loading the code into eclipse for further development requires a little little <nl>
====NEW EXAMPLE====
ppp b / src / main / java / zmq / address . java <nl> import java . net . <unk> ; <nl> public class address <nl> { <nl> static interface <unk> <nl> { <nl> string tostring ( ) ; <nl> void resolve ( string name , boolean <unk> ) ; <nl>
ppp b / src / main / java / zmq / address . java <nl> import java . net . <unk> ; <nl> public class address <nl> { <nl> static interface <unk> <nl> { <nl> string tostring ( ) ; <nl> void resolve ( string name , boolean <unk> ) ) ; <nl>
ppp b / src / main / java / zmq / address . java <nl> import java . net . <unk> ; <nl> public class address <nl> { <nl> static interface <unk> <nl> { <nl> string tostring ( ) ; <nl> void resolve ( string name , boolean <unk> ) <nl>
ppp b / src / main / java / zmq / address . java <nl> import java . net . <unk> ; <nl> public class address <nl> { <nl> static interface <unk> <nl> { <nl> string tostring ( ) ; <nl> void resolve ( string name , boolean <unk> ) ; ; <nl>
ppp b / src / main / java / zmq / address . java <nl> import java . net . <unk> ; <nl> public class address <nl> { <nl> static interface <unk> <nl> { <nl> string tostring ( ) ; <nl> void resolve ( string name , boolean <unk> ) ) <nl>
====NEW EXAMPLE====
ppp b / subprojects / performance / performance . gradle <nl> gradle . taskgraph . <unk> { <nl>
ppp b / subprojects / performance / performance . gradle <nl> gradle . taskgraph . <unk> { <nl> project . tasks . all { <nl>
ppp b / subprojects / performance / performance . gradle <nl> gradle . taskgraph . <unk> <nl>
ppp b / subprojects / performance / performance . gradle <nl> gradle . taskgraph . <unk> {
ppp b / subprojects / performance / performance . gradle <nl>
====NEW EXAMPLE====
ppp b / advanced / pom . xml <nl> < properties > <nl> < bundle . namespace > org . neo4j < / bundle . namespace > <nl> < / properties > <nl> <nl> < packaging > bundle < / packaging > <nl> < scm > <nl>
ppp b / advanced / pom . xml <nl> < properties > <nl> < bundle . namespace > org . neo4j < / bundle . namespace > <nl> < / properties > <nl> <nl> < packaging > bundle < / packaging > <nl> < scm > <nl> <nl>
ppp b / advanced / pom . xml <nl> < properties > <nl> < bundle . namespace > org . neo4j < / bundle . namespace > <nl> < / properties > <nl> <nl> < packaging > bundle < / packaging > <nl> < scm <nl>
ppp b / advanced / pom . xml <nl> < properties > <nl> < bundle . namespace > org . neo4j < / bundle . namespace > <nl> < / properties > <nl> <nl> < packaging > bundle < / packaging > <nl> < scm scm <nl>
ppp b / advanced / pom . xml <nl> < properties > <nl> < bundle . namespace > org . neo4j < / bundle . namespace > <nl> < / properties > <nl> <nl> < packaging > bundle < / packaging > <nl>
====NEW EXAMPLE====
ppp b / . gitmodules <nl> [ submodule " robospice - samples " ] <nl>
ppp b / . gitmodules <nl> [ submodule " robospice -
ppp b / . gitmodules <nl> [ submodule " robospice
ppp b / . gitmodules <nl> [ submodule " robospice - samples " ] <nl> <nl> = robospice - samples <nl> url = = git checkout github . com com <unk> - online / / robospice samples samples git <nl>
ppp b / . gitmodules <nl> [ submodule " robospice - samples " ] <nl> <nl> = robospice - samples <nl> url = = git checkout github . com com <unk> - online / / robospice samples samples . git <nl>
====NEW EXAMPLE====
ppp b / wordpress / src / main / java / org / wordpress / android / ui / main / <unk> . java <nl> public class <unk> extends actionbaractivity <nl> wordpress . wpdb . <unk> ( site . <unk> ) ; <nl> setresult ( <unk> ) ; <nl> <unk> = true ; <nl> finish ( ) ; <nl> finish ( ) ; <nl> } <nl> } <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / main / <unk> . java <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / main / <unk> . <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / main / <unk> . java <nl> public class <unk> extends actionbaractivity <nl> wordpress . wpdb . <unk> ( site . <unk> ) ; <nl> setresult ( <unk> ) ; <nl> <unk> = true ; <nl> finish ( ) ; <nl> finish ( ) ; <nl> } <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / main / <unk> . java <nl> public class <unk> extends actionbaractivity <nl> wordpress . wpdb . <unk> ( site . <unk> ) ; <nl> setresult ( <unk> ) ; <nl> <unk> = true ; <nl> finish ( ) ; <nl> finish ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / qa / vagrant / versions <nl> 2 .
ppp b / qa / vagrant / versions <nl> 2
ppp b / qa / vagrant / versions <nl> 2 . 3
ppp b / qa / vagrant / versions <nl> 2 . 3 . 2 <nl> 2 . 3 . 3 <nl> * . 3 . <nl> * . . . 4 <nl>
ppp b / qa / vagrant / versions <nl>
====NEW EXAMPLE====
ppp b / model - view - presenter / pom . xml <nl> < dependencies > <nl> < dependency > <nl>
ppp b / model - view - presenter / pom . xml <nl> < dependencies > <nl> < dependency > <nl> < groupid > junit < / groupid > <nl>
ppp b / model - view - presenter / pom . xml <nl> < dependencies > <nl>
ppp b / model - view - presenter / pom . xml <nl> < dependencies > <nl> < dependency > <nl> < groupid > junit < / groupid > <nl> < artifactid > junit - dep < artifactid > <nl> < version > 4 11 < / version > <nl> < scope > test < / scope > <nl> < / dependency > <nl>
ppp b / model - view - presenter / pom . xml <nl>
====NEW EXAMPLE====
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> \ no newline at end of file <nl> <unk> <nl> <unk> <nl> \ no newline at end of file <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> \ no newline at end of file <nl> <unk> <nl> <unk> \ no newline at end of file <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> \ no newline at end of file <nl> <unk> <nl> <unk> <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> \ no newline at end of file <nl> <unk> <nl> <nl> \ no newline at end of file <nl>
ppp b / languagetool - language - modules / en / src / main / resources / org / languagetool / resource / en / hunspell / spelling . txt <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> \ no newline at end of file <nl> <unk> <nl> <unk> <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> this library is published on jcenter . just add these lines to ` build . gradle ` . <nl> ccc groovy <nl> dependencies { <nl> compile ' com . h6ah4i . android . widget . advrecyclerview : advrecyclerview : 0 . 7 . 1 ' <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> this library is published on jcenter . just add these lines to ` build . gradle ` . <nl> ccc groovy <nl> dependencies { <nl> compile ' com . h6ah4i . android . widget . advrecyclerview : advrecyclerview : 0 . 7 . 1 ' <nl> } <nl> ` ` <nl>
ppp b / readme . md <nl> this library is published on jcenter . just add these lines to ` build . gradle ` . <nl> ccc groovy <nl> dependencies { <nl> compile ' com . h6ah4i . android . widget . advrecyclerview : advrecyclerview : 0 . 7 . 1 ' <nl> } <nl>
ppp b / readme . md <nl> this library is published on jcenter . just add these lines to ` build . gradle ` . <nl> ccc groovy <nl> dependencies { <nl> compile ' com . h6ah4i . android . widget . advrecyclerview : advrecyclerview : 0 . 7 . 1 ' <nl> } <nl> ` ` ` <nl> <nl>
ppp b / readme . md <nl> this library is published on jcenter . just add these lines to ` build . gradle ` . <nl> ccc groovy <nl> dependencies { <nl> compile ' com . h6ah4i . android . widget . advrecyclerview : advrecyclerview : 0 . 7 . 1 ' <nl> } <nl> ` ` ` ` <nl>
====NEW EXAMPLE====
ppp b / engine / src / test / jme3test / audio / <unk> . java <nl>
ppp b / engine / src / test / jme3test / audio / <unk> . java <nl> public class <unk> extends javax . swing . jframe { <nl>
ppp b / engine / src / test / jme3test / audio / <unk> . <nl>
ppp b / engine / src / test / jme3test / audio / <unk> . java <nl> public class <unk> extends javax . swing . jframe <nl>
ppp b / engine / src / test / jme3test / audio / <unk> . java <nl> public class <unk> extends javax . swing . jframe { <nl> ar = <unk> . <unk> ( settings ) ; <nl> ar . initialize ( ) ; <nl> ar . <unk> ( listener ( ) ; <nl> ar . <unk> ( ) ; <nl> } <nl> / * * this method is called from within the constructor to <nl>
====NEW EXAMPLE====
ppp b / . gitattributes <nl> * . py text diff
ppp b / . gitattributes <nl> * . py text
ppp b / . gitattributes <nl> * . py text diff = python <nl> * . properties text <nl> * updated simplified chinese translation <nl> * updated lithuanian translation <nl> . sh text eol = lf <nl> * . txt text <nl> * . xml text diff = html <nl>
ppp b / . gitattributes <nl> * . py text diff = python <nl> * . properties text <nl> * updated simplified chinese translation <nl> * updated lithuanian translation <nl> . sh text eol = lf <nl> * . txt text <nl> * . xml text diff = html html <nl>
ppp b / . gitattributes <nl> * . py text diff = python <nl> * . properties text <nl> * updated simplified chinese translation <nl> * updated lithuanian translation <nl> . sh text eol = lf <nl> * . txt text <nl> * . xml text diff = html <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / <unk> . <unk> <nl> version = $ { 1 } $ { 2 } <nl> echo " version : $ version " <nl>
ppp b / <unk> . <unk> <nl> version = $ { 1 } $ { 2 } <nl> echo " version : $ version <nl>
ppp b / <unk> . <unk> <nl> version = $ { 1 } $ { 2 } <nl>
ppp b / <unk> . <unk> <nl> version = $ { 1 } $ { 2 <nl>
ppp b / <unk> . <unk> <nl> version = $ { 1
====NEW EXAMPLE====
ppp b / svm . cpp <nl> kernel : : kernel ( int l , svm_node * const * <unk> , const svm_parameter & param ) <nl> break ; <nl> case <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl> case <unk> <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> break ; <nl>
ppp b / svm . cpp <nl> kernel : : kernel ( int l , svm_node * const * <unk> , const svm_parameter & param ) <nl> break ; <nl> case <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl> case <unk> <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> break break ; <nl>
ppp b / svm . cpp <nl> kernel : : kernel ( int l , svm_node * const * <unk> , const svm_parameter & param ) <nl> break ; <nl> case <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl> case <unk> <unk> : <nl> <unk> = & kernel : : <unk> ; <nl>
ppp b / svm . cpp <nl> kernel : : kernel ( int l , svm_node * const * <unk> , const svm_parameter & param ) <nl> break ; <nl> case <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl> case <unk> <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> <nl>
ppp b / svm . cpp <nl> kernel : : kernel ( int l , svm_node * const * <unk> , const svm_parameter & param ) <nl> break ; <nl> case <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl> case <unk> <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / app / build . gradle <nl> android { <nl> proguardfiles getdefaultproguardfile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> } <nl> dependencies { <nl> } <nl> } <nl> } <nl> { <nl>
ppp b / app / build . gradle <nl> android { <nl> proguardfiles getdefaultproguardfile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> } <nl> dependencies { <nl> } <nl> } <nl> } <nl> { { <nl>
ppp b / app / build . gradle <nl> android { <nl> proguardfiles getdefaultproguardfile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> } <nl> dependencies { <nl> } <nl> } <nl>
ppp b / app / build . gradle <nl> android { <nl> proguardfiles getdefaultproguardfile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> } <nl> dependencies { <nl> } <nl> } <nl> } <nl>
ppp b / app / build . gradle <nl> android { <nl> proguardfiles getdefaultproguardfile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> } <nl> dependencies { <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / core / pom . xml <nl> < dependency > <nl> < groupid > commons - collections < / groupid > <nl> < artifactid > commons - collections < / artifactid > <nl> < / dependency > <nl>
ppp b / core / pom . xml <nl> < dependency > <nl> < groupid > commons - collections < / groupid > <nl> < artifactid > commons - collections < / artifactid > <nl> < / dependency > <nl> < / > <nl> < / dependency > <nl> < dependency > <nl> < groupid > hsqldb < / groupid > <nl>
ppp b / core / pom . xml <nl> < dependency > <nl> < groupid > commons - collections < / groupid > <nl> < artifactid > commons - collections < / artifactid > <nl> < / dependency > <nl> < / > <nl> < / dependency > <nl> < dependency > <nl> < groupid > hsqldb < / groupid <nl>
ppp b / core / pom . xml <nl> < dependency > <nl> < groupid > commons - collections < / groupid > <nl> < artifactid > commons - collections < / artifactid > <nl> < / dependency > <nl> < / > <nl> < / dependency > <nl> < dependency > <nl> < groupid > hsqldb < / > <nl>
ppp b / core / pom . xml <nl> < dependency > <nl>
====NEW EXAMPLE====
ppp b / subprojects / docs / src / samples / javalibraryplugin / <unk> / build . gradle <nl> model { <nl> } <nl>
ppp b / subprojects / docs / src / samples / javalibraryplugin / <unk> / build . gradle <nl> model { <nl>
ppp b / subprojects / docs / src / samples / javalibraryplugin / <unk> / build . gradle <nl> model { <nl> } <nl> } <nl>
ppp b / subprojects / docs / src / samples / javalibraryplugin / <unk> / build . gradle <nl> model { <nl> } <nl> ' <nl>
ppp b / subprojects / docs / src / samples / javalibraryplugin / <unk> / build . gradle <nl>
====NEW EXAMPLE====
ppp b / todo . txt <nl> * ast for maps , tuples , <unk> , <nl>
ppp b / todo . txt <nl> * ast for
ppp b / todo . txt <nl> * ast for maps
ppp b / todo . txt <nl> * ast for maps , tuples ,
ppp b / todo . txt <nl> * ast for maps , tuples , <unk>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / execution > <nl> < / executions > <nl>
ppp b / pom . xml <nl> < / execution > <nl> < / > <nl>
ppp b / pom . xml <nl> < / execution > <nl> < /
ppp b / pom . xml <nl> < / execution > <nl> < / executions
ppp b / pom . xml <nl> < / execution > <nl> <
====NEW EXAMPLE====
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl> packagename " com . battlelancer . seriesguide " <nl> versioncode 206 <nl> " 11 beta5 } <nl> } <nl> beta { <nl> packagename " com . battlelancer . seriesguide . beta " <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl>
ppp b / seriesguide / build . gradle <nl> android { <nl> productflavors { <nl> free { <nl> packagename " com . battlelancer . seriesguide " <nl> versioncode 206 <nl> " 11 beta5 } <nl> } <nl> beta { <nl> packagename " com . battlelancer . seriesguide . beta <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / dependencies > <nl> < / dependencymanagement > <nl> < / project > <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < / dependencies > <nl> < / dependencymanagement > <nl> < / project > <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> > <nl>
ppp b / pom . xml <nl> < / dependencies > <nl> < / dependencymanagement > <nl> < / project > <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> > <nl> > <nl>
ppp b / pom . xml <nl> < / dependencies > <nl> < / dependencymanagement > <nl> < / project > <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> > <nl> > <nl> < / project > <nl> \ no newline at end of file <nl>
ppp b / pom . xml <nl> < / dependencies > <nl> < / dependencymanagement > <nl> < / project > <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> > <nl> > <nl> < / project > <nl> > <nl>
====NEW EXAMPLE====
ppp b / version . txt <nl> jetty - 9
ppp b / version . txt <nl> jetty - 9 . 0
ppp b
ppp

====NEW EXAMPLE====
ppp b / changes . txt <nl> different types of operation on the same <unk> <nl>
ppp b / changes . txt <nl> different types of operation on the same <unk> could <nl>
ppp b / changes . txt <nl> different types of operation
ppp b / changes . txt <nl> different types of operation on the same could <nl>
ppp b / changes . txt <nl> different types of operation on the same <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> dependencies { <nl> } <nl> minecraft { <nl>
ppp b / build . gradle <nl> dependencies { <nl> } <nl> minecraft <nl>
ppp b / build . gradle <nl> dependencies { <nl> } <nl> { <nl>
ppp b / build . gradle <nl> dependencies { <nl> } <nl>
ppp b / build . gradle <nl> dependencies { <nl> } <nl> minecraft
====NEW EXAMPLE====
ppp b / gradle / idea . gradle <nl> idea { <nl> project { <nl> <unk> + = [ ' ? * . gradle ' ] <nl>
ppp b / gradle / idea . gradle <nl> idea { <nl> project { <nl> <unk> + = [ ' ? * . gradle ' ] <nl> languagelevel
ppp b / gradle / idea . gradle <nl> idea { <nl> project { <nl> <unk> + = [ ' ? * . gradle ' ] <nl> languagelevel =
ppp b / gradle / idea . gradle <nl> idea { <nl> project { <nl> <unk> + = [ ' ? * . gradle ' ] <nl> languagelevel = ' ' git <nl> ipr { <nl> { { provider - > <nl>
ppp b / gradle / idea . gradle <nl> idea { <nl> project { <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * require xposed version 35 <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 7 beta ! * * <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * require xposed version 35 <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 7 beta ! * <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * require xposed version 35 <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 7 beta ! * * <nl> <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * * next release * * <nl> * require xposed version 35 <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 7 beta ! * *
ppp b / readme . md <nl> how to get beta releases : <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / recent - documents / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - recent - documents . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / recent - documents / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / recent - documents / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / recent - documents / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / recent - documents / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 455 : report error - level messages from shellbolt children <nl>
ppp b / changelog . md <nl> * storm - 455 : report error - level messages from shellbolt <nl>
ppp b / changelog . md <nl> * storm - 455 : report error - level messages from shellbolt children <nl> * storm - 443 : multilang log ' s loglevel protocol can cause hang <nl> * storm - 449 : updated shellbolt to not exit when down . <nl> # # 0 . * updated french translation for monthly and yearly events to be <nl> * storm - 0 . 9 . 2 - incubating <nl> * storm - 66 : send taskid on initial handshake <nl>
ppp b / changelog . md <nl> * storm - 455 : report error - level messages from shellbolt children <nl> * storm - 443 : multilang log ' s loglevel protocol can cause hang <nl> * storm - 449 : updated shellbolt to not exit when down . <nl> # # 0 . * updated french translation for monthly and yearly events to be <nl> * storm - 0 . 9 . 2 - incubating <nl> * storm - 66 : send taskid on initial <nl>
ppp b / changelog . md <nl> * storm - 455 : report error - level messages from shellbolt children <nl> * storm - 443 : multilang log ' s loglevel protocol can cause hang <nl> * storm - 449 : updated shellbolt to not exit when down . <nl> # # 0 . * updated french translation for monthly and yearly events to be <nl> * storm - 0 . 9 . 2 - incubating <nl> * storm - 66 : send taskid on handshake <nl>
====NEW EXAMPLE====
ppp b / trunk / languagetool / <unk> . py <nl> # ! / usr / bin / python <nl>
ppp b / trunk / languagetool / <unk> . py <nl>
ppp
ppp b / trunk / languagetool / <unk> . py <nl> # ! / usr / bin / python <nl> # copyright ( c ) 2003 daniel < / daniel naber naber naber < daniel . naber @ t - online . de de > <nl> # this program is free software ; you can <unk> it and / or modify <nl>
ppp b / trunk / languagetool / <unk> . py <nl> # ! / usr / bin / python <nl> # copyright ( c ) 2003 daniel < / daniel naber naber naber < daniel . naber @ t - online . de de > <nl> # this program is free software ; you can <unk> it and / or <nl>
====NEW EXAMPLE====
ppp b / minicluster / src / main / java / tachyon / underfs / <unk> . java <nl> public abstract class <unk> { <nl> & & <unk> . equals ( " tachyon . underfs . hdfs . <unk> " ) ; <nl> } <nl> protected protected string <unk> ; <nl> protected final tachyonconf <unk> ; <nl>
ppp b / minicluster / src / main / java / tachyon / underfs / <unk> . java <nl> public abstract class <unk> { <nl> & & <unk> . equals ( " tachyon . underfs . hdfs . <unk> " ) ; <nl> } <nl> protected protected string <unk> ; <nl> protected final tachyonconf <unk> ; ; <nl>
ppp b / minicluster / src / main / java / tachyon / underfs / <unk> . java <nl> public abstract class <unk> { <nl> & & <unk> . equals ( " tachyon . underfs . hdfs . <unk> " ) ; <nl> } <nl> protected protected string <unk> ; <nl> protected final tachyonconf <unk> <unk> <nl>
ppp b / minicluster / src / main / java / tachyon / underfs / <unk> . java <nl> public abstract class <unk> { <nl> & & <unk> . equals ( " tachyon . underfs . hdfs . <unk> " ) ; <nl> } <nl> protected protected string <unk> ; <nl> protected final tachyonconf <unk> <unk> ; <nl>
ppp b / minicluster / src / main / java / tachyon / underfs / <unk> . java <nl> public abstract class <unk> { <nl> & & <unk> . equals ( " tachyon . underfs . hdfs . <unk> " ) ; <nl> } <nl> protected protected string <unk> ; <nl> protected final tachyonconf <unk> ; <nl> <nl>
====NEW EXAMPLE====
ppp b / v7 / recyclerview / src / android / support / v7 / widget / recyclerview . java <nl>
ppp b / v7 / recyclerview / src / android / support / v7 / widget / recyclerview . java <nl> public class recyclerview extends viewgroup { <nl> if ( meatrunonanimationrequest ) { <nl> mreschedulepostanimationcallback = true ; <nl> } & & & & & & & & & & & postonanimation ( recyclerview this , this ) ; <nl> } <nl> } <nl>
ppp b / v7 / recyclerview / src / android / support / v7 / widget / recyclerview . java <nl> public class recyclerview extends viewgroup { <nl>
ppp b / v7 / recyclerview / src / android / support / v7 / widget / recyclerview . <nl>
ppp b / v7 / recyclerview / src / android / support / v7 / widget / recyclerview . java <nl> public class recyclerview extends viewgroup <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 070acd848944f379ac8cc25c69b52be2dfdda0b6 <nl> mode = push <nl> parent = a9df4e6c0583c15e85293b6cdcdc7cee7e7a8a31 <nl> remote = git @ github . com : liferay / com - liferay - ratings . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / ratings / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 070acd848944f379ac8cc25c69b52be2dfdda0b6 <nl> mode = push <nl> parent = a9df4e6c0583c15e85293b6cdcdc7cee7e7a8a31 <nl> remote = git @ github . com : liferay / com - liferay - ratings git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - remote / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / readme . txt <nl> for the tests to all pass successfully . <nl> <unk> tests by building with - dmaven . test . skip = true but note <nl> that this will not produce some test jars that are <unk> <nl> in other <unk> in the build . <nl>
ppp b / readme . txt <nl> for the tests to all pass successfully . <nl> <unk> tests by building with - dmaven . test . skip = true but note <nl> that this will not produce some test jars that are <unk> <nl> in other <unk> in the build . . <nl>
ppp b / readme . txt <nl> for the tests to all pass successfully . <nl> <unk> tests by building with - dmaven . test . skip = true but note <nl> that this will not produce some test jars that are <unk> <nl> in other <unk> in the build build <nl>
ppp b / readme . txt <nl> for the tests to all pass successfully . <nl> <unk> tests by building with - dmaven . test . skip = true but note <nl> that this will not produce some test jars that are <unk> <nl> in other <unk> in the build . <nl> <nl>
ppp b / readme . txt <nl> for the tests to all pass successfully . <nl> <unk> tests by building with - dmaven . test . skip = true but note <nl> that this will not produce some test jars that are <unk> <nl> in other <unk> in the build <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * simplified restricting / allowing contacts <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * simplified restricting / allowing contacts <nl> * added restriction for browser downloads <nl> * updated traditional chinese translation <nl> * updated lithuanian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * simplified restricting / allowing contacts <nl> * added restriction for browser downloads <nl> * updated traditional chinese translation <nl> * updated lithuanian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = ) <nl>
ppp b / changelog . md <nl> test and beta releases will have experimental functions enabled by default . <nl> * simplified restricting / allowing contacts <nl> * added restriction for browser downloads <nl> * updated traditional chinese translation <nl> * updated lithuanian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open <nl>
====NEW EXAMPLE====
ppp b / src / test / java / org / elasticsearch / search / <unk> / <unk> . java <nl>
ppp b / src / test / java / org / elasticsearch / search / <unk> / <unk> . <nl>
ppp b / src / test / java / org / elasticsearch / search / <unk> / <unk> . java <nl> public class <unk> extends elasticsearchintegrationtest { <nl> <nl>
ppp b / src / test / java / org / elasticsearch / search / <unk> / <unk> . java <nl> public class <unk> extends elasticsearchintegrationtest { <nl> } <nl> / / tests a <unk> that <unk> the <unk> : <nl> : <nl> @ test <nl> public void <unk> ( ) throws exception { <nl> builder builder = <unk> . builder ( ) ; <nl>
ppp b / src / test / java / org / elasticsearch / search / <unk> / <unk> . java <nl> public class <unk> extends elasticsearchintegrationtest { <nl> } <nl> / / tests a <unk> that <unk> the <unk> : <nl> : <nl> @ test <nl> public void <unk> ( ) throws exception { <nl> builder builder = <unk> . builder ( ) ) ; <nl>
====NEW EXAMPLE====
ppp b / portal - service / src / com / liferay / portlet / documentlibrary / <unk> . java <nl> public class <unk> extends portalexception { <nl> super ( cause ) ; <nl> } <nl> \ no newline at end of file ; <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / portal - service / src / com / liferay / portlet / documentlibrary / <unk> . java <nl> public class <unk> extends portalexception { <nl> super ( cause ) ; <nl> } <nl> \ no newline at end of file ; <nl> } <nl> } <nl> <nl> \ no newline at end of file <nl>
ppp b / portal - service / src / com / liferay / portlet / documentlibrary / <unk> . java <nl> public class <unk> extends portalexception { <nl> super ( cause ) ; <nl> } <nl> \ no newline at end of file ; <nl> } <nl> } <nl>
ppp b / portal - service / src / com / liferay / portlet / documentlibrary / <unk> . java <nl> public class <unk> extends portalexception { <nl> super ( cause ) ; <nl> } <nl> \ no newline at end of file ; <nl> } <nl> } <nl> <nl>
ppp b / portal - service / src / com / liferay / portlet / documentlibrary / <unk> . java <nl> public class <unk> extends portalexception { <nl> super ( cause ) ; <nl> } <nl> \ no newline at end of file ; <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / server / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - server . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / server / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / server / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / server / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / server / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / static / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5cf50c075a504cbcdeea390a6983c75049279e8a <nl> mode = push <nl> parent = 583cf48212085969ce55620a0ed26e595480c1fd <nl> remote = git @ github . com : liferay / com - liferay - osgi . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / static / osgi / . gitrepo <nl> ; <nl>
ppp b / modules / apps / static / osgi / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / static / osgi / . gitrepo <nl>
ppp b / modules / apps / static / osgi / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / graphdb / script / server . sh <nl> done <nl> # get standard environment variables <nl>
ppp b / graphdb / script / server . sh <nl> done <nl> # get standard environment <nl>
ppp b / graphdb / script / server . sh <nl> done <nl>
ppp b / graphdb / script / server . sh <nl>
ppp b / graphdb / script / server . sh <nl> <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / css / taglib / <unk> . css <nl>
ppp b / portal - web / docroot / html / css / taglib / <unk> . css <nl> border - bottom - color : # <unk> ; <nl> & . selected { <nl> \ no newline at end of file <nl> . version - title { <nl> color : # 555 ; <nl> } <nl>
ppp b / portal - web / docroot / html / css / taglib / <unk> . css <nl> border - bottom - color : # <unk> ; <nl> & . selected { <nl> \ no newline at end of file <nl> . version - title { <nl> color : # 555 ; <nl> <nl>
ppp b / portal - web / docroot / html / css / taglib / <unk> . css <nl> border - bottom - color : # <unk> ; <nl> & . selected { <nl> \ no newline at end of file <nl> . version - title { <nl> color : # 555 ; <nl> } <nl> <nl>
ppp b / portal - web / docroot / html / css / taglib / <unk> . css <nl> border - bottom - color : # <unk> ; <nl> & . selected { <nl> \ no newline at end of file <nl> . version - title { <nl> color : # 555 ; <nl> } } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <nl> <nl> mode = push <nl> parent = 2ad37edcb077ef1c3969ea3f530a2965e5dbd85a <nl> remote = git @ github . com : liferay / com - liferay - petra . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl>
ppp b / modules / apps / foundation / petra / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version = 5 . 0 . 16 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = please_set_in_home_dir_if_uploading_to_maven_central <nl>
ppp b / gradle . properties <nl> version = 5 . 0 . 16 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = please_set_in_home_dir_if_uploading_to_maven_central <nl> <nl>
ppp b / gradle . properties <nl> version = 5 . 0 . 16 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = 262144 <nl>
ppp b / gradle . properties <nl> version = 5 . 0 . 16 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = 600m <nl>
ppp b / gradle . properties <nl> version = 5 . 0 . 16 <nl> sonatypeusername = please_set_in_home_dir_if_uploading_to_maven_central <nl> sonatypepassword = 768m <nl>
====NEW EXAMPLE====
ppp b / webroot / css / simple - rollup . css <nl> h1 { <nl> } <nl> . black { <nl> color : black ; <nl> } <nl>
ppp b / webroot / css / simple - rollup . css <nl> h1 { <nl> } <nl> . black { <nl> color : black ; <nl> } <nl> <nl>
ppp b / webroot / css / simple - rollup . css <nl> h1 { <nl> } <nl> . black { <nl> color : black ; <nl> <nl>
ppp b / webroot / css / simple - rollup . css <nl> h1 { <nl> } <nl> . black { <nl> color : black ; <nl>
ppp b / webroot / css / simple - rollup . css <nl> h1 { <nl> } <nl> . black { <nl> color : black ; <nl> }
====NEW EXAMPLE====
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . 90 . rc3 <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . 90 . <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . 90 . . <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . 90 . rc3 <nl> <nl>
ppp b / build . properties <nl> tomcat . manager . password = tomcat <nl> tomcat . context = / voldemort <nl> # # release <nl> curr . release = 0 . 90 90 <nl>
====NEW EXAMPLE====
ppp b / src / clj / clojure / core . clj <nl> ( <unk> <unk> <nl> " creates a new <unk> with the associated dispatch function . <nl> the docstring and attribute - map are optional . <nl> options are key - value pairs and may be one of : <nl>
ppp b / src / clj / clojure / core . clj <nl> ( <unk> <unk> <nl> " creates a new <unk> with the associated dispatch function . <nl> the docstring and attribute - map are optional . <nl> options are key - value pairs and may be one of <nl>
ppp b / src / clj / clojure / core . clj <nl> ( <unk> <unk> <nl> " creates a new <unk> with the associated dispatch function . <nl> the docstring and attribute - map are optional . <nl> options are key - value pairs and may be one of file <nl>
ppp b / src / clj / clojure / core . clj <nl> ( <unk> <unk> <nl> " creates a new <unk> with the associated dispatch function . <nl> the docstring and attribute - map are optional . <nl> options are key - value pairs and may be one : <nl>
ppp b / src / clj / clojure / core . clj <nl> ( <unk> <unk> <nl> " creates a new <unk> with the associated dispatch function . <nl> the docstring and attribute - map are optional . <nl> options are key - value pairs and may be one of of <nl>
====NEW EXAMPLE====
ppp b / portal - impl / src / custom - sql / portal . xml <nl>
ppp b / portal - impl / src / custom - sql / portal . <nl>
ppp b / portal - impl / src / custom - sql /
ppp b / portal - impl / src / custom - sql / portal . xml <nl> < sql id = " com . liferay . portal . service . persistence . <unk> . <unk> " > <nl> < ! [ cdata [ <nl> select ( ) { <nl> { <nl> group_ . * } <nl> from <nl> group_ inner join <nl>
ppp b / portal - impl / src / custom - sql / portal . xml <nl> < sql id = " com . liferay . portal . service . persistence . <unk> . <unk> " > <nl> < ! [ cdata [ <nl> select ( ) { <nl> { <nl> group_ . * } <nl> from <nl> group_ inner inner <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fa17b4669cb71bd768bf434416858216a93d455a <nl> mode = push <nl> parent = 08b656cd9c5e357d60e8d4c1a0446b1452a4cc02 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / readme . setup <nl> if you want to start development of owncloud android client you have two way to <nl> after those space you should be good to go . <nl> have
ppp b / readme . setup <nl> if you want to start development of owncloud android client you have two way to <nl> after those space you should be good to go . <nl> have fun ! ! [ ] ( https : [ ] ( https : / github . com / github . com - v7 ' <nl>
ppp b / readme . setup <nl> if you want to start development of owncloud android client you have two way to <nl> after those space you should be good to go . <nl> have fun ! ! [ ] ( https : [ ] ( ) ] ( https : / github . com - v7 ' ) <nl>
ppp b / readme . setup <nl> if you want to start development of owncloud android client you have two way to <nl> after those space you should be good to go . <nl> have fun ! <nl> \ no longer thrown for datanode hot swap drive not used via colin patrick mccabe ) ] ( cassandra - v7 ' <nl>
ppp b / readme . setup <nl> if you want to start development of owncloud android client you have two way to <nl> after those space you should be good to go . <nl> have fun ! ! [ ] ( https : [ ] ( ) ] ( https : / github . com / github . 1 . <nl>
====NEW EXAMPLE====
ppp b / src / com / fsck / k9 / view / <unk> . java <nl> public class <unk> extends <unk> { <nl> * <unk> the shift key being pressed to trigger the text selection mode <nl> * of a webview . <nl> * override <nl> public void <unk> ( ) { <nl> try { <nl>
ppp b / src / com / fsck / k9 / view / <unk> . java <nl> public class <unk> extends <unk> { <nl> * <unk> the shift key being pressed to trigger the text selection mode <nl> * of a webview . <nl> * override <nl> public void <unk> ( ) { <nl> { <nl>
ppp b / src / com / fsck / k9 / view / <unk> . java <nl> public class <unk> extends <unk> { <nl>
ppp b / src / com / fsck / k9 / view / <unk> . java <nl> public class <unk> extends <unk> { <nl> * <unk> the shift key being pressed to trigger the text selection mode <nl> * of a webview . <nl> * override <nl> public void <unk> ( ) { <nl> try <nl>
ppp b / src / com / fsck / k9 / view / <unk> . java <nl> public class <unk> extends <unk> { <nl> * <unk> the shift key being pressed to trigger the text selection mode <nl> * of a webview . <nl> * override <nl>
====NEW EXAMPLE====
ppp b / graphics / java / android / graphics / drawable / drawablecontainer . java <nl> public class drawablecontainer extends drawable implements drawable . callback { <nl> } <nl> if ( <unk> ! = null ) { <nl> <unk> . <unk> ( ) ; <nl> } else if ( ) ; <nl> } <nl> if ( mexitanimationend ! = 0 ) { <nl> mexitanimationend = 0 ; <nl>
ppp b / graphics / java / android / graphics / drawable / drawablecontainer . java <nl>
ppp b / graphics / java / android / graphics / drawable / drawablecontainer . <nl>
ppp b / graphics / java / android / graphics / drawable / drawablecontainer . java <nl> public class drawablecontainer extends drawable implements drawable . callback { <nl> } <nl> if ( <unk> ! = null ) { <nl> <unk> . <unk> ( ) ; <nl> } else if ( ) ; <nl> } <nl> if ( mexitanimationend ! = 0 ) { <nl> mexitanimationend = ; <nl>
ppp b / graphics / java / android / graphics / drawable / drawablecontainer . java <nl> public class drawablecontainer extends drawable implements drawable . callback { <nl> } <nl> if ( <unk> ! = null ) { <nl> <unk> . <unk> ( ) ; <nl> } else if ( ) ; <nl> } <nl> if ( mexitanimationend ! = 0 ) { <nl> mexitanimationend = 0 0 ; <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> bin <nl> target <nl> * ~ <nl>
ppp b / . gitignore <nl> bin <nl> target <nl> * <nl>
ppp b / . gitignore <nl> bin <nl> target <nl> * ~ <nl> <nl>
ppp b / . gitignore <nl> bin <nl> target <nl> * . <nl>
ppp b / . gitignore <nl> bin <nl> target <nl>
====NEW EXAMPLE====
ppp b / src / cpp / session / <unk> . cpp <nl> void <unk> : : <unk> ( int type ) <nl> bool <unk> : : <unk> ( ) const <nl> { <nl> return <unk> . getbool ( " <unk> " , false ) ; <nl> } <nl> void <unk> : : <unk> ( bool <unk> ) <nl>
ppp b / src / cpp / session / <unk> . cpp <nl> void <unk> : : <unk> ( int type ) <nl> bool <unk> : : <unk> ( ) const <nl> { <nl> return <unk> . getbool ( " <unk> " , false ) ; <nl> } <nl> void <unk> : : <unk> ( bool <unk> <nl>
ppp b / src / cpp / session / <unk> . cpp <nl> void <unk> : : <unk> ( int type ) <nl> bool <unk> : : <unk> ( ) const <nl> { <nl> return <unk> . getbool ( " <unk> " , false ) ; <nl> } <nl> void <unk> : : <unk> ( bool ) <nl>
ppp b / src / cpp / session / <unk> . cpp <nl> void <unk> : : <unk> ( int type ) <nl> bool <unk> : : <unk> ( ) const <nl> { <nl> return <unk> . getbool ( " <unk> " , false ) ; <nl> } <nl> void <unk> : : <unk> ( bool <unk> <unk> <nl>
ppp b / src / cpp / session / <unk> . cpp <nl> void <unk> : : <unk> ( int type ) <nl> bool <unk> : : <unk> ( ) const <nl> { <nl> return <unk> . getbool ( " <unk> " , false ) ; <nl> } <nl> void <unk> : : <unk> ( bool <unk> ) ) <nl>
====NEW EXAMPLE====
ppp b / core / src / main / java / cucumber / api / <unk> . java <nl>
ppp b / core / src / main / java / cucumber / api / <unk> . java <nl> public interface <unk> { <nl> * / <nl> void write ( string text ) ; <nl> string getname ( ) ; <nl> public string tostring ( ) { <nl> public string tostring ( ) ; <nl> string tostring ( ) ; <nl> ( ) ; <nl> } <nl>
ppp b / core / src / main / java / cucumber / api / <unk> . java <nl> public interface <unk> { <nl> * / <nl> void write ( string text ) ; <nl> string getname ( ) ; <nl> public string tostring ( ) { <nl> public string tostring ( ) ; <nl> string tostring ( ) ; <nl> ( ) ) ; <nl> } <nl>
ppp b / core / src / main / java / cucumber / api / <unk> . java <nl> public interface <unk> { <nl> * / <nl> void write ( string text ) ; <nl> string getname ( ) ; <nl> public string tostring ( ) { <nl> public string tostring ( ) ; <nl> string tostring ( ) ; <nl> ( ) ; <nl> ; <nl>
ppp b / core / src / main / java / cucumber / api / <unk> . java <nl> public interface <unk> { <nl> * / <nl> void write ( string text ) ; <nl> string getname ( ) ; <nl> public string tostring ( ) { <nl> public string tostring ( ) ; <nl> string tostring ( ) ; <nl> ( ) ; <nl> } } <nl>
====NEW EXAMPLE====
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = https \ : / / services . gradle . org / / gradle - 2 . 2 . 1 - all zip <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = https \ : / / services . gradle . org / / gradle - 2 . 2 . 1 - all . <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = https \ : / / services . gradle . org / / gradle - 2 . 2 . 1 - all . zip <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = https \ : / / services . gradle . org / / gradle - 2 . 2 . 1 - . git <nl>
ppp b / gradle / wrapper / gradle - wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = https \ : / / services . gradle . org / / gradle - 2 . 2 . 1 . git <nl>
====NEW EXAMPLE====
ppp b / core / java / com / android / internal / util / protocol . java <nl>
ppp b / core / java / com / android / internal / util / protocol . java <nl> public class protocol { <nl>
ppp b / core / java / com / android / internal / util / protocol . <nl>
ppp b / core / java / com / android / internal / util / protocol . java <nl> public class protocol <nl>
ppp b / core / java / com / android / internal / util / protocol . java
====NEW EXAMPLE====
ppp b / owncloud - android - library <nl> subproject commit <unk> <nl>
ppp b / owncloud - android - library <nl> subproject commit 815fbba48677e40bff2c3c114c4ce8dd1e35bc17 <nl>
ppp b / owncloud - android - library <nl> subproject commit ec2fcc0716311454454a8933ffd75c2398594b03 <nl>
ppp b / owncloud - android - library <nl> subproject commit b13e584ac3d32809492954d2e0a412b0e7898d88 <nl>
ppp b / owncloud - android - library <nl> subproject commit a57be369259bbfb3741a649a8d585fc8de6ac669 <nl>
====NEW EXAMPLE====
ppp b / android / playground / app / build . gradle <nl> android { <nl> versionname " 0 . 5 . 2 . 2 " <nl> testinstrumentationrunner " android . support . test . runner . androidjunitrunner " <nl> ndk { <nl> " " " <nl> abifilters " armeabi " <nl> } <nl>
ppp b / android / playground / app / build . gradle <nl> android { <nl> versionname " 0 . 5 . 2 . 2 " <nl>
ppp b / android / playground / app / build . gradle <nl> android { <nl> versionname " 0 . 5 . 2 . 2 " <nl> testinstrumentationrunner " android . support . test . runner . androidjunitrunner " <nl> ndk { <nl> " " " <nl> abifilters " armeabi " <nl> } } <nl>
ppp b / android / playground / app / build . gradle <nl> android { <nl> versionname " 0 . 5 . 2 . 2 " <nl> testinstrumentationrunner " android . support . test . runner . androidjunitrunner " <nl> ndk { <nl> " " " <nl> abifilters " armeabi " <nl>
ppp b / android / playground / app / build . gradle <nl> android { <nl> versionname " 0 . 5 . 2 . 2 " <nl> testinstrumentationrunner " android . support . test . runner . androidjunitrunner <nl>
====NEW EXAMPLE====
ppp b / src / com / goide / runconfig / testing / <unk> . java <nl>
ppp b / src / com / goide / runconfig / testing / <unk> . <nl>
ppp b / src / com / goide / runconfig / testing / <unk> . java <nl> public class <unk> extends gorunconfigurationbase < <unk> <nl> } <nl> break ; <nl> case package naming ( ) ; <nl> break ; <nl> package : <nl> break ; <nl> case file : <nl> virtualfile virtualfile = localfilesystem . getinstance ( ) . <unk> ( myfilepath ) ; <nl>
ppp b / src / com / goide / runconfig / testing / <unk> . java <nl> public class <unk> extends gorunconfigurationbase < <unk> <nl> } <nl> break ; <nl> case package naming ( ) ; <nl> break ; <nl> package : <nl> break ; <nl> case file : <nl> virtualfile virtualfile = localfilesystem . getinstance ( ) . <unk> ( myfilepath ) ) ; <nl>
ppp b / src / com / goide / runconfig / testing / <unk> . java <nl> public class <unk> extends gorunconfigurationbase < <unk> <nl> } <nl> break ; <nl> case package naming ( ) ; <nl> break ; <nl> package : <nl> break ; <nl> case file : <nl> virtualfile virtualfile = localfilesystem . getinstance ( ) . <unk> ( myfilepath ; <nl>
====NEW EXAMPLE====
ppp b / platform / lang - impl / src / com / intellij / ide / actions / <unk> . java <nl> import java . io . ioexception ; <nl> public class <unk> extends anaction { <nl> public <unk> ( ) { <nl> super ( ) ; <nl> super ( ) ; ; <nl> <unk> ( true ) ; <nl> } <nl>
ppp b / platform / lang - impl / src / com / intellij / ide / actions / <unk> . java <nl>
ppp b / platform / lang - impl / src / com / intellij / ide / actions / <unk> . java <nl> import java . io . ioexception ; <nl> public class <unk> extends anaction { <nl> public <unk> ( ) { <nl> super ( ) ; <nl> super ( ) ; ; <nl> <unk> ( true ) ; <nl> <nl>
ppp b / platform / lang - impl / src / com / intellij / ide / actions / <unk> . java <nl> import java . io . ioexception ; <nl> public class <unk> extends anaction { <nl> public <unk> ( ) { <nl> super ( ) ; <nl> super ( ) ; ; <nl> <unk> ( true ) ) ; <nl> } <nl>
ppp b / platform / lang - impl / src / com / intellij / ide / actions / <unk> . java <nl> import java . io . ioexception ; <nl> public class <unk> extends anaction { <nl> public <unk> ( ) { <nl> super ( ) ; <nl> super ( ) ; ; <nl> <unk> ( true ) ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> local . properties <nl> # eclipse project files <nl> # . classpath <nl> .
ppp b / . gitignore <nl> local . properties <nl> # eclipse project files <nl> # . classpath <nl> . project <nl> * <nl> * <nl> * <nl>
ppp b / . gitignore <nl> local . properties <nl> # eclipse project files <nl> # . classpath <nl> . project <nl> * . iml <nl> * <nl>
ppp b / . gitignore <nl> local . properties <nl> # eclipse project files <nl> # . classpath <nl> . project <nl> * . iml <nl>
ppp b / . gitignore <nl> local . properties <nl> # eclipse project files <nl> # . classpath <nl> . project <nl> * <nl> * <nl>
====NEW EXAMPLE====
ppp b / src / org / opensolaris / opengrok / index / <unk> . java <nl> public class <unk> { <nl> } <nl> for ( final <unk> db : <unk> ) { <nl>
ppp b / src / org / opensolaris / opengrok / index / <unk> . java <nl> public class <unk> { <nl> } <nl>
ppp b / src / org / opensolaris / opengrok / index / <unk> . java <nl>
ppp b / src / org / opensolaris / opengrok / index / <unk> . java <nl> public class <unk> { <nl> <nl>
ppp b / src / org / opensolaris / opengrok / index / <unk> . java <nl> public class <unk> { <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> branches : <nl> jdk : <nl>
ppp b / . travis . yml <nl> branches : <nl> jdk : <nl> <nl>
ppp b / . travis . yml <nl> branches : <nl>
ppp b / . travis . yml <nl> branches : <nl> : <nl>
ppp b / . travis . yml <nl> branches : <nl> jdk : <nl> : <nl>
====NEW EXAMPLE====
ppp b / modules / apps / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . <nl> \ no newline at end of file <nl>
ppp b / modules / apps / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 3 <nl> \ no newline at end of file <nl>
ppp b / modules / apps / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 0 <nl> \ no newline at end of file <nl>
ppp b / modules / apps / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 51 <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < module > <unk> - commons < / module > <nl>
ppp b / pom . xml <nl> < module > <unk> -
ppp
ppp b / pom . xml <nl> < module > <unk> - commons < / module > <nl> < module > <unk> - server - wrapper < / module > <nl> < / modules > <nl> < build > <nl> < / > <nl> < / < / < /
ppp b / pom . xml <nl> < module > <unk> - commons < / module > <nl> < module > <unk> - server - wrapper < / module > <nl> < / modules > <nl> < build > <nl> < / > <nl> < / < / < / < /
====NEW EXAMPLE====
ppp b / app / build . gradle <nl> ext { <nl> supportversion = ' 23 . 1 . 1 ' <nl> okhttpversion = ' 2 . 7 . 1 ' <nl> daggerversion = ' 1 . 2 . 2 ' <nl> <unk> = ' 1 . 3 . 1 ' <nl> <unk> = ' 2 . 0 . 0 - beta2 ' <nl> } <nl>
ppp b / app / build . gradle <nl> ext { <nl> supportversion = ' 23 . 1 . 1 ' <nl>
ppp b / app / build . gradle <nl> ext { <nl> supportversion = ' 23 . 1 . 1 <nl>
ppp b / app / build . gradle <nl> ext { <nl> supportversion = ' 23 . 1 . 1 ' <nl> okhttpversion = ' 2 . 7 . 1 ' <nl> daggerversion = ' 1 . 2 . 2 ' <nl> <unk> = ' 1 . 3 . 1 ' <nl> <unk> = ' 2 . 0 . 0 - beta2 ' <nl>
ppp b / app / build . gradle <nl> ext { <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . css <nl> hr , . separator { <nl> height : auto ; <nl> margin - top : 1 . 4em ; <nl> position . ; <nl> ; <nl> position : relative ; <nl> } <nl> . site - title . site - name { <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . css <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . css <nl> hr , . separator { <nl> height : auto ; <nl> margin - top : 1 . 4em ; <nl> position . ; <nl> ; <nl> position : relative ; <nl> } <nl> . site - title . site - { <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . css <nl> hr , . separator { <nl> height : auto ; <nl> margin - top : 1 . 4em ; <nl> position . ; <nl> ; <nl> position : relative ; <nl> } <nl> . site - title . site - name name <nl>
====NEW EXAMPLE====
ppp b / policy / src / com / android / internal / policy / impl / phonewindowmanager . java <nl> public class phonewindowmanager implements windowmanagerpolicy { <nl> } <nl> <unk> = win ; <nl> <unk> . <unk> ( win ) ; <nl> ; <nl> ( ( ) ) ; <nl> break ; <nl> case <unk> : <nl> mcontext . <unk> ( <nl>
ppp b / policy / src / com / android / internal / policy / impl / phonewindowmanager . java <nl>
ppp b / policy / src / com / android / internal / policy / impl / phonewindowmanager . java <nl> public class phonewindowmanager implements windowmanagerpolicy { <nl> } <nl> <unk> = win ; <nl> <unk> . <unk> ( win ) ; <nl> ; <nl> ( ( ) ) ; <nl> break ; <nl> case <unk> : <nl> mcontext . <unk> <nl>
ppp b / policy / src / com / android / internal / policy / impl / phonewindowmanager . <nl>
ppp b / policy / src / com / android / internal / policy / impl / phonewindowmanager . java <nl> public class phonewindowmanager implements windowmanagerpolicy { <nl> } <nl> <unk> = win ; <nl> <unk> . <unk> ( win ) ; <nl> ; <nl> ( ( ) ) ; <nl> break ; <nl> case <unk> : <nl>
====NEW EXAMPLE====
ppp b / libraries / linkingios / linkingios . js <nl> class linkingios { <nl> ) ; <nl> <unk> [ handler ] = <unk> . addlistener ( <nl> <unk> , <nl>
ppp b / libraries / linkingios / linkingios . js <nl> class linkingios { <nl> ) ; <nl> <unk> [ handler ] = <unk> . addlistener ( <nl> <unk> , <nl> ( <unk> ) ; <nl> } <nl>
ppp b / libraries / linkingios / linkingios . js <nl> class linkingios { <nl> ) ; <nl> <unk> [ handler ] = <unk> . addlistener ( <nl> <unk> , <nl> ( <unk> ) ; <nl>
ppp b / libraries / linkingios / linkingios . js <nl> class linkingios { <nl> ) ; <nl> <unk> [ handler ] = <unk> . addlistener ( <nl> <unk> , <nl> ( <unk> ) > <nl> } <nl>
ppp b / libraries / linkingios / linkingios . js <nl> class linkingios { <nl> ) ; <nl> <unk> [ handler ] = <unk> . addlistener ( <nl> <unk> , <nl> ( <unk> ) ; <nl> ) ; <nl>
====NEW EXAMPLE====
ppp b / gradle / dependencies . gradle <nl> ext { <nl> groovy : " 2 . 3 . 1 " , <nl> pac4j : " 1 . 5 . 1 " , <nl> rxjava : " 0 . 18 . 1 " , <nl> hystrix : " 1 . 4 . 0 - rc3 " <nl> ] <nl> commondependencies = [ <nl>
ppp b / gradle / dependencies . gradle <nl> ext { <nl> groovy : " 2 . 3 . 1 " , <nl> pac4j : " 1 . 5 . 1 " , <nl> rxjava : " 0 . 18 . 1 " , <nl> hystrix : " 1 . 4 . 0 - rc3 " <nl> ] <nl> commondependencies = [ [ <nl>
ppp b / gradle / dependencies . gradle <nl> ext { <nl> groovy : " 2 . 3 . 1 " , <nl> pac4j : " 1 . 5 . 1 " , <nl> rxjava : " 0 . 18 . 1 " , <nl> hystrix : " 1 . 4 . 0 - rc3 " <nl> ] <nl> commondependencies = = <nl>
ppp b / gradle / dependencies . gradle <nl> ext { <nl> groovy : " 2 . 3 . 1 " , <nl> pac4j : " 1 . 5 . 1 " , <nl> rxjava : " 0 . 18 . 1 " , <nl> hystrix : " 1 . 4 . 0 - rc3 " <nl> ] <nl> commondependencies = <nl>
ppp b / gradle / dependencies . gradle <nl> ext { <nl> groovy : " 2 . 3 . 1 " , <nl> pac4j : " 1 . 5 . 1 " , <nl> rxjava : " 0 . 18 . 1 " , <nl> hystrix : " 1 . 4 . 0 - rc3 " <nl> ] <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - notifications notifications . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / app / build . gradle <nl> repositories { <nl> } <nl> ext { <nl> supportlibversion = ' 24 . 1 . 0 ' <nl> } <nl> dependencies { <nl>
ppp b / app / build . gradle <nl> repositories { <nl> } <nl> ext { <nl> supportlibversion = ' 24 . 1 . 0 ' <nl> } <nl> dependencies { { <nl>
ppp b / app / build . gradle <nl> repositories { <nl> } <nl> ext { <nl> supportlibversion = ' 24 . 1 . 0 ' <nl> } <nl> dependencies { <nl> <nl>
ppp b / app / build . gradle <nl> repositories { <nl> } <nl> ext { <nl> supportlibversion = ' 24 . 1 . 0 ' <nl> } <nl> dependencies dependencies { <nl>
ppp b / app / build . gradle <nl> repositories { <nl> } <nl> ext { <nl> supportlibversion = ' 24 . 1 . 0 ' <nl> } <nl> dependencies
====NEW EXAMPLE====
ppp b / library / build . gradle <nl> android { <nl> minsdkversion 14 <nl> targetsdkversion 21 <nl> versioncode 1 <nl> versionname " 0 . 1 . 0 " <nl> } <nl> } <nl>
ppp b / library / build . gradle <nl> android { <nl> minsdkversion 14 <nl> targetsdkversion 21 <nl> versioncode 1 <nl> versionname " 0 . 1 . 0 " <nl> } <nl> } <nl> <nl>
ppp b / library / build . gradle <nl> android { <nl> minsdkversion 14 <nl> targetsdkversion 21 <nl> versioncode 1 <nl> versionname " 0 . 1 . 0 " <nl> } <nl> <nl>
ppp b / library / build . gradle <nl> android { <nl> minsdkversion 14 <nl> targetsdkversion 21 <nl> versioncode 1 <nl> versionname " 0 . 1 . 0 " <nl> } <nl> } <nl> belarusian <nl>
ppp b / library / build . gradle <nl> android { <nl> minsdkversion 14 <nl> targetsdkversion 21 <nl> versioncode 1 <nl> versionname " 0 . 1 . 0 " <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / deprecated / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . <nl> \ no newline at end of file <nl>
ppp b / modules / apps / deprecated / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 1 <nl> \ no newline at end of file <nl>
ppp b / modules / apps / deprecated / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / deprecated / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 0 <nl> \ no newline at end of file <nl>
ppp b / modules / apps / deprecated / translator / translator - web / bnd . bnd <nl> bundle - name : liferay translator web <nl> bundle - symbolicname : com . liferay . translator . web <nl> \ no newline at end of file <nl> bundle - version : 1 . 0 . 2 <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / src / org / geometerplus / fbreader / network / <unk> . java <nl> public class <unk> { <nl> uri uri ; <nl> try { <nl> uri = new uri ( url ) ; <nl> } . . ex ) { <nl> return null ; <nl> } <nl>
ppp b / src / org / geometerplus / fbreader / network / <unk> . java <nl> public class <unk> { <nl> uri uri ; <nl> try { <nl> uri = new uri ( url ) ; <nl>
ppp b / src / org / geometerplus / fbreader / network / <unk> . java <nl> public class <unk> { <nl>
ppp b / src / org / geometerplus / fbreader / network / <unk> . java <nl> public class <unk> { <nl> uri uri ; <nl>
ppp b / src / org / geometerplus / fbreader / network / <unk> . java <nl>
====NEW EXAMPLE====
ppp b / testdata / templates / while / booleanvariable_after . java <nl> public class foo { <nl> void m ( boolean x ) { <nl> while ( x ) < caret > <nl> return ; <nl> } <nl> } <nl>
ppp b / testdata / templates / while / booleanvariable_after . java <nl> public class foo { <nl> void m ( boolean x ) { <nl> while ( x ) < caret > <nl> return ; <nl> } <nl> <nl>
ppp b / testdata / templates / while / booleanvariable_after . java <nl> public class foo { <nl> void m ( boolean x ) { <nl> while ( x ) < caret > <nl> return ; <nl> } <nl> } <nl> <nl>
ppp b / testdata / templates / while / booleanvariable_after . java <nl> public class foo { <nl> void m ( boolean x ) { <nl> while ( x ) < caret > <nl> return ; <nl> } <nl> }
ppp b / testdata / templates / while / booleanvariable_after . java <nl> public class foo { <nl> void m ( boolean x ) { <nl> while ( x ) < caret > <nl> return ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> example : <nl> / > <nl> `
ppp b / readme . md <nl> example : <nl> / > <nl>
ppp b / readme . md <nl> example : <nl> /
ppp b / readme . md <nl> example : <nl>
ppp b / readme . md <nl> example : <nl> / > <nl> ` - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
====NEW EXAMPLE====
ppp b / library / src / com / sothree / slidinguppanel / slidinguppanellayout . java <nl> public class slidinguppanellayout extends viewgroup { <nl> <unk> = true ; <nl> <unk> = true ; <nl>
ppp b / library / src / com / sothree / slidinguppanel / slidinguppanellayout . java <nl> public class slidinguppanellayout extends viewgroup { <nl> <unk> = true ; <nl>
ppp b / library / src / com / sothree / slidinguppanel / slidinguppanellayout . java <nl> public class slidinguppanellayout extends viewgroup { <nl>
ppp b / library / src / com / sothree / slidinguppanel / slidinguppanellayout . java <nl>
ppp b / library / src / com / sothree / slidinguppanel / slidinguppanellayout . java <nl> public class slidinguppanellayout extends viewgroup { <nl> <unk> = true ; <nl> <unk> = true ; <nl> setcoveredfadecolor ( <unk> ; <nl> ( ( context ) ; <nl> <unk> = vc . getscaledtouchslop ( ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / scripts / start . sh <nl> fi <nl> " $ <unk> " start <nl>
ppp b / scripts / start . sh <nl> fi <nl>
ppp b / scripts / start . sh <nl> fi <nl> " $ <unk> " start <nl> <nl> sleep 1 <nl> tail - 100f " $ <unk> " / logs / sonar . log <nl>
ppp b / scripts / start . sh <nl> fi
ppp b / scripts / start . sh <nl>
====NEW EXAMPLE====
ppp b / preloaded - classes <nl> android . media . mediarecorder <nl> android . media . mediascanner <nl> android . media . <unk> <nl>
ppp b / preloaded - classes <nl> android . media . mediarecorder <nl> android . media . mediascanner <nl>
ppp b / preloaded - classes <nl> android . media . mediarecorder <nl> android . media . mediascanner <nl> android . media . <unk> <nl> android . media . <unk> <nl>
ppp b / preloaded - classes <nl> android . media . mediarecorder <nl> android . media . mediascanner <nl> android . media . <unk> <nl> android . media . <unk> <nl> android . media . . . android android . . credentials <nl> android . net . <unk> <nl>
ppp b / preloaded - classes <nl> android . media . mediarecorder <nl> android . media . mediascanner <nl> android . media . <unk> <nl> android . media . <unk> <nl> android . media . . . android android . . credentials <nl> android . net . <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / platform / testframework / src / com / intellij / testframework / platformtestcase . java <nl> public abstract class platformtestcase extends usefultestcase implements datapro <nl> private static void <unk> ( string prefix ) { <nl> system . setproperty ( <unk> . <unk> , prefix ) ; <nl> } <nl> retention ( ) ; <nl> @ retention ( retentionpolicy . runtime ) <nl>
ppp b / platform / testframework / src / com / intellij / testframework / platformtestcase . java <nl>
ppp b / platform / testframework / src / com / intellij / testframework / platformtestcase . java <nl> public abstract class platformtestcase extends usefultestcase implements datapro <nl>
ppp b / platform / testframework / src / com / intellij / testframework / platformtestcase . java <nl> public abstract class platformtestcase extends usefultestcase implements datapro <nl> private static void <unk> ( string prefix ) { <nl> system . setproperty ( <unk> . <unk> , prefix ) ; <nl> } <nl> retention ( ) ; <nl>
ppp b / platform / testframework / src / com / intellij / testframework / platformtestcase . java <nl> public abstract class platformtestcase extends usefultestcase implements datapro <nl> private static void <unk> ( string prefix ) { <nl> system . setproperty ( <unk> . <unk> , prefix ) ; <nl> } <nl> retention ( ) ; <nl> @ retention ( retentionpolicy . runtime <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b6e7a614fa897c0c297e5977f06a68ffaf48047a <nl> mode = push <nl> parent = f0c2fb1c0c5e5571aeae2fd0231f07d9e3159c3d <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / python / helpers / pydev / pydevd_comm . py <nl> import <unk> <nl> import traceback <nl> from pydevd_utils import sys <nl> * * <nl> from pydevd_utils import <unk> as quote <nl> from <unk> import <unk> <nl>
ppp b / python / helpers / pydev / pydevd_comm . py <nl> import <unk> <nl> import traceback <nl> from pydevd_utils import sys <nl> * * <nl> from pydevd_utils import <unk> as quote <nl> from <unk> import <unk> <nl> <nl>
ppp b / python / helpers / pydev / pydevd_comm . py <nl>
ppp b / python / helpers / pydev / pydevd_comm . py <nl> import <unk> <nl> import traceback <nl> from pydevd_utils import sys <nl> * * <nl> from pydevd_utils import <unk> as quote <nl> from <unk> import import <nl>
ppp b / python / helpers / pydev / pydevd_comm . py
====NEW EXAMPLE====
ppp b / core / jni / android_media_audiosystem . cpp <nl> static jint <unk> ( jnienv * env , <nl> null , <nl> null , <nl> null , <nl> null ) ; <nl> ) ; <nl> env - > deletelocalref ( <unk> ) ; <nl> if ( <unk> = = null ) { <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> static jint <unk> ( jnienv * env , <nl> null , <nl> null , <nl> null , <nl> null ) ; <nl> ) ; <nl> env - > deletelocalref ( <unk> ) ; <nl> if ( <unk> = = null ) <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> static jint <unk> ( jnienv * env , <nl> null , <nl> null , <nl> null , <nl> null ) ; <nl> ) ; <nl> env - > deletelocalref ( <unk> ) ; <nl> if ( <unk> = = null { <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> static jint <unk> ( jnienv * env , <nl> null , <nl> null , <nl> null , <nl> null ) ; <nl> ) ; <nl> env - > deletelocalref ( <unk> ) ; <nl> if ( <unk> = = null ) ) <nl>
ppp b / core / jni / android_media_audiosystem . cpp <nl> static jint <unk> ( jnienv * env , <nl> null , <nl> null , <nl> null , <nl> null ) ; <nl> ) ; <nl> env - > deletelocalref ( <unk> ) ; <nl> if ( <unk> = = null ) ; <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 9 . 3 - rc2 <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 3 - rc2 <nl> * storm - 546 : stale leader cannot navigate <nl> * updated french translation <nl> * storm - storm - : : local hostname configuration ignored by executor * * storm - 492 : test timeout should be configurable <nl> * storm - 540 : change default time format in logs to iso8601 in order to timezone <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 3 - rc2 <nl> * storm - 546 : stale leader cannot navigate <nl> * updated french translation <nl> * storm - storm - : : local hostname configuration ignored by executor * * storm - 492 : test timeout should be configurable <nl> * storm - 540 : change default time format in logs to iso8601 in order to include timezone <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 3 - rc2 <nl> * storm - 546 : stale leader cannot navigate <nl> * updated french translation <nl> * storm - storm - : : local hostname configuration ignored by executor * * storm - 492 : test timeout should be configurable <nl> * storm - 540 : change default time format in logs to iso8601 in order to include <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 3 - rc2 <nl> * storm - 546 : stale leader cannot navigate <nl> * updated french translation <nl> * storm - storm - : : local hostname configuration ignored by executor * * storm - 492 : test timeout should be configurable <nl> * storm - 540 : change default time format in logs to iso8601 in order to to <nl>
====NEW EXAMPLE====
ppp b / core / java / android / net / <unk> . java <nl> public class <unk> implements parcelable { <nl> } <nl> public <unk> ( ) { <nl> } <nl> / / copy constructor instead of clone <nl>
ppp b / core / java / android / net / <unk> . java <nl> public class <unk> implements parcelable { <nl> } <nl> public <unk> ( ) { <nl> } <nl>
ppp b / core / java / android / net / <unk> . java <nl> public class <unk> implements parcelable { <nl> } <nl> public <unk> ( ) { <nl> } <nl> / / copy constructor instead of <nl>
ppp b / core / java / android / net / <unk> . java <nl> public class <unk> implements parcelable { <nl> } <nl> public <unk> ( ) { <nl>
ppp b / core / java / android / net / <unk> . java <nl> public class <unk> implements parcelable { <nl> } <nl> public <unk> ( ) { <nl> } <nl> / / copy constructor instead of of <nl>
====NEW EXAMPLE====
ppp b / src / org / geometerplus / <unk> / core / util / <unk> . java <nl> public final class <unk> { <nl> } else { <nl> <unk> = <unk> ; <nl> } <nl> } <nl>
ppp b / src / org / geometerplus / <unk> / core / util / <unk> . java <nl> public final class <unk> { <nl> } else { <nl> <unk> = <unk> ; <nl> } <nl> } <nl> @ override <nl>
ppp b / src / org / geometerplus / <unk> / core / util / <unk> . java <nl> public final class <unk> { <nl> } else { <nl> <unk> = <unk> ; <nl> } <nl> } <nl> override <nl>
ppp b / src / org / geometerplus / <unk> / core / util / <unk> . java <nl> public final class <unk> { <nl> } else { <nl> <unk> = <unk> ; <nl> } <nl>
ppp b / src / org / geometerplus / <unk> / core / util / <unk> . java <nl> public final class <unk> { <nl> } else { <nl> <unk> = <unk> ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> for rate limiting a leader cannot navigate <nl> * storm - storm - : : bump timeout by 50 % due to intermittent travis build failures <nl> * storm - <unk> : modify spout async loop to treat activate / deactivate <nl> * storm - <unk> : upgrade to thrift 0 . 9 . 3 <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> for rate limiting a leader cannot navigate <nl> * storm - storm - : : bump timeout by 50 % due to intermittent travis build failures <nl> * storm - <unk> : modify spout async loop to treat activate / deactivate <nl> * storm - <unk> : upgrade to thrift 0 . 9 . . <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> for rate limiting a leader cannot navigate <nl> * storm - storm - : : bump timeout by 50 % due to intermittent travis build failures <nl> * storm - <unk> : modify spout async loop to treat activate / deactivate <nl> * storm - <unk> : upgrade to thrift 0 . 9 . <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> for rate limiting a leader cannot navigate <nl> * storm - storm - : : bump timeout by 50 % due to intermittent travis build failures <nl> * storm - <unk> : modify spout async loop to treat activate / deactivate <nl> * storm - <unk> : upgrade to thrift 0 . 9 . 3 3 <nl>
====NEW EXAMPLE====
ppp b / maven - android - plugin / pom . xml <nl> < / configuration > <nl> < version > 2 . 2 < / version > <nl> < / plugin > <nl> < / plugins > <nl>
ppp b / maven - android - plugin / pom . xml <nl>
ppp b / maven - android - plugin / pom . xml <nl> < / configuration > <nl>
ppp b / maven - android - plugin / pom . xml <nl> < / configuration > <nl> < version > 2 . 2 < / version > <nl> < / plugin > <nl> \ no newline at end of file <nl>
ppp b / maven - android - plugin / pom . xml
====NEW EXAMPLE====
ppp b / readme . md <nl> news : spark 2 . 1 is now available on maven central ! ! ! <nl>
ppp b / readme . md <nl> news : spark 2 . 1 is now available on maven central ! ! ! : <nl> < dependency > <nl>
ppp b / readme . md <nl> news : spark 2 . 1 is now available on maven central ! ! ! : <nl> < dependency <nl>
ppp b / readme . md <nl> news : spark 2 . 1 is now available on maven central ! ! ! : <nl> < dependency > <nl> < groupid > com . <unk> < / groupid > <nl> < artifactid > - core < / artifactid > <nl> < version > 2 0 . 0 < / version > <nl> < / dependency > <nl> ` ` ` <nl>
ppp b / readme . md <nl> news : spark 2 . 1
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8b4dde10b12d1d90fd3d6b9a02e518624554bfc6 <nl> mode = push <nl> parent = 3704809b4202708f87499ddb2d383832ca8416ad <nl> remote = git @ github . com : liferay / com - liferay - bookmarks . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / bookmarks / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> version = ' 2 . <unk> ' <nl> def jarversion = version <nl>
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> version = ' 2 . <unk> ' <nl> def jarversion = version <nl> <nl>
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> version = ' 2 . <unk> ' <nl> def jarversion = 600m <nl>
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> version = ' 2 . <unk> ' <nl> def jarversion = 768m <nl>
ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> version = ' 2 . <unk> ' <nl> def jarversion = = <nl>
====NEW EXAMPLE====
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl> > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl> <nl>
====NEW EXAMPLE====
ppp b / pom - main - shaded . xml <nl> < goal > shade < / goal > <nl>
ppp b / pom - main - shaded . xml <nl>
ppp b / pom - main - shaded . xml <nl> < goal > shade < / goal <nl>
ppp b / pom - main - shaded . xml <nl> < goal > shade < / goal > <nl> < / goals > <nl> < configuration > <nl> < transformers transformers <nl> * updated lithuanian translation <nl> < transformers > <nl> < transformer implementation = " org . apache . maven . plugins . shade . resource . manifestresourcetransformer " > <nl> < mainclass > com . google . javascript . jscomp . < / mainclass > <nl>
ppp b / pom - main - shaded . xml <nl> < goal > shade < / goal > <nl> < / goals > <nl> < configuration > <nl> < transformers transformers <nl> * updated lithuanian translation <nl> < transformers > <nl> < transformer implementation = " org . apache . maven . plugins . shade . resource . manifestresourcetransformer " > <nl> < mainclass > com . google . javascript . jscomp . < / > <nl>
====NEW EXAMPLE====
ppp b / src / main / org / codehaus / groovy / runtime / defaultgroovymethods . java <nl> import java . util . regex . pattern ; <nl> * @ author brad long <nl> * @ author jim jagielski <nl> * @ author rodolfo velasco <nl> * updated french translation <nl> * * / <nl> public class defaultgroovymethods extends defaultgroovymethodssupport { <nl>
ppp b / src / main / org / codehaus / groovy / runtime / defaultgroovymethods . java <nl>
ppp b / src / main / org / codehaus / groovy / runtime / defaultgroovymethods . java <nl> import java . util . regex . pattern ; <nl>
ppp b / src / main / org / codehaus / groovy / runtime / defaultgroovymethods . <nl>
ppp b / src / main / org / codehaus / groovy / runtime / defaultgroovymethods . java <nl> import java . util . regex . pattern ; <nl> * @ author brad long <nl> * @ author jim jagielski <nl> * @ author rodolfo velasco <nl> * updated french translation <nl> * * / <nl> public class defaultgroovymethods extends defaultgroovymethodssupport <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / community / browser / app / styles / inspector . styl <nl> inspector - row - height = <unk> <nl> / / background - color : # <unk> <nl> font - size : 12px <nl> width : 100 % <nl> \ no newline at end of file <nl> row - toggle <nl> float : right <nl> display : block <nl>
ppp b / community / browser / app / styles / inspector . styl <nl> inspector - row - height = <unk> <nl>
ppp b / community / browser / app / styles / inspector . styl <nl>
ppp b / community / browser / app / styles / inspector . styl <nl> inspector - row - height = <unk> <nl> / / background - color : # <unk> <nl> font - size : 12px <nl> width : 100 % <nl> \ no newline at end of file <nl> row - toggle <nl> float : right <nl> display : <nl>
ppp b / community / browser / app / styles / inspector . styl <nl> inspector - row - height = <nl>
====NEW EXAMPLE====
ppp b / src / main / com / mongodb / mongo . java <nl> public class mongo { <nl> @ deprecated <nl> public static final int <unk> = 10 ; <nl> private static static final string full_version = " 2 . 10 . 0 " ; <nl> static int <unk> ; <nl>
ppp b / src / main / com / mongodb / mongo . java <nl> public class mongo { <nl> @ deprecated <nl> public static final int <unk> = 10 ; <nl> private static static final string full_version = " 2 . 10 . 0 " ; <nl> static int <unk> <unk> <nl>
ppp b / src / main / com / mongodb / mongo . java <nl> public class mongo { <nl> @ deprecated <nl> public static final int <unk> = 10 ; <nl> private static static final string full_version = " 2 . 10 . 0 " ; <nl> static int <unk> <unk> ; <nl>
ppp b / src / main / com / mongodb / mongo . java <nl> public class mongo { <nl> @ deprecated <nl> public static final int <unk> = 10 ; <nl> private static static final string full_version = " 2 . 10 . 0 " ; <nl> static int <unk> <nl>
ppp b / src / main / com / mongodb / mongo . java <nl> public class mongo { <nl> @ deprecated <nl> public static final int <unk> = 10 ; <nl> private static static final string full_version = " 2 . 10 . 0 " ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f9566f093e50bfe44d7a809393afe2e95e224b38 <nl> mode = push <nl> parent = 7ab0381d710c93de705e693b2c66c7220bc8e5bc <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 . " <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - license - manager . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl>
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / osmand / src / net / osmand / plus / osmo / <unk> . java <nl> public class <unk> implements <unk> { <nl> this . plugin = plugin ; <nl> this . service = service ; <nl> this . tracker = null ; <nl> this . tracker = tracker ; <nl> } <nl> public jsonobject <unk> ( ) throws jsonexception { <nl>
ppp b / osmand / src / net / osmand / plus / osmo / <unk> . java <nl>
ppp b / osmand / src / net / osmand / plus / osmo / <unk> . java <nl> public class <unk> implements <unk> { <nl>
ppp b / osmand / src / net / osmand / plus / osmo / <unk> . <nl>
ppp b / osmand / src / net / osmand / plus / osmo / <unk> . java <nl> public class <unk> implements <unk> { <nl> this . plugin = plugin ; <nl> this . service = service ; <nl> this . tracker = null ; <nl> this . tracker = tracker ; <nl> } <nl> public jsonobject <unk> ( ) throws jsonexception jsonexception <nl>
====NEW EXAMPLE====
ppp b / include / utils / <unk> . h <nl> public : <nl> / / used to override the <unk> <unk> . <nl> class <unk> { <nl> friend class <unk> ; <nl> public : <nl> virtual ~ <nl> : <nl> virtual ~ <unk> ( ) ; <nl> private : <nl>
ppp b / include / utils / <unk> . h <nl> public : <nl>
ppp b / include / utils / <unk> . h <nl> public : <nl> / / used to override the <unk> <unk> . <nl> class <unk> { <nl> friend class <unk> ; <nl> public : <nl> virtual ~ <nl> : <nl> virtual ~ <unk> ( ) ; <nl> private : <nl> <nl>
ppp b / include / utils / <unk> . h <nl> public : <nl> / / used to override the <unk> <unk> . <nl> class <unk> { <nl> friend class <unk> ; <nl> public : <nl> virtual ~ <nl> : <nl> virtual ~ <unk> ( ) ; <nl>
ppp b / include / utils / <unk> . h <nl> public : <nl> / / used to override the <unk> <unk> . <nl> class <unk> { <nl> friend class <unk> ; <nl> public : <nl> virtual ~ <nl> : <nl> virtual ~ <unk> ( ) ; <nl> private :
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / docs / <unk> . md <nl> class <unk> extends react . component { <nl> render ( ) { <nl> return ( <nl> < view > <nl> { this . props . <unk> . map ( this . <unk> ) } <nl> < / view > <nl> ) ; <nl> } <nl>
ppp b / docs / <unk> . md <nl> class <unk> extends react . component { <nl> render ( ) { <nl> return ( <nl> < view > <nl> { this . props . <unk> . map ( this . <unk> ) } <nl> < / view > <nl> ) ; } <nl>
ppp b / docs / <unk> . md <nl> class <unk> extends react . component { <nl> render ( ) { <nl> return ( <nl> < view > <nl> { this . props . <unk> . map ( this . <unk> ) } <nl> < / view > <nl> ) ; <nl> }
ppp b / docs / <unk> . md <nl> class <unk> extends react . component { <nl> render ( ) { <nl> return ( <nl> < view > <nl> { this . props . <unk> . map ( this . <unk> ) } <nl> < / view > <nl> ) ; <nl> } <nl> <nl>
ppp b / docs / <unk> . md <nl> class <unk> extends react . component { <nl> render ( ) { <nl> return ( <nl> < view > <nl> { this . props . <unk> . map ( this . <unk> ) } <nl> < / view > <nl> ) ; <nl> <nl>
====NEW EXAMPLE====
ppp b / graphics / java / android / graphics / drawable / layerdrawable . java <nl> public class layerdrawable extends drawable implements drawable . callback { <nl> layer . <unk> . <unk> ( ) ; <nl> layer . <unk> . <unk> ( this ) ; <nl> } <nl> } ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / graphics / java / android / graphics / drawable / layerdrawable . java <nl> public class layerdrawable extends drawable implements drawable . callback { <nl> layer . <unk> . <unk> ( ) ; <nl> layer . <unk> . <unk> ( this ) ; <nl> } <nl> } ( ) ; <nl> } <nl> } <nl>
ppp b / graphics / java / android / graphics / drawable / layerdrawable . java <nl> public class layerdrawable extends drawable implements drawable . callback { <nl> layer . <unk> . <unk> ( ) ; <nl> layer . <unk> . <unk> ( this ) ; <nl> } <nl> } else ( ) ; <nl> } <nl> } <nl>
ppp b / graphics / java / android / graphics / drawable / layerdrawable . java <nl> public class layerdrawable extends drawable implements drawable . callback { <nl> layer . <unk> . <unk> ( ) ; <nl> layer . <unk> . <unk> ( this ) ; <nl> } <nl> } ( ) ; <nl> } <nl> } } <nl>
ppp b / graphics / java / android / graphics / drawable / layerdrawable . java <nl> public class layerdrawable extends drawable implements drawable . callback { <nl> layer . <unk> . <unk> ( ) ; <nl> layer . <unk> . <unk> ( this ) ; <nl> } <nl> } <nl> return true ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> task licenseformatandroid ( type : nl . javadude . gradle . plugins . license . license ) { <nl> licenseformat . dependson licenseformatandroid <nl> ext { <nl> majorversion = " 2 . 23 . " <nl> compilesdkversion = 23 <nl> minsdkversion = 17 <nl>
ppp b / build . gradle <nl> task licenseformatandroid ( type : nl . javadude . gradle . plugins . license . license ) { <nl> licenseformat . dependson licenseformatandroid <nl> ext { <nl> majorversion = " 2 . 23 . " <nl> compilesdkversion = 23 <nl> minsdkversion = 17 17 <nl>
ppp b / build . gradle <nl> task licenseformatandroid ( type : nl . javadude . gradle . plugins . license . license ) { <nl> licenseformat . dependson licenseformatandroid <nl> ext { <nl> majorversion = " 2 . 23 . " <nl> compilesdkversion = 23 <nl> minsdkversion = = <nl>
ppp b / build . gradle <nl> task licenseformatandroid ( type : nl . javadude . gradle . plugins . license . license ) { <nl> licenseformat . dependson licenseformatandroid <nl> ext { <nl> majorversion = " 2 . 23 . " <nl> compilesdkversion = 23 <nl> minsdkversion = <nl>
ppp b / build . gradle <nl> task licenseformatandroid ( type : nl . javadude . gradle . plugins . license . license ) { <nl> licenseformat . dependson licenseformatandroid <nl> ext { <nl> majorversion = " 2 . 23 . " <nl> compilesdkversion = 23 <nl> minsdkversion = 17 <nl> <nl>
====NEW EXAMPLE====
ppp b / gremlin - plugin / pom . xml <nl> the relevant commercial agreement . <nl> < configuration > <nl> < descriptors > <nl>
ppp b / gremlin - plugin / pom . xml <nl> the relevant commercial agreement . <nl> < configuration > <nl>
ppp b / gremlin - plugin / pom . xml <nl> the relevant commercial agreement . <nl>
ppp b / gremlin - plugin / pom . xml <nl> the relevant commercial agreement . <nl> < configuration > <nl> < descriptors > <nl> < descriptor > src / main / assembly / server - plugin . xml < / > <nl>
ppp b / gremlin - plugin / pom . xml <nl> the relevant commercial agreement . <nl> < configuration > <nl> < descriptors > <nl> < descriptor > src / main / assembly / server - plugin . xml < / descriptor > <nl>
====NEW EXAMPLE====
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> selectiondone ( ) ; <nl> } <nl> morientation = <unk> . orientation ; <nl> <unk> ( ) ; <nl> } <nl> / * * <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> selectiondone ( ) ; <nl> } <nl> morientation = <unk> . orientation ; <nl> <unk> ( ) ; <nl> } <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> selectiondone ( ) ; <nl> } <nl> morientation = <unk> . orientation ; <nl> <unk> ( ) ; <nl> } <nl> / * * <nl> <nl>
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> selectiondone ( ) ; <nl> } <nl> morientation = <unk> . orientation ; <nl> <unk> ( ) ; <nl> } <nl> / * *
ppp b / core / java / android / webkit / webview . java <nl> public class webview extends absolutelayout <nl> selectiondone ( ) ; <nl> } <nl> morientation = <unk> . orientation ; <nl> <unk> ( ) ; <nl> } <nl> / * * * <nl>
====NEW EXAMPLE====
ppp b / telecomm / java / android / telecom / <unk> . java <nl> public abstract class <unk> extends service { <nl> * @ param <unk> <nl> * @ param request <nl> * @ return <nl> * / <nl> * updated slovak translation <nl> public connection <unk> ( <unk> <unk> , <nl> <unk> request ) { <nl>
ppp b / telecomm / java / android / telecom / <unk> . java <nl> public abstract class <unk> extends service { <nl>
ppp b / telecomm / java / android / telecom / <unk> . java <nl>
ppp b / telecomm / java / android / telecom / <unk> . java <nl> public abstract class <unk> extends service { <nl> * @ param <unk> <nl> * @ param request <nl> * @ return <nl> * / <nl> * updated slovak translation <nl> public connection <unk> ( <unk> <unk> , <nl> <unk> request ) <nl>
ppp b / telecomm / java / android / telecom / <unk> . java <nl> public abstract class <unk> extends service { <nl> * @ param <unk> <nl> * @ param request <nl> * @ return <nl> * / <nl> * updated slovak translation <nl> public connection <unk> ( <unk> <unk> , <nl> <unk> request { <nl>
====NEW EXAMPLE====
ppp b / core / java / android / app / <unk> . java <nl>
ppp b / core / java / android / app / <unk> . java <nl> public abstract class <unk> extends binder <nl> case <unk> : <nl> { <nl> <unk> ( ) ; <nl> return onfocuschangelistener getonfocuschangelistener ( ) ; <nl> ) ; <nl> return true ; <nl> } <nl>
ppp b / core / java / android / app / <unk> . java <nl> public abstract class <unk> extends binder <nl> case <unk> : <nl> { <nl> <unk> ( ) ; <nl> return onfocuschangelistener getonfocuschangelistener ( ) ; <nl> ) ; <nl> return true ; <nl> <nl>
ppp b / core / java / android / app / <unk> . java <nl> public abstract class <unk> extends binder <nl> case <unk> : <nl> { <nl> <unk> ( ) ; <nl> return onfocuschangelistener getonfocuschangelistener ( ) ; <nl> ) ; <nl> return true ; <nl> } } <nl>
ppp b / core / java / android / app / <unk> . java <nl> public abstract class <unk> extends binder <nl> case <unk> : <nl> { <nl> <unk> ( ) ; <nl> return onfocuschangelistener getonfocuschangelistener ( ) ; <nl> ) ; <nl> return true ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9c8e92cb93ca923ab74a0ec4955ea67fe22d4680 <nl> mode = push <nl> parent = e51ff0ea332a4e450a0d96bc261101ad577be299 <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / telephony / java / android / telephony / <unk> . java <nl> public class <unk> { <nl> } <nl> } catch ( remoteexception ex ) { <nl>
ppp b / telephony / java / android / telephony / <unk> . java <nl> public class <unk> { <nl> } <nl> } catch ( remoteexception ex ) { <nl> } <nl> } <nl>
ppp b / telephony / java / android / telephony / <unk> . java <nl> public class <unk> { <nl> } <nl> } catch ( remoteexception ex ) { <nl> } <nl>
ppp b / telephony / java / android / telephony / <unk> . java <nl> public class <unk> { <nl> } <nl> } catch ( remoteexception ex ) { <nl> } <nl> ; <nl>
ppp b / telephony / java / android / telephony / <unk> . java <nl> public class <unk> { <nl> } <nl> } catch ( remoteexception ex ) { <nl> } <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / enterprise / pom . xml <nl> < module > server - extensions < / module > <nl> < module > server < / module > <nl> < module > examples < / module > <nl>
ppp b / enterprise / pom . xml <nl> < module > server - extensions < / module > <nl> < module > server < / module > <nl> < module > examples < / module > <nl> < / < / < / module > <nl> < module > standalone < / module > <nl> < / modules > <nl>
ppp b / enterprise / pom . xml <nl> < module > server - extensions < / module > <nl>
ppp b / enterprise / pom . xml <nl> < module > server - extensions < / module > <nl> < module > server < / module > <nl> < module > examples < / module > <nl> < / < / < / module > <nl> < module > standalone < / module > <nl> < / modules <nl>
ppp b / enterprise / pom . xml <nl> < module > server - extensions < / module > <nl> < module > server < / module > <nl> < module > examples < / module > <nl> < / < / < / module > <nl> < module > standalone < / module > <nl> < / > <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> env : <nl> <unk> <nl> <unk> <nl> \ no newline at end of file <nl> <nl> <nl> <nl> <nl> <nl> <nl> <unk> <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> env : <nl> <unk> <nl> <unk> <nl> \ no newline at end of file <nl> <nl> <nl> <nl> <nl> <nl> <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> env : <nl> <unk> <nl> <unk> <nl> \ no newline at end of file <nl> <nl> <nl> <nl> <nl> <nl> <nl> <unk> <unk> <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> env : <nl> <unk> <nl> <unk> <nl> \ no newline at end of file <nl> <nl> <nl> <nl> <nl> <nl> \ no newline at end of file <nl>
ppp b / . travis . yml <nl> env : <nl> <unk> <nl> <unk> <nl> \ no newline at end of file <nl> <nl> <nl> <nl> <nl> <nl> <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9604f0ea7bc69d38edebd4e368963a35dab91dde <nl> mode = push <nl> parent = 69d23589daac9ddb3650e53fa8a4635cf598cef0 <nl> remote = git @ github . com : liferay / com - liferay - rss . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl>
ppp b / modules / apps / web - experience / rss / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> ' com . neenbedankt . gradle . plugins : android - - apt : 1 . 8 ' <nl> } <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> ' com . neenbedankt . gradle . plugins : android - - apt : 1 . 8 ' <nl> } <nl> } <nl> ` ` <nl>
ppp b / readme . md <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> ' com . neenbedankt . gradle . plugins : android - - apt : 1 . 8 ' <nl> } <nl> } <nl> ` ` ` <nl> <nl>
ppp b / readme . md <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> ' com . neenbedankt . gradle . plugins : android - - apt : 1 . 8 ' <nl> } <nl> } <nl> ` ` ` ` <nl>
ppp b / readme . md <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> ' com . neenbedankt . gradle . plugins : android - - apt : 1 . 8 ' <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - microblogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / microblogs / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / src / cpp / session / modules / rmarkdown / <unk> . cpp <nl> private : <nl>
ppp b / src / cpp / session / modules / rmarkdown / <unk> . cpp <nl> private : <nl> . call ( & <unk> , & <unk> ) ; <nl>
ppp b / src / cpp / session / modules / rmarkdown / <unk> . cpp <nl>
ppp b / src / cpp / session / modules / rmarkdown / <unk> . cpp <nl> private : <nl> . call ( & <unk> , & <unk> ) <nl>
ppp b / src / cpp / session / modules / rmarkdown / <unk> . <nl>
====NEW EXAMPLE====
ppp b / grails - resources / src / grails / grails - app / conf / buildconfig . groovy <nl>
ppp b / grails - resources / src / grails / grails - app / conf / buildconfig . <nl>
ppp
ppp b / grails - resources / src / grails / grails - app / conf / buildconfig . groovy <nl> grails . project . dependency . resolution = { <nl> compile " : resources : 1 . 1 . 1 " <nl> build " : tomcat : $ grailsversion " <nl> } <nl> } <nl> " " : : : $ grailsversion " <nl> } <nl> } <nl>
ppp b / grails - resources / src / grails / grails - app / conf / buildconfig . groovy <nl> grails . project . dependency . resolution = { <nl> compile " : resources : 1 . 1 . 1 " <nl> build " : tomcat : $ grailsversion " <nl> } <nl> } <nl> " " : : : $ grailsversion " <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / authors <nl> eric william <unk> < eric . w . <unk> @ gmail . com > <nl>
ppp b / authors <nl> eric william <unk> < eric . w . <unk> @ gmail . com <nl>
ppp b / authors <nl> eric william <unk> < eric . w
ppp b / authors <nl> eric william <unk> < eric . w . <unk> @ gmail . com > <nl> <unk> <unk> < <unk> @ <unk> . com > <nl> mike <unk> < mike . <unk> @ gmx . net > <nl> mike <unk> < surfaceview @ <unk> . com . com . com . com / github . com ) <nl> mike <unk> < / mike @ <unk> . com <nl>
ppp b / authors <nl> eric william <unk> < eric . w . <unk> @ gmail . com > <nl> <unk> <unk> < <unk> @ <unk> . com > <nl> mike <unk> < mike . <unk> @ gmx . net > <nl> mike <unk> < surfaceview @ <unk> . com . com . com . com / github . com ) <nl> mike <unk> < / mike @ <unk> . com > <nl>
====NEW EXAMPLE====
ppp b / jetty - websocket / pom . xml <nl> < / execution > <nl>
ppp b / jetty - websocket / pom . xml <nl>
ppp b / jetty - websocket / pom . xml <nl> < / execution > <nl> < / executions > <nl> < configuration > <nl> < comparisonversion > 9 . 0 . 3 . < / < / . . . 3 . <unk> < / comparisonversion > <nl> < / configuration > <nl> < / plugin > <nl>
ppp
ppp b / jetty - websocket / pom . xml <nl> < / execution > <nl> < / executions > <nl> < configuration > <nl> < comparisonversion > 9 . 0 . 3 . < / < / . . . 3 . <unk> < / comparisonversion > <nl> < / configuration > <nl> < / plugin <nl>
====NEW EXAMPLE====
ppp b / docs / reference / query - dsl / percolate - query . asciidoc <nl> get / _search <nl> { <nl> " query " : { <nl> " term " : : { <nl> " query . <unk> " : " " <nl> } <nl> } <nl> } <nl>
ppp b / docs / reference / query - dsl / percolate - query . asciidoc <nl> get / _search <nl> { <nl> " query " : { <nl> " term " : : { <nl> " query . <unk> " : " " <nl> } <nl> } <nl> <nl>
ppp b / docs / reference / query - dsl / percolate - query . asciidoc <nl>
ppp b / docs / reference / query - dsl / percolate - query . asciidoc <nl> get / _search <nl> { <nl> " query " : { <nl> " term " : : { <nl> " query . <unk> " : " " <nl> } <nl> } <nl> }
ppp b / docs / reference / query - dsl / percolate - query . asciidoc <nl> get / _search <nl> { <nl> " query " : { <nl> " term " : : { <nl> " query . <unk> " : " " <nl> } <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl>
ppp b / build . gradle <nl> buildscript { <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> nanny <nl> _release <nl> * . zip <nl> . lein - deps - sum <nl>
ppp b / . gitignore <nl> nanny <nl> _release <nl> * . zip <nl> . lein - deps -
ppp b / . gitignore <nl> nanny <nl> _release <nl> * . zip <nl> . lein - deps - sum sum <nl>
ppp b / . gitignore <nl> nanny <nl> _release <nl>
ppp b / . gitignore <nl> nanny <nl> _release <nl> * . zip <nl>
====NEW EXAMPLE====
ppp b / ratpack - stylesheets / <unk> - elements . scss <nl> $ footer - font - size : <unk> ! default ; <nl> @ include link - colors ( $ white , $ <unk> ) ; <nl> @ include link - <unk> ( $ white , $ <unk> ) ; <nl> } <nl> $ ( ) ; <nl> } <nl> } <nl>
ppp b / ratpack - stylesheets / <unk> - elements . scss <nl> $ footer - font - size : <unk> ! default ; <nl>
ppp b / ratpack - stylesheets / <unk> - elements . scss <nl> $ footer - font - size : <unk> ! default ; <nl> @ include link - colors ( $ white , $ <unk> ) ; <nl> @ include link - <unk> ( $ white , $ <unk> ) ; <nl> } <nl> } ( ) ; <nl> } <nl> } <nl>
ppp b / ratpack - stylesheets / <unk> - elements . scss <nl> $ footer - font - size : <unk> ! default ; <nl> @ include link - colors ( $ white , $ <unk> ) ; <nl> @ include link - <unk> ( $ white , $ <unk> ) ; <nl> } <nl> $ ( ) ; <nl> } <nl> } } <nl>
ppp b / ratpack - stylesheets / <unk> - elements . scss <nl> $ footer - font - size : <unk> ! default ; <nl> @ include link - colors ( $ white , $ <unk> ) ; <nl> @ include link - <unk> ( $ white , $ <unk> ) ; <nl> } <nl> <unk> ( ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> local . properties <nl> # # idea <nl> * . idea <nl> * . idea <nl> * . iml <nl>
ppp b / . gitignore <nl> local . properties <nl> # # idea <nl> * . idea <nl> * . idea <nl>
ppp b / . gitignore <nl> local . properties <nl> # # idea <nl> * . idea <nl> * . idea <nl> * iml <nl>
ppp b / . gitignore <nl> local . properties <nl> # # idea <nl> * . idea <nl>
ppp b / . gitignore <nl> local . properties <nl> # # idea <nl> * . idea <nl> * . idea <nl> * . . <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1848 : use rmr rather than rmpath <nl> * storm - storm - : make make kafkamessageid partition serializable to support event logging <nl> * storm - 1862 : flux shellspout and shellbolt can ' t emit to named streams <nl> * storm - 1728 : transactionaltridentkafkaspout error <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1848 : use rmr rather than rmpath <nl> * storm - storm - : make make kafkamessageid partition serializable to support event logging <nl> * storm - 1862 : flux shellspout and shellbolt can ' t emit to named streams <nl> * storm - 1728 : transactionaltridentkafkaspout <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1848 : use rmr rather than rmpath <nl> * storm - storm - : make make kafkamessageid partition serializable to support event logging <nl> * storm - 1862 : flux shellspout and shellbolt can ' t emit to named streams <nl> * storm - 1728 : transactionaltridentkafkaspout error error <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1848 : use rmr rather than rmpath <nl> * storm - storm - : make make kafkamessageid partition serializable to support event logging <nl> * storm - 1862 : flux shellspout and shellbolt can ' t emit to named streams <nl> * storm - 1728 : transactionaltridentkafkaspout transactionaltridentkafkaspout <nl>
====NEW EXAMPLE====
ppp b / src / main / java / com / zaxxer / hikari / proxy / <unk> . java <nl> public final class <unk> <nl> { <nl> private <unk> ( ) <nl> { <nl> / / <unk> <nl> } <nl> / * * <nl>
ppp b / src / main / java / com / zaxxer / hikari / proxy / <unk> . java <nl> public final class <unk> <nl> { <nl> private <unk> ( ) <nl> { <nl> / / <unk> <nl> } <nl> / * * <nl> <nl>
ppp b / src / main / java / com / zaxxer / hikari / proxy / <unk> . java <nl> public final class <unk> <nl> { <nl> private <unk> ( ) <nl> { <nl> / / <unk> <nl> } <nl> / * * * <nl>
ppp b / src / main / java / com / zaxxer / hikari / proxy / <unk> . java <nl> public final class <unk> <nl> { <nl> private <unk> ( ) <nl> { <nl> / / <unk> <nl> } <nl> / * *
ppp b / src / main / java / com / zaxxer / hikari / proxy / <unk> . java <nl> public final class <unk> <nl> { <nl> private <unk> ( ) <nl> { <nl> / / <unk> <nl> } <nl> / * <nl>
====NEW EXAMPLE====
ppp b / seriesguide / src / com / battlelancer / seriesguide / constants . java <nl> package com . battlelancer . seriesguide ; <nl>
ppp b / seriesguide / src / com / battlelancer / seriesguide / constants . java <nl> package com . battlelancer . seriesguide ; <nl> import
ppp b / seriesguide / src / com / battlelancer / seriesguide / constants . java <nl> package com . battlelancer . seriesguide ; <nl> import ; <nl>
ppp b / seriesguide / src / com / battlelancer / seriesguide / constants . java <nl> package com . battlelancer . seriesguide ; <nl> import com
ppp b / seriesguide / src / com / battlelancer / seriesguide / constants . java <nl> package com . battlelancer . seriesguide ; <nl> import com ; <nl>
====NEW EXAMPLE====
ppp b / enterprise / src / site / apt / index . apt <nl> neo4j <nl> neo is a graph database . it is an embedded , disk - based , fully transactional <nl> java persistence engine that stores data structured in graphs rather than in tables . <nl>
ppp b / enterprise / src / site / apt / index . apt <nl> neo4j <nl> neo is a graph database . it is an embedded , disk - based , fully transactional <nl> java persistence engine that stores data structured in graphs rather than in tables <nl>
ppp b / enterprise / src / site / apt / index . apt <nl> neo4j <nl> neo is a graph database . it is an embedded , disk - based , fully transactional <nl> java persistence engine that stores data structured in graphs rather than in tables tables <nl>
ppp b / enterprise / src / site / apt / index . apt <nl> neo4j <nl> neo is a graph database . it is an embedded , disk - based , fully transactional <nl> java persistence engine that stores data structured in graphs rather than in tables . . <nl>
ppp b / enterprise / src / site / apt / index . apt <nl> neo4j <nl> neo is a graph database . it is an embedded , disk - based , fully transactional <nl> java persistence engine that stores data structured in graphs rather than in tables . <nl> <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl> * storm - 194 for intermixing high throughput in worker . thrift7 namespace <nl> * storm - * storm - storm - 194 : support list of strings in * . worker . childopts , handle spaces * * storm - 288 : fixes version spelling pom . xml <nl> * storm - 208 : add storm - kafka as an external module <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl> * storm - 194 for intermixing high throughput in worker . thrift7 namespace <nl> * storm - * storm - storm - 194 : support list of strings in * . worker . childopts , handle spaces * * storm - 288 : fixes version spelling pom . xml <nl> * storm - 208 : add storm - kafka as an external <nl>
ppp b / changelog . md <nl> # # 0 . 9 . 2 - incubating ( unreleased ) <nl> * storm - 194 for intermixing high throughput in worker . thrift7 namespace <nl> * storm - * storm - storm - 194 : support list of strings in * . worker . childopts , handle spaces * * storm - 288 : fixes version spelling pom . xml <nl> * storm - 208 : add storm - kafka as an external module module <nl>
====NEW EXAMPLE====
ppp b / src / main / java / org / terasology / rendering / gui / framework / <unk> . java <nl> public abstract class <unk> { <nl> if ( <unk> ! = null ) { <nl> <unk> . <unk> ( true ) ; <nl> } <nl> } <nl> } <nl>
ppp b / src / main / java / org / terasology / rendering / gui / framework / <unk> . java <nl> public abstract class <unk> { <nl> if ( <unk> ! = null ) { <nl> <unk> . <unk> ( true ) ; <nl> } <nl> } <nl>
ppp b / src / main / java / org / terasology / rendering / gui / framework / <unk> . java <nl> public abstract class <unk> { <nl> if ( <unk> ! = null ) { <nl> <unk> . <unk> ( true ) ; <nl> } ; <nl> } <nl>
ppp b / src / main / java / org / terasology / rendering / gui / framework / <unk> . java <nl> public abstract class <unk> { <nl> if ( <unk> ! = null ) { <nl> <unk> . <unk> ( true ) ; <nl> ) ; <nl> } <nl>
ppp b / src / main / java / org / terasology / rendering / gui / framework / <unk> . java <nl> public abstract class <unk> { <nl> if ( <unk> ! = null ) { <nl> <unk> . <unk> ( true ) ; <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / dropwizard - db / src / main / java / com / yammer / dropwizard / db / databaseconfiguration . java <nl> public class databaseconfiguration { <nl> private string password = " " ; <nl>
ppp b / dropwizard - db / src / main / java / com / yammer / dropwizard / db / databaseconfiguration . java <nl> public class databaseconfiguration { <nl> private string password = " " ; <nl> " ) <nl> private string url = null ; <nl> @ notnull <nl>
ppp b / dropwizard - db / src / main / java / com / yammer / dropwizard / db / databaseconfiguration . java <nl> public class databaseconfiguration { <nl> private string password = " " ; <nl> " ) <nl> private string url = null ; <nl> @ notnull notnull <nl>
ppp b / dropwizard - db / src / main / java / com / yammer / dropwizard / db / databaseconfiguration . java <nl>
ppp b / dropwizard - db / src / main / java / com / yammer / dropwizard / db / databaseconfiguration . java <nl> public class databaseconfiguration { <nl> private string password = " " ; <nl> " ) <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> public class <unk> extends <unk> { <nl> android : windowsoftinputmode = " <unk> " > <nl> < / activity > <nl> xml <nl> ccc <nl> ccc java <nl> <unk> <unk> = new <unk> ( this ) ; <nl>
ppp b / readme . md <nl> public class <unk> extends <unk> { <nl> android : windowsoftinputmode = " <unk> " > <nl> < / activity > <nl> xml <nl> ccc <nl> ccc java <nl> <unk> <unk> = new <unk> ( this ) ) ; <nl>
ppp b / readme . md <nl> public class <unk> extends <unk> { <nl> android : windowsoftinputmode = " <unk> " > <nl> < / activity > <nl> xml <nl> ccc <nl> ccc java <nl> <unk> <unk> = new <unk> ( this ) ) <nl>
ppp b / readme . md <nl> public class <unk> extends <unk> { <nl> android : windowsoftinputmode = " <unk> " > <nl> < / activity > <nl> xml <nl> ccc <nl> ccc java <nl> <unk> <unk> = new <unk> ( this ) ; <nl> <nl>
ppp b / readme . md <nl> public class <unk> extends <unk> { <nl> android : windowsoftinputmode = " <unk> " > <nl> < / activity > <nl> xml <nl> ccc <nl> ccc java <nl> <unk> <unk> = new <unk> ( this ) ; ; <nl>
====NEW EXAMPLE====
ppp b / titan - test / src / test / java / com / thinkaurelius / titan / graphdb / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> @ override <nl> \ no newline at end of children ) ; <nl> override <nl> public void <unk> ( ) { } <nl> @ override <nl>
ppp b / titan - test / src / test / java / com / thinkaurelius / titan / graphdb / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> @ override <nl> \ no newline at end of children ) ; <nl> override <nl> public void <unk> ( ) { } <nl> @ override <nl> <nl>
ppp b / titan - test / src / test / java / com / thinkaurelius / titan / graphdb / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> @ override <nl> \ no newline at end of children ) ; <nl> override <nl> public void <unk> ( ) { } <nl>
ppp b / titan - test / src / test / java / com / thinkaurelius / titan / graphdb / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> @ override <nl> \ no newline at end of children ) ; <nl> override <nl> public void <unk> ( ) { } <nl> @ @ <nl>
ppp b / titan - test / src / test / java / com / thinkaurelius / titan / graphdb / <unk> / <unk> . java <nl> public class <unk> extends <unk> { <nl> } <nl> @ override <nl> \ no newline at end of children ) ; <nl> override <nl> public void <unk> ( ) { } <nl> @ override
====NEW EXAMPLE====
ppp b / readme . md <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> compile ' com . sackcentury : : 0 . 1 . @ aar ' <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl>
ppp b / readme . md <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> compile
ppp b / readme . md <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> compile '
ppp b / readme . md <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> compile ' com
====NEW EXAMPLE====
ppp b / . travis . yml <nl> branches : <nl>
ppp b / . travis . yml <nl> branches :
ppp b / . travis . yml <nl> branches
ppp b / . travis . yml <nl>
ppp b / . travis . yml
====NEW EXAMPLE====
ppp b / forge / forge_common / net / minecraft / src / forge / <unk> . java <nl> public class <unk> <nl> mod = mod ; <nl> this . id = id ; <nl> range = range ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> } <nl> } <nl>
ppp b / forge / forge_common / net / minecraft / src / forge / <unk> . java <nl> public class <unk> <nl> mod = mod ; <nl> this . id = id ; <nl> range = range ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> } <nl> <nl>
ppp b / forge / forge_common / net / minecraft / src / forge / <unk> . java <nl> public class <unk> <nl> mod = mod ; <nl> this . id = id ; <nl> range = range ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> } <nl> } <nl> <nl>
ppp b / forge / forge_common / net / minecraft / src / forge / <unk> . java <nl> public class <unk> <nl> mod = mod ; <nl> this . id = id ; <nl> range = range ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> } <nl> }
ppp b / forge / forge_common / net / minecraft / src / forge / <unk> . java <nl> public class <unk> <nl> mod = mod ; <nl> this . id = id ; <nl> range = range ; <nl> <unk> = <unk> ; <nl> <unk> = <unk> ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / community / cypher / src / test / scala / org / neo4j / cypher / <unk> . scala <nl>
ppp b / community / cypher / src / test / scala / org / neo4j / cypher / <unk> . scala <nl> return <unk> . name ? <nl>
ppp b / community / cypher / src / test / scala / org / neo4j / cypher / <unk> . scala <nl> return <unk> . name ? <nl> assert ( list ( ) = = = result . tolist ) <nl> } <nl> @ deprecated <nl> @ test def <unk> ( ) { <nl> val a = createnode ( ) <nl> val b = createnode ( ) <nl>
ppp b / community / cypher / src / test / scala / org / neo4j / cypher / <unk> . <nl>
ppp b / community / cypher / src / test / scala / org / neo4j / cypher / <unk> . scala <nl> return <unk> . name <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> matrix : <nl> jdk : " oraclejdk7 <nl>
ppp b / . travis . yml <nl> matrix : <nl> jdk : " " <nl>
ppp b / . travis . yml <nl> matrix : <nl> jdk : "
ppp b / . travis . yml <nl> matrix : <nl> jdk : " oraclejdk7
ppp b / . travis . yml <nl> matrix : <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { <nl> } <nl> issuemanagement { <nl> system ' github . <nl> url ' https : / / github . com / netflix / $ { rootproject . githubprojectname } / issues ' <nl> } <nl> } <nl> } <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> issuemanagement { <nl> system ' github . <nl> url ' https : / / github . com / netflix / $ { rootproject . githubprojectname } / issues ' <nl> } <nl> } <nl> <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> issuemanagement { <nl> system ' github . <nl> url ' https : / / github . com / netflix / $ { rootproject . githubprojectname } / issues ' <nl> } <nl> } <nl> } <nl> <nl>
ppp b / build . gradle <nl> subprojects { <nl> } <nl> issuemanagement { <nl> system ' github . <nl> url ' https : / / github . com / netflix / $ { rootproject . githubprojectname } / issues ' <nl> } <nl> } <nl> }
ppp b / build . gradle <nl> subprojects { <nl> } <nl> issuemanagement { <nl> system ' github . <nl> url ' https : / / github . com / netflix / $ { rootproject . githubprojectname } / issues ' <nl> } <nl> } <nl> } } <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> maven { url " . . / . . / prebuilts / maven_repo / android " } <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 1 . 1 . 0 ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> maven { url " . . / . . / prebuilts / maven_repo / android " } <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 1 . 1 . ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> maven { url " . . / . . / prebuilts / maven_repo / android " } <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 1 . 1 . 0 . <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> maven { url " . . / . . / prebuilts / maven_repo / android " } <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 1 . 1 . 0 <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> maven { url " . . / . . / prebuilts / maven_repo / android " } <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 1 . 1 . 0 ' <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / jetty - jsp / src / main / config / modules / jsp . mod <nl> # <nl> # jetty servlet module <nl> # <nl> [ depend ] <nl>
ppp b / jetty - jsp / src / main / config / modules / jsp . mod <nl> # <nl> # jetty servlet module <nl> # <nl> [ depend ] ] <nl>
ppp b / jetty - jsp / src / main / config / modules / jsp . mod <nl> # <nl> # jetty servlet module <nl> # <nl> [ depend ] <nl> <nl>
ppp b / jetty - jsp / src / main / config / modules / jsp . mod <nl> # <nl> # jetty servlet module <nl> # <nl> [ depend depend <nl>
ppp b / jetty - jsp / src / main / config / modules / jsp . mod <nl> # <nl> # jetty servlet module <nl> # <nl> [ depend ] ] <nl> <nl>
====NEW EXAMPLE====
ppp b / library / src / com / actionbarsherlock / internal / view / menu / <unk> . java <nl>
ppp b / library / src / com / actionbarsherlock / internal / view / menu / <unk> . <nl>
ppp b / library / src / com / actionbarsherlock / internal / view / menu / <unk> . java <nl> public class <unk> extends <unk> <nl> for ( <unk> listener : <unk> ) { <nl> listener . <unk> ( this ) ; <nl> } <nl> } <nl> @ override <nl> public void opengui ( ) ; <nl> } <nl> } <nl> @ override <nl>
ppp b / library / src / com / actionbarsherlock / internal / view / menu / <unk> . java <nl> public class <unk> extends <unk> <nl> for ( <unk> listener : <unk> ) { <nl> listener . <unk> ( this ) ; <nl> } <nl> } <nl> @ override <nl> public void opengui ( ) ; <nl> } <nl> } <nl>
ppp b / library / src / com / actionbarsherlock / internal / view / menu / <unk> . java <nl> public class <unk> extends <unk> <nl> for ( <unk> listener : <unk> ) { <nl> listener . <unk> ( this ) ; <nl> } <nl> } <nl> @ override <nl> public void opengui ( ) ; <nl> } <nl> } <nl> @ override override <nl>
====NEW EXAMPLE====
ppp b / res / menu / message_list_option . xml <nl> android : id = " @ + id / <unk> " <nl> android : title = " @ string / <unk> " <nl> android : icon = " @ drawable / <unk> " <nl> android : showasaction = " always " <nl> / > <nl> < item <nl> android : id = " @ + id / " <nl>
ppp b / res / menu / message_list_option . xml <nl> android : id = " @ + id / <unk> " <nl>
ppp b / res / menu / message_list_option . xml <nl> android : id = " @ + id / <unk> " <nl> android : title = " @ string / <unk> " <nl> android : icon = " @ drawable / <unk> " <nl> android : showasaction = " always " <nl> / > <nl> < item <nl> android : id = " @ + id / " " <nl>
ppp b / res / menu / message_list_option . xml <nl> android : id = " @ + id / <unk> <nl>
ppp b / res / menu / message_list_option . xml <nl> android : id = " @ + id / <unk> " <nl> android : title = " @ string / <unk> " <nl> android : icon = " @ drawable / <unk> " <nl> android : showasaction = " always " <nl> / > <nl> < item <nl> android : id = " @ + id / <unk> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - notifications . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / notifications / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < / includes > <nl> < / resource > <nl> < / webresources > <nl> < / configuration > <nl>
ppp b / pom . xml <nl> < / includes > <nl>
ppp b / pom . xml <nl> < / includes >
ppp b / pom . xml <nl> < / includes
ppp b / pom . xml <nl> < / includes > <nl> < / resource > <nl> < / webresources > <nl> < / configuration > <nl> < / < / < / < / < / < / configuration > <nl> < / plugin > <nl> < plugin > <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> <unk> <nl>
ppp b / readme . md <nl> <unk> <nl> = = = = = <nl> a basic : <nl> sample android android which showcases advanced usage of dagger <unk> other open source libraries . <nl>
ppp b / readme . md <nl> <unk> <nl> = = = = = <nl> a basic : <nl> sample android android which showcases advanced usage of dagger <unk> other open source libraries . . <nl>
ppp b / readme . md <nl> <unk> <nl> = = = = = <nl> a basic : <nl> sample android android which showcases advanced usage of dagger <unk> other open source libraries libraries <nl>
ppp b / readme . md <nl> <unk> <nl> = = = = = <nl> a basic : <nl> sample android android which showcases advanced usage of dagger <unk> other open source libraries
====NEW EXAMPLE====
ppp b / build . gradle <nl> project ( ' : aeron - core ' ) { <nl> project ( ' : aeron - examples ' ) { <nl> dependencies { <nl>
ppp b / build . gradle <nl> project ( ' : aeron - core ' ) { <nl> project ( ' : aeron - examples ' ) { <nl> dependencies { <nl> compile project ( ' : aeron - ' ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> project ( ' : aeron - core ' ) { <nl> project ( ' : aeron - examples ' ) { <nl> dependencies { <nl> compile project ( ' :
ppp b / build . gradle <nl> project ( ' : aeron - core ' ) { <nl> project ( ' : aeron - examples ' ) { <nl> dependencies { <nl> compile project ( ' : aeron - ' ' <nl> } <nl>
ppp b / build . gradle <nl> project ( ' : aeron - core ' ) { <nl> project ( ' : aeron - examples ' ) { <nl> dependencies { <nl> compile project ( '
====NEW EXAMPLE====
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 187 <nl> " 3 . . . 2 " <nl> multidexenabled true <nl> generateddensities = [ ] <nl>
ppp b / twidere / build . gradle <nl> android { <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 23 <nl> versioncode 187 <nl> " 3 . . . 2 " <nl> multidexenabled true <nl> generateddensities = [ [ <nl>
ppp b / twidere / build . gradle <nl> android {
====NEW EXAMPLE====
ppp b / svm . cpp <nl> kernel : : kernel ( int l , svm_node * const * <unk> , const svm_parameter & param ) <nl> break ; <nl> case <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl> case <unk> <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> break ; <nl>
ppp b / svm . cpp <nl> kernel : : kernel ( int l , svm_node * const * <unk> , const svm_parameter & param ) <nl> break ; <nl> case <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl> case <unk> <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> break break ; <nl>
ppp b / svm . cpp <nl> kernel : : kernel ( int l , svm_node * const * <unk> , const svm_parameter & param ) <nl> break ; <nl> case <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl> case <unk> <unk> : <nl> <unk> = & kernel : : <unk> ; <nl>
ppp b / svm . cpp <nl> kernel : : kernel ( int l , svm_node * const * <unk> , const svm_parameter & param ) <nl> break ; <nl> case <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl> case <unk> <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> <nl>
ppp b / svm . cpp <nl> kernel : : kernel ( int l , svm_node * const * <unk> , const svm_parameter & param ) <nl> break ; <nl> case <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl> case <unk> <unk> : <nl> <unk> = & kernel : : <unk> ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / authors . md <nl> this is a list of pinterestadapterview authors for copyright purpose . <nl>
ppp b / authors . md <nl> this is a list
ppp b / authors . md <nl> this is a list of pinterestadapterview authors for copyright purpose . <nl> keep the list sorted please . <nl> * chansuk yang < . yang at gmail . com > <nl> * leonardo yonguk < < dalinaum at gmail com > <nl>
ppp b / authors . md <nl> this is a list of pinterestadapterview authors for copyright purpose . <nl> keep the list sorted please . <nl> * chansuk yang < . yang at gmail . com > <nl> * leonardo yonguk < < dalinaum at gmail com com > <nl>
ppp b / authors . md <nl> this is a list of pinterestadapterview authors for copyright purpose . <nl> keep the list sorted please . <nl> * chansuk yang < . yang at gmail . com > <nl> * leonardo yonguk < < dalinaum at gmail com com <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / docs / release . txt <nl> internal documentation on how to make a languagetool <nl>
ppp b / trunk / jlanguagetool / docs / release . txt <nl> internal documentation on how to make a languagetool <nl> <nl>
ppp b / trunk / jlanguagetool / docs / release . txt <nl> internal documentation on how to make a languagetool release <nl>
ppp b / trunk / jlanguagetool / docs / release . txt <nl> internal documentation on how to make a release <nl>
ppp b / trunk / jlanguagetool / docs / release . txt <nl> internal documentation on how to make a languagetool languagetool <nl>
====NEW EXAMPLE====
ppp b / css / <unk> . css <nl> html , body { <nl> table { <nl>
ppp b / css / <unk> . css <nl> html , body { <nl>
ppp b / css / <unk> . css <nl> html , body { <nl> table { <nl> border : solid 1px # <unk> ! important ; <nl> border - <unk> : <unk> ! important ; <nl> } <nl> <unk> <unk> <unk> ! important ; <nl> } <nl> th { <nl>
ppp b / css / <unk> . css <nl> html , body
ppp b / css / <unk> . css <nl> html , body {
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / package . json <nl> " patents " , <nl>
ppp b / package . json <nl> " patents " <nl>
ppp b / package . json <nl> " patents " , <nl> " readme . md " , <nl> " <unk> " , <nl> " . flowconfig " <nl> ] ( ) <nl> " . flowconfig " <nl> ] , <nl> " scripts " : { <nl> " test " : " <unk> = test jest " , <nl>
ppp
ppp b / package . json <nl> " patents " , <nl> " readme . md " , <nl> " <unk> " , <nl> " . flowconfig " <nl> ] ( ) <nl> " . flowconfig " <nl> ] , <nl> " scripts " : { <nl> " test " : " <unk> = test jest " <nl>
====NEW EXAMPLE====
ppp b / build . sbt <nl> organization : = " org . graylog2 " <nl> name : = " graylog2 - rest - client " <nl> version : = " 0 . 21 . 0 - rc . 1 . <nl> / / disable using the scala version in output paths and artifacts <nl> crosspaths : = false <nl>
ppp b / build . sbt <nl> organization : = " org . graylog2 " <nl>
ppp b / build . sbt <nl> organization : = " org . graylog2 " <nl> name : = " graylog2 - rest - client " <nl> version : = " 0 . 21 . 0 - rc . 1 . <nl> / / disable using the scala version in output paths and artifacts <nl> crosspaths : = false false <nl>
ppp b / build . sbt <nl> organization : = " org . graylog2 " <nl> name : = " graylog2 - rest - client " <nl> version : = " 0 . 21 . 0 - rc . 1 . <nl> / / disable using the scala version in output paths and artifacts <nl> crosspaths : = = <nl>
ppp b / build . sbt <nl> organization : = " org . graylog2 <nl>
====NEW EXAMPLE====
ppp b / src / gwt / src / org / rstudio / core / client / widget / <unk> . css <nl> } <nl> . <unk> , . <unk> td , . <unk> pre { <nl> line - height : 1 . 3 ; <nl> } <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / <unk> . css <nl> } <nl> . <unk> , . <unk> td , . <unk> pre { <nl> line - height : 1 . ; <nl> } <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / <unk> . css <nl> } <nl> . <unk> , . <unk> td , . <unk> pre { <nl> line - height : 1 . 3 ; <nl> } <nl> <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / <unk> . css <nl> } <nl> . <unk> , . <unk> td , . <unk> pre { <nl> line - height : 1 . 3 } <nl> } <nl>
ppp b / src / gwt / src / org / rstudio / core / client / widget / <unk> . css <nl> } <nl> . <unk> , . <unk> td , . <unk> pre { <nl> line - height : 1 . 3 <nl> } <nl>
====NEW EXAMPLE====
ppp b / platform / util / resources / misc / registry . properties <nl> editor . injected . highlighting . enabled . description = disables injected fragments <unk> <nl>
ppp b / platform / util / resources / misc / registry . properties <nl>
ppp b / platform / util / resources / misc / registry . properties <nl> editor . injected . highlighting . enabled . description = disables injected fragments <nl>
ppp b / platform / util / resources / misc / registry . <nl>
ppp b / platform / util / resources / misc / registry . properties
====NEW EXAMPLE====
ppp b / . gitignore <nl> . settings <nl> * . iml <nl> * . ipr <nl>
ppp b / . gitignore <nl> . settings <nl> * . iml <nl> * . ipr <nl> * . iml <nl>
ppp b / . gitignore <nl> . settings <nl> * . iml <nl> * . ipr <nl> * . iws <nl>
ppp b / . gitignore <nl> . settings <nl> * . iml <nl> * . ipr <nl> * <nl>
ppp b / . gitignore <nl> . settings <nl> * . iml <nl> * . ipr <nl> * . idea <nl>
====NEW EXAMPLE====
ppp b / portal - impl / src / com / liferay / portlet / <unk> / util / <unk> . java <nl> public class <unk> { <nl> return false ; <nl> } <nl> return propsvalues . <unk> ; <nl> } <nl> public boolean <unk> ( ) { <nl>
ppp b / portal - impl / src / com / liferay / portlet / <unk> / util / <unk> . java <nl> public class <unk> { <nl> return false ; <nl> } <nl> return propsvalues . <unk> ; <nl> } <nl> public boolean <unk> ( ) <nl>
ppp b / portal - impl / src / com / liferay / portlet / <unk> / util / <unk> . java <nl> public class <unk> { <nl> return false ; <nl> } <nl> return propsvalues . <unk> ; <nl> } <nl> public boolean <unk> ( ) { <nl> <nl>
ppp b / portal - impl / src / com / liferay / portlet / <unk> / util / <unk> . java <nl> public class <unk> { <nl> return false ; <nl> } <nl> return propsvalues . <unk> ; <nl> } <nl> public boolean <unk> ( ) ) <nl>
ppp b / portal - impl / src / com / liferay / portlet / <unk> / util / <unk> . java <nl> public class <unk> { <nl> return false ; <nl> } <nl> return propsvalues . <unk> ; <nl> } <nl> public boolean <unk> ( ) ; <nl>
====NEW EXAMPLE====
ppp b / src / jvm / storm / starter / bolt / <unk> . java <nl> public final class <unk> extends <unk> { <nl>
ppp b / src / jvm / storm / starter / bolt / <unk> . java <nl>
ppp b / src / jvm / storm / starter / bolt / <unk> . java <nl> public final class <unk> extends <unk> <nl>
ppp b / src / jvm / storm / starter / bolt / <unk> . <nl>
ppp b / src / jvm / storm / starter / bolt / <unk> . java <nl> public final class <unk> extends <unk> {
====NEW EXAMPLE====
ppp b / workspace <nl> # bind / ) <nl>
ppp b / workspace <nl> # bind ) <nl>
ppp b / workspace <nl> # bind <nl> \ no newline at end of file <nl>
ppp b / workspace <nl> # bind ) <nl> script : <nl>
ppp b / workspace <nl> # bind / : <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - calendar . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / calendar / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / libs / openpgp - keychain <nl> subproject commit <unk> <nl>
ppp b / libs / openpgp - keychain <nl> subproject commit 815fbba48677e40bff2c3c114c4ce8dd1e35bc17 <nl>
ppp b / libs / openpgp - keychain <nl> subproject commit 333e54707ca221324c6b9eedb6a7bc2fcae02270 <nl>
ppp b / libs / openpgp - keychain <nl> subproject commit ec2fcc0716311454454a8933ffd75c2398594b03 <nl>
ppp b / libs / openpgp - keychain <nl> subproject commit a57be369259bbfb3741a649a8d585fc8de6ac669 <nl>
====NEW EXAMPLE====
ppp b / common / src / main / java / tachyon / security / <unk> . java <nl> public class <unk> implements <unk> { <nl> throw new illegalstateexception ( " plain authentication not completed " ) ; <nl> } <nl> } <nl> \ no newline at end of file <nl>
ppp b / common / src / main / java / tachyon / security / <unk> . java <nl> public class <unk> implements <unk> { <nl> throw new illegalstateexception ( " plain authentication not completed " ) ; <nl> } <nl> } <nl>
ppp b / common / src / main / java / tachyon / security / <unk> . java <nl> public class <unk> implements <unk> { <nl> throw new illegalstateexception ( " plain authentication not completed " ) ; <nl> } <nl> } <nl> } <nl>
ppp b / common / src / main / java / tachyon / security / <unk> . java <nl> public class <unk> implements <unk> { <nl> throw new illegalstateexception ( " plain authentication not completed " ) ; <nl> } <nl> \ no newline at end of file <nl>
ppp b / common / src / main / java / tachyon / security / <unk> . java <nl> public class <unk> implements <unk> { <nl> throw new illegalstateexception ( " plain authentication not completed " ) ; <nl> } <nl> } <nl> } <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / services / core / java / com / android / server / trust / <unk> . java <nl> public class <unk> extends systemservice { <nl> <unk> = true ; <nl> } <nl> info . agent . unbind ( ) ; <nl> <unk> . remove ( info ) ; <nl> } <nl> if ( <unk> ) { <nl>
ppp b / services / core / java / com / android / server / trust / <unk> . java <nl> public class <unk> extends systemservice { <nl> <unk> = true ; <nl> } <nl> info . agent . unbind ( ) ; <nl> <unk> . remove ( info ) ; <nl> } <nl> if ( <unk> ) <nl>
ppp b / services / core / java / com / android / server / trust / <unk> . java <nl> public class <unk> extends systemservice { <nl> <unk> = true ; <nl> } <nl> info . agent . unbind ( ) ; <nl> <unk> . remove ( info ) ; <nl> } <nl> if ( <unk> { <nl>
ppp b / services / core / java / com / android / server / trust / <unk> . java <nl> public class <unk> extends systemservice { <nl> <unk> = true ; <nl> } <nl> info . agent . unbind ( ) ; <nl> <unk> . remove ( info ) ; <nl> } <nl> if ( <unk> ) ; <nl>
ppp b / services / core / java / com / android / server / trust / <unk> . java <nl> public class <unk> extends systemservice { <nl> <unk> = true ; <nl> } <nl> info . agent . unbind ( ) ; <nl> <unk> . remove ( info ) ; <nl> } <nl> if ( <unk> ) ) <nl>
====NEW EXAMPLE====
ppp b / doc / release - notes / official . md <nl> # # # 2 . 0 . 0 - beta ( 2015 - 01 - 02 15 : 02 utc ) <nl> * authors : 3 <nl> * commits : 19 <nl>
ppp b / doc / release - notes / official . md <nl> # # # 2 . 0 . 0 - beta ( 2015 - 01 - 02 15 : 02 utc ) <nl> * authors : 3 <nl> * commits : <nl>
ppp b / doc / release - notes / official . md <nl> # # # 2 . 0 . 0 - beta ( 2015 - 01 - 02 15 : 02 utc ) <nl> * authors : 3 <nl> * commits : 19 <nl> <nl>
ppp b / doc / release - notes / official . md <nl> # # # 2 . 0 . 0 - beta ( 2015 - 01 - 02 15 : 02 utc ) <nl> * authors : 3 <nl> * commits : editor <nl>
ppp b / doc / release - notes / official . md <nl> # # # 2 . 0 . 0 - beta ( 2015 - 01 - 02 15 : 02 utc ) <nl> * authors : 3 <nl> * commits : : <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / src / resource / de / words - incorrect . txt <nl> <unk> <nl> <unk> <nl> <unk> <unk> <nl> <unk> <nl>
ppp b / trunk / jlanguagetool / src / resource / de / words - incorrect . txt <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl>
ppp b / trunk / jlanguagetool / src / resource / de / words - incorrect . txt <nl> <unk> <nl> <unk> <nl> <unk> <nl> <unk> <nl> <nl>
ppp b / trunk / jlanguagetool / src / resource / de / words - incorrect . txt <nl> <unk> <nl> <unk> <nl> <unk> <unk> <nl> * <nl>
ppp b / trunk / jlanguagetool / src / resource / de / words - incorrect . txt <nl> <unk> <nl> <unk> <nl> <unk> <unk> <nl> <unk> <nl>
====NEW EXAMPLE====
ppp b / ultimateandroidgradle / ultimateandroiduicomponent / build . gradle <nl> dependencies { <nl>
ppp b / ultimateandroidgradle / ultimateandroiduicomponent / build . gradle <nl>
ppp b / ultimateandroidgradle / ultimateandroiduicomponent / build . gradle <nl> dependencies {
ppp b / ultimateandroidgradle / ultimateandroiduicomponent / build . gradle <nl> dependencies <nl>
ppp b / ultimateandroidgradle / ultimateandroiduicomponent / build . gradle <nl> dependencies
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - directory . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / directory / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / changelog <nl> mahout change log <nl> release 0 . 11 . 0 - unreleased <nl> <nl> - - <unk> : clone - some vector dumper flags are <unk> arguments . ( smarthi ) <nl>
ppp b / changelog <nl> mahout change log <nl> release 0 . 11 . 0 - unreleased <nl> <nl> - - <unk> : clone - some vector dumper flags are <unk> arguments . ( smarthi <nl>
ppp b / changelog <nl> mahout change log <nl>
ppp b / changelog <nl> mahout change log <nl> release 0 . 11 . 0 - unreleased <nl> <nl> - - <unk> : clone - some vector dumper flags are <unk> arguments . ( ) <nl>
ppp b / changelog <nl> mahout change log <nl> release
====NEW EXAMPLE====
ppp b / src / main / java / com / tightdb / <unk> . java <nl> public class <unk> { <nl> } <nl> protected native void <unk> ( long nativequeryptr , long <unk> ) ; <nl> public <unk> parent = ) { <nl> <unk> ( <unk> ) ; <nl> return this ; <nl> } <nl>
ppp b / src / main / java / com / tightdb / <unk> . java <nl> public class <unk> { <nl> } <nl> protected native void <unk> ( long nativequeryptr , long <unk> ) ; <nl> public <unk> parent = ) { <nl> <unk> ( <unk> ) ; <nl> return this ; <nl> } <nl> <nl>
ppp b / src / main / java / com / tightdb / <unk> . java <nl> public class <unk> { <nl> } <nl> protected native void <unk> ( long nativequeryptr , long <unk> ) ; <nl> public <unk> parent = ) { <nl> <unk> ( <unk> ) ; <nl> return this ; <nl> <nl>
ppp b / src / main / java / com / tightdb / <unk> . java <nl> public class <unk> { <nl> } <nl> protected native void <unk> ( long nativequeryptr , long <unk> ) ; <nl> public <unk> parent = ) { <nl> <unk> ( <unk> ) ; <nl> return this ; <nl> }
ppp b / src / main / java / com / tightdb / <unk> . java <nl> public class <unk> { <nl> } <nl> protected native void <unk> ( long nativequeryptr , long <unk> ) ; <nl> public <unk> parent = ) { <nl> <unk> ( <unk> ) ; <nl> return this ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b0dfec7c8a39098c4d1f8698cb72b27de2a95673 <nl> mode = push <nl> parent = 33c8b5723ebf0c98a037d52d7813102cd6054d40 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> notifications : <nl> sudo : false <nl> cache
ppp b / . travis . yml <nl> notifications : <nl> sudo : false <nl> cache : <nl> directories : <nl> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl>
ppp b / . travis . yml <nl> notifications : <nl> sudo : false <nl> cache : <nl> directories : <nl> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl>
ppp b / . travis . yml <nl> notifications : <nl> sudo : false <nl> cache : <nl> directories : <nl> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # : <nl>
ppp b / . travis . yml <nl> notifications : <nl> sudo : false <nl> cache : <nl> directories : <nl> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / users - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 314f0d861fd274913b8266009377577cf9b381a8 <nl> mode = push <nl> parent = 4bbc78d38562d26b596bc5a4e4ab3c80fa0ed324 <nl> remote = git @ github . com : liferay / com - liferay - users - admin . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = edbe8a123205ca5bfcab882561bf9b959b62b4c3 <nl> mode = push <nl> parent = ce0bdbbe7d20c533a233027a4192ab90267c0c22 <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gitignore <nl> nb - configuration . xml <nl> . gradle <nl> build
ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gitignore <nl> nb - configuration . xml <nl> . gradle <nl> build / <nl> * . iml <nl> * <nl>
ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gitignore <nl> nb - configuration . xml <nl> . gradle <nl> build / <nl> * . idea <nl> * <nl>
ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gitignore <nl> nb - configuration . xml <nl> . gradle <nl> build / <nl> * . iws <nl> * <nl>
ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gitignore <nl> nb - configuration . xml <nl> . gradle <nl> build / <nl> * <nl> * <nl> * <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / configuration - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f02cd17fe5843ad4baae26f856aa23c16674ffc6 <nl> mode = push <nl> parent = e29ba3d38a831096a1c712ad1f8678f0c31a24d1 <nl> remote = git @ github . com : liferay / com - liferay - configuration - admin . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk <nl>
ppp b / . travis . yml <nl> language : java <nl> : <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : oraclejdk8 <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool : <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool : <nl> \ no newline at end of file <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl>
====NEW EXAMPLE====
ppp b / specs / interpolation . yml <nl> tests : <nl> expected : | <nl> hello from mustache ! <nl> - name : basic behavior <nl> data : { subject : " world " } <nl> template : | <nl> hello , { { subject } } ! <nl>
ppp b / specs / interpolation . yml <nl> tests : <nl> expected : | <nl> hello from mustache ! <nl> - name : basic behavior <nl> data : { subject : " world " } <nl> template : | <nl> hello , { { subject } } <nl>
ppp b / specs / interpolation . yml <nl> tests : <nl> expected : | <nl> hello from mustache ! <nl> - name : basic behavior <nl> data : { subject : " world " } <nl> template : | <nl> hello , { { subject } } ! ! <nl>
ppp b / specs / interpolation . yml <nl> tests : <nl> expected : | <nl> hello from mustache ! <nl> - name : basic behavior <nl> data : { subject : " world " } <nl> template : | <nl> hello , { { subject } } } <nl>
ppp b / specs / interpolation . yml <nl> tests : <nl> expected : | <nl> hello from mustache ! <nl> - name : basic behavior <nl> data : { subject : " world " } <nl> template : | <nl> hello , { { subject } } ! <nl> <nl>
====NEW EXAMPLE====
ppp b / docs / community / misc . asciidoc <nl> * https : / / github . com / <unk> / elasticsearch - <unk> - plugin [ readonly rest ] : <nl> high performance access control for elasticsearch native rest
ppp b / docs / community / misc . asciidoc <nl> * https : / / github . com / <unk> / elasticsearch - <unk> - plugin [ readonly rest ] : <nl> high performance access control for elasticsearch native
ppp b / docs / community / misc . asciidoc <nl>
ppp b / docs / community / misc . asciidoc <nl> * https : / / github . com / <unk> / elasticsearch - <unk> - plugin [ readonly rest ] : <nl> high performance access control for elasticsearch native rest api . . [ ] ( https : [ ] ( https : / github . com / github . com / control for elasticsearch native <nl>
ppp b / docs / community / misc . asciidoc <nl> * https : / / github . com / <unk> / elasticsearch - <unk> - plugin [ readonly rest ] : <nl> high performance access control for elasticsearch native rest api . . [ ] ( https : [ ] ( https : / github . com / github . com / control for native <nl>
====NEW EXAMPLE====
ppp b / codecov . yml <nl> comment : <nl> layout : header , changes , diff <nl> : <nl>
ppp b / codecov . yml <nl> comment : <nl> layout : header , changes , diff <nl> : <nl> status : <nl>
ppp b / codecov . yml <nl> comment : <nl> layout : header , changes , diff <nl> : <nl> status <nl>
ppp b / codecov . yml <nl> comment : <nl> layout : header , changes , diff <nl> : : <nl>
ppp b / codecov . yml <nl> comment : <nl> layout : header , changes , <nl>
====NEW EXAMPLE====
ppp b / src / main / resources / gitblit . css <nl> div . diff > table { <nl>
ppp b / src / main / resources / gitblit . css <nl>
ppp b / src / main / resources / gitblit . css <nl> div . diff > table <nl>
ppp b / src / main / resources / gitblit . css <nl> div . diff > table {
ppp b / src / main / resources / gitblit . css <nl> div . diff > table { <nl> padding - left : 2px ; <nl> padding - right : 2px ; <nl> width : <unk> ; / * font - size relative ! * / <nl> } <nl> relative ! = / <nl> } <nl> . diff - line : before { <nl>
====NEW EXAMPLE====
ppp b / bigbluebutton - html5 / app / client / stylesheets / style . less <nl> body { <nl> } <nl>
ppp b / bigbluebutton - html5 / app / client / stylesheets / style . less <nl> body { <nl> } <nl> . component { <nl>
ppp b / bigbluebutton - html5 / app / client / stylesheets / style . less <nl>
ppp b / bigbluebutton - html5 / app / client / stylesheets / style . less <nl> body { <nl> } <nl> . component <nl>
ppp b / bigbluebutton - html5 / app / client / stylesheets / style . less <nl> body { <nl> <nl>
====NEW EXAMPLE====
ppp b / library / src / main / java / com / mikepenz / materialdrawer / model / <unk> . java <nl> public class <unk> extends <unk> < <unk> <nl> } <nl> public void <unk> ( string description ) { <nl> this . email = email ; <nl> = null ; <nl> } <nl> @ override <nl>
ppp b / library / src / main / java / com / mikepenz / materialdrawer / model / <unk> . java <nl> public class <unk> extends <unk> < <unk> <nl> } <nl> public void <unk> ( string description ) { <nl> this . email = email ; <nl> = null ; <nl> } <nl>
ppp b / library / src / main / java / com / mikepenz / materialdrawer / model / <unk> . java <nl>
ppp b / library / src / main / java / com / mikepenz / materialdrawer / model / <unk> . java <nl> public class <unk> extends <unk> < <unk> <nl> } <nl> public void <unk> ( string description ) { <nl> this . email = email ; <nl> = null ; <nl> } <nl> @ override
ppp b / library / src / main / java / com / mikepenz / materialdrawer / model / <unk> . java <nl> public class <unk> extends <unk> < <unk> <nl> } <nl> public void <unk> ( string description ) { <nl> this . email = email ; <nl> = null ; <nl> } <nl> @ override override <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 9225fc0e28b7d1c4f78352bc1164ce1000174ef4 <nl> mode = push <nl> parent = 09b07b1046d60b7cbdbb8a8fcd7ffd48be998c24 <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / src / info / ata4 / unity / assetbundle / <unk> . java <nl> public class <unk> implements closeable , iterable < <unk> <nl> return header ; <nl> } <nl> public list < > <unk> ( ) ioexception { <nl> return collections . unmodifiablelist ( entries ) ; <nl> } <nl>
ppp b / src / info / ata4 / unity / assetbundle / <unk> . java <nl> public class <unk> implements closeable , iterable < <unk> <nl> return header ; <nl> } <nl> public list < > <unk> ( ) ioexception { <nl> return collections . unmodifiablelist ( entries ) ; } <nl>
ppp b / src / info / ata4 / unity / assetbundle / <unk> . java <nl>
ppp b / src / info / ata4 / unity / assetbundle / <unk> . java <nl> public class <unk> implements closeable , iterable < <unk> <nl> return header ; <nl> } <nl> public list < > <unk> ( ) ioexception { <nl> return collections . unmodifiablelist ( entries ) ; <nl>
ppp b / src / info / ata4 / unity / assetbundle / <unk> . java <nl> public class <unk> implements closeable , iterable < <unk> <nl> return header ; <nl> } <nl> public list < > <unk> ( ) ioexception { <nl> return collections . unmodifiablelist ( entries ) ; <nl> }
====NEW EXAMPLE====
ppp b / changelog . md <nl> * storm - 1478 : make bolts getcomponentconfiguration method cleaner / simpler <nl>
ppp b / changelog . md <nl> * storm - 1478 : make bolts getcomponentconfiguration method cleaner / <nl>
ppp b / changelog . md <nl> * storm - 1478 : make bolts getcomponentconfiguration method cleaner / simpler <nl> # # 1 . 0 . 0 <nl> * storm - 1485 : frequent interruptedexception raised by marek pavelka ) <nl> * storm - * storm - 1485 : drpc connectivity issues <nl> * storm - 1486 : fix storm - kafa documentation <nl> * storm - 1214 : add javadoc for trident streams and <nl>
ppp b / changelog . md <nl> * storm - 1478 : make bolts getcomponentconfiguration method cleaner / simpler <nl> # # 1 . 0 . 0 <nl> * storm - 1485 : frequent interruptedexception raised by marek pavelka ) <nl> * storm - * storm - 1485 : drpc connectivity issues <nl> * storm - 1486 : fix storm - kafa documentation <nl> * storm - 1214 : add javadoc for trident streams and operations <nl>
ppp b / changelog . md <nl> * storm - 1478 : make bolts getcomponentconfiguration method cleaner / simpler <nl> # # 1 . 0 . 0 <nl> * storm - 1485 : frequent interruptedexception raised by marek pavelka ) <nl> * storm - * storm - 1485 : drpc connectivity issues <nl> * storm - 1486 : fix storm - kafa documentation <nl> * storm - 1214 : add javadoc for trident streams operations <nl>
====NEW EXAMPLE====
ppp b / include / media / pvplayer . h <nl> private : <nl> char * mdatasourcepath ; <nl> bool misdatasourceset ; <nl> sp < isurface > msurface ; <nl> off_t ; <nl> status_t minit ; <nl> int mduration ; <nl>
ppp b / include / media / pvplayer . h <nl> private : <nl> char * mdatasourcepath ; <nl> bool misdatasourceset ; <nl> sp < isurface > msurface ; <nl>
ppp b / include / media / pvplayer . h <nl> private : <nl> char * mdatasourcepath ; <nl> bool misdatasourceset ; <nl> sp < isurface > msurface ; <nl> off_t ; <nl> status_t minit ; <nl> int mduration mduration ; <nl>
ppp b / include / media / pvplayer . h <nl> private : <nl> char * mdatasourcepath ; <nl> bool misdatasourceset ; <nl>
ppp b / include / media / pvplayer . h <nl> private : <nl> char * mdatasourcepath ; <nl> bool misdatasourceset ; <nl> sp < isurface > msurface ; <nl> off_t ; <nl> status_t minit ; <nl> int mduration ; ; <nl>
====NEW EXAMPLE====
ppp b / tests / dumprendertree / androidmanifest . xml <nl> / > <nl>
ppp b / tests / dumprendertree / androidmanifest . xml <nl>
ppp b / tests / dumprendertree / androidmanifest . xml <nl> / >
ppp

====NEW EXAMPLE====
ppp b / owncloud - android - library <nl> subproject commit <unk> <nl>
ppp b / owncloud - android - library <nl> subproject commit 815fbba48677e40bff2c3c114c4ce8dd1e35bc17 <nl>
ppp b / owncloud - android - library <nl> subproject commit ec2fcc0716311454454a8933ffd75c2398594b03 <nl>
ppp b / owncloud - android - library <nl> subproject commit b13e584ac3d32809492954d2e0a412b0e7898d88 <nl>
ppp b / owncloud - android - library <nl> subproject commit a57be369259bbfb3741a649a8d585fc8de6ac669 <nl>
====NEW EXAMPLE====
ppp b / aeron - driver / src / main / java / io / aeron / driver / media / <unk> . java <nl> public abstract class <unk> implements autocloseable <nl> } <nl> catch ( final ioexception ex ) <nl> { <nl> ex . record ( ex ) ; <nl> } <nl> } <nl>
ppp b / aeron - driver / src / main / java / io / aeron / driver / media / <unk> . java <nl> public abstract class <unk> implements autocloseable <nl> } <nl> catch ( final ioexception ex ) <nl> { <nl>
ppp b / aeron - driver / src / main / java / io / aeron / driver / media / <unk> . java <nl> public abstract class <unk> implements autocloseable <nl> } <nl> catch ( final ioexception ex ) <nl> { <nl> ex . record ( ex ) ; <nl> } <nl>
ppp b / aeron - driver / src / main / java / io / aeron / driver / media / <unk> . java <nl>
ppp b / aeron - driver / src / main / java / io / aeron / driver / media / <unk> . java <nl> public abstract class <unk> implements autocloseable <nl> } <nl> catch ( final ioexception ex ) <nl> { <nl> ex . record ( ex ) ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / src / cpp / session / cmakelists
ppp b / src / cpp / session / cmakelists . txt <nl> if ( <unk> ) <nl> destination $ { <unk> } ) <nl> endif ( expr substr ) { <nl> if ( https : [ ] ( ) ] ( ) ] ( ) ] ( ) ] ( ) <nl> } <nl>
ppp b / src / cpp / session / cmakelists . txt <nl> if ( <unk> ) <nl> destination $ { <unk> } ) <nl> endif ( expr substr ) { <nl> if ( https : [ ] ( ) ] ( ) ] ( ) ] ( ) ] ( ) ; <nl> } <nl>
ppp b / src / cpp / session / cmakelists . txt <nl> if ( <unk> ) <nl> destination $ { <unk> } ) <nl> endif ( expr substr ) { <nl> if ( https : [ ] ( ) ] ( ) ] ( ) ] ( ) ] ( ) { <nl> } <nl>
ppp b / src / cpp / session / cmakelists . txt <nl> if ( <unk> ) <nl> destination $ { <unk> } ) <nl> endif ( expr substr ) { <nl> if ( https : [ ] ( ) ] ( ) ] ( ) ] ( ) ] ( ) ) <nl> } <nl>
====NEW EXAMPLE====
ppp b / test / xml / <unk> . rb <nl> module nokogiri <nl> it " not blow up " do <nl>
ppp b / test / xml / <unk> . rb <nl> module nokogiri <nl> it " not blow up " do <nl> # see http : / / github . com / tenderlove / nokogiri / issues issue / 22 <nl>
ppp b / test / xml / <unk> . rb <nl> module nokogiri <nl> it " not blow up " <nl>
ppp b / test / xml / <unk> . rb <nl> module nokogiri <nl>
ppp b / test / xml / <unk> . rb <nl> module
====NEW EXAMPLE====
ppp b / actors / infinispan - cluster / pom . xml <nl> < / goals > <nl>
ppp b / actors / infinispan - cluster / pom . xml <nl>
ppp b / actors / infinispan - cluster / pom . xml <nl> < / goals > <nl> < configuration > <nl> < <unk> > false < / <unk> > <nl> <nl> < / < / > <nl> < < <unk> > <nl> < includes > <nl> < include > org . infinispan : * < / include > <nl>
ppp
ppp b / actors / infinispan - cluster / pom . xml <nl> < / goals > <nl> < configuration > <nl> < <unk> > false < / <unk> > <nl> <nl> < / < / > <nl> < < <unk> > <nl> < includes > <nl> < include > org . infinispan : * < / include <nl>
====NEW EXAMPLE====
ppp b / test . properties <nl> portlet . properties . marketplace - portlet , \ <nl>
ppp b / test . properties <nl> portlet . properties . marketplace - portlet , <nl>
ppp b / test . properties <nl> portlet . properties . marketplace - portlet , \ <nl> portlet . properties . private - messaging - portlet , \ <nl> setup . wizard . enabled , \ no newline at end of file <nl> . . . . enabled , \ <nl> solr . enabled , \ <nl> test . assert . javascript . errors , \ <nl> testcase . url , \ <nl>
ppp b / test . properties <nl> portlet . properties . marketplace - portlet , \ <nl> portlet . properties . private - messaging - portlet , \ <nl> setup . wizard . enabled , \ no newline at end of file <nl> . . . . enabled , \ <nl> solr . enabled , \ <nl> test . assert . javascript . errors , \ <nl> testcase . url , <nl>
ppp b / test . properties <nl> portlet . properties . marketplace - portlet , \ <nl> portlet . properties . private - messaging - portlet , \ <nl> setup . wizard . enabled , \ no newline at end of file <nl> . . . . enabled , \ <nl> solr . enabled , \ <nl> test . assert . javascript . errors , \ <nl> testcase . url \ <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7365465b46e95111f8185becdd0b8464055668c5 <nl> mode = push <nl> parent = d22171021e37b5bcccc1e064ba2f238b711f85e9 <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 7365465b46e95111f8185becdd0b8464055668c5 <nl> mode = push <nl> parent = d22171021e37b5bcccc1e064ba2f238b711f85e9 <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / sonar - colorizer / src / main / resources / sonar - colorizer . css <nl> cursor : hand ; cursor : pointer ; <nl> } <nl>
ppp b / sonar - colorizer / src / main / resources / sonar - colorizer . css <nl> cursor : hand ; cursor : pointer ; <nl> <nl>
ppp b / sonar - colorizer / src / main / resources / sonar - colorizer . css <nl> cursor : hand ; cursor : pointer ; <nl> } <nl> .
ppp b / sonar - colorizer / src / main / resources / sonar - colorizer . css <nl> cursor : hand ; cursor : pointer ; <nl>
ppp b / sonar - colorizer / src / main / resources / sonar - colorizer . css <nl> cursor : hand ; cursor : pointer ; <nl> } <nl> . sym
====NEW EXAMPLE====
ppp b / owncloud - android - library <nl> subproject commit <unk> <nl>
ppp b / owncloud - android - library <nl> subproject commit 815fbba48677e40bff2c3c114c4ce8dd1e35bc17 <nl>
ppp b / owncloud - android - library <nl> subproject commit ec2fcc0716311454454a8933ffd75c2398594b03 <nl>
ppp b / owncloud - android - library <nl> subproject commit b13e584ac3d32809492954d2e0a412b0e7898d88 <nl>
ppp b / owncloud - android - library <nl> subproject commit a57be369259bbfb3741a649a8d585fc8de6ac669 <nl>
====NEW EXAMPLE====
ppp b / src / main / java / com / alibaba /
ppp b / src / main / java / com / alibaba / fastjson / serializer / jsonserializer . java <nl> public class jsonserializer { <nl> } <nl> return writer ; <nl> } <nl> public int getpositionforview ( ) { <nl> public string tostring ( ) ; <nl> ; <nl> } <nl> } <nl> } <nl>
ppp b / src / main / java / com / alibaba / fastjson / serializer / jsonserializer . java <nl> public class jsonserializer { <nl> } <nl> return writer ; <nl> } <nl> public int getpositionforview ( ) { <nl> public string tostring ( ) ; <nl> ; <nl> } <nl> } } <nl>
ppp b / src / main / java / com / alibaba / fastjson / serializer / jsonserializer . java <nl> public class jsonserializer { <nl> } <nl> return writer ; <nl> } <nl> public int getpositionforview ( ) { <nl> public string tostring ( ) ; <nl> ; <nl> } <nl> } <nl>
ppp b / src / main / java / com / alibaba / fastjson / serializer / jsonserializer . java <nl> public class jsonserializer { <nl> } <nl> return writer ; <nl> } <nl> public int getpositionforview ( ) { <nl> public string tostring ( ) ; <nl> ; <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / jnalib / release - notes . txt <nl> release 3 . 0 <nl> features <nl> \ no newline at end of file <nl> * * fixed folders getting unneccesarily created ( https : <nl> * <nl> * <nl> * <nl> * <nl> * * more supported platforms via gcc s libffi ( <unk> ) <nl>
ppp b / jnalib / release - notes . txt <nl> release 3 . 0 <nl> features <nl> \ no newline at end of file <nl> * * fixed folders getting unneccesarily created ( https : <nl> * <nl> * <nl> * <nl> * <nl> * * more supported platforms via gcc s libffi ( <unk> ) ) <nl>
ppp b / jnalib / release - notes . txt <nl> release 3 . 0 <nl> features <nl> \ no newline at end of file <nl> * * fixed folders getting unneccesarily created ( https : <nl> * <nl> * <nl> * <nl> * <nl> * * more supported platforms via gcc s libffi ( ) <nl>
ppp b / jnalib / release - notes . txt <nl> release 3 . 0 <nl> features <nl> \ no newline at end of file <nl> * * fixed folders getting unneccesarily created ( https : <nl> * <nl> * <nl> * <nl> * <nl> * * more supported platforms via gcc s libffi ( <unk> <nl>
ppp b / jnalib / release - notes . txt <nl> release 3 . 0 <nl> features <nl> \ no newline at end of file <nl> * * fixed folders getting unneccesarily created ( https : <nl> * <nl> * <nl> * <nl> * <nl> * * more supported platforms via gcc s libffi ( <unk> ) <nl> ) <nl>
====NEW EXAMPLE====
ppp b / samples / recipes / grails - app / controllers / <unk> . groovy <nl> import com . recipes . recipe <nl> class <unk> { <nl> @ property <unk> = recipe . class <nl> } <nl>
ppp b / samples / recipes / grails - app / controllers / <unk> . groovy <nl> import com . recipes . recipe <nl> class <unk> { <nl> @ property <unk> = recipe . class } <nl>
ppp b / samples / recipes / grails - app / controllers / <unk> . groovy <nl> import com . recipes . recipe <nl> class <unk> { <nl> @ property <unk> = recipe . class <nl> <nl>
ppp b / samples / recipes / grails - app / controllers / <unk> . groovy <nl> import com . recipes . recipe <nl> class <unk> { <nl> @ property <unk> = recipe . <nl> } <nl>
ppp b / samples / recipes / grails - app / controllers / <unk> . groovy <nl> import com . recipes . recipe <nl> class <unk> { <nl> @ property <unk> = recipe . class <nl>
====NEW EXAMPLE====
ppp b / docs / reference / index . asciidoc <nl> [ [ elasticsearch - reference ] ] <nl> = reference <nl>
ppp b / docs / reference / index . asciidoc <nl> [ [ elasticsearch - reference ] ] <nl>
ppp b / docs / reference / index . asciidoc <nl>
ppp b / docs / reference / index . asciidoc <nl> [ [ elasticsearch - reference ] <nl>
ppp b / docs / reference / index . asciidoc <nl> [ [ elasticsearch - reference ] ]
====NEW EXAMPLE====
ppp b / vala / <unk> . vala <nl> public class vala . <unk> : symbol { <nl>
ppp b / vala / <unk> . vala <nl> public class vala . <unk> : symbol <nl>
ppp b / vala / <unk> . vala <nl> public class vala . <unk> : symbol {
ppp b / vala / <unk> . vala <nl> public class vala . <unk> : symbol { <nl> var result = new <unk> ( name , <unk> , <unk> ) ; <nl> result . <unk> = <unk> ; <nl> result . direction = this . direction ( ) ; <nl> ; <nl> this this . direction ; <nl> return result ; <nl> } else { <nl> return new <unk> . <unk> ( ) ; <nl>
ppp b / vala / <unk> . vala <nl> public class vala . <unk> : { <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> <nl> <unk>
ppp b / readme . md <nl> <nl>
ppp b / readme . md <nl> <nl> <unk> <unk>
ppp b / readme . md <nl>
ppp b / readme . md <nl> <nl> <unk> : <nl> script : <nl>
====NEW EXAMPLE====
ppp b / curator - client / src / main / java / com / netflix / curator / <unk> . java <nl> import java . util . concurrent . atomic . atomicreference ; <nl> * { <nl> * try <nl> * { <nl> / / / do <unk> <nl> * } <nl> * catch ( exception e ) <nl> * { <nl>
ppp b / curator - client / src / main / java / com / netflix / curator / <unk> . java <nl> import java . util . concurrent . atomic . atomicreference ; <nl> * { <nl> * try <nl> * { <nl> / / / do <unk> <nl> * } <nl> * catch ( exception e ) <nl> * * <nl>
ppp b / curator - client / src / main / java / com / netflix / curator / <unk> . java <nl> import java . util . concurrent . atomic . atomicreference ; <nl> * { <nl> * try <nl> * { <nl> / / / do <unk> <nl> * } <nl> * catch ( exception e ) <nl>
ppp b / curator - client / src / main / java / com / netflix / curator / <unk> . java <nl> import java . util . concurrent . atomic . atomicreference ; <nl> * { <nl> * try <nl> * { <nl> / / / do <unk> <nl> * } <nl> * catch ( exception e ) <nl> * <nl>
ppp b / curator - client / src / main / java / com / netflix / curator / <unk> . java <nl> import java . util . concurrent . atomic . atomicreference ; <nl> * { <nl> * try <nl> * { <nl> / / / do <unk> <nl> * } <nl> * catch ( exception e ) <nl> * { { <nl>
====NEW EXAMPLE====
ppp b / v7 / appcompat / src / android / support / v7 / widget / <unk> . java <nl> class <unk> { <nl> final <unk> <unk> = new <unk> ( ) ; <nl> <unk> . <unk> = true ; <nl> <unk> . <unk> = <unk> ; <nl> } <nl> null ; <nl> return null ; <nl> } <nl>
ppp b / v7 / appcompat / src / android / support / v7 / widget / <unk> . java <nl> class <unk> { <nl> final <unk> <unk> = new <unk> ( ) ; <nl> <unk> . <unk> = true ; <nl> <unk> . <unk> = <unk> ; <nl> } <nl> null ; <nl> return null ; <nl> } } <nl>
ppp b / v7 / appcompat / src / android / support / v7 / widget / <unk> . java <nl> class <unk> { <nl> final <unk> <unk> = new <unk> ( ) ; <nl> <unk> . <unk> = true ; <nl> <unk> . <unk> = <unk> ; <nl> } <nl> null ; <nl> return null ; <nl> ; <nl>
ppp b / v7 / appcompat / src / android / support / v7 / widget / <unk> . java <nl> class <unk> { <nl>
ppp b / v7 / appcompat / src / android / support / v7 / widget / <unk> . java <nl> class <unk> { <nl> final <unk> <unk> = new <unk> ( ) ; <nl> <unk> . <unk> = true ; <nl> <unk> . <unk> = <unk> ; <nl> } <nl> null ; <nl> return null null ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / test / java / org / mapdb / <unk> . kt <nl> import java . util . concurrent . locks . <unk> <nl>
ppp b / src / test / java / org / mapdb / <unk> . kt <nl>
ppp b / src / test / java / org / mapdb / <unk> . <nl>
ppp b / src / test / java / org / mapdb / <unk> . kt <nl> import java . util . concurrent . locks . <unk> <nl> import org . mapdb . <unk> . * <nl> import org . mapdb . volume . <unk> <nl> import org . mapdb . volume . <unk> <nl> import java . io . <unk> <nl> class <unk> : <unk> ( ) { <nl>
ppp b / src / test / java / org / mapdb / <unk> . kt <nl> import java . util . concurrent . locks . <unk> <nl> import org . mapdb . <unk> . * <nl> import org . mapdb . volume . <unk> <nl> import org . mapdb . volume . <unk> <nl> import java . io . <unk> <nl> class <unk> : <unk> ( { <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - js . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - js / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / appview " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout > <nl>
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / appview " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout <nl>
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / appview " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout linearlayout <nl>
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / appview " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout > > <nl>
ppp b / res / layout / main . xml <nl> android : layout_height = " fill_parent " <nl> > <nl> < webview android : id = " @ + id / appview " <nl> android : layout_height = " wrap_content " <nl> android : layout_width = " fill_parent " <nl> / > <nl> < / linearlayout > <nl> <nl>
====NEW EXAMPLE====
ppp b / src / spec / doc / core - object - orientation . adoc <nl> include : : { projectdir } / src / spec / test / <unk> / <unk> . groovy [ tags = <unk> <nl> = = = fields and properties <nl> [ [ fields ] ] <nl> = = = = fields <nl>
ppp b / src / spec / doc / core - object - orientation . adoc <nl> include : : { projectdir } / src / spec / test / <unk> / <unk> . groovy [ tags = <unk> <nl> = = = fields and properties <nl> [ [ fields ] ] <nl> = = = = fields fields <nl>
ppp b / src / spec / doc / core - object - orientation . adoc <nl> include : : { projectdir } / src / spec / test / <unk> / <unk> . groovy [ tags = <unk> <nl> = = = fields and properties <nl> [ [ fields ] ] <nl> = = = = <nl>
ppp b / src / spec / doc / core - object - orientation . adoc <nl>
ppp b / src / spec / doc / core - object - orientation . adoc <nl> include : : { projectdir } / src / spec / test / <unk> / <unk> . groovy [ tags = <unk> <nl> = = = fields and properties <nl> [ [ fields ] ] <nl> = = = fields <nl>
====NEW EXAMPLE====
ppp b / package . json <nl> " react . gradle " , <nl> " android " , <nl> " libraries " , <nl> " packager " reactcommon <nl> " " " , <nl> " cli . js " , <nl> " local - cli " , <nl>
ppp b / package . json <nl> " react . gradle " , <nl> " android " , <nl> " libraries " , <nl> " packager " reactcommon <nl> " " " , <nl> " cli . js " , <nl> " local - cli " <nl>
ppp b / package . json <nl> " react . gradle " , <nl>
ppp b / package . json <nl> " react . gradle
ppp b / package . json <nl> " react . gradle " , <nl> " android " , <nl> " libraries " , <nl> " packager " reactcommon <nl> " " " , <nl> " cli . js " , <nl> " local - cli " " <nl>
====NEW EXAMPLE====
ppp b / python / testdata / wrap / wraprightmargin . after . py <nl> def do_stuff ( ) : <nl> another_long_variable = a_really_long_function_name_with_parameters ( 12 , <nl> this_is_the_first_param = 23 , <nl> this_is_the_second = 45 ) . do_more_stuff_to_the_result ( ) <nl>
ppp b / python / testdata / wrap / wraprightmargin . after . py <nl> def do_stuff ( ) : <nl> another_long_variable = a_really_long_function_name_with_parameters ( 12 , <nl> this_is_the_first_param = 23 , <nl> this_is_the_second = 45 ) . do_more_stuff_to_the_result ( <nl>
ppp b / python / testdata / wrap / wraprightmargin . after . py <nl> def do_stuff ( ) : <nl> another_long_variable = a_really_long_function_name_with_parameters ( 12 , <nl> this_is_the_first_param = 23 , <nl> this_is_the_second = 45 ) . do_more_stuff_to_the_result ( ) <nl> <nl>
ppp b / python / testdata / wrap / wraprightmargin . after . py <nl> def do_stuff ( ) : <nl> another_long_variable = a_really_long_function_name_with_parameters ( 12 , <nl> this_is_the_first_param = 23 , <nl> this_is_the_second = 45 ) . do_more_stuff_to_the_result ( ( <nl>
ppp b / python / testdata / wrap / wraprightmargin . after . py <nl> def do_stuff ( ) : <nl> another_long_variable = a_really_long_function_name_with_parameters ( 12 , <nl> this_is_the_first_param = 23 , <nl> this_is_the_second = 45 ) . do_more_stuff_to_the_result ( ) ) <nl>
====NEW EXAMPLE====
ppp b / gradle . properties <nl> version = false <nl>
ppp b / gradle . properties <nl> version = 2 . <nl>
ppp b / gradle . properties <nl> version <nl>
ppp b / gradle . properties <nl> version = 2 <nl>
ppp b / gradle . properties <nl> version = patch <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b70d16389f0bbea0306ea18a07465baf7d731458 <nl> mode = push <nl> parent = 96a9b8cdbc5d89823c037d2b93ecb4f29c1ad3ed <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> debian / etherpad . <unk> <nl> debian / etherpad <nl> debian / files <nl> build - stamp <nl>
ppp b / . gitignore <nl> debian / etherpad . <unk> <nl> debian / etherpad <nl> debian / files <nl> build - stamp <nl> <nl>
ppp b / . gitignore <nl> debian / etherpad . <unk> <nl> debian / etherpad <nl> debian / files <nl> build - stamp <nl> * <nl>
ppp b / . gitignore <nl> debian / etherpad . <unk> <nl> debian / etherpad <nl> debian / files <nl> build - stamp <nl> build <nl>
ppp b / . gitignore <nl> debian / etherpad . <unk> <nl> debian / etherpad <nl> debian / files <nl> build - stamp <nl> stamp <nl>
====NEW EXAMPLE====
ppp b / version . txt <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 85 . . . 0 - snapshot <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / version . txt <nl> \ no newline at end of file <nl> 85 . . 0 . 1 <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # unreleased <nl>
ppp b / changelog . md <nl> # # unreleased <nl> * added reporterror to to minecraft <nl> * updated german translation <nl> * storm exponential backoff stategy correctly compares two objects / withlocalcluster of downloading wikipedia dataset ( bowei zhang via smarthi <nl> * storm - * storm - added reporterror reporterror to batchoutputcollector <nl> * bug fix : hide the basicoutputcollector # getoutputter method , since it shouldn ' t be a publicly available <nl>
ppp b / changelog . md <nl> # # unreleased <nl> * added reporterror to to minecraft <nl> * updated german translation <nl> * storm exponential backoff stategy correctly compares two objects / withlocalcluster of downloading wikipedia dataset ( bowei zhang via smarthi <nl> * storm - * storm - added reporterror reporterror to batchoutputcollector <nl> * bug fix : hide the basicoutputcollector # getoutputter method , since it shouldn ' t be a publicly available . <nl>
ppp b / changelog . md <nl> # # unreleased <nl> * added reporterror to to minecraft <nl> * updated german translation <nl> * storm exponential backoff stategy correctly compares two objects / withlocalcluster of downloading wikipedia dataset ( bowei zhang via smarthi <nl> * storm - * storm - added reporterror reporterror to batchoutputcollector <nl> * bug fix : hide the basicoutputcollector # getoutputter method , since it shouldn ' t be a publicly publicly <nl>
ppp b / changelog . md <nl> # # unreleased <nl> * added reporterror to to minecraft <nl> * updated german translation <nl> * storm exponential backoff stategy correctly compares two objects / withlocalcluster of downloading wikipedia dataset ( bowei zhang via smarthi <nl> * storm - * storm - added reporterror reporterror to batchoutputcollector <nl> * bug fix : hide the basicoutputcollector # getoutputter method , since it shouldn ' t be a publicly available available <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - image - uploader . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / src / com / google / javascript / jscomp / normalize . java <nl> import java . util . set ; <nl> * <nl> * @ author <unk> @ google . com ( <unk> ) <nl> * / <nl> / normalize compilerpass { <nl> private final abstractcompiler compiler ; <nl>
ppp b / src / com / google / javascript / jscomp / normalize . java <nl> import java . util . set ; <nl> * <nl> * @ author <unk> @ google . com ( <unk> ) <nl> * / <nl>
ppp b / src / com / google / javascript / jscomp / normalize . java <nl> import java . util . set ; <nl> * <nl> * @ author <unk> @ google . com ( <unk> ) <nl>
ppp b / src / com / google / javascript / jscomp / normalize . java <nl> import java . util . set ; <nl> * <nl> * @ author <unk> @ google . com ( <unk> ) <nl> * / <nl> / normalize compilerpass { <nl> private final abstractcompiler ; <nl>
ppp b / src / com / google / javascript / jscomp / normalize . java <nl> import java . util . set ; <nl> * <nl> * @ author <unk> @ google . com ( <unk> ) <nl> * <nl>
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = fa79eabdb8c3b4d59b6af6e1326d4b4b532ba178 <nl> mode = push <nl> parent = 1b985d5c7c18bd4c80872bb71250cc8fd51be0af <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = = " 1 . 0 . 0 - snapshot <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / server / src / test / java / io / druid / curator / curatortestbase . java <nl> public class curatortestbase <nl> closequietly . close ( curator ) ; <nl> closequietly . close ( server ) ; <nl> } <nl> } <nl>
ppp b / server / src / test / java / io / druid / curator / curatortestbase . java <nl> public class curatortestbase <nl> closequietly . close ( curator ) ; <nl> closequietly . close ( server ) ; <nl> } <nl> <nl>
ppp b / server / src / test / java / io / druid / curator / curatortestbase . java <nl> public class curatortestbase <nl> closequietly . close ( curator ) ; <nl> closequietly . close ( server ) ; <nl> } <nl> } } <nl>
ppp b / server / src / test / java / io / druid / curator / curatortestbase . java <nl> public class curatortestbase <nl> closequietly . close ( curator ) ; <nl> closequietly . close ( server ) ; <nl> } <nl> } <nl> <nl>
ppp b / server / src / test / java / io / druid / curator / curatortestbase . java <nl> public class curatortestbase <nl> closequietly . close ( curator ) ; <nl> closequietly . close ( server ) ; <nl> } <nl> <nl> } <nl>
====NEW EXAMPLE====
ppp b / src / net / java / sip / communicator / impl / <unk> / <unk> . java <nl> public class <unk> <nl> <unk> = null ; <nl> <unk> = null ; <nl> <unk> = null ; <nl> } <nl> null ; <nl> } <nl> / * * <nl>
ppp b / src / net / java / sip / communicator / impl / <unk> / <unk> . java <nl> public class <unk> <nl> <unk> = null ; <nl> <unk> = null ; <nl> <unk> = null ; <nl> } <nl> null ; <nl> } <nl> / * *
ppp b / src / net / java / sip / communicator / impl / <unk> / <unk> . java <nl> public class <unk> <nl> <unk> = null ; <nl> <unk> = null ; <nl> <unk> = null ; <nl> } <nl> null ; <nl> } <nl>
ppp b / src / net / java / sip / communicator / impl / <unk> / <unk> . java <nl> public class <unk> <nl> <unk> = null ; <nl> <unk> = null ; <nl> <unk> = null ; <nl> } <nl> null ; <nl> } <nl> / * * <nl> <nl>
ppp b / src / net / java / sip / communicator / impl / <unk> / <unk> . java <nl> public class <unk> <nl> <unk> = null ; <nl> <unk> = null ; <nl> <unk> = null ; <nl> } <nl> null ; <nl> } <nl> / * <nl>
====NEW EXAMPLE====
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 3 <nl> def versionpatch = 0 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl>
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 3 <nl> def versionpatch = 0 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android android <nl>
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 3 <nl> def versionpatch = 0 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl>
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 3 <nl> def versionpatch = 0 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl> <nl>
ppp b / app / build . gradle <nl> def buildtime ( ) { <nl> def versionmajor = 0 <nl> def versionminor = 3 <nl> def versionpatch = 0 <nl> def versionbuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { { <nl>
====NEW EXAMPLE====
ppp b / wordpress / lint . xml <nl> < / issue > <nl> < issue id =
ppp b / wordpress / lint . xml <nl> < / issue > <nl> < issue id
ppp b / wordpress / lint . xml <nl> < /
ppp b / wordpress / lint . xml <nl> < / issue > <nl> < issue id = " hardcodedtext " $ { <nl> error reporting = " <nl> issue issue = " " " " " severity = " " / > <nl> < / lint > <nl>
ppp b / wordpress / lint . xml <nl> < / issue > <nl> < issue id = " hardcodedtext " $ { <nl> error reporting = " <nl> issue issue = " " " " " severity = " " / > <nl> < / lint <nl>
====NEW EXAMPLE====
ppp b / openapi / src / com / intellij / openapi / vcs / <unk> . java <nl> package com . intellij . openapi . vcs ; <nl> import java . util . list ; <nl> public interface <unk> { <nl> { <nl> void run ( ( list ) ) ; <nl> } <nl>
ppp b / openapi / src / com / intellij / openapi / vcs / <unk> . java <nl> package com . intellij . openapi . vcs ; <nl> import java . util . list ; <nl> public interface <unk> { <nl> { <nl> void run ( ( list ) ; <nl> } <nl>
ppp b / openapi / src / com / intellij / openapi / vcs / <unk> . java <nl>
ppp b / openapi / src / com / intellij / openapi / vcs / <unk> . java <nl> package com . intellij . openapi . vcs ; <nl> import java . util . list ; <nl> public interface <unk> { <nl> { <nl> void run ( ( list ) ) ; } <nl>
ppp b / openapi / src / com / intellij / openapi / vcs / <unk> . java <nl> package com . intellij . openapi . vcs ; <nl> import java . util . list ; <nl> public interface <unk> { <nl> { <nl> void run ( ( list ) ) ; <nl> }
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f3b29d2d8ca45d92d1cc3cb56a7cf9e4df5c869d <nl> mode = push <nl> parent = 5ea959841ff40edb4235f36404b752fd6ba5cf2f <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / export - import / . <nl>
====NEW EXAMPLE====
ppp b / core / java / android / net / http / <unk> . java <nl> public class <unk> implements <unk> { <nl>
ppp b / core / java / android / net / http / <unk> . java <nl>
ppp b / core / java / android / net / http / <unk> . <nl>
ppp b / core / java / android / net / http / <unk> . java <nl> public class <unk> implements <unk> { <nl> mcontext . <unk> ( <unk> , <nl> new <unk> ( proxy . <unk> ) ) ; <nl> } <nl> } <nl> * @ override <nl> public void opengui ( ) ; <nl> } <nl> } <nl> / * * <nl>
ppp b / core / java / android / net / http
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < profile > <nl>
ppp b / pom . xml <nl> < profile <nl>
ppp
ppp b / pom . xml <nl> < profile > <nl> < id > release < / id > <nl> < build > <nl> < / > <nl> < / < / < / < / < / < / < / > <nl> < < plugins > <nl> < ! - - we want to deploy the artifact to a staging location location for perusal - - > <nl>
ppp b / pom . xml <nl> < profile > <nl> < id > release < / id > <nl> < build > <nl> < / > <nl> < / < / < / < / < / < / < / > <nl> < < plugins > <nl> < ! - - we want to deploy the artifact to a staging location location for perusal - > <nl>
====NEW EXAMPLE====
ppp b / app / src / main / java / io / <unk> / ui / homeactivity . java <nl> public class homeactivity extends activity { <nl> public void <unk> ( view <unk> ) { <nl> / / reset <nl> <unk> . <unk> ( null ) ; <nl> <unk> ( ) ; <nl> ) ; <nl> } <nl> @ override <nl>
ppp b / app / src / main / java / io / <unk> / ui / homeactivity . java <nl>
ppp b / app / src / main / java / io / <unk> / ui / homeactivity . java <nl> public class homeactivity extends activity { <nl>
ppp b / app / src / main / java / io / <unk> / ui / homeactivity . <nl>
ppp b / app / src / main / java / io / <unk> / ui / homeactivity . java <nl> public class homeactivity extends activity { <nl> public void <unk> ( view <unk> ) { <nl> / / reset <nl> <unk> . <unk> ( null ) ; <nl> <unk> ( ) ; <nl> ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / common / buildcraft / transport / tilegenericpipe . java <nl> public class tilegenericpipe extends tileentity implements ipowerreceptor , itank <nl> worldobj . <unk> ( xcoord , ycoord , zcoord ) ; <nl> } <nl> @ override <nl> public double <unk> ( ) { <nl> return 24 ; <nl> } <nl>
ppp b / common / buildcraft / transport / tilegenericpipe . java <nl> public class tilegenericpipe extends tileentity implements ipowerreceptor , itank <nl> worldobj . <unk> ( xcoord , ycoord , zcoord ) ; <nl> } <nl> @ override <nl> public double <unk> ( ) { <nl> return 24 ; <nl> <nl>
ppp b / common / buildcraft / transport / tilegenericpipe . java <nl> public class tilegenericpipe extends tileentity implements ipowerreceptor , itank <nl> worldobj . <unk> ( xcoord , ycoord , zcoord ) ; <nl> } <nl> @ override <nl> public double <unk> ( ) { <nl> return 24 ; <nl> }
ppp b / common / buildcraft / transport / tilegenericpipe . java <nl> public class tilegenericpipe extends tileentity implements ipowerreceptor , itank <nl>
ppp b / common / buildcraft / transport / tilegenericpipe . java <nl> public class tilegenericpipe extends tileentity implements ipowerreceptor , itank <nl> worldobj . <unk> ( xcoord , ycoord , zcoord ) ; <nl> } <nl> @ override <nl> public double <unk> ( ) { <nl> return 24 ; <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / project / build . scala <nl> object build extends sbt . build { <nl>
ppp b / project / build . scala <nl> object build extends sbt . build <nl>
ppp b / project / build . scala <nl> object build extends sbt . build {
ppp b / project / build . scala <nl> object build extends
ppp b / project / build . scala <nl> object build extends sbt . build { <nl> scalaversion : = scalaversion , <nl> crosspaths : = false , <nl> organizationname : = organization , <nl> organizationhomepage : = = some ( https : <nl> organizationhomepage = organizationhomepage <nl> organizationhomepage : = some ( url ( " https : / / actor . im " ) ) <nl> ) <nl>
====NEW EXAMPLE====
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . css <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . css <nl> hr , . separator { <nl> height : auto ; <nl> margin - top : 1 . 4em ; <nl> position : relative ; <nl> z - index ( ) ; <nl> z : index : 210 ; <nl> } <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . css <nl> hr , . separator { <nl> height : auto ; <nl> margin - top : 1 . 4em ; <nl> position : relative ; <nl> z - index ( ) ; <nl> z : index : 210 210 ; <nl> } <nl>
ppp b / portal - web / docroot / html / themes / classic / _diffs / css / custom . css <nl> hr , . separator { <nl> height : auto ; <nl> margin - top : 1 . 4em ; <nl> position : relative ; <nl> z - index ( ) ; <nl> z : index : 210 ; <nl> } } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / chat / chat - web / bnd . bnd <nl> bundle - name : liferay chat web <nl> bundle - symbolicname : com . liferay . chat . web <nl> bundle - version : 1 . 0 . 1 <nl> web - contextpath : / chat - web <nl> \ no newline at end of file <nl>
ppp b / modules / apps / chat / chat - web / bnd . bnd <nl> bundle - name : liferay chat web <nl> bundle - symbolicname : com . liferay . chat . web <nl> bundle - version : 1 . 0 . 1 <nl> web - contextpath : / chat - web \ no newline at end of file <nl>
ppp b / modules / apps / chat / chat - web / bnd . bnd <nl> bundle - name : liferay chat web <nl> bundle - symbolicname : com . liferay . chat . web <nl> bundle - version : 1 . 0 . 1 <nl> web - contextpath : / chat - web <nl> no newline at end of file <nl>
ppp b / modules / apps / chat / chat - web / bnd . bnd <nl> bundle - name : liferay chat web <nl> bundle - symbolicname : com . liferay . chat . web <nl> bundle - version : 1 . 0 . 1 <nl> web - contextpath : / chat - snapshot <nl> \ no newline at end of file <nl>
ppp b / modules / apps / chat / chat - web / bnd . bnd <nl> bundle - name : liferay chat web <nl> bundle - symbolicname : com . liferay . chat . web <nl> bundle - version : 1 . 0 . 1 <nl> web - contextpath : / chat - <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> in maven : <nl> < dependency > <nl> < groupid > co . paralleluniverse < / groupid > <nl> < artifactid > quasar < / artifactid > <nl> < < version > 0 . 1 < / / version > <nl> < / dependency > <nl> ` ` ` <nl>
ppp b / readme . md <nl> in maven : <nl> < dependency > <nl> < groupid > co . paralleluniverse < / groupid > <nl> < artifactid > quasar < / artifactid > <nl> < < version > 0 . 1 < / / version > <nl> < / dependency > <nl> ` ` <nl>
ppp b / readme . md <nl> in maven : <nl> < dependency > <nl> < groupid > co . paralleluniverse < / groupid > <nl> < artifactid > quasar < / artifactid > <nl> < < version > 0 . 1 < / / version > <nl> < / dependency > <nl> ` ` ` ` <nl>
ppp b / readme . md <nl> in maven : <nl> < dependency > <nl> < groupid > co . paralleluniverse < / groupid > <nl> < artifactid > quasar < / artifactid > <nl> < < version > 0 . 1 < / / version > <nl> < / dependency > <nl>
ppp b / readme . md <nl> in maven : <nl> < dependency > <nl> < groupid > co . paralleluniverse < / groupid > <nl> < artifactid > quasar < / artifactid > <nl> < < version > 0 . 1 < / / version > <nl> < / dependency > <nl> ` ` ` <nl> <nl>
====NEW EXAMPLE====
ppp b / community / server / src / docs / ops / security . txt <nl>
ppp b / community / server / src / docs / ops / security . txt <nl> <unk> / http : / / localhost : <unk> / <nl>
ppp b / community / server / src / docs / ops / security . txt <nl> <unk> / http : / / localhost : <unk> <nl>
ppp b / community / server / src / docs / ops / security . <nl>
ppp b / community / server / src / docs / ops / security . txt <nl> <unk> / http : / / localhost : <unk> / <nl> <unk> substitute application / json <nl> <unk> substitute text / html <nl> substitute s / localhost : <unk> / <unk> . example com / n <nl> < / / com / n <nl> < / location > <nl> - - <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - site git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / app / lib / notifications / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public boolean <unk> ( ) { <nl> return false ; <nl> } <nl> } <nl>
ppp b / app / lib / notifications / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public boolean <unk> ( ) { <nl> return false ; <nl> } <nl> <nl>
ppp b / app / lib / notifications / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public boolean <unk> ( ) { <nl> return false ; <nl> } <nl> } <nl> <nl>
ppp b / app / lib / notifications / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public boolean <unk> ( ) { <nl> return false ; <nl> } <nl> }
ppp b / app / lib / notifications / <unk> . java <nl> public class <unk> implements <unk> { <nl> @ override <nl> public boolean <unk> ( ) { <nl> return false ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> out <nl> . project <nl> . classpath <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> out <nl> . project <nl> . classpath <nl> \ no newline at end of file <nl> <nl> <nl> <nl> . . settings <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> out <nl> . project <nl> . classpath <nl> \ no newline at end of file <nl> * . iws <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> out <nl> . project <nl> . classpath <nl> \ no newline at end of file <nl> <nl> <nl> <nl> . iws <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> out <nl> . project <nl> . classpath <nl> \ no newline at end of file <nl> <nl> <nl> <nl> . . iws <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> . * . swp <nl> * . tmproj <nl>
ppp b / . gitignore <nl> . * . swp <nl>
ppp b / . gitignore <nl> . * . <nl>
ppp b
ppp
====NEW EXAMPLE====
ppp b / pom . xml <nl> < module > distributed < / module > <nl> < module > graphdb < / module > <nl> < module > lucene < / module > <nl> < module > jdbc < / module > <nl> < module > etl < / module > <nl> < module > distribution < / module > <nl> < / modules > <nl>
ppp b / pom . xml <nl> < module > distributed < / module > <nl> < module > graphdb < / module > <nl> < module > lucene < / module > <nl> < module > jdbc < / module > <nl> < module > etl < / module > <nl> < module > distribution < / module > <nl> < / > <nl>
ppp b / pom . xml <nl> < module > distributed < / module > <nl> < module > graphdb < / module > <nl> < module > lucene < / module > <nl> < module > jdbc < / module > <nl> < module > etl < / module > <nl> < module > distribution < / module > <nl> < / modules <nl>
ppp b / pom . xml <nl> < module > distributed < / module > <nl> < module > graphdb < / module > <nl> < module > lucene < / module > <nl> < module > jdbc < / module > <nl> < module > etl < / module > <nl> < module > distribution < / module > <nl> < / modules > <nl> > <nl>
ppp b / pom . xml <nl> < module > distributed < / module > <nl> < module > graphdb < / module > <nl> < module > lucene < / module > <nl> < module > jdbc < / module > <nl> < module > etl < / module > <nl> < module > distribution < / module > <nl>
====NEW EXAMPLE====
ppp b / src / spec / doc / core - semantics . adoc <nl>
ppp b / src / spec / doc / core - semantics . adoc <nl> include : : { projectdir } / src / spec / test / <unk> . groovy [ tags = <unk> , <unk> <nl> = = <unk> <nl> ( = = = <unk> <nl>
ppp b / src / spec / doc / core - semantics . adoc <nl> include : : { projectdir } / src / spec / test / <unk> . groovy [ tags = <unk> , <unk> <nl> = = <unk> <nl> ( = = = optional <nl>
ppp b / src / spec / doc / core - semantics . adoc <nl> include : : { projectdir } / src / spec / test / <unk> . groovy [ tags = <unk> , <unk> <nl> = = <unk> <nl> ( = = = <unk> <unk> <nl>
ppp b / src / spec / doc / core - semantics . adoc
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 208106eef0d1470a99df0bf8aded2b52a3ca8684 <nl> mode = push <nl> parent = 4edbb18ee31b8f2b2572b854fbbdf572fb11ff20 <nl> remote = git @ github . com : liferay / com - liferay - document - library . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / document - library / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / lib / testing . properties <nl> net . java . sip . communicator . slick . runner . test_list = configurationservicelick \ <nl> jabberprotocolproviderslick \ <nl> <unk> \ <nl> yahooprotocolproviderslick \ <nl> yahooprotocolproviderslick \ <nl> msnprotocolproviderslick <nl> # <unk> \ <nl>
ppp b / lib / testing . properties <nl> net . java . sip . communicator . slick . runner . test_list = configurationservicelick \ <nl> jabberprotocolproviderslick \ <nl> <unk> \ <nl> yahooprotocolproviderslick \ <nl> yahooprotocolproviderslick \ <nl> msnprotocolproviderslick <nl> # <unk> \ \ <nl>
ppp b / lib / testing . properties <nl> net . java . sip . communicator . slick . runner . test_list = configurationservicelick \ <nl> jabberprotocolproviderslick \ <nl> <unk> \ <nl> yahooprotocolproviderslick \ <nl> yahooprotocolproviderslick \ <nl> msnprotocolproviderslick <nl> # <unk> \ <nl> <nl>
ppp b / lib / testing . properties <nl> net . java . sip . communicator . slick . runner . test_list = configurationservicelick \ <nl> jabberprotocolproviderslick \ <nl> <unk> \ <nl> yahooprotocolproviderslick \ <nl> yahooprotocolproviderslick \ <nl> msnprotocolproviderslick <nl>
ppp b / lib / testing . properties <nl> net . java . sip . communicator . slick . runner . test_list = configurationservicelick \ <nl> jabberprotocolproviderslick \ <nl> <unk> \ <nl> yahooprotocolproviderslick \ <nl> yahooprotocolproviderslick \ <nl> <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * <nl>
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * fixed index out of range in web view hook <nl> * updated slovak translation <nl> * updated simplified chinese translation <nl> * updated updated italian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = open ) <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * fixed index out of range in web view hook <nl> * updated slovak translation <nl> * updated simplified chinese translation <nl> * updated updated italian translation <nl> [ open issues ] ( https : / / github . com / m66b / xprivacy / issues ? state = ) <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 3f22dedced368acfec6cc0b80eca3bb1a2037f32 <nl> mode = push <nl> parent = 6be1ca733363d9847fcea51ac8ff9acc589a6ed5 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - oraclejdk7 <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - oraclejdk8 <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - openjdk8 <nl>
ppp b / . travis . yml <nl> language : java <nl> jdk : <nl> - snapshot <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> local . properties <nl>
ppp b / . gitignore <nl> local . properties <nl> . metadata / <nl> . settings / <nl> # gradle folder <nl> * . settings <nl> * . iml <nl> * . iml <nl> * . iws <nl> * . iws <nl> <nl> . gradle / <nl>
ppp b / . gitignore <nl> local . properties <nl> . metadata / <nl> . settings / <nl> # gradle folder <nl> * . settings <nl> * . iml <nl> * . iml <nl> * . iws <nl> * . iws <nl> <nl> . gradle / <nl> build / <nl>
ppp b / . gitignore <nl> local . properties <nl> . metadata / <nl> . settings / <nl> # gradle folder <nl> * . settings <nl> * . iml <nl> * . iml <nl> * . iws <nl> * . iws <nl> <nl> . gradle / <nl> <nl>
ppp b / . gitignore <nl> local . properties <nl> . metadata / <nl> . settings / <nl> # gradle folder <nl> * . settings <nl> * . iml <nl> * . iml <nl> * . iws <nl> * . iws <nl> <nl> . gradle / <nl> build <nl>
====NEW EXAMPLE====
ppp b / html5 / default / app / differ . js <nl> export default class differ { <nl> settimeout ( ( ) = > { <nl> this . <unk> = false <nl> this . flush ( true ) <nl> } <nl> ) ; <nl> } <nl> const map = this . map <nl> if ( ! map [ depth ] ) { <nl>
ppp b / html5 / default / app / differ . js <nl> export default class differ { <nl> settimeout ( ( ) = > { <nl> this . <unk> = false <nl> this . flush ( true ) <nl> } <nl> ) ; <nl> } <nl> const map = this . map <nl> if ( ! map [ depth ] { <nl>
ppp b / html5 / default / app / differ . js <nl> export default class differ { <nl> settimeout ( ( ) = > { <nl> this . <unk> = false <nl> this . flush ( true ) <nl> } <nl> ) ; <nl> } <nl> const map = this . map <nl> if ( ! map [ depth ] ) <nl>
ppp b / html5 / default / app / differ . js <nl> export default class differ { <nl> settimeout ( ( ) = > { <nl> this . <unk> = false <nl> this . flush ( true ) <nl> } <nl> ) ; <nl> } <nl> const map = this . map <nl> if ( ! map [ depth ] ) ) <nl>
ppp b / html5 / default / app / differ . js <nl> export default class differ { <nl> settimeout ( ( ) = > { <nl> this . <unk> = false <nl> this . flush ( true ) <nl> } <nl> ) ; <nl> } <nl> const map = this . map <nl> if ( ! map [ depth ] ] <nl>
====NEW EXAMPLE====
ppp b / r / tests / run . py <nl> class <unk> : <nl> @ return : none <nl> " " " <nl> <unk> = 30 <nl> while ( <unk> > 0 ) : <nl> if ( self . terminated ) : <nl> return <nl>
ppp b / r / tests / run . py <nl> class <unk> : <nl> @ return : none <nl> " " " <nl> <unk> = 30 <nl> while ( <unk> > 0 ) : <nl> if ( self . terminated ) : <nl> <nl>
ppp b / r / tests / run . py <nl> class <unk> : <nl> @ return : none <nl> " " " <nl> <unk> = 30 <nl> while ( <unk> > 0 ) : <nl> if ( self . terminated ) : <nl>
ppp b / r / tests / run . py <nl> class <unk> : <nl> @ return : none <nl> " " " <nl> <unk> = 30 <nl> while ( <unk> > 0 ) : <nl> if ( self . terminated ) : <nl> return <nl> <nl>
ppp b / r / tests / run . py <nl> class <unk> : <nl> @ return : none <nl> " " " <nl> <unk> = 30 <nl> while ( <unk> > 0 ) : <nl> if ( self . terminated ) : <nl> } <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> / plugins <nl> / lib / * <nl>
ppp b / . gitignore <nl> / plugins <nl>
ppp b / . gitignore <nl> / plugins <nl> / lib
ppp b / . gitignore <nl> / plugins <nl> / lib / * <nl> !
ppp b / . gitignore <nl> / plugins <nl> /
====NEW EXAMPLE====
ppp b / spongecommon <nl> subproject commit <unk> <nl>
ppp b / spongecommon <nl> subproject commit <nl>
ppp b / spongecommon <nl> subproject commit fba07bc558372a1f3bee80b837495cf6bf8e0a5a <nl>
ppp b / spongecommon <nl> subproject commit 4d400f5d7c8a766dfb079c915308a2eeccfc0f8b <nl>
ppp b / spongecommon <nl> subproject commit 7284da883104caf9c0fba821a69a12f5c4e15211 <nl>
====NEW EXAMPLE====
ppp b / core / src / processing / opengl / <unk> . java <nl> public class <unk> { <nl> return <unk> / 2 ; <nl> } <nl> private static final long serialversionuid = null ; <nl> } <nl> private static final long <unk> = <unk> ; <nl> private static final long <unk> = <unk> ; <nl>
ppp b / core / src / processing / opengl / <unk> . java <nl>
ppp b / core / src / processing / opengl / <unk> . java <nl> public class <unk> { <nl> return <unk> / 2 ; <nl> } <nl> private static final long serialversionuid = null ; <nl> } <nl> private static final long <unk> = <unk> ; <nl> private static final long <unk> = <unk> ; ; <nl>
ppp b / core / src / processing / opengl / <unk> . java <nl> public class <unk> { <nl> return <unk> / 2 ; <nl> } <nl> private static final long serialversionuid = null ; <nl> } <nl> private static final long <unk> = <unk> ; <nl> private static final long <unk> = <unk> ; <nl> <nl>
ppp b / core / src / processing / opengl / <unk> . java <nl> public class <unk> { <nl> return <unk> / 2 ; <nl> } <nl> private static final long serialversionuid = null ; <nl> } <nl> private static final long <unk> = <unk> ; <nl> private static final long <unk> = <unk> ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c50569f520855ecd92101d4c6f5db453da1475e4 <nl> mode = push <nl> parent = 5e7bb7ac6da3efdafc73c620268842f27e237e3f <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / <unk> . java <nl> class <unk> <nl> } <nl> } <nl> class anonymous <nl> { <nl> comparable comp = new comparable ( ) <nl> { <nl>
ppp b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / <unk> . java <nl> class <unk> <nl> } <nl> } <nl> class anonymous <nl> { <nl> comparable comp = new comparable ( ) <nl> <nl>
ppp b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / <unk> . java <nl> class <unk> <nl> } <nl> } <nl> class anonymous <nl> { <nl> comparable comp = new comparable ( ) <nl> { <nl> <nl>
ppp b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / <unk> . java <nl> class <unk> <nl> } <nl> } <nl> class anonymous <nl> { <nl> comparable comp = new comparable ( ) <nl> } <nl>
ppp b / src / test / resources / com / puppycrawl / tools / checkstyle / checks / coding / <unk> . java <nl> class <unk> <nl> } <nl> } <nl> class anonymous <nl> { <nl> comparable comp = new comparable ( ) <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> . ds_store <nl> . # * <nl> * . swp <nl> swp <nl> bin <nl> target <nl>
ppp b / . gitignore <nl> . ds_store <nl> . # * <nl> * . swp <nl> swp <nl> bin <nl>
ppp b / . gitignore <nl> . ds_store <nl> . # * <nl>
ppp b / . gitignore <nl> . ds_store <nl> . # * <nl> * . swp <nl> swp <nl> bin target <nl>
ppp b / . gitignore <nl> . ds_store <nl> . # * <nl> * . swp <nl> swp <nl> bin <nl> <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> install : <nl> npm <nl>
ppp b / . travis . yml <nl> install : <nl>
ppp b / . travis . yml <nl> install : <nl> npm install <nl>
ppp b / . travis . yml <nl> install : <nl> npm : <nl>
ppp b / . travis . yml <nl> install : <nl> install : <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> notifications : <nl> cache : <nl>
ppp b / . travis . yml <nl> notifications : <nl> cache <nl>
ppp b / . travis . yml <nl> notifications : <nl> cache
ppp b / . travis . yml <nl> notifications : <nl>
ppp b / . travis . yml <nl> notifications : <nl> cache : <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> jdk : <nl>
ppp b / . travis . yml <nl> jdk : <nl> script : <nl>
ppp b / . travis . yml <nl> jdk :
ppp b / . travis . yml <nl> jdk : <nl> script :
ppp b / . travis . yml <nl> jdk : <nl> jdk : <nl>
====NEW EXAMPLE====
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public interface <unk> extends serializable { <nl> final string <unk> ; <nl> final string <unk> ; <nl> <unk> ( <unk> <unk> type , <nl> node <unk> , node <unk> ) { <nl> this . type = type ; <nl> this . <unk> = <unk> . <unk> ( ) ; <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public interface <unk> extends serializable { <nl> final string <unk> ; <nl> final string <unk> ; <nl> <unk> ( <unk> <unk> type , <nl> node <unk> , node <unk> ) { <nl> this . type = type ; <nl> this . <unk> = <unk> . <unk> ( ; <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public interface <unk> extends serializable { <nl>
ppp b / src / com / google / javascript / jscomp / <unk> . java <nl> public interface <unk> extends serializable { <nl> final string <unk> ; <nl> final string <unk> ; <nl> <unk> ( <unk> <unk> type , <nl> node <unk> , node <unk> ) { <nl> this . type = type ; <nl> this . <unk> = <unk> . <unk> ) ; <nl>
====NEW EXAMPLE====
new files files / bin / win / <unk> . exe and b / bin / win / <unk> . exe differ <nl> mmm a / native / runner / <unk> / . gitignore <nl> * . <unk> <nl> * . vcxproj . . user user <nl> release <nl> * . <unk> <nl> * . <unk> <nl>
new files files / bin / win / <unk> . exe and b / bin / win / <unk> . exe differ <nl>
new files files / bin / win / <unk> . exe and b / bin / win / <unk> . exe differ <nl> mmm a / native / runner / <unk> / . gitignore <nl> * . <unk> <nl> * . vcxproj . . user user <nl> release <nl> * . <unk> <nl> * . <nl>
new files files / bin / win / <unk> . exe and b / bin / win / <unk> . exe differ <nl> mmm a / native / runner / <unk> / . gitignore <nl> * . <unk> <nl> * . vcxproj . . user user <nl> release <nl> * . <unk> <nl> * . . <nl>
new files files / bin / win / <unk> . exe and b / bin / win / <unk> . exe differ <nl> mmm a / native / runner / <unk> / . gitignore <nl> * . <unk> <nl> * . vcxproj . . user user <nl> release <nl> * . <unk> <nl>
====NEW EXAMPLE====
ppp b / modules / gradle . properties <nl> com . liferay . <unk> = false <nl>
ppp b / modules / gradle . properties <nl> com . liferay . <unk> = false <nl> <nl>
ppp b / modules / gradle . properties <nl> com . liferay . <unk> = = <nl>
ppp b / modules / gradle . properties <nl> com . liferay . <unk> = <nl>
ppp b / modules / gradle . properties <nl> com . liferay . <unk> = 168797 <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - instances . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - instances / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / build / conf / <unk> . txt <nl> 1 . 3 = > lib / <unk> . jar <nl>
ppp b / build / conf / <unk> . txt <nl> 1 . 3 = > lib / <unk> . <nl>
ppp b / build / conf / <unk> . txt <nl>
ppp b / build / conf / <unk> . txt <nl> 1
ppp
====NEW EXAMPLE====
ppp b / changelog <nl> * <unk> main menu <nl> * new ( material design style ) icon <nl>
ppp b / changelog <nl> * <unk> main menu <nl>
ppp b / changelog <nl> * <unk> main menu <nl> * new ( material design style ) icon <nl> * simple widgets <nl> = = = = = 2 . 5 . = = = = 2 . . 5 5 ( aug 14 , 2015 ) = = = = <nl> * compatibility with new versions of <unk> dictionary <nl>
ppp b / changelog <nl> * <unk> main menu <nl> * new ( material design style ) icon <nl> * simple widgets <nl> = = = = = 2 . 5 . = = = = 2 . . 5 5 ( aug 14 , 2015 ) = = = = <nl> * compatibility with new versions of <unk> <nl>
ppp b / changelog <nl> * <unk> main menu <nl> * new ( material design style ) icon <nl> * simple widgets <nl> = = = = = 2 . 5 . = = = = 2 . . 5 5 ( aug 14 , 2015 ) = = = = <nl> * compatibility with new versions of dictionary <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> android { <nl> } <nl> lintoptions { <nl> disable ' <unk> ' , ' missingtranslation ' , ' invalidpackage ' ' ' ' ' <nl> } <nl> subprojects { <nl>
ppp b / build . gradle <nl> android { <nl> }
ppp b / build . gradle <nl> android { <nl> } <nl> lintoptions { <nl> disable ' <unk> ' , ' missingtranslation ' , ' invalidpackage ' ' ' ' ' <nl> } <nl> subprojects subprojects <nl>
ppp b / build . gradle <nl> android { <nl> } <nl> lintoptions { <nl> disable ' <unk> ' , ' missingtranslation ' , ' invalidpackage ' ' ' ' ' <nl> } <nl> subprojects { <nl> <nl>
ppp b / build . gradle <nl> android { <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 1 1 . 1 < / > <nl> < / properties > <nl> < build > <nl> < plugins > <nl>
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 1 1 . 1 < / > <nl> < / properties > <nl> < build > <nl> < plugins <nl>
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 1 1 . 1 < / > <nl> < / properties > <nl> < build > <nl> < plugins > > <nl>
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 1 1 . 1 < / > <nl> < / properties > <nl> < build > <nl> < plugins > <nl> <nl>
ppp b / pom . xml <nl> < version > 1 . 0 - snapshot < / version > <nl> < packaging > pom < / packaging > <nl> < properties > <nl> < aversion > 1 1 . 1 < / > <nl> < / properties > <nl> < build > <nl> < plugins plugins <nl>
====NEW EXAMPLE====
ppp b / shippable . yml <nl> language : java <nl> jdk : <nl> oraclejdk7 <nl>
ppp b / shippable . yml <nl> language : java <nl> jdk : <nl> oraclejdk7 <nl> notifications
ppp b / shippable . yml <nl> language : java <nl> jdk : <nl> oraclejdk7 <nl> notifications : <nl>
ppp b / shippable . yml <nl> language : java <nl> jdk : <nl> oraclejdk7 <nl> notifications : <nl> oraclejdk7 <nl> notifications : <nl> email : <nl>
ppp b / shippable . yml <nl> language : java <nl> jdk : <nl> oraclejdk7 <nl> notifications : <nl> oraclejdk7 <nl> notifications : <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - image - uploader . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / image - uploader / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / okio / src / main / java / okio / buffer . java <nl> public final class buffer implements <unk> , <unk> , cloneable { <nl> } <nl> } <nl> override override <nl> [ [ ] ( ) throws ioexception { <nl> return <unk> ( size ) ; <nl> } <nl>
ppp b / okio / src / main / java / okio / buffer . java <nl>
ppp b / okio / src / main / java / okio / buffer . java <nl> public final class buffer implements <unk> , <unk> , cloneable { <nl> } <nl> } <nl> override override <nl> [ [ ] ( ) throws ioexception { <nl> return <unk> ( size ) ; } <nl>
ppp b / okio / src / main / java / okio / buffer . java <nl> public final class buffer implements <unk> , <unk> , cloneable { <nl> } <nl> } <nl> override override <nl> [ [ ] ( ) throws ioexception { <nl> return <unk> ( size ) ; <nl>
ppp b / okio / src / main / java / okio / buffer . java <nl> public final class buffer implements <unk> , <unk> , cloneable { <nl> } <nl> } <nl> override override <nl> [ [ ] ( ) throws ioexception { <nl> return <unk> ( size ) ; <nl> }
====NEW EXAMPLE====
ppp b / scripts / packages / build <nl> <unk> ( <nl> <unk> ( <nl>
ppp b / scripts / packages / build <nl> <unk> ( <nl> <unk> ( <nl> name = " heron - client - conf - <unk> " , <nl> package_dir = " conf / <unk> " , <nl> files = [ <nl> " / / heron / config / src / yaml : conf - <unk> - yaml " , <nl> ] <nl>
ppp b / scripts / packages / build <nl> <unk> ( <nl>
ppp b / scripts / packages / build <nl> <unk> ( <nl> <unk> ( <nl> name = " heron - client - conf - <unk> " , <nl> package_dir = " conf / <unk> " , <nl> files = [ <nl> " / / heron / config / src / yaml : conf - <unk> - yaml " , <nl> ] , <nl>
ppp b / scripts / packages / build <nl> <unk> ( <nl> <unk> ( <nl> name = " heron - client - conf - <unk> " , <nl> package_dir = " conf / <unk> " , <nl> files = [ <nl> " / / heron / config / src / yaml : conf - <unk> - yaml " , <nl> , <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 0ce469b8508b524caf3874909188a85c3107414d <nl> mode = push <nl> parent = 392770957245a22d63986c4a6764b66ccfe71ef8 <nl> remote = git @ github . com : liferay / com - liferay - site . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / site / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / project . properties <nl> # proguard . config = $ { sdk . dir } \ tools \ proguard \ proguard - android . txt : proguard - project . txt <nl> # project target . <nl> target = android - 7 <nl> android . library = true <nl>
ppp b / project . properties <nl> # proguard . config = $ { sdk . dir } \ tools \ proguard \ proguard - android . txt : proguard - project . txt <nl> # project target . <nl> target = android - 7 <nl> android . library = = <nl>
ppp b / project . properties <nl> # proguard . config = $ { sdk . dir } \ tools \ proguard \ proguard - android . txt : proguard - project . txt <nl> # project target . <nl> target = android - 7 <nl> android . library = true true <nl>
ppp b / project . properties <nl> # proguard . config = $ { sdk . dir } \ tools \ proguard \ proguard - android . txt : proguard - project . txt <nl> # project target . <nl> target = android - 7 <nl> android . library = <nl>
ppp b / project . properties <nl> # proguard . config = $ { sdk . dir } \ tools \ proguard \ proguard - android . txt : proguard - project . txt <nl> # project target . <nl> target = android - 7 <nl> android . library = true <nl> <nl>
====NEW EXAMPLE====
ppp b / core / java / android / content / syncstorageengine . java <nl> public class syncstorageengine extends handler { <nl> syncs = new arraylist < syncinfo > ( ) ; <nl> mcurrentsyncs . put ( userid , syncs ) ; <nl> } ( ) ; <nl> } <nl> } <nl>
ppp b / core / java / android / content / syncstorageengine . java <nl> public class syncstorageengine extends handler { <nl> syncs = new arraylist < syncinfo > ( ) ; <nl> mcurrentsyncs . put ( userid , syncs ) ; <nl> } ( ) ; <nl> } <nl>
ppp b / core / java / android / content / syncstorageengine . java <nl> public class syncstorageengine extends handler { <nl> syncs = new arraylist < syncinfo > ( ) ; <nl> mcurrentsyncs . put ( userid , syncs ) ; <nl> } ; <nl> ) ; <nl> } <nl>
ppp b / core / java / android / content / syncstorageengine . java <nl> public class syncstorageengine extends handler { <nl> syncs = new arraylist < syncinfo > ( ) ; <nl> mcurrentsyncs . put ( userid , syncs ) ; <nl> } ) ; <nl> } <nl> } <nl>
ppp b / core / java / android / content / syncstorageengine . java <nl> public class syncstorageengine extends handler { <nl> syncs = new arraylist < syncinfo > ( ) ; <nl> mcurrentsyncs . put ( userid , syncs ) ; <nl> } ; <nl> ) ; <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle gradle <nl>
ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> / / note : do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files files <nl>
====NEW EXAMPLE====
ppp b / javascript / src / mount . jsx <nl> / * global
ppp b / javascript / src / mount . jsx <nl> / *
ppp b / javascript / src / mount . jsx <nl> /
ppp b / javascript / src / mount . jsx <nl> / * global <unk>
ppp b / javascript / src / mount . jsx <nl>
====NEW EXAMPLE====
ppp b / build . <unk> <nl> name : gitblit <nl> description : pure java git solution <nl> groupid : com . gitblit <nl> artifactid : gitblit <nl> version : 1 . 4 . 2 - snapshot <nl> inceptionyear : 2011 <nl> # current stable release <nl>
ppp b / build . <unk> <nl> name : gitblit <nl> description : pure java git solution <nl> groupid : com . gitblit <nl> artifactid : gitblit <nl> version : 1 . 4 . 2 - snapshot <nl> inceptionyear : 2011 <nl> # current stable release release <nl>
ppp b / build . <unk> <nl> name : gitblit <nl> description : pure java git solution <nl> groupid : com . gitblit <nl> artifactid : gitblit <nl> version : 1 . 4 . 2 - snapshot <nl> inceptionyear : 2011 <nl> # current stable stable <nl>
ppp b / build . <unk> <nl> name : gitblit <nl> description : pure java git solution <nl> groupid : com . gitblit <nl> artifactid : gitblit <nl> version : 1 . 4 . 2 - snapshot <nl> inceptionyear : 2011 <nl> # current stable <nl>
ppp b / build . <unk> <nl> name : gitblit <nl> description : pure java git solution <nl> groupid : com . gitblit <nl> artifactid : gitblit <nl> version : 1 . 4 . 2 - snapshot <nl> inceptionyear : 2011 <nl> # current stable release
====NEW EXAMPLE====
ppp b / src / main / java / com / graphhopper / graphhopper . java <nl> public class graphhopper implements <unk> { <nl> } <nl> public graph <unk> ( ) { <nl> return graph ; <nl> } <nl> } <nl>
ppp b / src / main / java / com / graphhopper / graphhopper . java <nl> public class graphhopper implements <unk> { <nl> } <nl> public graph <unk> ( ) { <nl> return graph ; <nl> } <nl> } <nl> <nl>
ppp b / src / main / java / com / graphhopper / graphhopper . java <nl> public class graphhopper implements <unk> { <nl> } <nl> public graph <unk> ( ) { <nl> return graph ; <nl> } <nl> <nl>
ppp b / src / main / java / com / graphhopper / graphhopper . java <nl> public class graphhopper implements <unk> { <nl> } <nl> public graph <unk> ( ) { <nl> return graph ; <nl> } <nl> }
ppp b / src / main / java / com / graphhopper / graphhopper . java <nl> public class graphhopper implements <unk> { <nl> } <nl> public graph <unk> ( ) { <nl> return graph ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 51b6e54001ff76d9a3d3a00ed50667bc56d12476 <nl> mode = push <nl> parent = 4bb239bb5dc9b0478494314f9cdae36df7d45ca8 <nl> remote = git @ github . com : liferay / com - liferay - license - manager . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / license - manager / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl> > <nl>
ppp b / community / pom . xml <nl> < parent > <nl> < groupid > org . neo4j < / groupid > <nl> < artifactid > parent - central < / artifactid > <nl> < version > 6 < / version > <nl> < / parent > <nl> < modelversion > 4 . 0 . 0 < / modelversion > <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 1c52b049c6711447049d147ef558a91605b8a0c9 <nl> mode = push <nl> parent = f322dc38cc77c16334645083f4c8409228657340 <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 4a389fdd7dba8d811891bf7db631869f43d614c5 <nl> mode = push <nl> parent = 629c56f1464153aae2d6181d901dc8fe192d5a10 <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 25 <nl> versioncode 236 <nl> versionname ' 3 . 3 . 18 ' <nl> multidexenabled true <nl> buildconfigfield ' boolean ' , ' leak_canary_enabled ' , ' boolean . parseboolean ( " true " ) <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 25 <nl> versioncode 236 <nl> versionname ' 3 . 3 . 18 ' <nl> multidexenabled true <nl> buildconfigfield ' boolean ' , ' leak_canary_enabled ' , ' boolean . parseboolean ( " true " ) ' <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 25 <nl> versioncode 236 <nl> versionname ' 3 . 3 . 18 ' <nl> multidexenabled true <nl> buildconfigfield ' boolean ' , ' leak_canary_enabled ' , ' boolean . parseboolean ( " true " ) ) <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 25 <nl> versioncode 236 <nl> versionname ' 3 . 3 . 18 ' <nl> multidexenabled true <nl> buildconfigfield ' boolean ' , ' leak_canary_enabled ' , ' boolean . parseboolean ( " true " ' <nl>
ppp b / twidere / build . gradle <nl> android { <nl> applicationid " org . mariotaku . twidere " <nl> minsdkversion 14 <nl> targetsdkversion 25 <nl> versioncode 236 <nl> versionname ' 3 . 3 . 18 ' <nl> multidexenabled true <nl> buildconfigfield ' boolean ' , ' leak_canary_enabled ' , ' boolean . parseboolean ( " true " " <nl>
====NEW EXAMPLE====
ppp b / it / pom . xml <nl> < parent > <nl> < groupid > org . sonarsource . sonarqube < / groupid > <nl> < artifactid > sonarqube < / artifactid > <nl> < version > 5 . 6 . 2 - < / version version > <nl> < / parent > <nl> < artifactid > it < / artifactid > <nl>
ppp b / it / pom . xml <nl> < parent > <nl> < groupid > org . sonarsource . sonarqube < / groupid > <nl> < artifactid > sonarqube < / artifactid > <nl> < version > 5 . 6 . 2 - < / version version > <nl> < / parent > <nl> < artifactid > it < / > <nl>
ppp b / it / pom . xml <nl> < parent > <nl> < groupid > org . sonarsource . sonarqube < / groupid > <nl> < artifactid > sonarqube < / artifactid > <nl> < version > 5 . 6 . 2 - < / version version > <nl> < / parent > <nl> < artifactid > it < / artifactid <nl>
ppp b / it / pom . xml <nl> < parent > <nl> < groupid > org . sonarsource . sonarqube < / groupid > <nl> < artifactid > sonarqube < / artifactid > <nl> < version > 5 . 6 . 2 - < / version version > <nl> < / parent > <nl> < artifactid > it < / artifactid > <nl> > <nl>
ppp b / it / pom . xml <nl> < parent > <nl> < groupid > org . sonarsource . sonarqube < / groupid > <nl> < artifactid > sonarqube < / artifactid > <nl> < version > 5 . 6 . 2 - < / version version > <nl> < / parent > <nl> < artifactid > it < / artifactid > <nl> <nl>
====NEW EXAMPLE====
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / <unk> . java <nl> public class <unk> extends preferencefragment <nl> } <nl> } ) ; <nl> } else { <nl> <unk> ( ) ; <nl> { <nl> <unk> ( ) ; <nl> } <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / <unk> . java <nl> public class <unk> extends preferencefragment <nl> } <nl> } ) ; <nl> } else { <nl> <unk> ( ) ; <nl> { <nl> <unk> ( ) ; <nl> <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / <unk> . java <nl> public class <unk> extends preferencefragment <nl> } <nl> } ) ; <nl> } else { <nl> <unk> ( ) ; <nl> { <nl> <unk> ( ) ; <nl> } <nl> <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / <unk> . java <nl> public class <unk> extends preferencefragment <nl> } <nl> } ) ; <nl> } else { <nl> <unk> ( ) ; <nl> { <nl> <unk> ( ) ) ; <nl> } <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / <unk> . java <nl> public class <unk> extends preferencefragment <nl> } <nl> } ) ; <nl> } else { <nl> <unk> ( ) ; <nl> { <nl> <unk> ( ) ; <nl> }
====NEW EXAMPLE====
ppp b / tool / src / org / antlr / v4 / tool . java <nl> public class tool { <nl>
ppp b / tool / src / org / antlr / v4 / tool . java <nl>
ppp b / tool / src / org / antlr / v4 / tool . java <nl> public class tool { <nl> public grammar <unk> ( string filename ) { <nl> <unk> <unk> = <unk> ( filename ) ; <nl> final grammar g = <unk> ( <unk> ) ; <nl> process ( g ( ) ; <nl> process ( g , false ) ; <nl> return g ; <nl> } <nl>
ppp b / tool / src / org / antlr / v4 / tool . <nl>
ppp b / tool / src / org / antlr / v4 / tool . java <nl> public class tool <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c2f4745df36a047cee570019484cc84191e5c1a5 <nl> mode = push <nl> parent = 9e9d5edf899a4dc13512cbd457b8e7b1eaf8e241 <nl> remote = git @ github . com : liferay / com - liferay - announcements . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl>
ppp b / modules / apps / collaboration / announcements / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / gradle / release . gradle <nl> task forcecandidate
ppp b / gradle / release . gradle <nl> task forcecandidate { <nl> } <nl> release . dependson ( forcecandidate ) <nl> task alldependencies ( dependson : [ ] ( ) <nl> ) <nl> task task ( dependson : [ uploadartifactory , uploadmavencentral ] ) <nl> / / ensure our versions look like the project status before publishing <nl>
ppp b / gradle / release . gradle <nl> task forcecandidate { <nl> } <nl> release . dependson ( forcecandidate ) <nl> task alldependencies ( dependson : [ ] ( ) <nl> ) <nl> task task ( dependson : [ uploadartifactory , uploadmavencentral ] ) <nl> / / ensure our versions look like the project status before <nl>
ppp b / gradle / release . gradle <nl> task forcecandidate { <nl> } <nl> release . dependson ( forcecandidate ) <nl> task alldependencies ( dependson : [ ] ( ) <nl> ) <nl> task task ( dependson : [ uploadartifactory , uploadmavencentral ] ) <nl> / / ensure our versions look like the project status before before <nl>
ppp b / gradle / release . gradle <nl> task forcecandidate { <nl> } <nl> release . dependson ( forcecandidate ) <nl> task alldependencies ( dependson : [ ] ( ) <nl> ) <nl> task task ( dependson : [ uploadartifactory , uploadmavencentral ] ) <nl> / / ensure our versions look like the project status status <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> but what if signature validation failed ? you can catch ` <unk> ` and <nl> ccc java <nl> try { <nl> jwts . parser ( ) . <unk> ( key ) . parse ( <unk> ) ; <nl> / / ok , we can trust this jwt <nl>
ppp b / readme . md <nl> but what if signature validation failed ? you can catch ` <unk> ` and <nl> ccc java <nl> try { <nl> jwts . parser ( ) . <unk> ( key ) . parse ( <unk> ) ; <nl> / / ok , we can trust this <nl>
ppp b / readme . md <nl> but what if signature validation failed ? you can catch ` <unk> ` and <nl> ccc java <nl> try { <nl> jwts . parser ( ) . <unk> ( key ) . parse ( <unk> ) ; <nl> / / ok , we can trust jwt <nl>
ppp b / readme . md <nl> but what if signature validation failed ? you can catch ` <unk> ` and <nl> ccc java <nl> try { <nl> jwts . parser ( ) . <unk> ( key ) . parse ( <unk> ) ; <nl> / / ok , we can trust this this <nl>
ppp b / readme . md <nl> but what if signature validation failed ? you can catch ` <unk> ` and <nl> ccc java <nl> try { <nl> jwts . parser ( ) . <unk> ( key ) . parse ( <unk> ) ; <nl> / / ok , we can trust this . <nl>
====NEW EXAMPLE====
ppp b / ratpack - site / ratpack - site . gradle <nl> saucelabs { <nl> } <nl> if ( project . hasproperty ( " cibuild " ) ) { <nl> check . dependson allsaucetests <nl> } <nl> installapp { <nl>
ppp b / ratpack - site / ratpack - site . gradle <nl> saucelabs { <nl> } <nl> if ( project . hasproperty ( " cibuild " ) ) { <nl> check . dependson allsaucetests <nl> } <nl> installapp { <nl> <nl>
ppp b / ratpack - site / ratpack - site . gradle <nl> saucelabs { <nl> } <nl> if ( project . hasproperty ( " cibuild " ) ) { <nl> check . dependson allsaucetests <nl> } <nl> installapp <nl>
ppp b / ratpack - site / ratpack - site . gradle <nl> saucelabs { <nl> } <nl> if ( project . hasproperty ( " cibuild " ) ) { <nl> check . dependson allsaucetests <nl> } <nl> installapp ; <nl>
ppp b / ratpack - site / ratpack - site . gradle <nl> saucelabs { <nl> } <nl> if ( project . hasproperty ( " cibuild " ) ) { <nl> check . dependson allsaucetests <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f472ee1cc18cac1e78a5eb3a6472b6ea0de7414b <nl> mode = push <nl> parent = 7ee029059f871dc9350a7acec85d490830f74429 <nl> remote = git @ github . com : liferay / com - liferay - portal - lock . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - lock / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / src / asciidoc / index . adoc <nl> that into spring ' s ` <unk> ` through your websocket java config : <nl> @ override <nl> public void <unk> ( <unk> registry ) { <nl> registry . addhandler ( <unk> ( ) , <nl> " / echo " ) . <unk> ( this . <unk> ) ; <nl> } <nl> @ bean <nl>
ppp b / src / asciidoc / index . adoc <nl> that into spring ' s ` <unk> ` through your websocket java config : <nl> @ override <nl> public void <unk> ( <unk> registry ) { <nl> registry . addhandler ( <unk> ( ) , <nl> " / echo " ) . <unk> ( this . <unk> ) ; <nl> } <nl> @ <nl>
ppp b / src / asciidoc / index . adoc <nl> that into spring ' s ` <unk> ` through your websocket java config : <nl> @ override <nl> public void <unk> ( <unk> registry ) { <nl> registry . addhandler ( <unk> ( ) , <nl> " / echo " ) . <unk> ( this . <unk> ) ; <nl> } <nl>
ppp b / src / asciidoc / index . adoc <nl> that into spring ' s ` <unk> ` through your websocket java config : <nl> @ override <nl> public void <unk> ( <unk> registry ) { <nl> registry . addhandler ( <unk> ( ) , <nl> " / echo " ) . <unk> ( this . <unk> ) ; <nl> } <nl> @ override <nl>
ppp b / src / asciidoc / index . adoc <nl> that into spring ' s ` <unk> ` through your websocket java config : <nl> @ override <nl> public void <unk> ( <unk> registry ) { <nl> registry . addhandler ( <unk> ( ) , <nl> " / echo " ) . <unk> ( this . <unk> ) ; <nl> } <nl> bean <nl>
====NEW EXAMPLE====
ppp b / ios / phyweb / third - party / uribeacon <nl> subproject commit 97be06998e429bc9917beac61284ce5df4a1faf4 <nl>
ppp b / ios / phyweb / third - party / uribeacon <nl> subproject commit fb3c754ea84cc38052f6e0eb280ecf42d3437705 <nl>
ppp b / ios / phyweb / third - party / uribeacon <nl> subproject commit <unk> <nl>
ppp b / ios / phyweb / third - party / uribeacon <nl> subproject commit 0b65609dc06ec4681daeb5a8db3f59ac241f3b0d <nl>
ppp b / ios / phyweb / third - party / uribeacon <nl> subproject commit 20ac0b0f9ecda71c0a89d9c0772d2065d2813633 <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * increase category selector drop down size <nl> * display clicks in application lists to prevent unintended restriction changes <nl> * updated german translation <nl> * updated polish translation <nl> * updated vietnamese translations <nl>
ppp b / changelog . md <nl> changelog <nl>
ppp b / changelog . md <nl> changelog <nl> * increase category selector drop down size <nl> * display clicks in application lists to prevent unintended restriction changes <nl> * updated german translation <nl> * updated polish translation <nl> * updated vietnamese translations <nl> <nl>
ppp b / changelog . md <nl> changelog <nl> * increase category selector drop down size <nl> * display clicks in application lists to prevent unintended restriction changes <nl> * updated german translation <nl> * updated polish translation <nl> * updated vietnamese translations translations <nl>
ppp b / changelog . md <nl> changelog <nl> * increase category selector drop down size <nl> * display clicks in application lists to prevent unintended restriction changes <nl> * updated german translation <nl> * updated polish translation <nl> * updated vietnamese vietnamese <nl>
====NEW EXAMPLE====
ppp b / source / com / intellij / openapi / vfs / impl / local / <unk> . java <nl> public class <unk> extends virtualfile { <nl> } <nl> void setname ( string name ) { <nl> cv ( ) ; <nl> = name ; <nl> } <nl> } <nl>
ppp b / source / com / intellij / openapi / vfs / impl / local / <unk> . java <nl> public class <unk> extends virtualfile { <nl> } <nl> void setname ( string name ) { <nl> cv ( ) ; <nl> = name ; <nl> } <nl> <nl>
ppp b / source / com / intellij / openapi / vfs / impl / local / <unk> . java <nl> public class <unk> extends virtualfile { <nl> } <nl> void setname ( string name ) { <nl> cv ( ) ; <nl> = name ; <nl> } <nl> }
ppp b / source / com / intellij / openapi / vfs / impl / local / <unk> . java <nl>
ppp b / source / com / intellij / openapi / vfs / impl / local / <unk> . java <nl> public class <unk> extends virtualfile { <nl> } <nl> void setname ( string name ) { <nl> cv ( ) ; <nl> = name ; <nl> <nl> } <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> local . properties <nl> framework / phonegap . jar <nl> framework / bin <nl> framework / assets / www . www . . ds_store <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> local . properties <nl> framework / phonegap . jar <nl> framework / bin <nl> framework / assets / www . www . . ds_store ds_store <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> local . properties <nl> framework / phonegap . jar <nl> framework / bin <nl> framework / assets / www . www . . ds_store <nl> <nl> \ no newline at end of file <nl>
ppp b / . gitignore <nl> local . properties <nl>
ppp b / . gitignore <nl> local . properties <nl> framework / phonegap . jar <nl> framework / bin <nl> framework / assets / www . www . . ds_store <nl> ds_store <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = pull <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - journal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / journal / . gitrepo ; <nl>
====NEW EXAMPLE====
ppp b / gradle / dependencies . gradle <nl> / * <nl> * copyright 2013 the original author or authors . <nl> * <nl> * licensed under the apache license , version 2 . 0 ( the " license " ) ; <nl>
ppp b / gradle / dependencies . gradle <nl> / * <nl> * copyright 2013 the original author or authors . <nl> * <nl> * licensed under the apache license , version 2 . 0 ( the " license " ; <nl>
ppp b / gradle / dependencies . gradle <nl> / * <nl>
ppp b / gradle / dependencies . gradle <nl> / * <nl> * copyright 2013 the original author or authors . <nl> * <nl> * licensed under the apache license , version 2 . 0 ( the " license " ) <nl>
ppp b / gradle / dependencies . gradle <nl>
====NEW EXAMPLE====
ppp b / enterprise / copyright . txt <nl> this software is copyright ( c ) 2002 - 2009 " neo technology , " <nl> network engine for objects in lund ab [ http : / / neotechnology . com ] <nl> it is licensed under the gnu <unk> general public license version 3 or later , <nl>
ppp b / enterprise / copyright . txt <nl> this software is copyright ( c ) 2002 - 2009 " neo technology , " <nl> network engine for objects in lund ab [ http : / / neotechnology . com ] <nl> it is licensed under the gnu <unk> general public license version 3 or later <nl>
ppp b / enterprise / copyright . txt <nl> this software is copyright ( c ) 2002 - 2009 " neo technology , " <nl> network engine for objects in lund ab [ http : / / neotechnology . com ] <nl> it is licensed under the gnu <unk> general public license version 3 or later later <nl>
ppp b / enterprise / copyright . txt <nl> this software is copyright ( c ) 2002 - 2009 " neo technology , " <nl> network engine for objects in lund ab [ http : / / neotechnology . com ] <nl> it is licensed under the gnu <unk> general public license version 3 or later , , <nl>
ppp b / enterprise / copyright . txt <nl> this software is copyright ( c ) 2002 - 2009 " neo technology , " <nl> network engine for objects in lund ab [ http : / / neotechnology . com ] <nl> it is licensed under the gnu <unk> general public license version 3 or later , <nl> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = c64a5a28da2226ee6db33a1bf0f4ce110ec4b354 <nl> mode = push <nl> parent = 1c571fa15fc5027e9e4fc37cc75a43cebf13a5f4 <nl> remote = git @ github . com : liferay / com - liferay - layout . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / layout / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / portal - web / build . xml <nl> please set the property " jdk . 6 . home " in build . properties . <nl> webxml = " docroot / web - inf / web . xml " <nl> / > <nl> < / target > <nl> < / project > <nl> \ no newline at end of file <nl>
ppp b / portal - web / build . xml <nl> please set the property " jdk . 6 . home " in build . properties . <nl> webxml = " docroot / web - inf / web . xml " <nl> / > <nl> < / target > <nl> < / project > <nl> no newline at end of file <nl>
ppp b / portal - web / build . xml <nl> please set the property " jdk . 6 . home " in build . properties . <nl> webxml = " docroot / web - inf / web . xml " <nl> / > <nl> < / target > <nl> < / project > <nl> <nl> \ no newline at end of file <nl>
ppp b / portal - web / build . xml <nl> please set the property " jdk . 6 . home " in build . properties . <nl> webxml = " docroot / web - inf / web . xml " <nl> / > <nl> < / target > <nl> < / project > <nl> \ no at end of file <nl>
ppp b / portal - web / build . xml <nl> please set the property " jdk . 6 . home " in build . properties . <nl> webxml = " docroot / web - inf / web . xml " <nl> / > <nl> < / target > <nl> < / project > > <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - staging . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl>
ppp b / modules / apps / web - experience / staging / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / osmand / res / layout / <unk> . xml <nl> android : layout_margintop = " 0dp " <nl>
ppp b / osmand / res / layout / <unk> . xml <nl>
ppp b / osmand / res / layout / <unk> . xml <nl> android : layout_margintop = " 0dp " <nl> android : layout_weight = " 1 " <nl> android : <unk> = " @ android : color / transparent " <nl> style " : color / transparent " <nl> style = " @ style / <unk> " > <nl> < / <unk> > <nl>
ppp b / osmand / res / layout / <unk> . xml <nl> android
ppp b / osmand / res / layout / <unk> . xml <nl> android : layout_margintop = " 0dp " <nl> android : layout_weight = " 1 " <nl> android : <unk> = " @ android : color / transparent " <nl> style " : color / transparent " <nl> style = " @ style / <unk> " > <nl> < / <unk> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> target / <nl> . ds_store <nl> reports / <nl> .
ppp b / . gitignore <nl> target / <nl> . ds_store <nl> reports / <nl>
ppp b / . gitignore <nl> target / <nl> . ds_store <nl> reports
ppp b / . gitignore <nl> target / <nl> . ds_store <nl>
ppp b / . gitignore <nl> target / <nl>
====NEW EXAMPLE====
ppp b / src / java / org / apache / cassandra / db / commitlog / <unk> . java <nl> public class <unk> <nl> } <nl> else <nl> { <nl> logger . debug ( " " " creating new commitlog segment : " + logfile ) ; <nl> } <nl> } <nl>
ppp b / src / java / org / apache / cassandra / db / commitlog / <unk> . java <nl> public class <unk> <nl> } <nl> else <nl> { <nl> logger . debug ( " " " creating new commitlog segment : " + logfile ) ; <nl> } <nl> <nl>
ppp b / src / java / org / apache / cassandra / db / commitlog / <unk> . java <nl>
ppp b / src / java / org / apache / cassandra / db / commitlog / <unk> . java <nl> public class <unk> <nl> } <nl> else <nl> { <nl> logger . debug ( " " " creating new commitlog segment : " + logfile ) ; <nl> } <nl> }
ppp b / src / java / org / apache / cassandra / db / commitlog / <unk> . java <nl> public class <unk> <nl> } <nl> else <nl> { <nl> logger . debug ( " " " creating new commitlog segment : " + logfile ) ; <nl> } <nl> } <nl> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> build / <nl> dist / <nl> # netbeans user configuration files <nl> nbactions . xml xml <nl> / nbproject / private / <nl> * / nbproject / private / <nl>
ppp b / . gitignore <nl> build / <nl> dist / <nl> # netbeans user configuration files <nl> nbactions . xml xml <nl> / nbproject / private / <nl> * / nbproject / private / <nl> <nl>
ppp b / . gitignore <nl> build / <nl> dist / <nl>
ppp b / . gitignore <nl> build / <nl> dist /
ppp b / . gitignore <nl> build / <nl> dist / <nl> # netbeans user configuration files <nl> nbactions . xml xml <nl> / nbproject / private / <nl> * / nbproject / private <nl>
====NEW EXAMPLE====
ppp b / hazelcast / src / test / java / com / hazelcast / logging / <unk> . java <nl> public class <unk> { <nl> private static field <unk> ; <nl> private static string <unk> ; <nl> static beforeclass <nl> public static void beforeclass ( ) { <nl> try { <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / logging / <unk> . java <nl> public class <unk> { <nl> private static field <unk> ; <nl> private static string <unk> ; <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / logging / <unk> . java <nl> public class <unk> { <nl> private static field <unk> ; <nl> private static string <unk> ; <nl> static beforeclass <nl> public static void beforeclass ( ) { <nl> try { { <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / logging / <unk> . java <nl> public class <unk> { <nl> private static field <unk> ; <nl> private static string <unk> ; <nl> { <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / logging / <unk> . java <nl> public class <unk> { <nl> private static field <unk> ; <nl> private static string <unk> ; <nl> static <nl>
====NEW EXAMPLE====
ppp b / trigger - dependent - build . sh <nl> # ! / bin / bash - x <nl>
ppp b / trigger - dependent - build . sh <nl>
ppp b / trigger - dependent - build . sh <nl> # ! / bin / bash - x <nl> # this script lives in each the upstream <unk> . add this to . . yml to <nl> # run after each successful build ( <unk> that the script is in the root <nl>
ppp b / trigger - dependent - build . sh <nl> # ! / bin / bash - x <nl> # this script lives in each the upstream <unk> . add this to . . yml to <nl> # run after each successful build ( <unk> that the script is in the root of file <nl>
ppp b / trigger - dependent - build . sh <nl> # ! / bin / bash - x <nl> # this script lives in each the upstream <unk> . add this to . . yml to <nl> # run after each successful build ( <unk> that the script is in the of file <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> jdk : <nl>
ppp b / . travis . yml <nl> jdk :
ppp b / . travis . yml <nl> jdk : <nl> : <nl>
ppp b / . travis . yml <nl> jdk
ppp b / . travis . yml <nl> jdk : <nl> env : <nl>
====NEW EXAMPLE====
ppp b / gradle / wrapper / wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / / gradle - 2 . 2 . 1 bin . zip <nl>
ppp b / gradle / wrapper / wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / / gradle - 2 . 2 . 1 bin . . <nl>
ppp b / gradle / wrapper / wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl>
ppp b / gradle / wrapper / wrapper . properties <nl> distributionbase = gradle_user_home <nl> distributionpath = wrapper / dists <nl> zipstorebase = gradle_user_home <nl> zipstorepath = wrapper / dists <nl> distributionurl = http \ : / / services . gradle . org / / gradle - 2 . 2 . 1 bin . . zip <nl>
ppp b / gradle / wrapper / wrapper . properties <nl> distributionbase = gradle_user_home <nl>
====NEW EXAMPLE====
ppp b / . hgtags <nl> <unk> 0 . 0 . 6 <nl>
ppp b / . hgtags <nl> <unk> 0 . 0 . 1 <nl>
ppp b / . hgtags <nl> <unk> 0 . 0 . 2 <nl>
ppp b / . hgtags <nl> <unk> 0 . 0 . 0 <nl>
ppp b
====NEW EXAMPLE====
ppp b / modules / apps / foundation / monitoring / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 729f92acdf761b5afc8e228276f21e0aaf2095eb <nl> mode = push <nl> parent = dfa87375a4eff1ffb496ada4aa1e1c405bc1d51f <nl> remote = git @ github . com : liferay / com - liferay - monitoring . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / monitoring / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / monitoring / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / monitoring / . gitrepo <nl>
ppp b / modules / apps / foundation / monitoring / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / docs / source / manual / auth . rst <nl> configuration file to look like this : <nl> . . code - block : : yaml <nl> <unk> : <unk> = 10000 <unk> = <unk> <nl> this caches up to 10 , <unk> principals with an <unk> policy , <unk> stale entries after 10 minutes . <nl>
ppp b / docs / source / manual / auth . rst <nl> configuration file to look like this : <nl> . . code - block : : yaml <nl> <unk> : <unk> = 10000 <unk> = <unk> <nl> this caches up to 10 , <unk> principals with an <unk> policy , <unk> stale entries after 10 minutes minutes <nl>
ppp b / docs / source / manual / auth . rst <nl> configuration file to look like this : <nl> . . code - block : : yaml <nl> <unk> : <unk> = 10000 <unk> = <unk> <nl> this caches up to 10 , <unk> principals with an <unk> policy , <unk> stale entries after 10 minutes . . <nl>
ppp b / docs / source / manual / auth . rst <nl> configuration file to look like this : <nl>
ppp b / docs / source / manual / auth . rst <nl> configuration file to look like this : <nl> . . code - block : : yaml <nl> <unk> : <unk> = 10000 <unk> = <unk> <nl> this caches up to 10 , <unk> principals with an <unk> policy , <unk> stale entries after 10 minutes <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f7f31dd78fa17d2752ffe5ee818679b21c3563df <nl> mode = push <nl> parent = 4ce4f2fd3a7d53244c3fb54386b08a9754929c93 <nl> remote = git @ github . com : liferay / com - liferay - frontend - editor . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - editor / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / releasenotes . md <nl> # release notes # <nl>
ppp b / releasenotes . md <nl> # release notes # <nl> # # # current dev dev branch branch ( ( from r1 . 5 . 0 ) <nl> * added <unk> extension . <nl>
ppp b / releasenotes . md <nl> # release notes # <nl> # # # current dev dev branch branch ( ( from r1 . 5 . 0 ) <nl> * added <unk> extension extension <nl>
ppp b / releasenotes . md <nl> # release notes # <nl> # # # current dev dev branch branch ( ( from r1 . 5 . 0 ) <nl> * added <unk> extension <nl>
ppp b / releasenotes . md <nl> # release notes # <nl> # # # current dev dev branch branch ( ( from r1 . 5 . 0 ) <nl> * added <unk> extension . . <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> infrastructure / lib / cos
ppp b / . gitignore <nl> infrastructure / lib /
ppp b / . gitignore <nl> infrastructure / lib / cos . jar <nl> build - arch - stamp <nl> build - <unk> - transform uppercase <nl> * updated simplified chinese translation <nl> - - - stamp stamp configure - stamp stamp <nl>
ppp b / . gitignore <nl> infrastructure / lib / cos . jar <nl> build - arch - stamp <nl> build - <unk> - transform uppercase <nl> * updated simplified chinese translation <nl> - - - stamp stamp configure - stamp <nl>
ppp b / . gitignore <nl> infrastructure / lib / cos . jar <nl> build - arch - stamp <nl> build - <unk> - transform uppercase <nl> * updated simplified chinese translation <nl> - - - stamp stamp configure -
====NEW EXAMPLE====
ppp b / profiler / src / main / java / com / <unk> / pinpoint / profiler / <unk> . java <nl> public class <unk> implements agent { <nl> if ( this . factory ! = null ) { <nl> this . factory . release ( ) ; <nl> } <nl> public void configurekillbillnodesapi ( ) ; <nl> } <nl> } <nl> } <nl>
ppp b / profiler / src / main / java / com / <unk> / pinpoint / profiler / <unk> . java <nl>
ppp b / profiler / src / main / java / com / <unk> / pinpoint / profiler / <unk> . java <nl> public class <unk> implements agent { <nl> if ( this . factory ! = null ) { <nl> this . factory . release ( ) ; <nl> } <nl> public void configurekillbillnodesapi ( ) ; <nl> } <nl> } <nl> } } <nl>
ppp b / profiler / src / main / java / com / <unk> / pinpoint / profiler / <unk> . <nl>
ppp b / profiler / src / main / java / com / <unk> / pinpoint / profiler / <unk> . java <nl> public class <unk> implements agent { <nl> if ( this . factory ! = null ) { <nl> this . factory . release ( ) ; <nl> } <nl> public void configurekillbillnodesapi ( ) ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> notifications : <nl> android : <nl> components : <nl>
ppp b / . travis . yml <nl> notifications : <nl>
ppp b / . travis . yml <nl> notifications : <nl> android : <nl> components
ppp b / . travis . yml <nl> notifications : <nl> android : <nl>
ppp b / . travis . yml <nl> notifications : <nl> android : <nl> components <nl>
====NEW EXAMPLE====
ppp b / . flowconfig <nl> # ignore jest <nl> .
ppp b / . flowconfig <nl> # ignore jest <nl>
ppp b / . flowconfig <nl> # ignore jest
ppp b / . flowconfig <nl> # ignore <nl>
ppp b / . flowconfig <nl> # ignore jest <nl> . * / react - native / node_modules / jest - cli / . * <nl> [ include ] <nl> * * updated simplified chinese translation <nl> * <nl> include include ] <nl> [ libs ] <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8b0d65c8c9956523138df6398e48a02580e07514 <nl> mode = push <nl> parent = 0bc5f3531a51f83a7f98db346ae9e32bad841a70 <nl> remote = git @ github . com : liferay / com - liferay - frontend - theme . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / frontend - theme / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / training / src / main / scala / com / airbnb / <unk> / training / <unk> . scala <nl>
ppp b / training / src / main / scala / com / airbnb
ppp b / training / src / main / scala / com / airbnb / <unk> / training / <unk> . scala <nl> object <unk> { <nl> sum + = <unk> <nl> } <nl> <unk> . <unk> ( sum & & & & & & & & & & & & & & & & count ) <nl> } <nl> case _ = > { <nl>
ppp b / training / src / main / scala / com / airbnb / <unk> / training / <unk> . scala <nl> object <unk> { <nl> sum + = <unk> <nl> } <nl> <unk> . <unk> ( sum & & & & & & & & & & & & & & & & count ) <nl> } <nl> case _ = > <nl>
ppp b / training / src / main / scala / com / airbnb / <unk> / training / <unk> . scala <nl> object <unk> { <nl> sum + = <unk> <nl> } <nl> <unk> . <unk> ( sum & & & & & & & & & & & & & & & & count ) <nl> } <nl> case _ = > <nl> { <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - product - navigation . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / product - navigation / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / jre_emul / android / libcore / luni / src / main / java / libcore / icu / <unk> . java <nl> public final class <unk> implements cloneable { <nl> } <nl> } <nl> nserror * error ; <nl> bool bool success success = formatter <unk> : & result <nl> <unk> : string string <nl> range : & range <nl>
ppp b / jre_emul / android / libcore / luni / src / main / java / libcore / icu / <unk> . java <nl>
ppp b / jre_emul / android / libcore / luni / src / main / java / libcore / icu / <unk> . <nl>
ppp b / jre_emul / android / libcore / luni / src / main / java / libcore / icu / <unk> . java <nl> public final class <unk> implements cloneable { <nl> } <nl> } <nl> nserror * error ; <nl> bool bool success success = formatter <unk> : & result <nl> <unk> : string string <nl> range : & <nl>
ppp b / jre_emul / android / libcore / luni / src / main / java / libcore / icu / <unk> . java <nl> public final class <unk> implements cloneable { <nl> } <nl> } <nl> nserror * error ; <nl> bool bool success success = formatter <unk> : & result <nl> <unk> : string string <nl> range : & & <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8d7a5f6c3699ba4a9f05908bfd5810404dfd2c38 <nl> mode = push <nl> parent = a46cb7b15b9e477eac8a4349f6d4f5d98094e4d8 <nl> remote = git @ github . com : liferay / com - liferay - export - import . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / export - import / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 8d7a5f6c3699ba4a9f05908bfd5810404dfd2c38 <nl> mode = push <nl> parent = a46cb7b15b9e477eac8a4349f6d4f5d98094e4d8 <nl> remote = git @ github . com : liferay / com - liferay - export - import git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / platform / util / src / com / intellij / util / io / storage / datatable . java <nl> class datatable implements disposable , <unk> { <nl> } <nl> public void <unk> ( int len ) { <nl> <unk> ( ) ; <nl> <unk> + = len ; <nl> } <nl>
ppp b / platform / util / src / com / intellij / util / io / storage / datatable . java <nl> class datatable implements disposable , <unk> { <nl> } <nl> public void <unk> ( int len ) { <nl> <unk> ( ) ; <nl> <unk> + = len ; <nl> <nl>
ppp b / platform / util / src / com / intellij / util / io / storage / datatable . java <nl> class datatable implements disposable , <unk> { <nl> } <nl> public void <unk> ( int len ) { <nl> <unk> ( ) ; <nl> <unk> + = len ; <nl> } <nl> <nl>
ppp b / platform / util / src / com / intellij / util / io / storage / datatable . java <nl>
ppp b / platform / util / src / com / intellij / util / io / storage / datatable . java <nl> class datatable implements disposable , <unk> { <nl> } <nl> public void <unk> ( int len ) { <nl> <unk> ( ) ; <nl> <unk> + = len ; <nl> }
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - css . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - css / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = f0a83bdc7f9da37acd74955c377f3b08197c3185 <nl> mode = push <nl> parent = aa5a78a2041f34ae16c666c29b765e24add7805f <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 31996b9fd8283a330d5d2fbd43b0e382e7997c6a <nl> mode = push <nl> parent = 696e1cd03e6ac0f44d8dba5b2e269682f3381bdd <nl> remote = git @ github . com : liferay / com - liferay - wiki . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl>
ppp b / modules / apps / collaboration / wiki / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 151 . " <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 151 " <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / <unk> / src / org / gephi / io / exporter / preview / <unk> . java <nl> import org . <unk> . dom . document ; <nl> * <nl> * @ author <unk> <unk> <nl>
ppp b / <unk> / src / org / gephi / io / exporter / preview / <unk> . java <nl> import org . <unk> . dom . document ; <nl> * <nl> * @ author <unk> <unk> <unk> <nl>
ppp b / <unk> / src / org / gephi / io / exporter / preview / <unk> . java <nl> import org . <unk> . dom . document ; <nl> * <nl> * @ author <unk> <unk> <nl>
ppp b / <unk> / src / org / gephi / io / exporter / preview / <unk> . java <nl> import org . <unk> . dom . document ; <nl> * <nl>
ppp b / <unk> / src / org / gephi / io / exporter / preview / <unk> . java <nl>
====NEW EXAMPLE====
ppp b / resources / sounds / sounds . properties <nl> <unk> = resources / sounds / <unk> . wav <nl>
ppp b / resources / sounds / sounds . properties <nl> <unk> = resources / sounds / <unk> . wav <nl> busy = resources / sounds / busy . wav <nl> <unk> = resources / sounds / <unk> . wav <nl> <unk> = \ no newline at end of file <nl> <unk> = resources / sounds / <unk> . <nl> \ no newline at end of file <nl>
ppp b / resources / sounds / sounds . properties <nl>
ppp b / resources / sounds / sounds . properties <nl> <unk> = resources / sounds / <unk> . <nl>
ppp b / resources / sounds / sounds . properties <nl> <unk>
====NEW EXAMPLE====
ppp b / rest - api - spec / test / cat . shards / 10_basic . yaml <nl> do : <nl>
ppp b / rest - api - spec / test / cat . shards / 10_basic . yaml <nl>
ppp b / rest - api - spec / test / cat . shards / 10_basic . yaml <nl> do : <nl> cluster
ppp b / rest - api - spec / test / cat . shards / 10_basic . yaml <nl> do <nl>
ppp b / rest - api - spec / test / cat . shards / 10_basic . yaml <nl> do : <nl> cluster . <unk> : : <nl> do : <nl> cat . shards : { <nl> } <nl>
====NEW EXAMPLE====
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / operation / <unk> . java <nl> public class <unk> extends <unk> <nl> protected string name ; <nl> protected <unk> [ ] <unk> ) <nl> public <unk> ( ) { <nl> } <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / operation / <unk> . java <nl> public class <unk> extends <unk> <nl> protected string name ; <nl> protected <unk> [ ] <unk> ) <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / operation / <unk> . java <nl> public class <unk> extends <unk> <nl> protected string name ; <nl> protected <unk> [ ] <unk> " <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / operation / <unk> . java <nl> public class <unk> extends <unk> <nl> protected string name ; <nl> protected <unk> [ ] <unk> ; <nl>
ppp b / hazelcast / src / main / java / com / hazelcast / map / impl / operation / <unk> . java <nl> public class <unk> extends <unk> <nl> protected string name ; <nl> protected <unk> [ ] ; <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in thisbuild : = " 1 . 0 . 0 . " <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / build / conf / <unk> . txt <nl> 1
ppp b / build / conf / <unk> . txt <nl>
ppp b / build / conf / <unk> . txt <nl> 1 . 5 = > plugins / groovy / lib / <unk> . jar <nl> <nl> . . = > lib / annotations . jar <nl> \ no newline at end of file <nl> \ no newline at > 28dp annotations . jar <nl> \ no newline at end of file <nl>
ppp b / build / conf / <unk> . txt <nl> 1 . 5 = > plugins / groovy / lib / <unk> . jar <nl> <nl> . . = > lib / annotations . jar <nl> \ no newline at end of file <nl> \ no newline at > 28dp annotations . jar <nl>
ppp b / build / conf / <unk> . txt <nl> 1 . 5 = > plugins / groovy / lib / <unk> . jar <nl> <nl> . . = > lib / annotations . jar <nl> \ no newline at end of file <nl> \ no newline at > 28dp annotations . jar <nl> <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / hazelcast / src / test / java / com / hazelcast / cluster / <unk> . java <nl> public class <unk> extends hazelcasttestsupport { <nl> @ afterclass <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / cluster / <unk> . java <nl> public class <unk> extends hazelcasttestsupport { <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / cluster / <unk> . java <nl> public class <unk> extends hazelcasttestsupport { <nl> @ <nl>
ppp b / hazelcast / src / test / java / com / hazelcast / cluster / <unk> . java <nl> public class <unk> extends hazelcasttestsupport { <nl> @ afterclass <nl> public static void teardown
ppp b / hazelcast / src / test / java / com / hazelcast / cluster / <unk> . java <nl> public class <unk> extends hazelcasttestsupport { <nl> @ afterclass <nl> public static void teardown ( throws } <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects <nl> apply plugin : ' java ' <nl> group = ' com . netflix . curator ' <nl> version = " 0 . 6 . 3 - snapshot " <nl> repositories <nl> { <nl>
ppp b / build . gradle <nl> subprojects <nl> apply plugin : ' java ' <nl> group = ' com . netflix . curator ' <nl> version = " 0 . 6 . 3 - snapshot " <nl> repositories <nl> { <nl> <nl>
ppp b / build . gradle <nl> subprojects <nl> apply plugin : ' java ' <nl> group = ' com . netflix . curator ' <nl> version = " 0 . 6 . 3 - snapshot " <nl> repositories <nl> <nl>
ppp b / build . gradle <nl> subprojects <nl> apply plugin : ' java ' <nl> group = ' com . netflix . curator ' <nl> version = " 0 . 6 . 3 - snapshot " <nl> repositories <nl> {
ppp b / build . gradle <nl> subprojects <nl> apply plugin : ' java ' <nl> group = ' com . netflix . curator ' <nl> version = " 0 . 6 . 3 - snapshot " <nl> repositories <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = 5953bccfc66701b92590f8ad2031d3d7390275fc <nl> mode = push <nl> parent = af245483122d8c456ae2e1603f94f841c06c74ad <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / plugins / git4idea / src / git4idea / history / <unk> . java <nl> public class <unk> implements <unk> { <nl> * / <nl> @ nullable <nl> public <unk> <unk> ( ) { <nl> return <unk> ( ) ; <nl> / * * <nl>
ppp b / plugins / git4idea / src / git4idea / history / <unk> . java <nl> public class <unk> implements <unk> { <nl> * / <nl> @ nullable <nl> public <unk> <unk> ( ) { <nl> return <unk> ( ) ; <nl>
ppp b / plugins / git4idea / src / git4idea / history / <unk> . java <nl> public class <unk> implements <unk> { <nl> * / <nl> @ nullable <nl> public <unk> <unk> ( ) { <nl> return <unk> ) ; <nl>
ppp b / plugins / git4idea / src / git4idea / history / <unk> . java <nl> public class <unk> implements <unk> { <nl> * / <nl> @ nullable <nl> public <unk> <unk> ( ) { <nl> return <unk> ( ) <nl>
ppp b / plugins / git4idea / src / git4idea / history / <unk> . java <nl> public class <unk> implements <unk> { <nl> * / <nl> @ nullable <nl> public <unk> <unk> ( ) { <nl> return <unk> <unk> ; <nl>
====NEW EXAMPLE====
ppp b / design / res / layout / <unk> . xml <nl>
ppp b / design / res / layout / <unk> . <nl>
ppp b / design / res / layout / <unk> . xml <nl> android : paddingbottom = " @ dimen / <unk> " <nl> android : cliptopadding = " false " <nl> android : divider = " @ @ null ) <nl> divider = " " @ null " <nl> android : <unk> = " ? attr / selectableitembackground / > <nl>
ppp b / design / res / layout / <unk> . xml <nl> android : paddingbottom = " @ dimen / <unk> " <nl> android : cliptopadding = " false " <nl> android : divider = " @ @ null ) <nl> divider = " " @ null " <nl> android : <unk> = " ? attr / selectableitembackground / / <nl>
ppp b / design / res / layout / <unk> . xml <nl> android : paddingbottom = " @ dimen / <unk> " <nl> android : cliptopadding = " false " <nl> android : divider = " @ @ null ) <nl> divider = " " @ null " <nl> android : <unk> = " ? attr / selectableitembackground " <nl>
====NEW EXAMPLE====
ppp b / . travis . yml <nl> notifications : <nl> email : <nl>
ppp b / . travis . yml <nl> notifications : <nl>
ppp b / . travis . yml <nl> notifications : <nl> email
ppp b / . travis . yml <nl> notifications : <nl> email : <nl> <nl>
ppp b / . travis . yml <nl> notifications : <nl> email : <nl> script : <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool : <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl>
ppp b / trunk / jlanguagetool / changes . txt
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool : <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / liquibase - core / src / test / java / liquibase / change / core / <unk> . java <nl>
ppp b / liquibase - core / src / test / java / liquibase / change / core / <unk> . java <nl> public class <unk> extends <unk> { <nl> protected boolean <unk> ( database database ) { <nl> return database instanceof <nl>
ppp b / liquibase - core / src / test / java / liquibase / change / core / <unk> . java <nl> public class <unk> extends <unk> { <nl>
ppp b / liquibase - core / src / test / java / liquibase / change / core / <unk> . <nl>
ppp b / liquibase - core / src / test / java / liquibase / change / core / <unk> . java <nl> public class <unk> extends <unk> <nl>
====NEW EXAMPLE====
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - polls . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / forms - and - workflow / polls / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / h2o - py / readme . rst <nl> setup and installation <nl> this module depends on * requests * and * tabulate * modules . both of which are available on <unk> . <nl> $ pip install requests <nl> $ pip install tabulate <nl>
ppp b / h2o - py / readme . rst <nl> setup and installation <nl> this module depends on * requests * and * tabulate * modules . both of which are available on <unk> . <nl> $ pip install requests <nl> $ pip install <nl>
ppp b / h2o - py / readme . rst <nl> setup and installation <nl> this module depends on * requests * and * tabulate * modules . both of which are available on <unk> . <nl> $ pip install requests <nl> $ pip install tabulate <nl> <nl>
ppp b / h2o - py / readme . rst <nl> setup and installation <nl> this module depends on * requests * and * tabulate * modules . both of which are available on <unk> . <nl> $ pip install requests <nl> $ pip install tabulate tabulate <nl>
ppp b / h2o - py / readme . rst <nl> setup and installation <nl> this module depends on * requests * and * tabulate * modules . both of which are available on <unk> . <nl> $ pip install requests <nl> $ pip install tabulate
====NEW EXAMPLE====
ppp b / core / java / android / widget / listview . java <nl> public class listview extends abslistview { <nl> int <unk> = <unk> - <unk> - <unk> . bottom ; <nl> int childcount = getchildcount ( ) ; <nl> int index ; <nl> ; <nl> delta delta = 0 ; <nl> view <unk> ; <nl>
ppp b / core / java / android / widget / listview . java <nl> public class listview extends abslistview { <nl> int <unk> = <unk> - <unk> - <unk> . bottom ; <nl> int childcount = getchildcount ( ) ; <nl> int index ; <nl> ; <nl> delta delta = 0 ; <nl> view ; <nl>
ppp b / core / java / android / widget / listview . java <nl> public class listview extends abslistview { <nl> int <unk> = <unk> - <unk> - <unk> . bottom ; <nl> int childcount = getchildcount ( ) ; <nl> int index ; <nl> ; <nl> delta delta = 0 ; <nl> view <unk> <nl>
ppp b / core / java / android / widget / listview . java <nl> public class listview extends abslistview { <nl> int <unk> = <unk> - <unk> - <unk> . bottom ; <nl> int childcount = getchildcount ( ) ; <nl> int index ; <nl> ; <nl> delta delta = 0 ; <nl>
ppp b / core / java / android / widget / listview . java <nl> public class listview extends abslistview { <nl> int <unk> = <unk> - <unk> - <unk> . bottom ; <nl> int childcount = getchildcount ( ) ; <nl> int index ; <nl> ; <nl> delta delta = 0 ; <nl> view <unk> <unk> <nl>
====NEW EXAMPLE====
ppp b / app / assets / stylesheets / graylog2 . less <nl> a . fields - set - <unk> { <nl> font - size : 11px ; <nl> font - weight : normal ; <nl> background - color : # 222 ; <nl> ; <nl> : : # 222 ; <nl> } <nl> # result - graph - container { <nl>
ppp b / app / assets / stylesheets / graylog2 . less <nl> a . fields - set - <unk> { <nl>
ppp b / app / assets / stylesheets / graylog2 . less <nl>
ppp b / app / assets / stylesheets / graylog2 . less <nl> a . fields - set - <unk> <nl>
ppp b / app / assets / stylesheets / graylog2 . less <nl> a . fields - set - <unk> { <nl> font - size : 11px ; <nl> font - weight : normal ; <nl> background - color : # 222 ; <nl> ; <nl> : : # 222 ; <nl> } <nl> # result - graph - { <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> how to get beta releases : <nl> * added <unk> translation <nl> * updated polish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 8 beta ! * * <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * added <unk> translation <nl> * updated polish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 8 beta ! * <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * added <unk> translation <nl> * updated polish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 8 beta ! * * * <nl>
ppp b / readme . md <nl> how to get beta releases : <nl> * added <unk> translation <nl> * updated polish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 8 beta ! * *
ppp b / readme . md <nl> how to get beta releases : <nl> * added <unk> translation <nl> * updated polish translation <nl> * updated slovak translation <nl> * updated slovak translation <nl> * * version 1 . 9 . 8 beta ! * * <nl> <nl>
====NEW EXAMPLE====
ppp b / hystrix - core / src / test / java / com / netflix / hystrix / <unk> . java <nl> public class <unk> { <nl> public void reset ( ) { <nl> <unk> . <unk> ( null ) ; <nl> <unk> . reset ( ) ; <nl> <unk> ( ) ; <nl> ; <nl> } <nl> * * * <nl>
ppp b / hystrix - core / src / test / java / com / netflix / hystrix / <unk> . java <nl>
ppp b / hystrix - core / src / test / java / com / netflix / hystrix / <unk> . java <nl> public class <unk> { <nl> public void reset ( ) { <nl> <unk> . <unk> ( null ) ; <nl> <unk> . reset ( ) ; <nl> <unk> ( ) ; <nl> ; <nl> } <nl> * * <nl>
ppp b / hystrix - core / src / test / java / com / netflix / hystrix / <unk> . java <nl> public class <unk> { <nl>
ppp b / hystrix - core / src / test / java / com / netflix / hystrix / <unk> . java <nl> public class <unk> { <nl> public void reset ( ) { <nl> <unk> . <unk> ( null ) ; <nl> <unk> . reset ( ) ; <nl> <unk> ( ) ; <nl> ; <nl> } <nl> * * *
====NEW EXAMPLE====
ppp b / robobinding / src / main / java / org / robobinding / <unk> / <unk> . java <nl> import org . robobinding . bindingcontext ; <nl> * @ author <unk> wei <nl> * / <nl> public interface <unk> extends <unk> { <nl>
ppp b / robobinding / src / main / java / org / robobinding / <unk> / <unk> . java <nl> import org . robobinding . bindingcontext ; <nl> * @ author <unk> wei <nl> * / <nl> public interface <unk> extends <unk> { <nl> void void ( bindingcontext bindingcontext ) ; <nl> } <nl>
ppp b / robobinding / src / main / java / org / robobinding / <unk> / <unk> . java <nl> import org . robobinding . bindingcontext ; <nl> * @ author <unk> wei <nl> * / <nl>
ppp b / robobinding / src / main / java / org / robobinding / <unk> / <unk> . java <nl> import org . robobinding . bindingcontext ; <nl> * @ author <unk> wei <nl> * / <nl> public interface <unk> extends { <nl>
ppp b / robobinding / src / main / java / org / robobinding / <unk> / <unk> . java <nl> import org . robobinding . bindingcontext ; <nl> * @ author <unk> wei <nl> * / <nl> public interface <unk> extends <unk> { <nl> void void ( bindingcontext bindingcontext ) ) ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / python / src / com / jetbrains / python / spellchecker / <unk> . dic <nl> rtype <nl> tuple <nl> teardown <nl> teardown <nl> doctest <nl> <unk> <nl>
ppp b / python / src / com / jetbrains / python / spellchecker / <unk> . dic <nl> rtype <nl> tuple <nl> teardown <nl> teardown <nl> doctest <nl> <nl>
ppp b / python / src / com / jetbrains / python / spellchecker / <unk> . dic <nl> rtype <nl> tuple <nl> teardown <nl> teardown <nl> doctest <nl> <unk> <nl> <nl>
ppp b / python / src / com / jetbrains / python / spellchecker / <unk> . dic <nl> rtype <nl> tuple <nl> teardown <nl> teardown <nl> doctest <nl> <unk> <unk> <nl>
ppp b / python / src / com / jetbrains / python / spellchecker / <unk> . dic <nl> rtype <nl> tuple <nl> teardown <nl> teardown <nl> doctest <nl>
====NEW EXAMPLE====
ppp b / src / main / java / com / commafeed / backend / <unk> / <unk> . java <nl>
ppp b / src / main / java / com / commafeed / backend / <unk> / <unk> . java <nl> public class <unk> { <nl> } <nl> public void <unk> ( feed ( ) ; <nl> void <unk> ( feed feed ) { <nl> <unk> . add ( feed ) ; <nl> } <nl>
ppp b / src / main / java / com / commafeed
ppp b / src / main / java / com / commafeed / backend / <unk> / <unk> . java <nl> public class <unk> { <nl> } <nl> public void <unk> ( feed ( ) ; <nl> void <unk> ( feed feed ) { <nl> <unk> . add ( feed ) ; } <nl>
ppp b / src / main / java / com / commafeed / backend / <unk> / <unk> . java <nl> public class <unk> { <nl> } <nl> public void <unk> ( feed ( ) ; <nl> void <unk> ( feed feed ) { <nl> <unk> . add ( feed ) ; <nl> }
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> project ( ' : aeron - system - tests ' ) { <nl> } <nl> test { <nl>
ppp b / build . gradle <nl> project ( ' : aeron - system - tests ' ) { <nl> } <nl>
ppp b / build . gradle <nl> project ( ' : aeron - system - tests ' ) { <nl>
ppp b / build . gradle <nl> project ( ' : aeron - system - tests ' ) { <nl> } <nl> test <nl>
ppp b / build . gradle <nl> project ( ' : aeron - system - tests ' ) { <nl> <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> width = " <unk> " <nl> lib : <unk> = " material " <nl> / > <nl> ` ` ` <nl> # # # # <unk> to way <nl> ccc xml <nl> < com . github . glomadrian . <unk> . <unk> <nl> android : id = " @ + id / <unk> " <nl>
ppp b / readme . md <nl> width = " <unk> " <nl> lib : <unk> = " material " <nl> / > <nl> ` ` ` <nl> # # # # <unk> to way <nl> ccc xml <nl> < com . github . glomadrian . <unk> . <unk> <nl> android : id = " @ + id / " <nl>
ppp b / readme . md <nl> width = " <unk> " <nl> lib : <unk> = " material " <nl> / > <nl> ` ` ` <nl> # # # # <unk> to way <nl> ccc xml <nl> < com . github . glomadrian . <unk> . <unk> <nl> android : id = " @ + id / <unk> <nl>
ppp b / readme . md <nl> width = " <unk> " <nl> lib : <unk> = " material " <nl>
ppp b / readme . md <nl> width = " <unk> " <nl>
====NEW EXAMPLE====
ppp b / . gitattributes <nl> * . bat text eol = crlf <nl> flink - runtime - web / web - dashboard / web / * <unk> - vendored <nl>
ppp b / . gitattributes <nl> * . bat text eol = crlf <nl> flink - runtime - web / web - dashboard / web / * <unk> <unk> <nl>
ppp b / . gitattributes <nl> * . bat text eol = crlf <nl> flink - runtime - web / web - dashboard / web / * <unk> - snapshot <nl>
ppp b / . gitattributes <nl> * . bat text eol = crlf <nl> flink - runtime - web / web - dashboard / web / * <unk> - rc <nl>
ppp b / . gitattributes <nl> * . bat text eol = crlf <nl> flink - runtime - web / web - dashboard / web / * <unk> - <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1168 : add support for indexing clustered columns <nl> * storm - storm - : removes noisy log message & a todo <nl> * storm - 1143 : validate topology configs during topology submission <nl> * storm - 1157 : adding dynamic profiling for worker , restarting worker , jstack , heap dump , and profiling <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1168 : add support for indexing clustered columns <nl> * storm - storm - : removes noisy log message & a todo <nl> * storm - 1143 : validate topology configs during topology submission <nl> * storm - 1157 : adding dynamic profiling for worker , restarting worker , jstack , heap dump , , <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1168 : add support for indexing clustered columns <nl> * storm - storm - : removes noisy log message & a todo <nl> * storm - 1143 : validate topology configs during topology submission <nl> * storm - 1157 : adding dynamic profiling for worker , restarting worker , jstack , heap dump , profiling <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1168 : add support for indexing clustered columns <nl> * storm - storm - : removes noisy log message & a todo <nl> * storm - 1143 : validate topology configs during topology submission <nl> * storm - 1157 : adding dynamic profiling for worker , restarting worker , jstack , heap dump , and <nl>
====NEW EXAMPLE====
ppp b / picasso / src / main / java / com / squareup / picasso / <unk> . java <nl> class <unk> extends threadpoolexecutor { <nl> } <nl> private void <unk> ( int threadcount ) { <nl> <unk> ( threadcount ) ; <nl> <unk> ( threadcount ) ; <nl> } <nl> @ override <nl>
ppp b / picasso / src / main / java / com / squareup / picasso / <unk> . java <nl> class <unk> extends threadpoolexecutor { <nl> } <nl> private void <unk> ( int threadcount ) { <nl> <unk> ( threadcount ) ; <nl> <unk> ( threadcount ) ; <nl> } <nl>
ppp b / picasso / src / main / java / com / squareup / picasso / <unk> . java <nl> class <unk> extends threadpoolexecutor { <nl> } <nl> private void <unk> ( int threadcount ) { <nl> <unk> ( threadcount ) ; <nl> <unk> ( threadcount ) ; <nl> } <nl> @ override
ppp b / picasso / src / main / java / com / squareup / picasso / <unk> . java <nl> class <unk> extends threadpoolexecutor { <nl> } <nl> private void <unk> ( int threadcount ) { <nl> <unk> ( threadcount ) ; <nl> <unk> ( threadcount ) ; <nl> } <nl> @ @ <nl>
ppp b / picasso / src / main / java / com / squareup / picasso / <unk> . java <nl> class <unk> extends threadpoolexecutor { <nl> } <nl> private void <unk> ( int threadcount ) { <nl> <unk> ( threadcount ) ; <nl> <unk> ( threadcount ) ; <nl> } <nl> @ override <nl> <nl>
====NEW EXAMPLE====
ppp b / spongecommon <nl> subproject commit <unk> <nl>
ppp b / spongecommon <nl> subproject commit <nl>
ppp b / spongecommon <nl> subproject commit fba07bc558372a1f3bee80b837495cf6bf8e0a5a <nl>
ppp b / spongecommon <nl> subproject commit 4d400f5d7c8a766dfb079c915308a2eeccfc0f8b <nl>
ppp b / spongecommon <nl> subproject commit 7284da883104caf9c0fba821a69a12f5c4e15211 <nl>
====NEW EXAMPLE====
ppp b / modules / sdk / gradle - plugins / src / com / liferay / gradle / plugins / extensions / liferayextension . java <nl> public class liferayextension { <nl> return null ; <nl> } <nl> return <unk> ; <nl> } <nl> string string <unk> ( ) { <nl>
ppp b / modules / sdk / gradle - plugins / src / com / liferay / gradle / plugins / extensions / liferayextension . java <nl> public class liferayextension { <nl> return null ; <nl> } <nl> return <unk> ; <nl> } <nl> string string <unk> ( ) <nl>
ppp b / modules / sdk / gradle - plugins / src / com / liferay / gradle / plugins / extensions / liferayextension . java <nl> public class liferayextension { <nl> return null ; <nl> } <nl> return ( ) ; <nl>
ppp b / modules / sdk / gradle - plugins / src / com / liferay / gradle / plugins / extensions / liferayextension . java <nl> public class liferayextension { <nl> return null ; <nl> } <nl> return <unk> ; <nl> } <nl> string string <unk> ( { <nl>
ppp b / modules / sdk / gradle - plugins / src / com / liferay / gradle / plugins / extensions / liferayextension . java <nl> public class liferayextension { <nl> return null ; <nl> } <nl> return <unk> ) ; <nl>
====NEW EXAMPLE====
ppp b / src / cpp / core / stringutils . cpp <nl> # include < <unk> . h > <nl> # endif <nl>
ppp b / src / cpp / core / stringutils . cpp <nl> # include < <unk> . h > <nl> # <nl>
ppp b / src / cpp / core / stringutils . cpp <nl> # include < <unk> . h > <nl> # endif <nl> <nl>
ppp b / src / cpp / core / stringutils . cpp <nl> # include < <unk> . h > <nl>
ppp b / src / cpp / core / stringutils . cpp <nl> # include < <unk> . h > <nl> # endif <nl> #
====NEW EXAMPLE====
ppp b / processing . js <nl> } ; <nl> p . endshape = function endshape ( mode ) { <nl> var <unk> = mode = = = p . close ; <nl> var linevertarray = [ ] ; <nl> var <unk> = [ ] ; <nl> var colorvertarray = [ ] ; <nl>
ppp b / processing . js <nl> } ; <nl> p . endshape = function endshape ( mode ) { <nl> var <unk> = mode = = = p . close ; <nl> var linevertarray = [ ] ; <nl> var <unk> = [ ] ; <nl> var colorvertarray = [ ; <nl>
ppp b / processing . js <nl> } ; <nl> p . endshape = function endshape ( mode ) { <nl> var <unk> = mode = = = p . close ; <nl> var linevertarray = [ ] ; <nl> var <unk> = [ ] ; <nl> var colorvertarray = [ ] <nl>
ppp b / processing . js <nl> } ; <nl> p . endshape = function endshape ( mode ) { <nl> var <unk> = mode = = = p . close ; <nl> var linevertarray = [ ] ; <nl> var <unk> = [ ] ; <nl> var colorvertarray = [ ] ] ; <nl>
ppp b / processing . js <nl> } ; <nl> p . endshape = function endshape ( mode ) { <nl> var <unk> = mode = = = p . close ; <nl> var linevertarray = [ ] ; <nl> var <unk> = [ ] ; <nl> var colorvertarray = [ ] ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . ' ) { <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . ' ) ) <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . ' ) ; <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . ' ) { <nl> { <nl>
ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . ' ) { { <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal - security . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - security / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> changelog <nl>
ppp b / readme . md <nl> changelog <nl> * * next release * * <nl> * updated simplified chinese translation <nl> * move getchildren to take photos directly ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / readme . md <nl> changelog <nl> * * next release * * <nl> * updated simplified chinese translation <nl> * move getchildren to take photos directly ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / readme . md <nl> changelog <nl> * * next release * * <nl> * updated simplified chinese translation <nl> * * move getchildren to take photos directly ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
ppp b / readme . md <nl> changelog <nl> * * next release * * <nl> * updated simplified chinese translation <nl> * move getchildren to take photos directly ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` <nl>
====NEW EXAMPLE====
ppp b / src / main / java / com / sk89q / worldedit / extension / input / parsercontext . java <nl> public class parsercontext { <nl> * / <nl> public void <unk> ( @ nullable world world ) { <nl> this . world = world ; <nl> world ( ) ; <nl> } <nl> / * * <nl>
ppp b / src / main / java / com / sk89q / worldedit / extension / input / parsercontext . java <nl> public class parsercontext { <nl> * / <nl> public void <unk> ( @ nullable world world ) { <nl> this . world = world ; <nl> world ( ) ; <nl> } <nl>
ppp b / src / main / java / com / sk89q / worldedit / extension / input / parsercontext . java <nl> public class parsercontext { <nl> * / <nl> public void <unk> ( @ nullable world world ) { <nl> this . world = world ; <nl> world ( ) ; <nl> } <nl> / * * * <nl>
ppp b / src / main / java / com / sk89q / worldedit / extension / input / parsercontext . java <nl>
ppp b / src / main / java / com / sk89q / worldedit / extension / input / parsercontext . java <nl> public class parsercontext { <nl> * / <nl> public void <unk> ( @ nullable world world ) { <nl> this . world = world ; <nl> world ( ) ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / src / main / groovy / swing / swingbuilder . groovy <nl> b / * <nl> * copyright - 2007 the original author or authors . <nl> * <nl> * licensed under the apache license , version 2 . 0 ( the " license " ) <nl>
ppp b / src / main / groovy / swing / swingbuilder . groovy <nl> b / * <nl> * copyright - 2007 the original author or authors . <nl> * <nl> * licensed under the apache license , version 2 . 0 ( the " license " <nl>
ppp b / src / main / groovy / swing / swingbuilder . groovy <nl> b / * <nl> * copyright - 2007 the original author or authors . <nl> * <nl> * licensed under the apache license , version 2 . 0 ( the " license " " <nl>
ppp b / src / main / groovy / swing / swingbuilder . groovy <nl>
ppp b / src / main / groovy / swing / swingbuilder . groovy <nl> b / * <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = e245ccc20a33af8e3adb4d40f6cf3587e140d9e9 <nl> mode = push <nl> parent = 7529c5747805fd756dbb93390ee5958640573fe7 <nl> remote = git @ github . com : liferay / com - liferay - blogs . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl>
ppp b / modules / apps / collaboration / blogs / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / jetty - distribution / src / main / resources / start . ini <nl>
ppp b / jetty - distribution / src / main / resources / start . ini <nl> # - - exec <nl>
ppp b / jetty - distribution / src / main / resources / start . ini <nl> # - - exec <nl> # - xmx512m <nl>
ppp b / jetty - distribution / src / main / resources / start . <nl>
ppp b / jetty - distribution / src / main / resources / start . ini <nl> # - - <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> # application files <nl> * . apk <nl>
ppp b / . gitignore <nl> # application files <nl>
ppp b / . gitignore <nl> # application files <nl> * . apk <nl> * . <unk> <unk> <unk> <nl> # dex vm <nl>
ppp b / . gitignore <nl> # application files <nl> * . apk <nl> * . <unk> <unk> <unk> <nl>
ppp b / . gitignore <nl> # application files <nl> * . apk <nl> * . <unk> <unk> <unk> <nl> # dex dex <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / tomcat / websocket / <unk> . java <nl> public abstract class <unk> implements <unk> { <nl>
ppp b / java / org / apache / tomcat / websocket / <unk> . java <nl> public abstract class <unk> implements <unk> { <nl> sm . getstring ( " <unk> . <unk> " ) ) ; <nl> } <nl> if ( buffer . remaining ( ) = = 0 ) ; <nl> ) ; <nl> { <nl> flush ( ) ; <nl> } <nl>
ppp b / java / org / apache / tomcat / websocket / <unk> . java <nl>
ppp b / java / org / apache / tomcat / websocket / <unk> . <nl>
ppp b / java / org / apache / tomcat / websocket / <unk> . java <nl> public abstract class <unk> implements <unk> <nl>
====NEW EXAMPLE====
ppp b / jps / jps - builders / src / org / jetbrains / jps / builders / java / <unk> / mappings . java <nl> public class mappings { <nl> <unk> . add ( srcfile ) ; <nl> return ; / / do not process this file because it should not be <nl> } <nl> ; <nl> } <nl> } <nl>
ppp b / jps / jps - builders / src / org / jetbrains / jps / builders / java / <unk> / mappings . java <nl> public class mappings { <nl> <unk> . add ( srcfile ) ; <nl> return ; / / do not process this file because it should not be <nl> } <nl> ; <nl> } <nl>
ppp b / jps / jps - builders / src / org / jetbrains / jps / builders / java / <unk> / mappings . java <nl>
ppp b / jps / jps - builders / src / org / jetbrains / jps / builders / java / <unk> / mappings . java <nl> public class mappings { <nl> <unk> . add ( srcfile ) ; <nl> return ; / / do not process this file because it should not be <nl> } <nl> ; <nl> } <nl> } } <nl>
ppp b / jps / jps - builders / src / org / jetbrains / jps / builders / java / <unk> / mappings . java <nl> public class mappings { <nl> <unk> . add ( srcfile ) ; <nl> return ; / / do not process this file because it should not be <nl> } <nl> break ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - login . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / login / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / readme . md <nl> in order to use materiallist , you can either clone the project and import it as <nl> ccc groovy <nl> dependencies { <nl> . . . <nl> compile ' com . github . dexafree : materiallist : 2 . 0 . 1 ' <nl> } <nl> ` ` ` <nl>
ppp b / readme . md <nl> in order to use materiallist , you can either clone the project and import it as <nl> ccc groovy <nl> dependencies { <nl> . . . <nl> compile ' com . github . dexafree : materiallist : 2 . 0 . 1 ' <nl> } <nl> ` ` <nl>
ppp b / readme . md <nl> in order to use materiallist , you can either clone the project and import it as <nl> ccc groovy <nl> dependencies { <nl> . . . <nl> compile ' com . github . dexafree : materiallist : 2 . 0 . 1 ' <nl> } <nl> ` ` ` ` <nl>
ppp b / readme . md <nl> in order to use materiallist , you can either clone the project and import it as <nl> ccc groovy <nl> dependencies { <nl> . . . <nl> compile ' com . github . dexafree : materiallist : 2 . 0 . 1 ' <nl> } <nl>
ppp b / readme . md <nl> in order to use materiallist , you can either clone the project and import it as <nl> ccc groovy <nl> dependencies { <nl> . . . <nl> compile ' com . github . dexafree : materiallist : 2 . 0 . 1 ' <nl> } <nl> ` ` ` <nl> <nl>
====NEW EXAMPLE====
ppp b / src / cpp / session / modules / sessionlinter . cpp <nl> <unk> <unk> ( <unk> <unk> ) <nl> } <nl> std : : string <unk> ; <nl> error error = core : : <unk> ( filepath & <unk> ) ; <nl> if ( error ) <nl> { <nl> log_error ( error ) ; <nl>
ppp b / src / cpp / session / modules / sessionlinter . cpp <nl> <unk> <unk> ( <unk> <unk> ) <nl> } <nl> std : : string <unk> ; <nl> error error = core : : <unk> ( filepath & <unk> ) ; <nl> if ( error ) <nl> { <nl> log_error ( error ; <nl>
ppp b / src / cpp / session / modules / sessionlinter . cpp <nl> <unk> <unk> ( <unk> <unk> ) <nl> } <nl> std : : string <unk> ; <nl> error error = core : : <unk> ( filepath & <unk> ) ; <nl> if ( error ) <nl> { <nl> log_error ( error ) ) ; <nl>
ppp b / src / cpp / session / modules / sessionlinter . cpp <nl> <unk> <unk> ( <unk> <unk> ) <nl> } <nl> std : : string <unk> ; <nl> error error = core : : <unk> ( filepath & <unk> ) ; <nl> if ( error ) <nl> { <nl> log_error ( error ) <nl>
ppp b / src / cpp / session / modules / sessionlinter . cpp <nl> <unk> <unk> ( <unk> <unk> ) <nl> } <nl> std : : string <unk> ; <nl> error error = core : : <unk> ( filepath & <unk> ) ; <nl> if ( error ) <nl> { <nl> log_error ( error ) ; <nl> ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - frontend - taglib . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl>
ppp b / modules / apps / foundation / frontend - taglib / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> target / * <nl> . idea <nl> * . iml <nl> / target <nl> iml <nl>
ppp b / . gitignore <nl> target / * <nl> . idea <nl> * . iml <nl> / target <nl> * <nl>
ppp b / . gitignore <nl> target / * <nl> . idea <nl> * . iml <nl> / target <nl> iml <nl> * <nl>
ppp b / . gitignore <nl> target / * <nl> . idea <nl> * . iml <nl> / target <nl> / <nl>
ppp b / . gitignore <nl> target / * <nl> . idea <nl> * . iml <nl> / target <nl> * <nl> * <nl>
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / app / assets / stylesheets / graylog2 . less <nl> label { <nl> } <nl> . modal . modal - <unk> { <nl> z - index : initial ; <nl> } <nl> . modal - <unk> { <nl>
ppp b / app / assets / stylesheets / graylog2 . less <nl> label { <nl> } <nl> . modal . modal - <unk> { <nl> z - index : initial ; <nl> } <nl> . modal - <unk> { <nl> <nl>
ppp b / app / assets / stylesheets / graylog2 . less <nl> label { <nl> } <nl> . modal . modal - <unk> { <nl> z - index : initial ; <nl> } <nl> . modal - <unk> <nl>
ppp b / app / assets / stylesheets / graylog2 . less <nl> label { <nl> } <nl> . modal . modal - <unk> { <nl> z - index : initial ; <nl> } <nl> . modal - { <nl>
ppp b / app / assets / stylesheets / graylog2 . less <nl> label { <nl> } <nl> . modal . modal - <unk> { <nl> z - index : initial ; <nl> } <nl> . modal - <unk> {
====NEW EXAMPLE====
ppp b / src / org / wordpress / android / wordpressdb . java <nl> public class wordpressdb { <nl>
ppp b / src / org / wordpress / android / wordpressdb . java <nl> public class wordpressdb { <nl> / / lets add the two new img options for settings <nl> db . execsql ( <unk> ) ; <nl> db . execsql ( <unk> ) ; <nl> } else if ( ) ; <nl> } <nl> } catch catch ( e ) { <nl> e . printstacktrace ( ) ; <nl>
ppp b / src / org / wordpress / android / wordpressdb . java <nl>
ppp b / src / org / wordpress / android / wordpressdb . java <nl> public class wordpressdb {
ppp b / src / org / wordpress / android / wordpressdb . java <nl> public class wordpressdb <nl>
====NEW EXAMPLE====
ppp b / core / src / main / java / dagger / objectgraph . java <nl>
ppp b / core / src / main / java / dagger / objectgraph . java <nl> import static dagger . internal . <unk> . <unk> ; <nl>
ppp b / core / src / main / java / dagger / objectgraph . java <nl> import static dagger . internal . <unk> . <unk> ; <nl> * < / ul > <nl> * / <nl> public abstract class objectgraph { <nl> public public class objectgraph { <nl> / * * <nl> * returns an instance of { @ code type . . <nl>
ppp b / core / src / main / java / dagger / objectgraph . <nl>
ppp b / core / src / main / java / dagger / objectgraph . java <nl> import static dagger . internal . <unk> . <unk> ; <nl> * < / ul > <nl> * / <nl> public abstract class objectgraph { <nl> public public class objectgraph { <nl> / * * <nl> * returns an instance of { @ code type } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - portal . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / portal / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl>
ppp b / actor - server / version . sbt <nl> \ no newline at end of file
ppp b / actor - server / version . sbt
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version
ppp b / actor - server / version . sbt <nl> \ no newline at end of file <nl> version in
====NEW EXAMPLE====
ppp b / core / java / android / text / util / linkify . java <nl> public class linkify { <nl> return 0 ; <nl> } <nl>
ppp b / core / java / android / text / util / linkify . java <nl> public class linkify { <nl> return 0 ; <nl> <nl>
ppp b / core / java / android / text / util / linkify . java <nl> public class linkify { <nl> return 0 ; } <nl>
ppp b / core / java / android / text / util / linkify . java <nl> public class linkify { <nl> return 0 ; <nl> } <nl> } <nl>
ppp b / core / java / android / text / util / linkify . java <nl> public class linkify { <nl> return 0 ; <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < modules > <nl> < module > analytics < / module > <nl>
ppp b / pom . xml <nl> < modules > <nl>
ppp b / pom . xml <nl> < modules > <nl> < module > analytics < / module > <nl> < module > api < / module > <nl> < module > catalog < / < / < / < module > < / module > <nl> < module > account < / module > <nl> < module > entitlement < / module > <nl>
ppp b / pom . xml <nl> < modules > <nl> < module > analytics < / module > <nl> < module > api < / module > <nl> < module > catalog < / < / < / < module > < / module > <nl> < module > account < / module > <nl> < module > entitlement < / module <nl>
ppp b / pom . xml <nl> < modules > <nl> < module > analytics < / module > <nl> < module > api < / module > <nl> < module > catalog < / < / < / < module > < / module > <nl> < module > account < / module > <nl> < module > entitlement < / > <nl>
====NEW EXAMPLE====
ppp b / extras / pom . xml <nl> < modules > <nl> < module > gwt < / module > <nl>
ppp b / extras / pom . xml <nl> < modules > <nl>
ppp b / extras / pom . xml <nl> < modules > <nl> < module > gwt < / module <nl>
ppp
ppp b / extras / pom . xml <nl> < modules > <nl> < module > gwt < / module > <nl> < module > guice < / module > <nl> < module > < / < / > <nl> < < > grizzly - adapter < / module > <nl> < module > jgroups < / module > <nl> < module > jms < / module > <nl>
====NEW EXAMPLE====
ppp b / changelog . textile <nl> h3 . version 0 . 3 . 0 ( march 29 , 2013 ) <nl> * <unk> implementation <nl> * <unk> support <nl> * relaxed transactional scope requirement for vertices <nl> * edge now longer extends vertex <nl> * updated to kryo 2 <nl> * bugfixes : * <nl>
ppp b / changelog . textile <nl> h3 . version 0 . 3 . 0 ( march 29 , 2013 ) <nl> * <unk> implementation <nl> * <unk> support <nl> * relaxed transactional scope requirement for vertices <nl> * edge now longer extends vertex <nl> * updated to kryo 2 <nl> * bugfixes : : <nl>
ppp b / changelog . textile <nl> h3 . version 0 . 3 . 0 ( march 29 , 2013 ) <nl> * <unk> implementation <nl> * <unk> support <nl> * relaxed transactional scope requirement for vertices <nl> * edge now longer extends vertex <nl> * updated to kryo 2 <nl> * bugfixes : <nl>
ppp b / changelog . textile <nl> h3 . version 0 . 3 . 0 ( march 29 , 2013 ) <nl> * <unk> implementation <nl> * <unk> support <nl> * relaxed transactional scope requirement for vertices <nl> * edge now longer extends vertex <nl> * updated to kryo 2 <nl> * bugfixes : *
ppp b / changelog . textile <nl> h3 . version 0 . 3 . 0 ( march 29 , 2013 ) <nl> * <unk> implementation <nl> * <unk> support <nl> * relaxed transactional scope requirement for vertices <nl> * edge now longer extends vertex <nl> * updated to kryo 2 <nl> * bugfixes bugfixes <nl>
====NEW EXAMPLE====
ppp b / fbcore / src / main / java / com / facebook / datasource / abstractdatasource . java <nl> public abstract class abstractdatasource < t > implements datasource < t > { <nl> success , <nl> / / data source has finished with failure <nl> failure <nl> , , <nl> } <nl> @ guardedby ( " this " ) <nl>
ppp b / fbcore / src / main / java / com / facebook / datasource / abstractdatasource . java <nl> public abstract class abstractdatasource < t > implements datasource < t > { <nl> success , <nl> / / data source has finished with failure <nl> failure <nl> , , <nl> } <nl> @ guardedby ( " this " <nl>
ppp b / fbcore / src / main / java / com / facebook / datasource / abstractdatasource . java <nl> public abstract class abstractdatasource < t > implements datasource < t > { <nl> success , <nl> / / data source has finished with failure <nl> failure <nl> , , <nl> } <nl> @ guardedby ( " this ) <nl>
ppp b / fbcore / src / main / java / com / facebook / datasource / abstractdatasource . java <nl>
ppp b / fbcore / src / main / java / com / facebook / datasource / abstractdatasource . java <nl> public abstract class abstractdatasource < t > implements datasource < t > { <nl> success , <nl> / / data source has finished with failure <nl> failure <nl> , , <nl> } <nl> @ guardedby ( " this " " <nl>
====NEW EXAMPLE====
ppp b / presto - docs / src / main / sphinx / release / release - 0 . 142 . rst <nl> hive changes <nl>
ppp b / presto - docs / src / main / sphinx / release / release - 0 . 142 . rst <nl>
ppp b / presto - docs / src / main / sphinx / release / release - 0 . 142 . rst <nl> hive changes <nl> * change <unk> input format to report actual bytes read as <unk> to <unk> bytes . <nl> * fix cache <unk> when when getid ( ) <nl> * wonsik sung cache <unk> when renaming tables . <nl>
ppp b / presto - docs / src / main / sphinx / release / release - 0 . 142 . rst <nl> hive changes <nl> * change <unk> input format to report actual bytes read as <unk> to <unk> bytes . <nl> * fix cache <unk> when when getid ( ) <nl> * wonsik sung cache <unk> when renaming tables <nl>
ppp b / presto - docs / src / main / sphinx / release / release - 0 . 142 . rst <nl> hive changes <nl> * change <unk> input format to report actual bytes read as <unk> to <unk> bytes . <nl> * fix cache <unk> when when getid ( ) <nl> * wonsik sung cache <unk> when renaming renaming <nl>
====NEW EXAMPLE====
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / <unk> . java <nl> public class <unk> extends fragment { <nl> @ override <nl> public void onstart ( ) { <nl> super . onstart ( ) ; <nl> eventbus . getdefault ( ) . register ( this ) ; <nl> } <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / <unk> . java <nl> public class <unk> extends fragment { <nl> @ override <nl> public void onstart ( ) { <nl> super . onstart ( ) ; <nl> eventbus . getdefault ( ) . register ( this ) ) ; <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / <unk> . java <nl> public class <unk> extends fragment { <nl> @ override <nl> public void onstart ( ) { <nl> super . onstart ( ) ; <nl> eventbus . getdefault ( ) . register ( this ) ; <nl> <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / <unk> . java <nl> public class <unk> extends fragment { <nl> @ override <nl> public void onstart ( ) { <nl> super . onstart ( ) ; <nl> eventbus . getdefault ( ) . register ( this ) ; } <nl>
ppp b / wordpress / src / main / java / org / wordpress / android / ui / prefs / <unk> . java <nl> public class <unk> extends fragment { <nl> @ override <nl> public void onstart ( ) { <nl> super . onstart ( ) ; <nl> eventbus . getdefault ( ) . register ( this ) ; <nl>
====NEW EXAMPLE====
ppp b / changelog . txt <nl> 0 . 84 . 2 <nl> * added reporterror of file permissions ( ) <nl> * fixed bug fixes ( https : grouping books of downloading wikipedia dataset ( ) <nl> * storm . * storm . isempty ( ( ) . . <nl> * fixed a bug making it <unk> to convert convert field to become required during a migration ( # 1695 ) . <nl>
ppp b / changelog . txt <nl> 0 . 84 . 2 <nl> * added reporterror of file permissions ( ) <nl> * fixed bug fixes ( https : grouping books of downloading wikipedia dataset ( ) <nl> * storm . * storm . isempty ( ( ) . . <nl> * fixed a bug making it <unk> to convert convert field to become required during a migration ( # 1695 ) <nl>
ppp b / changelog . txt <nl> 0 . 84 . 2 <nl> * added reporterror of file permissions ( ) <nl> * fixed bug fixes ( https : grouping books of downloading wikipedia dataset ( ) <nl> * storm . * storm . isempty ( ( ) . . <nl> * fixed a bug making it <unk> to convert convert field to become required during a migration ( # 1695 ) ) <nl>
ppp b / changelog . txt <nl> 0 . 84 . 2 <nl> * added reporterror of file permissions ( ) <nl> * fixed bug fixes ( https : grouping books of downloading wikipedia dataset ( ) <nl> * storm . * storm . isempty ( ( ) . . <nl> * fixed a bug making it <unk> to convert convert field to become required during a migration ( # 1695 ) . . <nl>
ppp b / changelog . txt <nl> 0 . 84 . 2 <nl> * added reporterror of file permissions ( ) <nl> * fixed bug fixes ( https : grouping books of downloading wikipedia dataset ( ) <nl> * storm . * storm . isempty ( ( ) . . <nl> * fixed a bug making it <unk> to convert convert field to become required during a migration ( # 1695 1695 <nl>
====NEW EXAMPLE====
ppp b / thirdparty / google - guava / pom . xml <nl> < / execution > <nl>
ppp b / thirdparty / google - guava / pom . xml <nl>
ppp b / thirdparty / google - guava / pom . <nl>
ppp b / thirdparty / google - guava / pom . xml <nl> < / execution <nl>
ppp
====NEW EXAMPLE====
ppp b / pom . xml <nl> < descriptor > config / assembly - bin . xml < / descriptor > <nl> < descriptor > config / assembly - src . xml < / descriptor > <nl> < / descriptors > <nl> \ no newline at end of file <nl> > <nl> / / configuration > <nl> < executions > <nl> < execution > <nl>
ppp b / pom . xml <nl> < descriptor > config / assembly - bin . xml < / descriptor > <nl>
ppp b / pom . xml <nl> < descriptor > config / assembly - bin . xml < / descriptor <nl>
ppp b / pom . xml <nl> < descriptor > config / assembly - bin . xml < / descriptor > <nl> < descriptor > config / assembly - src . xml < / descriptor > <nl> < / descriptors > <nl> \ no newline at end of file <nl> > <nl> / / configuration > <nl> < executions > <nl> < execution execution <nl>
ppp b / pom . xml <nl> < descriptor > config /
====NEW EXAMPLE====
ppp b / extra / pom . xml <nl> < module > twitter - search < / module > <nl> < module > mongo < / module > <nl> < module > <unk> < / module > <nl> < / < / < / module > <nl> < / modules > <nl> < / project > <nl>
ppp b / extra / pom . xml <nl> < module > twitter - search < / module > <nl>
ppp b / extra / pom . xml <nl> < module > twitter - search < / module > <nl> < module > mongo < / module > <nl> < module > <unk> < / module > <nl> < / < / < / module > <nl> < / modules > <nl> < / project > > <nl>
ppp b / extra / pom . xml <nl> < module > twitter - search < / module > <nl> < module > mongo < / module > <nl> < module > <unk> < / module > <nl> < / < / < / module > <nl> < / modules > <nl> < / project > <nl> <nl>
ppp b / extra / pom . xml <nl> < module > twitter - search < / module > <nl> < module > mongo < / module > <nl> < module > <unk> < / module > <nl> < / < / < / module > <nl> < / modules > <nl> < / project <nl>
====NEW EXAMPLE====
ppp b / src / main / java / water / util / <unk> . java <nl> public final class <unk> implements <nl> break ; <nl> case ack : <nl> case <unk> : <nl> case exec : <nl> case heartbeat heartbeat : <nl> heartbeat : <nl> / / compare 3 ctrl bytes + 4 bytes task # <nl>
ppp b / src / main / java / water / util / <unk> . java <nl> public final class <unk> implements <nl> break ; <nl> case ack : <nl> case <unk> : <nl> case exec : <nl> case heartbeat heartbeat : <nl> heartbeat : <nl> / / compare 3 ctrl bytes + 4 bytes task <nl>
ppp b / src / main / java / water / util / <unk> . java <nl> public final class <unk> implements <nl> break ; <nl> case ack : <nl> case <unk> : <nl> case exec : <nl> case heartbeat heartbeat : <nl> heartbeat : <nl> / / compare 3 ctrl bytes + 4 bytes task #
ppp b / src / main / java / water / util / <unk> . java <nl> public final class <unk> implements <nl> break ; <nl> case ack : <nl> case <unk> : <nl> case exec : <nl> case heartbeat heartbeat : <nl> heartbeat : <nl> / / compare 3 ctrl bytes + 4 bytes task task <nl>
ppp b / src / main / java / water / util / <unk> . java <nl> public final class <unk> implements <nl> break ; <nl> case ack : <nl> case <unk> : <nl> case exec : <nl> case heartbeat heartbeat : <nl> heartbeat : <nl> / / compare 3 ctrl bytes + 4 bytes task # # <nl>
====NEW EXAMPLE====
ppp b / python / testdata / inspections / <unk> . py <nl> s = 3 <nl> def ref ( s , t ) : <nl> pass <nl> <nl> ref ( ( s , t = 1 ) <nl> \ no newline at end of file <nl>
ppp b / python / testdata / inspections / <unk> . py <nl> s = 3 <nl> def ref ( s , t ) : <nl> pass <nl> <nl> ref ( ( s , t = ) <nl> \ no newline at end of file <nl>
ppp b / python / testdata / inspections / <unk> . py <nl> s = 3 <nl> def ref ( s , t ) : <nl> pass <nl> <nl> ref ( ( s , t = 1 <nl> \ no newline at end of file <nl>
ppp b / python / testdata / inspections / <unk> . py <nl> s = 3 <nl> def ref ( s , t ) : <nl> pass <nl> <nl> ref ( ( s , t = 1 ) <nl> no newline at end of file <nl>
ppp b / python / testdata / inspections / <unk> . py <nl> s = 3 <nl> def ref ( s , t ) : <nl> pass <nl> <nl> ref ( ( s , t = 1 . <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / components / camel - jetty9 / pom . xml <nl> < groupid > com . squareup . okhttp3 < / groupid > <nl> < artifactid > okhttp < / artifactid > <nl> < version > $ { <unk> - version } < / version > <nl>
ppp b / components / camel - jetty9 / pom . xml <nl> < groupid > com . squareup . okhttp3 < / groupid > <nl> < artifactid > okhttp < / artifactid > <nl> < version > $ { <unk> - version } < / version > <nl> < / version < / version version > <nl> < / dependency > <nl> < dependency > <nl>
ppp b / components / camel - jetty9 / pom . xml <nl>
ppp b / components / camel - jetty9 / pom . <nl>
ppp
====NEW EXAMPLE====
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching for system applications on per app basis <nl> * * version 1 . 10 . 21 beta * * <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl> * allow fetching for system applications on per app basis <nl> * * version 1 . 10 . 21 beta * <nl>
ppp b / changelog . md <nl> changelog <nl> * * next release * * <nl>
ppp b / changelog . md <nl> changelog <nl> * *
ppp b / changelog . md <nl> changelog <nl> *
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl>
ppp b / changelog . md <nl> # # 2
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1579 storm - nosuchfileexception that have own heartbeat is unavailable <nl> * storm - storm - : fix nosuchfileexception nosuchfileexception running tests in storm - core <nl> * storm - 1244 : port backtype . storm . command . upload - credentials to java <nl> * storm - 1245 : port backtype . storm . daemon . acker java <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1579 storm - nosuchfileexception that have own heartbeat is unavailable <nl> * storm - storm - : fix nosuchfileexception nosuchfileexception running tests in storm - core <nl> * storm - 1244 : port backtype . storm . command . upload - credentials to java <nl> * storm - 1245 : port backtype . storm . daemon . acker java java <nl>
ppp b / changelog . md <nl> # # 2 . 0 . 0 <nl> * storm - 1579 storm - nosuchfileexception that have own heartbeat is unavailable <nl> * storm - storm - : fix nosuchfileexception nosuchfileexception running tests in storm - core <nl> * storm - 1244 : port backtype . storm . command . upload - credentials to java <nl> * storm - 1245 : port backtype . storm . daemon . acker to <nl>
====NEW EXAMPLE====
ppp b

ppp
ppp b / version . txt <nl> jetty - 7 . 6 . 0 . <unk> - 27 27 january 15 <nl> * fixed dedection of the spell checker ] ( https : / github . svg ? branch " https : https : <nl>
ppp b / version . txt <nl> jetty - 7 . 6 . 0 . <unk> - 27 27 january 15 <nl> * fixed dedection of the spell checker ] ( https : / github . com / github . svg ? branch " https : <nl>
====NEW EXAMPLE====
ppp b / processor / build . gradle <nl> import org . gradle . internal . jvm . jvm <nl> apply plugin : ' kotlin ' <nl> apply plugin : ' com . novoda . bintray - release ' <nl> sourcesets { <nl>
ppp b / processor / build . gradle <nl> import org . gradle . internal . jvm . jvm <nl>
ppp b / processor / build . gradle <nl>
ppp
ppp b / processor / build . gradle <nl> import org . gradle . internal . jvm . jvm <nl> apply plugin : ' kotlin ' <nl> apply plugin : ' com . novoda . bintray - release ' <nl> sourcesets { <nl> . com . com . bintray . 0 . ' <nl> sourcesets { <nl> main { <nl> java { <nl>
====NEW EXAMPLE====
ppp b / bin / install_zmq . sh <nl> # ! / bin / bash <nl>
ppp b / bin / install_zmq . sh <nl>
ppp b / bin / install_zmq . sh <nl> # ! / bin / bash <nl> export java_home ( $ { <nl> / / / / / libexec / java_home ) <nl> if [ ! - d " $ java_home / include " ] ; then <nl> echo " <nl>
ppp b / bin / install_zmq . sh <nl> # ! / bin / bash <nl> export java_home ( $ { <nl> / / / / / libexec / java_home ) <nl> if [ ! - d " $ java_home / include " ] ; then <nl> echo <nl>
ppp b / bin / install_zmq . sh <nl> # ! / bin / bash <nl> export java_home ( $ { <nl> / / / / / libexec / java_home ) <nl> if [ ! - d " $ java_home / include " ] ; then <nl> echo " " <nl>
====NEW EXAMPLE====
ppp b / lib / versions - ignore . txt <nl> lib / development / com . liferay . ant . bnd . jar <nl>
ppp b / lib / versions - ignore . txt <nl>
ppp
ppp b / lib / versions - ignore . txt <nl> lib / development / com . liferay . ant . bnd . jar <nl> lib / development / com . liferay . <unk> . formatter . jar <nl> / / development / com . liferay / liferay / . com . com / / / / / / com . liferay / whip . jar <nl> / / development / liferay <nl> doclet . jar <nl>
ppp b / lib / versions - ignore . txt <nl> lib / development / com . liferay . ant . bnd . jar <nl> lib / development / com . liferay . <unk> . formatter . jar <nl> / / development / com . liferay / liferay / . com . com / / / / / / com . liferay / whip . jar <nl> / / development / liferay <nl> doclet . <nl>
====NEW EXAMPLE====
ppp b / gradle / assemble . gradle <nl> jar { <nl> } <nl>
ppp b / gradle / assemble . gradle <nl> jar { <nl>
ppp b / gradle / assemble . gradle <nl> jar { <nl> <nl>
ppp b / gradle / assemble . gradle <nl> jar { <nl> } <nl> def modules ( ) { <nl> subprojects . findall { it . name = ~ / groovy / } <nl> = = ~ / / / } <nl> } <nl> def <unk> ( ) { <nl>
ppp b / gradle / assemble . gradle <nl> jar <nl>
====NEW EXAMPLE====
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - flags . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl> ; <nl>
ppp b / modules / apps / collaboration / flags / . gitrepo <nl>
====NEW EXAMPLE====
ppp b / publish . cmd <nl> @ rem c : \ users \ <unk> \ . m2 \ repository <nl>
ppp b / publish . cmd <nl> @ rem c : \ users \ <unk> \ . m2 \ <nl>
ppp b / publish . cmd <nl> @ rem c :
ppp b / publish . cmd <nl> @ rem c
ppp b / publish . cmd <nl> @ rem c : \ users \ <unk> \ . m2 \ repository <nl> @ rem gradlew publishtomavenlocal - - info <nl> @ http : / / jcenter . . . com <nl> gradlew bintrayupload - - info info <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> gen - external - apklibs <nl> . idea <nl> out <nl> . ds_store <nl>
ppp b / . gitignore <nl> gen - external - apklibs <nl> . idea <nl> out <nl> . ds_store <nl> ds_store <nl>
ppp b / . gitignore <nl> gen - external - apklibs <nl> . idea <nl> out <nl> . ds_store ds_store <nl>
ppp b / . gitignore <nl> gen - external - apklibs <nl> . idea <nl> out <nl> . ds_store <nl> <nl>
ppp b / . gitignore <nl> gen - external - apklibs <nl> . idea <nl> out <nl> . ds_store <nl> . <nl>
====NEW EXAMPLE====
ppp b / src / com / facebook / buck / java / <unk> . java <nl> public class <unk> extends abstractbuildrule { <nl> @ override <nl> protected rulekey . builder <unk> ( rulekey . builder builder ) { <nl>
ppp b / src / com / facebook / buck / java / <unk> . java <nl> public class <unk> extends abstractbuildrule { <nl> @ override <nl> protected rulekey . builder <unk> ( rulekey . builder builder ) ) <nl>
ppp b / src / com / facebook / buck / java / <unk> . java <nl> public class <unk> extends abstractbuildrule { <nl> @ override <nl> protected rulekey . builder <unk> ( rulekey . builder builder ) ; <nl>
ppp b / src / com / facebook / buck / java / <unk> . java <nl> public class <unk> extends abstractbuildrule { <nl> @ override <nl> protected rulekey . builder <unk> ( rulekey . builder builder ) { <nl> <nl>
ppp b / src / com / facebook / buck / java / <unk> . java <nl> public class <unk> extends abstractbuildrule { <nl> @ override <nl> protected rulekey . builder <unk> ( rulekey . builder builder ) { <nl> return builder . <unk> ( ) ; <nl>
====NEW EXAMPLE====
ppp b / rxbinding / src / main / java / com / jakewharton / rxbinding / widget / rxcheckedtextview . java <nl> public final class rxcheckedtextview { <nl> } <nl> private rxcheckedtextview ( ) { <nl> throw new assertionerror ( " no instances . " ) ; <nl> } <nl> } <nl>
ppp b / rxbinding / src / main / java / com / jakewharton / rxbinding / widget / rxcheckedtextview . java <nl> public final class rxcheckedtextview { <nl> } <nl> private rxcheckedtextview ( ) { <nl> throw new assertionerror ( " no instances . " ) ; <nl> } <nl> } <nl> <nl>
ppp b / rxbinding / src / main / java / com / jakewharton / rxbinding / widget / rxcheckedtextview . java <nl> public final class rxcheckedtextview { <nl> } <nl> private rxcheckedtextview ( ) { <nl> throw new assertionerror ( " no instances . " ) ; <nl> } <nl> }
ppp b / rxbinding / src / main / java / com / jakewharton / rxbinding / widget / rxcheckedtextview . java <nl> public final class rxcheckedtextview { <nl> } <nl> private rxcheckedtextview ( ) { <nl> throw new assertionerror ( " no instances . " ) ; <nl> } <nl> <nl>
ppp b / rxbinding / src / main / java / com / jakewharton / rxbinding / widget / rxcheckedtextview . java <nl> public final class rxcheckedtextview { <nl> } <nl> private rxcheckedtextview ( ) { <nl> throw new assertionerror ( " no instances . " ) ; <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - plugins - admin . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl>
ppp b / modules / apps / foundation / plugins - admin / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / rakefile <nl> end <nl> require ' tasks / test ' <nl> begin <nl> require ' tasks / cross_compile ' <nl> rescue <unk> = > > <nl> e warn " warning : could not perform some cross - compiling : # { e } " <nl> end <nl>
ppp b / rakefile <nl> end <nl> require ' tasks / test ' <nl> begin <nl>
ppp b / rakefile <nl> end <nl> require ' tasks / test ' <nl>
ppp b / rakefile <nl> end <nl> require ' tasks / test ' <nl> begin <nl> require ' tasks / cross_compile ' <nl> rescue <unk> = > > <nl> e warn " warning : could not perform some cross - compiling : # { e } " " <nl>
ppp b / rakefile <nl> end <nl> require ' tasks / test ' <nl> <nl>
====NEW EXAMPLE====
ppp b / src / main / resources / es - plugin . properties <nl> plugin = org . elasticsearch . plugin . analysis . icu . <unk> <nl> version = $ { project .
ppp b / src / main / resources / es - plugin . properties <nl> plugin = org . elasticsearch . plugin . analysis . icu . <unk> <nl> version = $ { project . version
ppp b / src / main / resources / es - plugin
ppp b / src / main / resources / es
ppp b / src / main / resources / es - plugin . properties <nl> plugin = org . elasticsearch . plugin . analysis . icu . <unk> <nl> version = $ { project . version } <nl> \ no newline at end of . version } <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta2 ' <nl> } <nl> } <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta2 ' <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta2 ' <nl> } <nl> } <nl> <nl>
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta2 ' <nl> } <nl> }
ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta2 ' <nl> } <nl>
====NEW EXAMPLE====
ppp b / bigbluebutton - config / bin / bbb - conf <nl> # ! / bin / bash <nl> # <nl> # copyright ( c ) 2008 - 2009 by bigbluebutton <nl> # <nl>
ppp b / bigbluebutton - config / bin / bbb - conf <nl> # ! / bin / bash <nl> # <nl> # copyright ( c ) 2008 - 2009 by bigbluebutton <nl> <nl>
ppp b / bigbluebutton - config / bin / bbb - conf <nl> # ! / bin / bash <nl> # <nl> # copyright ( c ) 2008 - 2009 by bigbluebutton bigbluebutton <nl>
ppp b / bigbluebutton - config / bin / bbb - conf <nl> # ! / bin / bash <nl> # <nl> # copyright ( c ) 2008 - 2009 by bigbluebutton <nl> # <nl> <nl>
ppp b / bigbluebutton - config / bin / bbb - conf <nl> # ! / bin / bash <nl> # <nl> # copyright ( c ) 2008 - 2009 by bigbluebutton <nl> # # <nl>
====NEW EXAMPLE====
ppp b / src / web / session - summary . jsp <nl> for ( <unk> <unk> : sessions ) { <nl> try { / / skip invalid sessions ( of - <unk> ) <nl> if ( ! <unk> . validate ( ) ) continue ; <nl> } catch ( illegalstateexception ise ) { <nl> continue ; <nl> } <nl> count + + ; <nl>
ppp b / src / web / session - summary . jsp <nl> for ( <unk> <unk> : sessions ) { <nl> try { / / skip invalid sessions ( of - <unk> ) <nl> if ( ! <unk> . validate ( ) ) continue ; <nl> } catch ( illegalstateexception ise ) { <nl> continue ; <nl> } <nl> count + ; <nl>
ppp b / src / web / session - summary . jsp <nl> for ( <unk> <unk> : sessions ) { <nl> try { / / skip invalid sessions ( of - <unk> ) <nl> if ( ! <unk> . validate ( ) ) continue ; <nl> } catch ( illegalstateexception ise ) { <nl> continue ; <nl> } <nl> count + + <nl>
ppp b / src / web / session - summary . jsp <nl> for ( <unk> <unk> : sessions ) { <nl> try { / / skip invalid sessions ( of - <unk> ) <nl> if ( ! <unk> . validate ( ) ) continue ; <nl> } catch ( illegalstateexception ise ) { <nl> continue ; <nl> } <nl>
ppp b / src / web / session - summary . jsp <nl> for ( <unk> <unk> : sessions ) { <nl> try { / / skip invalid sessions ( of - <unk> ) <nl> if ( ! <unk> . validate ( ) ) continue ; <nl> } catch ( illegalstateexception ise ) { <nl> continue ; <nl> } <nl> count + <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> streaming / target / * <nl> target / * <nl> . lib / * <nl> * .
ppp b / . gitignore <nl> streaming / target / * <nl> target / * <nl> . lib / * <nl> * . gem <nl> * <nl> * <nl>
ppp b / . gitignore <nl> streaming / target / * <nl> target / * <nl> . lib / * <nl> * . gem <nl> * <nl>
ppp b / . gitignore <nl> streaming / target / * <nl> target / * <nl> . lib / * <nl> * . gem <nl> * * <nl>
ppp b / . gitignore <nl> streaming / target / * <nl> target / * <nl> . lib / * <nl> * . gem <nl> * <nl> * * <nl>
====NEW EXAMPLE====
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - sync . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl>
ppp b / modules / apps / sync / . gitrepo <nl> ; <nl> [ subrepo <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> project . properties <nl> . classpath <nl> . project <nl> . settings <nl>
ppp b / . gitignore <nl> project . properties <nl> . classpath <nl> . project <nl> . settings <nl> <nl>
ppp b / . gitignore <nl> project . properties <nl> . classpath <nl> . project <nl> . settings <nl> <nl> settings <nl>
ppp b / . gitignore <nl> project . properties <nl> . classpath <nl> . project <nl> . settings <nl> * <nl>
ppp b / . gitignore <nl> project . properties <nl> . classpath <nl> . project <nl> . settings <nl> settings <nl>
====NEW EXAMPLE====
ppp b / test / org / apache / tomcat / unittest / <unk> . java <nl> public class <unk> implements servletcontext { <nl> @ override <nl> public url getresource ( string path ) throws <unk> { <nl>
ppp b / test / org / apache / tomcat / unittest / <unk> . java <nl> public class <unk> implements servletcontext { <nl> @ override <nl> public url getresource ( string path ) throws <unk> { <nl> throw ; <nl> } <nl>
ppp b / test / org / apache / tomcat / unittest / <unk> . java <nl> public class <unk> implements servletcontext { <nl> @ override <nl> public url getresource ( string path ) throws <unk> { <nl> throw ; <nl> } <nl> @ override <nl>
ppp b / test / org / apache / tomcat / unittest / <unk> . java <nl> public class <unk> implements servletcontext { <nl> @ override <nl> public url getresource ( string path ) throws <unk> { <nl> throw ; <nl>
ppp b / test / org / apache / tomcat / unittest / <unk> . java <nl> public class <unk> implements servletcontext { <nl> @ override <nl> public url getresource ( string path ) throws <unk> { <nl> throw ) ; <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = edb336d17f0d485262d5332a4fc662cfed48740f <nl> mode = push <nl> parent = 6d54ae03202e76e4fa8bc02b6a65550b670e6244 <nl> remote = git @ github . com : liferay / com - liferay - portal - search . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl>
ppp b / modules / apps / foundation / portal - search / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
====NEW EXAMPLE====
ppp b / externs / <unk> . js <nl> notification . prototype . <unk> ; <nl> notification . prototype . onclick ; <nl>
ppp b / externs / <unk> . js <nl> notification . prototype . <unk> ; <nl> notification . prototype . onclick ; <nl> / * * <nl> * @ type { function ( new : notification , ( string , ) } <nl> * <nl> window . notification ; <nl>
ppp b / externs / <unk> . js <nl> notification . prototype . <unk> ; <nl> notification . prototype . onclick ; <nl> / * * <nl>
ppp b / externs / <unk> . js <nl> notification . prototype . <unk> ; <nl>
ppp b / externs / <unk> . js <nl> notification . prototype . <unk> ; <nl> notification . prototype . onclick ; <nl> / * * <nl> * @ type { function ( new : notification , ( string , ) } <nl> * <nl>
====NEW EXAMPLE====
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool
ppp b / trunk / jlanguagetool / changes . txt <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> \ no newline at end of file <nl>
ppp b / trunk / jlanguagetool / changes . txt <nl> languagetool change log <nl> 1 : <nl> \ no newline at end of file <nl>
====NEW EXAMPLE====
ppp b / portal - impl / src / com / liferay / portal / tools / sourceformatter . java <nl> public class sourceformatter { <nl> string content = <unk> . read ( file ) ; <nl> if ( <unk> ( content ) ) { <nl> return ; <nl> } <nl> string classname = file . getname ( ) ; <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / sourceformatter . java <nl> public class sourceformatter { <nl> string content = <unk> . read ( file ) ; <nl> if ( <unk> ( content ) ) { <nl> return ; <nl> } <nl> string classname = file . getname ( ; <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / sourceformatter . java <nl> public class sourceformatter { <nl> string content = <unk> . read ( file ) ; <nl> if ( <unk> ( content ) ) { <nl> return ; <nl> } <nl> string classname = file . getname ( ) ) ; <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / sourceformatter . java <nl> public class sourceformatter { <nl> string content = <unk> . read ( file ) ; <nl> if ( <unk> ( content ) ) { <nl> return ; <nl> } <nl> string classname = file . getname ( ) ; <nl> ; <nl>
ppp b / portal - impl / src / com / liferay / portal / tools / sourceformatter . java <nl> public class sourceformatter { <nl> string content = <unk> . read ( file ) ; <nl> if ( <unk> ( content ) ) { <nl> return ; <nl> } <nl> string classname = file . getname ( ) <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> profile <nl> * . iws <nl> * . ipr <nl> * updated french translation <nl> . iml <nl> nbactions . xml <nl> / nb - configuration . xml <nl>
ppp b / . gitignore <nl> profile <nl> * .
ppp b / . gitignore <nl> profile <nl> * . iws <nl> * . ipr <nl> * updated french translation <nl> . iml <nl> nbactions . xml <nl> / nb - configuration . <nl>
ppp b / . gitignore <nl> profile <nl>
ppp b / . gitignore <nl> profile <nl> * . iws <nl> * . ipr <nl> * updated french translation <nl> . iml <nl> nbactions . xml <nl> / nb - configuration . xml
====NEW EXAMPLE====
ppp b / . travis . yml <nl> jdk : <nl>
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk7
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk7 <nl>
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk7 <nl> env
ppp b / . travis . yml <nl> jdk : <nl> oraclejdk7 <nl> env :
====NEW EXAMPLE====
ppp b / build . gradle <nl> * limitations under the license . <nl> * / <nl> plugins { <nl> id ' org . jetbrains . intellij ' version " 0 . 0 . 18 " <nl> id " de . undercouch . download " version version " 1 2 " <nl> } <nl>
ppp b / build . gradle <nl> * limitations under the license . <nl>
ppp b / build . gradle <nl> * limitations under the license . <nl> * / <nl> plugins { <nl> id ' org . jetbrains . intellij ' version " 0 . 0 . 18 " <nl> id " de . undercouch . download " version version " 1 2 " <nl> } } <nl>
ppp b / build . gradle <nl> * limitations under the license . <nl> * / <nl> plugins { <nl>
ppp b / build . gradle <nl> * limitations under the license . <nl> * / <nl> plugins { <nl> id ' org . jetbrains . intellij ' version " 0 . 0 . 18 " <nl> id " de . undercouch . download " version version " 1 2 " <nl> <nl>
====NEW EXAMPLE====
ppp b / . gitignore <nl> opentripplanner - webapp / src / main / webapp / js / otp - min . js <nl> * . ipr <nl> * * . . iml <nl> * . iws iws <nl>
ppp b / . gitignore <nl> opentripplanner - webapp / src / main / webapp / js / otp - min . js <nl> * . ipr <nl> * * . . iml <nl> * . iws <nl>
ppp b / . gitignore <nl> opentripplanner - webapp / src / main / webapp / js / otp - min . js <nl> * . ipr <nl> * * . . iml <nl> * . iws iws <nl> <nl>
ppp b / . gitignore <nl> opentripplanner - webapp / src / main / webapp / js / otp - min . js <nl> * . ipr <nl> * * . . iml <nl> * . . <nl>
ppp b / . gitignore <nl> opentripplanner - webapp / src / main / webapp / js / otp - min . js <nl> * . ipr <nl> * * . . iml <nl> * .
====NEW EXAMPLE====
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = <unk> <nl> mode = push <nl> parent = <unk> <nl> remote = git @ github . com : liferay / com - liferay - marketplace git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / marketplace / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> plugins { <nl>
ppp b / build . gradle <nl> plugins { <nl> id " org . jetbrains . intellij " version " 0 . 1 . 10 " <nl> } <nl> <nl> plugin : : ' ) { <nl> @ suppresswarnings ( ) { <nl> } <nl> apply plugin : ' kotlin ' <nl> repositories { <nl> mavencentral ( ) ) <nl> } <nl> sourcesets { <nl>
ppp b / build . gradle <nl> plugins { <nl> id " org . jetbrains . intellij " version " 0 . 1 . 10 " <nl> } <nl> <nl> plugin : : ' ) { <nl> @ suppresswarnings ( ) { <nl> } <nl> apply plugin : ' kotlin ' <nl> repositories { <nl> mavencentral ( ) ) <nl> } <nl>
ppp b / build . gradle <nl> plugins { <nl> id " org . jetbrains . intellij " version " 0 . 1 . 10 " <nl> } <nl> <nl> plugin : : ' ) { <nl> @ suppresswarnings ( ) { <nl> } <nl> apply plugin : ' kotlin ' <nl> repositories { <nl> mavencentral ( ) ) <nl> } <nl> { <nl>
ppp b / build . gradle <nl> plugins { <nl> id " org . jetbrains . intellij " version " 0 . 1 . 10 " <nl> } <nl> <nl> plugin : : ' ) { <nl> @ suppresswarnings ( ) { <nl> } <nl> apply plugin : ' kotlin ' <nl> repositories { <nl> mavencentral ( ) <nl> } <nl>
====NEW EXAMPLE====
ppp b / languagetool - language - modules / ro / src / main / java / org / languagetool / tagging / ro / <unk> . java <nl> public class <unk> extends basetagger { <nl> @ override <nl> public final string <unk> ( ) { <nl> return <unk> ; <nl> } <nl> @ override <nl>
ppp b / languagetool - language - modules / ro / src / main / java / org / languagetool / tagging / ro / <unk> . java <nl> public class <unk> extends basetagger { <nl> @ override <nl> public final string <unk> ( ) { <nl> return <unk> ; <nl> } <nl>
ppp b / languagetool - language - modules / ro / src / main / java / org / languagetool / tagging / ro / <unk> . java <nl> public class <unk> extends basetagger { <nl> @ override <nl> public final string <unk> ( ) { <nl> return <unk> ; <nl> } <nl> @ override
ppp b / languagetool - language - modules / ro / src / main / java / org / languagetool / tagging / ro / <unk> . java <nl> public class <unk> extends basetagger { <nl> @ override <nl> public final string <unk> ( ) { <nl> return <unk> ; <nl> } <nl> @ override <nl> <nl>
ppp b / languagetool - language - modules / ro / src / main / java / org / languagetool / tagging / ro / <unk> . java <nl> public class <unk> extends basetagger { <nl> @ override <nl> public final string <unk> ( ) { <nl> return <unk> ; <nl> } <nl> } <nl>
====NEW EXAMPLE====
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = b41751f571f7ddf96c53d8853a3e9d0022d73449 <nl> mode = push <nl> parent = 1743e96912e0d37b73eeb8ab3954057fac2fd027 <nl> remote = git @ github . com : liferay / com - liferay - asset . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / web - experience / asset / . gitrepo <nl> <nl>
====NEW EXAMPLE====
ppp b / java / org / apache / catalina / security / securityclassload . java <nl> public final class securityclassload { <nl> loader . loadclass <nl> ( basepackage + <nl>
ppp b / java / org / apache / catalina / security / securityclassload . java <nl> public final class securityclassload { <nl> loader . loadclass <nl> ( basepackage + <nl> " loader . <unk>
ppp b / java / org / apache / catalina / security / securityclassload . java <nl> public final class securityclassload { <nl> loader . loadclass <nl> ( basepackage basepackage <nl>
ppp b / java / org / apache / catalina / security / securityclassload . java <nl> public final class securityclassload { <nl> loader . loadclass <nl> ( basepackage + <nl> " loader .
ppp b / java / org / apache / catalina / security / securityclassload . java <nl> public final class securityclassload { <nl> loader . loadclass <nl> ( basepackage + <nl> " loader . <unk> $
====NEW EXAMPLE====
ppp b / docs / command / query . soy <nl> expr : : = word <nl> | expr + expr <nl>
ppp b / docs / command / query . soy <nl> expr : : = word <nl>
ppp b / docs / command / query . soy <nl>
ppp
ppp b / docs / command / query . soy <nl> expr : : = word <nl> | expr + expr <nl> | expr except expr <nl> | expr - expr <nl> | deps ( expr ) <nl> \ no newline at end of file <nl> | screensize | screensize | smallestscreensize ( ) ) <nl> | deps ( expr , depth ) <nl> | filter ( word , expr ) <nl>
====NEW EXAMPLE====
ppp b / sample / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 2 " <nl> defaultconfig { <nl> applicationid " com . bilibili . magicasakurademo " <nl>
ppp b / sample / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 2 " <nl> defaultconfig { <nl> applicationid " com . bilibili . magicasakurademo <nl>
ppp b / sample / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 2 " <nl> defaultconfig { <nl> applicationid " com . bilibili . magicasakurademo magicasakurademo <nl>
ppp b / sample / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 2 " <nl> defaultconfig { <nl> applicationid " com . bilibili . magicasakurademo " " <nl>
ppp b / sample / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compilesdkversion 24 <nl> buildtoolsversion " 24 . 0 . 2 " <nl> defaultconfig { <nl> applicationid " com . bilibili . magicasakurademo "
====NEW EXAMPLE====
ppp b / apps / actor - ios / actorclient / appdelegate . swift <nl>
ppp b / apps / actor - ios / actorclient / appdelegate . swift <nl> import foundation <nl>
ppp b / apps / actor - ios / actorclient / appdelegate . swift <nl> import foundation <nl> func applicationdidenterbackground ( application : uiapplication ) { <nl> msg . <unk> ( ) ; <nl> } else if ( ) { <nl> msg . <unk> ( ) ; <nl> } <nl> / / mark : - <nl>
ppp b / apps / actor - ios / actorclient / appdelegate . swift <nl> import foundation <nl> func applicationdidenterbackground ( application : uiapplication ) { <nl> msg . <unk> ( ) ; <nl> } else if ( ) { <nl> msg . <unk> ( ) ; <nl> } <nl> / / mark : -
ppp b / apps / actor - ios / actorclient / appdelegate . swift <nl> import foundation <nl> func applicationdidenterbackground ( application : uiapplication ) { <nl> msg . <unk> ( ) ; <nl> } else if ( ) { <nl> msg . <unk> ( ) ; <nl> } <nl> / / mark : <nl>
====NEW EXAMPLE====
ppp b / dexter / src / main / java / com / karumi / dexter / dexterinstance . java <nl> final class dexterinstance { <nl> private final atomicboolean rationaleaccepted ; <nl> private activity activity ; <nl> private multiplepermissionslistener listener = <unk> ; <nl> dexterinstance ( context context , androidpermissionservice androidpermissionservice , <nl> intentprovider intentprovider ) { <nl>
ppp b / dexter / src / main / java / com / karumi / dexter / dexterinstance . java <nl> final class dexterinstance { <nl> private final atomicboolean rationaleaccepted ; <nl> private activity activity ; <nl> private multiplepermissionslistener listener = <unk> ; <nl> dexterinstance ( context context , androidpermissionservice androidpermissionservice , <nl> intentprovider intentprovider ) <nl>
ppp b / dexter / src / main / java / com / karumi / dexter / dexterinstance . java <nl> final class dexterinstance { <nl> private final atomicboolean rationaleaccepted ; <nl> private activity activity ; <nl> private multiplepermissionslistener listener = <unk> ; <nl> dexterinstance ( context context , androidpermissionservice androidpermissionservice , <nl>
ppp b / dexter / src / main / java / com / karumi / dexter / dexterinstance . java <nl> final class dexterinstance { <nl> private final atomicboolean rationaleaccepted ; <nl> private activity activity ; <nl> private multiplepermissionslistener listener = <unk> ; <nl> dexterinstance ( context context , androidpermissionservice androidpermissionservice , <nl> intentprovider intentprovider ) ) <nl>
ppp b / dexter / src / main / java / com / karumi / dexter / dexterinstance . java <nl> final class dexterinstance { <nl> private final atomicboolean rationaleaccepted ; <nl> private activity activity ; <nl> private multiplepermissionslistener listener = <unk> ; <nl> dexterinstance ( context context , androidpermissionservice androidpermissionservice , <nl> intentprovider intentprovider { <nl>
====NEW EXAMPLE====
ppp b / pom . xml <nl> < groupid > com . jakewharton < / groupid > <nl> < artifactid > android - actionbarsherlock < / artifactid > <nl> < version > 2 . 1 . 1 < / version > <nl> < name > actionbarsherlock < / name > <nl> < packaging > jar < / packaging > <nl>
ppp b / pom . xml <nl> < groupid > com . jakewharton < / groupid > <nl> < artifactid > android - actionbarsherlock < / artifactid > <nl> < version > 2 . 1 . 1 < / version > <nl> < name > actionbarsherlock < / name > <nl> < packaging > jar < / > <nl>
ppp b / pom . xml <nl> < groupid > com . jakewharton < / groupid > <nl> < artifactid > android - actionbarsherlock < / artifactid > <nl> < version > 2 . 1 . 1 < / version > <nl> < name > actionbarsherlock < / name > <nl> < packaging > jar < / packaging <nl>
ppp b / pom . xml <nl> < groupid > com . jakewharton < / groupid > <nl> < artifactid > android - actionbarsherlock < / artifactid > <nl> < version > 2 . 1 . 1 < / version > <nl> < name > actionbarsherlock < / name > <nl> < packaging > jar < / packaging > <nl> > <nl>
ppp b / pom . xml <nl> < groupid > com . jakewharton < / groupid > <nl> < artifactid > android - actionbarsherlock < / artifactid > <nl> < version > 2 . 1 . 1 < / version > <nl> < name > actionbarsherlock < / name > <nl> < packaging > jar < / packaging > > <nl>
====NEW EXAMPLE====
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> <unk> ( ) ; <nl> switch ( ) ; <nl> switch ( keycode ) { <nl> case keyevent . <unk> : <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> <unk> ( ) ; <nl> switch ( ) ; <nl> switch ( keycode ) { <nl> case keyevent . <unk> : <nl> <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> <unk> ( ) ; <nl> switch ( ) ; <nl> switch ( keycode ) { <nl> case keyevent . <unk> :
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> <unk> ( ) ; <nl> switch ( ) ; <nl> switch ( keycode ) { <nl>
ppp b / core / java / android / widget / textview . java <nl> public class textview extends view implements viewtreeobserver . onpredrawlistener <nl> } <nl> <unk> ( ) ; <nl> switch ( ) ; <nl> switch ( keycode ) { <nl> case keyevent . <unk> <nl>
====NEW EXAMPLE====
ppp b / java / testframework / src / com / intellij / debugger / <unk> . java <nl> public abstract class <unk> extends <unk> <nl> return <unk> ; <nl> } <nl> private static class <unk> implements <unk> { <nl> @ override <nl> @ notnull <nl> public module [ ] <unk> ( ) { <nl>
ppp b / java / testframework / src / com / intellij / debugger / <unk> . java <nl> public abstract class <unk> extends <unk> <nl> return <unk> ; <nl> } <nl> private static class <unk> implements <unk> { <nl> @ override <nl> @ notnull <nl> public module [ ] <unk> ( ) <nl>
ppp b / java / testframework / src / com / intellij / debugger / <unk> . java <nl> public abstract class <unk> extends <unk> <nl> return <unk> ; <nl> } <nl> private static class <unk> implements <unk> { <nl> @ override <nl> @ notnull <nl> public module [ ] <unk> ( ) ) <nl>
ppp b / java / testframework / src / com / intellij / debugger / <unk> . java <nl> public abstract class <unk> extends <unk> <nl> return <unk> ; <nl> } <nl> private static class <unk> implements <unk> { <nl> @ override <nl> @ notnull <nl> public module [ ] <unk> ( ) ; <nl>
ppp b / java / testframework / src / com / intellij / debugger / <unk> . java <nl> public abstract class <unk> extends <unk> <nl> return <unk> ; <nl> } <nl> private static class <unk> implements <unk> { <nl> @ override <nl> @ notnull <nl> public module [ ] <unk> ( ) { <nl> <nl>
====NEW EXAMPLE====
ppp b / src / com / facebook / buck / java / javalibrarydescription . java <nl> public class javalibrarydescription implements description < javalibrarydescriptio <nl>
ppp b / src / com / facebook / buck / java / javalibrarydescription . java <nl> public class javalibrarydescription implements description < javalibrarydescriptio <nl> return flavor . equals ( flavor . default ) | | flavor . equals ( <unk> . <unk> ) ; <nl> } <nl> public arg ( arg <unk> ( ) { <nl> return new arg ( ) ; <nl> } <nl>
ppp b / src / com / facebook / buck / java / javalibrarydescription . java <nl>
ppp b / src / com / facebook / buck / java / javalibrarydescription . <nl>
ppp b / src / com / facebook / buck / java / javalibrarydescription . java <nl> public class javalibrarydescription implements description < <nl>
====NEW EXAMPLE====
ppp b / build . gradle <nl> ext { <nl> / / support and build tools version <nl> <unk> = 14 <nl> <unk> = 24 <nl> buildtools = " 23 . 0 . 3 " <nl> <unk> = " 24 . 2 . 1 " <nl> / / support libraries dependencies <nl>
ppp b / build . gradle <nl> ext { <nl> / / support and build tools version <nl> <unk> = 14 <nl> <unk> = 24 <nl> buildtools = " 23 . 0 . 3 " <nl> <unk> = " 24 . 2 . 1 " <nl> / / support libraries dependencies dependencies <nl>
ppp b / build . gradle <nl> ext { <nl> / / support and build tools version <nl> <unk> = 14 <nl> <unk> = 24 <nl> buildtools = " 23 . 0 . 3 " <nl> <unk> = " 24 . 2 . 1 " <nl> / / support libraries libraries <nl>
ppp b / build . gradle <nl> ext { <nl> / / support and build tools version <nl> <unk> = 14 <nl> <unk> = 24 <nl> buildtools = " 23 . 0 . 3 " <nl> <unk> = " 24 . 2 . 1 " <nl> / / support libraries <nl>
ppp b / build . gradle <nl> ext { <nl> / / support and build tools version <nl> <unk> = 14 <nl> <unk> = 24 <nl> buildtools = " 23 . 0 . 3 " <nl> <unk> = " 24 . 2 . 1 " <nl>
====NEW EXAMPLE====
ppp b / . hgignore <nl> lib / <unk> . jar <nl> derby . log <nl> nbproject / genfiles . properties <nl> properties <nl>
ppp b / . hgignore <nl> lib / <unk> . jar <nl> derby . log <nl> nbproject / genfiles . properties <nl> glassfish <nl>
ppp b / . hgignore <nl> lib / <unk> . jar <nl> derby . log <nl> nbproject / genfiles . properties <nl> . <nl>
ppp b / . hgignore <nl> lib / <unk> . jar <nl> derby . log <nl> nbproject / genfiles . properties <nl> * <nl>
ppp b / . hgignore <nl> lib / <unk> . jar <nl> derby . log <nl> nbproject / genfiles . properties <nl> genfiles <nl>
====NEW EXAMPLE====
ppp b / wordpress / build . gradle <nl> dependencies { <nl> <unk> ' com . <unk> : <unk> - rest : 1 . 0 . 0 ' <nl> <unk> project ( path : ' : libs : graphview : wordpressgraphview ' ) <nl> <unk> ' org . wordpress : graphview : 3 . 2 . 1 ' <nl> } <nl>
ppp b / wordpress / build . gradle <nl> dependencies { <nl> <unk> ' com . <unk> : <unk> - rest : 1 . 0 . 0 ' <nl> <unk> project ( path : ' : libs : graphview : wordpressgraphview ' ) <nl> <unk> ' org . wordpress : graphview : 3 . 2 . 1 1 <nl> } <nl>
ppp b / wordpress / build . gradle <nl> dependencies { <nl> <unk> ' com . <unk> : <unk> - rest : 1 . 0 . 0 ' <nl> <unk> project ( path : ' : libs : graphview : wordpressgraphview ' ) <nl> <unk> ' org . wordpress : graphview : 3 . 2 . 1 . <nl> } <nl>
ppp b / wordpress / build . gradle <nl> dependencies { <nl> <unk> ' com . <unk> : <unk> - rest : 1 . 0 . 0 ' <nl> <unk> project ( path : ' : libs : graphview : wordpressgraphview ' ) <nl> <unk> ' org . wordpress : graphview : 3 . 2 . 1 ' <nl> } } <nl>
ppp b / wordpress / build . gradle <nl> dependencies { <nl> <unk> ' com . <unk> : <unk> - rest : 1 . 0 . 0 ' <nl> <unk> project ( path : ' : libs : graphview : wordpressgraphview ' ) <nl> <unk> ' org . wordpress : graphview : 3 . 2 . 1 ' <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1204 : port backtype . clj <nl> * storm - * storm - storm - 1204 : logviewer should graceful report page - not - found instead of 500 for topo - id etc * * storm - 831 : add bugtracker and central logging url to ui <nl> * storm - 1208 : : npe seen when aggregating bolt streams <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1204 : port backtype . clj <nl> * storm - * storm - storm - 1204 : logviewer should graceful report page - not - found instead of 500 for topo - id etc * * storm - 831 : add bugtracker and central logging url to ui <nl> * storm - 1208 : : npe seen when aggregating bolt stats stats <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1204 : port backtype . clj <nl> * storm - * storm - storm - 1204 : logviewer should graceful report page - not - found instead of 500 for topo - id etc * * storm - 831 : add bugtracker and central logging url to ui <nl> * storm - 1208 : : npe seen when aggregating bolt stats <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - 1204 : port backtype . clj <nl> * storm - * storm - storm - 1204 : logviewer should graceful report page - not - found instead of 500 for topo - id etc * * storm - 831 : add bugtracker and central logging url to ui <nl> * storm - 1208 : : npe seen when aggregating bolt <nl>
====NEW EXAMPLE====
ppp b / portal - impl / src / com / liferay / portal / cluster / clusterexecutorimpl . java <nl> public class clusterexecutorimpl <nl> if ( ! <unk> . <unk> ( ) & & <unk> & & <nl> addresses . remove ( <unk> ( ) ) ) { <nl> clusternoderesponse clusternoderesponse = <unk> ( <nl> <unk> . <unk> ( ) ) ; <nl>
ppp b / portal - impl / src / com / liferay / portal / cluster / clusterexecutorimpl . java <nl> public class clusterexecutorimpl <nl> if ( ! <unk> . <unk> ( ) & & <unk> & & <nl> addresses . remove ( <unk> ( ) ) ) { <nl> clusternoderesponse clusternoderesponse = <unk> ( <nl> <unk> . <unk> ( ) ; <nl>
ppp b / portal - impl / src / com / liferay / portal / cluster / clusterexecutorimpl . java <nl> public class clusterexecutorimpl <nl> if ( ! <unk> . <unk> ( ) & & <unk> & & <nl> addresses . remove ( <unk> ( ) ) ) { <nl> clusternoderesponse clusternoderesponse = <unk> ( <nl> <unk> . <unk> ( ) ) ) ; <nl>
ppp b / portal - impl / src / com / liferay / portal / cluster / clusterexecutorimpl . java <nl> public class clusterexecutorimpl <nl> if ( ! <unk> . <unk> ( ) & & <unk> & & <nl> addresses . remove ( <unk> ( ) ) ) { <nl> clusternoderesponse clusternoderesponse = <unk> ( <nl> <unk> . <unk> ( ) ) ; <nl> ; <nl>
ppp b / portal - impl / src / com / liferay / portal / cluster / clusterexecutorimpl . java <nl> public class clusterexecutorimpl <nl> if ( ! <unk> . <unk> ( ) & & <unk> & & <nl> addresses . remove ( <unk> ( ) ) ) { <nl> clusternoderesponse clusternoderesponse = <unk> ( <nl> <unk> . <unk> ( ) ) <nl>
====NEW EXAMPLE====
ppp b / modules / apps / foundation / hello - world / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl>
ppp b / modules / apps / foundation / hello - world / . gitrepo <nl> ; <nl> [ subrepo ] <nl> cmdver = liferay <nl> commit = d30a68701cf04498ffba51da10bba4b41534034f <nl> mode = push <nl> parent = f5e5b66b9d93153782c4f95c457cd9a82ed47116 <nl> remote = git @ github . com : liferay / com - liferay - hello - world . git <nl> \ no newline at end of file <nl>
ppp b / modules / apps / foundation / hello - world / . gitrepo <nl> ; <nl> [ subrepo ] <nl>
ppp b / modules / apps / foundation / hello - world / . gitrepo <nl>
ppp b / modules / apps / foundation / hello - world / . gitrepo <nl> ; <nl>
====NEW EXAMPLE====
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> : supervisor v2 <nl> * storm - : use storm storm . zookeeper . connection . timeout in storm - kafka <unk> when <unk> <nl> * storm <unk> <unk> : topology . message . timeout . secs should allow allow for or < = 0 <nl> * storm <unk> <unk> : add cli to get the last storm error from the topology <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> : supervisor v2 <nl> * storm - : use storm storm . zookeeper . connection . timeout in storm - kafka <unk> when <unk> <nl> * storm <unk> <unk> : topology . message . timeout . secs should allow allow for or < = 0 <nl> * storm <unk> <unk> : add cli to get the last storm error from the topology topology <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> : supervisor v2 <nl> * storm - : use storm storm . zookeeper . connection . timeout in storm - kafka <unk> when <unk> <nl> * storm <unk> <unk> : topology . message . timeout . secs should allow allow for or < = 0 <nl> * storm <unk> <unk> : add cli to get the last storm error from the <nl>
ppp b / changelog . md <nl> # # 0 . 11 . 0 <nl> * storm - <unk> : supervisor v2 <nl> * storm - : use storm storm . zookeeper . connection . timeout in storm - kafka <unk> when <unk> <nl> * storm <unk> <unk> : topology . message . timeout . secs should allow allow for or < = 0 <nl> * storm <unk> <unk> : add cli to get the last storm error from the the <nl>
====NEW EXAMPLE====
ppp b / python / helpers / pydev / pydevd . py <nl> dont_trace = { <nl>
ppp b / python / helpers / pydev / pydevd . py <nl>
ppp b / python / helpers / pydev / pydevd . py <nl> dont_trace = <nl>
ppp b / python / helpers / pydev / pydevd . py <nl> dont_trace = {
ppp b / python / helpers / pydev / pydevd . <nl>
====NEW EXAMPLE====
ppp b
ppp b / . cvsignore <nl> classes <nl> \ no newline at
ppp b / . cvsignore <nl> classes <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
ppp b / . cvsignore <nl> classes / <nl> \ no newline at end of file <nl> \ no newline at end of file <nl>
